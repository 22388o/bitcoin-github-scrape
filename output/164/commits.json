[
  {
    "sha": "e9757210f3e9932b620a90ebf13f841737356fdd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplOTc1NzIxMGYzZTk5MzJiNjIwYTkwZWJmMTNmODQxNzM3MzU2ZmRk",
    "commit": {
      "author": {
        "name": "genjix",
        "email": "genjix@l.(none)",
        "date": "2011-03-06T23:38:13Z"
      },
      "committer": {
        "name": "genjix",
        "email": "genjix@l.(none)",
        "date": "2011-03-06T23:38:13Z"
      },
      "message": "intelligent run script which selects correct architecture.\nShould be placed in the top level dir during release.",
      "tree": {
        "sha": "a479fcaea85d6846b41ba61e414a03a025432466",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a479fcaea85d6846b41ba61e414a03a025432466"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e9757210f3e9932b620a90ebf13f841737356fdd",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e9757210f3e9932b620a90ebf13f841737356fdd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e9757210f3e9932b620a90ebf13f841737356fdd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e9757210f3e9932b620a90ebf13f841737356fdd/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "b104df742d1acfcccb35e35c5427ef221296db73",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b104df742d1acfcccb35e35c5427ef221296db73",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b104df742d1acfcccb35e35c5427ef221296db73"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 13,
      "deletions": 0
    },
    "files": [
      {
        "sha": "f34f9dd86fa5647fafc39d805d5ede3f4778beea",
        "filename": "scripts/bitcoin.sh",
        "status": "added",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e9757210f3e9932b620a90ebf13f841737356fdd/scripts/bitcoin.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e9757210f3e9932b620a90ebf13f841737356fdd/scripts/bitcoin.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/scripts/bitcoin.sh?ref=e9757210f3e9932b620a90ebf13f841737356fdd",
        "patch": "@@ -0,0 +1,13 @@\n+#!/bin/bash\n+# Intelligently run the correct version of Bitcoin\n+echo \"Starting Bitcoin...\"\n+echo \"This may take a while...\"\n+MACHINE_TYPE=`uname -m`\n+WORKING_DIR=`dirname $0`\n+if [ ${MACHINE_TYPE} == 'x86_64' ]; then\n+  # run 64-bit bitcoin\n+  $WORKING_DIR/bin/64/bitcoin\n+else\n+  # run 32-bit bitcoin\n+  $WORKING_DIR/bin/32/bitcoin\n+fi"
      }
    ]
  },
  {
    "sha": "2057a959ded9a296d356b133483ab69779badd84",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyMDU3YTk1OWRlZDlhMjk2ZDM1NmIxMzM0ODNhYjY5Nzc5YmFkZDg0",
    "commit": {
      "author": {
        "name": "genjix",
        "email": "genjix@l.(none)",
        "date": "2011-03-08T05:42:04Z"
      },
      "committer": {
        "name": "genjix",
        "email": "genjix@l.(none)",
        "date": "2011-03-08T05:42:04Z"
      },
      "message": "Added argument passing.",
      "tree": {
        "sha": "fe57a188fd06fb0ed04ccba5df77c86b72c27ad9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fe57a188fd06fb0ed04ccba5df77c86b72c27ad9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2057a959ded9a296d356b133483ab69779badd84",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2057a959ded9a296d356b133483ab69779badd84",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2057a959ded9a296d356b133483ab69779badd84",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2057a959ded9a296d356b133483ab69779badd84/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "e9757210f3e9932b620a90ebf13f841737356fdd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e9757210f3e9932b620a90ebf13f841737356fdd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e9757210f3e9932b620a90ebf13f841737356fdd"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "9353aa131ab6893b20f7227e53c2488f99a4d8aa",
        "filename": "scripts/bitcoin.sh",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2057a959ded9a296d356b133483ab69779badd84/scripts/bitcoin.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2057a959ded9a296d356b133483ab69779badd84/scripts/bitcoin.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/scripts/bitcoin.sh?ref=2057a959ded9a296d356b133483ab69779badd84",
        "patch": "@@ -6,8 +6,8 @@ MACHINE_TYPE=`uname -m`\n WORKING_DIR=`dirname $0`\n if [ ${MACHINE_TYPE} == 'x86_64' ]; then\n   # run 64-bit bitcoin\n-  $WORKING_DIR/bin/64/bitcoin\n+  $WORKING_DIR/bin/64/bitcoin $@\n else\n   # run 32-bit bitcoin\n-  $WORKING_DIR/bin/32/bitcoin\n+  $WORKING_DIR/bin/32/bitcoin $@\n fi"
      }
    ]
  },
  {
    "sha": "131686498e21e2ece74ed36b38430413b7741c60",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxMzE2ODY0OThlMjFlMmVjZTc0ZWQzNmIzODQzMDQxM2I3NzQxYzYw",
    "commit": {
      "author": {
        "name": "genjix",
        "email": "fake@lol.u",
        "date": "2011-03-08T14:28:31Z"
      },
      "committer": {
        "name": "genjix",
        "email": "fake@lol.u",
        "date": "2011-03-08T14:28:31Z"
      },
      "message": "Merge branch 'daemon'",
      "tree": {
        "sha": "f495f6267a097803fa395c61719aba36b153df53",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f495f6267a097803fa395c61719aba36b153df53"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/131686498e21e2ece74ed36b38430413b7741c60",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/131686498e21e2ece74ed36b38430413b7741c60",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/131686498e21e2ece74ed36b38430413b7741c60",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/131686498e21e2ece74ed36b38430413b7741c60/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "2057a959ded9a296d356b133483ab69779badd84",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2057a959ded9a296d356b133483ab69779badd84",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2057a959ded9a296d356b133483ab69779badd84"
      },
      {
        "sha": "e1205e4d15403fdbb9b8d081aa7a9c3190529262",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e1205e4d15403fdbb9b8d081aa7a9c3190529262",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e1205e4d15403fdbb9b8d081aa7a9c3190529262"
      }
    ],
    "stats": {
      "total": 67,
      "additions": 41,
      "deletions": 26
    },
    "files": [
      {
        "sha": "ac2721db63fcd1df1cb57c9e07916a271902e4da",
        "filename": "init.cpp",
        "status": "modified",
        "additions": 39,
        "deletions": 26,
        "changes": 65,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/131686498e21e2ece74ed36b38430413b7741c60/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/131686498e21e2ece74ed36b38430413b7741c60/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/init.cpp?ref=131686498e21e2ece74ed36b38430413b7741c60",
        "patch": "@@ -74,32 +74,11 @@ void HandleSIGTERM(int)\n #ifndef GUI\n int main(int argc, char* argv[])\n {\n-    for (int i = 1; i < argc; i++)\n-        if (!IsSwitchChar(argv[i][0]))\n-            fCommandLine = true;\n-    fDaemon = !fCommandLine;\n-\n-#ifdef __WXGTK__\n-    if (!fCommandLine)\n-    {\n-        // Daemonize\n-        pid_t pid = fork();\n-        if (pid < 0)\n-        {\n-            fprintf(stderr, \"Error: fork() returned %d errno %d\\n\", pid, errno);\n-            return 1;\n-        }\n-        if (pid > 0)\n-            pthread_exit((void*)0);\n-    }\n-#endif\n-\n-    if (!AppInit(argc, argv))\n-        return 1;\n+    bool fRet = false;\n+    fRet = AppInit(argc, argv);\n \n-    while (!fShutdown)\n-        Sleep(1000000);\n-    return 0;\n+    if (fRet && fDaemon)\n+        pthread_exit((void*)0);\n }\n #endif\n \n@@ -177,8 +156,10 @@ bool AppInit2(int argc, char* argv[])\n             \"  -connect=<ip>    \\t\\t  \" + _(\"Connect only to the specified node\\n\") +\n             \"  -nolisten        \\t  \"   + _(\"Don't accept connections from outside\\n\") +\n             \"  -paytxfee=<amt>  \\t  \"   + _(\"Fee per KB to add to transactions you send\\n\") +\n+#ifdef GUI\n             \"  -server          \\t\\t  \" + _(\"Accept command line and JSON-RPC commands\\n\") +\n             \"  -daemon          \\t\\t  \" + _(\"Run in the background as a daemon and accept commands\\n\") +\n+#endif\n             \"  -testnet         \\t\\t  \" + _(\"Use the test network\\n\") +\n             \"  -rpcuser=<user>  \\t  \"   + _(\"Username for JSON-RPC connections\\n\") +\n             \"  -rpcpassword=<pw>\\t  \"   + _(\"Password for JSON-RPC connections\\n\") +\n@@ -213,19 +194,51 @@ bool AppInit2(int argc, char* argv[])\n \n     fDebug = GetBoolArg(\"-debug\");\n \n+    fDaemon = GetBoolArg(\"-daemon\");\n+\n+    if (fDaemon)\n+        fServer = true;\n+    else\n+        fServer = GetBoolArg(\"-server\");\n+\n+    /* force fServer and fDaemon when running without GUI */\n+#ifndef GUI\n+    fServer = true;\n+    fDaemon = true;\n+#endif\n+\n     fPrintToConsole = GetBoolArg(\"-printtoconsole\");\n     fPrintToDebugger = GetBoolArg(\"-printtodebugger\");\n \n     fTestNet = GetBoolArg(\"-testnet\");\n     \n     fNoListen = GetBoolArg(\"-nolisten\");\n \n+    for (int i = 1; i < argc; i++)\n+        if (!IsSwitchChar(argv[i][0]))\n+            fCommandLine = true;\n+\n     if (fCommandLine)\n     {\n         int ret = CommandLineRPC(argc, argv);\n         exit(ret);\n     }\n \n+#ifndef GUI\n+    if (fDaemon)\n+    {\n+        // Daemonize\n+        pid_t pid = fork();\n+        if (pid < 0)\n+        {\n+            fprintf(stderr, \"Error: fork() returned %d errno %d\\n\", pid, errno);\n+            return false;\n+        }\n+        if (pid > 0)\n+            return true;\n+    }\n+#endif\n+\n     if (!fDebug && !pszSetDataDir[0])\n         ShrinkDebugFile();\n     printf(\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\");\n@@ -443,7 +456,7 @@ bool AppInit2(int argc, char* argv[])\n     if (!CreateThread(StartNode, NULL))\n         wxMessageBox(\"Error: CreateThread(StartNode) failed\", \"Bitcoin\");\n \n-    if (GetBoolArg(\"-server\") || fDaemon)\n+    if (fServer)\n         CreateThread(ThreadRPCServer, NULL);\n \n #if defined(__WXMSW__) && defined(GUI)"
      },
      {
        "sha": "124174bd9da84184602d603836892d7e2e402b18",
        "filename": "util.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/131686498e21e2ece74ed36b38430413b7741c60/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/131686498e21e2ece74ed36b38430413b7741c60/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/util.cpp?ref=131686498e21e2ece74ed36b38430413b7741c60",
        "patch": "@@ -14,6 +14,7 @@ char pszSetDataDir[MAX_PATH] = \"\";\n bool fRequestShutdown = false;\n bool fShutdown = false;\n bool fDaemon = false;\n+bool fServer = false;\n bool fCommandLine = false;\n string strMiscWarning;\n bool fTestNet = false;"
      },
      {
        "sha": "1b780d552087591fa00595c54b9d093184309785",
        "filename": "util.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/131686498e21e2ece74ed36b38430413b7741c60/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/131686498e21e2ece74ed36b38430413b7741c60/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/util.h?ref=131686498e21e2ece74ed36b38430413b7741c60",
        "patch": "@@ -143,6 +143,7 @@ extern char pszSetDataDir[MAX_PATH];\n extern bool fRequestShutdown;\n extern bool fShutdown;\n extern bool fDaemon;\n+extern bool fServer;\n extern bool fCommandLine;\n extern string strMiscWarning;\n extern bool fTestNet;"
      }
    ]
  },
  {
    "sha": "ebb4779d37ac7af82e7c6671019ed53e552f0d41",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplYmI0Nzc5ZDM3YWM3YWY4MmU3YzY2NzEwMTllZDUzZTU1MmYwZDQx",
    "commit": {
      "author": {
        "name": "genjix",
        "email": "fake@lol.u",
        "date": "2011-03-10T02:00:16Z"
      },
      "committer": {
        "name": "genjix",
        "email": "fake@lol.u",
        "date": "2011-03-10T02:00:16Z"
      },
      "message": "getaddress.php works.",
      "tree": {
        "sha": "fa633dcedbe1e2fbae31dcf57cc30fa55a31b209",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fa633dcedbe1e2fbae31dcf57cc30fa55a31b209"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ebb4779d37ac7af82e7c6671019ed53e552f0d41",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ebb4779d37ac7af82e7c6671019ed53e552f0d41",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ebb4779d37ac7af82e7c6671019ed53e552f0d41",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ebb4779d37ac7af82e7c6671019ed53e552f0d41/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "131686498e21e2ece74ed36b38430413b7741c60",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/131686498e21e2ece74ed36b38430413b7741c60",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/131686498e21e2ece74ed36b38430413b7741c60"
      }
    ],
    "stats": {
      "total": 223,
      "additions": 212,
      "deletions": 11
    },
    "files": [
      {
        "sha": "6199852f76c0240950a3b3cd82c778cd27e38752",
        "filename": "init.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ebb4779d37ac7af82e7c6671019ed53e552f0d41/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ebb4779d37ac7af82e7c6671019ed53e552f0d41/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/init.cpp?ref=ebb4779d37ac7af82e7c6671019ed53e552f0d41",
        "patch": "@@ -9,7 +9,6 @@\n \n \n \n-\n //////////////////////////////////////////////////////////////////////////////\n //\n // Shutdown"
      },
      {
        "sha": "cd31e04ac91b7718cd923705609801cd14f6e9ac",
        "filename": "makefile.unix",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ebb4779d37ac7af82e7c6671019ed53e552f0d41/makefile.unix",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ebb4779d37ac7af82e7c6671019ed53e552f0d41/makefile.unix",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/makefile.unix?ref=ebb4779d37ac7af82e7c6671019ed53e552f0d41",
        "patch": "@@ -21,7 +21,8 @@ LIBS= \\\n  -Wl,-Bdynamic \\\n    -l gthread-2.0 \\\n    -l z \\\n-   -l dl\n+   -l dl \\\n+   -l curl\n \n DEFS=-DNOPCH -DFOURWAYSSE2 -DUSE_SSL\n DEBUGFLAGS=-g -D__WXDEBUG__\n@@ -38,6 +39,7 @@ OBJS= \\\n     obj/main.o \\\n     obj/rpc.o \\\n     obj/init.o \\\n+    obj/resolv.o \\\n     cryptopp/obj/sha.o \\\n     cryptopp/obj/cpu.o\n "
      },
      {
        "sha": "8d4319ac40eb58c6c79f66860865ac9681d6204a",
        "filename": "resolv.cpp",
        "status": "added",
        "additions": 82,
        "deletions": 0,
        "changes": 82,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ebb4779d37ac7af82e7c6671019ed53e552f0d41/resolv.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ebb4779d37ac7af82e7c6671019ed53e552f0d41/resolv.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/resolv.cpp?ref=ebb4779d37ac7af82e7c6671019ed53e552f0d41",
        "patch": "@@ -0,0 +1,82 @@\n+#include \"resolv.h\"\n+\n+static int writer(char *pData, size_t nSize, size_t nNmemb, std::string *pBuffer)  \n+{  \n+  int nResult = 0;  \n+  if (pBuffer != NULL)  \n+  {  \n+    pBuffer->append(pData, nSize * nNmemb);  \n+    // How much did we write?  \n+    nResult = nSize * nNmemb;  \n+  }  \n+  return nResult;  \n+}\n+\n+NameResolutionService::NameResolutionService()\n+{\n+    curl = curl_easy_init();\n+    curl_easy_setopt(curl, CURLOPT_ERRORBUFFER, pErrorBuffer);  \n+    // fail when server sends >= 404\n+    curl_easy_setopt(curl, CURLOPT_FAILONERROR, 1);  \n+    curl_easy_setopt(curl, CURLOPT_HEADER, 0);  \n+    curl_easy_setopt(curl, CURLOPT_FOLLOWLOCATION, 0);  \n+    curl_easy_setopt(curl, CURLOPT_WRITEFUNCTION, writer);  \n+    curl_easy_setopt(curl, CURLOPT_WRITEDATA, &strBuffer);  \n+    pErrorBuffer[0] = '\\0';\n+}\n+NameResolutionService::~NameResolutionService()\n+{\n+    curl_easy_cleanup(curl);\n+}\n+\n+void NameResolutionService::ExplodeRef(const string& strRef, string& strNickname, string& strDomain)\n+{\n+    // split address at @ furthrest to the right\n+    size_t nPosAtsym = strRef.rfind('@');\n+    strNickname = strRef.substr(0, nPosAtsym);\n+    strDomain = strRef.substr(nPosAtsym + 1, strRef.size());\n+}\n+bool NameResolutionService::Perform()\n+{\n+    CURLcode result = curl_easy_perform(curl);  \n+    return (result != CURLE_OK);\n+}\n+\n+#include <iostream>\n+string NameResolutionService::FetchAddress(const string& strRef, string& strAddy)\n+{\n+    if (!curl)\n+        return pErrorBuffer;\n+    string strNickname, strDomain;\n+    ExplodeRef(strRef, strNickname, strDomain);\n+    // url encode the nickname for get request\n+    const char* pszEncodedNick = curl_easy_escape(curl, strNickname.c_str(), strNickname.size());\n+    if (!pszEncodedNick)\n+        return \"Unable to encode nickname.\";\n+    // construct url for GET request\n+    string strRequestUrl = strDomain + \"/getaddress.php?nickname=\" + pszEncodedNick;\n+    curl_easy_setopt(curl, CURLOPT_URL, strRequestUrl.c_str());  \n+    if (Perform()) {\n+        return pErrorBuffer;\n+    }\n+    strAddy = strBuffer;\n+    return \"\";  // no error\n+}\n+string NameResolutionService::PushAddress(const string& strRef, const string& strPassword, const string& strNewaddy, string& strStatus)\n+{\n+    if (!curl)\n+        return pErrorBuffer;\n+    string strNickname, strDomain;\n+    ExplodeRef(strRef, strNickname, strDomain);\n+    std::cout << \"PushAddress(\" << strNickname << \",\" << strDomain << \",\" << strPassword << \",\" << strNewaddy << \")\\n\";\n+    return \"\";  // no error\n+}\n+string NameResolutionService::ChangePassword(const string& strRef, const string& strPassword, const string& strNewPassword, string& strStatus)\n+{\n+    if (!curl)\n+        return pErrorBuffer;\n+    string strNickname, strDomain;\n+    ExplodeRef(strRef, strNickname, strDomain);\n+    return \"\";  // no error\n+}\n+"
      },
      {
        "sha": "c51f2372b826e069ec9380efaa66c26cd6fcec62",
        "filename": "resolv.h",
        "status": "added",
        "additions": 28,
        "deletions": 0,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ebb4779d37ac7af82e7c6671019ed53e552f0d41/resolv.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ebb4779d37ac7af82e7c6671019ed53e552f0d41/resolv.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/resolv.h?ref=ebb4779d37ac7af82e7c6671019ed53e552f0d41",
        "patch": "@@ -0,0 +1,28 @@\n+#ifndef NOMRESOLV_H__\n+#define NOMRESOLV_H__\n+\n+#include <string>\n+#include \"curl/curl.h\"\n+\n+using std::string;\n+\n+class NameResolutionService\n+{\n+public:\n+    NameResolutionService();\n+    ~NameResolutionService();\n+\n+    string FetchAddress(const string& strRef, string& strAddy);\n+    string PushAddress(const string& strRef, const string& strPassword, const string& strNewaddy, string& strStatus);\n+    string ChangePassword(const string& strRef, const string& strPassword, const string& strNewPassword, string& strStatus);\n+private:\n+    static void ExplodeRef(const string& strRef, string& strNickname, string& strDomain);\n+    bool Perform();\n+\n+    char pErrorBuffer[CURL_ERROR_SIZE];  \n+    string strBuffer;\n+    CURL *curl;\n+};\n+\n+#endif\n+"
      },
      {
        "sha": "8a1d3265c435ba6a40915f771f2dfaa450006589",
        "filename": "rpc.cpp",
        "status": "modified",
        "additions": 99,
        "deletions": 9,
        "changes": 108,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ebb4779d37ac7af82e7c6671019ed53e552f0d41/rpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ebb4779d37ac7af82e7c6671019ed53e552f0d41/rpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/rpc.cpp?ref=ebb4779d37ac7af82e7c6671019ed53e552f0d41",
        "patch": "@@ -21,6 +21,9 @@ typedef boost::asio::ssl::stream<boost::asio::ip::tcp::socket> SSLStream;\n // a certain size around 145MB.  If we need access to json_spirit outside this\n // file, we could use the compiled json_spirit option.\n \n+// name resolution service\n+#include \"resolv.h\"\n+\n using namespace boost::asio;\n using namespace json_spirit;\n \n@@ -456,6 +459,21 @@ Value getaddressesbyaccount(const Array& params, bool fHelp)\n     return ret;\n }\n \n+\n+string DoSendToAddress(const string& strAddress, int64 nAmount)\n+{\n+    // Wallet comments\n+    CWalletTx wtx;\n+    /*if (params.size() > 2 && params[2].type() != null_type && !params[2].get_str().empty())\n+        wtx.mapValue[\"comment\"] = params[2].get_str();\n+    if (params.size() > 3 && params[3].type() != null_type && !params[3].get_str().empty())\n+        wtx.mapValue[\"to\"]      = params[3].get_str(); */\n+    string strError = SendMoneyToBitcoinAddress(strAddress, nAmount, wtx);\n+    if (strError != \"\")\n+        throw JSONRPCError(-4, strError);\n+    return wtx.GetHash().GetHex();\n+}\n+\n Value sendtoaddress(const Array& params, bool fHelp)\n {\n     if (fHelp || params.size() < 2 || params.size() > 4)\n@@ -464,23 +482,91 @@ Value sendtoaddress(const Array& params, bool fHelp)\n             \"<amount> is a real and is rounded to the nearest 0.01\");\n \n     string strAddress = params[0].get_str();\n+    int64 nAmount = AmountFromValue(params[1]);\n+    return DoSendToAddress(strAddress, nAmount);\n+}\n \n-    // Amount\n+Value sendtoname(const Array& params, bool fHelp)\n+{\n+    if (fHelp || params.size() != 2)\n+        throw runtime_error(\n+            \"sendtoname <name@domain> <amount>\\n\"\n+            \"<amount> is a real and is rounded to the nearest 0.01\");\n+\n+    NameResolutionService ns;\n+    string strName = params[0].get_str(), strAddy;\n     int64 nAmount = AmountFromValue(params[1]);\n+    string strError = ns.FetchAddress(strName, strAddy);\n+    if (strError != \"\")\n+        throw JSONRPCError(-4, strError);\n \n-    // Wallet comments\n-    CWalletTx wtx;\n-    if (params.size() > 2 && params[2].type() != null_type && !params[2].get_str().empty())\n-        wtx.mapValue[\"comment\"] = params[2].get_str();\n-    if (params.size() > 3 && params[3].type() != null_type && !params[3].get_str().empty())\n-        wtx.mapValue[\"to\"]      = params[3].get_str();\n+    Value valRequest;\n+    if (!read_string(strAddy, valRequest) || valRequest.type() != obj_type)\n+        throw JSONRPCError(-32700, \"Parse error\");\n+    const Object& request = valRequest.get_obj();\n+    const Value& error  = find_value(request, \"error\");\n+    if (error.type() != null_type)          \n+        throw JSONRPCError(-4, error.get_str());\n+    const Value& address = find_value(request, \"address\");\n+    if (address.type() != str_type)\n+        throw JSONRPCError(-32600, \"Server responded with malformed reply.\");\n+    // @GENJIX this should actually send!\n+    return address.get_str();\n+}\n \n-    string strError = SendMoneyToBitcoinAddress(strAddress, nAmount, wtx);\n+Value setnameaddress(const Array& params, bool fHelp)\n+{\n+    if (fHelp || params.size() < 2 || params.size() > 3)\n+        throw runtime_error(\n+            \"setnameaddress <name@domain> <password> [address]\\n\"\n+            \"Sets an address for your named account.\");\n+\n+    string strName = params[0].get_str(), strPass = params[1].get_str(), strAddy, strStatus;\n+    if (params.size() == 3)\n+        strAddy = params[2].get_str();\n+        // @GENJIX should check address for validity\n+    else\n+        // random address\n+        strAddy = GetAccountAddress(\"\");\n+\n+    NameResolutionService ns;\n+    string strError = ns.PushAddress(strName, strPass, strAddy, strStatus);\n     if (strError != \"\")\n         throw JSONRPCError(-4, strError);\n-    return wtx.GetHash().GetHex();\n+\n+    Value valRequest;\n+    if (!read_string(strStatus, valRequest) || valRequest.type() != obj_type)\n+        throw JSONRPCError(-32700, \"Parse error\");\n+    const Object& request = valRequest.get_obj();\n+    const Value& error  = find_value(request, \"error\");\n+    if (error.type() != null_type)          \n+        throw JSONRPCError(-4, error.get_str());\n+    return strStatus;\n }\n \n+Value setnamepassword(const Array& params, bool fHelp)\n+{\n+    if (fHelp || params.size() < 2 || params.size() > 3)\n+        throw runtime_error(\n+            \"setnamepassword <name@domain> <password> <newpassword>\\n\"\n+            \"Sets the password for your named account.\");\n+\n+    NameResolutionService ns;\n+    string strName = params[0].get_str(), strAddy, strStatus;\n+    int64 nAmount = AmountFromValue(params[1]);\n+    //string strError = ns.ChangePassword(strName, strAddy, strStatus);\n+    //if (strError != \"\")\n+    //    throw JSONRPCError(-4, strError);\n+\n+    Value valRequest;\n+    if (!read_string(strStatus, valRequest) || valRequest.type() != obj_type)\n+        throw JSONRPCError(-32700, \"Parse error\");\n+    const Object& request = valRequest.get_obj();\n+    const Value& error  = find_value(request, \"error\");\n+    if (error.type() != null_type)          \n+        throw JSONRPCError(-4, error.get_str());\n+    return strStatus;\n+}\n \n Value getreceivedbyaddress(const Array& params, bool fHelp)\n {\n@@ -1331,6 +1417,9 @@ pair<string, rpcfn_type> pCallTable[] =\n     make_pair(\"getaddressesbyaccount\", &getaddressesbyaccount),\n     make_pair(\"getaddressesbylabel\",   &getaddressesbyaccount), // deprecated\n     make_pair(\"sendtoaddress\",         &sendtoaddress),\n+    make_pair(\"sendtoname\",            &sendtoname),\n+    make_pair(\"setnameaddress\",        &setnameaddress),\n+    make_pair(\"setnamepassword\",       &setnamepassword),\n     make_pair(\"getamountreceived\",     &getreceivedbyaddress), // deprecated, renamed to getreceivedbyaddress\n     make_pair(\"getallreceived\",        &listreceivedbyaddress), // deprecated, renamed to listreceivedbyaddress\n     make_pair(\"getreceivedbyaddress\",  &getreceivedbyaddress),\n@@ -1976,6 +2065,7 @@ int CommandLineRPC(int argc, char *argv[])\n         if (strMethod == \"setgenerate\"            && n > 0) ConvertTo<bool>(params[0]);\n         if (strMethod == \"setgenerate\"            && n > 1) ConvertTo<boost::int64_t>(params[1]);\n         if (strMethod == \"sendtoaddress\"          && n > 1) ConvertTo<double>(params[1]);\n+        if (strMethod == \"sendtoname\"             && n > 1) ConvertTo<double>(params[1]);\n         if (strMethod == \"getamountreceived\"      && n > 1) ConvertTo<boost::int64_t>(params[1]); // deprecated\n         if (strMethod == \"getreceivedbyaddress\"   && n > 1) ConvertTo<boost::int64_t>(params[1]);\n         if (strMethod == \"getreceivedbyaccount\"   && n > 1) ConvertTo<boost::int64_t>(params[1]);"
      }
    ]
  },
  {
    "sha": "c591a29d7a71c624ddbe436f83881120d5ba9e69",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNTkxYTI5ZDdhNzFjNjI0ZGRiZTQzNmY4Mzg4MTEyMGQ1YmE5ZTY5",
    "commit": {
      "author": {
        "name": "genjix",
        "email": "fake@lol.u",
        "date": "2011-03-10T03:24:31Z"
      },
      "committer": {
        "name": "genjix",
        "email": "fake@lol.u",
        "date": "2011-03-10T03:24:31Z"
      },
      "message": "added server side code.",
      "tree": {
        "sha": "5b1e80d6b0e0447e20b4298fa33829532821df4a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5b1e80d6b0e0447e20b4298fa33829532821df4a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c591a29d7a71c624ddbe436f83881120d5ba9e69",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c591a29d7a71c624ddbe436f83881120d5ba9e69",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c591a29d7a71c624ddbe436f83881120d5ba9e69",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c591a29d7a71c624ddbe436f83881120d5ba9e69/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "ebb4779d37ac7af82e7c6671019ed53e552f0d41",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ebb4779d37ac7af82e7c6671019ed53e552f0d41",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ebb4779d37ac7af82e7c6671019ed53e552f0d41"
      }
    ],
    "stats": {
      "total": 878,
      "additions": 878,
      "deletions": 0
    },
    "files": [
      {
        "sha": "e9855643033bf8c8354c9ce60dc5435f9c7f0676",
        "filename": "contrib/ns/DATABASE",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c591a29d7a71c624ddbe436f83881120d5ba9e69/contrib/ns/DATABASE",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c591a29d7a71c624ddbe436f83881120d5ba9e69/contrib/ns/DATABASE",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/ns/DATABASE?ref=c591a29d7a71c624ddbe436f83881120d5ba9e69",
        "patch": "@@ -0,0 +1 @@\n+CREATE TABLE lookup(nickname VARCHAR(100) NOT NULL, PRIMARY KEY(nickname), passhash VARCHAR(128) NOT NULL, address VARCHAR(44) NOT NULL);"
      },
      {
        "sha": "57127b5917c57b3f9e49b37a4164724d11f9e25b",
        "filename": "contrib/ns/db.php",
        "status": "added",
        "additions": 28,
        "deletions": 0,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c591a29d7a71c624ddbe436f83881120d5ba9e69/contrib/ns/db.php",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c591a29d7a71c624ddbe436f83881120d5ba9e69/contrib/ns/db.php",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/ns/db.php?ref=c591a29d7a71c624ddbe436f83881120d5ba9e69",
        "patch": "@@ -0,0 +1,28 @@\n+<?php\n+# File should contain these lines:\n+#   mysql_connect('localhost', 'login', 'oass') or die(mysql_error());\n+#   mysql_select_db('database_name') or die(mysql_error());\n+require '/var/db.bitnomo.inc';\n+\n+function fail($error)\n+{\n+    die('{\"error\": \"'.$error.'\"}');\n+}\n+function escapestr($str)\n+{\n+    return mysql_real_escape_string($str);\n+}\n+function do_query($query)\n+{\n+    $result = mysql_query($query) or fail(mysql_error());\n+    return $result;\n+}\n+function has_results($result)\n+{\n+    if (mysql_num_rows($result) > 0)\n+        return true;\n+    else\n+        return false;\n+}\n+?>\n+"
      },
      {
        "sha": "793d02ca9774f72c2b30e112b148c2e51256837a",
        "filename": "contrib/ns/getaddress.php",
        "status": "added",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c591a29d7a71c624ddbe436f83881120d5ba9e69/contrib/ns/getaddress.php",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c591a29d7a71c624ddbe436f83881120d5ba9e69/contrib/ns/getaddress.php",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/ns/getaddress.php?ref=c591a29d7a71c624ddbe436f83881120d5ba9e69",
        "patch": "@@ -0,0 +1,23 @@\n+<?php\n+if (!isset($_REQUEST['nickname'])) {\n+    die('{\"error\": \"No nickname received.\"}');\n+}\n+else {\n+    require 'db.php';\n+    $nickname = strtolower(escapestr($_REQUEST['nickname']));\n+\n+    $query = \"SELECT address FROM lookup WHERE nickname='$nickname';\";\n+    $result = do_query($query);\n+    if (has_results($result)) {\n+        $row = mysql_fetch_array($result);\n+        if (!isset($row['address']))\n+            die('{\"error\": \"Internal error.\"}');\n+        $address = $row['address'];\n+        echo '{\"address\": \"'.$address.'\"}';\n+    }\n+    else {\n+        die('{\"error\": \"No such nickname exists.\"}');\n+    }\n+}\n+?>\n+"
      },
      {
        "sha": "6967327cd969bd7c823d8273e0d8cf88c4d7e962",
        "filename": "contrib/ns/openid.php",
        "status": "added",
        "additions": 754,
        "deletions": 0,
        "changes": 754,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c591a29d7a71c624ddbe436f83881120d5ba9e69/contrib/ns/openid.php",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c591a29d7a71c624ddbe436f83881120d5ba9e69/contrib/ns/openid.php",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/ns/openid.php?ref=c591a29d7a71c624ddbe436f83881120d5ba9e69",
        "patch": "@@ -0,0 +1,754 @@\n+<?php\n+/**\n+ * This class provides a simple interface for OpenID (1.1 and 2.0) authentication.\n+ * Supports Yadis discovery.\n+ * The authentication process is stateless/dumb.\n+ *\n+ * Usage:\n+ * Sign-on with OpenID is a two step process:\n+ * Step one is authentication with the provider:\n+ * <code>\n+ * $openid = new LightOpenID;\n+ * $openid->identity = 'ID supplied by user';\n+ * header('Location: ' . $openid->authUrl());\n+ * </code>\n+ * The provider then sends various parameters via GET, one of them is openid_mode.\n+ * Step two is verification:\n+ * <code>\n+ * if ($this->data['openid_mode']) {\n+ *     $openid = new LightOpenID;\n+ *     echo $openid->validate() ? 'Logged in.' : 'Failed';\n+ * }\n+ * </code>\n+ *\n+ * Optionally, you can set $returnUrl and $realm (or $trustRoot, which is an alias).\n+ * The default values for those are:\n+ * $openid->realm     = (!empty($_SERVER['HTTPS']) ? 'https' : 'http') . '://' . $_SERVER['HTTP_HOST'];\n+ * $openid->returnUrl = $openid->realm . $_SERVER['REQUEST_URI'];\n+ * If you don't know their meaning, refer to any openid tutorial, or specification. Or just guess.\n+ *\n+ * AX and SREG extensions are supported.\n+ * To use them, specify $openid->required and/or $openid->optional before calling $openid->authUrl().\n+ * These are arrays, with values being AX schema paths (the 'path' part of the URL).\n+ * For example:\n+ *   $openid->required = array('namePerson/friendly', 'contact/email');\n+ *   $openid->optional = array('namePerson/first');\n+ * If the server supports only SREG or OpenID 1.1, these are automaticaly\n+ * mapped to SREG names, so that user doesn't have to know anything about the server.\n+ *\n+ * To get the values, use $openid->getAttributes().\n+ *\n+ *\n+ * The library requires PHP >= 5.1.2 with curl or http/https stream wrappers enabled.\n+ * @author Mewp\n+ * @copyright Copyright (c) 2010, Mewp\n+ * @license http://www.opensource.org/licenses/mit-license.php MIT\n+ */\n+class LightOpenID\n+{\n+    public $returnUrl\n+         , $required = array()\n+         , $optional = array()\n+         , $verify_peer = null\n+         , $capath = null\n+         , $cainfo = null;\n+    private $identity, $claimed_id;\n+    protected $server, $version, $trustRoot, $aliases, $identifier_select = false\n+            , $ax = false, $sreg = false, $data, $setup_url = null;\n+    static protected $ax_to_sreg = array(\n+        'namePerson/friendly'     => 'nickname',\n+        'contact/email'           => 'email',\n+        'namePerson'              => 'fullname',\n+        'birthDate'               => 'dob',\n+        'person/gender'           => 'gender',\n+        'contact/postalCode/home' => 'postcode',\n+        'contact/country/home'    => 'country',\n+        'pref/language'           => 'language',\n+        'pref/timezone'           => 'timezone',\n+        );\n+\n+    function __construct()\n+    {\n+        $this->trustRoot = (!empty($_SERVER['HTTPS']) ? 'https' : 'http') . '://' . $_SERVER['HTTP_HOST'];\n+        $uri = rtrim(preg_replace('#((?<=\\?)|&)openid\\.[^&]+#', '', $_SERVER['REQUEST_URI']), '?');\n+        $this->returnUrl = $this->trustRoot . $uri;\n+\n+        $this->data = $_POST + $_GET; # OPs may send data as POST or GET.\n+\n+        if(!function_exists('curl_init') && !in_array('https', stream_get_wrappers())) {\n+            throw new ErrorException('You must have either https wrappers or curl enabled.');\n+        }\n+    }\n+\n+    function __set($name, $value)\n+    {\n+        switch ($name) {\n+        case 'identity':\n+            if (strlen($value = trim((String) $value))) {\n+                if (preg_match('#^xri:/*#i', $value, $m)) {\n+                    $value = substr($value, strlen($m[0]));\n+                } elseif (!preg_match('/^(?:[=@+\\$!\\(]|https?:)/i', $value)) {\n+                    $value = \"http://$value\";\n+                }\n+                if (preg_match('#^https?://[^/]+$#i', $value, $m)) {\n+                    $value .= '/';\n+                }\n+            }\n+            $this->$name = $this->claimed_id = $value;\n+            break;\n+        case 'trustRoot':\n+        case 'realm':\n+            $this->trustRoot = trim($value);\n+        }\n+    }\n+\n+    function __get($name)\n+    {\n+        switch ($name) {\n+        case 'identity':\n+            # We return claimed_id instead of identity,\n+            # because the developer should see the claimed identifier,\n+            # i.e. what he set as identity, not the op-local identifier (which is what we verify)\n+            return $this->claimed_id;\n+        case 'trustRoot':\n+        case 'realm':\n+            return $this->trustRoot;\n+        case 'mode':\n+            return empty($this->data['openid_mode']) ? null : $this->data['openid_mode'];\n+        }\n+    }\n+\n+    /**\n+     * Checks if the server specified in the url exists.\n+     *\n+     * @param $url url to check\n+     * @return true, if the server exists; false otherwise\n+     */\n+    function hostExists($url)\n+    {\n+        if (strpos($url, '/') === false) {\n+            $server = $url;\n+        } else {\n+            $server = @parse_url($url, PHP_URL_HOST);\n+        }\n+\n+        if (!$server) {\n+            return false;\n+        }\n+\n+        return !!gethostbynamel($server);\n+    }\n+\n+    protected function request_curl($url, $method='GET', $params=array())\n+    {\n+        $params = http_build_query($params, '', '&');\n+        $curl = curl_init($url . ($method == 'GET' && $params ? '?' . $params : ''));\n+        curl_setopt($curl, CURLOPT_FOLLOWLOCATION, true);\n+        curl_setopt($curl, CURLOPT_HEADER, false);\n+        curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, false);\n+        curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);\n+        curl_setopt($curl, CURLOPT_HTTPHEADER, array('Accept: application/xrds+xml, */*'));\n+\n+        if($this->verify_peer !== null) {\n+            curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, $this->verify_peer);\n+            if($this->capath) {\n+                curl_setopt($curl, CURLOPT_CAPATH, $this->capath);\n+            }\n+\n+            if($this->cainfo) {\n+                curl_setopt($curl, CURLOPT_CAINFO, $this->cainfo);\n+            }\n+        }\n+\n+        if ($method == 'POST') {\n+            curl_setopt($curl, CURLOPT_POST, true);\n+            curl_setopt($curl, CURLOPT_POSTFIELDS, $params);\n+        } elseif ($method == 'HEAD') {\n+            curl_setopt($curl, CURLOPT_HEADER, true);\n+            curl_setopt($curl, CURLOPT_NOBODY, true);\n+        } else {\n+            curl_setopt($curl, CURLOPT_HTTPGET, true);\n+        }\n+        $response = curl_exec($curl);\n+\n+        if($method == 'HEAD') {\n+            $headers = array();\n+            foreach(explode(\"\\n\", $response) as $header) {\n+                $pos = strpos($header,':');\n+                $name = strtolower(trim(substr($header, 0, $pos)));\n+                $headers[$name] = trim(substr($header, $pos+1));\n+            }\n+\n+            # Updating claimed_id in case of redirections.\n+            $effective_url = curl_getinfo($curl, CURLINFO_EFFECTIVE_URL);\n+            if($effective_url != $url) {\n+                $this->identity = $this->claimed_id = $effective_url;\n+            }\n+\n+            return $headers;\n+        }\n+\n+        if (curl_errno($curl)) {\n+            throw new ErrorException(curl_error($curl), curl_errno($curl));\n+        }\n+\n+        return $response;\n+    }\n+\n+    protected function request_streams($url, $method='GET', $params=array())\n+    {\n+        if(!$this->hostExists($url)) {\n+            throw new ErrorException('Invalid request.');\n+        }\n+\n+        $params = http_build_query($params, '', '&');\n+        switch($method) {\n+        case 'GET':\n+            $opts = array(\n+                'http' => array(\n+                    'method' => 'GET',\n+                    'header' => 'Accept: application/xrds+xml, */*',\n+                    'ignore_errors' => true,\n+                )\n+            );\n+            $url = $url . ($params ? '?' . $params : '');\n+            break;\n+        case 'POST':\n+            $opts = array(\n+                'http' => array(\n+                    'method' => 'POST',\n+                    'header'  => 'Content-type: application/x-www-form-urlencoded',\n+                    'content' => $params,\n+                    'ignore_errors' => true,\n+                )\n+            );\n+            break;\n+        case 'HEAD':\n+            # We want to send a HEAD request,\n+            # but since get_headers doesn't accept $context parameter,\n+            # we have to change the defaults.\n+            $default = stream_context_get_options(stream_context_get_default());\n+            stream_context_get_default(\n+                array('http' => array(\n+                    'method' => 'HEAD',\n+                    'header' => 'Accept: application/xrds+xml, */*',\n+                    'ignore_errors' => true,\n+                ))\n+            );\n+\n+            $url = $url . ($params ? '?' . $params : '');\n+            $headers_tmp = get_headers ($url);\n+            if(!$headers_tmp) {\n+                return array();\n+            }\n+\n+            # Parsing headers.\n+            $headers = array();\n+            foreach($headers_tmp as $header) {\n+                $pos = strpos($header,':');\n+                $name = strtolower(trim(substr($header, 0, $pos)));\n+                $headers[$name] = trim(substr($header, $pos+1));\n+\n+                # Following possible redirections. The point is just to have\n+                # claimed_id change with them, because get_headers() will\n+                # follow redirections automatically.\n+                # We ignore redirections with relative paths.\n+                # If any known provider uses them, file a bug report.\n+                if($name == 'location') {\n+                    if(strpos($headers[$name], 'http') === 0) {\n+                        $this->identity = $this->claimed_id = $headers[$name];\n+                    } elseif($headers[$name][0] == '/') {\n+                        $parsed_url = parse_url($this->claimed_id);\n+                        $this->identity =\n+                        $this->claimed_id = $parsed_url['scheme'] . '://'\n+                                          . $parsed_url['host']\n+                                          . $headers[$name];\n+                    }\n+                }\n+            }\n+\n+            # And restore them.\n+            stream_context_get_default($default);\n+            return $headers;\n+        }\n+\n+        if($this->verify_peer) {\n+            $opts += array('ssl' => array(\n+                'verify_peer' => true,\n+                'capath'      => $this->capath,\n+                'cafile'      => $this->cainfo,\n+            ));\n+        }\n+\n+        $context = stream_context_create ($opts);\n+\n+        return file_get_contents($url, false, $context);\n+    }\n+\n+    protected function request($url, $method='GET', $params=array())\n+    {\n+        if(function_exists('curl_init') && !ini_get('safe_mode') && !ini_get('open_basedir')) {\n+            return $this->request_curl($url, $method, $params);\n+        }\n+        return $this->request_streams($url, $method, $params);\n+    }\n+\n+    protected function build_url($url, $parts)\n+    {\n+        if (isset($url['query'], $parts['query'])) {\n+            $parts['query'] = $url['query'] . '&' . $parts['query'];\n+        }\n+\n+        $url = $parts + $url;\n+        $url = $url['scheme'] . '://'\n+             . (empty($url['username'])?''\n+                 :(empty($url['password'])? \"{$url['username']}@\"\n+                 :\"{$url['username']}:{$url['password']}@\"))\n+             . $url['host']\n+             . (empty($url['port'])?'':\":{$url['port']}\")\n+             . (empty($url['path'])?'':$url['path'])\n+             . (empty($url['query'])?'':\"?{$url['query']}\")\n+             . (empty($url['fragment'])?'':\"#{$url['fragment']}\");\n+        return $url;\n+    }\n+\n+    /**\n+     * Helper function used to scan for <meta>/<link> tags and extract information\n+     * from them\n+     */\n+    protected function htmlTag($content, $tag, $attrName, $attrValue, $valueName)\n+    {\n+        preg_match_all(\"#<{$tag}[^>]*$attrName=['\\\"].*?$attrValue.*?['\\\"][^>]*$valueName=['\\\"](.+?)['\\\"][^>]*/?>#i\", $content, $matches1);\n+        preg_match_all(\"#<{$tag}[^>]*$valueName=['\\\"](.+?)['\\\"][^>]*$attrName=['\\\"].*?$attrValue.*?['\\\"][^>]*/?>#i\", $content, $matches2);\n+\n+        $result = array_merge($matches1[1], $matches2[1]);\n+        return empty($result)?false:$result[0];\n+    }\n+\n+    /**\n+     * Performs Yadis and HTML discovery. Normally not used.\n+     * @param $url Identity URL.\n+     * @return String OP Endpoint (i.e. OpenID provider address).\n+     * @throws ErrorException\n+     */\n+    function discover($url)\n+    {\n+        if (!$url) throw new ErrorException('No identity supplied.');\n+        # Use xri.net proxy to resolve i-name identities\n+        if (!preg_match('#^https?:#', $url)) {\n+            $url = \"https://xri.net/$url\";\n+        }\n+\n+        # We save the original url in case of Yadis discovery failure.\n+        # It can happen when we'll be lead to an XRDS document\n+        # which does not have any OpenID2 services.\n+        $originalUrl = $url;\n+\n+        # A flag to disable yadis discovery in case of failure in headers.\n+        $yadis = true;\n+\n+        # We'll jump a maximum of 5 times, to avoid endless redirections.\n+        for ($i = 0; $i < 5; $i ++) {\n+            if ($yadis) {\n+                $headers = $this->request($url, 'HEAD');\n+\n+                $next = false;\n+                if (isset($headers['x-xrds-location'])) {\n+                    $url = $this->build_url(parse_url($url), parse_url(trim($headers['x-xrds-location'])));\n+                    $next = true;\n+                }\n+\n+                if (isset($headers['content-type'])\n+                    && (strpos($headers['content-type'], 'application/xrds+xml') !== false\n+                        || strpos($headers['content-type'], 'text/xml') !== false)\n+                ) {\n+                    # Apparently, some providers return XRDS documents as text/html.\n+                    # While it is against the spec, allowing this here shouldn't break\n+                    # compatibility with anything.\n+                    # ---\n+                    # Found an XRDS document, now let's find the server, and optionally delegate.\n+                    $content = $this->request($url, 'GET');\n+\n+                    preg_match_all('#<Service.*?>(.*?)</Service>#s', $content, $m);\n+                    foreach($m[1] as $content) {\n+                        $content = ' ' . $content; # The space is added, so that strpos doesn't return 0.\n+\n+                        # OpenID 2\n+                        $ns = preg_quote('http://specs.openid.net/auth/2.0/');\n+                        if(preg_match('#<Type>\\s*'.$ns.'(server|signon)\\s*</Type>#s', $content, $type)) {\n+                            if ($type[1] == 'server') $this->identifier_select = true;\n+\n+                            preg_match('#<URI.*?>(.*)</URI>#', $content, $server);\n+                            preg_match('#<(Local|Canonical)ID>(.*)</\\1ID>#', $content, $delegate);\n+                            if (empty($server)) {\n+                                return false;\n+                            }\n+                            # Does the server advertise support for either AX or SREG?\n+                            $this->ax   = (bool) strpos($content, '<Type>http://openid.net/srv/ax/1.0</Type>');\n+                            $this->sreg = strpos($content, '<Type>http://openid.net/sreg/1.0</Type>')\n+                                       || strpos($content, '<Type>http://openid.net/extensions/sreg/1.1</Type>');\n+\n+                            $server = $server[1];\n+                            if (isset($delegate[2])) $this->identity = trim($delegate[2]);\n+                            $this->version = 2;\n+\n+                            $this->server = $server;\n+                            return $server;\n+                        }\n+\n+                        # OpenID 1.1\n+                        $ns = preg_quote('http://openid.net/signon/1.1');\n+                        if (preg_match('#<Type>\\s*'.$ns.'\\s*</Type>#s', $content)) {\n+\n+                            preg_match('#<URI.*?>(.*)</URI>#', $content, $server);\n+                            preg_match('#<.*?Delegate>(.*)</.*?Delegate>#', $content, $delegate);\n+                            if (empty($server)) {\n+                                return false;\n+                            }\n+                            # AX can be used only with OpenID 2.0, so checking only SREG\n+                            $this->sreg = strpos($content, '<Type>http://openid.net/sreg/1.0</Type>')\n+                                       || strpos($content, '<Type>http://openid.net/extensions/sreg/1.1</Type>');\n+\n+                            $server = $server[1];\n+                            if (isset($delegate[1])) $this->identity = $delegate[1];\n+                            $this->version = 1;\n+\n+                            $this->server = $server;\n+                            return $server;\n+                        }\n+                    }\n+\n+                    $next = true;\n+                    $yadis = false;\n+                    $url = $originalUrl;\n+                    $content = null;\n+                    break;\n+                }\n+                if ($next) continue;\n+\n+                # There are no relevant information in headers, so we search the body.\n+                $content = $this->request($url, 'GET');\n+                $location = $this->htmlTag($content, 'meta', 'http-equiv', 'X-XRDS-Location', 'content');\n+                if ($location) {\n+                    $url = $this->build_url(parse_url($url), parse_url($location));\n+                    continue;\n+                }\n+            }\n+\n+            if (!$content) $content = $this->request($url, 'GET');\n+\n+            # At this point, the YADIS Discovery has failed, so we'll switch\n+            # to openid2 HTML discovery, then fallback to openid 1.1 discovery.\n+            $server   = $this->htmlTag($content, 'link', 'rel', 'openid2.provider', 'href');\n+            $delegate = $this->htmlTag($content, 'link', 'rel', 'openid2.local_id', 'href');\n+            $this->version = 2;\n+\n+            if (!$server) {\n+                # The same with openid 1.1\n+                $server   = $this->htmlTag($content, 'link', 'rel', 'openid.server', 'href');\n+                $delegate = $this->htmlTag($content, 'link', 'rel', 'openid.delegate', 'href');\n+                $this->version = 1;\n+            }\n+\n+            if ($server) {\n+                # We found an OpenID2 OP Endpoint\n+                if ($delegate) {\n+                    # We have also found an OP-Local ID.\n+                    $this->identity = $delegate;\n+                }\n+                $this->server = $server;\n+                return $server;\n+            }\n+\n+            throw new ErrorException('No servers found!');\n+        }\n+        throw new ErrorException('Endless redirection!');\n+    }\n+\n+    protected function sregParams()\n+    {\n+        $params = array();\n+        # We always use SREG 1.1, even if the server is advertising only support for 1.0.\n+        # That's because it's fully backwards compatibile with 1.0, and some providers\n+        # advertise 1.0 even if they accept only 1.1. One such provider is myopenid.com\n+        $params['openid.ns.sreg'] = 'http://openid.net/extensions/sreg/1.1';\n+        if ($this->required) {\n+            $params['openid.sreg.required'] = array();\n+            foreach ($this->required as $required) {\n+                if (!isset(self::$ax_to_sreg[$required])) continue;\n+                $params['openid.sreg.required'][] = self::$ax_to_sreg[$required];\n+            }\n+            $params['openid.sreg.required'] = implode(',', $params['openid.sreg.required']);\n+        }\n+\n+        if ($this->optional) {\n+            $params['openid.sreg.optional'] = array();\n+            foreach ($this->optional as $optional) {\n+                if (!isset(self::$ax_to_sreg[$optional])) continue;\n+                $params['openid.sreg.optional'][] = self::$ax_to_sreg[$optional];\n+            }\n+            $params['openid.sreg.optional'] = implode(',', $params['openid.sreg.optional']);\n+        }\n+        return $params;\n+    }\n+\n+    protected function axParams()\n+    {\n+        $params = array();\n+        if ($this->required || $this->optional) {\n+            $params['openid.ns.ax'] = 'http://openid.net/srv/ax/1.0';\n+            $params['openid.ax.mode'] = 'fetch_request';\n+            $this->aliases  = array();\n+            $counts   = array();\n+            $required = array();\n+            $optional = array();\n+            foreach (array('required','optional') as $type) {\n+                foreach ($this->$type as $alias => $field) {\n+                    if (is_int($alias)) $alias = strtr($field, '/', '_');\n+                    $this->aliases[$alias] = 'http://axschema.org/' . $field;\n+                    if (empty($counts[$alias])) $counts[$alias] = 0;\n+                    $counts[$alias] += 1;\n+                    ${$type}[] = $alias;\n+                }\n+            }\n+            foreach ($this->aliases as $alias => $ns) {\n+                $params['openid.ax.type.' . $alias] = $ns;\n+            }\n+            foreach ($counts as $alias => $count) {\n+                if ($count == 1) continue;\n+                $params['openid.ax.count.' . $alias] = $count;\n+            }\n+\n+            # Don't send empty ax.requied and ax.if_available.\n+            # Google and possibly other providers refuse to support ax when one of these is empty.\n+            if($required) {\n+                $params['openid.ax.required'] = implode(',', $required);\n+            }\n+            if($optional) {\n+                $params['openid.ax.if_available'] = implode(',', $optional);\n+            }\n+        }\n+        return $params;\n+    }\n+\n+    protected function authUrl_v1($immediate)\n+    {\n+\t$returnUrl = $this->returnUrl;\n+        # If we have an openid.delegate that is different from our claimed id,\n+        # we need to somehow preserve the claimed id between requests.\n+        # The simplest way is to just send it along with the return_to url.\n+        if($this->identity != $this->claimed_id) {\n+            $returnUrl .= (strpos($returnUrl, '?') ? '&' : '?') . 'openid.claimed_id=' . $this->claimed_id;\n+        }\n+\n+        $params = array(\n+            'openid.return_to'  => $returnUrl,\n+            'openid.mode'       => $immediate ? 'checkid_immediate' : 'checkid_setup',\n+            'openid.identity'   => $this->identity,\n+            'openid.trust_root' => $this->trustRoot,\n+            ) + $this->sregParams();\n+\n+        return $this->build_url(parse_url($this->server)\n+                               , array('query' => http_build_query($params, '', '&')));\n+    }\n+\n+    protected function authUrl_v2($immediate)\n+    {\n+        $params = array(\n+            'openid.ns'          => 'http://specs.openid.net/auth/2.0',\n+            'openid.mode'        => $immediate ? 'checkid_immediate' : 'checkid_setup',\n+            'openid.return_to'   => $this->returnUrl,\n+            'openid.realm'       => $this->trustRoot,\n+        );\n+        if ($this->ax) {\n+            $params += $this->axParams();\n+        }\n+        if ($this->sreg) {\n+            $params += $this->sregParams();\n+        }\n+        if (!$this->ax && !$this->sreg) {\n+            # If OP doesn't advertise either SREG, nor AX, let's send them both\n+            # in worst case we don't get anything in return.\n+            $params += $this->axParams() + $this->sregParams();\n+        }\n+\n+        if ($this->identifier_select) {\n+            $params['openid.identity'] = $params['openid.claimed_id']\n+                 = 'http://specs.openid.net/auth/2.0/identifier_select';\n+        } else {\n+            $params['openid.identity'] = $this->identity;\n+            $params['openid.claimed_id'] = $this->claimed_id;\n+        }\n+\n+        return $this->build_url(parse_url($this->server)\n+                               , array('query' => http_build_query($params, '', '&')));\n+    }\n+\n+    /**\n+     * Returns authentication url. Usually, you want to redirect your user to it.\n+     * @return String The authentication url.\n+     * @param String $select_identifier Whether to request OP to select identity for an user in OpenID 2. Does not affect OpenID 1.\n+     * @throws ErrorException\n+     */\n+    function authUrl($immediate = false)\n+    {\n+        if ($this->setup_url && !$immediate) return $this->setup_url;\n+        if (!$this->server) $this->discover($this->identity);\n+\n+        if ($this->version == 2) {\n+            return $this->authUrl_v2($immediate);\n+        }\n+        return $this->authUrl_v1($immediate);\n+    }\n+\n+    /**\n+     * Performs OpenID verification with the OP.\n+     * @return Bool Whether the verification was successful.\n+     * @throws ErrorException\n+     */\n+    function validate()\n+    {\n+        # If the request was using immediate mode, a failure may be reported\n+        # by presenting user_setup_url (for 1.1) or reporting\n+        # mode 'setup_needed' (for 2.0). Also catching all modes other than\n+        # id_res, in order to avoid throwing errors.\n+        if(isset($this->data['openid_user_setup_url'])) {\n+            $this->setup_url = $this->data['openid_user_setup_url'];\n+            return false;\n+        }\n+        if($this->mode != 'id_res') {\n+            return false;\n+        }\n+\n+        $this->claimed_id = isset($this->data['openid_claimed_id'])?$this->data['openid_claimed_id']:$this->data['openid_identity'];\n+        $params = array(\n+            'openid.assoc_handle' => $this->data['openid_assoc_handle'],\n+            'openid.signed'       => $this->data['openid_signed'],\n+            'openid.sig'          => $this->data['openid_sig'],\n+            );\n+\n+        if (isset($this->data['openid_ns'])) {\n+            # We're dealing with an OpenID 2.0 server, so let's set an ns\n+            # Even though we should know location of the endpoint,\n+            # we still need to verify it by discovery, so $server is not set here\n+            $params['openid.ns'] = 'http://specs.openid.net/auth/2.0';\n+        } elseif (isset($this->data['openid_claimed_id'])\n+            && $this->data['openid_claimed_id'] != $this->data['openid_identity']\n+        ) {\n+            # If it's an OpenID 1 provider, and we've got claimed_id,\n+            # we have to append it to the returnUrl, like authUrl_v1 does.\n+            $this->returnUrl .= (strpos($this->returnUrl, '?') ? '&' : '?')\n+                             .  'openid.claimed_id=' . $this->claimed_id;\n+        }\n+\n+        if ($this->data['openid_return_to'] != $this->returnUrl) {\n+            # The return_to url must match the url of current request.\n+            # I'm assuing that noone will set the returnUrl to something that doesn't make sense.\n+            return false;\n+        }\n+\n+        $server = $this->discover($this->claimed_id);\n+\n+        foreach (explode(',', $this->data['openid_signed']) as $item) {\n+            # Checking whether magic_quotes_gpc is turned on, because\n+            # the function may fail if it is. For example, when fetching\n+            # AX namePerson, it might containg an apostrophe, which will be escaped.\n+            # In such case, validation would fail, since we'd send different data than OP\n+            # wants to verify. stripslashes() should solve that problem, but we can't\n+            # use it when magic_quotes is off.\n+            $value = $this->data['openid_' . str_replace('.','_',$item)];\n+            $params['openid.' . $item] = get_magic_quotes_gpc() ? stripslashes($value) : $value;\n+\n+        }\n+\n+        $params['openid.mode'] = 'check_authentication';\n+\n+        $response = $this->request($server, 'POST', $params);\n+\n+        return preg_match('/is_valid\\s*:\\s*true/i', $response);\n+    }\n+\n+    protected function getAxAttributes()\n+    {\n+        $alias = null;\n+        if (isset($this->data['openid_ns_ax'])\n+            && $this->data['openid_ns_ax'] != 'http://openid.net/srv/ax/1.0'\n+        ) { # It's the most likely case, so we'll check it before\n+            $alias = 'ax';\n+        } else {\n+            # 'ax' prefix is either undefined, or points to another extension,\n+            # so we search for another prefix\n+            foreach ($this->data as $key => $val) {\n+                if (substr($key, 0, strlen('openid_ns_')) == 'openid_ns_'\n+                    && $val == 'http://openid.net/srv/ax/1.0'\n+                ) {\n+                    $alias = substr($key, strlen('openid_ns_'));\n+                    break;\n+                }\n+            }\n+        }\n+        if (!$alias) {\n+            # An alias for AX schema has not been found,\n+            # so there is no AX data in the OP's response\n+            return array();\n+        }\n+\n+        $attributes = array();\n+        foreach ($this->data as $key => $value) {\n+            $keyMatch = 'openid_' . $alias . '_value_';\n+            if (substr($key, 0, strlen($keyMatch)) != $keyMatch) {\n+                continue;\n+            }\n+            $key = substr($key, strlen($keyMatch));\n+            if (!isset($this->data['openid_' . $alias . '_type_' . $key])) {\n+                # OP is breaking the spec by returning a field without\n+                # associated ns. This shouldn't happen, but it's better\n+                # to check, than cause an E_NOTICE.\n+                continue;\n+            }\n+            $key = substr($this->data['openid_' . $alias . '_type_' . $key],\n+                          strlen('http://axschema.org/'));\n+            $attributes[$key] = $value;\n+        }\n+        return $attributes;\n+    }\n+\n+    protected function getSregAttributes()\n+    {\n+        $attributes = array();\n+        $sreg_to_ax = array_flip(self::$ax_to_sreg);\n+        foreach ($this->data as $key => $value) {\n+            $keyMatch = 'openid_sreg_';\n+            if (substr($key, 0, strlen($keyMatch)) != $keyMatch) {\n+                continue;\n+            }\n+            $key = substr($key, strlen($keyMatch));\n+            if (!isset($sreg_to_ax[$key])) {\n+                # The field name isn't part of the SREG spec, so we ignore it.\n+                continue;\n+            }\n+            $attributes[$sreg_to_ax[$key]] = $value;\n+        }\n+        return $attributes;\n+    }\n+\n+    /**\n+     * Gets AX/SREG attributes provided by OP. should be used only after successful validaton.\n+     * Note that it does not guarantee that any of the required/optional parameters will be present,\n+     * or that there will be no other attributes besides those specified.\n+     * In other words. OP may provide whatever information it wants to.\n+     *     * SREG names will be mapped to AX names.\n+     *     * @return Array Array of attributes with keys being the AX schema names, e.g. 'contact/email'\n+     * @see http://www.axschema.org/types/\n+     */\n+    function getAttributes()\n+    {\n+        if (isset($this->data['openid_ns'])\n+            && $this->data['openid_ns'] == 'http://specs.openid.net/auth/2.0'\n+        ) { # OpenID 2.0\n+            # We search for both AX and SREG attributes, with AX taking precedence.\n+            return $this->getAxAttributes() + $this->getSregAttributes();\n+        }\n+        return $this->getSregAttributes();\n+    }\n+}"
      },
      {
        "sha": "080cee856ee509ec9330cfd6adc52d7197722fa9",
        "filename": "contrib/ns/setaddress.php",
        "status": "added",
        "additions": 37,
        "deletions": 0,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c591a29d7a71c624ddbe436f83881120d5ba9e69/contrib/ns/setaddress.php",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c591a29d7a71c624ddbe436f83881120d5ba9e69/contrib/ns/setaddress.php",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/ns/setaddress.php?ref=c591a29d7a71c624ddbe436f83881120d5ba9e69",
        "patch": "@@ -0,0 +1,37 @@\n+<?php\n+if (!isset($_POST['nickname'])) {\n+    die('{\"error\": \"No nickname received.\"}');\n+}\n+else if (!isset($_POST['password'])) {\n+    die('{\"error\": \"No password received.\"}');\n+}\n+else if (!isset($_POST['address'])) {\n+    die('{\"error\": \"No address received\"}');\n+}\n+else {\n+    require 'db.php';\n+    $nickname = strtolower(escapestr($_POST['nickname']));\n+    $address = escapestr($_POST['address']);\n+    $passhash = hash('sha512', $_POST['password']);\n+\n+    $query = \"SELECT passhash FROM lookup WHERE nickname='$nickname';\";\n+    $result = do_query($query);\n+    if (has_results($result)) {\n+        $row = mysql_fetch_array($result);\n+        if (isset($row['passhash']) && $passhash == $row['passhash']) {\n+            $query = \"UPDATE lookup SET address='$address' WHERE nickname='$nickname' AND passhash='$passhash';\";\n+            do_query($query);\n+            echo '{\"status\": \"Address changed.\"}';\n+        }\n+        else {\n+            die('{\"error\": \"Incorrect password.\"}');\n+        }\n+    }\n+    else {\n+        $query = \"INSERT INTO lookup(nickname, passhash, address) VALUES ('$nickname', '$passhash', '$address');\";\n+        do_query($query);\n+        echo '{\"status\": \"New user created.\"}';\n+    }\n+}\n+?>\n+"
      },
      {
        "sha": "80c4f6ca40833b66489e1f18f79034ce2ef1d53b",
        "filename": "contrib/ns/setpassword.php",
        "status": "added",
        "additions": 35,
        "deletions": 0,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c591a29d7a71c624ddbe436f83881120d5ba9e69/contrib/ns/setpassword.php",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c591a29d7a71c624ddbe436f83881120d5ba9e69/contrib/ns/setpassword.php",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/ns/setpassword.php?ref=c591a29d7a71c624ddbe436f83881120d5ba9e69",
        "patch": "@@ -0,0 +1,35 @@\n+<?php\n+if (!isset($_POST['nickname'])) {\n+    die('{\"error\": \"No nickname received.\"}');\n+}\n+else if (!isset($_POST['password'])) {\n+    die('{\"error\": \"No password received.\"}');\n+}\n+else if (!isset($_POST['newpassword'])) {\n+    die('{\"error\": \"No new password received\"}');\n+}\n+else {\n+    require 'db.php';\n+    $nickname = strtolower(escapestr($_POST['nickname']));\n+    $oldpasshash = hash('sha512', $_POST['password']);\n+    $newpasshash = hash('sha512', $_POST['newpassword']);\n+\n+    $query = \"SELECT passhash FROM lookup WHERE nickname='$nickname';\";\n+    $result = do_query($query);\n+    if (has_results($result)) {\n+        $row = mysql_fetch_array($result);\n+        if (isset($row['passhash']) && $oldpasshash == $row['passhash']) {\n+            $query = \"UPDATE lookup SET passhash='$newpasshash' WHERE nickname='$nickname' AND passhash='$oldpasshash';\";\n+            do_query($query);\n+            echo '{\"status\": \"Password changed.\"}';\n+        }\n+        else {\n+            die('{\"error\": \"Incorrect password.\"}');\n+        }\n+    }\n+    else {\n+        die('{\"error\": \"No such nickname exists.\"}');\n+    }\n+}\n+?>\n+"
      }
    ]
  },
  {
    "sha": "f0555a7f181847ed42db996931f4121894f3c645",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmMDU1NWE3ZjE4MTg0N2VkNDJkYjk5NjkzMWY0MTIxODk0ZjNjNjQ1",
    "commit": {
      "author": {
        "name": "genjix",
        "email": "fake@lol.u",
        "date": "2011-03-10T03:52:49Z"
      },
      "committer": {
        "name": "genjix",
        "email": "fake@lol.u",
        "date": "2011-03-10T03:52:49Z"
      },
      "message": "security feature- replace bitcoin addresses with alphanumeric regex to stop the attack vector of tricking someone into getting your bitcoin addresses which is actually something that can execute code due to a vulnerability in their server software.",
      "tree": {
        "sha": "39e8a9eb12891f9c380e96eed11f3523d9425efc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/39e8a9eb12891f9c380e96eed11f3523d9425efc"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f0555a7f181847ed42db996931f4121894f3c645",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f0555a7f181847ed42db996931f4121894f3c645",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f0555a7f181847ed42db996931f4121894f3c645",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f0555a7f181847ed42db996931f4121894f3c645/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "c591a29d7a71c624ddbe436f83881120d5ba9e69",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c591a29d7a71c624ddbe436f83881120d5ba9e69",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c591a29d7a71c624ddbe436f83881120d5ba9e69"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 3,
      "deletions": 1
    },
    "files": [
      {
        "sha": "2f9c998685ef32f4bcf1960fb7818d79dc1bed99",
        "filename": "contrib/ns/setaddress.php",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f0555a7f181847ed42db996931f4121894f3c645/contrib/ns/setaddress.php",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f0555a7f181847ed42db996931f4121894f3c645/contrib/ns/setaddress.php",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/ns/setaddress.php?ref=f0555a7f181847ed42db996931f4121894f3c645",
        "patch": "@@ -11,7 +11,9 @@\n else {\n     require 'db.php';\n     $nickname = strtolower(escapestr($_POST['nickname']));\n-    $address = escapestr($_POST['address']);\n+    $address = $_POST['address'];\n+    # bitcoin address can only be alphanumeric so no need to strip them...\n+    $address = preg_replace(\"/[^a-zA-Z0-9]/\", \"\", $address);\n     $passhash = hash('sha512', $_POST['password']);\n \n     $query = \"SELECT passhash FROM lookup WHERE nickname='$nickname';\";"
      }
    ]
  },
  {
    "sha": "06d8c73a0a30fe977b7e4f0fc31a02b3852e035e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNmQ4YzczYTBhMzBmZTk3N2I3ZTRmMGZjMzFhMDJiMzg1MmUwMzVl",
    "commit": {
      "author": {
        "name": "genjix",
        "email": "fake@lol.u",
        "date": "2011-03-10T04:12:07Z"
      },
      "committer": {
        "name": "genjix",
        "email": "fake@lol.u",
        "date": "2011-03-10T04:12:07Z"
      },
      "message": "w00t.. it works! (just patched up rest of boilerplate code).",
      "tree": {
        "sha": "d5bf3718ca33cfe6c055b8688e2d02a902e05197",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d5bf3718ca33cfe6c055b8688e2d02a902e05197"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/06d8c73a0a30fe977b7e4f0fc31a02b3852e035e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/06d8c73a0a30fe977b7e4f0fc31a02b3852e035e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/06d8c73a0a30fe977b7e4f0fc31a02b3852e035e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/06d8c73a0a30fe977b7e4f0fc31a02b3852e035e/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "f0555a7f181847ed42db996931f4121894f3c645",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f0555a7f181847ed42db996931f4121894f3c645",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f0555a7f181847ed42db996931f4121894f3c645"
      }
    ],
    "stats": {
      "total": 132,
      "additions": 99,
      "deletions": 33
    },
    "files": [
      {
        "sha": "c5b3348f241d94f8e2c4b92bb7a678ed62b0b871",
        "filename": "resolv.cpp",
        "status": "modified",
        "additions": 46,
        "deletions": 1,
        "changes": 47,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06d8c73a0a30fe977b7e4f0fc31a02b3852e035e/resolv.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06d8c73a0a30fe977b7e4f0fc31a02b3852e035e/resolv.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/resolv.cpp?ref=06d8c73a0a30fe977b7e4f0fc31a02b3852e035e",
        "patch": "@@ -62,13 +62,26 @@ string NameResolutionService::FetchAddress(const string& strRef, string& strAddy\n     strAddy = strBuffer;\n     return \"\";  // no error\n }\n+\n string NameResolutionService::PushAddress(const string& strRef, const string& strPassword, const string& strNewaddy, string& strStatus)\n {\n     if (!curl)\n         return pErrorBuffer;\n     string strNickname, strDomain;\n     ExplodeRef(strRef, strNickname, strDomain);\n-    std::cout << \"PushAddress(\" << strNickname << \",\" << strDomain << \",\" << strPassword << \",\" << strNewaddy << \")\\n\";\n+    string strRequestUrl = strDomain + \"/setaddress.php\";\n+    curl_easy_setopt(curl, CURLOPT_URL, strRequestUrl.c_str());  \n+    PostVariables PostRequest;\n+    if (!PostRequest.Add(\"nickname\", strNickname) ||\n+        !PostRequest.Add(\"password\", strPassword) ||\n+        !PostRequest.Add(\"address\", strNewaddy))\n+        return \"Internal error constructing POST request.\";\n+    curl_easy_setopt(curl, CURLOPT_POST, 1);\n+    curl_easy_setopt(curl, CURLOPT_HTTPPOST, PostRequest()); \n+    if (Perform()) {\n+        return pErrorBuffer;\n+    }\n+    strStatus = strBuffer;\n     return \"\";  // no error\n }\n string NameResolutionService::ChangePassword(const string& strRef, const string& strPassword, const string& strNewPassword, string& strStatus)\n@@ -77,6 +90,38 @@ string NameResolutionService::ChangePassword(const string& strRef, const string&\n         return pErrorBuffer;\n     string strNickname, strDomain;\n     ExplodeRef(strRef, strNickname, strDomain);\n+    string strRequestUrl = strDomain + \"/setpassword.php\";\n+    curl_easy_setopt(curl, CURLOPT_URL, strRequestUrl.c_str());  \n+    PostVariables PostRequest;\n+    if (!PostRequest.Add(\"nickname\", strNickname) ||\n+        !PostRequest.Add(\"password\", strPassword) ||\n+        !PostRequest.Add(\"newpassword\", strNewPassword))\n+        return \"Internal error constructing POST request.\";\n+    curl_easy_setopt(curl, CURLOPT_POST, 1);\n+    curl_easy_setopt(curl, CURLOPT_HTTPPOST, PostRequest()); \n+    if (Perform()) {\n+        return pErrorBuffer;\n+    }\n+    strStatus = strBuffer;\n     return \"\";  // no error\n }\n \n+NameResolutionService::PostVariables::PostVariables()\n+{\n+    pBegin = NULL;\n+    pEnd = NULL;\n+}\n+NameResolutionService::PostVariables::~PostVariables()\n+{\n+    curl_formfree(pBegin);\n+}\n+bool NameResolutionService::PostVariables::Add(const string& strKey, const string& strVal)\n+{\n+    return curl_formadd(&pBegin, &pEnd, CURLFORM_COPYNAME, strKey.c_str(), CURLFORM_COPYCONTENTS, strVal.c_str(), CURLFORM_END) == CURL_FORMADD_OK;\n+}\n+\n+curl_httppost* NameResolutionService::PostVariables::operator()() const\n+{\n+    return pBegin;\n+}\n+"
      },
      {
        "sha": "6cf8c0222e8449fe6b60d1c5098b05ddff574fab",
        "filename": "resolv.h",
        "status": "modified",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06d8c73a0a30fe977b7e4f0fc31a02b3852e035e/resolv.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06d8c73a0a30fe977b7e4f0fc31a02b3852e035e/resolv.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/resolv.h?ref=06d8c73a0a30fe977b7e4f0fc31a02b3852e035e",
        "patch": "@@ -16,6 +16,17 @@ class NameResolutionService\n     string PushAddress(const string& strRef, const string& strPassword, const string& strNewaddy, string& strStatus);\n     string ChangePassword(const string& strRef, const string& strPassword, const string& strNewPassword, string& strStatus);\n private:\n+    class PostVariables\n+    {\n+    public:\n+        PostVariables();\n+        ~PostVariables();\n+        bool Add(const string& strKey, const string& strVal);\n+        curl_httppost* operator()() const;\n+    private:\n+        curl_httppost *pBegin, *pEnd;\n+    };\n+\n     static void ExplodeRef(const string& strRef, string& strNickname, string& strDomain);\n     bool Perform();\n "
      },
      {
        "sha": "cda092007871858bc58dab8765f1016f27cec07f",
        "filename": "rpc.cpp",
        "status": "modified",
        "additions": 42,
        "deletions": 32,
        "changes": 74,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06d8c73a0a30fe977b7e4f0fc31a02b3852e035e/rpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06d8c73a0a30fe977b7e4f0fc31a02b3852e035e/rpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/rpc.cpp?ref=06d8c73a0a30fe977b7e4f0fc31a02b3852e035e",
        "patch": "@@ -460,42 +460,36 @@ Value getaddressesbyaccount(const Array& params, bool fHelp)\n }\n \n \n-string DoSendToAddress(const string& strAddress, int64 nAmount)\n+Value sendtoaddress(const Array& params, bool fHelp)\n {\n+    if (fHelp || params.size() < 2 || params.size() > 4)\n+        throw runtime_error(\n+            \"sendtoaddress <address> <amount> [comment] [comment-to]\\n\"\n+            \"<amount> is a real and is rounded to the nearest 0.01\");\n+\n+    string strAddress = params[0].get_str();\n+    int64 nAmount = AmountFromValue(params[1]);\n+\n     // Wallet comments\n     CWalletTx wtx;\n-    /*if (params.size() > 2 && params[2].type() != null_type && !params[2].get_str().empty())\n+    if (params.size() > 2 && params[2].type() != null_type && !params[2].get_str().empty())\n         wtx.mapValue[\"comment\"] = params[2].get_str();\n     if (params.size() > 3 && params[3].type() != null_type && !params[3].get_str().empty())\n-        wtx.mapValue[\"to\"]      = params[3].get_str(); */\n+        wtx.mapValue[\"to\"]      = params[3].get_str(); \n+\n     string strError = SendMoneyToBitcoinAddress(strAddress, nAmount, wtx);\n     if (strError != \"\")\n         throw JSONRPCError(-4, strError);\n     return wtx.GetHash().GetHex();\n }\n \n-Value sendtoaddress(const Array& params, bool fHelp)\n-{\n-    if (fHelp || params.size() < 2 || params.size() > 4)\n-        throw runtime_error(\n-            \"sendtoaddress <bitcoinaddress> <amount> [comment] [comment-to]\\n\"\n-            \"<amount> is a real and is rounded to the nearest 0.01\");\n-\n-    string strAddress = params[0].get_str();\n-    int64 nAmount = AmountFromValue(params[1]);\n-    return DoSendToAddress(strAddress, nAmount);\n-}\n-\n-Value sendtoname(const Array& params, bool fHelp)\n+const string CollectAddress(const string& strIn)\n {\n-    if (fHelp || params.size() != 2)\n-        throw runtime_error(\n-            \"sendtoname <name@domain> <amount>\\n\"\n-            \"<amount> is a real and is rounded to the nearest 0.01\");\n-\n+    if (strIn.find('@') == (size_t)-1)\n+        return strIn;\n+    \n     NameResolutionService ns;\n-    string strName = params[0].get_str(), strAddy;\n-    int64 nAmount = AmountFromValue(params[1]);\n+    string strName = strIn, strAddy;\n     string strError = ns.FetchAddress(strName, strAddy);\n     if (strError != \"\")\n         throw JSONRPCError(-4, strError);\n@@ -510,10 +504,27 @@ Value sendtoname(const Array& params, bool fHelp)\n     const Value& address = find_value(request, \"address\");\n     if (address.type() != str_type)\n         throw JSONRPCError(-32600, \"Server responded with malformed reply.\");\n-    // @GENJIX this should actually send!\n     return address.get_str();\n }\n \n+// Named this way to prevent possible conflicts.\n+Value rpc_send(const Array& params, bool fHelp)\n+{\n+    if (fHelp || params.size() != 2)\n+        throw runtime_error(\n+            \"send <name@domain or address> <amount>\\n\"\n+            \"<amount> is a real and is rounded to the nearest 0.01\");\n+    \n+    string strAddy = CollectAddress(params[0].get_str());\n+    int64 nAmount = AmountFromValue(params[1]);\n+    // @GENJIX this should actually send!\n+    return strAddy.c_str();\n+    //string strError = SendMoneyToBitcoinAddress(strAddress, nAmount, wtx);\n+    //if (strError != \"\")\n+    //    throw JSONRPCError(-4, strError);\n+    //return wtx.GetHash().GetHex();\n+}\n+\n Value setnameaddress(const Array& params, bool fHelp)\n {\n     if (fHelp || params.size() < 2 || params.size() > 3)\n@@ -546,17 +557,16 @@ Value setnameaddress(const Array& params, bool fHelp)\n \n Value setnamepassword(const Array& params, bool fHelp)\n {\n-    if (fHelp || params.size() < 2 || params.size() > 3)\n+    if (fHelp || params.size() != 3)\n         throw runtime_error(\n             \"setnamepassword <name@domain> <password> <newpassword>\\n\"\n             \"Sets the password for your named account.\");\n \n     NameResolutionService ns;\n-    string strName = params[0].get_str(), strAddy, strStatus;\n-    int64 nAmount = AmountFromValue(params[1]);\n-    //string strError = ns.ChangePassword(strName, strAddy, strStatus);\n-    //if (strError != \"\")\n-    //    throw JSONRPCError(-4, strError);\n+    string strName = params[0].get_str(), strPass = params[1].get_str(), strNewPass = params[2].get_str(), strStatus;\n+    string strError = ns.ChangePassword(strName, strPass, strNewPass, strStatus);\n+    if (strError != \"\")\n+        throw JSONRPCError(-4, strError);\n \n     Value valRequest;\n     if (!read_string(strStatus, valRequest) || valRequest.type() != obj_type)\n@@ -1417,7 +1427,7 @@ pair<string, rpcfn_type> pCallTable[] =\n     make_pair(\"getaddressesbyaccount\", &getaddressesbyaccount),\n     make_pair(\"getaddressesbylabel\",   &getaddressesbyaccount), // deprecated\n     make_pair(\"sendtoaddress\",         &sendtoaddress),\n-    make_pair(\"sendtoname\",            &sendtoname),\n+    make_pair(\"send\",                  &rpc_send),\n     make_pair(\"setnameaddress\",        &setnameaddress),\n     make_pair(\"setnamepassword\",       &setnamepassword),\n     make_pair(\"getamountreceived\",     &getreceivedbyaddress), // deprecated, renamed to getreceivedbyaddress\n@@ -2065,7 +2075,7 @@ int CommandLineRPC(int argc, char *argv[])\n         if (strMethod == \"setgenerate\"            && n > 0) ConvertTo<bool>(params[0]);\n         if (strMethod == \"setgenerate\"            && n > 1) ConvertTo<boost::int64_t>(params[1]);\n         if (strMethod == \"sendtoaddress\"          && n > 1) ConvertTo<double>(params[1]);\n-        if (strMethod == \"sendtoname\"             && n > 1) ConvertTo<double>(params[1]);\n+        if (strMethod == \"send\"                   && n > 1) ConvertTo<double>(params[1]);\n         if (strMethod == \"getamountreceived\"      && n > 1) ConvertTo<boost::int64_t>(params[1]); // deprecated\n         if (strMethod == \"getreceivedbyaddress\"   && n > 1) ConvertTo<boost::int64_t>(params[1]);\n         if (strMethod == \"getreceivedbyaccount\"   && n > 1) ConvertTo<boost::int64_t>(params[1]);"
      }
    ]
  },
  {
    "sha": "765a58284613290d73c226a10f14628b431c16dd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3NjVhNTgyODQ2MTMyOTBkNzNjMjI2YTEwZjE0NjI4YjQzMWMxNmRk",
    "commit": {
      "author": {
        "name": "genjix",
        "email": "fake@lol.u",
        "date": "2011-03-10T04:45:49Z"
      },
      "committer": {
        "name": "genjix",
        "email": "fake@lol.u",
        "date": "2011-03-10T04:45:49Z"
      },
      "message": "Show address in returned JSON",
      "tree": {
        "sha": "0c26a5a2373d34456d92a2455553a246af67dc0f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0c26a5a2373d34456d92a2455553a246af67dc0f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/765a58284613290d73c226a10f14628b431c16dd",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/765a58284613290d73c226a10f14628b431c16dd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/765a58284613290d73c226a10f14628b431c16dd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/765a58284613290d73c226a10f14628b431c16dd/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "06d8c73a0a30fe977b7e4f0fc31a02b3852e035e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/06d8c73a0a30fe977b7e4f0fc31a02b3852e035e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/06d8c73a0a30fe977b7e4f0fc31a02b3852e035e"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "f084bee69cf9879dfe388e78947ddfdb5338e94f",
        "filename": "contrib/ns/setaddress.php",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/765a58284613290d73c226a10f14628b431c16dd/contrib/ns/setaddress.php",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/765a58284613290d73c226a10f14628b431c16dd/contrib/ns/setaddress.php",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/ns/setaddress.php?ref=765a58284613290d73c226a10f14628b431c16dd",
        "patch": "@@ -23,7 +23,7 @@\n         if (isset($row['passhash']) && $passhash == $row['passhash']) {\n             $query = \"UPDATE lookup SET address='$address' WHERE nickname='$nickname' AND passhash='$passhash';\";\n             do_query($query);\n-            echo '{\"status\": \"Address changed.\"}';\n+            echo '{\"status\": \"Address changed.\", \"address\": \"'.$address.'\"}';\n         }\n         else {\n             die('{\"error\": \"Incorrect password.\"}');"
      }
    ]
  },
  {
    "sha": "0461f7b660cadd43d3c9b3df551d6d9aeb780cb6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNDYxZjdiNjYwY2FkZDQzZDNjOWIzZGY1NTFkNmQ5YWViNzgwY2I2",
    "commit": {
      "author": {
        "name": "genjix",
        "email": "fake@lol.u",
        "date": "2011-03-10T04:46:11Z"
      },
      "committer": {
        "name": "genjix",
        "email": "fake@lol.u",
        "date": "2011-03-10T04:46:11Z"
      },
      "message": "exploded functions.",
      "tree": {
        "sha": "e204e49b354eac1c2dc4ffa9bfeb0281066c0d34",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e204e49b354eac1c2dc4ffa9bfeb0281066c0d34"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0461f7b660cadd43d3c9b3df551d6d9aeb780cb6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0461f7b660cadd43d3c9b3df551d6d9aeb780cb6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0461f7b660cadd43d3c9b3df551d6d9aeb780cb6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0461f7b660cadd43d3c9b3df551d6d9aeb780cb6/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "765a58284613290d73c226a10f14628b431c16dd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/765a58284613290d73c226a10f14628b431c16dd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/765a58284613290d73c226a10f14628b431c16dd"
      }
    ],
    "stats": {
      "total": 68,
      "additions": 25,
      "deletions": 43
    },
    "files": [
      {
        "sha": "666d5756249170c2439823c94e956e89f9fb3f6c",
        "filename": "resolv.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 22,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0461f7b660cadd43d3c9b3df551d6d9aeb780cb6/resolv.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0461f7b660cadd43d3c9b3df551d6d9aeb780cb6/resolv.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/resolv.cpp?ref=0461f7b660cadd43d3c9b3df551d6d9aeb780cb6",
        "patch": "@@ -42,7 +42,6 @@ bool NameResolutionService::Perform()\n     return (result != CURLE_OK);\n }\n \n-#include <iostream>\n string NameResolutionService::FetchAddress(const string& strRef, string& strAddy)\n {\n     if (!curl)\n@@ -63,18 +62,19 @@ string NameResolutionService::FetchAddress(const string& strRef, string& strAddy\n     return \"\";  // no error\n }\n \n-string NameResolutionService::PushAddress(const string& strRef, const string& strPassword, const string& strNewaddy, string& strStatus)\n+string NameResolutionService::MakeRequest(const string& strRef, const string& strPassword, const string& strReqname, const string& strArgument, string& strStatus)\n {\n     if (!curl)\n         return pErrorBuffer;\n     string strNickname, strDomain;\n     ExplodeRef(strRef, strNickname, strDomain);\n-    string strRequestUrl = strDomain + \"/setaddress.php\";\n+    string strRequestUrl = strDomain + \"/set\" + strReqname + \".php\";\n     curl_easy_setopt(curl, CURLOPT_URL, strRequestUrl.c_str());  \n     PostVariables PostRequest;\n+    const string& strKeyname = (strReqname == \"address\") ? \"address\" : \"newpassword\";\n     if (!PostRequest.Add(\"nickname\", strNickname) ||\n         !PostRequest.Add(\"password\", strPassword) ||\n-        !PostRequest.Add(\"address\", strNewaddy))\n+        !PostRequest.Add(strKeyname, strArgument))\n         return \"Internal error constructing POST request.\";\n     curl_easy_setopt(curl, CURLOPT_POST, 1);\n     curl_easy_setopt(curl, CURLOPT_HTTPPOST, PostRequest()); \n@@ -84,26 +84,13 @@ string NameResolutionService::PushAddress(const string& strRef, const string& st\n     strStatus = strBuffer;\n     return \"\";  // no error\n }\n+string NameResolutionService::PushAddress(const string& strRef, const string& strPassword, const string& strNewaddy, string& strStatus)\n+{\n+    return MakeRequest(strRef, strPassword, \"address\", strNewaddy, strStatus);\n+}\n string NameResolutionService::ChangePassword(const string& strRef, const string& strPassword, const string& strNewPassword, string& strStatus)\n {\n-    if (!curl)\n-        return pErrorBuffer;\n-    string strNickname, strDomain;\n-    ExplodeRef(strRef, strNickname, strDomain);\n-    string strRequestUrl = strDomain + \"/setpassword.php\";\n-    curl_easy_setopt(curl, CURLOPT_URL, strRequestUrl.c_str());  \n-    PostVariables PostRequest;\n-    if (!PostRequest.Add(\"nickname\", strNickname) ||\n-        !PostRequest.Add(\"password\", strPassword) ||\n-        !PostRequest.Add(\"newpassword\", strNewPassword))\n-        return \"Internal error constructing POST request.\";\n-    curl_easy_setopt(curl, CURLOPT_POST, 1);\n-    curl_easy_setopt(curl, CURLOPT_HTTPPOST, PostRequest()); \n-    if (Perform()) {\n-        return pErrorBuffer;\n-    }\n-    strStatus = strBuffer;\n-    return \"\";  // no error\n+    return MakeRequest(strRef, strPassword, \"password\", strNewPassword, strStatus);\n }\n \n NameResolutionService::PostVariables::PostVariables()"
      },
      {
        "sha": "06732b5e6c6f85ba6ea5287af5c53415a84b0ae7",
        "filename": "resolv.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0461f7b660cadd43d3c9b3df551d6d9aeb780cb6/resolv.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0461f7b660cadd43d3c9b3df551d6d9aeb780cb6/resolv.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/resolv.h?ref=0461f7b660cadd43d3c9b3df551d6d9aeb780cb6",
        "patch": "@@ -29,6 +29,7 @@ class NameResolutionService\n \n     static void ExplodeRef(const string& strRef, string& strNickname, string& strDomain);\n     bool Perform();\n+    string MakeRequest(const string& strRef, const string& strPassword, const string& strReqname, const string& strArgument, string& strStatus);\n \n     char pErrorBuffer[CURL_ERROR_SIZE];  \n     string strBuffer;"
      },
      {
        "sha": "7c022d5b002d3d42d6a601f533e06f264e27c161",
        "filename": "rpc.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 21,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0461f7b660cadd43d3c9b3df551d6d9aeb780cb6/rpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0461f7b660cadd43d3c9b3df551d6d9aeb780cb6/rpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/rpc.cpp?ref=0461f7b660cadd43d3c9b3df551d6d9aeb780cb6",
        "patch": "@@ -483,6 +483,18 @@ Value sendtoaddress(const Array& params, bool fHelp)\n     return wtx.GetHash().GetHex();\n }\n \n+const Object CheckMaybeThrow(const string& strJsonIn)\n+{\n+    Value valRequest;\n+    if (!read_string(strJsonIn, valRequest) || valRequest.type() != obj_type)\n+        throw JSONRPCError(-32700, \"Parse error\");\n+    const Object& request = valRequest.get_obj();\n+    const Value& error  = find_value(request, \"error\");\n+    if (error.type() != null_type)          \n+        throw JSONRPCError(-4, error.get_str());\n+    return request;\n+}\n+\n const string CollectAddress(const string& strIn)\n {\n     if (strIn.find('@') == (size_t)-1)\n@@ -494,13 +506,7 @@ const string CollectAddress(const string& strIn)\n     if (strError != \"\")\n         throw JSONRPCError(-4, strError);\n \n-    Value valRequest;\n-    if (!read_string(strAddy, valRequest) || valRequest.type() != obj_type)\n-        throw JSONRPCError(-32700, \"Parse error\");\n-    const Object& request = valRequest.get_obj();\n-    const Value& error  = find_value(request, \"error\");\n-    if (error.type() != null_type)          \n-        throw JSONRPCError(-4, error.get_str());\n+    const Object& request(CheckMaybeThrow(strAddy));\n     const Value& address = find_value(request, \"address\");\n     if (address.type() != str_type)\n         throw JSONRPCError(-32600, \"Server responded with malformed reply.\");\n@@ -545,13 +551,7 @@ Value setnameaddress(const Array& params, bool fHelp)\n     if (strError != \"\")\n         throw JSONRPCError(-4, strError);\n \n-    Value valRequest;\n-    if (!read_string(strStatus, valRequest) || valRequest.type() != obj_type)\n-        throw JSONRPCError(-32700, \"Parse error\");\n-    const Object& request = valRequest.get_obj();\n-    const Value& error  = find_value(request, \"error\");\n-    if (error.type() != null_type)          \n-        throw JSONRPCError(-4, error.get_str());\n+    CheckMaybeThrow(strStatus);\n     return strStatus;\n }\n \n@@ -568,13 +568,7 @@ Value setnamepassword(const Array& params, bool fHelp)\n     if (strError != \"\")\n         throw JSONRPCError(-4, strError);\n \n-    Value valRequest;\n-    if (!read_string(strStatus, valRequest) || valRequest.type() != obj_type)\n-        throw JSONRPCError(-32700, \"Parse error\");\n-    const Object& request = valRequest.get_obj();\n-    const Value& error  = find_value(request, \"error\");\n-    if (error.type() != null_type)          \n-        throw JSONRPCError(-4, error.get_str());\n+    CheckMaybeThrow(strStatus);\n     return strStatus;\n }\n "
      }
    ]
  },
  {
    "sha": "ac49f16515a4dbad601d11d780ce982eb5992692",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphYzQ5ZjE2NTE1YTRkYmFkNjAxZDExZDc4MGNlOTgyZWI1OTkyNjky",
    "commit": {
      "author": {
        "name": "genjix",
        "email": "fake@lol.u",
        "date": "2011-03-10T05:35:39Z"
      },
      "committer": {
        "name": "genjix",
        "email": "fake@lol.u",
        "date": "2011-03-10T05:35:39Z"
      },
      "message": "Cleanup.",
      "tree": {
        "sha": "563bf6a3d83037e11190d7d95550cfa0b8e855d1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/563bf6a3d83037e11190d7d95550cfa0b8e855d1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ac49f16515a4dbad601d11d780ce982eb5992692",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ac49f16515a4dbad601d11d780ce982eb5992692",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ac49f16515a4dbad601d11d780ce982eb5992692",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ac49f16515a4dbad601d11d780ce982eb5992692/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "0461f7b660cadd43d3c9b3df551d6d9aeb780cb6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0461f7b660cadd43d3c9b3df551d6d9aeb780cb6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0461f7b660cadd43d3c9b3df551d6d9aeb780cb6"
      }
    ],
    "stats": {
      "total": 144,
      "additions": 99,
      "deletions": 45
    },
    "files": [
      {
        "sha": "f56f0c5254fefd9d9e7efc08effed752af3e34e5",
        "filename": "resolv.cpp",
        "status": "modified",
        "additions": 36,
        "deletions": 17,
        "changes": 53,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ac49f16515a4dbad601d11d780ce982eb5992692/resolv.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ac49f16515a4dbad601d11d780ce982eb5992692/resolv.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/resolv.cpp?ref=ac49f16515a4dbad601d11d780ce982eb5992692",
        "patch": "@@ -1,5 +1,6 @@\n #include \"resolv.h\"\n \n+// callback used to write response from the server\n static int writer(char *pData, size_t nSize, size_t nNmemb, std::string *pBuffer)  \n {  \n   int nResult = 0;  \n@@ -14,13 +15,16 @@ static int writer(char *pData, size_t nSize, size_t nNmemb, std::string *pBuffer\n \n NameResolutionService::NameResolutionService()\n {\n+    // Initialise CURL with our various options.\n     curl = curl_easy_init();\n+    // This goes first in case of any problems below. We get an error message.\n     curl_easy_setopt(curl, CURLOPT_ERRORBUFFER, pErrorBuffer);  \n     // fail when server sends >= 404\n     curl_easy_setopt(curl, CURLOPT_FAILONERROR, 1);  \n     curl_easy_setopt(curl, CURLOPT_HEADER, 0);  \n     curl_easy_setopt(curl, CURLOPT_FOLLOWLOCATION, 0);  \n     curl_easy_setopt(curl, CURLOPT_WRITEFUNCTION, writer);  \n+    // server response goes in strBuffer\n     curl_easy_setopt(curl, CURLOPT_WRITEDATA, &strBuffer);  \n     pErrorBuffer[0] = '\\0';\n }\n@@ -29,72 +33,86 @@ NameResolutionService::~NameResolutionService()\n     curl_easy_cleanup(curl);\n }\n \n-void NameResolutionService::ExplodeRef(const string& strRef, string& strNickname, string& strDomain)\n+void NameResolutionService::ExplodeHandle(const string& strHandle, string& strNickname, string& strDomain)\n {\n     // split address at @ furthrest to the right\n-    size_t nPosAtsym = strRef.rfind('@');\n-    strNickname = strRef.substr(0, nPosAtsym);\n-    strDomain = strRef.substr(nPosAtsym + 1, strRef.size());\n+    size_t nPosAtsym = strHandle.rfind('@');\n+    strNickname = strHandle.substr(0, nPosAtsym);\n+    strDomain = strHandle.substr(nPosAtsym + 1, strHandle.size());\n }\n bool NameResolutionService::Perform()\n {\n+    // Called after everything has been setup. This actually does the request.\n     CURLcode result = curl_easy_perform(curl);  \n-    return (result != CURLE_OK);\n+    return (result == CURLE_OK);\n }\n \n-string NameResolutionService::FetchAddress(const string& strRef, string& strAddy)\n+string NameResolutionService::FetchAddress(const string& strHandle, string& strAddy)\n {\n+    // GET is defined for 'getting' data, so we use GET for the low risk fetching of people's addresses\n     if (!curl)\n+        // For some reason CURL didn't start...\n         return pErrorBuffer;\n+    // Expand the handle\n     string strNickname, strDomain;\n-    ExplodeRef(strRef, strNickname, strDomain);\n+    ExplodeHandle(strHandle, strNickname, strDomain);\n     // url encode the nickname for get request\n     const char* pszEncodedNick = curl_easy_escape(curl, strNickname.c_str(), strNickname.size());\n     if (!pszEncodedNick)\n         return \"Unable to encode nickname.\";\n     // construct url for GET request\n     string strRequestUrl = strDomain + \"/getaddress.php?nickname=\" + pszEncodedNick;\n+    // Pass URL to CURL\n     curl_easy_setopt(curl, CURLOPT_URL, strRequestUrl.c_str());  \n-    if (Perform()) {\n+    if (!Perform())\n         return pErrorBuffer;\n-    }\n+    // Server should respond with a JSON that has the address in.\n     strAddy = strBuffer;\n     return \"\";  // no error\n }\n \n-string NameResolutionService::MakeRequest(const string& strRef, const string& strPassword, const string& strReqname, const string& strArgument, string& strStatus)\n+string NameResolutionService::MakeRequest(const string& strHandle, const string& strPassword, const string& strReqname, const string& strArgument, string& strStatus)\n {\n     if (!curl)\n+        // For some reason CURL didn't start...\n         return pErrorBuffer;\n+    // Expand the handle\n     string strNickname, strDomain;\n-    ExplodeRef(strRef, strNickname, strDomain);\n+    ExplodeHandle(strHandle, strNickname, strDomain);\n+    // Construct URL for POST request\n     string strRequestUrl = strDomain + \"/set\" + strReqname + \".php\";\n+    // Pass URL to CURL\n     curl_easy_setopt(curl, CURLOPT_URL, strRequestUrl.c_str());  \n+    // Create our variables for POST\n     PostVariables PostRequest;\n+    // This method is used by:\n+    //    setaddress  which takes a value called address\n+    //    setpassword which takes a value called newpassword\n     const string& strKeyname = (strReqname == \"address\") ? \"address\" : \"newpassword\";\n     if (!PostRequest.Add(\"nickname\", strNickname) ||\n         !PostRequest.Add(\"password\", strPassword) ||\n         !PostRequest.Add(strKeyname, strArgument))\n         return \"Internal error constructing POST request.\";\n     curl_easy_setopt(curl, CURLOPT_POST, 1);\n     curl_easy_setopt(curl, CURLOPT_HTTPPOST, PostRequest()); \n-    if (Perform()) {\n+    // Carry out request.\n+    if (!Perform())\n         return pErrorBuffer;\n-    }\n     strStatus = strBuffer;\n     return \"\";  // no error\n }\n-string NameResolutionService::PushAddress(const string& strRef, const string& strPassword, const string& strNewaddy, string& strStatus)\n+string NameResolutionService::UpdateAddress(const string& strHandle, const string& strPassword, const string& strNewaddy, string& strStatus)\n {\n-    return MakeRequest(strRef, strPassword, \"address\", strNewaddy, strStatus);\n+    return MakeRequest(strHandle, strPassword, \"address\", strNewaddy, strStatus);\n }\n-string NameResolutionService::ChangePassword(const string& strRef, const string& strPassword, const string& strNewPassword, string& strStatus)\n+string NameResolutionService::ChangePassword(const string& strHandle, const string& strPassword, const string& strNewPassword, string& strStatus)\n {\n-    return MakeRequest(strRef, strPassword, \"password\", strNewPassword, strStatus);\n+    return MakeRequest(strHandle, strPassword, \"password\", strNewPassword, strStatus);\n }\n \n NameResolutionService::PostVariables::PostVariables()\n {\n+    // pBegin/pEnd *must* be null before calling curl_formadd\n     pBegin = NULL;\n     pEnd = NULL;\n }\n@@ -104,6 +122,7 @@ NameResolutionService::PostVariables::~PostVariables()\n }\n bool NameResolutionService::PostVariables::Add(const string& strKey, const string& strVal)\n {\n+    // Copy strings to this block. Return true on success.\n     return curl_formadd(&pBegin, &pEnd, CURLFORM_COPYNAME, strKey.c_str(), CURLFORM_COPYCONTENTS, strVal.c_str(), CURLFORM_END) == CURL_FORMADD_OK;\n }\n "
      },
      {
        "sha": "d41f18c3bf58524e2b0be265c96eeaaf21d6c9a2",
        "filename": "resolv.h",
        "status": "modified",
        "additions": 29,
        "deletions": 5,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ac49f16515a4dbad601d11d780ce982eb5992692/resolv.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ac49f16515a4dbad601d11d780ce982eb5992692/resolv.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/resolv.h?ref=ac49f16515a4dbad601d11d780ce982eb5992692",
        "patch": "@@ -6,33 +6,57 @@\n \n using std::string;\n \n+/*\n+\n+This class resolves against a server to lookup addresses.\n+To not conflict with the bitcoin addresses, we refer here to people's handles.\n+A handle is of the form:\n+\n+   genjix@foo.org\n+\n+Most characters are valid for the username + password (and handled accordingly), but the domain follows usual web standards. It is possible to affix a path if needed,\n+\n+   genjix@bar.com/path/to/\n+\n+*/\n class NameResolutionService\n {\n public:\n     NameResolutionService();\n     ~NameResolutionService();\n \n-    string FetchAddress(const string& strRef, string& strAddy);\n-    string PushAddress(const string& strRef, const string& strPassword, const string& strNewaddy, string& strStatus);\n-    string ChangePassword(const string& strRef, const string& strPassword, const string& strNewPassword, string& strStatus);\n+    // Three main methods map to RPC actions.\n+    string FetchAddress(const string& strHandle, string& strAddy);\n+    // Push new address to the server\n+    string UpdateAddress(const string& strHandle, const string& strPassword, const string& strNewaddy, string& strStatus);\n+    string ChangePassword(const string& strHandle, const string& strPassword, const string& strNewPassword, string& strStatus);\n private:\n+    // A POST block\n     class PostVariables\n     {\n     public:\n         PostVariables();\n         ~PostVariables();\n+        // Add a new key, value pair\n         bool Add(const string& strKey, const string& strVal);\n         curl_httppost* operator()() const;\n     private:\n+        // CURL stores POST blocks as linked lists.\n         curl_httppost *pBegin, *pEnd;\n     };\n \n-    static void ExplodeRef(const string& strRef, string& strNickname, string& strDomain);\n+    // Explodes user@domain => user, domain\n+    static void ExplodeHandle(const string& strHandle, string& strNickname, string& strDomain);\n+    // Perform the HTTP request. Returns true on success.\n     bool Perform();\n-    string MakeRequest(const string& strRef, const string& strPassword, const string& strReqname, const string& strArgument, string& strStatus);\n+    // Make a POST request that will modify the specified variable (strReqname) on the server.\n+    string MakeRequest(const string& strHandle, const string& strPassword, const string& strReqname, const string& strArgument, string& strStatus);\n \n+    // CURL error message\n     char pErrorBuffer[CURL_ERROR_SIZE];  \n+    // CURL response\n     string strBuffer;\n+    // CURL handle\n     CURL *curl;\n };\n "
      },
      {
        "sha": "2967248f9b332db48c019813247ff2cfe59840af",
        "filename": "rpc.cpp",
        "status": "modified",
        "additions": 34,
        "deletions": 23,
        "changes": 57,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ac49f16515a4dbad601d11d780ce982eb5992692/rpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ac49f16515a4dbad601d11d780ce982eb5992692/rpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/rpc.cpp?ref=ac49f16515a4dbad601d11d780ce982eb5992692",
        "patch": "@@ -485,28 +485,36 @@ Value sendtoaddress(const Array& params, bool fHelp)\n \n const Object CheckMaybeThrow(const string& strJsonIn)\n {\n+    // Parse input JSON\n     Value valRequest;\n     if (!read_string(strJsonIn, valRequest) || valRequest.type() != obj_type)\n         throw JSONRPCError(-32700, \"Parse error\");\n     const Object& request = valRequest.get_obj();\n+    // Now check for a key called \"error\"\n     const Value& error  = find_value(request, \"error\");\n+    // It's an error JSON! so propagate the error.\n     if (error.type() != null_type)          \n         throw JSONRPCError(-4, error.get_str());\n+    // Return JSON object\n     return request;\n }\n \n const string CollectAddress(const string& strIn)\n {\n+    // If the handle does not have an @ in it, then it's a normal base58 bitcoin address\n     if (strIn.find('@') == (size_t)-1)\n         return strIn;\n     \n+    // Open the lookup service\n     NameResolutionService ns;\n-    string strName = strIn, strAddy;\n-    string strError = ns.FetchAddress(strName, strAddy);\n-    if (strError != \"\")\n+    // We established that the input string is not a BTC address, so we use it as a handle now.\n+    string strHandle = strIn, strAddy;\n+    string strError = ns.FetchAddress(strHandle, strAddy);\n+    if (strError.empty())\n         throw JSONRPCError(-4, strError);\n \n     const Object& request(CheckMaybeThrow(strAddy));\n+    // Get the BTC address from the JSON\n     const Value& address = find_value(request, \"address\");\n     if (address.type() != str_type)\n         throw JSONRPCError(-32600, \"Server responded with malformed reply.\");\n@@ -521,53 +529,56 @@ Value rpc_send(const Array& params, bool fHelp)\n             \"send <name@domain or address> <amount>\\n\"\n             \"<amount> is a real and is rounded to the nearest 0.01\");\n     \n+    // Intelligent function which looks up address given handle, or returns address\n     string strAddy = CollectAddress(params[0].get_str());\n     int64 nAmount = AmountFromValue(params[1]);\n-    // @GENJIX this should actually send!\n-    return strAddy.c_str();\n-    //string strError = SendMoneyToBitcoinAddress(strAddress, nAmount, wtx);\n-    //if (strError != \"\")\n-    //    throw JSONRPCError(-4, strError);\n-    //return wtx.GetHash().GetHex();\n+    // Do the send\n+    CWalletTx wtx;\n+    string strError = SendMoneyToBitcoinAddress(strAddy, nAmount, wtx);\n+    if (strError.empty())\n+        throw JSONRPCError(-4, strError);\n+    return wtx.GetHash().GetHex();\n }\n \n-Value setnameaddress(const Array& params, bool fHelp)\n+Value updatens(const Array& params, bool fHelp)\n {\n     if (fHelp || params.size() < 2 || params.size() > 3)\n         throw runtime_error(\n-            \"setnameaddress <name@domain> <password> [address]\\n\"\n-            \"Sets an address for your named account.\");\n+            \"updatens <name@domain> <password> [address]\\n\"\n+            \"Updates name lookup server with an address.\");\n \n-    string strName = params[0].get_str(), strPass = params[1].get_str(), strAddy, strStatus;\n+    string strHandle = params[0].get_str(), strPass = params[1].get_str(), strAddy, strStatus;\n     if (params.size() == 3)\n         strAddy = params[2].get_str();\n         // @GENJIX should check address for validity\n     else\n-        // random address\n+        // select random address\n         strAddy = GetAccountAddress(\"\");\n \n     NameResolutionService ns;\n-    string strError = ns.PushAddress(strName, strPass, strAddy, strStatus);\n-    if (strError != \"\")\n+    string strError = ns.UpdateAddress(strHandle, strPass, strAddy, strStatus);\n+    if (strError.empty())\n         throw JSONRPCError(-4, strError);\n \n+    // Throw if strStatus JSON contains an error key\n     CheckMaybeThrow(strStatus);\n     return strStatus;\n }\n \n-Value setnamepassword(const Array& params, bool fHelp)\n+Value setnspassword(const Array& params, bool fHelp)\n {\n     if (fHelp || params.size() != 3)\n         throw runtime_error(\n-            \"setnamepassword <name@domain> <password> <newpassword>\\n\"\n+            \"setnspassword <name@domain> <password> <newpassword>\\n\"\n             \"Sets the password for your named account.\");\n \n     NameResolutionService ns;\n-    string strName = params[0].get_str(), strPass = params[1].get_str(), strNewPass = params[2].get_str(), strStatus;\n-    string strError = ns.ChangePassword(strName, strPass, strNewPass, strStatus);\n-    if (strError != \"\")\n+    string strHandle = params[0].get_str(), strPass = params[1].get_str(), strNewPass = params[2].get_str(), strStatus;\n+    string strError = ns.ChangePassword(strHandle, strPass, strNewPass, strStatus);\n+    if (strError.empty())\n         throw JSONRPCError(-4, strError);\n \n+    // Throw if strStatus JSON contains an error key\n     CheckMaybeThrow(strStatus);\n     return strStatus;\n }\n@@ -1422,8 +1433,8 @@ pair<string, rpcfn_type> pCallTable[] =\n     make_pair(\"getaddressesbylabel\",   &getaddressesbyaccount), // deprecated\n     make_pair(\"sendtoaddress\",         &sendtoaddress),\n     make_pair(\"send\",                  &rpc_send),\n-    make_pair(\"setnameaddress\",        &setnameaddress),\n-    make_pair(\"setnamepassword\",       &setnamepassword),\n+    make_pair(\"updatens\",              &updatens),\n+    make_pair(\"setnspassword\",         &setnspassword),\n     make_pair(\"getamountreceived\",     &getreceivedbyaddress), // deprecated, renamed to getreceivedbyaddress\n     make_pair(\"getallreceived\",        &listreceivedbyaddress), // deprecated, renamed to listreceivedbyaddress\n     make_pair(\"getreceivedbyaddress\",  &getreceivedbyaddress),"
      }
    ]
  },
  {
    "sha": "0876661ce1d0d951f8be476f67c0499932f0ffc0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowODc2NjYxY2UxZDBkOTUxZjhiZTQ3NmY2N2MwNDk5OTMyZjBmZmMw",
    "commit": {
      "author": {
        "name": "genjix",
        "email": "fake@lol.u",
        "date": "2011-03-10T05:44:00Z"
      },
      "committer": {
        "name": "genjix",
        "email": "fake@lol.u",
        "date": "2011-03-10T05:44:00Z"
      },
      "message": "readded resolv.h to makefile",
      "tree": {
        "sha": "447b46591936bef8ad1eb1f9080fd2b095ec15bf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/447b46591936bef8ad1eb1f9080fd2b095ec15bf"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0876661ce1d0d951f8be476f67c0499932f0ffc0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0876661ce1d0d951f8be476f67c0499932f0ffc0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0876661ce1d0d951f8be476f67c0499932f0ffc0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0876661ce1d0d951f8be476f67c0499932f0ffc0/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "ac49f16515a4dbad601d11d780ce982eb5992692",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ac49f16515a4dbad601d11d780ce982eb5992692",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ac49f16515a4dbad601d11d780ce982eb5992692"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "6c19329037d1ac917be11f7ceb4b845fcfb66d99",
        "filename": "makefile.unix",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0876661ce1d0d951f8be476f67c0499932f0ffc0/makefile.unix",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0876661ce1d0d951f8be476f67c0499932f0ffc0/makefile.unix",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/makefile.unix?ref=0876661ce1d0d951f8be476f67c0499932f0ffc0",
        "patch": "@@ -28,7 +28,7 @@ DEFS=-DNOPCH -DFOURWAYSSE2 -DUSE_SSL\n DEBUGFLAGS=-g -D__WXDEBUG__\n CXXFLAGS=-O2 -Wno-invalid-offsetof -Wformat $(DEBUGFLAGS) $(DEFS)\n HEADERS=headers.h strlcpy.h serialize.h uint256.h util.h key.h bignum.h base58.h \\\n-    script.h db.h net.h irc.h main.h rpc.h uibase.h ui.h noui.h init.h\n+    script.h db.h net.h irc.h main.h rpc.h uibase.h ui.h noui.h init.h resolv.h\n \n OBJS= \\\n     obj/util.o \\"
      }
    ]
  },
  {
    "sha": "c38817be535fde2791ea026c9110dac2d338ec33",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjMzg4MTdiZTUzNWZkZTI3OTFlYTAyNmM5MTEwZGFjMmQzMzhlYzMz",
    "commit": {
      "author": {
        "name": "genjix",
        "email": "fake@lol.u",
        "date": "2011-03-10T05:49:47Z"
      },
      "committer": {
        "name": "genjix",
        "email": "fake@lol.u",
        "date": "2011-03-10T05:49:47Z"
      },
      "message": "unneeded file.",
      "tree": {
        "sha": "2958893a1f0b422ffb897f9e287afa4a539a308c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2958893a1f0b422ffb897f9e287afa4a539a308c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c38817be535fde2791ea026c9110dac2d338ec33",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c38817be535fde2791ea026c9110dac2d338ec33",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c38817be535fde2791ea026c9110dac2d338ec33",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c38817be535fde2791ea026c9110dac2d338ec33/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "0876661ce1d0d951f8be476f67c0499932f0ffc0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0876661ce1d0d951f8be476f67c0499932f0ffc0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0876661ce1d0d951f8be476f67c0499932f0ffc0"
      }
    ],
    "stats": {
      "total": 754,
      "additions": 0,
      "deletions": 754
    },
    "files": [
      {
        "sha": "6967327cd969bd7c823d8273e0d8cf88c4d7e962",
        "filename": "contrib/ns/openid.php",
        "status": "removed",
        "additions": 0,
        "deletions": 754,
        "changes": 754,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0876661ce1d0d951f8be476f67c0499932f0ffc0/contrib/ns/openid.php",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0876661ce1d0d951f8be476f67c0499932f0ffc0/contrib/ns/openid.php",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/ns/openid.php?ref=0876661ce1d0d951f8be476f67c0499932f0ffc0",
        "patch": "@@ -1,754 +0,0 @@\n-<?php\n-/**\n- * This class provides a simple interface for OpenID (1.1 and 2.0) authentication.\n- * Supports Yadis discovery.\n- * The authentication process is stateless/dumb.\n- *\n- * Usage:\n- * Sign-on with OpenID is a two step process:\n- * Step one is authentication with the provider:\n- * <code>\n- * $openid = new LightOpenID;\n- * $openid->identity = 'ID supplied by user';\n- * header('Location: ' . $openid->authUrl());\n- * </code>\n- * The provider then sends various parameters via GET, one of them is openid_mode.\n- * Step two is verification:\n- * <code>\n- * if ($this->data['openid_mode']) {\n- *     $openid = new LightOpenID;\n- *     echo $openid->validate() ? 'Logged in.' : 'Failed';\n- * }\n- * </code>\n- *\n- * Optionally, you can set $returnUrl and $realm (or $trustRoot, which is an alias).\n- * The default values for those are:\n- * $openid->realm     = (!empty($_SERVER['HTTPS']) ? 'https' : 'http') . '://' . $_SERVER['HTTP_HOST'];\n- * $openid->returnUrl = $openid->realm . $_SERVER['REQUEST_URI'];\n- * If you don't know their meaning, refer to any openid tutorial, or specification. Or just guess.\n- *\n- * AX and SREG extensions are supported.\n- * To use them, specify $openid->required and/or $openid->optional before calling $openid->authUrl().\n- * These are arrays, with values being AX schema paths (the 'path' part of the URL).\n- * For example:\n- *   $openid->required = array('namePerson/friendly', 'contact/email');\n- *   $openid->optional = array('namePerson/first');\n- * If the server supports only SREG or OpenID 1.1, these are automaticaly\n- * mapped to SREG names, so that user doesn't have to know anything about the server.\n- *\n- * To get the values, use $openid->getAttributes().\n- *\n- *\n- * The library requires PHP >= 5.1.2 with curl or http/https stream wrappers enabled.\n- * @author Mewp\n- * @copyright Copyright (c) 2010, Mewp\n- * @license http://www.opensource.org/licenses/mit-license.php MIT\n- */\n-class LightOpenID\n-{\n-    public $returnUrl\n-         , $required = array()\n-         , $optional = array()\n-         , $verify_peer = null\n-         , $capath = null\n-         , $cainfo = null;\n-    private $identity, $claimed_id;\n-    protected $server, $version, $trustRoot, $aliases, $identifier_select = false\n-            , $ax = false, $sreg = false, $data, $setup_url = null;\n-    static protected $ax_to_sreg = array(\n-        'namePerson/friendly'     => 'nickname',\n-        'contact/email'           => 'email',\n-        'namePerson'              => 'fullname',\n-        'birthDate'               => 'dob',\n-        'person/gender'           => 'gender',\n-        'contact/postalCode/home' => 'postcode',\n-        'contact/country/home'    => 'country',\n-        'pref/language'           => 'language',\n-        'pref/timezone'           => 'timezone',\n-        );\n-\n-    function __construct()\n-    {\n-        $this->trustRoot = (!empty($_SERVER['HTTPS']) ? 'https' : 'http') . '://' . $_SERVER['HTTP_HOST'];\n-        $uri = rtrim(preg_replace('#((?<=\\?)|&)openid\\.[^&]+#', '', $_SERVER['REQUEST_URI']), '?');\n-        $this->returnUrl = $this->trustRoot . $uri;\n-\n-        $this->data = $_POST + $_GET; # OPs may send data as POST or GET.\n-\n-        if(!function_exists('curl_init') && !in_array('https', stream_get_wrappers())) {\n-            throw new ErrorException('You must have either https wrappers or curl enabled.');\n-        }\n-    }\n-\n-    function __set($name, $value)\n-    {\n-        switch ($name) {\n-        case 'identity':\n-            if (strlen($value = trim((String) $value))) {\n-                if (preg_match('#^xri:/*#i', $value, $m)) {\n-                    $value = substr($value, strlen($m[0]));\n-                } elseif (!preg_match('/^(?:[=@+\\$!\\(]|https?:)/i', $value)) {\n-                    $value = \"http://$value\";\n-                }\n-                if (preg_match('#^https?://[^/]+$#i', $value, $m)) {\n-                    $value .= '/';\n-                }\n-            }\n-            $this->$name = $this->claimed_id = $value;\n-            break;\n-        case 'trustRoot':\n-        case 'realm':\n-            $this->trustRoot = trim($value);\n-        }\n-    }\n-\n-    function __get($name)\n-    {\n-        switch ($name) {\n-        case 'identity':\n-            # We return claimed_id instead of identity,\n-            # because the developer should see the claimed identifier,\n-            # i.e. what he set as identity, not the op-local identifier (which is what we verify)\n-            return $this->claimed_id;\n-        case 'trustRoot':\n-        case 'realm':\n-            return $this->trustRoot;\n-        case 'mode':\n-            return empty($this->data['openid_mode']) ? null : $this->data['openid_mode'];\n-        }\n-    }\n-\n-    /**\n-     * Checks if the server specified in the url exists.\n-     *\n-     * @param $url url to check\n-     * @return true, if the server exists; false otherwise\n-     */\n-    function hostExists($url)\n-    {\n-        if (strpos($url, '/') === false) {\n-            $server = $url;\n-        } else {\n-            $server = @parse_url($url, PHP_URL_HOST);\n-        }\n-\n-        if (!$server) {\n-            return false;\n-        }\n-\n-        return !!gethostbynamel($server);\n-    }\n-\n-    protected function request_curl($url, $method='GET', $params=array())\n-    {\n-        $params = http_build_query($params, '', '&');\n-        $curl = curl_init($url . ($method == 'GET' && $params ? '?' . $params : ''));\n-        curl_setopt($curl, CURLOPT_FOLLOWLOCATION, true);\n-        curl_setopt($curl, CURLOPT_HEADER, false);\n-        curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, false);\n-        curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);\n-        curl_setopt($curl, CURLOPT_HTTPHEADER, array('Accept: application/xrds+xml, */*'));\n-\n-        if($this->verify_peer !== null) {\n-            curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, $this->verify_peer);\n-            if($this->capath) {\n-                curl_setopt($curl, CURLOPT_CAPATH, $this->capath);\n-            }\n-\n-            if($this->cainfo) {\n-                curl_setopt($curl, CURLOPT_CAINFO, $this->cainfo);\n-            }\n-        }\n-\n-        if ($method == 'POST') {\n-            curl_setopt($curl, CURLOPT_POST, true);\n-            curl_setopt($curl, CURLOPT_POSTFIELDS, $params);\n-        } elseif ($method == 'HEAD') {\n-            curl_setopt($curl, CURLOPT_HEADER, true);\n-            curl_setopt($curl, CURLOPT_NOBODY, true);\n-        } else {\n-            curl_setopt($curl, CURLOPT_HTTPGET, true);\n-        }\n-        $response = curl_exec($curl);\n-\n-        if($method == 'HEAD') {\n-            $headers = array();\n-            foreach(explode(\"\\n\", $response) as $header) {\n-                $pos = strpos($header,':');\n-                $name = strtolower(trim(substr($header, 0, $pos)));\n-                $headers[$name] = trim(substr($header, $pos+1));\n-            }\n-\n-            # Updating claimed_id in case of redirections.\n-            $effective_url = curl_getinfo($curl, CURLINFO_EFFECTIVE_URL);\n-            if($effective_url != $url) {\n-                $this->identity = $this->claimed_id = $effective_url;\n-            }\n-\n-            return $headers;\n-        }\n-\n-        if (curl_errno($curl)) {\n-            throw new ErrorException(curl_error($curl), curl_errno($curl));\n-        }\n-\n-        return $response;\n-    }\n-\n-    protected function request_streams($url, $method='GET', $params=array())\n-    {\n-        if(!$this->hostExists($url)) {\n-            throw new ErrorException('Invalid request.');\n-        }\n-\n-        $params = http_build_query($params, '', '&');\n-        switch($method) {\n-        case 'GET':\n-            $opts = array(\n-                'http' => array(\n-                    'method' => 'GET',\n-                    'header' => 'Accept: application/xrds+xml, */*',\n-                    'ignore_errors' => true,\n-                )\n-            );\n-            $url = $url . ($params ? '?' . $params : '');\n-            break;\n-        case 'POST':\n-            $opts = array(\n-                'http' => array(\n-                    'method' => 'POST',\n-                    'header'  => 'Content-type: application/x-www-form-urlencoded',\n-                    'content' => $params,\n-                    'ignore_errors' => true,\n-                )\n-            );\n-            break;\n-        case 'HEAD':\n-            # We want to send a HEAD request,\n-            # but since get_headers doesn't accept $context parameter,\n-            # we have to change the defaults.\n-            $default = stream_context_get_options(stream_context_get_default());\n-            stream_context_get_default(\n-                array('http' => array(\n-                    'method' => 'HEAD',\n-                    'header' => 'Accept: application/xrds+xml, */*',\n-                    'ignore_errors' => true,\n-                ))\n-            );\n-\n-            $url = $url . ($params ? '?' . $params : '');\n-            $headers_tmp = get_headers ($url);\n-            if(!$headers_tmp) {\n-                return array();\n-            }\n-\n-            # Parsing headers.\n-            $headers = array();\n-            foreach($headers_tmp as $header) {\n-                $pos = strpos($header,':');\n-                $name = strtolower(trim(substr($header, 0, $pos)));\n-                $headers[$name] = trim(substr($header, $pos+1));\n-\n-                # Following possible redirections. The point is just to have\n-                # claimed_id change with them, because get_headers() will\n-                # follow redirections automatically.\n-                # We ignore redirections with relative paths.\n-                # If any known provider uses them, file a bug report.\n-                if($name == 'location') {\n-                    if(strpos($headers[$name], 'http') === 0) {\n-                        $this->identity = $this->claimed_id = $headers[$name];\n-                    } elseif($headers[$name][0] == '/') {\n-                        $parsed_url = parse_url($this->claimed_id);\n-                        $this->identity =\n-                        $this->claimed_id = $parsed_url['scheme'] . '://'\n-                                          . $parsed_url['host']\n-                                          . $headers[$name];\n-                    }\n-                }\n-            }\n-\n-            # And restore them.\n-            stream_context_get_default($default);\n-            return $headers;\n-        }\n-\n-        if($this->verify_peer) {\n-            $opts += array('ssl' => array(\n-                'verify_peer' => true,\n-                'capath'      => $this->capath,\n-                'cafile'      => $this->cainfo,\n-            ));\n-        }\n-\n-        $context = stream_context_create ($opts);\n-\n-        return file_get_contents($url, false, $context);\n-    }\n-\n-    protected function request($url, $method='GET', $params=array())\n-    {\n-        if(function_exists('curl_init') && !ini_get('safe_mode') && !ini_get('open_basedir')) {\n-            return $this->request_curl($url, $method, $params);\n-        }\n-        return $this->request_streams($url, $method, $params);\n-    }\n-\n-    protected function build_url($url, $parts)\n-    {\n-        if (isset($url['query'], $parts['query'])) {\n-            $parts['query'] = $url['query'] . '&' . $parts['query'];\n-        }\n-\n-        $url = $parts + $url;\n-        $url = $url['scheme'] . '://'\n-             . (empty($url['username'])?''\n-                 :(empty($url['password'])? \"{$url['username']}@\"\n-                 :\"{$url['username']}:{$url['password']}@\"))\n-             . $url['host']\n-             . (empty($url['port'])?'':\":{$url['port']}\")\n-             . (empty($url['path'])?'':$url['path'])\n-             . (empty($url['query'])?'':\"?{$url['query']}\")\n-             . (empty($url['fragment'])?'':\"#{$url['fragment']}\");\n-        return $url;\n-    }\n-\n-    /**\n-     * Helper function used to scan for <meta>/<link> tags and extract information\n-     * from them\n-     */\n-    protected function htmlTag($content, $tag, $attrName, $attrValue, $valueName)\n-    {\n-        preg_match_all(\"#<{$tag}[^>]*$attrName=['\\\"].*?$attrValue.*?['\\\"][^>]*$valueName=['\\\"](.+?)['\\\"][^>]*/?>#i\", $content, $matches1);\n-        preg_match_all(\"#<{$tag}[^>]*$valueName=['\\\"](.+?)['\\\"][^>]*$attrName=['\\\"].*?$attrValue.*?['\\\"][^>]*/?>#i\", $content, $matches2);\n-\n-        $result = array_merge($matches1[1], $matches2[1]);\n-        return empty($result)?false:$result[0];\n-    }\n-\n-    /**\n-     * Performs Yadis and HTML discovery. Normally not used.\n-     * @param $url Identity URL.\n-     * @return String OP Endpoint (i.e. OpenID provider address).\n-     * @throws ErrorException\n-     */\n-    function discover($url)\n-    {\n-        if (!$url) throw new ErrorException('No identity supplied.');\n-        # Use xri.net proxy to resolve i-name identities\n-        if (!preg_match('#^https?:#', $url)) {\n-            $url = \"https://xri.net/$url\";\n-        }\n-\n-        # We save the original url in case of Yadis discovery failure.\n-        # It can happen when we'll be lead to an XRDS document\n-        # which does not have any OpenID2 services.\n-        $originalUrl = $url;\n-\n-        # A flag to disable yadis discovery in case of failure in headers.\n-        $yadis = true;\n-\n-        # We'll jump a maximum of 5 times, to avoid endless redirections.\n-        for ($i = 0; $i < 5; $i ++) {\n-            if ($yadis) {\n-                $headers = $this->request($url, 'HEAD');\n-\n-                $next = false;\n-                if (isset($headers['x-xrds-location'])) {\n-                    $url = $this->build_url(parse_url($url), parse_url(trim($headers['x-xrds-location'])));\n-                    $next = true;\n-                }\n-\n-                if (isset($headers['content-type'])\n-                    && (strpos($headers['content-type'], 'application/xrds+xml') !== false\n-                        || strpos($headers['content-type'], 'text/xml') !== false)\n-                ) {\n-                    # Apparently, some providers return XRDS documents as text/html.\n-                    # While it is against the spec, allowing this here shouldn't break\n-                    # compatibility with anything.\n-                    # ---\n-                    # Found an XRDS document, now let's find the server, and optionally delegate.\n-                    $content = $this->request($url, 'GET');\n-\n-                    preg_match_all('#<Service.*?>(.*?)</Service>#s', $content, $m);\n-                    foreach($m[1] as $content) {\n-                        $content = ' ' . $content; # The space is added, so that strpos doesn't return 0.\n-\n-                        # OpenID 2\n-                        $ns = preg_quote('http://specs.openid.net/auth/2.0/');\n-                        if(preg_match('#<Type>\\s*'.$ns.'(server|signon)\\s*</Type>#s', $content, $type)) {\n-                            if ($type[1] == 'server') $this->identifier_select = true;\n-\n-                            preg_match('#<URI.*?>(.*)</URI>#', $content, $server);\n-                            preg_match('#<(Local|Canonical)ID>(.*)</\\1ID>#', $content, $delegate);\n-                            if (empty($server)) {\n-                                return false;\n-                            }\n-                            # Does the server advertise support for either AX or SREG?\n-                            $this->ax   = (bool) strpos($content, '<Type>http://openid.net/srv/ax/1.0</Type>');\n-                            $this->sreg = strpos($content, '<Type>http://openid.net/sreg/1.0</Type>')\n-                                       || strpos($content, '<Type>http://openid.net/extensions/sreg/1.1</Type>');\n-\n-                            $server = $server[1];\n-                            if (isset($delegate[2])) $this->identity = trim($delegate[2]);\n-                            $this->version = 2;\n-\n-                            $this->server = $server;\n-                            return $server;\n-                        }\n-\n-                        # OpenID 1.1\n-                        $ns = preg_quote('http://openid.net/signon/1.1');\n-                        if (preg_match('#<Type>\\s*'.$ns.'\\s*</Type>#s', $content)) {\n-\n-                            preg_match('#<URI.*?>(.*)</URI>#', $content, $server);\n-                            preg_match('#<.*?Delegate>(.*)</.*?Delegate>#', $content, $delegate);\n-                            if (empty($server)) {\n-                                return false;\n-                            }\n-                            # AX can be used only with OpenID 2.0, so checking only SREG\n-                            $this->sreg = strpos($content, '<Type>http://openid.net/sreg/1.0</Type>')\n-                                       || strpos($content, '<Type>http://openid.net/extensions/sreg/1.1</Type>');\n-\n-                            $server = $server[1];\n-                            if (isset($delegate[1])) $this->identity = $delegate[1];\n-                            $this->version = 1;\n-\n-                            $this->server = $server;\n-                            return $server;\n-                        }\n-                    }\n-\n-                    $next = true;\n-                    $yadis = false;\n-                    $url = $originalUrl;\n-                    $content = null;\n-                    break;\n-                }\n-                if ($next) continue;\n-\n-                # There are no relevant information in headers, so we search the body.\n-                $content = $this->request($url, 'GET');\n-                $location = $this->htmlTag($content, 'meta', 'http-equiv', 'X-XRDS-Location', 'content');\n-                if ($location) {\n-                    $url = $this->build_url(parse_url($url), parse_url($location));\n-                    continue;\n-                }\n-            }\n-\n-            if (!$content) $content = $this->request($url, 'GET');\n-\n-            # At this point, the YADIS Discovery has failed, so we'll switch\n-            # to openid2 HTML discovery, then fallback to openid 1.1 discovery.\n-            $server   = $this->htmlTag($content, 'link', 'rel', 'openid2.provider', 'href');\n-            $delegate = $this->htmlTag($content, 'link', 'rel', 'openid2.local_id', 'href');\n-            $this->version = 2;\n-\n-            if (!$server) {\n-                # The same with openid 1.1\n-                $server   = $this->htmlTag($content, 'link', 'rel', 'openid.server', 'href');\n-                $delegate = $this->htmlTag($content, 'link', 'rel', 'openid.delegate', 'href');\n-                $this->version = 1;\n-            }\n-\n-            if ($server) {\n-                # We found an OpenID2 OP Endpoint\n-                if ($delegate) {\n-                    # We have also found an OP-Local ID.\n-                    $this->identity = $delegate;\n-                }\n-                $this->server = $server;\n-                return $server;\n-            }\n-\n-            throw new ErrorException('No servers found!');\n-        }\n-        throw new ErrorException('Endless redirection!');\n-    }\n-\n-    protected function sregParams()\n-    {\n-        $params = array();\n-        # We always use SREG 1.1, even if the server is advertising only support for 1.0.\n-        # That's because it's fully backwards compatibile with 1.0, and some providers\n-        # advertise 1.0 even if they accept only 1.1. One such provider is myopenid.com\n-        $params['openid.ns.sreg'] = 'http://openid.net/extensions/sreg/1.1';\n-        if ($this->required) {\n-            $params['openid.sreg.required'] = array();\n-            foreach ($this->required as $required) {\n-                if (!isset(self::$ax_to_sreg[$required])) continue;\n-                $params['openid.sreg.required'][] = self::$ax_to_sreg[$required];\n-            }\n-            $params['openid.sreg.required'] = implode(',', $params['openid.sreg.required']);\n-        }\n-\n-        if ($this->optional) {\n-            $params['openid.sreg.optional'] = array();\n-            foreach ($this->optional as $optional) {\n-                if (!isset(self::$ax_to_sreg[$optional])) continue;\n-                $params['openid.sreg.optional'][] = self::$ax_to_sreg[$optional];\n-            }\n-            $params['openid.sreg.optional'] = implode(',', $params['openid.sreg.optional']);\n-        }\n-        return $params;\n-    }\n-\n-    protected function axParams()\n-    {\n-        $params = array();\n-        if ($this->required || $this->optional) {\n-            $params['openid.ns.ax'] = 'http://openid.net/srv/ax/1.0';\n-            $params['openid.ax.mode'] = 'fetch_request';\n-            $this->aliases  = array();\n-            $counts   = array();\n-            $required = array();\n-            $optional = array();\n-            foreach (array('required','optional') as $type) {\n-                foreach ($this->$type as $alias => $field) {\n-                    if (is_int($alias)) $alias = strtr($field, '/', '_');\n-                    $this->aliases[$alias] = 'http://axschema.org/' . $field;\n-                    if (empty($counts[$alias])) $counts[$alias] = 0;\n-                    $counts[$alias] += 1;\n-                    ${$type}[] = $alias;\n-                }\n-            }\n-            foreach ($this->aliases as $alias => $ns) {\n-                $params['openid.ax.type.' . $alias] = $ns;\n-            }\n-            foreach ($counts as $alias => $count) {\n-                if ($count == 1) continue;\n-                $params['openid.ax.count.' . $alias] = $count;\n-            }\n-\n-            # Don't send empty ax.requied and ax.if_available.\n-            # Google and possibly other providers refuse to support ax when one of these is empty.\n-            if($required) {\n-                $params['openid.ax.required'] = implode(',', $required);\n-            }\n-            if($optional) {\n-                $params['openid.ax.if_available'] = implode(',', $optional);\n-            }\n-        }\n-        return $params;\n-    }\n-\n-    protected function authUrl_v1($immediate)\n-    {\n-\t$returnUrl = $this->returnUrl;\n-        # If we have an openid.delegate that is different from our claimed id,\n-        # we need to somehow preserve the claimed id between requests.\n-        # The simplest way is to just send it along with the return_to url.\n-        if($this->identity != $this->claimed_id) {\n-            $returnUrl .= (strpos($returnUrl, '?') ? '&' : '?') . 'openid.claimed_id=' . $this->claimed_id;\n-        }\n-\n-        $params = array(\n-            'openid.return_to'  => $returnUrl,\n-            'openid.mode'       => $immediate ? 'checkid_immediate' : 'checkid_setup',\n-            'openid.identity'   => $this->identity,\n-            'openid.trust_root' => $this->trustRoot,\n-            ) + $this->sregParams();\n-\n-        return $this->build_url(parse_url($this->server)\n-                               , array('query' => http_build_query($params, '', '&')));\n-    }\n-\n-    protected function authUrl_v2($immediate)\n-    {\n-        $params = array(\n-            'openid.ns'          => 'http://specs.openid.net/auth/2.0',\n-            'openid.mode'        => $immediate ? 'checkid_immediate' : 'checkid_setup',\n-            'openid.return_to'   => $this->returnUrl,\n-            'openid.realm'       => $this->trustRoot,\n-        );\n-        if ($this->ax) {\n-            $params += $this->axParams();\n-        }\n-        if ($this->sreg) {\n-            $params += $this->sregParams();\n-        }\n-        if (!$this->ax && !$this->sreg) {\n-            # If OP doesn't advertise either SREG, nor AX, let's send them both\n-            # in worst case we don't get anything in return.\n-            $params += $this->axParams() + $this->sregParams();\n-        }\n-\n-        if ($this->identifier_select) {\n-            $params['openid.identity'] = $params['openid.claimed_id']\n-                 = 'http://specs.openid.net/auth/2.0/identifier_select';\n-        } else {\n-            $params['openid.identity'] = $this->identity;\n-            $params['openid.claimed_id'] = $this->claimed_id;\n-        }\n-\n-        return $this->build_url(parse_url($this->server)\n-                               , array('query' => http_build_query($params, '', '&')));\n-    }\n-\n-    /**\n-     * Returns authentication url. Usually, you want to redirect your user to it.\n-     * @return String The authentication url.\n-     * @param String $select_identifier Whether to request OP to select identity for an user in OpenID 2. Does not affect OpenID 1.\n-     * @throws ErrorException\n-     */\n-    function authUrl($immediate = false)\n-    {\n-        if ($this->setup_url && !$immediate) return $this->setup_url;\n-        if (!$this->server) $this->discover($this->identity);\n-\n-        if ($this->version == 2) {\n-            return $this->authUrl_v2($immediate);\n-        }\n-        return $this->authUrl_v1($immediate);\n-    }\n-\n-    /**\n-     * Performs OpenID verification with the OP.\n-     * @return Bool Whether the verification was successful.\n-     * @throws ErrorException\n-     */\n-    function validate()\n-    {\n-        # If the request was using immediate mode, a failure may be reported\n-        # by presenting user_setup_url (for 1.1) or reporting\n-        # mode 'setup_needed' (for 2.0). Also catching all modes other than\n-        # id_res, in order to avoid throwing errors.\n-        if(isset($this->data['openid_user_setup_url'])) {\n-            $this->setup_url = $this->data['openid_user_setup_url'];\n-            return false;\n-        }\n-        if($this->mode != 'id_res') {\n-            return false;\n-        }\n-\n-        $this->claimed_id = isset($this->data['openid_claimed_id'])?$this->data['openid_claimed_id']:$this->data['openid_identity'];\n-        $params = array(\n-            'openid.assoc_handle' => $this->data['openid_assoc_handle'],\n-            'openid.signed'       => $this->data['openid_signed'],\n-            'openid.sig'          => $this->data['openid_sig'],\n-            );\n-\n-        if (isset($this->data['openid_ns'])) {\n-            # We're dealing with an OpenID 2.0 server, so let's set an ns\n-            # Even though we should know location of the endpoint,\n-            # we still need to verify it by discovery, so $server is not set here\n-            $params['openid.ns'] = 'http://specs.openid.net/auth/2.0';\n-        } elseif (isset($this->data['openid_claimed_id'])\n-            && $this->data['openid_claimed_id'] != $this->data['openid_identity']\n-        ) {\n-            # If it's an OpenID 1 provider, and we've got claimed_id,\n-            # we have to append it to the returnUrl, like authUrl_v1 does.\n-            $this->returnUrl .= (strpos($this->returnUrl, '?') ? '&' : '?')\n-                             .  'openid.claimed_id=' . $this->claimed_id;\n-        }\n-\n-        if ($this->data['openid_return_to'] != $this->returnUrl) {\n-            # The return_to url must match the url of current request.\n-            # I'm assuing that noone will set the returnUrl to something that doesn't make sense.\n-            return false;\n-        }\n-\n-        $server = $this->discover($this->claimed_id);\n-\n-        foreach (explode(',', $this->data['openid_signed']) as $item) {\n-            # Checking whether magic_quotes_gpc is turned on, because\n-            # the function may fail if it is. For example, when fetching\n-            # AX namePerson, it might containg an apostrophe, which will be escaped.\n-            # In such case, validation would fail, since we'd send different data than OP\n-            # wants to verify. stripslashes() should solve that problem, but we can't\n-            # use it when magic_quotes is off.\n-            $value = $this->data['openid_' . str_replace('.','_',$item)];\n-            $params['openid.' . $item] = get_magic_quotes_gpc() ? stripslashes($value) : $value;\n-\n-        }\n-\n-        $params['openid.mode'] = 'check_authentication';\n-\n-        $response = $this->request($server, 'POST', $params);\n-\n-        return preg_match('/is_valid\\s*:\\s*true/i', $response);\n-    }\n-\n-    protected function getAxAttributes()\n-    {\n-        $alias = null;\n-        if (isset($this->data['openid_ns_ax'])\n-            && $this->data['openid_ns_ax'] != 'http://openid.net/srv/ax/1.0'\n-        ) { # It's the most likely case, so we'll check it before\n-            $alias = 'ax';\n-        } else {\n-            # 'ax' prefix is either undefined, or points to another extension,\n-            # so we search for another prefix\n-            foreach ($this->data as $key => $val) {\n-                if (substr($key, 0, strlen('openid_ns_')) == 'openid_ns_'\n-                    && $val == 'http://openid.net/srv/ax/1.0'\n-                ) {\n-                    $alias = substr($key, strlen('openid_ns_'));\n-                    break;\n-                }\n-            }\n-        }\n-        if (!$alias) {\n-            # An alias for AX schema has not been found,\n-            # so there is no AX data in the OP's response\n-            return array();\n-        }\n-\n-        $attributes = array();\n-        foreach ($this->data as $key => $value) {\n-            $keyMatch = 'openid_' . $alias . '_value_';\n-            if (substr($key, 0, strlen($keyMatch)) != $keyMatch) {\n-                continue;\n-            }\n-            $key = substr($key, strlen($keyMatch));\n-            if (!isset($this->data['openid_' . $alias . '_type_' . $key])) {\n-                # OP is breaking the spec by returning a field without\n-                # associated ns. This shouldn't happen, but it's better\n-                # to check, than cause an E_NOTICE.\n-                continue;\n-            }\n-            $key = substr($this->data['openid_' . $alias . '_type_' . $key],\n-                          strlen('http://axschema.org/'));\n-            $attributes[$key] = $value;\n-        }\n-        return $attributes;\n-    }\n-\n-    protected function getSregAttributes()\n-    {\n-        $attributes = array();\n-        $sreg_to_ax = array_flip(self::$ax_to_sreg);\n-        foreach ($this->data as $key => $value) {\n-            $keyMatch = 'openid_sreg_';\n-            if (substr($key, 0, strlen($keyMatch)) != $keyMatch) {\n-                continue;\n-            }\n-            $key = substr($key, strlen($keyMatch));\n-            if (!isset($sreg_to_ax[$key])) {\n-                # The field name isn't part of the SREG spec, so we ignore it.\n-                continue;\n-            }\n-            $attributes[$sreg_to_ax[$key]] = $value;\n-        }\n-        return $attributes;\n-    }\n-\n-    /**\n-     * Gets AX/SREG attributes provided by OP. should be used only after successful validaton.\n-     * Note that it does not guarantee that any of the required/optional parameters will be present,\n-     * or that there will be no other attributes besides those specified.\n-     * In other words. OP may provide whatever information it wants to.\n-     *     * SREG names will be mapped to AX names.\n-     *     * @return Array Array of attributes with keys being the AX schema names, e.g. 'contact/email'\n-     * @see http://www.axschema.org/types/\n-     */\n-    function getAttributes()\n-    {\n-        if (isset($this->data['openid_ns'])\n-            && $this->data['openid_ns'] == 'http://specs.openid.net/auth/2.0'\n-        ) { # OpenID 2.0\n-            # We search for both AX and SREG attributes, with AX taking precedence.\n-            return $this->getAxAttributes() + $this->getSregAttributes();\n-        }\n-        return $this->getSregAttributes();\n-    }\n-}"
      }
    ]
  },
  {
    "sha": "0e760bbebc93a04b1127bfb7b6434496584622b2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowZTc2MGJiZWJjOTNhMDRiMTEyN2JmYjdiNjQzNDQ5NjU4NDYyMmIy",
    "commit": {
      "author": {
        "name": "genjix",
        "email": "fake@lol.u",
        "date": "2011-03-10T06:04:17Z"
      },
      "committer": {
        "name": "genjix",
        "email": "fake@lol.u",
        "date": "2011-03-10T06:04:17Z"
      },
      "message": "was doing strError.empty() instead of !strError.empty()",
      "tree": {
        "sha": "68f99d821963ee3202d87f74f60027c7623aee21",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/68f99d821963ee3202d87f74f60027c7623aee21"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0e760bbebc93a04b1127bfb7b6434496584622b2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0e760bbebc93a04b1127bfb7b6434496584622b2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0e760bbebc93a04b1127bfb7b6434496584622b2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0e760bbebc93a04b1127bfb7b6434496584622b2/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "c38817be535fde2791ea026c9110dac2d338ec33",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c38817be535fde2791ea026c9110dac2d338ec33",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c38817be535fde2791ea026c9110dac2d338ec33"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "13d417f8c439e0d8e2960ce22e96ba0f2f2896ae",
        "filename": "rpc.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e760bbebc93a04b1127bfb7b6434496584622b2/rpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e760bbebc93a04b1127bfb7b6434496584622b2/rpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/rpc.cpp?ref=0e760bbebc93a04b1127bfb7b6434496584622b2",
        "patch": "@@ -510,7 +510,7 @@ const string CollectAddress(const string& strIn)\n     // We established that the input string is not a BTC address, so we use it as a handle now.\n     string strHandle = strIn, strAddy;\n     string strError = ns.FetchAddress(strHandle, strAddy);\n-    if (strError.empty())\n+    if (!strError.empty())\n         throw JSONRPCError(-4, strError);\n \n     const Object& request(CheckMaybeThrow(strAddy));\n@@ -535,7 +535,7 @@ Value rpc_send(const Array& params, bool fHelp)\n     // Do the send\n     CWalletTx wtx;\n     string strError = SendMoneyToBitcoinAddress(strAddy, nAmount, wtx);\n-    if (strError.empty())\n+    if (!strError.empty())\n         throw JSONRPCError(-4, strError);\n     return wtx.GetHash().GetHex();\n }\n@@ -557,7 +557,7 @@ Value updatens(const Array& params, bool fHelp)\n \n     NameResolutionService ns;\n     string strError = ns.UpdateAddress(strHandle, strPass, strAddy, strStatus);\n-    if (strError.empty())\n+    if (!strError.empty())\n         throw JSONRPCError(-4, strError);\n \n     // Throw if strStatus JSON contains an error key\n@@ -575,7 +575,7 @@ Value setnspassword(const Array& params, bool fHelp)\n     NameResolutionService ns;\n     string strHandle = params[0].get_str(), strPass = params[1].get_str(), strNewPass = params[2].get_str(), strStatus;\n     string strError = ns.ChangePassword(strHandle, strPass, strNewPass, strStatus);\n-    if (strError.empty())\n+    if (!strError.empty())\n         throw JSONRPCError(-4, strError);\n \n     // Throw if strStatus JSON contains an error key"
      }
    ]
  },
  {
    "sha": "cbae580f86dd8543030ad8c4f7952405860dc6b2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjYmFlNTgwZjg2ZGQ4NTQzMDMwYWQ4YzRmNzk1MjQwNTg2MGRjNmIy",
    "commit": {
      "author": {
        "name": "genjix",
        "email": "fake@lol.u",
        "date": "2011-03-10T06:27:43Z"
      },
      "committer": {
        "name": "genjix",
        "email": "fake@lol.u",
        "date": "2011-03-10T06:27:43Z"
      },
      "message": "typo for db filename",
      "tree": {
        "sha": "b86f0666357446f3f1ae72ae52e505162fb08ad4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b86f0666357446f3f1ae72ae52e505162fb08ad4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cbae580f86dd8543030ad8c4f7952405860dc6b2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cbae580f86dd8543030ad8c4f7952405860dc6b2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cbae580f86dd8543030ad8c4f7952405860dc6b2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cbae580f86dd8543030ad8c4f7952405860dc6b2/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "0e760bbebc93a04b1127bfb7b6434496584622b2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0e760bbebc93a04b1127bfb7b6434496584622b2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0e760bbebc93a04b1127bfb7b6434496584622b2"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "15697d92edc2aaf606ed8238eb4193aabfc9797d",
        "filename": "contrib/ns/db.php",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cbae580f86dd8543030ad8c4f7952405860dc6b2/contrib/ns/db.php",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cbae580f86dd8543030ad8c4f7952405860dc6b2/contrib/ns/db.php",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/ns/db.php?ref=cbae580f86dd8543030ad8c4f7952405860dc6b2",
        "patch": "@@ -2,7 +2,7 @@\n # File should contain these lines:\n #   mysql_connect('localhost', 'login', 'oass') or die(mysql_error());\n #   mysql_select_db('database_name') or die(mysql_error());\n-require '/var/db.bitnomo.inc';\n+require '/var/db.bitnom.inc';\n \n function fail($error)\n {"
      }
    ]
  },
  {
    "sha": "3bafd7f9e57da05bd2b30ccb85e935b706fdf811",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozYmFmZDdmOWU1N2RhMDViZDJiMzBjY2I4NWU5MzViNzA2ZmRmODEx",
    "commit": {
      "author": {
        "name": "genjix",
        "email": "fake@lol.u",
        "date": "2011-03-10T15:19:12Z"
      },
      "committer": {
        "name": "genjix",
        "email": "fake@lol.u",
        "date": "2011-03-10T15:19:12Z"
      },
      "message": "tcatm's suggestion for servers that might implement the protocol but not in PHP.",
      "tree": {
        "sha": "ed1eeb0f99ddbf0870e03fdc95129bf9dfb56e94",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ed1eeb0f99ddbf0870e03fdc95129bf9dfb56e94"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3bafd7f9e57da05bd2b30ccb85e935b706fdf811",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3bafd7f9e57da05bd2b30ccb85e935b706fdf811",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3bafd7f9e57da05bd2b30ccb85e935b706fdf811",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3bafd7f9e57da05bd2b30ccb85e935b706fdf811/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "cbae580f86dd8543030ad8c4f7952405860dc6b2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cbae580f86dd8543030ad8c4f7952405860dc6b2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cbae580f86dd8543030ad8c4f7952405860dc6b2"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 10,
      "deletions": 6
    },
    "files": [
      {
        "sha": "3d0228ef1e578d6f30672bdd8e5d9700b8dea6a4",
        "filename": "contrib/ns/getaddress/index.php",
        "status": "renamed",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3bafd7f9e57da05bd2b30ccb85e935b706fdf811/contrib/ns/getaddress/index.php",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3bafd7f9e57da05bd2b30ccb85e935b706fdf811/contrib/ns/getaddress/index.php",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/ns/getaddress/index.php?ref=3bafd7f9e57da05bd2b30ccb85e935b706fdf811",
        "patch": "@@ -3,7 +3,8 @@\n     die('{\"error\": \"No nickname received.\"}');\n }\n else {\n-    require 'db.php';\n+    require '../db.php';\n+    # nicknames are case insensitive to limit impersonation attacks\n     $nickname = strtolower(escapestr($_REQUEST['nickname']));\n \n     $query = \"SELECT address FROM lookup WHERE nickname='$nickname';\";",
        "previous_filename": "contrib/ns/getaddress.php"
      },
      {
        "sha": "b83f6258d6b61d3878f4443f39946286180c39b0",
        "filename": "contrib/ns/setaddress/index.php",
        "status": "renamed",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3bafd7f9e57da05bd2b30ccb85e935b706fdf811/contrib/ns/setaddress/index.php",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3bafd7f9e57da05bd2b30ccb85e935b706fdf811/contrib/ns/setaddress/index.php",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/ns/setaddress/index.php?ref=3bafd7f9e57da05bd2b30ccb85e935b706fdf811",
        "patch": "@@ -9,7 +9,8 @@\n     die('{\"error\": \"No address received\"}');\n }\n else {\n-    require 'db.php';\n+    require '../db.php';\n+    # nicknames are case insensitive to limit impersonation attacks\n     $nickname = strtolower(escapestr($_POST['nickname']));\n     $address = $_POST['address'];\n     # bitcoin address can only be alphanumeric so no need to strip them...",
        "previous_filename": "contrib/ns/setaddress.php"
      },
      {
        "sha": "d6e5f5f307e16232bd0493542b4276e6551851c7",
        "filename": "contrib/ns/setnewpassword/index.php",
        "status": "renamed",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3bafd7f9e57da05bd2b30ccb85e935b706fdf811/contrib/ns/setnewpassword/index.php",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3bafd7f9e57da05bd2b30ccb85e935b706fdf811/contrib/ns/setnewpassword/index.php",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/ns/setnewpassword/index.php?ref=3bafd7f9e57da05bd2b30ccb85e935b706fdf811",
        "patch": "@@ -9,14 +9,16 @@\n     die('{\"error\": \"No new password received\"}');\n }\n else {\n-    require 'db.php';\n+    require '../db.php';\n+    # nicknames are case insensitive to limit impersonation attacks\n     $nickname = strtolower(escapestr($_POST['nickname']));\n     $oldpasshash = hash('sha512', $_POST['password']);\n     $newpasshash = hash('sha512', $_POST['newpassword']);\n \n     $query = \"SELECT passhash FROM lookup WHERE nickname='$nickname';\";\n     $result = do_query($query);\n     if (has_results($result)) {\n+        # found a user by that name\n         $row = mysql_fetch_array($result);\n         if (isset($row['passhash']) && $oldpasshash == $row['passhash']) {\n             $query = \"UPDATE lookup SET passhash='$newpasshash' WHERE nickname='$nickname' AND passhash='$oldpasshash';\";",
        "previous_filename": "contrib/ns/setpassword.php"
      },
      {
        "sha": "1047c771018f10e5035dfb9035eda5e40a10832d",
        "filename": "resolv.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3bafd7f9e57da05bd2b30ccb85e935b706fdf811/resolv.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3bafd7f9e57da05bd2b30ccb85e935b706fdf811/resolv.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/resolv.cpp?ref=3bafd7f9e57da05bd2b30ccb85e935b706fdf811",
        "patch": "@@ -61,7 +61,7 @@ string NameResolutionService::FetchAddress(const string& strHandle, string& strA\n     if (!pszEncodedNick)\n         return \"Unable to encode nickname.\";\n     // construct url for GET request\n-    string strRequestUrl = strDomain + \"/getaddress.php?nickname=\" + pszEncodedNick;\n+    string strRequestUrl = strDomain + \"/getaddress/?nickname=\" + pszEncodedNick;\n     // Pass URL to CURL\n     curl_easy_setopt(curl, CURLOPT_URL, strRequestUrl.c_str());  \n     if (!Perform())\n@@ -80,7 +80,7 @@ string NameResolutionService::MakeRequest(const string& strHandle, const string&\n     string strNickname, strDomain;\n     ExplodeHandle(strHandle, strNickname, strDomain);\n     // Construct URL for POST request\n-    string strRequestUrl = strDomain + \"/set\" + strReqname + \".php\";\n+    string strRequestUrl = strDomain + \"/set\" + strReqname;\n     // Pass URL to CURL\n     curl_easy_setopt(curl, CURLOPT_URL, strRequestUrl.c_str());  \n     // Create our variables for POST\n@@ -107,7 +107,7 @@ string NameResolutionService::UpdateAddress(const string& strHandle, const strin\n }\n string NameResolutionService::ChangePassword(const string& strHandle, const string& strPassword, const string& strNewPassword, string& strStatus)\n {\n-    return MakeRequest(strHandle, strPassword, \"password\", strNewPassword, strStatus);\n+    return MakeRequest(strHandle, strPassword, \"newpassword\", strNewPassword, strStatus);\n }\n \n NameResolutionService::PostVariables::PostVariables()"
      }
    ]
  },
  {
    "sha": "0d139cc28b671d4b07422a09ace05ec1ff0b0b18",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowZDEzOWNjMjhiNjcxZDRiMDc0MjJhMDlhY2UwNWVjMWZmMGIwYjE4",
    "commit": {
      "author": {
        "name": "genjix",
        "email": "fake@lol.u",
        "date": "2011-03-10T15:29:15Z"
      },
      "committer": {
        "name": "genjix",
        "email": "fake@lol.u",
        "date": "2011-03-10T15:29:15Z"
      },
      "message": "fixed bug where URL needs an ending /",
      "tree": {
        "sha": "4490f259092c66eb13052558bb31dabb6b13ca5d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4490f259092c66eb13052558bb31dabb6b13ca5d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0d139cc28b671d4b07422a09ace05ec1ff0b0b18",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0d139cc28b671d4b07422a09ace05ec1ff0b0b18",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0d139cc28b671d4b07422a09ace05ec1ff0b0b18",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0d139cc28b671d4b07422a09ace05ec1ff0b0b18/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "3bafd7f9e57da05bd2b30ccb85e935b706fdf811",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3bafd7f9e57da05bd2b30ccb85e935b706fdf811",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3bafd7f9e57da05bd2b30ccb85e935b706fdf811"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 4,
      "deletions": 5
    },
    "files": [
      {
        "sha": "80b61e6c2fc6469624b29addd45a1ea8de08011d",
        "filename": "contrib/ns/setaddress/index.php",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0d139cc28b671d4b07422a09ace05ec1ff0b0b18/contrib/ns/setaddress/index.php",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0d139cc28b671d4b07422a09ace05ec1ff0b0b18/contrib/ns/setaddress/index.php",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/ns/setaddress/index.php?ref=0d139cc28b671d4b07422a09ace05ec1ff0b0b18",
        "patch": "@@ -33,7 +33,7 @@\n     else {\n         $query = \"INSERT INTO lookup(nickname, passhash, address) VALUES ('$nickname', '$passhash', '$address');\";\n         do_query($query);\n-        echo '{\"status\": \"New user created.\"}';\n+        echo '{\"status\": \"New user created.\", \"address\": \"'.$address.'\"}';\n     }\n }\n ?>"
      },
      {
        "sha": "081a36e07476528b86ca9fe1ab323d13c100687b",
        "filename": "resolv.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 4,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0d139cc28b671d4b07422a09ace05ec1ff0b0b18/resolv.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0d139cc28b671d4b07422a09ace05ec1ff0b0b18/resolv.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/resolv.cpp?ref=0d139cc28b671d4b07422a09ace05ec1ff0b0b18",
        "patch": "@@ -80,18 +80,17 @@ string NameResolutionService::MakeRequest(const string& strHandle, const string&\n     string strNickname, strDomain;\n     ExplodeHandle(strHandle, strNickname, strDomain);\n     // Construct URL for POST request\n-    string strRequestUrl = strDomain + \"/set\" + strReqname;\n+    string strRequestUrl = strDomain + \"/set\" + strReqname + \"/\";\n     // Pass URL to CURL\n     curl_easy_setopt(curl, CURLOPT_URL, strRequestUrl.c_str());  \n     // Create our variables for POST\n     PostVariables PostRequest;\n     // This method is used by:\n     //    setaddress  which takes a value called address\n-    //    setpassword which takes a value called newpassword\n-    const string& strKeyname = (strReqname == \"address\") ? \"address\" : \"newpassword\";\n+    //    setnewpassword which takes a value called newpassword\n     if (!PostRequest.Add(\"nickname\", strNickname) ||\n         !PostRequest.Add(\"password\", strPassword) ||\n-        !PostRequest.Add(strKeyname, strArgument))\n+        !PostRequest.Add(strReqname, strArgument))\n         return \"Internal error constructing POST request.\";\n     curl_easy_setopt(curl, CURLOPT_POST, 1);\n     curl_easy_setopt(curl, CURLOPT_HTTPPOST, PostRequest()); "
      }
    ]
  },
  {
    "sha": "9d069f6c6e06bff39bbac7a292f24b167ee683cd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ZDA2OWY2YzZlMDZiZmYzOWJiYWM3YTI5MmYyNGIxNjdlZTY4M2Nk",
    "commit": {
      "author": {
        "name": "genjix",
        "email": "fake@lol.u",
        "date": "2011-03-12T06:11:49Z"
      },
      "committer": {
        "name": "genjix",
        "email": "fake@lol.u",
        "date": "2011-03-12T06:11:49Z"
      },
      "message": "removed redundant double check.",
      "tree": {
        "sha": "7404fc051d7f02f3bf0caa9150d0b6eb15369ae6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7404fc051d7f02f3bf0caa9150d0b6eb15369ae6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9d069f6c6e06bff39bbac7a292f24b167ee683cd",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9d069f6c6e06bff39bbac7a292f24b167ee683cd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9d069f6c6e06bff39bbac7a292f24b167ee683cd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9d069f6c6e06bff39bbac7a292f24b167ee683cd/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "131686498e21e2ece74ed36b38430413b7741c60",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/131686498e21e2ece74ed36b38430413b7741c60",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/131686498e21e2ece74ed36b38430413b7741c60"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 1,
      "deletions": 4
    },
    "files": [
      {
        "sha": "3a4dcee3a7727127b857cb80adc46951c7001792",
        "filename": "rpc.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 4,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9d069f6c6e06bff39bbac7a292f24b167ee683cd/rpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9d069f6c6e06bff39bbac7a292f24b167ee683cd/rpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/rpc.cpp?ref=9d069f6c6e06bff39bbac7a292f24b167ee683cd",
        "patch": "@@ -62,10 +62,7 @@ void PrintConsole(const char* format, ...)\n \n int64 AmountFromValue(const Value& value)\n {\n-    double dAmount = value.get_real();\n-    if (dAmount <= 0.0 || dAmount > 21000000.0)\n-        throw JSONRPCError(-3, \"Invalid amount\");\n-    int64 nAmount = roundint64(dAmount * COIN);\n+    int64 nAmount = roundint64(value.get_real() * COIN);\n     if (!MoneyRange(nAmount))\n         throw JSONRPCError(-3, \"Invalid amount\");\n     return nAmount;"
      }
    ]
  },
  {
    "sha": "3bcd6790a9a7ce5342b9d59e6075915c0c163148",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozYmNkNjc5MGE5YTdjZTUzNDJiOWQ1OWU2MDc1OTE1YzBjMTYzMTQ4",
    "commit": {
      "author": {
        "name": "genjix",
        "email": "fake@lol.u",
        "date": "2011-03-27T09:11:55Z"
      },
      "committer": {
        "name": "genjix",
        "email": "fake@lol.u",
        "date": "2011-03-27T09:11:55Z"
      },
      "message": "Merge branch 'master' of git://github.com/bitcoin/bitcoin",
      "tree": {
        "sha": "66d3f65b80b81a18b0a79b7252a4df5356971f3c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/66d3f65b80b81a18b0a79b7252a4df5356971f3c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3bcd6790a9a7ce5342b9d59e6075915c0c163148",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3bcd6790a9a7ce5342b9d59e6075915c0c163148",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3bcd6790a9a7ce5342b9d59e6075915c0c163148",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3bcd6790a9a7ce5342b9d59e6075915c0c163148/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "9d069f6c6e06bff39bbac7a292f24b167ee683cd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9d069f6c6e06bff39bbac7a292f24b167ee683cd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9d069f6c6e06bff39bbac7a292f24b167ee683cd"
      },
      {
        "sha": "454bc86479a387893604cd662aae994d37699672",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/454bc86479a387893604cd662aae994d37699672",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/454bc86479a387893604cd662aae994d37699672"
      }
    ],
    "stats": {
      "total": 1379,
      "additions": 885,
      "deletions": 494
    },
    "files": [
      {
        "sha": "92385e50b2b23bbdea7364cc9e54a862c56b87a8",
        "filename": "contrib/gitian.yml",
        "status": "added",
        "additions": 37,
        "deletions": 0,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3bcd6790a9a7ce5342b9d59e6075915c0c163148/contrib/gitian.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3bcd6790a9a7ce5342b9d59e6075915c0c163148/contrib/gitian.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian.yml?ref=3bcd6790a9a7ce5342b9d59e6075915c0c163148",
        "patch": "@@ -0,0 +1,37 @@\n+---\n+name: \"bitcoin\"\n+suites:\n+- \"lucid\"\n+architectures:\n+- \"i386\"\n+- \"amd64\"\n+packages: \n+- \"libdb4.8++-dev\"\n+- \"libxxf86vm-dev\"\n+- \"libgtk2.0-dev\"\n+- \"libboost-all-dev\"\n+- \"libssl-dev\"\n+- \"git-core\"\n+reference_datetime: \"2011-01-30 00:00:00\"\n+remotes:\n+- \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n+  \"dir\": \"bitcoin\"\n+files:\n+- \"wxWidgets-2.9.1.tar.bz2\"\n+script: |\n+  INSTDIR=\"$HOME/install\"\n+  export LIBRARY_PATH=\"$INSTDIR/lib\"\n+  tar xjf wxWidgets-2.9.1.tar.bz2\n+  cd wxWidgets-2.9.1\n+  ./configure --prefix=$INSTDIR --enable-monolithic --disable-shared\n+  perl -i -p -e \"s/__TIME__/\\\"$REFERENCE_TIME\\\"/;s/__DATE__/\\\"$REFERENCE_DATE\\\"/\" include/wx/chartype.h\n+  make $MAKEOPTS install\n+  cd ../bitcoin\n+  mkdir -p $OUTDIR/src\n+  cp -a . $OUTDIR/src\n+  rm -rf $OUTDIR/src/.git\n+  mv $OUTDIR/src/locale $OUTDIR\n+  cp $OUTDIR/src/license.txt $OUTDIR\n+  make -f makefile.unix $MAKEOPTS  WXLIBS=\"-Wl,-Bstatic -l wx_gtk2u-2.9 -Wl,-Bdynamic -l gtk-x11-2.0 -l SM -l Xxf86vm\" INCLUDEPATHS=\"`$INSTDIR/bin/wx-config --cflags`\" bitcoin bitcoind\n+  mkdir -p $OUTDIR/bin/$GBUILD_BITS\n+  cp bitcoin bitcoind $OUTDIR/bin/$GBUILD_BITS"
      },
      {
        "sha": "8c70ba2eba52b90b10b029887ff2087863c840b5",
        "filename": "init.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 1,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3bcd6790a9a7ce5342b9d59e6075915c0c163148/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3bcd6790a9a7ce5342b9d59e6075915c0c163148/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/init.cpp?ref=3bcd6790a9a7ce5342b9d59e6075915c0c163148",
        "patch": "@@ -120,6 +120,8 @@ bool AppInit2(int argc, char* argv[])\n     sigemptyset(&sa.sa_mask);\n     sa.sa_flags = 0;\n     sigaction(SIGTERM, &sa, NULL);\n+    sigaction(SIGINT, &sa, NULL);\n+    sigaction(SIGHUP, &sa, NULL);\n #endif\n \n     //\n@@ -211,8 +213,8 @@ bool AppInit2(int argc, char* argv[])\n     fPrintToDebugger = GetBoolArg(\"-printtodebugger\");\n \n     fTestNet = GetBoolArg(\"-testnet\");\n-    \n     fNoListen = GetBoolArg(\"-nolisten\");\n+    fLogTimestamps = GetBoolArg(\"-logtimestamps\");\n \n     for (int i = 1; i < argc; i++)\n         if (!IsSwitchChar(argv[i][0]))\n@@ -236,6 +238,10 @@ bool AppInit2(int argc, char* argv[])\n         }\n         if (pid > 0)\n             return true;\n+\n+        pid_t sid = setsid();\n+        if (sid < 0)\n+            fprintf(stderr, \"Error: setsid() returned %d errno %d\\n\", sid, errno);\n     }\n #endif\n \n@@ -429,6 +435,9 @@ bool AppInit2(int argc, char* argv[])\n         }\n     }\n \n+    if (mapArgs.count(\"-dnsseed\"))\n+        DNSAddressSeed();\n+\n     if (mapArgs.count(\"-paytxfee\"))\n     {\n         if (!ParseMoney(mapArgs[\"-paytxfee\"], nTransactionFee))\n@@ -463,6 +472,10 @@ bool AppInit2(int argc, char* argv[])\n     if (fFirstRun)\n         SetStartOnSystemStartup(true);\n #endif\n+    \n+    if (fDaemon)\n+        while (!fShutdown)\n+            Sleep(5000);\n \n     return true;\n }"
      },
      {
        "sha": "0677b6b5ca68014c23d52f50fea1ac2c14cb602c",
        "filename": "locale/es/LC_MESSAGES/bitcoin.mo",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3bcd6790a9a7ce5342b9d59e6075915c0c163148/locale/es/LC_MESSAGES/bitcoin.mo",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3bcd6790a9a7ce5342b9d59e6075915c0c163148/locale/es/LC_MESSAGES/bitcoin.mo",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/locale/es/LC_MESSAGES/bitcoin.mo?ref=3bcd6790a9a7ce5342b9d59e6075915c0c163148"
      },
      {
        "sha": "d5ad2ee91fa4c43c6205a160e185050c5cbb95bd",
        "filename": "locale/es/LC_MESSAGES/bitcoin.po",
        "status": "modified",
        "additions": 13,
        "deletions": 14,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3bcd6790a9a7ce5342b9d59e6075915c0c163148/locale/es/LC_MESSAGES/bitcoin.po",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3bcd6790a9a7ce5342b9d59e6075915c0c163148/locale/es/LC_MESSAGES/bitcoin.po",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/locale/es/LC_MESSAGES/bitcoin.po?ref=3bcd6790a9a7ce5342b9d59e6075915c0c163148",
        "patch": "@@ -3,8 +3,8 @@ msgstr \"\"\n \"Project-Id-Version: \\n\"\n \"Report-Msgid-Bugs-To: \\n\"\n \"POT-Creation-Date: 2010-05-26 22:02-0000\\n\"\n-\"PO-Revision-Date: 2010-07-15 11:07+0100\\n\"\n-\"Last-Translator: milkiway\\n\"\n+\"PO-Revision-Date: 2011-03-16 20:55+0100\\n\"\n+\"Last-Translator: Santiago M. Mola <coldwind@coldwind.org>\\n\"\n \"Language-Team: \\n\"\n \"MIME-Version: 1.0\\n\"\n \"Content-Type: text/plain; charset=UTF-8\\n\"\n@@ -15,24 +15,23 @@ msgstr \"\"\n \n #: ../../../init.cpp:174\n msgid \"Cannot write autostart/bitcoin.desktop file\"\n-msgstr \"\"\n+msgstr \"No se puede escribir el fichero autostart/bitcoin.desktop\"\n \n #: ../../../init.cpp:388\n-#, fuzzy\n msgid \"Usage:\"\n-msgstr \"\"\n+msgstr \"Uso:\"\n \n #: ../../../init.cpp:390\n msgid \"Send command to bitcoin running with -server or -daemon\\n\"\n-msgstr \"\"\n+msgstr \"Enviar comando a bitcoin corriendo con -server o -daemon\\n\"\n \n #: ../../../init.cpp:391\n msgid \"Get help for a command\\n\"\n-msgstr \"\"\n+msgstr \"Recibir ayuda para un comando\\n\"\n \n #: ../../../init.cpp:392\n msgid \"List commands\\n\"\n-msgstr \"\"\n+msgstr \"Lista de comandos\\n\"\n \n #: ../../../init.cpp:393\n msgid \"Options:\\n\"\n@@ -68,11 +67,11 @@ msgstr \"Conectar solo al nodo especificado\\n\"\n \n #: ../../../init.cpp:401\n msgid \"Accept command line and JSON-RPC commands\\n\"\n-msgstr \"\"\n+msgstr \"Aceptar comandos por linea de comandos y JSON-RPC\\n\"\n \n #: ../../../init.cpp:402\n msgid \"Run in the background as a daemon and accept commands\\n\"\n-msgstr \"\"\n+msgstr \"Correr en el fondo como demonio y aceptar comandos\\n\"\n \n #: ../../../init.cpp:403\n msgid \"This help message\\n\"\n@@ -293,11 +292,11 @@ msgstr \"<b>Para:</b> \"\n \n #: ../../../ui.cpp:1247\n msgid \" (yours, label: \"\n-msgstr \"\"\n+msgstr \"(suya, etiqueta: \"\n \n #: ../../../ui.cpp:1249\n msgid \" (yours)\"\n-msgstr \"\"\n+msgstr \"(suya)\"\n \n #: ../../../ui.cpp:1286\n #: ../../../ui.cpp:1298\n@@ -340,9 +339,8 @@ msgid \"Main\"\n msgstr \"Principal\"\n \n #: ../../../ui.cpp:1447\n-#, fuzzy\n msgid \"&Start Bitcoin on window system startup\"\n-msgstr \"&Arrancar Bitcoin al arrancar el sistema\"\n+msgstr \"&Arrancar Bitcoin al arrancar el sistema de ventanas\"\n \n #: ../../../ui.cpp:1454\n msgid \"&Minimize on close\"\n@@ -847,3 +845,4 @@ msgstr \"Sus direcciones Bitcoin\"\n \n #~ msgid \"Usage: bitcoin [options]\"\n #~ msgstr \"Uso: bitcoin [opciones]\"\n+"
      },
      {
        "sha": "8b1e6a50f6863172e58e2d2eae44b7c07b25b11c",
        "filename": "locale/nl/LC_MESSAGES/bitcoin.mo",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3bcd6790a9a7ce5342b9d59e6075915c0c163148/locale/nl/LC_MESSAGES/bitcoin.mo",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3bcd6790a9a7ce5342b9d59e6075915c0c163148/locale/nl/LC_MESSAGES/bitcoin.mo",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/locale/nl/LC_MESSAGES/bitcoin.mo?ref=3bcd6790a9a7ce5342b9d59e6075915c0c163148"
      },
      {
        "sha": "f44b94cc5095871a81a8f9950f62ef76100f4b5a",
        "filename": "locale/nl/LC_MESSAGES/bitcoin.po",
        "status": "modified",
        "additions": 88,
        "deletions": 88,
        "changes": 176,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3bcd6790a9a7ce5342b9d59e6075915c0c163148/locale/nl/LC_MESSAGES/bitcoin.po",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3bcd6790a9a7ce5342b9d59e6075915c0c163148/locale/nl/LC_MESSAGES/bitcoin.po",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/locale/nl/LC_MESSAGES/bitcoin.po?ref=3bcd6790a9a7ce5342b9d59e6075915c0c163148",
        "patch": "@@ -15,7 +15,7 @@ msgstr \"\"\n \n #: ../../../init.cpp:342\n msgid \"Usage: bitcoin [options]\"\n-msgstr \"\"\n+msgstr \"Commandoregel: bitcoin [opties]\"\n \n #: ../../../init.cpp:343\n msgid \"Options:\\n\"\n@@ -31,27 +31,27 @@ msgstr \"Genereer geen coins\\n\"\n \n #: ../../../init.cpp:346\n msgid \"Start minimized\\n\"\n-msgstr \"Start geminimalizeerd\\n\"\n+msgstr \"Geminimaliseerd starten\\n\"\n \n #: ../../../init.cpp:347\n msgid \"Specify data directory\\n\"\n-msgstr \"Specificeer data map\\n\"\n+msgstr \"Stel datamap in\\n\"\n \n #: ../../../init.cpp:348\n msgid \"Connect through socks4 proxy\\n\"\n msgstr \"Verbind via socks4 proxy\\n\"\n \n #: ../../../init.cpp:349\n msgid \"Add a node to connect to\\n\"\n-msgstr \"Voeg een node om naar te verbinden toe\\n\"\n+msgstr \"Voeg een node toe om mee te verbinden\\n\"\n \n #: ../../../init.cpp:350\n msgid \"Connect only to the specified node\\n\"\n-msgstr \"Verbind alleen naar deze node\\n\"\n+msgstr \"Verbind alleen met deze node\\n\"\n \n #: ../../../init.cpp:351\n msgid \"This help message\\n\"\n-msgstr \"\"\n+msgstr \"Dit helpbericht\\n\"\n \n #: ../../../init.cpp:455\n msgid \"Error loading addr.dat      \\n\"\n@@ -71,20 +71,20 @@ msgstr \"Foutief -proxy adres\"\n \n #: ../../../init.cpp:629\n msgid \"Program has crashed and will terminate.  \"\n-msgstr \"Programma is gecrashed en word afgesloten.  \"\n+msgstr \"Het programma is gecrasht en wordt afgesloten.  \"\n \n #: ../../../main.cpp:1465\n msgid \"Warning: Disk space is low  \"\n-msgstr \"Waarschuwng: Gebrek aan schijf ruimte  \"\n+msgstr \"Waarschuwing: Weinig schijfruimte over  \"\n \n #: ../../../main.cpp:2994\n #, c-format\n msgid \"Error: This is an oversized transaction that requires a transaction fee of %s  \"\n-msgstr \"Fout: Dit is een te grote transactie die een fooi nodig heeft van %s  \"\n+msgstr \"Fout: Dit is een te grote transactie, die een fooi vereist van %s  \"\n \n #: ../../../main.cpp:2996\n msgid \"Error: Transaction creation failed  \"\n-msgstr \"Fout: Transactie aanmaak gefaald  \"\n+msgstr \"Fout: Aanmaken van transactie mislukt  \"\n \n #: ../../../main.cpp:3001\n #: ../../../ui.cpp:1761\n@@ -96,26 +96,26 @@ msgstr \"Versturen...\"\n \n #: ../../../main.cpp:3005\n msgid \"Error: The transaction was rejected.  This might happen if some of the coins in your wallet were already spent, such as if you used a copy of wallet.dat and coins were spent in the copy but not marked as spent here.\"\n-msgstr \"Fout: De transactie was afgekeurd.  Dit kan komen als bepaalde coins in uw Portefeuille al zijn uitgegeven.  Dit kan komen doordat u wallet.dat heeft gekopieerd en wat coins heeft uitgegeven en niet terug gekopieerd heeft.\"\n+msgstr \"Fout: De transactie is afgekeurd.  Dit kan gebeuren als bepaalde coins in je Portefeuille al zijn uitgegeven. Dit kan veroorzaakt worden doordat je een kopie van wallet.dat gebruikt hebt en enkel daar je uitgave geregistreerd is.\"\n \n #: ../../../main.cpp:3017\n msgid \"Invalid amount\"\n-msgstr \"Foutief aantal\"\n+msgstr \"Foutieve hoeveelheid\"\n \n #: ../../../main.cpp:3019\n #: ../../../ui.cpp:1971\n #: ../../../ui.cpp:2038\n msgid \"Insufficient funds\"\n-msgstr \"Onvoldoende coins\"\n+msgstr \"Onvoldoende saldo\"\n \n #: ../../../main.cpp:3024\n msgid \"Invalid bitcoin address\"\n-msgstr \"Foutief bitcoin adres\"\n+msgstr \"Foutief bitcoin-adres\"\n \n #: ../../../ui.cpp:189\n #, c-format\n msgid \"This transaction is over the size limit.  You can still send it for a fee of %s, which goes to the nodes that process your transaction and helps to support the network.  Do you want to pay the fee?\"\n-msgstr \"Deze transactie is over het limiet.  U kunt nog door gaan met de transactie door een fooi te betalen van %s, deze word betaald aan de node die uw tranactie verwerkt.  Wilt u de fooi betalen?\"\n+msgstr \"Deze transactie overschrijdt de limiet.  Om de transactie alsnog te verwerken kun je een fooi betalen van %s. Deze zal betaald worden aan de node die uw transactie verwerkt. Wil je doorgaan en deze fooi betalen?\"\n \n #: ../../../ui.cpp:285\n msgid \"Status\"\n@@ -131,16 +131,16 @@ msgstr \"Beschrijving\"\n \n #: ../../../ui.cpp:288\n msgid \"Debit\"\n-msgstr \"\"\n+msgstr \"Debet\"\n \n #: ../../../ui.cpp:289\n msgid \"Credit\"\n-msgstr \"\"\n+msgstr \"Credit\"\n \n #: ../../../ui.cpp:489\n #, c-format\n msgid \"Open for %d blocks\"\n-msgstr \"Open voor %d blocks\"\n+msgstr \"Open gedurende %d blokken\"\n \n #: ../../../ui.cpp:491\n #, c-format\n@@ -169,7 +169,7 @@ msgstr \"Gegenereerd\"\n #: ../../../ui.cpp:592\n #, c-format\n msgid \"Generated (%s matures in %d more blocks)\"\n-msgstr \"Gegenereerd (%s word volwassen in %d blokken)\"\n+msgstr \"Gegenereerd (%s wordt volwassen over %d blokken)\"\n \n #: ../../../ui.cpp:596\n msgid \"Generated - Warning: This block was not received by any other nodes and will probably not be accepted!\"\n@@ -185,19 +185,19 @@ msgstr \"Van: \"\n \n #: ../../../ui.cpp:634\n msgid \"Received with: \"\n-msgstr \"Ontvangen met: \"\n+msgstr \"Ontvangen op: \"\n \n #: ../../../ui.cpp:676\n msgid \"Payment to yourself\"\n-msgstr \"Betaling naar u zelf\"\n+msgstr \"Betaling naar uzelf\"\n \n #: ../../../ui.cpp:713\n msgid \"To: \"\n msgstr \"Naar: \"\n \n #: ../../../ui.cpp:1009\n msgid \"    Generating\"\n-msgstr \"    Genereert\"\n+msgstr \"    Genereren...\"\n \n #: ../../../ui.cpp:1011\n msgid \"(not connected)\"\n@@ -211,7 +211,7 @@ msgstr \"     %d verbindingen     %d blokken     %d transacties\"\n #: ../../../ui.cpp:1123\n #: ../../../ui.cpp:2351\n msgid \"New Receiving Address\"\n-msgstr \"Nieuw Ontvangings Adres\"\n+msgstr \"Nieuw Ontvangstadres\"\n \n #: ../../../ui.cpp:1124\n #: ../../../ui.cpp:2352\n@@ -220,7 +220,7 @@ msgid \"\"\n \"\\n\"\n \"Label\"\n msgstr \"\"\n-\"Het is goed beleid om een nieuw adres voor elke betaling te hebben.\\n\"\n+\"Het is een goede gewoonte om voor iedere betaling die je ontvangt een nieuw adres aan te maken.\\n\"\n \"\\n\"\n \"Label\"\n \n@@ -267,56 +267,56 @@ msgstr \"<b>Naar:</b> \"\n \n #: ../../../ui.cpp:1242\n msgid \" (yours, label: \"\n-msgstr \"\"\n+msgstr \" (van jou, label: \"\n \n #: ../../../ui.cpp:1244\n #, fuzzy\n msgid \" (yours)\"\n-msgstr \"\"\n+msgstr \" (van jou)\"\n \n #: ../../../ui.cpp:1281\n #: ../../../ui.cpp:1293\n #: ../../../ui.cpp:1356\n msgid \"<b>Credit:</b> \"\n-msgstr \"\"\n+msgstr \"<b>Credit:</b>\"\n \n #: ../../../ui.cpp:1283\n #, c-format\n msgid \"(%s matures in %d more blocks)\"\n-msgstr \"(%s word volwassen in %d blokken)\"\n+msgstr \"(%s wordt volwassen over %d blokken)\"\n \n #: ../../../ui.cpp:1285\n msgid \"(not accepted)\"\n-msgstr \"(niet geaccepteerd\"\n+msgstr \"(niet geaccepteerd)\"\n \n #: ../../../ui.cpp:1330\n #: ../../../ui.cpp:1353\n msgid \"<b>Debit:</b> \"\n-msgstr \"\"\n+msgstr \"<b>Debet:</b>\"\n \n #: ../../../ui.cpp:1344\n msgid \"<b>Transaction fee:</b> \"\n-msgstr \"<b>Transactie fooi:</b> \"\n+msgstr \"<b>Transactiefooi:</b> \"\n \n #: ../../../ui.cpp:1360\n msgid \"<b>Net amount:</b> \"\n-msgstr \"<b>Netto bedrag:</b> \"\n+msgstr \"<b>Nettobedrag:</b> \"\n \n #: ../../../ui.cpp:1367\n msgid \"Message:\"\n msgstr \"Mededeling:\"\n \n #: ../../../ui.cpp:1370\n msgid \"Generated coins must wait 120 blocks before they can be spent.  When you generated this block, it was broadcast to the network to be added to the block chain.  If it fails to get into the chain, it will change to \\\"not accepted\\\" and not be spendable.  This may occasionally happen if another node generates a block within a few seconds of yours.\"\n-msgstr \"Gegenereerde coins moeten 120 blokken wachten voordat ze uitgegeven kunnen worden.  Wanneer je dit blok genereerde, werd het naar het netwerk gestuurd om opgenomen teworden in de rest van de blokken.  Als dit faalt, dan zal de dit veranderen in \\\"niet geaccepteerd\\\" en zal niet uitgeefbaar zijn. Dit kan soms gebeuren als een node ook een blok rond dezelfde periode genereerd.\"\n+msgstr \"Gegenereerde coins mogen pas na een wachttijd van 120 blokken uitgegeven worden. Op het moment dat dit blok gegenereerd werd, is het naar het netwerk verzonden om aan de blokkenreeks toegevoegd te worden. Als het niet succesvol in de blokkenreeks opgenomen kan worden verandert de status in \\\"niet geaccepteerd\\\" en kan het niet uitegegeven worden. Dit kan soms gebeuren als een andere node op ongeveer hetzelfde moment een blok genereert.\"\n \n #: ../../../ui.cpp:1437\n msgid \"Main\"\n-msgstr \"Hoofd\"\n+msgstr \"Algemeen\"\n \n #: ../../../ui.cpp:1442\n msgid \"&Minimize on close\"\n-msgstr \"&Minimalizeer bij sluiten\"\n+msgstr \"&Minimaliseer bij sluiten van het venster\"\n \n #: ../../../ui.cpp:1595\n #, c-format\n@@ -325,7 +325,7 @@ msgstr \"versie %s%s BETA\"\n \n #: ../../../ui.cpp:1681\n msgid \"Will appear as \\\"From: Unknown\\\"\"\n-msgstr \"Word vertoont als \\\"Van: Onbekend\\\"\"\n+msgstr \"Wordt weergegeven als \\\"Van: Onbekend\\\"\"\n \n #: ../../../ui.cpp:1681\n msgid \"n/a\"\n@@ -337,7 +337,7 @@ msgstr \"Onbekend\"\n \n #: ../../../ui.cpp:1682\n msgid \"Can't include a message when sending to a Bitcoin address\"\n-msgstr \"Kan geen mededeling versturen bij gebruik van Bitcoin adressen\"\n+msgstr \"Kan geen mededeling bijvoegen bij gebruik van bitcoin-adressen\"\n \n #: ../../../ui.cpp:1735\n msgid \"Error in amount  \"\n@@ -349,23 +349,23 @@ msgstr \"Fout in hoeveelheid  \"\n #: ../../../ui.cpp:1771\n #: ../../../uibase.cpp:61\n msgid \"Send Coins\"\n-msgstr \"Verstuur Coins\"\n+msgstr \"Verstuur coins\"\n \n #: ../../../ui.cpp:1740\n msgid \"Amount exceeds your balance  \"\n-msgstr \"Hoeveelheid hoger dan uw huidige balans  \"\n+msgstr \"Hoeveelheid overschrijdt uw huidige balans  \"\n \n #: ../../../ui.cpp:1745\n msgid \"Total exceeds your balance when the \"\n-msgstr \"Totaal groter dan uw huidige balans wanner de \"\n+msgstr \"Totaal overschrijdt uw huidige balans wanneer de \"\n \n #: ../../../ui.cpp:1745\n msgid \" transaction fee is included  \"\n-msgstr \" transactie fooi is bijgerekend  \"\n+msgstr \" transactiefooi is meegerekend  \"\n \n #: ../../../ui.cpp:1761\n msgid \"Payment sent  \"\n-msgstr \"Betaling verstuurd  \"\n+msgstr \"Betaling verzonden  \"\n \n #: ../../../ui.cpp:1771\n msgid \"Invalid address  \"\n@@ -374,7 +374,7 @@ msgstr \"Foutief adres  \"\n #: ../../../ui.cpp:1825\n #, c-format\n msgid \"Sending %s to %s\"\n-msgstr \"Verstuurd %s naar %s\"\n+msgstr \"%s versturen naar %s\"\n \n #: ../../../ui.cpp:1898\n #: ../../../ui.cpp:1931\n@@ -419,16 +419,16 @@ msgstr \"Foutief antwoord ontvangen\"\n \n #: ../../../ui.cpp:2034\n msgid \"Creating transaction...\"\n-msgstr \"Maakt transactie aan...\"\n+msgstr \"Transactie aanmaken...\"\n \n #: ../../../ui.cpp:2046\n #, c-format\n msgid \"This is an oversized transaction that requires a transaction fee of %s\"\n-msgstr \"Dit is een te grote transactie die een transactie fooi vereist van %s\"\n+msgstr \"Fout: Dit is een te grote transactie, die een fooi vereist van %s\"\n \n #: ../../../ui.cpp:2048\n msgid \"Transaction creation failed\"\n-msgstr \"Transactie aanmaak gefaald.\"\n+msgstr \"Aanmaken van transactie mislukt\"\n \n #: ../../../ui.cpp:2055\n msgid \"Transaction aborted\"\n@@ -440,11 +440,11 @@ msgstr \"Verbinding verloren, transactie geannuleerd\"\n \n #: ../../../ui.cpp:2079\n msgid \"Sending payment...\"\n-msgstr \"Versturen van betaling...\"\n+msgstr \"Betaling versturen...\"\n \n #: ../../../ui.cpp:2085\n msgid \"The transaction was rejected.  This might happen if some of the coins in your wallet were already spent, such as if you used a copy of wallet.dat and coins were spent in the copy but not marked as spent here.\"\n-msgstr \"De transactie was afgekeurd.  Dit kan komen als bepaalde coins in uw Portefeuille al zijn uitgegeven.  Dit kan komen doordat u wallet.dat heeft gekopieerd en wat coins heeft uitgegeven en niet terug gekopieerd heeft.\"\n+msgstr \"Fout: De transactie is afgekeurd.  Dit kan gebeuren als bepaalde coins in je Portefeuille al zijn uitgegeven. Dit kan veroorzaakt worden doordat je een kopie van wallet.dat gebruikt hebt en enkel daar je uitgave geregistreerd is.\"\n \n #: ../../../ui.cpp:2092\n msgid \"Waiting for confirmation...\"\n@@ -456,13 +456,13 @@ msgid \"\"\n \"The transaction is recorded and will credit to the recipient,\\n\"\n \"but the comment information will be blank.\"\n msgstr \"\"\n-\"De betaling was verstuurd, maar de ontvanger kon het niet verifieeren.\\n\"\n-\"De transactie is opgenomen en word uitbetaald aan de ontvanger,\\n\"\n-\"maar de mededeling blijft blank bij de ontanger.\"\n+\"De betaling is verstuurd, maar de ontvanger kon hem niet verifi\u00ebren.\\n\"\n+\"De transactie is opgenomen en wordt uitbetaald aan de ontvanger,\\n\"\n+\"maar het mededelings-veld blijft blanco.\"\n \n #: ../../../ui.cpp:2119\n msgid \"Payment was sent, but an invalid response was received\"\n-msgstr \"Betaling was verstuurd, maar een foutief antword was ontvangen.\"\n+msgstr \"Betaling is verstuurd, maar een foutief antword is ontvangen.\"\n \n #: ../../../ui.cpp:2125\n msgid \"Payment completed\"\n@@ -488,33 +488,33 @@ msgstr \"Label\"\n #: ../../../ui.cpp:2160\n #: ../../../uibase.cpp:908\n msgid \"Bitcoin Address\"\n-msgstr \"Bitcoin Adres\"\n+msgstr \"Bitcoin-adres\"\n \n #: ../../../ui.cpp:2284\n msgid \"This is one of your own addresses for receiving payments and cannot be entered in the address book.  \"\n-msgstr \"Dit is een van uw eigen adressen voor het ontvangen van betalingen en can niet worden toegevoegd aan uw adressen boek.  \"\n+msgstr \"Dit is een van uw eigen adressen voor het ontvangen van betalingen, en kan niet worden toegevoegd aan uw adresboek.  \"\n \n #: ../../../ui.cpp:2302\n #: ../../../ui.cpp:2308\n msgid \"Edit Address\"\n-msgstr \"Bewerk Adres\"\n+msgstr \"Bewerk adres\"\n \n #: ../../../ui.cpp:2314\n msgid \"Edit Address Label\"\n-msgstr \"Bewerk Adres Label\"\n+msgstr \"Bewerk adreslabel\"\n \n #: ../../../ui.cpp:2339\n #: ../../../ui.cpp:2345\n msgid \"Add Address\"\n-msgstr \"Adres Toevoegen\"\n+msgstr \"Adres toevoegen\"\n \n #: ../../../ui.cpp:2421\n msgid \"Bitcoin\"\n msgstr \"Bitcoin\"\n \n #: ../../../ui.cpp:2423\n msgid \"Bitcoin - Generating\"\n-msgstr \"Bitcoin - Genereert\"\n+msgstr \"Bitcoin - Genereren...\"\n \n #: ../../../ui.cpp:2425\n msgid \"Bitcoin - (not connected)\"\n@@ -531,7 +531,7 @@ msgstr \"O&pties\"\n #: ../../../ui.cpp:2502\n #: ../../../uibase.cpp:34\n msgid \"&Generate Coins\"\n-msgstr \"&Genereer Coins\"\n+msgstr \"&Genereer coins\"\n \n #: ../../../ui.cpp:2505\n #: ../../../uibase.cpp:27\n@@ -544,7 +544,7 @@ msgstr \"&Bestand\"\n \n #: ../../../uibase.cpp:38\n msgid \"&Your Receiving Addresses...\"\n-msgstr \"&Uw Ontvang Adressen...\"\n+msgstr \"&Uw ontvangstadressen...\"\n \n #: ../../../uibase.cpp:42\n msgid \"&Options...\"\n@@ -564,11 +564,11 @@ msgstr \"&Help\"\n \n #: ../../../uibase.cpp:62\n msgid \"Address Book\"\n-msgstr \"Adressen Boek\"\n+msgstr \"Adresboek\"\n \n #: ../../../uibase.cpp:77\n msgid \"Your Bitcoin Address:\"\n-msgstr \"Uw Bitcoin Address:\"\n+msgstr \"Uw bitcoin-adres:\"\n \n #: ../../../uibase.cpp:84\n msgid \" &New... \"\n@@ -578,7 +578,7 @@ msgstr \" &Nieuw... \"\n #: ../../../uibase.cpp:851\n #: ../../../uibase.cpp:954\n msgid \" &Copy to Clipboard \"\n-msgstr \" &Kopieer naar Plakboord \"\n+msgstr \" &Kopieer naar plakbord \"\n \n #: ../../../uibase.cpp:102\n msgid \"Balance:\"\n@@ -598,7 +598,7 @@ msgstr \" Ontvangen\"\n \n #: ../../../uibase.cpp:121\n msgid \" In Progress\"\n-msgstr \" Word Verwerkt\"\n+msgstr \" Wordt verwerkt\"\n \n #: ../../../uibase.cpp:142\n msgid \"All Transactions\"\n@@ -628,15 +628,15 @@ msgstr \"OK\"\n \n #: ../../../uibase.cpp:361\n msgid \"Optional transaction fee you give to the nodes that process your transactions.\"\n-msgstr \"Optionele transactie fooi die u geeft aan de nodes doe uw betaling verwerken.\"\n+msgstr \"Optionele transactiefooi die u geeft aan de nodes die uw transacties verwerken.\"\n \n #: ../../../uibase.cpp:370\n msgid \"Transaction fee:\"\n-msgstr \"Transactie fooi:\"\n+msgstr \"Transactiefooi:\"\n \n #: ../../../uibase.cpp:386\n msgid \"&Limit coin generation to\"\n-msgstr \"&Limiteer coin generatie tot\"\n+msgstr \"&Limiteer coin-generatie tot\"\n \n #: ../../../uibase.cpp:393\n msgid \"processors\"\n@@ -648,11 +648,11 @@ msgstr \"&Start Bitcoin wanneer het systeem opstart\"\n \n #: ../../../uibase.cpp:403\n msgid \"&Minimize to the tray instead of the taskbar\"\n-msgstr \"&Minimalizeer tot systeemvak inplaats van taakbalk\"\n+msgstr \"&Minimaliseer tot systeemvak in plaats van de taakbalk\"\n \n #: ../../../uibase.cpp:407\n msgid \"M&inimize to the tray on close\"\n-msgstr \"M&inimalizeer tot taakbalk bij sluiten\"\n+msgstr \"M&inimaliseer tot taakbalk bij sluiten\"\n \n #: ../../../uibase.cpp:414\n msgid \"&Connect through socks4 proxy: \"\n@@ -681,7 +681,7 @@ msgstr \"\"\n #: ../../../uibase.cpp:966\n #: ../../../uibase.cpp:1055\n msgid \"Cancel\"\n-msgstr \"Annuleer\"\n+msgstr \"Annuleren\"\n \n #: ../../../uibase.cpp:485\n msgid \"&Apply\"\n@@ -708,32 +708,32 @@ msgid \"\"\n \"OpenSSL Toolkit (http://www.openssl.org/) and cryptographic software written by \\n\"\n \"Eric Young (eay@cryptsoft.com).\"\n msgstr \"\"\n-\"Copyright (c) 2009-2010 Bitcoin Developers\\n\"\n+\"Copyright (c) 2009-2011 Bitcoin-ontwikkelaars\\n\"\n \"\\n\"\n \"Dit is experimentele software.\\n\"\n \"\\n\"\n-\"Gedistributeerd onder de MIT/X11 software licentie, see het bijbehorende bestand \\n\"\n-\"license.txt of http://www.opensource.org/licenses/mit-license.php.\\n\"\n+\"Gedistributeerd onder de MIT/X11 software licentie, zie het bijgevoegde bestand \\n\"\n+\"license.txt of kijk op http://www.opensource.org/licenses/mit-license.php.\\n\"\n \"\\n\"\n-\"Dit product komt met software ontwikkeld door het OpenSSL Project for gebruik \\n\"\n-\"in de OpenSSL Toolkit (http://www.openssl.org/) and de cryptografische \\n\"\n+\"Dit product bevat software ontwikkeld door het OpenSSL project for gebruik \\n\"\n+\"in de OpenSSL Toolkit (http://www.openssl.org/), en cryptografische \\n\"\n \"software geschreven door Eric Young (eay@cryptsoft.com).\"\n \n #: ../../../uibase.cpp:619\n msgid \"Enter a Bitcoin address (e.g. 1NS17iag9jJgTHD1VXjvLCEnZuQ3rJED9L) or IP address (e.g. 123.45.6.7)\"\n-msgstr \"Voer een Bitcoin adres (bijvoorbeeld: 1NS17iag9jJgTHD1VXjvLCEnZuQ3rJED9L) of IP address (bijvoorbeeld: 123.45.6.7) in.\"\n+msgstr \"Voer een bitcoin-adres (bijvoorbeeld: 1NS17iag9jJgTHD1VXjvLCEnZuQ3rJED9L) of IP-adres (bijvoorbeeld: 123.45.6.7) in.\"\n \n #: ../../../uibase.cpp:633\n msgid \"Pay &To:\"\n-msgstr \"Betaal &Naar:\"\n+msgstr \"Betaal &aan:\"\n \n #: ../../../uibase.cpp:648\n msgid \"&Paste\"\n msgstr \"&Plakken\"\n \n #: ../../../uibase.cpp:651\n msgid \" Address &Book...\"\n-msgstr \" Adressen &Boek...\"\n+msgstr \" Adres&boek...\"\n \n #: ../../../uibase.cpp:658\n msgid \"&Amount:\"\n@@ -757,7 +757,7 @@ msgstr \"&Mededeling:\"\n \n #: ../../../uibase.cpp:730\n msgid \"&Send\"\n-msgstr \"&Verstuur\"\n+msgstr \"&Versturen\"\n \n #: ../../../uibase.cpp:782\n msgid \"\"\n@@ -771,37 +771,37 @@ msgstr \"\"\n \n #: ../../../uibase.cpp:832\n msgid \"These are your Bitcoin addresses for receiving payments.  You may want to give a different one to each sender so you can keep track of who is paying you.  The highlighted address is displayed in the main window.\"\n-msgstr \"Dit zijn uw Bitcoin Adressen voor het ontvangen van betalingen.  Misschien wilt u elk contact persoon een ander adres geven zodat u kunt bij houden wie er u heeft betaald.  De opgelichte adressen worden weergeven in het hoofd venster.\"\n+msgstr \"Dit zijn je bitcoin-adressen voor het ontvangen van betalingen.  Het is een goed idee iedere afzender een ander adres te geven zodat je bij kunt houden wie je een betaling stuurt. Het geselecteerde adres is zichtbaar in het hoofdscherm.\"\n \n #: ../../../uibase.cpp:845\n #: ../../../uibase.cpp:957\n msgid \"&Edit...\"\n-msgstr \"&Bewerk...\"\n+msgstr \"&Bewerken...\"\n \n #: ../../../uibase.cpp:848\n #: ../../../uibase.cpp:960\n msgid \" &New Address... \"\n-msgstr \" &New Adres... \"\n+msgstr \" &Nieuw adres... \"\n \n #: ../../../uibase.cpp:920\n msgid \"Sending\"\n-msgstr \"Versturen\"\n+msgstr \"Versturen...\"\n \n #: ../../../uibase.cpp:928\n msgid \"These are your Bitcoin addresses for receiving payments.  You can give a different one to each sender to keep track of who is paying you.  The highlighted address will be displayed in the main window.\"\n-msgstr \"Dit zijn uw Bitcoin adressen voor het ontvangen van betalingen.  U kunt een aan elk contact persoon geven zodat u een overzicht kunt houden wie u betaald.  Dit adres zal wergeven worden in het hoofd main venster.\"\n+msgstr \"Dit zijn je bitcoin-adressen voor het ontvangen van betalingen.  Het is een goed idee iedere afzender een ander adres te geven zodat je bij kunt houden wie je een betaling stuurt. Het geselecteerde adres is zichtbaar in het hoofdscherm.\"\n \n #: ../../../uibase.cpp:941\n msgid \"Receiving\"\n-msgstr \"Ontvangen\"\n+msgstr \"Ontvangen...\"\n \n #: ../../../uibase.cpp:951\n msgid \"&Delete\"\n-msgstr \"&Verwijder\"\n+msgstr \"&Verwijderen\"\n \n #: ../../../uibase.h:150\n msgid \"Transaction Details\"\n-msgstr \"Transactie Details\"\n+msgstr \"Transactiedetails\"\n \n #: ../../../uibase.h:203\n msgid \"Options\"\n@@ -813,4 +813,4 @@ msgstr \"Over Bitcoin\"\n \n #: ../../../uibase.h:341\n msgid \"Your Bitcoin Addresses\"\n-msgstr \"Uw Bitcoin Adressen\"\n+msgstr \"Uw bitcoin-adressen\""
      },
      {
        "sha": "bfc45af28eb4adc02ce3cd07347ac09cc6ba300b",
        "filename": "main.cpp",
        "status": "modified",
        "additions": 101,
        "deletions": 49,
        "changes": 150,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3bcd6790a9a7ce5342b9d59e6075915c0c163148/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3bcd6790a9a7ce5342b9d59e6075915c0c163148/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/main.cpp?ref=3bcd6790a9a7ce5342b9d59e6075915c0c163148",
        "patch": "@@ -287,7 +287,7 @@ void EraseOrphanTx(uint256 hash)\n \n //////////////////////////////////////////////////////////////////////////////\n //\n-// CTransaction\n+// CTransaction and CTxIndex\n //\n \n bool CTransaction::ReadFromDisk(CTxDB& txdb, COutPoint prevout, CTxIndex& txindexRet)\n@@ -678,7 +678,11 @@ bool CTransaction::AcceptToMemoryPool(CTxDB& txdb, bool fCheckInputs, bool* pfMi\n \n     // Safety limits\n     unsigned int nSize = ::GetSerializeSize(*this, SER_NETWORK);\n-    if (GetSigOpCount() > 2 || nSize < 100)\n+    // Checking ECDSA signatures is a CPU bottleneck, so to avoid denial-of-service\n+    // attacks disallow transactions with more than one SigOp per 34 bytes.\n+    // 34 bytes because a TxOut is:\n+    //   20-byte address + 8 byte bitcoin amount + 5 bytes of ops + 1 byte script length\n+    if (GetSigOpCount() > nSize / 34 || nSize < 100)\n         return error(\"AcceptToMemoryPool() : nonstandard transaction\");\n \n     // Rather not work on nonstandard transactions\n@@ -738,19 +742,29 @@ bool CTransaction::AcceptToMemoryPool(CTxDB& txdb, bool fCheckInputs, bool* pfMi\n         if (nFees < GetMinFee(1000))\n             return error(\"AcceptToMemoryPool() : not enough fees\");\n \n-        // Limit free transactions per 10 minutes\n-        if (nFees < CENT && GetBoolArg(\"-limitfreerelay\"))\n+        // Continuously rate-limit free transactions\n+        // This mitigates 'penny-flooding' -- sending thousands of free transactions just to\n+        // be annoying or make other's transactions take longer to confirm.\n+        if (nFees < CENT)\n         {\n-            static int64 nNextReset;\n-            static int64 nFreeCount;\n-            if (GetTime() > nNextReset)\n+            static CCriticalSection cs;\n+            static double dFreeCount;\n+            static int64 nLastTime;\n+            int64 nNow = GetTime();\n+\n+            CRITICAL_BLOCK(cs)\n             {\n-                nNextReset = GetTime() + 10 * 60;\n-                nFreeCount = 0;\n+                // Use an exponentially decaying ~10-minute window:\n+                dFreeCount *= pow(1.0 - 1.0/600.0, (double)(nNow - nLastTime));\n+                nLastTime = nNow;\n+                // -limitfreerelay unit is thousand-bytes-per-minute\n+                // At default rate it would take over a month to fill 1GB\n+                if (dFreeCount > GetArg(\"-limitfreerelay\", 15)*10*1000 && !IsFromMe())\n+                    return error(\"AcceptToMemoryPool() : free transaction rejected by rate limiter\");\n+                if (fDebug)\n+                    printf(\"Rate limit dFreeCount: %g => %g\\n\", dFreeCount, dFreeCount+nSize);\n+                dFreeCount += nSize;\n             }\n-            if (nFreeCount > 150000 && !IsFromMe())\n-                return error(\"AcceptToMemoryPool() : free transaction rejected by rate limiter\");\n-            nFreeCount += nSize;\n         }\n     }\n \n@@ -1034,6 +1048,22 @@ void ResendWalletTransactions()\n     }\n }\n \n+int CTxIndex::GetDepthInMainChain() const\n+{\n+    // Read block header\n+    CBlock block;\n+    if (!block.ReadFromDisk(pos.nFile, pos.nBlockPos, false))\n+        return 0;\n+    // Find the block in the index\n+    map<uint256, CBlockIndex*>::iterator mi = mapBlockIndex.find(block.GetHash());\n+    if (mi == mapBlockIndex.end())\n+        return 0;\n+    CBlockIndex* pindex = (*mi).second;\n+    if (!pindex || !pindex->IsInMainChain())\n+        return 0;\n+    return 1 + nBestHeight - pindex->nHeight;\n+}\n+\n \n \n \n@@ -2366,6 +2396,10 @@ bool ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n             return true;\n         }\n \n+        // Be shy and don't send version until we hear\n+        if (pfrom->fInbound)\n+            pfrom->PushVersion();\n+\n         pfrom->fClient = !(pfrom->nServices & NODE_NETWORK);\n \n         AddTimeData(pfrom->addr.ip, nTime);\n@@ -3327,18 +3361,7 @@ CBlock* CreateNewBlock(CReserveKey& reservekey)\n                 int64 nValueIn = txPrev.vout[txin.prevout.n].nValue;\n \n                 // Read block header\n-                int nConf = 0;\n-                CBlock block;\n-                if (block.ReadFromDisk(txindex.pos.nFile, txindex.pos.nBlockPos, false))\n-                {\n-                    map<uint256, CBlockIndex*>::iterator it = mapBlockIndex.find(block.GetHash());\n-                    if (it != mapBlockIndex.end())\n-                    {\n-                        CBlockIndex* pindex = (*it).second;\n-                        if (pindex->IsInMainChain())\n-                            nConf = 1 + nBestHeight - pindex->nHeight;\n-                    }\n-                }\n+                int nConf = txindex.GetDepthInMainChain();\n \n                 dPriority += (double)nValueIn * nConf;\n \n@@ -3383,7 +3406,7 @@ CBlock* CreateNewBlock(CReserveKey& reservekey)\n                 continue;\n \n             // Transaction fee required depends on block size\n-            bool fAllowFree = (nBlockSize + nTxSize < 4000 || dPriority > COIN * 144 / 250);\n+            bool fAllowFree = (nBlockSize + nTxSize < 4000 || CTransaction::AllowFree(dPriority));\n             int64 nMinFee = tx.GetMinFee(nBlockSize, fAllowFree);\n \n             // Connecting shouldn't fail due to dependency on other memory pool transactions\n@@ -3750,16 +3773,16 @@ bool SelectCoinsMinConf(int64 nTargetValue, int nConfMine, int nConfTheirs, set<\n             int64 n = pcoin->GetCredit();\n             if (n <= 0)\n                 continue;\n-            if (n < nTargetValue)\n-            {\n-                vValue.push_back(make_pair(n, pcoin));\n-                nTotalLower += n;\n-            }\n-            else if (n == nTargetValue)\n+            if (n == nTargetValue)\n             {\n                 setCoinsRet.insert(pcoin);\n                 return true;\n             }\n+            else if (n < nTargetValue + CENT)\n+            {\n+                vValue.push_back(make_pair(n, pcoin));\n+                nTotalLower += n;\n+            }\n             else if (n < nLowestLarger)\n             {\n                 nLowestLarger = n;\n@@ -3768,14 +3791,24 @@ bool SelectCoinsMinConf(int64 nTargetValue, int nConfMine, int nConfTheirs, set<\n         }\n     }\n \n-    if (nTotalLower < nTargetValue)\n+    if (nTotalLower == nTargetValue || nTotalLower == nTargetValue + CENT)\n+    {\n+        for (int i = 0; i < vValue.size(); ++i)\n+            setCoinsRet.insert(vValue[i].second);\n+        return true;\n+    }\n+\n+    if (nTotalLower < nTargetValue + (pcoinLowestLarger ? CENT : 0))\n     {\n         if (pcoinLowestLarger == NULL)\n             return false;\n         setCoinsRet.insert(pcoinLowestLarger);\n         return true;\n     }\n \n+    if (nTotalLower >= nTargetValue + CENT)\n+        nTargetValue += CENT;\n+\n     // Solve subset sum by stochastic approximation\n     sort(vValue.rbegin(), vValue.rend());\n     vector<char> vfIncluded;\n@@ -3841,8 +3874,18 @@ bool SelectCoins(int64 nTargetValue, set<CWalletTx*>& setCoinsRet)\n \n \n \n-bool CreateTransaction(CScript scriptPubKey, int64 nValue, CWalletTx& wtxNew, CReserveKey& reservekey, int64& nFeeRet)\n+bool CreateTransaction(const vector<pair<CScript, int64> >& vecSend, CWalletTx& wtxNew, CReserveKey& reservekey, int64& nFeeRet)\n {\n+    int64 nValue = 0;\n+    foreach (const PAIRTYPE(CScript, int64)& s, vecSend)\n+    {\n+        if (nValue < 0)\n+            return false;\n+        nValue += s.second;\n+    }\n+    if (vecSend.empty() || nValue < 0)\n+        return false;\n+\n     CRITICAL_BLOCK(cs_main)\n     {\n         // txdb must be opened before the mapWallet lock\n@@ -3855,23 +3898,24 @@ bool CreateTransaction(CScript scriptPubKey, int64 nValue, CWalletTx& wtxNew, CR\n                 wtxNew.vin.clear();\n                 wtxNew.vout.clear();\n                 wtxNew.fFromMe = true;\n-                if (nValue < 0)\n-                    return false;\n-                int64 nValueOut = nValue;\n+\n                 int64 nTotalValue = nValue + nFeeRet;\n+                double dPriority = 0;\n+                // vouts to the payees\n+                foreach (const PAIRTYPE(CScript, int64)& s, vecSend)\n+                    wtxNew.vout.push_back(CTxOut(s.second, s.first));\n \n                 // Choose coins to use\n                 set<CWalletTx*> setCoins;\n                 if (!SelectCoins(nTotalValue, setCoins))\n                     return false;\n                 int64 nValueIn = 0;\n                 foreach(CWalletTx* pcoin, setCoins)\n-                    nValueIn += pcoin->GetCredit();\n-\n-                // Fill a vout to the payee\n-                bool fChangeFirst = GetRand(2);\n-                if (!fChangeFirst)\n-                    wtxNew.vout.push_back(CTxOut(nValueOut, scriptPubKey));\n+                {\n+                    int64 nCredit = pcoin->GetCredit();\n+                    nValueIn += nCredit;\n+                    dPriority += (double)nCredit * pcoin->GetDepthInMainChain();\n+                }\n \n                 // Fill a vout back to self with any change\n                 int64 nChange = nValueIn - nTotalValue;\n@@ -3890,19 +3934,18 @@ bool CreateTransaction(CScript scriptPubKey, int64 nValue, CWalletTx& wtxNew, CR\n \n                     // Fill a vout to ourself, using same address type as the payment\n                     CScript scriptChange;\n-                    if (scriptPubKey.GetBitcoinAddressHash160() != 0)\n+                    if (vecSend[0].first.GetBitcoinAddressHash160() != 0)\n                         scriptChange.SetBitcoinAddress(vchPubKey);\n                     else\n                         scriptChange << vchPubKey << OP_CHECKSIG;\n-                    wtxNew.vout.push_back(CTxOut(nChange, scriptChange));\n+\n+                    // Insert change txn at random position:\n+                    vector<CTxOut>::iterator position = wtxNew.vout.begin()+GetRandInt(wtxNew.vout.size());\n+                    wtxNew.vout.insert(position, CTxOut(nChange, scriptChange));\n                 }\n                 else\n                     reservekey.ReturnKey();\n \n-                // Fill a vout to the payee\n-                if (fChangeFirst)\n-                    wtxNew.vout.push_back(CTxOut(nValueOut, scriptPubKey));\n-\n                 // Fill vin\n                 foreach(CWalletTx* pcoin, setCoins)\n                     for (int nOut = 0; nOut < pcoin->vout.size(); nOut++)\n@@ -3921,10 +3964,12 @@ bool CreateTransaction(CScript scriptPubKey, int64 nValue, CWalletTx& wtxNew, CR\n                 unsigned int nBytes = ::GetSerializeSize(*(CTransaction*)&wtxNew, SER_NETWORK);\n                 if (nBytes >= MAX_BLOCK_SIZE_GEN/5)\n                     return false;\n+                dPriority /= nBytes;\n \n                 // Check that enough fee is included\n                 int64 nPayFee = nTransactionFee * (1 + (int64)nBytes / 1000);\n-                int64 nMinFee = wtxNew.GetMinFee();\n+                bool fAllowFree = CTransaction::AllowFree(dPriority);\n+                int64 nMinFee = wtxNew.GetMinFee(1, fAllowFree);\n                 if (nFeeRet < max(nPayFee, nMinFee))\n                 {\n                     nFeeRet = max(nPayFee, nMinFee);\n@@ -3942,6 +3987,13 @@ bool CreateTransaction(CScript scriptPubKey, int64 nValue, CWalletTx& wtxNew, CR\n     return true;\n }\n \n+bool CreateTransaction(CScript scriptPubKey, int64 nValue, CWalletTx& wtxNew, CReserveKey& reservekey, int64& nFeeRet)\n+{\n+    vector< pair<CScript, int64> > vecSend;\n+    vecSend.push_back(make_pair(scriptPubKey, nValue));\n+    return CreateTransaction(vecSend, wtxNew, reservekey, nFeeRet);\n+}\n+\n // Call after CreateTransaction unless you want to abort\n bool CommitTransaction(CWalletTx& wtxNew, CReserveKey& reservekey)\n {"
      },
      {
        "sha": "e9d0c0031057dd118f8f6f6965ebea093bbdf330",
        "filename": "main.h",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3bcd6790a9a7ce5342b9d59e6075915c0c163148/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3bcd6790a9a7ce5342b9d59e6075915c0c163148/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/main.h?ref=3bcd6790a9a7ce5342b9d59e6075915c0c163148",
        "patch": "@@ -77,6 +77,7 @@ bool ProcessMessages(CNode* pfrom);\n bool ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv);\n bool SendMessages(CNode* pto, bool fSendTrickle);\n int64 GetBalance();\n+bool CreateTransaction(const vector<pair<CScript, int64> >& vecSend, CWalletTx& wtxNew, CReserveKey& reservekey, int64& nFeeRet);\n bool CreateTransaction(CScript scriptPubKey, int64 nValue, CWalletTx& wtxNew, CReserveKey& reservekey, int64& nFeeRet);\n bool CommitTransaction(CWalletTx& wtxNew, CReserveKey& reservekey);\n bool BroadcastTransaction(CWalletTx& wtxNew);\n@@ -574,6 +575,13 @@ class CTransaction\n         return nValueOut;\n     }\n \n+    static bool AllowFree(double dPriority)\n+    {\n+        // Large (in bytes) low-priority (new, small-coin) transactions\n+        // need a fee.\n+        return dPriority > COIN * 144 / 250;\n+    }\n+\n     int64 GetMinFee(unsigned int nBlockSize=1, bool fAllowFree=true) const\n     {\n         // Base fee is 1 cent per kilobyte\n@@ -998,6 +1006,7 @@ class CTxIndex\n     {\n         return !(a == b);\n     }\n+    int GetDepthInMainChain() const;\n };\n \n "
      },
      {
        "sha": "372402f51fb0441daaf43d7c8342a30e377788e0",
        "filename": "net.cpp",
        "status": "modified",
        "additions": 27,
        "deletions": 0,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3bcd6790a9a7ce5342b9d59e6075915c0c163148/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3bcd6790a9a7ce5342b9d59e6075915c0c163148/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/net.cpp?ref=3bcd6790a9a7ce5342b9d59e6075915c0c163148",
        "patch": "@@ -857,7 +857,34 @@ void ThreadSocketHandler2(void* parg)\n \n \n \n+static const char *strDNSSeed[] = {\n+    \"bitseed.xf2.org\",\n+};\n \n+void DNSAddressSeed()\n+{\n+    int found = 0;\n+\n+    printf(\"Loading addresses from DNS seeds (could take a while)\\n\");\n+\n+    for (int seed_idx = 0; seed_idx < ARRAYLEN(strDNSSeed); seed_idx++) {\n+        struct hostent* phostent = gethostbyname(strDNSSeed[seed_idx]);\n+        if (!phostent)\n+            continue;\n+\n+        for (int host = 0; phostent->h_addr_list[host] != NULL; host++) {\n+            CAddress addr(*(unsigned int*)phostent->h_addr_list[host],\n+                          GetDefaultPort(), NODE_NETWORK);\n+            addr.nTime = 0;\n+            if (addr.IsValid() && addr.GetByte(3) != 127) {\n+                AddAddress(addr);\n+                found++;\n+            }\n+        }\n+    }\n+\n+    printf(\"%d addresses found from DNS seeds\\n\", found);\n+}\n \n \n "
      },
      {
        "sha": "7d4974fd01a2afede00447426a47595ce977356b",
        "filename": "net.h",
        "status": "modified",
        "additions": 17,
        "deletions": 8,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3bcd6790a9a7ce5342b9d59e6075915c0c163148/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3bcd6790a9a7ce5342b9d59e6075915c0c163148/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/net.h?ref=3bcd6790a9a7ce5342b9d59e6075915c0c163148",
        "patch": "@@ -30,6 +30,7 @@ CNode* FindNode(unsigned int ip);\n CNode* ConnectNode(CAddress addrConnect, int64 nTimeout=0);\n void AbandonRequests(void (*fn)(void*, CDataStream&), void* param1);\n bool AnySubscribed(unsigned int nChannel);\n+void DNSAddressSeed();\n bool BindListenPort(string& strError=REF(string()));\n void StartNode(void* parg);\n bool StopNode();\n@@ -571,14 +572,9 @@ class CNode\n         fGetAddr = false;\n         vfSubscribe.assign(256, false);\n \n-        // Push a version message\n-        /// when NTP implemented, change to just nTime = GetAdjustedTime()\n-        int64 nTime = (fInbound ? GetAdjustedTime() : GetTime());\n-        CAddress addrYou = (fUseProxy ? CAddress(\"0.0.0.0\") : addr);\n-        CAddress addrMe = (fUseProxy ? CAddress(\"0.0.0.0\") : addrLocalHost);\n-        RAND_bytes((unsigned char*)&nLocalHostNonce, sizeof(nLocalHostNonce));\n-        PushMessage(\"version\", VERSION, nLocalServices, nTime, addrYou, addrMe,\n-                    nLocalHostNonce, string(pszSubVer), nBestHeight);\n+        // Be shy and don't send version until we hear\n+        if (!fInbound)\n+            PushVersion();\n     }\n \n     ~CNode()\n@@ -735,6 +731,19 @@ class CNode\n \n \n \n+    void PushVersion()\n+    {\n+        /// when NTP implemented, change to just nTime = GetAdjustedTime()\n+        int64 nTime = (fInbound ? GetAdjustedTime() : GetTime());\n+        CAddress addrYou = (fUseProxy ? CAddress(\"0.0.0.0\") : addr);\n+        CAddress addrMe = (fUseProxy ? CAddress(\"0.0.0.0\") : addrLocalHost);\n+        RAND_bytes((unsigned char*)&nLocalHostNonce, sizeof(nLocalHostNonce));\n+        PushMessage(\"version\", VERSION, nLocalServices, nTime, addrYou, addrMe,\n+                nLocalHostNonce, string(pszSubVer), nBestHeight);\n+    }\n+\n+\n+\n \n     void PushMessage(const char* pszCommand)\n     {"
      },
      {
        "sha": "d84940dcf61bc27b1950eb8a9df2ad498c5bcc00",
        "filename": "rpc.cpp",
        "status": "modified",
        "additions": 73,
        "deletions": 0,
        "changes": 73,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3bcd6790a9a7ce5342b9d59e6075915c0c163148/rpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3bcd6790a9a7ce5342b9d59e6075915c0c163148/rpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/rpc.cpp?ref=3bcd6790a9a7ce5342b9d59e6075915c0c163148",
        "patch": "@@ -765,6 +765,69 @@ Value sendfrom(const Array& params, bool fHelp)\n     return wtx.GetHash().GetHex();\n }\n \n+Value sendmany(const Array& params, bool fHelp)\n+{\n+    if (fHelp || params.size() < 2 || params.size() > 4)\n+        throw runtime_error(\n+            \"sendmany <fromaccount> {address:amount,...} [minconf=1] [comment]\\n\"\n+            \"amounts are double-precision floating point numbers\");\n+\n+    string strAccount = AccountFromValue(params[0]);\n+    Object sendTo = params[1].get_obj();\n+    int nMinDepth = 1;\n+    if (params.size() > 2)\n+        nMinDepth = params[2].get_int();\n+\n+    CWalletTx wtx;\n+    wtx.strFromAccount = strAccount;\n+    if (params.size() > 3 && params[3].type() != null_type && !params[3].get_str().empty())\n+        wtx.mapValue[\"comment\"] = params[3].get_str();\n+\n+    set<string> setAddress;\n+    vector<pair<CScript, int64> > vecSend;\n+\n+    int64 totalAmount = 0;\n+    foreach(const Pair& s, sendTo)\n+    {\n+        uint160 hash160;\n+        string strAddress = s.name_;\n+\n+        if (setAddress.count(strAddress))\n+            throw JSONRPCError(-8, string(\"Invalid parameter, duplicated address: \")+strAddress);\n+        setAddress.insert(strAddress);\n+\n+        CScript scriptPubKey;\n+        if (!scriptPubKey.SetBitcoinAddress(strAddress))\n+            throw JSONRPCError(-5, string(\"Invalid bitcoin address:\")+strAddress);\n+        int64 nAmount = AmountFromValue(s.value_); \n+        totalAmount += nAmount;\n+\n+        vecSend.push_back(make_pair(scriptPubKey, nAmount));\n+    }\n+\n+    CRITICAL_BLOCK(cs_mapWallet)\n+    {\n+        // Check funds\n+        int64 nBalance = GetAccountBalance(strAccount, nMinDepth);\n+        if (totalAmount > nBalance)\n+            throw JSONRPCError(-6, \"Account has insufficient funds\");\n+\n+        // Send\n+        CReserveKey keyChange;\n+        int64 nFeeRequired = 0;\n+        bool fCreated = CreateTransaction(vecSend, wtx, keyChange, nFeeRequired);\n+        if (!fCreated)\n+        {\n+            if (totalAmount + nFeeRequired > GetBalance())\n+                throw JSONRPCError(-6, \"Insufficient funds\");\n+            throw JSONRPCError(-4, \"Transaction creation failed\");\n+        }\n+        if (!CommitTransaction(wtx, keyChange))\n+            throw JSONRPCError(-4, \"Transaction commit failed\");\n+    }\n+\n+    return wtx.GetHash().GetHex();\n+}\n \n \n struct tallyitem\n@@ -1341,6 +1404,7 @@ pair<string, rpcfn_type> pCallTable[] =\n     make_pair(\"getbalance\",            &getbalance),\n     make_pair(\"move\",                  &movecmd),\n     make_pair(\"sendfrom\",              &sendfrom),\n+    make_pair(\"sendmany\",              &sendmany),\n     make_pair(\"gettransaction\",        &gettransaction),\n     make_pair(\"listtransactions\",      &listtransactions),\n     make_pair(\"getwork\",               &getwork),\n@@ -1992,6 +2056,15 @@ int CommandLineRPC(int argc, char *argv[])\n         if (strMethod == \"sendfrom\"               && n > 3) ConvertTo<boost::int64_t>(params[3]);\n         if (strMethod == \"listtransactions\"       && n > 1) ConvertTo<boost::int64_t>(params[1]);\n         if (strMethod == \"listaccounts\"           && n > 0) ConvertTo<boost::int64_t>(params[0]);\n+        if (strMethod == \"sendmany\"               && n > 1)\n+        {\n+            string s = params[1].get_str();\n+            Value v;\n+            if (!read_string(s, v) || v.type() != obj_type)\n+                throw runtime_error(\"type mismatch\");\n+            params[1] = v.get_obj();\n+        }\n+        if (strMethod == \"sendmany\"                && n > 2) ConvertTo<boost::int64_t>(params[2]);\n \n         // Execute\n         Object reply = CallRPC(strMethod, params);"
      },
      {
        "sha": "383c9878647f39c33d6a44427394bff0338276cd",
        "filename": "serialize.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3bcd6790a9a7ce5342b9d59e6075915c0c163148/serialize.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3bcd6790a9a7ce5342b9d59e6075915c0c163148/serialize.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/serialize.h?ref=3bcd6790a9a7ce5342b9d59e6075915c0c163148",
        "patch": "@@ -25,7 +25,7 @@ class CDataStream;\n class CAutoFile;\n static const unsigned int MAX_SIZE = 0x02000000;\n \n-static const int VERSION = 32002;\n+static const int VERSION = 32100;\n static const char* pszSubVer = \"\";\n static const bool VERSION_IS_BETA = true;\n "
      },
      {
        "sha": "f3ff3bf1ef94dd40deb65c75a3c6e3125de34838",
        "filename": "uibase.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 8,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3bcd6790a9a7ce5342b9d59e6075915c0c163148/uibase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3bcd6790a9a7ce5342b9d59e6075915c0c163148/uibase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/uibase.cpp?ref=3bcd6790a9a7ce5342b9d59e6075915c0c163148",
        "patch": "@@ -1,5 +1,5 @@\n ///////////////////////////////////////////////////////////////////////////\n-// C++ code generated with wxFormBuilder (version Apr 16 2008)\n+// C++ code generated with wxFormBuilder (version Dec 21 2009)\n // http://www.wxformbuilder.org/\n //\n // PLEASE DO \"NOT\" EDIT THIS FILE!\n@@ -61,7 +61,6 @@ CMainFrameBase::CMainFrameBase( wxWindow* parent, wxWindowID id, const wxString&\n \tm_toolBar->Realize();\n \t\n \tm_statusBar = this->CreateStatusBar( 1, wxST_SIZEGRIP, wxID_ANY );\n-\t\n \twxBoxSizer* bSizer2;\n \tbSizer2 = new wxBoxSizer( wxVERTICAL );\n \t\n@@ -355,7 +354,6 @@ COptionsDialogBase::COptionsDialogBase( wxWindow* parent, wxWindowID id, const w\n \tbSizer71 = new wxBoxSizer( wxHORIZONTAL );\n \t\n \tm_checkBoxLimitProcessors = new wxCheckBox( m_panelMain, wxID_ANY, _(\"&Limit coin generation to\"), wxDefaultPosition, wxDefaultSize, 0 );\n-\t\n \tbSizer71->Add( m_checkBoxLimitProcessors, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5 );\n \t\n \tm_spinCtrlLimitProcessors = new wxSpinCtrl( m_panelMain, wxID_ANY, wxEmptyString, wxDefaultPosition, wxSize( 48,-1 ), wxSP_ARROW_KEYS, 1, 999, 1 );\n@@ -368,22 +366,18 @@ COptionsDialogBase::COptionsDialogBase( wxWindow* parent, wxWindowID id, const w\n \tbSizer69->Add( bSizer71, 0, 0, 5 );\n \t\n \tm_checkBoxStartOnSystemStartup = new wxCheckBox( m_panelMain, wxID_ANY, _(\"&Start Bitcoin on system startup\"), wxDefaultPosition, wxDefaultSize, 0 );\n-\t\n \tbSizer69->Add( m_checkBoxStartOnSystemStartup, 0, wxALL, 5 );\n \t\n \tm_checkBoxMinimizeToTray = new wxCheckBox( m_panelMain, wxID_ANY, _(\"&Minimize to the tray instead of the taskbar\"), wxDefaultPosition, wxDefaultSize, 0 );\n-\t\n \tbSizer69->Add( m_checkBoxMinimizeToTray, 0, wxALL, 5 );\n \t\n \tm_checkBoxMinimizeOnClose = new wxCheckBox( m_panelMain, wxID_ANY, _(\"M&inimize to the tray on close\"), wxDefaultPosition, wxDefaultSize, 0 );\n-\t\n \tbSizer69->Add( m_checkBoxMinimizeOnClose, 0, wxALL|wxALIGN_CENTER_VERTICAL, 5 );\n \t\n \twxBoxSizer* bSizer102;\n \tbSizer102 = new wxBoxSizer( wxHORIZONTAL );\n \t\n \tm_checkBoxUseProxy = new wxCheckBox( m_panelMain, wxID_ANY, _(\"&Connect through socks4 proxy: \"), wxDefaultPosition, wxDefaultSize, 0 );\n-\t\n \tbSizer102->Add( m_checkBoxUseProxy, 0, wxALL|wxALIGN_CENTER_VERTICAL, 5 );\n \t\n \tbSizer69->Add( bSizer102, 1, wxEXPAND, 5 );\n@@ -550,7 +544,7 @@ CAboutDialogBase::CAboutDialogBase( wxWindow* parent, wxWindowID id, const wxStr\n \t\n \tbSizer631->Add( 0, 4, 0, wxEXPAND, 5 );\n \t\n-\tm_staticTextMain = new wxStaticText( this, wxID_ANY, _(\"Copyright (c) 2009-2010 Bitcoin Developers\\n\\nThis is experimental software.\\n\\nDistributed under the MIT/X11 software license, see the accompanying file \\nlicense.txt or http://www.opensource.org/licenses/mit-license.php.\\n\\nThis product includes software developed by the OpenSSL Project for use in the \\nOpenSSL Toolkit (http://www.openssl.org/) and cryptographic software written by \\nEric Young (eay@cryptsoft.com).\"), wxDefaultPosition, wxDefaultSize, 0 );\n+\tm_staticTextMain = new wxStaticText( this, wxID_ANY, _(\"Copyright (c) 2009-2011 Bitcoin Developers\\n\\nThis is experimental software.\\n\\nDistributed under the MIT/X11 software license, see the accompanying file \\nlicense.txt or http://www.opensource.org/licenses/mit-license.php.\\n\\nThis product includes software developed by the OpenSSL Project for use in the \\nOpenSSL Toolkit (http://www.openssl.org/) and cryptographic software written by \\nEric Young (eay@cryptsoft.com).\"), wxDefaultPosition, wxDefaultSize, 0 );\n \tm_staticTextMain->Wrap( -1 );\n \tbSizer631->Add( m_staticTextMain, 0, wxALL, 5 );\n \t\n@@ -677,6 +671,11 @@ CSendDialogBase::CSendDialogBase( wxWindow* parent, wxWindowID id, const wxStrin\n \t\n \tbSizer21->Add( fgSizer1, 0, wxEXPAND|wxLEFT, 5 );\n \t\n+\twxBoxSizer* bSizer672;\n+\tbSizer672 = new wxBoxSizer( wxHORIZONTAL );\n+\t\n+\tbSizer21->Add( bSizer672, 0, wxEXPAND, 5 );\n+\t\n \twxBoxSizer* bSizer23;\n \tbSizer23 = new wxBoxSizer( wxHORIZONTAL );\n \t\n@@ -698,6 +697,7 @@ CSendDialogBase::CSendDialogBase( wxWindow* parent, wxWindowID id, const wxStrin\n \t\n \t// Connect Events\n \tm_textCtrlAddress->Connect( wxEVT_KEY_DOWN, wxKeyEventHandler( CSendDialogBase::OnKeyDown ), NULL, this );\n+\tm_textCtrlAddress->Connect( wxEVT_COMMAND_TEXT_UPDATED, wxCommandEventHandler( CSendDialogBase::OnTextAddress ), NULL, this );\n \tm_buttonPaste->Connect( wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler( CSendDialogBase::OnButtonPaste ), NULL, this );\n \tm_buttonAddress->Connect( wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler( CSendDialogBase::OnButtonAddressBook ), NULL, this );\n \tm_textCtrlAmount->Connect( wxEVT_KEY_DOWN, wxKeyEventHandler( CSendDialogBase::OnKeyDown ), NULL, this );\n@@ -710,6 +710,7 @@ CSendDialogBase::~CSendDialogBase()\n {\n \t// Disconnect Events\n \tm_textCtrlAddress->Disconnect( wxEVT_KEY_DOWN, wxKeyEventHandler( CSendDialogBase::OnKeyDown ), NULL, this );\n+\tm_textCtrlAddress->Disconnect( wxEVT_COMMAND_TEXT_UPDATED, wxCommandEventHandler( CSendDialogBase::OnTextAddress ), NULL, this );\n \tm_buttonPaste->Disconnect( wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler( CSendDialogBase::OnButtonPaste ), NULL, this );\n \tm_buttonAddress->Disconnect( wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler( CSendDialogBase::OnButtonAddressBook ), NULL, this );\n \tm_textCtrlAmount->Disconnect( wxEVT_KEY_DOWN, wxKeyEventHandler( CSendDialogBase::OnKeyDown ), NULL, this );"
      },
      {
        "sha": "eff5bd6bf448ae4b3462fd58419ffc722733c843",
        "filename": "uibase.h",
        "status": "modified",
        "additions": 79,
        "deletions": 74,
        "changes": 153,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3bcd6790a9a7ce5342b9d59e6075915c0c163148/uibase.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3bcd6790a9a7ce5342b9d59e6075915c0c163148/uibase.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/uibase.h?ref=3bcd6790a9a7ce5342b9d59e6075915c0c163148",
        "patch": "@@ -1,5 +1,5 @@\n ///////////////////////////////////////////////////////////////////////////\n-// C++ code generated with wxFormBuilder (version Apr 16 2008)\n+// C++ code generated with wxFormBuilder (version Dec 21 2009)\n // http://www.wxformbuilder.org/\n //\n // PLEASE DO \"NOT\" EDIT THIS FILE!\n@@ -93,28 +93,28 @@ class CMainFrameBase : public wxFrame\n \t\twxPanel* m_panel93;\n \t\t\n \t\t// Virtual event handlers, overide them in your derived class\n-\t\tvirtual void OnClose( wxCloseEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnIconize( wxIconizeEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnIdle( wxIdleEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnMouseEvents( wxMouseEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnPaint( wxPaintEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnMenuFileExit( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnMenuOptionsGenerate( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnUpdateUIOptionsGenerate( wxUpdateUIEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnMenuOptionsChangeYourAddress( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnMenuOptionsOptions( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnMenuHelpAbout( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnButtonSend( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnButtonAddressBook( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnKeyDown( wxKeyEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnMouseEventsAddress( wxMouseEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnSetFocusAddress( wxFocusEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnButtonNew( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnButtonCopy( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnNotebookPageChanged( wxNotebookEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnListColBeginDrag( wxListEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnListItemActivated( wxListEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnPaintListCtrl( wxPaintEvent& event ){ event.Skip(); }\n+\t\tvirtual void OnClose( wxCloseEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnIconize( wxIconizeEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnIdle( wxIdleEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnMouseEvents( wxMouseEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnPaint( wxPaintEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnMenuFileExit( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnMenuOptionsGenerate( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnUpdateUIOptionsGenerate( wxUpdateUIEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnMenuOptionsChangeYourAddress( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnMenuOptionsOptions( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnMenuHelpAbout( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnButtonSend( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnButtonAddressBook( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnKeyDown( wxKeyEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnMouseEventsAddress( wxMouseEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnSetFocusAddress( wxFocusEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnButtonNew( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnButtonCopy( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnNotebookPageChanged( wxNotebookEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnListColBeginDrag( wxListEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnListItemActivated( wxListEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnPaintListCtrl( wxPaintEvent& event ) { event.Skip(); }\n \t\t\n \t\n \tpublic:\n@@ -125,6 +125,7 @@ class CMainFrameBase : public wxFrame\n \t\twxListCtrl* m_listCtrlSentReceived;\n \t\twxListCtrl* m_listCtrlSent;\n \t\twxListCtrl* m_listCtrlReceived;\n+\t\t\n \t\tCMainFrameBase( wxWindow* parent, wxWindowID id = wxID_MAINFRAME, const wxString& title = _(\"Bitcoin\"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize( 723,484 ), long style = wxDEFAULT_FRAME_STYLE|wxRESIZE_BORDER|wxTAB_TRAVERSAL );\n \t\t~CMainFrameBase();\n \t\n@@ -142,10 +143,11 @@ class CTxDetailsDialogBase : public wxDialog\n \t\twxButton* m_buttonOK;\n \t\t\n \t\t// Virtual event handlers, overide them in your derived class\n-\t\tvirtual void OnButtonOK( wxCommandEvent& event ){ event.Skip(); }\n+\t\tvirtual void OnButtonOK( wxCommandEvent& event ) { event.Skip(); }\n \t\t\n \t\n \tpublic:\n+\t\t\n \t\tCTxDetailsDialogBase( wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _(\"Transaction Details\"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize( 620,450 ), long style = wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER );\n \t\t~CTxDetailsDialogBase();\n \t\n@@ -188,18 +190,19 @@ class COptionsDialogBase : public wxDialog\n \t\twxButton* m_buttonApply;\n \t\t\n \t\t// Virtual event handlers, overide them in your derived class\n-\t\tvirtual void OnListBox( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnCheckBoxLimitProcessors( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnCheckBoxMinimizeToTray( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnCheckBoxUseProxy( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnKillFocusProxy( wxFocusEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnKillFocusTransactionFee( wxFocusEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnButtonOK( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnButtonCancel( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnButtonApply( wxCommandEvent& event ){ event.Skip(); }\n+\t\tvirtual void OnListBox( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnCheckBoxLimitProcessors( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnCheckBoxMinimizeToTray( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnCheckBoxUseProxy( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnKillFocusProxy( wxFocusEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnKillFocusTransactionFee( wxFocusEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnButtonOK( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnButtonCancel( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnButtonApply( wxCommandEvent& event ) { event.Skip(); }\n \t\t\n \t\n \tpublic:\n+\t\t\n \t\tCOptionsDialogBase( wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _(\"Options\"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize( 540,360 ), long style = wxDEFAULT_DIALOG_STYLE );\n \t\t~COptionsDialogBase();\n \t\n@@ -223,11 +226,12 @@ class CAboutDialogBase : public wxDialog\n \t\twxButton* m_buttonOK;\n \t\t\n \t\t// Virtual event handlers, overide them in your derived class\n-\t\tvirtual void OnButtonOK( wxCommandEvent& event ){ event.Skip(); }\n+\t\tvirtual void OnButtonOK( wxCommandEvent& event ) { event.Skip(); }\n \t\t\n \t\n \tpublic:\n \t\twxStaticText* m_staticTextVersion;\n+\t\t\n \t\tCAboutDialogBase( wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _(\"About Bitcoin\"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize( 532,333 ), long style = wxDEFAULT_DIALOG_STYLE );\n \t\t~CAboutDialogBase();\n \t\n@@ -256,26 +260,23 @@ class CSendDialogBase : public wxDialog\n \t\twxChoice* m_choiceTransferType;\n \t\t\n \t\t\n-\t\twxStaticText* m_staticTextFrom;\n-\t\twxTextCtrl* m_textCtrlFrom;\n-\t\twxStaticText* m_staticTextMessage;\n-\t\twxTextCtrl* m_textCtrlMessage;\n \t\t\n \t\twxButton* m_buttonSend;\n \t\twxButton* m_buttonCancel;\n \t\t\n \t\t// Virtual event handlers, overide them in your derived class\n-\t\tvirtual void OnKeyDown( wxKeyEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnTextAddress( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnButtonPaste( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnButtonAddressBook( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnKillFocusAmount( wxFocusEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnButtonSend( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnButtonCancel( wxCommandEvent& event ){ event.Skip(); }\n+\t\tvirtual void OnKeyDown( wxKeyEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnTextAddress( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnButtonPaste( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnButtonAddressBook( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnKillFocusAmount( wxFocusEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnButtonSend( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnButtonCancel( wxCommandEvent& event ) { event.Skip(); }\n \t\t\n \t\n \tpublic:\n-\t\tCSendDialogBase( wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _(\"Send Coins\"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize( 675,298 ), long style = wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER );\n+\t\t\n+\t\tCSendDialogBase( wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _(\"Send Coins\"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize( 498,157 ), long style = wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER );\n \t\t~CSendDialogBase();\n \t\n };\n@@ -295,13 +296,14 @@ class CSendingDialogBase : public wxDialog\n \t\twxButton* m_buttonCancel;\n \t\t\n \t\t// Virtual event handlers, overide them in your derived class\n-\t\tvirtual void OnClose( wxCloseEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnPaint( wxPaintEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnButtonOK( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnButtonCancel( wxCommandEvent& event ){ event.Skip(); }\n+\t\tvirtual void OnClose( wxCloseEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnPaint( wxPaintEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnButtonOK( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnButtonCancel( wxCommandEvent& event ) { event.Skip(); }\n \t\t\n \t\n \tpublic:\n+\t\t\n \t\tCSendingDialogBase( wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _(\"Sending...\"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize( 442,151 ), long style = wxDEFAULT_DIALOG_STYLE );\n \t\t~CSendingDialogBase();\n \t\n@@ -326,18 +328,19 @@ class CYourAddressDialogBase : public wxDialog\n \t\twxButton* m_buttonCancel;\n \t\t\n \t\t// Virtual event handlers, overide them in your derived class\n-\t\tvirtual void OnClose( wxCloseEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnListEndLabelEdit( wxListEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnListItemActivated( wxListEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnListItemSelected( wxListEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnButtonRename( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnButtonNew( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnButtonCopy( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnButtonOK( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnButtonCancel( wxCommandEvent& event ){ event.Skip(); }\n+\t\tvirtual void OnClose( wxCloseEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnListEndLabelEdit( wxListEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnListItemActivated( wxListEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnListItemSelected( wxListEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnButtonRename( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnButtonNew( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnButtonCopy( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnButtonOK( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnButtonCancel( wxCommandEvent& event ) { event.Skip(); }\n \t\t\n \t\n \tpublic:\n+\t\t\n \t\tCYourAddressDialogBase( wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _(\"Your Bitcoin Addresses\"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize( 610,390 ), long style = wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER );\n \t\t~CYourAddressDialogBase();\n \t\n@@ -369,21 +372,22 @@ class CAddressBookDialogBase : public wxDialog\n \t\twxButton* m_buttonOK;\n \t\t\n \t\t// Virtual event handlers, overide them in your derived class\n-\t\tvirtual void OnClose( wxCloseEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnNotebookPageChanged( wxNotebookEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnListEndLabelEdit( wxListEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnListItemActivated( wxListEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnListItemSelected( wxListEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnButtonDelete( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnButtonCopy( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnButtonEdit( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnButtonNew( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnButtonOK( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnButtonCancel( wxCommandEvent& event ){ event.Skip(); }\n+\t\tvirtual void OnClose( wxCloseEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnNotebookPageChanged( wxNotebookEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnListEndLabelEdit( wxListEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnListItemActivated( wxListEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnListItemSelected( wxListEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnButtonDelete( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnButtonCopy( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnButtonEdit( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnButtonNew( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnButtonOK( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnButtonCancel( wxCommandEvent& event ) { event.Skip(); }\n \t\t\n \t\n \tpublic:\n \t\twxButton* m_buttonCancel;\n+\t\t\n \t\tCAddressBookDialogBase( wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _(\"Address Book\"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize( 610,390 ), long style = wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER );\n \t\t~CAddressBookDialogBase();\n \t\n@@ -408,13 +412,14 @@ class CGetTextFromUserDialogBase : public wxDialog\n \t\twxButton* m_buttonCancel;\n \t\t\n \t\t// Virtual event handlers, overide them in your derived class\n-\t\tvirtual void OnClose( wxCloseEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnKeyDown( wxKeyEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnButtonOK( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnButtonCancel( wxCommandEvent& event ){ event.Skip(); }\n+\t\tvirtual void OnClose( wxCloseEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnKeyDown( wxKeyEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnButtonOK( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnButtonCancel( wxCommandEvent& event ) { event.Skip(); }\n \t\t\n \t\n \tpublic:\n+\t\t\n \t\tCGetTextFromUserDialogBase( wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = wxEmptyString, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize( 440,138 ), long style = wxDEFAULT_DIALOG_STYLE );\n \t\t~CGetTextFromUserDialogBase();\n \t"
      },
      {
        "sha": "f54fdc2ba2269d0e7af527a7deddd1efc5fc4df5",
        "filename": "uiproject.fbp",
        "status": "modified",
        "additions": 405,
        "deletions": 249,
        "changes": 654,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3bcd6790a9a7ce5342b9d59e6075915c0c163148/uiproject.fbp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3bcd6790a9a7ce5342b9d59e6075915c0c163148/uiproject.fbp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/uiproject.fbp?ref=3bcd6790a9a7ce5342b9d59e6075915c0c163148"
      },
      {
        "sha": "655626dd3b41b12b250e136cd11fa5132451fe05",
        "filename": "util.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 2,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3bcd6790a9a7ce5342b9d59e6075915c0c163148/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3bcd6790a9a7ce5342b9d59e6075915c0c163148/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/util.cpp?ref=3bcd6790a9a7ce5342b9d59e6075915c0c163148",
        "patch": "@@ -19,6 +19,7 @@ bool fCommandLine = false;\n string strMiscWarning;\n bool fTestNet = false;\n bool fNoListen = false;\n+bool fLogTimestamps = false;\n \n \n \n@@ -170,8 +171,16 @@ inline int OutputDebugStringF(const char* pszFormat, ...)\n         }\n         if (fileout)\n         {\n-            //// Debug print useful for profiling\n-            //fprintf(fileout, \" %\"PRI64d\" \", GetTimeMillis());\n+            static bool fStartedNewLine = true;\n+\n+            // Debug print useful for profiling\n+            if (fLogTimestamps && fStartedNewLine)\n+                fprintf(fileout, \"%s \", DateTimeStrFormat(\"%x %H:%M:%S\", GetTime()).c_str());\n+            if (pszFormat[strlen(pszFormat) - 1] == '\\n')\n+                fStartedNewLine = true;\n+            else\n+                fStartedNewLine = false;\n+\n             va_list arg_ptr;\n             va_start(arg_ptr, pszFormat);\n             ret = vfprintf(fileout, pszFormat, arg_ptr);"
      },
      {
        "sha": "2a7dbb5107e9e1dd2d31018a6cee18b5ac41f8df",
        "filename": "util.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3bcd6790a9a7ce5342b9d59e6075915c0c163148/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3bcd6790a9a7ce5342b9d59e6075915c0c163148/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/util.h?ref=3bcd6790a9a7ce5342b9d59e6075915c0c163148",
        "patch": "@@ -148,6 +148,7 @@ extern bool fCommandLine;\n extern string strMiscWarning;\n extern bool fTestNet;\n extern bool fNoListen;\n+extern bool fLogTimestamps;\n \n void RandAddSeed();\n void RandAddSeedPerfmon();"
      }
    ]
  },
  {
    "sha": "1442eeb268d85ca7f757ce4073243a02eaf8e809",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxNDQyZWViMjY4ZDg1Y2E3Zjc1N2NlNDA3MzI0M2EwMmVhZjhlODA5",
    "commit": {
      "author": {
        "name": "genjix",
        "email": "fake@lol.u",
        "date": "2011-03-27T12:47:13Z"
      },
      "committer": {
        "name": "genjix",
        "email": "fake@lol.u",
        "date": "2011-03-27T12:47:13Z"
      },
      "message": "Merge branch 'master' into bitnom",
      "tree": {
        "sha": "b3ae30a1b8d5a59e7edc87e5f763dea83a2b33dd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b3ae30a1b8d5a59e7edc87e5f763dea83a2b33dd"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1442eeb268d85ca7f757ce4073243a02eaf8e809",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1442eeb268d85ca7f757ce4073243a02eaf8e809",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1442eeb268d85ca7f757ce4073243a02eaf8e809",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1442eeb268d85ca7f757ce4073243a02eaf8e809/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "0d139cc28b671d4b07422a09ace05ec1ff0b0b18",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0d139cc28b671d4b07422a09ace05ec1ff0b0b18",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0d139cc28b671d4b07422a09ace05ec1ff0b0b18"
      },
      {
        "sha": "3bcd6790a9a7ce5342b9d59e6075915c0c163148",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3bcd6790a9a7ce5342b9d59e6075915c0c163148",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3bcd6790a9a7ce5342b9d59e6075915c0c163148"
      }
    ],
    "stats": {
      "total": 1384,
      "additions": 886,
      "deletions": 498
    },
    "files": [
      {
        "sha": "92385e50b2b23bbdea7364cc9e54a862c56b87a8",
        "filename": "contrib/gitian.yml",
        "status": "added",
        "additions": 37,
        "deletions": 0,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1442eeb268d85ca7f757ce4073243a02eaf8e809/contrib/gitian.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1442eeb268d85ca7f757ce4073243a02eaf8e809/contrib/gitian.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian.yml?ref=1442eeb268d85ca7f757ce4073243a02eaf8e809",
        "patch": "@@ -0,0 +1,37 @@\n+---\n+name: \"bitcoin\"\n+suites:\n+- \"lucid\"\n+architectures:\n+- \"i386\"\n+- \"amd64\"\n+packages: \n+- \"libdb4.8++-dev\"\n+- \"libxxf86vm-dev\"\n+- \"libgtk2.0-dev\"\n+- \"libboost-all-dev\"\n+- \"libssl-dev\"\n+- \"git-core\"\n+reference_datetime: \"2011-01-30 00:00:00\"\n+remotes:\n+- \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n+  \"dir\": \"bitcoin\"\n+files:\n+- \"wxWidgets-2.9.1.tar.bz2\"\n+script: |\n+  INSTDIR=\"$HOME/install\"\n+  export LIBRARY_PATH=\"$INSTDIR/lib\"\n+  tar xjf wxWidgets-2.9.1.tar.bz2\n+  cd wxWidgets-2.9.1\n+  ./configure --prefix=$INSTDIR --enable-monolithic --disable-shared\n+  perl -i -p -e \"s/__TIME__/\\\"$REFERENCE_TIME\\\"/;s/__DATE__/\\\"$REFERENCE_DATE\\\"/\" include/wx/chartype.h\n+  make $MAKEOPTS install\n+  cd ../bitcoin\n+  mkdir -p $OUTDIR/src\n+  cp -a . $OUTDIR/src\n+  rm -rf $OUTDIR/src/.git\n+  mv $OUTDIR/src/locale $OUTDIR\n+  cp $OUTDIR/src/license.txt $OUTDIR\n+  make -f makefile.unix $MAKEOPTS  WXLIBS=\"-Wl,-Bstatic -l wx_gtk2u-2.9 -Wl,-Bdynamic -l gtk-x11-2.0 -l SM -l Xxf86vm\" INCLUDEPATHS=\"`$INSTDIR/bin/wx-config --cflags`\" bitcoin bitcoind\n+  mkdir -p $OUTDIR/bin/$GBUILD_BITS\n+  cp bitcoin bitcoind $OUTDIR/bin/$GBUILD_BITS"
      },
      {
        "sha": "cee60f981a65b09d5d7cbec9e81b74d853f4218f",
        "filename": "init.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 1,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1442eeb268d85ca7f757ce4073243a02eaf8e809/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1442eeb268d85ca7f757ce4073243a02eaf8e809/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/init.cpp?ref=1442eeb268d85ca7f757ce4073243a02eaf8e809",
        "patch": "@@ -119,6 +119,8 @@ bool AppInit2(int argc, char* argv[])\n     sigemptyset(&sa.sa_mask);\n     sa.sa_flags = 0;\n     sigaction(SIGTERM, &sa, NULL);\n+    sigaction(SIGINT, &sa, NULL);\n+    sigaction(SIGHUP, &sa, NULL);\n #endif\n \n     //\n@@ -210,8 +212,8 @@ bool AppInit2(int argc, char* argv[])\n     fPrintToDebugger = GetBoolArg(\"-printtodebugger\");\n \n     fTestNet = GetBoolArg(\"-testnet\");\n-    \n     fNoListen = GetBoolArg(\"-nolisten\");\n+    fLogTimestamps = GetBoolArg(\"-logtimestamps\");\n \n     for (int i = 1; i < argc; i++)\n         if (!IsSwitchChar(argv[i][0]))\n@@ -235,6 +237,10 @@ bool AppInit2(int argc, char* argv[])\n         }\n         if (pid > 0)\n             return true;\n+\n+        pid_t sid = setsid();\n+        if (sid < 0)\n+            fprintf(stderr, \"Error: setsid() returned %d errno %d\\n\", sid, errno);\n     }\n #endif\n \n@@ -428,6 +434,9 @@ bool AppInit2(int argc, char* argv[])\n         }\n     }\n \n+    if (mapArgs.count(\"-dnsseed\"))\n+        DNSAddressSeed();\n+\n     if (mapArgs.count(\"-paytxfee\"))\n     {\n         if (!ParseMoney(mapArgs[\"-paytxfee\"], nTransactionFee))\n@@ -462,6 +471,10 @@ bool AppInit2(int argc, char* argv[])\n     if (fFirstRun)\n         SetStartOnSystemStartup(true);\n #endif\n+    \n+    if (fDaemon)\n+        while (!fShutdown)\n+            Sleep(5000);\n \n     return true;\n }"
      },
      {
        "sha": "0677b6b5ca68014c23d52f50fea1ac2c14cb602c",
        "filename": "locale/es/LC_MESSAGES/bitcoin.mo",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1442eeb268d85ca7f757ce4073243a02eaf8e809/locale/es/LC_MESSAGES/bitcoin.mo",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1442eeb268d85ca7f757ce4073243a02eaf8e809/locale/es/LC_MESSAGES/bitcoin.mo",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/locale/es/LC_MESSAGES/bitcoin.mo?ref=1442eeb268d85ca7f757ce4073243a02eaf8e809"
      },
      {
        "sha": "d5ad2ee91fa4c43c6205a160e185050c5cbb95bd",
        "filename": "locale/es/LC_MESSAGES/bitcoin.po",
        "status": "modified",
        "additions": 13,
        "deletions": 14,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1442eeb268d85ca7f757ce4073243a02eaf8e809/locale/es/LC_MESSAGES/bitcoin.po",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1442eeb268d85ca7f757ce4073243a02eaf8e809/locale/es/LC_MESSAGES/bitcoin.po",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/locale/es/LC_MESSAGES/bitcoin.po?ref=1442eeb268d85ca7f757ce4073243a02eaf8e809",
        "patch": "@@ -3,8 +3,8 @@ msgstr \"\"\n \"Project-Id-Version: \\n\"\n \"Report-Msgid-Bugs-To: \\n\"\n \"POT-Creation-Date: 2010-05-26 22:02-0000\\n\"\n-\"PO-Revision-Date: 2010-07-15 11:07+0100\\n\"\n-\"Last-Translator: milkiway\\n\"\n+\"PO-Revision-Date: 2011-03-16 20:55+0100\\n\"\n+\"Last-Translator: Santiago M. Mola <coldwind@coldwind.org>\\n\"\n \"Language-Team: \\n\"\n \"MIME-Version: 1.0\\n\"\n \"Content-Type: text/plain; charset=UTF-8\\n\"\n@@ -15,24 +15,23 @@ msgstr \"\"\n \n #: ../../../init.cpp:174\n msgid \"Cannot write autostart/bitcoin.desktop file\"\n-msgstr \"\"\n+msgstr \"No se puede escribir el fichero autostart/bitcoin.desktop\"\n \n #: ../../../init.cpp:388\n-#, fuzzy\n msgid \"Usage:\"\n-msgstr \"\"\n+msgstr \"Uso:\"\n \n #: ../../../init.cpp:390\n msgid \"Send command to bitcoin running with -server or -daemon\\n\"\n-msgstr \"\"\n+msgstr \"Enviar comando a bitcoin corriendo con -server o -daemon\\n\"\n \n #: ../../../init.cpp:391\n msgid \"Get help for a command\\n\"\n-msgstr \"\"\n+msgstr \"Recibir ayuda para un comando\\n\"\n \n #: ../../../init.cpp:392\n msgid \"List commands\\n\"\n-msgstr \"\"\n+msgstr \"Lista de comandos\\n\"\n \n #: ../../../init.cpp:393\n msgid \"Options:\\n\"\n@@ -68,11 +67,11 @@ msgstr \"Conectar solo al nodo especificado\\n\"\n \n #: ../../../init.cpp:401\n msgid \"Accept command line and JSON-RPC commands\\n\"\n-msgstr \"\"\n+msgstr \"Aceptar comandos por linea de comandos y JSON-RPC\\n\"\n \n #: ../../../init.cpp:402\n msgid \"Run in the background as a daemon and accept commands\\n\"\n-msgstr \"\"\n+msgstr \"Correr en el fondo como demonio y aceptar comandos\\n\"\n \n #: ../../../init.cpp:403\n msgid \"This help message\\n\"\n@@ -293,11 +292,11 @@ msgstr \"<b>Para:</b> \"\n \n #: ../../../ui.cpp:1247\n msgid \" (yours, label: \"\n-msgstr \"\"\n+msgstr \"(suya, etiqueta: \"\n \n #: ../../../ui.cpp:1249\n msgid \" (yours)\"\n-msgstr \"\"\n+msgstr \"(suya)\"\n \n #: ../../../ui.cpp:1286\n #: ../../../ui.cpp:1298\n@@ -340,9 +339,8 @@ msgid \"Main\"\n msgstr \"Principal\"\n \n #: ../../../ui.cpp:1447\n-#, fuzzy\n msgid \"&Start Bitcoin on window system startup\"\n-msgstr \"&Arrancar Bitcoin al arrancar el sistema\"\n+msgstr \"&Arrancar Bitcoin al arrancar el sistema de ventanas\"\n \n #: ../../../ui.cpp:1454\n msgid \"&Minimize on close\"\n@@ -847,3 +845,4 @@ msgstr \"Sus direcciones Bitcoin\"\n \n #~ msgid \"Usage: bitcoin [options]\"\n #~ msgstr \"Uso: bitcoin [opciones]\"\n+"
      },
      {
        "sha": "8b1e6a50f6863172e58e2d2eae44b7c07b25b11c",
        "filename": "locale/nl/LC_MESSAGES/bitcoin.mo",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1442eeb268d85ca7f757ce4073243a02eaf8e809/locale/nl/LC_MESSAGES/bitcoin.mo",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1442eeb268d85ca7f757ce4073243a02eaf8e809/locale/nl/LC_MESSAGES/bitcoin.mo",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/locale/nl/LC_MESSAGES/bitcoin.mo?ref=1442eeb268d85ca7f757ce4073243a02eaf8e809"
      },
      {
        "sha": "f44b94cc5095871a81a8f9950f62ef76100f4b5a",
        "filename": "locale/nl/LC_MESSAGES/bitcoin.po",
        "status": "modified",
        "additions": 88,
        "deletions": 88,
        "changes": 176,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1442eeb268d85ca7f757ce4073243a02eaf8e809/locale/nl/LC_MESSAGES/bitcoin.po",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1442eeb268d85ca7f757ce4073243a02eaf8e809/locale/nl/LC_MESSAGES/bitcoin.po",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/locale/nl/LC_MESSAGES/bitcoin.po?ref=1442eeb268d85ca7f757ce4073243a02eaf8e809",
        "patch": "@@ -15,7 +15,7 @@ msgstr \"\"\n \n #: ../../../init.cpp:342\n msgid \"Usage: bitcoin [options]\"\n-msgstr \"\"\n+msgstr \"Commandoregel: bitcoin [opties]\"\n \n #: ../../../init.cpp:343\n msgid \"Options:\\n\"\n@@ -31,27 +31,27 @@ msgstr \"Genereer geen coins\\n\"\n \n #: ../../../init.cpp:346\n msgid \"Start minimized\\n\"\n-msgstr \"Start geminimalizeerd\\n\"\n+msgstr \"Geminimaliseerd starten\\n\"\n \n #: ../../../init.cpp:347\n msgid \"Specify data directory\\n\"\n-msgstr \"Specificeer data map\\n\"\n+msgstr \"Stel datamap in\\n\"\n \n #: ../../../init.cpp:348\n msgid \"Connect through socks4 proxy\\n\"\n msgstr \"Verbind via socks4 proxy\\n\"\n \n #: ../../../init.cpp:349\n msgid \"Add a node to connect to\\n\"\n-msgstr \"Voeg een node om naar te verbinden toe\\n\"\n+msgstr \"Voeg een node toe om mee te verbinden\\n\"\n \n #: ../../../init.cpp:350\n msgid \"Connect only to the specified node\\n\"\n-msgstr \"Verbind alleen naar deze node\\n\"\n+msgstr \"Verbind alleen met deze node\\n\"\n \n #: ../../../init.cpp:351\n msgid \"This help message\\n\"\n-msgstr \"\"\n+msgstr \"Dit helpbericht\\n\"\n \n #: ../../../init.cpp:455\n msgid \"Error loading addr.dat      \\n\"\n@@ -71,20 +71,20 @@ msgstr \"Foutief -proxy adres\"\n \n #: ../../../init.cpp:629\n msgid \"Program has crashed and will terminate.  \"\n-msgstr \"Programma is gecrashed en word afgesloten.  \"\n+msgstr \"Het programma is gecrasht en wordt afgesloten.  \"\n \n #: ../../../main.cpp:1465\n msgid \"Warning: Disk space is low  \"\n-msgstr \"Waarschuwng: Gebrek aan schijf ruimte  \"\n+msgstr \"Waarschuwing: Weinig schijfruimte over  \"\n \n #: ../../../main.cpp:2994\n #, c-format\n msgid \"Error: This is an oversized transaction that requires a transaction fee of %s  \"\n-msgstr \"Fout: Dit is een te grote transactie die een fooi nodig heeft van %s  \"\n+msgstr \"Fout: Dit is een te grote transactie, die een fooi vereist van %s  \"\n \n #: ../../../main.cpp:2996\n msgid \"Error: Transaction creation failed  \"\n-msgstr \"Fout: Transactie aanmaak gefaald  \"\n+msgstr \"Fout: Aanmaken van transactie mislukt  \"\n \n #: ../../../main.cpp:3001\n #: ../../../ui.cpp:1761\n@@ -96,26 +96,26 @@ msgstr \"Versturen...\"\n \n #: ../../../main.cpp:3005\n msgid \"Error: The transaction was rejected.  This might happen if some of the coins in your wallet were already spent, such as if you used a copy of wallet.dat and coins were spent in the copy but not marked as spent here.\"\n-msgstr \"Fout: De transactie was afgekeurd.  Dit kan komen als bepaalde coins in uw Portefeuille al zijn uitgegeven.  Dit kan komen doordat u wallet.dat heeft gekopieerd en wat coins heeft uitgegeven en niet terug gekopieerd heeft.\"\n+msgstr \"Fout: De transactie is afgekeurd.  Dit kan gebeuren als bepaalde coins in je Portefeuille al zijn uitgegeven. Dit kan veroorzaakt worden doordat je een kopie van wallet.dat gebruikt hebt en enkel daar je uitgave geregistreerd is.\"\n \n #: ../../../main.cpp:3017\n msgid \"Invalid amount\"\n-msgstr \"Foutief aantal\"\n+msgstr \"Foutieve hoeveelheid\"\n \n #: ../../../main.cpp:3019\n #: ../../../ui.cpp:1971\n #: ../../../ui.cpp:2038\n msgid \"Insufficient funds\"\n-msgstr \"Onvoldoende coins\"\n+msgstr \"Onvoldoende saldo\"\n \n #: ../../../main.cpp:3024\n msgid \"Invalid bitcoin address\"\n-msgstr \"Foutief bitcoin adres\"\n+msgstr \"Foutief bitcoin-adres\"\n \n #: ../../../ui.cpp:189\n #, c-format\n msgid \"This transaction is over the size limit.  You can still send it for a fee of %s, which goes to the nodes that process your transaction and helps to support the network.  Do you want to pay the fee?\"\n-msgstr \"Deze transactie is over het limiet.  U kunt nog door gaan met de transactie door een fooi te betalen van %s, deze word betaald aan de node die uw tranactie verwerkt.  Wilt u de fooi betalen?\"\n+msgstr \"Deze transactie overschrijdt de limiet.  Om de transactie alsnog te verwerken kun je een fooi betalen van %s. Deze zal betaald worden aan de node die uw transactie verwerkt. Wil je doorgaan en deze fooi betalen?\"\n \n #: ../../../ui.cpp:285\n msgid \"Status\"\n@@ -131,16 +131,16 @@ msgstr \"Beschrijving\"\n \n #: ../../../ui.cpp:288\n msgid \"Debit\"\n-msgstr \"\"\n+msgstr \"Debet\"\n \n #: ../../../ui.cpp:289\n msgid \"Credit\"\n-msgstr \"\"\n+msgstr \"Credit\"\n \n #: ../../../ui.cpp:489\n #, c-format\n msgid \"Open for %d blocks\"\n-msgstr \"Open voor %d blocks\"\n+msgstr \"Open gedurende %d blokken\"\n \n #: ../../../ui.cpp:491\n #, c-format\n@@ -169,7 +169,7 @@ msgstr \"Gegenereerd\"\n #: ../../../ui.cpp:592\n #, c-format\n msgid \"Generated (%s matures in %d more blocks)\"\n-msgstr \"Gegenereerd (%s word volwassen in %d blokken)\"\n+msgstr \"Gegenereerd (%s wordt volwassen over %d blokken)\"\n \n #: ../../../ui.cpp:596\n msgid \"Generated - Warning: This block was not received by any other nodes and will probably not be accepted!\"\n@@ -185,19 +185,19 @@ msgstr \"Van: \"\n \n #: ../../../ui.cpp:634\n msgid \"Received with: \"\n-msgstr \"Ontvangen met: \"\n+msgstr \"Ontvangen op: \"\n \n #: ../../../ui.cpp:676\n msgid \"Payment to yourself\"\n-msgstr \"Betaling naar u zelf\"\n+msgstr \"Betaling naar uzelf\"\n \n #: ../../../ui.cpp:713\n msgid \"To: \"\n msgstr \"Naar: \"\n \n #: ../../../ui.cpp:1009\n msgid \"    Generating\"\n-msgstr \"    Genereert\"\n+msgstr \"    Genereren...\"\n \n #: ../../../ui.cpp:1011\n msgid \"(not connected)\"\n@@ -211,7 +211,7 @@ msgstr \"     %d verbindingen     %d blokken     %d transacties\"\n #: ../../../ui.cpp:1123\n #: ../../../ui.cpp:2351\n msgid \"New Receiving Address\"\n-msgstr \"Nieuw Ontvangings Adres\"\n+msgstr \"Nieuw Ontvangstadres\"\n \n #: ../../../ui.cpp:1124\n #: ../../../ui.cpp:2352\n@@ -220,7 +220,7 @@ msgid \"\"\n \"\\n\"\n \"Label\"\n msgstr \"\"\n-\"Het is goed beleid om een nieuw adres voor elke betaling te hebben.\\n\"\n+\"Het is een goede gewoonte om voor iedere betaling die je ontvangt een nieuw adres aan te maken.\\n\"\n \"\\n\"\n \"Label\"\n \n@@ -267,56 +267,56 @@ msgstr \"<b>Naar:</b> \"\n \n #: ../../../ui.cpp:1242\n msgid \" (yours, label: \"\n-msgstr \"\"\n+msgstr \" (van jou, label: \"\n \n #: ../../../ui.cpp:1244\n #, fuzzy\n msgid \" (yours)\"\n-msgstr \"\"\n+msgstr \" (van jou)\"\n \n #: ../../../ui.cpp:1281\n #: ../../../ui.cpp:1293\n #: ../../../ui.cpp:1356\n msgid \"<b>Credit:</b> \"\n-msgstr \"\"\n+msgstr \"<b>Credit:</b>\"\n \n #: ../../../ui.cpp:1283\n #, c-format\n msgid \"(%s matures in %d more blocks)\"\n-msgstr \"(%s word volwassen in %d blokken)\"\n+msgstr \"(%s wordt volwassen over %d blokken)\"\n \n #: ../../../ui.cpp:1285\n msgid \"(not accepted)\"\n-msgstr \"(niet geaccepteerd\"\n+msgstr \"(niet geaccepteerd)\"\n \n #: ../../../ui.cpp:1330\n #: ../../../ui.cpp:1353\n msgid \"<b>Debit:</b> \"\n-msgstr \"\"\n+msgstr \"<b>Debet:</b>\"\n \n #: ../../../ui.cpp:1344\n msgid \"<b>Transaction fee:</b> \"\n-msgstr \"<b>Transactie fooi:</b> \"\n+msgstr \"<b>Transactiefooi:</b> \"\n \n #: ../../../ui.cpp:1360\n msgid \"<b>Net amount:</b> \"\n-msgstr \"<b>Netto bedrag:</b> \"\n+msgstr \"<b>Nettobedrag:</b> \"\n \n #: ../../../ui.cpp:1367\n msgid \"Message:\"\n msgstr \"Mededeling:\"\n \n #: ../../../ui.cpp:1370\n msgid \"Generated coins must wait 120 blocks before they can be spent.  When you generated this block, it was broadcast to the network to be added to the block chain.  If it fails to get into the chain, it will change to \\\"not accepted\\\" and not be spendable.  This may occasionally happen if another node generates a block within a few seconds of yours.\"\n-msgstr \"Gegenereerde coins moeten 120 blokken wachten voordat ze uitgegeven kunnen worden.  Wanneer je dit blok genereerde, werd het naar het netwerk gestuurd om opgenomen teworden in de rest van de blokken.  Als dit faalt, dan zal de dit veranderen in \\\"niet geaccepteerd\\\" en zal niet uitgeefbaar zijn. Dit kan soms gebeuren als een node ook een blok rond dezelfde periode genereerd.\"\n+msgstr \"Gegenereerde coins mogen pas na een wachttijd van 120 blokken uitgegeven worden. Op het moment dat dit blok gegenereerd werd, is het naar het netwerk verzonden om aan de blokkenreeks toegevoegd te worden. Als het niet succesvol in de blokkenreeks opgenomen kan worden verandert de status in \\\"niet geaccepteerd\\\" en kan het niet uitegegeven worden. Dit kan soms gebeuren als een andere node op ongeveer hetzelfde moment een blok genereert.\"\n \n #: ../../../ui.cpp:1437\n msgid \"Main\"\n-msgstr \"Hoofd\"\n+msgstr \"Algemeen\"\n \n #: ../../../ui.cpp:1442\n msgid \"&Minimize on close\"\n-msgstr \"&Minimalizeer bij sluiten\"\n+msgstr \"&Minimaliseer bij sluiten van het venster\"\n \n #: ../../../ui.cpp:1595\n #, c-format\n@@ -325,7 +325,7 @@ msgstr \"versie %s%s BETA\"\n \n #: ../../../ui.cpp:1681\n msgid \"Will appear as \\\"From: Unknown\\\"\"\n-msgstr \"Word vertoont als \\\"Van: Onbekend\\\"\"\n+msgstr \"Wordt weergegeven als \\\"Van: Onbekend\\\"\"\n \n #: ../../../ui.cpp:1681\n msgid \"n/a\"\n@@ -337,7 +337,7 @@ msgstr \"Onbekend\"\n \n #: ../../../ui.cpp:1682\n msgid \"Can't include a message when sending to a Bitcoin address\"\n-msgstr \"Kan geen mededeling versturen bij gebruik van Bitcoin adressen\"\n+msgstr \"Kan geen mededeling bijvoegen bij gebruik van bitcoin-adressen\"\n \n #: ../../../ui.cpp:1735\n msgid \"Error in amount  \"\n@@ -349,23 +349,23 @@ msgstr \"Fout in hoeveelheid  \"\n #: ../../../ui.cpp:1771\n #: ../../../uibase.cpp:61\n msgid \"Send Coins\"\n-msgstr \"Verstuur Coins\"\n+msgstr \"Verstuur coins\"\n \n #: ../../../ui.cpp:1740\n msgid \"Amount exceeds your balance  \"\n-msgstr \"Hoeveelheid hoger dan uw huidige balans  \"\n+msgstr \"Hoeveelheid overschrijdt uw huidige balans  \"\n \n #: ../../../ui.cpp:1745\n msgid \"Total exceeds your balance when the \"\n-msgstr \"Totaal groter dan uw huidige balans wanner de \"\n+msgstr \"Totaal overschrijdt uw huidige balans wanneer de \"\n \n #: ../../../ui.cpp:1745\n msgid \" transaction fee is included  \"\n-msgstr \" transactie fooi is bijgerekend  \"\n+msgstr \" transactiefooi is meegerekend  \"\n \n #: ../../../ui.cpp:1761\n msgid \"Payment sent  \"\n-msgstr \"Betaling verstuurd  \"\n+msgstr \"Betaling verzonden  \"\n \n #: ../../../ui.cpp:1771\n msgid \"Invalid address  \"\n@@ -374,7 +374,7 @@ msgstr \"Foutief adres  \"\n #: ../../../ui.cpp:1825\n #, c-format\n msgid \"Sending %s to %s\"\n-msgstr \"Verstuurd %s naar %s\"\n+msgstr \"%s versturen naar %s\"\n \n #: ../../../ui.cpp:1898\n #: ../../../ui.cpp:1931\n@@ -419,16 +419,16 @@ msgstr \"Foutief antwoord ontvangen\"\n \n #: ../../../ui.cpp:2034\n msgid \"Creating transaction...\"\n-msgstr \"Maakt transactie aan...\"\n+msgstr \"Transactie aanmaken...\"\n \n #: ../../../ui.cpp:2046\n #, c-format\n msgid \"This is an oversized transaction that requires a transaction fee of %s\"\n-msgstr \"Dit is een te grote transactie die een transactie fooi vereist van %s\"\n+msgstr \"Fout: Dit is een te grote transactie, die een fooi vereist van %s\"\n \n #: ../../../ui.cpp:2048\n msgid \"Transaction creation failed\"\n-msgstr \"Transactie aanmaak gefaald.\"\n+msgstr \"Aanmaken van transactie mislukt\"\n \n #: ../../../ui.cpp:2055\n msgid \"Transaction aborted\"\n@@ -440,11 +440,11 @@ msgstr \"Verbinding verloren, transactie geannuleerd\"\n \n #: ../../../ui.cpp:2079\n msgid \"Sending payment...\"\n-msgstr \"Versturen van betaling...\"\n+msgstr \"Betaling versturen...\"\n \n #: ../../../ui.cpp:2085\n msgid \"The transaction was rejected.  This might happen if some of the coins in your wallet were already spent, such as if you used a copy of wallet.dat and coins were spent in the copy but not marked as spent here.\"\n-msgstr \"De transactie was afgekeurd.  Dit kan komen als bepaalde coins in uw Portefeuille al zijn uitgegeven.  Dit kan komen doordat u wallet.dat heeft gekopieerd en wat coins heeft uitgegeven en niet terug gekopieerd heeft.\"\n+msgstr \"Fout: De transactie is afgekeurd.  Dit kan gebeuren als bepaalde coins in je Portefeuille al zijn uitgegeven. Dit kan veroorzaakt worden doordat je een kopie van wallet.dat gebruikt hebt en enkel daar je uitgave geregistreerd is.\"\n \n #: ../../../ui.cpp:2092\n msgid \"Waiting for confirmation...\"\n@@ -456,13 +456,13 @@ msgid \"\"\n \"The transaction is recorded and will credit to the recipient,\\n\"\n \"but the comment information will be blank.\"\n msgstr \"\"\n-\"De betaling was verstuurd, maar de ontvanger kon het niet verifieeren.\\n\"\n-\"De transactie is opgenomen en word uitbetaald aan de ontvanger,\\n\"\n-\"maar de mededeling blijft blank bij de ontanger.\"\n+\"De betaling is verstuurd, maar de ontvanger kon hem niet verifi\u00ebren.\\n\"\n+\"De transactie is opgenomen en wordt uitbetaald aan de ontvanger,\\n\"\n+\"maar het mededelings-veld blijft blanco.\"\n \n #: ../../../ui.cpp:2119\n msgid \"Payment was sent, but an invalid response was received\"\n-msgstr \"Betaling was verstuurd, maar een foutief antword was ontvangen.\"\n+msgstr \"Betaling is verstuurd, maar een foutief antword is ontvangen.\"\n \n #: ../../../ui.cpp:2125\n msgid \"Payment completed\"\n@@ -488,33 +488,33 @@ msgstr \"Label\"\n #: ../../../ui.cpp:2160\n #: ../../../uibase.cpp:908\n msgid \"Bitcoin Address\"\n-msgstr \"Bitcoin Adres\"\n+msgstr \"Bitcoin-adres\"\n \n #: ../../../ui.cpp:2284\n msgid \"This is one of your own addresses for receiving payments and cannot be entered in the address book.  \"\n-msgstr \"Dit is een van uw eigen adressen voor het ontvangen van betalingen en can niet worden toegevoegd aan uw adressen boek.  \"\n+msgstr \"Dit is een van uw eigen adressen voor het ontvangen van betalingen, en kan niet worden toegevoegd aan uw adresboek.  \"\n \n #: ../../../ui.cpp:2302\n #: ../../../ui.cpp:2308\n msgid \"Edit Address\"\n-msgstr \"Bewerk Adres\"\n+msgstr \"Bewerk adres\"\n \n #: ../../../ui.cpp:2314\n msgid \"Edit Address Label\"\n-msgstr \"Bewerk Adres Label\"\n+msgstr \"Bewerk adreslabel\"\n \n #: ../../../ui.cpp:2339\n #: ../../../ui.cpp:2345\n msgid \"Add Address\"\n-msgstr \"Adres Toevoegen\"\n+msgstr \"Adres toevoegen\"\n \n #: ../../../ui.cpp:2421\n msgid \"Bitcoin\"\n msgstr \"Bitcoin\"\n \n #: ../../../ui.cpp:2423\n msgid \"Bitcoin - Generating\"\n-msgstr \"Bitcoin - Genereert\"\n+msgstr \"Bitcoin - Genereren...\"\n \n #: ../../../ui.cpp:2425\n msgid \"Bitcoin - (not connected)\"\n@@ -531,7 +531,7 @@ msgstr \"O&pties\"\n #: ../../../ui.cpp:2502\n #: ../../../uibase.cpp:34\n msgid \"&Generate Coins\"\n-msgstr \"&Genereer Coins\"\n+msgstr \"&Genereer coins\"\n \n #: ../../../ui.cpp:2505\n #: ../../../uibase.cpp:27\n@@ -544,7 +544,7 @@ msgstr \"&Bestand\"\n \n #: ../../../uibase.cpp:38\n msgid \"&Your Receiving Addresses...\"\n-msgstr \"&Uw Ontvang Adressen...\"\n+msgstr \"&Uw ontvangstadressen...\"\n \n #: ../../../uibase.cpp:42\n msgid \"&Options...\"\n@@ -564,11 +564,11 @@ msgstr \"&Help\"\n \n #: ../../../uibase.cpp:62\n msgid \"Address Book\"\n-msgstr \"Adressen Boek\"\n+msgstr \"Adresboek\"\n \n #: ../../../uibase.cpp:77\n msgid \"Your Bitcoin Address:\"\n-msgstr \"Uw Bitcoin Address:\"\n+msgstr \"Uw bitcoin-adres:\"\n \n #: ../../../uibase.cpp:84\n msgid \" &New... \"\n@@ -578,7 +578,7 @@ msgstr \" &Nieuw... \"\n #: ../../../uibase.cpp:851\n #: ../../../uibase.cpp:954\n msgid \" &Copy to Clipboard \"\n-msgstr \" &Kopieer naar Plakboord \"\n+msgstr \" &Kopieer naar plakbord \"\n \n #: ../../../uibase.cpp:102\n msgid \"Balance:\"\n@@ -598,7 +598,7 @@ msgstr \" Ontvangen\"\n \n #: ../../../uibase.cpp:121\n msgid \" In Progress\"\n-msgstr \" Word Verwerkt\"\n+msgstr \" Wordt verwerkt\"\n \n #: ../../../uibase.cpp:142\n msgid \"All Transactions\"\n@@ -628,15 +628,15 @@ msgstr \"OK\"\n \n #: ../../../uibase.cpp:361\n msgid \"Optional transaction fee you give to the nodes that process your transactions.\"\n-msgstr \"Optionele transactie fooi die u geeft aan de nodes doe uw betaling verwerken.\"\n+msgstr \"Optionele transactiefooi die u geeft aan de nodes die uw transacties verwerken.\"\n \n #: ../../../uibase.cpp:370\n msgid \"Transaction fee:\"\n-msgstr \"Transactie fooi:\"\n+msgstr \"Transactiefooi:\"\n \n #: ../../../uibase.cpp:386\n msgid \"&Limit coin generation to\"\n-msgstr \"&Limiteer coin generatie tot\"\n+msgstr \"&Limiteer coin-generatie tot\"\n \n #: ../../../uibase.cpp:393\n msgid \"processors\"\n@@ -648,11 +648,11 @@ msgstr \"&Start Bitcoin wanneer het systeem opstart\"\n \n #: ../../../uibase.cpp:403\n msgid \"&Minimize to the tray instead of the taskbar\"\n-msgstr \"&Minimalizeer tot systeemvak inplaats van taakbalk\"\n+msgstr \"&Minimaliseer tot systeemvak in plaats van de taakbalk\"\n \n #: ../../../uibase.cpp:407\n msgid \"M&inimize to the tray on close\"\n-msgstr \"M&inimalizeer tot taakbalk bij sluiten\"\n+msgstr \"M&inimaliseer tot taakbalk bij sluiten\"\n \n #: ../../../uibase.cpp:414\n msgid \"&Connect through socks4 proxy: \"\n@@ -681,7 +681,7 @@ msgstr \"\"\n #: ../../../uibase.cpp:966\n #: ../../../uibase.cpp:1055\n msgid \"Cancel\"\n-msgstr \"Annuleer\"\n+msgstr \"Annuleren\"\n \n #: ../../../uibase.cpp:485\n msgid \"&Apply\"\n@@ -708,32 +708,32 @@ msgid \"\"\n \"OpenSSL Toolkit (http://www.openssl.org/) and cryptographic software written by \\n\"\n \"Eric Young (eay@cryptsoft.com).\"\n msgstr \"\"\n-\"Copyright (c) 2009-2010 Bitcoin Developers\\n\"\n+\"Copyright (c) 2009-2011 Bitcoin-ontwikkelaars\\n\"\n \"\\n\"\n \"Dit is experimentele software.\\n\"\n \"\\n\"\n-\"Gedistributeerd onder de MIT/X11 software licentie, see het bijbehorende bestand \\n\"\n-\"license.txt of http://www.opensource.org/licenses/mit-license.php.\\n\"\n+\"Gedistributeerd onder de MIT/X11 software licentie, zie het bijgevoegde bestand \\n\"\n+\"license.txt of kijk op http://www.opensource.org/licenses/mit-license.php.\\n\"\n \"\\n\"\n-\"Dit product komt met software ontwikkeld door het OpenSSL Project for gebruik \\n\"\n-\"in de OpenSSL Toolkit (http://www.openssl.org/) and de cryptografische \\n\"\n+\"Dit product bevat software ontwikkeld door het OpenSSL project for gebruik \\n\"\n+\"in de OpenSSL Toolkit (http://www.openssl.org/), en cryptografische \\n\"\n \"software geschreven door Eric Young (eay@cryptsoft.com).\"\n \n #: ../../../uibase.cpp:619\n msgid \"Enter a Bitcoin address (e.g. 1NS17iag9jJgTHD1VXjvLCEnZuQ3rJED9L) or IP address (e.g. 123.45.6.7)\"\n-msgstr \"Voer een Bitcoin adres (bijvoorbeeld: 1NS17iag9jJgTHD1VXjvLCEnZuQ3rJED9L) of IP address (bijvoorbeeld: 123.45.6.7) in.\"\n+msgstr \"Voer een bitcoin-adres (bijvoorbeeld: 1NS17iag9jJgTHD1VXjvLCEnZuQ3rJED9L) of IP-adres (bijvoorbeeld: 123.45.6.7) in.\"\n \n #: ../../../uibase.cpp:633\n msgid \"Pay &To:\"\n-msgstr \"Betaal &Naar:\"\n+msgstr \"Betaal &aan:\"\n \n #: ../../../uibase.cpp:648\n msgid \"&Paste\"\n msgstr \"&Plakken\"\n \n #: ../../../uibase.cpp:651\n msgid \" Address &Book...\"\n-msgstr \" Adressen &Boek...\"\n+msgstr \" Adres&boek...\"\n \n #: ../../../uibase.cpp:658\n msgid \"&Amount:\"\n@@ -757,7 +757,7 @@ msgstr \"&Mededeling:\"\n \n #: ../../../uibase.cpp:730\n msgid \"&Send\"\n-msgstr \"&Verstuur\"\n+msgstr \"&Versturen\"\n \n #: ../../../uibase.cpp:782\n msgid \"\"\n@@ -771,37 +771,37 @@ msgstr \"\"\n \n #: ../../../uibase.cpp:832\n msgid \"These are your Bitcoin addresses for receiving payments.  You may want to give a different one to each sender so you can keep track of who is paying you.  The highlighted address is displayed in the main window.\"\n-msgstr \"Dit zijn uw Bitcoin Adressen voor het ontvangen van betalingen.  Misschien wilt u elk contact persoon een ander adres geven zodat u kunt bij houden wie er u heeft betaald.  De opgelichte adressen worden weergeven in het hoofd venster.\"\n+msgstr \"Dit zijn je bitcoin-adressen voor het ontvangen van betalingen.  Het is een goed idee iedere afzender een ander adres te geven zodat je bij kunt houden wie je een betaling stuurt. Het geselecteerde adres is zichtbaar in het hoofdscherm.\"\n \n #: ../../../uibase.cpp:845\n #: ../../../uibase.cpp:957\n msgid \"&Edit...\"\n-msgstr \"&Bewerk...\"\n+msgstr \"&Bewerken...\"\n \n #: ../../../uibase.cpp:848\n #: ../../../uibase.cpp:960\n msgid \" &New Address... \"\n-msgstr \" &New Adres... \"\n+msgstr \" &Nieuw adres... \"\n \n #: ../../../uibase.cpp:920\n msgid \"Sending\"\n-msgstr \"Versturen\"\n+msgstr \"Versturen...\"\n \n #: ../../../uibase.cpp:928\n msgid \"These are your Bitcoin addresses for receiving payments.  You can give a different one to each sender to keep track of who is paying you.  The highlighted address will be displayed in the main window.\"\n-msgstr \"Dit zijn uw Bitcoin adressen voor het ontvangen van betalingen.  U kunt een aan elk contact persoon geven zodat u een overzicht kunt houden wie u betaald.  Dit adres zal wergeven worden in het hoofd main venster.\"\n+msgstr \"Dit zijn je bitcoin-adressen voor het ontvangen van betalingen.  Het is een goed idee iedere afzender een ander adres te geven zodat je bij kunt houden wie je een betaling stuurt. Het geselecteerde adres is zichtbaar in het hoofdscherm.\"\n \n #: ../../../uibase.cpp:941\n msgid \"Receiving\"\n-msgstr \"Ontvangen\"\n+msgstr \"Ontvangen...\"\n \n #: ../../../uibase.cpp:951\n msgid \"&Delete\"\n-msgstr \"&Verwijder\"\n+msgstr \"&Verwijderen\"\n \n #: ../../../uibase.h:150\n msgid \"Transaction Details\"\n-msgstr \"Transactie Details\"\n+msgstr \"Transactiedetails\"\n \n #: ../../../uibase.h:203\n msgid \"Options\"\n@@ -813,4 +813,4 @@ msgstr \"Over Bitcoin\"\n \n #: ../../../uibase.h:341\n msgid \"Your Bitcoin Addresses\"\n-msgstr \"Uw Bitcoin Adressen\"\n+msgstr \"Uw bitcoin-adressen\""
      },
      {
        "sha": "bfc45af28eb4adc02ce3cd07347ac09cc6ba300b",
        "filename": "main.cpp",
        "status": "modified",
        "additions": 101,
        "deletions": 49,
        "changes": 150,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1442eeb268d85ca7f757ce4073243a02eaf8e809/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1442eeb268d85ca7f757ce4073243a02eaf8e809/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/main.cpp?ref=1442eeb268d85ca7f757ce4073243a02eaf8e809",
        "patch": "@@ -287,7 +287,7 @@ void EraseOrphanTx(uint256 hash)\n \n //////////////////////////////////////////////////////////////////////////////\n //\n-// CTransaction\n+// CTransaction and CTxIndex\n //\n \n bool CTransaction::ReadFromDisk(CTxDB& txdb, COutPoint prevout, CTxIndex& txindexRet)\n@@ -678,7 +678,11 @@ bool CTransaction::AcceptToMemoryPool(CTxDB& txdb, bool fCheckInputs, bool* pfMi\n \n     // Safety limits\n     unsigned int nSize = ::GetSerializeSize(*this, SER_NETWORK);\n-    if (GetSigOpCount() > 2 || nSize < 100)\n+    // Checking ECDSA signatures is a CPU bottleneck, so to avoid denial-of-service\n+    // attacks disallow transactions with more than one SigOp per 34 bytes.\n+    // 34 bytes because a TxOut is:\n+    //   20-byte address + 8 byte bitcoin amount + 5 bytes of ops + 1 byte script length\n+    if (GetSigOpCount() > nSize / 34 || nSize < 100)\n         return error(\"AcceptToMemoryPool() : nonstandard transaction\");\n \n     // Rather not work on nonstandard transactions\n@@ -738,19 +742,29 @@ bool CTransaction::AcceptToMemoryPool(CTxDB& txdb, bool fCheckInputs, bool* pfMi\n         if (nFees < GetMinFee(1000))\n             return error(\"AcceptToMemoryPool() : not enough fees\");\n \n-        // Limit free transactions per 10 minutes\n-        if (nFees < CENT && GetBoolArg(\"-limitfreerelay\"))\n+        // Continuously rate-limit free transactions\n+        // This mitigates 'penny-flooding' -- sending thousands of free transactions just to\n+        // be annoying or make other's transactions take longer to confirm.\n+        if (nFees < CENT)\n         {\n-            static int64 nNextReset;\n-            static int64 nFreeCount;\n-            if (GetTime() > nNextReset)\n+            static CCriticalSection cs;\n+            static double dFreeCount;\n+            static int64 nLastTime;\n+            int64 nNow = GetTime();\n+\n+            CRITICAL_BLOCK(cs)\n             {\n-                nNextReset = GetTime() + 10 * 60;\n-                nFreeCount = 0;\n+                // Use an exponentially decaying ~10-minute window:\n+                dFreeCount *= pow(1.0 - 1.0/600.0, (double)(nNow - nLastTime));\n+                nLastTime = nNow;\n+                // -limitfreerelay unit is thousand-bytes-per-minute\n+                // At default rate it would take over a month to fill 1GB\n+                if (dFreeCount > GetArg(\"-limitfreerelay\", 15)*10*1000 && !IsFromMe())\n+                    return error(\"AcceptToMemoryPool() : free transaction rejected by rate limiter\");\n+                if (fDebug)\n+                    printf(\"Rate limit dFreeCount: %g => %g\\n\", dFreeCount, dFreeCount+nSize);\n+                dFreeCount += nSize;\n             }\n-            if (nFreeCount > 150000 && !IsFromMe())\n-                return error(\"AcceptToMemoryPool() : free transaction rejected by rate limiter\");\n-            nFreeCount += nSize;\n         }\n     }\n \n@@ -1034,6 +1048,22 @@ void ResendWalletTransactions()\n     }\n }\n \n+int CTxIndex::GetDepthInMainChain() const\n+{\n+    // Read block header\n+    CBlock block;\n+    if (!block.ReadFromDisk(pos.nFile, pos.nBlockPos, false))\n+        return 0;\n+    // Find the block in the index\n+    map<uint256, CBlockIndex*>::iterator mi = mapBlockIndex.find(block.GetHash());\n+    if (mi == mapBlockIndex.end())\n+        return 0;\n+    CBlockIndex* pindex = (*mi).second;\n+    if (!pindex || !pindex->IsInMainChain())\n+        return 0;\n+    return 1 + nBestHeight - pindex->nHeight;\n+}\n+\n \n \n \n@@ -2366,6 +2396,10 @@ bool ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n             return true;\n         }\n \n+        // Be shy and don't send version until we hear\n+        if (pfrom->fInbound)\n+            pfrom->PushVersion();\n+\n         pfrom->fClient = !(pfrom->nServices & NODE_NETWORK);\n \n         AddTimeData(pfrom->addr.ip, nTime);\n@@ -3327,18 +3361,7 @@ CBlock* CreateNewBlock(CReserveKey& reservekey)\n                 int64 nValueIn = txPrev.vout[txin.prevout.n].nValue;\n \n                 // Read block header\n-                int nConf = 0;\n-                CBlock block;\n-                if (block.ReadFromDisk(txindex.pos.nFile, txindex.pos.nBlockPos, false))\n-                {\n-                    map<uint256, CBlockIndex*>::iterator it = mapBlockIndex.find(block.GetHash());\n-                    if (it != mapBlockIndex.end())\n-                    {\n-                        CBlockIndex* pindex = (*it).second;\n-                        if (pindex->IsInMainChain())\n-                            nConf = 1 + nBestHeight - pindex->nHeight;\n-                    }\n-                }\n+                int nConf = txindex.GetDepthInMainChain();\n \n                 dPriority += (double)nValueIn * nConf;\n \n@@ -3383,7 +3406,7 @@ CBlock* CreateNewBlock(CReserveKey& reservekey)\n                 continue;\n \n             // Transaction fee required depends on block size\n-            bool fAllowFree = (nBlockSize + nTxSize < 4000 || dPriority > COIN * 144 / 250);\n+            bool fAllowFree = (nBlockSize + nTxSize < 4000 || CTransaction::AllowFree(dPriority));\n             int64 nMinFee = tx.GetMinFee(nBlockSize, fAllowFree);\n \n             // Connecting shouldn't fail due to dependency on other memory pool transactions\n@@ -3750,16 +3773,16 @@ bool SelectCoinsMinConf(int64 nTargetValue, int nConfMine, int nConfTheirs, set<\n             int64 n = pcoin->GetCredit();\n             if (n <= 0)\n                 continue;\n-            if (n < nTargetValue)\n-            {\n-                vValue.push_back(make_pair(n, pcoin));\n-                nTotalLower += n;\n-            }\n-            else if (n == nTargetValue)\n+            if (n == nTargetValue)\n             {\n                 setCoinsRet.insert(pcoin);\n                 return true;\n             }\n+            else if (n < nTargetValue + CENT)\n+            {\n+                vValue.push_back(make_pair(n, pcoin));\n+                nTotalLower += n;\n+            }\n             else if (n < nLowestLarger)\n             {\n                 nLowestLarger = n;\n@@ -3768,14 +3791,24 @@ bool SelectCoinsMinConf(int64 nTargetValue, int nConfMine, int nConfTheirs, set<\n         }\n     }\n \n-    if (nTotalLower < nTargetValue)\n+    if (nTotalLower == nTargetValue || nTotalLower == nTargetValue + CENT)\n+    {\n+        for (int i = 0; i < vValue.size(); ++i)\n+            setCoinsRet.insert(vValue[i].second);\n+        return true;\n+    }\n+\n+    if (nTotalLower < nTargetValue + (pcoinLowestLarger ? CENT : 0))\n     {\n         if (pcoinLowestLarger == NULL)\n             return false;\n         setCoinsRet.insert(pcoinLowestLarger);\n         return true;\n     }\n \n+    if (nTotalLower >= nTargetValue + CENT)\n+        nTargetValue += CENT;\n+\n     // Solve subset sum by stochastic approximation\n     sort(vValue.rbegin(), vValue.rend());\n     vector<char> vfIncluded;\n@@ -3841,8 +3874,18 @@ bool SelectCoins(int64 nTargetValue, set<CWalletTx*>& setCoinsRet)\n \n \n \n-bool CreateTransaction(CScript scriptPubKey, int64 nValue, CWalletTx& wtxNew, CReserveKey& reservekey, int64& nFeeRet)\n+bool CreateTransaction(const vector<pair<CScript, int64> >& vecSend, CWalletTx& wtxNew, CReserveKey& reservekey, int64& nFeeRet)\n {\n+    int64 nValue = 0;\n+    foreach (const PAIRTYPE(CScript, int64)& s, vecSend)\n+    {\n+        if (nValue < 0)\n+            return false;\n+        nValue += s.second;\n+    }\n+    if (vecSend.empty() || nValue < 0)\n+        return false;\n+\n     CRITICAL_BLOCK(cs_main)\n     {\n         // txdb must be opened before the mapWallet lock\n@@ -3855,23 +3898,24 @@ bool CreateTransaction(CScript scriptPubKey, int64 nValue, CWalletTx& wtxNew, CR\n                 wtxNew.vin.clear();\n                 wtxNew.vout.clear();\n                 wtxNew.fFromMe = true;\n-                if (nValue < 0)\n-                    return false;\n-                int64 nValueOut = nValue;\n+\n                 int64 nTotalValue = nValue + nFeeRet;\n+                double dPriority = 0;\n+                // vouts to the payees\n+                foreach (const PAIRTYPE(CScript, int64)& s, vecSend)\n+                    wtxNew.vout.push_back(CTxOut(s.second, s.first));\n \n                 // Choose coins to use\n                 set<CWalletTx*> setCoins;\n                 if (!SelectCoins(nTotalValue, setCoins))\n                     return false;\n                 int64 nValueIn = 0;\n                 foreach(CWalletTx* pcoin, setCoins)\n-                    nValueIn += pcoin->GetCredit();\n-\n-                // Fill a vout to the payee\n-                bool fChangeFirst = GetRand(2);\n-                if (!fChangeFirst)\n-                    wtxNew.vout.push_back(CTxOut(nValueOut, scriptPubKey));\n+                {\n+                    int64 nCredit = pcoin->GetCredit();\n+                    nValueIn += nCredit;\n+                    dPriority += (double)nCredit * pcoin->GetDepthInMainChain();\n+                }\n \n                 // Fill a vout back to self with any change\n                 int64 nChange = nValueIn - nTotalValue;\n@@ -3890,19 +3934,18 @@ bool CreateTransaction(CScript scriptPubKey, int64 nValue, CWalletTx& wtxNew, CR\n \n                     // Fill a vout to ourself, using same address type as the payment\n                     CScript scriptChange;\n-                    if (scriptPubKey.GetBitcoinAddressHash160() != 0)\n+                    if (vecSend[0].first.GetBitcoinAddressHash160() != 0)\n                         scriptChange.SetBitcoinAddress(vchPubKey);\n                     else\n                         scriptChange << vchPubKey << OP_CHECKSIG;\n-                    wtxNew.vout.push_back(CTxOut(nChange, scriptChange));\n+\n+                    // Insert change txn at random position:\n+                    vector<CTxOut>::iterator position = wtxNew.vout.begin()+GetRandInt(wtxNew.vout.size());\n+                    wtxNew.vout.insert(position, CTxOut(nChange, scriptChange));\n                 }\n                 else\n                     reservekey.ReturnKey();\n \n-                // Fill a vout to the payee\n-                if (fChangeFirst)\n-                    wtxNew.vout.push_back(CTxOut(nValueOut, scriptPubKey));\n-\n                 // Fill vin\n                 foreach(CWalletTx* pcoin, setCoins)\n                     for (int nOut = 0; nOut < pcoin->vout.size(); nOut++)\n@@ -3921,10 +3964,12 @@ bool CreateTransaction(CScript scriptPubKey, int64 nValue, CWalletTx& wtxNew, CR\n                 unsigned int nBytes = ::GetSerializeSize(*(CTransaction*)&wtxNew, SER_NETWORK);\n                 if (nBytes >= MAX_BLOCK_SIZE_GEN/5)\n                     return false;\n+                dPriority /= nBytes;\n \n                 // Check that enough fee is included\n                 int64 nPayFee = nTransactionFee * (1 + (int64)nBytes / 1000);\n-                int64 nMinFee = wtxNew.GetMinFee();\n+                bool fAllowFree = CTransaction::AllowFree(dPriority);\n+                int64 nMinFee = wtxNew.GetMinFee(1, fAllowFree);\n                 if (nFeeRet < max(nPayFee, nMinFee))\n                 {\n                     nFeeRet = max(nPayFee, nMinFee);\n@@ -3942,6 +3987,13 @@ bool CreateTransaction(CScript scriptPubKey, int64 nValue, CWalletTx& wtxNew, CR\n     return true;\n }\n \n+bool CreateTransaction(CScript scriptPubKey, int64 nValue, CWalletTx& wtxNew, CReserveKey& reservekey, int64& nFeeRet)\n+{\n+    vector< pair<CScript, int64> > vecSend;\n+    vecSend.push_back(make_pair(scriptPubKey, nValue));\n+    return CreateTransaction(vecSend, wtxNew, reservekey, nFeeRet);\n+}\n+\n // Call after CreateTransaction unless you want to abort\n bool CommitTransaction(CWalletTx& wtxNew, CReserveKey& reservekey)\n {"
      },
      {
        "sha": "e9d0c0031057dd118f8f6f6965ebea093bbdf330",
        "filename": "main.h",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1442eeb268d85ca7f757ce4073243a02eaf8e809/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1442eeb268d85ca7f757ce4073243a02eaf8e809/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/main.h?ref=1442eeb268d85ca7f757ce4073243a02eaf8e809",
        "patch": "@@ -77,6 +77,7 @@ bool ProcessMessages(CNode* pfrom);\n bool ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv);\n bool SendMessages(CNode* pto, bool fSendTrickle);\n int64 GetBalance();\n+bool CreateTransaction(const vector<pair<CScript, int64> >& vecSend, CWalletTx& wtxNew, CReserveKey& reservekey, int64& nFeeRet);\n bool CreateTransaction(CScript scriptPubKey, int64 nValue, CWalletTx& wtxNew, CReserveKey& reservekey, int64& nFeeRet);\n bool CommitTransaction(CWalletTx& wtxNew, CReserveKey& reservekey);\n bool BroadcastTransaction(CWalletTx& wtxNew);\n@@ -574,6 +575,13 @@ class CTransaction\n         return nValueOut;\n     }\n \n+    static bool AllowFree(double dPriority)\n+    {\n+        // Large (in bytes) low-priority (new, small-coin) transactions\n+        // need a fee.\n+        return dPriority > COIN * 144 / 250;\n+    }\n+\n     int64 GetMinFee(unsigned int nBlockSize=1, bool fAllowFree=true) const\n     {\n         // Base fee is 1 cent per kilobyte\n@@ -998,6 +1006,7 @@ class CTxIndex\n     {\n         return !(a == b);\n     }\n+    int GetDepthInMainChain() const;\n };\n \n "
      },
      {
        "sha": "372402f51fb0441daaf43d7c8342a30e377788e0",
        "filename": "net.cpp",
        "status": "modified",
        "additions": 27,
        "deletions": 0,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1442eeb268d85ca7f757ce4073243a02eaf8e809/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1442eeb268d85ca7f757ce4073243a02eaf8e809/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/net.cpp?ref=1442eeb268d85ca7f757ce4073243a02eaf8e809",
        "patch": "@@ -857,7 +857,34 @@ void ThreadSocketHandler2(void* parg)\n \n \n \n+static const char *strDNSSeed[] = {\n+    \"bitseed.xf2.org\",\n+};\n \n+void DNSAddressSeed()\n+{\n+    int found = 0;\n+\n+    printf(\"Loading addresses from DNS seeds (could take a while)\\n\");\n+\n+    for (int seed_idx = 0; seed_idx < ARRAYLEN(strDNSSeed); seed_idx++) {\n+        struct hostent* phostent = gethostbyname(strDNSSeed[seed_idx]);\n+        if (!phostent)\n+            continue;\n+\n+        for (int host = 0; phostent->h_addr_list[host] != NULL; host++) {\n+            CAddress addr(*(unsigned int*)phostent->h_addr_list[host],\n+                          GetDefaultPort(), NODE_NETWORK);\n+            addr.nTime = 0;\n+            if (addr.IsValid() && addr.GetByte(3) != 127) {\n+                AddAddress(addr);\n+                found++;\n+            }\n+        }\n+    }\n+\n+    printf(\"%d addresses found from DNS seeds\\n\", found);\n+}\n \n \n "
      },
      {
        "sha": "7d4974fd01a2afede00447426a47595ce977356b",
        "filename": "net.h",
        "status": "modified",
        "additions": 17,
        "deletions": 8,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1442eeb268d85ca7f757ce4073243a02eaf8e809/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1442eeb268d85ca7f757ce4073243a02eaf8e809/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/net.h?ref=1442eeb268d85ca7f757ce4073243a02eaf8e809",
        "patch": "@@ -30,6 +30,7 @@ CNode* FindNode(unsigned int ip);\n CNode* ConnectNode(CAddress addrConnect, int64 nTimeout=0);\n void AbandonRequests(void (*fn)(void*, CDataStream&), void* param1);\n bool AnySubscribed(unsigned int nChannel);\n+void DNSAddressSeed();\n bool BindListenPort(string& strError=REF(string()));\n void StartNode(void* parg);\n bool StopNode();\n@@ -571,14 +572,9 @@ class CNode\n         fGetAddr = false;\n         vfSubscribe.assign(256, false);\n \n-        // Push a version message\n-        /// when NTP implemented, change to just nTime = GetAdjustedTime()\n-        int64 nTime = (fInbound ? GetAdjustedTime() : GetTime());\n-        CAddress addrYou = (fUseProxy ? CAddress(\"0.0.0.0\") : addr);\n-        CAddress addrMe = (fUseProxy ? CAddress(\"0.0.0.0\") : addrLocalHost);\n-        RAND_bytes((unsigned char*)&nLocalHostNonce, sizeof(nLocalHostNonce));\n-        PushMessage(\"version\", VERSION, nLocalServices, nTime, addrYou, addrMe,\n-                    nLocalHostNonce, string(pszSubVer), nBestHeight);\n+        // Be shy and don't send version until we hear\n+        if (!fInbound)\n+            PushVersion();\n     }\n \n     ~CNode()\n@@ -735,6 +731,19 @@ class CNode\n \n \n \n+    void PushVersion()\n+    {\n+        /// when NTP implemented, change to just nTime = GetAdjustedTime()\n+        int64 nTime = (fInbound ? GetAdjustedTime() : GetTime());\n+        CAddress addrYou = (fUseProxy ? CAddress(\"0.0.0.0\") : addr);\n+        CAddress addrMe = (fUseProxy ? CAddress(\"0.0.0.0\") : addrLocalHost);\n+        RAND_bytes((unsigned char*)&nLocalHostNonce, sizeof(nLocalHostNonce));\n+        PushMessage(\"version\", VERSION, nLocalServices, nTime, addrYou, addrMe,\n+                nLocalHostNonce, string(pszSubVer), nBestHeight);\n+    }\n+\n+\n+\n \n     void PushMessage(const char* pszCommand)\n     {"
      },
      {
        "sha": "08ef4644b2aa13c8b8ce1af0451c9ee9eae634b6",
        "filename": "rpc.cpp",
        "status": "modified",
        "additions": 74,
        "deletions": 4,
        "changes": 78,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1442eeb268d85ca7f757ce4073243a02eaf8e809/rpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1442eeb268d85ca7f757ce4073243a02eaf8e809/rpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/rpc.cpp?ref=1442eeb268d85ca7f757ce4073243a02eaf8e809",
        "patch": "@@ -65,10 +65,7 @@ void PrintConsole(const char* format, ...)\n \n int64 AmountFromValue(const Value& value)\n {\n-    double dAmount = value.get_real();\n-    if (dAmount <= 0.0 || dAmount > 21000000.0)\n-        throw JSONRPCError(-3, \"Invalid amount\");\n-    int64 nAmount = roundint64(dAmount * COIN);\n+    int64 nAmount = roundint64(value.get_real() * COIN);\n     if (!MoneyRange(nAmount))\n         throw JSONRPCError(-3, \"Invalid amount\");\n     return nAmount;\n@@ -869,6 +866,69 @@ Value sendfrom(const Array& params, bool fHelp)\n     return wtx.GetHash().GetHex();\n }\n \n+Value sendmany(const Array& params, bool fHelp)\n+{\n+    if (fHelp || params.size() < 2 || params.size() > 4)\n+        throw runtime_error(\n+            \"sendmany <fromaccount> {address:amount,...} [minconf=1] [comment]\\n\"\n+            \"amounts are double-precision floating point numbers\");\n+\n+    string strAccount = AccountFromValue(params[0]);\n+    Object sendTo = params[1].get_obj();\n+    int nMinDepth = 1;\n+    if (params.size() > 2)\n+        nMinDepth = params[2].get_int();\n+\n+    CWalletTx wtx;\n+    wtx.strFromAccount = strAccount;\n+    if (params.size() > 3 && params[3].type() != null_type && !params[3].get_str().empty())\n+        wtx.mapValue[\"comment\"] = params[3].get_str();\n+\n+    set<string> setAddress;\n+    vector<pair<CScript, int64> > vecSend;\n+\n+    int64 totalAmount = 0;\n+    foreach(const Pair& s, sendTo)\n+    {\n+        uint160 hash160;\n+        string strAddress = s.name_;\n+\n+        if (setAddress.count(strAddress))\n+            throw JSONRPCError(-8, string(\"Invalid parameter, duplicated address: \")+strAddress);\n+        setAddress.insert(strAddress);\n+\n+        CScript scriptPubKey;\n+        if (!scriptPubKey.SetBitcoinAddress(strAddress))\n+            throw JSONRPCError(-5, string(\"Invalid bitcoin address:\")+strAddress);\n+        int64 nAmount = AmountFromValue(s.value_); \n+        totalAmount += nAmount;\n+\n+        vecSend.push_back(make_pair(scriptPubKey, nAmount));\n+    }\n+\n+    CRITICAL_BLOCK(cs_mapWallet)\n+    {\n+        // Check funds\n+        int64 nBalance = GetAccountBalance(strAccount, nMinDepth);\n+        if (totalAmount > nBalance)\n+            throw JSONRPCError(-6, \"Account has insufficient funds\");\n+\n+        // Send\n+        CReserveKey keyChange;\n+        int64 nFeeRequired = 0;\n+        bool fCreated = CreateTransaction(vecSend, wtx, keyChange, nFeeRequired);\n+        if (!fCreated)\n+        {\n+            if (totalAmount + nFeeRequired > GetBalance())\n+                throw JSONRPCError(-6, \"Insufficient funds\");\n+            throw JSONRPCError(-4, \"Transaction creation failed\");\n+        }\n+        if (!CommitTransaction(wtx, keyChange))\n+            throw JSONRPCError(-4, \"Transaction commit failed\");\n+    }\n+\n+    return wtx.GetHash().GetHex();\n+}\n \n \n struct tallyitem\n@@ -1448,6 +1508,7 @@ pair<string, rpcfn_type> pCallTable[] =\n     make_pair(\"getbalance\",            &getbalance),\n     make_pair(\"move\",                  &movecmd),\n     make_pair(\"sendfrom\",              &sendfrom),\n+    make_pair(\"sendmany\",              &sendmany),\n     make_pair(\"gettransaction\",        &gettransaction),\n     make_pair(\"listtransactions\",      &listtransactions),\n     make_pair(\"getwork\",               &getwork),\n@@ -2100,6 +2161,15 @@ int CommandLineRPC(int argc, char *argv[])\n         if (strMethod == \"sendfrom\"               && n > 3) ConvertTo<boost::int64_t>(params[3]);\n         if (strMethod == \"listtransactions\"       && n > 1) ConvertTo<boost::int64_t>(params[1]);\n         if (strMethod == \"listaccounts\"           && n > 0) ConvertTo<boost::int64_t>(params[0]);\n+        if (strMethod == \"sendmany\"               && n > 1)\n+        {\n+            string s = params[1].get_str();\n+            Value v;\n+            if (!read_string(s, v) || v.type() != obj_type)\n+                throw runtime_error(\"type mismatch\");\n+            params[1] = v.get_obj();\n+        }\n+        if (strMethod == \"sendmany\"                && n > 2) ConvertTo<boost::int64_t>(params[2]);\n \n         // Execute\n         Object reply = CallRPC(strMethod, params);"
      },
      {
        "sha": "383c9878647f39c33d6a44427394bff0338276cd",
        "filename": "serialize.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1442eeb268d85ca7f757ce4073243a02eaf8e809/serialize.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1442eeb268d85ca7f757ce4073243a02eaf8e809/serialize.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/serialize.h?ref=1442eeb268d85ca7f757ce4073243a02eaf8e809",
        "patch": "@@ -25,7 +25,7 @@ class CDataStream;\n class CAutoFile;\n static const unsigned int MAX_SIZE = 0x02000000;\n \n-static const int VERSION = 32002;\n+static const int VERSION = 32100;\n static const char* pszSubVer = \"\";\n static const bool VERSION_IS_BETA = true;\n "
      },
      {
        "sha": "f3ff3bf1ef94dd40deb65c75a3c6e3125de34838",
        "filename": "uibase.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 8,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1442eeb268d85ca7f757ce4073243a02eaf8e809/uibase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1442eeb268d85ca7f757ce4073243a02eaf8e809/uibase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/uibase.cpp?ref=1442eeb268d85ca7f757ce4073243a02eaf8e809",
        "patch": "@@ -1,5 +1,5 @@\n ///////////////////////////////////////////////////////////////////////////\n-// C++ code generated with wxFormBuilder (version Apr 16 2008)\n+// C++ code generated with wxFormBuilder (version Dec 21 2009)\n // http://www.wxformbuilder.org/\n //\n // PLEASE DO \"NOT\" EDIT THIS FILE!\n@@ -61,7 +61,6 @@ CMainFrameBase::CMainFrameBase( wxWindow* parent, wxWindowID id, const wxString&\n \tm_toolBar->Realize();\n \t\n \tm_statusBar = this->CreateStatusBar( 1, wxST_SIZEGRIP, wxID_ANY );\n-\t\n \twxBoxSizer* bSizer2;\n \tbSizer2 = new wxBoxSizer( wxVERTICAL );\n \t\n@@ -355,7 +354,6 @@ COptionsDialogBase::COptionsDialogBase( wxWindow* parent, wxWindowID id, const w\n \tbSizer71 = new wxBoxSizer( wxHORIZONTAL );\n \t\n \tm_checkBoxLimitProcessors = new wxCheckBox( m_panelMain, wxID_ANY, _(\"&Limit coin generation to\"), wxDefaultPosition, wxDefaultSize, 0 );\n-\t\n \tbSizer71->Add( m_checkBoxLimitProcessors, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5 );\n \t\n \tm_spinCtrlLimitProcessors = new wxSpinCtrl( m_panelMain, wxID_ANY, wxEmptyString, wxDefaultPosition, wxSize( 48,-1 ), wxSP_ARROW_KEYS, 1, 999, 1 );\n@@ -368,22 +366,18 @@ COptionsDialogBase::COptionsDialogBase( wxWindow* parent, wxWindowID id, const w\n \tbSizer69->Add( bSizer71, 0, 0, 5 );\n \t\n \tm_checkBoxStartOnSystemStartup = new wxCheckBox( m_panelMain, wxID_ANY, _(\"&Start Bitcoin on system startup\"), wxDefaultPosition, wxDefaultSize, 0 );\n-\t\n \tbSizer69->Add( m_checkBoxStartOnSystemStartup, 0, wxALL, 5 );\n \t\n \tm_checkBoxMinimizeToTray = new wxCheckBox( m_panelMain, wxID_ANY, _(\"&Minimize to the tray instead of the taskbar\"), wxDefaultPosition, wxDefaultSize, 0 );\n-\t\n \tbSizer69->Add( m_checkBoxMinimizeToTray, 0, wxALL, 5 );\n \t\n \tm_checkBoxMinimizeOnClose = new wxCheckBox( m_panelMain, wxID_ANY, _(\"M&inimize to the tray on close\"), wxDefaultPosition, wxDefaultSize, 0 );\n-\t\n \tbSizer69->Add( m_checkBoxMinimizeOnClose, 0, wxALL|wxALIGN_CENTER_VERTICAL, 5 );\n \t\n \twxBoxSizer* bSizer102;\n \tbSizer102 = new wxBoxSizer( wxHORIZONTAL );\n \t\n \tm_checkBoxUseProxy = new wxCheckBox( m_panelMain, wxID_ANY, _(\"&Connect through socks4 proxy: \"), wxDefaultPosition, wxDefaultSize, 0 );\n-\t\n \tbSizer102->Add( m_checkBoxUseProxy, 0, wxALL|wxALIGN_CENTER_VERTICAL, 5 );\n \t\n \tbSizer69->Add( bSizer102, 1, wxEXPAND, 5 );\n@@ -550,7 +544,7 @@ CAboutDialogBase::CAboutDialogBase( wxWindow* parent, wxWindowID id, const wxStr\n \t\n \tbSizer631->Add( 0, 4, 0, wxEXPAND, 5 );\n \t\n-\tm_staticTextMain = new wxStaticText( this, wxID_ANY, _(\"Copyright (c) 2009-2010 Bitcoin Developers\\n\\nThis is experimental software.\\n\\nDistributed under the MIT/X11 software license, see the accompanying file \\nlicense.txt or http://www.opensource.org/licenses/mit-license.php.\\n\\nThis product includes software developed by the OpenSSL Project for use in the \\nOpenSSL Toolkit (http://www.openssl.org/) and cryptographic software written by \\nEric Young (eay@cryptsoft.com).\"), wxDefaultPosition, wxDefaultSize, 0 );\n+\tm_staticTextMain = new wxStaticText( this, wxID_ANY, _(\"Copyright (c) 2009-2011 Bitcoin Developers\\n\\nThis is experimental software.\\n\\nDistributed under the MIT/X11 software license, see the accompanying file \\nlicense.txt or http://www.opensource.org/licenses/mit-license.php.\\n\\nThis product includes software developed by the OpenSSL Project for use in the \\nOpenSSL Toolkit (http://www.openssl.org/) and cryptographic software written by \\nEric Young (eay@cryptsoft.com).\"), wxDefaultPosition, wxDefaultSize, 0 );\n \tm_staticTextMain->Wrap( -1 );\n \tbSizer631->Add( m_staticTextMain, 0, wxALL, 5 );\n \t\n@@ -677,6 +671,11 @@ CSendDialogBase::CSendDialogBase( wxWindow* parent, wxWindowID id, const wxStrin\n \t\n \tbSizer21->Add( fgSizer1, 0, wxEXPAND|wxLEFT, 5 );\n \t\n+\twxBoxSizer* bSizer672;\n+\tbSizer672 = new wxBoxSizer( wxHORIZONTAL );\n+\t\n+\tbSizer21->Add( bSizer672, 0, wxEXPAND, 5 );\n+\t\n \twxBoxSizer* bSizer23;\n \tbSizer23 = new wxBoxSizer( wxHORIZONTAL );\n \t\n@@ -698,6 +697,7 @@ CSendDialogBase::CSendDialogBase( wxWindow* parent, wxWindowID id, const wxStrin\n \t\n \t// Connect Events\n \tm_textCtrlAddress->Connect( wxEVT_KEY_DOWN, wxKeyEventHandler( CSendDialogBase::OnKeyDown ), NULL, this );\n+\tm_textCtrlAddress->Connect( wxEVT_COMMAND_TEXT_UPDATED, wxCommandEventHandler( CSendDialogBase::OnTextAddress ), NULL, this );\n \tm_buttonPaste->Connect( wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler( CSendDialogBase::OnButtonPaste ), NULL, this );\n \tm_buttonAddress->Connect( wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler( CSendDialogBase::OnButtonAddressBook ), NULL, this );\n \tm_textCtrlAmount->Connect( wxEVT_KEY_DOWN, wxKeyEventHandler( CSendDialogBase::OnKeyDown ), NULL, this );\n@@ -710,6 +710,7 @@ CSendDialogBase::~CSendDialogBase()\n {\n \t// Disconnect Events\n \tm_textCtrlAddress->Disconnect( wxEVT_KEY_DOWN, wxKeyEventHandler( CSendDialogBase::OnKeyDown ), NULL, this );\n+\tm_textCtrlAddress->Disconnect( wxEVT_COMMAND_TEXT_UPDATED, wxCommandEventHandler( CSendDialogBase::OnTextAddress ), NULL, this );\n \tm_buttonPaste->Disconnect( wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler( CSendDialogBase::OnButtonPaste ), NULL, this );\n \tm_buttonAddress->Disconnect( wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler( CSendDialogBase::OnButtonAddressBook ), NULL, this );\n \tm_textCtrlAmount->Disconnect( wxEVT_KEY_DOWN, wxKeyEventHandler( CSendDialogBase::OnKeyDown ), NULL, this );"
      },
      {
        "sha": "eff5bd6bf448ae4b3462fd58419ffc722733c843",
        "filename": "uibase.h",
        "status": "modified",
        "additions": 79,
        "deletions": 74,
        "changes": 153,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1442eeb268d85ca7f757ce4073243a02eaf8e809/uibase.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1442eeb268d85ca7f757ce4073243a02eaf8e809/uibase.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/uibase.h?ref=1442eeb268d85ca7f757ce4073243a02eaf8e809",
        "patch": "@@ -1,5 +1,5 @@\n ///////////////////////////////////////////////////////////////////////////\n-// C++ code generated with wxFormBuilder (version Apr 16 2008)\n+// C++ code generated with wxFormBuilder (version Dec 21 2009)\n // http://www.wxformbuilder.org/\n //\n // PLEASE DO \"NOT\" EDIT THIS FILE!\n@@ -93,28 +93,28 @@ class CMainFrameBase : public wxFrame\n \t\twxPanel* m_panel93;\n \t\t\n \t\t// Virtual event handlers, overide them in your derived class\n-\t\tvirtual void OnClose( wxCloseEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnIconize( wxIconizeEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnIdle( wxIdleEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnMouseEvents( wxMouseEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnPaint( wxPaintEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnMenuFileExit( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnMenuOptionsGenerate( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnUpdateUIOptionsGenerate( wxUpdateUIEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnMenuOptionsChangeYourAddress( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnMenuOptionsOptions( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnMenuHelpAbout( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnButtonSend( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnButtonAddressBook( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnKeyDown( wxKeyEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnMouseEventsAddress( wxMouseEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnSetFocusAddress( wxFocusEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnButtonNew( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnButtonCopy( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnNotebookPageChanged( wxNotebookEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnListColBeginDrag( wxListEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnListItemActivated( wxListEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnPaintListCtrl( wxPaintEvent& event ){ event.Skip(); }\n+\t\tvirtual void OnClose( wxCloseEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnIconize( wxIconizeEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnIdle( wxIdleEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnMouseEvents( wxMouseEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnPaint( wxPaintEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnMenuFileExit( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnMenuOptionsGenerate( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnUpdateUIOptionsGenerate( wxUpdateUIEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnMenuOptionsChangeYourAddress( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnMenuOptionsOptions( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnMenuHelpAbout( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnButtonSend( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnButtonAddressBook( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnKeyDown( wxKeyEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnMouseEventsAddress( wxMouseEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnSetFocusAddress( wxFocusEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnButtonNew( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnButtonCopy( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnNotebookPageChanged( wxNotebookEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnListColBeginDrag( wxListEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnListItemActivated( wxListEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnPaintListCtrl( wxPaintEvent& event ) { event.Skip(); }\n \t\t\n \t\n \tpublic:\n@@ -125,6 +125,7 @@ class CMainFrameBase : public wxFrame\n \t\twxListCtrl* m_listCtrlSentReceived;\n \t\twxListCtrl* m_listCtrlSent;\n \t\twxListCtrl* m_listCtrlReceived;\n+\t\t\n \t\tCMainFrameBase( wxWindow* parent, wxWindowID id = wxID_MAINFRAME, const wxString& title = _(\"Bitcoin\"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize( 723,484 ), long style = wxDEFAULT_FRAME_STYLE|wxRESIZE_BORDER|wxTAB_TRAVERSAL );\n \t\t~CMainFrameBase();\n \t\n@@ -142,10 +143,11 @@ class CTxDetailsDialogBase : public wxDialog\n \t\twxButton* m_buttonOK;\n \t\t\n \t\t// Virtual event handlers, overide them in your derived class\n-\t\tvirtual void OnButtonOK( wxCommandEvent& event ){ event.Skip(); }\n+\t\tvirtual void OnButtonOK( wxCommandEvent& event ) { event.Skip(); }\n \t\t\n \t\n \tpublic:\n+\t\t\n \t\tCTxDetailsDialogBase( wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _(\"Transaction Details\"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize( 620,450 ), long style = wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER );\n \t\t~CTxDetailsDialogBase();\n \t\n@@ -188,18 +190,19 @@ class COptionsDialogBase : public wxDialog\n \t\twxButton* m_buttonApply;\n \t\t\n \t\t// Virtual event handlers, overide them in your derived class\n-\t\tvirtual void OnListBox( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnCheckBoxLimitProcessors( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnCheckBoxMinimizeToTray( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnCheckBoxUseProxy( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnKillFocusProxy( wxFocusEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnKillFocusTransactionFee( wxFocusEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnButtonOK( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnButtonCancel( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnButtonApply( wxCommandEvent& event ){ event.Skip(); }\n+\t\tvirtual void OnListBox( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnCheckBoxLimitProcessors( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnCheckBoxMinimizeToTray( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnCheckBoxUseProxy( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnKillFocusProxy( wxFocusEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnKillFocusTransactionFee( wxFocusEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnButtonOK( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnButtonCancel( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnButtonApply( wxCommandEvent& event ) { event.Skip(); }\n \t\t\n \t\n \tpublic:\n+\t\t\n \t\tCOptionsDialogBase( wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _(\"Options\"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize( 540,360 ), long style = wxDEFAULT_DIALOG_STYLE );\n \t\t~COptionsDialogBase();\n \t\n@@ -223,11 +226,12 @@ class CAboutDialogBase : public wxDialog\n \t\twxButton* m_buttonOK;\n \t\t\n \t\t// Virtual event handlers, overide them in your derived class\n-\t\tvirtual void OnButtonOK( wxCommandEvent& event ){ event.Skip(); }\n+\t\tvirtual void OnButtonOK( wxCommandEvent& event ) { event.Skip(); }\n \t\t\n \t\n \tpublic:\n \t\twxStaticText* m_staticTextVersion;\n+\t\t\n \t\tCAboutDialogBase( wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _(\"About Bitcoin\"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize( 532,333 ), long style = wxDEFAULT_DIALOG_STYLE );\n \t\t~CAboutDialogBase();\n \t\n@@ -256,26 +260,23 @@ class CSendDialogBase : public wxDialog\n \t\twxChoice* m_choiceTransferType;\n \t\t\n \t\t\n-\t\twxStaticText* m_staticTextFrom;\n-\t\twxTextCtrl* m_textCtrlFrom;\n-\t\twxStaticText* m_staticTextMessage;\n-\t\twxTextCtrl* m_textCtrlMessage;\n \t\t\n \t\twxButton* m_buttonSend;\n \t\twxButton* m_buttonCancel;\n \t\t\n \t\t// Virtual event handlers, overide them in your derived class\n-\t\tvirtual void OnKeyDown( wxKeyEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnTextAddress( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnButtonPaste( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnButtonAddressBook( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnKillFocusAmount( wxFocusEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnButtonSend( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnButtonCancel( wxCommandEvent& event ){ event.Skip(); }\n+\t\tvirtual void OnKeyDown( wxKeyEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnTextAddress( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnButtonPaste( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnButtonAddressBook( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnKillFocusAmount( wxFocusEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnButtonSend( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnButtonCancel( wxCommandEvent& event ) { event.Skip(); }\n \t\t\n \t\n \tpublic:\n-\t\tCSendDialogBase( wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _(\"Send Coins\"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize( 675,298 ), long style = wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER );\n+\t\t\n+\t\tCSendDialogBase( wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _(\"Send Coins\"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize( 498,157 ), long style = wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER );\n \t\t~CSendDialogBase();\n \t\n };\n@@ -295,13 +296,14 @@ class CSendingDialogBase : public wxDialog\n \t\twxButton* m_buttonCancel;\n \t\t\n \t\t// Virtual event handlers, overide them in your derived class\n-\t\tvirtual void OnClose( wxCloseEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnPaint( wxPaintEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnButtonOK( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnButtonCancel( wxCommandEvent& event ){ event.Skip(); }\n+\t\tvirtual void OnClose( wxCloseEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnPaint( wxPaintEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnButtonOK( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnButtonCancel( wxCommandEvent& event ) { event.Skip(); }\n \t\t\n \t\n \tpublic:\n+\t\t\n \t\tCSendingDialogBase( wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _(\"Sending...\"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize( 442,151 ), long style = wxDEFAULT_DIALOG_STYLE );\n \t\t~CSendingDialogBase();\n \t\n@@ -326,18 +328,19 @@ class CYourAddressDialogBase : public wxDialog\n \t\twxButton* m_buttonCancel;\n \t\t\n \t\t// Virtual event handlers, overide them in your derived class\n-\t\tvirtual void OnClose( wxCloseEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnListEndLabelEdit( wxListEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnListItemActivated( wxListEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnListItemSelected( wxListEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnButtonRename( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnButtonNew( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnButtonCopy( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnButtonOK( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnButtonCancel( wxCommandEvent& event ){ event.Skip(); }\n+\t\tvirtual void OnClose( wxCloseEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnListEndLabelEdit( wxListEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnListItemActivated( wxListEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnListItemSelected( wxListEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnButtonRename( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnButtonNew( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnButtonCopy( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnButtonOK( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnButtonCancel( wxCommandEvent& event ) { event.Skip(); }\n \t\t\n \t\n \tpublic:\n+\t\t\n \t\tCYourAddressDialogBase( wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _(\"Your Bitcoin Addresses\"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize( 610,390 ), long style = wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER );\n \t\t~CYourAddressDialogBase();\n \t\n@@ -369,21 +372,22 @@ class CAddressBookDialogBase : public wxDialog\n \t\twxButton* m_buttonOK;\n \t\t\n \t\t// Virtual event handlers, overide them in your derived class\n-\t\tvirtual void OnClose( wxCloseEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnNotebookPageChanged( wxNotebookEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnListEndLabelEdit( wxListEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnListItemActivated( wxListEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnListItemSelected( wxListEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnButtonDelete( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnButtonCopy( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnButtonEdit( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnButtonNew( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnButtonOK( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnButtonCancel( wxCommandEvent& event ){ event.Skip(); }\n+\t\tvirtual void OnClose( wxCloseEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnNotebookPageChanged( wxNotebookEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnListEndLabelEdit( wxListEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnListItemActivated( wxListEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnListItemSelected( wxListEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnButtonDelete( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnButtonCopy( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnButtonEdit( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnButtonNew( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnButtonOK( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnButtonCancel( wxCommandEvent& event ) { event.Skip(); }\n \t\t\n \t\n \tpublic:\n \t\twxButton* m_buttonCancel;\n+\t\t\n \t\tCAddressBookDialogBase( wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _(\"Address Book\"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize( 610,390 ), long style = wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER );\n \t\t~CAddressBookDialogBase();\n \t\n@@ -408,13 +412,14 @@ class CGetTextFromUserDialogBase : public wxDialog\n \t\twxButton* m_buttonCancel;\n \t\t\n \t\t// Virtual event handlers, overide them in your derived class\n-\t\tvirtual void OnClose( wxCloseEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnKeyDown( wxKeyEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnButtonOK( wxCommandEvent& event ){ event.Skip(); }\n-\t\tvirtual void OnButtonCancel( wxCommandEvent& event ){ event.Skip(); }\n+\t\tvirtual void OnClose( wxCloseEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnKeyDown( wxKeyEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnButtonOK( wxCommandEvent& event ) { event.Skip(); }\n+\t\tvirtual void OnButtonCancel( wxCommandEvent& event ) { event.Skip(); }\n \t\t\n \t\n \tpublic:\n+\t\t\n \t\tCGetTextFromUserDialogBase( wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = wxEmptyString, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize( 440,138 ), long style = wxDEFAULT_DIALOG_STYLE );\n \t\t~CGetTextFromUserDialogBase();\n \t"
      },
      {
        "sha": "f54fdc2ba2269d0e7af527a7deddd1efc5fc4df5",
        "filename": "uiproject.fbp",
        "status": "modified",
        "additions": 405,
        "deletions": 249,
        "changes": 654,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1442eeb268d85ca7f757ce4073243a02eaf8e809/uiproject.fbp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1442eeb268d85ca7f757ce4073243a02eaf8e809/uiproject.fbp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/uiproject.fbp?ref=1442eeb268d85ca7f757ce4073243a02eaf8e809"
      },
      {
        "sha": "655626dd3b41b12b250e136cd11fa5132451fe05",
        "filename": "util.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 2,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1442eeb268d85ca7f757ce4073243a02eaf8e809/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1442eeb268d85ca7f757ce4073243a02eaf8e809/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/util.cpp?ref=1442eeb268d85ca7f757ce4073243a02eaf8e809",
        "patch": "@@ -19,6 +19,7 @@ bool fCommandLine = false;\n string strMiscWarning;\n bool fTestNet = false;\n bool fNoListen = false;\n+bool fLogTimestamps = false;\n \n \n \n@@ -170,8 +171,16 @@ inline int OutputDebugStringF(const char* pszFormat, ...)\n         }\n         if (fileout)\n         {\n-            //// Debug print useful for profiling\n-            //fprintf(fileout, \" %\"PRI64d\" \", GetTimeMillis());\n+            static bool fStartedNewLine = true;\n+\n+            // Debug print useful for profiling\n+            if (fLogTimestamps && fStartedNewLine)\n+                fprintf(fileout, \"%s \", DateTimeStrFormat(\"%x %H:%M:%S\", GetTime()).c_str());\n+            if (pszFormat[strlen(pszFormat) - 1] == '\\n')\n+                fStartedNewLine = true;\n+            else\n+                fStartedNewLine = false;\n+\n             va_list arg_ptr;\n             va_start(arg_ptr, pszFormat);\n             ret = vfprintf(fileout, pszFormat, arg_ptr);"
      },
      {
        "sha": "2a7dbb5107e9e1dd2d31018a6cee18b5ac41f8df",
        "filename": "util.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1442eeb268d85ca7f757ce4073243a02eaf8e809/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1442eeb268d85ca7f757ce4073243a02eaf8e809/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/util.h?ref=1442eeb268d85ca7f757ce4073243a02eaf8e809",
        "patch": "@@ -148,6 +148,7 @@ extern bool fCommandLine;\n extern string strMiscWarning;\n extern bool fTestNet;\n extern bool fNoListen;\n+extern bool fLogTimestamps;\n \n void RandAddSeed();\n void RandAddSeedPerfmon();"
      }
    ]
  },
  {
    "sha": "9cb125a215a48430ad0138937806b116fc71b007",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5Y2IxMjVhMjE1YTQ4NDMwYWQwMTM4OTM3ODA2YjExNmZjNzFiMDA3",
    "commit": {
      "author": {
        "name": "genjix",
        "email": "fake@lol.u",
        "date": "2011-03-27T15:09:45Z"
      },
      "committer": {
        "name": "genjix",
        "email": "fake@lol.u",
        "date": "2011-03-27T15:09:45Z"
      },
      "message": "first commit of access.",
      "tree": {
        "sha": "45ca9c5a52b7227fc1de8db580779e9630c9014b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/45ca9c5a52b7227fc1de8db580779e9630c9014b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9cb125a215a48430ad0138937806b116fc71b007",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9cb125a215a48430ad0138937806b116fc71b007",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9cb125a215a48430ad0138937806b116fc71b007",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9cb125a215a48430ad0138937806b116fc71b007/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "1442eeb268d85ca7f757ce4073243a02eaf8e809",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1442eeb268d85ca7f757ce4073243a02eaf8e809",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1442eeb268d85ca7f757ce4073243a02eaf8e809"
      }
    ],
    "stats": {
      "total": 322,
      "additions": 322,
      "deletions": 0
    },
    "files": [
      {
        "sha": "30daa3af558aa45e2aae9941045352e6f1e7388d",
        "filename": "access.cpp",
        "status": "added",
        "additions": 322,
        "deletions": 0,
        "changes": 322,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9cb125a215a48430ad0138937806b116fc71b007/access.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9cb125a215a48430ad0138937806b116fc71b007/access.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/access.cpp?ref=9cb125a215a48430ad0138937806b116fc71b007",
        "patch": "@@ -0,0 +1,322 @@\n+#include <string>\n+#include <exception>\n+using std::string;\n+\n+//typedef struct RSA;\n+#include <openssl/rsa.h>\n+\n+class ReadError : public std::exception\n+{\n+public:\n+    virtual const char* what() const throw();\n+};\n+\n+class NoKeypairLoaded : public std::exception\n+{\n+public:\n+    virtual const char* what() const throw();\n+};\n+\n+class SignError : public std::exception\n+{\n+public:\n+    virtual const char* what() const throw();\n+};\n+\n+class AccessCard\n+{\n+public:\n+    AccessCard();\n+    ~AccessCard();\n+    void Generate();\n+    void Load(const string& pem, const string& pass);\n+    void PublicKey(string& pem) const;\n+    void PrivateKey(string& pem, const string& passphrase) const;\n+    string Sign(const string& msg);\n+    bool Verify(const string& msg, const string& sig);\n+\n+private:\n+    void CheckKey() const;\n+\n+    RSA* keypair;\n+};\n+\n+class BioBox\n+{\n+public:\n+    struct Buffer\n+    {\n+        void* buf;\n+        int size;\n+    };\n+\n+    BioBox();\n+    ~BioBox();\n+    void ConstructSink(const string& str);\n+    void NewBuffer();\n+    BIO* Bio() const;\n+    Buffer ReadAll();\n+protected:\n+    BIO* bio;\n+    Buffer buf;\n+};\n+\n+class Base64 : public BioBox\n+{\n+public:\n+    Base64();\n+    ~Base64();\n+    Buffer Encode(const string& message);\n+private:\n+    BIO* b64;\n+};\n+\n+class EvpBox\n+{\n+public:\n+    EvpBox(RSA* keyp);\n+    ~EvpBox();\n+    EVP_PKEY* Key();\n+private:\n+    EVP_PKEY* evpkey;\n+};\n+\n+//--------------------\n+#include <openssl/pem.h>\n+\n+const char* ReadError::what() const throw()\n+{\n+    return \"Problem reading BIO.\";\n+}\n+const char* NoKeypairLoaded::what() const throw()\n+{\n+    return \"No keypair loaded.\";\n+}\n+const char* SignError::what() const throw()\n+{\n+    return \"No keypair loaded.\";\n+}\n+\n+AccessCard::AccessCard()\n+  : keypair(NULL)\n+{\n+    if (EVP_get_cipherbyname(\"aes-256-cbc\") == NULL)\n+        OpenSSL_add_all_algorithms();\n+}\n+AccessCard::~AccessCard()\n+{\n+    RSA_free(keypair);\n+}\n+void AccessCard::CheckKey() const\n+{\n+    if (!keypair)\n+        throw NoKeypairLoaded();\n+}\n+\n+void AccessCard::Generate()\n+{\n+    RSA_free(keypair);\n+    keypair = RSA_generate_key(2048, RSA_F4, NULL, NULL);\n+    CheckKey();\n+}\n+\n+static char *LoseStringConst(const string& str)\n+{\n+    return const_cast<char*>(str.c_str());\n+}\n+static void* StringAsVoid(const string& str)\n+{\n+    return reinterpret_cast<void*>(LoseStringConst(str));\n+}\n+typedef unsigned char uchar;\n+\n+BioBox::BioBox()\n+ : bio(NULL)\n+{\n+    buf.buf = NULL;\n+    buf.size = 0;\n+}\n+BioBox::~BioBox()\n+{\n+    BIO_free(bio);\n+    free(buf.buf);\n+}\n+void BioBox::ConstructSink(const string& str)\n+{\n+    BIO_free(bio);\n+    bio = BIO_new_mem_buf(StringAsVoid(str), -1);\n+    if (!bio)\n+        throw ReadError();\n+}\n+void BioBox::NewBuffer()\n+{\n+    BIO_free(bio);\n+    bio = BIO_new(BIO_s_mem());\n+    if (!bio)\n+        throw ReadError();\n+}\n+BIO* BioBox::Bio() const\n+{\n+    return bio;\n+}\n+BioBox::Buffer BioBox::ReadAll()\n+{\n+    buf.size = BIO_ctrl_pending(bio);\n+    buf.buf = malloc(buf.size);\n+    if (BIO_read(bio, buf.buf, buf.size) < 0) {\n+        //if (ERR_peek_error()) {\n+        //    ERR_reason_error_string(ERR_get_error());\n+        //    return NULL;\n+        //}\n+        throw ReadError();\n+    }\n+    return buf;\n+}\n+Base64::Base64()\n+{\n+    b64 = BIO_new(BIO_f_base64());\n+    BIO_set_flags(b64, BIO_FLAGS_BASE64_NO_NL);\n+    NewBuffer();\n+    BIO_push(b64, bio);\n+}\n+Base64::~Base64()\n+{\n+    BIO_free(b64);\n+    bio = NULL;\n+}\n+Base64::Buffer Base64::Encode(const string& message)\n+{\n+    int ret;\n+    do {\n+        ret = BIO_write(b64, StringAsVoid(message), message.size());\n+        if (ret <= 0)\n+            if (BIO_should_retry(b64))\n+                continue;\n+            else\n+                throw ReadError();\n+    } while (ret <= 0);\n+    BIO_flush(b64);\n+    buf.size = BIO_get_mem_data(bio, &buf.buf);\n+    return buf;\n+}\n+\n+EvpBox::EvpBox(RSA* keyp)\n+{\n+    evpkey = EVP_PKEY_new();\n+    if (!EVP_PKEY_set1_RSA(evpkey, keyp)) {\n+        throw ReadError();\n+    }\n+}\n+EvpBox::~EvpBox()\n+{\n+    EVP_PKEY_free(evpkey);\n+}\n+EVP_PKEY* EvpBox::Key()\n+{\n+    return evpkey;\n+}\n+\n+static int pass_cb(char* buf, int size, int rwflag, void* u)\n+{\n+    const string pass = reinterpret_cast<char*>(u);\n+    int len = pass.size();\n+    // if too long, truncate\n+    if (len > size)\n+        len = size;\n+    pass.copy(buf, len);\n+    return len;\n+}\n+void AccessCard::Load(const string& pem, const string& pass)\n+{\n+    RSA_free(keypair);\n+    BioBox bio;\n+    bio.ConstructSink(pem);\n+    keypair = PEM_read_bio_RSAPrivateKey(bio.Bio(), NULL, pass_cb,\n+                                         StringAsVoid(pass));\n+    CheckKey();                     \n+}\n+void AccessCard::PublicKey(string& pem) const\n+{\n+    CheckKey();\n+    BioBox bio;\n+    bio.NewBuffer();\n+    int ret = PEM_write_bio_RSA_PUBKEY(bio.Bio(), keypair);\n+    if (!ret)\n+        throw ReadError();\n+    const BioBox::Buffer& buf = bio.ReadAll();\n+    pem = string(reinterpret_cast<const char*>(buf.buf), buf.size);\n+}\n+\n+void AccessCard::PrivateKey(string& pem, const string& passphrase) const\n+{\n+    CheckKey();\n+    BioBox bio;\n+    bio.NewBuffer();\n+\n+    EvpBox evp(keypair);\n+    int ret = PEM_write_bio_PKCS8PrivateKey(bio.Bio(), evp.Key(),\n+                                            EVP_aes_256_cbc(),\n+                                            LoseStringConst(passphrase),\n+                                            passphrase.size(), NULL, NULL);\n+    if (!ret)\n+        throw ReadError();\n+    const BioBox::Buffer& buf = bio.ReadAll();\n+    pem = string(reinterpret_cast<const char*>(buf.buf), buf.size);\n+}\n+string AccessCard::Sign(const string& msg)\n+{\n+    const uchar* m = reinterpret_cast<const uchar*>(msg.c_str());\n+    uchar* sigret = new uchar[RSA_size(keypair)];\n+    unsigned int siglen = 0;\n+    if (!RSA_sign(NID_sha512, m, msg.size(), sigret, &siglen, keypair)) {\n+        delete[] sigret;\n+        throw SignError();\n+    }\n+    string sig(reinterpret_cast<const char*>(sigret), siglen);\n+    delete[] sigret;\n+    return sig;\n+}\n+bool AccessCard::Verify(const string& msg, const string& sig)\n+{\n+    const uchar* m = reinterpret_cast<const uchar*>(msg.c_str());\n+    uchar* sigbuf = reinterpret_cast<uchar*>(LoseStringConst(sig));\n+    return RSA_verify(NID_sha512, m, msg.size(), sigbuf, sig.size(), keypair);\n+}\n+\n+//#ifdef TESTACC\n+//-------------------------------------------------------------------\n+// this wont be in the final file... it's our unit test\n+//-------------------------------------------------------------------\n+#include <iostream>\n+#include <assert.h>\n+using std::cout;\n+\n+int main()\n+{\n+    AccessCard acc;                                                    \n+    // New key\n+    acc.Generate();\n+    string pem;\n+    // Get public key\n+    acc.PublicKey(pem);\n+    cout << pem << \"\\n\";\n+    // Get private key\n+    acc.PrivateKey(pem, \"hello\");\n+    cout << pem << \"\\n\";\n+    // Load a private key using pass 'hello'\n+    acc.Load(pem, \"hello\");\n+    acc.PublicKey(pem);\n+    cout << pem << \"\\n\";\n+    string msg = \"hellothere\";\n+    const string sig = acc.Sign(msg);\n+    cout << acc.Verify(msg, sig) << \"\\n\";\n+    Base64 bio;\n+    const BioBox::Buffer& buf = bio.Encode(sig);\n+    pem = string(reinterpret_cast<const char*>(buf.buf), buf.size);\n+    cout << \"signature = \" << pem << \"\\n\";\n+    msg = \"hellother\";\n+    cout << acc.Verify(msg, sig) << \"\\n\";\n+    return 0;\n+}\n+//#endif\n+"
      }
    ]
  },
  {
    "sha": "6f55501c411fb7466aa18c70831ab02bcc05bec8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ZjU1NTAxYzQxMWZiNzQ2NmFhMThjNzA4MzFhYjAyYmNjMDViZWM4",
    "commit": {
      "author": {
        "name": "genjix",
        "email": "fake@lol.u",
        "date": "2011-04-05T12:32:12Z"
      },
      "committer": {
        "name": "genjix",
        "email": "fake@lol.u",
        "date": "2011-04-05T12:32:12Z"
      },
      "message": "Merge branch 'master' of git://github.com/bitcoin/bitcoin",
      "tree": {
        "sha": "3db7bfa1cea4876e309fcf59576d8daec496582a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3db7bfa1cea4876e309fcf59576d8daec496582a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6f55501c411fb7466aa18c70831ab02bcc05bec8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6f55501c411fb7466aa18c70831ab02bcc05bec8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6f55501c411fb7466aa18c70831ab02bcc05bec8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6f55501c411fb7466aa18c70831ab02bcc05bec8/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "3bcd6790a9a7ce5342b9d59e6075915c0c163148",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3bcd6790a9a7ce5342b9d59e6075915c0c163148",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3bcd6790a9a7ce5342b9d59e6075915c0c163148"
      },
      {
        "sha": "a2b6c1930dee40b33c3395a60f73e7c4277775cc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a2b6c1930dee40b33c3395a60f73e7c4277775cc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a2b6c1930dee40b33c3395a60f73e7c4277775cc"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 1,
      "deletions": 0
    },
    "files": [
      {
        "sha": "fe536a6ba537d41d0d06c791731bed62b14fb549",
        "filename": "net.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6f55501c411fb7466aa18c70831ab02bcc05bec8/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6f55501c411fb7466aa18c70831ab02bcc05bec8/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/net.cpp?ref=6f55501c411fb7466aa18c70831ab02bcc05bec8",
        "patch": "@@ -859,6 +859,7 @@ void ThreadSocketHandler2(void* parg)\n \n static const char *strDNSSeed[] = {\n     \"bitseed.xf2.org\",\n+    \"bitseed.bitcoin.org.uk\",\n };\n \n void DNSAddressSeed()"
      }
    ]
  },
  {
    "sha": "02131d12d244c67e4cbb0206d76710bd45a7260b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowMjEzMWQxMmQyNDRjNjdlNGNiYjAyMDZkNzY3MTBiZDQ1YTcyNjBi",
    "commit": {
      "author": {
        "name": "genjix",
        "email": "fake@lol.u",
        "date": "2011-04-10T15:59:56Z"
      },
      "committer": {
        "name": "genjix",
        "email": "fake@lol.u",
        "date": "2011-04-10T15:59:56Z"
      },
      "message": "finished access supports signing and loading keys.",
      "tree": {
        "sha": "eb5eda3234c1deb7603db5d11fecbb7618bf9d15",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/eb5eda3234c1deb7603db5d11fecbb7618bf9d15"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/02131d12d244c67e4cbb0206d76710bd45a7260b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/02131d12d244c67e4cbb0206d76710bd45a7260b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/02131d12d244c67e4cbb0206d76710bd45a7260b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/02131d12d244c67e4cbb0206d76710bd45a7260b/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "9cb125a215a48430ad0138937806b116fc71b007",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9cb125a215a48430ad0138937806b116fc71b007",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9cb125a215a48430ad0138937806b116fc71b007"
      }
    ],
    "stats": {
      "total": 281,
      "additions": 168,
      "deletions": 113
    },
    "files": [
      {
        "sha": "6c839ffdf320f66cbded5c84b9decc4b0d64c598",
        "filename": "access.cpp",
        "status": "modified",
        "additions": 73,
        "deletions": 113,
        "changes": 186,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02131d12d244c67e4cbb0206d76710bd45a7260b/access.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02131d12d244c67e4cbb0206d76710bd45a7260b/access.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/access.cpp?ref=02131d12d244c67e4cbb0206d76710bd45a7260b",
        "patch": "@@ -1,89 +1,8 @@\n-#include <string>\n-#include <exception>\n-using std::string;\n-\n-//typedef struct RSA;\n-#include <openssl/rsa.h>\n-\n-class ReadError : public std::exception\n-{\n-public:\n-    virtual const char* what() const throw();\n-};\n-\n-class NoKeypairLoaded : public std::exception\n-{\n-public:\n-    virtual const char* what() const throw();\n-};\n-\n-class SignError : public std::exception\n-{\n-public:\n-    virtual const char* what() const throw();\n-};\n-\n-class AccessCard\n-{\n-public:\n-    AccessCard();\n-    ~AccessCard();\n-    void Generate();\n-    void Load(const string& pem, const string& pass);\n-    void PublicKey(string& pem) const;\n-    void PrivateKey(string& pem, const string& passphrase) const;\n-    string Sign(const string& msg);\n-    bool Verify(const string& msg, const string& sig);\n-\n-private:\n-    void CheckKey() const;\n-\n-    RSA* keypair;\n-};\n-\n-class BioBox\n-{\n-public:\n-    struct Buffer\n-    {\n-        void* buf;\n-        int size;\n-    };\n-\n-    BioBox();\n-    ~BioBox();\n-    void ConstructSink(const string& str);\n-    void NewBuffer();\n-    BIO* Bio() const;\n-    Buffer ReadAll();\n-protected:\n-    BIO* bio;\n-    Buffer buf;\n-};\n-\n-class Base64 : public BioBox\n-{\n-public:\n-    Base64();\n-    ~Base64();\n-    Buffer Encode(const string& message);\n-private:\n-    BIO* b64;\n-};\n-\n-class EvpBox\n-{\n-public:\n-    EvpBox(RSA* keyp);\n-    ~EvpBox();\n-    EVP_PKEY* Key();\n-private:\n-    EVP_PKEY* evpkey;\n-};\n-\n-//--------------------\n+#include <openssl/sha.h>\n #include <openssl/pem.h>\n \n+#include \"access.h\"\n+\n const char* ReadError::what() const throw()\n {\n     return \"Problem reading BIO.\";\n@@ -94,7 +13,11 @@ const char* NoKeypairLoaded::what() const throw()\n }\n const char* SignError::what() const throw()\n {\n-    return \"No keypair loaded.\";\n+    return \"Error signing.\";\n+}\n+const char* HashFailed::what() const throw()\n+{\n+    return \"Unable to generate hash.\";\n }\n \n AccessCard::AccessCard()\n@@ -129,6 +52,11 @@ static void* StringAsVoid(const string& str)\n     return reinterpret_cast<void*>(LoseStringConst(str));\n }\n typedef unsigned char uchar;\n+template <typename T>\n+static T* CastString(const string& str)\n+{\n+    return reinterpret_cast<T*>(const_cast<char*>(str.c_str()));\n+}\n \n BioBox::BioBox()\n  : bio(NULL)\n@@ -263,60 +191,92 @@ void AccessCard::PrivateKey(string& pem, const string& passphrase) const\n     const BioBox::Buffer& buf = bio.ReadAll();\n     pem = string(reinterpret_cast<const char*>(buf.buf), buf.size);\n }\n+\n+static void Hash(const char* data, size_t datlen, uchar* digest)\n+{\n+    SHA512_CTX sha_ctx = { 0 };\n+\n+    if (SHA512_Init(&sha_ctx) != 1)\n+        throw HashFailed();\n+\n+    if (SHA512_Update(&sha_ctx, data, datlen) != 1)\n+        throw HashFailed();\n+\n+    if (SHA512_Final(digest, &sha_ctx) != 1)\n+        throw HashFailed();\n+}\n+\n string AccessCard::Sign(const string& msg)\n {\n-    const uchar* m = reinterpret_cast<const uchar*>(msg.c_str());\n-    uchar* sigret = new uchar[RSA_size(keypair)];\n-    unsigned int siglen = 0;\n-    if (!RSA_sign(NID_sha512, m, msg.size(), sigret, &siglen, keypair)) {\n-        delete[] sigret;\n+    uchar *sig = NULL;\n+    unsigned int sig_len = 0;\n+\n+    uchar digest[SHA512_DIGEST_LENGTH];\n+    Hash((const char*)msg.c_str(), msg.size(), digest);\n+\n+    sig = new uchar[RSA_size(keypair)];\n+    if (!sig)\n+        throw SignError();\n+\n+    if (RSA_sign(NID_sha512, digest, sizeof digest, sig, &sig_len, keypair) != 1) {\n+        delete [] sig;\n         throw SignError();\n     }\n-    string sig(reinterpret_cast<const char*>(sigret), siglen);\n-    delete[] sigret;\n-    return sig;\n+\n+    string sigret(reinterpret_cast<char*>(sig), sig_len);\n+    delete [] sig;\n+\n+    // now base64 encode the signature\n+    Base64 b64;\n+    Base64::Buffer b = b64.Encode(sigret);\n+    string encsig(reinterpret_cast<char*>(b.buf), b.size);\n+    return encsig;\n }\n+#if 0\n bool AccessCard::Verify(const string& msg, const string& sig)\n {\n-    const uchar* m = reinterpret_cast<const uchar*>(msg.c_str());\n-    uchar* sigbuf = reinterpret_cast<uchar*>(LoseStringConst(sig));\n-    return RSA_verify(NID_sha512, m, msg.size(), sigbuf, sig.size(), keypair);\n+    //uchar* digest = Hash(msg.c_str(), msg.size());\n+    uchar* digest;\n+    uchar* sigbuf = CastString<uchar>(msg);\n+    const uchar* msgbuf = CastString<uchar>(msg);\n+    return RSA_verify(NID_sha512, msgbuf, msg.size(), sigbuf, sig.size(), keypair);\n }\n+#endif\n \n-//#ifdef TESTACC\n+#ifdef TEST_ACCESS\n //-------------------------------------------------------------------\n // this wont be in the final file... it's our unit test\n //-------------------------------------------------------------------\n #include <iostream>\n-#include <assert.h>\n using std::cout;\n+// http://www.bmt-online.org/geekisms/RSA_verify\n \n int main()\n {\n+    void* pemarr = malloc(1900);\n+    FILE* pemf = fopen(\"privkey.pem\", \"r\");\n+    size_t pemlen = fread(pemarr, sizeof(char), 1900, pemf);\n+    string pemstr(reinterpret_cast<char*>(pemarr), pemlen);\n+\n     AccessCard acc;                                                    \n+    acc.Load(pemstr, \"hello\");\n     // New key\n-    acc.Generate();\n+    //acc.Generate();\n     string pem;\n     // Get public key\n     acc.PublicKey(pem);\n-    cout << pem << \"\\n\";\n+    //cout << pem << \"\\n\";\n     // Get private key\n     acc.PrivateKey(pem, \"hello\");\n-    cout << pem << \"\\n\";\n+    //cout << pem << \"\\n\";\n     // Load a private key using pass 'hello'\n-    acc.Load(pem, \"hello\");\n     acc.PublicKey(pem);\n-    cout << pem << \"\\n\";\n-    string msg = \"hellothere\";\n-    const string sig = acc.Sign(msg);\n-    cout << acc.Verify(msg, sig) << \"\\n\";\n-    Base64 bio;\n-    const BioBox::Buffer& buf = bio.Encode(sig);\n-    pem = string(reinterpret_cast<const char*>(buf.buf), buf.size);\n-    cout << \"signature = \" << pem << \"\\n\";\n-    msg = \"hellother\";\n-    cout << acc.Verify(msg, sig) << \"\\n\";\n+    //cout << pem << \"\\n\";\n+    string msg = \"hello\";\n+\n+    string sign = acc.Sign(\"hello\");\n+    std::cout << sign;\n     return 0;\n }\n-//#endif\n+#endif\n "
      },
      {
        "sha": "c4db2020214ae6258673661e3b18138c851aaf37",
        "filename": "access.h",
        "status": "added",
        "additions": 95,
        "deletions": 0,
        "changes": 95,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02131d12d244c67e4cbb0206d76710bd45a7260b/access.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02131d12d244c67e4cbb0206d76710bd45a7260b/access.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/access.h?ref=02131d12d244c67e4cbb0206d76710bd45a7260b",
        "patch": "@@ -0,0 +1,95 @@\n+#ifndef __ACCESS_H__\n+#define __ACCESS_H__\n+\n+#include <string>\n+#include <exception>\n+using std::string;\n+\n+#include <openssl/rsa.h>\n+\n+class ReadError : public std::exception\n+{\n+public:\n+    virtual const char* what() const throw();\n+};\n+\n+class NoKeypairLoaded : public std::exception\n+{\n+public:\n+    virtual const char* what() const throw();\n+};\n+\n+class SignError : public std::exception\n+{\n+public:\n+    virtual const char* what() const throw();\n+};\n+\n+class HashFailed : public std::exception\n+{\n+public:\n+    virtual const char* what() const throw();\n+};\n+\n+class AccessCard\n+{\n+public:\n+    AccessCard();\n+    ~AccessCard();\n+    // new private key\n+    void Generate();\n+    // load a private key in PEM format\n+    void Load(const string& pem, const string& pass);\n+    void PublicKey(string& pem) const;\n+    void PrivateKey(string& pem, const string& passphrase) const;\n+    // sign a message and return it base64 encoded.\n+    string Sign(const string& msg);\n+\n+private:\n+    void CheckKey() const;\n+\n+    RSA* keypair;\n+};\n+\n+class BioBox\n+{\n+public:\n+    struct Buffer\n+    {\n+        void* buf;\n+        int size;\n+    };\n+\n+    BioBox();\n+    ~BioBox();\n+    void ConstructSink(const string& str);\n+    void NewBuffer();\n+    BIO* Bio() const;\n+    Buffer ReadAll();\n+protected:\n+    BIO* bio;\n+    Buffer buf;\n+};\n+\n+class Base64 : public BioBox\n+{\n+public:\n+    Base64();\n+    ~Base64();\n+    Buffer Encode(const string& message);\n+private:\n+    BIO* b64;\n+};\n+\n+class EvpBox\n+{\n+public:\n+    EvpBox(RSA* keyp);\n+    ~EvpBox();\n+    EVP_PKEY* Key();\n+private:\n+    EVP_PKEY* evpkey;\n+};\n+\n+#endif\n+"
      }
    ]
  },
  {
    "sha": "d16ea442e2ecdb465b60d7b28f0ffe673402f58c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkMTZlYTQ0MmUyZWNkYjQ2NWI2MGQ3YjI4ZjBmZmU2NzM0MDJmNThj",
    "commit": {
      "author": {
        "name": "genjix",
        "email": "fake@lol.u",
        "date": "2011-04-10T16:01:20Z"
      },
      "committer": {
        "name": "genjix",
        "email": "fake@lol.u",
        "date": "2011-04-10T16:01:20Z"
      },
      "message": "Merge branch 'master' into bitnom",
      "tree": {
        "sha": "06df8e4e570ece1cdfc2214f45025f05e07e8375",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/06df8e4e570ece1cdfc2214f45025f05e07e8375"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d16ea442e2ecdb465b60d7b28f0ffe673402f58c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d16ea442e2ecdb465b60d7b28f0ffe673402f58c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d16ea442e2ecdb465b60d7b28f0ffe673402f58c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d16ea442e2ecdb465b60d7b28f0ffe673402f58c/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "02131d12d244c67e4cbb0206d76710bd45a7260b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/02131d12d244c67e4cbb0206d76710bd45a7260b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/02131d12d244c67e4cbb0206d76710bd45a7260b"
      },
      {
        "sha": "6f55501c411fb7466aa18c70831ab02bcc05bec8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6f55501c411fb7466aa18c70831ab02bcc05bec8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6f55501c411fb7466aa18c70831ab02bcc05bec8"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 1,
      "deletions": 0
    },
    "files": [
      {
        "sha": "fe536a6ba537d41d0d06c791731bed62b14fb549",
        "filename": "net.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d16ea442e2ecdb465b60d7b28f0ffe673402f58c/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d16ea442e2ecdb465b60d7b28f0ffe673402f58c/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/net.cpp?ref=d16ea442e2ecdb465b60d7b28f0ffe673402f58c",
        "patch": "@@ -859,6 +859,7 @@ void ThreadSocketHandler2(void* parg)\n \n static const char *strDNSSeed[] = {\n     \"bitseed.xf2.org\",\n+    \"bitseed.bitcoin.org.uk\",\n };\n \n void DNSAddressSeed()"
      }
    ]
  },
  {
    "sha": "de1b3563713a218d5ef9901946aef5bd2c94f980",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkZTFiMzU2MzcxM2EyMThkNWVmOTkwMTk0NmFlZjViZDJjOTRmOTgw",
    "commit": {
      "author": {
        "name": "genjix",
        "email": "fake@lol.u",
        "date": "2011-04-12T21:20:26Z"
      },
      "committer": {
        "name": "genjix",
        "email": "fake@lol.u",
        "date": "2011-04-12T21:20:26Z"
      },
      "message": "added new files to makefile.",
      "tree": {
        "sha": "1e39a7f3e3a7cd4545b82a5c58fc5f63374a302b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1e39a7f3e3a7cd4545b82a5c58fc5f63374a302b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/de1b3563713a218d5ef9901946aef5bd2c94f980",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/de1b3563713a218d5ef9901946aef5bd2c94f980",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/de1b3563713a218d5ef9901946aef5bd2c94f980",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/de1b3563713a218d5ef9901946aef5bd2c94f980/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "d16ea442e2ecdb465b60d7b28f0ffe673402f58c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d16ea442e2ecdb465b60d7b28f0ffe673402f58c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d16ea442e2ecdb465b60d7b28f0ffe673402f58c"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 4,
      "deletions": 1
    },
    "files": [
      {
        "sha": "4b7d69d6ff4ca7512562d7f1e6f987531427b2f2",
        "filename": "makefile.unix",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de1b3563713a218d5ef9901946aef5bd2c94f980/makefile.unix",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de1b3563713a218d5ef9901946aef5bd2c94f980/makefile.unix",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/makefile.unix?ref=de1b3563713a218d5ef9901946aef5bd2c94f980",
        "patch": "@@ -28,7 +28,8 @@ DEFS=-DNOPCH -DFOURWAYSSE2 -DUSE_SSL\n DEBUGFLAGS=-g -D__WXDEBUG__\n CXXFLAGS=-O2 -Wno-invalid-offsetof -Wformat $(DEBUGFLAGS) $(DEFS)\n HEADERS=headers.h strlcpy.h serialize.h uint256.h util.h key.h bignum.h base58.h \\\n-    script.h db.h net.h irc.h main.h rpc.h uibase.h ui.h noui.h init.h resolv.h\n+    script.h db.h net.h irc.h main.h rpc.h uibase.h ui.h noui.h init.h resolv.h \\\n+\taccess.h\n \n OBJS= \\\n     obj/util.o \\\n@@ -40,6 +41,7 @@ OBJS= \\\n     obj/rpc.o \\\n     obj/init.o \\\n     obj/resolv.o \\\n+\tobj/access.o \\\n     cryptopp/obj/sha.o \\\n     cryptopp/obj/cpu.o\n \n@@ -74,3 +76,4 @@ clean:\n \t-rm -f headers.h.gch\n \t-rm -f bitcoin\n \t-rm -f bitcoind\n+"
      }
    ]
  },
  {
    "sha": "f12c35af070c2f7b02edbfdaca74a9e99edd521f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmMTJjMzVhZjA3MGMyZjdiMDJlZGJmZGFjYTc0YTllOTllZGQ1MjFm",
    "commit": {
      "author": {
        "name": "genjix",
        "email": "fake@lol.u",
        "date": "2011-04-12T21:20:36Z"
      },
      "committer": {
        "name": "genjix",
        "email": "fake@lol.u",
        "date": "2011-04-12T21:20:36Z"
      },
      "message": "added new method for getting public key.",
      "tree": {
        "sha": "74829f4ef7f1d481fda33fff2f1de722501b01c2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/74829f4ef7f1d481fda33fff2f1de722501b01c2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f12c35af070c2f7b02edbfdaca74a9e99edd521f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f12c35af070c2f7b02edbfdaca74a9e99edd521f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f12c35af070c2f7b02edbfdaca74a9e99edd521f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f12c35af070c2f7b02edbfdaca74a9e99edd521f/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "de1b3563713a218d5ef9901946aef5bd2c94f980",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/de1b3563713a218d5ef9901946aef5bd2c94f980",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/de1b3563713a218d5ef9901946aef5bd2c94f980"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 12,
      "deletions": 2
    },
    "files": [
      {
        "sha": "c3f34e0abdec22a062a1ce33e8d34ccbc81aa95a",
        "filename": "rpc.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 2,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f12c35af070c2f7b02edbfdaca74a9e99edd521f/rpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f12c35af070c2f7b02edbfdaca74a9e99edd521f/rpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/rpc.cpp?ref=f12c35af070c2f7b02edbfdaca74a9e99edd521f",
        "patch": "@@ -537,6 +537,15 @@ Value rpc_send(const Array& params, bool fHelp)\n     return wtx.GetHash().GetHex();\n }\n \n+Value publickey(const Array& params, bool fHelp)\n+{\n+    if (fHelp || params.size() != 0)\n+        throw runtime_error(\n+            \"publickey\\n\"\n+            \"Get your public key in PEM format used for name addressing.\");\n+    return \"blaa\";\n+}\n+\n Value updatens(const Array& params, bool fHelp)\n {\n     if (fHelp || params.size() < 2 || params.size() > 3)\n@@ -1493,8 +1502,9 @@ pair<string, rpcfn_type> pCallTable[] =\n     make_pair(\"getaddressesbylabel\",   &getaddressesbyaccount), // deprecated\n     make_pair(\"sendtoaddress\",         &sendtoaddress),\n     make_pair(\"send\",                  &rpc_send),\n-    make_pair(\"updatens\",              &updatens),\n-    make_pair(\"setnspassword\",         &setnspassword),\n+    //make_pair(\"updatens\",              &updatens),\n+    //make_pair(\"setnspassword\",         &setnspassword),\n+    make_pair(\"publickey\",             &publickey),\n     make_pair(\"getamountreceived\",     &getreceivedbyaddress), // deprecated, renamed to getreceivedbyaddress\n     make_pair(\"getallreceived\",        &listreceivedbyaddress), // deprecated, renamed to listreceivedbyaddress\n     make_pair(\"getreceivedbyaddress\",  &getreceivedbyaddress),"
      }
    ]
  },
  {
    "sha": "1026d3cff05ff960304373b5a995b5a6cc2325b6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxMDI2ZDNjZmYwNWZmOTYwMzA0MzczYjVhOTk1YjVhNmNjMjMyNWI2",
    "commit": {
      "author": {
        "name": "genjix",
        "email": "fake@lol.u",
        "date": "2011-04-12T21:20:51Z"
      },
      "committer": {
        "name": "genjix",
        "email": "fake@lol.u",
        "date": "2011-04-12T21:20:51Z"
      },
      "message": "load keypair of create method added to init.",
      "tree": {
        "sha": "0d8143cb2a3286a1e3178ff35f546c798f5f5f9c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0d8143cb2a3286a1e3178ff35f546c798f5f5f9c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1026d3cff05ff960304373b5a995b5a6cc2325b6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1026d3cff05ff960304373b5a995b5a6cc2325b6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1026d3cff05ff960304373b5a995b5a6cc2325b6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1026d3cff05ff960304373b5a995b5a6cc2325b6/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "f12c35af070c2f7b02edbfdaca74a9e99edd521f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f12c35af070c2f7b02edbfdaca74a9e99edd521f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f12c35af070c2f7b02edbfdaca74a9e99edd521f"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 15,
      "deletions": 0
    },
    "files": [
      {
        "sha": "1ba454b58d4d4c210339bc56f6e0a097e5b52a80",
        "filename": "init.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1026d3cff05ff960304373b5a995b5a6cc2325b6/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1026d3cff05ff960304373b5a995b5a6cc2325b6/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/init.cpp?ref=1026d3cff05ff960304373b5a995b5a6cc2325b6",
        "patch": "@@ -98,6 +98,18 @@ bool AppInit(int argc, char* argv[])\n     return fRet;\n }\n \n+void LoadKeypairFile()\n+{\n+    namespace fs = boost::filesystem;\n+    fs::path keyp_file(GetDataDir());\n+    keyp_file /= \"keypair.rsa\";\n+    if (!keyp_file.good()) {\n+        // keypair file does not yet exist so create a new one and save it.\n+    }\n+    // load it.\n+    std::cout << keyp_file << \"\\n\";\n+}\n+\n bool AppInit2(int argc, char* argv[])\n {\n #ifdef _MSC_VER\n@@ -464,6 +476,9 @@ bool AppInit2(int argc, char* argv[])\n     if (!CreateThread(StartNode, NULL))\n         wxMessageBox(\"Error: CreateThread(StartNode) failed\", \"Bitcoin\");\n \n+    // Should be before the RPC server is started.\n+    LoadKeypairFile();\n+\n     if (fServer)\n         CreateThread(ThreadRPCServer, NULL);\n "
      }
    ]
  },
  {
    "sha": "4cb2e4578e86a4ccad04740a44aa9bb04033e534",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0Y2IyZTQ1NzhlODZhNGNjYWQwNDc0MGE0NGFhOWJiMDQwMzNlNTM0",
    "commit": {
      "author": {
        "name": "genjix",
        "email": "fake@lol.u",
        "date": "2011-04-12T21:21:07Z"
      },
      "committer": {
        "name": "genjix",
        "email": "fake@lol.u",
        "date": "2011-04-12T21:21:07Z"
      },
      "message": "static keypair object added to Access",
      "tree": {
        "sha": "ae97ee4789ce3fc8767b64d252a6be460412b757",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ae97ee4789ce3fc8767b64d252a6be460412b757"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4cb2e4578e86a4ccad04740a44aa9bb04033e534",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4cb2e4578e86a4ccad04740a44aa9bb04033e534",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4cb2e4578e86a4ccad04740a44aa9bb04033e534",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4cb2e4578e86a4ccad04740a44aa9bb04033e534/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "1026d3cff05ff960304373b5a995b5a6cc2325b6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1026d3cff05ff960304373b5a995b5a6cc2325b6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1026d3cff05ff960304373b5a995b5a6cc2325b6"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 8,
      "deletions": 0
    },
    "files": [
      {
        "sha": "75da453f155c0e14ebc3fdada6bebea974047539",
        "filename": "access.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4cb2e4578e86a4ccad04740a44aa9bb04033e534/access.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4cb2e4578e86a4ccad04740a44aa9bb04033e534/access.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/access.cpp?ref=4cb2e4578e86a4ccad04740a44aa9bb04033e534",
        "patch": "@@ -163,6 +163,11 @@ void AccessCard::Load(const string& pem, const string& pass)\n                                          StringAsVoid(pass));\n     CheckKey();                     \n }\n+bool AccessCard::IsLoaded() const\n+{\n+    return keypair != NULL;\n+}\n+\n void AccessCard::PublicKey(string& pem) const\n {\n     CheckKey();"
      },
      {
        "sha": "8251a7b9997a998f0758fc1588ee90a2b89de2c5",
        "filename": "access.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4cb2e4578e86a4ccad04740a44aa9bb04033e534/access.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4cb2e4578e86a4ccad04740a44aa9bb04033e534/access.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/access.h?ref=4cb2e4578e86a4ccad04740a44aa9bb04033e534",
        "patch": "@@ -40,6 +40,7 @@ class AccessCard\n     void Generate();\n     // load a private key in PEM format\n     void Load(const string& pem, const string& pass);\n+    bool IsLoaded() const;\n     void PublicKey(string& pem) const;\n     void PrivateKey(string& pem, const string& passphrase) const;\n     // sign a message and return it base64 encoded.\n@@ -91,5 +92,7 @@ class EvpBox\n     EVP_PKEY* evpkey;\n };\n \n+static AccessCard keypair;\n+\n #endif\n "
      }
    ]
  },
  {
    "sha": "d3507ec1d6108d55c3ad39c054cbb72e8b810542",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkMzUwN2VjMWQ2MTA4ZDU1YzNhZDM5YzA1NGNiYjcyZThiODEwNTQy",
    "commit": {
      "author": {
        "name": "genjix",
        "email": "fake@lol.u",
        "date": "2011-04-13T19:24:24Z"
      },
      "committer": {
        "name": "genjix",
        "email": "fake@lol.u",
        "date": "2011-04-13T19:24:24Z"
      },
      "message": "LoadKeypairFile()",
      "tree": {
        "sha": "680e7f57f9e66627a65f25d41712d5031d532d96",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/680e7f57f9e66627a65f25d41712d5031d532d96"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d3507ec1d6108d55c3ad39c054cbb72e8b810542",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d3507ec1d6108d55c3ad39c054cbb72e8b810542",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d3507ec1d6108d55c3ad39c054cbb72e8b810542",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d3507ec1d6108d55c3ad39c054cbb72e8b810542/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "4cb2e4578e86a4ccad04740a44aa9bb04033e534",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4cb2e4578e86a4ccad04740a44aa9bb04033e534",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4cb2e4578e86a4ccad04740a44aa9bb04033e534"
      }
    ],
    "stats": {
      "total": 49,
      "additions": 44,
      "deletions": 5
    },
    "files": [
      {
        "sha": "2a54f73205ea5b56fde55ee9143a72e331edc8c6",
        "filename": "init.cpp",
        "status": "modified",
        "additions": 44,
        "deletions": 5,
        "changes": 49,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d3507ec1d6108d55c3ad39c054cbb72e8b810542/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d3507ec1d6108d55c3ad39c054cbb72e8b810542/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/init.cpp?ref=d3507ec1d6108d55c3ad39c054cbb72e8b810542",
        "patch": "@@ -4,6 +4,7 @@\n \n #include \"headers.h\"\n \n+#include \"access.h\"\n \n \n \n@@ -101,13 +102,51 @@ bool AppInit(int argc, char* argv[])\n void LoadKeypairFile()\n {\n     namespace fs = boost::filesystem;\n-    fs::path keyp_file(GetDataDir());\n-    keyp_file /= \"keypair.rsa\";\n-    if (!keyp_file.good()) {\n+    fs::path keyp_filen(GetDataDir());\n+    keyp_filen /= \"keypair.rsa\";\n+\n+    // use no password if not specified\n+    string password = \"\";\n+    if (mapArgs.count(\"-naming-password\")) {\n+        password = mapArgs[\"-naming-password\"];\n+    }\n+    else {\n+        cout << \"Warning: Using empty password for name-lookup keypair.\\n\";\n+    }\n+\n+    if (!is_regular_file(keyp_filen)) {\n         // keypair file does not yet exist so create a new one and save it.\n+        keypair.Generate();\n+        fs::ofstream keyp_stream(keyp_filen, ios_base::trunc);\n+        if (!keyp_stream.good()) {\n+            cout << \"Warning: Unable to open stream '\" << keyp_filen\n+                << \"' for writing.\\n\";\n+            return;\n+        }\n+        string pubkey;\n+        keypair.PrivateKey(pubkey, password);\n+        keyp_stream << pubkey;\n+        keyp_stream.close();\n+    }\n+    else {\n+        // load it.\n+        fs::ifstream keyp_stream(keyp_filen);\n+        string privkey;\n+        if (keyp_stream.is_open()) {\n+            string pem_line;\n+            while (keyp_stream.good()) {\n+                getline(keyp_stream, pem_line);\n+                privkey += pem_line;\n+                privkey += '\\n';\n+            }\n+        }\n+        else {\n+            cout << \"Warning: Problem loading keypair PEM '\" << keyp_filen << \"'\\n\";\n+            return;\n+        }\n+        keyp_stream.close();\n+        keypair.Load(privkey, password);\n     }\n-    // load it.\n-    std::cout << keyp_file << \"\\n\";\n }\n \n bool AppInit2(int argc, char* argv[])"
      }
    ]
  },
  {
    "sha": "d9d8e4c76da3737e9b676f6e12b62a46512803eb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkOWQ4ZTRjNzZkYTM3MzdlOWI2NzZmNmUxMmI2MmE0NjUxMjgwM2Vi",
    "commit": {
      "author": {
        "name": "genjix",
        "email": "fake@lol.u",
        "date": "2011-04-13T19:24:53Z"
      },
      "committer": {
        "name": "genjix",
        "email": "fake@lol.u",
        "date": "2011-04-13T19:24:53Z"
      },
      "message": "RPC publickey",
      "tree": {
        "sha": "50c15ca39052195c2701543a81fd1bebf93f4252",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/50c15ca39052195c2701543a81fd1bebf93f4252"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d9d8e4c76da3737e9b676f6e12b62a46512803eb",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d9d8e4c76da3737e9b676f6e12b62a46512803eb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d9d8e4c76da3737e9b676f6e12b62a46512803eb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d9d8e4c76da3737e9b676f6e12b62a46512803eb/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "d3507ec1d6108d55c3ad39c054cbb72e8b810542",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d3507ec1d6108d55c3ad39c054cbb72e8b810542",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d3507ec1d6108d55c3ad39c054cbb72e8b810542"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 6,
      "deletions": 1
    },
    "files": [
      {
        "sha": "b30521674428dd82ea98227d3e29981d0f21effe",
        "filename": "rpc.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d9d8e4c76da3737e9b676f6e12b62a46512803eb/rpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d9d8e4c76da3737e9b676f6e12b62a46512803eb/rpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/rpc.cpp?ref=d9d8e4c76da3737e9b676f6e12b62a46512803eb",
        "patch": "@@ -23,6 +23,7 @@ typedef boost::asio::ssl::stream<boost::asio::ip::tcp::socket> SSLStream;\n \n // name resolution service\n #include \"resolv.h\"\n+#include \"access.h\"\n \n using namespace boost::asio;\n using namespace json_spirit;\n@@ -543,7 +544,11 @@ Value publickey(const Array& params, bool fHelp)\n         throw runtime_error(\n             \"publickey\\n\"\n             \"Get your public key in PEM format used for name addressing.\");\n-    return \"blaa\";\n+    if (!keypair.IsLoaded())\n+        return \"\";\n+    string pem;\n+    keypair.PublicKey(pem);\n+    return pem;\n }\n \n Value updatens(const Array& params, bool fHelp)"
      }
    ]
  },
  {
    "sha": "59fa28c9dd0a440bf0f2066b0afd4c0400dc23d1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1OWZhMjhjOWRkMGE0NDBiZjBmMjA2NmIwYWZkNGMwNDAwZGMyM2Qx",
    "commit": {
      "author": {
        "name": "genjix",
        "email": "fake@lol.u",
        "date": "2011-04-14T08:54:37Z"
      },
      "committer": {
        "name": "genjix",
        "email": "fake@lol.u",
        "date": "2011-04-14T08:54:37Z"
      },
      "message": "various working changes for name lookup, works now.",
      "tree": {
        "sha": "44e9e41f01859227da37ee9f39a4ec788a4af44e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/44e9e41f01859227da37ee9f39a4ec788a4af44e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/59fa28c9dd0a440bf0f2066b0afd4c0400dc23d1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/59fa28c9dd0a440bf0f2066b0afd4c0400dc23d1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/59fa28c9dd0a440bf0f2066b0afd4c0400dc23d1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/59fa28c9dd0a440bf0f2066b0afd4c0400dc23d1/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "d9d8e4c76da3737e9b676f6e12b62a46512803eb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d9d8e4c76da3737e9b676f6e12b62a46512803eb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d9d8e4c76da3737e9b676f6e12b62a46512803eb"
      }
    ],
    "stats": {
      "total": 90,
      "additions": 36,
      "deletions": 54
    },
    "files": [
      {
        "sha": "848efcf891643f13a2980f05d2a86a147f7bf842",
        "filename": "access.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 11,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/59fa28c9dd0a440bf0f2066b0afd4c0400dc23d1/access.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/59fa28c9dd0a440bf0f2066b0afd4c0400dc23d1/access.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/access.cpp?ref=59fa28c9dd0a440bf0f2066b0afd4c0400dc23d1",
        "patch": "@@ -3,6 +3,8 @@\n \n #include \"access.h\"\n \n+AccessCard keypair;\n+\n const char* ReadError::what() const throw()\n {\n     return \"Problem reading BIO.\";\n@@ -211,7 +213,7 @@ static void Hash(const char* data, size_t datlen, uchar* digest)\n         throw HashFailed();\n }\n \n-string AccessCard::Sign(const string& msg)\n+const string AccessCard::Sign(const string& msg) const\n {\n     uchar *sig = NULL;\n     unsigned int sig_len = 0;\n@@ -237,16 +239,6 @@ string AccessCard::Sign(const string& msg)\n     string encsig(reinterpret_cast<char*>(b.buf), b.size);\n     return encsig;\n }\n-#if 0\n-bool AccessCard::Verify(const string& msg, const string& sig)\n-{\n-    //uchar* digest = Hash(msg.c_str(), msg.size());\n-    uchar* digest;\n-    uchar* sigbuf = CastString<uchar>(msg);\n-    const uchar* msgbuf = CastString<uchar>(msg);\n-    return RSA_verify(NID_sha512, msgbuf, msg.size(), sigbuf, sig.size(), keypair);\n-}\n-#endif\n \n #ifdef TEST_ACCESS\n //-------------------------------------------------------------------"
      },
      {
        "sha": "0831fa8700765f38b59b4a744cc5761e5d3931f1",
        "filename": "access.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/59fa28c9dd0a440bf0f2066b0afd4c0400dc23d1/access.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/59fa28c9dd0a440bf0f2066b0afd4c0400dc23d1/access.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/access.h?ref=59fa28c9dd0a440bf0f2066b0afd4c0400dc23d1",
        "patch": "@@ -44,7 +44,7 @@ class AccessCard\n     void PublicKey(string& pem) const;\n     void PrivateKey(string& pem, const string& passphrase) const;\n     // sign a message and return it base64 encoded.\n-    string Sign(const string& msg);\n+    const string Sign(const string& msg) const;\n \n private:\n     void CheckKey() const;\n@@ -92,7 +92,7 @@ class EvpBox\n     EVP_PKEY* evpkey;\n };\n \n-static AccessCard keypair;\n+extern AccessCard keypair;\n \n #endif\n "
      },
      {
        "sha": "7cffd0302646bd523f73728f93bf52908368dcd6",
        "filename": "resolv.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 10,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/59fa28c9dd0a440bf0f2066b0afd4c0400dc23d1/resolv.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/59fa28c9dd0a440bf0f2066b0afd4c0400dc23d1/resolv.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/resolv.cpp?ref=59fa28c9dd0a440bf0f2066b0afd4c0400dc23d1",
        "patch": "@@ -1,5 +1,9 @@\n #include \"resolv.h\"\n \n+#include <boost/lexical_cast.hpp>\n+\n+#include \"access.h\"\n+\n // callback used to write response from the server\n static int writer(char *pData, size_t nSize, size_t nNmemb, std::string *pBuffer)  \n {  \n@@ -71,14 +75,17 @@ string NameResolutionService::FetchAddress(const string& strHandle, string& strA\n     return \"\";  // no error\n }\n \n-string NameResolutionService::MakeRequest(const string& strHandle, const string& strPassword, const string& strReqname, const string& strArgument, string& strStatus)\n+string NameResolutionService::MakeRequest(const string& strHandle, const string& strReqname, const string& strArgument, string& strStatus)\n {\n     if (!curl)\n         // For some reason CURL didn't start...\n         return pErrorBuffer;\n     // Expand the handle\n     string strNickname, strDomain;\n     ExplodeHandle(strHandle, strNickname, strDomain);\n+    // Add a timestamp + Sign our request\n+    const string strTime = boost::lexical_cast<string>(time(NULL)),\n+        strSig = keypair.Sign(strNickname + strArgument + strTime);\n     // Construct URL for POST request\n     string strRequestUrl = strDomain + \"/set\" + strReqname + \"/\";\n     // Pass URL to CURL\n@@ -87,9 +94,9 @@ string NameResolutionService::MakeRequest(const string& strHandle, const string&\n     PostVariables PostRequest;\n     // This method is used by:\n     //    setaddress  which takes a value called address\n-    //    setnewpassword which takes a value called newpassword\n-    if (!PostRequest.Add(\"nickname\", strNickname) ||\n-        !PostRequest.Add(\"password\", strPassword) ||\n+    if (!PostRequest.Add(\"nickname\",  strNickname) ||\n+        !PostRequest.Add(\"signature\", strSig) ||\n+        !PostRequest.Add(\"timestamp\", strTime) ||\n         !PostRequest.Add(strReqname, strArgument))\n         return \"Internal error constructing POST request.\";\n     curl_easy_setopt(curl, CURLOPT_POST, 1);\n@@ -100,13 +107,9 @@ string NameResolutionService::MakeRequest(const string& strHandle, const string&\n     strStatus = strBuffer;\n     return \"\";  // no error\n }\n-string NameResolutionService::UpdateAddress(const string& strHandle, const string& strPassword, const string& strNewaddy, string& strStatus)\n-{\n-    return MakeRequest(strHandle, strPassword, \"address\", strNewaddy, strStatus);\n-}\n-string NameResolutionService::ChangePassword(const string& strHandle, const string& strPassword, const string& strNewPassword, string& strStatus)\n+string NameResolutionService::UpdateAddress(const string& strHandle, const string& strNewaddy, string& strStatus)\n {\n-    return MakeRequest(strHandle, strPassword, \"newpassword\", strNewPassword, strStatus);\n+    return MakeRequest(strHandle, \"address\", strNewaddy, strStatus);\n }\n \n NameResolutionService::PostVariables::PostVariables()"
      },
      {
        "sha": "8d2e7bba02c43551904e730ec4d9f8d7c6d014cf",
        "filename": "resolv.h",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/59fa28c9dd0a440bf0f2066b0afd4c0400dc23d1/resolv.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/59fa28c9dd0a440bf0f2066b0afd4c0400dc23d1/resolv.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/resolv.h?ref=59fa28c9dd0a440bf0f2066b0afd4c0400dc23d1",
        "patch": "@@ -19,6 +19,7 @@ Most characters are valid for the username + password (and handled accordingly),\n    genjix@bar.com/path/to/\n \n */\n+\n class NameResolutionService\n {\n public:\n@@ -28,8 +29,8 @@ class NameResolutionService\n     // Three main methods map to RPC actions.\n     string FetchAddress(const string& strHandle, string& strAddy);\n     // Push new address to the server\n-    string UpdateAddress(const string& strHandle, const string& strPassword, const string& strNewaddy, string& strStatus);\n-    string ChangePassword(const string& strHandle, const string& strPassword, const string& strNewPassword, string& strStatus);\n+    string UpdateAddress(const string& strHandle, const string& strNewaddy, string& strStatus);\n+\n private:\n     // A POST block\n     class PostVariables\n@@ -50,7 +51,7 @@ class NameResolutionService\n     // Perform the HTTP request. Returns true on success.\n     bool Perform();\n     // Make a POST request that will modify the specified variable (strReqname) on the server.\n-    string MakeRequest(const string& strHandle, const string& strPassword, const string& strReqname, const string& strArgument, string& strStatus);\n+    string MakeRequest(const string& strHandle, const string& strReqname, const string& strArgument, string& strStatus);\n \n     // CURL error message\n     char pErrorBuffer[CURL_ERROR_SIZE];  "
      },
      {
        "sha": "aa265ba9084e741135972fad68eaf4922ce8db04",
        "filename": "rpc.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 28,
        "changes": 42,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/59fa28c9dd0a440bf0f2066b0afd4c0400dc23d1/rpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/59fa28c9dd0a440bf0f2066b0afd4c0400dc23d1/rpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/rpc.cpp?ref=59fa28c9dd0a440bf0f2066b0afd4c0400dc23d1",
        "patch": "@@ -551,41 +551,28 @@ Value publickey(const Array& params, bool fHelp)\n     return pem;\n }\n \n-Value updatens(const Array& params, bool fHelp)\n+Value updatename(const Array& params, bool fHelp)\n {\n-    if (fHelp || params.size() < 2 || params.size() > 3)\n+    if (fHelp || params.size() < 1 || params.size() > 2)\n         throw runtime_error(\n-            \"updatens <name@domain> <password> [address]\\n\"\n+            \"updatename <name@domain> [address]\\n\"\n             \"Updates name lookup server with an address.\");\n \n-    string strHandle = params[0].get_str(), strPass = params[1].get_str(), strAddy, strStatus;\n-    if (params.size() == 3)\n-        strAddy = params[2].get_str();\n-        // @GENJIX should check address for validity\n+    string strHandle = params[0].get_str(), strAddy, strSig, strStatus;\n+    if (params.size() == 2) {\n+        strAddy = params[1].get_str();\n+        // check address for validity\n+        uint160 hash160;\n+        bool isValid = AddressToHash160(strAddy, hash160);\n+        if (!isValid)\n+            throw JSONRPCError(-4, \"Invalid address specified.\");\n+    }\n     else\n         // select random address\n         strAddy = GetAccountAddress(\"\");\n \n     NameResolutionService ns;\n-    string strError = ns.UpdateAddress(strHandle, strPass, strAddy, strStatus);\n-    if (!strError.empty())\n-        throw JSONRPCError(-4, strError);\n-\n-    // Throw if strStatus JSON contains an error key\n-    CheckMaybeThrow(strStatus);\n-    return strStatus;\n-}\n-\n-Value setnspassword(const Array& params, bool fHelp)\n-{\n-    if (fHelp || params.size() != 3)\n-        throw runtime_error(\n-            \"setnspassword <name@domain> <password> <newpassword>\\n\"\n-            \"Sets the password for your named account.\");\n-\n-    NameResolutionService ns;\n-    string strHandle = params[0].get_str(), strPass = params[1].get_str(), strNewPass = params[2].get_str(), strStatus;\n-    string strError = ns.ChangePassword(strHandle, strPass, strNewPass, strStatus);\n+    string strError = ns.UpdateAddress(strHandle, strAddy, strStatus);\n     if (!strError.empty())\n         throw JSONRPCError(-4, strError);\n \n@@ -1507,8 +1494,7 @@ pair<string, rpcfn_type> pCallTable[] =\n     make_pair(\"getaddressesbylabel\",   &getaddressesbyaccount), // deprecated\n     make_pair(\"sendtoaddress\",         &sendtoaddress),\n     make_pair(\"send\",                  &rpc_send),\n-    //make_pair(\"updatens\",              &updatens),\n-    //make_pair(\"setnspassword\",         &setnspassword),\n+    make_pair(\"updatename\",            &updatename),\n     make_pair(\"publickey\",             &publickey),\n     make_pair(\"getamountreceived\",     &getreceivedbyaddress), // deprecated, renamed to getreceivedbyaddress\n     make_pair(\"getallreceived\",        &listreceivedbyaddress), // deprecated, renamed to listreceivedbyaddress"
      }
    ]
  },
  {
    "sha": "604cb69b0ca072e70e46b8c9b0056e2b64e2dc78",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2MDRjYjY5YjBjYTA3MmU3MGU0NmI4YzliMDA1NmUyYjY0ZTJkYzc4",
    "commit": {
      "author": {
        "name": "genjix",
        "email": "fake@lol.u",
        "date": "2011-04-14T09:01:59Z"
      },
      "committer": {
        "name": "genjix",
        "email": "fake@lol.u",
        "date": "2011-04-14T09:01:59Z"
      },
      "message": "php verify signature for setaddy",
      "tree": {
        "sha": "5c345cb140b7385919fb8819f014d65812790575",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5c345cb140b7385919fb8819f014d65812790575"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/604cb69b0ca072e70e46b8c9b0056e2b64e2dc78",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/604cb69b0ca072e70e46b8c9b0056e2b64e2dc78",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/604cb69b0ca072e70e46b8c9b0056e2b64e2dc78",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/604cb69b0ca072e70e46b8c9b0056e2b64e2dc78/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "59fa28c9dd0a440bf0f2066b0afd4c0400dc23d1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/59fa28c9dd0a440bf0f2066b0afd4c0400dc23d1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/59fa28c9dd0a440bf0f2066b0afd4c0400dc23d1"
      }
    ],
    "stats": {
      "total": 56,
      "additions": 56,
      "deletions": 0
    },
    "files": [
      {
        "sha": "5029b7999f1ca97cb08872f52448d9c102a3239f",
        "filename": "contrib/ns/setaddress/alt.php",
        "status": "added",
        "additions": 56,
        "deletions": 0,
        "changes": 56,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/604cb69b0ca072e70e46b8c9b0056e2b64e2dc78/contrib/ns/setaddress/alt.php",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/604cb69b0ca072e70e46b8c9b0056e2b64e2dc78/contrib/ns/setaddress/alt.php",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/ns/setaddress/alt.php?ref=604cb69b0ca072e70e46b8c9b0056e2b64e2dc78",
        "patch": "@@ -0,0 +1,56 @@\n+<?php\n+require '/var/db.bitnom.inc';\n+\n+function cleanup_string($str)\n+{\n+    return mysql_real_escape_string($str);\n+}\n+function post($key)\n+{\n+    if (!isset($_POST[$key]))\n+        throw new Error('Ooops!', \"Missing posted value $key!\");\n+    return cleanup_string($_POST[$key]);\n+}\n+function get($key)\n+{\n+    if (!isset($_GET[$key]))\n+        throw new Error('Ooops!', \"Missing get value $key!\");\n+    return cleanup_string($_GET[$key]);\n+}\n+\n+$pubkey = \"-----BEGIN PUBLIC KEY-----\n+MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA9X6CpkoqdPouFzUoWPFq\n+xSCpXvR34Z5cQM7LX5qlRR3yHwT8N7s+U6AerEP6v3usPFqL92Q96/kDVwEeKOCe\n+pEZgjEVDP8t+wDXs+SfCgn5sG/ueAgzYnPTdQVF5vuFuBQlhhhlnyjoBRvzBKhWF\n+jU/fyLD1sbYRQFv5vLujwZ0HIoPlDBsmvREX5zsujQxNz8IPrULhPxN/SB4lOwYM\n+UP++msYgbWbJS9oOk8rNBSCAu8N/VxuayJNx/8ENRk/cAIFjL57EvsJyA1gwE7Dk\n+MlILZYBQs+eSC1H0bsGqhsUTj9OT2YREoY00uNBnGdCl73h24tyYi3SaefbDREpv\n+GQIDAQAB\n+-----END PUBLIC KEY-----\";\n+\n+#$nickname = post('nickname');\n+$nickname = $_POST['nickname'];\n+#$signature = post('signature');\n+$signature = $_POST['signature'];\n+#$timestamp = post('timestamp');\n+$timestamp = $_POST['timestamp'];\n+$address = post('address');\n+#$address = $_POST['address'];\n+\n+$signature = base64_decode($signature);\n+$pubkey = openssl_get_publickey($pubkey);\n+$data = $nickname . $address . $timestamp;\n+\n+$ok = openssl_verify($data, $signature, $pubkey, \"sha512\");\n+\n+if ($ok == 1) {\n+    echo '{\"status\": \"good\", \"address\": \"'.$address.'\"}';\n+}\n+else if ($ok == 0) {\n+    echo '{\"status\": \"bad\", \"address\": \"'.$address.'\"}';\n+}\n+else {\n+    echo '{\"status\": \"ugly\"}';\n+}\n+\n+openssl_free_key($pubkey);"
      }
    ]
  },
  {
    "sha": "699e4da932615d18ce26217a6e7f1451d8677e05",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2OTllNGRhOTMyNjE1ZDE4Y2UyNjIxN2E2ZTdmMTQ1MWQ4Njc3ZTA1",
    "commit": {
      "author": {
        "name": "genjix",
        "email": "fake@lol.u",
        "date": "2011-04-16T09:20:42Z"
      },
      "committer": {
        "name": "genjix",
        "email": "fake@lol.u",
        "date": "2011-04-16T09:20:42Z"
      },
      "message": "added user website.",
      "tree": {
        "sha": "116e3d79c2494c6619cf43246d56554177f415ed",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/116e3d79c2494c6619cf43246d56554177f415ed"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/699e4da932615d18ce26217a6e7f1451d8677e05",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/699e4da932615d18ce26217a6e7f1451d8677e05",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/699e4da932615d18ce26217a6e7f1451d8677e05",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/699e4da932615d18ce26217a6e7f1451d8677e05/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "604cb69b0ca072e70e46b8c9b0056e2b64e2dc78",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/604cb69b0ca072e70e46b8c9b0056e2b64e2dc78",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/604cb69b0ca072e70e46b8c9b0056e2b64e2dc78"
      }
    ],
    "stats": {
      "total": 1190,
      "additions": 1190,
      "deletions": 0
    },
    "files": [
      {
        "sha": "938dcf821ae5ebebe51b6bdc869831a89f5993d6",
        "filename": "contrib/ns/site/header.php",
        "status": "added",
        "additions": 66,
        "deletions": 0,
        "changes": 66,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/699e4da932615d18ce26217a6e7f1451d8677e05/contrib/ns/site/header.php",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/699e4da932615d18ce26217a6e7f1451d8677e05/contrib/ns/site/header.php",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/ns/site/header.php?ref=699e4da932615d18ce26217a6e7f1451d8677e05",
        "patch": "@@ -0,0 +1,66 @@\n+<!DOCTYPE html>\n+<?php\n+error_reporting(E_ALL|E_STRICT);\n+ini_set('display_errors', '1');\n+session_start();\n+require '/var/db.bitnom.inc';\n+\n+function write_header()\n+{\n+?>\n+<html>\n+<head>\n+    <title>Bitnom</title>\n+<style>\n+input[type=text], textarea {\n+    display: block;\n+}\n+textarea {\n+    width: 600px;\n+    height: 300px;\n+}\n+pre {\n+    white-space: pre-wrap;\n+}\n+#prop\n+{\n+    font-family:\"Trebuchet MS\", Arial, Helvetica, sans-serif;\n+    width:100%;\n+    border-collapse:collapse;\n+}\n+#prop td, #prop th \n+{\n+    font-size:1.2em;\n+    border:1px solid #98bf21;\n+    padding:3px 7px 2px 7px;\n+}\n+#prop th \n+{\n+    font-size:1.4em;\n+    text-align:left;\n+    padding-top:5px;\n+    padding-bottom:4px;\n+    background-color:#A7C942;\n+    color:#fff;\n+}\n+#prop tr.alt td \n+{\n+    color:#000;\n+    background-color:#EAF2D3;\n+}\n+\n+</style>\n+</head>\n+<body>\n+    <div id='content'>\n+<?php }\n+\n+function write_footer()\n+{\n+?>\n+    </div>\n+</body>\n+</html>\n+<?php\n+}\n+"
      },
      {
        "sha": "e8f7fe5a2a4e7ffc9a4db8a86563278cd256f04c",
        "filename": "contrib/ns/site/index.php",
        "status": "added",
        "additions": 207,
        "deletions": 0,
        "changes": 207,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/699e4da932615d18ce26217a6e7f1451d8677e05/contrib/ns/site/index.php",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/699e4da932615d18ce26217a6e7f1451d8677e05/contrib/ns/site/index.php",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/ns/site/index.php?ref=699e4da932615d18ce26217a6e7f1451d8677e05",
        "patch": "@@ -0,0 +1,207 @@\n+<?php\n+require 'util.php';\n+require 'header.php';\n+\n+function add_nickname()\n+{\n+    $uid = user_id();\n+    $nickname = post('nickname');\n+    $query = \"\n+        SELECT\n+            1\n+        FROM\n+            nicknames\n+        WHERE\n+            nickname='$nickname'\n+            \";\n+    $result = do_query($query);\n+    if (has_results($result)) \n+        throw new Problem('Cannot', 'This nickname is already taken by another person.');\n+\n+    $query = \"\n+        INSERT IGNORE INTO\n+            nicknames(\n+                nickname,\n+                uid\n+            )\n+        VALUES (\n+            '$nickname',\n+            '$uid'\n+        )\n+        \";\n+    do_query($query);\n+}\n+\n+function remove_nickname()\n+{\n+    $uid = user_id();\n+    $nickname = post('nickname');\n+    $query = \"\n+        DELETE FROM\n+            nicknames\n+        WHERE\n+            uid='$uid'\n+            AND nickname='$nickname'\n+        \";\n+    do_query($query);\n+}\n+\n+function update_pubkey()\n+{\n+    $uid = user_id();\n+    $pubkey = post('pubkey');\n+    $query = \"\n+        UPDATE\n+            users\n+        SET\n+            pubkey='$pubkey'\n+        WHERE\n+            uid='$uid'\n+        \";\n+    do_query($query);\n+    echo \"<p><b>Updated public key.</b></p>\";\n+}\n+\n+function perform_action()\n+{\n+    $action = $_POST['action'];\n+    switch ($action) {\n+        case 'add_nickname':\n+            add_nickname();\n+            break;\n+\n+        case 'remove_nickname':\n+            remove_nickname();\n+            break;\n+\n+        case 'update_pubkey':\n+            update_pubkey();\n+            break;\n+\n+        default:\n+            throw new Error('Unknown action', 'This action is unknown');\n+            break;\n+    }\n+}\n+\n+function display_info()\n+{\n+    $uid = user_id();\n+    $query = \"\n+        SELECT\n+            uid,\n+            oidlogin,\n+            pubkey,\n+            timest\n+        FROM\n+            users\n+        WHERE\n+            uid='$uid'\n+            \";\n+    $result = do_query($query);\n+    $row = get_row($result);\n+    $oidlogin = $row['oidlogin'];\n+    if (isset($row['pubkey']))\n+        $pubkey = $row['pubkey'];\n+    else\n+        $pubkey = '';\n+    $timest = $row['timest'];\n+?>\n+    <ul>\n+        <li><?php echo $oidlogin; ?></li>\n+        <li><?php echo $timest; ?></li>\n+    </ul>\n+    <form action='' method='post'>\n+        <label for='pubkey'>Public key:</label>\n+        <textarea name='pubkey'><?php echo $pubkey; ?></textarea>\n+        <input type='hidden' name='action' value='update_pubkey' />\n+        <input type='submit' value='Update' />\n+    </form>\n+<?php\n+\n+    $query = \"\n+        SELECT\n+            nickid,\n+            nickname,\n+            addr,\n+            uid,\n+            timest\n+        FROM\n+            nicknames\n+        WHERE\n+            uid='$uid'\n+        \";\n+    $result = do_query($query);\n+?>\n+<br />\n+<table id='prop'>\n+    <tr>\n+        <th>Nickname</th>\n+        <th>Address</th>\n+        <th></th>\n+    </tr>\n+<?php\n+    while ($row = mysql_fetch_assoc($result)) {\n+        $nickname = $row['nickname'];\n+        echo \"    <tr>\\n\";\n+?>\n+    <td><?php echo $nickname; ?></td>\n+    <td><?php\n+        if (isset($row['addr']))\n+            echo $row['addr'];\n+        else\n+            echo 'None set';\n+    ?></td>\n+    <td>\n+        <form action='' method='post'>\n+            <input type='hidden' name='action' value='remove_nickname' />\n+            <input type='hidden' name='nickname' value='<?php echo $nickname; ?>' />\n+            <input type='submit' value='Remove' />\n+        </form>\n+    </td>\n+<?php\n+        echo \"    </tr>\\n\";\n+    }\n+    echo \"</table>\\n\";\n+}\n+\n+function main_page()\n+{\n+    if (isset($_SESSION['uid'])) {\n+        write_header();\n+        if (isset($_POST['action'])) {\n+            perform_action();\n+        }\n+\n+        display_info();\n+    ?>\n+    <br />\n+    <form action='' method='post'>\n+        <label for='nickname'>Nickname:</label>\n+        <input type='text' name='nickname' />\n+        <input type='hidden' name='action' value='add_nickname' />\n+        <input type='submit' value='Add nickname' />\n+    </form>\n+    <?php\n+    }\n+    else {\n+        header('Location: login.php');\n+    }\n+}\n+\n+try {\n+    main_page();\n+}\n+catch (Error $e) {\n+    echo \"<div class='content_box'><h3>{$e->getTitle()}</h3>\";\n+    echo \"<p>{$e->getMessage()}</p></div>\";\n+    echo \"<p><a href=''>Back to main page</a></p>\";\n+}\n+catch (Problem $e) {\n+    echo \"<div class='content_box'><h3>{$e->getTitle()}</h3>\";\n+    echo \"<p>{$e->getMessage()}</p></div>\";\n+    echo \"<p><a href=''>Back to main page</a></p>\";\n+}\n+\n+write_footer();\n+"
      },
      {
        "sha": "4864cd613be19d740aba7c2e07d79a038d9f9906",
        "filename": "contrib/ns/site/login.php",
        "status": "added",
        "additions": 89,
        "deletions": 0,
        "changes": 89,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/699e4da932615d18ce26217a6e7f1451d8677e05/contrib/ns/site/login.php",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/699e4da932615d18ce26217a6e7f1451d8677e05/contrib/ns/site/login.php",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/ns/site/login.php?ref=699e4da932615d18ce26217a6e7f1451d8677e05",
        "patch": "@@ -0,0 +1,89 @@\n+<?php\n+require 'openid.php';\n+require 'header.php';\n+require 'util.php';\n+\n+try {\n+    $openid = new LightOpenID;\n+    if (!$openid->mode) {\n+        if (isset($_GET['openid_identifier'])) {\n+            $openid->identity = htmlspecialchars($_GET['openid_identifier'], ENT_QUOTES);\n+            header('Location: '.$openid->authUrl());\n+        }\n+        write_header();\n+?>\n+<div class='content_box'>\n+<h3>Login</h3>\n+<p>Enter your OpenID login below:</p>\n+<p>\n+    <form action='' class='indent_form' method='get'>\n+        <input type='text' name='openid_identifier' />\n+        <input type='hidden' name='page' value='login' />\n+        <input type='submit' value='Submit' />\n+    </form>\n+</p>\n+<p>If you do not have an OpenID login then we recommend <a href=\"https://www.myopenid.com/\">MyOpenID</a>.</p>\n+<p>Alternatively you may sign in using <a href=\"?page=login&openid_identifier=https://www.google.com/accounts/o8/id\">Google</a> or <a href=\"?page=login&openid_identifier=me.yahoo.com\">Yahoo</a>.</p>\n+<?php\n+    }\n+    else if ($openid->mode == 'cancel') {\n+        write_header();\n+        throw new Problem(\":(\", \"Login was cancelled.\");\n+    }\n+    else {\n+        write_header();\n+        if ($openid->validate()) {\n+            echo \"<div class='content_box'>\";\n+            echo '<h3>Successful login!</h3>';\n+            # protect against session hijacking now we've escalated privilege level\n+            session_regenerate_id(true);\n+            $oidlogin = escapestr($openid->identity);\n+            # is this OpenID known to us?\n+            $query = \"\n+                SELECT 1\n+                FROM users\n+                WHERE oidlogin='$oidlogin'\n+                LIMIT 1;\n+            \";\n+            $result = do_query($query);\n+\n+            if (has_results($result)) {\n+                # need that uid\n+                $query = \"\n+                    SELECT uid\n+                    FROM users\n+                    WHERE oidlogin='$oidlogin'\n+                    LIMIT 1;\n+                \";\n+                $result = do_query($query);\n+                $row = get_row($result);\n+                $uid = (string)$row['uid'];\n+                echo '<p>Welcome back commander. Welcome back.</p>';\n+            }\n+            else {\n+                $query = \"\n+                    INSERT INTO users (\n+                        oidlogin\n+                    ) VALUES (\n+                        '$oidlogin'\n+                    );\n+                \";\n+                do_query($query);\n+                $uid = (string)mysql_insert_id();\n+                echo \"<p>Nice to finally see you here, <i>new</i> user.</p>\\n\";\n+            }\n+            echo \"<p><a href='index.php'>Main page</a></p>\";\n+            # store for later\n+            $_SESSION['uid'] = $uid;\n+        }\n+        else {\n+            throw new Problem(\":(\", \"Unable to login.\");\n+        }\n+    }\n+}\n+catch (ErrorException $e) {\n+    write_header();\n+    throw new Problem(\":(\", $e->getMessage());\n+}\n+write_footer();\n+?>"
      },
      {
        "sha": "6967327cd969bd7c823d8273e0d8cf88c4d7e962",
        "filename": "contrib/ns/site/openid.php",
        "status": "added",
        "additions": 754,
        "deletions": 0,
        "changes": 754,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/699e4da932615d18ce26217a6e7f1451d8677e05/contrib/ns/site/openid.php",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/699e4da932615d18ce26217a6e7f1451d8677e05/contrib/ns/site/openid.php",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/ns/site/openid.php?ref=699e4da932615d18ce26217a6e7f1451d8677e05",
        "patch": "@@ -0,0 +1,754 @@\n+<?php\n+/**\n+ * This class provides a simple interface for OpenID (1.1 and 2.0) authentication.\n+ * Supports Yadis discovery.\n+ * The authentication process is stateless/dumb.\n+ *\n+ * Usage:\n+ * Sign-on with OpenID is a two step process:\n+ * Step one is authentication with the provider:\n+ * <code>\n+ * $openid = new LightOpenID;\n+ * $openid->identity = 'ID supplied by user';\n+ * header('Location: ' . $openid->authUrl());\n+ * </code>\n+ * The provider then sends various parameters via GET, one of them is openid_mode.\n+ * Step two is verification:\n+ * <code>\n+ * if ($this->data['openid_mode']) {\n+ *     $openid = new LightOpenID;\n+ *     echo $openid->validate() ? 'Logged in.' : 'Failed';\n+ * }\n+ * </code>\n+ *\n+ * Optionally, you can set $returnUrl and $realm (or $trustRoot, which is an alias).\n+ * The default values for those are:\n+ * $openid->realm     = (!empty($_SERVER['HTTPS']) ? 'https' : 'http') . '://' . $_SERVER['HTTP_HOST'];\n+ * $openid->returnUrl = $openid->realm . $_SERVER['REQUEST_URI'];\n+ * If you don't know their meaning, refer to any openid tutorial, or specification. Or just guess.\n+ *\n+ * AX and SREG extensions are supported.\n+ * To use them, specify $openid->required and/or $openid->optional before calling $openid->authUrl().\n+ * These are arrays, with values being AX schema paths (the 'path' part of the URL).\n+ * For example:\n+ *   $openid->required = array('namePerson/friendly', 'contact/email');\n+ *   $openid->optional = array('namePerson/first');\n+ * If the server supports only SREG or OpenID 1.1, these are automaticaly\n+ * mapped to SREG names, so that user doesn't have to know anything about the server.\n+ *\n+ * To get the values, use $openid->getAttributes().\n+ *\n+ *\n+ * The library requires PHP >= 5.1.2 with curl or http/https stream wrappers enabled.\n+ * @author Mewp\n+ * @copyright Copyright (c) 2010, Mewp\n+ * @license http://www.opensource.org/licenses/mit-license.php MIT\n+ */\n+class LightOpenID\n+{\n+    public $returnUrl\n+         , $required = array()\n+         , $optional = array()\n+         , $verify_peer = null\n+         , $capath = null\n+         , $cainfo = null;\n+    private $identity, $claimed_id;\n+    protected $server, $version, $trustRoot, $aliases, $identifier_select = false\n+            , $ax = false, $sreg = false, $data, $setup_url = null;\n+    static protected $ax_to_sreg = array(\n+        'namePerson/friendly'     => 'nickname',\n+        'contact/email'           => 'email',\n+        'namePerson'              => 'fullname',\n+        'birthDate'               => 'dob',\n+        'person/gender'           => 'gender',\n+        'contact/postalCode/home' => 'postcode',\n+        'contact/country/home'    => 'country',\n+        'pref/language'           => 'language',\n+        'pref/timezone'           => 'timezone',\n+        );\n+\n+    function __construct()\n+    {\n+        $this->trustRoot = (!empty($_SERVER['HTTPS']) ? 'https' : 'http') . '://' . $_SERVER['HTTP_HOST'];\n+        $uri = rtrim(preg_replace('#((?<=\\?)|&)openid\\.[^&]+#', '', $_SERVER['REQUEST_URI']), '?');\n+        $this->returnUrl = $this->trustRoot . $uri;\n+\n+        $this->data = $_POST + $_GET; # OPs may send data as POST or GET.\n+\n+        if(!function_exists('curl_init') && !in_array('https', stream_get_wrappers())) {\n+            throw new ErrorException('You must have either https wrappers or curl enabled.');\n+        }\n+    }\n+\n+    function __set($name, $value)\n+    {\n+        switch ($name) {\n+        case 'identity':\n+            if (strlen($value = trim((String) $value))) {\n+                if (preg_match('#^xri:/*#i', $value, $m)) {\n+                    $value = substr($value, strlen($m[0]));\n+                } elseif (!preg_match('/^(?:[=@+\\$!\\(]|https?:)/i', $value)) {\n+                    $value = \"http://$value\";\n+                }\n+                if (preg_match('#^https?://[^/]+$#i', $value, $m)) {\n+                    $value .= '/';\n+                }\n+            }\n+            $this->$name = $this->claimed_id = $value;\n+            break;\n+        case 'trustRoot':\n+        case 'realm':\n+            $this->trustRoot = trim($value);\n+        }\n+    }\n+\n+    function __get($name)\n+    {\n+        switch ($name) {\n+        case 'identity':\n+            # We return claimed_id instead of identity,\n+            # because the developer should see the claimed identifier,\n+            # i.e. what he set as identity, not the op-local identifier (which is what we verify)\n+            return $this->claimed_id;\n+        case 'trustRoot':\n+        case 'realm':\n+            return $this->trustRoot;\n+        case 'mode':\n+            return empty($this->data['openid_mode']) ? null : $this->data['openid_mode'];\n+        }\n+    }\n+\n+    /**\n+     * Checks if the server specified in the url exists.\n+     *\n+     * @param $url url to check\n+     * @return true, if the server exists; false otherwise\n+     */\n+    function hostExists($url)\n+    {\n+        if (strpos($url, '/') === false) {\n+            $server = $url;\n+        } else {\n+            $server = @parse_url($url, PHP_URL_HOST);\n+        }\n+\n+        if (!$server) {\n+            return false;\n+        }\n+\n+        return !!gethostbynamel($server);\n+    }\n+\n+    protected function request_curl($url, $method='GET', $params=array())\n+    {\n+        $params = http_build_query($params, '', '&');\n+        $curl = curl_init($url . ($method == 'GET' && $params ? '?' . $params : ''));\n+        curl_setopt($curl, CURLOPT_FOLLOWLOCATION, true);\n+        curl_setopt($curl, CURLOPT_HEADER, false);\n+        curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, false);\n+        curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);\n+        curl_setopt($curl, CURLOPT_HTTPHEADER, array('Accept: application/xrds+xml, */*'));\n+\n+        if($this->verify_peer !== null) {\n+            curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, $this->verify_peer);\n+            if($this->capath) {\n+                curl_setopt($curl, CURLOPT_CAPATH, $this->capath);\n+            }\n+\n+            if($this->cainfo) {\n+                curl_setopt($curl, CURLOPT_CAINFO, $this->cainfo);\n+            }\n+        }\n+\n+        if ($method == 'POST') {\n+            curl_setopt($curl, CURLOPT_POST, true);\n+            curl_setopt($curl, CURLOPT_POSTFIELDS, $params);\n+        } elseif ($method == 'HEAD') {\n+            curl_setopt($curl, CURLOPT_HEADER, true);\n+            curl_setopt($curl, CURLOPT_NOBODY, true);\n+        } else {\n+            curl_setopt($curl, CURLOPT_HTTPGET, true);\n+        }\n+        $response = curl_exec($curl);\n+\n+        if($method == 'HEAD') {\n+            $headers = array();\n+            foreach(explode(\"\\n\", $response) as $header) {\n+                $pos = strpos($header,':');\n+                $name = strtolower(trim(substr($header, 0, $pos)));\n+                $headers[$name] = trim(substr($header, $pos+1));\n+            }\n+\n+            # Updating claimed_id in case of redirections.\n+            $effective_url = curl_getinfo($curl, CURLINFO_EFFECTIVE_URL);\n+            if($effective_url != $url) {\n+                $this->identity = $this->claimed_id = $effective_url;\n+            }\n+\n+            return $headers;\n+        }\n+\n+        if (curl_errno($curl)) {\n+            throw new ErrorException(curl_error($curl), curl_errno($curl));\n+        }\n+\n+        return $response;\n+    }\n+\n+    protected function request_streams($url, $method='GET', $params=array())\n+    {\n+        if(!$this->hostExists($url)) {\n+            throw new ErrorException('Invalid request.');\n+        }\n+\n+        $params = http_build_query($params, '', '&');\n+        switch($method) {\n+        case 'GET':\n+            $opts = array(\n+                'http' => array(\n+                    'method' => 'GET',\n+                    'header' => 'Accept: application/xrds+xml, */*',\n+                    'ignore_errors' => true,\n+                )\n+            );\n+            $url = $url . ($params ? '?' . $params : '');\n+            break;\n+        case 'POST':\n+            $opts = array(\n+                'http' => array(\n+                    'method' => 'POST',\n+                    'header'  => 'Content-type: application/x-www-form-urlencoded',\n+                    'content' => $params,\n+                    'ignore_errors' => true,\n+                )\n+            );\n+            break;\n+        case 'HEAD':\n+            # We want to send a HEAD request,\n+            # but since get_headers doesn't accept $context parameter,\n+            # we have to change the defaults.\n+            $default = stream_context_get_options(stream_context_get_default());\n+            stream_context_get_default(\n+                array('http' => array(\n+                    'method' => 'HEAD',\n+                    'header' => 'Accept: application/xrds+xml, */*',\n+                    'ignore_errors' => true,\n+                ))\n+            );\n+\n+            $url = $url . ($params ? '?' . $params : '');\n+            $headers_tmp = get_headers ($url);\n+            if(!$headers_tmp) {\n+                return array();\n+            }\n+\n+            # Parsing headers.\n+            $headers = array();\n+            foreach($headers_tmp as $header) {\n+                $pos = strpos($header,':');\n+                $name = strtolower(trim(substr($header, 0, $pos)));\n+                $headers[$name] = trim(substr($header, $pos+1));\n+\n+                # Following possible redirections. The point is just to have\n+                # claimed_id change with them, because get_headers() will\n+                # follow redirections automatically.\n+                # We ignore redirections with relative paths.\n+                # If any known provider uses them, file a bug report.\n+                if($name == 'location') {\n+                    if(strpos($headers[$name], 'http') === 0) {\n+                        $this->identity = $this->claimed_id = $headers[$name];\n+                    } elseif($headers[$name][0] == '/') {\n+                        $parsed_url = parse_url($this->claimed_id);\n+                        $this->identity =\n+                        $this->claimed_id = $parsed_url['scheme'] . '://'\n+                                          . $parsed_url['host']\n+                                          . $headers[$name];\n+                    }\n+                }\n+            }\n+\n+            # And restore them.\n+            stream_context_get_default($default);\n+            return $headers;\n+        }\n+\n+        if($this->verify_peer) {\n+            $opts += array('ssl' => array(\n+                'verify_peer' => true,\n+                'capath'      => $this->capath,\n+                'cafile'      => $this->cainfo,\n+            ));\n+        }\n+\n+        $context = stream_context_create ($opts);\n+\n+        return file_get_contents($url, false, $context);\n+    }\n+\n+    protected function request($url, $method='GET', $params=array())\n+    {\n+        if(function_exists('curl_init') && !ini_get('safe_mode') && !ini_get('open_basedir')) {\n+            return $this->request_curl($url, $method, $params);\n+        }\n+        return $this->request_streams($url, $method, $params);\n+    }\n+\n+    protected function build_url($url, $parts)\n+    {\n+        if (isset($url['query'], $parts['query'])) {\n+            $parts['query'] = $url['query'] . '&' . $parts['query'];\n+        }\n+\n+        $url = $parts + $url;\n+        $url = $url['scheme'] . '://'\n+             . (empty($url['username'])?''\n+                 :(empty($url['password'])? \"{$url['username']}@\"\n+                 :\"{$url['username']}:{$url['password']}@\"))\n+             . $url['host']\n+             . (empty($url['port'])?'':\":{$url['port']}\")\n+             . (empty($url['path'])?'':$url['path'])\n+             . (empty($url['query'])?'':\"?{$url['query']}\")\n+             . (empty($url['fragment'])?'':\"#{$url['fragment']}\");\n+        return $url;\n+    }\n+\n+    /**\n+     * Helper function used to scan for <meta>/<link> tags and extract information\n+     * from them\n+     */\n+    protected function htmlTag($content, $tag, $attrName, $attrValue, $valueName)\n+    {\n+        preg_match_all(\"#<{$tag}[^>]*$attrName=['\\\"].*?$attrValue.*?['\\\"][^>]*$valueName=['\\\"](.+?)['\\\"][^>]*/?>#i\", $content, $matches1);\n+        preg_match_all(\"#<{$tag}[^>]*$valueName=['\\\"](.+?)['\\\"][^>]*$attrName=['\\\"].*?$attrValue.*?['\\\"][^>]*/?>#i\", $content, $matches2);\n+\n+        $result = array_merge($matches1[1], $matches2[1]);\n+        return empty($result)?false:$result[0];\n+    }\n+\n+    /**\n+     * Performs Yadis and HTML discovery. Normally not used.\n+     * @param $url Identity URL.\n+     * @return String OP Endpoint (i.e. OpenID provider address).\n+     * @throws ErrorException\n+     */\n+    function discover($url)\n+    {\n+        if (!$url) throw new ErrorException('No identity supplied.');\n+        # Use xri.net proxy to resolve i-name identities\n+        if (!preg_match('#^https?:#', $url)) {\n+            $url = \"https://xri.net/$url\";\n+        }\n+\n+        # We save the original url in case of Yadis discovery failure.\n+        # It can happen when we'll be lead to an XRDS document\n+        # which does not have any OpenID2 services.\n+        $originalUrl = $url;\n+\n+        # A flag to disable yadis discovery in case of failure in headers.\n+        $yadis = true;\n+\n+        # We'll jump a maximum of 5 times, to avoid endless redirections.\n+        for ($i = 0; $i < 5; $i ++) {\n+            if ($yadis) {\n+                $headers = $this->request($url, 'HEAD');\n+\n+                $next = false;\n+                if (isset($headers['x-xrds-location'])) {\n+                    $url = $this->build_url(parse_url($url), parse_url(trim($headers['x-xrds-location'])));\n+                    $next = true;\n+                }\n+\n+                if (isset($headers['content-type'])\n+                    && (strpos($headers['content-type'], 'application/xrds+xml') !== false\n+                        || strpos($headers['content-type'], 'text/xml') !== false)\n+                ) {\n+                    # Apparently, some providers return XRDS documents as text/html.\n+                    # While it is against the spec, allowing this here shouldn't break\n+                    # compatibility with anything.\n+                    # ---\n+                    # Found an XRDS document, now let's find the server, and optionally delegate.\n+                    $content = $this->request($url, 'GET');\n+\n+                    preg_match_all('#<Service.*?>(.*?)</Service>#s', $content, $m);\n+                    foreach($m[1] as $content) {\n+                        $content = ' ' . $content; # The space is added, so that strpos doesn't return 0.\n+\n+                        # OpenID 2\n+                        $ns = preg_quote('http://specs.openid.net/auth/2.0/');\n+                        if(preg_match('#<Type>\\s*'.$ns.'(server|signon)\\s*</Type>#s', $content, $type)) {\n+                            if ($type[1] == 'server') $this->identifier_select = true;\n+\n+                            preg_match('#<URI.*?>(.*)</URI>#', $content, $server);\n+                            preg_match('#<(Local|Canonical)ID>(.*)</\\1ID>#', $content, $delegate);\n+                            if (empty($server)) {\n+                                return false;\n+                            }\n+                            # Does the server advertise support for either AX or SREG?\n+                            $this->ax   = (bool) strpos($content, '<Type>http://openid.net/srv/ax/1.0</Type>');\n+                            $this->sreg = strpos($content, '<Type>http://openid.net/sreg/1.0</Type>')\n+                                       || strpos($content, '<Type>http://openid.net/extensions/sreg/1.1</Type>');\n+\n+                            $server = $server[1];\n+                            if (isset($delegate[2])) $this->identity = trim($delegate[2]);\n+                            $this->version = 2;\n+\n+                            $this->server = $server;\n+                            return $server;\n+                        }\n+\n+                        # OpenID 1.1\n+                        $ns = preg_quote('http://openid.net/signon/1.1');\n+                        if (preg_match('#<Type>\\s*'.$ns.'\\s*</Type>#s', $content)) {\n+\n+                            preg_match('#<URI.*?>(.*)</URI>#', $content, $server);\n+                            preg_match('#<.*?Delegate>(.*)</.*?Delegate>#', $content, $delegate);\n+                            if (empty($server)) {\n+                                return false;\n+                            }\n+                            # AX can be used only with OpenID 2.0, so checking only SREG\n+                            $this->sreg = strpos($content, '<Type>http://openid.net/sreg/1.0</Type>')\n+                                       || strpos($content, '<Type>http://openid.net/extensions/sreg/1.1</Type>');\n+\n+                            $server = $server[1];\n+                            if (isset($delegate[1])) $this->identity = $delegate[1];\n+                            $this->version = 1;\n+\n+                            $this->server = $server;\n+                            return $server;\n+                        }\n+                    }\n+\n+                    $next = true;\n+                    $yadis = false;\n+                    $url = $originalUrl;\n+                    $content = null;\n+                    break;\n+                }\n+                if ($next) continue;\n+\n+                # There are no relevant information in headers, so we search the body.\n+                $content = $this->request($url, 'GET');\n+                $location = $this->htmlTag($content, 'meta', 'http-equiv', 'X-XRDS-Location', 'content');\n+                if ($location) {\n+                    $url = $this->build_url(parse_url($url), parse_url($location));\n+                    continue;\n+                }\n+            }\n+\n+            if (!$content) $content = $this->request($url, 'GET');\n+\n+            # At this point, the YADIS Discovery has failed, so we'll switch\n+            # to openid2 HTML discovery, then fallback to openid 1.1 discovery.\n+            $server   = $this->htmlTag($content, 'link', 'rel', 'openid2.provider', 'href');\n+            $delegate = $this->htmlTag($content, 'link', 'rel', 'openid2.local_id', 'href');\n+            $this->version = 2;\n+\n+            if (!$server) {\n+                # The same with openid 1.1\n+                $server   = $this->htmlTag($content, 'link', 'rel', 'openid.server', 'href');\n+                $delegate = $this->htmlTag($content, 'link', 'rel', 'openid.delegate', 'href');\n+                $this->version = 1;\n+            }\n+\n+            if ($server) {\n+                # We found an OpenID2 OP Endpoint\n+                if ($delegate) {\n+                    # We have also found an OP-Local ID.\n+                    $this->identity = $delegate;\n+                }\n+                $this->server = $server;\n+                return $server;\n+            }\n+\n+            throw new ErrorException('No servers found!');\n+        }\n+        throw new ErrorException('Endless redirection!');\n+    }\n+\n+    protected function sregParams()\n+    {\n+        $params = array();\n+        # We always use SREG 1.1, even if the server is advertising only support for 1.0.\n+        # That's because it's fully backwards compatibile with 1.0, and some providers\n+        # advertise 1.0 even if they accept only 1.1. One such provider is myopenid.com\n+        $params['openid.ns.sreg'] = 'http://openid.net/extensions/sreg/1.1';\n+        if ($this->required) {\n+            $params['openid.sreg.required'] = array();\n+            foreach ($this->required as $required) {\n+                if (!isset(self::$ax_to_sreg[$required])) continue;\n+                $params['openid.sreg.required'][] = self::$ax_to_sreg[$required];\n+            }\n+            $params['openid.sreg.required'] = implode(',', $params['openid.sreg.required']);\n+        }\n+\n+        if ($this->optional) {\n+            $params['openid.sreg.optional'] = array();\n+            foreach ($this->optional as $optional) {\n+                if (!isset(self::$ax_to_sreg[$optional])) continue;\n+                $params['openid.sreg.optional'][] = self::$ax_to_sreg[$optional];\n+            }\n+            $params['openid.sreg.optional'] = implode(',', $params['openid.sreg.optional']);\n+        }\n+        return $params;\n+    }\n+\n+    protected function axParams()\n+    {\n+        $params = array();\n+        if ($this->required || $this->optional) {\n+            $params['openid.ns.ax'] = 'http://openid.net/srv/ax/1.0';\n+            $params['openid.ax.mode'] = 'fetch_request';\n+            $this->aliases  = array();\n+            $counts   = array();\n+            $required = array();\n+            $optional = array();\n+            foreach (array('required','optional') as $type) {\n+                foreach ($this->$type as $alias => $field) {\n+                    if (is_int($alias)) $alias = strtr($field, '/', '_');\n+                    $this->aliases[$alias] = 'http://axschema.org/' . $field;\n+                    if (empty($counts[$alias])) $counts[$alias] = 0;\n+                    $counts[$alias] += 1;\n+                    ${$type}[] = $alias;\n+                }\n+            }\n+            foreach ($this->aliases as $alias => $ns) {\n+                $params['openid.ax.type.' . $alias] = $ns;\n+            }\n+            foreach ($counts as $alias => $count) {\n+                if ($count == 1) continue;\n+                $params['openid.ax.count.' . $alias] = $count;\n+            }\n+\n+            # Don't send empty ax.requied and ax.if_available.\n+            # Google and possibly other providers refuse to support ax when one of these is empty.\n+            if($required) {\n+                $params['openid.ax.required'] = implode(',', $required);\n+            }\n+            if($optional) {\n+                $params['openid.ax.if_available'] = implode(',', $optional);\n+            }\n+        }\n+        return $params;\n+    }\n+\n+    protected function authUrl_v1($immediate)\n+    {\n+\t$returnUrl = $this->returnUrl;\n+        # If we have an openid.delegate that is different from our claimed id,\n+        # we need to somehow preserve the claimed id between requests.\n+        # The simplest way is to just send it along with the return_to url.\n+        if($this->identity != $this->claimed_id) {\n+            $returnUrl .= (strpos($returnUrl, '?') ? '&' : '?') . 'openid.claimed_id=' . $this->claimed_id;\n+        }\n+\n+        $params = array(\n+            'openid.return_to'  => $returnUrl,\n+            'openid.mode'       => $immediate ? 'checkid_immediate' : 'checkid_setup',\n+            'openid.identity'   => $this->identity,\n+            'openid.trust_root' => $this->trustRoot,\n+            ) + $this->sregParams();\n+\n+        return $this->build_url(parse_url($this->server)\n+                               , array('query' => http_build_query($params, '', '&')));\n+    }\n+\n+    protected function authUrl_v2($immediate)\n+    {\n+        $params = array(\n+            'openid.ns'          => 'http://specs.openid.net/auth/2.0',\n+            'openid.mode'        => $immediate ? 'checkid_immediate' : 'checkid_setup',\n+            'openid.return_to'   => $this->returnUrl,\n+            'openid.realm'       => $this->trustRoot,\n+        );\n+        if ($this->ax) {\n+            $params += $this->axParams();\n+        }\n+        if ($this->sreg) {\n+            $params += $this->sregParams();\n+        }\n+        if (!$this->ax && !$this->sreg) {\n+            # If OP doesn't advertise either SREG, nor AX, let's send them both\n+            # in worst case we don't get anything in return.\n+            $params += $this->axParams() + $this->sregParams();\n+        }\n+\n+        if ($this->identifier_select) {\n+            $params['openid.identity'] = $params['openid.claimed_id']\n+                 = 'http://specs.openid.net/auth/2.0/identifier_select';\n+        } else {\n+            $params['openid.identity'] = $this->identity;\n+            $params['openid.claimed_id'] = $this->claimed_id;\n+        }\n+\n+        return $this->build_url(parse_url($this->server)\n+                               , array('query' => http_build_query($params, '', '&')));\n+    }\n+\n+    /**\n+     * Returns authentication url. Usually, you want to redirect your user to it.\n+     * @return String The authentication url.\n+     * @param String $select_identifier Whether to request OP to select identity for an user in OpenID 2. Does not affect OpenID 1.\n+     * @throws ErrorException\n+     */\n+    function authUrl($immediate = false)\n+    {\n+        if ($this->setup_url && !$immediate) return $this->setup_url;\n+        if (!$this->server) $this->discover($this->identity);\n+\n+        if ($this->version == 2) {\n+            return $this->authUrl_v2($immediate);\n+        }\n+        return $this->authUrl_v1($immediate);\n+    }\n+\n+    /**\n+     * Performs OpenID verification with the OP.\n+     * @return Bool Whether the verification was successful.\n+     * @throws ErrorException\n+     */\n+    function validate()\n+    {\n+        # If the request was using immediate mode, a failure may be reported\n+        # by presenting user_setup_url (for 1.1) or reporting\n+        # mode 'setup_needed' (for 2.0). Also catching all modes other than\n+        # id_res, in order to avoid throwing errors.\n+        if(isset($this->data['openid_user_setup_url'])) {\n+            $this->setup_url = $this->data['openid_user_setup_url'];\n+            return false;\n+        }\n+        if($this->mode != 'id_res') {\n+            return false;\n+        }\n+\n+        $this->claimed_id = isset($this->data['openid_claimed_id'])?$this->data['openid_claimed_id']:$this->data['openid_identity'];\n+        $params = array(\n+            'openid.assoc_handle' => $this->data['openid_assoc_handle'],\n+            'openid.signed'       => $this->data['openid_signed'],\n+            'openid.sig'          => $this->data['openid_sig'],\n+            );\n+\n+        if (isset($this->data['openid_ns'])) {\n+            # We're dealing with an OpenID 2.0 server, so let's set an ns\n+            # Even though we should know location of the endpoint,\n+            # we still need to verify it by discovery, so $server is not set here\n+            $params['openid.ns'] = 'http://specs.openid.net/auth/2.0';\n+        } elseif (isset($this->data['openid_claimed_id'])\n+            && $this->data['openid_claimed_id'] != $this->data['openid_identity']\n+        ) {\n+            # If it's an OpenID 1 provider, and we've got claimed_id,\n+            # we have to append it to the returnUrl, like authUrl_v1 does.\n+            $this->returnUrl .= (strpos($this->returnUrl, '?') ? '&' : '?')\n+                             .  'openid.claimed_id=' . $this->claimed_id;\n+        }\n+\n+        if ($this->data['openid_return_to'] != $this->returnUrl) {\n+            # The return_to url must match the url of current request.\n+            # I'm assuing that noone will set the returnUrl to something that doesn't make sense.\n+            return false;\n+        }\n+\n+        $server = $this->discover($this->claimed_id);\n+\n+        foreach (explode(',', $this->data['openid_signed']) as $item) {\n+            # Checking whether magic_quotes_gpc is turned on, because\n+            # the function may fail if it is. For example, when fetching\n+            # AX namePerson, it might containg an apostrophe, which will be escaped.\n+            # In such case, validation would fail, since we'd send different data than OP\n+            # wants to verify. stripslashes() should solve that problem, but we can't\n+            # use it when magic_quotes is off.\n+            $value = $this->data['openid_' . str_replace('.','_',$item)];\n+            $params['openid.' . $item] = get_magic_quotes_gpc() ? stripslashes($value) : $value;\n+\n+        }\n+\n+        $params['openid.mode'] = 'check_authentication';\n+\n+        $response = $this->request($server, 'POST', $params);\n+\n+        return preg_match('/is_valid\\s*:\\s*true/i', $response);\n+    }\n+\n+    protected function getAxAttributes()\n+    {\n+        $alias = null;\n+        if (isset($this->data['openid_ns_ax'])\n+            && $this->data['openid_ns_ax'] != 'http://openid.net/srv/ax/1.0'\n+        ) { # It's the most likely case, so we'll check it before\n+            $alias = 'ax';\n+        } else {\n+            # 'ax' prefix is either undefined, or points to another extension,\n+            # so we search for another prefix\n+            foreach ($this->data as $key => $val) {\n+                if (substr($key, 0, strlen('openid_ns_')) == 'openid_ns_'\n+                    && $val == 'http://openid.net/srv/ax/1.0'\n+                ) {\n+                    $alias = substr($key, strlen('openid_ns_'));\n+                    break;\n+                }\n+            }\n+        }\n+        if (!$alias) {\n+            # An alias for AX schema has not been found,\n+            # so there is no AX data in the OP's response\n+            return array();\n+        }\n+\n+        $attributes = array();\n+        foreach ($this->data as $key => $value) {\n+            $keyMatch = 'openid_' . $alias . '_value_';\n+            if (substr($key, 0, strlen($keyMatch)) != $keyMatch) {\n+                continue;\n+            }\n+            $key = substr($key, strlen($keyMatch));\n+            if (!isset($this->data['openid_' . $alias . '_type_' . $key])) {\n+                # OP is breaking the spec by returning a field without\n+                # associated ns. This shouldn't happen, but it's better\n+                # to check, than cause an E_NOTICE.\n+                continue;\n+            }\n+            $key = substr($this->data['openid_' . $alias . '_type_' . $key],\n+                          strlen('http://axschema.org/'));\n+            $attributes[$key] = $value;\n+        }\n+        return $attributes;\n+    }\n+\n+    protected function getSregAttributes()\n+    {\n+        $attributes = array();\n+        $sreg_to_ax = array_flip(self::$ax_to_sreg);\n+        foreach ($this->data as $key => $value) {\n+            $keyMatch = 'openid_sreg_';\n+            if (substr($key, 0, strlen($keyMatch)) != $keyMatch) {\n+                continue;\n+            }\n+            $key = substr($key, strlen($keyMatch));\n+            if (!isset($sreg_to_ax[$key])) {\n+                # The field name isn't part of the SREG spec, so we ignore it.\n+                continue;\n+            }\n+            $attributes[$sreg_to_ax[$key]] = $value;\n+        }\n+        return $attributes;\n+    }\n+\n+    /**\n+     * Gets AX/SREG attributes provided by OP. should be used only after successful validaton.\n+     * Note that it does not guarantee that any of the required/optional parameters will be present,\n+     * or that there will be no other attributes besides those specified.\n+     * In other words. OP may provide whatever information it wants to.\n+     *     * SREG names will be mapped to AX names.\n+     *     * @return Array Array of attributes with keys being the AX schema names, e.g. 'contact/email'\n+     * @see http://www.axschema.org/types/\n+     */\n+    function getAttributes()\n+    {\n+        if (isset($this->data['openid_ns'])\n+            && $this->data['openid_ns'] == 'http://specs.openid.net/auth/2.0'\n+        ) { # OpenID 2.0\n+            # We search for both AX and SREG attributes, with AX taking precedence.\n+            return $this->getAxAttributes() + $this->getSregAttributes();\n+        }\n+        return $this->getSregAttributes();\n+    }\n+}"
      },
      {
        "sha": "a4b40d9a207ee99ae7ad0c8526c52a8f875ba1f9",
        "filename": "contrib/ns/site/util.php",
        "status": "added",
        "additions": 74,
        "deletions": 0,
        "changes": 74,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/699e4da932615d18ce26217a6e7f1451d8677e05/contrib/ns/site/util.php",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/699e4da932615d18ce26217a6e7f1451d8677e05/contrib/ns/site/util.php",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/ns/site/util.php?ref=699e4da932615d18ce26217a6e7f1451d8677e05",
        "patch": "@@ -0,0 +1,74 @@\n+<?php\n+\n+class Problem extends Exception\n+{\n+    # PHP sucks!\n+    public function __construct($title, $message)\n+    {\n+        parent::__construct($message);\n+        $this->title = $title;\n+    }\n+\n+    public function getTitle()\n+    {\n+        return $this->title;\n+    }\n+}\n+class Error extends Problem\n+{\n+}\n+\n+function do_query($query)\n+{\n+    $result = mysql_query($query) or die(mysql_error());\n+    return $result;\n+}\n+function get_row($result)\n+{\n+    $row = mysql_fetch_array($result, MYSQL_ASSOC);\n+    if (!$row)\n+        throw new Error('Ooops!', \"Seems there's a missing value here.\");\n+    return $row;\n+}\n+\n+function has_results($result)\n+{\n+    if (mysql_num_rows($result) > 0)\n+        return true;\n+    else\n+        return false;\n+}\n+\n+function escapestr($str)\n+{\n+    return mysql_real_escape_string(strip_tags(htmlspecialchars($str)));\n+}\n+\n+function cleanup_string($val)\n+{\n+    $val = preg_replace('/[^A-Za-z0-9 .]/', '', $val);\n+    return mysql_real_escape_string($val);\n+}\n+\n+function user_id()\n+{\n+    if (!isset($_SESSION['uid'])) {\n+        # grave error. should never happen and should be reported as urgent breach.\n+        throw new Error('Login 404', \"You're not logged in. Proceed to the <a href='login.php'>login</a> form.\");\n+    }\n+    return cleanup_string($_SESSION['uid']);\n+}\n+\n+function post($key)\n+{\n+    if (!isset($_POST[$key]))\n+        throw new Error('Ooops!', \"Missing posted value $key!\");\n+    return cleanup_string($_POST[$key]);\n+}\n+function get($key)\n+{\n+    if (!isset($_GET[$key]))\n+        throw new Error('Ooops!', \"Missing get value $key!\");\n+    return cleanup_string($_GET[$key]);\n+}\n+"
      }
    ]
  },
  {
    "sha": "a48ffbbed71189e2279fa73b032effca29eb7215",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNDhmZmJiZWQ3MTE4OWUyMjc5ZmE3M2IwMzJlZmZjYTI5ZWI3MjE1",
    "commit": {
      "author": {
        "name": "genjix",
        "email": "fake@lol.u",
        "date": "2011-04-16T18:11:22Z"
      },
      "committer": {
        "name": "genjix",
        "email": "fake@lol.u",
        "date": "2011-04-16T18:11:22Z"
      },
      "message": "last commit.",
      "tree": {
        "sha": "e33fb61beac04c1eba10ab24361af8063f62088a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e33fb61beac04c1eba10ab24361af8063f62088a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a48ffbbed71189e2279fa73b032effca29eb7215",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a48ffbbed71189e2279fa73b032effca29eb7215",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a48ffbbed71189e2279fa73b032effca29eb7215",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a48ffbbed71189e2279fa73b032effca29eb7215/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "699e4da932615d18ce26217a6e7f1451d8677e05",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/699e4da932615d18ce26217a6e7f1451d8677e05",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/699e4da932615d18ce26217a6e7f1451d8677e05"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "491373ed383d05d32d29dbc741f23d1f58e44680",
        "filename": "rpc.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a48ffbbed71189e2279fa73b032effca29eb7215/rpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a48ffbbed71189e2279fa73b032effca29eb7215/rpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/rpc.cpp?ref=a48ffbbed71189e2279fa73b032effca29eb7215",
        "patch": "@@ -491,7 +491,7 @@ const Object CheckMaybeThrow(const string& strJsonIn)\n     // Now check for a key called \"error\"\n     const Value& error  = find_value(request, \"error\");\n     // It's an error JSON! so propagate the error.\n-    if (error.type() != null_type)          \n+    if (error.type() != null_type)   \n         throw JSONRPCError(-4, error.get_str());\n     // Return JSON object\n     return request;"
      }
    ]
  },
  {
    "sha": "792268e7cfd9f99bdbcae1cc5c989e1c8e841492",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3OTIyNjhlN2NmZDlmOTliZGJjYWUxY2M1Yzk4OWUxYzhlODQxNDky",
    "commit": {
      "author": {
        "name": "genjix",
        "email": "fake@lol.u",
        "date": "2011-04-16T18:14:25Z"
      },
      "committer": {
        "name": "genjix",
        "email": "fake@lol.u",
        "date": "2011-04-16T18:14:25Z"
      },
      "message": "updated new site.",
      "tree": {
        "sha": "59d467747019f9ca99c114225d5020ba4e6816e8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/59d467747019f9ca99c114225d5020ba4e6816e8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/792268e7cfd9f99bdbcae1cc5c989e1c8e841492",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/792268e7cfd9f99bdbcae1cc5c989e1c8e841492",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/792268e7cfd9f99bdbcae1cc5c989e1c8e841492",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/792268e7cfd9f99bdbcae1cc5c989e1c8e841492/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "a48ffbbed71189e2279fa73b032effca29eb7215",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a48ffbbed71189e2279fa73b032effca29eb7215",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a48ffbbed71189e2279fa73b032effca29eb7215"
      }
    ],
    "stats": {
      "total": 397,
      "additions": 303,
      "deletions": 94
    },
    "files": [
      {
        "sha": "6ff85206f10f21c454d611c5bf2beae2f50f4f6c",
        "filename": "contrib/ns/DATABASE",
        "status": "modified",
        "additions": 60,
        "deletions": 1,
        "changes": 61,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/792268e7cfd9f99bdbcae1cc5c989e1c8e841492/contrib/ns/DATABASE",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/792268e7cfd9f99bdbcae1cc5c989e1c8e841492/contrib/ns/DATABASE",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/ns/DATABASE?ref=792268e7cfd9f99bdbcae1cc5c989e1c8e841492",
        "patch": "@@ -1 +1,60 @@\n-CREATE TABLE lookup(nickname VARCHAR(100) NOT NULL, PRIMARY KEY(nickname), passhash VARCHAR(128) NOT NULL, address VARCHAR(44) NOT NULL);\n+-- MySQL dump 10.13  Distrib 5.1.49, for debian-linux-gnu (i686)\n+--\n+-- Host: localhost    Database: bitnom\n+-- ------------------------------------------------------\n+-- Server version\t5.1.49-1ubuntu8.1\n+\n+/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;\n+/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;\n+/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;\n+/*!40101 SET NAMES utf8 */;\n+/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;\n+/*!40103 SET TIME_ZONE='+00:00' */;\n+/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;\n+/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;\n+/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;\n+/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;\n+\n+--\n+-- Table structure for table `nicknames`\n+--\n+\n+DROP TABLE IF EXISTS `nicknames`;\n+/*!40101 SET @saved_cs_client     = @@character_set_client */;\n+/*!40101 SET character_set_client = utf8 */;\n+CREATE TABLE `nicknames` (\n+  `nickid` int(10) unsigned NOT NULL AUTO_INCREMENT,\n+  `nickname` varchar(100) NOT NULL,\n+  `addr` varchar(44) DEFAULT NULL,\n+  `uid` int(10) unsigned NOT NULL,\n+  `timest` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n+  PRIMARY KEY (`nickid`)\n+) ENGINE=MyISAM AUTO_INCREMENT=12 DEFAULT CHARSET=latin1;\n+/*!40101 SET character_set_client = @saved_cs_client */;\n+\n+--\n+-- Table structure for table `users`\n+--\n+\n+DROP TABLE IF EXISTS `users`;\n+/*!40101 SET @saved_cs_client     = @@character_set_client */;\n+/*!40101 SET character_set_client = utf8 */;\n+CREATE TABLE `users` (\n+  `uid` int(10) unsigned NOT NULL AUTO_INCREMENT,\n+  `oidlogin` varchar(100) NOT NULL,\n+  `pubkey` varchar(500) DEFAULT NULL,\n+  `timest` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,\n+  PRIMARY KEY (`uid`)\n+) ENGINE=MyISAM AUTO_INCREMENT=5 DEFAULT CHARSET=latin1;\n+/*!40101 SET character_set_client = @saved_cs_client */;\n+/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;\n+\n+/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;\n+/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;\n+/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;\n+/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;\n+/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;\n+/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;\n+/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;\n+\n+-- Dump completed on 2011-04-16 19:10:38"
      },
      {
        "sha": "d6fe68498ca63c23a9090b70dda5df4e669c2038",
        "filename": "contrib/ns/errors.php",
        "status": "added",
        "additions": 57,
        "deletions": 0,
        "changes": 57,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/792268e7cfd9f99bdbcae1cc5c989e1c8e841492/contrib/ns/errors.php",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/792268e7cfd9f99bdbcae1cc5c989e1c8e841492/contrib/ns/errors.php",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/ns/errors.php?ref=792268e7cfd9f99bdbcae1cc5c989e1c8e841492",
        "patch": "@@ -0,0 +1,57 @@\n+<?php\n+\n+const MISSING_POST_VALUE = 0;\n+const SQL_FAILURE = 1;\n+const RECORD_NOT_FOUND = 404;\n+const NO_PUBKEY = 2;\n+const BAD_SIGNATURE = 3;\n+const INTERNAL_ERROR = 4;\n+const NO_ADDR_SET = 5;\n+\n+function error_json($errcode, $params=array())\n+{\n+    $json = array('errcode' => $errcode);\n+    switch ($errcode) {\n+        case MISSING_POST_VALUE:\n+            $json['error'] = 'Missing POST value.';\n+            break;\n+\n+        case SQL_FAILURE:\n+            $json['error'] = 'SQL query failed.';\n+            break;\n+\n+        case RECORD_NOT_FOUND:\n+            $json['error'] = 'Record not found.';\n+            break;\n+\n+        case NO_PUBKEY:\n+            $json['error'] = 'Public key does not exist.';\n+            break;\n+\n+        case BAD_SIGNATURE:\n+            $json['error'] = 'Bad signature.';\n+            break;\n+\n+        case INTERNAL_ERROR:\n+            $json['error'] = 'Internal error occurred.';\n+            break;\n+\n+        case NO_ADDR_SET:\n+            $json['error'] = 'Internal error occurred.';\n+            break;\n+\n+        default:\n+            $json['error'] = 'Unknown error code.';\n+            break;\n+    }\n+    return json_encode($json);\n+}\n+\n+class ErrorJson extends Exception\n+{\n+    public function __construct($errcode, $params=array())\n+    {\n+        parent::__construct(error_json($errcode, $params));\n+    }\n+}\n+"
      },
      {
        "sha": "441421458fe8c4de32798b24c0448ca77b4d6d7f",
        "filename": "contrib/ns/getaddress/index.php",
        "status": "modified",
        "additions": 24,
        "deletions": 20,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/792268e7cfd9f99bdbcae1cc5c989e1c8e841492/contrib/ns/getaddress/index.php",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/792268e7cfd9f99bdbcae1cc5c989e1c8e841492/contrib/ns/getaddress/index.php",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/ns/getaddress/index.php?ref=792268e7cfd9f99bdbcae1cc5c989e1c8e841492",
        "patch": "@@ -1,24 +1,28 @@\n <?php\n-if (!isset($_REQUEST['nickname'])) {\n-    die('{\"error\": \"No nickname received.\"}');\n-}\n-else {\n-    require '../db.php';\n-    # nicknames are case insensitive to limit impersonation attacks\n-    $nickname = strtolower(escapestr($_REQUEST['nickname']));\n+require '../util.php';\n+require '../errors.php';\n+\n+try {\n+    $nickname = geten('nickname');\n+    $query = \"\n+        SELECT\n+            addr\n+        FROM\n+            nicknames\n+        WHERE\n+            nickname='$nickname'\n+        \";\n+    $result = do_queryn($query);\n+    if (!has_results($result))\n+        throw new ErrorJson(RECORD_NOT_FOUND);\n+    $row = mysql_fetch_assoc($result);\n+    if (!isset($row['addr']))\n+        throw new ErrorJson(NO_ADDR_SET);\n \n-    $query = \"SELECT address FROM lookup WHERE nickname='$nickname';\";\n-    $result = do_query($query);\n-    if (has_results($result)) {\n-        $row = mysql_fetch_array($result);\n-        if (!isset($row['address']))\n-            die('{\"error\": \"Internal error.\"}');\n-        $address = $row['address'];\n-        echo '{\"address\": \"'.$address.'\"}';\n-    }\n-    else {\n-        die('{\"error\": \"No such nickname exists.\"}');\n-    }\n+    $json = array('address' => $row['addr']);\n+    echo json_encode($json);\n+}\n+catch (ErrorJson $e) {\n+    echo $e->getMessage();\n }\n-?>\n "
      },
      {
        "sha": "457cf0f3137d1fa722cfee3a6e877902d9dc9398",
        "filename": "contrib/ns/setaddress/index.php",
        "status": "modified",
        "additions": 60,
        "deletions": 33,
        "changes": 93,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/792268e7cfd9f99bdbcae1cc5c989e1c8e841492/contrib/ns/setaddress/index.php",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/792268e7cfd9f99bdbcae1cc5c989e1c8e841492/contrib/ns/setaddress/index.php",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/ns/setaddress/index.php?ref=792268e7cfd9f99bdbcae1cc5c989e1c8e841492",
        "patch": "@@ -1,40 +1,67 @@\n <?php\n-if (!isset($_POST['nickname'])) {\n-    die('{\"error\": \"No nickname received.\"}');\n-}\n-else if (!isset($_POST['password'])) {\n-    die('{\"error\": \"No password received.\"}');\n-}\n-else if (!isset($_POST['address'])) {\n-    die('{\"error\": \"No address received\"}');\n-}\n-else {\n-    require '../db.php';\n-    # nicknames are case insensitive to limit impersonation attacks\n-    $nickname = strtolower(escapestr($_POST['nickname']));\n-    $address = $_POST['address'];\n-    # bitcoin address can only be alphanumeric so no need to strip them...\n-    $address = preg_replace(\"/[^a-zA-Z0-9]/\", \"\", $address);\n-    $passhash = hash('sha512', $_POST['password']);\n+require '../util.php';\n+require '../errors.php';\n+\n+try {\n+    $nickname = posten('nickname');\n+    $signature = posten('signature');\n+    $timestamp = posten('timestamp');\n+    $address = posten('address');\n+\n+    $signature = base64_decode($signature);\n+    $data = $nickname . $address . $timestamp;\n \n-    $query = \"SELECT passhash FROM lookup WHERE nickname='$nickname';\";\n-    $result = do_query($query);\n-    if (has_results($result)) {\n-        $row = mysql_fetch_array($result);\n-        if (isset($row['passhash']) && $passhash == $row['passhash']) {\n-            $query = \"UPDATE lookup SET address='$address' WHERE nickname='$nickname' AND passhash='$passhash';\";\n-            do_query($query);\n-            echo '{\"status\": \"Address changed.\", \"address\": \"'.$address.'\"}';\n-        }\n-        else {\n-            die('{\"error\": \"Incorrect password.\"}');\n-        }\n+    $query = \"\n+        SELECT\n+            pubkey,\n+            users.uid AS uid\n+        FROM\n+            users\n+        JOIN\n+            nicknames\n+        ON\n+            nicknames.uid=users.uid\n+        WHERE\n+            nickname='$nickname'\n+        \";\n+    $result = do_queryn($query);\n+    if (!has_results($result))\n+        throw new ErrorJson(RECORD_NOT_FOUND);\n+    $row = get_rown($result);\n+    $pubkey = $row['pubkey'];\n+    $uid = $row['uid'];\n+    $pubkey = openssl_get_publickey($pubkey);\n+    if (!$pubkey)\n+        throw new ErrorJson(NO_PUBKEY);\n+\n+    $ok = openssl_verify($data, $signature, $pubkey, \"sha512\");\n+\n+    if ($ok == 1) {\n+        $query = \"\n+            UPDATE\n+                nicknames\n+            SET\n+                addr='$address'\n+            WHERE\n+                nickname='$nickname'\n+                AND uid='$uid'\n+            \";\n+        do_queryn($query);\n+        $json = array('status' => 'updated address');\n+        $json['new'] = $address;\n+        $json['timestamp'] = (int)$timestamp;\n+        echo json_encode($json);\n+    }\n+    else if ($ok == 0) {\n+        throw new ErrorJson(BAD_SIGNATURE);\n     }\n     else {\n-        $query = \"INSERT INTO lookup(nickname, passhash, address) VALUES ('$nickname', '$passhash', '$address');\";\n-        do_query($query);\n-        echo '{\"status\": \"New user created.\", \"address\": \"'.$address.'\"}';\n+        throw new ErrorJson(INTERNAL_ERROR);\n     }\n+\n+    openssl_free_key($pubkey);\n+}\n+catch (ErrorJson $e) {\n+    echo $e->getMessage();\n }\n-?>\n "
      },
      {
        "sha": "d6e5f5f307e16232bd0493542b4276e6551851c7",
        "filename": "contrib/ns/setnewpassword/index.php",
        "status": "removed",
        "additions": 0,
        "deletions": 37,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a48ffbbed71189e2279fa73b032effca29eb7215/contrib/ns/setnewpassword/index.php",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a48ffbbed71189e2279fa73b032effca29eb7215/contrib/ns/setnewpassword/index.php",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/ns/setnewpassword/index.php?ref=a48ffbbed71189e2279fa73b032effca29eb7215",
        "patch": "@@ -1,37 +0,0 @@\n-<?php\n-if (!isset($_POST['nickname'])) {\n-    die('{\"error\": \"No nickname received.\"}');\n-}\n-else if (!isset($_POST['password'])) {\n-    die('{\"error\": \"No password received.\"}');\n-}\n-else if (!isset($_POST['newpassword'])) {\n-    die('{\"error\": \"No new password received\"}');\n-}\n-else {\n-    require '../db.php';\n-    # nicknames are case insensitive to limit impersonation attacks\n-    $nickname = strtolower(escapestr($_POST['nickname']));\n-    $oldpasshash = hash('sha512', $_POST['password']);\n-    $newpasshash = hash('sha512', $_POST['newpassword']);\n-\n-    $query = \"SELECT passhash FROM lookup WHERE nickname='$nickname';\";\n-    $result = do_query($query);\n-    if (has_results($result)) {\n-        # found a user by that name\n-        $row = mysql_fetch_array($result);\n-        if (isset($row['passhash']) && $oldpasshash == $row['passhash']) {\n-            $query = \"UPDATE lookup SET passhash='$newpasshash' WHERE nickname='$nickname' AND passhash='$oldpasshash';\";\n-            do_query($query);\n-            echo '{\"status\": \"Password changed.\"}';\n-        }\n-        else {\n-            die('{\"error\": \"Incorrect password.\"}');\n-        }\n-    }\n-    else {\n-        die('{\"error\": \"No such nickname exists.\"}');\n-    }\n-}\n-?>\n-"
      },
      {
        "sha": "163219f691c64835da0707504f1e13539db8fa99",
        "filename": "contrib/ns/site/header.php",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/792268e7cfd9f99bdbcae1cc5c989e1c8e841492/contrib/ns/site/header.php",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/792268e7cfd9f99bdbcae1cc5c989e1c8e841492/contrib/ns/site/header.php",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/ns/site/header.php?ref=792268e7cfd9f99bdbcae1cc5c989e1c8e841492",
        "patch": "@@ -3,7 +3,6 @@\n error_reporting(E_ALL|E_STRICT);\n ini_set('display_errors', '1');\n session_start();\n-require '/var/db.bitnom.inc';\n \n function write_header()\n {"
      },
      {
        "sha": "5bdbf5509a9774c2db9ae5fe3e73172e41507402",
        "filename": "contrib/ns/site/index.php",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/792268e7cfd9f99bdbcae1cc5c989e1c8e841492/contrib/ns/site/index.php",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/792268e7cfd9f99bdbcae1cc5c989e1c8e841492/contrib/ns/site/index.php",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/ns/site/index.php?ref=792268e7cfd9f99bdbcae1cc5c989e1c8e841492",
        "patch": "@@ -1,5 +1,5 @@\n <?php\n-require 'util.php';\n+require '../util.php';\n require 'header.php';\n \n function add_nickname()"
      },
      {
        "sha": "84ea25a0a456c6dc0a10f640dfd6d00f9bd92e05",
        "filename": "contrib/ns/site/login.php",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/792268e7cfd9f99bdbcae1cc5c989e1c8e841492/contrib/ns/site/login.php",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/792268e7cfd9f99bdbcae1cc5c989e1c8e841492/contrib/ns/site/login.php",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/ns/site/login.php?ref=792268e7cfd9f99bdbcae1cc5c989e1c8e841492",
        "patch": "@@ -1,7 +1,7 @@\n <?php\n require 'openid.php';\n require 'header.php';\n-require 'util.php';\n+require '../util.php';\n \n try {\n     $openid = new LightOpenID;"
      },
      {
        "sha": "12f1f1f47892472793eed3ef84a48ca8d8df5436",
        "filename": "contrib/ns/util.php",
        "status": "added",
        "additions": 100,
        "deletions": 0,
        "changes": 100,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/792268e7cfd9f99bdbcae1cc5c989e1c8e841492/contrib/ns/util.php",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/792268e7cfd9f99bdbcae1cc5c989e1c8e841492/contrib/ns/util.php",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/ns/util.php?ref=792268e7cfd9f99bdbcae1cc5c989e1c8e841492",
        "patch": "@@ -0,0 +1,100 @@\n+<?php\n+require '/var/db.bitnom.inc';\n+\n+class Problem extends Exception\n+{\n+    # PHP sucks!\n+    public function __construct($title, $message)\n+    {\n+        parent::__construct($message);\n+        $this->title = $title;\n+    }\n+\n+    public function getTitle()\n+    {\n+        return $this->title;\n+    }\n+}\n+class Error extends Problem\n+{\n+}\n+\n+# -----------------------------------------------------\n+# These functions are for the API\n+# -----------------------------------------------------\n+function posten($key)\n+{\n+    if (!isset($_POST[$key]))\n+        throw new ErrorJson(MISSING_POST_VALUE);\n+    return escapestr($_POST[$key]);\n+}\n+function geten($key)\n+{\n+    if (!isset($_GET[$key]))\n+        throw new ErrorJson(MISSING_POST_VALUE);\n+    return escapestr($_GET[$key]);\n+}\n+\n+function do_queryn($query)\n+{\n+    if (!$result = mysql_query($query)) \n+        throw new ErrorJson(SQL_FAILURE, array('mysql_err' => mysql_error()));\n+    return $result;\n+}\n+function get_rown($result)\n+{\n+    $row = mysql_fetch_array($result, MYSQL_ASSOC);\n+    if (!$row)\n+        throw new ErrorJson(RECORD_NOT_FOUND);\n+    return $row;\n+}\n+\n+# -----------------------------------------------------\n+function do_query($query)\n+{\n+    $result = mysql_query($query) or die(mysql_error());\n+    return $result;\n+}\n+function get_row($result)\n+{\n+    $row = mysql_fetch_array($result, MYSQL_ASSOC);\n+    if (!$row)\n+        throw new Error('Ooops!', \"Seems there's a missing value here.\");\n+    return $row;\n+}\n+\n+function has_results($result)\n+{\n+    if (mysql_num_rows($result) > 0)\n+        return true;\n+    else\n+        return false;\n+}\n+\n+function escapestr($str)\n+{\n+    return mysql_real_escape_string(strip_tags(htmlspecialchars($str)));\n+}\n+\n+function user_id()\n+{\n+    if (!isset($_SESSION['uid'])) {\n+        # grave error. should never happen and should be reported as urgent breach.\n+        throw new Error('Login 404', \"You're not logged in. Proceed to the <a href='login.php'>login</a> form.\");\n+    }\n+    return escapestr($_SESSION['uid']);\n+}\n+\n+function post($key)\n+{\n+    if (!isset($_POST[$key]))\n+        throw new Error('Ooops!', \"Missing posted value $key!\");\n+    return escapestr($_POST[$key]);\n+}\n+function get($key)\n+{\n+    if (!isset($_GET[$key]))\n+        throw new Error('Ooops!', \"Missing get value $key!\");\n+    return escapestr($_POST[$key]);\n+}\n+"
      }
    ]
  },
  {
    "sha": "c391073ec30010c1d05e24a9f2c2498844b06bf1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjMzkxMDczZWMzMDAxMGMxZDA1ZTI0YTlmMmMyNDk4ODQ0YjA2YmYx",
    "commit": {
      "author": {
        "name": "genjix",
        "email": "fake@lol.u",
        "date": "2011-04-16T18:14:47Z"
      },
      "committer": {
        "name": "genjix",
        "email": "fake@lol.u",
        "date": "2011-04-16T18:14:47Z"
      },
      "message": "removed dangling files.",
      "tree": {
        "sha": "957486721475f86ad32708c6fe8618c78e8d49a7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/957486721475f86ad32708c6fe8618c78e8d49a7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c391073ec30010c1d05e24a9f2c2498844b06bf1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c391073ec30010c1d05e24a9f2c2498844b06bf1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c391073ec30010c1d05e24a9f2c2498844b06bf1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c391073ec30010c1d05e24a9f2c2498844b06bf1/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "792268e7cfd9f99bdbcae1cc5c989e1c8e841492",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/792268e7cfd9f99bdbcae1cc5c989e1c8e841492",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/792268e7cfd9f99bdbcae1cc5c989e1c8e841492"
      }
    ],
    "stats": {
      "total": 102,
      "additions": 0,
      "deletions": 102
    },
    "files": [
      {
        "sha": "15697d92edc2aaf606ed8238eb4193aabfc9797d",
        "filename": "contrib/ns/db.php",
        "status": "removed",
        "additions": 0,
        "deletions": 28,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/792268e7cfd9f99bdbcae1cc5c989e1c8e841492/contrib/ns/db.php",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/792268e7cfd9f99bdbcae1cc5c989e1c8e841492/contrib/ns/db.php",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/ns/db.php?ref=792268e7cfd9f99bdbcae1cc5c989e1c8e841492",
        "patch": "@@ -1,28 +0,0 @@\n-<?php\n-# File should contain these lines:\n-#   mysql_connect('localhost', 'login', 'oass') or die(mysql_error());\n-#   mysql_select_db('database_name') or die(mysql_error());\n-require '/var/db.bitnom.inc';\n-\n-function fail($error)\n-{\n-    die('{\"error\": \"'.$error.'\"}');\n-}\n-function escapestr($str)\n-{\n-    return mysql_real_escape_string($str);\n-}\n-function do_query($query)\n-{\n-    $result = mysql_query($query) or fail(mysql_error());\n-    return $result;\n-}\n-function has_results($result)\n-{\n-    if (mysql_num_rows($result) > 0)\n-        return true;\n-    else\n-        return false;\n-}\n-?>\n-"
      },
      {
        "sha": "a4b40d9a207ee99ae7ad0c8526c52a8f875ba1f9",
        "filename": "contrib/ns/site/util.php",
        "status": "removed",
        "additions": 0,
        "deletions": 74,
        "changes": 74,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/792268e7cfd9f99bdbcae1cc5c989e1c8e841492/contrib/ns/site/util.php",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/792268e7cfd9f99bdbcae1cc5c989e1c8e841492/contrib/ns/site/util.php",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/ns/site/util.php?ref=792268e7cfd9f99bdbcae1cc5c989e1c8e841492",
        "patch": "@@ -1,74 +0,0 @@\n-<?php\n-\n-class Problem extends Exception\n-{\n-    # PHP sucks!\n-    public function __construct($title, $message)\n-    {\n-        parent::__construct($message);\n-        $this->title = $title;\n-    }\n-\n-    public function getTitle()\n-    {\n-        return $this->title;\n-    }\n-}\n-class Error extends Problem\n-{\n-}\n-\n-function do_query($query)\n-{\n-    $result = mysql_query($query) or die(mysql_error());\n-    return $result;\n-}\n-function get_row($result)\n-{\n-    $row = mysql_fetch_array($result, MYSQL_ASSOC);\n-    if (!$row)\n-        throw new Error('Ooops!', \"Seems there's a missing value here.\");\n-    return $row;\n-}\n-\n-function has_results($result)\n-{\n-    if (mysql_num_rows($result) > 0)\n-        return true;\n-    else\n-        return false;\n-}\n-\n-function escapestr($str)\n-{\n-    return mysql_real_escape_string(strip_tags(htmlspecialchars($str)));\n-}\n-\n-function cleanup_string($val)\n-{\n-    $val = preg_replace('/[^A-Za-z0-9 .]/', '', $val);\n-    return mysql_real_escape_string($val);\n-}\n-\n-function user_id()\n-{\n-    if (!isset($_SESSION['uid'])) {\n-        # grave error. should never happen and should be reported as urgent breach.\n-        throw new Error('Login 404', \"You're not logged in. Proceed to the <a href='login.php'>login</a> form.\");\n-    }\n-    return cleanup_string($_SESSION['uid']);\n-}\n-\n-function post($key)\n-{\n-    if (!isset($_POST[$key]))\n-        throw new Error('Ooops!', \"Missing posted value $key!\");\n-    return cleanup_string($_POST[$key]);\n-}\n-function get($key)\n-{\n-    if (!isset($_GET[$key]))\n-        throw new Error('Ooops!', \"Missing get value $key!\");\n-    return cleanup_string($_GET[$key]);\n-}\n-"
      }
    ]
  },
  {
    "sha": "68fb6d7b6eb670d97c310f80b90526542264f37d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2OGZiNmQ3YjZlYjY3MGQ5N2MzMTBmODBiOTA1MjY1NDIyNjRmMzdk",
    "commit": {
      "author": {
        "name": "genjix",
        "email": "fake@lol.u",
        "date": "2011-04-16T18:16:17Z"
      },
      "committer": {
        "name": "genjix",
        "email": "fake@lol.u",
        "date": "2011-04-16T18:16:17Z"
      },
      "message": "added database login file.",
      "tree": {
        "sha": "57790b7c3103dbbd77b831824c864d4f429b5a3b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/57790b7c3103dbbd77b831824c864d4f429b5a3b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/68fb6d7b6eb670d97c310f80b90526542264f37d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/68fb6d7b6eb670d97c310f80b90526542264f37d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/68fb6d7b6eb670d97c310f80b90526542264f37d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/68fb6d7b6eb670d97c310f80b90526542264f37d/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "c391073ec30010c1d05e24a9f2c2498844b06bf1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c391073ec30010c1d05e24a9f2c2498844b06bf1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c391073ec30010c1d05e24a9f2c2498844b06bf1"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 6,
      "deletions": 0
    },
    "files": [
      {
        "sha": "a4cf2f609810dab1fbfcbbc9140a467a8d572df6",
        "filename": "contrib/ns/db.bitnom.inc",
        "status": "added",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/68fb6d7b6eb670d97c310f80b90526542264f37d/contrib/ns/db.bitnom.inc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/68fb6d7b6eb670d97c310f80b90526542264f37d/contrib/ns/db.bitnom.inc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/ns/db.bitnom.inc?ref=68fb6d7b6eb670d97c310f80b90526542264f37d",
        "patch": "@@ -0,0 +1,6 @@\n+<?php\n+// This will connect to the MySQL server\n+mysql_connect('localhost', 'root', '') or die(mysql_error());\n+// This will connect to a database on that server.\n+mysql_select_db('bitnom') or die(mysql_error());\n+"
      }
    ]
  },
  {
    "sha": "d298b63b472cf23d6ef2e042a3faf84eb1e6ff7c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkMjk4YjYzYjQ3MmNmMjNkNmVmMmUwNDJhM2ZhZjg0ZWIxZTZmZjdj",
    "commit": {
      "author": {
        "name": "genjix",
        "email": "fake@lol.u",
        "date": "2011-04-16T18:20:31Z"
      },
      "committer": {
        "name": "genjix",
        "email": "fake@lol.u",
        "date": "2011-04-16T18:20:31Z"
      },
      "message": "added installation instructions.",
      "tree": {
        "sha": "9180e4b803e29ebc05bd14a7ac9a3fb71842f5ee",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9180e4b803e29ebc05bd14a7ac9a3fb71842f5ee"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d298b63b472cf23d6ef2e042a3faf84eb1e6ff7c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d298b63b472cf23d6ef2e042a3faf84eb1e6ff7c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d298b63b472cf23d6ef2e042a3faf84eb1e6ff7c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d298b63b472cf23d6ef2e042a3faf84eb1e6ff7c/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "68fb6d7b6eb670d97c310f80b90526542264f37d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/68fb6d7b6eb670d97c310f80b90526542264f37d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/68fb6d7b6eb670d97c310f80b90526542264f37d"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 13,
      "deletions": 0
    },
    "files": [
      {
        "sha": "3c997009e875dcc713f2636d00a736675cdc623d",
        "filename": "contrib/ns/INSTALL",
        "status": "added",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d298b63b472cf23d6ef2e042a3faf84eb1e6ff7c/contrib/ns/INSTALL",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d298b63b472cf23d6ef2e042a3faf84eb1e6ff7c/contrib/ns/INSTALL",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/ns/INSTALL?ref=d298b63b472cf23d6ef2e042a3faf84eb1e6ff7c",
        "patch": "@@ -0,0 +1,13 @@\n+Ingredients: LAMP\n+\n+1. Create the database:\n+\n+  $ mysql -u root -p\n+  > CREATE DATABASE bitnom;\n+\n+2. Import the database.\n+\n+  $ mysql -u root -p bitnom < DATABASE\n+\n+3. Copy /var/db.bitnom.inc and edit the details.\n+"
      }
    ]
  },
  {
    "sha": "01e7b5635b973eff1d99576bce7c786e8d74307c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowMWU3YjU2MzViOTczZWZmMWQ5OTU3NmJjZTdjNzg2ZThkNzQzMDdj",
    "commit": {
      "author": {
        "name": "genjix",
        "email": "fake@lol.u",
        "date": "2011-04-16T18:35:48Z"
      },
      "committer": {
        "name": "genjix",
        "email": "fake@lol.u",
        "date": "2011-04-16T18:35:48Z"
      },
      "message": "moved sites to webroot",
      "tree": {
        "sha": "58c65911d87f90f24746885ad8e23e19be467e59",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/58c65911d87f90f24746885ad8e23e19be467e59"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/01e7b5635b973eff1d99576bce7c786e8d74307c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/01e7b5635b973eff1d99576bce7c786e8d74307c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/01e7b5635b973eff1d99576bce7c786e8d74307c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/01e7b5635b973eff1d99576bce7c786e8d74307c/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "d298b63b472cf23d6ef2e042a3faf84eb1e6ff7c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d298b63b472cf23d6ef2e042a3faf84eb1e6ff7c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d298b63b472cf23d6ef2e042a3faf84eb1e6ff7c"
      }
    ],
    "stats": {
      "total": 0,
      "additions": 0,
      "deletions": 0
    },
    "files": [
      {
        "sha": "163219f691c64835da0707504f1e13539db8fa99",
        "filename": "contrib/ns/header.php",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/01e7b5635b973eff1d99576bce7c786e8d74307c/contrib/ns/header.php",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/01e7b5635b973eff1d99576bce7c786e8d74307c/contrib/ns/header.php",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/ns/header.php?ref=01e7b5635b973eff1d99576bce7c786e8d74307c",
        "previous_filename": "contrib/ns/site/header.php"
      },
      {
        "sha": "5bdbf5509a9774c2db9ae5fe3e73172e41507402",
        "filename": "contrib/ns/index.php",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/01e7b5635b973eff1d99576bce7c786e8d74307c/contrib/ns/index.php",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/01e7b5635b973eff1d99576bce7c786e8d74307c/contrib/ns/index.php",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/ns/index.php?ref=01e7b5635b973eff1d99576bce7c786e8d74307c",
        "previous_filename": "contrib/ns/site/index.php"
      },
      {
        "sha": "84ea25a0a456c6dc0a10f640dfd6d00f9bd92e05",
        "filename": "contrib/ns/login.php",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/01e7b5635b973eff1d99576bce7c786e8d74307c/contrib/ns/login.php",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/01e7b5635b973eff1d99576bce7c786e8d74307c/contrib/ns/login.php",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/ns/login.php?ref=01e7b5635b973eff1d99576bce7c786e8d74307c",
        "previous_filename": "contrib/ns/site/login.php"
      },
      {
        "sha": "6967327cd969bd7c823d8273e0d8cf88c4d7e962",
        "filename": "contrib/ns/openid.php",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/01e7b5635b973eff1d99576bce7c786e8d74307c/contrib/ns/openid.php",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/01e7b5635b973eff1d99576bce7c786e8d74307c/contrib/ns/openid.php",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/ns/openid.php?ref=01e7b5635b973eff1d99576bce7c786e8d74307c",
        "previous_filename": "contrib/ns/site/openid.php"
      }
    ]
  },
  {
    "sha": "27e9267417ae12f1cb4902fb14ad048093fb6804",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyN2U5MjY3NDE3YWUxMmYxY2I0OTAyZmIxNGFkMDQ4MDkzZmI2ODA0",
    "commit": {
      "author": {
        "name": "genjix",
        "email": "fake@lol.u",
        "date": "2011-04-16T18:45:36Z"
      },
      "committer": {
        "name": "genjix",
        "email": "fake@lol.u",
        "date": "2011-04-16T18:45:36Z"
      },
      "message": "corrected incorrect error message.",
      "tree": {
        "sha": "8cf0e2a65fd0a412cd9c5e9d71fb2e91d5858c7a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8cf0e2a65fd0a412cd9c5e9d71fb2e91d5858c7a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/27e9267417ae12f1cb4902fb14ad048093fb6804",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/27e9267417ae12f1cb4902fb14ad048093fb6804",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/27e9267417ae12f1cb4902fb14ad048093fb6804",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/27e9267417ae12f1cb4902fb14ad048093fb6804/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "01e7b5635b973eff1d99576bce7c786e8d74307c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/01e7b5635b973eff1d99576bce7c786e8d74307c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/01e7b5635b973eff1d99576bce7c786e8d74307c"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "cfffeca6b76d002cc225765dfb2998d26c77e38b",
        "filename": "contrib/ns/errors.php",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/27e9267417ae12f1cb4902fb14ad048093fb6804/contrib/ns/errors.php",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/27e9267417ae12f1cb4902fb14ad048093fb6804/contrib/ns/errors.php",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/ns/errors.php?ref=27e9267417ae12f1cb4902fb14ad048093fb6804",
        "patch": "@@ -37,7 +37,7 @@ function error_json($errcode, $params=array())\n             break;\n \n         case NO_ADDR_SET:\n-            $json['error'] = 'Internal error occurred.';\n+            $json['error'] = 'No address set for this nickname.';\n             break;\n \n         default:"
      }
    ]
  },
  {
    "sha": "94cef68da135ba8723f2d9f8e195ba1b49231608",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5NGNlZjY4ZGExMzViYTg3MjNmMmQ5ZjhlMTk1YmExYjQ5MjMxNjA4",
    "commit": {
      "author": {
        "name": "genjix",
        "email": "fake@lol.u",
        "date": "2011-04-16T18:46:17Z"
      },
      "committer": {
        "name": "genjix",
        "email": "fake@lol.u",
        "date": "2011-04-16T18:46:17Z"
      },
      "message": "corrected fubared paths.",
      "tree": {
        "sha": "a8b8ac30c91aabf0b88f08b9f74fb94a233c9acc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a8b8ac30c91aabf0b88f08b9f74fb94a233c9acc"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/94cef68da135ba8723f2d9f8e195ba1b49231608",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/94cef68da135ba8723f2d9f8e195ba1b49231608",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/94cef68da135ba8723f2d9f8e195ba1b49231608",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/94cef68da135ba8723f2d9f8e195ba1b49231608/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "27e9267417ae12f1cb4902fb14ad048093fb6804",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/27e9267417ae12f1cb4902fb14ad048093fb6804",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/27e9267417ae12f1cb4902fb14ad048093fb6804"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "e8f7fe5a2a4e7ffc9a4db8a86563278cd256f04c",
        "filename": "contrib/ns/index.php",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/94cef68da135ba8723f2d9f8e195ba1b49231608/contrib/ns/index.php",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/94cef68da135ba8723f2d9f8e195ba1b49231608/contrib/ns/index.php",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/ns/index.php?ref=94cef68da135ba8723f2d9f8e195ba1b49231608",
        "patch": "@@ -1,5 +1,5 @@\n <?php\n-require '../util.php';\n+require 'util.php';\n require 'header.php';\n \n function add_nickname()"
      },
      {
        "sha": "4864cd613be19d740aba7c2e07d79a038d9f9906",
        "filename": "contrib/ns/login.php",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/94cef68da135ba8723f2d9f8e195ba1b49231608/contrib/ns/login.php",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/94cef68da135ba8723f2d9f8e195ba1b49231608/contrib/ns/login.php",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/ns/login.php?ref=94cef68da135ba8723f2d9f8e195ba1b49231608",
        "patch": "@@ -1,7 +1,7 @@\n <?php\n require 'openid.php';\n require 'header.php';\n-require '../util.php';\n+require 'util.php';\n \n try {\n     $openid = new LightOpenID;"
      }
    ]
  }
]