[
  {
    "sha": "ee950ec465b616b1f7dd14df8f77c66a817c0b64",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplZTk1MGVjNDY1YjYxNmIxZjdkZDE0ZGY4Zjc3YzY2YTgxN2MwYjY0",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-08-14T11:32:10Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-08-17T10:52:50Z"
      },
      "message": "[rpc] walletcreatefundedpsbt: use wallet default RBF",
      "tree": {
        "sha": "313425727e4089c7bb16e7c23e0020e7a080bdf8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/313425727e4089c7bb16e7c23e0020e7a080bdf8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ee950ec465b616b1f7dd14df8f77c66a817c0b64",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAl1X3IIACgkQV/+b28ww\nEAkWvBAAhWFNXoE+gEV4DI+RPle+5FeT1H9CxwGptoieb4d0+ui8afk0F//ZNlqX\nnjKO6egWwXYbWSZPSvb+mxFoZjvGOGE6Ld5W6BopcVWD7fTIuunVW/ugCnAPEdeb\nyzaCt6BYEojaXtOdd+KOPTVbVioZzOit79/1rwImWmJE+zBIXOydXsnlG7do9iBC\nujfmYV8BT3bpKIppWz9wXBSaaCMuJ29htekx4WayyYbny1YXulKFQUstZNRt6v7U\n/w0I1HS2neagRJeAW/NZAFVakcLB3JfFUEK5Uz3tYOhWHI0Q0oV3z3yacfTFE6Cg\nWOfQrsen0KvFVb05rgwKivob0ktdFWtoNC29CqB0+X10X33Lq9YltRF8GQfn/Gw6\nrZfWevM0s+yuE91kz7JNujw675Jkqx7r36cPY00x0GUg6M+UCDZDXD0SGPwlt5VL\nj/0wIQM0g53oAN9eeijPBFp3M4pK5TOWVTDe9ibyqx9hOt3HjZbsar8iJDhwI+Fu\nw3z6vuHUfrN56Hd5wLLHQBpOwhThn1+/Td5Gjdq7XMpYxjkSs5IW/TE/I5rBgaPR\nd5cF1beXKWDxsjjQAyCS9gtMNBd6znVWtQnf/3gyxvLmb7CHneZkEEHP8Y+1kVl0\nYuiCRGBLiuaLhe7LD7vsknrxMP/5SH32hSbNN2qQqBCoioKr928=\n=LRZC\n-----END PGP SIGNATURE-----",
        "payload": "tree 313425727e4089c7bb16e7c23e0020e7a080bdf8\nparent bbc2970082a28d75224857db55355f0c3e686335\nauthor Sjors Provoost <sjors@sprovoost.nl> 1565782330 +0200\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1566039170 +0200\n\n[rpc] walletcreatefundedpsbt: use wallet default RBF\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ee950ec465b616b1f7dd14df8f77c66a817c0b64",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ee950ec465b616b1f7dd14df8f77c66a817c0b64",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ee950ec465b616b1f7dd14df8f77c66a817c0b64/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bbc2970082a28d75224857db55355f0c3e686335",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bbc2970082a28d75224857db55355f0c3e686335",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bbc2970082a28d75224857db55355f0c3e686335"
      }
    ],
    "stats": {
      "total": 49,
      "additions": 33,
      "deletions": 16
    },
    "files": [
      {
        "sha": "b0af7e09d41c823db7f465122b30f2da342d3093",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 7,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ee950ec465b616b1f7dd14df8f77c66a817c0b64/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ee950ec465b616b1f7dd14df8f77c66a817c0b64/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=ee950ec465b616b1f7dd14df8f77c66a817c0b64",
        "patch": "@@ -352,7 +352,7 @@ static UniValue verifytxoutproof(const JSONRPCRequest& request)\n     return res;\n }\n \n-CMutableTransaction ConstructTransaction(const UniValue& inputs_in, const UniValue& outputs_in, const UniValue& locktime, const UniValue& rbf)\n+CMutableTransaction ConstructTransaction(const UniValue& inputs_in, const UniValue& outputs_in, const UniValue& locktime, bool rbf)\n {\n     if (inputs_in.isNull() || outputs_in.isNull())\n         throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, arguments 1 and 2 must be non-null\");\n@@ -370,8 +370,6 @@ CMutableTransaction ConstructTransaction(const UniValue& inputs_in, const UniVal\n         rawTx.nLockTime = nLockTime;\n     }\n \n-    bool rbfOptIn = rbf.isTrue();\n-\n     for (unsigned int idx = 0; idx < inputs.size(); idx++) {\n         const UniValue& input = inputs[idx];\n         const UniValue& o = input.get_obj();\n@@ -386,7 +384,7 @@ CMutableTransaction ConstructTransaction(const UniValue& inputs_in, const UniVal\n             throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, vout must be positive\");\n \n         uint32_t nSequence;\n-        if (rbfOptIn) {\n+        if (rbf) {\n             nSequence = MAX_BIP125_RBF_SEQUENCE; /* CTxIn::SEQUENCE_FINAL - 2 */\n         } else if (rawTx.nLockTime) {\n             nSequence = CTxIn::SEQUENCE_FINAL - 1;\n@@ -458,7 +456,7 @@ CMutableTransaction ConstructTransaction(const UniValue& inputs_in, const UniVal\n         }\n     }\n \n-    if (!rbf.isNull() && rawTx.vin.size() > 0 && rbfOptIn != SignalsOptInRBF(CTransaction(rawTx))) {\n+    if (rbf && rawTx.vin.size() > 0 && !SignalsOptInRBF(CTransaction(rawTx))) {\n         throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter combination: Sequence number(s) contradict replaceable option\");\n     }\n \n@@ -528,7 +526,11 @@ static UniValue createrawtransaction(const JSONRPCRequest& request)\n         }, true\n     );\n \n-    CMutableTransaction rawTx = ConstructTransaction(request.params[0], request.params[1], request.params[2], request.params[3]);\n+    bool rbf = false;\n+    if (!request.params[3].isNull()) {\n+        rbf = request.params[3].isTrue();\n+    }\n+    CMutableTransaction rawTx = ConstructTransaction(request.params[0], request.params[1], request.params[2], rbf);\n \n     return EncodeHexTx(CTransaction(rawTx));\n }\n@@ -1632,7 +1634,11 @@ UniValue createpsbt(const JSONRPCRequest& request)\n         }, true\n     );\n \n-    CMutableTransaction rawTx = ConstructTransaction(request.params[0], request.params[1], request.params[2], request.params[3]);\n+    bool rbf = false;\n+    if (!request.params[3].isNull()) {\n+        rbf = request.params[3].isTrue();\n+    }\n+    CMutableTransaction rawTx = ConstructTransaction(request.params[0], request.params[1], request.params[2], rbf);\n \n     // Make a blank psbt\n     PartiallySignedTransaction psbtx;"
      },
      {
        "sha": "3d5736fe398dfb43c8600d09c0ad10ec2314a5fc",
        "filename": "src/rpc/rawtransaction.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ee950ec465b616b1f7dd14df8f77c66a817c0b64/src/rpc/rawtransaction.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ee950ec465b616b1f7dd14df8f77c66a817c0b64/src/rpc/rawtransaction.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.h?ref=ee950ec465b616b1f7dd14df8f77c66a817c0b64",
        "patch": "@@ -17,6 +17,6 @@ class Chain;\n UniValue SignTransaction(interfaces::Chain& chain, CMutableTransaction& mtx, const UniValue& prevTxs, CBasicKeyStore *keystore, bool tempKeystore, const UniValue& hashType);\n \n /** Create a transaction from univalue parameters */\n-CMutableTransaction ConstructTransaction(const UniValue& inputs_in, const UniValue& outputs_in, const UniValue& locktime, const UniValue& rbf);\n+CMutableTransaction ConstructTransaction(const UniValue& inputs_in, const UniValue& outputs_in, const UniValue& locktime, bool rbf);\n \n #endif // BITCOIN_RPC_RAWTRANSACTION_H"
      },
      {
        "sha": "62d21cdf753e9d1959a492174862f7e914d35111",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 1,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ee950ec465b616b1f7dd14df8f77c66a817c0b64/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ee950ec465b616b1f7dd14df8f77c66a817c0b64/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=ee950ec465b616b1f7dd14df8f77c66a817c0b64",
        "patch": "@@ -4114,7 +4114,13 @@ UniValue walletcreatefundedpsbt(const JSONRPCRequest& request)\n \n     CAmount fee;\n     int change_position;\n-    CMutableTransaction rawTx = ConstructTransaction(request.params[0], request.params[1], request.params[2], request.params[3][\"replaceable\"]);\n+    bool rbf = pwallet->m_signal_rbf;\n+    const UniValue &replaceable_arg = request.params[3][\"replaceable\"];\n+    if (!replaceable_arg.isNull()) {\n+        RPCTypeCheckArgument(replaceable_arg, UniValue::VBOOL);\n+        rbf = replaceable_arg.isTrue();\n+    }\n+    CMutableTransaction rawTx = ConstructTransaction(request.params[0], request.params[1], request.params[2], rbf);\n     FundTransaction(pwallet, rawTx, fee, change_position, request.params[3]);\n \n     // Make a blank psbt"
      },
      {
        "sha": "5e89ad9f5e0eee919a6eeabb78ecfa036c07d6de",
        "filename": "test/functional/rpc_psbt.py",
        "status": "modified",
        "additions": 12,
        "deletions": 7,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ee950ec465b616b1f7dd14df8f77c66a817c0b64/test/functional/rpc_psbt.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ee950ec465b616b1f7dd14df8f77c66a817c0b64/test/functional/rpc_psbt.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_psbt.py?ref=ee950ec465b616b1f7dd14df8f77c66a817c0b64",
        "patch": "@@ -20,6 +20,11 @@ class PSBTTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.setup_clean_chain = False\n         self.num_nodes = 3\n+        self.extra_args = [\n+            [\"-walletrbf=1\"],\n+            [],\n+            []\n+        ]\n \n     def skip_test_if_missing_module(self):\n         self.skip_if_no_wallet()\n@@ -191,26 +196,26 @@ def run_test(self):\n         # replaceable arg\n         block_height = self.nodes[0].getblockcount()\n         unspent = self.nodes[0].listunspent()[0]\n-        psbtx_info = self.nodes[0].walletcreatefundedpsbt([{\"txid\":unspent[\"txid\"], \"vout\":unspent[\"vout\"]}], [{self.nodes[2].getnewaddress():unspent[\"amount\"]+1}], block_height+2, {\"replaceable\":True}, False)\n+        psbtx_info = self.nodes[0].walletcreatefundedpsbt([{\"txid\":unspent[\"txid\"], \"vout\":unspent[\"vout\"]}], [{self.nodes[2].getnewaddress():unspent[\"amount\"]+1}], block_height+2, {\"replaceable\":False}, False)\n         decoded_psbt = self.nodes[0].decodepsbt(psbtx_info[\"psbt\"])\n         for tx_in, psbt_in in zip(decoded_psbt[\"tx\"][\"vin\"], decoded_psbt[\"inputs\"]):\n-           assert_equal(tx_in[\"sequence\"], MAX_BIP125_RBF_SEQUENCE)\n-           assert \"bip32_derivs\" not in psbt_in\n+            assert(tx_in[\"sequence\"] > MAX_BIP125_RBF_SEQUENCE)\n+            assert \"bip32_derivs\" not in psbt_in\n         assert_equal(decoded_psbt[\"tx\"][\"locktime\"], block_height+2)\n \n-        # Same construction with only locktime set\n-        psbtx_info = self.nodes[0].walletcreatefundedpsbt([{\"txid\":unspent[\"txid\"], \"vout\":unspent[\"vout\"]}], [{self.nodes[2].getnewaddress():unspent[\"amount\"]+1}], block_height, {}, True)\n+        # Same construction with only locktime set and RBF explicitly enabled\n+        psbtx_info = self.nodes[0].walletcreatefundedpsbt([{\"txid\":unspent[\"txid\"], \"vout\":unspent[\"vout\"]}], [{self.nodes[2].getnewaddress():unspent[\"amount\"]+1}], block_height, {\"replaceable\": True}, True)\n         decoded_psbt = self.nodes[0].decodepsbt(psbtx_info[\"psbt\"])\n         for tx_in, psbt_in in zip(decoded_psbt[\"tx\"][\"vin\"], decoded_psbt[\"inputs\"]):\n-            assert tx_in[\"sequence\"] > MAX_BIP125_RBF_SEQUENCE\n+            assert_equal(tx_in[\"sequence\"], MAX_BIP125_RBF_SEQUENCE)\n             assert \"bip32_derivs\" in psbt_in\n         assert_equal(decoded_psbt[\"tx\"][\"locktime\"], block_height)\n \n         # Same construction without optional arguments\n         psbtx_info = self.nodes[0].walletcreatefundedpsbt([{\"txid\":unspent[\"txid\"], \"vout\":unspent[\"vout\"]}], [{self.nodes[2].getnewaddress():unspent[\"amount\"]+1}])\n         decoded_psbt = self.nodes[0].decodepsbt(psbtx_info[\"psbt\"])\n         for tx_in in decoded_psbt[\"tx\"][\"vin\"]:\n-            assert tx_in[\"sequence\"] > MAX_BIP125_RBF_SEQUENCE\n+            assert_equal(tx_in[\"sequence\"], MAX_BIP125_RBF_SEQUENCE)\n         assert_equal(decoded_psbt[\"tx\"][\"locktime\"], 0)\n \n         # Make sure change address wallet does not have P2SH innerscript access to results in success"
      }
    ]
  },
  {
    "sha": "0942a60c06ab4bde275369e7b7bd1caa3b20778e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowOTQyYTYwYzA2YWI0YmRlMjc1MzY5ZTdiN2JkMWNhYTNiMjA3Nzhl",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-05-12T13:42:15Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-08-17T10:52:50Z"
      },
      "message": "[doc] rpc: remove \"fallback to\" from RBF default help",
      "tree": {
        "sha": "c3d23d3f3c25d49ca8c2e5e04cc0f2aa71bf5b56",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c3d23d3f3c25d49ca8c2e5e04cc0f2aa71bf5b56"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0942a60c06ab4bde275369e7b7bd1caa3b20778e",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAl1X3IIACgkQV/+b28ww\nEAmWJxAAj+ezGALPxQdadQ1E/aPaXMvfwrJovklsZJrQ9llyFiwM6rFRvSJZA9Qt\n+mjplBtuS7HsiIQZdF+31tk3Nt9VeeBdYwTUxq9XgvqvXFxULQKibcBKCYicho8n\nvbbzMogw9t35QAiKP1e3OnqzvzJN5XEH8RXkOmtlUrCXB9T8Omy6SiImeLLBgBME\nb8NqyNwK4LtmQs3+ultOAGTbw9n3ysDYAZmYVTRf+J14tsFP0kkgc9N6Nq7w7P0n\nPwTI2xyOFpqoqA518e8raER0y+ncNqpXDBEHP+Ex50onUgEfJZbI0d64X2Y64e8a\nNTzNejyEQg1ujxjaDbnpXeJy3/ZIt3dj40d7UZSdT1GZdwjb19eIMlS03oA8n5E7\nGtBtimj2Ho+yI8Dv5/3CHoGvGjxbDNnCSAn3u3NyaOmPrAuFwn/57Fui5XnrBsgj\nEqf71ieYpw207bXH19F2w/4cYMjs+xS4Gz3o9dROpkdDSUO/6HosRZ5QrTj94X24\nChhyVxJyM4Pgb1qqR13b6CxD+SSu4qobTknkjlyouAYorYvke1ln67OKfyheKtzn\npfgXIdCSvsyPZCIiQ+1M9InIZxgId0BfaDlDDj4AcPcjXR20tzWtahSuKi09AUi/\nAfO97sYgqF0eNqqAbrWWV/GpjvWKdgoznNGS69jgvBlEW2O87q4=\n=gu3B\n-----END PGP SIGNATURE-----",
        "payload": "tree c3d23d3f3c25d49ca8c2e5e04cc0f2aa71bf5b56\nparent ee950ec465b616b1f7dd14df8f77c66a817c0b64\nauthor Sjors Provoost <sjors@sprovoost.nl> 1557668535 +0200\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1566039170 +0200\n\n[doc] rpc: remove \"fallback to\" from RBF default help\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0942a60c06ab4bde275369e7b7bd1caa3b20778e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0942a60c06ab4bde275369e7b7bd1caa3b20778e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0942a60c06ab4bde275369e7b7bd1caa3b20778e/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ee950ec465b616b1f7dd14df8f77c66a817c0b64",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ee950ec465b616b1f7dd14df8f77c66a817c0b64",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ee950ec465b616b1f7dd14df8f77c66a817c0b64"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 8,
      "deletions": 8
    },
    "files": [
      {
        "sha": "b541ea7faf6f1562ae709810e3201dea7b7068b3",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0942a60c06ab4bde275369e7b7bd1caa3b20778e/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0942a60c06ab4bde275369e7b7bd1caa3b20778e/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=0942a60c06ab4bde275369e7b7bd1caa3b20778e",
        "patch": "@@ -372,8 +372,8 @@ static UniValue sendtoaddress(const JSONRPCRequest& request)\n             \"                             transaction, just kept in your wallet.\"},\n                     {\"subtractfeefromamount\", RPCArg::Type::BOOL, /* default */ \"false\", \"The fee will be deducted from the amount being sent.\\n\"\n             \"                             The recipient will receive less bitcoins than you enter in the amount field.\"},\n-                    {\"replaceable\", RPCArg::Type::BOOL, /* default */ \"fallback to wallet's default\", \"Allow this transaction to be replaced by a transaction with higher fees via BIP 125\"},\n-                    {\"conf_target\", RPCArg::Type::NUM, /* default */ \"fallback to wallet's default\", \"Confirmation target (in blocks)\"},\n+                    {\"replaceable\", RPCArg::Type::BOOL, /* default */ \"wallet default\", \"Allow this transaction to be replaced by a transaction with higher fees via BIP 125\"},\n+                    {\"conf_target\", RPCArg::Type::NUM, /* default */ \"wallet default\", \"Confirmation target (in blocks)\"},\n                     {\"estimate_mode\", RPCArg::Type::STR, /* default */ \"UNSET\", \"The fee estimate mode, must be one of:\\n\"\n             \"       \\\"UNSET\\\"\\n\"\n             \"       \\\"ECONOMICAL\\\"\\n\"\n@@ -831,8 +831,8 @@ static UniValue sendmany(const JSONRPCRequest& request)\n                             {\"address\", RPCArg::Type::STR, RPCArg::Optional::OMITTED, \"Subtract fee from this address\"},\n                         },\n                     },\n-                    {\"replaceable\", RPCArg::Type::BOOL, /* default */ \"fallback to wallet's default\", \"Allow this transaction to be replaced by a transaction with higher fees via BIP 125\"},\n-                    {\"conf_target\", RPCArg::Type::NUM, /* default */ \"fallback to wallet's default\", \"Confirmation target (in blocks)\"},\n+                    {\"replaceable\", RPCArg::Type::BOOL, /* default */ \"wallet default\", \"Allow this transaction to be replaced by a transaction with higher fees via BIP 125\"},\n+                    {\"conf_target\", RPCArg::Type::NUM, /* default */ \"wallet default\", \"Confirmation target (in blocks)\"},\n                     {\"estimate_mode\", RPCArg::Type::STR, /* default */ \"UNSET\", \"The fee estimate mode, must be one of:\\n\"\n             \"       \\\"UNSET\\\"\\n\"\n             \"       \\\"ECONOMICAL\\\"\\n\"\n@@ -3070,9 +3070,9 @@ static UniValue fundrawtransaction(const JSONRPCRequest& request)\n                                     {\"vout_index\", RPCArg::Type::NUM, RPCArg::Optional::OMITTED, \"The zero-based output index, before a change output is added.\"},\n                                 },\n                             },\n-                            {\"replaceable\", RPCArg::Type::BOOL, /* default */ \"fallback to wallet's default\", \"Marks this transaction as BIP125 replaceable.\\n\"\n+                            {\"replaceable\", RPCArg::Type::BOOL, /* default */ \"wallet default\", \"Marks this transaction as BIP125 replaceable.\\n\"\n                             \"                              Allows this transaction to be replaced by a transaction with higher fees\"},\n-                            {\"conf_target\", RPCArg::Type::NUM, /* default */ \"fallback to wallet's default\", \"Confirmation target (in blocks)\"},\n+                            {\"conf_target\", RPCArg::Type::NUM, /* default */ \"wallet default\", \"Confirmation target (in blocks)\"},\n                             {\"estimate_mode\", RPCArg::Type::STR, /* default */ \"UNSET\", \"The fee estimate mode, must be one of:\\n\"\n                             \"         \\\"UNSET\\\"\\n\"\n                             \"         \\\"ECONOMICAL\\\"\\n\"\n@@ -3236,7 +3236,7 @@ static UniValue bumpfee(const JSONRPCRequest& request)\n                     {\"txid\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, \"The txid to be bumped\"},\n                     {\"options\", RPCArg::Type::OBJ, RPCArg::Optional::OMITTED_NAMED_ARG, \"\",\n                         {\n-                            {\"confTarget\", RPCArg::Type::NUM, /* default */ \"fallback to wallet's default\", \"Confirmation target (in blocks)\"},\n+                            {\"confTarget\", RPCArg::Type::NUM, /* default */ \"wallet default\", \"Confirmation target (in blocks)\"},\n                             {\"totalFee\", RPCArg::Type::NUM, /* default */ \"fallback to 'confTarget'\", \"Total fee (NOT feerate) to pay, in satoshis.\\n\"\n             \"                         In rare cases, the actual fee paid might be slightly higher than the specified\\n\"\n             \"                         totalFee if the tx change output has to be removed because it is too close to\\n\"\n@@ -4079,7 +4079,7 @@ UniValue walletcreatefundedpsbt(const JSONRPCRequest& request)\n                                     {\"vout_index\", RPCArg::Type::NUM, RPCArg::Optional::OMITTED, \"The zero-based output index, before a change output is added.\"},\n                                 },\n                             },\n-                            {\"replaceable\", RPCArg::Type::BOOL, /* default */ \"false\", \"Marks this transaction as BIP125 replaceable.\\n\"\n+                            {\"replaceable\", RPCArg::Type::BOOL, /* default */ \"wallet default\", \"Marks this transaction as BIP125 replaceable.\\n\"\n                             \"                              Allows this transaction to be replaced by a transaction with higher fees\"},\n                             {\"conf_target\", RPCArg::Type::NUM, /* default */ \"Fallback to wallet's confirmation target\", \"Confirmation target (in blocks)\"},\n                             {\"estimate_mode\", RPCArg::Type::STR, /* default */ \"UNSET\", \"The fee estimate mode, must be one of:\\n\""
      }
    ]
  },
  {
    "sha": "576580fe8a063f21c0e903af1cf8f85cd6cb71d7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NzY1ODBmZThhMDYzZjIxYzBlOTAzYWYxY2Y4Zjg1Y2Q2Y2I3MWQ3",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-07-27T17:35:07Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-08-17T10:52:50Z"
      },
      "message": "[test] walletcreatefundedpsbt: check RBF is disabled when -walletrbf=0",
      "tree": {
        "sha": "dfcadd9975d850c8df6f7bb54ec6463065aa9e5e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/dfcadd9975d850c8df6f7bb54ec6463065aa9e5e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/576580fe8a063f21c0e903af1cf8f85cd6cb71d7",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAl1X3IIACgkQV/+b28ww\nEAl6FhAAomhJDBGAUH4g4GM7sAgxa6G0U6wOMqIX+vf/m7ijV1Zw5TqPNSOWa/Rg\nr5w3sEyX0AqP++spRMCYu3EWoKb4lSA3zB1Y3QVI80SqfMPybffEnU3SduCW3iFW\n868mLOBTyS0N6q5+wvLyphv36GTRXFpvaCR0fy0gkOUtPtmPQzXX+7/+CQp7ySsG\nBgq4L/Y0Bt8nKW0lZZWgA02Fw0R7ju0BOwYebFg3jSyV036G+SJEFqH4Xj4eJ1Vb\nnj3ko7Y6vWN7u6TTwJyCaU6qorfy9tRTlMv6EBD1zozaGTTQnpHDfIrHBPuuWyQx\nhGZPEnuJCJXLiCKfQBip0fK3nmMe7D2Cj2KXAp+ouDuGysxjh0gFvE3ZWaGjjal3\nBNVSQr5bV744RgciMZSz4lAziPkhywJLGJDdOUrSNpOHnli2M4J17PQCFGDIE5uX\ngHQ35qXYfHS7ZO7HE0BnsBaeQo1YOrr0i69FP1+wGr+3D7rNvA7vI0IN+fZeNMAe\njgM3SkFavZ0etKl5wY1C2E8CEpP7F5Jz9iHg4Vqo5NbkoZ+RV4Hus/WWFsth8nAB\nMP4TmduhKF95TM5Kit9LP7c/Xtf7Kq7r5bZj0lZcSMQ73lTlja2jDVoL8GfWVF6z\n5R6TzDI4RmOFRVisWa1Q5mHSmcHjhBOgqCoUPfjIFBgLX8i0pYw=\n=31yw\n-----END PGP SIGNATURE-----",
        "payload": "tree dfcadd9975d850c8df6f7bb54ec6463065aa9e5e\nparent 0942a60c06ab4bde275369e7b7bd1caa3b20778e\nauthor Sjors Provoost <sjors@sprovoost.nl> 1564248907 +0200\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1566039170 +0200\n\n[test] walletcreatefundedpsbt: check RBF is disabled when -walletrbf=0\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/576580fe8a063f21c0e903af1cf8f85cd6cb71d7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/576580fe8a063f21c0e903af1cf8f85cd6cb71d7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/576580fe8a063f21c0e903af1cf8f85cd6cb71d7/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0942a60c06ab4bde275369e7b7bd1caa3b20778e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0942a60c06ab4bde275369e7b7bd1caa3b20778e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0942a60c06ab4bde275369e7b7bd1caa3b20778e"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 10,
      "deletions": 3
    },
    "files": [
      {
        "sha": "7a4cf42b2d4cff569508bc58c6156673e10912f5",
        "filename": "test/functional/rpc_psbt.py",
        "status": "modified",
        "additions": 10,
        "deletions": 3,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/576580fe8a063f21c0e903af1cf8f85cd6cb71d7/test/functional/rpc_psbt.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/576580fe8a063f21c0e903af1cf8f85cd6cb71d7/test/functional/rpc_psbt.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_psbt.py?ref=576580fe8a063f21c0e903af1cf8f85cd6cb71d7",
        "patch": "@@ -7,7 +7,7 @@\n \n from decimal import Decimal\n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import assert_equal, assert_raises_rpc_error, connect_nodes_bi, disconnect_nodes, find_output, sync_blocks\n+from test_framework.util import assert_equal, assert_greater_than, assert_raises_rpc_error, connect_nodes_bi, disconnect_nodes, find_output, sync_blocks\n \n import json\n import os\n@@ -22,7 +22,7 @@ def set_test_params(self):\n         self.num_nodes = 3\n         self.extra_args = [\n             [\"-walletrbf=1\"],\n-            [],\n+            [\"-walletrbf=0\"],\n             []\n         ]\n \n@@ -199,7 +199,7 @@ def run_test(self):\n         psbtx_info = self.nodes[0].walletcreatefundedpsbt([{\"txid\":unspent[\"txid\"], \"vout\":unspent[\"vout\"]}], [{self.nodes[2].getnewaddress():unspent[\"amount\"]+1}], block_height+2, {\"replaceable\":False}, False)\n         decoded_psbt = self.nodes[0].decodepsbt(psbtx_info[\"psbt\"])\n         for tx_in, psbt_in in zip(decoded_psbt[\"tx\"][\"vin\"], decoded_psbt[\"inputs\"]):\n-            assert(tx_in[\"sequence\"] > MAX_BIP125_RBF_SEQUENCE)\n+            assert_greater_than(tx_in[\"sequence\"], MAX_BIP125_RBF_SEQUENCE)\n             assert \"bip32_derivs\" not in psbt_in\n         assert_equal(decoded_psbt[\"tx\"][\"locktime\"], block_height+2)\n \n@@ -218,6 +218,13 @@ def run_test(self):\n             assert_equal(tx_in[\"sequence\"], MAX_BIP125_RBF_SEQUENCE)\n         assert_equal(decoded_psbt[\"tx\"][\"locktime\"], 0)\n \n+        # Same construction without optional arguments, for a node with -walletrbf=0\n+        unspent1 = self.nodes[1].listunspent()[0]\n+        psbtx_info = self.nodes[1].walletcreatefundedpsbt([{\"txid\":unspent1[\"txid\"], \"vout\":unspent1[\"vout\"]}], [{self.nodes[2].getnewaddress():unspent1[\"amount\"]+1}], block_height)\n+        decoded_psbt = self.nodes[1].decodepsbt(psbtx_info[\"psbt\"])\n+        for tx_in in decoded_psbt[\"tx\"][\"vin\"]:\n+            assert_greater_than(tx_in[\"sequence\"], MAX_BIP125_RBF_SEQUENCE)\n+\n         # Make sure change address wallet does not have P2SH innerscript access to results in success\n         # when attempting BnB coin selection\n         self.nodes[0].walletcreatefundedpsbt([], [{self.nodes[2].getnewaddress():unspent[\"amount\"]+1}], block_height+2, {\"changeAddress\":self.nodes[1].getnewaddress()}, False)"
      }
    ]
  }
]