DrahtBot,2020-04-11 12:36:54,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #18814 (rpc: Relock wallet only if most recent callback by promag)\n* #18734 (Allow simple multiwallet rpc calls by jonass",https://github.com/bitcoin/bitcoin/pull/18592#issuecomment-612411556,612411556,
brakmic,2020-04-11 13:43:10,"> Looks like you forgot some. Maybe this could be split up into two commits? No strong opinion though.\n\nOops, you're right. Thanks. Still some unneeded shared pointers. Will replace them, no problem. ",https://github.com/bitcoin/bitcoin/pull/18592#issuecomment-612424324,612424324,
brakmic,2020-04-11 17:27:58,"> I am still seeing two pointers, otherwise ACK\n\nTwo pointers?\n\nBut I already changed: `ListTransactions `,  `DescribeWalletAddress ` and `FundTransaction`.\nOr did you mean the latest change with `EnsureWalletIsUnlocked `?\n\n--EDIT: Nevermind, yes, it was about EnsureWalletIsUnlocked. ",https://github.com/bitcoin/bitcoin/pull/18592#issuecomment-612471523,612471523,
promag,2020-04-11 23:53:34,Code review ACK e6817785da4531648969af6f1202a4fa3b92707a.,https://github.com/bitcoin/bitcoin/pull/18592#issuecomment-612538024,612538024,
MarcoFalke,2020-04-12 00:54:37,ACK e6817785da4531648969af6f1202a4fa3b92707a,https://github.com/bitcoin/bitcoin/pull/18592#issuecomment-612545329,612545329,
practicalswift,2020-04-13 19:45:12,Concept ACK,https://github.com/bitcoin/bitcoin/pull/18592#issuecomment-613062982,613062982,
Sjors,2020-04-15 15:13:32,@achow101 does this significantly get in the way of #15764?,https://github.com/bitcoin/bitcoin/pull/18592#issuecomment-614099586,614099586,
achow101,2020-04-15 16:27:45,"> @achow101 does this significantly get in the way of #15764?\n\nNo",https://github.com/bitcoin/bitcoin/pull/18592#issuecomment-614142209,614142209,
ryanofsky,2020-05-07 02:00:20,Travis error sync_mempools timeout in feature_fee_estimation.py in https://travis-ci.org/github/bitcoin/bitcoin/jobs/683889542#L3121 is presumably unrelated,https://github.com/bitcoin/bitcoin/pull/18592#issuecomment-624984836,624984836,
ryanofsky,2020-05-13 21:08:51,"> closed this 3 days ago\n\nBelieve this was just a rageclose (exciting!) and someone else could pick this up",https://github.com/bitcoin/bitcoin/pull/18592#issuecomment-628246831,628246831,
MarcoFalke,2020-04-11 10:23:08,"read-only access to a wallet that is not a `nullptr` should probably be \n```suggestion\nstatic inline bool GetAvoidReuseFlag(const CWallet& wallet, const UniValue& param) {\n```\n\nAll RPCs check wallet for nullptr at the beginning of the function, so there shouldn't be an occasion where this is assumption fails.",https://github.com/bitcoin/bitcoin/pull/18592#discussion_r407046263,407046263,src/wallet/rpcwallet.cpp
brakmic,2020-04-11 10:38:21,"Yes, have changed it.\nHave also changed the CWallet reference variable name in `ParseIncludeWatchonly`.",https://github.com/bitcoin/bitcoin/pull/18592#discussion_r407047725,407047725,src/wallet/rpcwallet.cpp
promag,2020-04-11 10:54:05,"Instead of new method, you could change `EnsureWalletIsAvailable` and update rpcdump.cpp? Also, `const std::shared_ptr<CWallet>&` avoids incr/decr usage count.",https://github.com/bitcoin/bitcoin/pull/18592#discussion_r407049333,407049333,src/wallet/rpcwallet.cpp
promag,2020-04-11 10:54:37,Same as above.,https://github.com/bitcoin/bitcoin/pull/18592#discussion_r407049382,407049382,src/wallet/rpcwallet.cpp
brakmic,2020-04-11 10:59:31,"Yes, I could, but I didn't want to affect anything outside `rpcwallet.cpp`. At least not without consultation with others.  ",https://github.com/bitcoin/bitcoin/pull/18592#discussion_r407049785,407049785,src/wallet/rpcwallet.cpp
promag,2020-04-11 11:02:48,"You can consider rpcdump.cpp and rpcwallet.cpp as one, these belong to libbitcoin_wallet. Furthermore, the diff is more of the same.",https://github.com/bitcoin/bitcoin/pull/18592#discussion_r407050083,407050083,src/wallet/rpcwallet.cpp
brakmic,2020-04-11 11:03:49,"Ok, then I will adapt `rpcdump.cpp` as well.",https://github.com/bitcoin/bitcoin/pull/18592#discussion_r407050182,407050182,src/wallet/rpcwallet.cpp
MarcoFalke,2020-04-11 12:48:20,"Methods that only access members of the wallet struct don't need a shared pointer, which can be null and has minimal overhead for reference counting. A plain reference is sufficient.\n\n```suggestion\nstatic bool GetWalletAddressesForKey(LegacyScriptPubKeyMan* spk_man, const CWallet& wallet, const CKeyID& keyid, std::string& strAddr, std::string& strLabel) EXCLUSIVE_LOCKS_REQUIRED(wallet.cs_wal",https://github.com/bitcoin/bitcoin/pull/18592#discussion_r407060159,407060159,src/wallet/rpcdump.cpp
MarcoFalke,2020-04-11 12:49:41,same here,https://github.com/bitcoin/bitcoin/pull/18592#discussion_r407060334,407060334,src/wallet/rpcwallet.cpp
MarcoFalke,2020-04-11 12:50:19,Same here (and everywhere else),https://github.com/bitcoin/bitcoin/pull/18592#discussion_r407060388,407060388,src/wallet/rpcwallet.cpp
brakmic,2020-04-11 13:20:08,"Thanks.\nHave adapted them all.",https://github.com/bitcoin/bitcoin/pull/18592#discussion_r407063260,407063260,src/wallet/rpcwallet.cpp
MarcoFalke,2020-04-11 13:36:51,same here,https://github.com/bitcoin/bitcoin/pull/18592#discussion_r407064979,407064979,src/wallet/rpcdump.cpp
MarcoFalke,2020-04-11 13:38:01,same,https://github.com/bitcoin/bitcoin/pull/18592#discussion_r407065082,407065082,src/wallet/rpcwallet.cpp
MarcoFalke,2020-04-11 13:38:25,same,https://github.com/bitcoin/bitcoin/pull/18592#discussion_r407065104,407065104,src/wallet/rpcwallet.cpp
MarcoFalke,2020-04-11 13:38:37,same,https://github.com/bitcoin/bitcoin/pull/18592#discussion_r407065147,407065147,src/wallet/rpcwallet.cpp
brakmic,2020-04-11 14:17:45,Replaced them all. Executed unit tests passed.,https://github.com/bitcoin/bitcoin/pull/18592#discussion_r407069211,407069211,src/wallet/rpcdump.cpp
MarcoFalke,2020-04-11 17:15:22,"This is also called when the pointer is never `nullptr`, so a reference is more appropriate.\n```suggestion\nvoid EnsureWalletIsUnlocked(const CWallet& wallet)\n```",https://github.com/bitcoin/bitcoin/pull/18592#discussion_r407087632,407087632,src/wallet/rpcwallet.cpp
brakmic,2020-04-11 17:24:31,Adapted. Unit tests passing.,https://github.com/bitcoin/bitcoin/pull/18592#discussion_r407088610,407088610,src/wallet/rpcwallet.cpp
promag,2020-04-11 18:24:39,"Yeah, my bad.",https://github.com/bitcoin/bitcoin/pull/18592#discussion_r407095066,407095066,src/wallet/rpcwallet.cpp
MarcoFalke,2020-04-11 18:42:34,What about this one? ;),https://github.com/bitcoin/bitcoin/pull/18592#discussion_r407096916,407096916,src/wallet/rpcdump.cpp
brakmic,2020-04-11 18:44:17,"Ah, ok, understand. I was thinking about raw pointers.",https://github.com/bitcoin/bitcoin/pull/18592#discussion_r407097122,407097122,src/wallet/rpcdump.cpp
