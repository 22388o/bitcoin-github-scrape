[
  {
    "sha": "32114dd63493fd169bf666fc3a5b4a912c083766",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozMjExNGRkNjM0OTNmZDE2OWJmNjY2ZmMzYTViNGE5MTJjMDgzNzY2",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2016-05-10T16:19:03Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2016-05-11T17:47:25Z"
      },
      "message": "bench: Add crypto hash benchmarks\n\nAdd benchmarks for the cryptographic hash algorithms:\n\n- RIPEMD160\n- SHA1\n- SHA256\n- SHA512\n\nContinues work on #7883.",
      "tree": {
        "sha": "fa2af04acb99406edd9c3a0545f8dbdb08594ea1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fa2af04acb99406edd9c3a0545f8dbdb08594ea1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/32114dd63493fd169bf666fc3a5b4a912c083766",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/32114dd63493fd169bf666fc3a5b4a912c083766",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/32114dd63493fd169bf666fc3a5b4a912c083766",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/32114dd63493fd169bf666fc3a5b4a912c083766/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "373b50debaa995ee1f55a5a6504b628aeac9a80f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/373b50debaa995ee1f55a5a6504b628aeac9a80f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/373b50debaa995ee1f55a5a6504b628aeac9a80f"
      }
    ],
    "stats": {
      "total": 56,
      "additions": 55,
      "deletions": 1
    },
    "files": [
      {
        "sha": "65fd24e051cae938e71130afffea2f12c516310e",
        "filename": "src/Makefile.bench.include",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/32114dd63493fd169bf666fc3a5b4a912c083766/src/Makefile.bench.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/32114dd63493fd169bf666fc3a5b4a912c083766/src/Makefile.bench.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.bench.include?ref=32114dd63493fd169bf666fc3a5b4a912c083766",
        "patch": "@@ -8,7 +8,8 @@ bench_bench_bitcoin_SOURCES = \\\n   bench/bench.cpp \\\n   bench/bench.h \\\n   bench/Examples.cpp \\\n-  bench/rollingbloom.cpp\n+  bench/rollingbloom.cpp \\\n+  bench/crypto_hash.cpp\n \n bench_bench_bitcoin_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(EVENT_CLFAGS) $(EVENT_PTHREADS_CFLAGS) -I$(builddir)/bench/\n bench_bench_bitcoin_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)"
      },
      {
        "sha": "6b753f630837143127e2e16062499508f1941174",
        "filename": "src/bench/crypto_hash.cpp",
        "status": "added",
        "additions": 53,
        "deletions": 0,
        "changes": 53,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/32114dd63493fd169bf666fc3a5b4a912c083766/src/bench/crypto_hash.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/32114dd63493fd169bf666fc3a5b4a912c083766/src/bench/crypto_hash.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/crypto_hash.cpp?ref=32114dd63493fd169bf666fc3a5b4a912c083766",
        "patch": "@@ -0,0 +1,53 @@\n+// Copyright (c) 2016 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <iostream>\n+\n+#include \"bench.h\"\n+#include \"bloom.h\"\n+#include \"utiltime.h\"\n+#include \"crypto/ripemd160.h\"\n+#include \"crypto/sha1.h\"\n+#include \"crypto/sha256.h\"\n+#include \"crypto/sha512.h\"\n+\n+/* Number of bytes to hash per iteration */\n+static const uint64_t BUFFER_SIZE = 1000*1000;\n+\n+static void RIPEMD160(benchmark::State& state)\n+{\n+    uint8_t hash[CRIPEMD160::OUTPUT_SIZE];\n+    std::vector<uint8_t> in(BUFFER_SIZE,0);\n+    while (state.KeepRunning())\n+        CRIPEMD160().Write(begin_ptr(in), in.size()).Finalize(hash);\n+}\n+\n+static void SHA1(benchmark::State& state)\n+{\n+    uint8_t hash[CSHA1::OUTPUT_SIZE];\n+    std::vector<uint8_t> in(BUFFER_SIZE,0);\n+    while (state.KeepRunning())\n+        CSHA1().Write(begin_ptr(in), in.size()).Finalize(hash);\n+}\n+\n+static void SHA256(benchmark::State& state)\n+{\n+    uint8_t hash[CSHA256::OUTPUT_SIZE];\n+    std::vector<uint8_t> in(BUFFER_SIZE,0);\n+    while (state.KeepRunning())\n+        CSHA256().Write(begin_ptr(in), in.size()).Finalize(hash);\n+}\n+\n+static void SHA512(benchmark::State& state)\n+{\n+    uint8_t hash[CSHA512::OUTPUT_SIZE];\n+    std::vector<uint8_t> in(BUFFER_SIZE,0);\n+    while (state.KeepRunning())\n+        CSHA512().Write(begin_ptr(in), in.size()).Finalize(hash);\n+}\n+\n+BENCHMARK(RIPEMD160);\n+BENCHMARK(SHA1);\n+BENCHMARK(SHA256);\n+BENCHMARK(SHA512);"
      }
    ]
  }
]