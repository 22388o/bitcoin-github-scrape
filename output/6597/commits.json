[
  {
    "sha": "e4037dd51b2e5fd947d0975244e1ba155d16c7c7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNDAzN2RkNTFiMmU1ZmQ5NDdkMDk3NTI0NGUxYmExNTVkMTZjN2M3",
    "commit": {
      "author": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2015-07-03T14:11:06Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2015-11-17T13:53:57Z"
      },
      "message": "Testchains: Don't check the genesis block",
      "tree": {
        "sha": "c8f379dcbf48c78e6ba8049133d1c0c75a4db33b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c8f379dcbf48c78e6ba8049133d1c0c75a4db33b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e4037dd51b2e5fd947d0975244e1ba155d16c7c7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e4037dd51b2e5fd947d0975244e1ba155d16c7c7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e4037dd51b2e5fd947d0975244e1ba155d16c7c7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e4037dd51b2e5fd947d0975244e1ba155d16c7c7/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "eac53ec992018a14db6f8a65a7ce333a4c8284cc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eac53ec992018a14db6f8a65a7ce333a4c8284cc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/eac53ec992018a14db6f8a65a7ce333a4c8284cc"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 10,
      "deletions": 8
    },
    "files": [
      {
        "sha": "4c91136c7b1758570e006baa05c0bd7de502532e",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e4037dd51b2e5fd947d0975244e1ba155d16c7c7/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e4037dd51b2e5fd947d0975244e1ba155d16c7c7/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=e4037dd51b2e5fd947d0975244e1ba155d16c7c7",
        "patch": "@@ -1726,10 +1726,6 @@ bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockIndex* pin\n \n     int64_t nTimeStart = GetTimeMicros();\n \n-    // Check it again in case a previous version let a bad block in\n-    if (!CheckBlock(block, state, !fJustCheck, !fJustCheck))\n-        return false;\n-\n     // verify that the view's current state corresponds to the previous block\n     uint256 hashPrevBlock = pindex->pprev == NULL ? uint256() : pindex->pprev->GetBlockHash();\n     assert(hashPrevBlock == view.GetBestBlock());\n@@ -1742,6 +1738,10 @@ bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockIndex* pin\n         return true;\n     }\n \n+    // Check it again in case a previous version let a bad block in\n+    if (!CheckBlock(block, state, !fJustCheck, !fJustCheck))\n+        return false;\n+\n     bool fScriptChecks = true;\n     if (fCheckpointsEnabled) {\n         CBlockIndex *pindexLastCheckpoint = Checkpoints::GetLastCheckpoint(chainparams.Checkpoints());\n@@ -3158,7 +3158,7 @@ CBlockIndex * InsertBlockIndex(uint256 hash)\n bool static LoadBlockIndexDB()\n {\n     const CChainParams& chainparams = Params();\n-    if (!pblocktree->LoadBlockIndexGuts())\n+    if (!pblocktree->LoadBlockIndexGuts(chainparams.GetConsensus()))\n         return false;\n \n     boost::this_thread::interruption_point();"
      },
      {
        "sha": "40460762e6d77b7d13759b9b08f4bac81bf741ea",
        "filename": "src/txdb.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e4037dd51b2e5fd947d0975244e1ba155d16c7c7/src/txdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e4037dd51b2e5fd947d0975244e1ba155d16c7c7/src/txdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txdb.cpp?ref=e4037dd51b2e5fd947d0975244e1ba155d16c7c7",
        "patch": "@@ -175,7 +175,7 @@ bool CBlockTreeDB::ReadFlag(const std::string &name, bool &fValue) {\n     return true;\n }\n \n-bool CBlockTreeDB::LoadBlockIndexGuts()\n+bool CBlockTreeDB::LoadBlockIndexGuts(const Consensus::Params& consensusParams)\n {\n     boost::scoped_ptr<CDBIterator> pcursor(NewIterator());\n \n@@ -203,7 +203,8 @@ bool CBlockTreeDB::LoadBlockIndexGuts()\n                 pindexNew->nStatus        = diskindex.nStatus;\n                 pindexNew->nTx            = diskindex.nTx;\n \n-                if (!CheckProofOfWork(pindexNew->GetBlockHash(), pindexNew->nBits, Params().GetConsensus()))\n+                if (!CheckProofOfWork(pindexNew->GetBlockHash(), pindexNew->nBits, consensusParams) &&\n+                    pindexNew->GetBlockHash() != consensusParams.hashGenesisBlock)\n                     return error(\"LoadBlockIndex(): CheckProofOfWork failed: %s\", pindexNew->ToString());\n \n                 pcursor->Next();"
      },
      {
        "sha": "429328f18f4b9460bcb00eca5f9011994fcb2922",
        "filename": "src/txdb.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e4037dd51b2e5fd947d0975244e1ba155d16c7c7/src/txdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e4037dd51b2e5fd947d0975244e1ba155d16c7c7/src/txdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txdb.h?ref=e4037dd51b2e5fd947d0975244e1ba155d16c7c7",
        "patch": "@@ -18,6 +18,7 @@ class CBlockFileInfo;\n class CBlockIndex;\n struct CDiskTxPos;\n class uint256;\n+namespace Consensus { struct Params; }\n \n //! -dbcache default (MiB)\n static const int64_t nDefaultDbCache = 100;\n@@ -59,7 +60,7 @@ class CBlockTreeDB : public CDBWrapper\n     bool WriteTxIndex(const std::vector<std::pair<uint256, CDiskTxPos> > &list);\n     bool WriteFlag(const std::string &name, bool fValue);\n     bool ReadFlag(const std::string &name, bool &fValue);\n-    bool LoadBlockIndexGuts();\n+    bool LoadBlockIndexGuts(const Consensus::Params& consensusParams);\n };\n \n #endif // BITCOIN_TXDB_H"
      }
    ]
  }
]