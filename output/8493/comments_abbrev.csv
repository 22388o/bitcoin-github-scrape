luke-jr,2016-08-29T03:11:21Z,"This API doesn't look C-compatible. Am I missing something?\n\nDislike replacing uint256 with char arrays, but I'm not sure what the best alternative is; is it possible to make uint256 a C-compatible struct?\n",https://github.com/bitcoin/bitcoin/pull/8493#issuecomment-243023178,243023178,
jtimon,2016-08-29T08:17:59Z,I guess a struct or a typedef would work.\n\nWhat do you think is not C compatible? What am I missing?\n,https://github.com/bitcoin/bitcoin/pull/8493#issuecomment-243061188,243061188,
luke-jr,2016-08-29T08:40:29Z,"consensus/consensus.h isn't currently exposed in libconsensus, but namespaces, the & operator, and classes won't work in C. The function also needs to be wrapped in an extern ""C"" block to get the right ABI.\n",https://github.com/bitcoin/bitcoin/pull/8493#issuecomment-243066170,243066170,
jtimon,2016-08-29T09:33:54Z,"consensus/consensus.h is not to be exposed in libconsensus.\nI didn't knew & wasn't C, but that can be trivially changed to pointers.\nI didn't knew namespaces weren't C either. Consensus::Params was a big\nmistake then...talking it out of the namespace is going to be disruptive.\n\nOn Mon, Aug 29, 2016 at 10:41 AM, Luke-Jr notifications@github.com wrote:\n\n> consensus/consensus.h isn't currently",https://github.com/bitcoin/bitcoin/pull/8493#issuecomment-243078471,243078471,
sipa,2016-08-29T09:37:57Z,"Please don't go turn the entire codebase into C just because we want a\nC-capable API.\n\nYou can create a wrapper object in C that just contains a pointer to a\nmalloced Consensus::Params. You could have a\nlibconsensus_params_create(...) function that calls new Consensus::Params()\nand sets some fields in it, and return it cast to a void*. The caller would\nbe required to call libconsensus_param",https://github.com/bitcoin/bitcoin/pull/8493#issuecomment-243079254,243079254,
jtimon,2016-08-29T09:54:08Z,"Yes, or just recreating the struct without the namespace and convert it\ninside the exposed function. We can slowly replace Consensus::Params for\nConsensusParams or whatever later.\nStill, had I known namespaces weren't C, ConsensusParams could have lacked\na namespace from the beginning and this wrapping wouldn't be necessary.\n",https://github.com/bitcoin/bitcoin/pull/8493#issuecomment-243082729,243082729,
sipa,2016-08-29T10:01:20Z,"Yes it would be.\n\nConsensus::Params is a neatly encapsulated C++ class, as it should be. It\nhas private fields and getters, and we're free to change its internal\nrepresentation from time to time (and we have done so many times).\n\nConverting it to a C struct with a stable representation would be an\nincredible burden if we'd want to start adding extra fields. It being in a\nnamespace doesn't ",https://github.com/bitcoin/bitcoin/pull/8493#issuecomment-243084244,243084244,
jtimon,2016-08-30T22:46:54Z,"Yes, there's no other clean way now.\nI still lament not having even followed my own plan of keeping Consensus::Params as C-compatible as possible...by forgetting namespaces (really, thanks @luke-jr for pointing that out).\n\nBut yeah, I've previously discussed with @NicolasDorier that we could wrap all fields in something like struct BlockIndexInterface https://github.com/bitcoin/bitcoin/pull/849",https://github.com/bitcoin/bitcoin/pull/8493#issuecomment-243605750,243605750,
jtimon,2016-08-31T22:40:08Z,"Rebased on top of #8337. For convenience, one can see the changes without the moveonly in: https://github.com/jtimon/bitcoin/compare/0.12.99-consensus-moveonly-header...jtimon:0.13-consensus-header\n\nAs discussed:\n- consensus/params.h is no longer included by script/bitcoinconsensus.h: bitcoinconsensus_create_consensus_parameters and bitcoinconsensus_destroy_consensus_parameters are created inst",https://github.com/bitcoin/bitcoin/pull/8493#issuecomment-243924500,243924500,
jtimon,2016-10-11T17:03:05Z,Added some commits fixing some nits I received on IRC. Didn't squashed in case someone doesn't like the changes.\n,https://github.com/bitcoin/bitcoin/pull/8493#issuecomment-252979185,252979185,
jtimon,2016-10-19T22:23:06Z,"Squashed, should be almost-identical to previous de7a2bb but with a cleaner history.\n\nShort term next steps:\n- Unify consensus/functionptr and consensus/interfaces\n- Create header_verify.h instead of declaring the functions in consensus/consensus.h \n- Pay attention to further feedback\n",https://github.com/bitcoin/bitcoin/pull/8493#issuecomment-254958502,254958502,
jtimon,2016-10-19T22:46:31Z,Unify consensus/functionptr and consensus/interfaces breaks previous da18576\n,https://github.com/bitcoin/bitcoin/pull/8493#issuecomment-254963004,254963004,
jtimon,2016-10-20T01:59:07Z,"More changes on top of 9628c76 : \n- [X] Unify consensus/functionptr and consensus/interfaces\n- [X] Create header_verify.h instead of declaring the functions in consensus/consensus.h\n  Also, rebased and some other minors fixes.\n",https://github.com/bitcoin/bitcoin/pull/8493#issuecomment-254989504,254989504,
jtimon,2016-12-03T07:15:01Z,"Needed rebase after renaming main.o, see #9260\nThe needed rebase was clean modulo fixed nits in #8337 .\n",https://github.com/bitcoin/bitcoin/pull/8493#issuecomment-264622806,264622806,
jtimon,2017-06-19T06:57:22Z,This has been needing rebase for a while. Closing for lack of interest.,https://github.com/bitcoin/bitcoin/pull/8493#issuecomment-309354712,309354712,
jtimon,2016-08-30T22:54:16Z,NACK these two includes here.\n,https://github.com/bitcoin/bitcoin/pull/8493#discussion_r76895077,76895077,src/script/bitcoinconsensus.h
jtimon,2016-12-04T21:28:27Z,CreateCoreIndexInterface() should be only called once. Use a global instead.,https://github.com/bitcoin/bitcoin/pull/8493#discussion_r90786618,90786618,src/consensus/cppwrappers.h
