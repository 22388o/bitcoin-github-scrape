[
  {
    "sha": "4d1767593dd2efbef68b859b6ffeee0f3ca6a997",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0ZDE3Njc1OTNkZDJlZmJlZjY4Yjg1OWI2ZmZlZWUwZjNjYTZhOTk3",
    "commit": {
      "author": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2016-07-13T10:20:16Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2016-12-03T06:14:23Z"
      },
      "message": "MOVEONLY: Header verification to consensus/header_verify.o",
      "tree": {
        "sha": "e8a8b918d91f26cee7b481c542486c7ef5ec0fd7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e8a8b918d91f26cee7b481c542486c7ef5ec0fd7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4d1767593dd2efbef68b859b6ffeee0f3ca6a997",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2\n\niQIcBAABCAAGBQJYQmK/AAoJEIhmwY6hyUSiaZAP/0ReEuX4pKKFQYbIzGP95NJf\ndg981nxfPAUZYJlmIXjDzjnwdFckMdgr4xY8Irn+Z0HUJxzL+Iz5Ea8ZYuEl2vVM\n/BZAnwH6WVVjRX1f8s8CHtpzVhxZwIViXyTr5PopoZraKWBnFzEpP77KNWyaqQFB\nifSghlr/9l7FG5JfD9yb8fDJ0s+NaRbj/nlHNlxoQNBJH1jInNRWAn9Sw1KaIxBL\n5srolBZAZhnDFokDqz9ZymmFmmayAZq1iFvImXFAMfdf5T1T1630/WlCh7n+DVcA\neKgRpuAhBXR7YwY7+NlxH7UltN74v+dO23HLS2NMAN+B/2GH4Xus2pfNmnyIa0Ws\npbZxa7mIx3E7w/EjlaN7/NgGCzc4IklqoQ0OlbBXNlx3kF8bNtbyN3/QoVTDt3zD\n72222inRyO/M2EW6uCZDixV0oZXg1CWUtGhslRyUzaes5AFXFh1STcFEeyzmDYUV\nV8l0oXUhXGSeuV5jU6yzhm1ycRSAJrvThPxS5ccstgbmkDZtxNi7Vam85KOyQYVG\nJEbi2K6jrPmlMNVeYRSwsyZrU8jBbbvmJlxPQCpA1c3bnxI2YB3LHunwjzoczc3p\n4Mun86DO3MpZdv1oxPUQdEl4/LYCG32fmM+pffzAIyOXXFBoactPdHKMoiVh4GWx\ndvM5hyw6YfeQwwdXoEZM\n=Plhr\n-----END PGP SIGNATURE-----",
        "payload": "tree e8a8b918d91f26cee7b481c542486c7ef5ec0fd7\nparent 2efcfa5acfacb958973d9e8125e1d81f102e2dfd\nauthor Jorge Tim\u00f3n <jtimon@jtimon.cc> 1468405216 +0200\ncommitter Jorge Tim\u00f3n <jtimon@jtimon.cc> 1480745663 +0100\n\nMOVEONLY: Header verification to consensus/header_verify.o\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4d1767593dd2efbef68b859b6ffeee0f3ca6a997",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4d1767593dd2efbef68b859b6ffeee0f3ca6a997",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4d1767593dd2efbef68b859b6ffeee0f3ca6a997/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2efcfa5acfacb958973d9e8125e1d81f102e2dfd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2efcfa5acfacb958973d9e8125e1d81f102e2dfd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2efcfa5acfacb958973d9e8125e1d81f102e2dfd"
      }
    ],
    "stats": {
      "total": 111,
      "additions": 74,
      "deletions": 37
    },
    "files": [
      {
        "sha": "7a96da9506c99685792739210de943fbd39f8f50",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4d1767593dd2efbef68b859b6ffeee0f3ca6a997/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4d1767593dd2efbef68b859b6ffeee0f3ca6a997/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=4d1767593dd2efbef68b859b6ffeee0f3ca6a997",
        "patch": "@@ -94,6 +94,7 @@ BITCOIN_CORE_H = \\\n   compat/sanity.h \\\n   compressor.h \\\n   consensus/consensus.h \\\n+  consensus/header_verify.h \\\n   core_io.h \\\n   core_memusage.h \\\n   httprpc.h \\\n@@ -176,6 +177,7 @@ libbitcoin_server_a_SOURCES = \\\n   blockencodings.cpp \\\n   chain.cpp \\\n   checkpoints.cpp \\\n+  consensus/header_verify.cpp \\\n   httprpc.cpp \\\n   httpserver.cpp \\\n   init.cpp \\"
      },
      {
        "sha": "9ab9eea51c3b970fb35ac674a99a8d89fd6981a5",
        "filename": "src/consensus/header_verify.cpp",
        "status": "added",
        "additions": 48,
        "deletions": 0,
        "changes": 48,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4d1767593dd2efbef68b859b6ffeee0f3ca6a997/src/consensus/header_verify.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4d1767593dd2efbef68b859b6ffeee0f3ca6a997/src/consensus/header_verify.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/header_verify.cpp?ref=4d1767593dd2efbef68b859b6ffeee0f3ca6a997",
        "patch": "@@ -0,0 +1,48 @@\n+// Copyright (c) 2016 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"consensus.h\"\n+\n+#include \"pow.h\"\n+#include \"primitives/block.h\"\n+#include \"tinyformat.h\"\n+#include \"validation.h\"\n+\n+// TODO remove the following dependencies\n+#include \"chain.h\"\n+\n+bool CheckBlockHeader(const CBlockHeader& block, CValidationState& state, const Consensus::Params& consensusParams, bool fCheckPOW)\n+{\n+    // Check proof of work matches claimed amount\n+    if (fCheckPOW && !CheckProofOfWork(block.GetHash(), block.nBits, consensusParams))\n+        return state.DoS(50, false, REJECT_INVALID, \"high-hash\", false, \"proof of work failed\");\n+\n+    return true;\n+}\n+\n+bool ContextualCheckBlockHeader(const CBlockHeader& block, CValidationState& state, const Consensus::Params& consensusParams, const CBlockIndex* pindexPrev, int64_t nAdjustedTime)\n+{\n+    const int nHeight = pindexPrev == NULL ? 0 : pindexPrev->nHeight + 1;\n+    // Check proof of work\n+    if (block.nBits != GetNextWorkRequired(pindexPrev, &block, consensusParams))\n+        return state.DoS(100, false, REJECT_INVALID, \"bad-diffbits\", false, \"incorrect proof of work\");\n+\n+    // Check timestamp against prev\n+    if (block.GetBlockTime() <= pindexPrev->GetMedianTimePast())\n+        return state.Invalid(false, REJECT_INVALID, \"time-too-old\", \"block's timestamp is too early\");\n+\n+    // Check timestamp\n+    if (block.GetBlockTime() > nAdjustedTime + 2 * 60 * 60)\n+        return state.Invalid(false, REJECT_INVALID, \"time-too-new\", \"block timestamp too far in the future\");\n+\n+    // Reject outdated version blocks when 95% (75% on testnet) of the network has upgraded:\n+    // check for version 2, 3 and 4 upgrades\n+    if((block.nVersion < 2 && nHeight >= consensusParams.BIP34Height) ||\n+       (block.nVersion < 3 && nHeight >= consensusParams.BIP66Height) ||\n+       (block.nVersion < 4 && nHeight >= consensusParams.BIP65Height))\n+            return state.Invalid(false, REJECT_OBSOLETE, strprintf(\"bad-version(0x%08x)\", block.nVersion),\n+                                 strprintf(\"rejected nVersion=0x%08x block\", block.nVersion));\n+\n+    return true;\n+}"
      },
      {
        "sha": "a3f949def65b47e56827270d783630cb38c366a8",
        "filename": "src/consensus/header_verify.h",
        "status": "added",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4d1767593dd2efbef68b859b6ffeee0f3ca6a997/src/consensus/header_verify.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4d1767593dd2efbef68b859b6ffeee0f3ca6a997/src/consensus/header_verify.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/header_verify.h?ref=4d1767593dd2efbef68b859b6ffeee0f3ca6a997",
        "patch": "@@ -0,0 +1,23 @@\n+// Copyright (c) 2016-2016 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_CONSENSUS_HEADER_VERIFY_H\n+#define BITCOIN_CONSENSUS_HEADER_VERIFY_H\n+\n+#include <stdint.h>\n+\n+class CBlockHeader;\n+class CBlockIndex;\n+class CValidationState;\n+namespace Consensus { struct Params; };\n+\n+/** Context-independent validity checks */\n+bool CheckBlockHeader(const CBlockHeader& block, CValidationState& state, const Consensus::Params& consensusParams, bool fCheckPOW = true);\n+\n+/** Context-dependent validity checks.\n+ *  By \"context\", we mean only the previous block headers, but not the UTXO\n+ *  set; UTXO-related validity checks are done in ConnectBlock(). */\n+bool ContextualCheckBlockHeader(const CBlockHeader& block, CValidationState& state, const Consensus::Params& consensusParams, const CBlockIndex* pindexPrev, int64_t nAdjustedTime);\n+\n+#endif // BITCOIN_CONSENSUS_HEADER_VERIFY_H"
      },
      {
        "sha": "e89d29b47f608e133815ebfc5966a97f6df49a32",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 35,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4d1767593dd2efbef68b859b6ffeee0f3ca6a997/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4d1767593dd2efbef68b859b6ffeee0f3ca6a997/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=4d1767593dd2efbef68b859b6ffeee0f3ca6a997",
        "patch": "@@ -10,6 +10,7 @@\n #include \"checkpoints.h\"\n #include \"checkqueue.h\"\n #include \"consensus/consensus.h\"\n+#include \"consensus/header_verify.h\"\n #include \"consensus/merkle.h\"\n #include \"consensus/validation.h\"\n #include \"hash.h\"\n@@ -2721,15 +2722,6 @@ bool FindUndoPos(CValidationState &state, int nFile, CDiskBlockPos &pos, unsigne\n     return true;\n }\n \n-bool CheckBlockHeader(const CBlockHeader& block, CValidationState& state, const Consensus::Params& consensusParams, bool fCheckPOW)\n-{\n-    // Check proof of work matches claimed amount\n-    if (fCheckPOW && !CheckProofOfWork(block.GetHash(), block.nBits, consensusParams))\n-        return state.DoS(50, false, REJECT_INVALID, \"high-hash\", false, \"proof of work failed\");\n-\n-    return true;\n-}\n-\n bool CheckBlock(const CBlock& block, CValidationState& state, const Consensus::Params& consensusParams, bool fCheckPOW, bool fCheckMerkleRoot)\n {\n     // These are checks that are independent of context.\n@@ -2867,32 +2859,6 @@ std::vector<unsigned char> GenerateCoinbaseCommitment(CBlock& block, const CBloc\n     return commitment;\n }\n \n-bool ContextualCheckBlockHeader(const CBlockHeader& block, CValidationState& state, const Consensus::Params& consensusParams, const CBlockIndex* pindexPrev, int64_t nAdjustedTime)\n-{\n-    const int nHeight = pindexPrev == NULL ? 0 : pindexPrev->nHeight + 1;\n-    // Check proof of work\n-    if (block.nBits != GetNextWorkRequired(pindexPrev, &block, consensusParams))\n-        return state.DoS(100, false, REJECT_INVALID, \"bad-diffbits\", false, \"incorrect proof of work\");\n-\n-    // Check timestamp against prev\n-    if (block.GetBlockTime() <= pindexPrev->GetMedianTimePast())\n-        return state.Invalid(false, REJECT_INVALID, \"time-too-old\", \"block's timestamp is too early\");\n-\n-    // Check timestamp\n-    if (block.GetBlockTime() > nAdjustedTime + 2 * 60 * 60)\n-        return state.Invalid(false, REJECT_INVALID, \"time-too-new\", \"block timestamp too far in the future\");\n-\n-    // Reject outdated version blocks when 95% (75% on testnet) of the network has upgraded:\n-    // check for version 2, 3 and 4 upgrades\n-    if((block.nVersion < 2 && nHeight >= consensusParams.BIP34Height) ||\n-       (block.nVersion < 3 && nHeight >= consensusParams.BIP66Height) ||\n-       (block.nVersion < 4 && nHeight >= consensusParams.BIP65Height))\n-            return state.Invalid(false, REJECT_OBSOLETE, strprintf(\"bad-version(0x%08x)\", block.nVersion),\n-                                 strprintf(\"rejected nVersion=0x%08x block\", block.nVersion));\n-\n-    return true;\n-}\n-\n bool ContextualCheckBlock(const CBlock& block, CValidationState& state, const Consensus::Params& consensusParams, const CBlockIndex* pindexPrev)\n {\n     const int nHeight = pindexPrev == NULL ? 0 : pindexPrev->nHeight + 1;"
      },
      {
        "sha": "2fe38eeb48623ce919adb9e7711d088b410fa5a2",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4d1767593dd2efbef68b859b6ffeee0f3ca6a997/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4d1767593dd2efbef68b859b6ffeee0f3ca6a997/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=4d1767593dd2efbef68b859b6ffeee0f3ca6a997",
        "patch": "@@ -465,13 +465,11 @@ bool ReadBlockFromDisk(CBlock& block, const CBlockIndex* pindex, const Consensus\n /** Functions for validating blocks and updating the block tree */\n \n /** Context-independent validity checks */\n-bool CheckBlockHeader(const CBlockHeader& block, CValidationState& state, const Consensus::Params& consensusParams, bool fCheckPOW = true);\n bool CheckBlock(const CBlock& block, CValidationState& state, const Consensus::Params& consensusParams, bool fCheckPOW = true, bool fCheckMerkleRoot = true);\n \n /** Context-dependent validity checks.\n  *  By \"context\", we mean only the previous block headers, but not the UTXO\n  *  set; UTXO-related validity checks are done in ConnectBlock(). */\n-bool ContextualCheckBlockHeader(const CBlockHeader& block, CValidationState& state, const Consensus::Params& consensusParams, const CBlockIndex* pindexPrev, int64_t nAdjustedTime);\n bool ContextualCheckBlock(const CBlock& block, CValidationState& state, const Consensus::Params& consensusParams, const CBlockIndex* pindexPrev);\n \n /** Apply the effects of this block (with given index) on the UTXO set represented by coins."
      }
    ]
  },
  {
    "sha": "4debc33094ab21dbee0b8eb9f87a210339b44289",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0ZGViYzMzMDk0YWIyMWRiZWUwYjhlYjlmODdhMjEwMzM5YjQ0Mjg5",
    "commit": {
      "author": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2016-09-02T00:33:03Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2016-12-03T06:42:38Z"
      },
      "message": "Consensus: Introduce BlockIndexInterface with CBlockIndex interfaces",
      "tree": {
        "sha": "3c730af5e6379f38fded7ec9d23a9e902ac44f88",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3c730af5e6379f38fded7ec9d23a9e902ac44f88"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4debc33094ab21dbee0b8eb9f87a210339b44289",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2\n\niQIcBAABCAAGBQJYQmleAAoJEIhmwY6hyUSiRoUP/1bMxqz8yN6R2DTiGBbkXP+7\ne+XIiAUVwsWT0KBO2OqA8DhEWBg2w2aWc6/WoCSHFzzCH9qAA5Y8c4IpoKwX2Wuh\n6BhwlREit7n+oeATVGxg1fSZkv/xvpIy9IxZCpjObsKAF6DpI10q+HyE21eo8BpA\nI84vK6lQ/fKO69ZXe44zoLYNu+kLJEq351U+uq/UTbdVl0nZe2L1LHrDpqmcVMFx\nJMfn/ylVwWsLustFYY+EnlzQtY9bc6un89b77cQwjqChLBGDAajPRs056HNbZq11\nIzVyjsSsbM61ErjD8u3d1El/8AEPzR+Vw7gZQfxfqARi8YFlx33nSWKefGf4GX4T\nobw0+EQicoRs4tBYL//rzBDhayuPEGWV9l2b//KKnHbieBCnxzmMO5YqKI1gFWBM\nilBacfzD+3181Ohe2dCycqxVIU95x8jecXtsJ69m6kENZBOjmZKEHp2d45RIFAEj\ngD/jD7B2u2yZoXxjmQRfvXyPXrDCpw7xztNth0Yw7mJURl0pTjCJU6tGYJZWimCg\nrqU2uV9KuHv/N8d1Vbf88yzmNiCVClmq9cSC+tf0LKdEG0jWMua4Jvg7i9GV5N9O\nD1adoyx9yplLu4jH5hg4lBo1R/fZCXjDvqjUpnw5ZTak1VVEReUy4VUVCl02jFBd\nDqqWCkTfU8UxQ2ihIWsB\n=VvQj\n-----END PGP SIGNATURE-----",
        "payload": "tree 3c730af5e6379f38fded7ec9d23a9e902ac44f88\nparent 4d1767593dd2efbef68b859b6ffeee0f3ca6a997\nauthor Jorge Tim\u00f3n <jtimon@jtimon.cc> 1472776383 +0200\ncommitter Jorge Tim\u00f3n <jtimon@jtimon.cc> 1480747358 +0100\n\nConsensus: Introduce BlockIndexInterface with CBlockIndex interfaces\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4debc33094ab21dbee0b8eb9f87a210339b44289",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4debc33094ab21dbee0b8eb9f87a210339b44289",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4debc33094ab21dbee0b8eb9f87a210339b44289/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4d1767593dd2efbef68b859b6ffeee0f3ca6a997",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4d1767593dd2efbef68b859b6ffeee0f3ca6a997",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4d1767593dd2efbef68b859b6ffeee0f3ca6a997"
      }
    ],
    "stats": {
      "total": 68,
      "additions": 68,
      "deletions": 0
    },
    "files": [
      {
        "sha": "f6e048e9f8b6592e80689b626d4ad82455baf41f",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4debc33094ab21dbee0b8eb9f87a210339b44289/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4debc33094ab21dbee0b8eb9f87a210339b44289/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=4debc33094ab21dbee0b8eb9f87a210339b44289",
        "patch": "@@ -260,6 +260,7 @@ libbitcoin_consensus_a_SOURCES = \\\n   amount.h \\\n   arith_uint256.cpp \\\n   arith_uint256.h \\\n+  consensus/interfaces.h \\\n   consensus/merkle.cpp \\\n   consensus/merkle.h \\\n   consensus/params.h \\"
      },
      {
        "sha": "4f4f58aeafb80c7b75c9de99592f5f4d3343a733",
        "filename": "src/consensus/interfaces.h",
        "status": "added",
        "additions": 67,
        "deletions": 0,
        "changes": 67,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4debc33094ab21dbee0b8eb9f87a210339b44289/src/consensus/interfaces.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4debc33094ab21dbee0b8eb9f87a210339b44289/src/consensus/interfaces.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/interfaces.h?ref=4debc33094ab21dbee0b8eb9f87a210339b44289",
        "patch": "@@ -0,0 +1,67 @@\n+// Copyright (c) 2016-2016 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_CONSENSUS_INTERFACES_H\n+#define BITCOIN_CONSENSUS_INTERFACES_H\n+\n+#include <stdint.h>\n+\n+typedef const unsigned char* (*GetHashFn)(const void* indexObject);\n+typedef const void* (*GetAncestorFn)(const void* indexObject, int64_t height);\n+typedef int64_t (*GetHeightFn)(const void* indexObject);\n+typedef int32_t (*GetVersionFn)(const void* indexObject);\n+typedef uint32_t (*GetTimeFn)(const void* indexObject);\n+typedef uint32_t (*GetBitsFn)(const void* indexObject);\n+\n+// Potential optimizations:\n+\n+/**\n+ * Some implementations may chose to store a pointer to the previous\n+ * block instead of calling AncestorFn, trading memory for\n+ * validation speed.\n+ */\n+typedef const void* (*GetPrevFn)(const void* indexObject);\n+/**\n+ * Some implementations may chose to cache the Median Time Past.\n+ */\n+typedef int64_t (*GetMedianTimeFn)(const void* indexObject);\n+/**\n+ * While not using this, it is assumed that the caller - who is\n+ * responsible for all the new allocations - will free all the memory\n+ * (or not) of the things that have been newly created in memory (or\n+ * not) after the call to the exposed libbitcoinconsenus function.\n+ * This function is mostly here to document the fact that some storage\n+ * optimizations are only possible if there's a fast signaling from\n+ * libbitcoinconsenus when data resources that have been asked for as\n+ * part of the validation are no longer needed. \n+ */\n+typedef void (*IndexDeallocatorFn)(void* indexObject);\n+\n+\n+/**\n+ * Collection of function pointers to interface with block index storage.\n+ */\n+struct BlockIndexInterface\n+{\n+    GetHashFn GetHash;\n+    GetAncestorFn GetAncestor;\n+    GetHeightFn GetHeight;\n+    GetVersionFn GetVersion;\n+    GetTimeFn GetTime;\n+    GetBitsFn GetBits;\n+    /**\n+     * Just for optimization: If this is set to NULL, Ancestor() and\n+     * Height() will be called instead.\n+     */\n+    GetPrevFn GetPrev;\n+    /**\n+     * Just for optimization: If this is set to NULL, Prev() and\n+     * Time() will be called instead.\n+     */\n+    GetMedianTimeFn GetMedianTime;\n+    //! TODO This is mostly here for discussion, but not used yet.\n+    IndexDeallocatorFn DeleteIndex;\n+};\n+\n+#endif // BITCOIN_CONSENSUS_INTERFACES_H"
      }
    ]
  },
  {
    "sha": "5f3937b3f1d2878fac6e48780ddc416181ddb075",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ZjM5MzdiM2YxZDI4NzhmYWM2ZTQ4NzgwZGRjNDE2MTgxZGRiMDc1",
    "commit": {
      "author": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2016-08-09T19:47:21Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2016-12-03T06:44:32Z"
      },
      "message": "Consensus: hack-ish: Introduce in base_blob<>: GetDataArray and explicit constructor from char*",
      "tree": {
        "sha": "7ad2f9cc40febfc3065009f5c6fa22d109788ec7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7ad2f9cc40febfc3065009f5c6fa22d109788ec7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5f3937b3f1d2878fac6e48780ddc416181ddb075",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2\n\niQIcBAABCAAGBQJYQmnQAAoJEIhmwY6hyUSibt4P/27uUZ1kZCQIY8XeYJsOdrwp\n1nhZAxgqBvjb3rUv74HDPyWaZWUbnCBSb3x9fFUGo7iSjt2LColgkRRMaB01RPcJ\nUtXbygaZqLVlpd1yVhsPnv1CzS2RKTSRIkXKu3e2oPGe1BYcLGQL2gQi28e50Z1l\nt/GMeH+0iXhwzqOBqrszCdNhaNFGBUHuFA80B3hg5x5Vh0NOym5KXRP8gC3lj6wA\njd6H+a72n7gY5/oTzvGKboThvRjOpVUcIPcCnKD8KuGjkQ1G36M2FtWOCeYH14iv\nCVXaplv/BgoHUpGrnR8qo/raIzINLS6e1DtPQDvE8X8KTMYAUoWJY50yzoXb1F94\nqO0BGPVUfNgfPT3xVcUXRurX9qTpJIBfMpjQ7bvpUG5CU2jfSnYczuDEoz7RivwI\nTUDkq5LSNoa9Db6eD+euUa0UNYAfttdmQfCX0YSezKztp6IFaZOTRl8jnTRnucM4\n9VUEZfosqyhlH7pqF2zP02Swt7ywRVWKjm1+H59rlRH7/VxEHLCRYeHBqJyAMvU9\ne9eOV9x+6jQATbfA4wUrWHcDIaq4RnyTopbPS27GtksDZuma9Gzsj2J1LifLpsH3\njiJmECg6hAcC85mgNk585LgjyKAfmuBcrHq6yF/MJWFhyYhnKojXzealAQmU4Nbf\nTQCLWbkkuDshAbl3XPP5\n=W7Mq\n-----END PGP SIGNATURE-----",
        "payload": "tree 7ad2f9cc40febfc3065009f5c6fa22d109788ec7\nparent 4debc33094ab21dbee0b8eb9f87a210339b44289\nauthor Jorge Tim\u00f3n <jtimon@jtimon.cc> 1470772041 +0200\ncommitter Jorge Tim\u00f3n <jtimon@jtimon.cc> 1480747472 +0100\n\nConsensus: hack-ish: Introduce in base_blob<>: GetDataArray and explicit constructor from char*\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5f3937b3f1d2878fac6e48780ddc416181ddb075",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5f3937b3f1d2878fac6e48780ddc416181ddb075",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5f3937b3f1d2878fac6e48780ddc416181ddb075/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4debc33094ab21dbee0b8eb9f87a210339b44289",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4debc33094ab21dbee0b8eb9f87a210339b44289",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4debc33094ab21dbee0b8eb9f87a210339b44289"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 9,
      "deletions": 0
    },
    "files": [
      {
        "sha": "ffc7ac8043aaf62e7d75e9df495503d44a82766b",
        "filename": "src/uint256.h",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5f3937b3f1d2878fac6e48780ddc416181ddb075/src/uint256.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5f3937b3f1d2878fac6e48780ddc416181ddb075/src/uint256.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/uint256.h?ref=5f3937b3f1d2878fac6e48780ddc416181ddb075",
        "patch": "@@ -42,6 +42,11 @@ class base_blob\n         memset(data, 0, sizeof(data));\n     }\n \n+    const unsigned char* GetDataArray()\n+    {\n+        return data;\n+    }\n+\n     inline int Compare(const base_blob& other) const { return memcmp(data, other.data, sizeof(data)); }\n \n     friend inline bool operator==(const base_blob& a, const base_blob& b) { return a.Compare(b) == 0; }\n@@ -125,6 +130,10 @@ class uint256 : public base_blob<256> {\n     uint256() {}\n     uint256(const base_blob<256>& b) : base_blob<256>(b) {}\n     explicit uint256(const std::vector<unsigned char>& vch) : base_blob<256>(vch) {}\n+    explicit uint256(const unsigned char* arrayData) : base_blob<256>()\n+    {\n+        std::memcpy(data, arrayData, WIDTH);\n+    }\n \n     /** A cheap hash function that just returns 64 bits from the result, it can be\n      * used when the contents are considered uniformly random. It is not appropriate"
      }
    ]
  },
  {
    "sha": "232ca3bbace7a203940613308ef9df206d4953ed",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyMzJjYTNiYmFjZTdhMjAzOTQwNjEzMzA4ZWY5ZGYyMDZkNDk1M2Vk",
    "commit": {
      "author": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2016-08-06T03:07:49Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2016-12-03T06:45:52Z"
      },
      "message": "Consensus: Introduce CoreIndexInterface implementation for BlockIndexInterface\n\n...that simply wraps CBlockIndex",
      "tree": {
        "sha": "d91a3d5fe5b4a76b7112badf617733063a0fa1f6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d91a3d5fe5b4a76b7112badf617733063a0fa1f6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/232ca3bbace7a203940613308ef9df206d4953ed",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2\n\niQIcBAABCAAGBQJYQmogAAoJEIhmwY6hyUSiIzgP/jLcAtfkQ9jyiIQH7F/Nt0Lz\n0Fwwl5pBdBiG7plQQleKQ/HzQ/SuTvGiwHMqHx3+n5/blTsrTWrVVka8YCIGOM9b\nFfBgXzE3Bc40WnYDAW5Z7dJpuMRtFKrxMx6pqaBDz9IsU3RMjOQvCqID7FhDEf3c\ntwJ6phOfh5wnHMQfE/h2LmGwje/XZE9T8MQgyBJka9vYRrtx3PNHer5AugaziB+x\nP0G5b3NQzNFWcVfw1Vw/AFBSNtdVTY17p36H85K/IdLOgkcTZYKlRpI9YnEsL843\n/N/SWOdDOQ1MOKqemTwUqhknMqPXGMG4DRlpbhE7Utw/sTfQOVdXcCEOO6mnWmxw\nJS1yh6uBJODst0iFD4UxaoZGscnGgPWTXnU78jOyUVMoaRks9enrPD++GZdqnnNg\nCb8EB1kKhEAU8gnAPvONUXEBtfKj8PSFJS4ejkk6MgvVPLLppv0bdsZln4VYO0Mc\neVsK1at154cDG5PXII1CuX69gkAaFBxmqJKRagWoV4HB3GhECVnYXEcLQ+QWV/kM\ngmraiPBxaEe5gKAvUxEcHb4IJIB+e4yHq7IrQqG82o5FRe+nZGxG93uHaKDawoTO\n7mxF3N/ap1U5XsRVoekPUYzc8ssJqC+FVi4kjNIJM4SATUc+9JzHpieCi0qWROGo\niVmn+iMqy4GOiI/x76dP\n=76Er\n-----END PGP SIGNATURE-----",
        "payload": "tree d91a3d5fe5b4a76b7112badf617733063a0fa1f6\nparent 5f3937b3f1d2878fac6e48780ddc416181ddb075\nauthor Jorge Tim\u00f3n <jtimon@jtimon.cc> 1470452869 +0200\ncommitter Jorge Tim\u00f3n <jtimon@jtimon.cc> 1480747552 +0100\n\nConsensus: Introduce CoreIndexInterface implementation for BlockIndexInterface\n\n...that simply wraps CBlockIndex\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/232ca3bbace7a203940613308ef9df206d4953ed",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/232ca3bbace7a203940613308ef9df206d4953ed",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/232ca3bbace7a203940613308ef9df206d4953ed/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5f3937b3f1d2878fac6e48780ddc416181ddb075",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5f3937b3f1d2878fac6e48780ddc416181ddb075",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5f3937b3f1d2878fac6e48780ddc416181ddb075"
      }
    ],
    "stats": {
      "total": 72,
      "additions": 72,
      "deletions": 0
    },
    "files": [
      {
        "sha": "2cd942dc4f143c049417e8af0619ab46b487526e",
        "filename": "src/chain.cpp",
        "status": "modified",
        "additions": 65,
        "deletions": 0,
        "changes": 65,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/232ca3bbace7a203940613308ef9df206d4953ed/src/chain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/232ca3bbace7a203940613308ef9df206d4953ed/src/chain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chain.cpp?ref=232ca3bbace7a203940613308ef9df206d4953ed",
        "patch": "@@ -5,6 +5,8 @@\n \n #include \"chain.h\"\n \n+#include \"consensus/interfaces.h\"\n+\n using namespace std;\n \n /**\n@@ -150,3 +152,66 @@ int64_t GetBlockProofEquivalentTime(const CBlockIndex& to, const CBlockIndex& fr\n     }\n     return sign * r.GetLow64();\n }\n+\n+// Interface translators: from CPP to C\n+\n+namespace {\n+static inline const CBlockIndex* GetImpl(const void* indexObject) \n+{\n+    return (const CBlockIndex*)indexObject;\n+}\n+\n+static const void* GetAncestorImpl(const void* indexObject, const int64_t height)\n+{\n+    return GetImpl(indexObject)->GetAncestor(height);\n+}\n+static const unsigned char* GetHashImpl(const void* indexObject)\n+{\n+    return GetImpl(indexObject)->GetBlockHash().GetDataArray();\n+}\n+static int64_t GetHeightImpl(const void* indexObject)\n+{\n+    return GetImpl(indexObject)->nHeight;\n+}\n+static int32_t GetVersionImpl(const void* indexObject)\n+{\n+    return GetImpl(indexObject)->nVersion;\n+}\n+static uint32_t GetTimeImpl(const void* indexObject)\n+{\n+    return GetImpl(indexObject)->nTime;\n+}\n+static uint32_t GetBitsImpl(const void* indexObject)\n+{\n+    return GetImpl(indexObject)->nBits;\n+}\n+inline const void* GetPrevImpl(const void* indexObject)\n+{\n+    return GetImpl(indexObject)->pprev;\n+}\n+inline int64_t GetMedianTimeImpl(const void* indexObject)\n+{\n+    return GetImpl(indexObject)->GetMedianTimePast();\n+}\n+static void IndexDeallocatorImpl(void* indexObject)\n+{\n+    // Bitcoin Core keeps the index in memory: Don't free anything. \n+}\n+} // Anonymous namespace \n+\n+BlockIndexInterface CreateCoreIndexInterface()\n+{\n+    BlockIndexInterface intexInt;\n+\n+    intexInt.GetAncestor = GetAncestorImpl;\n+    intexInt.GetHash = GetHashImpl;\n+    intexInt.GetHeight = GetHeightImpl;\n+    intexInt.GetVersion = GetVersionImpl;\n+    intexInt.GetTime = GetTimeImpl;\n+    intexInt.GetBits = GetBitsImpl;\n+    intexInt.GetPrev = GetPrevImpl;\n+    intexInt.GetMedianTime = GetMedianTimeImpl;\n+    intexInt.DeleteIndex = IndexDeallocatorImpl;\n+\n+    return intexInt;\n+}"
      },
      {
        "sha": "14cf8fd1b2d2e9aab5d801ddae6533db2233add9",
        "filename": "src/chain.h",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/232ca3bbace7a203940613308ef9df206d4953ed/src/chain.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/232ca3bbace7a203940613308ef9df206d4953ed/src/chain.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chain.h?ref=232ca3bbace7a203940613308ef9df206d4953ed",
        "patch": "@@ -14,6 +14,8 @@\n \n #include <vector>\n \n+class BlockIndexInterface;\n+\n class CBlockFileInfo\n {\n public:\n@@ -340,6 +342,11 @@ arith_uint256 GetBlockProof(const CBlockIndex& block);\n /** Return the time it would take to redo the work difference between from and to, assuming the current hashrate corresponds to the difficulty at tip, in seconds. */\n int64_t GetBlockProofEquivalentTime(const CBlockIndex& to, const CBlockIndex& from, const CBlockIndex& tip, const Consensus::Params&);\n \n+/**\n+ * Bitcoin Core implementation of BlockIndexInterface.\n+ */\n+BlockIndexInterface CreateCoreIndexInterface();\n+\n /** Used to marshal pointers into hashes for db storage. */\n class CDiskBlockIndex : public CBlockIndex\n {"
      }
    ]
  },
  {
    "sha": "1bd9c742cf5db9908db4937656514f0a19b7fb7c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxYmQ5Yzc0MmNmNWRiOTkwOGRiNDkzNzY1NjUxNGYwYTE5YjdmYjdj",
    "commit": {
      "author": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2016-08-06T01:04:08Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2016-12-03T06:51:28Z"
      },
      "message": "Consensus: Artificial: Introduce wrapper for header_verify and pow:\n\n- GetNextWorkRequired\n- CalculateNextWorkRequired\n- ContextualCheckBlockHeader\n\nthey depend on CBlockIndex, but libconsensus can't",
      "tree": {
        "sha": "413fbeffaebf362bbc3f7f8735162cb7eafbd583",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/413fbeffaebf362bbc3f7f8735162cb7eafbd583"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1bd9c742cf5db9908db4937656514f0a19b7fb7c",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2\n\niQIcBAABCAAGBQJYQmt1AAoJEIhmwY6hyUSifs8P/2bEpK7WNd0wpQyibO2si7CA\ni0d2f6ghNUMHM1bXOKtpmySPMHHmFSxPJxi9usGkUuz6lzF2yQ/bpBlQwRs7tScd\nBST+8hJVjtQ/PEN4cIgfppxR8bFv2xzC0cKxpaqeOafajnSJzA3QdQddsD26vLBB\nzBcw4ObZs7db0i4zuR48IkMVWFEcwtgbfwscO05JlEhhIjKhiAHdmreyenkLrdFZ\n1vPyEMpiakBH3lheNRmJQShGwtrUKSBhPyX09jzR/VjzHLVkihvalNwF4yS0rsyd\nKJPDRGgYHFSv8ymwW/osuXZk1Ov++LkiMIX01qfum1pfG/p5Ts5Qln9f2CKkqmMA\nMpM789e/If5fR59MrETB6xSPRcl1QhjSebVGaJCxTZpxAaHWZQopjC4McDc5/6l4\n62kTUtMliqIQxYs0U7ks/FbQMEqxhNWh6mBVL3wFBGQjycYev29GcWbPH5T1i9jV\nPCCbf4i6+3Ap/nzfyzsGtz8BWcVmCQJDV770Hai9D96kAoECSDkqldfqmxCUQmhT\nkFeXQa3s2SIwFyuy9FdhwLV1GzMtymqqBoUVrTCkhmn0c4axR022DK6XcmLjPVTM\nP3LYAufsXKgGO0mIQZLpaxvArSDwfns/UNkMkxZ5yhNXbrHzFEQ3y+G87VgBXw07\nsVoB7V6h+2hh6YTlVIPe\n=tefa\n-----END PGP SIGNATURE-----",
        "payload": "tree 413fbeffaebf362bbc3f7f8735162cb7eafbd583\nparent 232ca3bbace7a203940613308ef9df206d4953ed\nauthor Jorge Tim\u00f3n <jtimon@jtimon.cc> 1470445448 +0200\ncommitter Jorge Tim\u00f3n <jtimon@jtimon.cc> 1480747888 +0100\n\nConsensus: Artificial: Introduce wrapper for header_verify and pow:\n\n- GetNextWorkRequired\n- CalculateNextWorkRequired\n- ContextualCheckBlockHeader\n\nthey depend on CBlockIndex, but libconsensus can't\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1bd9c742cf5db9908db4937656514f0a19b7fb7c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1bd9c742cf5db9908db4937656514f0a19b7fb7c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1bd9c742cf5db9908db4937656514f0a19b7fb7c/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "232ca3bbace7a203940613308ef9df206d4953ed",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/232ca3bbace7a203940613308ef9df206d4953ed",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/232ca3bbace7a203940613308ef9df206d4953ed"
      }
    ],
    "stats": {
      "total": 53,
      "additions": 45,
      "deletions": 8
    },
    "files": [
      {
        "sha": "8c84b474e5ebbd1aa70922de37595185b49fc461",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1bd9c742cf5db9908db4937656514f0a19b7fb7c/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1bd9c742cf5db9908db4937656514f0a19b7fb7c/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=1bd9c742cf5db9908db4937656514f0a19b7fb7c",
        "patch": "@@ -94,6 +94,7 @@ BITCOIN_CORE_H = \\\n   compat/sanity.h \\\n   compressor.h \\\n   consensus/consensus.h \\\n+  consensus/cppwrappers.h \\\n   consensus/header_verify.h \\\n   core_io.h \\\n   core_memusage.h \\"
      },
      {
        "sha": "1ff39b2c30f4828a558770e4fb7040cb47a8b215",
        "filename": "src/consensus/cppwrappers.h",
        "status": "added",
        "additions": 33,
        "deletions": 0,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1bd9c742cf5db9908db4937656514f0a19b7fb7c/src/consensus/cppwrappers.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1bd9c742cf5db9908db4937656514f0a19b7fb7c/src/consensus/cppwrappers.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/cppwrappers.h?ref=1bd9c742cf5db9908db4937656514f0a19b7fb7c",
        "patch": "@@ -0,0 +1,33 @@\n+// Copyright (c) 2009-2016 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_CONSENSUS_CPPWRAPPERS_H\n+#define BITCOIN_CONSENSUS_CPPWRAPPERS_H\n+\n+#include \"header_verify.h\"\n+#include \"pow.h\"\n+\n+#include <stdint.h>\n+\n+class CBlockHeader;\n+class CBlockIndex;\n+class CValidationState;\n+namespace Consensus { struct Params; };\n+\n+inline unsigned int GetNextWorkRequired(const CBlockIndex* pindexLast, const CBlockHeader *pblock, const Consensus::Params& consensusParams)\n+{\n+    return PowGetNextWorkRequired(pindexLast, pblock, consensusParams);\n+}\n+\n+inline unsigned int CalculateNextWorkRequired(const CBlockIndex* pindexLast, int64_t nFirstBlockTime, const Consensus::Params& consensusParams)\n+{\n+    return PowCalculateNextWorkRequired(pindexLast, nFirstBlockTime, consensusParams);\n+}\n+\n+inline bool ContextualCheckBlockHeader(const CBlockHeader& block, CValidationState& state, const Consensus::Params& consensusParams, const CBlockIndex* pindexPrev, int64_t nAdjustedTime)\n+{\n+    return ContextualCheckHeader(block, state, consensusParams, pindexPrev, nAdjustedTime);\n+}\n+\n+#endif // BITCOIN_CONSENSUS_CPPWRAPPERS_H"
      },
      {
        "sha": "a39422e55715c9e20358ec4fb8bc5afc6b1df525",
        "filename": "src/consensus/header_verify.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1bd9c742cf5db9908db4937656514f0a19b7fb7c/src/consensus/header_verify.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1bd9c742cf5db9908db4937656514f0a19b7fb7c/src/consensus/header_verify.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/header_verify.cpp?ref=1bd9c742cf5db9908db4937656514f0a19b7fb7c",
        "patch": "@@ -21,11 +21,11 @@ bool CheckBlockHeader(const CBlockHeader& block, CValidationState& state, const\n     return true;\n }\n \n-bool ContextualCheckBlockHeader(const CBlockHeader& block, CValidationState& state, const Consensus::Params& consensusParams, const CBlockIndex* pindexPrev, int64_t nAdjustedTime)\n+bool ContextualCheckHeader(const CBlockHeader& block, CValidationState& state, const Consensus::Params& consensusParams, const CBlockIndex* pindexPrev, int64_t nAdjustedTime)\n {\n     const int nHeight = pindexPrev == NULL ? 0 : pindexPrev->nHeight + 1;\n     // Check proof of work\n-    if (block.nBits != GetNextWorkRequired(pindexPrev, &block, consensusParams))\n+    if (block.nBits != PowGetNextWorkRequired(pindexPrev, &block, consensusParams))\n         return state.DoS(100, false, REJECT_INVALID, \"bad-diffbits\", false, \"incorrect proof of work\");\n \n     // Check timestamp against prev"
      },
      {
        "sha": "ee1cbdde46212178f26fa80f9105654f0de6c090",
        "filename": "src/consensus/header_verify.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1bd9c742cf5db9908db4937656514f0a19b7fb7c/src/consensus/header_verify.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1bd9c742cf5db9908db4937656514f0a19b7fb7c/src/consensus/header_verify.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/header_verify.h?ref=1bd9c742cf5db9908db4937656514f0a19b7fb7c",
        "patch": "@@ -18,6 +18,6 @@ bool CheckBlockHeader(const CBlockHeader& block, CValidationState& state, const\n /** Context-dependent validity checks.\n  *  By \"context\", we mean only the previous block headers, but not the UTXO\n  *  set; UTXO-related validity checks are done in ConnectBlock(). */\n-bool ContextualCheckBlockHeader(const CBlockHeader& block, CValidationState& state, const Consensus::Params& consensusParams, const CBlockIndex* pindexPrev, int64_t nAdjustedTime);\n+bool ContextualCheckHeader(const CBlockHeader& block, CValidationState& state, const Consensus::Params& consensusParams, const CBlockIndex* pindexPrev, int64_t nAdjustedTime);\n \n #endif // BITCOIN_CONSENSUS_HEADER_VERIFY_H"
      },
      {
        "sha": "d0b45d5c57ec47a1a5a9e92547723452e04a1cdb",
        "filename": "src/miner.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1bd9c742cf5db9908db4937656514f0a19b7fb7c/src/miner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1bd9c742cf5db9908db4937656514f0a19b7fb7c/src/miner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.cpp?ref=1bd9c742cf5db9908db4937656514f0a19b7fb7c",
        "patch": "@@ -10,6 +10,7 @@\n #include \"chainparams.h\"\n #include \"coins.h\"\n #include \"consensus/consensus.h\"\n+#include \"consensus/cppwrappers.h\"\n #include \"consensus/merkle.h\"\n #include \"consensus/validation.h\"\n #include \"hash.h\""
      },
      {
        "sha": "527d13b936da16e91ae0dd86522f835a9c29df40",
        "filename": "src/pow.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1bd9c742cf5db9908db4937656514f0a19b7fb7c/src/pow.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1bd9c742cf5db9908db4937656514f0a19b7fb7c/src/pow.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/pow.cpp?ref=1bd9c742cf5db9908db4937656514f0a19b7fb7c",
        "patch": "@@ -10,7 +10,7 @@\n #include \"primitives/block.h\"\n #include \"uint256.h\"\n \n-unsigned int GetNextWorkRequired(const CBlockIndex* pindexLast, const CBlockHeader *pblock, const Consensus::Params& params)\n+unsigned int PowGetNextWorkRequired(const CBlockIndex* pindexLast, const CBlockHeader *pblock, const Consensus::Params& params)\n {\n     unsigned int nProofOfWorkLimit = UintToArith256(params.powLimit).GetCompact();\n \n@@ -46,10 +46,10 @@ unsigned int GetNextWorkRequired(const CBlockIndex* pindexLast, const CBlockHead\n     const CBlockIndex* pindexFirst = pindexLast->GetAncestor(nHeightFirst);\n     assert(pindexFirst);\n \n-    return CalculateNextWorkRequired(pindexLast, pindexFirst->GetBlockTime(), params);\n+    return PowCalculateNextWorkRequired(pindexLast, pindexFirst->GetBlockTime(), params);\n }\n \n-unsigned int CalculateNextWorkRequired(const CBlockIndex* pindexLast, int64_t nFirstBlockTime, const Consensus::Params& params)\n+unsigned int PowCalculateNextWorkRequired(const CBlockIndex* pindexLast, int64_t nFirstBlockTime, const Consensus::Params& params)\n {\n     if (params.fPowNoRetargeting)\n         return pindexLast->nBits;"
      },
      {
        "sha": "ebe123aad572e9ff1b952352afd05fe31771e4b6",
        "filename": "src/pow.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1bd9c742cf5db9908db4937656514f0a19b7fb7c/src/pow.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1bd9c742cf5db9908db4937656514f0a19b7fb7c/src/pow.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/pow.h?ref=1bd9c742cf5db9908db4937656514f0a19b7fb7c",
        "patch": "@@ -14,8 +14,8 @@ class CBlockHeader;\n class CBlockIndex;\n class uint256;\n \n-unsigned int GetNextWorkRequired(const CBlockIndex* pindexLast, const CBlockHeader *pblock, const Consensus::Params&);\n-unsigned int CalculateNextWorkRequired(const CBlockIndex* pindexLast, int64_t nFirstBlockTime, const Consensus::Params&);\n+unsigned int PowGetNextWorkRequired(const CBlockIndex* pindexLast, const CBlockHeader *pblock, const Consensus::Params&);\n+unsigned int PowCalculateNextWorkRequired(const CBlockIndex* pindexLast, int64_t nFirstBlockTime, const Consensus::Params&);\n \n /** Check whether a block hash satisfies the proof-of-work requirement specified by nBits */\n bool CheckProofOfWork(uint256 hash, unsigned int nBits, const Consensus::Params&);"
      },
      {
        "sha": "8adef89af8a4e27d0a1df94b187c994048a1ddaf",
        "filename": "src/test/pow_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1bd9c742cf5db9908db4937656514f0a19b7fb7c/src/test/pow_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1bd9c742cf5db9908db4937656514f0a19b7fb7c/src/test/pow_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/pow_tests.cpp?ref=1bd9c742cf5db9908db4937656514f0a19b7fb7c",
        "patch": "@@ -4,6 +4,7 @@\n \n #include \"chain.h\"\n #include \"chainparams.h\"\n+#include \"consensus/cppwrappers.h\"\n #include \"pow.h\"\n #include \"random.h\"\n #include \"util.h\""
      },
      {
        "sha": "f00a34247a6e24cee64306c15494dda9858f5e47",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1bd9c742cf5db9908db4937656514f0a19b7fb7c/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1bd9c742cf5db9908db4937656514f0a19b7fb7c/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=1bd9c742cf5db9908db4937656514f0a19b7fb7c",
        "patch": "@@ -10,6 +10,7 @@\n #include \"checkpoints.h\"\n #include \"checkqueue.h\"\n #include \"consensus/consensus.h\"\n+#include \"consensus/cppwrappers.h\"\n #include \"consensus/header_verify.h\"\n #include \"consensus/merkle.h\"\n #include \"consensus/validation.h\""
      }
    ]
  },
  {
    "sha": "0a1ff996c5db5265742e3e90f3690a0b8d9cf045",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowYTFmZjk5NmM1ZGI1MjY1NzQyZTNlOTBmMzY5MGEwYjhkOWNmMDQ1",
    "commit": {
      "author": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2016-08-06T03:20:18Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2016-12-03T06:51:34Z"
      },
      "message": "Consensus: Disruption: Decouple pow.o and header_verify.cpp from chain.h and CBlockIndex\n\nAlso Build pow.o and consensus/header_verify.cpp within libconsensus",
      "tree": {
        "sha": "c7bef148fdbdebc74c7740922b54380f9c2fc919",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c7bef148fdbdebc74c7740922b54380f9c2fc919"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0a1ff996c5db5265742e3e90f3690a0b8d9cf045",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2\n\niQIcBAABCAAGBQJYQmt2AAoJEIhmwY6hyUSi0GIP/jyNaoHd/bHKy4AkI63VIlvP\noWp9y4FInU2W8rDf408jeVenDnpxcbO1vK+J9KbHRiUun9eqiDeZ4KYCdqoA23gi\nI1cM1RXi7dZ+dKBOqOTue6g2Suj0z1cnEwhl4a6zJlGrHEA5rJeYUwoVcIjQ0sGd\nMA+EM+y1yjRraKVLndPpgsOkX0RUdPoc8dCf88GeBYyLyiGviPoc2RKQ87ORbi1N\nmb9T1H1cNxHP1BERgIeVgCm8F0Bri+AHgh6VPrt+V0LkWH05poH7LZ1qZaWDR0je\nIq/EVTwrxZQ6U/OOf3T/o6tWNoIDQO4/NQFDs9EuPc2GKZKgiLKSLdi3TwjGY7B7\nbuTl9jeMSqmhBhA0eHAAIHPXhSg/Bt92pBukg/J2z88QWVRgR1AWEPLacuntpGjc\n28FX1R7rQw14ZeRoEaQGCSC434I9N2N9rdeH5cks6Ka2WIwYvU+wUbbJ5wZNerxo\nn9a9n0cGfGA6JyXdOwCxDdTqNOEnjABs5DFU6bV/Ep9cyYVfvg4WJwxz2uPvFhRk\ngS/eYWZi3NnMpBXAfa7Yc8l4PZDhhY3ThG6Bx/SjiTF2y/r1R9qzBLXl9F5+B52Q\nXq9hJed//+N/1asQbQYEuaY/yUQ85Cst2NJzgW2X1nY1QLvVhVjzumXfVB0AiYBd\naq3pLCQv8AE6xAzS6EdS\n=Cxf6\n-----END PGP SIGNATURE-----",
        "payload": "tree c7bef148fdbdebc74c7740922b54380f9c2fc919\nparent 1bd9c742cf5db9908db4937656514f0a19b7fb7c\nauthor Jorge Tim\u00f3n <jtimon@jtimon.cc> 1470453618 +0200\ncommitter Jorge Tim\u00f3n <jtimon@jtimon.cc> 1480747894 +0100\n\nConsensus: Disruption: Decouple pow.o and header_verify.cpp from chain.h and CBlockIndex\n\nAlso Build pow.o and consensus/header_verify.cpp within libconsensus\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0a1ff996c5db5265742e3e90f3690a0b8d9cf045",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0a1ff996c5db5265742e3e90f3690a0b8d9cf045",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0a1ff996c5db5265742e3e90f3690a0b8d9cf045/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1bd9c742cf5db9908db4937656514f0a19b7fb7c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1bd9c742cf5db9908db4937656514f0a19b7fb7c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1bd9c742cf5db9908db4937656514f0a19b7fb7c"
      }
    ],
    "stats": {
      "total": 70,
      "additions": 36,
      "deletions": 34
    },
    "files": [
      {
        "sha": "413ceb17c6314ce47e57a6fd6652c7b6f4cccad0",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0a1ff996c5db5265742e3e90f3690a0b8d9cf045/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0a1ff996c5db5265742e3e90f3690a0b8d9cf045/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=0a1ff996c5db5265742e3e90f3690a0b8d9cf045",
        "patch": "@@ -93,9 +93,7 @@ BITCOIN_CORE_H = \\\n   compat/endian.h \\\n   compat/sanity.h \\\n   compressor.h \\\n-  consensus/consensus.h \\\n   consensus/cppwrappers.h \\\n-  consensus/header_verify.h \\\n   core_io.h \\\n   core_memusage.h \\\n   httprpc.h \\\n@@ -118,7 +116,6 @@ BITCOIN_CORE_H = \\\n   policy/fees.h \\\n   policy/policy.h \\\n   policy/rbf.h \\\n-  pow.h \\\n   protocol.h \\\n   random.h \\\n   reverselock.h \\\n@@ -178,7 +175,6 @@ libbitcoin_server_a_SOURCES = \\\n   blockencodings.cpp \\\n   chain.cpp \\\n   checkpoints.cpp \\\n-  consensus/header_verify.cpp \\\n   httprpc.cpp \\\n   httpserver.cpp \\\n   init.cpp \\\n@@ -190,7 +186,6 @@ libbitcoin_server_a_SOURCES = \\\n   noui.cpp \\\n   policy/fees.cpp \\\n   policy/policy.cpp \\\n-  pow.cpp \\\n   rest.cpp \\\n   rpc/blockchain.cpp \\\n   rpc/mining.cpp \\\n@@ -261,13 +256,18 @@ libbitcoin_consensus_a_SOURCES = \\\n   amount.h \\\n   arith_uint256.cpp \\\n   arith_uint256.h \\\n+  consensus/consensus.h \\\n+  consensus/header_verify.cpp \\\n+  consensus/header_verify.h \\\n   consensus/interfaces.h \\\n   consensus/merkle.cpp \\\n   consensus/merkle.h \\\n   consensus/params.h \\\n   consensus/validation.h \\\n   hash.cpp \\\n   hash.h \\\n+  pow.cpp \\\n+  pow.h \\\n   prevector.h \\\n   primitives/block.cpp \\\n   primitives/block.h \\"
      },
      {
        "sha": "f95def51cd7a1d13705c6b87e493a29ff2264032",
        "filename": "src/consensus/cppwrappers.h",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0a1ff996c5db5265742e3e90f3690a0b8d9cf045/src/consensus/cppwrappers.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0a1ff996c5db5265742e3e90f3690a0b8d9cf045/src/consensus/cppwrappers.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/cppwrappers.h?ref=0a1ff996c5db5265742e3e90f3690a0b8d9cf045",
        "patch": "@@ -6,6 +6,7 @@\n #define BITCOIN_CONSENSUS_CPPWRAPPERS_H\n \n #include \"header_verify.h\"\n+#include \"interfaces.h\"\n #include \"pow.h\"\n \n #include <stdint.h>\n@@ -17,17 +18,17 @@ namespace Consensus { struct Params; };\n \n inline unsigned int GetNextWorkRequired(const CBlockIndex* pindexLast, const CBlockHeader *pblock, const Consensus::Params& consensusParams)\n {\n-    return PowGetNextWorkRequired(pindexLast, pblock, consensusParams);\n+    return PowGetNextWorkRequired(pindexLast, CreateCoreIndexInterface(), pblock, consensusParams);\n }\n \n inline unsigned int CalculateNextWorkRequired(const CBlockIndex* pindexLast, int64_t nFirstBlockTime, const Consensus::Params& consensusParams)\n {\n-    return PowCalculateNextWorkRequired(pindexLast, nFirstBlockTime, consensusParams);\n+    return PowCalculateNextWorkRequired(pindexLast, CreateCoreIndexInterface(), nFirstBlockTime, consensusParams);\n }\n \n inline bool ContextualCheckBlockHeader(const CBlockHeader& block, CValidationState& state, const Consensus::Params& consensusParams, const CBlockIndex* pindexPrev, int64_t nAdjustedTime)\n {\n-    return ContextualCheckHeader(block, state, consensusParams, pindexPrev, nAdjustedTime);\n+    return ContextualCheckHeader(block, state, consensusParams, pindexPrev, CreateCoreIndexInterface(), nAdjustedTime);\n }\n \n #endif // BITCOIN_CONSENSUS_CPPWRAPPERS_H"
      },
      {
        "sha": "33257ce5cadb97818da50f4c4956921da05beb18",
        "filename": "src/consensus/header_verify.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 7,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0a1ff996c5db5265742e3e90f3690a0b8d9cf045/src/consensus/header_verify.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0a1ff996c5db5265742e3e90f3690a0b8d9cf045/src/consensus/header_verify.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/header_verify.cpp?ref=0a1ff996c5db5265742e3e90f3690a0b8d9cf045",
        "patch": "@@ -4,14 +4,12 @@\n \n #include \"consensus.h\"\n \n+#include \"interfaces.h\"\n #include \"pow.h\"\n #include \"primitives/block.h\"\n #include \"tinyformat.h\"\n #include \"validation.h\"\n \n-// TODO remove the following dependencies\n-#include \"chain.h\"\n-\n bool CheckBlockHeader(const CBlockHeader& block, CValidationState& state, const Consensus::Params& consensusParams, bool fCheckPOW)\n {\n     // Check proof of work matches claimed amount\n@@ -21,15 +19,15 @@ bool CheckBlockHeader(const CBlockHeader& block, CValidationState& state, const\n     return true;\n }\n \n-bool ContextualCheckHeader(const CBlockHeader& block, CValidationState& state, const Consensus::Params& consensusParams, const CBlockIndex* pindexPrev, int64_t nAdjustedTime)\n+bool ContextualCheckHeader(const CBlockHeader& block, CValidationState& state, const Consensus::Params& consensusParams, const void* indexObject, const BlockIndexInterface& iBlockIndex, int64_t nAdjustedTime)\n {\n-    const int nHeight = pindexPrev == NULL ? 0 : pindexPrev->nHeight + 1;\n+    const int nHeight = indexObject == NULL ? 0 : iBlockIndex.GetHeight(indexObject) + 1;\n     // Check proof of work\n-    if (block.nBits != PowGetNextWorkRequired(pindexPrev, &block, consensusParams))\n+    if (block.nBits != PowGetNextWorkRequired(indexObject, iBlockIndex, &block, consensusParams))\n         return state.DoS(100, false, REJECT_INVALID, \"bad-diffbits\", false, \"incorrect proof of work\");\n \n     // Check timestamp against prev\n-    if (block.GetBlockTime() <= pindexPrev->GetMedianTimePast())\n+    if (block.GetBlockTime() <= iBlockIndex.GetMedianTime(indexObject))\n         return state.Invalid(false, REJECT_INVALID, \"time-too-old\", \"block's timestamp is too early\");\n \n     // Check timestamp"
      },
      {
        "sha": "e825f2bf44c76835960383d261c41db4bf077dd4",
        "filename": "src/consensus/header_verify.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0a1ff996c5db5265742e3e90f3690a0b8d9cf045/src/consensus/header_verify.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0a1ff996c5db5265742e3e90f3690a0b8d9cf045/src/consensus/header_verify.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/header_verify.h?ref=0a1ff996c5db5265742e3e90f3690a0b8d9cf045",
        "patch": "@@ -11,13 +11,14 @@ class CBlockHeader;\n class CBlockIndex;\n class CValidationState;\n namespace Consensus { struct Params; };\n+struct BlockIndexInterface;\n \n /** Context-independent validity checks */\n bool CheckBlockHeader(const CBlockHeader& block, CValidationState& state, const Consensus::Params& consensusParams, bool fCheckPOW = true);\n \n /** Context-dependent validity checks.\n  *  By \"context\", we mean only the previous block headers, but not the UTXO\n  *  set; UTXO-related validity checks are done in ConnectBlock(). */\n-bool ContextualCheckHeader(const CBlockHeader& block, CValidationState& state, const Consensus::Params& consensusParams, const CBlockIndex* pindexPrev, int64_t nAdjustedTime);\n+bool ContextualCheckHeader(const CBlockHeader& block, CValidationState& state, const Consensus::Params& consensusParams, const void* indexObject, const BlockIndexInterface& iBlockIndex, int64_t nAdjustedTime);\n \n #endif // BITCOIN_CONSENSUS_HEADER_VERIFY_H"
      },
      {
        "sha": "553a3d6ee2747f045cdc1b5c2d2b18e49d96e4f2",
        "filename": "src/pow.cpp",
        "status": "modified",
        "additions": 17,
        "deletions": 16,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0a1ff996c5db5265742e3e90f3690a0b8d9cf045/src/pow.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0a1ff996c5db5265742e3e90f3690a0b8d9cf045/src/pow.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/pow.cpp?ref=0a1ff996c5db5265742e3e90f3690a0b8d9cf045",
        "patch": "@@ -10,52 +10,53 @@\n #include \"primitives/block.h\"\n #include \"uint256.h\"\n \n-unsigned int PowGetNextWorkRequired(const CBlockIndex* pindexLast, const CBlockHeader *pblock, const Consensus::Params& params)\n+unsigned int PowGetNextWorkRequired(const void* indexObject, const BlockIndexInterface& iBlockIndex, const CBlockHeader *pblock, const Consensus::Params& params)\n {\n     unsigned int nProofOfWorkLimit = UintToArith256(params.powLimit).GetCompact();\n \n     // Genesis block\n-    if (pindexLast == NULL)\n+    if (indexObject == NULL)\n         return nProofOfWorkLimit;\n \n     // Only change once per difficulty adjustment interval\n-    if ((pindexLast->nHeight+1) % params.DifficultyAdjustmentInterval() != 0)\n+    if ((iBlockIndex.GetHeight(indexObject)+1) % params.DifficultyAdjustmentInterval() != 0)\n     {\n         if (params.fPowAllowMinDifficultyBlocks)\n         {\n             // Special difficulty rule for testnet:\n             // If the new block's timestamp is more than 2* 10 minutes\n             // then allow mining of a min-difficulty block.\n-            if (pblock->GetBlockTime() > pindexLast->GetBlockTime() + params.nPowTargetSpacing*2)\n+            if (pblock->GetBlockTime() > iBlockIndex.GetTime(indexObject) + params.nPowTargetSpacing*2)\n                 return nProofOfWorkLimit;\n             else\n             {\n                 // Return the last non-special-min-difficulty-rules-block\n-                const CBlockIndex* pindex = pindexLast;\n-                while (pindex->pprev && pindex->nHeight % params.DifficultyAdjustmentInterval() != 0 && pindex->nBits == nProofOfWorkLimit)\n-                    pindex = pindex->pprev;\n-                return pindex->nBits;\n+                const void* pindex = indexObject;\n+                while (iBlockIndex.GetPrev(pindex) &&\n+                       iBlockIndex.GetHeight(pindex) % params.DifficultyAdjustmentInterval() != 0 && iBlockIndex.GetBits(pindex) == nProofOfWorkLimit)\n+                    pindex = iBlockIndex.GetPrev(pindex);\n+                return iBlockIndex.GetBits(pindex);\n             }\n         }\n-        return pindexLast->nBits;\n+        return iBlockIndex.GetBits(indexObject);\n     }\n \n     // Go back by what we want to be 14 days worth of blocks\n-    int nHeightFirst = pindexLast->nHeight - (params.DifficultyAdjustmentInterval()-1);\n+    int nHeightFirst = iBlockIndex.GetHeight(indexObject) - (params.DifficultyAdjustmentInterval()-1);\n     assert(nHeightFirst >= 0);\n-    const CBlockIndex* pindexFirst = pindexLast->GetAncestor(nHeightFirst);\n+    const void* pindexFirst = iBlockIndex.GetAncestor(indexObject, nHeightFirst);\n     assert(pindexFirst);\n \n-    return PowCalculateNextWorkRequired(pindexLast, pindexFirst->GetBlockTime(), params);\n+    return PowCalculateNextWorkRequired(indexObject, iBlockIndex, iBlockIndex.GetTime(pindexFirst), params);\n }\n \n-unsigned int PowCalculateNextWorkRequired(const CBlockIndex* pindexLast, int64_t nFirstBlockTime, const Consensus::Params& params)\n+unsigned int PowCalculateNextWorkRequired(const void* indexObject, const BlockIndexInterface& iBlockIndex, int64_t nFirstBlockTime, const Consensus::Params& params)\n {\n     if (params.fPowNoRetargeting)\n-        return pindexLast->nBits;\n+        return iBlockIndex.GetBits(indexObject);\n \n     // Limit adjustment step\n-    int64_t nActualTimespan = pindexLast->GetBlockTime() - nFirstBlockTime;\n+    int64_t nActualTimespan = iBlockIndex.GetTime(indexObject) - nFirstBlockTime;\n     if (nActualTimespan < params.nPowTargetTimespan/4)\n         nActualTimespan = params.nPowTargetTimespan/4;\n     if (nActualTimespan > params.nPowTargetTimespan*4)\n@@ -64,7 +65,7 @@ unsigned int PowCalculateNextWorkRequired(const CBlockIndex* pindexLast, int64_t\n     // Retarget\n     const arith_uint256 bnPowLimit = UintToArith256(params.powLimit);\n     arith_uint256 bnNew;\n-    bnNew.SetCompact(pindexLast->nBits);\n+    bnNew.SetCompact(iBlockIndex.GetBits(indexObject));\n     bnNew *= nActualTimespan;\n     bnNew /= params.nPowTargetTimespan;\n "
      },
      {
        "sha": "f9c92e217bd0d0668f543bd4f5a30eb8de7f9a5e",
        "filename": "src/pow.h",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0a1ff996c5db5265742e3e90f3690a0b8d9cf045/src/pow.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0a1ff996c5db5265742e3e90f3690a0b8d9cf045/src/pow.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/pow.h?ref=0a1ff996c5db5265742e3e90f3690a0b8d9cf045",
        "patch": "@@ -6,6 +6,7 @@\n #ifndef BITCOIN_POW_H\n #define BITCOIN_POW_H\n \n+#include \"consensus/interfaces.h\"\n #include \"consensus/params.h\"\n \n #include <stdint.h>\n@@ -14,8 +15,8 @@ class CBlockHeader;\n class CBlockIndex;\n class uint256;\n \n-unsigned int PowGetNextWorkRequired(const CBlockIndex* pindexLast, const CBlockHeader *pblock, const Consensus::Params&);\n-unsigned int PowCalculateNextWorkRequired(const CBlockIndex* pindexLast, int64_t nFirstBlockTime, const Consensus::Params&);\n+unsigned int PowGetNextWorkRequired(const void* indexObject, const BlockIndexInterface& iBlockIndex, const CBlockHeader *pblock, const Consensus::Params&);\n+unsigned int PowCalculateNextWorkRequired(const void* indexObject, const BlockIndexInterface& iBlockIndex, int64_t nFirstBlockTime, const Consensus::Params&);\n \n /** Check whether a block hash satisfies the proof-of-work requirement specified by nBits */\n bool CheckProofOfWork(uint256 hash, unsigned int nBits, const Consensus::Params&);"
      }
    ]
  },
  {
    "sha": "df8ee94b15f709c16387e84529c8f4f9c8ddbda2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkZjhlZTk0YjE1ZjcwOWMxNjM4N2U4NDUyOWM4ZjRmOWM4ZGRiZGEy",
    "commit": {
      "author": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2016-08-06T04:36:11Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2016-12-03T06:55:45Z"
      },
      "message": "libconsensus: Expose bitcoinconsensus_verify_header()",
      "tree": {
        "sha": "999e8ee884c4beb9a6d896cf8c934682d798370c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/999e8ee884c4beb9a6d896cf8c934682d798370c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/df8ee94b15f709c16387e84529c8f4f9c8ddbda2",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2\n\niQIcBAABCAAGBQJYQmxxAAoJEIhmwY6hyUSixnYQAKNjIEMlz9PBOFBTxrUl0P0m\nX43fNCfxOuNBQDSDomos0HpuAkweEgqRxiJaCgKa8plGNF6yX6ud6u6oImRY8YKc\n13Z9qG/69tGTckBVGi48m/Mn1P+c7witQdHPc+RMdNKAzwVTYbRS+Ru640vMK4/s\nZ5f3/q245b+BnIQTQQ5HtFDf2IjCLseoClSWzymnMlixpIK64WLESgsxVR2zqEOX\n7ZnAVzaIzpJQNLPn8f3uMOGWC9zz5pCYCeteUGqIAiIAPsi8VpoCZFRqGHUY/+D7\npiwK+L+KWOhTNkTomIl7d8Fpk2XKuLhs1LgivHHLPsLUVzzsZHKDsjWmB8qg1ahE\n7+Y9YEP5/NZEAf45rzmtGOdaraLlguxuiu7VCg7QWRpwrx4LKAT8Ws/WubsPFkVb\n0iMPa3bGiaGFLBqd63lLDS3EVmlRzN5nHEQdO+3uVN6TLo4yIvY5t8YYM0L+SCg4\n6AcUZp1K/9FzyLOYGl+/gVGa6NgBfiu7DBqMDoPWcv24PabcBjklsrfiklRnKjEV\nw0jy234+iTWmZNg8Ah4wTKlvZlFoU0W3RLUk3qRmiGw3xwKT6kpc+spwbUxV2VYj\nqgScuFzNJLq6xdDdZOG3qbqLyg2VzaCpl7Ao0cSNZVfGj0JZR/XDaRgSj1jDiBo0\n/FiFZhUje9gAbmpvzlth\n=Vj4N\n-----END PGP SIGNATURE-----",
        "payload": "tree 999e8ee884c4beb9a6d896cf8c934682d798370c\nparent 0a1ff996c5db5265742e3e90f3690a0b8d9cf045\nauthor Jorge Tim\u00f3n <jtimon@jtimon.cc> 1470458171 +0200\ncommitter Jorge Tim\u00f3n <jtimon@jtimon.cc> 1480748145 +0100\n\nlibconsensus: Expose bitcoinconsensus_verify_header()\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/df8ee94b15f709c16387e84529c8f4f9c8ddbda2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/df8ee94b15f709c16387e84529c8f4f9c8ddbda2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/df8ee94b15f709c16387e84529c8f4f9c8ddbda2/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0a1ff996c5db5265742e3e90f3690a0b8d9cf045",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0a1ff996c5db5265742e3e90f3690a0b8d9cf045",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0a1ff996c5db5265742e3e90f3690a0b8d9cf045"
      }
    ],
    "stats": {
      "total": 33,
      "additions": 33,
      "deletions": 0
    },
    "files": [
      {
        "sha": "3c624af9378c4d7db4c43b621770198f556f1a63",
        "filename": "src/consensus/header_verify.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df8ee94b15f709c16387e84529c8f4f9c8ddbda2/src/consensus/header_verify.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df8ee94b15f709c16387e84529c8f4f9c8ddbda2/src/consensus/header_verify.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/header_verify.cpp?ref=df8ee94b15f709c16387e84529c8f4f9c8ddbda2",
        "patch": "@@ -44,3 +44,14 @@ bool ContextualCheckHeader(const CBlockHeader& block, CValidationState& state, c\n \n     return true;\n }\n+\n+bool VerifyHeader(const CBlockHeader& block, CValidationState& state, const Consensus::Params& consensusParams, const void* indexObject, const BlockIndexInterface& iBlockIndex, int64_t nAdjustedTime)\n+{\n+    if (!CheckBlockHeader(block, state, consensusParams, true))\n+        return false;\n+\n+    if (!ContextualCheckHeader(block, state, consensusParams, indexObject, iBlockIndex, nAdjustedTime))\n+        return false;\n+\n+    return true;\n+}"
      },
      {
        "sha": "916d0e40df2958957ad2b37735ce1601f0cbfd9c",
        "filename": "src/consensus/header_verify.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df8ee94b15f709c16387e84529c8f4f9c8ddbda2/src/consensus/header_verify.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df8ee94b15f709c16387e84529c8f4f9c8ddbda2/src/consensus/header_verify.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/header_verify.h?ref=df8ee94b15f709c16387e84529c8f4f9c8ddbda2",
        "patch": "@@ -21,4 +21,6 @@ bool CheckBlockHeader(const CBlockHeader& block, CValidationState& state, const\n  *  set; UTXO-related validity checks are done in ConnectBlock(). */\n bool ContextualCheckHeader(const CBlockHeader& block, CValidationState& state, const Consensus::Params& consensusParams, const void* indexObject, const BlockIndexInterface& iBlockIndex, int64_t nAdjustedTime);\n \n+bool VerifyHeader(const CBlockHeader& block, CValidationState& state, const Consensus::Params& consensusParams, const void* indexObject, const BlockIndexInterface& iBlockIndex, int64_t nAdjustedTime);\n+\n #endif // BITCOIN_CONSENSUS_HEADER_VERIFY_H"
      },
      {
        "sha": "fe75e3aa9bf0a785d26ace9162fc5f9161eee1bd",
        "filename": "src/script/bitcoinconsensus.cpp",
        "status": "modified",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df8ee94b15f709c16387e84529c8f4f9c8ddbda2/src/script/bitcoinconsensus.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df8ee94b15f709c16387e84529c8f4f9c8ddbda2/src/script/bitcoinconsensus.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/bitcoinconsensus.cpp?ref=df8ee94b15f709c16387e84529c8f4f9c8ddbda2",
        "patch": "@@ -5,6 +5,11 @@\n \n #include \"bitcoinconsensus.h\"\n \n+#include \"consensus/header_verify.h\"\n+#include \"consensus/interfaces.h\"\n+#include \"consensus/params.h\"\n+#include \"consensus/validation.h\"\n+#include \"primitives/block.h\"\n #include \"primitives/transaction.h\"\n #include \"pubkey.h\"\n #include \"script/interpreter.h\"\n@@ -122,6 +127,19 @@ int bitcoinconsensus_verify_script(const unsigned char *scriptPubKey, unsigned i\n     return ::verify_script(scriptPubKey, scriptPubKeyLen, am, txTo, txToLen, nIn, flags, err);\n }\n \n+int bitcoinconsensus_verify_header(const unsigned char* header, unsigned int headerLen, const void* consensusParams, const void* indexObject, const void* iBlockIndex, int64_t nAdjustedTime, bitcoinconsensus_error* err)\n+{\n+    try {\n+        TxInputStream stream(SER_NETWORK, PROTOCOL_VERSION, header, headerLen);\n+        CBlockHeader blockHeader;\n+        stream >> blockHeader;\n+        CValidationState state;\n+        return VerifyHeader(blockHeader, state, *(const Consensus::Params*)consensusParams, indexObject, *(const BlockIndexInterface*)iBlockIndex, nAdjustedTime);\n+    } catch (const std::exception&) {\n+        return set_error(err, bitcoinconsensus_ERR_TX_DESERIALIZE); // Error deserializing\n+    }\n+}\n+\n unsigned int bitcoinconsensus_version()\n {\n     // Just use the API version for now"
      },
      {
        "sha": "930cf9adf97300f6b1a1364f3f9781f787a7d761",
        "filename": "src/script/bitcoinconsensus.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df8ee94b15f709c16387e84529c8f4f9c8ddbda2/src/script/bitcoinconsensus.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df8ee94b15f709c16387e84529c8f4f9c8ddbda2/src/script/bitcoinconsensus.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/bitcoinconsensus.h?ref=df8ee94b15f709c16387e84529c8f4f9c8ddbda2",
        "patch": "@@ -72,6 +72,8 @@ EXPORT_SYMBOL int bitcoinconsensus_verify_script_with_amount(const unsigned char\n                                     const unsigned char *txTo        , unsigned int txToLen,\n                                     unsigned int nIn, unsigned int flags, bitcoinconsensus_error* err);\n \n+EXPORT_SYMBOL int bitcoinconsensus_verify_header(const unsigned char* header, unsigned int headerLen, const void* consensusParams, const void* indexObject, const void* iBlockIndex, int64_t nAdjustedTime, bitcoinconsensus_error* err);\n+\n EXPORT_SYMBOL unsigned int bitcoinconsensus_version();\n \n #ifdef __cplusplus"
      }
    ]
  },
  {
    "sha": "ad3ac37387b231378573f4996c59467247fccd44",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphZDNhYzM3Mzg3YjIzMTM3ODU3M2Y0OTk2YzU5NDY3MjQ3ZmNjZDQ0",
    "commit": {
      "author": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2016-08-31T17:42:08Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2016-12-03T06:57:14Z"
      },
      "message": "libconsensus: Expose C interfaces for Consensus::Params",
      "tree": {
        "sha": "c343cd74034e2342ea1654fb2ca2ee7162953fac",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c343cd74034e2342ea1654fb2ca2ee7162953fac"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ad3ac37387b231378573f4996c59467247fccd44",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2\n\niQIcBAABCAAGBQJYQmzKAAoJEIhmwY6hyUSiHvsP/RIJ9AFAoC+JYFxvBGTVCjjX\nI82KilWmY1cy2f/bYs2V3BVeCesSAyifuZibWS7USpC4u4+JbYDp/94QhOSP513F\nYAvc4PzhFqaazjeUJxernd4E/ZMv33HD9n84d6jG45D9Hzz4EznNeFpNpNVwsr+h\n5CmuNgtE9KgJm0Irph6sbI/ndlAkUeEYCTWJGpFUrJo1cpiQ9mimq4YkHJ2bNwCL\nZjUHDoiwqWvXeacqv1HC2xG/a2nDKAPa8DSSqr2SHuEz7Db+GWvYEOqvZtpLt9Ry\n7neOIMYARXmzODU9TuZK+jKoYasFwRRdRAsOcYLHYo+KdKDPzxJQfQ80OxRTl1b/\nM3IiQyMVjqBI0xLS9s4AK7WajF2MsB5XNG0LQQIbd4fpocsnUYOE0mOS/fM0n3Gy\nPb9TDMAj27j9v6NHTgpBdkCIGWYEfe2DS9qMFB2t3UCvfmYJac9cft+eNS3DzQ4B\ndqDxAvgAfLUZHqdVC6GyQ6IO/EfM6ODFYu9GmbxQGE96TTshZ7zt5At8md2nPOKC\nzarpIgKmhGIAdvwdwBKfctUyn2uykgaQFktW5ZV5Um1r2jUuph+7/CzRY0+5OO1E\n4w65pDOOcHl035+pWfin++KjjlsrawLfs0df25BPG3nO0w+8BMpNK+WXK/eVT3nq\n89KCdGMU5/WHhpcOHgqQ\n=DDc7\n-----END PGP SIGNATURE-----",
        "payload": "tree c343cd74034e2342ea1654fb2ca2ee7162953fac\nparent df8ee94b15f709c16387e84529c8f4f9c8ddbda2\nauthor Jorge Tim\u00f3n <jtimon@jtimon.cc> 1472665328 +0200\ncommitter Jorge Tim\u00f3n <jtimon@jtimon.cc> 1480748234 +0100\n\nlibconsensus: Expose C interfaces for Consensus::Params\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ad3ac37387b231378573f4996c59467247fccd44",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ad3ac37387b231378573f4996c59467247fccd44",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ad3ac37387b231378573f4996c59467247fccd44/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "df8ee94b15f709c16387e84529c8f4f9c8ddbda2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/df8ee94b15f709c16387e84529c8f4f9c8ddbda2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/df8ee94b15f709c16387e84529c8f4f9c8ddbda2"
      }
    ],
    "stats": {
      "total": 39,
      "additions": 39,
      "deletions": 0
    },
    "files": [
      {
        "sha": "60472c2f83833afa27a9b79ef9a2ca05549b07c4",
        "filename": "src/script/bitcoinconsensus.cpp",
        "status": "modified",
        "additions": 34,
        "deletions": 0,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ad3ac37387b231378573f4996c59467247fccd44/src/script/bitcoinconsensus.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ad3ac37387b231378573f4996c59467247fccd44/src/script/bitcoinconsensus.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/bitcoinconsensus.cpp?ref=ad3ac37387b231378573f4996c59467247fccd44",
        "patch": "@@ -127,6 +127,40 @@ int bitcoinconsensus_verify_script(const unsigned char *scriptPubKey, unsigned i\n     return ::verify_script(scriptPubKey, scriptPubKeyLen, am, txTo, txToLen, nIn, flags, err);\n }\n \n+void* bitcoinconsensus_create_consensus_parameters(unsigned char* pHashGenesisBlock, int nSubsidyHalvingInterval, int BIP34Height, unsigned char* pBIP34Hash, int BIP65Height, int BIP66Height, uint32_t nRuleChangeActivationThreshold, uint32_t nMinerConfirmationWindow, int bitDeploymentCsv, int64_t nStartTimeDeploymentCsv, int64_t nTimeoutDeploymentCsv, int bitDeploymentSegwit, int64_t nStartTimeDeploymentSegwit, int64_t nTimeoutDeploymentSegwit, unsigned char* pPowLimit, bool fPowAllowMinDifficultyBlocks, bool fPowNoRetargeting, int64_t nPowTargetSpacing, int64_t nPowTargetTimespan)\n+{\n+    Consensus::Params* consensusParams = new Consensus::Params();\n+\n+    consensusParams->vDeployments[Consensus::DEPLOYMENT_CSV].bit = bitDeploymentCsv;\n+    consensusParams->vDeployments[Consensus::DEPLOYMENT_CSV].nStartTime = nStartTimeDeploymentCsv;\n+    consensusParams->vDeployments[Consensus::DEPLOYMENT_CSV].nTimeout = nTimeoutDeploymentCsv;\n+    consensusParams->vDeployments[Consensus::DEPLOYMENT_SEGWIT].bit = bitDeploymentSegwit;\n+    consensusParams->vDeployments[Consensus::DEPLOYMENT_SEGWIT].nStartTime = nStartTimeDeploymentSegwit;\n+    consensusParams->vDeployments[Consensus::DEPLOYMENT_SEGWIT].nTimeout = nTimeoutDeploymentSegwit;\n+\n+    consensusParams->nSubsidyHalvingInterval = nSubsidyHalvingInterval;\n+    consensusParams->BIP34Height = BIP34Height;\n+    consensusParams->BIP65Height = BIP65Height;\n+    consensusParams->BIP66Height = BIP66Height;\n+    consensusParams->nRuleChangeActivationThreshold = nRuleChangeActivationThreshold;\n+    consensusParams->nMinerConfirmationWindow = nMinerConfirmationWindow;\n+    consensusParams->fPowAllowMinDifficultyBlocks = fPowAllowMinDifficultyBlocks;\n+    consensusParams->fPowNoRetargeting = fPowNoRetargeting;\n+    consensusParams->nPowTargetSpacing = nPowTargetSpacing;\n+    consensusParams->nPowTargetTimespan = nPowTargetTimespan;\n+\n+    consensusParams->hashGenesisBlock = uint256(pHashGenesisBlock);\n+    consensusParams->BIP34Hash = uint256(pBIP34Hash);\n+    consensusParams->powLimit = uint256(pPowLimit);\n+\n+    return consensusParams;\n+}\n+\n+void bitcoinconsensus_destroy_consensus_parameters(void* consensusParams)\n+{\n+    delete ((Consensus::Params*)consensusParams);\n+}\n+\n int bitcoinconsensus_verify_header(const unsigned char* header, unsigned int headerLen, const void* consensusParams, const void* indexObject, const void* iBlockIndex, int64_t nAdjustedTime, bitcoinconsensus_error* err)\n {\n     try {"
      },
      {
        "sha": "5e68df955655b47d56a97171d4ed77d6bdb858fd",
        "filename": "src/script/bitcoinconsensus.h",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ad3ac37387b231378573f4996c59467247fccd44/src/script/bitcoinconsensus.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ad3ac37387b231378573f4996c59467247fccd44/src/script/bitcoinconsensus.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/bitcoinconsensus.h?ref=ad3ac37387b231378573f4996c59467247fccd44",
        "patch": "@@ -72,6 +72,11 @@ EXPORT_SYMBOL int bitcoinconsensus_verify_script_with_amount(const unsigned char\n                                     const unsigned char *txTo        , unsigned int txToLen,\n                                     unsigned int nIn, unsigned int flags, bitcoinconsensus_error* err);\n \n+/// All hashes are 32 bytes\n+EXPORT_SYMBOL void* bitcoinconsensus_create_consensus_parameters(unsigned char* pHashGenesisBlock, int nSubsidyHalvingInterval, int BIP34Height, unsigned char* pBIP34Hash, int BIP65Height, int BIP66Height, uint32_t nRuleChangeActivationThreshold, uint32_t nMinerConfirmationWindow, int bitDeploymentCsv, int64_t nStartTimeDeploymentCsv, int64_t nTimeoutDeploymentCsv, int bitDeploymentSegwit, int64_t nStartTimeDeploymentSegwit, int64_t nTimeoutDeploymentSegwit, unsigned char* pPowLimit, bool fPowAllowMinDifficultyBlocks, bool fPowNoRetargeting, int64_t nPowTargetSpacing, int64_t nPowTargetTimespan);\n+\n+EXPORT_SYMBOL void bitcoinconsensus_destroy_consensus_parameters(void* consensusParams);\n+\n EXPORT_SYMBOL int bitcoinconsensus_verify_header(const unsigned char* header, unsigned int headerLen, const void* consensusParams, const void* indexObject, const void* iBlockIndex, int64_t nAdjustedTime, bitcoinconsensus_error* err);\n \n EXPORT_SYMBOL unsigned int bitcoinconsensus_version();"
      }
    ]
  },
  {
    "sha": "a4785f6547990fcbde97ab0a796b2b5e8252172d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNDc4NWY2NTQ3OTkwZmNiZGU5N2FiMGE3OTZiMmI1ZTgyNTIxNzJk",
    "commit": {
      "author": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2016-09-01T01:13:48Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2016-12-03T07:05:10Z"
      },
      "message": "libconsensus: Expose C interfaces for BlockIndexInterface",
      "tree": {
        "sha": "273c090ae334e9cf27ae8df9da2bee996d0bf4f0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/273c090ae334e9cf27ae8df9da2bee996d0bf4f0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a4785f6547990fcbde97ab0a796b2b5e8252172d",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2\n\niQIcBAABCAAGBQJYQm6mAAoJEIhmwY6hyUSiJnQQAJX/+mWPHrrb6nPrgOZTD6OQ\nlVfHLWJwMzY5KmYAhX+hJQaQKQUpy67dlccblWiWk//R/2460+n1nY+Jk/G19Inf\nXW6FdEOlYheL/LhehBcrlDeEvUhdr7Z8UpYBR3wB2ufErVq2Kk4mXsHo6Fd54TYw\n3cgAxSt8iOldjaDYHvtmaOW7iG9DsU7r13zG9+kpQZcd7KfpceMPwEnkiGOs+Uy9\nTaqzntUaNqtCWZWzNKHqML0GZMUlQ9O5MAhK/4czKazM5m86vDjVU5lHn1keNMAq\ne2Y/h2g8GJh4nP+J73rW+z9xRAbKhqZz0N0nP4wNVVRzfoc35isltkgF0Tk1qVR+\ni0UhDi+q1rpcJbhskJONTI4OI5WFr7NzIb3Rs+q48b2LnD4ley+QWx+nkX3hoXN9\nX7lRotmcskKJJWY4fKeMo5lVv4KUMuZiisUEuLL79xuLkr4eVT41LCLtQ93OMH/y\navMnGw6lvjF2qtvYpH5M1nAQehnBdLw30dnjRM7Yr0y/cDJPoWvkBtEIjZtA1Rrj\nDxwSl6U6gI0hGlEQFo++RkQ4lbMf/HMp9B9wYWOJQxu/Nqo/nWZ7Y3kef31ibSFW\n9xlboeqCBaHnbEdO0K/40LvSrP4Vjuqnf7vRLGbbua2hPXwb9zJa9nnguWiIYmBR\nKS9+HAhhgfE1wFqhNpIM\n=NJtB\n-----END PGP SIGNATURE-----",
        "payload": "tree 273c090ae334e9cf27ae8df9da2bee996d0bf4f0\nparent ad3ac37387b231378573f4996c59467247fccd44\nauthor Jorge Tim\u00f3n <jtimon@jtimon.cc> 1472692428 +0200\ncommitter Jorge Tim\u00f3n <jtimon@jtimon.cc> 1480748710 +0100\n\nlibconsensus: Expose C interfaces for BlockIndexInterface\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a4785f6547990fcbde97ab0a796b2b5e8252172d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a4785f6547990fcbde97ab0a796b2b5e8252172d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a4785f6547990fcbde97ab0a796b2b5e8252172d/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ad3ac37387b231378573f4996c59467247fccd44",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ad3ac37387b231378573f4996c59467247fccd44",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ad3ac37387b231378573f4996c59467247fccd44"
      }
    ],
    "stats": {
      "total": 22,
      "additions": 22,
      "deletions": 0
    },
    "files": [
      {
        "sha": "5a551f370dfe988174537e4d6594d9889eae8f6c",
        "filename": "src/script/bitcoinconsensus.cpp",
        "status": "modified",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a4785f6547990fcbde97ab0a796b2b5e8252172d/src/script/bitcoinconsensus.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a4785f6547990fcbde97ab0a796b2b5e8252172d/src/script/bitcoinconsensus.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/bitcoinconsensus.cpp?ref=a4785f6547990fcbde97ab0a796b2b5e8252172d",
        "patch": "@@ -161,6 +161,28 @@ void bitcoinconsensus_destroy_consensus_parameters(void* consensusParams)\n     delete ((Consensus::Params*)consensusParams);\n }\n \n+void* bitcoinconsensus_create_blockindex_interface(GetAncestorFn _GetAncestorFn, GetHashFn _GetHashFn, GetHeightFn _GetHeightFn, GetVersionFn _GetVersionFn, GetTimeFn _GetTimeFn, GetBitsFn _GetBitsFn, GetPrevFn _GetPrevFn, GetMedianTimeFn _GetMedianTimeFn, IndexDeallocatorFn _IndexDeallocatorFn)\n+{\n+    BlockIndexInterface* iBlockIndex = new BlockIndexInterface();\n+\n+    iBlockIndex->GetAncestor = _GetAncestorFn;\n+    iBlockIndex->GetHash = _GetHashFn;\n+    iBlockIndex->GetHeight = _GetHeightFn;\n+    iBlockIndex->GetVersion = _GetVersionFn;\n+    iBlockIndex->GetTime = _GetTimeFn;\n+    iBlockIndex->GetBits = _GetBitsFn;\n+    iBlockIndex->GetPrev = _GetPrevFn;\n+    iBlockIndex->GetMedianTime = _GetMedianTimeFn;\n+    iBlockIndex->DeleteIndex = _IndexDeallocatorFn;\n+\n+    return iBlockIndex;\n+}\n+\n+void bitcoinconsensus_destroy_blockindex_interface(void* iBlockIndex)\n+{\n+    delete ((BlockIndexInterface*)iBlockIndex);\n+}\n+\n int bitcoinconsensus_verify_header(const unsigned char* header, unsigned int headerLen, const void* consensusParams, const void* indexObject, const void* iBlockIndex, int64_t nAdjustedTime, bitcoinconsensus_error* err)\n {\n     try {"
      }
    ]
  }
]