[
  {
    "sha": "76f52e3da359c3738d36bc20ac13a8ccd17e4e9f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3NmY1MmUzZGEzNTljMzczOGQzNmJjMjBhYzEzYThjY2QxN2U0ZTlm",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-03-09T12:40:21Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2021-01-08T08:48:22Z"
      },
      "message": "build: Fix Qt processing of configure script for depends with DEBUG=1\n\nNow, if depends is built with DEBUG=1, the configure script correctly\nfinds Qt for macOS and Windows.",
      "tree": {
        "sha": "45c96575ccab475ac6f869e40b5033f1ee6c5b2e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/45c96575ccab475ac6f869e40b5033f1ee6c5b2e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/76f52e3da359c3738d36bc20ac13a8ccd17e4e9f",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl/4HFYACgkQQQEIES5+\nqB9Q8g/5Af3rwxYiEr2Lht1FuEKsFfPoU2U0aFnUxdWDuTj4kMuxdhAwAuKlxn2C\n7Ne6zB/vIRsCko+GhDO2AuIMqp86EG2xSmJFBS7peesXFzHjdammPztSu1gC60PE\nE+rna0zknmiJiCKDdwoBg8TqgBV/b+6jMAJ99NqBsGHj/aAtkSiRLVIaK3OcJBDn\neANYqoMbgC9UtRj+xfSjAq5wV8nGVmD1pL4tL+vnAeVwGiSqJmsZ2itNEqkcWG49\nsHUkG6FxQ9sPj1XQXvqqfQqji963/fo7xJ3u+gMZu2xMLQyG+qefM4L8/jsq/4sT\nk+qdCggSNSwH224BPxE2o86sY0PvXP8pePvXE3DU1YTzJPmPCGYPvckDAW5C/gLr\ntNSRQf8yVgrKolrJ4DuSmj4nEbKdy248euJlEp2v18xBOCG9rh0S5rbI6xy+eg0x\ndZWVUOqOJhMkvHYca5GIOygcY4Cm4I+Es//qhq5/NI/8ddOJS+DvNE1yR+IQX0SF\n0HqPekST291kEv39stFZXF8IBDBHDvYEU3QZrNutqAGM/bftDYp2XFbXr37bKqEV\nH7iCv6KSpid+e9jMyNzyW7O44mqiNeMgUkNbQ1DR+1l2Pk7fFgSHmBR+0+srs1aa\nRDbC8TdQsRuN8Aygbww5GEs3aKNLC2o/wCwHP5YX7D14uQ6g0QA=\n=OEsW\n-----END PGP SIGNATURE-----",
        "payload": "tree 45c96575ccab475ac6f869e40b5033f1ee6c5b2e\nparent 5082324225bf9b7f59a6a7efe3d1225fcacbc627\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1583757621 +0200\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1610095702 +0200\n\nbuild: Fix Qt processing of configure script for depends with DEBUG=1\n\nNow, if depends is built with DEBUG=1, the configure script correctly\nfinds Qt for macOS and Windows.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/76f52e3da359c3738d36bc20ac13a8ccd17e4e9f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/76f52e3da359c3738d36bc20ac13a8ccd17e4e9f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/76f52e3da359c3738d36bc20ac13a8ccd17e4e9f/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5082324225bf9b7f59a6a7efe3d1225fcacbc627",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5082324225bf9b7f59a6a7efe3d1225fcacbc627",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5082324225bf9b7f59a6a7efe3d1225fcacbc627"
      }
    ],
    "stats": {
      "total": 51,
      "additions": 31,
      "deletions": 20
    },
    "files": [
      {
        "sha": "b559baba23f85a0fcd789b79b6250b7349533440",
        "filename": "build-aux/m4/bitcoin_qt.m4",
        "status": "modified",
        "additions": 27,
        "deletions": 20,
        "changes": 47,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/76f52e3da359c3738d36bc20ac13a8ccd17e4e9f/build-aux/m4/bitcoin_qt.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/76f52e3da359c3738d36bc20ac13a8ccd17e4e9f/build-aux/m4/bitcoin_qt.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/bitcoin_qt.m4?ref=76f52e3da359c3738d36bc20ac13a8ccd17e4e9f",
        "patch": "@@ -64,6 +64,13 @@ AC_DEFUN([BITCOIN_QT_INIT],[\n     ],\n     [bitcoin_qt_want_version=auto])\n \n+  AS_IF([test \"x$with_gui\" = xqt5_debug],\n+        [AS_CASE([$host],\n+                 [*darwin*], [qt_lib_suffix=_debug],\n+                 [*mingw*], [qt_lib_suffix=d],\n+                 [qt_lib_suffix= ]); bitcoin_qt_want_version=qt5],\n+        [qt_lib_suffix= ])\n+\n   AC_ARG_WITH([qt-incdir],[AS_HELP_STRING([--with-qt-incdir=INC_DIR],[specify qt include path (overridden by pkgconfig)])], [qt_include_path=$withval], [])\n   AC_ARG_WITH([qt-libdir],[AS_HELP_STRING([--with-qt-libdir=LIB_DIR],[specify qt lib path (overridden by pkgconfig)])], [qt_lib_path=$withval], [])\n   AC_ARG_WITH([qt-plugindir],[AS_HELP_STRING([--with-qt-plugindir=PLUGIN_DIR],[specify qt plugin path (overridden by pkgconfig)])], [qt_plugin_path=$withval], [])\n@@ -285,13 +292,13 @@ dnl Output: QT_LIBS is prepended or configure exits.\n AC_DEFUN([_BITCOIN_QT_CHECK_STATIC_PLUGINS],[\n   AC_MSG_CHECKING(for static Qt plugins: $2)\n   CHECK_STATIC_PLUGINS_TEMP_LIBS=\"$LIBS\"\n-  LIBS=\"$2 $QT_LIBS $LIBS\"\n+  LIBS=\"$2${qt_lib_suffix} $QT_LIBS $LIBS\"\n   AC_LINK_IFELSE([AC_LANG_PROGRAM([[\n     #define QT_STATICPLUGIN\n     #include <QtPlugin>\n     $1]],\n     [[return 0;]])],\n-    [AC_MSG_RESULT(yes); QT_LIBS=\"$2 $QT_LIBS\"],\n+    [AC_MSG_RESULT(yes); QT_LIBS=\"$2${qt_lib_suffix} $QT_LIBS\"],\n     [AC_MSG_RESULT(no); BITCOIN_QT_FAIL(Could not resolve: $2)])\n   LIBS=\"$CHECK_STATIC_PLUGINS_TEMP_LIBS\"\n ])\n@@ -308,18 +315,18 @@ AC_DEFUN([_BITCOIN_QT_FIND_STATIC_PLUGINS],[\n       if test -d \"$qt_plugin_path/platforms/android\"; then\n         QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/platforms/android -lqtfreetype -lEGL\"\n       fi\n-      PKG_CHECK_MODULES([QTFONTDATABASE], [Qt5FontDatabaseSupport], [QT_LIBS=\"-lQt5FontDatabaseSupport $QT_LIBS\"])\n-      PKG_CHECK_MODULES([QTEVENTDISPATCHER], [Qt5EventDispatcherSupport], [QT_LIBS=\"-lQt5EventDispatcherSupport $QT_LIBS\"])\n-      PKG_CHECK_MODULES([QTTHEME], [Qt5ThemeSupport], [QT_LIBS=\"-lQt5ThemeSupport $QT_LIBS\"])\n-      PKG_CHECK_MODULES([QTDEVICEDISCOVERY], [Qt5DeviceDiscoverySupport], [QT_LIBS=\"-lQt5DeviceDiscoverySupport $QT_LIBS\"])\n-      PKG_CHECK_MODULES([QTACCESSIBILITY], [Qt5AccessibilitySupport], [QT_LIBS=\"-lQt5AccessibilitySupport $QT_LIBS\"])\n-      PKG_CHECK_MODULES([QTFB], [Qt5FbSupport], [QT_LIBS=\"-lQt5FbSupport $QT_LIBS\"])\n+      PKG_CHECK_MODULES([QTFONTDATABASE], [Qt5FontDatabaseSupport${qt_lib_suffix}], [QT_LIBS=\"-lQt5FontDatabaseSupport${qt_lib_suffix} $QT_LIBS\"])\n+      PKG_CHECK_MODULES([QTEVENTDISPATCHER], [Qt5EventDispatcherSupport${qt_lib_suffix}], [QT_LIBS=\"-lQt5EventDispatcherSupport${qt_lib_suffix} $QT_LIBS\"])\n+      PKG_CHECK_MODULES([QTTHEME], [Qt5ThemeSupport${qt_lib_suffix}], [QT_LIBS=\"-lQt5ThemeSupport${qt_lib_suffix} $QT_LIBS\"])\n+      PKG_CHECK_MODULES([QTDEVICEDISCOVERY], [Qt5DeviceDiscoverySupport${qt_lib_suffix}], [QT_LIBS=\"-lQt5DeviceDiscoverySupport${qt_lib_suffix} $QT_LIBS\"])\n+      PKG_CHECK_MODULES([QTACCESSIBILITY], [Qt5AccessibilitySupport${qt_lib_suffix}], [QT_LIBS=\"-lQt5AccessibilitySupport${qt_lib_suffix} $QT_LIBS\"])\n+      PKG_CHECK_MODULES([QTFB], [Qt5FbSupport${qt_lib_suffix}], [QT_LIBS=\"-lQt5FbSupport${qt_lib_suffix} $QT_LIBS\"])\n       if test \"x$TARGET_OS\" = xlinux; then\n         PKG_CHECK_MODULES([QTXCBQPA], [Qt5XcbQpa], [QT_LIBS=\"$QTXCBQPA_LIBS $QT_LIBS\"])\n       elif test \"x$TARGET_OS\" = xdarwin; then\n-        PKG_CHECK_MODULES([QTCLIPBOARD], [Qt5ClipboardSupport], [QT_LIBS=\"-lQt5ClipboardSupport $QT_LIBS\"])\n-        PKG_CHECK_MODULES([QTGRAPHICS], [Qt5GraphicsSupport], [QT_LIBS=\"-lQt5GraphicsSupport $QT_LIBS\"])\n-        PKG_CHECK_MODULES([QTCGL], [Qt5CglSupport], [QT_LIBS=\"-lQt5CglSupport $QT_LIBS\"])\n+        PKG_CHECK_MODULES([QTCLIPBOARD], [Qt5ClipboardSupport${qt_lib_suffix}], [QT_LIBS=\"-lQt5ClipboardSupport${qt_lib_suffix} $QT_LIBS\"])\n+        PKG_CHECK_MODULES([QTGRAPHICS], [Qt5GraphicsSupport${qt_lib_suffix}], [QT_LIBS=\"-lQt5GraphicsSupport${qt_lib_suffix} $QT_LIBS\"])\n+        PKG_CHECK_MODULES([QTCGL], [Qt5CglSupport${qt_lib_suffix}], [QT_LIBS=\"-lQt5CglSupport${qt_lib_suffix} $QT_LIBS\"])\n       fi\n     fi\n ])\n@@ -329,26 +336,26 @@ dnl Outputs: All necessary QT_* variables are set.\n dnl Outputs: have_qt_test and have_qt_dbus are set (if applicable) to yes|no.\n AC_DEFUN([_BITCOIN_QT_FIND_LIBS],[\n   BITCOIN_QT_CHECK([\n-    PKG_CHECK_MODULES([QT_CORE], [${qt_lib_prefix}Core $qt_version], [],\n-                      [BITCOIN_QT_FAIL([${qt_lib_prefix}Core $qt_version not found])])\n+    PKG_CHECK_MODULES([QT_CORE], [${qt_lib_prefix}Core${qt_lib_suffix} $qt_version], [],\n+                      [BITCOIN_QT_FAIL([${qt_lib_prefix}Core${qt_lib_suffix} $qt_version not found])])\n   ])\n   BITCOIN_QT_CHECK([\n-    PKG_CHECK_MODULES([QT_GUI], [${qt_lib_prefix}Gui $qt_version], [],\n-                      [BITCOIN_QT_FAIL([${qt_lib_prefix}Gui $qt_version not found])])\n+    PKG_CHECK_MODULES([QT_GUI], [${qt_lib_prefix}Gui${qt_lib_suffix} $qt_version], [],\n+                      [BITCOIN_QT_FAIL([${qt_lib_prefix}Gui${qt_lib_suffix} $qt_version not found])])\n   ])\n   BITCOIN_QT_CHECK([\n-    PKG_CHECK_MODULES([QT_WIDGETS], [${qt_lib_prefix}Widgets $qt_version], [],\n-                      [BITCOIN_QT_FAIL([${qt_lib_prefix}Widgets $qt_version not found])])\n+    PKG_CHECK_MODULES([QT_WIDGETS], [${qt_lib_prefix}Widgets${qt_lib_suffix} $qt_version], [],\n+                      [BITCOIN_QT_FAIL([${qt_lib_prefix}Widgets${qt_lib_suffix} $qt_version not found])])\n   ])\n   BITCOIN_QT_CHECK([\n-    PKG_CHECK_MODULES([QT_NETWORK], [${qt_lib_prefix}Network $qt_version], [],\n-                      [BITCOIN_QT_FAIL([${qt_lib_prefix}Network $qt_version not found])])\n+    PKG_CHECK_MODULES([QT_NETWORK], [${qt_lib_prefix}Network${qt_lib_suffix} $qt_version], [],\n+                      [BITCOIN_QT_FAIL([${qt_lib_prefix}Network${qt_lib_suffix} $qt_version not found])])\n   ])\n   QT_INCLUDES=\"$QT_CORE_CFLAGS $QT_GUI_CFLAGS $QT_WIDGETS_CFLAGS $QT_NETWORK_CFLAGS\"\n   QT_LIBS=\"$QT_CORE_LIBS $QT_GUI_LIBS $QT_WIDGETS_LIBS $QT_NETWORK_LIBS\"\n \n   BITCOIN_QT_CHECK([\n-    PKG_CHECK_MODULES([QT_TEST], [${qt_lib_prefix}Test $qt_version], [QT_TEST_INCLUDES=\"$QT_TEST_CFLAGS\"; have_qt_test=yes], [have_qt_test=no])\n+    PKG_CHECK_MODULES([QT_TEST], [${qt_lib_prefix}Test${qt_lib_suffix} $qt_version], [QT_TEST_INCLUDES=\"$QT_TEST_CFLAGS\"; have_qt_test=yes], [have_qt_test=no])\n     if test \"x$use_dbus\" != xno; then\n       PKG_CHECK_MODULES([QT_DBUS], [${qt_lib_prefix}DBus $qt_version], [QT_DBUS_INCLUDES=\"$QT_DBUS_CFLAGS\"; have_qt_dbus=yes], [have_qt_dbus=no])\n     fi"
      },
      {
        "sha": "f1a59a5861a0bb60add0296016477b0fe4cd6f45",
        "filename": "depends/config.site.in",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/76f52e3da359c3738d36bc20ac13a8ccd17e4e9f/depends/config.site.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/76f52e3da359c3738d36bc20ac13a8ccd17e4e9f/depends/config.site.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/config.site.in?ref=76f52e3da359c3738d36bc20ac13a8ccd17e4e9f",
        "patch": "@@ -54,6 +54,10 @@ if test -z \"$with_gui\" && test -n \"@no_qt@\"; then\n   with_gui=no\n fi\n \n+if test -n \"@debug@\" && test -z \"@no_qt@\" && test \"x$with_gui\" != xno; then\n+  with_gui=qt5_debug\n+fi\n+\n if test -z \"$enable_zmq\" && test -n \"@no_zmq@\"; then\n   enable_zmq=no\n fi"
      }
    ]
  }
]