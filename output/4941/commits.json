[
  {
    "sha": "a49f11d9edf2f7dbce154ca370494a8f86e013d0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNDlmMTFkOWVkZjJmN2RiY2UxNTRjYTM3MDQ5NGE4Zjg2ZTAxM2Qw",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-09-18T11:14:38Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-09-18T11:21:26Z"
      },
      "message": "qt: Change splash screen to normal window\n\nMakes it possible to move, minimize, unminimize the window while\nBitcoin Core is initializing.",
      "tree": {
        "sha": "906f50b1935438b6d9c8bf5d51b61be8e3d4dc00",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/906f50b1935438b6d9c8bf5d51b61be8e3d4dc00"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a49f11d9edf2f7dbce154ca370494a8f86e013d0",
      "comment_count": 2,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a49f11d9edf2f7dbce154ca370494a8f86e013d0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a49f11d9edf2f7dbce154ca370494a8f86e013d0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a49f11d9edf2f7dbce154ca370494a8f86e013d0/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7fd881367544fcc9e70130bf448a181794da26ab",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7fd881367544fcc9e70130bf448a181794da26ab",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7fd881367544fcc9e70130bf448a181794da26ab"
      }
    ],
    "stats": {
      "total": 77,
      "additions": 58,
      "deletions": 19
    },
    "files": [
      {
        "sha": "676f218f20b9c67fb9267356b31f90345cd846d6",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 4,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a49f11d9edf2f7dbce154ca370494a8f86e013d0/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a49f11d9edf2f7dbce154ca370494a8f86e013d0/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=a49f11d9edf2f7dbce154ca370494a8f86e013d0",
        "patch": "@@ -338,8 +338,7 @@ void BitcoinApplication::createWindow(bool isaTestNet)\n \n void BitcoinApplication::createSplashScreen(bool isaTestNet)\n {\n-    SplashScreen *splash = new SplashScreen(QPixmap(), 0, isaTestNet);\n-    splash->setAttribute(Qt::WA_DeleteOnClose);\n+    SplashScreen *splash = new SplashScreen(0, isaTestNet);\n     splash->show();\n     connect(this, SIGNAL(splashFinished(QWidget*)), splash, SLOT(slotFinish(QWidget*)));\n }\n@@ -423,8 +422,6 @@ void BitcoinApplication::initializeResult(int retval)\n         }\n #endif\n \n-        emit splashFinished(window);\n-\n         // If -min option passed, start window minimized.\n         if(GetBoolArg(\"-min\", false))\n         {\n@@ -434,6 +431,8 @@ void BitcoinApplication::initializeResult(int retval)\n         {\n             window->show();\n         }\n+        emit splashFinished(window);\n+\n #ifdef ENABLE_WALLET\n         // Now that initialization/startup is done, process any command-line\n         // bitcoin: URIs or payment requests:"
      },
      {
        "sha": "b6443d47ff2277669f2af959adecc86c2b6c061b",
        "filename": "src/qt/splashscreen.cpp",
        "status": "modified",
        "additions": 42,
        "deletions": 13,
        "changes": 55,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a49f11d9edf2f7dbce154ca370494a8f86e013d0/src/qt/splashscreen.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a49f11d9edf2f7dbce154ca370494a8f86e013d0/src/qt/splashscreen.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/splashscreen.cpp?ref=a49f11d9edf2f7dbce154ca370494a8f86e013d0",
        "patch": "@@ -15,11 +15,12 @@\n \n #include <QApplication>\n #include <QPainter>\n+#include <QDesktopWidget>\n \n-SplashScreen::SplashScreen(const QPixmap &pixmap, Qt::WindowFlags f, bool isTestNet) :\n-    QSplashScreen(pixmap, f)\n+SplashScreen::SplashScreen(Qt::WindowFlags f, bool isTestNet) :\n+    QWidget(0, f), curAlignment(0)\n {\n-    setAutoFillBackground(true);\n+    //setAutoFillBackground(true);\n \n     // set reference point, paddings\n     int paddingRight            = 50;\n@@ -38,15 +39,14 @@ SplashScreen::SplashScreen(const QPixmap &pixmap, Qt::WindowFlags f, bool isTest\n     QString font            = \"Arial\";\n \n     // load the bitmap for writing some text over it\n-    QPixmap newPixmap;\n     if(isTestNet) {\n-        newPixmap     = QPixmap(\":/images/splash_testnet\");\n+        pixmap     = QPixmap(\":/images/splash_testnet\");\n     }\n     else {\n-        newPixmap     = QPixmap(\":/images/splash\");\n+        pixmap     = QPixmap(\":/images/splash\");\n     }\n \n-    QPainter pixPaint(&newPixmap);\n+    QPainter pixPaint(&pixmap);\n     pixPaint.setPen(QColor(100,100,100));\n \n     // check font size and drawing with\n@@ -61,7 +61,7 @@ SplashScreen::SplashScreen(const QPixmap &pixmap, Qt::WindowFlags f, bool isTest\n     pixPaint.setFont(QFont(font, 33*fontFactor));\n     fm = pixPaint.fontMetrics();\n     titleTextWidth  = fm.width(titleText);\n-    pixPaint.drawText(newPixmap.width()-titleTextWidth-paddingRight,paddingTop,titleText);\n+    pixPaint.drawText(pixmap.width()-titleTextWidth-paddingRight,paddingTop,titleText);\n \n     pixPaint.setFont(QFont(font, 15*fontFactor));\n \n@@ -72,11 +72,11 @@ SplashScreen::SplashScreen(const QPixmap &pixmap, Qt::WindowFlags f, bool isTest\n         pixPaint.setFont(QFont(font, 10*fontFactor));\n         titleVersionVSpace -= 5;\n     }\n-    pixPaint.drawText(newPixmap.width()-titleTextWidth-paddingRight+2,paddingTop+titleVersionVSpace,versionText);\n+    pixPaint.drawText(pixmap.width()-titleTextWidth-paddingRight+2,paddingTop+titleVersionVSpace,versionText);\n \n     // draw copyright stuff\n     pixPaint.setFont(QFont(font, 10*fontFactor));\n-    pixPaint.drawText(newPixmap.width()-titleTextWidth-paddingRight,paddingTop+titleCopyrightVSpace,copyrightText);\n+    pixPaint.drawText(pixmap.width()-titleTextWidth-paddingRight,paddingTop+titleCopyrightVSpace,copyrightText);\n \n     // draw testnet string if testnet is on\n     if(isTestNet) {\n@@ -85,12 +85,22 @@ SplashScreen::SplashScreen(const QPixmap &pixmap, Qt::WindowFlags f, bool isTest\n         pixPaint.setFont(boldFont);\n         fm = pixPaint.fontMetrics();\n         int testnetAddTextWidth  = fm.width(testnetAddText);\n-        pixPaint.drawText(newPixmap.width()-testnetAddTextWidth-10,15,testnetAddText);\n+        pixPaint.drawText(pixmap.width()-testnetAddTextWidth-10,15,testnetAddText);\n     }\n \n     pixPaint.end();\n \n-    this->setPixmap(newPixmap);\n+    // Set window title\n+    if(isTestNet)\n+        setWindowTitle(titleText + \" \" + testnetAddText);\n+    else\n+        setWindowTitle(titleText);\n+\n+    // Resize window and move to center of desktop, disallow resizing\n+    QRect r(QPoint(), pixmap.size());\n+    resize(r.size());\n+    setFixedSize(r.size());\n+    move(QApplication::desktop()->screenGeometry().center() - r.center());\n \n     subscribeToCoreSignals();\n }\n@@ -102,7 +112,8 @@ SplashScreen::~SplashScreen()\n \n void SplashScreen::slotFinish(QWidget *mainWin)\n {\n-    finish(mainWin);\n+    hide();\n+    deleteLater();\n }\n \n static void InitMessage(SplashScreen *splash, const std::string &message)\n@@ -146,3 +157,21 @@ void SplashScreen::unsubscribeFromCoreSignals()\n         pwalletMain->ShowProgress.disconnect(boost::bind(ShowProgress, this, _1, _2));\n #endif\n }\n+\n+void SplashScreen::showMessage(const QString &message, int alignment, const QColor &color)\n+{\n+    curMessage = message;\n+    curAlignment = alignment;\n+    curColor = color;\n+    update();\n+}\n+\n+void SplashScreen::paintEvent(QPaintEvent *event)\n+{\n+    QPainter painter(this);\n+    painter.drawPixmap(0, 0, pixmap);\n+    QRect r = rect().adjusted(5, 5, -5, -5);\n+    painter.setPen(curColor);\n+    painter.drawText(r, curAlignment, curMessage);\n+}\n+"
      },
      {
        "sha": "1151d6c11190f0cae8d1b97bc7ce7f5867140082",
        "filename": "src/qt/splashscreen.h",
        "status": "modified",
        "additions": 13,
        "deletions": 2,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a49f11d9edf2f7dbce154ca370494a8f86e013d0/src/qt/splashscreen.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a49f11d9edf2f7dbce154ca370494a8f86e013d0/src/qt/splashscreen.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/splashscreen.h?ref=a49f11d9edf2f7dbce154ca370494a8f86e013d0",
        "patch": "@@ -9,23 +9,34 @@\n \n /** class for the splashscreen with information of the running client\n  */\n-class SplashScreen : public QSplashScreen\n+class SplashScreen : public QWidget\n {\n     Q_OBJECT\n \n public:\n-    explicit SplashScreen(const QPixmap &pixmap, Qt::WindowFlags f, bool isTestNet);\n+    explicit SplashScreen(Qt::WindowFlags f, bool isTestNet);\n     ~SplashScreen();\n \n+protected:\n+     void paintEvent(QPaintEvent *event);\n+\n public slots:\n     /** Slot to call finish() method as it's not defined as slot */\n     void slotFinish(QWidget *mainWin);\n \n+    /** Show message and progress */\n+    void showMessage(const QString &message, int alignment, const QColor &color);\n+\n private:\n     /** Connect core signals to splash screen */\n     void subscribeToCoreSignals();\n     /** Disconnect core signals to splash screen */\n     void unsubscribeFromCoreSignals();\n+\n+    QPixmap pixmap;\n+    QString curMessage;\n+    QColor curColor;\n+    int curAlignment;\n };\n \n #endif // SPLASHSCREEN_H"
      }
    ]
  }
]