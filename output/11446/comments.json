[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/333955982",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11446#issuecomment-333955982",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11446",
    "id": 333955982,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMzk1NTk4Mg==",
    "user": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-03T19:43:24Z",
    "updated_at": "2017-10-03T19:43:24Z",
    "author_association": "MEMBER",
    "body": "Is it really necessary to request as many headers as possible on each bad chain?\r\n\r\nWhat about something like sending a request for non-deterministic headers from m to n, where```m = forkheight - rand(x), n = max(m + rand(2x), tip)``` from all chains (including the active one), that way we can also interpret ignored valid requests?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/333955982/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/333961048",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11446#issuecomment-333961048",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11446",
    "id": 333961048,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMzk2MTA0OA==",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?u=9791e96cd4268d48e3517bac41eaf2b1d09759fd&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-03T20:01:51Z",
    "updated_at": "2017-10-03T20:01:51Z",
    "author_association": "MEMBER",
    "body": "> Is it really necessary to request as many headers as possible on each bad chain?\r\n\r\nNo.\r\n\r\n> that way we can also interpret ignored valid requests?\r\n\r\nI'm not sure if that is useful or necessary. How do you know the difference between a node not having a block, rejected the block, or is just slow to respond?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/333961048/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/333973033",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11446#issuecomment-333973033",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11446",
    "id": 333973033,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMzk3MzAzMw==",
    "user": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-03T20:46:14Z",
    "updated_at": "2017-10-03T20:46:14Z",
    "author_association": "MEMBER",
    "body": "Cautious concept ack on doing this once, sometimes, post-handshake, but I think this needs to be thought through a bit more.\r\n\r\n- Amplification bugs seem easy to introduce here. I'd be more comfortable if the testing was non-deterministic, and done more like ~50% of the time.\r\n- Nodes can just ignore any block locator containing different chains.\r\n- It seems unnecessary/wasteful to do this for each block that comes in. Once you've been connected to a peer for a while and you're likely on the same chain, if you diverge, it should be already observable. What does this offer over the request done after the handshake?\r\n- I think this makes it trivial to construct a network-wide connection graph?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/333973033/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/333973040",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11446#issuecomment-333973040",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11446",
    "id": 333973040,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMzk3MzA0MA==",
    "user": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?u=63e5c438c242094837a9deeda775d77988b508bf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-03T20:46:15Z",
    "updated_at": "2017-10-03T20:46:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "I don't understand why this is generating any headers requests at all, we already will synchronize all headers on the peers best chain (obviously not transferring any we already know about).  We just need to see that they connect to an invalid block and disconnect.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/333973040/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/333978621",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11446#issuecomment-333978621",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11446",
    "id": 333978621,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMzk3ODYyMQ==",
    "user": {
      "login": "JeremyRubin",
      "id": 886523,
      "node_id": "MDQ6VXNlcjg4NjUyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886523?u=8cdd8653982252593843d7369ecfebe432b89768&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JeremyRubin",
      "html_url": "https://github.com/JeremyRubin",
      "followers_url": "https://api.github.com/users/JeremyRubin/followers",
      "following_url": "https://api.github.com/users/JeremyRubin/following{/other_user}",
      "gists_url": "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
      "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
      "repos_url": "https://api.github.com/users/JeremyRubin/repos",
      "events_url": "https://api.github.com/users/JeremyRubin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-03T21:06:18Z",
    "updated_at": "2017-10-03T21:06:18Z",
    "author_association": "CONTRIBUTOR",
    "body": " I don't really like this policy, I wouldn't go as far as a Concept NACK though because I think it can be adjusted to do what you want.\r\n\r\nI think returning an invalid block when requested is a weak indicator of peer correctness overall. Nodes to assuming \"you get what you ask for\" and feeding you invalid data -- if you ask for it and they have it -- seems like a semi-sane behavior. (e.g., the bitcoin-wiki says \"Keep in mind that some clients may provide headers of blocks which are invalid if the block locator object contains a hash on the invalid branch. \" of getheaders)\r\n\r\nOf course, this isn't quite what Bitcoin Core assumes currently, but introducing more dependency on it seems like questionable design.\r\n\r\nA safer alternative design would be to do a getheaders on the highest known valid previous header on that chain. Then, see if the invalid block is relayed. That way we're only ever querying for valid data.\r\n\r\n\r\nFor example, if we have a block A and A is valid, and then B comes out with parent A, but B is invalid, doing GetHeaders on A and disconnecting if B is returned is safer.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/333978621/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/333979198",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11446#issuecomment-333979198",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11446",
    "id": 333979198,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMzk3OTE5OA==",
    "user": {
      "login": "JeremyRubin",
      "id": 886523,
      "node_id": "MDQ6VXNlcjg4NjUyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886523?u=8cdd8653982252593843d7369ecfebe432b89768&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JeremyRubin",
      "html_url": "https://github.com/JeremyRubin",
      "followers_url": "https://api.github.com/users/JeremyRubin/followers",
      "following_url": "https://api.github.com/users/JeremyRubin/following{/other_user}",
      "gists_url": "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
      "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
      "repos_url": "https://api.github.com/users/JeremyRubin/repos",
      "events_url": "https://api.github.com/users/JeremyRubin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-03T21:08:22Z",
    "updated_at": "2017-10-03T21:08:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "Interleaving error (was taking my sweet time writing it up), but what @gmaxwell said should cover my suggestion as well.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/333979198/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/333989899",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11446#issuecomment-333989899",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11446",
    "id": 333989899,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMzk4OTg5OQ==",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?u=9791e96cd4268d48e3517bac41eaf2b1d09759fd&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-03T21:52:09Z",
    "updated_at": "2017-10-04T03:53:07Z",
    "author_association": "MEMBER",
    "body": "> It seems unnecessary/wasteful to do this for each block that comes in.\r\n\r\nI doesn't. It does this for each invalid block.\r\n\r\n> What does this offer over the request done after the handshake?\r\n\r\nI suppose it doesn't do that much after the handshake. The part that makes a difference with peers that have been connected to a while is the banning on duplicate invalid headers.\r\n\r\n> we already will synchronize all headers on the peers best chain (obviously not transferring any we already know about).\r\n\r\nEven with synchronizing all headers, I'm not sure that we necessarily know what a peer's best chain is. I thought that with compact blocks blocks can be relayed before a node has accepted it and made it part of its best chain. So we may not necessarily know whether they actually accepted an invalid block even though it was relayed to us.\r\n\r\nAlso, I don't think we necessarily know the headers chain of a newly connected peer.\r\n\r\n> A safer alternative design would be to do a getheaders on the highest known valid previous header on that chain. Then, see if the invalid block is relayed. That way we're only ever querying for valid data.\r\n\r\nRight, that seems like a better way of checking. I think then it is harder to tell whether you are actually syncing the blockchain and whether you are testing the peer for correctness.\r\n\r\nEdit: I gave this a bit more thought. We may want to directly request an invalid block because the invalid block may not be part of their best chain yet they still could have accepted it as valid.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/333989899/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/334000406",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11446#issuecomment-334000406",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11446",
    "id": 334000406,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNDAwMDQwNg==",
    "user": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?u=63e5c438c242094837a9deeda775d77988b508bf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-03T22:43:32Z",
    "updated_at": "2017-10-03T22:43:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I think returning an invalid block when requested is a weak indicator of peer correctness overall. Nodes to assuming \"you get what you ask for\" and feeding you invalid data -- if you ask for it and they have it -- seems like a semi-sane behavior. \r\n\r\nI don't agree that what you describe is a sane behavior and it is not a behavior of the Bitcoin protocol in the past.  It's prudent and important to that we're able to punt peers that send us invalid data.  Usually when you ask for something you do not know it will be invalid.   If a peer will send you invalid data because you asked for it, then they'll send you invalid data when you were not expecting it either. :)\r\n\r\nIn general, being willing to forward something we know is invalid is begging for a transitive fault, cases where you send something invalid to a node, it forwards it on to a third party, and the third party really can't handle it and punts them.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/334000406/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/334020829",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11446#issuecomment-334020829",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11446",
    "id": 334020829,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNDAyMDgyOQ==",
    "user": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?u=63e5c438c242094837a9deeda775d77988b508bf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-04T00:54:20Z",
    "updated_at": "2017-10-04T00:54:20Z",
    "author_association": "CONTRIBUTOR",
    "body": ">  I think then it is harder to tell whether you are actually syncing the blockchain and whether you are testing the peer for correctness.\r\n\r\nYes, well and I think it can actually be done with basically no extra network traffic, just responding differently to messages we already get (punt a peer if they give you a header whos parent is something we've marked invalid). ",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/334020829/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/334021378",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11446#issuecomment-334021378",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11446",
    "id": 334021378,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNDAyMTM3OA==",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?u=9791e96cd4268d48e3517bac41eaf2b1d09759fd&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-04T00:58:43Z",
    "updated_at": "2017-10-04T00:58:43Z",
    "author_association": "MEMBER",
    "body": "> punt a peer if they give you a header whos parent is something we've marked invalid\r\n\r\nWe already do that. I'm more concerned about how you get a peer to tell you what blocks are in its best chain without having to wait for a new block to be found.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/334021378/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/334192077",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11446#issuecomment-334192077",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11446",
    "id": 334192077,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNDE5MjA3Nw==",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?u=9791e96cd4268d48e3517bac41eaf2b1d09759fd&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-04T15:22:25Z",
    "updated_at": "2017-10-04T15:22:25Z",
    "author_association": "MEMBER",
    "body": "After giving this some more thought and sleeping on it, I have a slightly different propsal:\r\n\r\n1. Ban all nodes who give us an invalid block even after we have already seen the block (Note: I'm not sure how this interacts with compact blocks).\r\n2. After the version handshake, send each node a `getheaders` request with the parent block of each invalid block that we have (i.e. a `getheaders` for each invalid block) and no stop block. If we get an invalid header, we will ban them per part 1. We won't send `getheaders` for blocks that are older than some time period (maybe 2000 blocks so we only need one `getheaders` since I think it is also unlikely that we wouldn't disconnect and ban a node that diverged from us several thousand blocks ago). The actual block requested in the `getheaders` can be fuzzed a bit too.\r\n\r\n@gmaxwell @theuni @JeremyRubin What do you think?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/334192077/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/334530050",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11446#issuecomment-334530050",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11446",
    "id": 334530050,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNDUzMDA1MA==",
    "user": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?u=63e5c438c242094837a9deeda775d77988b508bf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-05T17:08:28Z",
    "updated_at": "2017-10-05T17:08:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "For peers that are sending us HB mode compact blocks we can only kick things off for a subset of invalidity reasons. ",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/334530050/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/334953583",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11446#issuecomment-334953583",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11446",
    "id": 334953583,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNDk1MzU4Mw==",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?u=9791e96cd4268d48e3517bac41eaf2b1d09759fd&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-07T17:46:45Z",
    "updated_at": "2017-10-07T17:46:45Z",
    "author_association": "MEMBER",
    "body": "I have updated this to be as we discussed in the IRC meeting. If we see a block header for a block we already know is invalid, we disconnect from the node that sent it. The only exception are our HB CB nodes.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/334953583/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/336317957",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11446#issuecomment-336317957",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11446",
    "id": 336317957,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNjMxNzk1Nw==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-13T00:33:23Z",
    "updated_at": "2017-10-13T00:33:23Z",
    "author_association": "MEMBER",
    "body": "Going to test this.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/336317957/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/338056762",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11446#issuecomment-338056762",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11446",
    "id": 338056762,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzODA1Njc2Mg==",
    "user": {
      "login": "meshcollider",
      "id": 3211283,
      "node_id": "MDQ6VXNlcjMyMTEyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3211283?u=447cdc9e2966cbee415545c8ff452954ee1209af&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meshcollider",
      "html_url": "https://github.com/meshcollider",
      "followers_url": "https://api.github.com/users/meshcollider/followers",
      "following_url": "https://api.github.com/users/meshcollider/following{/other_user}",
      "gists_url": "https://api.github.com/users/meshcollider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
      "organizations_url": "https://api.github.com/users/meshcollider/orgs",
      "repos_url": "https://api.github.com/users/meshcollider/repos",
      "events_url": "https://api.github.com/users/meshcollider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meshcollider/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-19T22:34:25Z",
    "updated_at": "2017-10-19T22:34:25Z",
    "author_association": "MEMBER",
    "body": "utACK https://github.com/bitcoin/bitcoin/pull/11446/commits/23b7af0ac484ce4a7f46060c06e3dca5a8c26d0d",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/338056762/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/338071627",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11446#issuecomment-338071627",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11446",
    "id": 338071627,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzODA3MTYyNw==",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-20T00:11:45Z",
    "updated_at": "2017-10-20T00:11:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm not sure how I feel about this - the current disconnection/ban logic on invalid headers is proabbly too conservative, but it helps in the case of soft forks where there are occasional invalid blocks relayed preventing us from banning all of our un-upgraded peers. Maybe we should ratchet up the agressiveness here, but only for outbound peers? I think just that change would be sufficient for 0.15.0.2, though I'd really like to see some refactoring of the CValidationState stuff happen so ProcessNewBlockHeaders could inform us of more granular error messages for net_processing to use here.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/338071627/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/338082893",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11446#issuecomment-338082893",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11446",
    "id": 338082893,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzODA4Mjg5Mw==",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-20T01:41:58Z",
    "updated_at": "2017-10-20T01:41:58Z",
    "author_association": "MEMBER",
    "body": "I think there's a small race condition in the CMPCTBLOCK handler -- there's a circumstance where we would revert to headers processing, and we release cs_main before doing so.  If the block header is learned to be invalid in between initial processing and re-processing, then I think this patch would disconnect an HB compact block peer inappropriately.\r\n\r\nI'm not really sure what the best remedy is; if we moved headers processing to its own function in net_processing, then I'd say we could just pass in whether this is coming from a compact block or not.  Not sure that suggestion makes sense as long as it's living in ProcessMessages(), though.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/338082893/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/338744044",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11446#issuecomment-338744044",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11446",
    "id": 338744044,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzODc0NDA0NA==",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?u=9791e96cd4268d48e3517bac41eaf2b1d09759fd&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-23T17:57:31Z",
    "updated_at": "2017-10-23T17:57:31Z",
    "author_association": "MEMBER",
    "body": "> I think there's a small race condition in the CMPCTBLOCK handler -- there's a circumstance where we would revert to headers processing, and we release cs_main before doing so. If the block header is learned to be invalid in between initial processing and re-processing, then I think this patch would disconnect an HB compact block peer inappropriately.\r\n\r\nWhy would it revert to headers processing?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/338744044/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/338763477",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11446#issuecomment-338763477",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11446",
    "id": 338763477,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzODc2MzQ3Nw==",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-23T19:03:36Z",
    "updated_at": "2017-10-23T19:03:36Z",
    "author_association": "MEMBER",
    "body": "@achow101 See https://github.com/bitcoin/bitcoin/blob/57ee73990f1ce29916adfd99f93eae1ccea1a43b/src/net_processing.cpp#L2130\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/338763477/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/340007655",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11446#issuecomment-340007655",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11446",
    "id": 340007655,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDAwNzY1NQ==",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?u=9791e96cd4268d48e3517bac41eaf2b1d09759fd&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-27T15:41:18Z",
    "updated_at": "2017-10-27T15:41:18Z",
    "author_association": "MEMBER",
    "body": "superseded by #11568",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/340007655/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142493120",
    "pull_request_review_id": 66863238,
    "id": 142493120,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MjQ5MzEyMA==",
    "diff_hunk": "@@ -1370,6 +1375,17 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n             connman->PushMessage(pfrom, CNetMsgMaker(nSendVersion).Make(\"alert\", finalAlert));\n         }\n \n+        // Ask this peer for the block headers of all of the blocks we know are invalid\n+        // If we receive headers messages for these invalid blocks, we will ban them.\n+        std::vector<uint256> invalid_block_hashes;\n+        for (const std::pair<const uint256, CBlockIndex*>& item : mapBlockIndex)",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 19,
    "commit_id": "23b7af0ac484ce4a7f46060c06e3dca5a8c26d0d",
    "original_commit_id": "e41ceb2edf274d0aa88037f31f772926d3764fc7",
    "user": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Should probably wait until VERACK for this.\r\n\r\nAlso, walking mapBlockIndex seems a little heavy here, no?",
    "created_at": "2017-10-03T19:04:08Z",
    "updated_at": "2017-10-19T20:33:18Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11446#discussion_r142493120",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11446",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142493120"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11446#discussion_r142493120"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11446"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142493120/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1381,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142495438",
    "pull_request_review_id": 66865972,
    "id": 142495438,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MjQ5NTQzOA==",
    "diff_hunk": "@@ -1370,6 +1375,17 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n             connman->PushMessage(pfrom, CNetMsgMaker(nSendVersion).Make(\"alert\", finalAlert));\n         }\n \n+        // Ask this peer for the block headers of all of the blocks we know are invalid\n+        // If we receive headers messages for these invalid blocks, we will ban them.\n+        std::vector<uint256> invalid_block_hashes;\n+        for (const std::pair<const uint256, CBlockIndex*>& item : mapBlockIndex)",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 19,
    "commit_id": "23b7af0ac484ce4a7f46060c06e3dca5a8c26d0d",
    "original_commit_id": "e41ceb2edf274d0aa88037f31f772926d3764fc7",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Besides walking `mapBlockIndex`, what do you suggest? I was considering making something to just store the hashes of the invalid blocks instead.",
    "created_at": "2017-10-03T19:13:46Z",
    "updated_at": "2017-10-19T20:33:18Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11446#discussion_r142495438",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11446",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142495438"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11446#discussion_r142495438"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11446"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142495438/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1381,
    "side": "RIGHT",
    "in_reply_to_id": 142493120
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142503177",
    "pull_request_review_id": 66874918,
    "id": 142503177,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MjUwMzE3Nw==",
    "diff_hunk": "@@ -1370,6 +1375,17 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n             connman->PushMessage(pfrom, CNetMsgMaker(nSendVersion).Make(\"alert\", finalAlert));\n         }\n \n+        // Ask this peer for the block headers of all of the blocks we know are invalid\n+        // If we receive headers messages for these invalid blocks, we will ban them.\n+        std::vector<uint256> invalid_block_hashes;\n+        for (const std::pair<const uint256, CBlockIndex*>& item : mapBlockIndex)",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 19,
    "commit_id": "23b7af0ac484ce4a7f46060c06e3dca5a8c26d0d",
    "original_commit_id": "e41ceb2edf274d0aa88037f31f772926d3764fc7",
    "user": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yea, I'd say the fork-points need to be cached. Unsure if it'd be best to just do it here and be done with it, or maintain something in validation.cpp that (for ex) getchaintips could also use.",
    "created_at": "2017-10-03T19:47:07Z",
    "updated_at": "2017-10-19T20:33:18Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11446#discussion_r142503177",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11446",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142503177"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11446#discussion_r142503177"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11446"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142503177/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1381,
    "side": "RIGHT",
    "in_reply_to_id": 142493120
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142505375",
    "pull_request_review_id": 66877529,
    "id": 142505375,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MjUwNTM3NQ==",
    "diff_hunk": "@@ -1370,6 +1375,17 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n             connman->PushMessage(pfrom, CNetMsgMaker(nSendVersion).Make(\"alert\", finalAlert));\n         }\n \n+        // Ask this peer for the block headers of all of the blocks we know are invalid\n+        // If we receive headers messages for these invalid blocks, we will ban them.\n+        std::vector<uint256> invalid_block_hashes;\n+        for (const std::pair<const uint256, CBlockIndex*>& item : mapBlockIndex)",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 19,
    "commit_id": "23b7af0ac484ce4a7f46060c06e3dca5a8c26d0d",
    "original_commit_id": "e41ceb2edf274d0aa88037f31f772926d3764fc7",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Well it would have to be something that is loaded/generated on startup too.",
    "created_at": "2017-10-03T19:56:04Z",
    "updated_at": "2017-10-19T20:33:18Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11446#discussion_r142505375",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11446",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142505375"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11446#discussion_r142505375"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11446"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142505375/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1381,
    "side": "RIGHT",
    "in_reply_to_id": 142493120
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142505404",
    "pull_request_review_id": 66877543,
    "id": 142505404,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MjUwNTQwNA==",
    "diff_hunk": "@@ -1972,6 +1989,11 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n                     Misbehaving(pfrom->GetId(), nDoS);\n                 }\n                 LogPrintf(\"Peer %d sent us invalid header via cmpctblock\\n\", pfrom->GetId());\n+                // Send a getheaders message with the hash of the invalid block to all peers.\n+                // Those who respond to this message will be banned.\n+                connman->ForEachNode([cmpctblock, connman](CNode* pnode) {\n+                    connman->PushMessage(pnode, CNetMsgMaker(pnode->GetSendVersion()).Make(NetMsgType::GETHEADERS, CBlockLocator({cmpctblock.header.GetHash()}), uint256()));",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 38,
    "commit_id": "23b7af0ac484ce4a7f46060c06e3dca5a8c26d0d",
    "original_commit_id": "ad944f3eedcbcfcecb5d66b33e2b80ba94718531",
    "user": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Feedback loop here.",
    "created_at": "2017-10-03T19:56:06Z",
    "updated_at": "2017-10-19T20:33:18Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11446#discussion_r142505404",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11446",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142505404"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11446#discussion_r142505404"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11446"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142505404/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1995,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142505576",
    "pull_request_review_id": 66877737,
    "id": 142505576,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MjUwNTU3Ng==",
    "diff_hunk": "@@ -2289,6 +2313,11 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n                     LOCK(cs_main);\n                     Misbehaving(pfrom->GetId(), nDoS);\n                 }\n+                // Send a getheaders message with the hash of the invalid block to all peers.\n+                // Those who respond to this message will be banned.\n+                connman->ForEachNode([header_hashes, connman](CNode* pnode) {\n+                    connman->PushMessage(pnode, CNetMsgMaker(pnode->GetSendVersion()).Make(NetMsgType::GETHEADERS, CBlockLocator(header_hashes), uint256()));",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 66,
    "commit_id": "23b7af0ac484ce4a7f46060c06e3dca5a8c26d0d",
    "original_commit_id": "ad944f3eedcbcfcecb5d66b33e2b80ba94718531",
    "user": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "feedback loop here too :)",
    "created_at": "2017-10-03T19:56:48Z",
    "updated_at": "2017-10-19T20:33:18Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11446#discussion_r142505576",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11446",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142505576"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11446#discussion_r142505576"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11446"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142505576/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2319,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142505845",
    "pull_request_review_id": 66878068,
    "id": 142505845,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MjUwNTg0NQ==",
    "diff_hunk": "@@ -1972,6 +1989,11 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n                     Misbehaving(pfrom->GetId(), nDoS);\n                 }\n                 LogPrintf(\"Peer %d sent us invalid header via cmpctblock\\n\", pfrom->GetId());\n+                // Send a getheaders message with the hash of the invalid block to all peers.\n+                // Those who respond to this message will be banned.\n+                connman->ForEachNode([cmpctblock, connman](CNode* pnode) {\n+                    connman->PushMessage(pnode, CNetMsgMaker(pnode->GetSendVersion()).Make(NetMsgType::GETHEADERS, CBlockLocator({cmpctblock.header.GetHash()}), uint256()));",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 38,
    "commit_id": "23b7af0ac484ce4a7f46060c06e3dca5a8c26d0d",
    "original_commit_id": "ad944f3eedcbcfcecb5d66b33e2b80ba94718531",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "how so?",
    "created_at": "2017-10-03T19:57:58Z",
    "updated_at": "2017-10-19T20:33:18Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11446#discussion_r142505845",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11446",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142505845"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11446#discussion_r142505845"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11446"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142505845/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1995,
    "side": "RIGHT",
    "in_reply_to_id": 142505404
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142507824",
    "pull_request_review_id": 66880403,
    "id": 142507824,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MjUwNzgyNA==",
    "diff_hunk": "@@ -1972,6 +1989,11 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n                     Misbehaving(pfrom->GetId(), nDoS);\n                 }\n                 LogPrintf(\"Peer %d sent us invalid header via cmpctblock\\n\", pfrom->GetId());\n+                // Send a getheaders message with the hash of the invalid block to all peers.\n+                // Those who respond to this message will be banned.\n+                connman->ForEachNode([cmpctblock, connman](CNode* pnode) {\n+                    connman->PushMessage(pnode, CNetMsgMaker(pnode->GetSendVersion()).Make(NetMsgType::GETHEADERS, CBlockLocator({cmpctblock.header.GetHash()}), uint256()));",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 38,
    "commit_id": "23b7af0ac484ce4a7f46060c06e3dca5a8c26d0d",
    "original_commit_id": "ad944f3eedcbcfcecb5d66b33e2b80ba94718531",
    "user": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Node sends you bad header, you request that header from all nodes (including the one that just sent it). Same node replies with same header, you request it again from all nodes... repeat until they get banned.",
    "created_at": "2017-10-03T20:05:46Z",
    "updated_at": "2017-10-19T20:33:18Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11446#discussion_r142507824",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11446",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142507824"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11446#discussion_r142507824"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11446"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142507824/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1995,
    "side": "RIGHT",
    "in_reply_to_id": 142505404
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142508339",
    "pull_request_review_id": 66880970,
    "id": 142508339,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MjUwODMzOQ==",
    "diff_hunk": "@@ -1972,6 +1989,11 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n                     Misbehaving(pfrom->GetId(), nDoS);\n                 }\n                 LogPrintf(\"Peer %d sent us invalid header via cmpctblock\\n\", pfrom->GetId());\n+                // Send a getheaders message with the hash of the invalid block to all peers.\n+                // Those who respond to this message will be banned.\n+                connman->ForEachNode([cmpctblock, connman](CNode* pnode) {\n+                    connman->PushMessage(pnode, CNetMsgMaker(pnode->GetSendVersion()).Make(NetMsgType::GETHEADERS, CBlockLocator({cmpctblock.header.GetHash()}), uint256()));",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 38,
    "commit_id": "23b7af0ac484ce4a7f46060c06e3dca5a8c26d0d",
    "original_commit_id": "ad944f3eedcbcfcecb5d66b33e2b80ba94718531",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Isn't the node that sent it to you in the first place already banned by the time this runs?",
    "created_at": "2017-10-03T20:07:56Z",
    "updated_at": "2017-10-19T20:33:18Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11446#discussion_r142508339",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11446",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142508339"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11446#discussion_r142508339"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11446"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142508339/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1995,
    "side": "RIGHT",
    "in_reply_to_id": 142505404
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142517016",
    "pull_request_review_id": 66891023,
    "id": 142517016,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MjUxNzAxNg==",
    "diff_hunk": "@@ -1972,6 +1989,11 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n                     Misbehaving(pfrom->GetId(), nDoS);\n                 }\n                 LogPrintf(\"Peer %d sent us invalid header via cmpctblock\\n\", pfrom->GetId());\n+                // Send a getheaders message with the hash of the invalid block to all peers.\n+                // Those who respond to this message will be banned.\n+                connman->ForEachNode([cmpctblock, connman](CNode* pnode) {\n+                    connman->PushMessage(pnode, CNetMsgMaker(pnode->GetSendVersion()).Make(NetMsgType::GETHEADERS, CBlockLocator({cmpctblock.header.GetHash()}), uint256()));",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 38,
    "commit_id": "23b7af0ac484ce4a7f46060c06e3dca5a8c26d0d",
    "original_commit_id": "ad944f3eedcbcfcecb5d66b33e2b80ba94718531",
    "user": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "No, not necessarily. See \"high-hash\" for example. But even still, the ban/disconnect should not be assumed. What if they're whitelisted?",
    "created_at": "2017-10-03T20:42:30Z",
    "updated_at": "2017-10-19T20:33:18Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11446#discussion_r142517016",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11446",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142517016"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11446#discussion_r142517016"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11446"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/142517016/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1995,
    "side": "RIGHT",
    "in_reply_to_id": 142505404
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/144654182",
    "pull_request_review_id": 69347207,
    "id": 144654182,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NDY1NDE4Mg==",
    "diff_hunk": "@@ -1970,6 +1970,8 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n                 if (nDoS > 0) {\n                     LOCK(cs_main);\n                     Misbehaving(pfrom->GetId(), nDoS);\n+                } else if (std::find(lNodesAnnouncingHeaderAndIDs.begin(), lNodesAnnouncingHeaderAndIDs.end(), pfrom->GetId()) == lNodesAnnouncingHeaderAndIDs.end()) {",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 4,
    "commit_id": "23b7af0ac484ce4a7f46060c06e3dca5a8c26d0d",
    "original_commit_id": "eb1aa2c27aa91a4ddd93a370751490d10046dab7",
    "user": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Do we not want to disconnect if ban points were assigned?",
    "created_at": "2017-10-13T20:50:08Z",
    "updated_at": "2017-10-19T20:33:18Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11446#discussion_r144654182",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11446",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/144654182"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11446#discussion_r144654182"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11446"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/144654182/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1973,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/144654688",
    "pull_request_review_id": 69347806,
    "id": 144654688,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NDY1NDY4OA==",
    "diff_hunk": "@@ -2288,6 +2290,8 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n                 if (nDoS > 0) {\n                     LOCK(cs_main);\n                     Misbehaving(pfrom->GetId(), nDoS);\n+                } else {\n+                    pfrom->fDisconnect = true;",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 14,
    "commit_id": "23b7af0ac484ce4a7f46060c06e3dca5a8c26d0d",
    "original_commit_id": "eb1aa2c27aa91a4ddd93a370751490d10046dab7",
    "user": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Same here.",
    "created_at": "2017-10-13T20:52:45Z",
    "updated_at": "2017-10-19T20:33:18Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11446#discussion_r144654688",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11446",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/144654688"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11446#discussion_r144654688"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11446"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/144654688/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2294,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/144658071",
    "pull_request_review_id": 69351964,
    "id": 144658071,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NDY1ODA3MQ==",
    "diff_hunk": "@@ -1970,6 +1970,8 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n                 if (nDoS > 0) {\n                     LOCK(cs_main);\n                     Misbehaving(pfrom->GetId(), nDoS);\n+                } else if (std::find(lNodesAnnouncingHeaderAndIDs.begin(), lNodesAnnouncingHeaderAndIDs.end(), pfrom->GetId()) == lNodesAnnouncingHeaderAndIDs.end()) {",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 4,
    "commit_id": "23b7af0ac484ce4a7f46060c06e3dca5a8c26d0d",
    "original_commit_id": "eb1aa2c27aa91a4ddd93a370751490d10046dab7",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Most of the time when ban points are assigned, 100 points are assigned and the peer is banned and disconnected. However there are a few cases (e.g. https://github.com/bitcoin/bitcoin/blob/master/src/validation.cpp#L3060) where ban points are assigned but not 100 of them, and we don't necessarily want to disconnect on those.",
    "created_at": "2017-10-13T21:12:26Z",
    "updated_at": "2017-10-19T20:33:18Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11446#discussion_r144658071",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11446",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/144658071"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11446#discussion_r144658071"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11446"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/144658071/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1973,
    "side": "RIGHT",
    "in_reply_to_id": 144654182
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/144662407",
    "pull_request_review_id": 69357004,
    "id": 144662407,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NDY2MjQwNw==",
    "diff_hunk": "@@ -1970,6 +1970,8 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n                 if (nDoS > 0) {\n                     LOCK(cs_main);\n                     Misbehaving(pfrom->GetId(), nDoS);\n+                } else if (std::find(lNodesAnnouncingHeaderAndIDs.begin(), lNodesAnnouncingHeaderAndIDs.end(), pfrom->GetId()) == lNodesAnnouncingHeaderAndIDs.end()) {",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 4,
    "commit_id": "23b7af0ac484ce4a7f46060c06e3dca5a8c26d0d",
    "original_commit_id": "eb1aa2c27aa91a4ddd93a370751490d10046dab7",
    "user": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Mmm, that's not at all obvious. For now at least, ban points are rather arbitrary. Not completely, of course, but I don't think their values can be relied on to convey any particular meaning. ~~Besides that, they could've already gotten some ban points for some other message.~~\r\n\r\nAnyway, Misbehaving() already does what you've described. So this actually seems backwards. Now, they're disconnected immediately if no points were assigned, but giving 10 points keeps them connected...",
    "created_at": "2017-10-13T21:39:19Z",
    "updated_at": "2017-10-19T20:33:18Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11446#discussion_r144662407",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11446",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/144662407"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11446#discussion_r144662407"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11446"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/144662407/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1973,
    "side": "RIGHT",
    "in_reply_to_id": 144654182
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/144663206",
    "pull_request_review_id": 69357913,
    "id": 144663206,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NDY2MzIwNg==",
    "diff_hunk": "@@ -1970,6 +1970,8 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n                 if (nDoS > 0) {\n                     LOCK(cs_main);\n                     Misbehaving(pfrom->GetId(), nDoS);\n+                } else if (std::find(lNodesAnnouncingHeaderAndIDs.begin(), lNodesAnnouncingHeaderAndIDs.end(), pfrom->GetId()) == lNodesAnnouncingHeaderAndIDs.end()) {",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 4,
    "commit_id": "23b7af0ac484ce4a7f46060c06e3dca5a8c26d0d",
    "original_commit_id": "eb1aa2c27aa91a4ddd93a370751490d10046dab7",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Do you think we should just disconnect always when something is invalid?",
    "created_at": "2017-10-13T21:44:18Z",
    "updated_at": "2017-10-19T20:33:18Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11446#discussion_r144663206",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11446",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/144663206"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11446#discussion_r144663206"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11446"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/144663206/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1973,
    "side": "RIGHT",
    "in_reply_to_id": 144654182
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/145261255",
    "pull_request_review_id": 70036661,
    "id": 145261255,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NTI2MTI1NQ==",
    "diff_hunk": "@@ -1970,6 +1970,8 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n                 if (nDoS > 0) {\n                     LOCK(cs_main);\n                     Misbehaving(pfrom->GetId(), nDoS);\n+                } else if (std::find(lNodesAnnouncingHeaderAndIDs.begin(), lNodesAnnouncingHeaderAndIDs.end(), pfrom->GetId()) == lNodesAnnouncingHeaderAndIDs.end()) {",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 4,
    "commit_id": "23b7af0ac484ce4a7f46060c06e3dca5a8c26d0d",
    "original_commit_id": "eb1aa2c27aa91a4ddd93a370751490d10046dab7",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This is racy. There is no way to check if a peer might have been in compact-fast-relay mode when you receive a compact block header.",
    "created_at": "2017-10-17T21:28:08Z",
    "updated_at": "2017-10-19T20:33:18Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11446#discussion_r145261255",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11446",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/145261255"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11446#discussion_r145261255"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11446"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/145261255/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1973,
    "side": "RIGHT",
    "in_reply_to_id": 144654182
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/145519932",
    "pull_request_review_id": 70332271,
    "id": 145519932,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NTUxOTkzMg==",
    "diff_hunk": "@@ -1970,6 +1970,8 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n                 if (nDoS > 0) {\n                     LOCK(cs_main);\n                     Misbehaving(pfrom->GetId(), nDoS);\n+                } else if (std::find(lNodesAnnouncingHeaderAndIDs.begin(), lNodesAnnouncingHeaderAndIDs.end(), pfrom->GetId()) == lNodesAnnouncingHeaderAndIDs.end()) {",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 4,
    "commit_id": "23b7af0ac484ce4a7f46060c06e3dca5a8c26d0d",
    "original_commit_id": "eb1aa2c27aa91a4ddd93a370751490d10046dab7",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Would it be better to just always disconnect on an invalid block, regardless?",
    "created_at": "2017-10-18T19:38:52Z",
    "updated_at": "2017-10-19T20:33:18Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11446#discussion_r145519932",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11446",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/145519932"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11446#discussion_r145519932"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11446"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/145519932/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1973,
    "side": "RIGHT",
    "in_reply_to_id": 144654182
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/145555589",
    "pull_request_review_id": 70373225,
    "id": 145555589,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NTU1NTU4OQ==",
    "diff_hunk": "@@ -1970,6 +1970,8 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n                 if (nDoS > 0) {\n                     LOCK(cs_main);\n                     Misbehaving(pfrom->GetId(), nDoS);\n+                } else if (std::find(lNodesAnnouncingHeaderAndIDs.begin(), lNodesAnnouncingHeaderAndIDs.end(), pfrom->GetId()) == lNodesAnnouncingHeaderAndIDs.end()) {",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 4,
    "commit_id": "23b7af0ac484ce4a7f46060c06e3dca5a8c26d0d",
    "original_commit_id": "eb1aa2c27aa91a4ddd93a370751490d10046dab7",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think we should just ignore this case. My first reaction was to suggest you do a getheaders request, but then I went down a rabbit hole trying to decide whether the peer is required to respond with the header if they decided the block was valid (it turns out BIP 152 explicitly answers this question with a no). Per BIP 152, I believe the way to \"correctly\" handle this would be to reply with a getdata for the same compact block that you just received, and then handle that differently (!) but that seems absolutely crazy, and not worth it given that compact blocks are only allowed to build on the best chain so we should disconnect them immediately when they get the next block (see https://github.com/bitcoin/bips/pull/601)",
    "created_at": "2017-10-18T22:03:43Z",
    "updated_at": "2017-10-19T20:33:18Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11446#discussion_r145555589",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11446",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/145555589"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11446#discussion_r145555589"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11446"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/145555589/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1973,
    "side": "RIGHT",
    "in_reply_to_id": 144654182
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/145795318",
    "pull_request_review_id": 70649186,
    "id": 145795318,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NTc5NTMxOA==",
    "diff_hunk": "@@ -1970,6 +1970,8 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n                 if (nDoS > 0) {\n                     LOCK(cs_main);\n                     Misbehaving(pfrom->GetId(), nDoS);\n+                } else if (std::find(lNodesAnnouncingHeaderAndIDs.begin(), lNodesAnnouncingHeaderAndIDs.end(), pfrom->GetId()) == lNodesAnnouncingHeaderAndIDs.end()) {",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 4,
    "commit_id": "23b7af0ac484ce4a7f46060c06e3dca5a8c26d0d",
    "original_commit_id": "eb1aa2c27aa91a4ddd93a370751490d10046dab7",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "@TheBlueMatt \r\n\r\n> I think we should just ignore this case.\r\n\r\nDo you mean just disconnect regardless or just don't do anything here and let invalid blocks through here?",
    "created_at": "2017-10-19T19:07:20Z",
    "updated_at": "2017-10-19T20:33:18Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11446#discussion_r145795318",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11446",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/145795318"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11446#discussion_r145795318"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11446"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/145795318/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1973,
    "side": "RIGHT",
    "in_reply_to_id": 144654182
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/145815241",
    "pull_request_review_id": 70672437,
    "id": 145815241,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NTgxNTI0MQ==",
    "diff_hunk": "@@ -1970,6 +1970,8 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n                 if (nDoS > 0) {\n                     LOCK(cs_main);\n                     Misbehaving(pfrom->GetId(), nDoS);\n+                } else if (std::find(lNodesAnnouncingHeaderAndIDs.begin(), lNodesAnnouncingHeaderAndIDs.end(), pfrom->GetId()) == lNodesAnnouncingHeaderAndIDs.end()) {",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 4,
    "commit_id": "23b7af0ac484ce4a7f46060c06e3dca5a8c26d0d",
    "original_commit_id": "eb1aa2c27aa91a4ddd93a370751490d10046dab7",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Ok, I just removed this check and disconnect. After reviewing BIP 152 again, the low bandwidth peers should already be disconnected by the disconnection in handling the `headers` message so our high bandwidth peers are still unaffected.",
    "created_at": "2017-10-19T20:31:39Z",
    "updated_at": "2017-10-19T20:33:18Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11446#discussion_r145815241",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11446",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/145815241"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11446#discussion_r145815241"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11446"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/145815241/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1973,
    "side": "RIGHT",
    "in_reply_to_id": 144654182
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/145815330",
    "pull_request_review_id": 70672528,
    "id": 145815330,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NTgxNTMzMA==",
    "diff_hunk": "@@ -2288,6 +2290,8 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n                 if (nDoS > 0) {\n                     LOCK(cs_main);\n                     Misbehaving(pfrom->GetId(), nDoS);\n+                } else {\n+                    pfrom->fDisconnect = true;",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 14,
    "commit_id": "23b7af0ac484ce4a7f46060c06e3dca5a8c26d0d",
    "original_commit_id": "eb1aa2c27aa91a4ddd93a370751490d10046dab7",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Removed the `else` statement so it will always disconnect on an invalid block header.",
    "created_at": "2017-10-19T20:32:00Z",
    "updated_at": "2017-10-19T20:33:18Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11446#discussion_r145815330",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11446",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/145815330"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11446#discussion_r145815330"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11446"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/145815330/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2294,
    "side": "RIGHT",
    "in_reply_to_id": 144654688
  }
]