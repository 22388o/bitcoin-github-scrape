jonasschnelli,2017-07-05T16:13:45Z,utACK 0f3d58be40672151468700fb5a05898468814880,https://github.com/bitcoin/bitcoin/pull/10749#issuecomment-313151372,313151372,
jgarzik,2017-07-05T17:43:00Z,"This enum technique is a well-defined way to generate typed constants.\n\nIs it causing problems somewhere?",https://github.com/bitcoin/bitcoin/pull/10749#issuecomment-313175282,313175282,
TheBlueMatt,2017-07-05T18:22:42Z,utACK 0f3d58be40672151468700fb5a05898468814880,https://github.com/bitcoin/bitcoin/pull/10749#issuecomment-313185641,313185641,
benma,2017-07-25T11:44:41Z,"First time I read about `constexpr`, and I also googled for enum vs constexpr. For what it's worth, I've seen quite a few threads that lean towards enums even with constexpr being available, like https://stackoverflow.com/a/37259949.\n\n`constexpr` is easier to read, and it doesn't seem to have a downside at least in this PR.",https://github.com/bitcoin/bitcoin/pull/10749#issuecomment-317712493,317712493,
practicalswift,2017-07-25T11:50:25Z,@benma I take that as an utACK? :-),https://github.com/bitcoin/bitcoin/pull/10749#issuecomment-317713718,317713718,
practicalswift,2017-07-25T22:15:23Z,Rebased!,https://github.com/bitcoin/bitcoin/pull/10749#issuecomment-317889171,317889171,
benma,2017-07-26T14:51:02Z,utACK 1e65f0f3396d5d7eaa8e8dd3668dfa180b541c18,https://github.com/bitcoin/bitcoin/pull/10749#issuecomment-318077270,318077270,
jnewbery,2017-08-17T16:33:40Z,ACK 1e65f0f3396d5d7eaa8e8dd3668dfa180b541c18,https://github.com/bitcoin/bitcoin/pull/10749#issuecomment-323126206,323126206,
MarcoFalke,2017-11-11T17:33:12Z,"```\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\nutACK 1e65f0f3396d5d7eaa8e8dd3668dfa180b541c18\n-----BEGIN PGP SIGNATURE-----\n\niQIcBAEBCgAGBQJaBzQQAAoJENLqSFDnUosllrgP/0Jq2acX/JFfphTWDMcGzChi\nNtMamQFeV1gvGLvUYW7UogT6R1BGCCCJ92OeVZFBQWsLo5ZkrucxQcUYKDnV5gKi\n7LCl/8rz6LWmPvJszFPUjvE7/X5Nd6r1crCZJ9oPaO/w4tK8k5UeeI+ODn6+XUFN\nWaoqP/sxnfeDm90fDybU7aix0yCaDsLZ/rHl6zVFSLQerb4McKG7ji",https://github.com/bitcoin/bitcoin/pull/10749#issuecomment-343680674,343680674,
benma,2017-07-25T16:11:50Z,"Isn't an enum appropriate when it's indeed an enumeration?\n\nAso, please rebase, as there are other consts that could be constexprs in consensus.h now:\n\n```c++\nstatic const size_t MIN_TRANSACTION_WEIGHT = WITNESS_SCALE_FACTOR * 60; // 60 is the lower bound for the size of a valid serialized CTransaction\nstatic const size_t MIN_SERIALIZABLE_TRANSACTION_WEIGHT = WITNESS_SCALE_FACTOR * 10;",https://github.com/bitcoin/bitcoin/pull/10749#discussion_r129352054,129352054,src/consensus/consensus.h
practicalswift,2017-07-25T22:30:15Z,"1. Sure, that case could be made. I can do it as a scoped named enum (`enum class`). Any suggestion on a proper name for that enumeration?\n2. The goal of this PR is to get rid of enum hacks. Changing existing `const`:s to `constexpr`:s is not within that scope :-)\n3. When introducing new compile-time constants I prefer `constexpr` which is explicit about the intention of the code (getting a *c",https://github.com/bitcoin/bitcoin/pull/10749#discussion_r129442300,129442300,src/consensus/consensus.h
benma,2017-07-26T14:52:12Z,Thanks. I just thew in some thoughts in case you can pick something from it. I have no preference either way.,https://github.com/bitcoin/bitcoin/pull/10749#discussion_r129595242,129595242,src/consensus/consensus.h
