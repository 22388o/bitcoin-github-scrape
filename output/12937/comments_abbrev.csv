randolf,2018-04-11T05:27:25Z,"Although internally it's stored as a byte, I wonder, are there other projects that might be relying on this API with ""int"" parameters instead of ""unsigned char"" parameters?  If so, this could introduce an incompatibility (which should be avoidable by providing ""int"" parameterized subroutines alongside these ""unsigned char"" parameterized subroutines that are also marked as ""deprecated"" (and their d",https://github.com/bitcoin/bitcoin/pull/12937#issuecomment-380331572,380331572,
Empact,2018-04-11T07:11:34Z,"Good question, looking over the method signatures affected:\n\nThe following are static in script/interpreter.cpp, so not externally visible\n* `VerifyWitnessProgram`\n* `WitnessSigOps`\n\n`DecodeOP_N` is static in `script/script.h`. It could be moved to `script/script.cpp` if we also moved `Solver` to that file, from `script/standard.cpp`\n\n`CScript::IsWitnessProgram` is necessarily publ",https://github.com/bitcoin/bitcoin/pull/12937#issuecomment-380350837,380350837,
laanwj,2018-04-11T14:46:31Z,"Sorry, but I don't see the point, to be honest.\nThis is consensus critical code, if there's no good reason to change it (and ""this type looks better"" or ""we can avoid a cast here"" isn't a good reason like that) we shouldn't.",https://github.com/bitcoin/bitcoin/pull/12937#issuecomment-380479080,380479080,
sdaftuar,2018-04-11T14:51:37Z,"I was about to say the same as @laanwj -- I think we should have a higher threshold for changing consensus critical code, to justify the review burden.  Concept NACK.",https://github.com/bitcoin/bitcoin/pull/12937#issuecomment-380480860,380480860,
MarcoFalke,2018-04-11T14:58:47Z,"Closing for now, since there seems to be disagreement whether to do stylistic refactoring to consensus critical code.",https://github.com/bitcoin/bitcoin/pull/12937#issuecomment-380483482,380483482,
