[
  {
    "sha": "269b94336d96b745962c3e0c4090a12016b1bf67",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyNjliOTQzMzZkOTZiNzQ1OTYyYzNlMGM0MDkwYTEyMDE2YjFiZjY3",
    "commit": {
      "author": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2018-04-11T04:05:43Z"
      },
      "committer": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2018-04-11T04:09:14Z"
      },
      "message": "Handle witness version and OP_N results as an unsigned char\n\nAccording to BIP 141, the version range is 0-16 and stored as a byte.\nSimilarly, DecodeOP_N presents a range of 0-16. Thus an unsigned char\nis a natural/direct representation for the value.\n\nRemoves the need for 2 casts.",
      "tree": {
        "sha": "30202d8b808c3b1b207ad8d63632e1d42277c2ea",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/30202d8b808c3b1b207ad8d63632e1d42277c2ea"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/269b94336d96b745962c3e0c4090a12016b1bf67",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE+XLHXoy4Dim7e8hvTYykuhgECQYFAlrNiu8ACgkQTYykuhgE\nCQZ1gw//S3zdNFkhSYB2V0Rijarh6nUYG8gpKk96BEoAPeD6fjE4x4Hm1yPuiGdg\n1Qc2dhthLlA9S9dKWRu4sTjzGPMXBNbgSfV+ht94GsxzTngu/V+4VnahKdMc8vfC\nYrj1PRw5bAhD+pUmKdYH6PQERNSdTZSXYVW56rzSUOGQ3RY7xGEy9slkaF1AOATV\nvx8CGng+6QNchbAhyMtGgeAydG0QaUNXQtEiz10Tkz+2UEmGi1Dy0uo5f5IzOCxu\ndgT4bFWiVsMY6ZPXhDWoizrmUDhj2ZyfEDAMgqO58wvFroaO+eD+JpNzsYQCd/BI\num4J86bJjsmda/HjpuayGQME/OMWzxmYClbN+2QEO8QWSB82mjrYovT4IFtYBAHN\ntZ7nVTgPt1VSSDQ1LEYaZ9vCo08QmdGPApYoyh/EOB1ghTx4INVRKMa0GUGtxcJS\n2iso8nxfEay5Cy10aMhP3CNjUZDH13SOIQLX+ZotWgnPzSBLKIMmlx39D2E6sEJq\nWwek/hzQ5xNOzGPtxxEwl7PVrfB9on+UNoPipNFSxrjV0/vbFRcL54jT0uifj86E\nolAeAxhAp/zOj7ksPVwvuiix4MlqynI+Jm1wowe2Dtmdf50sVyyq08N0jAJtanss\njaQJ1wCO8uupakKBE0ZcYuhK93CqAPH02bKkC8+1T+e3IJKmKPc=\n=5zm4\n-----END PGP SIGNATURE-----",
        "payload": "tree 30202d8b808c3b1b207ad8d63632e1d42277c2ea\nparent 0a8054e7cd5c76d01e4ac7234e3883d05f6f5fdd\nauthor Ben Woosley <ben.woosley@gmail.com> 1523419543 -0700\ncommitter Ben Woosley <ben.woosley@gmail.com> 1523419754 -0700\n\nHandle witness version and OP_N results as an unsigned char\n\nAccording to BIP 141, the version range is 0-16 and stored as a byte.\nSimilarly, DecodeOP_N presents a range of 0-16. Thus an unsigned char\nis a natural/direct representation for the value.\n\nRemoves the need for 2 casts.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/269b94336d96b745962c3e0c4090a12016b1bf67",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/269b94336d96b745962c3e0c4090a12016b1bf67",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/269b94336d96b745962c3e0c4090a12016b1bf67/comments",
    "author": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0a8054e7cd5c76d01e4ac7234e3883d05f6f5fdd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0a8054e7cd5c76d01e4ac7234e3883d05f6f5fdd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0a8054e7cd5c76d01e4ac7234e3883d05f6f5fdd"
      }
    ],
    "stats": {
      "total": 38,
      "additions": 20,
      "deletions": 18
    },
    "files": [
      {
        "sha": "0413be53149e07bd2c2914cfae788cfbf64b1873",
        "filename": "src/bench/verify_script.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/269b94336d96b745962c3e0c4090a12016b1bf67/src/bench/verify_script.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/269b94336d96b745962c3e0c4090a12016b1bf67/src/bench/verify_script.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/verify_script.cpp?ref=269b94336d96b745962c3e0c4090a12016b1bf67",
        "patch": "@@ -53,7 +53,7 @@ static CMutableTransaction BuildSpendingTransaction(const CScript& scriptSig, co\n static void VerifyScriptBench(benchmark::State& state)\n {\n     const int flags = SCRIPT_VERIFY_WITNESS | SCRIPT_VERIFY_P2SH;\n-    const int witnessversion = 0;\n+    const unsigned char witnessversion = 0;\n \n     // Keypair.\n     CKey key;"
      },
      {
        "sha": "f6fd0909da3516d0e45ceb6bccbe719a048d4a2e",
        "filename": "src/policy/policy.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/269b94336d96b745962c3e0c4090a12016b1bf67/src/policy/policy.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/269b94336d96b745962c3e0c4090a12016b1bf67/src/policy/policy.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/policy.cpp?ref=269b94336d96b745962c3e0c4090a12016b1bf67",
        "patch": "@@ -35,7 +35,7 @@ CAmount GetDustThreshold(const CTxOut& txout, const CFeeRate& dustRelayFeeIn)\n         return 0;\n \n     size_t nSize = GetSerializeSize(txout, SER_DISK, 0);\n-    int witnessversion = 0;\n+    unsigned char witnessversion = 0;\n     std::vector<unsigned char> witnessprogram;\n \n     if (txout.scriptPubKey.IsWitnessProgram(witnessversion, witnessprogram)) {\n@@ -222,7 +222,7 @@ bool IsWitnessStandard(const CTransaction& tx, const CCoinsViewCache& mapInputs)\n             prevScript = CScript(stack.back().begin(), stack.back().end());\n         }\n \n-        int witnessversion = 0;\n+        unsigned char witnessversion = 0;\n         std::vector<unsigned char> witnessprogram;\n \n         // Non-witness program must not be associated with any witness"
      },
      {
        "sha": "df219a4de958d4f33bfa793202de5a8e1bf9d7d3",
        "filename": "src/qt/coincontroldialog.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/269b94336d96b745962c3e0c4090a12016b1bf67/src/qt/coincontroldialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/269b94336d96b745962c3e0c4090a12016b1bf67/src/qt/coincontroldialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/coincontroldialog.cpp?ref=269b94336d96b745962c3e0c4090a12016b1bf67",
        "patch": "@@ -468,7 +468,7 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n \n         // Bytes\n         CTxDestination address;\n-        int witnessversion = 0;\n+        unsigned char witnessversion = 0;\n         std::vector<unsigned char> witnessprogram;\n         if (out.txout.scriptPubKey.IsWitnessProgram(witnessversion, witnessprogram))\n         {"
      },
      {
        "sha": "308f085087aff2b313b538d64f06ab4805a763ab",
        "filename": "src/script/interpreter.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/269b94336d96b745962c3e0c4090a12016b1bf67/src/script/interpreter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/269b94336d96b745962c3e0c4090a12016b1bf67/src/script/interpreter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.cpp?ref=269b94336d96b745962c3e0c4090a12016b1bf67",
        "patch": "@@ -1355,7 +1355,7 @@ bool TransactionSignatureChecker::CheckSequence(const CScriptNum& nSequence) con\n     return true;\n }\n \n-static bool VerifyWitnessProgram(const CScriptWitness& witness, int witversion, const std::vector<unsigned char>& program, unsigned int flags, const BaseSignatureChecker& checker, ScriptError* serror)\n+static bool VerifyWitnessProgram(const CScriptWitness& witness, unsigned char witversion, const std::vector<unsigned char>& program, unsigned int flags, const BaseSignatureChecker& checker, ScriptError* serror)\n {\n     std::vector<std::vector<unsigned char> > stack;\n     CScript scriptPubKey;\n@@ -1437,7 +1437,7 @@ bool VerifyScript(const CScript& scriptSig, const CScript& scriptPubKey, const C\n         return set_error(serror, SCRIPT_ERR_EVAL_FALSE);\n \n     // Bare witness programs\n-    int witnessversion;\n+    unsigned char witnessversion;\n     std::vector<unsigned char> witnessprogram;\n     if (flags & SCRIPT_VERIFY_WITNESS) {\n         if (scriptPubKey.IsWitnessProgram(witnessversion, witnessprogram)) {\n@@ -1527,7 +1527,7 @@ bool VerifyScript(const CScript& scriptSig, const CScript& scriptPubKey, const C\n     return set_success(serror);\n }\n \n-size_t static WitnessSigOps(int witversion, const std::vector<unsigned char>& witprogram, const CScriptWitness& witness, int flags)\n+size_t static WitnessSigOps(unsigned char witversion, const std::vector<unsigned char>& witprogram, const CScriptWitness& witness, int flags)\n {\n     if (witversion == 0) {\n         if (witprogram.size() == 20)\n@@ -1552,7 +1552,7 @@ size_t CountWitnessSigOps(const CScript& scriptSig, const CScript& scriptPubKey,\n     }\n     assert((flags & SCRIPT_VERIFY_P2SH) != 0);\n \n-    int witnessversion;\n+    unsigned char witnessversion;\n     std::vector<unsigned char> witnessprogram;\n     if (scriptPubKey.IsWitnessProgram(witnessversion, witnessprogram)) {\n         return WitnessSigOps(witnessversion, witnessprogram, witness ? *witness : witnessEmpty, flags);"
      },
      {
        "sha": "51fbcbd93092dc4ac7aed067b1287d9e67747c60",
        "filename": "src/script/script.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/269b94336d96b745962c3e0c4090a12016b1bf67/src/script/script.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/269b94336d96b745962c3e0c4090a12016b1bf67/src/script/script.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/script.cpp?ref=269b94336d96b745962c3e0c4090a12016b1bf67",
        "patch": "@@ -218,7 +218,7 @@ bool CScript::IsPayToWitnessScriptHash() const\n \n // A witness program is any valid CScript that consists of a 1-byte push opcode\n // followed by a data push between 2 and 40 bytes.\n-bool CScript::IsWitnessProgram(int& version, std::vector<unsigned char>& program) const\n+bool CScript::IsWitnessProgram(unsigned char& version, std::vector<unsigned char>& program) const\n {\n     if (this->size() < 4 || this->size() > 42) {\n         return false;"
      },
      {
        "sha": "231c1923b9b2beb7f079abb0275f673431435ae8",
        "filename": "src/script/script.h",
        "status": "modified",
        "additions": 5,
        "deletions": 3,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/269b94336d96b745962c3e0c4090a12016b1bf67/src/script/script.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/269b94336d96b745962c3e0c4090a12016b1bf67/src/script/script.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/script.h?ref=269b94336d96b745962c3e0c4090a12016b1bf67",
        "patch": "@@ -573,13 +573,15 @@ class CScript : public CScriptBase\n     }\n \n     /** Encode/decode small integers: */\n-    static int DecodeOP_N(opcodetype opcode)\n+    static unsigned char DecodeOP_N(opcodetype opcode)\n     {\n         if (opcode == OP_0)\n             return 0;\n         assert(opcode >= OP_1 && opcode <= OP_16);\n-        return (int)opcode - (int)(OP_1 - 1);\n+        return (unsigned char)opcode - (unsigned char)(OP_1 - 1);\n     }\n+    static_assert((unsigned char)OP_16 - (unsigned char)(OP_1 - 1) == 16, \"Unexpected value for OP_N calculation\");\n+\n     static opcodetype EncodeOP_N(int n)\n     {\n         assert(n >= 0 && n <= 16);\n@@ -642,7 +644,7 @@ class CScript : public CScriptBase\n \n     bool IsPayToScriptHash() const;\n     bool IsPayToWitnessScriptHash() const;\n-    bool IsWitnessProgram(int& version, std::vector<unsigned char>& program) const;\n+    bool IsWitnessProgram(unsigned char& version, std::vector<unsigned char>& program) const;\n \n     /** Called by IsStandardTx and P2SH/BIP62 VerifyScript (which makes it consensus-critical). */\n     bool IsPushOnly(const_iterator pc) const;"
      },
      {
        "sha": "d6962d5b36f8e1355b41e4fd72985d1174f49690",
        "filename": "src/script/standard.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/269b94336d96b745962c3e0c4090a12016b1bf67/src/script/standard.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/269b94336d96b745962c3e0c4090a12016b1bf67/src/script/standard.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/standard.cpp?ref=269b94336d96b745962c3e0c4090a12016b1bf67",
        "patch": "@@ -63,7 +63,7 @@ bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, std::vector<std::v\n         return true;\n     }\n \n-    int witnessversion;\n+    unsigned char witnessversion;\n     std::vector<unsigned char> witnessprogram;\n     if (scriptPubKey.IsWitnessProgram(witnessversion, witnessprogram)) {\n         if (witnessversion == 0 && witnessprogram.size() == 20) {\n@@ -78,7 +78,7 @@ bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, std::vector<std::v\n         }\n         if (witnessversion != 0) {\n             typeRet = TX_WITNESS_UNKNOWN;\n-            vSolutionsRet.push_back(std::vector<unsigned char>{(unsigned char)witnessversion});\n+            vSolutionsRet.push_back(std::vector<unsigned char>{witnessversion});\n             vSolutionsRet.push_back(std::move(witnessprogram));\n             return true;\n         }\n@@ -161,7 +161,7 @@ bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, std::vector<std::v\n                 if (opcode1 == OP_0 ||\n                     (opcode1 >= OP_1 && opcode1 <= OP_16))\n                 {\n-                    char n = (char)CScript::DecodeOP_N(opcode1);\n+                    unsigned char n = CScript::DecodeOP_N(opcode1);\n                     vSolutionsRet.push_back(valtype(1, n));\n                 }\n                 else"
      },
      {
        "sha": "90a9f9767102c0c8046a9343bfb4e5bcc0cf86d1",
        "filename": "src/test/script_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/269b94336d96b745962c3e0c4090a12016b1bf67/src/test/script_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/269b94336d96b745962c3e0c4090a12016b1bf67/src/test/script_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/script_tests.cpp?ref=269b94336d96b745962c3e0c4090a12016b1bf67",
        "patch": "@@ -308,7 +308,7 @@ class TestBuilder\n     }\n \n public:\n-    TestBuilder(const CScript& script_, const std::string& comment_, int flags_, bool P2SH = false, WitnessMode wm = WitnessMode::NONE, int witnessversion = 0, CAmount nValue_ = 0) : script(script_), havePush(false), comment(comment_), flags(flags_), scriptError(SCRIPT_ERR_OK), nValue(nValue_)\n+    TestBuilder(const CScript& script_, const std::string& comment_, int flags_, bool P2SH = false, WitnessMode wm = WitnessMode::NONE, unsigned char witnessversion = 0, CAmount nValue_ = 0) : script(script_), havePush(false), comment(comment_), flags(flags_), scriptError(SCRIPT_ERR_OK), nValue(nValue_)\n     {\n         CScript scriptPubKey = script;\n         if (wm == WitnessMode::PKH) {"
      },
      {
        "sha": "7ec4c3abfe30823517be6d7664cd5733ac03d9f9",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/269b94336d96b745962c3e0c4090a12016b1bf67/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/269b94336d96b745962c3e0c4090a12016b1bf67/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=269b94336d96b745962c3e0c4090a12016b1bf67",
        "patch": "@@ -1270,7 +1270,7 @@ class Witnessifier : public boost::static_visitor<bool>\n     bool operator()(const CScriptID &scriptID) {\n         CScript subscript;\n         if (pwallet && pwallet->GetCScript(scriptID, subscript)) {\n-            int witnessversion;\n+            unsigned char witnessversion;\n             std::vector<unsigned char> witprog;\n             if (subscript.IsWitnessProgram(witnessversion, witprog)) {\n                 ExtractDestination(subscript, result);"
      },
      {
        "sha": "022f5bfeef2122fe94369d5f50fab071e2eaa220",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/269b94336d96b745962c3e0c4090a12016b1bf67/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/269b94336d96b745962c3e0c4090a12016b1bf67/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=269b94336d96b745962c3e0c4090a12016b1bf67",
        "patch": "@@ -2659,7 +2659,7 @@ OutputType CWallet::TransactionChangeType(OutputType change_type, const std::vec\n     // output.\n     for (const auto& recipient : vecSend) {\n         // Check if any destination contains a witness program:\n-        int witnessversion = 0;\n+        unsigned char witnessversion = 0;\n         std::vector<unsigned char> witnessprogram;\n         if (recipient.scriptPubKey.IsWitnessProgram(witnessversion, witnessprogram)) {\n             return OutputType::BECH32;"
      }
    ]
  }
]