[
  {
    "sha": "5efc95a63ded35e157e757987e6ca4849f36a049",
    "node_id": "C_kwDOABII59oAKDVlZmM5NWE2M2RlZDM1ZTE1N2U3NTc5ODdlNmNhNDg0OWYzNmEwNDk",
    "commit": {
      "author": {
        "name": "nnihsotas",
        "email": "93150471+nnihsotas@users.noreply.github.com",
        "date": "2021-11-03T01:41:48Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2021-11-03T01:41:48Z"
      },
      "message": "Delete Makefile.am",
      "tree": {
        "sha": "64d78b3b5b8c553c7defafbb996d6dae141143ab",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/64d78b3b5b8c553c7defafbb996d6dae141143ab"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5efc95a63ded35e157e757987e6ca4849f36a049",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhgejcCRBK7hj4Ov3rIwAAsaIIAD9qH21BNtZxtt1AROZyyqiI\nOo3CL+xUNFtRMwmIyDTF0USN3cHDA67Mm6mtBkuHDqvlV276qkgw2HxlE06wNJ5k\n5oBAzMcm583lRG96aXBh4fEvOM/RjCpre/bxUbw+3r4gYE62pc+m+ZIjswXTtwWH\n0WAouuwO3claeC8lDXdNzV8nBHNDmUnKtBD7g85n7uhEyhwtESqlQJ9Xtdua4IlH\nIsd+GR46d9wQerTmwvYLcyU9Lmn/t/72st5YKCBoN9gIcU34Kzqx+W4za/IRPz19\n+IExC8qL/Aj2mTvsdRox/s76kcNPNFTLLVJPtjPL+Cd0ieQU9L2lXmRpFLK2QrA=\n=p9+I\n-----END PGP SIGNATURE-----\n",
        "payload": "tree 64d78b3b5b8c553c7defafbb996d6dae141143ab\nparent 3c4729a515d85e3cfcd66220c849857c712597e4\nauthor nnihsotas <93150471+nnihsotas@users.noreply.github.com> 1635903708 +0000\ncommitter GitHub <noreply@github.com> 1635903708 +0000\n\nDelete Makefile.am"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5efc95a63ded35e157e757987e6ca4849f36a049",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5efc95a63ded35e157e757987e6ca4849f36a049",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5efc95a63ded35e157e757987e6ca4849f36a049/comments",
    "author": null,
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3c4729a515d85e3cfcd66220c849857c712597e4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3c4729a515d85e3cfcd66220c849857c712597e4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3c4729a515d85e3cfcd66220c849857c712597e4"
      }
    ],
    "stats": {
      "total": 379,
      "additions": 0,
      "deletions": 379
    },
    "files": [
      {
        "sha": "af63cf0cbbc2b171352d276f3983a77ef5e8df21",
        "filename": "Makefile.am",
        "status": "removed",
        "additions": 0,
        "deletions": 379,
        "changes": 379,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c4729a515d85e3cfcd66220c849857c712597e4/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c4729a515d85e3cfcd66220c849857c712597e4/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/Makefile.am?ref=3c4729a515d85e3cfcd66220c849857c712597e4",
        "patch": "@@ -1,379 +0,0 @@\n-# Copyright (c) 2013-2020 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-# Pattern rule to print variables, e.g. make print-top_srcdir\n-print-%: FORCE\n-\t@echo '$*'='$($*)'\n-\n-ACLOCAL_AMFLAGS = -I build-aux/m4\n-SUBDIRS = src\n-if ENABLE_MAN\n-SUBDIRS += doc/man\n-endif\n-.PHONY: deploy FORCE\n-.INTERMEDIATE: $(OSX_TEMP_ISO) $(COVERAGE_INFO)\n-\n-export PYTHONPATH\n-\n-if BUILD_BITCOIN_LIBS\n-pkgconfigdir = $(libdir)/pkgconfig\n-pkgconfig_DATA = libbitcoinconsensus.pc\n-endif\n-\n-BITCOIND_BIN=$(top_builddir)/src/$(BITCOIN_DAEMON_NAME)$(EXEEXT)\n-BITCOIN_QT_BIN=$(top_builddir)/src/qt/$(BITCOIN_GUI_NAME)$(EXEEXT)\n-BITCOIN_CLI_BIN=$(top_builddir)/src/$(BITCOIN_CLI_NAME)$(EXEEXT)\n-BITCOIN_TX_BIN=$(top_builddir)/src/$(BITCOIN_TX_NAME)$(EXEEXT)\n-BITCOIN_UTIL_BIN=$(top_builddir)/src/$(BITCOIN_UTIL_NAME)$(EXEEXT)\n-BITCOIN_WALLET_BIN=$(top_builddir)/src/$(BITCOIN_WALLET_TOOL_NAME)$(EXEEXT)\n-BITCOIN_NODE_BIN=$(top_builddir)/src/$(BITCOIN_MP_NODE_NAME)$(EXEEXT)\n-BITCOIN_GUI_BIN=$(top_builddir)/src/$(BITCOIN_MP_GUI_NAME)$(EXEEXT)\n-BITCOIN_WIN_INSTALLER=$(PACKAGE)-$(PACKAGE_VERSION)-win64-setup$(EXEEXT)\n-\n-empty :=\n-space := $(empty) $(empty)\n-\n-OSX_APP=Bitcoin-Qt.app\n-OSX_VOLNAME = $(subst $(space),-,$(PACKAGE_NAME))\n-OSX_DMG = $(OSX_VOLNAME).dmg\n-OSX_TEMP_ISO = $(OSX_DMG:.dmg=).temp.iso\n-OSX_BACKGROUND_SVG=background.svg\n-OSX_BACKGROUND_IMAGE=background.tiff\n-OSX_BACKGROUND_IMAGE_DPIS=36 72\n-OSX_DEPLOY_SCRIPT=$(top_srcdir)/contrib/macdeploy/macdeployqtplus\n-OSX_INSTALLER_ICONS=$(top_srcdir)/src/qt/res/icons/bitcoin.icns\n-OSX_PLIST=$(top_builddir)/share/qt/Info.plist #not installed\n-\n-DIST_CONTRIB = \\\n-\t       $(top_srcdir)/test/sanitizer_suppressions/lsan \\\n-\t       $(top_srcdir)/test/sanitizer_suppressions/tsan \\\n-\t       $(top_srcdir)/test/sanitizer_suppressions/ubsan \\\n-\t       $(top_srcdir)/contrib/linearize/linearize-data.py \\\n-\t       $(top_srcdir)/contrib/linearize/linearize-hashes.py\n-\n-DIST_SHARE = \\\n-  $(top_srcdir)/share/genbuild.sh \\\n-  $(top_srcdir)/share/rpcauth\n-\n-BIN_CHECKS=$(top_srcdir)/contrib/devtools/symbol-check.py \\\n-           $(top_srcdir)/contrib/devtools/security-check.py \\\n-           $(top_srcdir)/contrib/devtools/utils.py\n-\n-WINDOWS_PACKAGING = $(top_srcdir)/share/pixmaps/bitcoin.ico \\\n-  $(top_srcdir)/share/pixmaps/nsis-header.bmp \\\n-  $(top_srcdir)/share/pixmaps/nsis-wizard.bmp \\\n-  $(top_srcdir)/doc/README_windows.txt\n-\n-OSX_PACKAGING = $(OSX_DEPLOY_SCRIPT) $(OSX_INSTALLER_ICONS) \\\n-  $(top_srcdir)/contrib/macdeploy/$(OSX_BACKGROUND_SVG) \\\n-  $(top_srcdir)/contrib/macdeploy/detached-sig-apply.sh \\\n-  $(top_srcdir)/contrib/macdeploy/detached-sig-create.sh\n-\n-COVERAGE_INFO = $(COV_TOOL_WRAPPER) baseline.info \\\n-  test_bitcoin_filtered.info total_coverage.info \\\n-  baseline_filtered.info functional_test.info functional_test_filtered.info \\\n-  test_bitcoin_coverage.info test_bitcoin.info fuzz.info fuzz_filtered.info fuzz_coverage.info\n-\n-dist-hook:\n-\t-$(GIT) archive --format=tar HEAD -- src/clientversion.cpp | $(AMTAR) -C $(top_distdir) -xf -\n-\n-if TARGET_WINDOWS\n-$(BITCOIN_WIN_INSTALLER): all-recursive\n-\t$(MKDIR_P) $(top_builddir)/release\n-\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(BITCOIND_BIN) $(top_builddir)/release\n-\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(BITCOIN_QT_BIN) $(top_builddir)/release\n-\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(BITCOIN_CLI_BIN) $(top_builddir)/release\n-\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(BITCOIN_TX_BIN) $(top_builddir)/release\n-\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(BITCOIN_WALLET_BIN) $(top_builddir)/release\n-\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(BITCOIN_UTIL_BIN) $(top_builddir)/release\n-\t@test -f $(MAKENSIS) && echo 'OutFile \"$@\"' | cat $(top_builddir)/share/setup.nsi - | $(MAKENSIS) -V2 - || \\\n-\t  echo error: could not build $@\n-\t@echo built $@\n-\n-deploy: $(BITCOIN_WIN_INSTALLER)\n-endif\n-\n-if TARGET_DARWIN\n-$(OSX_APP)/Contents/PkgInfo:\n-\t$(MKDIR_P) $(@D)\n-\t@echo \"APPL????\" > $@\n-\n-$(OSX_APP)/Contents/Resources/empty.lproj:\n-\t$(MKDIR_P) $(@D)\n-\t@touch $@\n-\n-$(OSX_APP)/Contents/Info.plist: $(OSX_PLIST)\n-\t$(MKDIR_P) $(@D)\n-\t$(INSTALL_DATA) $< $@\n-\n-$(OSX_APP)/Contents/Resources/bitcoin.icns: $(OSX_INSTALLER_ICONS)\n-\t$(MKDIR_P) $(@D)\n-\t$(INSTALL_DATA) $< $@\n-\n-$(OSX_APP)/Contents/MacOS/Bitcoin-Qt: all-recursive\n-\t$(MKDIR_P) $(@D)\n-\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM)  $(BITCOIN_QT_BIN) $@\n-\n-$(OSX_APP)/Contents/Resources/Base.lproj/InfoPlist.strings:\n-\t$(MKDIR_P) $(@D)\n-\techo '{\tCFBundleDisplayName = \"$(PACKAGE_NAME)\"; CFBundleName = \"$(PACKAGE_NAME)\"; }' > $@\n-\n-OSX_APP_BUILT=$(OSX_APP)/Contents/PkgInfo $(OSX_APP)/Contents/Resources/empty.lproj \\\n-  $(OSX_APP)/Contents/Resources/bitcoin.icns $(OSX_APP)/Contents/Info.plist \\\n-  $(OSX_APP)/Contents/MacOS/Bitcoin-Qt $(OSX_APP)/Contents/Resources/Base.lproj/InfoPlist.strings\n-\n-osx_volname:\n-\techo $(OSX_VOLNAME) >$@\n-\n-if BUILD_DARWIN\n-$(OSX_DMG): $(OSX_APP_BUILT) $(OSX_PACKAGING) $(OSX_BACKGROUND_IMAGE)\n-\t$(PYTHON) $(OSX_DEPLOY_SCRIPT) $(OSX_APP) $(OSX_VOLNAME) -translations-dir=$(QT_TRANSLATION_DIR) -dmg\n-\n-$(OSX_BACKGROUND_IMAGE).png: contrib/macdeploy/$(OSX_BACKGROUND_SVG)\n-\tsed 's/PACKAGE_NAME/$(PACKAGE_NAME)/' < \"$<\" | $(RSVG_CONVERT) -f png -d 36 -p 36 -o $@\n-$(OSX_BACKGROUND_IMAGE)@2x.png: contrib/macdeploy/$(OSX_BACKGROUND_SVG)\n-\tsed 's/PACKAGE_NAME/$(PACKAGE_NAME)/' < \"$<\" | $(RSVG_CONVERT) -f png -d 72 -p 72 -o $@\n-$(OSX_BACKGROUND_IMAGE): $(OSX_BACKGROUND_IMAGE).png $(OSX_BACKGROUND_IMAGE)@2x.png\n-\ttiffutil -cathidpicheck $^ -out $@\n-\n-deploydir: $(OSX_DMG)\n-else !BUILD_DARWIN\n-APP_DIST_DIR=$(top_builddir)/dist\n-APP_DIST_EXTRAS=$(APP_DIST_DIR)/.background/$(OSX_BACKGROUND_IMAGE) $(APP_DIST_DIR)/.DS_Store $(APP_DIST_DIR)/Applications\n-\n-$(APP_DIST_DIR)/Applications:\n-\t@rm -f $@\n-\t@cd $(@D); $(LN_S) /Applications $(@F)\n-\n-$(APP_DIST_EXTRAS): $(APP_DIST_DIR)/$(OSX_APP)/Contents/MacOS/Bitcoin-Qt\n-\n-$(OSX_TEMP_ISO): $(APP_DIST_EXTRAS)\n-\t$(XORRISOFS) -D -l -V \"$(OSX_VOLNAME)\" -no-pad -r -dir-mode 0755 -o $@ $(APP_DIST_DIR) -- $(if $(SOURCE_DATE_EPOCH),-volume_date all_file_dates =$(SOURCE_DATE_EPOCH))\n-\n-$(OSX_DMG): $(OSX_TEMP_ISO)\n-\t$(DMG) dmg \"$<\" \"$@\"\n-\n-dpi%.$(OSX_BACKGROUND_IMAGE): contrib/macdeploy/$(OSX_BACKGROUND_SVG)\n-\tsed 's/PACKAGE_NAME/$(PACKAGE_NAME)/' < \"$<\" | $(RSVG_CONVERT) -f png -d $* -p $* | $(IMAGEMAGICK_CONVERT) - $@\n-OSX_BACKGROUND_IMAGE_DPIFILES := $(foreach dpi,$(OSX_BACKGROUND_IMAGE_DPIS),dpi$(dpi).$(OSX_BACKGROUND_IMAGE))\n-$(APP_DIST_DIR)/.background/$(OSX_BACKGROUND_IMAGE): $(OSX_BACKGROUND_IMAGE_DPIFILES)\n-\t$(MKDIR_P) $(@D)\n-\t$(TIFFCP) -c none $(OSX_BACKGROUND_IMAGE_DPIFILES) $@\n-\n-$(APP_DIST_DIR)/$(OSX_APP)/Contents/MacOS/Bitcoin-Qt: $(OSX_APP_BUILT) $(OSX_PACKAGING)\n-\tINSTALLNAMETOOL=$(INSTALLNAMETOOL) OTOOL=$(OTOOL) STRIP=$(STRIP) $(PYTHON) $(OSX_DEPLOY_SCRIPT) $(OSX_APP) $(OSX_VOLNAME) -translations-dir=$(QT_TRANSLATION_DIR)\n-\n-deploydir: $(APP_DIST_EXTRAS)\n-endif !BUILD_DARWIN\n-\n-appbundle: $(OSX_APP_BUILT)\n-deploy: $(OSX_DMG)\n-endif\n-\n-$(BITCOIN_QT_BIN): FORCE\n-\t$(MAKE) -C src qt/$(@F)\n-\n-$(BITCOIND_BIN): FORCE\n-\t$(MAKE) -C src $(@F)\n-\n-$(BITCOIN_CLI_BIN): FORCE\n-\t$(MAKE) -C src $(@F)\n-\n-$(BITCOIN_TX_BIN): FORCE\n-\t$(MAKE) -C src $(@F)\n-\n-$(BITCOIN_UTIL_BIN): FORCE\n-\t$(MAKE) -C src $(@F)\n-\n-$(BITCOIN_WALLET_BIN): FORCE\n-\t$(MAKE) -C src $(@F)\n-\n-$(BITCOIN_NODE_BIN): FORCE\n-\t$(MAKE) -C src $(@F)\n-\n-$(BITCOIN_GUI_BIN): FORCE\n-\t$(MAKE) -C src $(@F)\n-\n-if USE_LCOV\n-LCOV_FILTER_PATTERN = \\\n-\t-p \"/usr/local/\" \\\n-\t-p \"/usr/include/\" \\\n-\t-p \"/usr/lib/\" \\\n-\t-p \"/usr/lib64/\" \\\n-\t-p \"src/leveldb/\" \\\n-\t-p \"src/crc32c/\" \\\n-\t-p \"src/bench/\" \\\n-\t-p \"src/univalue\" \\\n-\t-p \"src/crypto/ctaes\" \\\n-\t-p \"src/secp256k1\" \\\n-\t-p \"depends\"\n-\n-DIR_FUZZ_SEED_CORPUS ?= qa-assets/fuzz_seed_corpus\n-\n-$(COV_TOOL_WRAPPER):\n-\t@echo 'exec $(COV_TOOL) \"$$@\"' > $(COV_TOOL_WRAPPER)\n-\t@chmod +x $(COV_TOOL_WRAPPER)\n-\n-baseline.info: $(COV_TOOL_WRAPPER)\n-\t$(LCOV) -c -i -d $(abs_builddir)/src -o $@\n-\n-baseline_filtered.info: baseline.info\n-\t$(abs_builddir)/contrib/filter-lcov.py $(LCOV_FILTER_PATTERN) $< $@\n-\t$(LCOV) -a $@ $(LCOV_OPTS) -o $@\n-\n-fuzz.info: baseline_filtered.info\n-\t@TIMEOUT=15 test/fuzz/test_runner.py $(DIR_FUZZ_SEED_CORPUS) -l DEBUG\n-\t$(LCOV) -c $(LCOV_OPTS) -d $(abs_builddir)/src --t fuzz-tests -o $@\n-\t$(LCOV) -z $(LCOV_OPTS) -d $(abs_builddir)/src\n-\n-fuzz_filtered.info: fuzz.info\n-\t$(abs_builddir)/contrib/filter-lcov.py $(LCOV_FILTER_PATTERN) $< $@\n-\t$(LCOV) -a $@ $(LCOV_OPTS) -o $@\n-\n-test_bitcoin.info: baseline_filtered.info\n-\t$(MAKE) -C src/ check\n-\t$(LCOV) -c $(LCOV_OPTS) -d $(abs_builddir)/src -t test_bitcoin -o $@\n-\t$(LCOV) -z $(LCOV_OPTS) -d $(abs_builddir)/src\n-\n-test_bitcoin_filtered.info: test_bitcoin.info\n-\t$(abs_builddir)/contrib/filter-lcov.py $(LCOV_FILTER_PATTERN) $< $@\n-\t$(LCOV) -a $@ $(LCOV_OPTS) -o $@\n-\n-functional_test.info: test_bitcoin_filtered.info\n-\t@TIMEOUT=15 test/functional/test_runner.py $(EXTENDED_FUNCTIONAL_TESTS)\n-\t$(LCOV) -c $(LCOV_OPTS) -d $(abs_builddir)/src --t functional-tests -o $@\n-\t$(LCOV) -z $(LCOV_OPTS) -d $(abs_builddir)/src\n-\n-functional_test_filtered.info: functional_test.info\n-\t$(abs_builddir)/contrib/filter-lcov.py $(LCOV_FILTER_PATTERN) $< $@\n-\t$(LCOV) -a $@ $(LCOV_OPTS) -o $@\n-\n-fuzz_coverage.info: fuzz_filtered.info\n-\t$(LCOV) -a $(LCOV_OPTS) baseline_filtered.info -a fuzz_filtered.info -o $@ | $(GREP) \"\\%\" | $(AWK) '{ print substr($$3,2,50) \"/\" $$5 }' > coverage_percent.txt\n-\n-test_bitcoin_coverage.info: baseline_filtered.info test_bitcoin_filtered.info\n-\t$(LCOV) -a $(LCOV_OPTS) baseline_filtered.info -a test_bitcoin_filtered.info -o $@\n-\n-total_coverage.info: test_bitcoin_filtered.info functional_test_filtered.info\n-\t$(LCOV) -a $(LCOV_OPTS) baseline_filtered.info -a test_bitcoin_filtered.info -a functional_test_filtered.info -o $@ | $(GREP) \"\\%\" | $(AWK) '{ print substr($$3,2,50) \"/\" $$5 }' > coverage_percent.txt\n-\n-fuzz.coverage/.dirstamp: fuzz_coverage.info\n-\t$(GENHTML) -s $(LCOV_OPTS) $< -o $(@D)\n-\t@touch $@\n-\n-test_bitcoin.coverage/.dirstamp:  test_bitcoin_coverage.info\n-\t$(GENHTML) -s $(LCOV_OPTS) $< -o $(@D)\n-\t@touch $@\n-\n-total.coverage/.dirstamp: total_coverage.info\n-\t$(GENHTML) -s $(LCOV_OPTS) $< -o $(@D)\n-\t@touch $@\n-\n-cov_fuzz: fuzz.coverage/.dirstamp\n-\n-cov: test_bitcoin.coverage/.dirstamp total.coverage/.dirstamp\n-\n-endif\n-\n-dist_noinst_SCRIPTS = autogen.sh\n-\n-EXTRA_DIST = $(DIST_SHARE) $(DIST_CONTRIB) $(WINDOWS_PACKAGING) $(OSX_PACKAGING) $(BIN_CHECKS)\n-\n-EXTRA_DIST += \\\n-    test/functional \\\n-    test/fuzz\n-\n-EXTRA_DIST += \\\n-    test/util/test_runner.py \\\n-    test/util/data/bitcoin-util-test.json \\\n-    test/util/data/blanktxv1.hex \\\n-    test/util/data/blanktxv1.json \\\n-    test/util/data/blanktxv2.hex \\\n-    test/util/data/blanktxv2.json \\\n-    test/util/data/tt-delin1-out.hex \\\n-    test/util/data/tt-delin1-out.json \\\n-    test/util/data/tt-delout1-out.hex \\\n-    test/util/data/tt-delout1-out.json \\\n-    test/util/data/tt-locktime317000-out.hex \\\n-    test/util/data/tt-locktime317000-out.json \\\n-    test/util/data/tx394b54bb.hex \\\n-    test/util/data/txcreate1.hex \\\n-    test/util/data/txcreate1.json \\\n-    test/util/data/txcreate2.hex \\\n-    test/util/data/txcreate2.json \\\n-    test/util/data/txcreatedata1.hex \\\n-    test/util/data/txcreatedata1.json \\\n-    test/util/data/txcreatedata2.hex \\\n-    test/util/data/txcreatedata2.json \\\n-    test/util/data/txcreatedata_seq0.hex \\\n-    test/util/data/txcreatedata_seq0.json \\\n-    test/util/data/txcreatedata_seq1.hex \\\n-    test/util/data/txcreatedata_seq1.json \\\n-    test/util/data/txcreatemultisig1.hex \\\n-    test/util/data/txcreatemultisig1.json \\\n-    test/util/data/txcreatemultisig2.hex \\\n-    test/util/data/txcreatemultisig2.json \\\n-    test/util/data/txcreatemultisig3.hex \\\n-    test/util/data/txcreatemultisig3.json \\\n-    test/util/data/txcreatemultisig4.hex \\\n-    test/util/data/txcreatemultisig4.json \\\n-    test/util/data/txcreatemultisig5.json \\\n-    test/util/data/txcreateoutpubkey1.hex \\\n-    test/util/data/txcreateoutpubkey1.json \\\n-    test/util/data/txcreateoutpubkey2.hex \\\n-    test/util/data/txcreateoutpubkey2.json \\\n-    test/util/data/txcreateoutpubkey3.hex \\\n-    test/util/data/txcreateoutpubkey3.json \\\n-    test/util/data/txcreatescript1.hex \\\n-    test/util/data/txcreatescript1.json \\\n-    test/util/data/txcreatescript2.hex \\\n-    test/util/data/txcreatescript2.json \\\n-    test/util/data/txcreatescript3.hex \\\n-    test/util/data/txcreatescript3.json \\\n-    test/util/data/txcreatescript4.hex \\\n-    test/util/data/txcreatescript4.json \\\n-    test/util/data/txcreatescript5.hex \\\n-    test/util/data/txcreatescript6.hex \\\n-    test/util/data/txcreatesignv1.hex \\\n-    test/util/data/txcreatesignv1.json \\\n-    test/util/data/txcreatesignv2.hex \\\n-    test/util/rpcauth-test.py\n-\n-CLEANFILES = $(OSX_DMG) $(BITCOIN_WIN_INSTALLER)\n-\n-DISTCHECK_CONFIGURE_FLAGS = --enable-man\n-\n-doc/doxygen/.stamp: doc/Doxyfile FORCE\n-\t$(MKDIR_P) $(@D)\n-\t$(DOXYGEN) $^\n-\t$(AM_V_at) touch $@\n-\n-if HAVE_DOXYGEN\n-docs: doc/doxygen/.stamp\n-else\n-docs:\n-\t@echo \"error: doxygen not found\"\n-endif\n-\n-clean-docs:\n-\trm -rf doc/doxygen\n-\n-clean-local: clean-docs\n-\trm -rf coverage_percent.txt test_bitcoin.coverage/ total.coverage/ fuzz.coverage/ test/tmp/ cache/ $(OSX_APP)\n-\trm -rf test/functional/__pycache__ test/functional/test_framework/__pycache__ test/cache share/rpcauth/__pycache__\n-\trm -rf osx_volname dist/ dpi36.background.tiff dpi72.background.tiff\n-\n-test-security-check:\n-if TARGET_DARWIN\n-\t$(AM_V_at) CC='$(CC)' CFLAGS='$(CFLAGS)' CPPFLAGS='$(CPPFLAGS)' LDFLAGS='$(LDFLAGS)' $(PYTHON) $(top_srcdir)/contrib/devtools/test-security-check.py TestSecurityChecks.test_MACHO\n-\t$(AM_V_at) CC='$(CC)' CFLAGS='$(CFLAGS)' CPPFLAGS='$(CPPFLAGS)' LDFLAGS='$(LDFLAGS)' $(PYTHON) $(top_srcdir)/contrib/devtools/test-symbol-check.py TestSymbolChecks.test_MACHO\n-endif\n-if TARGET_WINDOWS\n-\t$(AM_V_at) CC='$(CC)' CFLAGS='$(CFLAGS)' CPPFLAGS='$(CPPFLAGS)' LDFLAGS='$(LDFLAGS)' $(PYTHON) $(top_srcdir)/contrib/devtools/test-security-check.py TestSecurityChecks.test_PE\n-\t$(AM_V_at) CC='$(CC)' CFLAGS='$(CFLAGS)' CPPFLAGS='$(CPPFLAGS)' LDFLAGS='$(LDFLAGS)' $(PYTHON) $(top_srcdir)/contrib/devtools/test-symbol-check.py TestSymbolChecks.test_PE\n-endif\n-if TARGET_LINUX\n-\t$(AM_V_at) CC='$(CC)' CFLAGS='$(CFLAGS)' CPPFLAGS='$(CPPFLAGS)' LDFLAGS='$(LDFLAGS)' $(PYTHON) $(top_srcdir)/contrib/devtools/test-security-check.py TestSecurityChecks.test_ELF\n-\t$(AM_V_at) CC='$(CC)' CFLAGS='$(CFLAGS)' CPPFLAGS='$(CPPFLAGS)' LDFLAGS='$(LDFLAGS)' $(PYTHON) $(top_srcdir)/contrib/devtools/test-symbol-check.py TestSymbolChecks.test_ELF\n-endif"
      }
    ]
  }
]