[
  {
    "sha": "493fb47c577b7564138c883a8f22cbac3619ce44",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0OTNmYjQ3YzU3N2I3NTY0MTM4Yzg4M2E4ZjIyY2JhYzM2MTljZTQ0",
    "commit": {
      "author": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2017-12-05T20:57:12Z"
      },
      "committer": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2021-06-10T14:58:45Z"
      },
      "message": "Make SetupServerArgs callable without NodeContext\n\nbitcoin-gui code needs to call SetupServerArgs but will not have a\nNodeContext object if it is communicating with an external bitcoin-node\nprocess.",
      "tree": {
        "sha": "621d419274df1dc2d1f7ac4b925003de33e69cd7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/621d419274df1dc2d1f7ac4b925003de33e69cd7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/493fb47c577b7564138c883a8f22cbac3619ce44",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/493fb47c577b7564138c883a8f22cbac3619ce44",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/493fb47c577b7564138c883a8f22cbac3619ce44",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/493fb47c577b7564138c883a8f22cbac3619ce44/comments",
    "author": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1704bbf2263f16c720604cfab4ccb775315df690",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1704bbf2263f16c720604cfab4ccb775315df690",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1704bbf2263f16c720604cfab4ccb775315df690"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 10,
      "deletions": 9
    },
    "files": [
      {
        "sha": "654679af27e2d029d937dd0da3c011313032dd91",
        "filename": "src/bitcoind.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/493fb47c577b7564138c883a8f22cbac3619ce44/src/bitcoind.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/493fb47c577b7564138c883a8f22cbac3619ce44/src/bitcoind.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoind.cpp?ref=493fb47c577b7564138c883a8f22cbac3619ce44",
        "patch": "@@ -112,8 +112,8 @@ static bool AppInit(NodeContext& node, int argc, char* argv[])\n     util::ThreadSetInternalName(\"init\");\n \n     // If Qt is used, parameters/bitcoin.conf are parsed in qt/bitcoin.cpp's main()\n-    SetupServerArgs(node);\n     ArgsManager& args = *Assert(node.args);\n+    SetupServerArgs(args);\n     std::string error;\n     if (!args.ParseParameters(argc, argv, error)) {\n         return InitError(Untranslated(strprintf(\"Error parsing command line arguments: %s\\n\", error)));"
      },
      {
        "sha": "7ba903c61b7d2e381a4e6458e492c4fc7e90fb06",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 5,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/493fb47c577b7564138c883a8f22cbac3619ce44/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/493fb47c577b7564138c883a8f22cbac3619ce44/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=493fb47c577b7564138c883a8f22cbac3619ce44",
        "patch": "@@ -347,12 +347,8 @@ static void OnRPCStopped()\n     LogPrint(BCLog::RPC, \"RPC stopped.\\n\");\n }\n \n-void SetupServerArgs(NodeContext& node)\n+void SetupServerArgs(ArgsManager& argsman)\n {\n-    assert(!node.args);\n-    node.args = &gArgs;\n-    ArgsManager& argsman = *node.args;\n-\n     SetupHelpOptions(argsman);\n     argsman.AddArg(\"-help-debug\", \"Print help message with debugging options and exit\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST); // server-only for now\n "
      },
      {
        "sha": "b856468e5d16ef56f9f733bb0cd467ad2571b817",
        "filename": "src/init.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/493fb47c577b7564138c883a8f22cbac3619ce44/src/init.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/493fb47c577b7564138c883a8f22cbac3619ce44/src/init.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.h?ref=493fb47c577b7564138c883a8f22cbac3619ce44",
        "patch": "@@ -69,7 +69,7 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info\n /**\n  * Register all arguments with the ArgsManager\n  */\n-void SetupServerArgs(NodeContext& node);\n+void SetupServerArgs(ArgsManager& argsman);\n \n /** Returns licensing information (for -version) */\n std::string LicenseInfo();"
      },
      {
        "sha": "6b6157c139242c63c53e930d08fc1422dcd20793",
        "filename": "src/init/bitcoin-node.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/493fb47c577b7564138c883a8f22cbac3619ce44/src/init/bitcoin-node.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/493fb47c577b7564138c883a8f22cbac3619ce44/src/init/bitcoin-node.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init/bitcoin-node.cpp?ref=493fb47c577b7564138c883a8f22cbac3619ce44",
        "patch": "@@ -6,6 +6,7 @@\n #include <interfaces/init.h>\n #include <interfaces/ipc.h>\n #include <node/context.h>\n+#include <util/system.h>\n \n #include <memory>\n \n@@ -20,6 +21,7 @@ class BitcoinNodeInit : public interfaces::Init\n         : m_node(node),\n           m_ipc(interfaces::MakeIpc(EXE_NAME, arg0, *this))\n     {\n+        m_node.args = &gArgs;\n         m_node.init = this;\n     }\n     std::unique_ptr<interfaces::Echo> makeEcho() override { return interfaces::MakeEcho(); }"
      },
      {
        "sha": "1d4504c24f6e6f55418f718023836fd147457861",
        "filename": "src/init/bitcoind.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/493fb47c577b7564138c883a8f22cbac3619ce44/src/init/bitcoind.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/493fb47c577b7564138c883a8f22cbac3619ce44/src/init/bitcoind.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init/bitcoind.cpp?ref=493fb47c577b7564138c883a8f22cbac3619ce44",
        "patch": "@@ -4,6 +4,7 @@\n \n #include <interfaces/init.h>\n #include <node/context.h>\n+#include <util/system.h>\n \n #include <memory>\n \n@@ -14,6 +15,7 @@ class BitcoindInit : public interfaces::Init\n public:\n     BitcoindInit(NodeContext& node) : m_node(node)\n     {\n+        m_node.args = &gArgs;\n         m_node.init = this;\n     }\n     NodeContext& m_node;"
      },
      {
        "sha": "65bba1dd10382c00d936cf58508a0b314c419af4",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/493fb47c577b7564138c883a8f22cbac3619ce44/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/493fb47c577b7564138c883a8f22cbac3619ce44/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=493fb47c577b7564138c883a8f22cbac3619ce44",
        "patch": "@@ -490,7 +490,7 @@ int GuiMain(int argc, char* argv[])\n \n     /// 2. Parse command-line options. We do this after qt in order to show an error if there are problems parsing these\n     // Command-line options take precedence:\n-    SetupServerArgs(node_context);\n+    SetupServerArgs(gArgs);\n     SetupUIArgs(gArgs);\n     std::string error;\n     if (!gArgs.ParseParameters(argc, argv, error)) {"
      },
      {
        "sha": "9b8a86d5bbc403cbeea48da45e85e1b39a74f364",
        "filename": "src/test/util/setup_common.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/493fb47c577b7564138c883a8f22cbac3619ce44/src/test/util/setup_common.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/493fb47c577b7564138c883a8f22cbac3619ce44/src/test/util/setup_common.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util/setup_common.cpp?ref=493fb47c577b7564138c883a8f22cbac3619ce44",
        "patch": "@@ -76,6 +76,7 @@ BasicTestingSetup::BasicTestingSetup(const std::string& chainName, const std::ve\n     : m_path_root{fs::temp_directory_path() / \"test_common_\" PACKAGE_NAME / g_insecure_rand_ctx_temp_path.rand256().ToString()},\n       m_args{}\n {\n+    m_node.args = &gArgs;\n     const std::vector<const char*> arguments = Cat(\n         {\n             \"dummy\",\n@@ -94,7 +95,7 @@ BasicTestingSetup::BasicTestingSetup(const std::string& chainName, const std::ve\n     gArgs.ForceSetArg(\"-datadir\", m_path_root.string());\n     gArgs.ClearPathCache();\n     {\n-        SetupServerArgs(m_node);\n+        SetupServerArgs(*m_node.args);\n         std::string error;\n         const bool success{m_node.args->ParseParameters(arguments.size(), arguments.data(), error)};\n         assert(success);"
      }
    ]
  }
]