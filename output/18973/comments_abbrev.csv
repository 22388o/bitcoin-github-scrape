luke-jr,2020-05-14 04:52:23,#18902 is also needed (fixes a regression),https://github.com/bitcoin/bitcoin/pull/18973#issuecomment-628385311,628385311,
MarcoFalke,2020-05-14 11:29:10,"> #18902 is also needed (fixes a regression)\n\nIt looks like it needs rebase again. I guess we can push it back to rc3 (if there is one) or 0.20.1",https://github.com/bitcoin/bitcoin/pull/18973#issuecomment-628571863,628571863,
laanwj,2020-05-14 15:02:57,"I must say the problem that #18902 solves is unclear to me. Does it affect the gitian build as we use to build the release, in practice? If so what is the user-visible issue? If not, If it's some more theoretical or aesthetic I'd strongly prefer pushing it back to 0.20.1 (especially as it makes large changes to the gitian descriptor).",https://github.com/bitcoin/bitcoin/pull/18973#issuecomment-628694465,628694465,
MarcoFalke,2020-05-14 15:08:06,"Ok, updated OP to remove #18287 and #18818 for now.",https://github.com/bitcoin/bitcoin/pull/18973#issuecomment-628697629,628697629,
MarcoFalke,2020-05-14 16:30:29,Open-Close to re-run ci. See https://github.com/bitcoin/bitcoin/issues/15847#issuecomment-487591130,https://github.com/bitcoin/bitcoin/pull/18973#issuecomment-628747257,628747257,
MarcoFalke,2020-05-14 16:33:58,"If you feel strongly about the fuzzers being green, I can recommend #18757",https://github.com/bitcoin/bitcoin/pull/18973#issuecomment-628749236,628749236,
laanwj,2020-05-14 16:35:13,"I think you need the following:\n```patch\n    squashme: remove const to work around compiler error on xenial\n    \n        test/validationinterface_tests.cpp:26:36: error: default initialization of an object of const type 'const BlockValidationState' without a user-provided default constructor\n    \n        const BlockValidationState state_dummy;\n\ndiff --git a/src/test/validationinter",https://github.com/bitcoin/bitcoin/pull/18973#issuecomment-628749960,628749960,
MarcoFalke,2020-05-14 16:38:35,"@laanwj Whoospie. I wonder how that compiled in the first place. though, this also needs to be fixed on master, so maybe should be merged there first.",https://github.com/bitcoin/bitcoin/pull/18973#issuecomment-628751886,628751886,
laanwj,2020-05-14 16:42:19,"Wasn't aware that this is a problem on master too. If so, see .#18975",https://github.com/bitcoin/bitcoin/pull/18973#issuecomment-628753907,628753907,
MarcoFalke,2020-05-14 23:40:32,Going to re-run once more to save the log. This just hit issue #16337 ,https://github.com/bitcoin/bitcoin/pull/18973#issuecomment-628942213,628942213,
fanquake,2020-05-15 00:14:02,"Rebased to include https://github.com/bitcoin/bitcoin/commit/7d87ba0e022796b42d6c17b59bb735c94dd6e045 and https://github.com/bitcoin/bitcoin/commit/aa7c6858e6e480eb841195bdaf2ee0185f17f9a7, and added #18962 and #18975.",https://github.com/bitcoin/bitcoin/pull/18973#issuecomment-628951594,628951594,
fanquake,2020-05-15 04:22:42,"> If you feel strongly about the fuzzers being green, I can recommend #18757\n\nI've now added this as well.",https://github.com/bitcoin/bitcoin/pull/18973#issuecomment-629017579,629017579,
fanquake,2020-05-15 06:15:02,"> I've now added this as well.\n\n> script/script.h:332:35: runtime error: negation of -9223372036854775808 cannot be represented in type 'int64_t' (aka 'long'); cast to an unsigned type to negate this value to itself\n>  #0 0x55f522f90e9e in CScriptNum::serialize(long const&) /home/travis/build/bitcoin/bitcoin/build/bitcoin-x86_64-pc-linux-gnu/src/./script/script.h:332:35\n\nLooks like the f",https://github.com/bitcoin/bitcoin/pull/18973#issuecomment-629050088,629050088,
laanwj,2020-05-15 07:23:01,"ACK on simply disabling fuzzers that don't pass for now when they fail for a known reason (and perhaps fix them in later 0.20.x).\n",https://github.com/bitcoin/bitcoin/pull/18973#issuecomment-629075614,629075614,
promag,2020-05-15 09:20:20,Tested ACK 245c862cfd4883ea91b53d766abb00a9c3c1ea5c coin control with multiple wallets.,https://github.com/bitcoin/bitcoin/pull/18973#issuecomment-629129702,629129702,
laanwj,2020-05-15 10:36:31,ACK 245c862cfd4883ea91b53d766abb00a9c3c1ea5c,https://github.com/bitcoin/bitcoin/pull/18973#issuecomment-629163124,629163124,
MarcoFalke,2020-05-15 11:54:17,"ACK 245c862cfd solved the conflicts myself as a sanity check. Did not re-review üç∑\n\n<details><summary>Show signature and timestamp</summary>\n\nSignature:\n\n```\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\nACK 245c862cfd solved the conflicts myself as a sanity check. Did not re-review üç∑\n-----BEGIN PGP SIGNATURE-----\n\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgk",https://github.com/bitcoin/bitcoin/pull/18973#issuecomment-629192941,629192941,
