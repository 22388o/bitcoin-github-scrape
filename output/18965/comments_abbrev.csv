DrahtBot,2020-05-13 07:46:32,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #17977 ([WIP] Implement BIP 340-342 validation (Schnorr/taproot/tapscript) by sipa)\n\nIf you consider this pull request i",https://github.com/bitcoin/bitcoin/pull/18965#issuecomment-627811610,627811610,
laanwj,2020-05-13 13:08:38,"It's kind of unfortunate that someone spends work doing this just to be told it's not necessary.\n\nWe should really go through the code some time and remove TODOs that aren't really TODOs.\n",https://github.com/bitcoin/bitcoin/pull/18965#issuecomment-627972210,627972210,
instagibbs,2020-05-13 14:03:57,"concept ACK, it's completely fine to have something that can build usable test off of. It's not as base58 decoding is some strange thing in the repo.\n\nI do however think it needs at least a single set of tests at least showing round-trip works.\n\n> Btw, there doesn't seem to be a good test file for adding (sanity) tests of this kind.\n\nIndeed, previously I just shoe-horned it for CScript",https://github.com/bitcoin/bitcoin/pull/18965#issuecomment-628011091,628011091,
MarcoFalke,2020-05-13 14:16:52,"> concept ACK, it's completely fine to have something that can build usable test off of\n\n<strike>agree, but as I said I don't see how anyone is going to build a useful test off of this any time soon. The TODO has been added 4 years ago and nothing happened. It seems recursive to write functionality in the test framework and then add a round-trip test to test the test. The purpose of tests is t",https://github.com/bitcoin/bitcoin/pull/18965#issuecomment-628019478,628019478,
MarcoFalke,2020-05-13 14:22:40,Concept ACK (edited my reply),https://github.com/bitcoin/bitcoin/pull/18965#issuecomment-628023229,628023229,
10xcryptodev,2020-05-13 15:35:44,"@MarcoFalke thanks for reviewing, i will add the round-trip unit tests\n\nAlso i will interact with the team before implementing if is not so clear ",https://github.com/bitcoin/bitcoin/pull/18965#issuecomment-628071806,628071806,
laanwj,2020-05-15 07:29:25,"Concept ACK anyway.\n\n> I also agree here, but I don't see a way to avoid this generally.\n\nI think we that's pretty straightforward: reject adding TODOs in the source code. If there are open TODO items when contributing a PR, it's better to open a github issue for them. At least it allows for discussion, or reconsidering/closing later. Instead of being a single developer's opinion stuck in ",https://github.com/bitcoin/bitcoin/pull/18965#issuecomment-629078426,629078426,
10xcryptodev,2020-05-15 23:13:47,"thanks for the comments and reviews, addressed them",https://github.com/bitcoin/bitcoin/pull/18965#issuecomment-629544004,629544004,
10xcryptodev,2020-05-20 01:03:07,"thanks @ryanofsky and @MarcoFalke for the infos and directions, added your suggestions",https://github.com/bitcoin/bitcoin/pull/18965#issuecomment-631171860,631171860,
MarcoFalke,2020-05-20 12:51:31,Approach ACK 31cfd81e1f374a722ab0190cd89814f22b8f91f8 (haven't reviewed the code),https://github.com/bitcoin/bitcoin/pull/18965#issuecomment-631453763,631453763,
10xcryptodev,2020-05-20 22:00:37,"thanks @ryanofsky about lambda flake8 warned about lambda assignment E731, changed to def\nalso `assert_equal(hash256(res[:-4], res[-4:])` this line was not right but i got the idea",https://github.com/bitcoin/bitcoin/pull/18965#issuecomment-631750630,631750630,
kallewoof,2020-05-13 05:01:00,Perhaps follow convention of the encoder and call it `base58_to_byte`?,https://github.com/bitcoin/bitcoin/pull/18965#discussion_r424173264,424173264,test/functional/test_framework/address.py
MarcoFalke,2020-05-13 13:06:33,"This is currently unused in the test code, so I don't see the value of adding it unless this is going to be used any time soon\n\n\n I'd say to just remove the TODO",https://github.com/bitcoin/bitcoin/pull/18965#discussion_r424421232,424421232,test/functional/test_framework/address.py
ryanofsky,2020-05-13 14:02:48,"It seems like it could easily be used to test the byte_to_base58 function, helping find & debug problems related to it",https://github.com/bitcoin/bitcoin/pull/18965#discussion_r424462937,424462937,test/functional/test_framework/address.py
ryanofsky,2020-05-19 19:43:16,"In commit ""tests: implement base58_decode"" (9942e0211c7dca24c85a6efcd1de2bd71b95e34d)\n\nI think you can replace this int -> hex -> binary conversion with a direct conversion like\n\n```\nres = n.to_bytes((n.bit_length() + 7) // 8, 'big')\n```\n\nhttps://stackoverflow.com/questions/21017698/converting-int-to-bytes-in-python-3/30375198#30375198",https://github.com/bitcoin/bitcoin/pull/18965#discussion_r427555504,427555504,test/functional/test_framework/address.py
ryanofsky,2020-05-19 19:55:17,"In commit ""tests: implement base58_decode"" (9942e0211c7dca24c85a6efcd1de2bd71b95e34d)\n\nWhat is -1 here?",https://github.com/bitcoin/bitcoin/pull/18965#discussion_r427562054,427562054,test/functional/test_framework/address.py
ryanofsky,2020-05-19 20:06:28,"In commit ""tests: implement base58_decode"" (9942e0211c7dca24c85a6efcd1de2bd71b95e34d)\n\nThis is an arbitrary seeming place to put a round trip check. I think it'd be better to add a simple external test, or do something more general like add default `check_roundtrip=True` parameters to the two functions and checks at the bottom of each:\n\n```\nif check_roundtrip: assert_equals(base58_to_byt",https://github.com/bitcoin/bitcoin/pull/18965#discussion_r427568106,427568106,test/functional/test_framework/address.py
ryanofsky,2020-05-19 20:07:19,"In commit ""tests: implement base58_decode"" (9942e0211c7dca24c85a6efcd1de2bd71b95e34d)\n\nI think 21 should be replaced with -4 here to strip off the checksum bytes without assuming a fixed length string. Also it would be good to verify the checksum, maybe optionally with a `verify_checksum=True` default parameter.",https://github.com/bitcoin/bitcoin/pull/18965#discussion_r427568502,427568502,test/functional/test_framework/address.py
MarcoFalke,2020-05-19 21:37:19,We have a python unit test framework now: #18576 ,https://github.com/bitcoin/bitcoin/pull/18965#discussion_r427615067,427615067,test/functional/test_framework/address.py
ryanofsky,2020-05-20 13:05:37,"In commit ""tests: implement base58_decode"" (31cfd81e1f374a722ab0190cd89814f22b8f91f8)\n\nNormally these parentheses are not written in python",https://github.com/bitcoin/bitcoin/pull/18965#discussion_r427992771,427992771,test/functional/test_framework/address.py
ryanofsky,2020-05-20 13:13:54,"In commit ""tests: implement base58_decode"" (31cfd81e1f374a722ab0190cd89814f22b8f91f8)\n\nI think version argument is confusing and should be dropped. There's no need to require it since version number is in res[0]",https://github.com/bitcoin/bitcoin/pull/18965#discussion_r427998759,427998759,test/functional/test_framework/address.py
ryanofsky,2020-05-20 13:17:10,"In commit ""tests: implement base58_decode"" (31cfd81e1f374a722ab0190cd89814f22b8f91f8)\n\nI think it's less complicated to just `assert_equal(hash256(res[:-4], res[-4:])` instead of calling byte_to_base58 to re-encode what was just decoded",https://github.com/bitcoin/bitcoin/pull/18965#discussion_r428001259,428001259,test/functional/test_framework/address.py
ryanofsky,2020-05-20 13:27:24,"In commit ""tests: implement base58_decode"" (31cfd81e1f374a722ab0190cd89814f22b8f91f8)\n\nMight be nice return the version number as well as the data. Maybe:\n\n```\nres = b'\x00' * pad + res\nif verify_checksum:\n  assert_equal(hash256(res[:-4], res[-4:])\nreturn res[1:-4], int(res[0])\n```\n\nI think this also fixes a padding bug. It looks like in `byte_to_base58` the padding precedes ",https://github.com/bitcoin/bitcoin/pull/18965#discussion_r428009047,428009047,test/functional/test_framework/address.py
ryanofsky,2020-05-20 13:38:57,"In commit ""tests: implement base58_decode"" (31cfd81e1f374a722ab0190cd89814f22b8f91f8)\n\nCould avoid needing to repeat the byte strings (they are hard to compare visually) with a helper lambda: \n\n```python\ncheck = lambda data, ver: self.assertEqual(base58_to_byte(byte_to_base58(data, ver)), (data, ver))\ncheck(b'\x1f\x8e\xa1p*{\xd4\x94\x1b\xca\tA\xb8R\xc4\xbb\xfe\xdb.\x05', 111)\ncheck(b",https://github.com/bitcoin/bitcoin/pull/18965#discussion_r428017967,428017967,test/functional/test_framework/address.py
jnewbery,2020-06-10 15:37:34,"This shouldn't add an optional `verify_checksum` parameter which is never used (this function is only called once without specifying this parameter).\n\nThis function should also have a docstring to say what it's doing (and more importantly to document that it asserts if the checksum is bad)",https://github.com/bitcoin/bitcoin/pull/18965#discussion_r438220048,438220048,test/functional/test_framework/address.py
jnewbery,2020-06-10 15:38:00,This module already imports from util (3 lines up),https://github.com/bitcoin/bitcoin/pull/18965#discussion_r438220344,438220344,test/functional/test_framework/address.py
