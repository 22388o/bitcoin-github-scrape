luke-jr,2012-05-26T03:13:18Z,"The code itself (and JSON-RPC help docs) could use better documentation, IMO.\nHow about letting each filter have its own command?\n",https://github.com/bitcoin/bitcoin/pull/1386#issuecomment-5944030,5944030,
roques,2012-05-26T22:39:55Z,"I really could use this functionality right now.\n\nWhile you still can, how about renaming the RPC-commands and adding a related one?\n`notifystart <name> <bitcoinaddress>|0x<hexstring>`  Setup notifications named _name_ about transactions containing _bitcoinaddress_ or _hexstring_\n`notifystop [<name> [<bitcoinaddress>|0x<hexstring>]]`  Stop notifications under _name_ (or all) about _bitcoinaddr",https://github.com/bitcoin/bitcoin/pull/1386#issuecomment-5950112,5950112,
jgarzik,2012-06-08T16:30:56Z,"Copying and expanding on the comments in @gavinandresen's gist RPC interface document https://gist.github.com/2839617\n\n1) 'name' should be restricted to [a-zA-z0-9] etc. as suggested\n\n2) although the **implementation** of the interface is currently exact match, the **semantics** are fuzzy match. users of this interface should perform their own exact matching, to prepare for an implementation t",https://github.com/bitcoin/bitcoin/pull/1386#issuecomment-6207155,6207155,
luke-jr,2012-06-08T17:30:06Z,"1) I suggest allowing '_' in name, so PCRE \w matches.\n\n3) I think '*' fits better here, but don't care strongly. Perhaps make the argument optional, so filterclear() does all?\n\n6) How about supporting longpolling? It's well-established for JSON-RPC already and seems to work reasonably well. With multithreading support, it's even fairly easy to implement (see #1355)\n",https://github.com/bitcoin/bitcoin/pull/1386#issuecomment-6208512,6208512,
jgarzik,2012-06-08T17:37:38Z,longpolling-like behavior might indeed be a reasonable solution.  That would obviate the need for an HTTP callback with its own authentication.\n,https://github.com/bitcoin/bitcoin/pull/1386#issuecomment-6208680,6208680,
jgarzik,2012-06-13T13:39:17Z,"Rebased, but it no longer builds or works after the CTxDestination updates in #master\n",https://github.com/bitcoin/bitcoin/pull/1386#issuecomment-6301145,6301145,
luke-jr,2012-06-19T00:07:24Z,@jgarzik Do you plan to finish rebasing it?\n,https://github.com/bitcoin/bitcoin/pull/1386#issuecomment-6412808,6412808,
jgarzik,2012-06-27T15:57:49Z,"Closing - out of date.  Consensus seems to agree with the approach, so the pull request will be reopened if/when the branch is updated (volunteers welcome).  Presumably, this would coincide with the introduction of the discussion P2P protocol bloom filter changes.\n",https://github.com/bitcoin/bitcoin/pull/1386#issuecomment-6607401,6607401,
roques,2012-05-24T13:24:21Z,Shouldn't this be `params.size() > 0`?\n,https://github.com/bitcoin/bitcoin/pull/1386#discussion_r874672,874672,src/filter.cpp
roques,2012-05-24T13:49:53Z,As far as I can see `CFilter.name` is currently unused.\nIt should be enough to have the name as index of `CBloomers.map` for now.\n,https://github.com/bitcoin/bitcoin/pull/1386#discussion_r874867,874867,src/filter.h
gavinandresen,2012-06-01T14:48:43Z,local variables strNotifyTx/Block are overriding the static strNotifyTx/Block here?\n,https://github.com/bitcoin/bitcoin/pull/1386#discussion_r915065,915065,src/filter.cpp
gavinandresen,2012-06-01T14:51:33Z,Maybe filterclear '*' instead of separate filterclearall ?\n,https://github.com/bitcoin/bitcoin/pull/1386#discussion_r915075,915075,src/filter.cpp
jgarzik,2012-06-08T18:59:01Z,"yes, that is a bug\n",https://github.com/bitcoin/bitcoin/pull/1386#discussion_r953112,953112,src/filter.cpp
