[
  {
    "sha": "6feb46c3721605f6ae54d7e635a06f82cd7c1449",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ZmViNDZjMzcyMTYwNWY2YWU1NGQ3ZTYzNWEwNmY4MmNkN2MxNDQ5",
    "commit": {
      "author": {
        "name": "Evan Klitzke",
        "email": "evan@eklitzke.org",
        "date": "2018-03-15T03:07:16Z"
      },
      "committer": {
        "name": "Evan Klitzke",
        "email": "evan@eklitzke.org",
        "date": "2018-03-28T19:33:04Z"
      },
      "message": "Add --with-sanitizers option to configure\n\nThis enables the use of different compiler sanitizers, coresponding to\nthe -fsanitize option in GCC and Clang.",
      "tree": {
        "sha": "42f35d8407161c335b1d0e23065dc0d2e4dcebf6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/42f35d8407161c335b1d0e23065dc0d2e4dcebf6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6feb46c3721605f6ae54d7e635a06f82cd7c1449",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEr5FzGLjELREnIWJdFX78rLxkhCIFAlq77fYACgkQFX78rLxk\nhCJmvw//aJfFi/PPxJjHktlsY5ZWo3gHyfE3SVKayn3nZ3Q3NYaN3OfvdbAIAnWj\nWbZiJ/BcvXON0gAy608OEnW5SaoDs6MqAxUyRXwnGyBxJBx5PpQsPAvLC3Xc8BKJ\neOnrjaJ+Qk4H6iZPDoeEChvi6WBif0yhE2fzvjDoz0FX+OBIEaNsbdV/1QLtfSDu\nVJvMEdBlVYr0C0vq5kYG2RhRr6c+tTcU7HUsCh+E9Rs3wc4hKET72B6T71y9tklk\nLwcA0l+3FQ7IgUIQoj0ByQXjfNR3qqV3jtNQyGOi7gds2i7zAQ39BqOIQcZKfwST\nh9dLqW2FEigIxRSSm1HYf3xCYm/bfT6w6ymZo/cleIW/dJbS4Fj30ZtAM960KpPS\nLjXCLMAE70pHSGXUH0ffuTmWbILkluHv8iRadLWjUC9iU7xs+p+xHF7SZt/ciGmY\nnbcmWaKxr0RRZy8s69NJA3xt5YeEDSUN8Oc8vGcu0XYguO9c9LIzcRUUaZZbr9kB\n2ZiYrhJ9a71kBTu2VlPEOBjIlsN+1EsmD5jty/sPAgJGHo98+fp8H4twkdhLqBwL\n2qkoc/kEiEMSx1B1zGd7FLW2ejev6O4oJ1w/6o95vfdHXfsFgegJdbvKjhaLbBmC\nKCOCVIece77O/spjaXt3gTeKZvqYkBnkPLPuy5cy/0ijJGXZ2Ww=\n=Rw2Z\n-----END PGP SIGNATURE-----",
        "payload": "tree 42f35d8407161c335b1d0e23065dc0d2e4dcebf6\nparent 0a018431c447bbf18bdaa6a1037aad6a87c1294a\nauthor Evan Klitzke <evan@eklitzke.org> 1521083236 -0700\ncommitter Evan Klitzke <evan@eklitzke.org> 1522265584 -0700\n\nAdd --with-sanitizers option to configure\n\nThis enables the use of different compiler sanitizers, coresponding to\nthe -fsanitize option in GCC and Clang.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6feb46c3721605f6ae54d7e635a06f82cd7c1449",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6feb46c3721605f6ae54d7e635a06f82cd7c1449",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6feb46c3721605f6ae54d7e635a06f82cd7c1449/comments",
    "author": {
      "login": "eklitzke",
      "id": 2734,
      "node_id": "MDQ6VXNlcjI3MzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2734?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eklitzke",
      "html_url": "https://github.com/eklitzke",
      "followers_url": "https://api.github.com/users/eklitzke/followers",
      "following_url": "https://api.github.com/users/eklitzke/following{/other_user}",
      "gists_url": "https://api.github.com/users/eklitzke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eklitzke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eklitzke/subscriptions",
      "organizations_url": "https://api.github.com/users/eklitzke/orgs",
      "repos_url": "https://api.github.com/users/eklitzke/repos",
      "events_url": "https://api.github.com/users/eklitzke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eklitzke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "eklitzke",
      "id": 2734,
      "node_id": "MDQ6VXNlcjI3MzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2734?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eklitzke",
      "html_url": "https://github.com/eklitzke",
      "followers_url": "https://api.github.com/users/eklitzke/followers",
      "following_url": "https://api.github.com/users/eklitzke/following{/other_user}",
      "gists_url": "https://api.github.com/users/eklitzke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eklitzke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eklitzke/subscriptions",
      "organizations_url": "https://api.github.com/users/eklitzke/orgs",
      "repos_url": "https://api.github.com/users/eklitzke/repos",
      "events_url": "https://api.github.com/users/eklitzke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eklitzke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0a018431c447bbf18bdaa6a1037aad6a87c1294a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0a018431c447bbf18bdaa6a1037aad6a87c1294a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0a018431c447bbf18bdaa6a1037aad6a87c1294a"
      }
    ],
    "stats": {
      "total": 83,
      "additions": 81,
      "deletions": 2
    },
    "files": [
      {
        "sha": "c422914a26e567811d3598ef681b718eca87fd76",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 28,
        "deletions": 0,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6feb46c3721605f6ae54d7e635a06f82cd7c1449/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6feb46c3721605f6ae54d7e635a06f82cd7c1449/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=6feb46c3721605f6ae54d7e635a06f82cd7c1449",
        "patch": "@@ -219,6 +219,12 @@ AC_ARG_ENABLE([debug],\n     [enable_debug=$enableval],\n     [enable_debug=no])\n \n+# Enable different -fsanitize options\n+AC_ARG_WITH([sanitizers],\n+    [AS_HELP_STRING([--with-sanitizers],\n+                    [comma separated list of extra sanitizers to build with (default is none enabled)])],\n+    [use_sanitizers=$withval])\n+\n # Enable gprof profiling\n AC_ARG_ENABLE([gprof],\n     [AS_HELP_STRING([--enable-gprof],\n@@ -247,6 +253,26 @@ if test \"x$enable_debug\" = xyes; then\n     fi\n fi\n \n+if test x$use_sanitizers != x; then\n+  # First check if the compiler accepts flags. If an incompatible pair like\n+  # -fsanitize=address,thread is used here, this check will fail. This will also\n+  # fail if a bad argument is passed, e.g. -fsanitize=undfeined\n+  AX_CHECK_COMPILE_FLAG(\n+    [[-fsanitize=$use_sanitizers]],\n+    [[SANITIZER_CXXFLAGS=-fsanitize=$use_sanitizers]],\n+    [AC_MSG_ERROR([compiler did not accept requested flags])])\n+\n+  # Some compilers (e.g. GCC) require additional libraries like libasan,\n+  # libtsan, libubsan, etc. Make sure linking still works with the sanitize\n+  # flag. This is a separate check so we can give a better error message when\n+  # the sanitize flags are supported by the compiler but the actual sanitizer\n+  # libs are missing.\n+  AX_CHECK_LINK_FLAG(\n+    [[-fsanitize=$use_sanitizers]],\n+    [[SANITIZER_LDFLAGS=-fsanitize=$use_sanitizers]],\n+    [AC_MSG_ERROR([linker did not accept requested flags, you are missing required libraries])])\n+fi\n+\n ERROR_CXXFLAGS=\n if test \"x$enable_werror\" = \"xyes\"; then\n   if test \"x$CXXFLAG_WERROR\" = \"x\"; then\n@@ -1258,6 +1284,8 @@ AC_SUBST(HARDENED_CPPFLAGS)\n AC_SUBST(HARDENED_LDFLAGS)\n AC_SUBST(PIC_FLAGS)\n AC_SUBST(PIE_FLAGS)\n+AC_SUBST(SANITIZER_CXXFLAGS)\n+AC_SUBST(SANITIZER_LDFLAGS)\n AC_SUBST(SSE42_CXXFLAGS)\n AC_SUBST(LIBTOOL_APP_LDFLAGS)\n AC_SUBST(USE_UPNP)"
      },
      {
        "sha": "3be599623a48b84cb8d219acca7f722e57e24c7d",
        "filename": "doc/developer-notes.md",
        "status": "modified",
        "additions": 51,
        "deletions": 0,
        "changes": 51,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6feb46c3721605f6ae54d7e635a06f82cd7c1449/doc/developer-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6feb46c3721605f6ae54d7e635a06f82cd7c1449/doc/developer-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/developer-notes.md?ref=6feb46c3721605f6ae54d7e635a06f82cd7c1449",
        "patch": "@@ -204,6 +204,57 @@ make cov\n # A coverage report will now be accessible at `./test_bitcoin.coverage/index.html`.\n ```\n \n+**Sanitizers**\n+\n+Bitcoin can be compiled with various \"sanitizers\" enabled, which add\n+instrumentation for issues regarding things like memory safety, thread race\n+conditions, or undefined behavior. This is controlled with the\n+`--with-sanitizers` configure flag, which should be a comma separated list of\n+sanitizers to enable. The sanitizer list should correspond to supported\n+`-fsanitize=` options in your compiler. These sanitizers have runtime overhead,\n+so they are most useful when testing changes or producing debugging builds.\n+\n+Some examples:\n+\n+```bash\n+# Enable both the address sanitizer and the undefined behavior sanitizer\n+./configure --with-sanitizers=address,undefined\n+\n+# Enable the thread sanitizer\n+./configure --with-sanitizers=thread\n+```\n+\n+If you are compiling with GCC you will typically need to install corresponding\n+\"san\" libraries to actually compile with these flags, e.g. libasan for the\n+address sanitizer, libtsan for the thread sanitizer, and libubsan for the\n+undefined sanitizer. If you are missing required libraries, the configure script\n+will fail with a linker error when testing the sanitizer flags.\n+\n+The test suite should pass cleanly with the `thread` and `undefined` sanitizers,\n+but there are a number of known problems when using the `address` sanitizer. The\n+address sanitizer is known to fail in\n+[sha256_sse4::Transform](/src/crypto/sha256_sse4.cpp) which makes it unusable\n+unless you also use `--disable-asm` when running configure. We would like to fix\n+sanitizer issues, so please send pull requests if you can fix any errors found\n+by the address sanitizer (or any other sanitizer).\n+\n+Not all sanitizer options can be enabled at the same time, e.g. trying to build\n+with `--with-sanitizers=address,thread` will fail in the configure script as\n+these sanitizers are mutually incompatible. Refer to your compiler manual to\n+learn more about these options and which sanitizers are supported by your\n+compiler.\n+\n+Additional resources:\n+\n+ * [AddressSanitizer](https://clang.llvm.org/docs/AddressSanitizer.html)\n+ * [LeakSanitizer](https://clang.llvm.org/docs/LeakSanitizer.html)\n+ * [MemorySanitizer](https://clang.llvm.org/docs/MemorySanitizer.html)\n+ * [ThreadSanitizer](https://clang.llvm.org/docs/ThreadSanitizer.html)\n+ * [UndefinedBehaviorSanitizer](https://clang.llvm.org/docs/UndefinedBehaviorSanitizer.html)\n+ * [GCC Instrumentation Options](https://gcc.gnu.org/onlinedocs/gcc/Instrumentation-Options.html)\n+ * [Google Sanitizers Wiki](https://github.com/google/sanitizers/wiki)\n+ * [Issue #12691: Enable -fsanitize flags in Travis](https://github.com/bitcoin/bitcoin/issues/12691)\n+\n Locking/mutex usage notes\n -------------------------\n "
      },
      {
        "sha": "3ff89589601682a6466fe3f34a080369b2ae79e4",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6feb46c3721605f6ae54d7e635a06f82cd7c1449/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6feb46c3721605f6ae54d7e635a06f82cd7c1449/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=6feb46c3721605f6ae54d7e635a06f82cd7c1449",
        "patch": "@@ -4,8 +4,8 @@\n \n DIST_SUBDIRS = secp256k1 univalue\n \n-AM_LDFLAGS = $(PTHREAD_CFLAGS) $(LIBTOOL_LDFLAGS) $(HARDENED_LDFLAGS) $(GPROF_LDFLAGS)\n-AM_CXXFLAGS = $(HARDENED_CXXFLAGS) $(ERROR_CXXFLAGS) $(GPROF_CXXFLAGS)\n+AM_LDFLAGS = $(PTHREAD_CFLAGS) $(LIBTOOL_LDFLAGS) $(HARDENED_LDFLAGS) $(GPROF_LDFLAGS) $(SANITIZER_LDFLAGS)\n+AM_CXXFLAGS = $(HARDENED_CXXFLAGS) $(ERROR_CXXFLAGS) $(GPROF_CXXFLAGS) $(SANITIZER_CXXFLAGS)\n AM_CPPFLAGS = $(HARDENED_CPPFLAGS)\n EXTRA_LIBRARIES =\n "
      }
    ]
  }
]