practicalswift,2018-03-15T10:06:02Z,"Concept ACK\n\nVery nice!",https://github.com/bitcoin/bitcoin/pull/12692#issuecomment-373323988,373323988,
eklitzke,2018-03-15T13:08:08Z,"The code actually looks good with `-fsanitize=undefined` and `-fsanitize=thread`, the test suite passes cleanly and my `bitcoind` seems fine with those options.\n\nThings are horribly broken if you try to use `-fsanitize=address`. If anyone wants to play with that option I recommend you use `--disable-asm`, otherwise you get segfaults in `sha256_sse4::Transform` (which I think is a bug in addres",https://github.com/bitcoin/bitcoin/pull/12692#issuecomment-373369583,373369583,
laanwj,2018-03-15T13:33:48Z,"I don't think we should add configure options for every possible sanitation flag. This might confuse people that are trying to build the software with a flurry of options. It looks like the beginning of trying to wrap all compiler options. Which is unnecessary as they can already be passed through `./configure CXXFLAGS=""-fsanitize=magnetic-flux""`.\n\nWhat about a single `--enable-sanitize=a,b,c`",https://github.com/bitcoin/bitcoin/pull/12692#issuecomment-373376866,373376866,
practicalswift,2018-03-15T14:06:20Z,"@laanwj But the sanitizers are mutually exclusive, right? I.e. you cannot run ASan and TSan at the same time.",https://github.com/bitcoin/bitcoin/pull/12692#issuecomment-373387238,373387238,
luke-jr,2018-03-15T14:25:05Z,@practicalswift Some are. Some are not. Different compilers may have different limitations in the future as well.,https://github.com/bitcoin/bitcoin/pull/12692#issuecomment-373393556,373393556,
luke-jr,2018-03-15T14:27:17Z,"Also, it should be noted that the downside of these flags is not limited to performance overhead: they may also introduce security issues. (This is why it's discouraged to build your entire system with them enabled.)",https://github.com/bitcoin/bitcoin/pull/12692#issuecomment-373394419,373394419,
practicalswift,2018-03-15T14:31:23Z,"@luke-jr Yes, good point!\n\nAfter thinking about it a bit more and in light of @luke-jr:s comment I think @laanwj:s suggested `--enable-sanitize=a,b,c` (or even better: `--enable-sanitizer=a,b,c` is the way to go.",https://github.com/bitcoin/bitcoin/pull/12692#issuecomment-373395849,373395849,
practicalswift,2018-03-15T14:35:42Z,@eklitzke While we're at it â€“ what about allowing for MemorySanitizer (MSan: `-fsanitize=memory`) too? ,https://github.com/bitcoin/bitcoin/pull/12692#issuecomment-373397380,373397380,
laanwj,2018-03-15T15:02:38Z,"> @laanwj But the sanitizers are mutually exclusive, right? I.e. you cannot run ASan and TSan at the same time.\n\nThat's a subset right? In that case, the option would take only one argument. I was just illustrating how it generalizes to multiple. Mesa has similar option to provide a comma-separated list of drivers to build in, for example.",https://github.com/bitcoin/bitcoin/pull/12692#issuecomment-373407056,373407056,
practicalswift,2018-03-15T15:05:44Z,"@laanwj Yes, you're right! I think `--enable-sanitizer=a,b,c` is a good idea.",https://github.com/bitcoin/bitcoin/pull/12692#issuecomment-373408240,373408240,
eklitzke,2018-03-16T19:44:24Z,"These are good suggestions, I will redo things and put another version of this change.",https://github.com/bitcoin/bitcoin/pull/12692#issuecomment-373824772,373824772,
theuni,2018-03-16T20:31:12Z,"On Mar 16, 2018 4:16 PM, ""Evan Klitzke"" <notifications@github.com> wrote:\n\n*@eklitzke* commented on this pull request.\n------------------------------\n\nIn configure.ac\n<https://github.com/bitcoin/bitcoin/pull/12692#discussion_r175203308>:\n\n> @@ -247,6 +268,27 @@ if test ""x$enable_debug"" = xyes; then\n     fi\n fi\n\n+# Checking for -fsanitize flags works differently from other compiler flag",https://github.com/bitcoin/bitcoin/pull/12692#issuecomment-373836386,373836386,
eklitzke,2018-03-16T20:43:31Z,"Updated to add a single sanitizer flag. Should be portable to all POSIX systems including traditional /bin/sh.\n\nI tried a lot of things with the existing AX_* macros and could not get this to work right without the new m4 file I added. For instance, I tried using AX_LINK_IFELSE after AX_CHECK_COMPILE_FLAG, but that uses CXXFLAGS not the new flags I added, and it has no option to take additiona",https://github.com/bitcoin/bitcoin/pull/12692#issuecomment-373839543,373839543,
eklitzke,2018-03-21T02:20:15Z,"You're right, I removed the m4 file I added and made this much simpler. The error messages are also much better now.\n\nChanges:\n * Since the compiler will accept sanitizer options separated by a comma, I removed the for loop and tr nonsense\n * First check using AX_CHECK_COMPILE_FLAGS, this ensures that the compiler accepts the flags and the combination is compatible\n * Next check using AX",https://github.com/bitcoin/bitcoin/pull/12692#issuecomment-374817142,374817142,
eklitzke,2018-03-22T17:25:21Z,Docs added (including the note about `--disable-asm`) and re-squashed.,https://github.com/bitcoin/bitcoin/pull/12692#issuecomment-375389940,375389940,
eklitzke,2018-03-27T01:04:47Z,Updated to use the --with form and re-squashed.,https://github.com/bitcoin/bitcoin/pull/12692#issuecomment-376361439,376361439,
laanwj,2018-03-29T20:57:37Z,utACK 6feb46c,https://github.com/bitcoin/bitcoin/pull/12692#issuecomment-377370089,377370089,
theuni,2018-03-15T19:40:24Z,Does AX_CHECK_LINK_FLAG not do what we want here?,https://github.com/bitcoin/bitcoin/pull/12692#discussion_r174907923,174907923,configure.ac
theuni,2018-03-15T19:42:21Z,"As mentioned in the debugging PR, Please add these to a SANITIZE_CXXFLAGS or DEBUG_CXXFLAGS or so, rather than CXXFLAGS directly.\n\nAdding to CXXFLAGS means that future tests will be done with sanitizers enabled, which can cause false-negatives.",https://github.com/bitcoin/bitcoin/pull/12692#discussion_r174908426,174908426,configure.ac
eklitzke,2018-03-16T19:43:54Z,"That adds the flags to LDFLAGS, so no.",https://github.com/bitcoin/bitcoin/pull/12692#discussion_r175196365,175196365,configure.ac
eklitzke,2018-03-16T19:43:59Z,will fix,https://github.com/bitcoin/bitcoin/pull/12692#discussion_r175196374,175196374,configure.ac
eklitzke,2018-03-16T20:15:57Z,Actually I think there's a trick to combine these (and remove the m4 file I added).,https://github.com/bitcoin/bitcoin/pull/12692#discussion_r175203308,175203308,configure.ac
theuni,2018-03-20T21:15:57Z,"I'm not sure what distinction you're trying to make here. As far as I can tell, clang/gcc handle this the same way. Of course, how distros configure and distribute them is a different story.\n\nThe following works fine for me with a gcc with busted libtsan:\n```bash\nAX_CHECK_LINK_FLAG([[-fsanitize=undefined]],[[SANITIZER_CXXFLAGS=""${SANITIZER_CXXFLAGS} -fsanitize=undefined""; SANITIZER_LDFLAGS",https://github.com/bitcoin/bitcoin/pull/12692#discussion_r175925154,175925154,configure.ac
eklitzke,2018-03-21T01:28:28Z,I'll try retesting this.,https://github.com/bitcoin/bitcoin/pull/12692#discussion_r175968638,175968638,configure.ac
theuni,2018-03-22T17:48:43Z,"Mind changing this to AC_ARG_WITH? In autoconf-speak, --enable-foo is intended to be binary (which is why it enables --disable-foo too), and --with-bar is intended to take options.",https://github.com/bitcoin/bitcoin/pull/12692#discussion_r176513584,176513584,configure.ac
theuni,2018-03-22T17:55:59Z,"Could you add these to a SANITIZER_LDFLAGS as well, and add it to AM_LDFLAGS? I'm nervous that automake/libtool may not always add (all) CXXFLAGS to the link-line. In fact, they really shouldn't be doing that anyway.",https://github.com/bitcoin/bitcoin/pull/12692#discussion_r176516277,176516277,configure.ac
theuni,2018-03-22T18:37:25Z,"Why not notate the incompatible functions with a function attribute (```no_sanitize(""address"")```) instead? Of course we'd need to do an autoconf check for that first.",https://github.com/bitcoin/bitcoin/pull/12692#discussion_r176530262,176530262,doc/developer-notes.md
eklitzke,2018-03-27T01:02:42Z,"We could, but there seem to be a lot of them so I don't have a full list of what needs to be disabled yet.",https://github.com/bitcoin/bitcoin/pull/12692#discussion_r177279250,177279250,doc/developer-notes.md
eklitzke,2018-03-27T01:02:47Z,done,https://github.com/bitcoin/bitcoin/pull/12692#discussion_r177279274,177279274,configure.ac
eklitzke,2018-03-27T01:02:56Z,done,https://github.com/bitcoin/bitcoin/pull/12692#discussion_r177279353,177279353,configure.ac
