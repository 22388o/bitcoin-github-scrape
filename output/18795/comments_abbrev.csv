domob1812,2020-04-28 07:29:31,"This is meant as an example for #14148 as requested by @MarcoFalke , not to be merged for now.",https://github.com/bitcoin/bitcoin/pull/18795#issuecomment-620432429,620432429,
DrahtBot,2020-04-28 08:35:32,<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.,https://github.com/bitcoin/bitcoin/pull/18795#issuecomment-620463740,620463740,
laanwj,2020-04-30 13:54:29,"If this demonstrates an unfixed issue, shouldn't the test fail on master?",https://github.com/bitcoin/bitcoin/pull/18795#issuecomment-621867814,621867814,
domob1812,2020-05-01 07:12:04,"> If this demonstrates an unfixed issue, shouldn't the test fail on master?\n\nThat's a good point.  The test was originally written to assert the current behaviour and thus passed (but looking at the code one could see the behaviour described in #14148).\n\nBut I agree that is probably confusing.  I've added another commit now that makes the test fail as expected (the original version is stil",https://github.com/bitcoin/bitcoin/pull/18795#issuecomment-622279220,622279220,
domob1812,2020-05-12 15:08:35,"Thanks for the feeback, @MarcoFalke !  I've addressed it with a new commit (so as to not invalidate comments made on previous commits), but am of course happy to squash all history into a single commit any time.",https://github.com/bitcoin/bitcoin/pull/18795#issuecomment-627405236,627405236,
domob1812,2020-05-14 04:56:53,"@MarcoFalke Thanks!  I've rebased onto latest `master`, squashed all commits, and added in a `getbalances` check before the `abandontransaction` call as well (which indeed shows all zero).",https://github.com/bitcoin/bitcoin/pull/18795#issuecomment-628386424,628386424,
MarcoFalke,2020-05-14 10:07:15,ACK 7aeaa92ae0d45cddd2cdbdc735cdbcfa5fb2871a,https://github.com/bitcoin/bitcoin/pull/18795#issuecomment-628533978,628533978,
decryp2kanon,2020-10-04 17:07:11,Concept ACK,https://github.com/bitcoin/bitcoin/pull/18795#issuecomment-703285374,703285374,
domob1812,2021-02-25 08:04:55,"Thanks @LarryRuane and @leonardojobim , and sorry for the long response time on my end.  I have now rebased the PR onto latest `master` and addressed your comments.\n\nAs for the alternate final validation with `-zapwallettxes`, I agree this is possible, but I think `abandontransaction` is more explicit as it specifies the transaction in question.  I'm happy to change it, though.",https://github.com/bitcoin/bitcoin/pull/18795#issuecomment-785702542,785702542,
LarryRuane,2021-02-25 18:42:41,ACK ef9f3f4b25a6158aa3ff32bf74c104c325c910b1,https://github.com/bitcoin/bitcoin/pull/18795#issuecomment-786118668,786118668,
adamjonas,2021-06-01 16:07:51,Ping for rebase @domob1812.,https://github.com/bitcoin/bitcoin/pull/18795#issuecomment-852248286,852248286,
domob1812,2021-06-02 12:34:57,"Thanks for the reminder, rebased.",https://github.com/bitcoin/bitcoin/pull/18795#issuecomment-852989417,852989417,
adamjonas,2021-06-03 16:04:42,"CI fail is unrelated, see https://github.com/bitcoin/bitcoin/issues/20975",https://github.com/bitcoin/bitcoin/pull/18795#issuecomment-853986064,853986064,
MarcoFalke,2020-05-11 22:53:02,"```\ntest/functional/wallet_orphanedreward.py:8:1: F401 'test_framework.util.assert_raises_rpc_error' imported but unused",https://github.com/bitcoin/bitcoin/pull/18795#discussion_r423364829,423364829,test/functional/wallet_orphanedreward.py
MarcoFalke,2020-05-11 22:53:10,Why is this needed?,https://github.com/bitcoin/bitcoin/pull/18795#discussion_r423364868,423364868,test/functional/wallet_orphanedreward.py
MarcoFalke,2020-05-11 22:53:54,"For a speed-up you can remove this line, and then start the test with `sendtoaddress`.",https://github.com/bitcoin/bitcoin/pull/18795#discussion_r423365132,423365132,test/functional/wallet_orphanedreward.py
MarcoFalke,2020-05-11 23:16:31,"Could comment this out, and add a comment that it fails?",https://github.com/bitcoin/bitcoin/pull/18795#discussion_r423372657,423372657,test/functional/wallet_orphanedreward.py
MarcoFalke,2020-05-11 23:16:50,"Also, would be good to check the output of `getbalances` here.",https://github.com/bitcoin/bitcoin/pull/18795#discussion_r423372747,423372747,test/functional/wallet_orphanedreward.py
domob1812,2020-05-12 15:05:02,"Indeed, that's a left over from the previous commit.  Removed.",https://github.com/bitcoin/bitcoin/pull/18795#discussion_r423808536,423808536,test/functional/wallet_orphanedreward.py
domob1812,2020-05-12 15:05:13,Removed.,https://github.com/bitcoin/bitcoin/pull/18795#discussion_r423808696,423808696,test/functional/wallet_orphanedreward.py
domob1812,2020-05-12 15:06:57,"I think that a clean chain makes the test easier to read, as it doesn't require any prior knowledge about how the cached chain looks like.  If we use the cached chain, it will be harder to make sure that `node[1]` only has the coins we want to, as it will have immature coins that will appear over time.\n\nAlso, it seems the initial setup (including until after the `sendtoaddress`) is quick anywa",https://github.com/bitcoin/bitcoin/pull/18795#discussion_r423810100,423810100,test/functional/wallet_orphanedreward.py
domob1812,2020-05-12 15:07:46,"Instead of this, I've now added in the `abandontransaction` call that makes the test succeed (but according to #14148 should not be needed) as well as a comment explaining this.  I think that makes the situation even more clear.",https://github.com/bitcoin/bitcoin/pull/18795#discussion_r423810763,423810763,test/functional/wallet_orphanedreward.py
domob1812,2020-05-12 15:07:56,Added.,https://github.com/bitcoin/bitcoin/pull/18795#discussion_r423810884,423810884,test/functional/wallet_orphanedreward.py
LarryRuane,2020-12-16 22:46:00,"```suggestion\n        txid = self.nodes[1].sendtoaddress(self.nodes[0].getnewaddress(), 30)\n```",https://github.com/bitcoin/bitcoin/pull/18795#discussion_r544678039,544678039,test/functional/wallet_orphanedreward.py
LarryRuane,2020-12-16 23:02:11,"I wasn't sure why this `generate(200)` was needed, so I commented it out, and the test hung in the next line (`sync_blocks()`). I restored the line and played around with different generate counts, and found that it fails with 151 and works at 152. If I'm counting correctly, we invalidated 151 blocks, so it seems that it's necessary to extend the chain so it's _longer_ than it was before. (Necessa",https://github.com/bitcoin/bitcoin/pull/18795#discussion_r544686136,544686136,test/functional/wallet_orphanedreward.py
LarryRuane,2020-12-16 23:03:47,Can this last `sendtoaddress` be removed?,https://github.com/bitcoin/bitcoin/pull/18795#discussion_r544686860,544686860,test/functional/wallet_orphanedreward.py
domob1812,2021-02-25 08:01:51,"Indeed.  Not sure why I had the other form; maybe a previous version of the test needed the `subtractfeefromamount`, but that is no longer the case.",https://github.com/bitcoin/bitcoin/pull/18795#discussion_r582617560,582617560,test/functional/wallet_orphanedreward.py
domob1812,2021-02-25 08:02:35,"Yes it can, but I think having it in there is an extra check that the wallet does properly handle the coins.  So unless there is a strong preference to remove it, I'd rather keep it in to make the test more robust and descriptive.",https://github.com/bitcoin/bitcoin/pull/18795#discussion_r582617933,582617933,test/functional/wallet_orphanedreward.py
domob1812,2021-02-25 08:02:58,"Sounds good to me, updated to 152.",https://github.com/bitcoin/bitcoin/pull/18795#discussion_r582618143,582618143,test/functional/wallet_orphanedreward.py
LarryRuane,2021-02-25 18:42:14,"> ... having it in there is an extra check ...\n\nI verified that if this `sendtoaddress` fails (which I forced by increasing the amount sent to 99999), the entire test fails, which is good. (I wasn't aware of that, which is why I thought this was an unnecessary line of code -- good to leave it in as you have. Need to put an RPC within a `try` to have its failure not fail the overall test.)",https://github.com/bitcoin/bitcoin/pull/18795#discussion_r583076735,583076735,test/functional/wallet_orphanedreward.py
LarryRuane,2021-06-02 21:05:09,"```suggestion\n        # Get a block reward (25) with node 1 and remember the block so we can orphan\n```\n(Non-blocking, only if you touch-up, would have made the test easier for me to understand.)",https://github.com/bitcoin/bitcoin/pull/18795#discussion_r644319534,644319534,test/functional/wallet_orphanedreward.py
