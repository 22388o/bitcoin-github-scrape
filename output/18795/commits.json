[
  {
    "sha": "e4356f6a6c18e5027a064a4d3a5deda27985f584",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNDM1NmY2YTZjMThlNTAyN2EwNjRhNGQzYTVkZWRhMjc5ODVmNTg0",
    "commit": {
      "author": {
        "name": "Daniel Kraft",
        "email": "d@domob.eu",
        "date": "2020-04-28T07:26:09Z"
      },
      "committer": {
        "name": "Daniel Kraft",
        "email": "d@domob.eu",
        "date": "2021-06-02T11:53:50Z"
      },
      "message": "Testcase for wallet issue with orphaned rewards.\n\nThis adds a new test case demonstrating the wallet issue when block\nrewards are orphaned (https://github.com/bitcoin/bitcoin/issues/14148).",
      "tree": {
        "sha": "c8790e5acb52816fd247b668d657f34c08e9ab1b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c8790e5acb52816fd247b668d657f34c08e9ab1b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e4356f6a6c18e5027a064a4d3a5deda27985f584",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e4356f6a6c18e5027a064a4d3a5deda27985f584",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e4356f6a6c18e5027a064a4d3a5deda27985f584",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e4356f6a6c18e5027a064a4d3a5deda27985f584/comments",
    "author": {
      "login": "domob1812",
      "id": 4943644,
      "node_id": "MDQ6VXNlcjQ5NDM2NDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4943644?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/domob1812",
      "html_url": "https://github.com/domob1812",
      "followers_url": "https://api.github.com/users/domob1812/followers",
      "following_url": "https://api.github.com/users/domob1812/following{/other_user}",
      "gists_url": "https://api.github.com/users/domob1812/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/domob1812/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/domob1812/subscriptions",
      "organizations_url": "https://api.github.com/users/domob1812/orgs",
      "repos_url": "https://api.github.com/users/domob1812/repos",
      "events_url": "https://api.github.com/users/domob1812/events{/privacy}",
      "received_events_url": "https://api.github.com/users/domob1812/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "domob1812",
      "id": 4943644,
      "node_id": "MDQ6VXNlcjQ5NDM2NDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4943644?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/domob1812",
      "html_url": "https://github.com/domob1812",
      "followers_url": "https://api.github.com/users/domob1812/followers",
      "following_url": "https://api.github.com/users/domob1812/following{/other_user}",
      "gists_url": "https://api.github.com/users/domob1812/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/domob1812/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/domob1812/subscriptions",
      "organizations_url": "https://api.github.com/users/domob1812/orgs",
      "repos_url": "https://api.github.com/users/domob1812/repos",
      "events_url": "https://api.github.com/users/domob1812/events{/privacy}",
      "received_events_url": "https://api.github.com/users/domob1812/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e3d644a127e1432fbaf1c9d719edb28301943c60",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e3d644a127e1432fbaf1c9d719edb28301943c60",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e3d644a127e1432fbaf1c9d719edb28301943c60"
      }
    ],
    "stats": {
      "total": 62,
      "additions": 62,
      "deletions": 0
    },
    "files": [
      {
        "sha": "93a852ac7937882cb5fd56b569d9256a0d4650b3",
        "filename": "test/functional/test_runner.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e4356f6a6c18e5027a064a4d3a5deda27985f584/test/functional/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e4356f6a6c18e5027a064a4d3a5deda27985f584/test/functional/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_runner.py?ref=e4356f6a6c18e5027a064a4d3a5deda27985f584",
        "patch": "@@ -283,6 +283,7 @@\n     'feature_logging.py',\n     'feature_anchors.py',\n     'feature_coinstatsindex.py',\n+    'wallet_orphanedreward.py',\n     'p2p_node_network_limited.py',\n     'p2p_permissions.py',\n     'feature_blocksdir.py',"
      },
      {
        "sha": "e1544cbb48dbfb49c5a33328390fcd420e1a8994",
        "filename": "test/functional/wallet_orphanedreward.py",
        "status": "added",
        "additions": 61,
        "deletions": 0,
        "changes": 61,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e4356f6a6c18e5027a064a4d3a5deda27985f584/test/functional/wallet_orphanedreward.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e4356f6a6c18e5027a064a4d3a5deda27985f584/test/functional/wallet_orphanedreward.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_orphanedreward.py?ref=e4356f6a6c18e5027a064a4d3a5deda27985f584",
        "patch": "@@ -0,0 +1,61 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020-2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test orphaned block rewards in the wallet.\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+class OrphanedBlockRewardTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        # Generate some blocks and obtain some coins on node 0.  We send\n+        # some balance to node 1, which will hold it as a single coin.\n+        self.nodes[0].generate(150)\n+        self.nodes[0].sendtoaddress(self.nodes[1].getnewaddress(), 10)\n+        self.nodes[0].generate(1)\n+\n+        # Get a block reward with node 1 and remember the block so we can orphan\n+        # it later.\n+        self.sync_blocks()\n+        blk = self.nodes[1].generate(1)[0]\n+        self.sync_blocks()\n+\n+        # Let the block reward mature and send coins including both\n+        # the existing balance and the block reward.\n+        self.nodes[0].generate(150)\n+        assert_equal(self.nodes[1].getbalance(), 10 + 25)\n+        txid = self.nodes[1].sendtoaddress(self.nodes[0].getnewaddress(), 30)\n+\n+        # Orphan the block reward and make sure that the original coins\n+        # from the wallet can still be spent.\n+        self.nodes[0].invalidateblock(blk)\n+        self.nodes[0].generate(152)\n+        self.sync_blocks()\n+        # Without the following abandontransaction call, the coins are\n+        # not considered available yet.\n+        assert_equal(self.nodes[1].getbalances()[\"mine\"], {\n+          \"trusted\": 0,\n+          \"untrusted_pending\": 0,\n+          \"immature\": 0,\n+        })\n+        # The following abandontransaction is necessary to make the later\n+        # lines succeed, and probably should not be needed; see\n+        # https://github.com/bitcoin/bitcoin/issues/14148.\n+        self.nodes[1].abandontransaction(txid)\n+        assert_equal(self.nodes[1].getbalances()[\"mine\"], {\n+          \"trusted\": 10,\n+          \"untrusted_pending\": 0,\n+          \"immature\": 0,\n+        })\n+        self.nodes[1].sendtoaddress(self.nodes[0].getnewaddress(), 9)\n+\n+if __name__ == '__main__':\n+    OrphanedBlockRewardTest().main()"
      }
    ]
  }
]