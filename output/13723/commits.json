[
  {
    "sha": "c05712cb590c8c76729a71d75a290c67ae9e3c06",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjMDU3MTJjYjU5MGM4Yzc2NzI5YTcxZDc1YTI5MGM2N2FlOWUzYzA2",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-08-08T21:27:20Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-08-13T15:21:16Z"
      },
      "message": "Only wipe wrong UTXO type data if overwritten by wallet",
      "tree": {
        "sha": "821f2dd1d1262175850287eaa36096e1cf99b81d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/821f2dd1d1262175850287eaa36096e1cf99b81d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c05712cb590c8c76729a71d75a290c67ae9e3c06",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c05712cb590c8c76729a71d75a290c67ae9e3c06",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c05712cb590c8c76729a71d75a290c67ae9e3c06",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c05712cb590c8c76729a71d75a290c67ae9e3c06/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f87d0a9d75b366445f880041c56c725f8196364e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f87d0a9d75b366445f880041c56c725f8196364e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f87d0a9d75b366445f880041c56c725f8196364e"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 9,
      "deletions": 6
    },
    "files": [
      {
        "sha": "4aed097364e3adfa77bbf2e92910047bfcf804ec",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 6,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c05712cb590c8c76729a71d75a290c67ae9e3c06/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c05712cb590c8c76729a71d75a290c67ae9e3c06/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=c05712cb590c8c76729a71d75a290c67ae9e3c06",
        "patch": "@@ -4504,10 +4504,11 @@ bool FillPSBT(const CWallet* pwallet, PartiallySignedTransaction& psbtx, const C\n \n         // If we don't know about this input, skip it and let someone else deal with it\n         const uint256& txhash = txin.prevout.hash;\n-        const auto& it = pwallet->mapWallet.find(txhash);\n+        const auto it = pwallet->mapWallet.find(txhash);\n         if (it != pwallet->mapWallet.end()) {\n             const CWalletTx& wtx = it->second;\n             CTxOut utxo = wtx.tx->vout[txin.prevout.n];\n+            // Update both UTXOs from the wallet.\n             input.non_witness_utxo = wtx.tx;\n             input.witness_utxo = utxo;\n         }\n@@ -4524,11 +4525,13 @@ bool FillPSBT(const CWallet* pwallet, PartiallySignedTransaction& psbtx, const C\n             complete &= SignPSBTInput(PublicOnlySigningProvider(pwallet), *psbtx.tx, input, sigdata, i, sighash_type);\n         }\n \n-        // Drop the unnecessary UTXO\n-        if (sigdata.witness) {\n-            input.non_witness_utxo = nullptr;\n-        } else {\n-            input.witness_utxo.SetNull();\n+        if (it != pwallet->mapWallet.end()) {\n+            // Drop the unnecessary UTXO if we added both from the wallet.\n+            if (sigdata.witness) {\n+                input.non_witness_utxo = nullptr;\n+            } else {\n+                input.witness_utxo.SetNull();\n+            }\n         }\n \n         // Get public key paths"
      }
    ]
  },
  {
    "sha": "8254e9950f67d750c7f5905bfdef526d825965ed",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4MjU0ZTk5NTBmNjdkNzUwYzdmNTkwNWJmZGVmNTI2ZDgyNTk2NWVk",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-08-08T21:18:55Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-08-13T15:21:16Z"
      },
      "message": "Additional sanity checks in SignPSBTInput",
      "tree": {
        "sha": "83989eff3953e9813857213e34e744900c072c47",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/83989eff3953e9813857213e34e744900c072c47"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8254e9950f67d750c7f5905bfdef526d825965ed",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8254e9950f67d750c7f5905bfdef526d825965ed",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8254e9950f67d750c7f5905bfdef526d825965ed",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8254e9950f67d750c7f5905bfdef526d825965ed/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c05712cb590c8c76729a71d75a290c67ae9e3c06",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c05712cb590c8c76729a71d75a290c67ae9e3c06",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c05712cb590c8c76729a71d75a290c67ae9e3c06"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 17,
      "deletions": 1
    },
    "files": [
      {
        "sha": "1982e8a832d770af0bc0e65c6b82f185baf3ab1a",
        "filename": "src/script/sign.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8254e9950f67d750c7f5905bfdef526d825965ed/src/script/sign.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8254e9950f67d750c7f5905bfdef526d825965ed/src/script/sign.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/sign.cpp?ref=8254e9950f67d750c7f5905bfdef526d825965ed",
        "patch": "@@ -244,17 +244,33 @@ bool SignPSBTInput(const SigningProvider& provider, const CMutableTransaction& t\n     input.FillSignatureData(sigdata);\n \n     // Get UTXO\n+    bool require_witness_sig = false;\n     CTxOut utxo;\n     if (input.non_witness_utxo) {\n+        // If we're taking our information from a non-witness UTXO, verify that it matches the prevout.\n+        if (input.non_witness_utxo->GetHash() != tx.vin[index].prevout.hash) return false;\n+        // If both witness and non-witness UTXO are provided, verify that they match. This check shouldn't\n+        // matter, as the PSBT deserializer enforces only one of both is provided, and the only way both\n+        // can be present is when they're added simultaneously by FillPSBT (in which case they always match).\n+        // Still, check in order to not rely on callers to enforce this.\n+        if (!input.witness_utxo.IsNull() && input.non_witness_utxo->vout[tx.vin[index].prevout.n] != input.witness_utxo) return false;\n         utxo = input.non_witness_utxo->vout[tx.vin[index].prevout.n];\n     } else if (!input.witness_utxo.IsNull()) {\n         utxo = input.witness_utxo;\n+        // When we're taking our information from a witness UTXO, we can't verify it is actually data from\n+        // the output being spent. This is safe in case a witness signature is produced (which includes this\n+        // information directly in the hash), but not for non-witness signatures. Remember that we require\n+        // a witness signature in this situation.\n+        require_witness_sig = true;\n     } else {\n         return false;\n     }\n \n     MutableTransactionSignatureCreator creator(&tx, index, utxo.nValue, sighash);\n+    sigdata.witness = false;\n     bool sig_complete = ProduceSignature(provider, creator, utxo.scriptPubKey, sigdata);\n+    // Verify that a witness signature was produced in case one was required.\n+    if (require_witness_sig && !sigdata.witness) return false;\n     input.FromSignatureData(sigdata);\n     return sig_complete;\n }"
      },
      {
        "sha": "d2033af7316b00c463855b062929e13af1967d24",
        "filename": "src/script/sign.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8254e9950f67d750c7f5905bfdef526d825965ed/src/script/sign.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8254e9950f67d750c7f5905bfdef526d825965ed/src/script/sign.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/sign.h?ref=8254e9950f67d750c7f5905bfdef526d825965ed",
        "patch": "@@ -678,7 +678,7 @@ bool ProduceSignature(const SigningProvider& provider, const BaseSignatureCreato\n bool SignSignature(const SigningProvider &provider, const CScript& fromPubKey, CMutableTransaction& txTo, unsigned int nIn, const CAmount& amount, int nHashType);\n bool SignSignature(const SigningProvider &provider, const CTransaction& txFrom, CMutableTransaction& txTo, unsigned int nIn, int nHashType);\n \n-/** Signs a PSBTInput */\n+/** Signs a PSBTInput, verifying that all provided data matches what is being signed. */\n bool SignPSBTInput(const SigningProvider& provider, const CMutableTransaction& tx, PSBTInput& input, SignatureData& sigdata, int index, int sighash = 1);\n \n /** Extract signature data from a transaction input, and insert it. */"
      }
    ]
  },
  {
    "sha": "7c8bffdc24e005c3044a9a80bbc227b2a39b8605",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3YzhiZmZkYzI0ZTAwNWMzMDQ0YTlhODBiYmMyMjdiMmEzOWI4NjA1",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2018-08-08T21:14:12Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-08-13T15:41:19Z"
      },
      "message": "Test that a non-witness script as witness utxo is not signed",
      "tree": {
        "sha": "58139631e94ff654eb74bd5c99a665c9eac058ef",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/58139631e94ff654eb74bd5c99a665c9eac058ef"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7c8bffdc24e005c3044a9a80bbc227b2a39b8605",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7c8bffdc24e005c3044a9a80bbc227b2a39b8605",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7c8bffdc24e005c3044a9a80bbc227b2a39b8605",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7c8bffdc24e005c3044a9a80bbc227b2a39b8605/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8254e9950f67d750c7f5905bfdef526d825965ed",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8254e9950f67d750c7f5905bfdef526d825965ed",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8254e9950f67d750c7f5905bfdef526d825965ed"
      }
    ],
    "stats": {
      "total": 27,
      "additions": 25,
      "deletions": 2
    },
    "files": [
      {
        "sha": "777d53d3304958231065452cad86d451b481ddb1",
        "filename": "test/functional/data/rpc_psbt.json",
        "status": "modified",
        "additions": 25,
        "deletions": 2,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7c8bffdc24e005c3044a9a80bbc227b2a39b8605/test/functional/data/rpc_psbt.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7c8bffdc24e005c3044a9a80bbc227b2a39b8605/test/functional/data/rpc_psbt.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/data/rpc_psbt.json?ref=7c8bffdc24e005c3044a9a80bbc227b2a39b8605",
        "patch": "@@ -57,15 +57,38 @@\n             ],\n             \"psbt\" : \"cHNidP8BAJoCAAAAAljoeiG1ba8MI76OcHBFbDNvfLqlyHV5JPVFiHuyq911AAAAAAD/////g40EJ9DsZQpoqka7CwmK6kQiwHGyyng1Kgd5WdB86h0BAAAAAP////8CcKrwCAAAAAAWABTYXCtx0AYLCcmIauuBXlCZHdoSTQDh9QUAAAAAFgAUAK6pouXw+HaliN9VRuh0LR2HAI8AAAAAAAEAuwIAAAABqtc5MQGL0l+ErkALaISL4J23BurCrBgpi6vucatlb4sAAAAASEcwRAIgWPb8fGoz4bMVSNSByCbAFb0wE1qtQs1neQ2rZtKtJDsCIEoc7SYExnNbY5PltBaR3XiwDwxZQvufdRhW+qk4FX26Af7///8CgPD6AgAAAAAXqRQPuUY0IWlrgsgzryQceMF9295JNIfQ8gonAQAAABepFCnKdPigj4GZlCgYXJe12FLkBj9hh2UAAAABBEdSIQKVg785rgpgl0etGZrd1jT6YQhVnWxc05tMIYPxq5bgfyEC2rYf9JoU22p9ArDNH7t4/EsYMStbTlTa5Nui+/71NtdSriIGApWDvzmuCmCXR60Zmt3WNPphCFWdbFzTm0whg/GrluB/ENkMak8AAACAAAAAgAAAAIAiBgLath/0mhTban0CsM0fu3j8SxgxK1tOVNrk26L7/vU21xDZDGpPAAAAgAAAAIABAACAAQMEAQAAAAABASAAwusLAAAAABepFLf1+vQOPUClpFmx2zU18rcvqSHohwEEIgAgjCNTFzdDtZXftKB7crqOQuN5fadOh/59nXSX47ICiQMBBUdSIQMIncEMesbbVPkTKa9hczPbOIzq0MIx9yM3nRuZAwsC3CECOt2QTz1tz1nduQaw3uI1Kbf/ue1Q5ehhUZJoYCIfDnNSriIGAjrdkE89bc9Z3bkGsN7iNSm3/7ntUOXoYVGSaGAiHw5zENkMak8AAACAAAAAgAMAAIAiBgMIncEMesbbVPkTKa9hczPbOIzq0MIx9yM3nRuZAwsC3BDZDGpPAAAAgAAAAIACAACAAQMEAQAAAAAiAgOppMN/WZbTqiXbrGtXCvBlA5RJKUJGCzVHU+2e7KWHcRDZDGpPAAAAgAAAAIAEAACAACICAn9jmXV9Lv9VoTatAsaEsYOLZVbl8bazQoKpS2tQBRCWENkMak8AAACAAAAAgAUAAIAA\",\n             \"result\" : \"cHNidP8BAJoCAAAAAljoeiG1ba8MI76OcHBFbDNvfLqlyHV5JPVFiHuyq911AAAAAAD/////g40EJ9DsZQpoqka7CwmK6kQiwHGyyng1Kgd5WdB86h0BAAAAAP////8CcKrwCAAAAAAWABTYXCtx0AYLCcmIauuBXlCZHdoSTQDh9QUAAAAAFgAUAK6pouXw+HaliN9VRuh0LR2HAI8AAAAAAAEAuwIAAAABqtc5MQGL0l+ErkALaISL4J23BurCrBgpi6vucatlb4sAAAAASEcwRAIgWPb8fGoz4bMVSNSByCbAFb0wE1qtQs1neQ2rZtKtJDsCIEoc7SYExnNbY5PltBaR3XiwDwxZQvufdRhW+qk4FX26Af7///8CgPD6AgAAAAAXqRQPuUY0IWlrgsgzryQceMF9295JNIfQ8gonAQAAABepFCnKdPigj4GZlCgYXJe12FLkBj9hh2UAAAAiAgKVg785rgpgl0etGZrd1jT6YQhVnWxc05tMIYPxq5bgf0cwRAIgdAGK1BgAl7hzMjwAFXILNoTMgSOJEEjn282bVa1nnJkCIHPTabdA4+tT3O+jOCPIBwUUylWn3ZVE8VfBZ5EyYRGMAQEDBAEAAAABBEdSIQKVg785rgpgl0etGZrd1jT6YQhVnWxc05tMIYPxq5bgfyEC2rYf9JoU22p9ArDNH7t4/EsYMStbTlTa5Nui+/71NtdSriIGApWDvzmuCmCXR60Zmt3WNPphCFWdbFzTm0whg/GrluB/ENkMak8AAACAAAAAgAAAAIAiBgLath/0mhTban0CsM0fu3j8SxgxK1tOVNrk26L7/vU21xDZDGpPAAAAgAAAAIABAACAAAEBIADC6wsAAAAAF6kUt/X69A49QKWkWbHbNTXyty+pIeiHIgIDCJ3BDHrG21T5EymvYXMz2ziM6tDCMfcjN50bmQMLAtxHMEQCIGLrelVhB6fHP0WsSrWh3d9vcHX7EnWWmn84Pv/3hLyyAiAMBdu3Rw2/LwhVfdNWxzJcHtMJE+mWzThAlF2xIijaXwEBAwQBAAAAAQQiACCMI1MXN0O1ld+0oHtyuo5C43l9p06H/n2ddJfjsgKJAwEFR1IhAwidwQx6xttU+RMpr2FzM9s4jOrQwjH3IzedG5kDCwLcIQI63ZBPPW3PWd25BrDe4jUpt/+57VDl6GFRkmhgIh8Oc1KuIgYCOt2QTz1tz1nduQaw3uI1Kbf/ue1Q5ehhUZJoYCIfDnMQ2QxqTwAAAIAAAACAAwAAgCIGAwidwQx6xttU+RMpr2FzM9s4jOrQwjH3IzedG5kDCwLcENkMak8AAACAAAAAgAIAAIAAIgIDqaTDf1mW06ol26xrVwrwZQOUSSlCRgs1R1Ptnuylh3EQ2QxqTwAAAIAAAACABAAAgAAiAgJ/Y5l1fS7/VaE2rQLGhLGDi2VW5fG2s0KCqUtrUAUQlhDZDGpPAAAAgAAAAIAFAACAAA==\"\n+        },\n+        {\n+            \"privkeys\" : [\n+                \"cT7J9YpCwY3AVRFSjN6ukeEeWY6mhpbJPxRaDaP5QTdygQRxP9Au\",\n+                \"cNBc3SWUip9PPm1GjRoLEJT6T41iNzCYtD7qro84FMnM5zEqeJsE\"\n+            ],\n+            \"psbt\" : \"cHNidP8BAJoCAAAAAljoeiG1ba8MI76OcHBFbDNvfLqlyHV5JPVFiHuyq911AAAAAAD/////g40EJ9DsZQpoqka7CwmK6kQiwHGyyng1Kgd5WdB86h0BAAAAAP////8CcKrwCAAAAAAWABTYXCtx0AYLCcmIauuBXlCZHdoSTQDh9QUAAAAAFgAUAK6pouXw+HaliN9VRuh0LR2HAI8AAAAAAAEAuwIAAAABqtc5MQGL0l+ErkALaISL4J23BurCrBgpi6vucatlb4sAAAAASEcwRAIgWPb8fGoz4bMVSNSByCbAFb0wE1qtQs1neQ2rZtKtJDsCIEoc7SYExnNbY5PltBaR3XiwDwxZQvufdRhW+qk4FX26Af7///8CgPD6AgAAAAAXqRQPuUY0IWlrgsgzryQceMF9295JNIfQ8gonAQAAABepFCnKdPigj4GZlCgYXJe12FLkBj9hh2UAAAABBEdSIQKVg785rgpgl0etGZrd1jT6YQhVnWxc05tMIYPxq5bgfyEC2rYf9JoU22p9ArDNH7t4/EsYMStbTlTa5Nui+/71NtdSriIGApWDvzmuCmCXR60Zmt3WNPphCFWdbFzTm0whg/GrluB/ENkMak8AAACAAAAAgAAAAIAiBgLath/0mhTban0CsM0fu3j8SxgxK1tOVNrk26L7/vU21xDZDGpPAAAAgAAAAIABAACAAQMEAQAAAAABASAAwusLAAAAABepFLf1+vQOPUClpFmx2zU18rcvqSHohwEEIgAgjCNTFzdDtZXftKB7crqOQuN5fadOh/59nXSX47ICiQMBBUdSIQMIncEMesbbVPkTKa9hczPbOIzq0MIx9yM3nRuZAwsC3CECOt2QTz1tz1nduQaw3uI1Kbf/ue1Q5ehhUZJoYCIfDnNSriIGAjrdkE89bc9Z3bkGsN7iNSm3/7ntUOXoYVGSaGAiHw5zENkMak8AAACAAAAAgAMAAIAiBgMIncEMesbbVPkTKa9hczPbOIzq0MIx9yM3nRuZAwsC3BDZDGpPAAAAgAAAAIACAACAAQMEAQAAAAAiAgOppMN/WZbTqiXbrGtXCvBlA5RJKUJGCzVHU+2e7KWHcRDZDGpPAAAAgAAAAIAEAACAACICAn9jmXV9Lv9VoTatAsaEsYOLZVbl8bazQoKpS2tQBRCWENkMak8AAACAAAAAgAUAAIAA\",\n+            \"result\" : \"cHNidP8BAJoCAAAAAljoeiG1ba8MI76OcHBFbDNvfLqlyHV5JPVFiHuyq911AAAAAAD/////g40EJ9DsZQpoqka7CwmK6kQiwHGyyng1Kgd5WdB86h0BAAAAAP////8CcKrwCAAAAAAWABTYXCtx0AYLCcmIauuBXlCZHdoSTQDh9QUAAAAAFgAUAK6pouXw+HaliN9VRuh0LR2HAI8AAAAAAAEAuwIAAAABqtc5MQGL0l+ErkALaISL4J23BurCrBgpi6vucatlb4sAAAAASEcwRAIgWPb8fGoz4bMVSNSByCbAFb0wE1qtQs1neQ2rZtKtJDsCIEoc7SYExnNbY5PltBaR3XiwDwxZQvufdRhW+qk4FX26Af7///8CgPD6AgAAAAAXqRQPuUY0IWlrgsgzryQceMF9295JNIfQ8gonAQAAABepFCnKdPigj4GZlCgYXJe12FLkBj9hh2UAAAAiAgLath/0mhTban0CsM0fu3j8SxgxK1tOVNrk26L7/vU210cwRAIgYxqYn+c4qSrQGYYCMxLBkhT+KAKznly8GsNniAbGksMCIDnbbDh70mdxbf2z1NjaULjoXSEzJrp8faqkwM5B65IjAQEDBAEAAAABBEdSIQKVg785rgpgl0etGZrd1jT6YQhVnWxc05tMIYPxq5bgfyEC2rYf9JoU22p9ArDNH7t4/EsYMStbTlTa5Nui+/71NtdSriIGApWDvzmuCmCXR60Zmt3WNPphCFWdbFzTm0whg/GrluB/ENkMak8AAACAAAAAgAAAAIAiBgLath/0mhTban0CsM0fu3j8SxgxK1tOVNrk26L7/vU21xDZDGpPAAAAgAAAAIABAACAAAEBIADC6wsAAAAAF6kUt/X69A49QKWkWbHbNTXyty+pIeiHIgICOt2QTz1tz1nduQaw3uI1Kbf/ue1Q5ehhUZJoYCIfDnNHMEQCIGX0W6WZi1mif/4ae+0BavHx+Q1Us6qPdFCqX1aiUQO9AiB/ckcDrR7blmgLKEtW1P/LiPf7dZ6rvgiqMPKbhROD0gEBAwQBAAAAAQQiACCMI1MXN0O1ld+0oHtyuo5C43l9p06H/n2ddJfjsgKJAwEFR1IhAwidwQx6xttU+RMpr2FzM9s4jOrQwjH3IzedG5kDCwLcIQI63ZBPPW3PWd25BrDe4jUpt/+57VDl6GFRkmhgIh8Oc1KuIgYCOt2QTz1tz1nduQaw3uI1Kbf/ue1Q5ehhUZJoYCIfDnMQ2QxqTwAAAIAAAACAAwAAgCIGAwidwQx6xttU+RMpr2FzM9s4jOrQwjH3IzedG5kDCwLcENkMak8AAACAAAAAgAIAAIAAIgIDqaTDf1mW06ol26xrVwrwZQOUSSlCRgs1R1Ptnuylh3EQ2QxqTwAAAIAAAACABAAAgAAiAgJ/Y5l1fS7/VaE2rQLGhLGDi2VW5fG2s0KCqUtrUAUQlhDZDGpPAAAAgAAAAIAFAACAAA==\"\n+        },\n+        {\n+            \"privkeys\" : [\n+                \"cT7J9YpCwY3AVRFSjN6ukeEeWY6mhpbJPxRaDaP5QTdygQRxP9Au\",\n+                \"cNBc3SWUip9PPm1GjRoLEJT6T41iNzCYtD7qro84FMnM5zEqeJsE\"\n+            ],\n+            \"psbt\" : \"cHNidP8BAJoCAAAAAljoeiG1ba8MI76OcHBFbDNvfLqlyHV5JPVFiHuyq911AAAAAAD/////g40EJ9DsZQpoqka7CwmK6kQiwHGyyng1Kgd5WdB86h0BAAAAAP////8CcKrwCAAAAAAWABTYXCtx0AYLCcmIauuBXlCZHdoSTQDh9QUAAAAAFgAUAK6pouXw+HaliN9VRuh0LR2HAI8AAAAAAAEAuwIAAAABqtc5MQGL0l+ErkALaISL4J23BurCrBgpi6vucatlb4sAAAAASEcwRAIgWPb8fGoz4bMVSNSByCbAFb0wE1qtQs1neQ2rZtKtJDsCIEoc7SYExnNbY5PltBaR3XiwDwxZQvufdRhW+qk4FX26Af7///8CgPD6AgAAAAAXqRQPuUY0IWlrgsgzryQceMF9295JNIfQ8gonAQAAABepFCnKdPigj4GZlCgYXJe12FLkBj9hh2UAAAABBEdSIQKVg785rgpgl0etGZrd1jT6YQhVnWxc05tMIYPxq5bgfyEC2rYf9JoU22p9ArDNH7t4/EsYMStbTlTa5Nui+/71NtdSriIGApWDvzmuCmCXR60Zmt3WNPphCFWdbFzTm0whg/GrluB/ENkMak8AAACAAAAAgAAAAIAiBgLath/0mhTban0CsM0fu3j8SxgxK1tOVNrk26L7/vU21xDZDGpPAAAAgAAAAIABAACAAQMEAQAAAAABASAAwusLAAAAABepFLf1+vQOPUClpFmx2zU18rcvqSHohwEEIgAgjCNTFzdDtZXftKB7crqOQuN5fadOh/59nXSX47ICiQMBBUdSIQMIncEMesbbVPkTKa9hczPbOIzq0MIx9yM3nRuZAwsC3CECOt2QTz1tz1nduQaw3uI1Kbf/ue1Q5ehhUZJoYCIfDnNSriIGAjrdkE89bc9Z3bkGsN7iNSm3/7ntUOXoYVGSaGAiHw5zENkMak8AAACAAAAAgAMAAIAiBgMIncEMesbbVPkTKa9hczPbOIzq0MIx9yM3nRuZAwsC3BDZDGpPAAAAgAAAAIACAACAAQMEAQAAAAAiAgOppMN/WZbTqiXbrGtXCvBlA5RJKUJGCzVHU+2e7KWHcRDZDGpPAAAAgAAAAIAEAACAACICAn9jmXV9Lv9VoTatAsaEsYOLZVbl8bazQoKpS2tQBRCWENkMak8AAACAAAAAgAUAAIAA\",\n+            \"result\" : \"cHNidP8BAJoCAAAAAljoeiG1ba8MI76OcHBFbDNvfLqlyHV5JPVFiHuyq911AAAAAAD/////g40EJ9DsZQpoqka7CwmK6kQiwHGyyng1Kgd5WdB86h0BAAAAAP////8CcKrwCAAAAAAWABTYXCtx0AYLCcmIauuBXlCZHdoSTQDh9QUAAAAAFgAUAK6pouXw+HaliN9VRuh0LR2HAI8AAAAAAAEAuwIAAAABqtc5MQGL0l+ErkALaISL4J23BurCrBgpi6vucatlb4sAAAAASEcwRAIgWPb8fGoz4bMVSNSByCbAFb0wE1qtQs1neQ2rZtKtJDsCIEoc7SYExnNbY5PltBaR3XiwDwxZQvufdRhW+qk4FX26Af7///8CgPD6AgAAAAAXqRQPuUY0IWlrgsgzryQceMF9295JNIfQ8gonAQAAABepFCnKdPigj4GZlCgYXJe12FLkBj9hh2UAAAAiAgLath/0mhTban0CsM0fu3j8SxgxK1tOVNrk26L7/vU210cwRAIgYxqYn+c4qSrQGYYCMxLBkhT+KAKznly8GsNniAbGksMCIDnbbDh70mdxbf2z1NjaULjoXSEzJrp8faqkwM5B65IjAQEDBAEAAAABBEdSIQKVg785rgpgl0etGZrd1jT6YQhVnWxc05tMIYPxq5bgfyEC2rYf9JoU22p9ArDNH7t4/EsYMStbTlTa5Nui+/71NtdSriIGApWDvzmuCmCXR60Zmt3WNPphCFWdbFzTm0whg/GrluB/ENkMak8AAACAAAAAgAAAAIAiBgLath/0mhTban0CsM0fu3j8SxgxK1tOVNrk26L7/vU21xDZDGpPAAAAgAAAAIABAACAAAEBIADC6wsAAAAAF6kUt/X69A49QKWkWbHbNTXyty+pIeiHIgICOt2QTz1tz1nduQaw3uI1Kbf/ue1Q5ehhUZJoYCIfDnNHMEQCIGX0W6WZi1mif/4ae+0BavHx+Q1Us6qPdFCqX1aiUQO9AiB/ckcDrR7blmgLKEtW1P/LiPf7dZ6rvgiqMPKbhROD0gEBAwQBAAAAAQQiACCMI1MXN0O1ld+0oHtyuo5C43l9p06H/n2ddJfjsgKJAwEFR1IhAwidwQx6xttU+RMpr2FzM9s4jOrQwjH3IzedG5kDCwLcIQI63ZBPPW3PWd25BrDe4jUpt/+57VDl6GFRkmhgIh8Oc1KuIgYCOt2QTz1tz1nduQaw3uI1Kbf/ue1Q5ehhUZJoYCIfDnMQ2QxqTwAAAIAAAACAAwAAgCIGAwidwQx6xttU+RMpr2FzM9s4jOrQwjH3IzedG5kDCwLcENkMak8AAACAAAAAgAIAAIAAIgIDqaTDf1mW06ol26xrVwrwZQOUSSlCRgs1R1Ptnuylh3EQ2QxqTwAAAIAAAACABAAAgAAiAgJ/Y5l1fS7/VaE2rQLGhLGDi2VW5fG2s0KCqUtrUAUQlhDZDGpPAAAAgAAAAIAFAACAAA==\"\n+        },\n+        {\n+            \"privkeys\" : [\n+                \"cNBc3SWUip9PPm1GjRoLEJT6T41iNzCYtD7qro84FMnM5zEqeJsE\"\n+            ],\n+            \"psbt\" : \"cHNidP8BAKACAAAAAqsJSaCMWvfEm4IS9Bfi8Vqz9cM9zxU4IagTn4d6W3vkAAAAAAD+////qwlJoIxa98SbghL0F+LxWrP1wz3PFTghqBOfh3pbe+QBAAAAAP7///8CYDvqCwAAAAAZdqkUdopAu9dAy+gdmI5x3ipNXHE5ax2IrI4kAAAAAAAAGXapFG9GILVT+glechue4O/p+gOcykWXiKwAAAAAAAEBItPf9QUAAAAAGXapFNSO0xELlAFMsRS9Mtb00GbcdCVriKwAAQEgAOH1BQAAAAAXqRQ1RebjO4MsRwUPJNPuuTycA5SLx4cBBBYAFIXRNTfy4mVAWjTbr6nj3aAfuCMIACICAurVlmh8qAYEPtw94RbN8p1eklfBls0FXPaYyNAr8k6ZELSmumcAAACAAAAAgAIAAIAAIgIDlPYr6d8ZlSxVh3aK63aYBhrSxKJciU9H2MFitNchPQUQtKa6ZwAAAIABAACAAgAAgAA=\",\n+            \"result\" : \"cHNidP8BAKACAAAAAqsJSaCMWvfEm4IS9Bfi8Vqz9cM9zxU4IagTn4d6W3vkAAAAAAD+////qwlJoIxa98SbghL0F+LxWrP1wz3PFTghqBOfh3pbe+QBAAAAAP7///8CYDvqCwAAAAAZdqkUdopAu9dAy+gdmI5x3ipNXHE5ax2IrI4kAAAAAAAAGXapFG9GILVT+glechue4O/p+gOcykWXiKwAAAAAAAEBItPf9QUAAAAAGXapFNSO0xELlAFMsRS9Mtb00GbcdCVriKwAAQEgAOH1BQAAAAAXqRQ1RebjO4MsRwUPJNPuuTycA5SLx4cBBBYAFIXRNTfy4mVAWjTbr6nj3aAfuCMIACICAurVlmh8qAYEPtw94RbN8p1eklfBls0FXPaYyNAr8k6ZELSmumcAAACAAAAAgAIAAIAAIgIDlPYr6d8ZlSxVh3aK63aYBhrSxKJciU9H2MFitNchPQUQtKa6ZwAAAIABAACAAgAAgAA=\"\n         }\n     ],\n     \"combiner\" : [\n         {\n             \"combine\" : [\n                 \"cHNidP8BAJoCAAAAAljoeiG1ba8MI76OcHBFbDNvfLqlyHV5JPVFiHuyq911AAAAAAD/////g40EJ9DsZQpoqka7CwmK6kQiwHGyyng1Kgd5WdB86h0BAAAAAP////8CcKrwCAAAAAAWABTYXCtx0AYLCcmIauuBXlCZHdoSTQDh9QUAAAAAFgAUAK6pouXw+HaliN9VRuh0LR2HAI8AAAAAAAEAuwIAAAABqtc5MQGL0l+ErkALaISL4J23BurCrBgpi6vucatlb4sAAAAASEcwRAIgWPb8fGoz4bMVSNSByCbAFb0wE1qtQs1neQ2rZtKtJDsCIEoc7SYExnNbY5PltBaR3XiwDwxZQvufdRhW+qk4FX26Af7///8CgPD6AgAAAAAXqRQPuUY0IWlrgsgzryQceMF9295JNIfQ8gonAQAAABepFCnKdPigj4GZlCgYXJe12FLkBj9hh2UAAAAiAgKVg785rgpgl0etGZrd1jT6YQhVnWxc05tMIYPxq5bgf0cwRAIgdAGK1BgAl7hzMjwAFXILNoTMgSOJEEjn282bVa1nnJkCIHPTabdA4+tT3O+jOCPIBwUUylWn3ZVE8VfBZ5EyYRGMAQEDBAEAAAABBEdSIQKVg785rgpgl0etGZrd1jT6YQhVnWxc05tMIYPxq5bgfyEC2rYf9JoU22p9ArDNH7t4/EsYMStbTlTa5Nui+/71NtdSriIGApWDvzmuCmCXR60Zmt3WNPphCFWdbFzTm0whg/GrluB/ENkMak8AAACAAAAAgAAAAIAiBgLath/0mhTban0CsM0fu3j8SxgxK1tOVNrk26L7/vU21xDZDGpPAAAAgAAAAIABAACAAAEBIADC6wsAAAAAF6kUt/X69A49QKWkWbHbNTXyty+pIeiHIgIDCJ3BDHrG21T5EymvYXMz2ziM6tDCMfcjN50bmQMLAtxHMEQCIGLrelVhB6fHP0WsSrWh3d9vcHX7EnWWmn84Pv/3hLyyAiAMBdu3Rw2/LwhVfdNWxzJcHtMJE+mWzThAlF2xIijaXwEBAwQBAAAAAQQiACCMI1MXN0O1ld+0oHtyuo5C43l9p06H/n2ddJfjsgKJAwEFR1IhAwidwQx6xttU+RMpr2FzM9s4jOrQwjH3IzedG5kDCwLcIQI63ZBPPW3PWd25BrDe4jUpt/+57VDl6GFRkmhgIh8Oc1KuIgYCOt2QTz1tz1nduQaw3uI1Kbf/ue1Q5ehhUZJoYCIfDnMQ2QxqTwAAAIAAAACAAwAAgCIGAwidwQx6xttU+RMpr2FzM9s4jOrQwjH3IzedG5kDCwLcENkMak8AAACAAAAAgAIAAIAAIgIDqaTDf1mW06ol26xrVwrwZQOUSSlCRgs1R1Ptnuylh3EQ2QxqTwAAAIAAAACABAAAgAAiAgJ/Y5l1fS7/VaE2rQLGhLGDi2VW5fG2s0KCqUtrUAUQlhDZDGpPAAAAgAAAAIAFAACAAA==\",\n-                \"cHNidP8BAJoCAAAAAljoeiG1ba8MI76OcHBFbDNvfLqlyHV5JPVFiHuyq911AAAAAAD/////g40EJ9DsZQpoqka7CwmK6kQiwHGyyng1Kgd5WdB86h0BAAAAAP////8CcKrwCAAAAAAWABTYXCtx0AYLCcmIauuBXlCZHdoSTQDh9QUAAAAAFgAUAK6pouXw+HaliN9VRuh0LR2HAI8AAAAAAAEAuwIAAAABqtc5MQGL0l+ErkALaISL4J23BurCrBgpi6vucatlb4sAAAAASEcwRAIgWPb8fGoz4bMVSNSByCbAFb0wE1qtQs1neQ2rZtKtJDsCIEoc7SYExnNbY5PltBaR3XiwDwxZQvufdRhW+qk4FX26Af7///8CgPD6AgAAAAAXqRQPuUY0IWlrgsgzryQceMF9295JNIfQ8gonAQAAABepFCnKdPigj4GZlCgYXJe12FLkBj9hh2UAAAAiAgLath/0mhTban0CsM0fu3j8SxgxK1tOVNrk26L7/vU210gwRQIhAPYQOLMI3B2oZaNIUnRvAVdyk0IIxtJEVDk82ZvfIhd3AiAFbmdaZ1ptCgK4WxTl4pB02KJam1dgvqKBb2YZEKAG6gEBAwQBAAAAAQRHUiEClYO/Oa4KYJdHrRma3dY0+mEIVZ1sXNObTCGD8auW4H8hAtq2H/SaFNtqfQKwzR+7ePxLGDErW05U2uTbovv+9TbXUq4iBgKVg785rgpgl0etGZrd1jT6YQhVnWxc05tMIYPxq5bgfxDZDGpPAAAAgAAAAIAAAACAIgYC2rYf9JoU22p9ArDNH7t4/EsYMStbTlTa5Nui+/71NtcQ2QxqTwAAAIAAAACAAQAAgAABASAAwusLAAAAABepFLf1+vQOPUClpFmx2zU18rcvqSHohyICAjrdkE89bc9Z3bkGsN7iNSm3/7ntUOXoYVGSaGAiHw5zRzBEAiBl9FulmYtZon/+GnvtAWrx8fkNVLOqj3RQql9WolEDvQIgf3JHA60e25ZoCyhLVtT/y4j3+3Weq74IqjDym4UTg9IBAQMEAQAAAAEEIgAgjCNTFzdDtZXftKB7crqOQuN5fadOh/59nXSX47ICiQMBBUdSIQMIncEMesbbVPkTKa9hczPbOIzq0MIx9yM3nRuZAwsC3CECOt2QTz1tz1nduQaw3uI1Kbf/ue1Q5ehhUZJoYCIfDnNSriIGAjrdkE89bc9Z3bkGsN7iNSm3/7ntUOXoYVGSaGAiHw5zENkMak8AAACAAAAAgAMAAIAiBgMIncEMesbbVPkTKa9hczPbOIzq0MIx9yM3nRuZAwsC3BDZDGpPAAAAgAAAAIACAACAACICA6mkw39ZltOqJdusa1cK8GUDlEkpQkYLNUdT7Z7spYdxENkMak8AAACAAAAAgAQAAIAAIgICf2OZdX0u/1WhNq0CxoSxg4tlVuXxtrNCgqlLa1AFEJYQ2QxqTwAAAIAAAACABQAAgAA=\"\n+                \"cHNidP8BAJoCAAAAAljoeiG1ba8MI76OcHBFbDNvfLqlyHV5JPVFiHuyq911AAAAAAD/////g40EJ9DsZQpoqka7CwmK6kQiwHGyyng1Kgd5WdB86h0BAAAAAP////8CcKrwCAAAAAAWABTYXCtx0AYLCcmIauuBXlCZHdoSTQDh9QUAAAAAFgAUAK6pouXw+HaliN9VRuh0LR2HAI8AAAAAAAEAuwIAAAABqtc5MQGL0l+ErkALaISL4J23BurCrBgpi6vucatlb4sAAAAASEcwRAIgWPb8fGoz4bMVSNSByCbAFb0wE1qtQs1neQ2rZtKtJDsCIEoc7SYExnNbY5PltBaR3XiwDwxZQvufdRhW+qk4FX26Af7///8CgPD6AgAAAAAXqRQPuUY0IWlrgsgzryQceMF9295JNIfQ8gonAQAAABepFCnKdPigj4GZlCgYXJe12FLkBj9hh2UAAAAiAgLath/0mhTban0CsM0fu3j8SxgxK1tOVNrk26L7/vU210cwRAIgYxqYn+c4qSrQGYYCMxLBkhT+KAKznly8GsNniAbGksMCIDnbbDh70mdxbf2z1NjaULjoXSEzJrp8faqkwM5B65IjAQEDBAEAAAABBEdSIQKVg785rgpgl0etGZrd1jT6YQhVnWxc05tMIYPxq5bgfyEC2rYf9JoU22p9ArDNH7t4/EsYMStbTlTa5Nui+/71NtdSriIGApWDvzmuCmCXR60Zmt3WNPphCFWdbFzTm0whg/GrluB/ENkMak8AAACAAAAAgAAAAIAiBgLath/0mhTban0CsM0fu3j8SxgxK1tOVNrk26L7/vU21xDZDGpPAAAAgAAAAIABAACAAAEBIADC6wsAAAAAF6kUt/X69A49QKWkWbHbNTXyty+pIeiHIgICOt2QTz1tz1nduQaw3uI1Kbf/ue1Q5ehhUZJoYCIfDnNHMEQCIGX0W6WZi1mif/4ae+0BavHx+Q1Us6qPdFCqX1aiUQO9AiB/ckcDrR7blmgLKEtW1P/LiPf7dZ6rvgiqMPKbhROD0gEBAwQBAAAAAQQiACCMI1MXN0O1ld+0oHtyuo5C43l9p06H/n2ddJfjsgKJAwEFR1IhAwidwQx6xttU+RMpr2FzM9s4jOrQwjH3IzedG5kDCwLcIQI63ZBPPW3PWd25BrDe4jUpt/+57VDl6GFRkmhgIh8Oc1KuIgYCOt2QTz1tz1nduQaw3uI1Kbf/ue1Q5ehhUZJoYCIfDnMQ2QxqTwAAAIAAAACAAwAAgCIGAwidwQx6xttU+RMpr2FzM9s4jOrQwjH3IzedG5kDCwLcENkMak8AAACAAAAAgAIAAIAAIgIDqaTDf1mW06ol26xrVwrwZQOUSSlCRgs1R1Ptnuylh3EQ2QxqTwAAAIAAAACABAAAgAAiAgJ/Y5l1fS7/VaE2rQLGhLGDi2VW5fG2s0KCqUtrUAUQlhDZDGpPAAAAgAAAAIAFAACAAA==\"\n             ],\n-            \"result\" : \"cHNidP8BAJoCAAAAAljoeiG1ba8MI76OcHBFbDNvfLqlyHV5JPVFiHuyq911AAAAAAD/////g40EJ9DsZQpoqka7CwmK6kQiwHGyyng1Kgd5WdB86h0BAAAAAP////8CcKrwCAAAAAAWABTYXCtx0AYLCcmIauuBXlCZHdoSTQDh9QUAAAAAFgAUAK6pouXw+HaliN9VRuh0LR2HAI8AAAAAAAEAuwIAAAABqtc5MQGL0l+ErkALaISL4J23BurCrBgpi6vucatlb4sAAAAASEcwRAIgWPb8fGoz4bMVSNSByCbAFb0wE1qtQs1neQ2rZtKtJDsCIEoc7SYExnNbY5PltBaR3XiwDwxZQvufdRhW+qk4FX26Af7///8CgPD6AgAAAAAXqRQPuUY0IWlrgsgzryQceMF9295JNIfQ8gonAQAAABepFCnKdPigj4GZlCgYXJe12FLkBj9hh2UAAAAiAgKVg785rgpgl0etGZrd1jT6YQhVnWxc05tMIYPxq5bgf0cwRAIgdAGK1BgAl7hzMjwAFXILNoTMgSOJEEjn282bVa1nnJkCIHPTabdA4+tT3O+jOCPIBwUUylWn3ZVE8VfBZ5EyYRGMASICAtq2H/SaFNtqfQKwzR+7ePxLGDErW05U2uTbovv+9TbXSDBFAiEA9hA4swjcHahlo0hSdG8BV3KTQgjG0kRUOTzZm98iF3cCIAVuZ1pnWm0KArhbFOXikHTYolqbV2C+ooFvZhkQoAbqAQEDBAEAAAABBEdSIQKVg785rgpgl0etGZrd1jT6YQhVnWxc05tMIYPxq5bgfyEC2rYf9JoU22p9ArDNH7t4/EsYMStbTlTa5Nui+/71NtdSriIGApWDvzmuCmCXR60Zmt3WNPphCFWdbFzTm0whg/GrluB/ENkMak8AAACAAAAAgAAAAIAiBgLath/0mhTban0CsM0fu3j8SxgxK1tOVNrk26L7/vU21xDZDGpPAAAAgAAAAIABAACAAAEBIADC6wsAAAAAF6kUt/X69A49QKWkWbHbNTXyty+pIeiHIgIDCJ3BDHrG21T5EymvYXMz2ziM6tDCMfcjN50bmQMLAtxHMEQCIGLrelVhB6fHP0WsSrWh3d9vcHX7EnWWmn84Pv/3hLyyAiAMBdu3Rw2/LwhVfdNWxzJcHtMJE+mWzThAlF2xIijaXwEiAgI63ZBPPW3PWd25BrDe4jUpt/+57VDl6GFRkmhgIh8Oc0cwRAIgZfRbpZmLWaJ//hp77QFq8fH5DVSzqo90UKpfVqJRA70CIH9yRwOtHtuWaAsoS1bU/8uI9/t1nqu+CKow8puFE4PSAQEDBAEAAAABBCIAIIwjUxc3Q7WV37Sge3K6jkLjeX2nTof+fZ10l+OyAokDAQVHUiEDCJ3BDHrG21T5EymvYXMz2ziM6tDCMfcjN50bmQMLAtwhAjrdkE89bc9Z3bkGsN7iNSm3/7ntUOXoYVGSaGAiHw5zUq4iBgI63ZBPPW3PWd25BrDe4jUpt/+57VDl6GFRkmhgIh8OcxDZDGpPAAAAgAAAAIADAACAIgYDCJ3BDHrG21T5EymvYXMz2ziM6tDCMfcjN50bmQMLAtwQ2QxqTwAAAIAAAACAAgAAgAAiAgOppMN/WZbTqiXbrGtXCvBlA5RJKUJGCzVHU+2e7KWHcRDZDGpPAAAAgAAAAIAEAACAACICAn9jmXV9Lv9VoTatAsaEsYOLZVbl8bazQoKpS2tQBRCWENkMak8AAACAAAAAgAUAAIAA\"\n+            \"result\" : \"cHNidP8BAJoCAAAAAljoeiG1ba8MI76OcHBFbDNvfLqlyHV5JPVFiHuyq911AAAAAAD/////g40EJ9DsZQpoqka7CwmK6kQiwHGyyng1Kgd5WdB86h0BAAAAAP////8CcKrwCAAAAAAWABTYXCtx0AYLCcmIauuBXlCZHdoSTQDh9QUAAAAAFgAUAK6pouXw+HaliN9VRuh0LR2HAI8AAAAAAAEAuwIAAAABqtc5MQGL0l+ErkALaISL4J23BurCrBgpi6vucatlb4sAAAAASEcwRAIgWPb8fGoz4bMVSNSByCbAFb0wE1qtQs1neQ2rZtKtJDsCIEoc7SYExnNbY5PltBaR3XiwDwxZQvufdRhW+qk4FX26Af7///8CgPD6AgAAAAAXqRQPuUY0IWlrgsgzryQceMF9295JNIfQ8gonAQAAABepFCnKdPigj4GZlCgYXJe12FLkBj9hh2UAAAAiAgKVg785rgpgl0etGZrd1jT6YQhVnWxc05tMIYPxq5bgf0cwRAIgdAGK1BgAl7hzMjwAFXILNoTMgSOJEEjn282bVa1nnJkCIHPTabdA4+tT3O+jOCPIBwUUylWn3ZVE8VfBZ5EyYRGMASICAtq2H/SaFNtqfQKwzR+7ePxLGDErW05U2uTbovv+9TbXRzBEAiBjGpif5zipKtAZhgIzEsGSFP4oArOeXLwaw2eIBsaSwwIgOdtsOHvSZ3Ft/bPU2NpQuOhdITMmunx9qqTAzkHrkiMBAQMEAQAAAAEER1IhApWDvzmuCmCXR60Zmt3WNPphCFWdbFzTm0whg/GrluB/IQLath/0mhTban0CsM0fu3j8SxgxK1tOVNrk26L7/vU211KuIgYClYO/Oa4KYJdHrRma3dY0+mEIVZ1sXNObTCGD8auW4H8Q2QxqTwAAAIAAAACAAAAAgCIGAtq2H/SaFNtqfQKwzR+7ePxLGDErW05U2uTbovv+9TbXENkMak8AAACAAAAAgAEAAIAAAQEgAMLrCwAAAAAXqRS39fr0Dj1ApaRZsds1NfK3L6kh6IciAgMIncEMesbbVPkTKa9hczPbOIzq0MIx9yM3nRuZAwsC3EcwRAIgYut6VWEHp8c/RaxKtaHd329wdfsSdZaafzg+//eEvLICIAwF27dHDb8vCFV901bHMlwe0wkT6ZbNOECUXbEiKNpfASICAjrdkE89bc9Z3bkGsN7iNSm3/7ntUOXoYVGSaGAiHw5zRzBEAiBl9FulmYtZon/+GnvtAWrx8fkNVLOqj3RQql9WolEDvQIgf3JHA60e25ZoCyhLVtT/y4j3+3Weq74IqjDym4UTg9IBAQMEAQAAAAEEIgAgjCNTFzdDtZXftKB7crqOQuN5fadOh/59nXSX47ICiQMBBUdSIQMIncEMesbbVPkTKa9hczPbOIzq0MIx9yM3nRuZAwsC3CECOt2QTz1tz1nduQaw3uI1Kbf/ue1Q5ehhUZJoYCIfDnNSriIGAjrdkE89bc9Z3bkGsN7iNSm3/7ntUOXoYVGSaGAiHw5zENkMak8AAACAAAAAgAMAAIAiBgMIncEMesbbVPkTKa9hczPbOIzq0MIx9yM3nRuZAwsC3BDZDGpPAAAAgAAAAIACAACAACICA6mkw39ZltOqJdusa1cK8GUDlEkpQkYLNUdT7Z7spYdxENkMak8AAACAAAAAgAQAAIAAIgICf2OZdX0u/1WhNq0CxoSxg4tlVuXxtrNCgqlLa1AFEJYQ2QxqTwAAAIAAAACABQAAgAA=\"\n         },\n         {\n             \"combine\" : ["
      }
    ]
  },
  {
    "sha": "5df6f089b53c5b5859e5a3454c026447e4752f82",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ZGY2ZjA4OWI1M2M1YjU4NTllNWEzNDU0YzAyNjQ0N2U0NzUyZjgy",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2018-08-08T23:14:01Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-08-13T15:41:19Z"
      },
      "message": "More tests of signer checks",
      "tree": {
        "sha": "9463dbd1099332c54271aa7cfb6e01a35af54b49",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9463dbd1099332c54271aa7cfb6e01a35af54b49"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5df6f089b53c5b5859e5a3454c026447e4752f82",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5df6f089b53c5b5859e5a3454c026447e4752f82",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5df6f089b53c5b5859e5a3454c026447e4752f82",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5df6f089b53c5b5859e5a3454c026447e4752f82/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7c8bffdc24e005c3044a9a80bbc227b2a39b8605",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7c8bffdc24e005c3044a9a80bbc227b2a39b8605",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7c8bffdc24e005c3044a9a80bbc227b2a39b8605"
      }
    ],
    "stats": {
      "total": 30,
      "additions": 28,
      "deletions": 2
    },
    "files": [
      {
        "sha": "70388841d180c7d6478444ec4d18ffa204f35472",
        "filename": "test/functional/data/rpc_psbt.json",
        "status": "modified",
        "additions": 24,
        "deletions": 0,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5df6f089b53c5b5859e5a3454c026447e4752f82/test/functional/data/rpc_psbt.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5df6f089b53c5b5859e5a3454c026447e4752f82/test/functional/data/rpc_psbt.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/data/rpc_psbt.json?ref=5df6f089b53c5b5859e5a3454c026447e4752f82",
        "patch": "@@ -80,6 +80,30 @@\n             ],\n             \"psbt\" : \"cHNidP8BAKACAAAAAqsJSaCMWvfEm4IS9Bfi8Vqz9cM9zxU4IagTn4d6W3vkAAAAAAD+////qwlJoIxa98SbghL0F+LxWrP1wz3PFTghqBOfh3pbe+QBAAAAAP7///8CYDvqCwAAAAAZdqkUdopAu9dAy+gdmI5x3ipNXHE5ax2IrI4kAAAAAAAAGXapFG9GILVT+glechue4O/p+gOcykWXiKwAAAAAAAEBItPf9QUAAAAAGXapFNSO0xELlAFMsRS9Mtb00GbcdCVriKwAAQEgAOH1BQAAAAAXqRQ1RebjO4MsRwUPJNPuuTycA5SLx4cBBBYAFIXRNTfy4mVAWjTbr6nj3aAfuCMIACICAurVlmh8qAYEPtw94RbN8p1eklfBls0FXPaYyNAr8k6ZELSmumcAAACAAAAAgAIAAIAAIgIDlPYr6d8ZlSxVh3aK63aYBhrSxKJciU9H2MFitNchPQUQtKa6ZwAAAIABAACAAgAAgAA=\",\n             \"result\" : \"cHNidP8BAKACAAAAAqsJSaCMWvfEm4IS9Bfi8Vqz9cM9zxU4IagTn4d6W3vkAAAAAAD+////qwlJoIxa98SbghL0F+LxWrP1wz3PFTghqBOfh3pbe+QBAAAAAP7///8CYDvqCwAAAAAZdqkUdopAu9dAy+gdmI5x3ipNXHE5ax2IrI4kAAAAAAAAGXapFG9GILVT+glechue4O/p+gOcykWXiKwAAAAAAAEBItPf9QUAAAAAGXapFNSO0xELlAFMsRS9Mtb00GbcdCVriKwAAQEgAOH1BQAAAAAXqRQ1RebjO4MsRwUPJNPuuTycA5SLx4cBBBYAFIXRNTfy4mVAWjTbr6nj3aAfuCMIACICAurVlmh8qAYEPtw94RbN8p1eklfBls0FXPaYyNAr8k6ZELSmumcAAACAAAAAgAIAAIAAIgIDlPYr6d8ZlSxVh3aK63aYBhrSxKJciU9H2MFitNchPQUQtKa6ZwAAAIABAACAAgAAgAA=\"\n+        },\n+        {\n+            \"privkeys\" : [\n+                \"cT7J9YpCwY3AVRFSjN6ukeEeWY6mhpbJPxRaDaP5QTdygQRxP9Au\",\n+                \"cNBc3SWUip9PPm1GjRoLEJT6T41iNzCYtD7qro84FMnM5zEqeJsE\"\n+            ],\n+            \"psbt\" : \"cHNidP8BAJoCAAAAAljoeiG1ba8MI76OcHBFbDNvfLqlyHV5JPVFiHuyq911AAAAAAD/////g40EJ9DsZQpoqka7CwmK6kQiwHGyyng1Kgd5WdB86h0BAAAAAP////8CcKrwCAAAAAAWABTYXCtx0AYLCcmIauuBXlCZHdoSTQDh9QUAAAAAFgAUAK6pouXw+HaliN9VRuh0LR2HAI8AAAAAAAEAuwIAAAABqtc5MQGL0l+ErkALaISL4J23BurCrBgpi6vucatlb4sAAAAASEcwRAIgWPb8fGoz4bMVSNSByCbAFb0wE1qtQs1neQ2rZtKtJDsCIEoc7SYExnNbY5PltBaR3XiwDwxZQvufdRhW+qk4FX26Af7///8CgPD6AgAAAAAXqRQPuUY0IWlrgsgzryQceMF9295JNIfQ8gonAQAAABepFCnKdPigj4GZlCgYXJe12FLkBj9hh2UAAAAiAgLath/0mhTban0CsM0fu3j8SxgxK1tOVNrk26L7/vU210gwRQIhAPYQOLMI3B2oZaNIUnRvAVdyk0IIxtJEVDk82ZvfIhd3AiAFbmdaZ1ptCgK4WxTl4pB02KJam1dgvqKBb2YZEKAG6gEBAwQBAAAAAQRHUiEClYO/Oa4KYJdHrRma3dY0+mEIVZ1sXNObTCGD8auW4H8hAtq2H/SaFNtqfQKwzR+7ePxLGDErW05U2uTbovv+9TbXUq8iBgKVg785rgpgl0etGZrd1jT6YQhVnWxc05tMIYPxq5bgfxDZDGpPAAAAgAAAAIAAAACAIgYC2rYf9JoU22p9ArDNH7t4/EsYMStbTlTa5Nui+/71NtcQ2QxqTwAAAIAAAACAAQAAgAABASAAwusLAAAAABepFLf1+vQOPUClpFmx2zU18rcvqSHohyICAjrdkE89bc9Z3bkGsN7iNSm3/7ntUOXoYVGSaGAiHw5zRzBEAiBl9FulmYtZon/+GnvtAWrx8fkNVLOqj3RQql9WolEDvQIgf3JHA60e25ZoCyhLVtT/y4j3+3Weq74IqjDym4UTg9IBAQMEAQAAAAEEIgAgjCNTFzdDtZXftKB7crqOQuN5fadOh/59nXSX47ICiQMBBUdSIQMIncEMesbbVPkTKa9hczPbOIzq0MIx9yM3nRuZAwsC3CECOt2QTz1tz1nduQaw3uI1Kbf/ue1Q5ehhUZJoYCIfDnNSriIGAjrdkE89bc9Z3bkGsN7iNSm3/7ntUOXoYVGSaGAiHw5zENkMak8AAACAAAAAgAMAAIAiBgMIncEMesbbVPkTKa9hczPbOIzq0MIx9yM3nRuZAwsC3BDZDGpPAAAAgAAAAIACAACAACICA6mkw39ZltOqJdusa1cK8GUDlEkpQkYLNUdT7Z7spYdxENkMak8AAACAAAAAgAQAAIAAIgICf2OZdX0u/1WhNq0CxoSxg4tlVuXxtrNCgqlLa1AFEJYQ2QxqTwAAAIAAAACABQAAgAA=\",\n+            \"result\" : \"cHNidP8BAJoCAAAAAljoeiG1ba8MI76OcHBFbDNvfLqlyHV5JPVFiHuyq911AAAAAAD/////g40EJ9DsZQpoqka7CwmK6kQiwHGyyng1Kgd5WdB86h0BAAAAAP////8CcKrwCAAAAAAWABTYXCtx0AYLCcmIauuBXlCZHdoSTQDh9QUAAAAAFgAUAK6pouXw+HaliN9VRuh0LR2HAI8AAAAAAAEAuwIAAAABqtc5MQGL0l+ErkALaISL4J23BurCrBgpi6vucatlb4sAAAAASEcwRAIgWPb8fGoz4bMVSNSByCbAFb0wE1qtQs1neQ2rZtKtJDsCIEoc7SYExnNbY5PltBaR3XiwDwxZQvufdRhW+qk4FX26Af7///8CgPD6AgAAAAAXqRQPuUY0IWlrgsgzryQceMF9295JNIfQ8gonAQAAABepFCnKdPigj4GZlCgYXJe12FLkBj9hh2UAAAAiAgLath/0mhTban0CsM0fu3j8SxgxK1tOVNrk26L7/vU210gwRQIhAPYQOLMI3B2oZaNIUnRvAVdyk0IIxtJEVDk82ZvfIhd3AiAFbmdaZ1ptCgK4WxTl4pB02KJam1dgvqKBb2YZEKAG6gEBAwQBAAAAAQRHUiEClYO/Oa4KYJdHrRma3dY0+mEIVZ1sXNObTCGD8auW4H8hAtq2H/SaFNtqfQKwzR+7ePxLGDErW05U2uTbovv+9TbXUq8iBgKVg785rgpgl0etGZrd1jT6YQhVnWxc05tMIYPxq5bgfxDZDGpPAAAAgAAAAIAAAACAIgYC2rYf9JoU22p9ArDNH7t4/EsYMStbTlTa5Nui+/71NtcQ2QxqTwAAAIAAAACAAQAAgAABASAAwusLAAAAABepFLf1+vQOPUClpFmx2zU18rcvqSHohyICAjrdkE89bc9Z3bkGsN7iNSm3/7ntUOXoYVGSaGAiHw5zRzBEAiBl9FulmYtZon/+GnvtAWrx8fkNVLOqj3RQql9WolEDvQIgf3JHA60e25ZoCyhLVtT/y4j3+3Weq74IqjDym4UTg9IBAQMEAQAAAAEEIgAgjCNTFzdDtZXftKB7crqOQuN5fadOh/59nXSX47ICiQMBBUdSIQMIncEMesbbVPkTKa9hczPbOIzq0MIx9yM3nRuZAwsC3CECOt2QTz1tz1nduQaw3uI1Kbf/ue1Q5ehhUZJoYCIfDnNSriIGAjrdkE89bc9Z3bkGsN7iNSm3/7ntUOXoYVGSaGAiHw5zENkMak8AAACAAAAAgAMAAIAiBgMIncEMesbbVPkTKa9hczPbOIzq0MIx9yM3nRuZAwsC3BDZDGpPAAAAgAAAAIACAACAACICA6mkw39ZltOqJdusa1cK8GUDlEkpQkYLNUdT7Z7spYdxENkMak8AAACAAAAAgAQAAIAAIgICf2OZdX0u/1WhNq0CxoSxg4tlVuXxtrNCgqlLa1AFEJYQ2QxqTwAAAIAAAACABQAAgAA=\"\n+        },\n+        {\n+            \"privkeys\" : [\n+                \"cT7J9YpCwY3AVRFSjN6ukeEeWY6mhpbJPxRaDaP5QTdygQRxP9Au\",\n+                \"cNBc3SWUip9PPm1GjRoLEJT6T41iNzCYtD7qro84FMnM5zEqeJsE\"\n+            ],\n+            \"psbt\" : \"cHNidP8BAJoCAAAAAljoeiG1ba8MI76OcHBFbDNvfLqlyHV5JPVFiHuyq911AAAAAAD/////g40EJ9DsZQpoqka7CwmK6kQiwHGyyng1Kgd5WdB86h0BAAAAAP////8CcKrwCAAAAAAWABTYXCtx0AYLCcmIauuBXlCZHdoSTQDh9QUAAAAAFgAUAK6pouXw+HaliN9VRuh0LR2HAI8AAAAAAAEAuwIAAAABqtc5MQGL0l+ErkALaISL4J23BurCrBgpi6vucatlb4sAAAAASEcwRAIgWPb8fGoz4bMVSNSByCbAFb0wE1qtQs1neQ2rZtKtJDsCIEoc7SYExnNbY5PltBaR3XiwDwxZQvufdRhW+qk4FX26Af7///8CgPD6AgAAAAAXqRQPuUY0IWlrgsgzryQceMF9295JNIfQ8gonAQAAABepFCnKdPigj4GZlCgYXJe12FLkBj9hh2UAAAAiAgLath/0mhTban0CsM0fu3j8SxgxK1tOVNrk26L7/vU210gwRQIhAPYQOLMI3B2oZaNIUnRvAVdyk0IIxtJEVDk82ZvfIhd3AiAFbmdaZ1ptCgK4WxTl4pB02KJam1dgvqKBb2YZEKAG6gEBAwQBAAAAAQRHUiEClYO/Oa4KYJdHrRma3dY0+mEIVZ1sXNObTCGD8auW4H8hAtq2H/SaFNtqfQKwzR+7ePxLGDErW05U2uTbovv+9TbXUq4iBgKVg785rgpgl0etGZrd1jT6YQhVnWxc05tMIYPxq5bgfxDZDGpPAAAAgAAAAIAAAACAIgYC2rYf9JoU22p9ArDNH7t4/EsYMStbTlTa5Nui+/71NtcQ2QxqTwAAAIAAAACAAQAAgAABASAAwusLAAAAABepFLf1+vQOPUClpFmx2zU18rcvqSHohyICAjrdkE89bc9Z3bkGsN7iNSm3/7ntUOXoYVGSaGAiHw5zRzBEAiBl9FulmYtZon/+GnvtAWrx8fkNVLOqj3RQql9WolEDvQIgf3JHA60e25ZoCyhLVtT/y4j3+3Weq74IqjDym4UTg9IBAQMEAQAAAAEEIgAgjCNTFzdDtZXftKB7crqOQuN5fadOh/59nXSX47ICiQABBUdSIQMIncEMesbbVPkTKa9hczPbOIzq0MIx9yM3nRuZAwsC3CECOt2QTz1tz1nduQaw3uI1Kbf/ue1Q5ehhUZJoYCIfDnNSriIGAjrdkE89bc9Z3bkGsN7iNSm3/7ntUOXoYVGSaGAiHw5zENkMak8AAACAAAAAgAMAAIAiBgMIncEMesbbVPkTKa9hczPbOIzq0MIx9yM3nRuZAwsC3BDZDGpPAAAAgAAAAIACAACAACICA6mkw39ZltOqJdusa1cK8GUDlEkpQkYLNUdT7Z7spYdxENkMak8AAACAAAAAgAQAAIAAIgICf2OZdX0u/1WhNq0CxoSxg4tlVuXxtrNCgqlLa1AFEJYQ2QxqTwAAAIAAAACABQAAgAA=\",\n+            \"result\" : \"cHNidP8BAJoCAAAAAljoeiG1ba8MI76OcHBFbDNvfLqlyHV5JPVFiHuyq911AAAAAAD/////g40EJ9DsZQpoqka7CwmK6kQiwHGyyng1Kgd5WdB86h0BAAAAAP////8CcKrwCAAAAAAWABTYXCtx0AYLCcmIauuBXlCZHdoSTQDh9QUAAAAAFgAUAK6pouXw+HaliN9VRuh0LR2HAI8AAAAAAAEAuwIAAAABqtc5MQGL0l+ErkALaISL4J23BurCrBgpi6vucatlb4sAAAAASEcwRAIgWPb8fGoz4bMVSNSByCbAFb0wE1qtQs1neQ2rZtKtJDsCIEoc7SYExnNbY5PltBaR3XiwDwxZQvufdRhW+qk4FX26Af7///8CgPD6AgAAAAAXqRQPuUY0IWlrgsgzryQceMF9295JNIfQ8gonAQAAABepFCnKdPigj4GZlCgYXJe12FLkBj9hh2UAAAAiAgLath/0mhTban0CsM0fu3j8SxgxK1tOVNrk26L7/vU210gwRQIhAPYQOLMI3B2oZaNIUnRvAVdyk0IIxtJEVDk82ZvfIhd3AiAFbmdaZ1ptCgK4WxTl4pB02KJam1dgvqKBb2YZEKAG6gEBAwQBAAAAAQRHUiEClYO/Oa4KYJdHrRma3dY0+mEIVZ1sXNObTCGD8auW4H8hAtq2H/SaFNtqfQKwzR+7ePxLGDErW05U2uTbovv+9TbXUq4iBgKVg785rgpgl0etGZrd1jT6YQhVnWxc05tMIYPxq5bgfxDZDGpPAAAAgAAAAIAAAACAIgYC2rYf9JoU22p9ArDNH7t4/EsYMStbTlTa5Nui+/71NtcQ2QxqTwAAAIAAAACAAQAAgAABASAAwusLAAAAABepFLf1+vQOPUClpFmx2zU18rcvqSHohyICAjrdkE89bc9Z3bkGsN7iNSm3/7ntUOXoYVGSaGAiHw5zRzBEAiBl9FulmYtZon/+GnvtAWrx8fkNVLOqj3RQql9WolEDvQIgf3JHA60e25ZoCyhLVtT/y4j3+3Weq74IqjDym4UTg9IBAQMEAQAAAAEEIgAgjCNTFzdDtZXftKB7crqOQuN5fadOh/59nXSX47ICiQABBUdSIQMIncEMesbbVPkTKa9hczPbOIzq0MIx9yM3nRuZAwsC3CECOt2QTz1tz1nduQaw3uI1Kbf/ue1Q5ehhUZJoYCIfDnNSriIGAjrdkE89bc9Z3bkGsN7iNSm3/7ntUOXoYVGSaGAiHw5zENkMak8AAACAAAAAgAMAAIAiBgMIncEMesbbVPkTKa9hczPbOIzq0MIx9yM3nRuZAwsC3BDZDGpPAAAAgAAAAIACAACAACICA6mkw39ZltOqJdusa1cK8GUDlEkpQkYLNUdT7Z7spYdxENkMak8AAACAAAAAgAQAAIAAIgICf2OZdX0u/1WhNq0CxoSxg4tlVuXxtrNCgqlLa1AFEJYQ2QxqTwAAAIAAAACABQAAgAA=\"\n+        },\n+        {\n+            \"privkeys\" : [\n+                \"cT7J9YpCwY3AVRFSjN6ukeEeWY6mhpbJPxRaDaP5QTdygQRxP9Au\",\n+                \"cNBc3SWUip9PPm1GjRoLEJT6T41iNzCYtD7qro84FMnM5zEqeJsE\"\n+            ],\n+            \"psbt\" : \"cHNidP8BAJoCAAAAAljoeiG1ba8MI76OcHBFbDNvfLqlyHV5JPVFiHuyq911AAAAAAD/////g40EJ9DsZQpoqka7CwmK6kQiwHGyyng1Kgd5WdB86h0BAAAAAP////8CcKrwCAAAAAAWABTYXCtx0AYLCcmIauuBXlCZHdoSTQDh9QUAAAAAFgAUAK6pouXw+HaliN9VRuh0LR2HAI8AAAAAAAEAuwIAAAABqtc5MQGL0l+ErkALaISL4J23BurCrBgpi6vucatlb4sAAAAASEcwRAIgWPb8fGoz4bMVSNSByCbAFb0wE1qtQs1neQ2rZtKtJDsCIEoc7SYExnNbY5PltBaR3XiwDwxZQvufdRhW+qk4FX26Af7///8CgPD6AgAAAAAXqRQPuUY0IWlrgsgzryQceMF9295JNIfQ8gonAQAAABepFCnKdPigj4GZlCgYXJe12FLkBj9hh2UAAAAiAgLath/0mhTban0CsM0fu3j8SxgxK1tOVNrk26L7/vU210gwRQIhAPYQOLMI3B2oZaNIUnRvAVdyk0IIxtJEVDk82ZvfIhd3AiAFbmdaZ1ptCgK4WxTl4pB02KJam1dgvqKBb2YZEKAG6gEBAwQBAAAAAQRHUiEClYO/Oa4KYJdHrRma3dY0+mEIVZ1sXNObTCGD8auW4H8hAtq2H/SaFNtqfQKwzR+7ePxLGDErW05U2uTbovv+9TbXUq4iBgKVg785rgpgl0etGZrd1jT6YQhVnWxc05tMIYPxq5bgfxDZDGpPAAAAgAAAAIAAAACAIgYC2rYf9JoU22p9ArDNH7t4/EsYMStbTlTa5Nui+/71NtcQ2QxqTwAAAIAAAACAAQAAgAABASAAwusLAAAAABepFLf1+vQOPUClpFmx2zU18rcvqSHohyICAjrdkE89bc9Z3bkGsN7iNSm3/7ntUOXoYVGSaGAiHw5zRzBEAiBl9FulmYtZon/+GnvtAWrx8fkNVLOqj3RQql9WolEDvQIgf3JHA60e25ZoCyhLVtT/y4j3+3Weq74IqjDym4UTg9IBAQMEAQAAAAEEIgAgjCNTFzdDtZXftKB7crqOQuN5fadOh/59nXSX47ICiQMBBUdSIQMIncEMesbbVPkTKa9hczPbOIzq0MIx9yM3nRuZAwsC3CECOt2QTz1tz1nduQaw3uI1Kbf/ue1Q5ehhUZJoYCIfDnNSrSIGAjrdkE89bc9Z3bkGsN7iNSm3/7ntUOXoYVGSaGAiHw5zENkMak8AAACAAAAAgAMAAIAiBgMIncEMesbbVPkTKa9hczPbOIzq0MIx9yM3nRuZAwsC3BDZDGpPAAAAgAAAAIACAACAACICA6mkw39ZltOqJdusa1cK8GUDlEkpQkYLNUdT7Z7spYdxENkMak8AAACAAAAAgAQAAIAAIgICf2OZdX0u/1WhNq0CxoSxg4tlVuXxtrNCgqlLa1AFEJYQ2QxqTwAAAIAAAACABQAAgAA=\",\n+            \"result\" : \"cHNidP8BAJoCAAAAAljoeiG1ba8MI76OcHBFbDNvfLqlyHV5JPVFiHuyq911AAAAAAD/////g40EJ9DsZQpoqka7CwmK6kQiwHGyyng1Kgd5WdB86h0BAAAAAP////8CcKrwCAAAAAAWABTYXCtx0AYLCcmIauuBXlCZHdoSTQDh9QUAAAAAFgAUAK6pouXw+HaliN9VRuh0LR2HAI8AAAAAAAEAuwIAAAABqtc5MQGL0l+ErkALaISL4J23BurCrBgpi6vucatlb4sAAAAASEcwRAIgWPb8fGoz4bMVSNSByCbAFb0wE1qtQs1neQ2rZtKtJDsCIEoc7SYExnNbY5PltBaR3XiwDwxZQvufdRhW+qk4FX26Af7///8CgPD6AgAAAAAXqRQPuUY0IWlrgsgzryQceMF9295JNIfQ8gonAQAAABepFCnKdPigj4GZlCgYXJe12FLkBj9hh2UAAAAiAgLath/0mhTban0CsM0fu3j8SxgxK1tOVNrk26L7/vU210gwRQIhAPYQOLMI3B2oZaNIUnRvAVdyk0IIxtJEVDk82ZvfIhd3AiAFbmdaZ1ptCgK4WxTl4pB02KJam1dgvqKBb2YZEKAG6gEBAwQBAAAAAQRHUiEClYO/Oa4KYJdHrRma3dY0+mEIVZ1sXNObTCGD8auW4H8hAtq2H/SaFNtqfQKwzR+7ePxLGDErW05U2uTbovv+9TbXUq4iBgKVg785rgpgl0etGZrd1jT6YQhVnWxc05tMIYPxq5bgfxDZDGpPAAAAgAAAAIAAAACAIgYC2rYf9JoU22p9ArDNH7t4/EsYMStbTlTa5Nui+/71NtcQ2QxqTwAAAIAAAACAAQAAgAABASAAwusLAAAAABepFLf1+vQOPUClpFmx2zU18rcvqSHohyICAjrdkE89bc9Z3bkGsN7iNSm3/7ntUOXoYVGSaGAiHw5zRzBEAiBl9FulmYtZon/+GnvtAWrx8fkNVLOqj3RQql9WolEDvQIgf3JHA60e25ZoCyhLVtT/y4j3+3Weq74IqjDym4UTg9IBAQMEAQAAAAEEIgAgjCNTFzdDtZXftKB7crqOQuN5fadOh/59nXSX47ICiQMBBUdSIQMIncEMesbbVPkTKa9hczPbOIzq0MIx9yM3nRuZAwsC3CECOt2QTz1tz1nduQaw3uI1Kbf/ue1Q5ehhUZJoYCIfDnNSrSIGAjrdkE89bc9Z3bkGsN7iNSm3/7ntUOXoYVGSaGAiHw5zENkMak8AAACAAAAAgAMAAIAiBgMIncEMesbbVPkTKa9hczPbOIzq0MIx9yM3nRuZAwsC3BDZDGpPAAAAgAAAAIACAACAACICA6mkw39ZltOqJdusa1cK8GUDlEkpQkYLNUdT7Z7spYdxENkMak8AAACAAAAAgAQAAIAAIgICf2OZdX0u/1WhNq0CxoSxg4tlVuXxtrNCgqlLa1AFEJYQ2QxqTwAAAIAAAACABQAAgAA=\"\n         }\n     ],\n     \"combiner\" : ["
      },
      {
        "sha": "99c4131d616bf61b242406abd6f9f4ea19632173",
        "filename": "test/functional/rpc_psbt.py",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5df6f089b53c5b5859e5a3454c026447e4752f82/test/functional/rpc_psbt.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5df6f089b53c5b5859e5a3454c026447e4752f82/test/functional/rpc_psbt.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_psbt.py?ref=5df6f089b53c5b5859e5a3454c026447e4752f82",
        "patch": "@@ -168,9 +168,11 @@ def run_test(self):\n \n         # Signer tests\n         for i, signer in enumerate(signers):\n+            self.nodes[2].createwallet(\"wallet{}\".format(i))\n+            wrpc = self.nodes[2].get_wallet_rpc(\"wallet{}\".format(i))\n             for key in signer['privkeys']:\n-                self.nodes[i].importprivkey(key)\n-            signed_tx = self.nodes[i].walletprocesspsbt(signer['psbt'])['psbt']\n+                wrpc.importprivkey(key)\n+            signed_tx = wrpc.walletprocesspsbt(signer['psbt'])['psbt']\n             assert_equal(signed_tx, signer['result'])\n \n         # Combiner test"
      }
    ]
  },
  {
    "sha": "611ab307fbd8b6f8f7ffc1d569bb86d1f9cb4e92",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2MTFhYjMwN2ZiZDhiNmY4ZjdmZmMxZDU2OWJiODZkMWY5Y2I0ZTky",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-07-20T06:15:53Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-08-13T15:46:23Z"
      },
      "message": "Introduce KeyOriginInfo for fingerprint + path",
      "tree": {
        "sha": "3e1d154a642cc9be174e4a88c3c092954fba71bc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3e1d154a642cc9be174e4a88c3c092954fba71bc"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/611ab307fbd8b6f8f7ffc1d569bb86d1f9cb4e92",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/611ab307fbd8b6f8f7ffc1d569bb86d1f9cb4e92",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/611ab307fbd8b6f8f7ffc1d569bb86d1f9cb4e92",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/611ab307fbd8b6f8f7ffc1d569bb86d1f9cb4e92/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5df6f089b53c5b5859e5a3454c026447e4752f82",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5df6f089b53c5b5859e5a3454c026447e4752f82",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5df6f089b53c5b5859e5a3454c026447e4752f82"
      }
    ],
    "stats": {
      "total": 62,
      "additions": 34,
      "deletions": 28
    },
    "files": [
      {
        "sha": "8d96add13b58327e5a5aea70d99d64f9a97928e4",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 11,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/611ab307fbd8b6f8f7ffc1d569bb86d1f9cb4e92/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/611ab307fbd8b6f8f7ffc1d569bb86d1f9cb4e92/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=611ab307fbd8b6f8f7ffc1d569bb86d1f9cb4e92",
        "patch": "@@ -1460,11 +1460,8 @@ UniValue decodepsbt(const JSONRPCRequest& request)\n                 UniValue keypath(UniValue::VOBJ);\n                 keypath.pushKV(\"pubkey\", HexStr(entry.first));\n \n-                uint32_t fingerprint = entry.second.at(0);\n-                keypath.pushKV(\"master_fingerprint\", strprintf(\"%08x\", bswap_32(fingerprint)));\n-\n-                entry.second.erase(entry.second.begin());\n-                keypath.pushKV(\"path\", WriteHDKeypath(entry.second));\n+                keypath.pushKV(\"master_fingerprint\", strprintf(\"%08x\", ReadBE32(entry.second.fingerprint)));\n+                keypath.pushKV(\"path\", WriteHDKeypath(entry.second.path));\n                 keypaths.push_back(keypath);\n             }\n             in.pushKV(\"bip32_derivs\", keypaths);\n@@ -1522,12 +1519,8 @@ UniValue decodepsbt(const JSONRPCRequest& request)\n             for (auto entry : output.hd_keypaths) {\n                 UniValue keypath(UniValue::VOBJ);\n                 keypath.pushKV(\"pubkey\", HexStr(entry.first));\n-\n-                uint32_t fingerprint = entry.second.at(0);\n-                keypath.pushKV(\"master_fingerprint\", strprintf(\"%08x\", bswap_32(fingerprint)));\n-\n-                entry.second.erase(entry.second.begin());\n-                keypath.pushKV(\"path\", WriteHDKeypath(entry.second));\n+                keypath.pushKV(\"master_fingerprint\", strprintf(\"%08x\", ReadBE32(entry.second.fingerprint)));\n+                keypath.pushKV(\"path\", WriteHDKeypath(entry.second.path));\n                 keypaths.push_back(keypath);\n             }\n             out.pushKV(\"bip32_derivs\", keypaths);"
      },
      {
        "sha": "e0668f8c58e09b161c5b8c9c90039370a56bfcd8",
        "filename": "src/script/sign.h",
        "status": "modified",
        "additions": 22,
        "deletions": 10,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/611ab307fbd8b6f8f7ffc1d569bb86d1f9cb4e92/src/script/sign.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/611ab307fbd8b6f8f7ffc1d569bb86d1f9cb4e92/src/script/sign.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/sign.h?ref=611ab307fbd8b6f8f7ffc1d569bb86d1f9cb4e92",
        "patch": "@@ -20,6 +20,12 @@ class CTransaction;\n \n struct CMutableTransaction;\n \n+struct KeyOriginInfo\n+{\n+    unsigned char fingerprint[4];\n+    std::vector<uint32_t> path;\n+};\n+\n /** An interface to be implemented by keystores that support signing. */\n class SigningProvider\n {\n@@ -155,7 +161,7 @@ void UnserializeFromVector(Stream& s, X&... args)\n \n // Deserialize HD keypaths into a map\n template<typename Stream>\n-void DeserializeHDKeypaths(Stream& s, const std::vector<unsigned char>& key, std::map<CPubKey, std::vector<uint32_t>>& hd_keypaths)\n+void DeserializeHDKeypaths(Stream& s, const std::vector<unsigned char>& key, std::map<CPubKey, KeyOriginInfo>& hd_keypaths)\n {\n     // Make sure that the key is the size of pubkey + 1\n     if (key.size() != CPubKey::PUBLIC_KEY_SIZE + 1 && key.size() != CPubKey::COMPRESSED_PUBLIC_KEY_SIZE + 1) {\n@@ -172,25 +178,31 @@ void DeserializeHDKeypaths(Stream& s, const std::vector<unsigned char>& key, std\n \n     // Read in key path\n     uint64_t value_len = ReadCompactSize(s);\n-    std::vector<uint32_t> keypath;\n-    for (unsigned int i = 0; i < value_len; i += sizeof(uint32_t)) {\n+    if (value_len % 4 || value_len == 0) {\n+        throw std::ios_base::failure(\"Invalid length for HD key path\");\n+    }\n+\n+    KeyOriginInfo keypath;\n+    s >> keypath.fingerprint;\n+    for (unsigned int i = 4; i < value_len; i += sizeof(uint32_t)) {\n         uint32_t index;\n         s >> index;\n-        keypath.push_back(index);\n+        keypath.path.push_back(index);\n     }\n \n     // Add to map\n-    hd_keypaths.emplace(pubkey, keypath);\n+    hd_keypaths.emplace(pubkey, std::move(keypath));\n }\n \n // Serialize HD keypaths to a stream from a map\n template<typename Stream>\n-void SerializeHDKeypaths(Stream& s, const std::map<CPubKey, std::vector<uint32_t>>& hd_keypaths, uint8_t type)\n+void SerializeHDKeypaths(Stream& s, const std::map<CPubKey, KeyOriginInfo>& hd_keypaths, uint8_t type)\n {\n     for (auto keypath_pair : hd_keypaths) {\n         SerializeToVector(s, type, MakeSpan(keypath_pair.first));\n-        WriteCompactSize(s, keypath_pair.second.size() * sizeof(uint32_t));\n-        for (auto& path : keypath_pair.second) {\n+        WriteCompactSize(s, (keypath_pair.second.path.size() + 1) * sizeof(uint32_t));\n+        s << keypath_pair.second.fingerprint;\n+        for (const auto& path : keypath_pair.second.path) {\n             s << path;\n         }\n     }\n@@ -205,7 +217,7 @@ struct PSBTInput\n     CScript witness_script;\n     CScript final_script_sig;\n     CScriptWitness final_script_witness;\n-    std::map<CPubKey, std::vector<uint32_t>> hd_keypaths;\n+    std::map<CPubKey, KeyOriginInfo> hd_keypaths;\n     std::map<CKeyID, SigPair> partial_sigs;\n     std::map<std::vector<unsigned char>, std::vector<unsigned char>> unknown;\n     int sighash_type = 0;\n@@ -413,7 +425,7 @@ struct PSBTOutput\n {\n     CScript redeem_script;\n     CScript witness_script;\n-    std::map<CPubKey, std::vector<uint32_t>> hd_keypaths;\n+    std::map<CPubKey, KeyOriginInfo> hd_keypaths;\n     std::map<std::vector<unsigned char>, std::vector<unsigned char>> unknown;\n \n     bool IsNull() const;"
      },
      {
        "sha": "fd3b82d9ab40db30b606867614a7ae4ebc685981",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 7,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/611ab307fbd8b6f8f7ffc1d569bb86d1f9cb4e92/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/611ab307fbd8b6f8f7ffc1d569bb86d1f9cb4e92/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=611ab307fbd8b6f8f7ffc1d569bb86d1f9cb4e92",
        "patch": "@@ -4464,7 +4464,7 @@ bool ParseHDKeypath(std::string keypath_str, std::vector<uint32_t>& keypath)\n     return true;\n }\n \n-void AddKeypathToMap(const CWallet* pwallet, const CKeyID& keyID, std::map<CPubKey, std::vector<uint32_t>>& hd_keypaths)\n+void AddKeypathToMap(const CWallet* pwallet, const CKeyID& keyID, std::map<CPubKey, KeyOriginInfo>& hd_keypaths)\n {\n     CPubKey vchPubKey;\n     if (!pwallet->GetPubKey(keyID, vchPubKey)) {\n@@ -4475,22 +4475,23 @@ void AddKeypathToMap(const CWallet* pwallet, const CKeyID& keyID, std::map<CPubK\n     if (it != pwallet->mapKeyMetadata.end()) {\n         meta = it->second;\n     }\n-    std::vector<uint32_t> keypath;\n+    KeyOriginInfo info;\n     if (!meta.hdKeypath.empty()) {\n-        if (!ParseHDKeypath(meta.hdKeypath, keypath)) {\n+        if (!ParseHDKeypath(meta.hdKeypath, info.path)) {\n             throw JSONRPCError(RPC_INTERNAL_ERROR, \"Internal keypath is broken\");\n         }\n         // Get the proper master key id\n         CKey key;\n         pwallet->GetKey(meta.hd_seed_id, key);\n         CExtKey masterKey;\n         masterKey.SetSeed(key.begin(), key.size());\n-        // Add to map\n-        keypath.insert(keypath.begin(), ReadLE32(masterKey.key.GetPubKey().GetID().begin()));\n+        // Compute identifier\n+        CKeyID masterid = masterKey.key.GetPubKey().GetID();\n+        std::copy(masterid.begin(), masterid.begin() + 4, info.fingerprint);\n     } else { // Single pubkeys get the master fingerprint of themselves\n-        keypath.insert(keypath.begin(), ReadLE32(vchPubKey.GetID().begin()));\n+        std::copy(keyID.begin(), keyID.begin() + 4, info.fingerprint);\n     }\n-    hd_keypaths.emplace(vchPubKey, keypath);\n+    hd_keypaths.emplace(vchPubKey, std::move(info));\n }\n \n bool FillPSBT(const CWallet* pwallet, PartiallySignedTransaction& psbtx, const CTransaction* txConst, int sighash_type, bool sign, bool bip32derivs)"
      }
    ]
  },
  {
    "sha": "84f1f1bfdf900cd28099e428441aa42f9d11a0ed",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4NGYxZjFiZmRmOTAwY2QyODA5OWU0Mjg0NDFhYTQyZjlkMTFhMGVk",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-07-20T00:25:21Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-08-13T15:46:23Z"
      },
      "message": "Make SigningProvider expose key origin information",
      "tree": {
        "sha": "f207338b3689a063f982553eafb311055fbaaa1d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f207338b3689a063f982553eafb311055fbaaa1d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/84f1f1bfdf900cd28099e428441aa42f9d11a0ed",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/84f1f1bfdf900cd28099e428441aa42f9d11a0ed",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/84f1f1bfdf900cd28099e428441aa42f9d11a0ed",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/84f1f1bfdf900cd28099e428441aa42f9d11a0ed/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "611ab307fbd8b6f8f7ffc1d569bb86d1f9cb4e92",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/611ab307fbd8b6f8f7ffc1d569bb86d1f9cb4e92",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/611ab307fbd8b6f8f7ffc1d569bb86d1f9cb4e92"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 9,
      "deletions": 2
    },
    "files": [
      {
        "sha": "47931e21d9267fd3de9106057c4e829192065c82",
        "filename": "src/script/sign.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 2,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/84f1f1bfdf900cd28099e428441aa42f9d11a0ed/src/script/sign.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/84f1f1bfdf900cd28099e428441aa42f9d11a0ed/src/script/sign.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/sign.cpp?ref=84f1f1bfdf900cd28099e428441aa42f9d11a0ed",
        "patch": "@@ -645,9 +645,14 @@ bool PublicOnlySigningProvider::GetCScript(const CScriptID &scriptid, CScript& s\n     return m_provider->GetCScript(scriptid, script);\n }\n \n-bool PublicOnlySigningProvider::GetPubKey(const CKeyID &address, CPubKey& pubkey) const\n+bool PublicOnlySigningProvider::GetPubKey(const CKeyID& keyid, CPubKey& pubkey) const\n {\n-    return m_provider->GetPubKey(address, pubkey);\n+    return m_provider->GetPubKey(keyid, pubkey);\n+}\n+\n+bool PublicOnlySigningProvider::GetKeyOrigin(const CKeyID& keyid, KeyOriginInfo& info) const\n+{\n+    return m_provider->GetKeyOrigin(keyid, info);\n }\n \n bool FlatSigningProvider::GetCScript(const CScriptID& scriptid, CScript& script) const { return LookupHelper(scripts, scriptid, script); }"
      },
      {
        "sha": "323fe70f347939d60851ecf5f1da676ebf2d9d3c",
        "filename": "src/script/sign.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/84f1f1bfdf900cd28099e428441aa42f9d11a0ed/src/script/sign.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/84f1f1bfdf900cd28099e428441aa42f9d11a0ed/src/script/sign.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/sign.h?ref=84f1f1bfdf900cd28099e428441aa42f9d11a0ed",
        "patch": "@@ -34,6 +34,7 @@ class SigningProvider\n     virtual bool GetCScript(const CScriptID &scriptid, CScript& script) const { return false; }\n     virtual bool GetPubKey(const CKeyID &address, CPubKey& pubkey) const { return false; }\n     virtual bool GetKey(const CKeyID &address, CKey& key) const { return false; }\n+    virtual bool GetKeyOrigin(const CKeyID& id, KeyOriginInfo& info) const { return false; }\n };\n \n extern const SigningProvider& DUMMY_SIGNING_PROVIDER;\n@@ -47,6 +48,7 @@ class PublicOnlySigningProvider : public SigningProvider\n     PublicOnlySigningProvider(const SigningProvider* provider) : m_provider(provider) {}\n     bool GetCScript(const CScriptID &scriptid, CScript& script) const;\n     bool GetPubKey(const CKeyID &address, CPubKey& pubkey) const;\n+    bool GetKeyOrigin(const CKeyID& keyid, KeyOriginInfo& info) const;\n };\n \n struct FlatSigningProvider final : public SigningProvider"
      }
    ]
  },
  {
    "sha": "81e1dd5ce1a32114a38691ec6b55e72ab04dbbb1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4MWUxZGQ1Y2UxYTMyMTE0YTM4NjkxZWM2YjU1ZTcyYWIwNGRiYmIx",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-07-20T07:04:02Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-08-13T15:46:23Z"
      },
      "message": "Generalize PublicOnlySigningProvider into HidingSigningProvider",
      "tree": {
        "sha": "5342792dd281e8628ebc214feca9e74d80770e79",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5342792dd281e8628ebc214feca9e74d80770e79"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/81e1dd5ce1a32114a38691ec6b55e72ab04dbbb1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/81e1dd5ce1a32114a38691ec6b55e72ab04dbbb1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/81e1dd5ce1a32114a38691ec6b55e72ab04dbbb1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/81e1dd5ce1a32114a38691ec6b55e72ab04dbbb1/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "84f1f1bfdf900cd28099e428441aa42f9d11a0ed",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/84f1f1bfdf900cd28099e428441aa42f9d11a0ed",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/84f1f1bfdf900cd28099e428441aa42f9d11a0ed"
      }
    ],
    "stats": {
      "total": 32,
      "additions": 19,
      "deletions": 13
    },
    "files": [
      {
        "sha": "ae29f72b054c28ca733cb8a475c40f36a2682c39",
        "filename": "src/script/sign.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 3,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/81e1dd5ce1a32114a38691ec6b55e72ab04dbbb1/src/script/sign.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/81e1dd5ce1a32114a38691ec6b55e72ab04dbbb1/src/script/sign.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/sign.cpp?ref=81e1dd5ce1a32114a38691ec6b55e72ab04dbbb1",
        "patch": "@@ -640,18 +640,25 @@ void PSBTOutput::Merge(const PSBTOutput& output)\n     if (witness_script.empty() && !output.witness_script.empty()) witness_script = output.witness_script;\n }\n \n-bool PublicOnlySigningProvider::GetCScript(const CScriptID &scriptid, CScript& script) const\n+bool HidingSigningProvider::GetCScript(const CScriptID& scriptid, CScript& script) const\n {\n     return m_provider->GetCScript(scriptid, script);\n }\n \n-bool PublicOnlySigningProvider::GetPubKey(const CKeyID& keyid, CPubKey& pubkey) const\n+bool HidingSigningProvider::GetPubKey(const CKeyID& keyid, CPubKey& pubkey) const\n {\n     return m_provider->GetPubKey(keyid, pubkey);\n }\n \n-bool PublicOnlySigningProvider::GetKeyOrigin(const CKeyID& keyid, KeyOriginInfo& info) const\n+bool HidingSigningProvider::GetKey(const CKeyID& keyid, CKey& key) const\n {\n+    if (m_hide_secret) return false;\n+    return m_provider->GetKey(keyid, key);\n+}\n+\n+bool HidingSigningProvider::GetKeyOrigin(const CKeyID& keyid, KeyOriginInfo& info) const\n+{\n+    if (m_hide_origin) return false;\n     return m_provider->GetKeyOrigin(keyid, info);\n }\n "
      },
      {
        "sha": "d8334f2ea27bf45fb77b8744073b6c1e8038e82e",
        "filename": "src/script/sign.h",
        "status": "modified",
        "additions": 8,
        "deletions": 5,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/81e1dd5ce1a32114a38691ec6b55e72ab04dbbb1/src/script/sign.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/81e1dd5ce1a32114a38691ec6b55e72ab04dbbb1/src/script/sign.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/sign.h?ref=81e1dd5ce1a32114a38691ec6b55e72ab04dbbb1",
        "patch": "@@ -39,16 +39,19 @@ class SigningProvider\n \n extern const SigningProvider& DUMMY_SIGNING_PROVIDER;\n \n-class PublicOnlySigningProvider : public SigningProvider\n+class HidingSigningProvider : public SigningProvider\n {\n private:\n+    const bool m_hide_secret;\n+    const bool m_hide_origin;\n     const SigningProvider* m_provider;\n \n public:\n-    PublicOnlySigningProvider(const SigningProvider* provider) : m_provider(provider) {}\n-    bool GetCScript(const CScriptID &scriptid, CScript& script) const;\n-    bool GetPubKey(const CKeyID &address, CPubKey& pubkey) const;\n-    bool GetKeyOrigin(const CKeyID& keyid, KeyOriginInfo& info) const;\n+    HidingSigningProvider(const SigningProvider* provider, bool hide_secret, bool hide_origin) : m_hide_secret(hide_secret), m_hide_origin(hide_origin), m_provider(provider) {}\n+    bool GetCScript(const CScriptID& scriptid, CScript& script) const override;\n+    bool GetPubKey(const CKeyID& keyid, CPubKey& pubkey) const override;\n+    bool GetKey(const CKeyID& keyid, CKey& key) const override;\n+    bool GetKeyOrigin(const CKeyID& keyid, KeyOriginInfo& info) const override;\n };\n \n struct FlatSigningProvider final : public SigningProvider"
      },
      {
        "sha": "a719e883c76c35031e5e06660f9f5f88594107da",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 5,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/81e1dd5ce1a32114a38691ec6b55e72ab04dbbb1/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/81e1dd5ce1a32114a38691ec6b55e72ab04dbbb1/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=81e1dd5ce1a32114a38691ec6b55e72ab04dbbb1",
        "patch": "@@ -4520,11 +4520,7 @@ bool FillPSBT(const CWallet* pwallet, PartiallySignedTransaction& psbtx, const C\n         }\n \n         SignatureData sigdata;\n-        if (sign) {\n-            complete &= SignPSBTInput(*pwallet, *psbtx.tx, input, sigdata, i, sighash_type);\n-        } else {\n-            complete &= SignPSBTInput(PublicOnlySigningProvider(pwallet), *psbtx.tx, input, sigdata, i, sighash_type);\n-        }\n+        complete &= SignPSBTInput(HidingSigningProvider(pwallet, !sign, false), *psbtx.tx, input, sigdata, i, sighash_type);\n \n         if (it != pwallet->mapWallet.end()) {\n             // Drop the unnecessary UTXO if we added both from the wallet."
      }
    ]
  },
  {
    "sha": "3b01efa0d1bf3d23d1b7b7e518849f1fc26314f9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozYjAxZWZhMGQxYmYzZDIzZDFiN2I3ZTUxODg0OWYxZmMyNjMxNGY5",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-07-20T00:37:19Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-08-13T15:46:23Z"
      },
      "message": "[MOVEONLY] Move ParseHDKeypath to utilstrencodings",
      "tree": {
        "sha": "4779af5b25e8d6dffbed87a8bdd8fbd27170aa54",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4779af5b25e8d6dffbed87a8bdd8fbd27170aa54"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3b01efa0d1bf3d23d1b7b7e518849f1fc26314f9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3b01efa0d1bf3d23d1b7b7e518849f1fc26314f9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3b01efa0d1bf3d23d1b7b7e518849f1fc26314f9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3b01efa0d1bf3d23d1b7b7e518849f1fc26314f9/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "81e1dd5ce1a32114a38691ec6b55e72ab04dbbb1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/81e1dd5ce1a32114a38691ec6b55e72ab04dbbb1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/81e1dd5ce1a32114a38691ec6b55e72ab04dbbb1"
      }
    ],
    "stats": {
      "total": 86,
      "additions": 43,
      "deletions": 43
    },
    "files": [
      {
        "sha": "e66e2c238c5bbc0972612178e2b4148671870f53",
        "filename": "src/utilstrencodings.cpp",
        "status": "modified",
        "additions": 40,
        "deletions": 0,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3b01efa0d1bf3d23d1b7b7e518849f1fc26314f9/src/utilstrencodings.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3b01efa0d1bf3d23d1b7b7e518849f1fc26314f9/src/utilstrencodings.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/utilstrencodings.cpp?ref=3b01efa0d1bf3d23d1b7b7e518849f1fc26314f9",
        "patch": "@@ -544,3 +544,43 @@ bool ParseFixedPoint(const std::string &val, int decimals, int64_t *amount_out)\n     return true;\n }\n \n+bool ParseHDKeypath(const std::string& keypath_str, std::vector<uint32_t>& keypath)\n+{\n+    std::stringstream ss(keypath_str);\n+    std::string item;\n+    bool first = true;\n+    while (std::getline(ss, item, '/')) {\n+        if (item.compare(\"m\") == 0) {\n+            if (first) {\n+                first = false;\n+                continue;\n+            }\n+            return false;\n+        }\n+        // Finds whether it is hardened\n+        uint32_t path = 0;\n+        size_t pos = item.find(\"'\");\n+        if (pos != std::string::npos) {\n+            // The hardened tick can only be in the last index of the string\n+            if (pos != item.size() - 1) {\n+                return false;\n+            }\n+            path |= 0x80000000;\n+            item = item.substr(0, item.size() - 1); // Drop the last character which is the hardened tick\n+        }\n+\n+        // Ensure this is only numbers\n+        if (item.find_first_not_of( \"0123456789\" ) != std::string::npos) {\n+            return false;\n+        }\n+        uint32_t number;\n+        if (!ParseUInt32(item, &number)) {\n+            return false;\n+        }\n+        path |= number;\n+\n+        keypath.push_back(path);\n+        first = false;\n+    }\n+    return true;\n+}"
      },
      {
        "sha": "8f29f8f322cc41025fa96fa50fd7c702d4cb5cb0",
        "filename": "src/utilstrencodings.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3b01efa0d1bf3d23d1b7b7e518849f1fc26314f9/src/utilstrencodings.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3b01efa0d1bf3d23d1b7b7e518849f1fc26314f9/src/utilstrencodings.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/utilstrencodings.h?ref=3b01efa0d1bf3d23d1b7b7e518849f1fc26314f9",
        "patch": "@@ -183,4 +183,7 @@ bool ConvertBits(const O& outfn, I it, I end) {\n     return true;\n }\n \n+/** Parse an HD keypaths like \"m/7/0'/2000\". */\n+bool ParseHDKeypath(const std::string& keypath_str, std::vector<uint32_t>& keypath);\n+\n #endif // BITCOIN_UTILSTRENCODINGS_H"
      },
      {
        "sha": "aa7f5312b41296695055bcc306220fc5ec04e61e",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 41,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3b01efa0d1bf3d23d1b7b7e518849f1fc26314f9/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3b01efa0d1bf3d23d1b7b7e518849f1fc26314f9/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=3b01efa0d1bf3d23d1b7b7e518849f1fc26314f9",
        "patch": "@@ -4423,47 +4423,6 @@ UniValue sethdseed(const JSONRPCRequest& request)\n     return NullUniValue;\n }\n \n-bool ParseHDKeypath(std::string keypath_str, std::vector<uint32_t>& keypath)\n-{\n-    std::stringstream ss(keypath_str);\n-    std::string item;\n-    bool first = true;\n-    while (std::getline(ss, item, '/')) {\n-        if (item.compare(\"m\") == 0) {\n-            if (first) {\n-                first = false;\n-                continue;\n-            }\n-            return false;\n-        }\n-        // Finds whether it is hardened\n-        uint32_t path = 0;\n-        size_t pos = item.find(\"'\");\n-        if (pos != std::string::npos) {\n-            // The hardened tick can only be in the last index of the string\n-            if (pos != item.size() - 1) {\n-                return false;\n-            }\n-            path |= 0x80000000;\n-            item = item.substr(0, item.size() - 1); // Drop the last character which is the hardened tick\n-        }\n-\n-        // Ensure this is only numbers\n-        if (item.find_first_not_of( \"0123456789\" ) != std::string::npos) {\n-            return false;\n-        }\n-        uint32_t number;\n-        if (!ParseUInt32(item, &number)) {\n-            return false;\n-        }\n-        path |= number;\n-\n-        keypath.push_back(path);\n-        first = false;\n-    }\n-    return true;\n-}\n-\n void AddKeypathToMap(const CWallet* pwallet, const CKeyID& keyID, std::map<CPubKey, KeyOriginInfo>& hd_keypaths)\n {\n     CPubKey vchPubKey;"
      },
      {
        "sha": "526f2d983fc94cebae1a67ae836f4ee8a1172737",
        "filename": "src/wallet/test/psbt_wallet_tests.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3b01efa0d1bf3d23d1b7b7e518849f1fc26314f9/src/wallet/test/psbt_wallet_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3b01efa0d1bf3d23d1b7b7e518849f1fc26314f9/src/wallet/test/psbt_wallet_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/test/psbt_wallet_tests.cpp?ref=3b01efa0d1bf3d23d1b7b7e518849f1fc26314f9",
        "patch": "@@ -13,8 +13,6 @@\n #include <test/test_bitcoin.h>\n #include <wallet/test/wallet_test_fixture.h>\n \n-extern bool ParseHDKeypath(std::string keypath_str, std::vector<uint32_t>& keypath);\n-\n BOOST_FIXTURE_TEST_SUITE(psbt_wallet_tests, WalletTestingSetup)\n \n BOOST_AUTO_TEST_CASE(psbt_updater_test)"
      }
    ]
  },
  {
    "sha": "03a99586a398ee38f40c3b72d24c6a2ba4b88579",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowM2E5OTU4NmEzOThlZTM4ZjQwYzNiNzJkMjRjNmEyYmE0Yjg4NTc5",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-07-20T00:56:52Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-08-13T15:46:23Z"
      },
      "message": "Implement key origin lookup in CWallet",
      "tree": {
        "sha": "01ee901a790cd5d2446e36bedc31aacbf92e2d91",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/01ee901a790cd5d2446e36bedc31aacbf92e2d91"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/03a99586a398ee38f40c3b72d24c6a2ba4b88579",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/03a99586a398ee38f40c3b72d24c6a2ba4b88579",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/03a99586a398ee38f40c3b72d24c6a2ba4b88579",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/03a99586a398ee38f40c3b72d24c6a2ba4b88579/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3b01efa0d1bf3d23d1b7b7e518849f1fc26314f9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3b01efa0d1bf3d23d1b7b7e518849f1fc26314f9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3b01efa0d1bf3d23d1b7b7e518849f1fc26314f9"
      }
    ],
    "stats": {
      "total": 49,
      "additions": 30,
      "deletions": 19
    },
    "files": [
      {
        "sha": "0fcdd780a7dac1a24e12bfe2df180d77185ebea5",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 19,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/03a99586a398ee38f40c3b72d24c6a2ba4b88579/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/03a99586a398ee38f40c3b72d24c6a2ba4b88579/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=03a99586a398ee38f40c3b72d24c6a2ba4b88579",
        "patch": "@@ -4429,26 +4429,9 @@ void AddKeypathToMap(const CWallet* pwallet, const CKeyID& keyID, std::map<CPubK\n     if (!pwallet->GetPubKey(keyID, vchPubKey)) {\n         return;\n     }\n-    CKeyMetadata meta;\n-    auto it = pwallet->mapKeyMetadata.find(keyID);\n-    if (it != pwallet->mapKeyMetadata.end()) {\n-        meta = it->second;\n-    }\n     KeyOriginInfo info;\n-    if (!meta.hdKeypath.empty()) {\n-        if (!ParseHDKeypath(meta.hdKeypath, info.path)) {\n-            throw JSONRPCError(RPC_INTERNAL_ERROR, \"Internal keypath is broken\");\n-        }\n-        // Get the proper master key id\n-        CKey key;\n-        pwallet->GetKey(meta.hd_seed_id, key);\n-        CExtKey masterKey;\n-        masterKey.SetSeed(key.begin(), key.size());\n-        // Compute identifier\n-        CKeyID masterid = masterKey.key.GetPubKey().GetID();\n-        std::copy(masterid.begin(), masterid.begin() + 4, info.fingerprint);\n-    } else { // Single pubkeys get the master fingerprint of themselves\n-        std::copy(keyID.begin(), keyID.begin() + 4, info.fingerprint);\n+    if (!pwallet->GetKeyOrigin(keyID, info)) {\n+        throw JSONRPCError(RPC_INTERNAL_ERROR, \"Internal keypath is broken\");\n     }\n     hd_keypaths.emplace(vchPubKey, std::move(info));\n }"
      },
      {
        "sha": "92ffc3c1084ec496d969c01ddfbca95f0bbeee01",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 26,
        "deletions": 0,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/03a99586a398ee38f40c3b72d24c6a2ba4b88579/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/03a99586a398ee38f40c3b72d24c6a2ba4b88579/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=03a99586a398ee38f40c3b72d24c6a2ba4b88579",
        "patch": "@@ -4466,3 +4466,29 @@ std::vector<OutputGroup> CWallet::GroupOutputs(const std::vector<COutput>& outpu\n     }\n     return groups;\n }\n+\n+bool CWallet::GetKeyOrigin(const CKeyID& keyID, KeyOriginInfo& info) const\n+{\n+    CKeyMetadata meta;\n+    {\n+        LOCK(cs_wallet);\n+        auto it = mapKeyMetadata.find(keyID);\n+        if (it != mapKeyMetadata.end()) {\n+            meta = it->second;\n+        }\n+    }\n+    if (!meta.hdKeypath.empty()) {\n+        if (!ParseHDKeypath(meta.hdKeypath, info.path)) return false;\n+        // Get the proper master key id\n+        CKey key;\n+        GetKey(meta.hd_seed_id, key);\n+        CExtKey masterKey;\n+        masterKey.SetSeed(key.begin(), key.size());\n+        // Compute identifier\n+        CKeyID masterid = masterKey.key.GetPubKey().GetID();\n+        std::copy(masterid.begin(), masterid.begin() + 4, info.fingerprint);\n+    } else { // Single pubkeys get the master fingerprint of themselves\n+        std::copy(keyID.begin(), keyID.begin() + 4, info.fingerprint);\n+    }\n+    return true;\n+}"
      },
      {
        "sha": "e9f6a452436a95a8e63d8895e8e9f789d216a36c",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/03a99586a398ee38f40c3b72d24c6a2ba4b88579/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/03a99586a398ee38f40c3b72d24c6a2ba4b88579/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=03a99586a398ee38f40c3b72d24c6a2ba4b88579",
        "patch": "@@ -1211,6 +1211,8 @@ class CWallet final : public CCryptoKeyStore, public CValidationInterface\n         LogPrintf((\"%s \" + fmt).c_str(), GetDisplayName(), parameters...);\n     };\n \n+    /** Implement lookup of key origin information through wallet key metadata. */\n+    bool GetKeyOrigin(const CKeyID& keyid, KeyOriginInfo& info) const override;\n };\n \n /** A key allocated from the key pool. */"
      }
    ]
  },
  {
    "sha": "cad5dd2368109ec398a3b79c8b9e94dfd23f0845",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjYWQ1ZGQyMzY4MTA5ZWMzOThhM2I3OWM4YjllOTRkZmQyM2YwODQ1",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-07-20T01:47:24Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-08-13T15:46:23Z"
      },
      "message": "Pass HD path data through SignatureData",
      "tree": {
        "sha": "8ec155c0355e69802ebde1eaa278fa877a730a01",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8ec155c0355e69802ebde1eaa278fa877a730a01"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cad5dd2368109ec398a3b79c8b9e94dfd23f0845",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cad5dd2368109ec398a3b79c8b9e94dfd23f0845",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cad5dd2368109ec398a3b79c8b9e94dfd23f0845",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cad5dd2368109ec398a3b79c8b9e94dfd23f0845/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "03a99586a398ee38f40c3b72d24c6a2ba4b88579",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/03a99586a398ee38f40c3b72d24c6a2ba4b88579",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/03a99586a398ee38f40c3b72d24c6a2ba4b88579"
      }
    ],
    "stats": {
      "total": 44,
      "additions": 20,
      "deletions": 24
    },
    "files": [
      {
        "sha": "4060111ff2214d7678a8b05ac2234e6891e3b285",
        "filename": "src/script/sign.cpp",
        "status": "modified",
        "additions": 17,
        "deletions": 7,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cad5dd2368109ec398a3b79c8b9e94dfd23f0845/src/script/sign.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cad5dd2368109ec398a3b79c8b9e94dfd23f0845/src/script/sign.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/sign.cpp?ref=cad5dd2368109ec398a3b79c8b9e94dfd23f0845",
        "patch": "@@ -50,10 +50,6 @@ static bool GetCScript(const SigningProvider& provider, const SignatureData& sig\n \n static bool GetPubKey(const SigningProvider& provider, SignatureData& sigdata, const CKeyID& address, CPubKey& pubkey)\n {\n-    if (provider.GetPubKey(address, pubkey)) {\n-        sigdata.misc_pubkeys.emplace(pubkey.GetID(), pubkey);\n-        return true;\n-    }\n     // Look for pubkey in all partial sigs\n     const auto it = sigdata.signatures.find(address);\n     if (it != sigdata.signatures.end()) {\n@@ -63,7 +59,15 @@ static bool GetPubKey(const SigningProvider& provider, SignatureData& sigdata, c\n     // Look for pubkey in pubkey list\n     const auto& pk_it = sigdata.misc_pubkeys.find(address);\n     if (pk_it != sigdata.misc_pubkeys.end()) {\n-        pubkey = pk_it->second;\n+        pubkey = pk_it->second.first;\n+        return true;\n+    }\n+    // Query the underlying provider\n+    if (provider.GetPubKey(address, pubkey)) {\n+        KeyOriginInfo info;\n+        if (provider.GetKeyOrigin(address, info)) {\n+            sigdata.misc_pubkeys.emplace(address, std::make_pair(pubkey, std::move(info)));\n+        }\n         return true;\n     }\n     return false;\n@@ -543,7 +547,7 @@ void PSBTInput::FillSignatureData(SignatureData& sigdata) const\n         sigdata.witness_script = witness_script;\n     }\n     for (const auto& key_pair : hd_keypaths) {\n-        sigdata.misc_pubkeys.emplace(key_pair.first.GetID(), key_pair.first);\n+        sigdata.misc_pubkeys.emplace(key_pair.first.GetID(), key_pair);\n     }\n }\n \n@@ -571,6 +575,9 @@ void PSBTInput::FromSignatureData(const SignatureData& sigdata)\n     if (witness_script.empty() && !sigdata.witness_script.empty()) {\n         witness_script = sigdata.witness_script;\n     }\n+    for (const auto& entry : sigdata.misc_pubkeys) {\n+        hd_keypaths.emplace(entry.second);\n+    }\n }\n \n void PSBTInput::Merge(const PSBTInput& input)\n@@ -612,7 +619,7 @@ void PSBTOutput::FillSignatureData(SignatureData& sigdata) const\n         sigdata.witness_script = witness_script;\n     }\n     for (const auto& key_pair : hd_keypaths) {\n-        sigdata.misc_pubkeys.emplace(key_pair.first.GetID(), key_pair.first);\n+        sigdata.misc_pubkeys.emplace(key_pair.first.GetID(), key_pair);\n     }\n }\n \n@@ -624,6 +631,9 @@ void PSBTOutput::FromSignatureData(const SignatureData& sigdata)\n     if (witness_script.empty() && !sigdata.witness_script.empty()) {\n         witness_script = sigdata.witness_script;\n     }\n+    for (const auto& entry : sigdata.misc_pubkeys) {\n+        hd_keypaths.emplace(entry.second);\n+    }\n }\n \n bool PSBTOutput::IsNull() const"
      },
      {
        "sha": "a4e1eac403e254b555ec0a1d8db59e0990642e2e",
        "filename": "src/script/sign.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cad5dd2368109ec398a3b79c8b9e94dfd23f0845/src/script/sign.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cad5dd2368109ec398a3b79c8b9e94dfd23f0845/src/script/sign.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/sign.h?ref=cad5dd2368109ec398a3b79c8b9e94dfd23f0845",
        "patch": "@@ -109,7 +109,7 @@ struct SignatureData {\n     CScript witness_script; ///< The witnessScript (if any) for the input. witnessScripts are used in P2WSH outputs.\n     CScriptWitness scriptWitness; ///< The scriptWitness of an input. Contains complete signatures or the traditional partial signatures format. scriptWitness is part of a transaction input per BIP 144.\n     std::map<CKeyID, SigPair> signatures; ///< BIP 174 style partial signatures for the input. May contain all signatures necessary for producing a final scriptSig or scriptWitness.\n-    std::map<CKeyID, CPubKey> misc_pubkeys;\n+    std::map<CKeyID, std::pair<CPubKey, KeyOriginInfo>> misc_pubkeys;\n \n     SignatureData() {}\n     explicit SignatureData(const CScript& script) : scriptSig(script) {}"
      },
      {
        "sha": "c2cd4ea2a04ab584baa01faa560c7a1d534294d4",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 16,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cad5dd2368109ec398a3b79c8b9e94dfd23f0845/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cad5dd2368109ec398a3b79c8b9e94dfd23f0845/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=cad5dd2368109ec398a3b79c8b9e94dfd23f0845",
        "patch": "@@ -4462,7 +4462,7 @@ bool FillPSBT(const CWallet* pwallet, PartiallySignedTransaction& psbtx, const C\n         }\n \n         SignatureData sigdata;\n-        complete &= SignPSBTInput(HidingSigningProvider(pwallet, !sign, false), *psbtx.tx, input, sigdata, i, sighash_type);\n+        complete &= SignPSBTInput(HidingSigningProvider(pwallet, !sign, !bip32derivs), *psbtx.tx, input, sigdata, i, sighash_type);\n \n         if (it != pwallet->mapWallet.end()) {\n             // Drop the unnecessary UTXO if we added both from the wallet.\n@@ -4472,13 +4472,6 @@ bool FillPSBT(const CWallet* pwallet, PartiallySignedTransaction& psbtx, const C\n                 input.witness_utxo.SetNull();\n             }\n         }\n-\n-        // Get public key paths\n-        if (bip32derivs) {\n-            for (const auto& pubkey_it : sigdata.misc_pubkeys) {\n-                AddKeypathToMap(pwallet, pubkey_it.first, input.hd_keypaths);\n-            }\n-        }\n     }\n \n     // Fill in the bip32 keypaths and redeemscripts for the outputs so that hardware wallets can identify change\n@@ -4496,15 +4489,8 @@ bool FillPSBT(const CWallet* pwallet, PartiallySignedTransaction& psbtx, const C\n         psbt_out.FillSignatureData(sigdata);\n \n         MutableTransactionSignatureCreator creator(psbtx.tx.get_ptr(), 0, out.nValue, 1);\n-        ProduceSignature(*pwallet, creator, out.scriptPubKey, sigdata);\n+        ProduceSignature(HidingSigningProvider(pwallet, true, !bip32derivs), creator, out.scriptPubKey, sigdata);\n         psbt_out.FromSignatureData(sigdata);\n-\n-        // Get public key paths\n-        if (bip32derivs) {\n-            for (const auto& pubkey_it : sigdata.misc_pubkeys) {\n-                AddKeypathToMap(pwallet, pubkey_it.first, psbt_out.hd_keypaths);\n-            }\n-        }\n     }\n     return complete;\n }"
      }
    ]
  },
  {
    "sha": "917353c8b0eff4cd95f9a5f7719f6756bb8338b1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5MTczNTNjOGIwZWZmNGNkOTVmOWE1Zjc3MTlmNjc1NmJiODMzOGIx",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-07-20T07:23:32Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-08-13T15:46:23Z"
      },
      "message": "Make SignPSBTInput operate on a private SignatureData object",
      "tree": {
        "sha": "cb8138b5071ded72e3ab8a6ebb8d4e03a0115606",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cb8138b5071ded72e3ab8a6ebb8d4e03a0115606"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/917353c8b0eff4cd95f9a5f7719f6756bb8338b1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/917353c8b0eff4cd95f9a5f7719f6756bb8338b1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/917353c8b0eff4cd95f9a5f7719f6756bb8338b1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/917353c8b0eff4cd95f9a5f7719f6756bb8338b1/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cad5dd2368109ec398a3b79c8b9e94dfd23f0845",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cad5dd2368109ec398a3b79c8b9e94dfd23f0845",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cad5dd2368109ec398a3b79c8b9e94dfd23f0845"
      }
    ],
    "stats": {
      "total": 30,
      "additions": 15,
      "deletions": 15
    },
    "files": [
      {
        "sha": "4f9b399a913466989b28d4ee4b8bb7be5e0ee92c",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/917353c8b0eff4cd95f9a5f7719f6756bb8338b1/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/917353c8b0eff4cd95f9a5f7719f6756bb8338b1/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=917353c8b0eff4cd95f9a5f7719f6756bb8338b1",
        "patch": "@@ -1641,8 +1641,7 @@ UniValue finalizepsbt(const JSONRPCRequest& request)\n     for (unsigned int i = 0; i < psbtx.tx->vin.size(); ++i) {\n         PSBTInput& input = psbtx.inputs.at(i);\n \n-        SignatureData sigdata;\n-        complete &= SignPSBTInput(DUMMY_SIGNING_PROVIDER, *psbtx.tx, input, sigdata, i, 1);\n+        complete &= SignPSBTInput(DUMMY_SIGNING_PROVIDER, *psbtx.tx, input, i, 1);\n     }\n \n     UniValue result(UniValue::VOBJ);"
      },
      {
        "sha": "ea14abce4cac88f201eadffccdfa24f264fb7825",
        "filename": "src/script/sign.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 1,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/917353c8b0eff4cd95f9a5f7719f6756bb8338b1/src/script/sign.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/917353c8b0eff4cd95f9a5f7719f6756bb8338b1/src/script/sign.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/sign.cpp?ref=917353c8b0eff4cd95f9a5f7719f6756bb8338b1",
        "patch": "@@ -237,14 +237,15 @@ bool ProduceSignature(const SigningProvider& provider, const BaseSignatureCreato\n     return sigdata.complete;\n }\n \n-bool SignPSBTInput(const SigningProvider& provider, const CMutableTransaction& tx, PSBTInput& input, SignatureData& sigdata, int index, int sighash)\n+bool SignPSBTInput(const SigningProvider& provider, const CMutableTransaction& tx, PSBTInput& input, int index, int sighash)\n {\n     // if this input has a final scriptsig or scriptwitness, don't do anything with it\n     if (!input.final_script_sig.empty() || !input.final_script_witness.IsNull()) {\n         return true;\n     }\n \n     // Fill SignatureData with input info\n+    SignatureData sigdata;\n     input.FillSignatureData(sigdata);\n \n     // Get UTXO\n@@ -276,6 +277,16 @@ bool SignPSBTInput(const SigningProvider& provider, const CMutableTransaction& t\n     // Verify that a witness signature was produced in case one was required.\n     if (require_witness_sig && !sigdata.witness) return false;\n     input.FromSignatureData(sigdata);\n+\n+    // If both UTXO types are present, drop the unnecessary one.\n+    if (input.non_witness_utxo && !input.witness_utxo.IsNull()) {\n+        if (sigdata.witness) {\n+            input.non_witness_utxo = nullptr;\n+        } else {\n+            input.witness_utxo.SetNull();\n+        }\n+    }\n+\n     return sig_complete;\n }\n "
      },
      {
        "sha": "160b3be75b7f38fe3169a9a73e668f51866dda1b",
        "filename": "src/script/sign.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/917353c8b0eff4cd95f9a5f7719f6756bb8338b1/src/script/sign.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/917353c8b0eff4cd95f9a5f7719f6756bb8338b1/src/script/sign.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/sign.h?ref=917353c8b0eff4cd95f9a5f7719f6756bb8338b1",
        "patch": "@@ -696,7 +696,7 @@ bool SignSignature(const SigningProvider &provider, const CScript& fromPubKey, C\n bool SignSignature(const SigningProvider &provider, const CTransaction& txFrom, CMutableTransaction& txTo, unsigned int nIn, int nHashType);\n \n /** Signs a PSBTInput, verifying that all provided data matches what is being signed. */\n-bool SignPSBTInput(const SigningProvider& provider, const CMutableTransaction& tx, PSBTInput& input, SignatureData& sigdata, int index, int sighash = 1);\n+bool SignPSBTInput(const SigningProvider& provider, const CMutableTransaction& tx, PSBTInput& input, int index, int sighash = SIGHASH_ALL);\n \n /** Extract signature data from a transaction input, and insert it. */\n SignatureData DataFromTransaction(const CMutableTransaction& tx, unsigned int nIn, const CTxOut& txout);"
      },
      {
        "sha": "b8e7b7fe0cb0bacb000a00f6e49db3353036fe48",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 11,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/917353c8b0eff4cd95f9a5f7719f6756bb8338b1/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/917353c8b0eff4cd95f9a5f7719f6756bb8338b1/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=917353c8b0eff4cd95f9a5f7719f6756bb8338b1",
        "patch": "@@ -4461,17 +4461,7 @@ bool FillPSBT(const CWallet* pwallet, PartiallySignedTransaction& psbtx, const C\n             throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"Specified Sighash and sighash in PSBT do not match.\");\n         }\n \n-        SignatureData sigdata;\n-        complete &= SignPSBTInput(HidingSigningProvider(pwallet, !sign, !bip32derivs), *psbtx.tx, input, sigdata, i, sighash_type);\n-\n-        if (it != pwallet->mapWallet.end()) {\n-            // Drop the unnecessary UTXO if we added both from the wallet.\n-            if (sigdata.witness) {\n-                input.non_witness_utxo = nullptr;\n-            } else {\n-                input.witness_utxo.SetNull();\n-            }\n-        }\n+        complete &= SignPSBTInput(HidingSigningProvider(pwallet, !sign, !bip32derivs), *psbtx.tx, input, i, sighash_type);\n     }\n \n     // Fill in the bip32 keypaths and redeemscripts for the outputs so that hardware wallets can identify change"
      }
    ]
  }
]