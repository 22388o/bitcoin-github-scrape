[
  {
    "sha": "c1d742025caec62cf38cea1166fa6c4d0f7e207b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjMWQ3NDIwMjVjYWVjNjJjZjM4Y2VhMTE2NmZhNmM0ZDBmN2UyMDdi",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-04-20T19:45:31Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-04-20T19:45:31Z"
      },
      "message": "[tests] Fix feature_block flakiness\n\nfeature_block.py occasionally fails on Travis. I believe this is due to\na a race condition when reconnecting to bitcoind after a subtest that\nexpects disconnection. If the test runs ahead and sends the INV for the\nsubsequent test before we've received the initial sync getheaders, then\nwe may end up sending two headers messages - one as a response to the\ninitial sync getheaders and one in response to the INV getheaders. If\nboth of those headers fail validation with a DoS score of 50 or higher,\nthen we'll unexpectedly be disconnected.\n\nThere is only one validation failure that has a DoS score bewteen 50 and\n100, which is high-hash. That's why the test is failing immediately\nafter the \"Reject a block with invalid work\" subtest.\n\nFix is to wait for the initial getheaders from the peer before we\nstart populating our blockstore. That way we won't have any invalid\nheaders to respond to it with.",
      "tree": {
        "sha": "152d3cf40e6463a35f6007474f7b80453af793fd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/152d3cf40e6463a35f6007474f7b80453af793fd"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c1d742025caec62cf38cea1166fa6c4d0f7e207b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c1d742025caec62cf38cea1166fa6c4d0f7e207b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c1d742025caec62cf38cea1166fa6c4d0f7e207b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c1d742025caec62cf38cea1166fa6c4d0f7e207b/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8b262eb2d80bfa27ae8501078ce47bc1407e9c55",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8b262eb2d80bfa27ae8501078ce47bc1407e9c55",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8b262eb2d80bfa27ae8501078ce47bc1407e9c55"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 7,
      "deletions": 1
    },
    "files": [
      {
        "sha": "38b76239e53d397e64303abf94c78e4df56556d7",
        "filename": "test/functional/feature_block.py",
        "status": "modified",
        "additions": 7,
        "deletions": 1,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c1d742025caec62cf38cea1166fa6c4d0f7e207b/test/functional/feature_block.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c1d742025caec62cf38cea1166fa6c4d0f7e207b/test/functional/feature_block.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_block.py?ref=c1d742025caec62cf38cea1166fa6c4d0f7e207b",
        "patch": "@@ -1306,7 +1306,13 @@ def reconnect_p2p(self):\n         self.nodes[0].disconnect_p2ps()\n         self.nodes[0].add_p2p_connection(P2PDataStore())\n         network_thread_start()\n-        self.nodes[0].p2p.wait_for_verack()\n+        # We need to wait for the initial getheaders from the peer before we\n+        # start populating our blockstore. If we don't, then we may run ahead\n+        # to the next subtest before we receive the getheaders. We'd then send\n+        # an INV for the next block and receive two getheaders - one for the\n+        # IBD and one for the INV. We'd respond to both and could get\n+        # unexpectedly disconnected if the DoS score for that error is 50.\n+        self.nodes[0].p2p.wait_for_getheaders(timeout=5)\n \n     def sync_blocks(self, blocks, success=True, reject_code=None, reject_reason=None, request_block=True, reconnect=False, timeout=60):\n         \"\"\"Sends blocks to test node. Syncs and verifies that tip has advanced to most recent block."
      }
    ]
  }
]