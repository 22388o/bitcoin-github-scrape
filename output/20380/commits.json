[
  {
    "sha": "fd0be92cff6a4b5e343e6ddae7481868354b9869",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmZDBiZTkyY2ZmNmE0YjVlMzQzZTZkZGFlNzQ4MTg2ODM1NGI5ODY5",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-11-12T20:01:32Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-11-12T20:20:29Z"
      },
      "message": "doc: Add instructions on how to fuzz the P2P layer using Honggfuzz NetDriver",
      "tree": {
        "sha": "524db7cd338a0b04c83cf391f93b99cf1c4329aa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/524db7cd338a0b04c83cf391f93b99cf1c4329aa"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fd0be92cff6a4b5e343e6ddae7481868354b9869",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fd0be92cff6a4b5e343e6ddae7481868354b9869",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fd0be92cff6a4b5e343e6ddae7481868354b9869",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fd0be92cff6a4b5e343e6ddae7481868354b9869/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0bd4929cd00e91bf4137f43b097cd62f72f503e4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0bd4929cd00e91bf4137f43b097cd62f72f503e4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0bd4929cd00e91bf4137f43b097cd62f72f503e4"
      }
    ],
    "stats": {
      "total": 74,
      "additions": 74,
      "deletions": 0
    },
    "files": [
      {
        "sha": "4391fb78a2cd23a34ff0e7f32bab89de92721c5f",
        "filename": "doc/fuzzing.md",
        "status": "modified",
        "additions": 74,
        "deletions": 0,
        "changes": 74,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd0be92cff6a4b5e343e6ddae7481868354b9869/doc/fuzzing.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd0be92cff6a4b5e343e6ddae7481868354b9869/doc/fuzzing.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/fuzzing.md?ref=fd0be92cff6a4b5e343e6ddae7481868354b9869",
        "patch": "@@ -157,3 +157,77 @@ $ honggfuzz/honggfuzz -i inputs/ -- src/test/fuzz/process_message\n ```\n \n Read the [Honggfuzz documentation](https://github.com/google/honggfuzz/blob/master/docs/USAGE.md) for more information.\n+\n+## Fuzzing the Bitcoin Core P2P layer using Honggfuzz NetDriver\n+\n+Honggfuzz NetDriver allows for very easy fuzzing of TCP servers such as Bitcoin\n+Core without having to write any custom fuzzing harness. The `bitcoind` server\n+process is largely fuzzed without modification.\n+\n+This makes the fuzzing highly realistic: a bug reachable by the fuzzer is likely\n+also remotely triggerable by an untrusted peer.\n+\n+To quickly get started fuzzing the P2P layer using Honggfuzz NetDriver:\n+\n+```sh\n+$ mkdir bitcoin-honggfuzz-p2p/\n+$ cd bitcoin-honggfuzz-p2p/\n+$ git clone https://github.com/bitcoin/bitcoin\n+$ cd bitcoin/\n+$ ./autogen.sh\n+$ git clone https://github.com/google/honggfuzz\n+$ cd honggfuzz/\n+$ make\n+$ cd ..\n+$ CC=$(pwd)/honggfuzz/hfuzz_cc/hfuzz-clang \\\n+      CXX=$(pwd)/honggfuzz/hfuzz_cc/hfuzz-clang++ \\\n+      ./configure --disable-wallet --with-gui=no \\\n+                  --with-sanitizers=address,undefined\n+$ git apply << \"EOF\"\n+diff --git a/src/bitcoind.cpp b/src/bitcoind.cpp\n+index 455a82e39..2faa3f80f 100644\n+--- a/src/bitcoind.cpp\n++++ b/src/bitcoind.cpp\n+@@ -158,7 +158,11 @@ static bool AppInit(int argc, char* argv[])\n+     return fRet;\n+ }\n+\n++#ifdef HFND_FUZZING_ENTRY_FUNCTION_CXX\n++HFND_FUZZING_ENTRY_FUNCTION_CXX(int argc, char* argv[])\n++#else\n+ int main(int argc, char* argv[])\n++#endif\n+ {\n+ #ifdef WIN32\n+     util::WinCmdLineArgs winArgs;\n+diff --git a/src/net.cpp b/src/net.cpp\n+index cf987b699..636a4176a 100644\n+--- a/src/net.cpp\n++++ b/src/net.cpp\n+@@ -709,7 +709,7 @@ int V1TransportDeserializer::readHeader(const char *pch, unsigned int nBytes)\n+     }\n+\n+     // Check start string, network magic\n+-    if (memcmp(hdr.pchMessageStart, m_chain_params.MessageStart(), CMessageHeader::MESSAGE_START_SIZE) != 0) {\n++    if (false && memcmp(hdr.pchMessageStart, m_chain_params.MessageStart(), CMessageHeader::MESSAGE_START_SIZE) != 0) { // skip network magic checking\n+         LogPrint(BCLog::NET, \"HEADER ERROR - MESSAGESTART (%s, %u bytes), received %s, peer=%d\\n\", hdr.GetCommand(), hdr.nMessageSize, HexStr(hdr.pchMessageStart), m_node_id);\n+         return -1;\n+     }\n+@@ -768,7 +768,7 @@ Optional<CNetMessage> V1TransportDeserializer::GetMessage(const std::chrono::mic\n+     RandAddEvent(ReadLE32(hash.begin()));\n+\n+     // Check checksum and header command string\n+-    if (memcmp(hash.begin(), hdr.pchChecksum, CMessageHeader::CHECKSUM_SIZE) != 0) {\n++    if (false && memcmp(hash.begin(), hdr.pchChecksum, CMessageHeader::CHECKSUM_SIZE) != 0) { // skip checksum checking\n+         LogPrint(BCLog::NET, \"CHECKSUM ERROR (%s, %u bytes), expected %s was %s, peer=%d\\n\",\n+                  SanitizeString(msg->m_command), msg->m_message_size,\n+                  HexStr(Span<uint8_t>(hash.begin(), hash.begin() + CMessageHeader::CHECKSUM_SIZE)),\n+EOF\n+$ make -C src/ bitcoind\n+$ mkdir -p inputs/\n+$ honggfuzz/honggfuzz --exit_upon_crash --quiet --timeout 4 -n 1 -Q \\\n+      -E HFND_TCP_PORT=18444 -f inputs/ -- \\\n+          src/bitcoind -regtest -discover=0 -dns=0 -dnsseed=0 -listenonion=0 \\\n+                       -nodebuglogfile -bind=127.0.0.1:18444 -logthreadnames \\\n+                       -debug\n+```"
      }
    ]
  }
]