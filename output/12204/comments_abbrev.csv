gmaxwell,2018-01-17T11:32:58Z,Concept ACK.,https://github.com/bitcoin/bitcoin/pull/12204#issuecomment-358277892,358277892,
MarcoFalke,2018-01-18T23:49:55Z,"Concept ACK. Though, I have never checked if any of the heights or hashes make sense. Wouldn't it help review if #6931 or this pull actually included the code that was used to determine those magic numbers?",https://github.com/bitcoin/bitcoin/pull/12204#issuecomment-358820635,358820635,
jnewbery,2018-01-19T22:25:08Z,"My analysis matches yours exactly. The pre-BIP34 blocks with coinbase height > block height are (in ascending order):\n\nblock_height | coinbase_height\n209920 | 209921\n176684 | 490897\n164384 | 1983702\n169895 | 3708179 **<---- I expect to be dead before this height**\n....\n\nso you're right that the only heights that we should care about are 209921, 490897 and 1983702.",https://github.com/bitcoin/bitcoin/pull/12204#issuecomment-359106628,359106628,
jnewbery,2018-01-19T22:44:32Z,"If anyone wants to re-run the analysis, the gist with my code is here: https://gist.github.com/jnewbery/df0a98f3d2fea52e487001bf2b9ef1fd\n\n(this is quite slow since it's hitting the RPC interface 3 times for each block. It'd be faster to deserialize block files directly, patch bitcoind to print this data itself, or use BlockSci or a similar block analysis tool)",https://github.com/bitcoin/bitcoin/pull/12204#issuecomment-359110595,359110595,
achow101,2018-01-20T06:06:28Z,"code utACK, haven't actually read through the whole comment.\n\nI agree with the above analysis that block 1983702 is the lowest block height that we need to worry about. We could soft fork in something prior to that block to guarantee that the txids will be different, e.g. block height in the nLockTime field.",https://github.com/bitcoin/bitcoin/pull/12204#issuecomment-359148679,359148679,
morcos,2018-01-25T16:28:05Z,"Comment updated to hopefully be clearer.  Code unchanged.\n\nFor reference here is how I double checked the possible violations.  I patched bitcoind with this snippet and then ran with -reindex-chainstate.\n```\n@@ -1724,6 +1724,16 @@ static bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockInd\n                 }\n             }\n         }\n+        if (block.vtx[0]->",https://github.com/bitcoin/bitcoin/pull/12204#issuecomment-360520343,360520343,
jnewbery,2018-01-26T19:16:23Z,Tested ACK 3f3b991,https://github.com/bitcoin/bitcoin/pull/12204#issuecomment-360878031,360878031,
laanwj,2018-02-08T15:48:02Z,"Looks sensible to me. Although I think we should definitely make this a chain parameter, or at least define a constant, instead of hardcoding this magic number:\n```\nOptional TODO: Have BIP30 checking activate at a per chain block height.\n```\nI don't think we're in enough of a hurry here to skip that.",https://github.com/bitcoin/bitcoin/pull/12204#issuecomment-364153444,364153444,
morcos,2018-02-15T15:04:35Z,"@laanwj I'm happy to define it as a constant locally, but it seems like adding it as a chain parameter just adds unnecessary cruft to the code.  This is such an obscure (and irrelevant for decades) element of the consensus that it seems better to keep it entirely contained to one spot in the code base, so it doesn't occupy mental energy in other places.   That said, will defer to your judgement...",https://github.com/bitcoin/bitcoin/pull/12204#issuecomment-365954055,365954055,
laanwj,2018-02-15T18:01:02Z,"Nono I'm OK with that, but if we actively argue against making it a chain parameter we should remove the TODO as well, otherwise it's inviting someone else to make that change. My only point is that there is no hurry to merge this, so no reason to leave unfinished TODOs in the code.",https://github.com/bitcoin/bitcoin/pull/12204#issuecomment-366010582,366010582,
morcos,2018-02-15T18:35:42Z,"updated to a constant and removed optional TODO, I believe its better to keep this mess contained to one section of the code",https://github.com/bitcoin/bitcoin/pull/12204#issuecomment-366020268,366020268,
laanwj,2018-02-15T18:44:14Z,utACK https://github.com/bitcoin/bitcoin/pull/12204/commits/5b8b387752e8c493a8e87795ae6ddb78b45b1a5d,https://github.com/bitcoin/bitcoin/pull/12204#issuecomment-366022787,366022787,
jnewbery,2018-02-16T14:49:22Z,"utACK 5b8b387752e8c493a8e87795ae6ddb78b45b1a5d\n\nDifference is that there is now a `constexpr int BIP34_IMPLIES_BIP30_LIMIT` and the comment has been updated.\n\nTravis failed because of a timeout. I'll kick it.",https://github.com/bitcoin/bitcoin/pull/12204#issuecomment-366255483,366255483,
sdaftuar,2018-03-07T14:11:15Z,ACK,https://github.com/bitcoin/bitcoin/pull/12204#issuecomment-371149920,371149920,
instagibbs,2018-01-16T19:37:21Z,"Maybe put ""block"" in front of blocks being named by number. (and everywhere else)\n\nI was reading it as the the height in coinbase aka the number 176,684 in the block's coinbase at height 490,897.",https://github.com/bitcoin/bitcoin/pull/12204#discussion_r161864379,161864379,src/validation.cpp
ryanofsky,2018-01-16T20:20:29Z,"Is the significance of 1,938,702 just that it is the third lowest height found encoded in the old coinbases? The sentence doesn't say where 1,938,702 comes from, and this is written like it should be obvious what the number means.\n\nIf it is just the third lowest height found in the search, I think it would be clearer to say something like ""An exhaustive search of all blocks before the BIP34 he",https://github.com/bitcoin/bitcoin/pull/12204#discussion_r161875402,161875402,src/validation.cpp
jnewbery,2018-01-16T21:07:27Z,"Rather than start your new comment explaining where the previous comment is incorrect, I think it makes sense to remove/reword the paragraph above.\n\nI also think it would make the whole comment clearer if you explicitly introduced terminology at the top of the comment. Something like:\n\n```\n- block height: the height of the block in the blockchain\n- coinbase height: the height indicated",https://github.com/bitcoin/bitcoin/pull/12204#discussion_r161886460,161886460,src/validation.cpp
jimpo,2018-01-17T01:26:13Z,typo: optimization,https://github.com/bitcoin/bitcoin/pull/12204#discussion_r161935352,161935352,src/validation.cpp
morcos,2018-01-25T16:30:01Z,I think it is useful to understand the basic logic that BIP 34 implies BIP 30 is met and doesn't need to be checked.  But then understand why it's not quite that simple.  It also matches the historical evolution of the code.  So I left this comment as correction to the previous one.,https://github.com/bitcoin/bitcoin/pull/12204#discussion_r163895211,163895211,src/validation.cpp
