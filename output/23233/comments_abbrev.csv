dhruv,2021-10-08 22:45:38,Rebased and lint errors fixed. Ready for review.,https://github.com/bitcoin/bitcoin/pull/23233#issuecomment-939153782,939153782,
DrahtBot,2021-10-09 19:00:13,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#23561](https://github.com/bitcoin/bitcoin/pull/23561) (BIP324: Handshake prerequisites by dhruv)\n* [#23443](https://git",https://github.com/bitcoin/bitcoin/pull/23233#issuecomment-939346404,939346404,
dhruv,2021-10-10 04:51:32,Addressed https://github.com/bitcoin/bitcoin/pull/23233#discussion_r725442331 - ready for further review.,https://github.com/bitcoin/bitcoin/pull/23233#issuecomment-939406571,939406571,
dhruv,2021-10-22 18:24:42,Rebased. Ready for further review.,https://github.com/bitcoin/bitcoin/pull/23233#issuecomment-949867586,949867586,
dhruv,2021-11-09 00:28:41,"Rebased to bring in changes from #22735, and addressed comments from @stratospher (Thank you!). Ready for further review.",https://github.com/bitcoin/bitcoin/pull/23233#issuecomment-963698675,963698675,
dhruv,2021-11-23 23:29:58,Pushed changes to enforce connection termination upon finding an invalid mac tag. Ready for further review.,https://github.com/bitcoin/bitcoin/pull/23233#issuecomment-977279224,977279224,
MarcoFalke,2021-10-09 06:28:27,"```suggestion\n                (void)aead.DecryptLength(in.data());\n```\n\nDoes this not work?",https://github.com/bitcoin/bitcoin/pull/23233#discussion_r725442331,725442331,src/test/fuzz/crypto_chacha20_poly1305_aead.cpp
dhruv,2021-10-10 04:50:53,"That does indeed work. Thank you.\n\nI've updated the commit in PR #20962 (where it originally belongs) and also here(this PR is based off that one).",https://github.com/bitcoin/bitcoin/pull/23233#discussion_r725576786,725576786,src/test/fuzz/crypto_chacha20_poly1305_aead.cpp
stratospher,2021-11-05 04:44:41,"```suggestion\n```\nThis comment can be removed since it's related to the AEAD cipher suite implementation and doesn't play a role here.",https://github.com/bitcoin/bitcoin/pull/23233#discussion_r743387596,743387596,src/net.cpp
stratospher,2021-11-05 04:51:46,This will need to be updated to be consistent with the BIP since [MAX_SIZE](https://github.com/bitcoin/bitcoin/blob/24abd8312ec1caa04f9b3bd92cd960e28ca91e17/src/serialize.h#L31) is 2^25 bytes.,https://github.com/bitcoin/bitcoin/pull/23233#discussion_r743389384,743389384,src/net.cpp
stratospher,2021-11-05 05:33:17,This function can be modified to keep it's format consistent with the v1 GetMessage since [#22735](https://github.com/bitcoin/bitcoin/pull/22735) got merged.,https://github.com/bitcoin/bitcoin/pull/23233#discussion_r743399462,743399462,src/net.cpp
stratospher,2021-11-05 05:34:47,"``` suggestion\n    // prepare the packet length that will later be encrypted and part of the MAC (AAD)\n```",https://github.com/bitcoin/bitcoin/pull/23233#discussion_r743399785,743399785,src/net.cpp
stratospher,2021-11-05 05:36:07,"``` suggestion\n    //       the AAD, payload and MAC, we could avoid a insert and thus a potential reallocation\n```",https://github.com/bitcoin/bitcoin/pull/23233#discussion_r743400111,743400111,src/net.cpp
stratospher,2021-11-05 05:46:17,"``` suggestion\n    CDataStream vRecv;           // received message header and data\n```",https://github.com/bitcoin/bitcoin/pull/23233#discussion_r743402532,743402532,src/net.h
stratospher,2021-11-05 05:54:07,"``` suggestion\n    // TODO: if we refactor the ChaCha20Poly1305 crypt function to allow separate buffers for\n```",https://github.com/bitcoin/bitcoin/pull/23233#discussion_r743404596,743404596,src/net.cpp
stratospher,2021-11-05 06:08:56,"```suggestion\n    // In v2, vRecv contains the AAD, encrypted payload plus the MAC tag (3 byte AAD + 1+bytes serialized message command + ? bytes message payload + 16 byte mac tag)\n```",https://github.com/bitcoin/bitcoin/pull/23233#discussion_r743408559,743408559,src/net.cpp
stratospher,2021-11-05 06:10:54,"```suggestion\n            if (msg.data.size() > read_bytes) {\n```",https://github.com/bitcoin/bitcoin/pull/23233#discussion_r743409108,743409108,src/test/net_tests.cpp
stratospher,2021-11-05 06:18:50,"This can be updated to keep it consistent with [22735](https://github.com/bitcoin/bitcoin/pull/22735)'s change.\n```suggestion\n            bool reject_message{false};\n            CNetMessage result{deserializer->GetMessage(GetTime<std::chrono::microseconds>(), reject_message)};\n```",https://github.com/bitcoin/bitcoin/pull/23233#discussion_r743411366,743411366,src/test/net_tests.cpp
stratospher,2021-11-05 06:21:55,"```suggestion\n            bool reject_message{false};\n            CNetMessage result{deserializer.GetMessage(m_time, reject_message)};\n```\nHere also.",https://github.com/bitcoin/bitcoin/pull/23233#discussion_r743412234,743412234,src/test/fuzz/p2p_v2_transport_serialization.cpp
dhruv,2021-11-09 00:28:57,Good find. Removed.,https://github.com/bitcoin/bitcoin/pull/23233#discussion_r745195684,745195684,src/net.cpp
dhruv,2021-11-09 00:29:08,Thanks for the catch. Fixed.,https://github.com/bitcoin/bitcoin/pull/23233#discussion_r745195888,745195888,src/net.cpp
dhruv,2021-11-09 00:29:23,Done. Rebased with master.,https://github.com/bitcoin/bitcoin/pull/23233#discussion_r745196158,745196158,src/net.cpp
dhruv,2021-11-09 00:29:30,Done.,https://github.com/bitcoin/bitcoin/pull/23233#discussion_r745196283,745196283,src/net.cpp
dhruv,2021-11-09 00:29:37,Done.,https://github.com/bitcoin/bitcoin/pull/23233#discussion_r745196411,745196411,src/net.cpp
dhruv,2021-11-09 00:31:56,"Well, so, the term ""header"" doesn't really make sense without the context of which layer we are talking about. `net` covers both transport and p2p(application) layers to some degree. For the transport layer, perhaps the ""header"" is the encrypted length. For the application layer, the p2p message type is arguably part of the ""header"". I updated the comment to be clear in a different way though.",https://github.com/bitcoin/bitcoin/pull/23233#discussion_r745197474,745197474,src/net.h
dhruv,2021-11-09 00:32:02,Done.,https://github.com/bitcoin/bitcoin/pull/23233#discussion_r745197510,745197510,src/net.cpp
dhruv,2021-11-09 00:32:08,Done.,https://github.com/bitcoin/bitcoin/pull/23233#discussion_r745197555,745197555,src/net.cpp
dhruv,2021-11-09 00:32:29,"Oh, that was quite silly. Thanks for reviewing closely. Done.",https://github.com/bitcoin/bitcoin/pull/23233#discussion_r745197708,745197708,src/test/net_tests.cpp
dhruv,2021-11-09 00:32:36,Done.,https://github.com/bitcoin/bitcoin/pull/23233#discussion_r745197760,745197760,src/test/net_tests.cpp
dhruv,2021-11-09 00:32:44,Done.,https://github.com/bitcoin/bitcoin/pull/23233#discussion_r745197826,745197826,src/test/fuzz/p2p_v2_transport_serialization.cpp
dhruv,2021-11-17 16:45:03,"Note for myself: This should result in a dropped connection, not just a rejected message.",https://github.com/bitcoin/bitcoin/pull/23233#discussion_r751429722,751429722,src/net.cpp
dhruv,2021-11-23 23:29:39,Done.,https://github.com/bitcoin/bitcoin/pull/23233#discussion_r755584647,755584647,src/net.cpp
