[
  {
    "sha": "1d4fd13c9138e24eb27daac4d7c86d02b43486b4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxZDRmZDEzYzkxMzhlMjRlYjI3ZGFhYzRkN2M4NmQwMmI0MzQ4NmI0",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2012-03-26T03:59:34Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2012-05-27T17:22:05Z"
      },
      "message": "New -minfee and -minfeeper options (with JSON-RPC setminfee to change at runtime) to control minimum fee requirements for transaction inclusion in blocks mined",
      "tree": {
        "sha": "863aaf90db5595edfe869d5151e2958d157184cf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/863aaf90db5595edfe869d5151e2958d157184cf"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1d4fd13c9138e24eb27daac4d7c86d02b43486b4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1d4fd13c9138e24eb27daac4d7c86d02b43486b4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1d4fd13c9138e24eb27daac4d7c86d02b43486b4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1d4fd13c9138e24eb27daac4d7c86d02b43486b4/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a52c7a1b65b4a10a36e455d9cbc98265fa6736ba",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a52c7a1b65b4a10a36e455d9cbc98265fa6736ba",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a52c7a1b65b4a10a36e455d9cbc98265fa6736ba"
      }
    ],
    "stats": {
      "total": 59,
      "additions": 59,
      "deletions": 0
    },
    "files": [
      {
        "sha": "93375568c7d5b0ecb56b43b0ec9bab261a3c8a96",
        "filename": "src/bitcoinrpc.cpp",
        "status": "modified",
        "additions": 31,
        "deletions": 0,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1d4fd13c9138e24eb27daac4d7c86d02b43486b4/src/bitcoinrpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1d4fd13c9138e24eb27daac4d7c86d02b43486b4/src/bitcoinrpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoinrpc.cpp?ref=1d4fd13c9138e24eb27daac4d7c86d02b43486b4",
        "patch": "@@ -568,6 +568,8 @@ Value getmininginfo(const Array& params, bool fHelp)\n     obj.push_back(Pair(\"genproclimit\",  (int)GetArg(\"-genproclimit\", -1)));\n     obj.push_back(Pair(\"hashespersec\",  gethashespersec(params, false)));\n     obj.push_back(Pair(\"pooledtx\",      (uint64_t)mempool.size()));\n+    obj.push_back(Pair(\"minfee\",        ValueFromAmount(nMinFeeBase)));\n+    obj.push_back(Pair(\"minfeeper\",     (uint64_t)nMinFeePer));\n     obj.push_back(Pair(\"testnet\",       fTestNet));\n     return obj;\n }\n@@ -2000,6 +2002,32 @@ Value validateaddress(const Array& params, bool fHelp)\n     return ret;\n }\n \n+Value setminfee(const Array& params, bool fHelp)\n+{\n+    if (fHelp || params.size() < 1 || params.size() > 2)\n+        throw runtime_error(\n+            \"setminfee <amount> [per-bytes]\\n\"\n+            \"Sets the minimum transaction fee required to accept into mined blocks.\\n\"\n+            \"<amount> is a real and is rounded to the nearest 0.00000001\\n\"\n+            \"[per-bytes] is the number of bytes allowed before <amount> is added again\\n\");\n+\n+    // Amount\n+    int64 nAmount = 0;\n+    if (params[0].get_real() != 0.0)\n+        nAmount = AmountFromValue(params[0]);        // rejects 0.0 amounts\n+\n+    if (params.size() > 1)\n+    {\n+        int64 nPer = params[1].get_int64();\n+        if (nPer < 1)\n+            throw JSONRPCError(-3, \"Minimum transaction fee per bytes must be positive\");\n+        nMinFeePer = nPer;\n+    }\n+\n+    nMinFeeBase = nAmount;\n+    return true;\n+}\n+\n Value getwork(const Array& params, bool fHelp)\n {\n     if (fHelp || params.size() > 1)\n@@ -2320,6 +2348,7 @@ static const CRPCCommand vRPCCommands[] =\n     { \"listtransactions\",       &listtransactions,       false },\n     { \"signmessage\",            &signmessage,            false },\n     { \"verifymessage\",          &verifymessage,          false },\n+    { \"setminfee\",              &setminfee,              true },\n     { \"getwork\",                &getwork,                true },\n     { \"listaccounts\",           &listaccounts,           false },\n     { \"settxfee\",               &settxfee,               false },\n@@ -2968,6 +2997,8 @@ Array RPCConvertValues(const std::string &strMethod, const std::vector<std::stri\n     //\n     if (strMethod == \"setgenerate\"            && n > 0) ConvertTo<bool>(params[0]);\n     if (strMethod == \"setgenerate\"            && n > 1) ConvertTo<boost::int64_t>(params[1]);\n+    if (strMethod == \"setminfee\"              && n > 0) ConvertTo<double>(params[0]);\n+    if (strMethod == \"setminfee\"              && n > 1) ConvertTo<boost::int64_t>(params[1]);\n     if (strMethod == \"sendtoaddress\"          && n > 1) ConvertTo<double>(params[1]);\n     if (strMethod == \"settxfee\"               && n > 0) ConvertTo<double>(params[0]);\n     if (strMethod == \"getreceivedbyaddress\"   && n > 1) ConvertTo<boost::int64_t>(params[1]);"
      },
      {
        "sha": "39d6122ef9a0efc494d97148b12460690502ddf2",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1d4fd13c9138e24eb27daac4d7c86d02b43486b4/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1d4fd13c9138e24eb27daac4d7c86d02b43486b4/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=1d4fd13c9138e24eb27daac4d7c86d02b43486b4",
        "patch": "@@ -199,6 +199,8 @@ std::string HelpMessage()\n         \"  -pid=<file>            \" + _(\"Specify pid file (default: bitcoind.pid)\") + \"\\n\" +\n         \"  -gen                   \" + _(\"Generate coins\") + \"\\n\" +\n         \"  -gen=0                 \" + _(\"Don't generate coins\") + \"\\n\" +\n+        \"  -minfee=<amt>          \" + _(\"Fee to require of transactions you mine\") + \"\\n\" +\n+        \"  -minfeeper=<bytes>     \" + _(\"Amount of transaction bytes before minfee is doubled\") + \"\\n\" +\n         \"  -datadir=<dir>         \" + _(\"Specify data directory\") + \"\\n\" +\n         \"  -dbcache=<n>           \" + _(\"Set database cache size in megabytes (default: 25)\") + \"\\n\" +\n         \"  -dblogsize=<n>         \" + _(\"Set database disk log size in megabytes (default: 100)\") + \"\\n\" +\n@@ -378,6 +380,20 @@ bool AppInit2()\n             InitWarning(_(\"Warning: -paytxfee is set very high. This is the transaction fee you will pay if you send a transaction.\"));\n     }\n \n+    if (mapArgs.count(\"-minfee\"))\n+    {\n+        if (!ParseMoney(mapArgs[\"-minfee\"], nMinFeeBase))\n+            return InitError(strprintf(_(\"Invalid amount for -minfee=<amount>: '%s'\"), mapArgs[\"-minfee\"].c_str()));\n+    }\n+    if (mapArgs.count(\"-minfeeper\"))\n+    {\n+        nMinFeePer = GetArg(\"-minfeeper\", nMinFeePer);\n+        if (nMinFeePer < 1)\n+            return InitError(strprintf(_(\"Invalid amount for -minfeeper=<bytes>: '%s'\"), mapArgs[\"-minfeeper\"].c_str()));\n+    }\n+    if (nMinFeeBase / nMinFeePer > 0.00025 * COIN)\n+        InitWarning(_(\"Warning: -minfee is set very high.  This is the transaction fee people must pay to get transactions accepted into your blocks.\"));\n+\n     // ********************************************************* Step 4: application initialization: dir lock, daemonize, pidfile, debug log\n \n     // Make sure only a single Bitcoin process is using the data directory."
      },
      {
        "sha": "8635a592650f4cc7c24befc6d5d243664799d064",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1d4fd13c9138e24eb27daac4d7c86d02b43486b4/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1d4fd13c9138e24eb27daac4d7c86d02b43486b4/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=1d4fd13c9138e24eb27daac4d7c86d02b43486b4",
        "patch": "@@ -56,6 +56,8 @@ int64 nHPSTimerStart;\n \n // Settings\n int64 nTransactionFee = 0;\n+int64 nMinFeeBase = 0;\n+int64 nMinFeePer = 1000;\n \n \n "
      },
      {
        "sha": "e7f8cd88cb76447f5e9411e6a66487e837b98b13",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1d4fd13c9138e24eb27daac4d7c86d02b43486b4/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1d4fd13c9138e24eb27daac4d7c86d02b43486b4/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=1d4fd13c9138e24eb27daac4d7c86d02b43486b4",
        "patch": "@@ -70,6 +70,8 @@ extern unsigned char pchMessageStart[4];\n \n // Settings\n extern int64 nTransactionFee;\n+extern int64 nMinFeeBase;\n+extern int64 nMinFeePer;\n \n // Minimum disk space required - used in CheckDiskSpace()\n static const uint64 nMinDiskSpace = 52428800;\n@@ -581,6 +583,14 @@ class CTransaction\n \n         if (!MoneyRange(nMinFee))\n             nMinFee = MAX_MONEY;\n+\n+        if (mode == GMF_BLOCK)\n+        {\n+            int64 nAltMinFee = (1 + ((int64)nBytes / nMinFeePer)) * nMinFeeBase;\n+            if (nAltMinFee > nMinFee)\n+                nMinFee = nAltMinFee;\n+        }\n+\n         return nMinFee;\n     }\n "
      }
    ]
  }
]