[
  {
    "sha": "d891ae768185b464cae476c16c74c365372d4a3c",
    "node_id": "C_kwDOABII59oAKGQ4OTFhZTc2ODE4NWI0NjRjYWU0NzZjMTZjNzRjMzY1MzcyZDRhM2M",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2021-10-25T15:09:30Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2021-10-25T17:48:21Z"
      },
      "message": "Introduce new V4 format addrman\n\n92617b7a758c0425330fba4b886296730567927c effectively changed the\non-disk format in an incompatible way: old deserializers cannot\ndeal with multiple entries for the same IP.\n\nIntroduce a V4_MULTIPORT format, and increment the compatibility base,\nso that old versions correctly recognize it as an incompatible future\nversion.",
      "tree": {
        "sha": "d37fbeef2d4c45d68fc24e996e91d765a9ad5451",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d37fbeef2d4c45d68fc24e996e91d765a9ad5451"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d891ae768185b464cae476c16c74c365372d4a3c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d891ae768185b464cae476c16c74c365372d4a3c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d891ae768185b464cae476c16c74c365372d4a3c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d891ae768185b464cae476c16c74c365372d4a3c/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "22a90186496aea8025316bc5616905ffcf1aeb29",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/22a90186496aea8025316bc5616905ffcf1aeb29",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/22a90186496aea8025316bc5616905ffcf1aeb29"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 5,
      "deletions": 4
    },
    "files": [
      {
        "sha": "b579995a2c4ced370a9adcc04a34142a1e62271f",
        "filename": "src/addrman.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d891ae768185b464cae476c16c74c365372d4a3c/src/addrman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d891ae768185b464cae476c16c74c365372d4a3c/src/addrman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrman.cpp?ref=d891ae768185b464cae476c16c74c365372d4a3c",
        "patch": "@@ -171,7 +171,7 @@ void AddrManImpl::Serialize(Stream& s_) const\n \n     // Increment `lowest_compatible` iff a newly introduced format is incompatible with\n     // the previous one.\n-    static constexpr uint8_t lowest_compatible = Format::V3_BIP155;\n+    static constexpr uint8_t lowest_compatible = Format::V4_MULTIPORT;\n     s << static_cast<uint8_t>(INCOMPATIBILITY_BASE + lowest_compatible);\n \n     s << nKey;"
      },
      {
        "sha": "e8e7c15a19c11eb4c12992b8fa01b62006e92e0b",
        "filename": "src/addrman_impl.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d891ae768185b464cae476c16c74c365372d4a3c/src/addrman_impl.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d891ae768185b464cae476c16c74c365372d4a3c/src/addrman_impl.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrman_impl.h?ref=d891ae768185b464cae476c16c74c365372d4a3c",
        "patch": "@@ -157,14 +157,15 @@ class AddrManImpl\n         V1_DETERMINISTIC = 1, //!< for pre-asmap files\n         V2_ASMAP = 2,         //!< for files including asmap version\n         V3_BIP155 = 3,        //!< same as V2_ASMAP plus addresses are in BIP155 format\n+        V4_MULTIPORT = 4,     //!< adds support for multiple ports per IP\n     };\n \n     //! The maximum format this software knows it can unserialize. Also, we always serialize\n     //! in this format.\n     //! The format (first byte in the serialized stream) can be higher than this and\n     //! still this software may be able to unserialize the file - if the second byte\n     //! (see `lowest_compatible` in `Unserialize()`) is less or equal to this.\n-    static constexpr Format FILE_FORMAT = Format::V3_BIP155;\n+    static constexpr Format FILE_FORMAT = Format::V4_MULTIPORT;\n \n     //! The initial value of a field that is incremented every time an incompatible format\n     //! change is made (such that old software versions would not be able to parse and"
      },
      {
        "sha": "14a4f8abb778b0fa3c29df95a47c8d78ad909235",
        "filename": "test/functional/feature_addrman.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d891ae768185b464cae476c16c74c365372d4a3c/test/functional/feature_addrman.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d891ae768185b464cae476c16c74c365372d4a3c/test/functional/feature_addrman.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_addrman.py?ref=d891ae768185b464cae476c16c74c365372d4a3c",
        "patch": "@@ -18,7 +18,7 @@\n def serialize_addrman(\n     *,\n     format=1,\n-    lowest_compatible=3,\n+    lowest_compatible=4,\n     net_magic=\"regtest\",\n     bucket_key=1,\n     len_new=None,\n@@ -75,7 +75,7 @@ def run_test(self):\n             expected_msg=init_error(\n                 \"Unsupported format of addrman database: 1. It is compatible with \"\n                 \"formats >=111, but the maximum supported by this version of \"\n-                f\"{self.config['environment']['PACKAGE_NAME']} is 3.: (.+)\"\n+                f\"{self.config['environment']['PACKAGE_NAME']} is 4.: (.+)\"\n             ),\n             match=ErrorMatch.FULL_REGEX,\n         )"
      }
    ]
  }
]