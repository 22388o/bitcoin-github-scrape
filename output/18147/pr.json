{
  "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18147",
  "id": 375445180,
  "node_id": "MDExOlB1bGxSZXF1ZXN0Mzc1NDQ1MTgw",
  "html_url": "https://github.com/bitcoin/bitcoin/pull/18147",
  "diff_url": "https://github.com/bitcoin/bitcoin/pull/18147.diff",
  "patch_url": "https://github.com/bitcoin/bitcoin/pull/18147.patch",
  "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18147",
  "number": 18147,
  "state": "closed",
  "locked": false,
  "title": "qt: Kill the locale dependency bug class by not allowing Qt to mess with LC_NUMERIC",
  "user": {
    "login": "practicalswift",
    "id": 7826565,
    "node_id": "MDQ6VXNlcjc4MjY1NjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/practicalswift",
    "html_url": "https://github.com/practicalswift",
    "followers_url": "https://api.github.com/users/practicalswift/followers",
    "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
    "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
    "organizations_url": "https://api.github.com/users/practicalswift/orgs",
    "repos_url": "https://api.github.com/users/practicalswift/repos",
    "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
    "received_events_url": "https://api.github.com/users/practicalswift/received_events",
    "type": "User",
    "site_admin": false
  },
  "body": "Kill the locale dependency bug class by not allowing Qt to mess with `LC_NUMERIC`.\r\n\r\nContext: #18124 (Recommended reading if you are unsure about how C and C++ locales work in C++)\r\n\r\n**Guaranteed locale settings before this PR:**\r\n\r\n| Program        | C locale category `LC_NUMERIC` | Global C++ locale (`std::locale`) |\r\n| ------------- | ------------- | ----- |\r\n| `bitcoind`      | `C` (classic) | `C` (classic) |\r\n| `bitcoin-qt`      | No guarantee - user-specified  | `C` (classic) |\r\n\r\n**Guaranteed locale settings after this PR:**\r\n\r\n| Program        | C locale category `LC_NUMERIC` | Global C++ locale (`std::locale`) |\r\n| ------------- | ------------- | ----- |\r\n| `bitcoind`      | `C` (classic) | `C` (classic) |\r\n| `bitcoin-qt`      | `C` (classic)  | `C` (classic) |\r\n\r\n**Background:**\r\n\r\nPerhaps surprisingly Qt runs `setlocale(LC_ALL, \"\")` on initialization. This installs the locale specified by the user's `LC_ALL` (or `LC_*`) environment variable as the new C locale.\r\n\r\nIn contrast `bitcoind` does not opt-in to localization -- no call to `setlocale(LC_ALL, \"\")` (or `std::locale::global(std::locale(\"\"))`) is made and the environment variables `LC_*` are thus ignored.\r\n\r\nThis results in an unfortunate situation where the `bitcoind` is guaranteed to be running with the classic locale (`\"C\"`) whereas the locale of `bitcoin-qt` will vary depending on the user's environment variables.\r\n\r\nAn example: Assuming the environment variable `LC_ALL=de_DE` then the call `std::to_string(1.23)` will return `\"1.230000\"` in `bitcoind` but `\"1,230000\"` in `bitcoin-qt`.\r\n\r\nFrom the [Qt documentation](https://doc.qt.io/qt-5/qcoreapplication.html):\r\n\r\n> \"On Unix/Linux Qt is configured to use the system locale settings by default. This can cause a conflict when using POSIX functions, for instance, when converting between data types such as floats and strings, since the notation may differ between locales. To get around this problem, call the POSIX function `setlocale(LC_NUMERIC,\"C\")` right after initializing `QApplication`, `QGuiApplication` or `QCoreApplication` to reset the locale that is used for number formatting to \"C\"-locale.\"\r\n\r\n---\r\n\r\nC and C++ locales 101:\r\n\r\n```c++\r\n#include <clocale>\r\n#include <cstdlib>\r\n#include <iostream>\r\n#include <locale>\r\n#include <sstream>\r\n#include <string>\r\n\r\nint main(void)\r\n{\r\n    std::cout << \"C locale at beginning of main: \" << std::string{setlocale(LC_ALL, nullptr)} << \"\\n\";\r\n    std::cout << \"C++ locale at beginning of main: \" << std::locale{}.name() << \"\\n\\n\";\r\n#if OPT_IN_TO_LOCALIZATION_USING_SET_LOCALE\r\n    setlocale(LC_ALL, \"\");\r\n#endif\r\n#if OPT_IN_TO_LOCALIZATION_USING_STD_LOCALE_GLOBAL\r\n    std::locale::global(std::locale(\"\"));\r\n#endif\r\n    std::ostringstream oss;\r\n    oss << 1000000;\r\n    std::cout << \"std::ostringstream oss; oss << 1000000; oss.str() equals \" << oss.str() << \"\\n\";\r\n    std::cout << \"std::to_string(1.23) equals \" << std::to_string(1.23) << \"\\n\\n\";\r\n    std::cout << \"C locale at end of main: \" << std::string{setlocale(LC_ALL, nullptr)} << \"\\n\";\r\n    std::cout << \"C++ locale at end of main: \" << std::locale{}.name() << \"\\n\\n\";\r\n    std::cout << \"setlocale(LC_COLLATE,  nullptr) (read-only operation) = \" << std::string{setlocale(LC_COLLATE, nullptr)} << \"\\n\";\r\n    std::cout << \"setlocale(LC_CTYPE,    nullptr) (read-only operation) = \" << std::string{setlocale(LC_CTYPE, nullptr)} << \"\\n\";\r\n    std::cout << \"setlocale(LC_MESSAGES, nullptr) (read-only operation) = \" << std::string{setlocale(LC_MESSAGES, nullptr)} << \"\\n\";\r\n    std::cout << \"setlocale(LC_MONETARY, nullptr) (read-only operation) = \" << std::string{setlocale(LC_MONETARY, nullptr)} << \"\\n\";\r\n    std::cout << \"setlocale(LC_NUMERIC,  nullptr) (read-only operation) = \" << std::string{setlocale(LC_NUMERIC, nullptr)} << \"\\n\";\r\n    std::cout << \"setlocale(LC_TIME,     nullptr) (read-only operation) = \" << std::string{setlocale(LC_TIME, nullptr)} << \"\\n\";\r\n}\r\n```\r\n\r\nLet's try with `LC_ALL=de_DE ./l8n` without any opt-in to locale dependence:\r\n\r\n```\r\n$ clang++ -o l8n l8n.cpp\r\n$ LC_ALL=de_DE ./l8n\r\nC locale at beginning of main: C\r\nC++ locale at beginning of main: C\r\n\r\nstd::ostringstream oss; oss << 1000000; oss.str() equals 1000000\r\nstd::to_string(1.23) equals 1.230000\r\n\r\nC locale at end of main: C\r\nC++ locale at end of main: C\r\n\r\nsetlocale(LC_COLLATE,  nullptr) (read-only operation) = C\r\nsetlocale(LC_CTYPE,    nullptr) (read-only operation) = C\r\nsetlocale(LC_MESSAGES, nullptr) (read-only operation) = C\r\nsetlocale(LC_MONETARY, nullptr) (read-only operation) = C\r\nsetlocale(LC_NUMERIC,  nullptr) (read-only operation) = C\r\nsetlocale(LC_TIME,     nullptr) (read-only operation) = C\r\n```\r\n\r\nLet's try with `LC_NUMERIC=de_DE ./l8n` without any opt-in to locale dependence:\r\n\r\n```\r\n$ clang++ -o l8n l8n.cpp\r\n$ LC_NUMERIC=de_DE ./l8n\r\nC locale at beginning of main: C\r\nC++ locale at beginning of main: C\r\n\r\nstd::ostringstream oss; oss << 1000000; oss.str() equals 1000000\r\nstd::to_string(1.23) equals 1.230000\r\n\r\nC locale at end of main: C\r\nC++ locale at end of main: C\r\n\r\nsetlocale(LC_COLLATE,  nullptr) (read-only operation) = C\r\nsetlocale(LC_CTYPE,    nullptr) (read-only operation) = C\r\nsetlocale(LC_MESSAGES, nullptr) (read-only operation) = C\r\nsetlocale(LC_MONETARY, nullptr) (read-only operation) = C\r\nsetlocale(LC_NUMERIC,  nullptr) (read-only operation) = C\r\nsetlocale(LC_TIME,     nullptr) (read-only operation) = C\r\n```\r\n\r\nLet's try `LC_ALL=de_DE ./l8n` with opt-in to locale dependence using `set_locale`:\r\n\r\n```\r\n$ clang++ -DOPT_IN_TO_LOCALIZATION_USING_SET_LOCALE -o l8n l8n.cpp\r\n$ LC_ALL=de_DE ./l8n\r\nC locale at beginning of main: C\r\nC++ locale at beginning of main: C\r\n\r\nstd::ostringstream oss; oss << 1000000; oss.str() equals 1000000\r\nstd::to_string(1.23) equals 1,230000\r\n\r\nC locale at end of main: de_DE\r\nC++ locale at end of main: C\r\n\r\nsetlocale(LC_COLLATE,  nullptr) (read-only operation) = de_DE\r\nsetlocale(LC_CTYPE,    nullptr) (read-only operation) = de_DE\r\nsetlocale(LC_MESSAGES, nullptr) (read-only operation) = de_DE\r\nsetlocale(LC_MONETARY, nullptr) (read-only operation) = de_DE\r\nsetlocale(LC_NUMERIC,  nullptr) (read-only operation) = de_DE\r\nsetlocale(LC_TIME,     nullptr) (read-only operation) = de_DE\r\n```\r\n\r\nLet's try `LC_ALL=de_DE ./l8n` with opt-in to locale dependence using `std::locale::global`:\r\n\r\n```\r\n$ clang++ -DOPT_IN_TO_LOCALIZATION_USING_STD_LOCALE_GLOBAL -o l8n l8n.cpp\r\n$ LC_ALL=de_DE ./l8n\r\nC locale at beginning of main: C\r\nC++ locale at beginning of main: C\r\n\r\nstd::ostringstream oss; oss << 1000000; oss.str() equals 1.000.000\r\nstd::to_string(1.23) equals 1,230000\r\n\r\nC locale at end of main: de_DE\r\nC++ locale at end of main: de_DE\r\n\r\nsetlocale(LC_COLLATE,  nullptr) (read-only operation) = de_DE\r\nsetlocale(LC_CTYPE,    nullptr) (read-only operation) = de_DE\r\nsetlocale(LC_MESSAGES, nullptr) (read-only operation) = de_DE\r\nsetlocale(LC_MONETARY, nullptr) (read-only operation) = de_DE\r\nsetlocale(LC_NUMERIC,  nullptr) (read-only operation) = de_DE\r\nsetlocale(LC_TIME,     nullptr) (read-only operation) = de_DE\r\n```",
  "created_at": "2020-02-14T15:33:16Z",
  "updated_at": "2021-04-10T19:40:16Z",
  "closed_at": "2020-04-29T14:40:16Z",
  "merged_at": null,
  "merge_commit_sha": "0290d52f0346fb90985d7aaca9f6eda2ef936877",
  "assignee": null,
  "assignees": [],
  "requested_reviewers": [],
  "requested_teams": [],
  "labels": [
    {
      "id": 135946,
      "node_id": "MDU6TGFiZWwxMzU5NDY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/GUI",
      "name": "GUI",
      "color": "02d7e1",
      "default": false,
      "description": null
    },
    {
      "id": 62963516,
      "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
      "name": "Tests",
      "color": "d4c5f9",
      "default": false,
      "description": null
    }
  ],
  "milestone": null,
  "draft": false,
  "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18147/commits",
  "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18147/comments",
  "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments{/number}",
  "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18147/comments",
  "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/26be1813972017d0cc364fb110621366e35ae6af",
  "head": {
    "label": "practicalswift:kill-locale-dependency-bug-class",
    "ref": "kill-locale-dependency-bug-class",
    "sha": "26be1813972017d0cc364fb110621366e35ae6af",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "repo": {
      "id": 78569642,
      "node_id": "MDEwOlJlcG9zaXRvcnk3ODU2OTY0Mg==",
      "name": "bitcoin",
      "full_name": "practicalswift/bitcoin",
      "private": false,
      "owner": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
        "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/practicalswift/bitcoin",
      "description": "Bitcoin Core integration/staging tree",
      "fork": true,
      "url": "https://api.github.com/repos/practicalswift/bitcoin",
      "forks_url": "https://api.github.com/repos/practicalswift/bitcoin/forks",
      "keys_url": "https://api.github.com/repos/practicalswift/bitcoin/keys{/key_id}",
      "collaborators_url": "https://api.github.com/repos/practicalswift/bitcoin/collaborators{/collaborator}",
      "teams_url": "https://api.github.com/repos/practicalswift/bitcoin/teams",
      "hooks_url": "https://api.github.com/repos/practicalswift/bitcoin/hooks",
      "issue_events_url": "https://api.github.com/repos/practicalswift/bitcoin/issues/events{/number}",
      "events_url": "https://api.github.com/repos/practicalswift/bitcoin/events",
      "assignees_url": "https://api.github.com/repos/practicalswift/bitcoin/assignees{/user}",
      "branches_url": "https://api.github.com/repos/practicalswift/bitcoin/branches{/branch}",
      "tags_url": "https://api.github.com/repos/practicalswift/bitcoin/tags",
      "blobs_url": "https://api.github.com/repos/practicalswift/bitcoin/git/blobs{/sha}",
      "git_tags_url": "https://api.github.com/repos/practicalswift/bitcoin/git/tags{/sha}",
      "git_refs_url": "https://api.github.com/repos/practicalswift/bitcoin/git/refs{/sha}",
      "trees_url": "https://api.github.com/repos/practicalswift/bitcoin/git/trees{/sha}",
      "statuses_url": "https://api.github.com/repos/practicalswift/bitcoin/statuses/{sha}",
      "languages_url": "https://api.github.com/repos/practicalswift/bitcoin/languages",
      "stargazers_url": "https://api.github.com/repos/practicalswift/bitcoin/stargazers",
      "contributors_url": "https://api.github.com/repos/practicalswift/bitcoin/contributors",
      "subscribers_url": "https://api.github.com/repos/practicalswift/bitcoin/subscribers",
      "subscription_url": "https://api.github.com/repos/practicalswift/bitcoin/subscription",
      "commits_url": "https://api.github.com/repos/practicalswift/bitcoin/commits{/sha}",
      "git_commits_url": "https://api.github.com/repos/practicalswift/bitcoin/git/commits{/sha}",
      "comments_url": "https://api.github.com/repos/practicalswift/bitcoin/comments{/number}",
      "issue_comment_url": "https://api.github.com/repos/practicalswift/bitcoin/issues/comments{/number}",
      "contents_url": "https://api.github.com/repos/practicalswift/bitcoin/contents/{+path}",
      "compare_url": "https://api.github.com/repos/practicalswift/bitcoin/compare/{base}...{head}",
      "merges_url": "https://api.github.com/repos/practicalswift/bitcoin/merges",
      "archive_url": "https://api.github.com/repos/practicalswift/bitcoin/{archive_format}{/ref}",
      "downloads_url": "https://api.github.com/repos/practicalswift/bitcoin/downloads",
      "issues_url": "https://api.github.com/repos/practicalswift/bitcoin/issues{/number}",
      "pulls_url": "https://api.github.com/repos/practicalswift/bitcoin/pulls{/number}",
      "milestones_url": "https://api.github.com/repos/practicalswift/bitcoin/milestones{/number}",
      "notifications_url": "https://api.github.com/repos/practicalswift/bitcoin/notifications{?since,all,participating}",
      "labels_url": "https://api.github.com/repos/practicalswift/bitcoin/labels{/name}",
      "releases_url": "https://api.github.com/repos/practicalswift/bitcoin/releases{/id}",
      "deployments_url": "https://api.github.com/repos/practicalswift/bitcoin/deployments",
      "created_at": "2017-01-10T20:09:24Z",
      "updated_at": "2021-04-26T14:37:37Z",
      "pushed_at": "2021-10-01T13:54:08Z",
      "git_url": "git://github.com/practicalswift/bitcoin.git",
      "ssh_url": "git@github.com:practicalswift/bitcoin.git",
      "clone_url": "https://github.com/practicalswift/bitcoin.git",
      "svn_url": "https://github.com/practicalswift/bitcoin",
      "homepage": "https://bitcoin.org/en/download",
      "size": 164685,
      "stargazers_count": 4,
      "watchers_count": 4,
      "language": "C++",
      "has_issues": false,
      "has_projects": true,
      "has_downloads": false,
      "has_wiki": false,
      "has_pages": false,
      "forks_count": 0,
      "mirror_url": null,
      "archived": false,
      "disabled": false,
      "open_issues_count": 0,
      "license": {
        "key": "mit",
        "name": "MIT License",
        "spdx_id": "MIT",
        "url": "https://api.github.com/licenses/mit",
        "node_id": "MDc6TGljZW5zZTEz"
      },
      "allow_forking": true,
      "is_template": false,
      "topics": [],
      "visibility": "public",
      "forks": 0,
      "open_issues": 0,
      "watchers": 4,
      "default_branch": "master"
    }
  },
  "base": {
    "label": "bitcoin:master",
    "ref": "master",
    "sha": "7f9dedb22dcd9550ca525c0e35fec38b2d59e029",
    "user": {
      "login": "bitcoin",
      "id": 528860,
      "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bitcoin",
      "html_url": "https://github.com/bitcoin",
      "followers_url": "https://api.github.com/users/bitcoin/followers",
      "following_url": "https://api.github.com/users/bitcoin/following{/other_user}",
      "gists_url": "https://api.github.com/users/bitcoin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bitcoin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
      "organizations_url": "https://api.github.com/users/bitcoin/orgs",
      "repos_url": "https://api.github.com/users/bitcoin/repos",
      "events_url": "https://api.github.com/users/bitcoin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bitcoin/received_events",
      "type": "Organization",
      "site_admin": false
    },
    "repo": {
      "id": 1181927,
      "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
      "name": "bitcoin",
      "full_name": "bitcoin/bitcoin",
      "private": false,
      "owner": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following{/other_user}",
        "gists_url": "https://api.github.com/users/bitcoin/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/bitcoin/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events{/privacy}",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin",
      "description": "Bitcoin Core integration/staging tree",
      "fork": false,
      "url": "https://api.github.com/repos/bitcoin/bitcoin",
      "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
      "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys{/key_id}",
      "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators{/collaborator}",
      "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
      "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
      "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events{/number}",
      "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
      "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees{/user}",
      "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches{/branch}",
      "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
      "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs{/sha}",
      "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags{/sha}",
      "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs{/sha}",
      "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees{/sha}",
      "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/{sha}",
      "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
      "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
      "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
      "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
      "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
      "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits{/sha}",
      "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits{/sha}",
      "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments{/number}",
      "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments{/number}",
      "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/{+path}",
      "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/{base}...{head}",
      "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
      "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/{archive_format}{/ref}",
      "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
      "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues{/number}",
      "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls{/number}",
      "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones{/number}",
      "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications{?since,all,participating}",
      "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels{/name}",
      "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases{/id}",
      "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
      "created_at": "2010-12-19T15:16:43Z",
      "updated_at": "2021-12-02T06:25:25Z",
      "pushed_at": "2021-12-02T06:16:37Z",
      "git_url": "git://github.com/bitcoin/bitcoin.git",
      "ssh_url": "git@github.com:bitcoin/bitcoin.git",
      "clone_url": "https://github.com/bitcoin/bitcoin.git",
      "svn_url": "https://github.com/bitcoin/bitcoin",
      "homepage": "https://bitcoincore.org/en/download",
      "size": 188182,
      "stargazers_count": 59735,
      "watchers_count": 59735,
      "language": "C++",
      "has_issues": true,
      "has_projects": true,
      "has_downloads": false,
      "has_wiki": false,
      "has_pages": false,
      "forks_count": 30710,
      "mirror_url": null,
      "archived": false,
      "disabled": false,
      "open_issues_count": 1023,
      "license": {
        "key": "mit",
        "name": "MIT License",
        "spdx_id": "MIT",
        "url": "https://api.github.com/licenses/mit",
        "node_id": "MDc6TGljZW5zZTEz"
      },
      "allow_forking": true,
      "is_template": false,
      "topics": [
        "bitcoin",
        "c-plus-plus",
        "cryptocurrency",
        "cryptography",
        "p2p"
      ],
      "visibility": "public",
      "forks": 30710,
      "open_issues": 1023,
      "watchers": 59735,
      "default_branch": "master"
    }
  },
  "_links": {
    "self": {
      "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18147"
    },
    "html": {
      "href": "https://github.com/bitcoin/bitcoin/pull/18147"
    },
    "issue": {
      "href": "https://api.github.com/repos/bitcoin/bitcoin/issues/18147"
    },
    "comments": {
      "href": "https://api.github.com/repos/bitcoin/bitcoin/issues/18147/comments"
    },
    "review_comments": {
      "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18147/comments"
    },
    "review_comment": {
      "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments{/number}"
    },
    "commits": {
      "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18147/commits"
    },
    "statuses": {
      "href": "https://api.github.com/repos/bitcoin/bitcoin/statuses/26be1813972017d0cc364fb110621366e35ae6af"
    }
  },
  "author_association": "CONTRIBUTOR",
  "auto_merge": null,
  "active_lock_reason": null,
  "merged": false,
  "mergeable": null,
  "rebaseable": null,
  "mergeable_state": "unknown",
  "merged_by": null,
  "comments": 14,
  "review_comments": 0,
  "maintainer_can_modify": false,
  "commits": 1,
  "additions": 32,
  "deletions": 0,
  "changed_files": 2
}