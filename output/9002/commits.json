[
  {
    "sha": "515e2642eb45bda56156b1213b25fb4886d3fdbe",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1MTVlMjY0MmViNDViZGE1NjE1NmIxMjEzYjI1ZmI0ODg2ZDNmZGJl",
    "commit": {
      "author": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2016-10-24T01:21:04Z"
      },
      "committer": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2016-10-25T06:17:43Z"
      },
      "message": "Make connect=0 disable automatic outbound connections.\n\nOtherwise it just responds to this obvious bit of configuration by\n trying to connect to \"0\" in a loop.",
      "tree": {
        "sha": "bf617d9ee69354546bff5f947ef4bf673caaff94",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bf617d9ee69354546bff5f947ef4bf673caaff94"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/515e2642eb45bda56156b1213b25fb4886d3fdbe",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/515e2642eb45bda56156b1213b25fb4886d3fdbe",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/515e2642eb45bda56156b1213b25fb4886d3fdbe",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/515e2642eb45bda56156b1213b25fb4886d3fdbe/comments",
    "author": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f08222e882b18c1f279308636e03beceece2dbf1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f08222e882b18c1f279308636e03beceece2dbf1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f08222e882b18c1f279308636e03beceece2dbf1"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 6,
      "deletions": 5
    },
    "files": [
      {
        "sha": "84b0108ea8770342409de66a21aa8c2f951b0094",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/515e2642eb45bda56156b1213b25fb4886d3fdbe/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/515e2642eb45bda56156b1213b25fb4886d3fdbe/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=515e2642eb45bda56156b1213b25fb4886d3fdbe",
        "patch": "@@ -359,13 +359,13 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += HelpMessageOpt(\"-banscore=<n>\", strprintf(_(\"Threshold for disconnecting misbehaving peers (default: %u)\"), DEFAULT_BANSCORE_THRESHOLD));\n     strUsage += HelpMessageOpt(\"-bantime=<n>\", strprintf(_(\"Number of seconds to keep misbehaving peers from reconnecting (default: %u)\"), DEFAULT_MISBEHAVING_BANTIME));\n     strUsage += HelpMessageOpt(\"-bind=<addr>\", _(\"Bind to given address and always listen on it. Use [host]:port notation for IPv6\"));\n-    strUsage += HelpMessageOpt(\"-connect=<ip>\", _(\"Connect only to the specified node(s)\"));\n+    strUsage += HelpMessageOpt(\"-connect=<ip>\", _(\"Connect only to the specified node(s); -noconnect or -connect=0 alone to disable automatic connections\"));\n     strUsage += HelpMessageOpt(\"-discover\", _(\"Discover own IP addresses (default: 1 when listening and no -externalip or -proxy)\"));\n     strUsage += HelpMessageOpt(\"-dns\", _(\"Allow DNS lookups for -addnode, -seednode and -connect\") + \" \" + strprintf(_(\"(default: %u)\"), DEFAULT_NAME_LOOKUP));\n-    strUsage += HelpMessageOpt(\"-dnsseed\", _(\"Query for peer addresses via DNS lookup, if low on addresses (default: 1 unless -connect)\"));\n+    strUsage += HelpMessageOpt(\"-dnsseed\", _(\"Query for peer addresses via DNS lookup, if low on addresses (default: 1 unless -connect/-noconnect)\"));\n     strUsage += HelpMessageOpt(\"-externalip=<ip>\", _(\"Specify your own public address\"));\n     strUsage += HelpMessageOpt(\"-forcednsseed\", strprintf(_(\"Always query for peer addresses via DNS lookup (default: %u)\"), DEFAULT_FORCEDNSSEED));\n-    strUsage += HelpMessageOpt(\"-listen\", _(\"Accept connections from outside (default: 1 if no -proxy or -connect)\"));\n+    strUsage += HelpMessageOpt(\"-listen\", _(\"Accept connections from outside (default: 1 if no -proxy or -connect/-noconnect)\"));\n     strUsage += HelpMessageOpt(\"-listenonion\", strprintf(_(\"Automatically create Tor hidden service (default: %d)\"), DEFAULT_LISTEN_ONION));\n     strUsage += HelpMessageOpt(\"-maxconnections=<n>\", strprintf(_(\"Maintain at most <n> connections to peers (default: %u)\"), DEFAULT_MAX_PEER_CONNECTIONS));\n     strUsage += HelpMessageOpt(\"-maxreceivebuffer=<n>\", strprintf(_(\"Maximum per-connection receive buffer, <n>*1000 bytes (default: %u)\"), DEFAULT_MAXRECEIVEBUFFER));"
      },
      {
        "sha": "953377a9f0c239e155eaeb32795c52684821951d",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/515e2642eb45bda56156b1213b25fb4886d3fdbe/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/515e2642eb45bda56156b1213b25fb4886d3fdbe/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=515e2642eb45bda56156b1213b25fb4886d3fdbe",
        "patch": "@@ -2138,8 +2138,9 @@ bool CConnman::Start(boost::thread_group& threadGroup, CScheduler& scheduler, st\n     // Initiate outbound connections from -addnode\n     threadGroup.create_thread(boost::bind(&TraceThread<boost::function<void()> >, \"addcon\", boost::function<void()>(boost::bind(&CConnman::ThreadOpenAddedConnections, this))));\n \n-    // Initiate outbound connections\n-    threadGroup.create_thread(boost::bind(&TraceThread<boost::function<void()> >, \"opencon\", boost::function<void()>(boost::bind(&CConnman::ThreadOpenConnections, this))));\n+    // Initiate outbound connections unless connect=0\n+    if (!mapArgs.count(\"-connect\") || mapMultiArgs[\"-connect\"].size() != 1 || mapMultiArgs[\"-connect\"][0] != \"0\")\n+        threadGroup.create_thread(boost::bind(&TraceThread<boost::function<void()> >, \"opencon\", boost::function<void()>(boost::bind(&CConnman::ThreadOpenConnections, this))));\n \n     // Process messages\n     threadGroup.create_thread(boost::bind(&TraceThread<boost::function<void()> >, \"msghand\", boost::function<void()>(boost::bind(&CConnman::ThreadMessageHandler, this))));"
      }
    ]
  }
]