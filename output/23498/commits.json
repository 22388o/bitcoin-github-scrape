[
  {
    "sha": "a9872e1478af10ca335cca32abd248e87e103c02",
    "node_id": "C_kwDOABII59oAKGE5ODcyZTE0NzhhZjEwY2EzMzVjY2EzMmFiZDI0OGU4N2UxMDNjMDI",
    "commit": {
      "author": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2021-11-12T17:29:43Z"
      },
      "committer": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2021-11-12T17:29:43Z"
      },
      "message": "test: remove unnecessary block rehashing prior to solving\n\nSolving a block involves continously rehashing it, i.e. any extra\ncalls to rehash it before are not necessary and can be dropped.",
      "tree": {
        "sha": "4cc5005debf054d56e729c51fb46685c031544b4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4cc5005debf054d56e729c51fb46685c031544b4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a9872e1478af10ca335cca32abd248e87e103c02",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a9872e1478af10ca335cca32abd248e87e103c02",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a9872e1478af10ca335cca32abd248e87e103c02",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a9872e1478af10ca335cca32abd248e87e103c02/comments",
    "author": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c9dd5c8d6e59e27af98e99d2844d6ead8eec3162",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c9dd5c8d6e59e27af98e99d2844d6ead8eec3162",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c9dd5c8d6e59e27af98e99d2844d6ead8eec3162"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 0,
      "deletions": 20
    },
    "files": [
      {
        "sha": "66092de317892bfc2309dc97f44d5b4ee885e796",
        "filename": "test/functional/feature_assumevalid.py",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a9872e1478af10ca335cca32abd248e87e103c02/test/functional/feature_assumevalid.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a9872e1478af10ca335cca32abd248e87e103c02/test/functional/feature_assumevalid.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_assumevalid.py?ref=a9872e1478af10ca335cca32abd248e87e103c02",
        "patch": "@@ -126,7 +126,6 @@ def run_test(self):\n         self.block_time += 1\n         block102.vtx.extend([tx])\n         block102.hashMerkleRoot = block102.calc_merkle_root()\n-        block102.rehash()\n         block102.solve()\n         self.blocks.append(block102)\n         self.tip = block102.sha256"
      },
      {
        "sha": "0c29a782b13b03be2e62fe77233d09f64023f0c2",
        "filename": "test/functional/feature_bip68_sequence.py",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a9872e1478af10ca335cca32abd248e87e103c02/test/functional/feature_bip68_sequence.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a9872e1478af10ca335cca32abd248e87e103c02/test/functional/feature_bip68_sequence.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_bip68_sequence.py?ref=a9872e1478af10ca335cca32abd248e87e103c02",
        "patch": "@@ -335,7 +335,6 @@ def test_nonzero_locks(orig_tx, node, relayfee, use_height_lock):\n         # tx3 to be removed.\n         for i in range(2):\n             block = create_block(tmpl=tmpl, ntime=cur_time)\n-            block.rehash()\n             block.solve()\n             tip = block.sha256\n             assert_equal(None if i == 1 else 'inconclusive', self.nodes[0].submitblock(block.serialize().hex()))\n@@ -392,7 +391,6 @@ def test_bip68_not_consensus(self):\n         block = create_block(tmpl=self.nodes[0].getblocktemplate(NORMAL_GBT_REQUEST_PARAMS))\n         block.vtx.extend([tx1, tx2, tx3])\n         block.hashMerkleRoot = block.calc_merkle_root()\n-        block.rehash()\n         add_witness_commitment(block)\n         block.solve()\n "
      },
      {
        "sha": "7831984b81177f1d0285f75079bccda4e5e110f0",
        "filename": "test/functional/feature_block.py",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a9872e1478af10ca335cca32abd248e87e103c02/test/functional/feature_block.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a9872e1478af10ca335cca32abd248e87e103c02/test/functional/feature_block.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_block.py?ref=a9872e1478af10ca335cca32abd248e87e103c02",
        "patch": "@@ -612,7 +612,6 @@ def run_test(self):\n         b45.nBits = 0x207fffff\n         b45.vtx.append(non_coinbase)\n         b45.hashMerkleRoot = b45.calc_merkle_root()\n-        b45.calc_sha256()\n         b45.solve()\n         self.block_heights[b45.sha256] = self.block_heights[self.tip.sha256] + 1\n         self.tip = b45"
      },
      {
        "sha": "c4e2252487207667e9b6350d572e8f2074c57f27",
        "filename": "test/functional/feature_csv_activation.py",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a9872e1478af10ca335cca32abd248e87e103c02/test/functional/feature_csv_activation.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a9872e1478af10ca335cca32abd248e87e103c02/test/functional/feature_csv_activation.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_csv_activation.py?ref=a9872e1478af10ca335cca32abd248e87e103c02",
        "patch": "@@ -177,7 +177,6 @@ def create_test_block(self, txs):\n         block.nVersion = 4\n         block.vtx.extend(txs)\n         block.hashMerkleRoot = block.calc_merkle_root()\n-        block.rehash()\n         block.solve()\n         return block\n "
      },
      {
        "sha": "eba3809d2459fb4f9720b862a720254de9016db5",
        "filename": "test/functional/feature_dersig.py",
        "status": "modified",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a9872e1478af10ca335cca32abd248e87e103c02/test/functional/feature_dersig.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a9872e1478af10ca335cca32abd248e87e103c02/test/functional/feature_dersig.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_dersig.py?ref=a9872e1478af10ca335cca32abd248e87e103c02",
        "patch": "@@ -88,7 +88,6 @@ def run_test(self):\n         block = create_block(int(tip, 16), create_coinbase(DERSIG_HEIGHT - 1), block_time)\n         block.vtx.append(spendtx)\n         block.hashMerkleRoot = block.calc_merkle_root()\n-        block.rehash()\n         block.solve()\n \n         assert_equal(self.nodes[0].getblockcount(), DERSIG_HEIGHT - 2)\n@@ -103,7 +102,6 @@ def run_test(self):\n         block_time += 1\n         block = create_block(tip, create_coinbase(DERSIG_HEIGHT), block_time)\n         block.nVersion = 2\n-        block.rehash()\n         block.solve()\n \n         with self.nodes[0].assert_debug_log(expected_msgs=[f'{block.hash}, bad-version(0x00000002)']):\n@@ -133,7 +131,6 @@ def run_test(self):\n         # Now we verify that a block with this transaction is also invalid.\n         block.vtx.append(spendtx)\n         block.hashMerkleRoot = block.calc_merkle_root()\n-        block.rehash()\n         block.solve()\n \n         with self.nodes[0].assert_debug_log(expected_msgs=[f'CheckInputScripts on {block.vtx[-1].hash} failed with non-mandatory-script-verify-flag (Non-canonical DER signature)']):\n@@ -144,7 +141,6 @@ def run_test(self):\n         self.log.info(\"Test that a block with a DERSIG-compliant transaction is accepted\")\n         block.vtx[1] = self.create_tx(self.coinbase_txids[1])\n         block.hashMerkleRoot = block.calc_merkle_root()\n-        block.rehash()\n         block.solve()\n \n         self.test_dersig_info(is_active=True)  # Not active as of current tip, but next block must obey rules"
      },
      {
        "sha": "04c4e7e50c20c436cbe0a636bf2d28e48b58ca34",
        "filename": "test/functional/feature_nulldummy.py",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a9872e1478af10ca335cca32abd248e87e103c02/test/functional/feature_nulldummy.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a9872e1478af10ca335cca32abd248e87e103c02/test/functional/feature_nulldummy.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_nulldummy.py?ref=a9872e1478af10ca335cca32abd248e87e103c02",
        "patch": "@@ -130,7 +130,6 @@ def block_submit(self, node, txs, *, with_witness=False, accept):\n         block.hashMerkleRoot = block.calc_merkle_root()\n         if with_witness:\n             add_witness_commitment(block)\n-        block.rehash()\n         block.solve()\n         assert_equal(None if accept else NULLDUMMY_ERROR, node.submitblock(block.serialize().hex()))\n         if accept:"
      },
      {
        "sha": "5f90e49de166c87bc733f77b9bb437d538082dae",
        "filename": "test/functional/feature_taproot.py",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a9872e1478af10ca335cca32abd248e87e103c02/test/functional/feature_taproot.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a9872e1478af10ca335cca32abd248e87e103c02/test/functional/feature_taproot.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_taproot.py?ref=a9872e1478af10ca335cca32abd248e87e103c02",
        "patch": "@@ -1240,7 +1240,6 @@ def block_submit(self, node, txs, msg, err_msg, cb_pubkey=None, fees=0, sigops_w\n             block.vtx.append(tx)\n         block.hashMerkleRoot = block.calc_merkle_root()\n         witness and add_witness_commitment(block)\n-        block.rehash()\n         block.solve()\n         block_response = node.submitblock(block.serialize().hex())\n         if err_msg is not None:\n@@ -1488,7 +1487,6 @@ def run_test(self):\n         # Mine a block with the transaction\n         block = create_block(tmpl=self.nodes[1].getblocktemplate(NORMAL_GBT_REQUEST_PARAMS), txlist=[rawtx])\n         add_witness_commitment(block)\n-        block.rehash()\n         block.solve()\n         assert_equal(None, self.nodes[1].submitblock(block.serialize().hex()))\n         self.sync_blocks()"
      },
      {
        "sha": "6eb8b8767d809802ddd6e4e789f499a2f8ef0106",
        "filename": "test/functional/p2p_invalid_block.py",
        "status": "modified",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a9872e1478af10ca335cca32abd248e87e103c02/test/functional/p2p_invalid_block.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a9872e1478af10ca335cca32abd248e87e103c02/test/functional/p2p_invalid_block.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_invalid_block.py?ref=a9872e1478af10ca335cca32abd248e87e103c02",
        "patch": "@@ -75,7 +75,6 @@ def run_test(self):\n \n         block2.vtx.extend([tx1, tx2])\n         block2.hashMerkleRoot = block2.calc_merkle_root()\n-        block2.rehash()\n         block2.solve()\n         orig_hash = block2.sha256\n         block2_orig = copy.deepcopy(block2)\n@@ -95,7 +94,6 @@ def run_test(self):\n         block2_dup.vtx[2].vin.append(block2_dup.vtx[2].vin[0])\n         block2_dup.vtx[2].rehash()\n         block2_dup.hashMerkleRoot = block2_dup.calc_merkle_root()\n-        block2_dup.rehash()\n         block2_dup.solve()\n         peer.send_blocks_and_test([block2_dup], node, success=False, reject_reason='bad-txns-inputs-duplicate')\n \n@@ -107,7 +105,6 @@ def run_test(self):\n         block3.vtx[0].sha256 = None\n         block3.vtx[0].calc_sha256()\n         block3.hashMerkleRoot = block3.calc_merkle_root()\n-        block3.rehash()\n         block3.solve()\n \n         peer.send_blocks_and_test([block3], node, success=False, reject_reason='bad-cb-amount')\n@@ -134,7 +131,6 @@ def run_test(self):\n         tx3.rehash()\n         block4.vtx.append(tx3)\n         block4.hashMerkleRoot = block4.calc_merkle_root()\n-        block4.rehash()\n         block4.solve()\n         self.log.info(\"Test inflation by duplicating input\")\n         peer.send_blocks_and_test([block4], node, success=False,  reject_reason='bad-txns-inputs-duplicate')"
      },
      {
        "sha": "99bf34912f139984ac2527c3e89e21d9e8f9657f",
        "filename": "test/functional/p2p_segwit.py",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a9872e1478af10ca335cca32abd248e87e103c02/test/functional/p2p_segwit.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a9872e1478af10ca335cca32abd248e87e103c02/test/functional/p2p_segwit.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_segwit.py?ref=a9872e1478af10ca335cca32abd248e87e103c02",
        "patch": "@@ -790,7 +790,6 @@ def test_witness_commitments(self):\n         block_3.vtx[0].vout.append(CTxOut(0, CScript([OP_RETURN, WITNESS_COMMITMENT_HEADER + ser_uint256(2), 10])))\n         block_3.vtx[0].rehash()\n         block_3.hashMerkleRoot = block_3.calc_merkle_root()\n-        block_3.rehash()\n         block_3.solve()\n \n         test_witness_block(self.nodes[0], self.test_node, block_3, accepted=False, reason='bad-witness-merkle-match')\n@@ -804,7 +803,6 @@ def test_witness_commitments(self):\n         block_3.vtx[0].vout[-1].nValue += 1\n         block_3.vtx[0].rehash()\n         block_3.hashMerkleRoot = block_3.calc_merkle_root()\n-        block_3.rehash()\n         assert len(block_3.vtx[0].vout) == 4  # 3 OP_returns\n         block_3.solve()\n         test_witness_block(self.nodes[0], self.test_node, block_3, accepted=True)"
      },
      {
        "sha": "063211d5c3176ef0370f08cc8154efe4cd796d5c",
        "filename": "test/functional/wallet_bumpfee.py",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a9872e1478af10ca335cca32abd248e87e103c02/test/functional/wallet_bumpfee.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a9872e1478af10ca335cca32abd248e87e103c02/test/functional/wallet_bumpfee.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_bumpfee.py?ref=a9872e1478af10ca335cca32abd248e87e103c02",
        "patch": "@@ -598,7 +598,6 @@ def submit_block_with_tx(node, tx):\n     block_time = node.getblockheader(tip)[\"mediantime\"] + 1\n     block = create_block(int(tip, 16), create_coinbase(height), block_time)\n     block.vtx.append(ctx)\n-    block.rehash()\n     block.hashMerkleRoot = block.calc_merkle_root()\n     add_witness_commitment(block)\n     block.solve()"
      },
      {
        "sha": "1e0c4f2883d2636c2644ef81ff6a4b828656854b",
        "filename": "test/functional/wallet_resendwallettransactions.py",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a9872e1478af10ca335cca32abd248e87e103c02/test/functional/wallet_resendwallettransactions.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a9872e1478af10ca335cca32abd248e87e103c02/test/functional/wallet_resendwallettransactions.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_resendwallettransactions.py?ref=a9872e1478af10ca335cca32abd248e87e103c02",
        "patch": "@@ -48,7 +48,6 @@ def run_test(self):\n         block_time = int(time.time()) + 6 * 60\n         node.setmocktime(block_time)\n         block = create_block(int(node.getbestblockhash(), 16), create_coinbase(node.getblockcount() + 1), block_time)\n-        block.rehash()\n         block.solve()\n         node.submitblock(block.serialize().hex())\n "
      }
    ]
  }
]