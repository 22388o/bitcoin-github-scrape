[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/920413000",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22976#issuecomment-920413000",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22976",
    "id": 920413000,
    "node_id": "IC_kwDOABII58423GNI",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-15T22:01:16Z",
    "updated_at": "2021-09-25T17:10:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#23095](https://github.com/bitcoin/bitcoin/pull/23095) (refactor: Use C++17 std::clamp by hebasto)\n* [#23061](https://github.com/bitcoin/bitcoin/pull/23061) (Fix (inverse) meaning of -persistmempool by MarcoFalke)\n* [#22950](https://github.com/bitcoin/bitcoin/pull/22950) ([p2p] Pimpl AddrMan to abstract implementation details by amitiuttarwar)\n* [#22674](https://github.com/bitcoin/bitcoin/pull/22674) (validation: mempool validation and submission for packages of 1 child + parents by glozow)\n* [#22290](https://github.com/bitcoin/bitcoin/pull/22290) (Package Mempool Submission with Package Fee-Bumping by glozow)\n* [#21726](https://github.com/bitcoin/bitcoin/pull/21726) (Improve Indices on pruned nodes via prune blockers by fjahr)\n* [#21527](https://github.com/bitcoin/bitcoin/pull/21527) (net_processing: lock clean up by ajtowns)\n* [#20196](https://github.com/bitcoin/bitcoin/pull/20196) (net: fix GetListenPort() to derive the proper port by vasild)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/920413000/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/924676795",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22976#issuecomment-924676795",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22976",
    "id": 924676795,
    "node_id": "IC_kwDOABII5843HXK7",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-22T07:53:16Z",
    "updated_at": "2021-09-22T07:53:16Z",
    "author_association": "MEMBER",
    "body": "Inspected the binary to check that only the right calls (with second argument `long`) are replaced. IIUC the patch should be correct if it compiles, because `GetArg` was only used for types that don't convert into each other (strings and integers).\r\n\r\n<details><summary>git diff --word-diff-regex=. -U0 -- /tmp/{old,new}/d_objdump</summary>\r\n\r\n```\r\ndiff --git a/tmp/old/d_objdump b/tmp/new/d_objdump\r\nindex 6bd4ff20d4..1a2f13bc07 100644\r\n--- a/tmp/old/d_objdump\r\n+++ b/tmp/new/d_objdump\r\n@@ -19346 +19346 @@ Disassembly of section .text:\r\n   3d495:\tcallq  647710 <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const>\r\n@@ -31578 +31578 @@ Disassembly of section .text:\r\n   4d31d:\tcallq  647710 <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const>\r\n@@ -31881 +31881 @@ Disassembly of section .text:\r\n   4d9e8:\tcallq  647710 <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const>\r\n@@ -32610 +32610 @@ Disassembly of section .text:\r\n   4ead3:\tcallq  647710 <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const>\r\n@@ -32635 +32635 @@ Disassembly of section .text:\r\n   4eb70:\tcallq  647710 <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const>\r\n@@ -32732 +32732 @@ Disassembly of section .text:\r\n   4edc9:\tcallq  647710 <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const>\r\n@@ -32858 +32858 @@ Disassembly of section .text:\r\n   4f0ce:\tcallq  647710 <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const>\r\n@@ -32879 +32879 @@ Disassembly of section .text:\r\n   4f14c:\tcallq  647710 <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const>\r\n@@ -33268 +33268 @@ Disassembly of section .text:\r\n   4fad3:\tcallq  647710 <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const>\r\n@@ -33343 +33343 @@ Disassembly of section .text:\r\n   4fca1:\tcallq  647710 <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const>\r\n@@ -33359 +33359 @@ Disassembly of section .text:\r\n   4fd08:\tcallq  647710 <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const>\r\n@@ -33415 +33415 @@ Disassembly of section .text:\r\n   4fe58:\tcallq  647710 <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const>\r\n@@ -33443 +33443 @@ Disassembly of section .text:\r\n   4ff03:\tcallq  647710 <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const>\r\n@@ -33895 +33895 @@ Disassembly of section .text:\r\n   509ac:\tcallq  647710 <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const>\r\n@@ -36937 +36937 @@ Disassembly of section .text:\r\n   54106:\tcallq  647710 <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const>\r\n@@ -37772 +37772 @@ Disassembly of section .text:\r\n   553a7:\tcallq  647710 <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const>\r\n@@ -37909 +37909 @@ Disassembly of section .text:\r\n   55686:\tcallq  647710 <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const>\r\n@@ -39117 +39117 @@ Disassembly of section .text:\r\n   56fec:\tcallq  647710 <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const>\r\n@@ -39219 +39219 @@ Disassembly of section .text:\r\n   571d6:\tcallq  647710 <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const>\r\n@@ -40946 +40946 @@ Disassembly of section .text:\r\n   597cc:\tcallq  647710 <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const>\r\n@@ -41106 +41106 @@ Disassembly of section .text:\r\n   59b40:\tcallq  647710 <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const>\r\n@@ -41118 +41118 @@ Disassembly of section .text:\r\n   59b90:\tcallq  647710 <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const>\r\n@@ -43828 +43828 @@ Disassembly of section .text:\r\n   5d4e2:\tcallq  647710 <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const>\r\n@@ -43855 +43855 @@ Disassembly of section .text:\r\n   5d58f:\tcallq  647710 <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const>\r\n@@ -43940 +43940 @@ Disassembly of section .text:\r\n   5d758:\tcallq  647710 <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const>\r\n@@ -69277 +69277 @@ Disassembly of section .text:\r\n   77720:\tcallq  647710 <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const>\r\n@@ -69457 +69457 @@ Disassembly of section .text:\r\n   77a03:\tcallq  647710 <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const>\r\n@@ -70352 +70352 @@ Disassembly of section .text:\r\n   78880:\tcallq  647710 <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const>\r\n@@ -71732 +71732 @@ Disassembly of section .text:\r\n   7a12c:\tcallq  647710 <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const>\r\n@@ -97948 +97948 @@ Disassembly of section .text:\r\n   97257:\tcallq  647710 <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const>\r\n@@ -97977 +97977 @@ Disassembly of section .text:\r\n   972da:\tcallq  647710 <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const>\r\n@@ -138273 +138273 @@ Disassembly of section .text:\r\n   c20bd:\tcallq  647710 <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const>\r\n@@ -155265 +155265 @@ Disassembly of section .text:\r\n   d6a5a:\tcallq  647710 <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const>\r\n@@ -169911 +169911 @@ Disassembly of section .text:\r\n   e6eea:\tcallq  647710 <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const>\r\n@@ -229830 +229830 @@ Disassembly of section .text:\r\n  123600:\tcallq  647710 <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const>\r\n@@ -229855 +229855 @@ Disassembly of section .text:\r\n  123677:\tcallq  647710 <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const>\r\n@@ -229947 +229947 @@ Disassembly of section .text:\r\n  12383c:\tcallq  647710 <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const>\r\n@@ -229971 +229971 @@ Disassembly of section .text:\r\n  1238d1:\tcallq  647710 <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const>\r\n@@ -229996 +229996 @@ Disassembly of section .text:\r\n  12396e:\tcallq  647710 <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const>\r\n@@ -230022 +230022 @@ Disassembly of section .text:\r\n  123a0f:\tcallq  647710 <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const>\r\n@@ -230302 +230302 @@ Disassembly of section .text:\r\n  123e93:\tcallq  647710 <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const>\r\n@@ -325034 +325034 @@ Disassembly of section .text:\r\n  182109:\tcallq  647710 <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const>\r\n@@ -385583 +385583 @@ Disassembly of section .text:\r\n  1cfd9b:\tcallq  647710 <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const>\r\n@@ -556782 +556782 @@ Disassembly of section .text:\r\n  29fc3a:\tcallq  647710 <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const>\r\n@@ -564683 +564683 @@ Disassembly of section .text:\r\n  2a71a3:\tcallq  647710 <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const>\r\n@@ -573015 +573015 @@ Disassembly of section .text:\r\n  2af871:\tcallq  647710 <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const>\r\n@@ -593321 +593321 @@ Disassembly of section .text:\r\n  2c4f9c:\tcallq  647710 <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const>\r\n@@ -593337 +593337 @@ Disassembly of section .text:\r\n  2c5007:\tcallq  647710 <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const>\r\n@@ -637996 +637996 @@ Disassembly of section .text:\r\n  2f1cb7:\tcallq  647710 <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const>\r\n@@ -638009 +638009 @@ Disassembly of section .text:\r\n  2f1d06:\tcallq  647710 <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const>\r\n@@ -639214 +639214 @@ Disassembly of section .text:\r\n  2f346d:\tcallq  647710 <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const>\r\n@@ -639227 +639227 @@ Disassembly of section .text:\r\n  2f34d1:\tcallq  647710 <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const>\r\n@@ -643073 +643073 @@ Disassembly of section .text:\r\n  2f7dbc:\tcallq  647710 <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const>\r\n@@ -643098 +643098 @@ Disassembly of section .text:\r\n  2f7e33:\tcallq  647710 <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const>\r\n@@ -643124 +643124 @@ Disassembly of section .text:\r\n  2f7eb6:\tcallq  647710 <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const>\r\n@@ -643149 +643149 @@ Disassembly of section .text:\r\n  2f7f2e:\tcallq  647710 <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const>\r\n@@ -645647 +645647 @@ Disassembly of section .text:\r\n  2fa8b7:\tcallq  647710 <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const>\r\n@@ -652571 +652571 @@ Disassembly of section .text:\r\n  302cf5:\tcallq  647710 <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const>\r\n@@ -652776 +652776 @@ Disassembly of section .text:\r\n  3030a3:\tcallq  647710 <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const>\r\n@@ -660428 +660428 @@ Disassembly of section .text:\r\n  30bf6d:\tcallq  647710 <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const>\r\n@@ -671358 +671358 @@ Disassembly of section .text:\r\n  317b1f:\tcallq  647710 <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const>\r\n@@ -671453 +671453 @@ Disassembly of section .text:\r\n  317cb7:\tcallq  647710 <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const>\r\n@@ -683716 +683716 @@ Disassembly of section .text:\r\n  325c04:\tcallq  647710 <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const>\r\n@@ -687507 +687507 @@ Disassembly of section .text:\r\n  32a9c3:\tcallq  647710 <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const>\r\n@@ -722831 +722831 @@ Disassembly of section .text:\r\n  34e94c:\tcallq  647710 <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const>\r\n@@ -774728 +774728 @@ Disassembly of section .text:\r\n  384581:\tcallq  647710 <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const>\r\n@@ -774756 +774756 @@ Disassembly of section .text:\r\n  384613:\tcallq  647710 <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const>\r\n@@ -775515 +775515 @@ Disassembly of section .text:\r\n  385752:\tcallq  647710 <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const>\r\n@@ -778167 +778167 @@ Disassembly of section .text:\r\n  38890b:\tcallq  647710 <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const>\r\n@@ -816776 +816776 @@ Disassembly of section .text:\r\n  3b1039:\tcallq  647710 <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const>\r\n@@ -817168 +817168 @@ Disassembly of section .text:\r\n  3b174f:\tcallq  647710 <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const>\r\n@@ -1018869 +1018869 @@ Disassembly of section .text:\r\n  49fc24:\tcallq  647710 <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const>\r\n@@ -1027664 +1027664 @@ Disassembly of section .text:\r\n  4a8c38:\tcallq  647710 <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const>\r\n@@ -1031786 +1031786 @@ Disassembly of section .text:\r\n  4acef0:\tcallq  647710 <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const>\r\n@@ -1078195 +1078195 @@ Disassembly of section .text:\r\n  4ded92:\tcallq  647710 <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const>\r\n@@ -1175949 +1175949 @@ Disassembly of section .text:\r\n  54387c:\tcallq  647710 <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const>\r\n@@ -1232047 +1232047 @@ Disassembly of section .text:\r\n  5867bf:\tcallq  647710 <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const>\r\n@@ -1241981 +1241981 @@ Disassembly of section .text:\r\n  59097e:\tcallq  647710 <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const>\r\n@@ -1422701 +1422701 @@ Disassembly of section .text:\r\n0000000000647710 <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const>:\r\n@@ -1422714 +1422714 @@ Disassembly of section .text:\r\n  64773d:\tje     64779f <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const+0x8f>\r\n@@ -1422716 +1422716 @@ Disassembly of section .text:\r\n  647742:\tjne    64777d <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const+0x6d>\r\n@@ -1422721 +1422721 @@ Disassembly of section .text:\r\n  647757:\tje     64775d <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const+0x4d>\r\n@@ -1422723 +1422723 @@ Disassembly of section .text:\r\n  64775b:\tjmp    64779f <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const+0x8f>\r\n@@ -1422726 +1422726 @@ Disassembly of section .text:\r\n  647763:\tjne    64777d <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const+0x6d>\r\n@@ -1422731 +1422731 @@ Disassembly of section .text:\r\n  647778:\tje     6477c0 <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const+0xb0>\r\n@@ -1422734 +1422734 @@ Disassembly of section .text:\r\n  647780:\tjne    64778c <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const+0x7c>\r\n@@ -1422737 +1422737 @@ Disassembly of section .text:\r\n  64778a:\tjmp    64779c <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const+0x8c>\r\n@@ -1422747 +1422747 @@ Disassembly of section .text:\r\n  6477b5:\tjne    6477c7 <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const+0xb7>\r\n@@ -1422753 +1422753 @@ Disassembly of section .text:\r\n  6477c5:\tjmp    64779f <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const+0x8f>\r\n@@ -1469343 +1469343 @@ Disassembly of section .text:\r\n  675206:\tcallq  647710 <ArgsManager::Get{+Int+}Arg(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) const>\r\n```\r\n\r\n</details>",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/924676795/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/924677085",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22976#issuecomment-924677085",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22976",
    "id": 924677085,
    "node_id": "IC_kwDOABII5843HXPd",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-22T07:53:42Z",
    "updated_at": "2021-09-22T07:53:42Z",
    "author_association": "MEMBER",
    "body": "review ACK 5b4749680485bfc32b1ed453bce5015f8a087189 \ud83d\udc9c\r\n\r\n<details><summary>Show signature and timestamp</summary>\r\n\r\nSignature:\r\n\r\n```\r\n-----BEGIN PGP SIGNED MESSAGE-----\r\nHash: SHA512\r\n\r\nreview ACK 5b4749680485bfc32b1ed453bce5015f8a087189 \ud83d\udc9c\r\n-----BEGIN PGP SIGNATURE-----\r\n\r\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\r\npUgy/gv+KxAwgYwxopQXdUWnvHNEXwVR+3pwrRDki3U1WA7vP3X2rYWKYvVrr02c\r\nYpR4361XtL9C/SAJbfCeHnKA9gEwmTgZophCx8jRJi1+SyzgSkAYqzlLfV7J8mxC\r\n53khFqgLzxlQ4QdPCDdYyQZXJYPRIwnrN+2TWkCoDqCwYSf+9Nml9ZZxwdv6uGE0\r\nfMxMg3Jes5z5N9kNe3SFIUb6BSVe0oMJRH/ZSgWJbEiQ51ECzALAKrygtTvXD3TE\r\no8aOD+CdRU53cm7605Z7TD3tZt2KdYeHuv8u8xnt7z/L/HwJuk6nCyZbw+xDCPJx\r\nws2nDYclKoqWm+5dNIDQcrPKHA/rSBzMK1Qx/NDwejVZt4FZcMmWU8NUeb5rQ4tl\r\nuhAZKNOgLDNuJLozgh4gjBjPChsAcPG8iN9hWQvVWbiKvoN3eYulp/JA0JrVW2b8\r\nXptnTG2WjolKPN484SpA0vamCWx+4IGUbVIA8d3dhjpiG2sZwv+AUicaq2+LCMzE\r\ny+U8Sdd4\r\n=ENki\r\n-----END PGP SIGNATURE-----\r\n```\r\n\r\n[Timestamp of file with hash `4f858a3b99bca7b8ec087959266bafe189cdb41593a9ae56bcea40bae04969f5  -`](https://opentimestamps.org/info/?004f70656e54696d657374616d7073000050726f6f6600bf89e2e884e8929401084f858a3b99bca7b8ec087959266bafe189cdb41593a9ae56bcea40bae04969f5f010a7927fe454a2fa455f613f239e088c2c08fff0101edb7e7357e9b38e70b418820a03b33308f104614adffbf0083c5f4148af93c47a0083dfe30d2ef90c8e2c2b68747470733a2f2f626f622e6274632e63616c656e6461722e6f70656e74696d657374616d70732e6f7267fff010949ff220ed565a6b096460dc2d46f7d608f1208671bc1814ceac4e9060145bf966fb49f0de888ba6757f10b8d9f6209fceee4b08f104614adffaf00827791720ded8084d0083dfe30d2ef90c8e292868747470733a2f2f66696e6e65792e63616c656e6461722e657465726e69747977616c6c2e636f6dfff010b2e9ea94d9eee95af7a0a1310ddcfd5c08f020c052cb8f62d9e7a84b12f06a43c213aec87c26e58206bc55c4a19f073e790c8908f0204c59f2b6dc6e7039cec3310ad5b5360ae609544b8482befa942646324c1c7a6a08f104614adffbf0080b95a24009c589480083dfe30d2ef90c8e2e2d68747470733a2f2f616c6963652e6274632e63616c656e6461722e6f70656e74696d657374616d70732e6f7267f010d14c0e94c4080e1041b1d68397f19c9208f12039dc12bb51cc1802185b6d0ca7ede554db12ba2f91dbe39762892cf2f5d86e2008f104614adffaf008ae2301bde6927e4e0083dfe30d2ef90c8e232268747470733a2f2f6274632e63616c656e6461722e636174616c6c6178792e636f6d)\r\n\r\n</details>\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/924677085/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/925987218",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22976#issuecomment-925987218",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22976",
    "id": 925987218,
    "node_id": "IC_kwDOABII5843MXGS",
    "user": {
      "login": "LarryRuane",
      "id": 8321330,
      "node_id": "MDQ6VXNlcjgzMjEzMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8321330?u=7965845672d27f915c0cbf6a4912ef63a012efb1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LarryRuane",
      "html_url": "https://github.com/LarryRuane",
      "followers_url": "https://api.github.com/users/LarryRuane/followers",
      "following_url": "https://api.github.com/users/LarryRuane/following{/other_user}",
      "gists_url": "https://api.github.com/users/LarryRuane/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
      "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
      "repos_url": "https://api.github.com/users/LarryRuane/repos",
      "events_url": "https://api.github.com/users/LarryRuane/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-23T16:52:02Z",
    "updated_at": "2021-09-23T18:03:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "ACK 5b4749680485bfc32b1ed453bce5015f8a087189\r\nI verified that all remaining calls to `GetArg()` have a string as the second argument (although I guess I didn't need to, any of those would not have compiled), and ran the unit (boost) tests.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/925987218/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/926915434",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22976#issuecomment-926915434",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22976",
    "id": 926915434,
    "node_id": "IC_kwDOABII5843P5tq",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-24T20:58:48Z",
    "updated_at": "2021-09-24T20:58:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "Rebased 5b4749680485bfc32b1ed453bce5015f8a087189 -> 89b96f9082ca32c52e5db646c3b8fcb1299ee2f5 ([`pr/intarg.1`](https://github.com/ryanofsky/bitcoin/commits/pr/intarg.1) -> [`pr/intarg.2`](https://github.com/ryanofsky/bitcoin/commits/pr/intarg.2), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/intarg.1-rebase..pr/intarg.2)) due to conflict with #22818",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/926915434/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/927083455",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22976#issuecomment-927083455",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22976",
    "id": 927083455,
    "node_id": "IC_kwDOABII5843Qiu_",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?u=7297e8aaf9188c0cb98bc549a8a02a1dc8d59e4c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-25T08:09:03Z",
    "updated_at": "2021-09-25T08:09:03Z",
    "author_association": "MEMBER",
    "body": "Concept ACK.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/927083455/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/927800464",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22976#issuecomment-927800464",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22976",
    "id": 927800464,
    "node_id": "IC_kwDOABII5843TRyQ",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-27T11:56:07Z",
    "updated_at": "2021-09-27T11:56:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "Rebased 89b96f9082ca32c52e5db646c3b8fcb1299ee2f5 -> 93b9800fec588fc0c258e754405db1e9f89cfb81 ([`pr/intarg.2`](https://github.com/ryanofsky/bitcoin/commits/pr/intarg.2) -> [`pr/intarg.3`](https://github.com/ryanofsky/bitcoin/commits/pr/intarg.3), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/intarg.2-rebase..pr/intarg.3)) due to conflict with #23061. Thanks @hebasto for simplifying the scripted diff after that PR!",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/927800464/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/714600644",
    "pull_request_review_id": 761755834,
    "id": 714600644,
    "node_id": "PRRC_kwDOABII584ql_DE",
    "diff_hunk": "@@ -217,7 +217,7 @@ void Shutdown(NodeContext& node)\n     node.banman.reset();\n     node.addrman.reset();\n \n-    if (node.mempool && node.mempool->IsLoaded() && node.args->GetArg(\"-persistmempool\", DEFAULT_PERSIST_MEMPOOL)) {\n+    if (node.mempool && node.mempool->IsLoaded() && node.args->GetIntArg(\"-persistmempool\", DEFAULT_PERSIST_MEMPOOL)) {",
    "path": "src/init.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "93b9800fec588fc0c258e754405db1e9f89cfb81",
    "original_commit_id": "5b4749680485bfc32b1ed453bce5015f8a087189",
    "user": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "@MarcoFalke's #23061 changes this to `GetBoolArg`. Given the ACK there, I assume that is the more correct change? If that is going to be backported then it can be merged first and this PR rebased on top.",
    "created_at": "2021-09-23T08:58:14Z",
    "updated_at": "2021-09-23T08:58:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22976#discussion_r714600644",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22976",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/714600644"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22976#discussion_r714600644"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22976"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/714600644/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 221,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/715103972",
    "pull_request_review_id": 762436404,
    "id": 715103972,
    "node_id": "PRRC_kwDOABII584qn57k",
    "diff_hunk": "@@ -217,7 +217,7 @@ void Shutdown(NodeContext& node)\n     node.banman.reset();\n     node.addrman.reset();\n \n-    if (node.mempool && node.mempool->IsLoaded() && node.args->GetArg(\"-persistmempool\", DEFAULT_PERSIST_MEMPOOL)) {\n+    if (node.mempool && node.mempool->IsLoaded() && node.args->GetIntArg(\"-persistmempool\", DEFAULT_PERSIST_MEMPOOL)) {",
    "path": "src/init.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "93b9800fec588fc0c258e754405db1e9f89cfb81",
    "original_commit_id": "5b4749680485bfc32b1ed453bce5015f8a087189",
    "user": {
      "login": "kiminuo",
      "id": 58662979,
      "node_id": "MDQ6VXNlcjU4NjYyOTc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/58662979?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kiminuo",
      "html_url": "https://github.com/kiminuo",
      "followers_url": "https://api.github.com/users/kiminuo/followers",
      "following_url": "https://api.github.com/users/kiminuo/following{/other_user}",
      "gists_url": "https://api.github.com/users/kiminuo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kiminuo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kiminuo/subscriptions",
      "organizations_url": "https://api.github.com/users/kiminuo/orgs",
      "repos_url": "https://api.github.com/users/kiminuo/repos",
      "events_url": "https://api.github.com/users/kiminuo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kiminuo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "(I would expect so too as `DEFAULT_PERSIST_MEMPOOL` is a boolean constant.)",
    "created_at": "2021-09-23T19:48:52Z",
    "updated_at": "2021-09-24T17:27:30Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22976#discussion_r715103972",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22976",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/715103972"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22976#discussion_r715103972"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22976"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/715103972/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 221,
    "side": "RIGHT",
    "in_reply_to_id": 714600644
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/715108186",
    "pull_request_review_id": 762441821,
    "id": 715108186,
    "node_id": "PRRC_kwDOABII584qn69a",
    "diff_hunk": "@@ -1217,7 +1217,7 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n     if (!ignores_incoming_txs) node.fee_estimator = std::make_unique<CBlockPolicyEstimator>();\n \n     assert(!node.mempool);\n-    int check_ratio = std::min<int>(std::max<int>(args.GetArg(\"-checkmempool\", chainparams.DefaultConsistencyChecks() ? 1 : 0), 0), 1000000);\n+    int check_ratio = std::min<int>(std::max<int>(args.GetIntArg(\"-checkmempool\", chainparams.DefaultConsistencyChecks() ? 1 : 0), 0), 1000000);",
    "path": "src/init.cpp",
    "position": 110,
    "original_position": 119,
    "commit_id": "93b9800fec588fc0c258e754405db1e9f89cfb81",
    "original_commit_id": "5b4749680485bfc32b1ed453bce5015f8a087189",
    "user": {
      "login": "kiminuo",
      "id": 58662979,
      "node_id": "MDQ6VXNlcjU4NjYyOTc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/58662979?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kiminuo",
      "html_url": "https://github.com/kiminuo",
      "followers_url": "https://api.github.com/users/kiminuo/followers",
      "following_url": "https://api.github.com/users/kiminuo/following{/other_user}",
      "gists_url": "https://api.github.com/users/kiminuo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kiminuo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kiminuo/subscriptions",
      "organizations_url": "https://api.github.com/users/kiminuo/orgs",
      "repos_url": "https://api.github.com/users/kiminuo/repos",
      "events_url": "https://api.github.com/users/kiminuo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kiminuo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "(Not for this PR but looking at the line I would expect `std::clamp` here)\r\n\r\nedit: Addressed by #23095",
    "created_at": "2021-09-23T19:55:02Z",
    "updated_at": "2021-09-25T15:06:57Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22976#discussion_r715108186",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22976",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/715108186"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22976#discussion_r715108186"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22976"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/715108186/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1219,
    "original_line": 1219,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/715115475",
    "pull_request_review_id": 762441821,
    "id": 715115475,
    "node_id": "PRRC_kwDOABII584qn8vT",
    "diff_hunk": "@@ -1263,7 +1263,7 @@ void InitScriptExecutionCache() {\n     g_scriptExecutionCacheHasher.Write(nonce.begin(), 32);\n     // nMaxCacheSize is unsigned. If -maxsigcachesize is set to zero,\n     // setup_bytes creates the minimum possible cache (2 elements).\n-    size_t nMaxCacheSize = std::min(std::max((int64_t)0, gArgs.GetArg(\"-maxsigcachesize\", DEFAULT_MAX_SIG_CACHE_SIZE) / 2), MAX_MAX_SIG_CACHE_SIZE) * ((size_t) 1 << 20);\n+    size_t nMaxCacheSize = std::min(std::max((int64_t)0, gArgs.GetIntArg(\"-maxsigcachesize\", DEFAULT_MAX_SIG_CACHE_SIZE) / 2), MAX_MAX_SIG_CACHE_SIZE) * ((size_t) 1 << 20);",
    "path": "src/validation.cpp",
    "position": 49,
    "original_position": 49,
    "commit_id": "93b9800fec588fc0c258e754405db1e9f89cfb81",
    "original_commit_id": "5b4749680485bfc32b1ed453bce5015f8a087189",
    "user": {
      "login": "kiminuo",
      "id": 58662979,
      "node_id": "MDQ6VXNlcjU4NjYyOTc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/58662979?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kiminuo",
      "html_url": "https://github.com/kiminuo",
      "followers_url": "https://api.github.com/users/kiminuo/followers",
      "following_url": "https://api.github.com/users/kiminuo/following{/other_user}",
      "gists_url": "https://api.github.com/users/kiminuo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kiminuo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kiminuo/subscriptions",
      "organizations_url": "https://api.github.com/users/kiminuo/orgs",
      "repos_url": "https://api.github.com/users/kiminuo/repos",
      "events_url": "https://api.github.com/users/kiminuo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kiminuo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "(Not for this PR but looking at the line I would expect `std::clamp` here)\r\n\r\nedit: Addressed by #23095",
    "created_at": "2021-09-23T20:06:33Z",
    "updated_at": "2021-09-25T15:06:35Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22976#discussion_r715115475",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22976",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/715115475"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22976#discussion_r715115475"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22976"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/715115475/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1276,
    "original_line": 1276,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/715116159",
    "pull_request_review_id": 762441821,
    "id": 715116159,
    "node_id": "PRRC_kwDOABII584qn85_",
    "diff_hunk": "@@ -2517,7 +2517,7 @@ bool CChainState::ActivateBestChain(BlockValidationState& state, std::shared_ptr\n \n     CBlockIndex *pindexMostWork = nullptr;\n     CBlockIndex *pindexNewTip = nullptr;\n-    int nStopAtHeight = gArgs.GetArg(\"-stopatheight\", DEFAULT_STOPATHEIGHT);\n+    int nStopAtHeight = gArgs.GetIntArg(\"-stopatheight\", DEFAULT_STOPATHEIGHT);",
    "path": "src/validation.cpp",
    "position": 67,
    "original_position": 67,
    "commit_id": "93b9800fec588fc0c258e754405db1e9f89cfb81",
    "original_commit_id": "5b4749680485bfc32b1ed453bce5015f8a087189",
    "user": {
      "login": "kiminuo",
      "id": 58662979,
      "node_id": "MDQ6VXNlcjU4NjYyOTc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/58662979?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kiminuo",
      "html_url": "https://github.com/kiminuo",
      "followers_url": "https://api.github.com/users/kiminuo/followers",
      "following_url": "https://api.github.com/users/kiminuo/following{/other_user}",
      "gists_url": "https://api.github.com/users/kiminuo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kiminuo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kiminuo/subscriptions",
      "organizations_url": "https://api.github.com/users/kiminuo/orgs",
      "repos_url": "https://api.github.com/users/kiminuo/repos",
      "events_url": "https://api.github.com/users/kiminuo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kiminuo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Not for this PR but isn't it better to cast it explicitely here? It's very easy to think that `GetIntArg` returns `int` and not `int64_t`.",
    "created_at": "2021-09-23T20:07:46Z",
    "updated_at": "2021-09-23T20:17:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22976#discussion_r715116159",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22976",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/715116159"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22976#discussion_r715116159"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22976"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/715116159/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 2555,
    "original_line": 2555,
    "side": "RIGHT"
  }
]