DrahtBot,2021-01-14 15:35:18,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #20715 (util: Add ArgsManager::GetCommand() and use it in bitcoin-wallet by MarcoFalke)\n* #20017 (rpc: Add RPCContext by ",https://github.com/bitcoin/bitcoin/pull/20932#issuecomment-760273962,760273962,
ryanofsky,2021-01-14 21:27:34,"I'm able to reproduce appveyor failure on linux with\n\n```\nmake -C src test/test_bitcoin && src/test/test_bitcoin -l test_suite -t init_tests -t wallet_tests/CreateWallet --random=2\n```\n\nTo reproduce, it may be necessary to vary the random seed to get CreateWallet test to run after the init_tests as happens on appveyor.\n\nThe problem seems to be that init_tests [force set](https://gi",https://github.com/bitcoin/bitcoin/pull/20932#issuecomment-760487360,760487360,
ryanofsky,2021-01-14 21:38:22,"Following fix seems to work:\n\n```diff\n--- a/src/wallet/test/init_test_fixture.cpp\n+++ b/src/wallet/test/init_test_fixture.cpp\n@@ -3,6 +3,7 @@\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #include <fs.h>\n+#include <univalue.h>\n #include <util/check.h>\n #include <util/system.h>\n \n@@ -37,6 +38,9 @@ InitWalletDirTestingSetup::InitWalletDirTesting",https://github.com/bitcoin/bitcoin/pull/20932#issuecomment-760492506,760492506,
ryanofsky,2021-01-14 21:48:16,"re: https://github.com/bitcoin/bitcoin/pull/20932#issue-554809577\n\n> This PR is based on @ryanofsky suggestion here [#20744 (review)](https://github.com/bitcoin/bitcoin/pull/20744#pullrequestreview-558131849) and it should help make #20744 diff smaller in the long run.\n\nWould suggest writing a self-contained PR description that doesn't require reading a comment in another issue to understa",https://github.com/bitcoin/bitcoin/pull/20932#issuecomment-760497563,760497563,
jonatack,2021-01-19 00:11:33,"Code review ACK da9caa1cedd69702aea44cb44b2fd0a2d6d56916 only doxygen improvements since my last review per `git diff d867d7a da9caa1`\n\nThanks for updating.",https://github.com/bitcoin/bitcoin/pull/20932#issuecomment-762523646,762523646,
MarcoFalke,2021-01-21 17:47:36,"review ACK da9caa1cedd69702aea44cb44b2fd0a2d6d56916 ðŸ“¯\n\n<details><summary>Show signature and timestamp</summary>\n\nSignature:\n\n```\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\nreview ACK da9caa1cedd69702aea44cb44b2fd0a2d6d56916 ðŸ“¯\n-----BEGIN PGP SIGNATURE-----\n\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUgRdQv8DzNpEk8/k2bFwErjQdb2bW93pR3nNfNIarBp",https://github.com/bitcoin/bitcoin/pull/20932#issuecomment-764824202,764824202,
kiminuo,2021-01-14 12:39:43,"```suggestion\n     * @return \p p if \p p is an absolute path, otherwise \p base joined with \p p is returned.\n```",https://github.com/bitcoin/bitcoin/pull/20932#discussion_r557365662,557365662,src/fs.h
ryanofsky,2021-01-14 19:53:34,"In commit ""Introduce fsbridge::AbsPathJoin(base, p)."" (c0da7456833fac6d5613d97e09266cf54f13594f)\n\nI think it would be good to add ""refactor:"" to the PR title to be clear that there is no intended behavior change here. New code is exactly equivalent to previous code, it is just going through a helper function and adding an assert.",https://github.com/bitcoin/bitcoin/pull/20932#discussion_r557657689,557657689,src/fs.h
jonatack,2021-01-14 19:58:08,"naming nit, suggest s/p/path/\n\nand the following Doxygen documentation seems more clear to me\n```diff\n-     * @param[in] base  Absolute path.\n-     * @param[in] p     Path to combine with \p base.\n-     * @return \p p if \p p is an absolute path, otherwise \p base joined with \p p is returned.\n+     * @param[in] base  Absolute path\n+     * @param[in] path  Path to combine with base",https://github.com/bitcoin/bitcoin/pull/20932#discussion_r557662281,557662281,src/fs.h
ryanofsky,2021-01-14 20:02:19,"In commit ""Introduce fsbridge::AbsPathJoin(base, p)."" (c0da7456833fac6d5613d97e09266cf54f13594f)\n\nWould be good to drop ""and returning the result of boost::filesystem..."". Return value is already described below and the point of this function is to avoid the need for people to understand the extremely complicated boost function, which doesn't make any assumptions, by replacing with it a more s",https://github.com/bitcoin/bitcoin/pull/20932#discussion_r557664773,557664773,src/fs.h
jonatack,2021-01-14 20:03:36,"```suggestion\n    const fs::path wallet_path = fsbridge::AbsPathJoin(GetWalletDir(), name);\n```",https://github.com/bitcoin/bitcoin/pull/20932#discussion_r557665415,557665415,src/wallet/wallet.cpp
jonatack,2021-01-14 20:06:33,"```suggestion\n    const fs::path path = fsbridge::AbsPathJoin(GetWalletDir(), name);\n```",https://github.com/bitcoin/bitcoin/pull/20932#discussion_r557667116,557667116,src/wallet/wallettool.cpp
jonatack,2021-01-14 20:06:54,"```suggestion\n    const fs::path path = fsbridge::AbsPathJoin(GetDataDir(), request.params[0].get_str());\n```",https://github.com/bitcoin/bitcoin/pull/20932#discussion_r557667341,557667341,src/rpc/blockchain.cpp
jonatack,2021-01-14 20:07:07,"```suggestion\n    const fs::path temppath = fsbridge::AbsPathJoin(GetDataDir(), request.params[0].get_str() + "".incomplete"");\n```",https://github.com/bitcoin/bitcoin/pull/20932#discussion_r557667469,557667469,src/rpc/blockchain.cpp
ryanofsky,2021-01-14 20:13:17,"In commit ""Introduce fsbridge::AbsPathJoin(base, p)."" (c0da7456833fac6d5613d97e09266cf54f13594f)\n\nIt would be good to add another test joining an absolute path with the empty `""""` path and ensuring the absolute path is returned unchanged (no trailing slash). This is the difference between boost and std join functions and cause of bugs in #20744",https://github.com/bitcoin/bitcoin/pull/20932#discussion_r557671007,557671007,src/test/fs_tests.cpp
kiminuo,2021-01-15 07:37:48,"I understand that one is supposed to apply the commit locally without using Github's ""Commit suggestion"" as that would lead to a new CI run, right?",https://github.com/bitcoin/bitcoin/pull/20932#discussion_r557953334,557953334,src/wallet/wallet.cpp
kiminuo,2021-01-15 08:38:23,Thanks,https://github.com/bitcoin/bitcoin/pull/20932#discussion_r558044358,558044358,src/rpc/blockchain.cpp
kiminuo,2021-01-15 08:38:31,Thanks,https://github.com/bitcoin/bitcoin/pull/20932#discussion_r558044541,558044541,src/rpc/blockchain.cpp
kiminuo,2021-01-15 08:38:52,"Yes, thanks.",https://github.com/bitcoin/bitcoin/pull/20932#discussion_r558045118,558045118,src/fs.h
ryanofsky,2021-01-15 17:11:35,"In commit ""Replace fs::absolute calls with AbsPathJoin calls"" (215c78465059175505218566f2ec38d52d3be827)\n\nI don't think the comment and test are quite right. Joining behavior is well defined for boost and std path types and does not depend on the filesystem. The differences are between the boost library behavior and the standard library behavior are design choices, not OS differences. Would su",https://github.com/bitcoin/bitcoin/pull/20932#discussion_r558446283,558446283,src/test/fs_tests.cpp
ryanofsky,2021-01-15 18:15:41,"In commit ""Replace fs::absolute calls with AbsPathJoin calls"" (215c78465059175505218566f2ec38d52d3be827)\n\nMaybe expand this line a little to say ""@returns path unchanged if it is an absolute path, otherwise returns base joined with path. Returns base unchanged if path is empty.""\n\nIf desired, could also add preconditions and postconditions (base path must be absolute, returned path will alw",https://github.com/bitcoin/bitcoin/pull/20932#discussion_r558485716,558485716,src/fs.h
kiminuo,2021-01-15 19:21:35,"Yes, it's bad wording on my side. Thanks for the suggestion.",https://github.com/bitcoin/bitcoin/pull/20932#discussion_r558538340,558538340,src/test/fs_tests.cpp
jonatack,2021-01-15 19:35:19,"@kiminuo Yes, I don't recall seeing someone use the GitHub web ""commit suggestion"" interface here other than for just giving feedback, but you may be right. It's probably best (and more secure) to use git locally and not become dependent on GitHub-specific workflows.",https://github.com/bitcoin/bitcoin/pull/20932#discussion_r558550154,558550154,src/wallet/wallet.cpp
jonatack,2021-01-15 19:43:53,"```suggestion\n     * @param[in] base  Base path (must be absolute)\n```",https://github.com/bitcoin/bitcoin/pull/20932#discussion_r558554569,558554569,src/fs.h
jonatack,2021-01-15 19:48:11,"```suggestion\n     * Helper function for joining two paths to return an absolute path\n```",https://github.com/bitcoin/bitcoin/pull/20932#discussion_r558556848,558556848,src/fs.h
jonatack,2021-01-15 19:58:04,"better yet, see the Doxygen section in doc/developer-notes.md and add something like\n```\n * @pre  Base must be absolute\n * @post Returned path will always be absolute\n```\n",https://github.com/bitcoin/bitcoin/pull/20932#discussion_r558561774,558561774,src/fs.h
