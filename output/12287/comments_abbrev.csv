jonasschnelli,2018-01-28T19:20:08Z,Not meant for 0.16.,https://github.com/bitcoin/bitcoin/pull/12287#issuecomment-361088026,361088026,
practicalswift,2018-01-29T08:52:39Z,"Related:\n* #11652 (""Add missing locks to init.cpp (in AppInitMain + ThreadImport) and validation.cpp"")\n* #11694 (""rpc: Add missing cs_main lock in getblocktemplate(...)"")\n* #11754 (""wallet: Add missing cs_wallet locks when accessing m_last_block_processed"")\n",https://github.com/bitcoin/bitcoin/pull/12287#issuecomment-361178015,361178015,
promag,2018-01-30T23:53:32Z,@jonasschnelli please see 6e36821 which came after discussing with @ryanofsky on IRC.,https://github.com/bitcoin/bitcoin/pull/12287#issuecomment-361775197,361775197,
jonasschnelli,2018-01-31T03:38:42Z,~~@promag https://github.com/bitcoin/bitcoin/commit/6e36821823b498c307787543ad59b9e9ccffcc63 seems good work. I'll propose to do this in a separate PR.~~,https://github.com/bitcoin/bitcoin/pull/12287#issuecomment-361813999,361813999,
jonasschnelli,2018-01-31T03:50:59Z,"Changed my mind. Included https://github.com/bitcoin/bitcoin/commit/6e36821823b498c307787543ad59b9e9ccffcc63.\n* Fixed @ryanofsky point about `AssertLockHeld()`\n* Followed @promag's advice and moved cs_main lock up (https://github.com/bitcoin/bitcoin/pull/12287#discussion_r164444275)",https://github.com/bitcoin/bitcoin/pull/12287#issuecomment-361815531,361815531,
promag,2018-01-31T14:24:57Z,"Thread https://github.com/bitcoin/bitcoin/pull/12287#discussion_r164570542\n\nIn this case, where `nChainTx` may require the lock and `GuessVerificationProgress()` is always called with the lock, I'd prefer to assert the lock and be *correct* like @gmaxwell said in IRC.\n\nOther than that, utACK 90ba2df.",https://github.com/bitcoin/bitcoin/pull/12287#issuecomment-361947221,361947221,
jonasschnelli,2018-02-09T06:55:35Z,Changed the PR title.,https://github.com/bitcoin/bitcoin/pull/12287#issuecomment-364351566,364351566,
promag,2018-02-22T01:13:03Z,"Tested ACK 90ba2df.\n\nLet's get this merged? ðŸ™„",https://github.com/bitcoin/bitcoin/pull/12287#issuecomment-367533973,367533973,
promag,2018-01-29T14:24:22Z,Just move the above lock up?,https://github.com/bitcoin/bitcoin/pull/12287#discussion_r164444275,164444275,src/qt/clientmodel.cpp
ryanofsky,2018-01-29T18:21:38Z,"I think maybe the new lock and assert here could be dropped and comment above could be changed to: ""require cs_main if pindex has not been validated yet (because nChainTx might be unset).""\n\nIf we're calling this on blocks from chainActive, it seems like locking should be unnecessary.",https://github.com/bitcoin/bitcoin/pull/12287#discussion_r164518333,164518333,src/validation.cpp
promag,2018-01-29T21:03:58Z,"The whole function should lock `cs_main`. However this is only called in `AppInitMain`, and #11041 adds the lock [there](https://github.com/bitcoin/bitcoin/pull/11041/files#diff-c865a8939105e6350a50af02766291b7).\n\nIf this goes first, I suggest cherry pick 3d40869 instead.",https://github.com/bitcoin/bitcoin/pull/12287#discussion_r164563230,164563230,src/validation.cpp
promag,2018-01-29T21:06:09Z,"After 3d40869, `ClientModel::getVerificationProgress` is the only caller without the lock, so `AssertLockHeld` seems fine to me.",https://github.com/bitcoin/bitcoin/pull/12287#discussion_r164563767,164563767,src/validation.cpp
ryanofsky,2018-01-29T21:32:10Z,"> AssertLockHeld seems fine to me\n\nGetting rid of this could avoid a new lock in Rescan, and remove an existing lock. It also seems not ideal if code and documentation implies locking is required when it isn't.",https://github.com/bitcoin/bitcoin/pull/12287#discussion_r164570542,164570542,src/validation.cpp
