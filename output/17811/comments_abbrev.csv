hebasto,2019-12-28 06:08:03,The related discussion: https://github.com/bitcoin/bitcoin/pull/13671#discussion_r203231928,https://github.com/bitcoin/bitcoin/pull/17811#issuecomment-569389724,569389724,
practicalswift,2019-12-28 08:20:03,I prefer the existing version: simple is better than clever :),https://github.com/bitcoin/bitcoin/pull/17811#issuecomment-569397719,569397719,
sipa,2019-12-28 08:42:43,I would be very surprised if this leads to more performant compiled code.,https://github.com/bitcoin/bitcoin/pull/17811#issuecomment-569398858,569398858,
promag,2019-12-28 10:49:19,Agree with @practicalswift.,https://github.com/bitcoin/bitcoin/pull/17811#issuecomment-569406109,569406109,
sanjaykdragon,2019-12-28 15:35:27,"> I would be very surprised if this leads to more performant compiled code.\n\nThis is what I'm thinking, I would expect the compiler to optimize that",https://github.com/bitcoin/bitcoin/pull/17811#issuecomment-569426464,569426464,
fanquake,2019-12-28 22:34:49,"If anyone's interested, below is the diff of master (b931f61b9ab098ea4ea8fbe4cbf0b03c566c3f63) vs this PR. Regardless, I agree with the other commenters. \n\n```bash\n>>> [do_build] Performing basic analysis pass...\nroot@1d574f1fd618:/bitcoin# shasum /tmp/compare/*.stripped /tmp/17811/*.stripped\nb35adfc68b1639b03300b8b16456befaa8a67edf  /tmp/compare/bitcoind.b931f61b9ab098ea4ea8fbe4cbf0b03c",https://github.com/bitcoin/bitcoin/pull/17811#issuecomment-569456278,569456278,
kristapsk,2020-01-03 19:08:51,"Just to note that OR / AND are faster and simpler operations than ADD / SUB, but if most think it's not so important, so be it, as I said in first comment, these functions aren't used much.",https://github.com/bitcoin/bitcoin/pull/17811#issuecomment-570668019,570668019,
MarcoFalke,2020-01-03 19:13:21,Performance improvements need to be benchmarked to show that they actually have an effect on performance.,https://github.com/bitcoin/bitcoin/pull/17811#issuecomment-570669370,570669370,
