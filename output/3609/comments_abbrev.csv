BitcoinPullTester,2014-01-31T13:33:03Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/bbde1e99c893924dbef135f42c14f4df9828c6e5 for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-tester/cu",https://github.com/bitcoin/bitcoin/pull/3609#issuecomment-33793882,33793882,
laanwj,2014-02-04T13:32:08Z,ACK on code changes\n,https://github.com/bitcoin/bitcoin/pull/3609#issuecomment-34059027,34059027,
gavinandresen,2014-02-04T14:37:07Z,"RE: pulling for 0.9.0rc2 : a fill-memory-with-valid-orphan-blocks attack would be insanely expensive, so this is not urgent and I don't see any reason to pull it for 0.9.0.\n",https://github.com/bitcoin/bitcoin/pull/3609#issuecomment-34064536,34064536,
sipa,2014-02-04T14:37:52Z,"Huge sequences of orphans are regularly seen during normal synchronization, just because of how they are fetched.\n",https://github.com/bitcoin/bitcoin/pull/3609#issuecomment-34064612,34064612,
laanwj,2014-02-08T09:37:53Z,"I can confirm what @sipa says. Due to receiving out of order, large chains of orphans occur during initial sync. Even though they take less memory now that they are stored in serialized form, this can still be a cause of running out of memory during initial sync.\n",https://github.com/bitcoin/bitcoin/pull/3609#issuecomment-34539689,34539689,
gavinandresen,2014-02-08T15:49:45Z,Crash-during-initial-block-download is a good reason to pull this for 0.9.0rc2.\n,https://github.com/bitcoin/bitcoin/pull/3609#issuecomment-34547224,34547224,
laanwj,2014-02-04T13:13:04Z,Maybe add to comment: if the number of stored orphans is greater or equal to MAX_ORPHAN_BLOCKS\n,https://github.com/bitcoin/bitcoin/pull/3609#discussion_r9419589,9419589,src/main.cpp
