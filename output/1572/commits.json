[
  {
    "sha": "144bfd9c538528c95c9f7d4f0074690cfacec326",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxNDRiZmQ5YzUzODUyOGM5NWM5ZjdkNGYwMDc0NjkwY2ZhY2VjMzI2",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2012-07-09T11:40:22Z"
      },
      "committer": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2012-07-12T13:31:59Z"
      },
      "message": "optionsmodel cleanup\n\n- cleanup optionsmodel before adding new proxy options\n- place SOCKS version stuff below proxy port (IP, Port, SOCKS version)\n- simplyfy some parts of the code (e.g. don't check IP and port, as this\n  is done in optionsdialog anyway, remove unneeded {} in switch/case)\n- small cosmetic changes in the header for better readability",
      "tree": {
        "sha": "33f228a9d285b809f13b97b3659ee1c36a71486d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/33f228a9d285b809f13b97b3659ee1c36a71486d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/144bfd9c538528c95c9f7d4f0074690cfacec326",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/144bfd9c538528c95c9f7d4f0074690cfacec326",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/144bfd9c538528c95c9f7d4f0074690cfacec326",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/144bfd9c538528c95c9f7d4f0074690cfacec326/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "45aa01fe89ea7825ea2ce612f0998715b4e10128",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/45aa01fe89ea7825ea2ce612f0998715b4e10128",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/45aa01fe89ea7825ea2ce612f0998715b4e10128"
      }
    ],
    "stats": {
      "total": 94,
      "additions": 36,
      "deletions": 58
    },
    "files": [
      {
        "sha": "caa33414b2e0b13b252df9f885c7bced1b64aa6f",
        "filename": "src/qt/optionsmodel.cpp",
        "status": "modified",
        "additions": 21,
        "deletions": 43,
        "changes": 64,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/144bfd9c538528c95c9f7d4f0074690cfacec326/src/qt/optionsmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/144bfd9c538528c95c9f7d4f0074690cfacec326/src/qt/optionsmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsmodel.cpp?ref=144bfd9c538528c95c9f7d4f0074690cfacec326",
        "patch": "@@ -144,8 +144,6 @@ QVariant OptionsModel::data(const QModelIndex & index, int role) const\n             return QVariant(fMinimizeOnClose);\n         case ProxyUse:\n             return settings.value(\"fUseProxy\", false);\n-        case ProxySocksVersion:\n-            return settings.value(\"nSocksVersion\", 5);\n         case ProxyIP: {\n             CService addrProxy;\n             if (GetProxy(NET_IPV4, addrProxy))\n@@ -160,6 +158,8 @@ QVariant OptionsModel::data(const QModelIndex & index, int role) const\n             else\n                 return 9050;\n         }\n+        case ProxySocksVersion:\n+            return settings.value(\"nSocksVersion\", 5);\n         case Fee:\n             return QVariant(nTransactionFee);\n         case DisplayUnit:\n@@ -192,11 +192,9 @@ bool OptionsModel::setData(const QModelIndex & index, const QVariant & value, in\n             settings.setValue(\"fMinimizeToTray\", fMinimizeToTray);\n             break;\n         case MapPortUPnP:\n-            {\n-                fUseUPnP = value.toBool();\n-                settings.setValue(\"fUseUPnP\", fUseUPnP);\n-                MapPort();\n-            }\n+            fUseUPnP = value.toBool();\n+            settings.setValue(\"fUseUPnP\", fUseUPnP);\n+            MapPort();\n             break;\n         case MinimizeOnClose:\n             fMinimizeOnClose = value.toBool();\n@@ -206,70 +204,50 @@ bool OptionsModel::setData(const QModelIndex & index, const QVariant & value, in\n             settings.setValue(\"fUseProxy\", value.toBool());\n             ApplyProxySettings();\n             break;\n-        case ProxySocksVersion:\n-            settings.setValue(\"nSocksVersion\", value.toInt());\n-            ApplyProxySettings();\n-            break;\n         case ProxyIP:\n             {\n                 CService addrProxy(\"127.0.0.1\", 9050);\n                 GetProxy(NET_IPV4, addrProxy);\n                 CNetAddr addr(value.toString().toStdString());\n-                if (addr.IsValid())\n-                {\n-                    addrProxy.SetIP(addr);\n-                    settings.setValue(\"addrProxy\", addrProxy.ToStringIPPort().c_str());\n-                    successful = ApplyProxySettings();\n-                }\n-                else\n-                {\n-                    successful = false;\n-                }\n+                addrProxy.SetIP(addr);\n+                settings.setValue(\"addrProxy\", addrProxy.ToStringIPPort().c_str());\n+                successful = ApplyProxySettings();\n             }\n             break;\n         case ProxyPort:\n             {\n                 CService addrProxy(\"127.0.0.1\", 9050);\n                 GetProxy(NET_IPV4, addrProxy);\n-                int nPort = atoi(value.toString().toAscii().data());\n-                if (nPort > 0 && nPort < std::numeric_limits<unsigned short>::max())\n-                {\n-                    addrProxy.SetPort(nPort);\n-                    settings.setValue(\"addrProxy\", addrProxy.ToStringIPPort().c_str());\n-                    successful = ApplyProxySettings();\n-                }\n-                else\n-                {\n-                    successful = false;\n-                }\n+                addrProxy.SetPort(value.toInt());\n+                settings.setValue(\"addrProxy\", addrProxy.ToStringIPPort().c_str());\n+                successful = ApplyProxySettings();\n             }\n             break;\n-        case Fee: {\n+        case ProxySocksVersion:\n+            settings.setValue(\"nSocksVersion\", value.toInt());\n+            ApplyProxySettings();\n+            break;\n+        case Fee:\n             nTransactionFee = value.toLongLong();\n             settings.setValue(\"nTransactionFee\", nTransactionFee);\n-            }\n             break;\n-        case DisplayUnit: {\n-            int unit = value.toInt();\n-            nDisplayUnit = unit;\n+        case DisplayUnit:\n+            nDisplayUnit = value.toInt();\n             settings.setValue(\"nDisplayUnit\", nDisplayUnit);\n-            emit displayUnitChanged(unit);\n-            }\n+            emit displayUnitChanged(nDisplayUnit);\n             break;\n-        case DisplayAddresses: {\n+        case DisplayAddresses:\n             bDisplayAddresses = value.toBool();\n             settings.setValue(\"bDisplayAddresses\", bDisplayAddresses);\n-            }\n             break;\n         case DetachDatabases: {\n             bool fDetachDB = value.toBool();\n             bitdb.SetDetach(fDetachDB);\n             settings.setValue(\"detachDB\", fDetachDB);\n             }\n             break;\n-        case Language: {\n+        case Language:\n             settings.setValue(\"language\", value);\n-            }\n             break;\n         default:\n             break;"
      },
      {
        "sha": "34724ad032b36dc71be6a598b71fc33a3105e9e9",
        "filename": "src/qt/optionsmodel.h",
        "status": "modified",
        "additions": 15,
        "deletions": 15,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/144bfd9c538528c95c9f7d4f0074690cfacec326/src/qt/optionsmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/144bfd9c538528c95c9f7d4f0074690cfacec326/src/qt/optionsmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsmodel.h?ref=144bfd9c538528c95c9f7d4f0074690cfacec326",
        "patch": "@@ -12,23 +12,24 @@\n class OptionsModel : public QAbstractListModel\n {\n     Q_OBJECT\n+\n public:\n     explicit OptionsModel(QObject *parent = 0);\n \n     enum OptionID {\n-        StartAtStartup, // bool\n-        MinimizeToTray, // bool\n-        MapPortUPnP, // bool\n-        MinimizeOnClose, // bool\n-        ProxyUse, // bool\n+        StartAtStartup,    // bool\n+        MinimizeToTray,    // bool\n+        MapPortUPnP,       // bool\n+        MinimizeOnClose,   // bool\n+        ProxyUse,          // bool\n+        ProxyIP,           // QString\n+        ProxyPort,         // int\n         ProxySocksVersion, // int\n-        ProxyIP, // QString\n-        ProxyPort, // int\n-        Fee, // qint64\n-        DisplayUnit, // BitcoinUnits::Unit\n-        DisplayAddresses, // bool\n-        DetachDatabases, // bool\n-        Language, // QString\n+        Fee,               // qint64\n+        DisplayUnit,       // BitcoinUnits::Unit\n+        DisplayAddresses,  // bool\n+        DetachDatabases,   // bool\n+        Language,          // QString\n         OptionIDRowCount,\n     };\n \n@@ -48,17 +49,16 @@ class OptionsModel : public QAbstractListModel\n     int getDisplayUnit();\n     bool getDisplayAddresses();\n     QString getLanguage() { return language; }\n+\n private:\n     int nDisplayUnit;\n     bool bDisplayAddresses;\n     bool fMinimizeToTray;\n     bool fMinimizeOnClose;\n     QString language;\n+\n signals:\n     void displayUnitChanged(int unit);\n-\n-public slots:\n-\n };\n \n #endif // OPTIONSMODEL_H"
      }
    ]
  }
]