[
  {
    "sha": "1d136991629d6d5783a9dc7f47ed7973d12ab652",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxZDEzNjk5MTYyOWQ2ZDU3ODNhOWRjN2Y0N2VkNzk3M2QxMmFiNjUy",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2016-01-14T00:26:23Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2016-01-14T00:27:15Z"
      },
      "message": "Replace univalue subtree with proper dependency on external UniValue",
      "tree": {
        "sha": "0da4ff519937011a88453e97baef74acde537ca0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0da4ff519937011a88453e97baef74acde537ca0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1d136991629d6d5783a9dc7f47ed7973d12ab652",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1d136991629d6d5783a9dc7f47ed7973d12ab652",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1d136991629d6d5783a9dc7f47ed7973d12ab652",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1d136991629d6d5783a9dc7f47ed7973d12ab652/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3cd836c1d855b92e7c73ab31979f471c4f8dad68",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3cd836c1d855b92e7c73ab31979f471c4f8dad68",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3cd836c1d855b92e7c73ab31979f471c4f8dad68"
      }
    ],
    "stats": {
      "total": 2147,
      "additions": 15,
      "deletions": 2132
    },
    "files": [
      {
        "sha": "9c292f29fd51dd0b3f70ca64ffdb341c0b770278",
        "filename": ".gitignore",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1d136991629d6d5783a9dc7f47ed7973d12ab652/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1d136991629d6d5783a9dc7f47ed7973d12ab652/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.gitignore?ref=1d136991629d6d5783a9dc7f47ed7973d12ab652",
        "patch": "@@ -35,8 +35,6 @@ src/config/stamp-h1\n share/setup.nsi\n share/qt/Info.plist\n \n-src/univalue/gen\n-\n src/qt/*.moc\n src/qt/moc_*.cpp\n src/qt/forms/ui_*.h"
      },
      {
        "sha": "742ec85abd63aa89ce6de0fc7ce13a9ab988881f",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1d136991629d6d5783a9dc7f47ed7973d12ab652/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1d136991629d6d5783a9dc7f47ed7973d12ab652/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=1d136991629d6d5783a9dc7f47ed7973d12ab652",
        "patch": "@@ -682,6 +682,8 @@ if test x$use_pkgconfig = xyes; then\n   m4_ifdef(\n     [PKG_CHECK_MODULES],\n     [\n+      PKG_CHECK_MODULES([UNIVALUE],[libunivalue],[],[AC_MSG_ERROR(univalue not found.)])\n+\n       PKG_CHECK_MODULES([SSL], [libssl],, [AC_MSG_ERROR(openssl  not found.)])\n       PKG_CHECK_MODULES([CRYPTO], [libcrypto],,[AC_MSG_ERROR(libcrypto  not found.)])\n       BITCOIN_QT_CHECK([PKG_CHECK_MODULES([PROTOBUF], [protobuf], [have_protobuf=yes], [BITCOIN_QT_FAIL(libprotobuf not found)])])\n@@ -707,6 +709,9 @@ if test x$use_pkgconfig = xyes; then\n     ]\n   )\n else\n+  AC_CHECK_HEADER([univalue.h],[],[AC_MSG_ERROR(univalue header missing)])\n+  AC_CHECK_LIB([univalue],    [main],[UNIVALUE_LIBS=-lunivalue],[AC_MSG_ERROR(univalue missing)])\n+\n   AC_CHECK_HEADER([openssl/crypto.h],,AC_MSG_ERROR(libcrypto headers missing))\n   AC_CHECK_LIB([crypto],      [main],CRYPTO_LIBS=-lcrypto, AC_MSG_ERROR(libcrypto missing))\n \n@@ -959,7 +964,7 @@ unset PKG_CONFIG_LIBDIR\n PKG_CONFIG_LIBDIR=\"$PKGCONFIG_LIBDIR_TEMP\"\n \n ac_configure_args=\"${ac_configure_args} --disable-shared --with-pic --with-bignum=no --enable-module-recovery\"\n-AC_CONFIG_SUBDIRS([src/secp256k1 src/univalue])\n+AC_CONFIG_SUBDIRS([src/secp256k1])\n \n AC_OUTPUT\n "
      },
      {
        "sha": "5298b1ed0054b53bd3e29f6d063e6112f48f040c",
        "filename": "contrib/devtools/README.md",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1d136991629d6d5783a9dc7f47ed7973d12ab652/contrib/devtools/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1d136991629d6d5783a9dc7f47ed7973d12ab652/contrib/devtools/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/README.md?ref=1d136991629d6d5783a9dc7f47ed7973d12ab652",
        "patch": "@@ -32,7 +32,6 @@ To use, make sure that you have fetched the upstream repository branch in which\n maintained:\n * for `src/secp256k1`: https://github.com/bitcoin/secp256k1.git (branch master)\n * for `src/leveldb`: https://github.com/bitcoin/leveldb.git (branch bitcoin-fork)\n-* for `src/univalue`: https://github.com/bitcoin/univalue.git (branch master)\n \n Usage: `git-subtree-check.sh DIR COMMIT`\n "
      },
      {
        "sha": "7334e9763a43123b924314531dea05ce1045ce22",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 5,
        "deletions": 11,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1d136991629d6d5783a9dc7f47ed7973d12ab652/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1d136991629d6d5783a9dc7f47ed7973d12ab652/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=1d136991629d6d5783a9dc7f47ed7973d12ab652",
        "patch": "@@ -1,4 +1,4 @@\n-DIST_SUBDIRS = secp256k1 univalue\n+DIST_SUBDIRS = secp256k1\n \n AM_LDFLAGS = $(PTHREAD_CFLAGS) $(LIBTOOL_LDFLAGS) $(HARDENED_LDFLAGS)\n AM_CXXFLAGS = $(HARDENED_CXXFLAGS)\n@@ -23,7 +23,7 @@ BITCOIN_CONFIG_INCLUDES=-I$(builddir)/config\n BITCOIN_INCLUDES=-I$(builddir) -I$(builddir)/obj $(BOOST_CPPFLAGS) $(LEVELDB_CPPFLAGS) $(CRYPTO_CFLAGS) $(SSL_CFLAGS)\n \n BITCOIN_INCLUDES += -I$(srcdir)/secp256k1/include\n-BITCOIN_INCLUDES += -I$(srcdir)/univalue/include\n+BITCOIN_INCLUDES += $(UNIVALUE_CFLAGS)\n \n LIBBITCOIN_SERVER=libbitcoin_server.a\n LIBBITCOIN_WALLET=libbitcoin_wallet.a\n@@ -33,13 +33,9 @@ LIBBITCOIN_UTIL=libbitcoin_util.a\n LIBBITCOIN_CRYPTO=crypto/libbitcoin_crypto.a\n LIBBITCOINQT=qt/libbitcoinqt.a\n LIBSECP256K1=secp256k1/libsecp256k1.la\n-LIBUNIVALUE=univalue/libunivalue.la\n \n $(LIBSECP256K1): $(wildcard secp256k1/src/*) $(wildcard secp256k1/include/*)\n \t$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) -C $(@D) $(@F)\n-  \n-$(LIBUNIVALUE): $(wildcard univalue/lib/*) $(wildcard univalue/include/*)\n-\t$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) -C $(@D) $(@F)\n \n # Make is not made aware of per-object dependencies to avoid limiting building parallelization\n # But to build the less dependent modules first, we manually select their order here:\n@@ -339,7 +335,7 @@ endif\n bitcoind_LDADD = \\\n   $(LIBBITCOIN_SERVER) \\\n   $(LIBBITCOIN_COMMON) \\\n-  $(LIBUNIVALUE) \\\n+  $(UNIVALUE_LIBS) \\\n   $(LIBBITCOIN_UTIL) \\\n   $(LIBBITCOIN_CRYPTO) \\\n   $(LIBLEVELDB) \\\n@@ -368,7 +364,7 @@ endif\n \n bitcoin_cli_LDADD = \\\n   $(LIBBITCOIN_CLI) \\\n-  $(LIBUNIVALUE) \\\n+  $(UNIVALUE_LIBS) \\\n   $(LIBBITCOIN_UTIL)\n \n bitcoin_cli_LDADD += $(BOOST_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(EVENT_LIBS)\n@@ -385,7 +381,7 @@ bitcoin_tx_SOURCES += bitcoin-tx-res.rc\n endif\n \n bitcoin_tx_LDADD = \\\n-  $(LIBUNIVALUE) \\\n+  $(UNIVALUE_LIBS) \\\n   $(LIBBITCOIN_COMMON) \\\n   $(LIBBITCOIN_UTIL) \\\n   $(LIBBITCOIN_CRYPTO) \\\n@@ -433,7 +429,6 @@ CLEANFILES += policy/*.gcda policy/*.gcno\n CLEANFILES += primitives/*.gcda primitives/*.gcno\n CLEANFILES += script/*.gcda script/*.gcno\n CLEANFILES += support/*.gcda support/*.gcno\n-CLEANFILES += univalue/*.gcda univalue/*.gcno\n CLEANFILES += wallet/*.gcda wallet/*.gcno\n CLEANFILES += wallet/test/*.gcda wallet/test/*.gcno\n CLEANFILES += zmq/*.gcda zmq/*.gcno\n@@ -445,7 +440,6 @@ EXTRA_DIST = leveldb\n clean-local:\n \t-$(MAKE) -C leveldb clean\n \t-$(MAKE) -C secp256k1 clean\n-\t-$(MAKE) -C univalue clean\n \t-rm -f leveldb/*/*.gcda leveldb/*/*.gcno leveldb/helpers/memenv/*.gcda leveldb/helpers/memenv/*.gcno\n \t-rm -f config.h\n "
      },
      {
        "sha": "a676fb725e266277b8b470957935545c2870e80a",
        "filename": "src/Makefile.bench.include",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1d136991629d6d5783a9dc7f47ed7973d12ab652/src/Makefile.bench.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1d136991629d6d5783a9dc7f47ed7973d12ab652/src/Makefile.bench.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.bench.include?ref=1d136991629d6d5783a9dc7f47ed7973d12ab652",
        "patch": "@@ -14,7 +14,7 @@ bench_bench_bitcoin_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n bench_bench_bitcoin_LDADD = \\\n   $(LIBBITCOIN_SERVER) \\\n   $(LIBBITCOIN_COMMON) \\\n-  $(LIBBITCOIN_UNIVALUE) \\\n+  $(UNIVALUE_LIBS) \\\n   $(LIBBITCOIN_UTIL) \\\n   $(LIBBITCOIN_CRYPTO) \\\n   $(LIBLEVELDB) \\"
      },
      {
        "sha": "d5aa134d819d42f8d548d91dd23f64c2887bdc12",
        "filename": "src/Makefile.qt.include",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1d136991629d6d5783a9dc7f47ed7973d12ab652/src/Makefile.qt.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1d136991629d6d5783a9dc7f47ed7973d12ab652/src/Makefile.qt.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qt.include?ref=1d136991629d6d5783a9dc7f47ed7973d12ab652",
        "patch": "@@ -375,7 +375,7 @@ endif\n if ENABLE_ZMQ\n qt_bitcoin_qt_LDADD += $(LIBBITCOIN_ZMQ) $(ZMQ_LIBS)\n endif\n-qt_bitcoin_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CRYPTO) $(LIBUNIVALUE) $(LIBLEVELDB) $(LIBMEMENV) \\\n+qt_bitcoin_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CRYPTO) $(UNIVALUE_LIBS) $(LIBLEVELDB) $(LIBMEMENV) \\\n   $(BOOST_LIBS) $(QT_LIBS) $(QT_DBUS_LIBS) $(QR_LIBS) $(PROTOBUF_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(LIBSECP256K1) \\\n   $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS)\n qt_bitcoin_qt_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)"
      },
      {
        "sha": "2e78595e256157100fc7a3182de505dcce88c9b6",
        "filename": "src/Makefile.qttest.include",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1d136991629d6d5783a9dc7f47ed7973d12ab652/src/Makefile.qttest.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1d136991629d6d5783a9dc7f47ed7973d12ab652/src/Makefile.qttest.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qttest.include?ref=1d136991629d6d5783a9dc7f47ed7973d12ab652",
        "patch": "@@ -33,7 +33,7 @@ endif\n if ENABLE_ZMQ\n qt_test_test_bitcoin_qt_LDADD += $(LIBBITCOIN_ZMQ) $(ZMQ_LIBS)\n endif\n-qt_test_test_bitcoin_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CRYPTO) $(LIBUNIVALUE) $(LIBLEVELDB) \\\n+qt_test_test_bitcoin_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CRYPTO) $(UNIVALUE_LIBS) $(LIBLEVELDB) \\\n   $(LIBMEMENV) $(BOOST_LIBS) $(QT_DBUS_LIBS) $(QT_TEST_LIBS) $(QT_LIBS) \\\n   $(QR_LIBS) $(PROTOBUF_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(LIBSECP256K1) \\\n   $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS)"
      },
      {
        "sha": "8f55644dc5017727b50ebcd7d80b5383eca3b357",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1d136991629d6d5783a9dc7f47ed7973d12ab652/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1d136991629d6d5783a9dc7f47ed7973d12ab652/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=1d136991629d6d5783a9dc7f47ed7973d12ab652",
        "patch": "@@ -96,7 +96,7 @@ endif\n \n test_test_bitcoin_SOURCES = $(BITCOIN_TESTS) $(JSON_TEST_FILES) $(RAW_TEST_FILES)\n test_test_bitcoin_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -I$(builddir)/test/ $(TESTDEFS)\n-test_test_bitcoin_LDADD = $(LIBBITCOIN_SERVER) $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CRYPTO) $(LIBUNIVALUE) $(LIBLEVELDB) $(LIBMEMENV) \\\n+test_test_bitcoin_LDADD = $(LIBBITCOIN_SERVER) $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CRYPTO) $(UNIVALUE_LIBS) $(LIBLEVELDB) $(LIBMEMENV) \\\n   $(BOOST_LIBS) $(BOOST_UNIT_TEST_FRAMEWORK_LIB) $(LIBSECP256K1)\n test_test_bitcoin_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n if ENABLE_WALLET\n@@ -130,7 +130,6 @@ check-local:\n \t@echo \"Running test/bitcoin-util-test.py...\"\n \t$(AM_V_at)srcdir=$(srcdir) PYTHONPATH=$(builddir)/test $(srcdir)/test/bitcoin-util-test.py\n \t$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) -C secp256k1 check\n-\t$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) -C univalue check\n \n %.json.h: %.json\n \t@$(MKDIR_P) $(@D)"
      },
      {
        "sha": "19e42f814a5d9e83e8850f07250e8a4cd98ab7bf",
        "filename": "src/univalue/.gitignore",
        "status": "removed",
        "additions": 0,
        "deletions": 32,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/.gitignore?ref=3cd836c1d855b92e7c73ab31979f471c4f8dad68",
        "patch": "@@ -1,32 +0,0 @@\n-.deps/\n-INSTALL\n-Makefile\n-Makefile.in\n-aclocal.m4\n-autom4te.cache/\n-compile\n-config.log\n-config.status\n-config.guess\n-config.sub\n-configure\n-depcomp\n-install-sh\n-missing\n-stamp-h1\n-univalue-config.h*\n-test-driver\n-libtool\n-ltmain.sh\n-test-suite.log\n-\n-*.a\n-*.la\n-*.lo\n-*.logs\n-*.o\n-*.pc\n-*.trs\n-\n-.dirstamp\n-.libs"
      },
      {
        "sha": "d318d9cc8f6bff3e8fdf74ee1407d061088d1645",
        "filename": "src/univalue/.travis.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 52,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/.travis.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/.travis.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/.travis.yml?ref=3cd836c1d855b92e7c73ab31979f471c4f8dad68",
        "patch": "@@ -1,52 +0,0 @@\n-\n-language: cpp\n-\n-compiler:\n-  - clang\n-  - gcc\n-\n-os:\n-  - linux\n-  - osx\n-\n-sudo: false\n-\n-env:\n-  global:\n-    - MAKEJOBS=-j3\n-    - RUN_TESTS=true\n-    - BASE_OUTDIR=$TRAVIS_BUILD_DIR/out\n-\n-cache:\n-  apt: true\n-\n-addons:\n-  apt:\n-    packages:\n-      - pkg-config\n-\n-before_script:\n-  - if [ -n \"$USE_SHELL\" ]; then export CONFIG_SHELL=\"$USE_SHELL\"; fi\n-  - test -n \"$USE_SHELL\" && eval '\"$USE_SHELL\" -c \"./autogen.sh\"' || ./autogen.sh\n-\n-script:\n-  - if [ -n \"$UNIVALUE_CONFIG\" ]; then unset CC; unset CXX; fi\n-  - OUTDIR=$BASE_OUTDIR/$TRAVIS_PULL_REQUEST/$TRAVIS_JOB_NUMBER-$HOST\n-  - UNIVALUE_CONFIG_ALL=\"--prefix=$TRAVIS_BUILD_DIR/depends/$HOST --bindir=$OUTDIR/bin --libdir=$OUTDIR/lib\"\n-  - ./configure --cache-file=config.cache $UNIVALUE_CONFIG_ALL $UNIVALUE_CONFIG || ( cat config.log && false)\n-  - make -s $MAKEJOBS $GOAL || ( echo \"Build failure. Verbose build follows.\" && make $GOAL ; false )\n-  - export LD_LIBRARY_PATH=$TRAVIS_BUILD_DIR/depends/$HOST/lib\n-  - if [ \"$RUN_TESTS\" = \"true\" ]; then make $MAKEJOBS distcheck; fi\n-\n-matrix:\n-  fast_finish: true\n-  include:\n-    - os: linux\n-      compiler: gcc\n-      env: UNIVALUE_CONFIG=--host=x86_64-w64-mingw32 RUN_TESTS=false\n-      addons:\n-        apt:\n-          packages:\n-            - g++-mingw-w64-x86-64\n-            - gcc-mingw-w64-x86-64\n-            - binutils-mingw-w64-x86-64"
      },
      {
        "sha": "1fb429f3569c7f8a8e57e69bfb984ab905bccf15",
        "filename": "src/univalue/COPYING",
        "status": "removed",
        "additions": 0,
        "deletions": 19,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/COPYING",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/COPYING",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/COPYING?ref=3cd836c1d855b92e7c73ab31979f471c4f8dad68",
        "patch": "@@ -1,19 +0,0 @@\n-\n-Permission is hereby granted, free of charge, to any person obtaining a copy\n-of this software and associated documentation files (the \"Software\"), to deal\n-in the Software without restriction, including without limitation the rights\n-to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n-copies of the Software, and to permit persons to whom the Software is\n-furnished to do so, subject to the following conditions:\n-\n-The above copyright notice and this permission notice shall be included in\n-all copies or substantial portions of the Software.\n-\n-THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n-IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n-FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n-AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n-LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n-OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n-THE SOFTWARE.\n-"
      },
      {
        "sha": "34fe9e3f13dbcddb9bfa6122519f489362a54169",
        "filename": "src/univalue/Makefile.am",
        "status": "removed",
        "additions": 0,
        "deletions": 88,
        "changes": 88,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/Makefile.am?ref=3cd836c1d855b92e7c73ab31979f471c4f8dad68",
        "patch": "@@ -1,88 +0,0 @@\n-ACLOCAL_AMFLAGS = -I build-aux/m4\n-.PHONY: gen\n-.INTERMEDIATE: $(GENBIN)\n-\n-include_HEADERS = include/univalue.h\n-noinst_HEADERS = lib/univalue_escapes.h\n-\n-lib_LTLIBRARIES = libunivalue.la\n-\n-pkgconfigdir = $(libdir)/pkgconfig\n-pkgconfig_DATA = pc/libunivalue.pc\n-\n-libunivalue_la_SOURCES = \\\n-\tlib/univalue.cpp \\\n-\tlib/univalue_read.cpp \\\n-\tlib/univalue_write.cpp\n-\n-libunivalue_la_LDFLAGS = \\\n-\t-version-info $(LIBUNIVALUE_CURRENT):$(LIBUNIVALUE_REVISION):$(LIBUNIVALUE_AGE) \\\n-\t-no-undefined\n-libunivalue_la_CXXFLAGS = -I$(top_srcdir)/include\n-\n-TESTS = test/unitester\n-\n-GENBIN = gen/gen$(BUILD_EXEEXT)\n-GEN_SRCS = gen/gen.cpp\n-\n-$(GENBIN): $(GEN_SRCS)\n-\t@echo Building $@\n-\t$(AM_V_at)c++ -I$(top_srcdir)/include -o $@ $<\n-\n-gen: lib/univalue_escapes.h $(GENBIN)\n-\t@echo Updating $<\n-\t$(AM_V_at)$(GENBIN) > lib/univalue_escapes.h\n-\n-noinst_PROGRAMS = $(TESTS)\n-\n-TEST_DATA_DIR=test\n-\n-test_unitester_SOURCES = test/unitester.cpp\n-test_unitester_LDADD = libunivalue.la\n-test_unitester_CXXFLAGS = -I$(top_srcdir)/include -DJSON_TEST_SRC=\\\"$(srcdir)/$(TEST_DATA_DIR)\\\"\n-test_unitester_LDFLAGS = -static $(LIBTOOL_APP_LDFLAGS)\n-\n-TEST_FILES = \\\n-\t$(TEST_DATA_DIR)/fail10.json \\\n-\t$(TEST_DATA_DIR)/fail11.json \\\n-\t$(TEST_DATA_DIR)/fail12.json \\\n-\t$(TEST_DATA_DIR)/fail13.json \\\n-\t$(TEST_DATA_DIR)/fail14.json \\\n-\t$(TEST_DATA_DIR)/fail15.json \\\n-\t$(TEST_DATA_DIR)/fail16.json \\\n-\t$(TEST_DATA_DIR)/fail17.json \\\n-\t$(TEST_DATA_DIR)/fail18.json \\\n-\t$(TEST_DATA_DIR)/fail19.json \\\n-\t$(TEST_DATA_DIR)/fail1.json \\\n-\t$(TEST_DATA_DIR)/fail20.json \\\n-\t$(TEST_DATA_DIR)/fail21.json \\\n-\t$(TEST_DATA_DIR)/fail22.json \\\n-\t$(TEST_DATA_DIR)/fail23.json \\\n-\t$(TEST_DATA_DIR)/fail24.json \\\n-\t$(TEST_DATA_DIR)/fail25.json \\\n-\t$(TEST_DATA_DIR)/fail26.json \\\n-\t$(TEST_DATA_DIR)/fail27.json \\\n-\t$(TEST_DATA_DIR)/fail28.json \\\n-\t$(TEST_DATA_DIR)/fail29.json \\\n-\t$(TEST_DATA_DIR)/fail2.json \\\n-\t$(TEST_DATA_DIR)/fail30.json \\\n-\t$(TEST_DATA_DIR)/fail31.json \\\n-\t$(TEST_DATA_DIR)/fail32.json \\\n-\t$(TEST_DATA_DIR)/fail33.json \\\n-\t$(TEST_DATA_DIR)/fail34.json \\\n-\t$(TEST_DATA_DIR)/fail35.json \\\n-\t$(TEST_DATA_DIR)/fail36.json \\\n-\t$(TEST_DATA_DIR)/fail37.json \\\n-\t$(TEST_DATA_DIR)/fail3.json \\\n-\t$(TEST_DATA_DIR)/fail4.json \\\n-\t$(TEST_DATA_DIR)/fail5.json \\\n-\t$(TEST_DATA_DIR)/fail6.json \\\n-\t$(TEST_DATA_DIR)/fail7.json \\\n-\t$(TEST_DATA_DIR)/fail8.json \\\n-\t$(TEST_DATA_DIR)/fail9.json \\\n-\t$(TEST_DATA_DIR)/pass1.json \\\n-\t$(TEST_DATA_DIR)/pass2.json \\\n-\t$(TEST_DATA_DIR)/pass3.json \\\n-\t$(TEST_DATA_DIR)/round1.json\n-\n-EXTRA_DIST=$(TEST_FILES) $(GEN_SRCS)"
      },
      {
        "sha": "48167b083b0e82515a43b9cbd9912d738d260d56",
        "filename": "src/univalue/README",
        "status": "removed",
        "additions": 0,
        "deletions": 7,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/README",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/README",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/README?ref=3cd836c1d855b92e7c73ab31979f471c4f8dad68",
        "patch": "@@ -1,7 +0,0 @@\n-\n-\t\tUniValue\n-\n-A universal value object, with JSON encoding (output) and decoding (input).\n-\n-Built as a single dynamic RAII C++ object class, and no templates.\n-"
      },
      {
        "sha": "5530048e923e51909251e7e32f7023f1fc749999",
        "filename": "src/univalue/TODO",
        "status": "removed",
        "additions": 0,
        "deletions": 10,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/TODO",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/TODO",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/TODO?ref=3cd836c1d855b92e7c73ab31979f471c4f8dad68",
        "patch": "@@ -1,10 +0,0 @@\n-\n-Rearrange tree for easier 'git subtree' style use\n-\n-Move towards C++11 etc.\n-\n-Namespace support - must come up with useful shorthand, avoiding\n-long Univalue::Univalue::Univalue usages forced upon library users.\n-\n-Improve test suite\n-"
      },
      {
        "sha": "4b38721faad09b9339107bb375d2d31fdbde9d4a",
        "filename": "src/univalue/autogen.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 9,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/autogen.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/autogen.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/autogen.sh?ref=3cd836c1d855b92e7c73ab31979f471c4f8dad68",
        "patch": "@@ -1,9 +0,0 @@\n-#!/bin/sh\n-set -e\n-srcdir=\"$(dirname $0)\"\n-cd \"$srcdir\"\n-if [ -z ${LIBTOOLIZE} ] && GLIBTOOLIZE=\"`which glibtoolize 2>/dev/null`\"; then\n-  LIBTOOLIZE=\"${GLIBTOOLIZE}\"\n-  export LIBTOOLIZE\n-fi\n-autoreconf --install --force"
      },
      {
        "sha": "f063686524ea4b501f819e52865dff64f3ec5324",
        "filename": "src/univalue/build-aux/m4/.gitignore",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/build-aux/m4/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/build-aux/m4/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/build-aux/m4/.gitignore?ref=3cd836c1d855b92e7c73ab31979f471c4f8dad68",
        "patch": "@@ -1 +0,0 @@\n-/*.m4"
      },
      {
        "sha": "0515b632bdf9a02f5b978ab068744fa46de08f12",
        "filename": "src/univalue/configure.ac",
        "status": "removed",
        "additions": 0,
        "deletions": 69,
        "changes": 69,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/configure.ac?ref=3cd836c1d855b92e7c73ab31979f471c4f8dad68",
        "patch": "@@ -1,69 +0,0 @@\n-m4_define([libunivalue_major_version], [1])\n-m4_define([libunivalue_minor_version], [1])\n-m4_define([libunivalue_micro_version], [1])\n-m4_define([libunivalue_interface_age], [1])\n-# If you need a modifier for the version number. \n-# Normally empty, but can be used to make \"fixup\" releases.\n-m4_define([libunivalue_extraversion], [])\n-\n-dnl libtool versioning from libunivalue\n-m4_define([libunivalue_current], [m4_eval(100 * libunivalue_minor_version + libunivalue_micro_version - libunivalue_interface_age)])\n-m4_define([libunivalue_binary_age], [m4_eval(100 * libunivalue_minor_version + libunivalue_micro_version)])\n-m4_define([libunivalue_revision], [libunivalue_interface_age])\n-m4_define([libunivalue_age], [m4_eval(libunivalue_binary_age - libunivalue_interface_age)])\n-m4_define([libunivalue_version], [libunivalue_major_version().libunivalue_minor_version().libunivalue_micro_version()libunivalue_extraversion()])\n-\n-\n-AC_INIT([univalue], [1.0.1],\n-        [http://github.com/jgarzik/univalue/])\n-\n-dnl make the compilation flags quiet unless V=1 is used\n-m4_ifdef([AM_SILENT_RULES], [AM_SILENT_RULES([yes])])\n-\n-AC_PREREQ(2.60)\n-AC_CONFIG_SRCDIR([lib/univalue.cpp])\n-AC_CONFIG_AUX_DIR([build-aux])\n-AC_CONFIG_MACRO_DIR([build-aux/m4])\n-AC_CONFIG_HEADERS([univalue-config.h])\n-AM_INIT_AUTOMAKE([subdir-objects foreign])\n-\n-LIBUNIVALUE_MAJOR_VERSION=libunivalue_major_version\n-LIBUNIVALUE_MINOR_VERSION=libunivalue_minor_version\n-LIBUNIVALUE_MICRO_VERSION=libunivalue_micro_version\n-LIBUNIVALUE_INTERFACE_AGE=libunivalue_interface_age\n-\n-# ABI version\n-# http://www.gnu.org/software/libtool/manual/html_node/Updating-version-info.html\n-LIBUNIVALUE_CURRENT=libunivalue_current\n-LIBUNIVALUE_REVISION=libunivalue_revision\n-LIBUNIVALUE_AGE=libunivalue_age\n-\n-AC_SUBST(LIBUNIVALUE_CURRENT)\n-AC_SUBST(LIBUNIVALUE_REVISION)\n-AC_SUBST(LIBUNIVALUE_AGE)\n-\n-LT_INIT\n-LT_LANG([C++])\n-\n-case $host in\n-  *mingw*)\n-    LIBTOOL_APP_LDFLAGS=\"$LIBTOOL_APP_LDFLAGS -all-static\"\n-  ;;\n-esac\n-\n-BUILD_EXEEXT=\n-case $build in\n-  *mingw*)\n-    BUILD_EXEEXT=\".exe\"\n-  ;;\n-esac\n-\n-AC_CONFIG_FILES([\n-    Makefile\n-    pc/libunivalue.pc\n-    pc/libunivalue-uninstalled.pc])\n-\n-AC_SUBST(LIBTOOL_APP_LDFLAGS)\n-AC_SUBST(BUILD_EXEEXT)\n-AC_OUTPUT\n-"
      },
      {
        "sha": "17f361941d9e9eb14b1ba57d01ecfbc1afe9a5e6",
        "filename": "src/univalue/gen/gen.cpp",
        "status": "removed",
        "additions": 0,
        "deletions": 84,
        "changes": 84,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/gen/gen.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/gen/gen.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/gen/gen.cpp?ref=3cd836c1d855b92e7c73ab31979f471c4f8dad68",
        "patch": "@@ -1,84 +0,0 @@\n-// Copyright 2014 BitPay Inc.\n-// Distributed under the MIT software license, see the accompanying\n-// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-//\n-// To re-create univalue_escapes.h:\n-// $ g++ -o gen gen.cpp\n-// $ ./gen > univalue_escapes.h\n-//\n-\n-#include <stdio.h>\n-#include <string.h>\n-#include \"univalue.h\"\n-\n-using namespace std;\n-\n-static bool initEscapes;\n-static std::string escapes[256];\n-\n-static void initJsonEscape()\n-{\n-    // Escape all lower control characters (some get overridden with smaller sequences below)\n-    for (int ch=0x00; ch<0x20; ++ch) {\n-        char tmpbuf[20];\n-        snprintf(tmpbuf, sizeof(tmpbuf), \"\\\\u%04x\", ch);\n-        escapes[ch] = std::string(tmpbuf);\n-    }\n-\n-    escapes[(int)'\"'] = \"\\\\\\\"\";\n-    escapes[(int)'\\\\'] = \"\\\\\\\\\";\n-    escapes[(int)'\\b'] = \"\\\\b\";\n-    escapes[(int)'\\f'] = \"\\\\f\";\n-    escapes[(int)'\\n'] = \"\\\\n\";\n-    escapes[(int)'\\r'] = \"\\\\r\";\n-    escapes[(int)'\\t'] = \"\\\\t\";\n-    escapes[(int)'\\x7f'] = \"\\\\u007f\"; // U+007F DELETE\n-\n-    initEscapes = true;\n-}\n-\n-static void outputEscape()\n-{\n-\tprintf(\t\"// Automatically generated file. Do not modify.\\n\"\n-\t\t\"#ifndef BITCOIN_UNIVALUE_UNIVALUE_ESCAPES_H\\n\"\n-\t\t\"#define BITCOIN_UNIVALUE_UNIVALUE_ESCAPES_H\\n\"\n-\t\t\"static const char *escapes[256] = {\\n\");\n-\n-\tfor (unsigned int i = 0; i < 256; i++) {\n-\t\tif (escapes[i].empty()) {\n-\t\t\tprintf(\"\\tNULL,\\n\");\n-\t\t} else {\n-\t\t\tprintf(\"\\t\\\"\");\n-\n-\t\t\tunsigned int si;\n-\t\t\tfor (si = 0; si < escapes[i].size(); si++) {\n-\t\t\t\tchar ch = escapes[i][si];\n-\t\t\t\tswitch (ch) {\n-\t\t\t\tcase '\"':\n-\t\t\t\t\tprintf(\"\\\\\\\"\");\n-\t\t\t\t\tbreak;\n-\t\t\t\tcase '\\\\':\n-\t\t\t\t\tprintf(\"\\\\\\\\\");\n-\t\t\t\t\tbreak;\n-\t\t\t\tdefault:\n-\t\t\t\t\tprintf(\"%c\", escapes[i][si]);\n-\t\t\t\t\tbreak;\n-\t\t\t\t}\n-\t\t\t}\n-\n-\t\t\tprintf(\"\\\",\\n\");\n-\t\t}\n-\t}\n-\n-\tprintf(\t\"};\\n\"\n-\t\t\"#endif // BITCOIN_UNIVALUE_UNIVALUE_ESCAPES_H\\n\");\n-}\n-\n-int main (int argc, char *argv[])\n-{\n-\tinitJsonEscape();\n-\toutputEscape();\n-\treturn 0;\n-}\n-"
      },
      {
        "sha": "8428b1c683ac38fb592838ef968c2927ca11e32f",
        "filename": "src/univalue/include/univalue.h",
        "status": "removed",
        "additions": 0,
        "deletions": 283,
        "changes": 283,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/include/univalue.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/include/univalue.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/include/univalue.h?ref=3cd836c1d855b92e7c73ab31979f471c4f8dad68",
        "patch": "@@ -1,283 +0,0 @@\n-// Copyright 2014 BitPay Inc.\n-// Copyright 2015 Bitcoin Core Developers\n-// Distributed under the MIT software license, see the accompanying\n-// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-#ifndef __UNIVALUE_H__\n-#define __UNIVALUE_H__\n-\n-#include <stdint.h>\n-\n-#include <string>\n-#include <vector>\n-#include <map>\n-#include <cassert>\n-\n-#include <sstream>        // .get_int64()\n-#include <utility>        // std::pair\n-\n-class UniValue {\n-public:\n-    enum VType { VNULL, VOBJ, VARR, VSTR, VNUM, VBOOL, };\n-\n-    UniValue() { typ = VNULL; }\n-    UniValue(UniValue::VType initialType, const std::string& initialStr = \"\") {\n-        typ = initialType;\n-        val = initialStr;\n-    }\n-    UniValue(uint64_t val_) {\n-        setInt(val_);\n-    }\n-    UniValue(int64_t val_) {\n-        setInt(val_);\n-    }\n-    UniValue(bool val_) {\n-        setBool(val_);\n-    }\n-    UniValue(int val_) {\n-        setInt(val_);\n-    }\n-    UniValue(double val_) {\n-        setFloat(val_);\n-    }\n-    UniValue(const std::string& val_) {\n-        setStr(val_);\n-    }\n-    UniValue(const char *val_) {\n-        std::string s(val_);\n-        setStr(s);\n-    }\n-    ~UniValue() {}\n-\n-    void clear();\n-\n-    bool setNull();\n-    bool setBool(bool val);\n-    bool setNumStr(const std::string& val);\n-    bool setInt(uint64_t val);\n-    bool setInt(int64_t val);\n-    bool setInt(int val) { return setInt((int64_t)val); }\n-    bool setFloat(double val);\n-    bool setStr(const std::string& val);\n-    bool setArray();\n-    bool setObject();\n-\n-    enum VType getType() const { return typ; }\n-    const std::string& getValStr() const { return val; }\n-    bool empty() const { return (values.size() == 0); }\n-\n-    size_t size() const { return values.size(); }\n-\n-    bool getBool() const { return isTrue(); }\n-    bool checkObject(const std::map<std::string,UniValue::VType>& memberTypes);\n-    const UniValue& operator[](const std::string& key) const;\n-    const UniValue& operator[](unsigned int index) const;\n-    bool exists(const std::string& key) const { return (findKey(key) >= 0); }\n-\n-    bool isNull() const { return (typ == VNULL); }\n-    bool isTrue() const { return (typ == VBOOL) && (val == \"1\"); }\n-    bool isFalse() const { return (typ == VBOOL) && (val != \"1\"); }\n-    bool isBool() const { return (typ == VBOOL); }\n-    bool isStr() const { return (typ == VSTR); }\n-    bool isNum() const { return (typ == VNUM); }\n-    bool isArray() const { return (typ == VARR); }\n-    bool isObject() const { return (typ == VOBJ); }\n-\n-    bool push_back(const UniValue& val);\n-    bool push_back(const std::string& val_) {\n-        UniValue tmpVal(VSTR, val_);\n-        return push_back(tmpVal);\n-    }\n-    bool push_back(const char *val_) {\n-        std::string s(val_);\n-        return push_back(s);\n-    }\n-    bool push_backV(const std::vector<UniValue>& vec);\n-\n-    bool pushKV(const std::string& key, const UniValue& val);\n-    bool pushKV(const std::string& key, const std::string& val) {\n-        UniValue tmpVal(VSTR, val);\n-        return pushKV(key, tmpVal);\n-    }\n-    bool pushKV(const std::string& key, const char *val_) {\n-        std::string val(val_);\n-        return pushKV(key, val);\n-    }\n-    bool pushKV(const std::string& key, int64_t val) {\n-        UniValue tmpVal(val);\n-        return pushKV(key, tmpVal);\n-    }\n-    bool pushKV(const std::string& key, uint64_t val) {\n-        UniValue tmpVal(val);\n-        return pushKV(key, tmpVal);\n-    }\n-    bool pushKV(const std::string& key, int val) {\n-        UniValue tmpVal((int64_t)val);\n-        return pushKV(key, tmpVal);\n-    }\n-    bool pushKV(const std::string& key, double val) {\n-        UniValue tmpVal(val);\n-        return pushKV(key, tmpVal);\n-    }\n-    bool pushKVs(const UniValue& obj);\n-\n-    std::string write(unsigned int prettyIndent = 0,\n-                      unsigned int indentLevel = 0) const;\n-\n-    bool read(const char *raw);\n-    bool read(const std::string& rawStr) {\n-        return read(rawStr.c_str());\n-    }\n-\n-private:\n-    UniValue::VType typ;\n-    std::string val;                       // numbers are stored as C++ strings\n-    std::vector<std::string> keys;\n-    std::vector<UniValue> values;\n-\n-    int findKey(const std::string& key) const;\n-    void writeArray(unsigned int prettyIndent, unsigned int indentLevel, std::string& s) const;\n-    void writeObject(unsigned int prettyIndent, unsigned int indentLevel, std::string& s) const;\n-\n-public:\n-    // Strict type-specific getters, these throw std::runtime_error if the\n-    // value is of unexpected type\n-    std::vector<std::string> getKeys() const;\n-    std::vector<UniValue> getValues() const;\n-    bool get_bool() const;\n-    std::string get_str() const;\n-    int get_int() const;\n-    int64_t get_int64() const;\n-    double get_real() const;\n-    const UniValue& get_obj() const;\n-    const UniValue& get_array() const;\n-\n-    enum VType type() const { return getType(); }\n-    bool push_back(std::pair<std::string,UniValue> pear) {\n-        return pushKV(pear.first, pear.second);\n-    }\n-    friend const UniValue& find_value( const UniValue& obj, const std::string& name);\n-};\n-\n-//\n-// The following were added for compatibility with json_spirit.\n-// Most duplicate other methods, and should be removed.\n-//\n-static inline std::pair<std::string,UniValue> Pair(const char *cKey, const char *cVal)\n-{\n-    std::string key(cKey);\n-    UniValue uVal(cVal);\n-    return std::make_pair(key, uVal);\n-}\n-\n-static inline std::pair<std::string,UniValue> Pair(const char *cKey, std::string strVal)\n-{\n-    std::string key(cKey);\n-    UniValue uVal(strVal);\n-    return std::make_pair(key, uVal);\n-}\n-\n-static inline std::pair<std::string,UniValue> Pair(const char *cKey, uint64_t u64Val)\n-{\n-    std::string key(cKey);\n-    UniValue uVal(u64Val);\n-    return std::make_pair(key, uVal);\n-}\n-\n-static inline std::pair<std::string,UniValue> Pair(const char *cKey, int64_t i64Val)\n-{\n-    std::string key(cKey);\n-    UniValue uVal(i64Val);\n-    return std::make_pair(key, uVal);\n-}\n-\n-static inline std::pair<std::string,UniValue> Pair(const char *cKey, bool iVal)\n-{\n-    std::string key(cKey);\n-    UniValue uVal(iVal);\n-    return std::make_pair(key, uVal);\n-}\n-\n-static inline std::pair<std::string,UniValue> Pair(const char *cKey, int iVal)\n-{\n-    std::string key(cKey);\n-    UniValue uVal(iVal);\n-    return std::make_pair(key, uVal);\n-}\n-\n-static inline std::pair<std::string,UniValue> Pair(const char *cKey, double dVal)\n-{\n-    std::string key(cKey);\n-    UniValue uVal(dVal);\n-    return std::make_pair(key, uVal);\n-}\n-\n-static inline std::pair<std::string,UniValue> Pair(const char *cKey, const UniValue& uVal)\n-{\n-    std::string key(cKey);\n-    return std::make_pair(key, uVal);\n-}\n-\n-static inline std::pair<std::string,UniValue> Pair(std::string key, const UniValue& uVal)\n-{\n-    return std::make_pair(key, uVal);\n-}\n-\n-enum jtokentype {\n-    JTOK_ERR        = -1,\n-    JTOK_NONE       = 0,                           // eof\n-    JTOK_OBJ_OPEN,\n-    JTOK_OBJ_CLOSE,\n-    JTOK_ARR_OPEN,\n-    JTOK_ARR_CLOSE,\n-    JTOK_COLON,\n-    JTOK_COMMA,\n-    JTOK_KW_NULL,\n-    JTOK_KW_TRUE,\n-    JTOK_KW_FALSE,\n-    JTOK_NUMBER,\n-    JTOK_STRING,\n-};\n-\n-extern enum jtokentype getJsonToken(std::string& tokenVal,\n-                                    unsigned int& consumed, const char *raw);\n-extern const char *uvTypeName(UniValue::VType t);\n-\n-static inline bool jsonTokenIsValue(enum jtokentype jtt)\n-{\n-    switch (jtt) {\n-    case JTOK_KW_NULL:\n-    case JTOK_KW_TRUE:\n-    case JTOK_KW_FALSE:\n-    case JTOK_NUMBER:\n-    case JTOK_STRING:\n-        return true;\n-\n-    default:\n-        return false;\n-    }\n-\n-    // not reached\n-}\n-\n-static inline bool json_isspace(int ch)\n-{\n-    switch (ch) {\n-    case 0x20:\n-    case 0x09:\n-    case 0x0a:\n-    case 0x0d:\n-        return true;\n-\n-    default:\n-        return false;\n-    }\n-\n-    // not reached\n-}\n-\n-extern const UniValue NullUniValue;\n-\n-const UniValue& find_value( const UniValue& obj, const std::string& name);\n-\n-#endif // __UNIVALUE_H__"
      },
      {
        "sha": "ee7fc2851cd511579ee60c7a9fa916f3897c11e2",
        "filename": "src/univalue/lib/.gitignore",
        "status": "removed",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/lib/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/lib/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/lib/.gitignore?ref=3cd836c1d855b92e7c73ab31979f471c4f8dad68",
        "patch": "@@ -1,2 +0,0 @@\n-gen\n-.libs"
      },
      {
        "sha": "0076d6678ec7985cebf9e8457f7a171c307aadad",
        "filename": "src/univalue/lib/univalue.cpp",
        "status": "removed",
        "additions": 0,
        "deletions": 360,
        "changes": 360,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/lib/univalue.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/lib/univalue.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/lib/univalue.cpp?ref=3cd836c1d855b92e7c73ab31979f471c4f8dad68",
        "patch": "@@ -1,360 +0,0 @@\n-// Copyright 2014 BitPay Inc.\n-// Copyright 2015 Bitcoin Core Developers\n-// Distributed under the MIT software license, see the accompanying\n-// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-#include <stdint.h>\n-#include <errno.h>\n-#include <iomanip>\n-#include <limits>\n-#include <sstream>\n-#include <stdexcept>\n-#include <stdlib.h>\n-#include <string.h>\n-\n-#include \"univalue.h\"\n-\n-namespace \n-{\n-static bool ParsePrechecks(const std::string& str)\n-{\n-    if (str.empty()) // No empty string allowed\n-        return false;\n-    if (str.size() >= 1 && (json_isspace(str[0]) || json_isspace(str[str.size()-1]))) // No padding allowed\n-        return false;\n-    if (str.size() != strlen(str.c_str())) // No embedded NUL characters allowed\n-        return false;\n-    return true;\n-}\n-\n-bool ParseInt32(const std::string& str, int32_t *out)\n-{\n-    if (!ParsePrechecks(str))\n-        return false;\n-    char *endp = NULL;\n-    errno = 0; // strtol will not set errno if valid\n-    long int n = strtol(str.c_str(), &endp, 10);\n-    if(out) *out = (int32_t)n;\n-    // Note that strtol returns a *long int*, so even if strtol doesn't report a over/underflow\n-    // we still have to check that the returned value is within the range of an *int32_t*. On 64-bit\n-    // platforms the size of these types may be different.\n-    return endp && *endp == 0 && !errno &&\n-        n >= std::numeric_limits<int32_t>::min() &&\n-        n <= std::numeric_limits<int32_t>::max();\n-}\n-\n-bool ParseInt64(const std::string& str, int64_t *out)\n-{\n-    if (!ParsePrechecks(str))\n-        return false;\n-    char *endp = NULL;\n-    errno = 0; // strtoll will not set errno if valid\n-    long long int n = strtoll(str.c_str(), &endp, 10);\n-    if(out) *out = (int64_t)n;\n-    // Note that strtoll returns a *long long int*, so even if strtol doesn't report a over/underflow\n-    // we still have to check that the returned value is within the range of an *int64_t*.\n-    return endp && *endp == 0 && !errno &&\n-        n >= std::numeric_limits<int64_t>::min() &&\n-        n <= std::numeric_limits<int64_t>::max();\n-}\n-\n-bool ParseDouble(const std::string& str, double *out)\n-{\n-    if (!ParsePrechecks(str))\n-        return false;\n-    if (str.size() >= 2 && str[0] == '0' && str[1] == 'x') // No hexadecimal floats allowed\n-        return false;\n-    std::istringstream text(str);\n-    text.imbue(std::locale::classic());\n-    double result;\n-    text >> result;\n-    if(out) *out = result;\n-    return text.eof() && !text.fail();\n-}\n-}\n-\n-using namespace std;\n-\n-const UniValue NullUniValue;\n-\n-void UniValue::clear()\n-{\n-    typ = VNULL;\n-    val.clear();\n-    keys.clear();\n-    values.clear();\n-}\n-\n-bool UniValue::setNull()\n-{\n-    clear();\n-    return true;\n-}\n-\n-bool UniValue::setBool(bool val_)\n-{\n-    clear();\n-    typ = VBOOL;\n-    if (val_)\n-        val = \"1\";\n-    return true;\n-}\n-\n-static bool validNumStr(const string& s)\n-{\n-    string tokenVal;\n-    unsigned int consumed;\n-    enum jtokentype tt = getJsonToken(tokenVal, consumed, s.c_str());\n-    return (tt == JTOK_NUMBER);\n-}\n-\n-bool UniValue::setNumStr(const string& val_)\n-{\n-    if (!validNumStr(val_))\n-        return false;\n-\n-    clear();\n-    typ = VNUM;\n-    val = val_;\n-    return true;\n-}\n-\n-bool UniValue::setInt(uint64_t val)\n-{\n-    string s;\n-    ostringstream oss;\n-\n-    oss << val;\n-\n-    return setNumStr(oss.str());\n-}\n-\n-bool UniValue::setInt(int64_t val)\n-{\n-    string s;\n-    ostringstream oss;\n-\n-    oss << val;\n-\n-    return setNumStr(oss.str());\n-}\n-\n-bool UniValue::setFloat(double val)\n-{\n-    string s;\n-    ostringstream oss;\n-\n-    oss << std::setprecision(16) << val;\n-\n-    bool ret = setNumStr(oss.str());\n-    typ = VNUM;\n-    return ret;\n-}\n-\n-bool UniValue::setStr(const string& val_)\n-{\n-    clear();\n-    typ = VSTR;\n-    val = val_;\n-    return true;\n-}\n-\n-bool UniValue::setArray()\n-{\n-    clear();\n-    typ = VARR;\n-    return true;\n-}\n-\n-bool UniValue::setObject()\n-{\n-    clear();\n-    typ = VOBJ;\n-    return true;\n-}\n-\n-bool UniValue::push_back(const UniValue& val)\n-{\n-    if (typ != VARR)\n-        return false;\n-\n-    values.push_back(val);\n-    return true;\n-}\n-\n-bool UniValue::push_backV(const std::vector<UniValue>& vec)\n-{\n-    if (typ != VARR)\n-        return false;\n-\n-    values.insert(values.end(), vec.begin(), vec.end());\n-\n-    return true;\n-}\n-\n-bool UniValue::pushKV(const std::string& key, const UniValue& val)\n-{\n-    if (typ != VOBJ)\n-        return false;\n-\n-    keys.push_back(key);\n-    values.push_back(val);\n-    return true;\n-}\n-\n-bool UniValue::pushKVs(const UniValue& obj)\n-{\n-    if (typ != VOBJ || obj.typ != VOBJ)\n-        return false;\n-\n-    for (unsigned int i = 0; i < obj.keys.size(); i++) {\n-        keys.push_back(obj.keys[i]);\n-        values.push_back(obj.values.at(i));\n-    }\n-\n-    return true;\n-}\n-\n-int UniValue::findKey(const std::string& key) const\n-{\n-    for (unsigned int i = 0; i < keys.size(); i++) {\n-        if (keys[i] == key)\n-            return (int) i;\n-    }\n-\n-    return -1;\n-}\n-\n-bool UniValue::checkObject(const std::map<std::string,UniValue::VType>& t)\n-{\n-    for (std::map<std::string,UniValue::VType>::const_iterator it = t.begin();\n-         it != t.end(); it++) {\n-        int idx = findKey(it->first);\n-        if (idx < 0)\n-            return false;\n-\n-        if (values.at(idx).getType() != it->second)\n-            return false;\n-    }\n-\n-    return true;\n-}\n-\n-const UniValue& UniValue::operator[](const std::string& key) const\n-{\n-    if (typ != VOBJ)\n-        return NullUniValue;\n-\n-    int index = findKey(key);\n-    if (index < 0)\n-        return NullUniValue;\n-\n-    return values.at(index);\n-}\n-\n-const UniValue& UniValue::operator[](unsigned int index) const\n-{\n-    if (typ != VOBJ && typ != VARR)\n-        return NullUniValue;\n-    if (index >= values.size())\n-        return NullUniValue;\n-\n-    return values.at(index);\n-}\n-\n-const char *uvTypeName(UniValue::VType t)\n-{\n-    switch (t) {\n-    case UniValue::VNULL: return \"null\";\n-    case UniValue::VBOOL: return \"bool\";\n-    case UniValue::VOBJ: return \"object\";\n-    case UniValue::VARR: return \"array\";\n-    case UniValue::VSTR: return \"string\";\n-    case UniValue::VNUM: return \"number\";\n-    }\n-\n-    // not reached\n-    return NULL;\n-}\n-\n-const UniValue& find_value(const UniValue& obj, const std::string& name)\n-{\n-    for (unsigned int i = 0; i < obj.keys.size(); i++)\n-        if (obj.keys[i] == name)\n-            return obj.values.at(i);\n-\n-    return NullUniValue;\n-}\n-\n-std::vector<std::string> UniValue::getKeys() const\n-{\n-    if (typ != VOBJ)\n-        throw std::runtime_error(\"JSON value is not an object as expected\");\n-    return keys;\n-}\n-\n-std::vector<UniValue> UniValue::getValues() const\n-{\n-    if (typ != VOBJ && typ != VARR)\n-        throw std::runtime_error(\"JSON value is not an object or array as expected\");\n-    return values;\n-}\n-\n-bool UniValue::get_bool() const\n-{\n-    if (typ != VBOOL)\n-        throw std::runtime_error(\"JSON value is not a boolean as expected\");\n-    return getBool();\n-}\n-\n-std::string UniValue::get_str() const\n-{\n-    if (typ != VSTR)\n-        throw std::runtime_error(\"JSON value is not a string as expected\");\n-    return getValStr();\n-}\n-\n-int UniValue::get_int() const\n-{\n-    if (typ != VNUM)\n-        throw std::runtime_error(\"JSON value is not an integer as expected\");\n-    int32_t retval;\n-    if (!ParseInt32(getValStr(), &retval))\n-        throw std::runtime_error(\"JSON integer out of range\");\n-    return retval;\n-}\n-\n-int64_t UniValue::get_int64() const\n-{\n-    if (typ != VNUM)\n-        throw std::runtime_error(\"JSON value is not an integer as expected\");\n-    int64_t retval;\n-    if (!ParseInt64(getValStr(), &retval))\n-        throw std::runtime_error(\"JSON integer out of range\");\n-    return retval;\n-}\n-\n-double UniValue::get_real() const\n-{\n-    if (typ != VNUM)\n-        throw std::runtime_error(\"JSON value is not a number as expected\");\n-    double retval;\n-    if (!ParseDouble(getValStr(), &retval))\n-        throw std::runtime_error(\"JSON double out of range\");\n-    return retval;\n-}\n-\n-const UniValue& UniValue::get_obj() const\n-{\n-    if (typ != VOBJ)\n-        throw std::runtime_error(\"JSON value is not an object as expected\");\n-    return *this;\n-}\n-\n-const UniValue& UniValue::get_array() const\n-{\n-    if (typ != VARR)\n-        throw std::runtime_error(\"JSON value is not an array as expected\");\n-    return *this;\n-}\n-"
      },
      {
        "sha": "74596aab6d2c9948d6bbd8bec91507dac58327d9",
        "filename": "src/univalue/lib/univalue_escapes.h",
        "status": "removed",
        "additions": 0,
        "deletions": 262,
        "changes": 262,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/lib/univalue_escapes.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/lib/univalue_escapes.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/lib/univalue_escapes.h?ref=3cd836c1d855b92e7c73ab31979f471c4f8dad68",
        "patch": "@@ -1,262 +0,0 @@\n-// Automatically generated file. Do not modify.\n-#ifndef BITCOIN_UNIVALUE_UNIVALUE_ESCAPES_H\n-#define BITCOIN_UNIVALUE_UNIVALUE_ESCAPES_H\n-static const char *escapes[256] = {\n-\t\"\\\\u0000\",\n-\t\"\\\\u0001\",\n-\t\"\\\\u0002\",\n-\t\"\\\\u0003\",\n-\t\"\\\\u0004\",\n-\t\"\\\\u0005\",\n-\t\"\\\\u0006\",\n-\t\"\\\\u0007\",\n-\t\"\\\\b\",\n-\t\"\\\\t\",\n-\t\"\\\\n\",\n-\t\"\\\\u000b\",\n-\t\"\\\\f\",\n-\t\"\\\\r\",\n-\t\"\\\\u000e\",\n-\t\"\\\\u000f\",\n-\t\"\\\\u0010\",\n-\t\"\\\\u0011\",\n-\t\"\\\\u0012\",\n-\t\"\\\\u0013\",\n-\t\"\\\\u0014\",\n-\t\"\\\\u0015\",\n-\t\"\\\\u0016\",\n-\t\"\\\\u0017\",\n-\t\"\\\\u0018\",\n-\t\"\\\\u0019\",\n-\t\"\\\\u001a\",\n-\t\"\\\\u001b\",\n-\t\"\\\\u001c\",\n-\t\"\\\\u001d\",\n-\t\"\\\\u001e\",\n-\t\"\\\\u001f\",\n-\tNULL,\n-\tNULL,\n-\t\"\\\\\\\"\",\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\t\"\\\\\\\\\",\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\t\"\\\\u007f\",\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-\tNULL,\n-};\n-#endif // BITCOIN_UNIVALUE_UNIVALUE_ESCAPES_H"
      },
      {
        "sha": "c7516b9628169df180e93fa5a942ccbc11b5b706",
        "filename": "src/univalue/lib/univalue_read.cpp",
        "status": "removed",
        "additions": 0,
        "deletions": 448,
        "changes": 448,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/lib/univalue_read.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/lib/univalue_read.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/lib/univalue_read.cpp?ref=3cd836c1d855b92e7c73ab31979f471c4f8dad68",
        "patch": "@@ -1,448 +0,0 @@\n-// Copyright 2014 BitPay Inc.\n-// Distributed under the MIT software license, see the accompanying\n-// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-#include <string.h>\n-#include <vector>\n-#include <stdio.h>\n-#include \"univalue.h\"\n-\n-using namespace std;\n-\n-static bool json_isdigit(int ch)\n-{\n-    return ((ch >= '0') && (ch <= '9'));\n-}\n-\n-// convert hexadecimal string to unsigned integer\n-static const char *hatoui(const char *first, const char *last,\n-                          unsigned int& out)\n-{\n-    unsigned int result = 0;\n-    for (; first != last; ++first)\n-    {\n-        int digit;\n-        if (json_isdigit(*first))\n-            digit = *first - '0';\n-\n-        else if (*first >= 'a' && *first <= 'f')\n-            digit = *first - 'a' + 10;\n-\n-        else if (*first >= 'A' && *first <= 'F')\n-            digit = *first - 'A' + 10;\n-\n-        else\n-            break;\n-\n-        result = 16 * result + digit;\n-    }\n-    out = result;\n-\n-    return first;\n-}\n-\n-enum jtokentype getJsonToken(string& tokenVal, unsigned int& consumed,\n-                            const char *raw)\n-{\n-    tokenVal.clear();\n-    consumed = 0;\n-\n-    const char *rawStart = raw;\n-\n-    while ((*raw) && (json_isspace(*raw)))             // skip whitespace\n-        raw++;\n-\n-    switch (*raw) {\n-\n-    case 0:\n-        return JTOK_NONE;\n-\n-    case '{':\n-        raw++;\n-        consumed = (raw - rawStart);\n-        return JTOK_OBJ_OPEN;\n-    case '}':\n-        raw++;\n-        consumed = (raw - rawStart);\n-        return JTOK_OBJ_CLOSE;\n-    case '[':\n-        raw++;\n-        consumed = (raw - rawStart);\n-        return JTOK_ARR_OPEN;\n-    case ']':\n-        raw++;\n-        consumed = (raw - rawStart);\n-        return JTOK_ARR_CLOSE;\n-\n-    case ':':\n-        raw++;\n-        consumed = (raw - rawStart);\n-        return JTOK_COLON;\n-    case ',':\n-        raw++;\n-        consumed = (raw - rawStart);\n-        return JTOK_COMMA;\n-\n-    case 'n':\n-    case 't':\n-    case 'f':\n-        if (!strncmp(raw, \"null\", 4)) {\n-            raw += 4;\n-            consumed = (raw - rawStart);\n-            return JTOK_KW_NULL;\n-        } else if (!strncmp(raw, \"true\", 4)) {\n-            raw += 4;\n-            consumed = (raw - rawStart);\n-            return JTOK_KW_TRUE;\n-        } else if (!strncmp(raw, \"false\", 5)) {\n-            raw += 5;\n-            consumed = (raw - rawStart);\n-            return JTOK_KW_FALSE;\n-        } else\n-            return JTOK_ERR;\n-\n-    case '-':\n-    case '0':\n-    case '1':\n-    case '2':\n-    case '3':\n-    case '4':\n-    case '5':\n-    case '6':\n-    case '7':\n-    case '8':\n-    case '9': {\n-        // part 1: int\n-        string numStr;\n-\n-        const char *first = raw;\n-\n-        const char *firstDigit = first;\n-        if (!json_isdigit(*firstDigit))\n-            firstDigit++;\n-        if ((*firstDigit == '0') && json_isdigit(firstDigit[1]))\n-            return JTOK_ERR;\n-\n-        numStr += *raw;                       // copy first char\n-        raw++;\n-\n-        if ((*first == '-') && (!json_isdigit(*raw)))\n-            return JTOK_ERR;\n-\n-        while ((*raw) && json_isdigit(*raw)) {     // copy digits\n-            numStr += *raw;\n-            raw++;\n-        }\n-\n-        // part 2: frac\n-        if (*raw == '.') {\n-            numStr += *raw;                   // copy .\n-            raw++;\n-\n-            if (!json_isdigit(*raw))\n-                return JTOK_ERR;\n-            while ((*raw) && json_isdigit(*raw)) { // copy digits\n-                numStr += *raw;\n-                raw++;\n-            }\n-        }\n-\n-        // part 3: exp\n-        if (*raw == 'e' || *raw == 'E') {\n-            numStr += *raw;                   // copy E\n-            raw++;\n-\n-            if (*raw == '-' || *raw == '+') { // copy +/-\n-                numStr += *raw;\n-                raw++;\n-            }\n-\n-            if (!json_isdigit(*raw))\n-                return JTOK_ERR;\n-            while ((*raw) && json_isdigit(*raw)) { // copy digits\n-                numStr += *raw;\n-                raw++;\n-            }\n-        }\n-\n-        tokenVal = numStr;\n-        consumed = (raw - rawStart);\n-        return JTOK_NUMBER;\n-        }\n-\n-    case '\"': {\n-        raw++;                                // skip \"\n-\n-        string valStr;\n-\n-        while (*raw) {\n-            if (*raw < 0x20)\n-                return JTOK_ERR;\n-\n-            else if (*raw == '\\\\') {\n-                raw++;                        // skip backslash\n-\n-                switch (*raw) {\n-                case '\"':  valStr += \"\\\"\"; break;\n-                case '\\\\': valStr += \"\\\\\"; break;\n-                case '/':  valStr += \"/\"; break;\n-                case 'b':  valStr += \"\\b\"; break;\n-                case 'f':  valStr += \"\\f\"; break;\n-                case 'n':  valStr += \"\\n\"; break;\n-                case 'r':  valStr += \"\\r\"; break;\n-                case 't':  valStr += \"\\t\"; break;\n-\n-                case 'u': {\n-                    unsigned int codepoint;\n-                    if (hatoui(raw + 1, raw + 1 + 4, codepoint) !=\n-                               raw + 1 + 4)\n-                        return JTOK_ERR;\n-\n-                    if (codepoint <= 0x7f)\n-                        valStr.push_back((char)codepoint);\n-                    else if (codepoint <= 0x7FF) {\n-                        valStr.push_back((char)(0xC0 | (codepoint >> 6)));\n-                        valStr.push_back((char)(0x80 | (codepoint & 0x3F)));\n-                    } else if (codepoint <= 0xFFFF) {\n-                        valStr.push_back((char)(0xE0 | (codepoint >> 12)));\n-                        valStr.push_back((char)(0x80 | ((codepoint >> 6) & 0x3F)));\n-                        valStr.push_back((char)(0x80 | (codepoint & 0x3F)));\n-                    }\n-\n-                    raw += 4;\n-                    break;\n-                    }\n-                default:\n-                    return JTOK_ERR;\n-\n-                }\n-\n-                raw++;                        // skip esc'd char\n-            }\n-\n-            else if (*raw == '\"') {\n-                raw++;                        // skip \"\n-                break;                        // stop scanning\n-            }\n-\n-            else {\n-                valStr += *raw;\n-                raw++;\n-            }\n-        }\n-\n-        tokenVal = valStr;\n-        consumed = (raw - rawStart);\n-        return JTOK_STRING;\n-        }\n-\n-    default:\n-        return JTOK_ERR;\n-    }\n-}\n-\n-enum expect_bits {\n-    EXP_OBJ_NAME = (1U << 0),\n-    EXP_COLON = (1U << 1),\n-    EXP_ARR_VALUE = (1U << 2),\n-    EXP_VALUE = (1U << 3),\n-    EXP_NOT_VALUE = (1U << 4),\n-};\n-\n-#define expect(bit) (expectMask & (EXP_##bit))\n-#define setExpect(bit) (expectMask |= EXP_##bit)\n-#define clearExpect(bit) (expectMask &= ~EXP_##bit)\n-\n-bool UniValue::read(const char *raw)\n-{\n-    clear();\n-\n-    uint32_t expectMask = 0;\n-    vector<UniValue*> stack;\n-\n-    string tokenVal;\n-    unsigned int consumed;\n-    enum jtokentype tok = JTOK_NONE;\n-    enum jtokentype last_tok = JTOK_NONE;\n-    do {\n-        last_tok = tok;\n-\n-        tok = getJsonToken(tokenVal, consumed, raw);\n-        if (tok == JTOK_NONE || tok == JTOK_ERR)\n-            return false;\n-        raw += consumed;\n-\n-        bool isValueOpen = jsonTokenIsValue(tok) ||\n-            tok == JTOK_OBJ_OPEN || tok == JTOK_ARR_OPEN;\n-\n-        if (expect(VALUE)) {\n-            if (!isValueOpen)\n-                return false;\n-            clearExpect(VALUE);\n-\n-        } else if (expect(ARR_VALUE)) {\n-            bool isArrValue = isValueOpen || (tok == JTOK_ARR_CLOSE);\n-            if (!isArrValue)\n-                return false;\n-\n-            clearExpect(ARR_VALUE);\n-\n-        } else if (expect(OBJ_NAME)) {\n-            bool isObjName = (tok == JTOK_OBJ_CLOSE || tok == JTOK_STRING);\n-            if (!isObjName)\n-                return false;\n-\n-        } else if (expect(COLON)) {\n-            if (tok != JTOK_COLON)\n-                return false;\n-            clearExpect(COLON);\n-\n-        } else if (!expect(COLON) && (tok == JTOK_COLON)) {\n-            return false;\n-        }\n-\n-        if (expect(NOT_VALUE)) {\n-            if (isValueOpen)\n-                return false;\n-            clearExpect(NOT_VALUE);\n-        }\n-\n-        switch (tok) {\n-\n-        case JTOK_OBJ_OPEN:\n-        case JTOK_ARR_OPEN: {\n-            VType utyp = (tok == JTOK_OBJ_OPEN ? VOBJ : VARR);\n-            if (!stack.size()) {\n-                if (utyp == VOBJ)\n-                    setObject();\n-                else\n-                    setArray();\n-                stack.push_back(this);\n-            } else {\n-                UniValue tmpVal(utyp);\n-                UniValue *top = stack.back();\n-                top->values.push_back(tmpVal);\n-\n-                UniValue *newTop = &(top->values.back());\n-                stack.push_back(newTop);\n-            }\n-\n-            if (utyp == VOBJ)\n-                setExpect(OBJ_NAME);\n-            else\n-                setExpect(ARR_VALUE);\n-            break;\n-            }\n-\n-        case JTOK_OBJ_CLOSE:\n-        case JTOK_ARR_CLOSE: {\n-            if (!stack.size() || (last_tok == JTOK_COMMA))\n-                return false;\n-\n-            VType utyp = (tok == JTOK_OBJ_CLOSE ? VOBJ : VARR);\n-            UniValue *top = stack.back();\n-            if (utyp != top->getType())\n-                return false;\n-\n-            stack.pop_back();\n-            clearExpect(OBJ_NAME);\n-            setExpect(NOT_VALUE);\n-            break;\n-            }\n-\n-        case JTOK_COLON: {\n-            if (!stack.size())\n-                return false;\n-\n-            UniValue *top = stack.back();\n-            if (top->getType() != VOBJ)\n-                return false;\n-\n-            setExpect(VALUE);\n-            break;\n-            }\n-\n-        case JTOK_COMMA: {\n-            if (!stack.size() ||\n-                (last_tok == JTOK_COMMA) || (last_tok == JTOK_ARR_OPEN))\n-                return false;\n-\n-            UniValue *top = stack.back();\n-            if (top->getType() == VOBJ)\n-                setExpect(OBJ_NAME);\n-            else\n-                setExpect(ARR_VALUE);\n-            break;\n-            }\n-\n-        case JTOK_KW_NULL:\n-        case JTOK_KW_TRUE:\n-        case JTOK_KW_FALSE: {\n-            if (!stack.size())\n-                return false;\n-\n-            UniValue tmpVal;\n-            switch (tok) {\n-            case JTOK_KW_NULL:\n-                // do nothing more\n-                break;\n-            case JTOK_KW_TRUE:\n-                tmpVal.setBool(true);\n-                break;\n-            case JTOK_KW_FALSE:\n-                tmpVal.setBool(false);\n-                break;\n-            default: /* impossible */ break;\n-            }\n-\n-            UniValue *top = stack.back();\n-            top->values.push_back(tmpVal);\n-\n-            setExpect(NOT_VALUE);\n-            break;\n-            }\n-\n-        case JTOK_NUMBER: {\n-            if (!stack.size())\n-                return false;\n-\n-            UniValue tmpVal(VNUM, tokenVal);\n-            UniValue *top = stack.back();\n-            top->values.push_back(tmpVal);\n-\n-            setExpect(NOT_VALUE);\n-            break;\n-            }\n-\n-        case JTOK_STRING: {\n-            if (!stack.size())\n-                return false;\n-\n-            UniValue *top = stack.back();\n-\n-            if (expect(OBJ_NAME)) {\n-                top->keys.push_back(tokenVal);\n-                clearExpect(OBJ_NAME);\n-                setExpect(COLON);\n-            } else {\n-                UniValue tmpVal(VSTR, tokenVal);\n-                top->values.push_back(tmpVal);\n-            }\n-\n-            setExpect(NOT_VALUE);\n-            break;\n-            }\n-\n-        default:\n-            return false;\n-        }\n-    } while (!stack.empty ());\n-\n-    /* Check that nothing follows the initial construct (parsed above).  */\n-    tok = getJsonToken(tokenVal, consumed, raw);\n-    if (tok != JTOK_NONE)\n-        return false;\n-\n-    return true;\n-}\n-"
      },
      {
        "sha": "ceb4cc9166cd223c30465a30f17b1dc2f5a7874f",
        "filename": "src/univalue/lib/univalue_write.cpp",
        "status": "removed",
        "additions": 0,
        "deletions": 126,
        "changes": 126,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/lib/univalue_write.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/lib/univalue_write.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/lib/univalue_write.cpp?ref=3cd836c1d855b92e7c73ab31979f471c4f8dad68",
        "patch": "@@ -1,126 +0,0 @@\n-// Copyright 2014 BitPay Inc.\n-// Distributed under the MIT software license, see the accompanying\n-// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-#include <iomanip>\n-#include <sstream>\n-#include <stdio.h>\n-#include \"univalue.h\"\n-#include \"univalue_escapes.h\"\n-\n-// TODO: Using UTF8\n-\n-using namespace std;\n-\n-static string json_escape(const string& inS)\n-{\n-    string outS;\n-    outS.reserve(inS.size() * 2);\n-\n-    for (unsigned int i = 0; i < inS.size(); i++) {\n-        unsigned char ch = inS[i];\n-        const char *escStr = escapes[ch];\n-\n-        if (escStr)\n-            outS += escStr;\n-\n-        else if (ch < 0x80)\n-            outS += ch;\n-\n-        else { // TODO handle UTF-8 properly\n-            char tmpesc[16];\n-            sprintf(tmpesc, \"\\\\u%04x\", ch);\n-            outS += tmpesc;\n-        }\n-    }\n-\n-    return outS;\n-}\n-\n-string UniValue::write(unsigned int prettyIndent,\n-                       unsigned int indentLevel) const\n-{\n-    string s;\n-    s.reserve(1024);\n-\n-    unsigned int modIndent = indentLevel;\n-    if (modIndent == 0)\n-        modIndent = 1;\n-\n-    switch (typ) {\n-    case VNULL:\n-        s += \"null\";\n-        break;\n-    case VOBJ:\n-        writeObject(prettyIndent, modIndent, s);\n-        break;\n-    case VARR:\n-        writeArray(prettyIndent, modIndent, s);\n-        break;\n-    case VSTR:\n-        s += \"\\\"\" + json_escape(val) + \"\\\"\";\n-        break;\n-    case VNUM:\n-        s += val;\n-        break;\n-    case VBOOL:\n-        s += (val == \"1\" ? \"true\" : \"false\");\n-        break;\n-    }\n-\n-    return s;\n-}\n-\n-static void indentStr(unsigned int prettyIndent, unsigned int indentLevel, string& s)\n-{\n-    s.append(prettyIndent * indentLevel, ' ');\n-}\n-\n-void UniValue::writeArray(unsigned int prettyIndent, unsigned int indentLevel, string& s) const\n-{\n-    s += \"[\";\n-    if (prettyIndent)\n-        s += \"\\n\";\n-\n-    for (unsigned int i = 0; i < values.size(); i++) {\n-        if (prettyIndent)\n-            indentStr(prettyIndent, indentLevel, s);\n-        s += values[i].write(prettyIndent, indentLevel + 1);\n-        if (i != (values.size() - 1)) {\n-            s += \",\";\n-            if (prettyIndent)\n-                s += \" \";\n-        }\n-        if (prettyIndent)\n-            s += \"\\n\";\n-    }\n-\n-    if (prettyIndent)\n-        indentStr(prettyIndent, indentLevel - 1, s);\n-    s += \"]\";\n-}\n-\n-void UniValue::writeObject(unsigned int prettyIndent, unsigned int indentLevel, string& s) const\n-{\n-    s += \"{\";\n-    if (prettyIndent)\n-        s += \"\\n\";\n-\n-    for (unsigned int i = 0; i < keys.size(); i++) {\n-        if (prettyIndent)\n-            indentStr(prettyIndent, indentLevel, s);\n-        s += \"\\\"\" + json_escape(keys[i]) + \"\\\":\";\n-        if (prettyIndent)\n-            s += \" \";\n-        s += values.at(i).write(prettyIndent, indentLevel + 1);\n-        if (i != (values.size() - 1))\n-            s += \",\";\n-        if (prettyIndent)\n-            s += \"\\n\";\n-    }\n-\n-    if (prettyIndent)\n-        indentStr(prettyIndent, indentLevel - 1, s);\n-    s += \"}\";\n-}\n-"
      },
      {
        "sha": "b7f53e875e6e45e6e5cdb37dcd3c3b1a12e2b832",
        "filename": "src/univalue/pc/libunivalue-uninstalled.pc.in",
        "status": "removed",
        "additions": 0,
        "deletions": 9,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/pc/libunivalue-uninstalled.pc.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/pc/libunivalue-uninstalled.pc.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/pc/libunivalue-uninstalled.pc.in?ref=3cd836c1d855b92e7c73ab31979f471c4f8dad68",
        "patch": "@@ -1,9 +0,0 @@\n-prefix=@prefix@\n-exec_prefix=@exec_prefix@\n-libdir=@libdir@\n-includedir=@includedir@\n-\n-Name: libunivalue\n-Description: libunivalue, C++ universal value object and JSON library\n-Version: @VERSION@\n-Libs: ${pc_top_builddir}/${pcfiledir}/libunivalue.la"
      },
      {
        "sha": "358a2d5f73219147d8a2f286146dc4e912363f40",
        "filename": "src/univalue/pc/libunivalue.pc.in",
        "status": "removed",
        "additions": 0,
        "deletions": 10,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/pc/libunivalue.pc.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/pc/libunivalue.pc.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/pc/libunivalue.pc.in?ref=3cd836c1d855b92e7c73ab31979f471c4f8dad68",
        "patch": "@@ -1,10 +0,0 @@\n-prefix=@prefix@\n-exec_prefix=@exec_prefix@\n-libdir=@libdir@\n-includedir=@includedir@\n-\n-Name: libunivalue\n-Description: libunivalue, C++ universal value object and JSON library\n-Version: @VERSION@\n-Libs: -L${libdir} -lunivalue\n-Cflags: -I${includedir}"
      },
      {
        "sha": "3d9347fe7e52b40c85c8386fa159a213898ef361",
        "filename": "src/univalue/test/.gitignore",
        "status": "removed",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/test/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/test/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/.gitignore?ref=3cd836c1d855b92e7c73ab31979f471c4f8dad68",
        "patch": "@@ -1,4 +0,0 @@\n-unitester\n-\n-*.trs\n-*.log"
      },
      {
        "sha": "6216b865f10219c51c6af21e7a68641bab77ee4f",
        "filename": "src/univalue/test/fail1.json",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/test/fail1.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/test/fail1.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail1.json?ref=3cd836c1d855b92e7c73ab31979f471c4f8dad68",
        "patch": "@@ -1 +0,0 @@\n-\"A JSON payload should be an object or array, not a string.\"\n\\ No newline at end of file"
      },
      {
        "sha": "5d8c0047bd522dfa9fbc642051ed76bd3162d936",
        "filename": "src/univalue/test/fail10.json",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/test/fail10.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/test/fail10.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail10.json?ref=3cd836c1d855b92e7c73ab31979f471c4f8dad68",
        "patch": "@@ -1 +0,0 @@\n-{\"Extra value after close\": true} \"misplaced quoted value\"\n\\ No newline at end of file"
      },
      {
        "sha": "76eb95b4583c8ee74eee3bdc25e1db69e1aaf4bb",
        "filename": "src/univalue/test/fail11.json",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/test/fail11.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/test/fail11.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail11.json?ref=3cd836c1d855b92e7c73ab31979f471c4f8dad68",
        "patch": "@@ -1 +0,0 @@\n-{\"Illegal expression\": 1 + 2}\n\\ No newline at end of file"
      },
      {
        "sha": "77580a4522d8c79245851e72a3644a0709b3d28c",
        "filename": "src/univalue/test/fail12.json",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/test/fail12.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/test/fail12.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail12.json?ref=3cd836c1d855b92e7c73ab31979f471c4f8dad68",
        "patch": "@@ -1 +0,0 @@\n-{\"Illegal invocation\": alert()}\n\\ No newline at end of file"
      },
      {
        "sha": "379406b59bdb943f145afea98ff1bbc45d43ff45",
        "filename": "src/univalue/test/fail13.json",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/test/fail13.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/test/fail13.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail13.json?ref=3cd836c1d855b92e7c73ab31979f471c4f8dad68",
        "patch": "@@ -1 +0,0 @@\n-{\"Numbers cannot have leading zeroes\": 013}\n\\ No newline at end of file"
      },
      {
        "sha": "0ed366b38a34f551c25735bdcb9282d27beae026",
        "filename": "src/univalue/test/fail14.json",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/test/fail14.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/test/fail14.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail14.json?ref=3cd836c1d855b92e7c73ab31979f471c4f8dad68",
        "patch": "@@ -1 +0,0 @@\n-{\"Numbers cannot be hex\": 0x14}\n\\ No newline at end of file"
      },
      {
        "sha": "fc8376b605da69dda23f3fcdd9816dcbf2e736cc",
        "filename": "src/univalue/test/fail15.json",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/test/fail15.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/test/fail15.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail15.json?ref=3cd836c1d855b92e7c73ab31979f471c4f8dad68",
        "patch": "@@ -1 +0,0 @@\n-[\"Illegal backslash escape: \\x15\"]\n\\ No newline at end of file"
      },
      {
        "sha": "3fe21d4b532498c8b90872ef571c6867f45e645f",
        "filename": "src/univalue/test/fail16.json",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/test/fail16.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/test/fail16.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail16.json?ref=3cd836c1d855b92e7c73ab31979f471c4f8dad68",
        "patch": "@@ -1 +0,0 @@\n-[\\naked]\n\\ No newline at end of file"
      },
      {
        "sha": "62b9214aeda6d74a72ebeceedf0aae3609f1c638",
        "filename": "src/univalue/test/fail17.json",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/test/fail17.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/test/fail17.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail17.json?ref=3cd836c1d855b92e7c73ab31979f471c4f8dad68",
        "patch": "@@ -1 +0,0 @@\n-[\"Illegal backslash escape: \\017\"]\n\\ No newline at end of file"
      },
      {
        "sha": "edac92716f186e39d0e3c818b8b110b9a2c4add5",
        "filename": "src/univalue/test/fail18.json",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/test/fail18.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/test/fail18.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail18.json?ref=3cd836c1d855b92e7c73ab31979f471c4f8dad68",
        "patch": "@@ -1 +0,0 @@\n-[[[[[[[[[[[[[[[[[[[[\"Too deep\"]]]]]]]]]]]]]]]]]]]]\n\\ No newline at end of file"
      },
      {
        "sha": "3b9c46fa9a296c9d8c35ce4a6592d8bb7ffe748a",
        "filename": "src/univalue/test/fail19.json",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/test/fail19.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/test/fail19.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail19.json?ref=3cd836c1d855b92e7c73ab31979f471c4f8dad68",
        "patch": "@@ -1 +0,0 @@\n-{\"Missing colon\" null}\n\\ No newline at end of file"
      },
      {
        "sha": "6b7c11e5a56537f81e651980359c62e263f7399f",
        "filename": "src/univalue/test/fail2.json",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/test/fail2.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/test/fail2.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail2.json?ref=3cd836c1d855b92e7c73ab31979f471c4f8dad68",
        "patch": "@@ -1 +0,0 @@\n-[\"Unclosed array\"\n\\ No newline at end of file"
      },
      {
        "sha": "27c1af3e72ee37bbf64ccd7b77c5bad8cdea1557",
        "filename": "src/univalue/test/fail20.json",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/test/fail20.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/test/fail20.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail20.json?ref=3cd836c1d855b92e7c73ab31979f471c4f8dad68",
        "patch": "@@ -1 +0,0 @@\n-{\"Double colon\":: null}\n\\ No newline at end of file"
      },
      {
        "sha": "62474573b2160adefc3dc669b39200ea659d6e59",
        "filename": "src/univalue/test/fail21.json",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/test/fail21.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/test/fail21.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail21.json?ref=3cd836c1d855b92e7c73ab31979f471c4f8dad68",
        "patch": "@@ -1 +0,0 @@\n-{\"Comma instead of colon\", null}\n\\ No newline at end of file"
      },
      {
        "sha": "a7752581bcf7f3b901aef052a2df541c1285b6c2",
        "filename": "src/univalue/test/fail22.json",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/test/fail22.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/test/fail22.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail22.json?ref=3cd836c1d855b92e7c73ab31979f471c4f8dad68",
        "patch": "@@ -1 +0,0 @@\n-[\"Colon instead of comma\": false]\n\\ No newline at end of file"
      },
      {
        "sha": "494add1ca190e12acd1c8e34ac819a6316c927bc",
        "filename": "src/univalue/test/fail23.json",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/test/fail23.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/test/fail23.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail23.json?ref=3cd836c1d855b92e7c73ab31979f471c4f8dad68",
        "patch": "@@ -1 +0,0 @@\n-[\"Bad value\", truth]\n\\ No newline at end of file"
      },
      {
        "sha": "caff239bfc36297da08828095105bb497b8aef2a",
        "filename": "src/univalue/test/fail24.json",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/test/fail24.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/test/fail24.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail24.json?ref=3cd836c1d855b92e7c73ab31979f471c4f8dad68",
        "patch": "@@ -1 +0,0 @@\n-['single quote']\n\\ No newline at end of file"
      },
      {
        "sha": "8b7ad23e010314591d914519996c28483b5dadc8",
        "filename": "src/univalue/test/fail25.json",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/test/fail25.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/test/fail25.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail25.json?ref=3cd836c1d855b92e7c73ab31979f471c4f8dad68",
        "patch": "@@ -1 +0,0 @@\n-[\"\ttab\tcharacter\tin\tstring\t\"]\n\\ No newline at end of file"
      },
      {
        "sha": "845d26a6a54398c49cd492e6836c0d1987f554e4",
        "filename": "src/univalue/test/fail26.json",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/test/fail26.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/test/fail26.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail26.json?ref=3cd836c1d855b92e7c73ab31979f471c4f8dad68",
        "patch": "@@ -1 +0,0 @@\n-[\"tab\\   character\\   in\\  string\\  \"]\n\\ No newline at end of file"
      },
      {
        "sha": "6b01a2ca4a97ec36604771dcc3175bbcda865d85",
        "filename": "src/univalue/test/fail27.json",
        "status": "removed",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/test/fail27.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/test/fail27.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail27.json?ref=3cd836c1d855b92e7c73ab31979f471c4f8dad68",
        "patch": "@@ -1,2 +0,0 @@\n-[\"line\n-break\"]\n\\ No newline at end of file"
      },
      {
        "sha": "621a0101c664a619457d16f1107a677c911481b4",
        "filename": "src/univalue/test/fail28.json",
        "status": "removed",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/test/fail28.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/test/fail28.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail28.json?ref=3cd836c1d855b92e7c73ab31979f471c4f8dad68",
        "patch": "@@ -1,2 +0,0 @@\n-[\"line\\\n-break\"]\n\\ No newline at end of file"
      },
      {
        "sha": "47ec421bb6242648e80b2b465049acbae1e6e44a",
        "filename": "src/univalue/test/fail29.json",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/test/fail29.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/test/fail29.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail29.json?ref=3cd836c1d855b92e7c73ab31979f471c4f8dad68",
        "patch": "@@ -1 +0,0 @@\n-[0e]\n\\ No newline at end of file"
      },
      {
        "sha": "168c81eb78537ea4006ea0a46b67851d9995564d",
        "filename": "src/univalue/test/fail3.json",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/test/fail3.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/test/fail3.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail3.json?ref=3cd836c1d855b92e7c73ab31979f471c4f8dad68",
        "patch": "@@ -1 +0,0 @@\n-{unquoted_key: \"keys must be quoted\"}\n\\ No newline at end of file"
      },
      {
        "sha": "8ab0bc4b8b2c73b616a45931d05720555a2f7762",
        "filename": "src/univalue/test/fail30.json",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/test/fail30.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/test/fail30.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail30.json?ref=3cd836c1d855b92e7c73ab31979f471c4f8dad68",
        "patch": "@@ -1 +0,0 @@\n-[0e+]\n\\ No newline at end of file"
      },
      {
        "sha": "1cce602b518fc6e7f164a58cc710def27e64b8a5",
        "filename": "src/univalue/test/fail31.json",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/test/fail31.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/test/fail31.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail31.json?ref=3cd836c1d855b92e7c73ab31979f471c4f8dad68",
        "patch": "@@ -1 +0,0 @@\n-[0e+-1]\n\\ No newline at end of file"
      },
      {
        "sha": "45cba7396ff7462dd6de005c32fd2a95c5318e5f",
        "filename": "src/univalue/test/fail32.json",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/test/fail32.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/test/fail32.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail32.json?ref=3cd836c1d855b92e7c73ab31979f471c4f8dad68",
        "patch": "@@ -1 +0,0 @@\n-{\"Comma instead if closing brace\": true,\n\\ No newline at end of file"
      },
      {
        "sha": "ca5eb19dc97f5ca363ff33a4c3644ad28e612679",
        "filename": "src/univalue/test/fail33.json",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/test/fail33.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/test/fail33.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail33.json?ref=3cd836c1d855b92e7c73ab31979f471c4f8dad68",
        "patch": "@@ -1 +0,0 @@\n-[\"mismatch\"}\n\\ No newline at end of file"
      },
      {
        "sha": "3f8be172865d17dd812f50d5cf00a2509f51e6bf",
        "filename": "src/univalue/test/fail34.json",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/test/fail34.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/test/fail34.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail34.json?ref=3cd836c1d855b92e7c73ab31979f471c4f8dad68",
        "patch": "@@ -1 +0,0 @@\n-{} garbage\n\\ No newline at end of file"
      },
      {
        "sha": "de30ca5c47ab8894646dbcb852775c3fae987e2a",
        "filename": "src/univalue/test/fail35.json",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/test/fail35.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/test/fail35.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail35.json?ref=3cd836c1d855b92e7c73ab31979f471c4f8dad68",
        "patch": "@@ -1 +0,0 @@\n-[ true true true [] [] [] ]"
      },
      {
        "sha": "f82eb8e1f041d42c9ac9b8dcf1fce5068d6a11fd",
        "filename": "src/univalue/test/fail36.json",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/test/fail36.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/test/fail36.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail36.json?ref=3cd836c1d855b92e7c73ab31979f471c4f8dad68",
        "patch": "@@ -1 +0,0 @@\n-{\"a\":}"
      },
      {
        "sha": "3294dc3a4252934952e89cde69ab6ef17d8d167f",
        "filename": "src/univalue/test/fail37.json",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/test/fail37.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/test/fail37.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail37.json?ref=3cd836c1d855b92e7c73ab31979f471c4f8dad68",
        "patch": "@@ -1 +0,0 @@\n-{\"a\":1 \"b\":2}"
      },
      {
        "sha": "9de168bf34e2e368d044bccc099d44b02316de66",
        "filename": "src/univalue/test/fail4.json",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/test/fail4.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/test/fail4.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail4.json?ref=3cd836c1d855b92e7c73ab31979f471c4f8dad68",
        "patch": "@@ -1 +0,0 @@\n-[\"extra comma\",]\n\\ No newline at end of file"
      },
      {
        "sha": "ddf3ce3d2409467011ec7545551d5d078bce1bfd",
        "filename": "src/univalue/test/fail5.json",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/test/fail5.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/test/fail5.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail5.json?ref=3cd836c1d855b92e7c73ab31979f471c4f8dad68",
        "patch": "@@ -1 +0,0 @@\n-[\"double extra comma\",,]\n\\ No newline at end of file"
      },
      {
        "sha": "ed91580e1b1c15194a9a758f1b231575074722db",
        "filename": "src/univalue/test/fail6.json",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/test/fail6.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/test/fail6.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail6.json?ref=3cd836c1d855b92e7c73ab31979f471c4f8dad68",
        "patch": "@@ -1 +0,0 @@\n-[   , \"<-- missing value\"]\n\\ No newline at end of file"
      },
      {
        "sha": "8a96af3e4ee6c7fffd8da641dedcd750a5cc4d9d",
        "filename": "src/univalue/test/fail7.json",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/test/fail7.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/test/fail7.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail7.json?ref=3cd836c1d855b92e7c73ab31979f471c4f8dad68",
        "patch": "@@ -1 +0,0 @@\n-[\"Comma after the close\"],\n\\ No newline at end of file"
      },
      {
        "sha": "b28479c6ecb21a801d6988b9ea39a4eb00a64702",
        "filename": "src/univalue/test/fail8.json",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/test/fail8.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/test/fail8.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail8.json?ref=3cd836c1d855b92e7c73ab31979f471c4f8dad68",
        "patch": "@@ -1 +0,0 @@\n-[\"Extra close\"]]\n\\ No newline at end of file"
      },
      {
        "sha": "5815574f363e58cf91578e909ef4dabb402a75de",
        "filename": "src/univalue/test/fail9.json",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/test/fail9.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/test/fail9.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/fail9.json?ref=3cd836c1d855b92e7c73ab31979f471c4f8dad68",
        "patch": "@@ -1 +0,0 @@\n-{\"Extra comma\": true,}\n\\ No newline at end of file"
      },
      {
        "sha": "70e26854369282e625e75b302782f581e610f2b3",
        "filename": "src/univalue/test/pass1.json",
        "status": "removed",
        "additions": 0,
        "deletions": 58,
        "changes": 58,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/test/pass1.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/test/pass1.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/pass1.json?ref=3cd836c1d855b92e7c73ab31979f471c4f8dad68",
        "patch": "@@ -1,58 +0,0 @@\n-[\n-    \"JSON Test Pattern pass1\",\n-    {\"object with 1 member\":[\"array with 1 element\"]},\n-    {},\n-    [],\n-    -42,\n-    true,\n-    false,\n-    null,\n-    {\n-        \"integer\": 1234567890,\n-        \"real\": -9876.543210,\n-        \"e\": 0.123456789e-12,\n-        \"E\": 1.234567890E+34,\n-        \"\":  23456789012E66,\n-        \"zero\": 0,\n-        \"one\": 1,\n-        \"space\": \" \",\n-        \"quote\": \"\\\"\",\n-        \"backslash\": \"\\\\\",\n-        \"controls\": \"\\b\\f\\n\\r\\t\",\n-        \"slash\": \"/ & \\/\",\n-        \"alpha\": \"abcdefghijklmnopqrstuvwyz\",\n-        \"ALPHA\": \"ABCDEFGHIJKLMNOPQRSTUVWYZ\",\n-        \"digit\": \"0123456789\",\n-        \"0123456789\": \"digit\",\n-        \"special\": \"`1~!@#$%^&*()_+-={':[,]}|;.</>?\",\n-        \"hex\": \"\\u0123\\u4567\\u89AB\\uCDEF\\uabcd\\uef4A\",\n-        \"true\": true,\n-        \"false\": false,\n-        \"null\": null,\n-        \"array\":[  ],\n-        \"object\":{  },\n-        \"address\": \"50 St. James Street\",\n-        \"url\": \"http://www.JSON.org/\",\n-        \"comment\": \"// /* <!-- --\",\n-        \"# -- --> */\": \" \",\n-        \" s p a c e d \" :[1,2 , 3\n-\n-,\n-\n-4 , 5        ,          6           ,7        ],\"compact\":[1,2,3,4,5,6,7],\n-        \"jsontext\": \"{\\\"object with 1 member\\\":[\\\"array with 1 element\\\"]}\",\n-        \"quotes\": \"&#34; \\u0022 %22 0x22 034 &#x22;\",\n-        \"\\/\\\\\\\"\\uCAFE\\uBABE\\uAB98\\uFCDE\\ubcda\\uef4A\\b\\f\\n\\r\\t`1~!@#$%^&*()_+-=[]{}|;:',./<>?\"\n-: \"A key can be any string\"\n-    },\n-    0.5 ,98.6\n-,\n-99.44\n-,\n-\n-1066,\n-1e1,\n-0.1e1,\n-1e-1,\n-1e00,2e+00,2e-00\n-,\"rosebud\"]\n\\ No newline at end of file"
      },
      {
        "sha": "d3c63c7ad845e4cedd0c70d13102b38c51ec197a",
        "filename": "src/univalue/test/pass2.json",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/test/pass2.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/test/pass2.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/pass2.json?ref=3cd836c1d855b92e7c73ab31979f471c4f8dad68",
        "patch": "@@ -1 +0,0 @@\n-[[[[[[[[[[[[[[[[[[[\"Not too deep\"]]]]]]]]]]]]]]]]]]]\n\\ No newline at end of file"
      },
      {
        "sha": "4528d51f1ac615e7e11dbb1321dc99187705f0d8",
        "filename": "src/univalue/test/pass3.json",
        "status": "removed",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/test/pass3.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/test/pass3.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/pass3.json?ref=3cd836c1d855b92e7c73ab31979f471c4f8dad68",
        "patch": "@@ -1,6 +0,0 @@\n-{\n-    \"JSON Test Pattern pass3\": {\n-        \"The outermost value\": \"must be an object or array.\",\n-        \"In this test\": \"It is an object.\"\n-    }\n-}"
      },
      {
        "sha": "a711e7308bf76e6c707f4f1769b9e8a989261929",
        "filename": "src/univalue/test/round1.json",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/test/round1.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/test/round1.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/round1.json?ref=3cd836c1d855b92e7c73ab31979f471c4f8dad68",
        "patch": "@@ -1 +0,0 @@\n-[\"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\\u007f\"]"
      },
      {
        "sha": "5a052fe92c85bed15383867f1f777bacddfdb29b",
        "filename": "src/univalue/test/unitester.cpp",
        "status": "removed",
        "additions": 0,
        "deletions": 132,
        "changes": 132,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/test/unitester.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3cd836c1d855b92e7c73ab31979f471c4f8dad68/src/univalue/test/unitester.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/univalue/test/unitester.cpp?ref=3cd836c1d855b92e7c73ab31979f471c4f8dad68",
        "patch": "@@ -1,132 +0,0 @@\n-// Copyright 2014 BitPay Inc.\n-// Distributed under the MIT/X11 software license, see the accompanying\n-// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-#include <stdlib.h>\n-#include <stdio.h>\n-#include <string.h>\n-#include <cassert>\n-#include <string>\n-#include \"univalue.h\"\n-\n-#ifndef JSON_TEST_SRC\n-#error JSON_TEST_SRC must point to test source directory\n-#endif\n-\n-#ifndef ARRAY_SIZE\n-#define ARRAY_SIZE(arr) (sizeof(arr) / sizeof((arr)[0]))\n-#endif\n-\n-using namespace std;\n-string srcdir(JSON_TEST_SRC);\n-static bool test_failed = false;\n-\n-#define d_assert(expr) { if (!(expr)) { test_failed = true; fprintf(stderr, \"%s failed\\n\", filename.c_str()); } }\n-\n-static std::string rtrim(std::string s)\n-{\n-    s.erase(s.find_last_not_of(\" \\n\\r\\t\")+1);\n-    return s;\n-}\n-\n-static void runtest(string filename, const string& jdata)\n-{\n-        string prefix = filename.substr(0, 4);\n-\n-        bool wantPass = (prefix == \"pass\") || (prefix == \"roun\");\n-        bool wantFail = (prefix == \"fail\");\n-        bool wantRoundTrip = (prefix == \"roun\");\n-        assert(wantPass || wantFail);\n-\n-        UniValue val;\n-        bool testResult = val.read(jdata);\n-\n-        if (wantPass) {\n-            d_assert(testResult == true);\n-        } else {\n-            d_assert(testResult == false);\n-        }\n-\n-        if (wantRoundTrip) {\n-            std::string odata = val.write(0, 0);\n-            assert(odata == rtrim(jdata));\n-        }\n-}\n-\n-static void runtest_file(const char *filename_)\n-{\n-        string basename(filename_);\n-        string filename = srcdir + \"/\" + basename;\n-        FILE *f = fopen(filename.c_str(), \"r\");\n-        assert(f != NULL);\n-\n-        string jdata;\n-\n-        char buf[4096];\n-        while (!feof(f)) {\n-                int bread = fread(buf, 1, sizeof(buf), f);\n-                assert(!ferror(f));\n-\n-                string s(buf, bread);\n-                jdata += s;\n-        }\n-\n-        assert(!ferror(f));\n-        fclose(f);\n-\n-        runtest(basename, jdata);\n-}\n-\n-static const char *filenames[] = {\n-        \"fail10.json\",\n-        \"fail11.json\",\n-        \"fail12.json\",\n-        \"fail13.json\",\n-        \"fail14.json\",\n-        \"fail15.json\",\n-        \"fail16.json\",\n-        \"fail17.json\",\n-        //\"fail18.json\",             // investigate\n-        \"fail19.json\",\n-        \"fail1.json\",\n-        \"fail20.json\",\n-        \"fail21.json\",\n-        \"fail22.json\",\n-        \"fail23.json\",\n-        \"fail24.json\",\n-        \"fail25.json\",\n-        \"fail26.json\",\n-        \"fail27.json\",\n-        \"fail28.json\",\n-        \"fail29.json\",\n-        \"fail2.json\",\n-        \"fail30.json\",\n-        \"fail31.json\",\n-        \"fail32.json\",\n-        \"fail33.json\",\n-        \"fail34.json\",\n-        \"fail35.json\",\n-        \"fail36.json\",\n-        \"fail37.json\",\n-        \"fail3.json\",\n-        \"fail4.json\",                // extra comma\n-        \"fail5.json\",\n-        \"fail6.json\",\n-        \"fail7.json\",\n-        \"fail8.json\",\n-        \"fail9.json\",               // extra comma\n-        \"pass1.json\",\n-        \"pass2.json\",\n-        \"pass3.json\",\n-        \"round1.json\",              // round-trip test\n-};\n-\n-int main (int argc, char *argv[])\n-{\n-    for (unsigned int fidx = 0; fidx < ARRAY_SIZE(filenames); fidx++) {\n-        runtest_file(filenames[fidx]);\n-    }\n-\n-    return test_failed ? 1 : 0;\n-}\n-"
      }
    ]
  },
  {
    "sha": "4752e33afa3816b7937bcb8b835b3bd88f9b4130",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0NzUyZTMzYWZhMzgxNmI3OTM3YmNiOGI4MzViM2JkODhmOWI0MTMw",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2016-01-14T00:54:10Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2016-01-14T04:10:15Z"
      },
      "message": "depends: Add package for univalue",
      "tree": {
        "sha": "5374c3bd490f2b6825a314f40b740addbfcaf2ee",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5374c3bd490f2b6825a314f40b740addbfcaf2ee"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4752e33afa3816b7937bcb8b835b3bd88f9b4130",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4752e33afa3816b7937bcb8b835b3bd88f9b4130",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4752e33afa3816b7937bcb8b835b3bd88f9b4130",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4752e33afa3816b7937bcb8b835b3bd88f9b4130/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1d136991629d6d5783a9dc7f47ed7973d12ab652",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1d136991629d6d5783a9dc7f47ed7973d12ab652",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1d136991629d6d5783a9dc7f47ed7973d12ab652"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 22,
      "deletions": 1
    },
    "files": [
      {
        "sha": "651d4fc748bd67435d7907d3232a12d276b8209b",
        "filename": "depends/packages/packages.mk",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4752e33afa3816b7937bcb8b835b3bd88f9b4130/depends/packages/packages.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4752e33afa3816b7937bcb8b835b3bd88f9b4130/depends/packages/packages.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/packages.mk?ref=4752e33afa3816b7937bcb8b835b3bd88f9b4130",
        "patch": "@@ -1,4 +1,4 @@\n-packages:=boost openssl libevent\n+packages:=boost openssl libevent univalue\n darwin_packages:=zeromq\n linux_packages:=zeromq\n native_packages := native_ccache native_comparisontool"
      },
      {
        "sha": "21a2ba7aeda366549e314794717e85522187604d",
        "filename": "depends/packages/univalue.mk",
        "status": "added",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4752e33afa3816b7937bcb8b835b3bd88f9b4130/depends/packages/univalue.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4752e33afa3816b7937bcb8b835b3bd88f9b4130/depends/packages/univalue.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/univalue.mk?ref=4752e33afa3816b7937bcb8b835b3bd88f9b4130",
        "patch": "@@ -0,0 +1,21 @@\n+package=univalue\n+$(package)_version=1.0.1\n+$(package)_download_path=https://codeload.github.com/jgarzik/$(package)/tar.gz\n+$(package)_file_name=v$($(package)_version)\n+$(package)_sha256_hash=1699d5dcaabc29dde024dbfd42cb49915d4c135dfbbb5cc846de0654ca30cdab\n+\n+define $(package)_preprocess_cmds\n+  cd $($(package)_build_subdir); ./autogen.sh\n+endef\n+\n+define $(package)_config_cmds\n+  $($(package)_autoconf)\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE)\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) DESTDIR=$($(package)_staging_dir) install\n+endef"
      }
    ]
  },
  {
    "sha": "8c059a6a7fe15924a6e24337df094894379f5175",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4YzA1OWE2YTdmZTE1OTI0YTZlMjQzMzdkZjA5NDg5NDM3OWY1MTc1",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2016-01-15T01:21:55Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2016-01-15T01:21:55Z"
      },
      "message": "Bugfix: depends: Disabled shared libraries for univalue\n\nStatic linking libstdc++ (as is done by Travis and gitian) with shared libraries breaks empty std::string with GNU",
      "tree": {
        "sha": "9321cfb6bca05f17119b29359a5a8f13651486af",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9321cfb6bca05f17119b29359a5a8f13651486af"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8c059a6a7fe15924a6e24337df094894379f5175",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8c059a6a7fe15924a6e24337df094894379f5175",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8c059a6a7fe15924a6e24337df094894379f5175",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8c059a6a7fe15924a6e24337df094894379f5175/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4752e33afa3816b7937bcb8b835b3bd88f9b4130",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4752e33afa3816b7937bcb8b835b3bd88f9b4130",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4752e33afa3816b7937bcb8b835b3bd88f9b4130"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 4,
      "deletions": 0
    },
    "files": [
      {
        "sha": "427491a27954f1e305a3486d25f213c34142b8f0",
        "filename": "depends/packages/univalue.mk",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8c059a6a7fe15924a6e24337df094894379f5175/depends/packages/univalue.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8c059a6a7fe15924a6e24337df094894379f5175/depends/packages/univalue.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/univalue.mk?ref=8c059a6a7fe15924a6e24337df094894379f5175",
        "patch": "@@ -8,6 +8,10 @@ define $(package)_preprocess_cmds\n   cd $($(package)_build_subdir); ./autogen.sh\n endef\n \n+define $(package)_set_vars\n+$(package)_config_opts=--disable-shared\n+endef\n+\n define $(package)_config_cmds\n   $($(package)_autoconf)\n endef"
      }
    ]
  },
  {
    "sha": "6ae79c66fff553ecdb4696a5628b64500e94e5b6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2YWU3OWM2NmZmZjU1M2VjZGI0Njk2YTU2MjhiNjQ1MDBlOTRlNWI2",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2016-01-15T02:16:06Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2016-01-15T02:16:06Z"
      },
      "message": "Bugfix: depends: Build [static] univalue with PIC",
      "tree": {
        "sha": "ff5b2a8d04ed8cd1d3e1f594a1bd1bf45a4be65a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ff5b2a8d04ed8cd1d3e1f594a1bd1bf45a4be65a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6ae79c66fff553ecdb4696a5628b64500e94e5b6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6ae79c66fff553ecdb4696a5628b64500e94e5b6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6ae79c66fff553ecdb4696a5628b64500e94e5b6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6ae79c66fff553ecdb4696a5628b64500e94e5b6/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8c059a6a7fe15924a6e24337df094894379f5175",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8c059a6a7fe15924a6e24337df094894379f5175",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8c059a6a7fe15924a6e24337df094894379f5175"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "52beeb747015fe717c2b9477ea3d6aca1a9c510b",
        "filename": "depends/packages/univalue.mk",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ae79c66fff553ecdb4696a5628b64500e94e5b6/depends/packages/univalue.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ae79c66fff553ecdb4696a5628b64500e94e5b6/depends/packages/univalue.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/univalue.mk?ref=6ae79c66fff553ecdb4696a5628b64500e94e5b6",
        "patch": "@@ -9,7 +9,7 @@ define $(package)_preprocess_cmds\n endef\n \n define $(package)_set_vars\n-$(package)_config_opts=--disable-shared\n+$(package)_config_opts=--disable-shared --with-pic\n endef\n \n define $(package)_config_cmds"
      }
    ]
  },
  {
    "sha": "373ef74b4164f3cc22fa3eea7c5eb88d4bebdf11",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNzNlZjc0YjQxNjRmM2NjMjJmYTNlZWE3YzVlYjg4ZDRiZWJkZjEx",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2016-01-15T02:16:57Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2016-01-15T02:16:57Z"
      },
      "message": "depends: Bump univalue to 1.0.2",
      "tree": {
        "sha": "db83d542d5878d5db2fef45854862761ec7b6cff",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/db83d542d5878d5db2fef45854862761ec7b6cff"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/373ef74b4164f3cc22fa3eea7c5eb88d4bebdf11",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/373ef74b4164f3cc22fa3eea7c5eb88d4bebdf11",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/373ef74b4164f3cc22fa3eea7c5eb88d4bebdf11",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/373ef74b4164f3cc22fa3eea7c5eb88d4bebdf11/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6ae79c66fff553ecdb4696a5628b64500e94e5b6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6ae79c66fff553ecdb4696a5628b64500e94e5b6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6ae79c66fff553ecdb4696a5628b64500e94e5b6"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "e028a940097fe6ec27a1430c85a82fd0a8ae04b2",
        "filename": "depends/packages/univalue.mk",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/373ef74b4164f3cc22fa3eea7c5eb88d4bebdf11/depends/packages/univalue.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/373ef74b4164f3cc22fa3eea7c5eb88d4bebdf11/depends/packages/univalue.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/univalue.mk?ref=373ef74b4164f3cc22fa3eea7c5eb88d4bebdf11",
        "patch": "@@ -1,8 +1,8 @@\n package=univalue\n-$(package)_version=1.0.1\n+$(package)_version=1.0.2\n $(package)_download_path=https://codeload.github.com/jgarzik/$(package)/tar.gz\n $(package)_file_name=v$($(package)_version)\n-$(package)_sha256_hash=1699d5dcaabc29dde024dbfd42cb49915d4c135dfbbb5cc846de0654ca30cdab\n+$(package)_sha256_hash=685ca5d2db9c0475d88bfd0a444a90ade770f7e98dacfed55921775c36d28e51\n \n define $(package)_preprocess_cmds\n   cd $($(package)_build_subdir); ./autogen.sh"
      }
    ]
  },
  {
    "sha": "23e24b093ca1c430ec11abaabbb2b703155456c5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyM2UyNGIwOTNjYTFjNDMwZWMxMWFiYWFiYmIyYjcwMzE1NTQ1NmM1",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2016-01-15T02:19:28Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2016-01-15T02:19:28Z"
      },
      "message": "doc: Add UniValue to build instructions",
      "tree": {
        "sha": "44add59cbdda13e82b0c6ad9d236b2dc46041023",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/44add59cbdda13e82b0c6ad9d236b2dc46041023"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/23e24b093ca1c430ec11abaabbb2b703155456c5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/23e24b093ca1c430ec11abaabbb2b703155456c5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/23e24b093ca1c430ec11abaabbb2b703155456c5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/23e24b093ca1c430ec11abaabbb2b703155456c5/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "373ef74b4164f3cc22fa3eea7c5eb88d4bebdf11",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/373ef74b4164f3cc22fa3eea7c5eb88d4bebdf11",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/373ef74b4164f3cc22fa3eea7c5eb88d4bebdf11"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 10,
      "deletions": 0
    },
    "files": [
      {
        "sha": "2cc78bbfe824bb24bb5536c7d035ca188b353160",
        "filename": "doc/build-unix.md",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/23e24b093ca1c430ec11abaabbb2b703155456c5/doc/build-unix.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/23e24b093ca1c430ec11abaabbb2b703155456c5/doc/build-unix.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-unix.md?ref=23e24b093ca1c430ec11abaabbb2b703155456c5",
        "patch": "@@ -36,6 +36,7 @@ These dependencies are required:\n  libssl      | Crypto           | Random Number Generation, Elliptic Curve Cryptography\n  libboost    | Utility          | Library for threading, data structures, etc\n  libevent    | Networking       | OS independent asynchronous networking\n+ univalue    | Utility          | JSON parsing and encoding\n \n Optional dependencies:\n \n@@ -176,6 +177,15 @@ If you need to build Boost yourself:\n \t./bjam install\n \n \n+Univalue\n+--------\n+If you need to build UniValue yourself:\n+\n+\t./autogen.sh\n+\t./configure\n+\tmake install\n+\n+\n Security\n --------\n To help make your bitcoin installation more secure by making certain attacks impossible to"
      }
    ]
  }
]