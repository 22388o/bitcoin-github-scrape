[
  {
    "sha": "72c265158127ff1084cdb034439ddbe1783b0791",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3MmMyNjUxNTgxMjdmZjEwODRjZGIwMzQ0MzlkZGJlMTc4M2IwNzkx",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2016-02-22T09:48:44Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2016-03-05T18:27:04Z"
      },
      "message": "[Wallet] move wallet help string creation to CWallet",
      "tree": {
        "sha": "2384268fddf476cb046e20319b0d10fe7fc803d6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2384268fddf476cb046e20319b0d10fe7fc803d6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/72c265158127ff1084cdb034439ddbe1783b0791",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "expired_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJW2yT5AAoJECnUvLZBb1Pssc8P/146AnLjIt1xIqhjHoGAK80n\ncIABPb6wPOeDjPBRtzbvJ9fgQtksoVaTyo7mYr5qPZerGBPIHS0El6T5amAkfdhD\n3Lc9c3a9ulcukHkWZA1G3g039JKxya/6KF726ylyDElDjcxQpo9ELjZhNHWdbN9H\n+fOYHYehRFJ8BKgB7sEyl6sA9ZzhxDQB7VQsJ0NDAA2XtAQ8RsW3lSPHSMu77m9m\nzKUfqDvwk4GyhtTEColARfZvFP95r0RXgXrbg4uuIQKoKMI5kaTSzDRu/MmJnmYE\nQHheUaOACxtYKNiGpQ69QQRlkN8pG56Q10Xuzmzk8862+LBeVq+NJ29RA04mFe39\nHLoDazDtMkehcJbMQhkG3isMUU2WLsyWaG7XAL8wt9YGwQyKWxs834LdjRxsZGA1\nX5Nsmf/8bagVk0gh3U+AVuAOkRZAnniffTa3t40O2cvxmiWfHSJJCylHt2QiVDRy\nB/Oo2lJtss70nMe4GWVN6jMsjhoDlS2hUga5u3FTFxf3zjXM8DugoA9Yh/Btqf4U\nfLkrZXxR0D9TnoUbxj4cNS6q1YDFU0E+0D6mJ6bMXIyJKsPJptfJP9tqkkmmm419\nKzr1LjWK0XASgPW9dgufMS1LU9yRBRPCq5wIDCQNznR7wVSFxIOTnDLrQCq/Kdrn\ngc4H2vVis6edQWMxe4ft\n=bpF3\n-----END PGP SIGNATURE-----",
        "payload": "tree 2384268fddf476cb046e20319b0d10fe7fc803d6\nparent b6e00af8193f46fa02af13c2e9852a6bd7461d00\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1456134524 +0100\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1457202424 -0500\n\n[Wallet] move wallet help string creation to CWallet\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/72c265158127ff1084cdb034439ddbe1783b0791",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/72c265158127ff1084cdb034439ddbe1783b0791",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/72c265158127ff1084cdb034439ddbe1783b0791/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b6e00af8193f46fa02af13c2e9852a6bd7461d00",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b6e00af8193f46fa02af13c2e9852a6bd7461d00",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b6e00af8193f46fa02af13c2e9852a6bd7461d00"
      }
    ],
    "stats": {
      "total": 73,
      "additions": 43,
      "deletions": 30
    },
    "files": [
      {
        "sha": "ac1cfc551a5cd8102f386c7e503e3695ac28bdf3",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 30,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/72c265158127ff1084cdb034439ddbe1783b0791/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/72c265158127ff1084cdb034439ddbe1783b0791/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=72c265158127ff1084cdb034439ddbe1783b0791",
        "patch": "@@ -72,7 +72,6 @@ static const bool DEFAULT_REST_ENABLE = false;\n static const bool DEFAULT_DISABLE_SAFEMODE = false;\n static const bool DEFAULT_STOPAFTERBLOCKIMPORT = false;\n \n-static const char * const DEFAULT_WALLET_DAT = \"wallet.dat\";\n \n #if ENABLE_ZMQ\n static CZMQNotificationInterface* pzmqNotificationInterface = NULL;\n@@ -395,26 +394,7 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += HelpMessageOpt(\"-maxuploadtarget=<n>\", strprintf(_(\"Tries to keep outbound traffic under the given target (in MiB per 24h), 0 = no limit (default: %d)\"), DEFAULT_MAX_UPLOAD_TARGET));\n \n #ifdef ENABLE_WALLET\n-    strUsage += HelpMessageGroup(_(\"Wallet options:\"));\n-    strUsage += HelpMessageOpt(\"-disablewallet\", _(\"Do not load the wallet and disable wallet RPC calls\"));\n-    strUsage += HelpMessageOpt(\"-keypool=<n>\", strprintf(_(\"Set key pool size to <n> (default: %u)\"), DEFAULT_KEYPOOL_SIZE));\n-    strUsage += HelpMessageOpt(\"-fallbackfee=<amt>\", strprintf(_(\"A fee rate (in %s/kB) that will be used when fee estimation has insufficient data (default: %s)\"),\n-        CURRENCY_UNIT, FormatMoney(DEFAULT_FALLBACK_FEE)));\n-    strUsage += HelpMessageOpt(\"-mintxfee=<amt>\", strprintf(_(\"Fees (in %s/kB) smaller than this are considered zero fee for transaction creation (default: %s)\"),\n-            CURRENCY_UNIT, FormatMoney(DEFAULT_TRANSACTION_MINFEE)));\n-    strUsage += HelpMessageOpt(\"-paytxfee=<amt>\", strprintf(_(\"Fee (in %s/kB) to add to transactions you send (default: %s)\"),\n-        CURRENCY_UNIT, FormatMoney(payTxFee.GetFeePerK())));\n-    strUsage += HelpMessageOpt(\"-rescan\", _(\"Rescan the block chain for missing wallet transactions on startup\"));\n-    strUsage += HelpMessageOpt(\"-salvagewallet\", _(\"Attempt to recover private keys from a corrupt wallet.dat on startup\"));\n-    strUsage += HelpMessageOpt(\"-sendfreetransactions\", strprintf(_(\"Send transactions as zero-fee transactions if possible (default: %u)\"), DEFAULT_SEND_FREE_TRANSACTIONS));\n-    strUsage += HelpMessageOpt(\"-spendzeroconfchange\", strprintf(_(\"Spend unconfirmed change when sending transactions (default: %u)\"), DEFAULT_SPEND_ZEROCONF_CHANGE));\n-    strUsage += HelpMessageOpt(\"-txconfirmtarget=<n>\", strprintf(_(\"If paytxfee is not set, include enough fee so transactions begin confirmation on average within n blocks (default: %u)\"), DEFAULT_TX_CONFIRM_TARGET));\n-    strUsage += HelpMessageOpt(\"-upgradewallet\", _(\"Upgrade wallet to latest format on startup\"));\n-    strUsage += HelpMessageOpt(\"-wallet=<file>\", _(\"Specify wallet file (within data directory)\") + \" \" + strprintf(_(\"(default: %s)\"), DEFAULT_WALLET_DAT));\n-    strUsage += HelpMessageOpt(\"-walletbroadcast\", _(\"Make the wallet broadcast transactions\") + \" \" + strprintf(_(\"(default: %u)\"), DEFAULT_WALLETBROADCAST));\n-    strUsage += HelpMessageOpt(\"-walletnotify=<cmd>\", _(\"Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)\"));\n-    strUsage += HelpMessageOpt(\"-zapwallettxes=<mode>\", _(\"Delete all wallet transactions and only recover those parts of the blockchain through -rescan on startup\") +\n-        \" \" + _(\"(1 = keep tx meta data e.g. account owner and payment request information, 2 = drop tx meta data)\"));\n+    strUsage += CWallet::GetWalletHelpString(showDebug);\n #endif\n \n #if ENABLE_ZMQ\n@@ -432,16 +412,10 @@ std::string HelpMessage(HelpMessageMode mode)\n         strUsage += HelpMessageOpt(\"-checkblockindex\", strprintf(\"Do a full consistency check for mapBlockIndex, setBlockIndexCandidates, chainActive and mapBlocksUnlinked occasionally. Also sets -checkmempool (default: %u)\", Params(CBaseChainParams::MAIN).DefaultConsistencyChecks()));\n         strUsage += HelpMessageOpt(\"-checkmempool=<n>\", strprintf(\"Run checks every <n> transactions (default: %u)\", Params(CBaseChainParams::MAIN).DefaultConsistencyChecks()));\n         strUsage += HelpMessageOpt(\"-checkpoints\", strprintf(\"Disable expensive verification for known chain history (default: %u)\", DEFAULT_CHECKPOINTS_ENABLED));\n-#ifdef ENABLE_WALLET\n-        strUsage += HelpMessageOpt(\"-dblogsize=<n>\", strprintf(\"Flush wallet database activity from memory to disk log every <n> megabytes (default: %u)\", DEFAULT_WALLET_DBLOGSIZE));\n-#endif\n         strUsage += HelpMessageOpt(\"-disablesafemode\", strprintf(\"Disable safemode, override a real safe mode event (default: %u)\", DEFAULT_DISABLE_SAFEMODE));\n         strUsage += HelpMessageOpt(\"-testsafemode\", strprintf(\"Force safe mode (default: %u)\", DEFAULT_TESTSAFEMODE));\n         strUsage += HelpMessageOpt(\"-dropmessagestest=<n>\", \"Randomly drop 1 of every <n> network messages\");\n         strUsage += HelpMessageOpt(\"-fuzzmessagestest=<n>\", \"Randomly fuzz 1 of every <n> network messages\");\n-#ifdef ENABLE_WALLET\n-        strUsage += HelpMessageOpt(\"-flushwallet\", strprintf(\"Run a thread to flush wallet periodically (default: %u)\", DEFAULT_FLUSHWALLET));\n-#endif\n         strUsage += HelpMessageOpt(\"-stopafterblockimport\", strprintf(\"Stop running after importing blocks from disk (default: %u)\", DEFAULT_STOPAFTERBLOCKIMPORT));\n         strUsage += HelpMessageOpt(\"-limitancestorcount=<n>\", strprintf(\"Do not accept transactions if number of in-mempool ancestors is <n> or more (default: %u)\", DEFAULT_ANCESTOR_LIMIT));\n         strUsage += HelpMessageOpt(\"-limitancestorsize=<n>\", strprintf(\"Do not accept transactions whose size with all in-mempool ancestors exceeds <n> kilobytes (default: %u)\", DEFAULT_ANCESTOR_SIZE_LIMIT));\n@@ -477,9 +451,6 @@ std::string HelpMessage(HelpMessageMode mode)\n     if (showDebug)\n     {\n         strUsage += HelpMessageOpt(\"-printpriority\", strprintf(\"Log transaction priority and fee per kB when mining blocks (default: %u)\", DEFAULT_PRINTPRIORITY));\n-#ifdef ENABLE_WALLET\n-        strUsage += HelpMessageOpt(\"-privdb\", strprintf(\"Sets the DB_PRIVATE flag in the wallet db environment (default: %u)\", DEFAULT_WALLET_PRIVDB));\n-#endif\n     }\n     strUsage += HelpMessageOpt(\"-shrinkdebugfile\", _(\"Shrink debug.log file on client startup (default: 1 when no -debug)\"));\n "
      },
      {
        "sha": "04b4df5199618837ac6b7be2aaef9b79609eb3dc",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 37,
        "deletions": 0,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/72c265158127ff1084cdb034439ddbe1783b0791/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/72c265158127ff1084cdb034439ddbe1783b0791/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=72c265158127ff1084cdb034439ddbe1783b0791",
        "patch": "@@ -41,6 +41,8 @@ unsigned int nTxConfirmTarget = DEFAULT_TX_CONFIRM_TARGET;\n bool bSpendZeroConfChange = DEFAULT_SPEND_ZEROCONF_CHANGE;\n bool fSendFreeTransactions = DEFAULT_SEND_FREE_TRANSACTIONS;\n \n+const char * DEFAULT_WALLET_DAT = \"wallet.dat\";\n+\n /**\n  * Fees smaller than this (in satoshi) are considered zero fee (for transaction creation)\n  * Override with -mintxfee\n@@ -2956,6 +2958,41 @@ bool CWallet::GetDestData(const CTxDestination &dest, const std::string &key, st\n     return false;\n }\n \n+std::string CWallet::GetWalletHelpString(bool showDebug)\n+{\n+    std::string strUsage = HelpMessageGroup(_(\"Wallet options:\"));\n+    strUsage += HelpMessageOpt(\"-disablewallet\", _(\"Do not load the wallet and disable wallet RPC calls\"));\n+    strUsage += HelpMessageOpt(\"-keypool=<n>\", strprintf(_(\"Set key pool size to <n> (default: %u)\"), DEFAULT_KEYPOOL_SIZE));\n+    strUsage += HelpMessageOpt(\"-fallbackfee=<amt>\", strprintf(_(\"A fee rate (in %s/kB) that will be used when fee estimation has insufficient data (default: %s)\"),\n+                                                               CURRENCY_UNIT, FormatMoney(DEFAULT_FALLBACK_FEE)));\n+    strUsage += HelpMessageOpt(\"-mintxfee=<amt>\", strprintf(_(\"Fees (in %s/kB) smaller than this are considered zero fee for transaction creation (default: %s)\"),\n+                                                            CURRENCY_UNIT, FormatMoney(DEFAULT_TRANSACTION_MINFEE)));\n+    strUsage += HelpMessageOpt(\"-paytxfee=<amt>\", strprintf(_(\"Fee (in %s/kB) to add to transactions you send (default: %s)\"),\n+                                                            CURRENCY_UNIT, FormatMoney(payTxFee.GetFeePerK())));\n+    strUsage += HelpMessageOpt(\"-rescan\", _(\"Rescan the block chain for missing wallet transactions on startup\"));\n+    strUsage += HelpMessageOpt(\"-salvagewallet\", _(\"Attempt to recover private keys from a corrupt wallet.dat on startup\"));\n+    strUsage += HelpMessageOpt(\"-sendfreetransactions\", strprintf(_(\"Send transactions as zero-fee transactions if possible (default: %u)\"), DEFAULT_SEND_FREE_TRANSACTIONS));\n+    strUsage += HelpMessageOpt(\"-spendzeroconfchange\", strprintf(_(\"Spend unconfirmed change when sending transactions (default: %u)\"), DEFAULT_SPEND_ZEROCONF_CHANGE));\n+    strUsage += HelpMessageOpt(\"-txconfirmtarget=<n>\", strprintf(_(\"If paytxfee is not set, include enough fee so transactions begin confirmation on average within n blocks (default: %u)\"), DEFAULT_TX_CONFIRM_TARGET));\n+    strUsage += HelpMessageOpt(\"-upgradewallet\", _(\"Upgrade wallet to latest format on startup\"));\n+    strUsage += HelpMessageOpt(\"-wallet=<file>\", _(\"Specify wallet file (within data directory)\") + \" \" + strprintf(_(\"(default: %s)\"), DEFAULT_WALLET_DAT));\n+    strUsage += HelpMessageOpt(\"-walletbroadcast\", _(\"Make the wallet broadcast transactions\") + \" \" + strprintf(_(\"(default: %u)\"), DEFAULT_WALLETBROADCAST));\n+    strUsage += HelpMessageOpt(\"-walletnotify=<cmd>\", _(\"Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)\"));\n+    strUsage += HelpMessageOpt(\"-zapwallettxes=<mode>\", _(\"Delete all wallet transactions and only recover those parts of the blockchain through -rescan on startup\") +\n+                               \" \" + _(\"(1 = keep tx meta data e.g. account owner and payment request information, 2 = drop tx meta data)\"));\n+\n+    if (showDebug)\n+    {\n+        strUsage += HelpMessageGroup(_(\"Wallet debugging/testing options:\"));\n+\n+        strUsage += HelpMessageOpt(\"-dblogsize=<n>\", strprintf(\"Flush wallet database activity from memory to disk log every <n> megabytes (default: %u)\", DEFAULT_WALLET_DBLOGSIZE));\n+        strUsage += HelpMessageOpt(\"-flushwallet\", strprintf(\"Run a thread to flush wallet periodically (default: %u)\", DEFAULT_FLUSHWALLET));\n+        strUsage += HelpMessageOpt(\"-privdb\", strprintf(\"Sets the DB_PRIVATE flag in the wallet db environment (default: %u)\", DEFAULT_WALLET_PRIVDB));\n+    }\n+\n+    return strUsage;\n+}\n+\n CKeyPool::CKeyPool()\n {\n     nTime = GetTime();"
      },
      {
        "sha": "6312735c97dec65c3b913d9f8d2a426190a974f0",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/72c265158127ff1084cdb034439ddbe1783b0791/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/72c265158127ff1084cdb034439ddbe1783b0791/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=72c265158127ff1084cdb034439ddbe1783b0791",
        "patch": "@@ -55,6 +55,8 @@ static const unsigned int DEFAULT_TX_CONFIRM_TARGET = 2;\n static const unsigned int MAX_FREE_TRANSACTION_CREATE_SIZE = 1000;\n static const bool DEFAULT_WALLETBROADCAST = true;\n \n+extern const char * DEFAULT_WALLET_DAT;\n+\n class CBlockIndex;\n class CCoinControl;\n class COutput;\n@@ -869,6 +871,9 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n \n     /* Mark a transaction (and it in-wallet descendants) as abandoned so its inputs may be respent. */\n     bool AbandonTransaction(const uint256& hashTx);\n+\n+    /* Returns the wallets help message */\n+    static std::string GetWalletHelpString(bool showDebug);\n };\n \n /** A key allocated from the key pool. */"
      }
    ]
  }
]