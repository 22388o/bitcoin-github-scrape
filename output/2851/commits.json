[
  {
    "sha": "d9ace8abe804a4134e5e77a0f9f82a52ea339762",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkOWFjZThhYmU4MDRhNDEzNGU1ZTc3YTBmOWY4MmE1MmVhMzM5NzYy",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2013-07-23T15:46:05Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2013-07-23T16:02:26Z"
      },
      "message": "Don't use checkpoints and accept nonstd txn on -regtest",
      "tree": {
        "sha": "18a56ebad9ffde37a41a33f80d8a4934d698103b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/18a56ebad9ffde37a41a33f80d8a4934d698103b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d9ace8abe804a4134e5e77a0f9f82a52ea339762",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d9ace8abe804a4134e5e77a0f9f82a52ea339762",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d9ace8abe804a4134e5e77a0f9f82a52ea339762",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d9ace8abe804a4134e5e77a0f9f82a52ea339762/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0a740650a52a21b7d82b43524017c87643af3224",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0a740650a52a21b7d82b43524017c87643af3224",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0a740650a52a21b7d82b43524017c87643af3224"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 18,
      "deletions": 5
    },
    "files": [
      {
        "sha": "0716cfca314ca555ae9721e7b0a8c31035cb011c",
        "filename": "src/checkpoints.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 2,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d9ace8abe804a4134e5e77a0f9f82a52ea339762/src/checkpoints.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d9ace8abe804a4134e5e77a0f9f82a52ea339762/src/checkpoints.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/checkpoints.cpp?ref=d9ace8abe804a4134e5e77a0f9f82a52ea339762",
        "patch": "@@ -67,11 +67,24 @@ namespace Checkpoints\n         300\n     };\n \n+    static MapCheckpoints mapCheckpointsRegtest =\n+        boost::assign::map_list_of\n+        ( 0, uint256(\"0f9188f13cb7b2c71f2a335e3a4fc328bf5beb436012afca590b1a11466e2206\"))\n+        ;\n+    static const CCheckpointData dataRegtest = {\n+        &mapCheckpointsRegtest,\n+        0,\n+        0,\n+        0\n+    };\n+\n     const CCheckpointData &Checkpoints() {\n-        if (TestNet())\n+        if (Params().NetworkID() == CChainParams::TESTNET)\n             return dataTestnet;\n-        else\n+        else if (Params().NetworkID() == CChainParams::MAIN)\n             return data;\n+        else\n+            return dataRegtest;\n     }\n \n     bool CheckBlock(int nHeight, const uint256& hash)"
      },
      {
        "sha": "881580a85b5b3fb3fc10b44dff1844c3d082a8f7",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d9ace8abe804a4134e5e77a0f9f82a52ea339762/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d9ace8abe804a4134e5e77a0f9f82a52ea339762/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=d9ace8abe804a4134e5e77a0f9f82a52ea339762",
        "patch": "@@ -810,9 +810,9 @@ bool CTxMemPool::accept(CValidationState &state, CTransaction &tx, bool fLimitFr\n     if ((int64)tx.nLockTime > std::numeric_limits<int>::max())\n         return error(\"CTxMemPool::accept() : not accepting nLockTime beyond 2038 yet\");\n \n-    // Rather not work on nonstandard transactions (unless -testnet)\n+    // Rather not work on nonstandard transactions (unless -testnet/-regtest)\n     string reason;\n-    if (!TestNet() && !IsStandardTx(tx, reason))\n+    if (Params().NetworkID() == CChainParams::MAIN && !IsStandardTx(tx, reason))\n         return error(\"CTxMemPool::accept() : nonstandard transaction: %s\",\n                      reason.c_str());\n \n@@ -888,7 +888,7 @@ bool CTxMemPool::accept(CValidationState &state, CTransaction &tx, bool fLimitFr\n         }\n \n         // Check for non-standard pay-to-script-hash in inputs\n-        if (!TestNet() && !AreInputsStandard(tx, view))\n+        if (Params().NetworkID() == CChainParams::MAIN && !AreInputsStandard(tx, view))\n             return error(\"CTxMemPool::accept() : nonstandard transaction input\");\n \n         // Note: if you modify this code to accept non-standard transactions, then"
      }
    ]
  },
  {
    "sha": "9bf2a4aba2c22dc451ce000f7ef081b3d3562b84",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5YmYyYTRhYmEyYzIyZGM0NTFjZTAwMGY3ZWYwODFiM2QzNTYyYjg0",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2013-07-23T15:51:28Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2013-07-23T16:02:27Z"
      },
      "message": "Fix multi-block reorg transaction resurrection",
      "tree": {
        "sha": "0e9240e9dd601917eb4afe36d85df8aa20f8c0ba",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0e9240e9dd601917eb4afe36d85df8aa20f8c0ba"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9bf2a4aba2c22dc451ce000f7ef081b3d3562b84",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9bf2a4aba2c22dc451ce000f7ef081b3d3562b84",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9bf2a4aba2c22dc451ce000f7ef081b3d3562b84",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9bf2a4aba2c22dc451ce000f7ef081b3d3562b84/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d9ace8abe804a4134e5e77a0f9f82a52ea339762",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d9ace8abe804a4134e5e77a0f9f82a52ea339762",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d9ace8abe804a4134e5e77a0f9f82a52ea339762"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "c8b4876c3e94c83a2f2ed1a559d30a81d0590ea7",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9bf2a4aba2c22dc451ce000f7ef081b3d3562b84/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9bf2a4aba2c22dc451ce000f7ef081b3d3562b84/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=9bf2a4aba2c22dc451ce000f7ef081b3d3562b84",
        "patch": "@@ -1938,7 +1938,7 @@ bool SetBestChain(CValidationState &state, CBlockIndex* pindexNew)\n     }\n \n     // Disconnect shorter branch\n-    vector<CTransaction> vResurrect;\n+    list<CTransaction> vResurrect;\n     BOOST_FOREACH(CBlockIndex* pindex, vDisconnect) {\n         CBlock block;\n         if (!ReadBlockFromDisk(block, pindex))\n@@ -1952,9 +1952,9 @@ bool SetBestChain(CValidationState &state, CBlockIndex* pindexNew)\n         // Queue memory transactions to resurrect.\n         // We only do this for blocks after the last checkpoint (reorganisation before that\n         // point should only happen with -reindex/-loadblock, or a misbehaving peer.\n-        BOOST_FOREACH(const CTransaction& tx, block.vtx)\n+        BOOST_REVERSE_FOREACH(const CTransaction& tx, block.vtx)\n             if (!tx.IsCoinBase() && pindex->nHeight > Checkpoints::GetTotalBlocksEstimate())\n-                vResurrect.push_back(tx);\n+                vResurrect.push_front(tx);\n     }\n \n     // Connect longer branch"
      }
    ]
  }
]