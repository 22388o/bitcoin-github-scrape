[
  {
    "sha": "d7092c392e10889cd7a080b3d22ed6446a59b87a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkNzA5MmMzOTJlMTA4ODljZDdhMDgwYjNkMjJlZDY0NDZhNTliODdh",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2020-04-03T02:34:18Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2020-04-06T20:52:04Z"
      },
      "message": "QA: Test that change doesn't turn into non-change when spent in an avoid-reuse wallet",
      "tree": {
        "sha": "d5be42dc965db1a4524ad22d35c15d91f2de8ffd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d5be42dc965db1a4524ad22d35c15d91f2de8ffd"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d7092c392e10889cd7a080b3d22ed6446a59b87a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d7092c392e10889cd7a080b3d22ed6446a59b87a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d7092c392e10889cd7a080b3d22ed6446a59b87a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d7092c392e10889cd7a080b3d22ed6446a59b87a/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c5966a87d1fdd7a98f2baee5b2deddd541fdfb5a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c5966a87d1fdd7a98f2baee5b2deddd541fdfb5a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c5966a87d1fdd7a98f2baee5b2deddd541fdfb5a"
      }
    ],
    "stats": {
      "total": 25,
      "additions": 25,
      "deletions": 0
    },
    "files": [
      {
        "sha": "2ce8d459c6d47ed094f0ee24ecfc3dbb74627e77",
        "filename": "test/functional/wallet_avoidreuse.py",
        "status": "modified",
        "additions": 25,
        "deletions": 0,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d7092c392e10889cd7a080b3d22ed6446a59b87a/test/functional/wallet_avoidreuse.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d7092c392e10889cd7a080b3d22ed6446a59b87a/test/functional/wallet_avoidreuse.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_avoidreuse.py?ref=d7092c392e10889cd7a080b3d22ed6446a59b87a",
        "patch": "@@ -83,6 +83,7 @@ def run_test(self):\n \n         self.nodes[0].generate(110)\n         self.sync_all()\n+        self.test_change_remains_change(self.nodes[1])\n         reset_balance(self.nodes[1], self.nodes[0].getnewaddress())\n         self.test_fund_send_fund_senddirty()\n         reset_balance(self.nodes[1], self.nodes[0].getnewaddress())\n@@ -137,6 +138,30 @@ def test_immutable(self):\n         # Unload temp wallet\n         self.nodes[1].unloadwallet(tempwallet)\n \n+    def test_change_remains_change(self, node):\n+        self.log.info(\"Test that change doesn't turn into non-change when spent\")\n+\n+        reset_balance(node, node.getnewaddress())\n+        addr = node.getnewaddress()\n+        txid = node.sendtoaddress(addr, 1)\n+        out = node.listunspent(minconf=0, query_options={'minimumAmount': 2})\n+        assert_equal(len(out), 1)\n+        assert_equal(out[0]['txid'], txid)\n+        changeaddr = out[0]['address']\n+\n+        # Make sure it's starting out as change as expected\n+        assert node.getaddressinfo(changeaddr)['ischange']\n+        for logical_tx in node.listtransactions():\n+            assert logical_tx.get('address') != changeaddr\n+\n+        # Spend it\n+        reset_balance(node, node.getnewaddress())\n+\n+        # It should still be change\n+        assert node.getaddressinfo(changeaddr)['ischange']\n+        for logical_tx in node.listtransactions():\n+            assert logical_tx.get('address') != changeaddr\n+\n     def test_fund_send_fund_senddirty(self):\n         '''\n         Test the same as test_fund_send_fund_send, except send the 10 BTC with"
      }
    ]
  },
  {
    "sha": "2952c46b923042f2de801f319e03ed5c4c4eb735",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyOTUyYzQ2YjkyMzA0MmYyZGU4MDFmMzE5ZTAzZWQ1YzRjNGViNzM1",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2020-04-03T03:02:16Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2020-04-06T20:52:04Z"
      },
      "message": "Wallet: Replace CAddressBookData.name with GetLabel() method",
      "tree": {
        "sha": "0c3566fac09af5be06cd2cd008ac2bbfa8026461",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0c3566fac09af5be06cd2cd008ac2bbfa8026461"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2952c46b923042f2de801f319e03ed5c4c4eb735",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2952c46b923042f2de801f319e03ed5c4c4eb735",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2952c46b923042f2de801f319e03ed5c4c4eb735",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2952c46b923042f2de801f319e03ed5c4c4eb735/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d7092c392e10889cd7a080b3d22ed6446a59b87a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d7092c392e10889cd7a080b3d22ed6446a59b87a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d7092c392e10889cd7a080b3d22ed6446a59b87a"
      }
    ],
    "stats": {
      "total": 32,
      "additions": 16,
      "deletions": 16
    },
    "files": [
      {
        "sha": "abce09ca4a91401fd3da6681798106fefd29f202",
        "filename": "src/interfaces/wallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2952c46b923042f2de801f319e03ed5c4c4eb735/src/interfaces/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2952c46b923042f2de801f319e03ed5c4c4eb735/src/interfaces/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/wallet.cpp?ref=2952c46b923042f2de801f319e03ed5c4c4eb735",
        "patch": "@@ -156,7 +156,7 @@ class WalletImpl : public Wallet\n             return false;\n         }\n         if (name) {\n-            *name = it->second.name;\n+            *name = it->second.GetLabel();\n         }\n         if (is_mine) {\n             *is_mine = m_wallet->IsMine(dest);\n@@ -172,7 +172,7 @@ class WalletImpl : public Wallet\n         std::vector<WalletAddress> result;\n         for (const auto& item : m_wallet->m_address_book) {\n             if (item.second.IsChange()) continue;\n-            result.emplace_back(item.first, m_wallet->IsMine(item.first), item.second.name, item.second.purpose);\n+            result.emplace_back(item.first, m_wallet->IsMine(item.first), item.second.GetLabel(), item.second.purpose);\n         }\n         return result;\n     }"
      },
      {
        "sha": "ea54027c48d032b38bcaaf5ee4f03d3741e30117",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2952c46b923042f2de801f319e03ed5c4c4eb735/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2952c46b923042f2de801f319e03ed5c4c4eb735/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=2952c46b923042f2de801f319e03ed5c4c4eb735",
        "patch": "@@ -66,7 +66,7 @@ static bool GetWalletAddressesForKey(LegacyScriptPubKeyMan* spk_man, const CWall\n                 strAddr += \",\";\n             }\n             strAddr += EncodeDestination(dest);\n-            strLabel = EncodeDumpString(address_book_entry->name);\n+            strLabel = EncodeDumpString(address_book_entry->GetLabel());\n             fLabelFound = true;\n         }\n     }"
      },
      {
        "sha": "769a34336536748387c8397c5b6caddd28db7db5",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 10,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2952c46b923042f2de801f319e03ed5c4c4eb735/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2952c46b923042f2de801f319e03ed5c4c4eb735/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=2952c46b923042f2de801f319e03ed5c4c4eb735",
        "patch": "@@ -501,7 +501,7 @@ static UniValue listaddressgroupings(const JSONRPCRequest& request)\n             {\n                 const auto* address_book_entry = pwallet->FindAddressBookEntry(address);\n                 if (address_book_entry) {\n-                    addressInfo.push_back(address_book_entry->name);\n+                    addressInfo.push_back(address_book_entry->GetLabel());\n                 }\n             }\n             jsonGrouping.push_back(addressInfo);\n@@ -1109,7 +1109,7 @@ static UniValue ListReceived(interfaces::Chain::Lock& locked_chain, const CWalle\n     {\n         if (item_it->second.IsChange()) continue;\n         const CTxDestination& address = item_it->first;\n-        const std::string& label = item_it->second.name;\n+        const std::string& label = item_it->second.GetLabel();\n         auto it = mapTally.find(address);\n         if (it == mapTally.end() && !fIncludeEmpty)\n             continue;\n@@ -1311,7 +1311,7 @@ static void ListTransactions(interfaces::Chain::Lock& locked_chain, const CWalle\n             entry.pushKV(\"amount\", ValueFromAmount(-s.amount));\n             const auto* address_book_entry = pwallet->FindAddressBookEntry(s.destination);\n             if (address_book_entry) {\n-                entry.pushKV(\"label\", address_book_entry->name);\n+                entry.pushKV(\"label\", address_book_entry->GetLabel());\n             }\n             entry.pushKV(\"vout\", s.vout);\n             entry.pushKV(\"fee\", ValueFromAmount(-nFee));\n@@ -1329,7 +1329,7 @@ static void ListTransactions(interfaces::Chain::Lock& locked_chain, const CWalle\n             std::string label;\n             const auto* address_book_entry = pwallet->FindAddressBookEntry(r.destination);\n             if (address_book_entry) {\n-                label = address_book_entry->name;\n+                label = address_book_entry->GetLabel();\n             }\n             if (filter_label && label != *filter_label) {\n                 continue;\n@@ -2963,7 +2963,7 @@ static UniValue listunspent(const JSONRPCRequest& request)\n \n             const auto* address_book_entry = pwallet->FindAddressBookEntry(address);\n             if (address_book_entry) {\n-                entry.pushKV(\"label\", address_book_entry->name);\n+                entry.pushKV(\"label\", address_book_entry->GetLabel());\n             }\n \n             std::unique_ptr<SigningProvider> provider = pwallet->GetSolvingProvider(scriptPubKey);\n@@ -3710,7 +3710,7 @@ static UniValue AddressBookDataToJSON(const CAddressBookData& data, const bool v\n {\n     UniValue ret(UniValue::VOBJ);\n     if (verbose) {\n-        ret.pushKV(\"name\", data.name);\n+        ret.pushKV(\"name\", data.GetLabel());\n     }\n     ret.pushKV(\"purpose\", data.purpose);\n     return ret;\n@@ -3822,7 +3822,7 @@ UniValue getaddressinfo(const JSONRPCRequest& request)\n     // value of the name key/value pair in the labels array below.\n     const auto* address_book_entry = pwallet->FindAddressBookEntry(dest);\n     if (pwallet->chain().rpcEnableDeprecated(\"label\") && address_book_entry) {\n-        ret.pushKV(\"label\", address_book_entry->name);\n+        ret.pushKV(\"label\", address_book_entry->GetLabel());\n     }\n \n     ret.pushKV(\"ischange\", pwallet->IsChange(scriptPubKey));\n@@ -3851,7 +3851,7 @@ UniValue getaddressinfo(const JSONRPCRequest& request)\n         if (pwallet->chain().rpcEnableDeprecated(\"labelspurpose\")) {\n             labels.push_back(AddressBookDataToJSON(*address_book_entry, true));\n         } else {\n-            labels.push_back(address_book_entry->name);\n+            labels.push_back(address_book_entry->GetLabel());\n         }\n     }\n     ret.pushKV(\"labels\", std::move(labels));\n@@ -3897,7 +3897,7 @@ static UniValue getaddressesbylabel(const JSONRPCRequest& request)\n     std::set<std::string> addresses;\n     for (const std::pair<const CTxDestination, CAddressBookData>& item : pwallet->m_address_book) {\n         if (item.second.IsChange()) continue;\n-        if (item.second.name == label) {\n+        if (item.second.GetLabel() == label) {\n             std::string address = EncodeDestination(item.first);\n             // CWallet::m_address_book is not expected to contain duplicate\n             // address strings, but build a separate set as a precaution just in\n@@ -3963,7 +3963,7 @@ static UniValue listlabels(const JSONRPCRequest& request)\n     for (const std::pair<const CTxDestination, CAddressBookData>& entry : pwallet->m_address_book) {\n         if (entry.second.IsChange()) continue;\n         if (purpose.empty() || entry.second.purpose == purpose) {\n-            label_set.insert(entry.second.name);\n+            label_set.insert(entry.second.GetLabel());\n         }\n     }\n "
      },
      {
        "sha": "724691a506ad8283c961773e5defd67819b41443",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2952c46b923042f2de801f319e03ed5c4c4eb735/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2952c46b923042f2de801f319e03ed5c4c4eb735/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=2952c46b923042f2de801f319e03ed5c4c4eb735",
        "patch": "@@ -3472,7 +3472,7 @@ std::set<CTxDestination> CWallet::GetLabelAddresses(const std::string& label) co\n     {\n         if (item.second.IsChange()) continue;\n         const CTxDestination& address = item.first;\n-        const std::string& strName = item.second.name;\n+        const std::string& strName = item.second.GetLabel();\n         if (strName == label)\n             result.insert(address);\n     }"
      },
      {
        "sha": "6c54c72e76b5bb017e180e0ba04c13f9bb56800f",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2952c46b923042f2de801f319e03ed5c4c4eb735/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2952c46b923042f2de801f319e03ed5c4c4eb735/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=2952c46b923042f2de801f319e03ed5c4c4eb735",
        "patch": "@@ -185,15 +185,15 @@ class CAddressBookData\n     bool m_change{true};\n     std::string m_label;\n public:\n-    const std::string& name;\n     std::string purpose;\n \n-    CAddressBookData() : name(m_label), purpose(\"unknown\") {}\n+    CAddressBookData() : purpose(\"unknown\") {}\n \n     typedef std::map<std::string, std::string> StringMap;\n     StringMap destdata;\n \n     bool IsChange() const { return m_change; }\n+    const std::string& GetLabel() const { return m_label; }\n     void SetLabel(const std::string& label) {\n         m_change = false;\n         m_label = label;"
      }
    ]
  },
  {
    "sha": "7a2ecf16df938dd95d3130a46082def7a02338eb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3YTJlY2YxNmRmOTM4ZGQ5NWQzMTMwYTQ2MDgyZGVmN2EwMjMzOGVi",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2020-04-06T19:56:06Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2020-04-06T20:52:04Z"
      },
      "message": "Wallet: Change IsMine check in CWallet::DelAddressBook from assert to failure",
      "tree": {
        "sha": "92d518020759e6b33ab7cad4b82282dd43ebf91e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/92d518020759e6b33ab7cad4b82282dd43ebf91e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7a2ecf16df938dd95d3130a46082def7a02338eb",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7a2ecf16df938dd95d3130a46082def7a02338eb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7a2ecf16df938dd95d3130a46082def7a02338eb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7a2ecf16df938dd95d3130a46082def7a02338eb/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2952c46b923042f2de801f319e03ed5c4c4eb735",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2952c46b923042f2de801f319e03ed5c4c4eb735",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2952c46b923042f2de801f319e03ed5c4c4eb735"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 4,
      "deletions": 1
    },
    "files": [
      {
        "sha": "45f5542cadd515dbd7a8dd3a643167bae54b6f85",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7a2ecf16df938dd95d3130a46082def7a02338eb/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7a2ecf16df938dd95d3130a46082def7a02338eb/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=7a2ecf16df938dd95d3130a46082def7a02338eb",
        "patch": "@@ -3221,7 +3221,10 @@ bool CWallet::DelAddressBook(const CTxDestination& address)\n     // If we want to delete receiving addresses, we need to take care that DestData \"used\" (and possibly newer DestData) gets preserved (and the \"deleted\" address transformed into a change entry instead of actually being deleted)\n     // NOTE: This isn't a problem for sending addresses because they never have any DestData yet!\n     // When adding new DestData, it should be considered here whether to retain or delete it (or move it?).\n-    assert(!IsMine(address));\n+    if (IsMine(address)) {\n+        WalletLogPrintf(\"%s called with IsMine address, NOT SUPPORTED. Please report this bug! %s\\n\", __func__, PACKAGE_BUGREPORT);\n+        return false;\n+    }\n \n     {\n         LOCK(cs_wallet);"
      }
    ]
  }
]