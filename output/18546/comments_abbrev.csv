MarcoFalke,2020-04-06 20:17:37,"ACK a7051b046a, only change is adding issue url and a test style fixup üçñ\n\n<details><summary>Show signature and timestamp</summary>\n\nSignature:\n\n```\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\nACK a7051b046a, only change is adding issue url and a test style fixup üçñ\n-----BEGIN PGP SIGNATURE-----\n\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUjnBg",https://github.com/bitcoin/bitcoin/pull/18546#issuecomment-610014280,610014280,
MarcoFalke,2020-04-06 20:55:09,"re-ACK 7a2ecf16df, only change is adding an assert_equal in the test üî∞\n\n<details><summary>Show signature and timestamp</summary>\n\nSignature:\n\n```\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\nre-ACK 7a2ecf16df, only change is adding an assert_equal in the test üî∞\n-----BEGIN PGP SIGNATURE-----\n\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUhbPAwAnx",https://github.com/bitcoin/bitcoin/pull/18546#issuecomment-610031813,610031813,
DrahtBot,2020-04-07 00:53:37,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #18418 (wallet: Increase OUTPUT_GROUP_MAX_ENTRIES to 100 by fjahr)\n* #17824 (wallet: Prefer full destination groups in co",https://github.com/bitcoin/bitcoin/pull/18546#issuecomment-610112192,610112192,
jnewbery,2020-04-07 02:43:57,utACK 7a2ecf16df938dd95d3130a46082def7a02338eb,https://github.com/bitcoin/bitcoin/pull/18546#issuecomment-610141783,610141783,
luke-jr,2020-04-07 04:48:20,"Looks like #18192 actually introduced a bug with its `name`-reference hack: the copy constructor copied the reference to the original object's `m_label`.\n\n2952c46b923042f2de801f319e03ed5c4c4eb735 is effectively a bugfix for that.\n\nIf we don't merge this in 0.20, we need to add something like:\n\n```c++\nCAddressBookData(const CAddressBookData& other) : m_change(other.m_change), m_label(",https://github.com/bitcoin/bitcoin/pull/18546#issuecomment-610171177,610171177,
MarcoFalke,2020-04-06 20:01:49,"```suggestion\n        WalletLogPrintf(""%s:%d (%s) called with IsMine address, NOT SUPPORTED. Please report this bug! %s\n"", __FILE__, __LINE__, __func__, PACKAGE_BUGREPORT);\n```\n\nCould mention where to report the bug?",https://github.com/bitcoin/bitcoin/pull/18546#discussion_r404353202,404353202,src/wallet/wallet.cpp
MarcoFalke,2020-04-06 20:02:57,"```suggestion\n    std::string GetLabel() const { return m_label; }\n```\n\nTo avoid issues related to #17198",https://github.com/bitcoin/bitcoin/pull/18546#discussion_r404353806,404353806,src/wallet/wallet.h
MarcoFalke,2020-04-06 20:03:56,"```suggestion\n        assert_equal(len(out), 1)\n```\n\nTo aid debugging in case of failure",https://github.com/bitcoin/bitcoin/pull/18546#discussion_r404354331,404354331,test/functional/wallet_avoidreuse.py
luke-jr,2020-04-06 20:11:19,Not sure file/line are meaningful here... Added `PACKAGE_BUGREPORT`,https://github.com/bitcoin/bitcoin/pull/18546#discussion_r404358162,404358162,src/wallet/wallet.cpp
luke-jr,2020-04-06 20:13:26,I don't see how that relates to this. Can you give an example?,https://github.com/bitcoin/bitcoin/pull/18546#discussion_r404359344,404359344,src/wallet/wallet.h
MarcoFalke,2020-04-06 20:21:05,"Just the general idea that:\n\n* This doesn't improve performance\n* This might lead to use-after-free in future code",https://github.com/bitcoin/bitcoin/pull/18546#discussion_r404363481,404363481,src/wallet/wallet.h
MarcoFalke,2020-04-06 20:25:46,"Linter fails\n\n```\ntest/functional/wallet_avoidreuse.py:146:9: F841 local variable 'txid' is assigned to but never used",https://github.com/bitcoin/bitcoin/pull/18546#discussion_r404366111,404366111,test/functional/wallet_avoidreuse.py
jonatack,2020-04-07 12:15:49,The test duly fails at this assertion before the changes in #18192.,https://github.com/bitcoin/bitcoin/pull/18546#discussion_r404761334,404761334,test/functional/wallet_avoidreuse.py
