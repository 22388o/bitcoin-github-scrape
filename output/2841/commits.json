[
  {
    "sha": "772cf7f56e3b68b3bacd8b94a1b31de6cc646bb5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3NzJjZjdmNTZlM2I2OGIzYmFjZDhiOTRhMWIzMWRlNmNjNjQ2YmI1",
    "commit": {
      "author": {
        "name": "Eric Lombrozo",
        "email": "elombrozo@gmail.com",
        "date": "2013-07-21T04:29:55Z"
      },
      "committer": {
        "name": "Eric Lombrozo",
        "email": "elombrozo@gmail.com",
        "date": "2013-09-17T02:51:28Z"
      },
      "message": "Added new config option noautofillkeypool.\n\nOne of the most annoying things about trying to maintain wallet backups is the fact that every time you unlock a wallet the key pool gets automatically refilled, thus making any existing backups of the wallet obsolete. The user now has the choice to disable automatic refilling of the keypool by adding the following line to bitcoin.conf:\n\nnoautofillkeypool=1\n\nThis effectively disables all automatic key generation, requiring the user to manually run keypoolrefill to replenish the wallet when the key pool runs low. It is recommended to call backupwallet immediately after calling keypoolrefill.\n\nIf noautofillkeypool is not set in bitcoin.conf, the app defaults to its old behavior thus ensuring full backwards compatibility.",
      "tree": {
        "sha": "4e9efbf0012eedb33374db359edffb3bfd7f74ef",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4e9efbf0012eedb33374db359edffb3bfd7f74ef"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/772cf7f56e3b68b3bacd8b94a1b31de6cc646bb5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/772cf7f56e3b68b3bacd8b94a1b31de6cc646bb5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/772cf7f56e3b68b3bacd8b94a1b31de6cc646bb5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/772cf7f56e3b68b3bacd8b94a1b31de6cc646bb5/comments",
    "author": {
      "login": "CodeShark",
      "id": 894059,
      "node_id": "MDQ6VXNlcjg5NDA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/894059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CodeShark",
      "html_url": "https://github.com/CodeShark",
      "followers_url": "https://api.github.com/users/CodeShark/followers",
      "following_url": "https://api.github.com/users/CodeShark/following{/other_user}",
      "gists_url": "https://api.github.com/users/CodeShark/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CodeShark/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CodeShark/subscriptions",
      "organizations_url": "https://api.github.com/users/CodeShark/orgs",
      "repos_url": "https://api.github.com/users/CodeShark/repos",
      "events_url": "https://api.github.com/users/CodeShark/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CodeShark/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CodeShark",
      "id": 894059,
      "node_id": "MDQ6VXNlcjg5NDA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/894059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CodeShark",
      "html_url": "https://github.com/CodeShark",
      "followers_url": "https://api.github.com/users/CodeShark/followers",
      "following_url": "https://api.github.com/users/CodeShark/following{/other_user}",
      "gists_url": "https://api.github.com/users/CodeShark/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CodeShark/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CodeShark/subscriptions",
      "organizations_url": "https://api.github.com/users/CodeShark/orgs",
      "repos_url": "https://api.github.com/users/CodeShark/repos",
      "events_url": "https://api.github.com/users/CodeShark/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CodeShark/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b16e9f02c82b98635da53c7e485614cba766f0a9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b16e9f02c82b98635da53c7e485614cba766f0a9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b16e9f02c82b98635da53c7e485614cba766f0a9"
      }
    ],
    "stats": {
      "total": 25,
      "additions": 17,
      "deletions": 8
    },
    "files": [
      {
        "sha": "64d0a02fdc38df9b30c259df809721b27087751f",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/772cf7f56e3b68b3bacd8b94a1b31de6cc646bb5/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/772cf7f56e3b68b3bacd8b94a1b31de6cc646bb5/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=772cf7f56e3b68b3bacd8b94a1b31de6cc646bb5",
        "patch": "@@ -855,7 +855,7 @@ bool AppInit2(boost::thread_group& threadGroup)\n \n     nStart = GetTimeMillis();\n     bool fFirstRun = true;\n-    pwalletMain = new CWallet(strWalletFile);\n+    pwalletMain = new CWallet(strWalletFile, !GetBoolArg(\"-noautofillkeypool\", false));\n     DBErrors nLoadWalletRet = pwalletMain->LoadWallet(fFirstRun);\n     if (nLoadWalletRet != DB_LOAD_OK)\n     {"
      },
      {
        "sha": "af11946ae5cebea3078b588d0046b84afb9e30da",
        "filename": "src/rpcwallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/772cf7f56e3b68b3bacd8b94a1b31de6cc646bb5/src/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/772cf7f56e3b68b3bacd8b94a1b31de6cc646bb5/src/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.cpp?ref=772cf7f56e3b68b3bacd8b94a1b31de6cc646bb5",
        "patch": "@@ -105,7 +105,7 @@ Value getnewaddress(const Array& params, bool fHelp)\n     if (params.size() > 0)\n         strAccount = AccountFromValue(params[0]);\n \n-    if (!pwalletMain->IsLocked())\n+    if (pwalletMain->AutoFillKeyPool() && !pwalletMain->IsLocked())\n         pwalletMain->TopUpKeyPool();\n \n     // Generate a new key that is added to wallet\n@@ -1323,7 +1323,7 @@ Value walletpassphrase(const Array& params, bool fHelp)\n             \"walletpassphrase <passphrase> <timeout>\\n\"\n             \"Stores the wallet decryption key in memory for <timeout> seconds.\");\n \n-    pwalletMain->TopUpKeyPool();\n+    if (pwalletMain->AutoFillKeyPool()) pwalletMain->TopUpKeyPool();\n \n     int64 nSleepTime = params[1].get_int64();\n     LOCK(cs_nWalletUnlockTime);"
      },
      {
        "sha": "6697506f48c1e232d40553bc535df088c565fc31",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 3,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/772cf7f56e3b68b3bacd8b94a1b31de6cc646bb5/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/772cf7f56e3b68b3bacd8b94a1b31de6cc646bb5/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=772cf7f56e3b68b3bacd8b94a1b31de6cc646bb5",
        "patch": "@@ -1253,7 +1253,11 @@ bool CWallet::CreateTransaction(const vector<pair<CScript, int64> >& vecSend,\n \n                     // Reserve a new key pair from key pool\n                     CPubKey vchPubKey;\n-                    assert(reservekey.GetReservedKey(vchPubKey)); // should never fail, as we just unlocked\n+                    if (!reservekey.GetReservedKey(vchPubKey)) // might fail if key pool is empty\n+                    {\n+                        strFailReason = _(\"Key pool is empty\");\n+                        return false;\n+                    }\n \n                     // Fill a vout to ourself\n                     // TODO: pass in scriptChange instead of reservekey so\n@@ -1595,7 +1599,7 @@ void CWallet::ReserveKeyFromKeyPool(int64& nIndex, CKeyPool& keypool)\n     {\n         LOCK(cs_wallet);\n \n-        if (!IsLocked())\n+        if (fAutoFillKeyPool && !IsLocked())\n             TopUpKeyPool();\n \n         // Get the oldest key\n@@ -1660,7 +1664,7 @@ bool CWallet::GetKeyFromPool(CPubKey& result)\n         ReserveKeyFromKeyPool(nIndex, keypool);\n         if (nIndex == -1)\n         {\n-            if (IsLocked()) return false;\n+            if (!fAutoFillKeyPool || IsLocked()) return false;\n             result = GenerateNewKey();\n             return true;\n         }"
      },
      {
        "sha": "707ffbace26b8fbfa09feee6a646ba50426e902f",
        "filename": "src/wallet.h",
        "status": "modified",
        "additions": 7,
        "deletions": 2,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/772cf7f56e3b68b3bacd8b94a1b31de6cc646bb5/src/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/772cf7f56e3b68b3bacd8b94a1b31de6cc646bb5/src/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.h?ref=772cf7f56e3b68b3bacd8b94a1b31de6cc646bb5",
        "patch": "@@ -96,6 +96,8 @@ class CWallet : public CCryptoKeyStore\n     int64 nNextResend;\n     int64 nLastResend;\n \n+    bool fAutoFillKeyPool;\n+\n public:\n     mutable CCriticalSection cs_wallet;\n \n@@ -109,7 +111,7 @@ class CWallet : public CCryptoKeyStore\n     MasterKeyMap mapMasterKeys;\n     unsigned int nMasterKeyMaxID;\n \n-    CWallet()\n+    CWallet(bool _fAutoFillKeyPool = true)\n     {\n         nWalletVersion = FEATURE_BASE;\n         nWalletMaxVersion = FEATURE_BASE;\n@@ -119,8 +121,9 @@ class CWallet : public CCryptoKeyStore\n         nOrderPosNext = 0;\n         nNextResend = 0;\n         nLastResend = 0;\n+        fAutoFillKeyPool = _fAutoFillKeyPool;\n     }\n-    CWallet(std::string strWalletFileIn)\n+    CWallet(std::string strWalletFileIn, bool _fAutoFillKeyPool = true)\n     {\n         nWalletVersion = FEATURE_BASE;\n         nWalletMaxVersion = FEATURE_BASE;\n@@ -131,6 +134,7 @@ class CWallet : public CCryptoKeyStore\n         nOrderPosNext = 0;\n         nNextResend = 0;\n         nLastResend = 0;\n+        fAutoFillKeyPool = _fAutoFillKeyPool;\n     }\n \n     std::map<uint256, CWalletTx> mapWallet;\n@@ -223,6 +227,7 @@ class CWallet : public CCryptoKeyStore\n     bool GetKeyFromPool(CPubKey &key);\n     int64 GetOldestKeyPoolTime();\n     void GetAllReserveKeys(std::set<CKeyID>& setAddress) const;\n+    bool AutoFillKeyPool() const { return fAutoFillKeyPool; }\n \n     std::set< std::set<CTxDestination> > GetAddressGroupings();\n     std::map<CTxDestination, int64> GetAddressBalances();"
      }
    ]
  },
  {
    "sha": "491c802bd2c329f1f805bbaa23864141f1b1ed49",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0OTFjODAyYmQyYzMyOWYxZjgwNWJiYWEyMzg2NDE0MWYxYjFlZDQ5",
    "commit": {
      "author": {
        "name": "Eric Lombrozo",
        "email": "elombrozo@gmail.com",
        "date": "2013-07-21T10:49:57Z"
      },
      "committer": {
        "name": "Eric Lombrozo",
        "email": "elombrozo@gmail.com",
        "date": "2013-09-17T02:51:42Z"
      },
      "message": "Added ability to refill key pool from Bitcoin-Qt.",
      "tree": {
        "sha": "d7bb9b5fc23845ab221858d4c3b3bb1a0d355b7b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d7bb9b5fc23845ab221858d4c3b3bb1a0d355b7b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/491c802bd2c329f1f805bbaa23864141f1b1ed49",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/491c802bd2c329f1f805bbaa23864141f1b1ed49",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/491c802bd2c329f1f805bbaa23864141f1b1ed49",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/491c802bd2c329f1f805bbaa23864141f1b1ed49/comments",
    "author": {
      "login": "CodeShark",
      "id": 894059,
      "node_id": "MDQ6VXNlcjg5NDA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/894059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CodeShark",
      "html_url": "https://github.com/CodeShark",
      "followers_url": "https://api.github.com/users/CodeShark/followers",
      "following_url": "https://api.github.com/users/CodeShark/following{/other_user}",
      "gists_url": "https://api.github.com/users/CodeShark/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CodeShark/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CodeShark/subscriptions",
      "organizations_url": "https://api.github.com/users/CodeShark/orgs",
      "repos_url": "https://api.github.com/users/CodeShark/repos",
      "events_url": "https://api.github.com/users/CodeShark/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CodeShark/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CodeShark",
      "id": 894059,
      "node_id": "MDQ6VXNlcjg5NDA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/894059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CodeShark",
      "html_url": "https://github.com/CodeShark",
      "followers_url": "https://api.github.com/users/CodeShark/followers",
      "following_url": "https://api.github.com/users/CodeShark/following{/other_user}",
      "gists_url": "https://api.github.com/users/CodeShark/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CodeShark/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CodeShark/subscriptions",
      "organizations_url": "https://api.github.com/users/CodeShark/orgs",
      "repos_url": "https://api.github.com/users/CodeShark/repos",
      "events_url": "https://api.github.com/users/CodeShark/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CodeShark/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "772cf7f56e3b68b3bacd8b94a1b31de6cc646bb5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/772cf7f56e3b68b3bacd8b94a1b31de6cc646bb5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/772cf7f56e3b68b3bacd8b94a1b31de6cc646bb5"
      }
    ],
    "stats": {
      "total": 49,
      "additions": 48,
      "deletions": 1
    },
    "files": [
      {
        "sha": "9daa76d738b742b39b94a3c6f850e6515a76fe1c",
        "filename": "src/qt/Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/491c802bd2c329f1f805bbaa23864141f1b1ed49/src/qt/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/491c802bd2c329f1f805bbaa23864141f1b1ed49/src/qt/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/Makefile.am?ref=491c802bd2c329f1f805bbaa23864141f1b1ed49",
        "patch": "@@ -90,7 +90,7 @@ RES_ICONS = res/icons/bitcoin.png res/icons/address-book.png \\\n   res/icons/overview.png res/icons/export.png res/icons/synced.png \\\n   res/icons/remove.png res/icons/tx_mined.png res/icons/tx_input.png \\\n   res/icons/tx_output.png res/icons/tx_inout.png res/icons/lock_closed.png \\\n-  res/icons/lock_open.png res/icons/key.png res/icons/filesave.png \\\n+  res/icons/lock_open.png res/icons/key.png res/icons/keypair.png res/icons/filesave.png \\\n   res/icons/qrcode.png res/icons/debugwindow.png res/icons/bitcoin.ico \\\n   res/icons/bitcoin_testnet.ico\n "
      },
      {
        "sha": "443daea3e23126a945299bd2e199cab24f19735d",
        "filename": "src/qt/bitcoin.qrc",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/491c802bd2c329f1f805bbaa23864141f1b1ed49/src/qt/bitcoin.qrc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/491c802bd2c329f1f805bbaa23864141f1b1ed49/src/qt/bitcoin.qrc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.qrc?ref=491c802bd2c329f1f805bbaa23864141f1b1ed49",
        "patch": "@@ -37,6 +37,7 @@\n         <file alias=\"lock_closed\">res/icons/lock_closed.png</file>\n         <file alias=\"lock_open\">res/icons/lock_open.png</file>\n         <file alias=\"key\">res/icons/key.png</file>\n+        <file alias=\"keypair\">res/icons/keypair.png</file>\n         <file alias=\"filesave\">res/icons/filesave.png</file>\n         <file alias=\"qrcode\">res/icons/qrcode.png</file>\n         <file alias=\"debugwindow\">res/icons/debugwindow.png</file>"
      },
      {
        "sha": "95c6379aa44f9a7f0702d5ca6f0cbd86b73c4484",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/491c802bd2c329f1f805bbaa23864141f1b1ed49/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/491c802bd2c329f1f805bbaa23864141f1b1ed49/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=491c802bd2c329f1f805bbaa23864141f1b1ed49",
        "patch": "@@ -250,6 +250,8 @@ void BitcoinGUI::createActions(bool fIsTestnet)\n     encryptWalletAction->setCheckable(true);\n     backupWalletAction = new QAction(QIcon(\":/icons/filesave\"), tr(\"&Backup Wallet...\"), this);\n     backupWalletAction->setStatusTip(tr(\"Backup wallet to another location\"));\n+    refillKeyPoolAction = new QAction(QIcon(\":/icons/keypair\"), tr(\"Refill &Key Pool...\"), this);\n+    refillKeyPoolAction->setStatusTip(tr(\"Refill the key pool\"));\n     changePassphraseAction = new QAction(QIcon(\":/icons/key\"), tr(\"&Change Passphrase...\"), this);\n     changePassphraseAction->setStatusTip(tr(\"Change the passphrase used for wallet encryption\"));\n     signMessageAction = new QAction(QIcon(\":/icons/edit\"), tr(\"Sign &message...\"), this);\n@@ -267,6 +269,7 @@ void BitcoinGUI::createActions(bool fIsTestnet)\n     connect(toggleHideAction, SIGNAL(triggered()), this, SLOT(toggleHidden()));\n     connect(encryptWalletAction, SIGNAL(triggered(bool)), walletFrame, SLOT(encryptWallet(bool)));\n     connect(backupWalletAction, SIGNAL(triggered()), walletFrame, SLOT(backupWallet()));\n+    connect(refillKeyPoolAction, SIGNAL(triggered()), walletFrame, SLOT(refillKeyPool()));\n     connect(changePassphraseAction, SIGNAL(triggered()), walletFrame, SLOT(changePassphrase()));\n     connect(signMessageAction, SIGNAL(triggered()), this, SLOT(gotoSignMessageTab()));\n     connect(verifyMessageAction, SIGNAL(triggered()), this, SLOT(gotoVerifyMessageTab()));\n@@ -285,6 +288,7 @@ void BitcoinGUI::createMenuBar()\n     // Configure the menus\n     QMenu *file = appMenuBar->addMenu(tr(\"&File\"));\n     file->addAction(backupWalletAction);\n+    file->addAction(refillKeyPoolAction);\n     file->addAction(signMessageAction);\n     file->addAction(verifyMessageAction);\n     file->addSeparator();"
      },
      {
        "sha": "8289e9294820ef36ec21b1b4ab93cec25fc81b19",
        "filename": "src/qt/bitcoingui.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/491c802bd2c329f1f805bbaa23864141f1b1ed49/src/qt/bitcoingui.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/491c802bd2c329f1f805bbaa23864141f1b1ed49/src/qt/bitcoingui.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.h?ref=491c802bd2c329f1f805bbaa23864141f1b1ed49",
        "patch": "@@ -100,6 +100,7 @@ class BitcoinGUI : public QMainWindow\n     QAction *toggleHideAction;\n     QAction *encryptWalletAction;\n     QAction *backupWalletAction;\n+    QAction *refillKeyPoolAction;\n     QAction *changePassphraseAction;\n     QAction *aboutQtAction;\n     QAction *openRPCConsoleAction;"
      },
      {
        "sha": "d82fc13b432d8fecafc569250b68dbde6b3356b8",
        "filename": "src/qt/res/icons/keypair.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/491c802bd2c329f1f805bbaa23864141f1b1ed49/src/qt/res/icons/keypair.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/491c802bd2c329f1f805bbaa23864141f1b1ed49/src/qt/res/icons/keypair.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/icons/keypair.png?ref=491c802bd2c329f1f805bbaa23864141f1b1ed49"
      },
      {
        "sha": "699d2f5792909462632aaf1e71498ddb56240e2d",
        "filename": "src/qt/walletframe.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/491c802bd2c329f1f805bbaa23864141f1b1ed49/src/qt/walletframe.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/491c802bd2c329f1f805bbaa23864141f1b1ed49/src/qt/walletframe.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletframe.cpp?ref=491c802bd2c329f1f805bbaa23864141f1b1ed49",
        "patch": "@@ -110,6 +110,11 @@ void WalletFrame::backupWallet()\n     walletStack->backupWallet();\n }\n \n+void WalletFrame::refillKeyPool()\n+{\n+    walletStack->refillKeyPool();\n+}\n+\n void WalletFrame::changePassphrase()\n {\n     walletStack->changePassphrase();"
      },
      {
        "sha": "b23ca82e9e471250fd4e81ac7eff12765c55f58d",
        "filename": "src/qt/walletframe.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/491c802bd2c329f1f805bbaa23864141f1b1ed49/src/qt/walletframe.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/491c802bd2c329f1f805bbaa23864141f1b1ed49/src/qt/walletframe.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletframe.h?ref=491c802bd2c329f1f805bbaa23864141f1b1ed49",
        "patch": "@@ -58,6 +58,8 @@ public slots:\n     void encryptWallet(bool status);\n     /** Backup the wallet */\n     void backupWallet();\n+    /** Refill the key pool */\n+    void refillKeyPool();\n     /** Change encrypted wallet passphrase */\n     void changePassphrase();\n     /** Ask for passphrase to unlock wallet temporarily */"
      },
      {
        "sha": "bf01d9455403b6600f17ecd64d70850d44ff4259",
        "filename": "src/qt/walletmodel.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/491c802bd2c329f1f805bbaa23864141f1b1ed49/src/qt/walletmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/491c802bd2c329f1f805bbaa23864141f1b1ed49/src/qt/walletmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.cpp?ref=491c802bd2c329f1f805bbaa23864141f1b1ed49",
        "patch": "@@ -357,6 +357,16 @@ bool WalletModel::backupWallet(const QString &filename)\n     return BackupWallet(*wallet, filename.toLocal8Bit().data());\n }\n \n+bool WalletModel::refillKeyPool()\n+{\n+    LOCK(wallet->cs_wallet);\n+\n+    UnlockContext ctx(requestUnlock());\n+    if(!ctx.isValid()) return false;\n+\n+    return wallet->TopUpKeyPool();\n+}\n+\n // Handlers for core signals\n static void NotifyKeyStoreStatusChanged(WalletModel *walletmodel, CCryptoKeyStore *wallet)\n {"
      },
      {
        "sha": "a21bbffce2ffb0a33a4c5377b9c0c29cb255d857",
        "filename": "src/qt/walletmodel.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/491c802bd2c329f1f805bbaa23864141f1b1ed49/src/qt/walletmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/491c802bd2c329f1f805bbaa23864141f1b1ed49/src/qt/walletmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.h?ref=491c802bd2c329f1f805bbaa23864141f1b1ed49",
        "patch": "@@ -95,6 +95,8 @@ class WalletModel : public QObject\n     bool changePassphrase(const SecureString &oldPass, const SecureString &newPass);\n     // Wallet backup\n     bool backupWallet(const QString &filename);\n+    // Refill keypool\n+    bool refillKeyPool();\n \n     // RAI object for unlocking wallet, returned by requestUnlock()\n     class UnlockContext"
      },
      {
        "sha": "237d9f2199da8e4a776ea9291272d9917c3c2c58",
        "filename": "src/qt/walletstack.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/491c802bd2c329f1f805bbaa23864141f1b1ed49/src/qt/walletstack.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/491c802bd2c329f1f805bbaa23864141f1b1ed49/src/qt/walletstack.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletstack.cpp?ref=491c802bd2c329f1f805bbaa23864141f1b1ed49",
        "patch": "@@ -141,6 +141,12 @@ void WalletStack::backupWallet()\n         walletView->backupWallet();\n }\n \n+void WalletStack::refillKeyPool()\n+{\n+    WalletView *walletView = (WalletView*)currentWidget();\n+    if (walletView) walletView->refillKeyPool();\n+}\n+\n void WalletStack::changePassphrase()\n {\n     WalletView *walletView = (WalletView*)currentWidget();"
      },
      {
        "sha": "5fd9ac0e10239e751bfb3bf2e5f648d7deea1fc8",
        "filename": "src/qt/walletstack.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/491c802bd2c329f1f805bbaa23864141f1b1ed49/src/qt/walletstack.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/491c802bd2c329f1f805bbaa23864141f1b1ed49/src/qt/walletstack.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletstack.h?ref=491c802bd2c329f1f805bbaa23864141f1b1ed49",
        "patch": "@@ -89,6 +89,8 @@ public slots:\n     void encryptWallet(bool status);\n     /** Backup the wallet */\n     void backupWallet();\n+    /** Refill the key pool */\n+    void refillKeyPool();\n     /** Change encrypted wallet passphrase */\n     void changePassphrase();\n     /** Ask for passphrase to unlock wallet temporarily */"
      },
      {
        "sha": "4d3c2f39f4b7a79665ae3f3f877397439de992b0",
        "filename": "src/qt/walletview.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/491c802bd2c329f1f805bbaa23864141f1b1ed49/src/qt/walletview.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/491c802bd2c329f1f805bbaa23864141f1b1ed49/src/qt/walletview.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletview.cpp?ref=491c802bd2c329f1f805bbaa23864141f1b1ed49",
        "patch": "@@ -254,6 +254,18 @@ void WalletView::backupWallet()\n     }\n }\n \n+void WalletView::refillKeyPool()\n+{\n+    if (!walletModel->refillKeyPool()) {\n+        gui->message(tr(\"Refill Key Pool Failed\"), tr(\"There was an error trying to refill the keypool.\"),\n+                  CClientUIInterface::MSG_ERROR);\n+    }\n+    else {\n+        gui->message(tr(\"Key Pool Refilled\"), tr(\"Do not forget to make wallet backups.\"),\n+                  CClientUIInterface::MSG_INFORMATION);\n+    }\n+}\n+\n void WalletView::changePassphrase()\n {\n     AskPassphraseDialog dlg(AskPassphraseDialog::ChangePass, this);"
      },
      {
        "sha": "e7f24545a889e1af9f831a6b0d035004fe7233ef",
        "filename": "src/qt/walletview.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/491c802bd2c329f1f805bbaa23864141f1b1ed49/src/qt/walletview.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/491c802bd2c329f1f805bbaa23864141f1b1ed49/src/qt/walletview.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletview.h?ref=491c802bd2c329f1f805bbaa23864141f1b1ed49",
        "patch": "@@ -94,6 +94,8 @@ public slots:\n     void encryptWallet(bool status);\n     /** Backup the wallet */\n     void backupWallet();\n+    /** Refill the key pool */\n+    void refillKeyPool();\n     /** Change encrypted wallet passphrase */\n     void changePassphrase();\n     /** Ask for passphrase to unlock wallet temporarily */"
      }
    ]
  },
  {
    "sha": "4ec0d1d99554e4109bfcef1970b1354e89cc6a97",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0ZWMwZDFkOTk1NTRlNDEwOWJmY2VmMTk3MGIxMzU0ZTg5Y2M2YTk3",
    "commit": {
      "author": {
        "name": "Eric Lombrozo",
        "email": "elombrozo@gmail.com",
        "date": "2013-07-21T15:41:29Z"
      },
      "committer": {
        "name": "Eric Lombrozo",
        "email": "elombrozo@gmail.com",
        "date": "2013-09-17T02:51:42Z"
      },
      "message": "Got rid of the wallet default key since it isn't being used at all anymore and only produces bad behaviors in Bitcoin-Qt.",
      "tree": {
        "sha": "db5d8a1a21a92fe29167978e7603332db443201a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/db5d8a1a21a92fe29167978e7603332db443201a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4ec0d1d99554e4109bfcef1970b1354e89cc6a97",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4ec0d1d99554e4109bfcef1970b1354e89cc6a97",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4ec0d1d99554e4109bfcef1970b1354e89cc6a97",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4ec0d1d99554e4109bfcef1970b1354e89cc6a97/comments",
    "author": {
      "login": "CodeShark",
      "id": 894059,
      "node_id": "MDQ6VXNlcjg5NDA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/894059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CodeShark",
      "html_url": "https://github.com/CodeShark",
      "followers_url": "https://api.github.com/users/CodeShark/followers",
      "following_url": "https://api.github.com/users/CodeShark/following{/other_user}",
      "gists_url": "https://api.github.com/users/CodeShark/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CodeShark/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CodeShark/subscriptions",
      "organizations_url": "https://api.github.com/users/CodeShark/orgs",
      "repos_url": "https://api.github.com/users/CodeShark/repos",
      "events_url": "https://api.github.com/users/CodeShark/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CodeShark/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CodeShark",
      "id": 894059,
      "node_id": "MDQ6VXNlcjg5NDA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/894059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CodeShark",
      "html_url": "https://github.com/CodeShark",
      "followers_url": "https://api.github.com/users/CodeShark/followers",
      "following_url": "https://api.github.com/users/CodeShark/following{/other_user}",
      "gists_url": "https://api.github.com/users/CodeShark/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CodeShark/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CodeShark/subscriptions",
      "organizations_url": "https://api.github.com/users/CodeShark/orgs",
      "repos_url": "https://api.github.com/users/CodeShark/repos",
      "events_url": "https://api.github.com/users/CodeShark/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CodeShark/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "491c802bd2c329f1f805bbaa23864141f1b1ed49",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/491c802bd2c329f1f805bbaa23864141f1b1ed49",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/491c802bd2c329f1f805bbaa23864141f1b1ed49"
      }
    ],
    "stats": {
      "total": 83,
      "additions": 10,
      "deletions": 73
    },
    "files": [
      {
        "sha": "553f4f3a657e7b3b01b525f7c3b16db253634b84",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 15,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4ec0d1d99554e4109bfcef1970b1354e89cc6a97/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4ec0d1d99554e4109bfcef1970b1354e89cc6a97/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=4ec0d1d99554e4109bfcef1970b1354e89cc6a97",
        "patch": "@@ -574,7 +574,8 @@ bool AppInit2(boost::thread_group& threadGroup)\n             return false;\n     }\n \n-    if (filesystem::exists(GetDataDir() / strWalletFile))\n+    bool fWalletAlreadyExists = filesystem::exists(GetDataDir() / strWalletFile);\n+    if (fWalletAlreadyExists)\n     {\n         CDBEnv::VerifyResult r = bitdb.Verify(strWalletFile, CWalletDB::Recover);\n         if (r == CDBEnv::RECOVER_OK)\n@@ -854,9 +855,8 @@ bool AppInit2(boost::thread_group& threadGroup)\n     uiInterface.InitMessage(_(\"Loading wallet...\"));\n \n     nStart = GetTimeMillis();\n-    bool fFirstRun = true;\n     pwalletMain = new CWallet(strWalletFile, !GetBoolArg(\"-noautofillkeypool\", false));\n-    DBErrors nLoadWalletRet = pwalletMain->LoadWallet(fFirstRun);\n+    DBErrors nLoadWalletRet = pwalletMain->LoadWallet();\n     if (nLoadWalletRet != DB_LOAD_OK)\n     {\n         if (nLoadWalletRet == DB_CORRUPT)\n@@ -879,7 +879,7 @@ bool AppInit2(boost::thread_group& threadGroup)\n             strErrors << _(\"Error loading wallet.dat\") << \"\\n\";\n     }\n \n-    if (GetBoolArg(\"-upgradewallet\", fFirstRun))\n+    if (GetBoolArg(\"-upgradewallet\", !fWalletAlreadyExists))\n     {\n         int nMaxVersion = GetArg(\"-upgradewallet\", 0);\n         if (nMaxVersion == 0) // the -upgradewallet without argument case\n@@ -895,18 +895,8 @@ bool AppInit2(boost::thread_group& threadGroup)\n         pwalletMain->SetMaxVersion(nMaxVersion);\n     }\n \n-    if (fFirstRun)\n+    if (!fWalletAlreadyExists)\n     {\n-        // Create new keyUser and set as default key\n-        RandAddSeedPerfmon();\n-\n-        CPubKey newDefaultKey;\n-        if (pwalletMain->GetKeyFromPool(newDefaultKey)) {\n-            pwalletMain->SetDefaultKey(newDefaultKey);\n-            if (!pwalletMain->SetAddressBook(pwalletMain->vchDefaultKey.GetID(), \"\", \"receive\"))\n-                strErrors << _(\"Cannot write default address\") << \"\\n\";\n-        }\n-\n         pwalletMain->SetBestChain(CBlockLocator(pindexBest));\n     }\n "
      },
      {
        "sha": "707603e26c72179864a0de91c6b5c282eb0b723d",
        "filename": "src/test/test_bitcoin.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4ec0d1d99554e4109bfcef1970b1354e89cc6a97/src/test/test_bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4ec0d1d99554e4109bfcef1970b1354e89cc6a97/src/test/test_bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/test_bitcoin.cpp?ref=4ec0d1d99554e4109bfcef1970b1354e89cc6a97",
        "patch": "@@ -30,9 +30,8 @@ struct TestingSetup {\n         pcoinsdbview = new CCoinsViewDB(1 << 23, true);\n         pcoinsTip = new CCoinsViewCache(*pcoinsdbview);\n         InitBlockIndex();\n-        bool fFirstRun;\n         pwalletMain = new CWallet(\"wallet.dat\");\n-        pwalletMain->LoadWallet(fFirstRun);\n+        pwalletMain->LoadWallet();\n         RegisterWallet(pwalletMain);\n         nScriptCheckThreads = 3;\n         for (int i=0; i < nScriptCheckThreads-1; i++)"
      },
      {
        "sha": "ced8aeee5c2b09cab3451e077051770557ea9398",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 40,
        "changes": 43,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4ec0d1d99554e4109bfcef1970b1354e89cc6a97/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4ec0d1d99554e4109bfcef1970b1354e89cc6a97/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=4ec0d1d99554e4109bfcef1970b1354e89cc6a97",
        "patch": "@@ -483,25 +483,6 @@ bool CWallet::AddToWallet(const CWalletTx& wtxIn)\n             if (!wtx.WriteToDisk())\n                 return false;\n \n-        if (!fHaveGUI) {\n-            // If default receiving address gets used, replace it with a new one\n-            if (vchDefaultKey.IsValid()) {\n-                CScript scriptDefaultKey;\n-                scriptDefaultKey.SetDestination(vchDefaultKey.GetID());\n-                BOOST_FOREACH(const CTxOut& txout, wtx.vout)\n-                {\n-                    if (txout.scriptPubKey == scriptDefaultKey)\n-                    {\n-                        CPubKey newDefaultKey;\n-                        if (GetKeyFromPool(newDefaultKey))\n-                        {\n-                            SetDefaultKey(newDefaultKey);\n-                            SetAddressBook(vchDefaultKey.GetID(), \"\", \"receive\");\n-                        }\n-                    }\n-                }\n-            }\n-        }\n         // since AddToWallet is called directly for self-originating transactions, check for consumption of own coins\n         WalletUpdateSpent(wtx);\n \n@@ -1436,11 +1417,10 @@ string CWallet::SendMoneyToDestination(const CTxDestination& address, int64 nVal\n \n \n \n-DBErrors CWallet::LoadWallet(bool& fFirstRunRet)\n+DBErrors CWallet::LoadWallet()\n {\n     if (!fFileBacked)\n         return DB_LOAD_OK;\n-    fFirstRunRet = false;\n     DBErrors nLoadWalletRet = CWalletDB(strWalletFile,\"cr+\").LoadWallet(this);\n     if (nLoadWalletRet == DB_NEED_REWRITE)\n     {\n@@ -1455,7 +1435,6 @@ DBErrors CWallet::LoadWallet(bool& fFirstRunRet)\n \n     if (nLoadWalletRet != DB_LOAD_OK)\n         return nLoadWalletRet;\n-    fFirstRunRet = !vchDefaultKey.IsValid();\n \n     return DB_LOAD_OK;\n }\n@@ -1514,17 +1493,6 @@ bool CWallet::GetTransaction(const uint256 &hashTx, CWalletTx& wtx)\n     return false;\n }\n \n-bool CWallet::SetDefaultKey(const CPubKey &vchPubKey)\n-{\n-    if (fFileBacked)\n-    {\n-        if (!CWalletDB(strWalletFile).WriteDefaultKey(vchPubKey))\n-            return false;\n-    }\n-    vchDefaultKey = vchPubKey;\n-    return true;\n-}\n-\n bool GetWalletFile(CWallet* pwallet, string &strWalletFileOut)\n {\n     if (!pwallet->fFileBacked)\n@@ -1838,13 +1806,8 @@ bool CReserveKey::GetReservedKey(CPubKey& pubkey)\n         pwallet->ReserveKeyFromKeyPool(nIndex, keypool);\n         if (nIndex != -1)\n             vchPubKey = keypool.vchPubKey;\n-        else {\n-            if (pwallet->vchDefaultKey.IsValid()) {\n-                printf(\"CReserveKey::GetReservedKey(): Warning: Using default key instead of a new key, top up your keypool!\");\n-                vchPubKey = pwallet->vchDefaultKey;\n-            } else\n-                return false;\n-        }\n+        else\n+            return false;\n     }\n     assert(vchPubKey.IsValid());\n     pubkey = vchPubKey;"
      },
      {
        "sha": "e656ed1ea991c92160d65e2ac4cd6741353a99da",
        "filename": "src/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 5,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4ec0d1d99554e4109bfcef1970b1354e89cc6a97/src/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4ec0d1d99554e4109bfcef1970b1354e89cc6a97/src/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.h?ref=4ec0d1d99554e4109bfcef1970b1354e89cc6a97",
        "patch": "@@ -143,8 +143,6 @@ class CWallet : public CCryptoKeyStore\n \n     std::map<CTxDestination, CAddressBookData> mapAddressBook;\n \n-    CPubKey vchDefaultKey;\n-\n     std::set<COutPoint> setLockedCoins;\n \n     int64 nTimeFirstKey;\n@@ -299,7 +297,7 @@ class CWallet : public CCryptoKeyStore\n     }\n     void SetBestChain(const CBlockLocator& loc);\n \n-    DBErrors LoadWallet(bool& fFirstRunRet);\n+    DBErrors LoadWallet();\n \n     bool SetAddressBook(const CTxDestination& address, const std::string& strName, const std::string& purpose);\n \n@@ -326,8 +324,6 @@ class CWallet : public CCryptoKeyStore\n \n     bool GetTransaction(const uint256 &hashTx, CWalletTx& wtx);\n \n-    bool SetDefaultKey(const CPubKey &vchPubKey);\n-\n     // signify that a particular wallet feature is now used. this may change nWalletVersion and nWalletMaxVersion if those are lower\n     bool SetMinVersion(enum WalletFeature, CWalletDB* pwalletdbIn = NULL, bool fExplicit = false);\n "
      },
      {
        "sha": "ba0bb0d13cd9cdc2e291355d764c6a3d5ea8e97d",
        "filename": "src/walletdb.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4ec0d1d99554e4109bfcef1970b1354e89cc6a97/src/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4ec0d1d99554e4109bfcef1970b1354e89cc6a97/src/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/walletdb.cpp?ref=4ec0d1d99554e4109bfcef1970b1354e89cc6a97",
        "patch": "@@ -376,10 +376,6 @@ ReadKeyValue(CWallet* pwallet, CDataStream& ssKey, CDataStream& ssValue,\n                 (keyMeta.nCreateTime < pwallet->nTimeFirstKey))\n                 pwallet->nTimeFirstKey = keyMeta.nCreateTime;\n         }\n-        else if (strType == \"defaultkey\")\n-        {\n-            ssValue >> pwallet->vchDefaultKey;\n-        }\n         else if (strType == \"pool\")\n         {\n             int64 nIndex;\n@@ -432,7 +428,6 @@ static bool IsKeyType(string strType)\n \n DBErrors CWalletDB::LoadWallet(CWallet* pwallet)\n {\n-    pwallet->vchDefaultKey = CPubKey();\n     CWalletScanState wss;\n     bool fNoncriticalErrors = false;\n     DBErrors result = DB_LOAD_OK;"
      },
      {
        "sha": "d59894019ec083c11f648a3b5758917ccf0082dd",
        "filename": "src/walletdb.h",
        "status": "modified",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4ec0d1d99554e4109bfcef1970b1354e89cc6a97/src/walletdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4ec0d1d99554e4109bfcef1970b1354e89cc6a97/src/walletdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/walletdb.h?ref=4ec0d1d99554e4109bfcef1970b1354e89cc6a97",
        "patch": "@@ -147,12 +147,6 @@ class CWalletDB : public CDB\n         return Write(std::string(\"orderposnext\"), nOrderPosNext);\n     }\n \n-    bool WriteDefaultKey(const CPubKey& vchPubKey)\n-    {\n-        nWalletDBUpdated++;\n-        return Write(std::string(\"defaultkey\"), vchPubKey);\n-    }\n-\n     bool ReadPool(int64 nPool, CKeyPool& keypool)\n     {\n         return Read(std::make_pair(std::string(\"pool\"), nPool), keypool);"
      }
    ]
  }
]