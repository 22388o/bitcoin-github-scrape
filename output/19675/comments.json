[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/670211864",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19675#issuecomment-670211864",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19675",
    "id": 670211864,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3MDIxMTg2NA==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-06T21:57:28Z",
    "updated_at": "2020-08-06T21:57:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Warchant First: welcome as a future contributor! :)\r\n\r\nMy guess is that a massive automated refactoring like this with many unrelated changes is unlikely to get merged.\r\n\r\nIf you want to proceed with this type of work I suggest picking a _single_ `clang-tidy` fix-it rule that results in a change set that a.) makes sense (ideally: everyone should agree on that the fix-it version is better than status quo version), b.) is trivially correct (ideally: if-it-compiles-it-is-correct), c.) makes the code more in line with what the developer notes suggest, and d.) doesn't touch too many lines.\r\n\r\nOf the changes in your PR I guess the function signature transformation from `T f(std::string s)` to `T f(const std::string& s)` is scoring (relatively) highest given these criteria.\r\n\r\nAnd generally: don't touch dependencies (`src/leveldb/` in this case) and try to avoid touching consensus critical code.\r\n\r\nHope that helps! :)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/670211864/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/670213376",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19675#issuecomment-670213376",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19675",
    "id": 670213376,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3MDIxMzM3Ng==",
    "user": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?u=a0e0040aacd7d4f0787481e8ac30b494fa429e11&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-06T22:01:57Z",
    "updated_at": "2020-08-06T22:01:57Z",
    "author_association": "MEMBER",
    "body": "There's nothing wrong with Travis, you've modified a subtree, and the\nlinter is failing as expected. Subtree modifications should always be sent\nto the relevant upstream repo. See:\nhttps://github.com/bitcoin/bitcoin/blob/master/doc/developer-notes.md#subtrees\n.\n\nIn general, PRs that just run some automated tooling against the repo are\nunlikely to be merged, especially if they come from new contributors, see:\nhttps://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#refactoring.\n\nAlso, you've said this is a performance improvement, but haven't provided\nany benchmarks.\n\nOn Fri, 7 Aug 2020 at 05:26, Bohdan <notifications@github.com> wrote:\n\n> Something is wrong with Travis\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/bitcoin/bitcoin/pull/19675#issuecomment-670200235>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AAGS34TSAOMEFT7AY6UW7U3R7MNZLANCNFSM4PW7VTHQ>\n> .\n>\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/670213376/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/670267766",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19675#issuecomment-670267766",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19675",
    "id": 670267766,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3MDI2Nzc2Ng==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-07T01:15:08Z",
    "updated_at": "2020-08-07T01:15:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19463 (Prune locks by luke-jr)\n* #19339 (validation: re-delegate absurd fee checking from mempool to clients by gzhao408)\n* #19316 ([net] Cleanup logic around connection types by amitiuttarwar)\n* #19306 (refactor: Replace RecursiveMutex with Mutex in CTxMemPool by hebasto)\n* #19136 (wallet: add parent_desc to getaddressinfo by achow101)\n* #19093 (RPC: testmempoolaccept returns transaction fee by rajarshimaitra)\n* #18354 (Use shared pointers only in validation interface by bvbfan)\n* #17479 (Return BlockValidationState from ProcessNewBlock if CheckBlock/AcceptBlock fails by jnewbery)\n* #17211 (Allow fundrawtransaction and walletcreatefundedpsbt to take external inputs by achow101)\n* #16378 (The ultimate send RPC by Sjors)\n* #16333 (test: Set BIP34Height = 2 for regtest by MarcoFalke)\n* #15606 ([experimental] UTXO snapshots by jamesob)\n* #15367 (feature: Added ability for users to add a startup command by benthecarman)\n* #14582 (wallet: always do avoid partial spends if fees are within a specified range by kallewoof)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/670267766/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/670453475",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19675#issuecomment-670453475",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19675",
    "id": 670453475,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3MDQ1MzQ3NQ==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-07T10:39:40Z",
    "updated_at": "2020-08-07T10:40:38Z",
    "author_association": "MEMBER",
    "body": "Thanks for your first contribution. However, as @practicalswift already says, we don't do large-scale all-over-the-place automated refactors like this.\r\nIn general, code-style changes should only be done when modifying code in the vicinity. This avoids conflict with every other PR.\r\nAlso, this changes the code semantically, so it would be a lot of work to review.\r\nSo NACK",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/670453475/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]