laanwj,2014-10-27T08:19:20Z,"Good idea, but at least mention this in contrib/README.md\n\nEdit: Looking through the commits, all jgarzik's commits and merges are signed with: Primary key fingerprint: AF8B E07C 7049 F3A2 6B23  9D53 25B3 0832 0178 2B2F\n",https://github.com/bitcoin/bitcoin/pull/5149#issuecomment-60560879,60560879,
theuni,2014-10-28T07:18:49Z,"The verify script seems overly complex to me if it's just supposed to be verifying merge commits. I took a stab at it and came up with:\n\n``` bash\n#!/bin/sh\nDIR=""`git rev-parse --show-toplevel`/contrib/verify-commits""\nVERIFIED_ROOT=`< ""${DIR}/trusted-git-root""`\nTEST_COMMIT=""$1""\nRET=0\nfor i in `git rev-list --min-parents=2 --max-parents=2 ""${VERIFIED_ROOT}""..""${TEST_COMMIT}""`; do\n  git -c """,https://github.com/bitcoin/bitcoin/pull/5149#issuecomment-60717867,60717867,
sipa,2014-10-28T07:31:26Z,@theuni that would not catch non-merge commits that get pushed directly rather than via a merge commit.\n,https://github.com/bitcoin/bitcoin/pull/5149#issuecomment-60718670,60718670,
sipa,2014-10-28T07:53:04Z,`git rev-list --first-parent` seems to do the thing we want (though it seems @TheBlueMatt also wants to cover the case where a (recursively) signed commit is signed merged into a non-signed branch).\n,https://github.com/bitcoin/bitcoin/pull/5149#issuecomment-60720153,60720153,
TheBlueMatt,2014-10-28T19:37:38Z,"Technically, merge commit parents dont have to be in a specific order, so even though if using the merge shell script in contrib you wouldnt hit it, it is not unreasonable for someone to have been developing on their own branch, merging two pulls or so, and then merging that branch.\n",https://github.com/bitcoin/bitcoin/pull/5149#issuecomment-60817766,60817766,
sipa,2014-10-31T16:17:48Z,"@TheBlueMatt Well, sure, but ""git merge branch"" will have the current HEAD as first parent and branch as second parent (assuming it wasn't a fast forward), so I don't see how anything merged into master should not have its first parent (and its first parents) signed.\n",https://github.com/bitcoin/bitcoin/pull/5149#issuecomment-61285783,61285783,
TheBlueMatt,2014-11-01T22:41:38Z,"@sipa Indeed, though my point was more that its not unreasonable to be on a separate branch and merge in master. While we try to keep our git history clean of that kind of confusion, its not incorrect and not unreasonable for it to happen, so I find it better to support it.\n",https://github.com/bitcoin/bitcoin/pull/5149#issuecomment-61386519,61386519,
TheBlueMatt,2014-11-12T23:44:03Z,Updated the commit base because @gavinandresen insists on merging without signing his commits and squashed.\n,https://github.com/bitcoin/bitcoin/pull/5149#issuecomment-62816621,62816621,
sipa,2014-11-13T10:28:28Z,I believe this code can lead to exponential time in the number of merges :)\n,https://github.com/bitcoin/bitcoin/pull/5149#issuecomment-62870793,62870793,
TheBlueMatt,2014-11-13T19:45:25Z,"In an unrealistic worst-case, yes...if someone who's key was on the list started signing all of their commits, it is possible that it would go quite far down both sides of a merge, however, in any other case, it wont pass one commit down a merge branch that isnt followed by other merges.\n",https://github.com/bitcoin/bitcoin/pull/5149#issuecomment-62953714,62953714,
jgarzik,2014-11-14T04:28:30Z,One solution employed in kernel-land is hooks.  I wonder how possible it is to hook something like this PR's script with a pre-commit hook that prevents pushes containing unsigned merge commits.\n,https://github.com/bitcoin/bitcoin/pull/5149#issuecomment-63009062,63009062,
TheBlueMatt,2014-11-14T07:27:13Z,@jgarzik sounds good...is there a way to limit a hook to only apply if you're pushing to github.com/bitcoin/bitcoin?\n,https://github.com/bitcoin/bitcoin/pull/5149#issuecomment-63019343,63019343,
TheBlueMatt,2014-12-20T05:41:03Z,"@jgarzik To answer your question, yes. I updated this pull to (a) include @gmaxwell's pubkey, (b) there were several unsigned merges, so had to update the trusted root, (c) include a contrib/verify-commits/pre-push-hook.sh which, if copied to .git/hooks/pre-push (and you have bash installed), will prevent the pushing of unsigned commits to master on bitcoin/bitcoin (but not apply for any other rep",https://github.com/bitcoin/bitcoin/pull/5149#issuecomment-67726007,67726007,
gmaxwell,2014-12-20T08:02:18Z,"of course, people can hit the merge button on github, and then the script will be broken after that, no?\n",https://github.com/bitcoin/bitcoin/pull/5149#issuecomment-67728618,67728618,
TheBlueMatt,2014-12-20T08:13:12Z,"Yes, this is why the script only applies to people with push access...if you hit the merge button, you'll require everyone else to update contrib/verify-commits/trusted-git-root (or simply disable the hook). Its enough that it'll remind everyone to sign their merges, but it doesnt block all unsigned code from getting uploaded, ie its easy to work around.\n",https://github.com/bitcoin/bitcoin/pull/5149#issuecomment-67728802,67728802,
sipa,2014-10-27T08:26:40Z,"This script seems to use bashisms, so better mark its interpreter as bash (it doesn't work here).\n",https://github.com/bitcoin/bitcoin/pull/5149#discussion_r19392145,19392145,contrib/verify-commits/verify-commits.sh
sipa,2014-10-27T08:27:45Z,Why 2x 'HEAD' ?\n,https://github.com/bitcoin/bitcoin/pull/5149#discussion_r19392186,19392186,contrib/verify-commits/verify-commits.sh
sipa,2014-10-27T08:30:08Z,"You can use:\n\n```\ngit -c ""gpg.program=${DIR}/gpg.sh"" command [args]\n```\n\ninstead of\n\n```\ngit config gpg.program ""${DIR}/gpg.sh""\ngit command [args]\n```\n",https://github.com/bitcoin/bitcoin/pull/5149#discussion_r19392273,19392273,contrib/verify-commits/verify-commits.sh
sipa,2014-10-27T08:33:25Z,"I don't think it's necessary to recurse into the second part (which is the commit being merged). Also, how many recursion levels does bash support? \n\nEDIT: misread the first time\n",https://github.com/bitcoin/bitcoin/pull/5149#discussion_r19392396,19392396,contrib/verify-commits/verify-commits.sh
sipa,2014-10-27T08:36:37Z,$(</dev/stdin) is faster\n,https://github.com/bitcoin/bitcoin/pull/5149#discussion_r19392507,19392507,contrib/verify-commits/gpg.sh
TheBlueMatt,2014-10-27T19:10:49Z,Oh? Which ones?\n,https://github.com/bitcoin/bitcoin/pull/5149#discussion_r19429616,19429616,contrib/verify-commits/verify-commits.sh
TheBlueMatt,2014-10-27T19:13:03Z,"I'm not sure it is either, but its easy enough and for completeness it should be there.\n",https://github.com/bitcoin/bitcoin/pull/5149#discussion_r19429771,19429771,contrib/verify-commits/verify-commits.sh
sipa,2014-10-28T03:14:23Z,"functions, for one.\n",https://github.com/bitcoin/bitcoin/pull/5149#discussion_r19451539,19451539,contrib/verify-commits/verify-commits.sh
TheBlueMatt,2014-10-28T19:32:10Z,"Ehh, almost all shells people use support functions, not sure which one(s) dont at this point.\n",https://github.com/bitcoin/bitcoin/pull/5149#discussion_r19497155,19497155,contrib/verify-commits/verify-commits.sh
sipa,2014-10-31T08:34:56Z,And apparently function definitions are indeed standard POSIX. But the 'function' keyword is not. You can just remove the 'function ' in front.\n,https://github.com/bitcoin/bitcoin/pull/5149#discussion_r19656207,19656207,contrib/verify-commits/verify-commits.sh
TheBlueMatt,2014-11-01T22:41:52Z,Already had :)\n,https://github.com/bitcoin/bitcoin/pull/5149#discussion_r19708354,19708354,contrib/verify-commits/verify-commits.sh
