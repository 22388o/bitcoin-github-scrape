fanquake,2018-07-31T05:52:41Z,"```\n$ test/lint/lint-all.sh\nMissing ""export LC_ALL=C"" (to avoid locale dependence) as first non-comment non-empty line in test/lint/lint-cpp.sh\n^---- failure generated from test/lint/lint-shell-locale.sh\nThe command ""test/lint/lint-all.sh"" exited with 1.\n```",https://github.com/bitcoin/bitcoin/pull/13815#issuecomment-409103320,409103320,
practicalswift,2018-07-31T07:52:33Z,"@fanquake Thanks! `lint-shell-locale.sh` to the rescue once again! Now fixed! Please re-review :-)\n\n@Empact Good point! Updated. Please re-review :-)",https://github.com/bitcoin/bitcoin/pull/13815#issuecomment-409129515,409129515,
skeees,2018-08-02T03:38:56Z,"utACK (weakly regarding the linter)\nIf you want to have lots of lint checks and similar static analysis to the kind you are adding here (it seems you do, and these things are useful!) - it might make sense to consider investing in building out tooling that uses libclang and inspects the AST directly as opposed to just regexp matching.",https://github.com/bitcoin/bitcoin/pull/13815#issuecomment-409795628,409795628,
practicalswift,2018-08-02T13:48:13Z,@skeees I removed the linter. Now using `__attribute__((warn_unused_result))` instead. Please re-review :-),https://github.com/bitcoin/bitcoin/pull/13815#issuecomment-409932225,409932225,
skeees,2018-08-02T14:20:52Z,":) Nice\nIs is best practice to `#define` this attribute similar to how this is done in `threadsafety.h` or `#  define SECP256K1_WARN_UNUSED_RESULT __attribute__ ((__warn_unused_result__))` ?",https://github.com/bitcoin/bitcoin/pull/13815#issuecomment-409943498,409943498,
practicalswift,2018-08-02T14:38:56Z,"@skeees The `secp256k1` define is used to handle ancient `gcc` versions AFAICS, so I see no reason to use that here. Let me know if you see any other reason :-)",https://github.com/bitcoin/bitcoin/pull/13815#issuecomment-409949944,409949944,
practicalswift,2018-08-02T14:56:58Z,Also added `__attribute__((warn_unused_result))` to all Decode[...](...) functions returning `bool`. Please re-review :-),https://github.com/bitcoin/bitcoin/pull/13815#issuecomment-409956377,409956377,
DrahtBot,2018-08-02T15:09:18Z,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#14605](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14605.html) (Return of the Banman by dongcarl)\n* [#1404",https://github.com/bitcoin/bitcoin/pull/13815#issuecomment-409960844,409960844,
skeees,2018-08-02T15:33:05Z,can reorder the Tests* commits first before adding the attribute commits so that you don't break a bisect,https://github.com/bitcoin/bitcoin/pull/13815#issuecomment-409968945,409968945,
practicalswift,2018-08-02T15:44:49Z,"@skeees When rethinking it I think you have a good point regarding using a `#define`. Perhaps we should go with:\n\n```\n#ifdef __has_cpp_attribute\n#  if __has_cpp_attribute(nodiscard)\n#    define NODISCARD [[nodiscard]]\n#  endif\n#else\n#  define NODISCARD __attribute__((warn_unused_result))\n#endif\n```\n\nThat will have the benefit of being less verbose. That would use the newer ",https://github.com/bitcoin/bitcoin/pull/13815#issuecomment-409972938,409972938,
practicalswift,2018-08-02T15:49:02Z,@skeees Commits reordered as requested!,https://github.com/bitcoin/bitcoin/pull/13815#issuecomment-409974386,409974386,
skeees,2018-08-02T15:51:45Z,"I like that `#define` solution @practicalswift \nI don't see an obviously appropriate place for these right now maybe add `staticanalysis.h` ?",https://github.com/bitcoin/bitcoin/pull/13815#issuecomment-409975484,409975484,
practicalswift,2018-08-02T15:57:52Z,"What about the following?\n\n```\n$ cat src/attributes.h\n// Copyright (c) 2009-2010 Satoshi Nakamoto\n// Copyright (c) 2009-2018 The Bitcoin Core developers\n// Distributed under the MIT software license, see the accompanying\n// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n\n#ifndef BITCOIN_ATTRIBUTES_H\n#define BITCOIN_ATTRIBUTES_H\n\n#ifdef __has_cpp_attribu",https://github.com/bitcoin/bitcoin/pull/13815#issuecomment-409977469,409977469,
practicalswift,2018-08-02T16:21:28Z,Now using `NODISCARD` (`[[nodiscard]]` or `__attribute__((warn_unused_result))`) throughout. Please re-review :-),https://github.com/bitcoin/bitcoin/pull/13815#issuecomment-409984994,409984994,
Empact,2018-08-02T18:40:43Z,"Concept ACK, and loving `NODISCARD`. But you need to add `attributes.h` to `src/Makefile.am`. Also please sort your new include alphabetically.",https://github.com/bitcoin/bitcoin/pull/13815#issuecomment-410027504,410027504,
practicalswift,2018-08-03T07:30:15Z,@Empact Thanks for reviewing! Feedback addressed. The broken `ifdef` logic was sloppy from my side – sorry about that. Would you mind re-reviewing? :-),https://github.com/bitcoin/bitcoin/pull/13815#issuecomment-410170061,410170061,
Empact,2018-08-03T15:00:07Z,"On second thought, how about throw rather than default on unparsable option? Seems like a failure to be noisy about.",https://github.com/bitcoin/bitcoin/pull/13815#issuecomment-410280597,410280597,
skeees,2018-08-03T15:00:45Z,"In terms of commit ordering, you need the `#define NODISCARD` commit to precede the commits where you use `NODISCARD` Other than that lgtm!",https://github.com/bitcoin/bitcoin/pull/13815#issuecomment-410280804,410280804,
practicalswift,2018-08-15T20:36:16Z,"Rebased! :-)\n\n@MarcoFalke I don't know if I've thanked you before but thanks for your work on @DrahtBot! It really helps keeping the PR:s up to date! Really nice!",https://github.com/bitcoin/bitcoin/pull/13815#issuecomment-413327491,413327491,
practicalswift,2018-08-27T17:15:21Z,Updated `NODISCARD` to work also with Visual C++ :-),https://github.com/bitcoin/bitcoin/pull/13815#issuecomment-416298609,416298609,
practicalswift,2018-08-28T20:58:07Z,Rebased!,https://github.com/bitcoin/bitcoin/pull/13815#issuecomment-416738053,416738053,
Empact,2018-09-25T04:51:13Z,"I see apparently unnecessary changes to:\nsrc/wallet/rpcwallet.cpp\nsrc/wallet/test/psbt_wallet_tests.cpp",https://github.com/bitcoin/bitcoin/pull/13815#issuecomment-424206404,424206404,
practicalswift,2018-09-25T05:02:49Z,@Empact Unrelated sorting of includes in those two files removed :-),https://github.com/bitcoin/bitcoin/pull/13815#issuecomment-424208030,424208030,
practicalswift,2018-10-07T12:18:22Z,"Rebased! Please re-review @ken2812221, @arvidn, @Empact, @skeees and @fanquake :-)",https://github.com/bitcoin/bitcoin/pull/13815#issuecomment-427648960,427648960,
practicalswift,2018-10-09T10:27:40Z,Updated to address @arvidn:s `static` nit. Please re-review :-),https://github.com/bitcoin/bitcoin/pull/13815#issuecomment-428141618,428141618,
practicalswift,2018-10-11T10:20:06Z,Updated to address MSVC warnings. Please re-review :-),https://github.com/bitcoin/bitcoin/pull/13815#issuecomment-428902278,428902278,
practicalswift,2018-10-11T20:22:10Z,"@ken2812221 Seems like I'm unable to get rid of the ugly MSVC warnings (""unexpected tokens following preprocessor directive […]""). Do you have any theory on how to fix it? I don't have MSVC available – only AppVeyor :-)",https://github.com/bitcoin/bitcoin/pull/13815#issuecomment-429104759,429104759,
ken2812221,2018-10-11T20:25:03Z,Just put __has_cpp_attribute(...) inside the condition #ifdef __has_cpp_attribute. Like what I posted.,https://github.com/bitcoin/bitcoin/pull/13815#issuecomment-429105684,429105684,
practicalswift,2018-11-05T12:54:06Z,Rebased!,https://github.com/bitcoin/bitcoin/pull/13815#issuecomment-435863376,435863376,
MarcoFalke,2018-11-08T20:43:05Z,utACK 9cc0230cfc1ae9b9c1c905cd9ac613bc98bfa43a,https://github.com/bitcoin/bitcoin/pull/13815#issuecomment-437148643,437148643,
Empact,2018-11-08T21:05:50Z,utACK 9cc0230,https://github.com/bitcoin/bitcoin/pull/13815#issuecomment-437155692,437155692,
sipa,2018-11-14T23:05:58Z,utACK 9cc0230cfc1ae9b9c1c905cd9ac613bc98bfa43a,https://github.com/bitcoin/bitcoin/pull/13815#issuecomment-438852745,438852745,
Empact,2018-07-31T07:03:18Z,"You could avoid the duplicate else clause by boosting amount out like so:\n\n```C++\nif (gArgs.IsArgSet(""-blockmintxfee"") && ParseMoney(gArgs.GetArg(""-blockmintxfee"", """"), n)) {\n```",https://github.com/bitcoin/bitcoin/pull/13815#discussion_r206414188,206414188,src/miner.cpp
Empact,2018-08-02T18:44:11Z,"You should collapse this to one level: `#if defined(__has_cpp_attribute) && __has_cpp_attribute(nodiscard)`\n\nOtherwise `NODISCARD` will be undefined if `__has_cpp_attribute(nodiscard)` is false.",https://github.com/bitcoin/bitcoin/pull/13815#discussion_r207333676,207333676,src/attributes.h
arvidn,2018-09-17T14:23:31Z,"with this change the scope of variable `n` expands and ""leaks"" outside of where it's used.\nperhaps not a big deal, but if we allow C++17 this could be written as:\n\n`if (CAmount n = 0; gArgs.IsArgSet(""-blockmintxfee"") && ParseMoney(gArgs.GetArg(""-blockmintxfee"", """"), n)) {`",https://github.com/bitcoin/bitcoin/pull/13815#discussion_r218089005,218089005,src/miner.cpp
arvidn,2018-09-17T14:24:07Z,"I would expect you don't need this attribute on the function definition, but just the declaration. Do you really need it here too?",https://github.com/bitcoin/bitcoin/pull/13815#discussion_r218089270,218089270,src/rest.cpp
arvidn,2018-09-17T14:26:19Z,"in C++ it's generally preferred to putt functions with internal linkage in the anonymous namespace instead of using `static`, but I see a lot of static, so perhaps that's the style here",https://github.com/bitcoin/bitcoin/pull/13815#discussion_r218090152,218090152,src/script/descriptor.cpp
arvidn,2018-09-17T14:27:31Z,ditto for all other definitions,https://github.com/bitcoin/bitcoin/pull/13815#discussion_r218090667,218090667,src/rest.cpp
practicalswift,2018-09-17T14:31:23Z,@arvidn We allow only C++11 :-),https://github.com/bitcoin/bitcoin/pull/13815#discussion_r218092339,218092339,src/miner.cpp
Empact,2018-09-25T04:40:56Z,"This is misleading because it is actually a static function, there is no declaration, though there is another identically-named function. See #14307",https://github.com/bitcoin/bitcoin/pull/13815#discussion_r220056784,220056784,src/rest.cpp
Empact,2018-09-25T04:49:10Z,These don't return `bool`,https://github.com/bitcoin/bitcoin/pull/13815#discussion_r220057625,220057625,src/utilstrencodings.h
ken2812221,2018-09-25T05:35:18Z,"Wrong file, should be `nodiscard.h`?",https://github.com/bitcoin/bitcoin/pull/13815#discussion_r220062735,220062735,src/Makefile.am
ken2812221,2018-09-25T05:40:44Z,Same here,https://github.com/bitcoin/bitcoin/pull/13815#discussion_r220063415,220063415,src/base58.h
practicalswift,2018-09-25T07:28:40Z,`attributes.h` is correct but that file got lost in the last rebase. Now re-added :-),https://github.com/bitcoin/bitcoin/pull/13815#discussion_r220083730,220083730,src/Makefile.am
practicalswift,2018-09-25T07:28:45Z,`attributes.h` is correct but that file got lost in the last rebase. Now re-added :-),https://github.com/bitcoin/bitcoin/pull/13815#discussion_r220083766,220083766,src/base58.h
ken2812221,2018-09-25T07:35:11Z,Seems `attributes.h` is as same as `nodiscard.h` now,https://github.com/bitcoin/bitcoin/pull/13815#discussion_r220085328,220085328,src/base58.h
practicalswift,2018-09-25T07:45:13Z,`nodiscard.h` now removed :-),https://github.com/bitcoin/bitcoin/pull/13815#discussion_r220087856,220087856,src/base58.h
practicalswift,2018-10-07T12:16:41Z,"Yes, going with `static` here to keep the number of lines touched lines to a minimum.",https://github.com/bitcoin/bitcoin/pull/13815#discussion_r223211047,223211047,src/script/descriptor.cpp
practicalswift,2018-10-09T10:27:03Z,"Oh, turns out `ParseKeyPath(…)` is already in the anonymous namespace. Thus making `static` redundant. Now removed. Thanks for the nit @arvidn!",https://github.com/bitcoin/bitcoin/pull/13815#discussion_r223641899,223641899,src/script/descriptor.cpp
ken2812221,2018-10-09T10:53:11Z,"This solution might be too complex, but it can get rid of annoying MSVC warnings.\n```cpp\n#if defined(__has_cpp_attribute)\n#  if __has_cpp_attribute(nodiscard)\n#    define NODISCARD [[nodiscard]]\n#  endif\n#endif\n#ifndef NODISCARD\n#  if defined(_MSC_VER) && _MSC_VER >= 1700\n#    define NODISCARD _Check_return_\n#  else\n#    define NODISCARD __attribute__((warn_unused_result))\n",https://github.com/bitcoin/bitcoin/pull/13815#discussion_r223651918,223651918,src/attributes.h
practicalswift,2018-10-11T10:19:36Z,Fixed!,https://github.com/bitcoin/bitcoin/pull/13815#discussion_r224393788,224393788,src/attributes.h
