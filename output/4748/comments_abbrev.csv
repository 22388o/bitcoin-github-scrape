theuni,2014-08-21T19:03:35Z,"Looks great, I'm verifying the c/p now. Several dependencies on boost could be dropped, I assume you're leaving that for a follow-up?\n",https://github.com/bitcoin/bitcoin/pull/4748#issuecomment-52966614,52966614,
theuni,2014-08-21T19:38:40Z,"Verfied the code movement with c/p, all is clean with 2 exceptions. I'm only mentioning these for the sake of being thorough, I assume they're harmless.\n\nGetTimeMicros and MilliSleep have moved from inline->non-inline. I have no clue if they actually ended up being inlined for real when compiled before, but if so, that may mean a functional change here due to the timing/precision involved.\n\nTh",https://github.com/bitcoin/bitcoin/pull/4748#issuecomment-52971120,52971120,
laanwj,2014-08-22T06:05:32Z,If you see any further dependencies on boost - especially includes in headers - that can be removed let me know. This has the overall effect of including less boost headers per compilation unit which means faster compile times.\n\nAnd indeed: `GetTimeMillis/Micros` are no longer inline because they pull in a compile-time dependency on boost::posix_time. Having them implemented in utiltime.cpp mean,https://github.com/bitcoin/bitcoin/pull/4748#issuecomment-53026314,53026314,
laanwj,2014-08-22T07:43:58Z,"PASSED! Hah, take that @BitcoinPullTester (for some reason the pulltester environment requires some more explicit #includes of boost/thread.hpp, so had to add those one by one, sorry for the spam)\n",https://github.com/bitcoin/bitcoin/pull/4748#issuecomment-53032305,53032305,
theuni,2014-08-22T15:58:42Z,"@laanwj re: inlines, sounds good.\n\nAs for the boost deps, I'm not sure if there are others, but I noticed this one right away in utilstring.cpp\n\n```\nbool IsHex(const string& str)\n{\n BOOST_FOREACH(char c, str)\n {\n if (HexDigit(c) < 0)\n```\n\n ->\n\n```\nbool IsHex(const string& str)\n{\n for(std::string::const_iterator c(str.begin()); c != str.end(); ++c)\n {\n if (HexDigit(*c) < 0)\n```\",https://github.com/bitcoin/bitcoin/pull/4748#issuecomment-53079167,53079167,
laanwj,2014-08-23T06:37:46Z,"@theuni I thought about that, although I like keeping FOREACH, so that they can be easily replaced when the time for c++11 comes. `boost/foreach.hpp` is header-only.\n",https://github.com/bitcoin/bitcoin/pull/4748#issuecomment-53144479,53144479,
TheBlueMatt,2014-08-23T22:34:41Z,"I havent verified the c/p yet (will do that after squash before merge), but you've definitely got my conceptual ACK. I might consider changing utilmoney to uilmoneystr or just moneystr, utilstring to utilstrencodings or something and splitting the new util up further into something like arguments/env and logging (but that may be better in a separate pull because some of it isnt clear).\n",https://github.com/bitcoin/bitcoin/pull/4748#issuecomment-53168696,53168696,
sipa,2014-08-24T23:28:23Z,Untested ACK; I didn't verify it to be move-only.\n,https://github.com/bitcoin/bitcoin/pull/4748#issuecomment-53213213,53213213,
laanwj,2014-08-25T07:41:28Z,@TheBlueMatt I'm not going to do any further splitting in this pull. Those renames sound fine to me though.\n,https://github.com/bitcoin/bitcoin/pull/4748#issuecomment-53235985,53235985,
TheBlueMatt,2014-08-25T10:08:41Z,ut (but verified cp) ACK\n,https://github.com/bitcoin/bitcoin/pull/4748#issuecomment-53247684,53247684,
jgarzik,2014-08-25T19:38:14Z,"ut ACK\n\n""utilstrencodings"" is a lame name.  utilstrcode or strutil ?\n",https://github.com/bitcoin/bitcoin/pull/4748#issuecomment-53316483,53316483,
sipa,2014-08-25T20:25:13Z,"Untested ACK, but verified move-only.\n\nI will refrain from joining the filename bikeshedding.\n",https://github.com/bitcoin/bitcoin/pull/4748#issuecomment-53324190,53324190,
laanwj,2014-08-26T06:51:05Z,"@jgarzik It was just utilstring, then I renamed it after @TheBlueMatt complained about the name once already. I won't keep renaming them. Go fight it out with him first..\n",https://github.com/bitcoin/bitcoin/pull/4748#issuecomment-53381930,53381930,
TheBlueMatt,2014-08-26T07:30:13Z,"@jgarzik now its bikeshedding, I dont care either way, it was just a suggestion.\n",https://github.com/bitcoin/bitcoin/pull/4748#issuecomment-53384787,53384787,
BitcoinPullTester,2014-08-26T11:39:39Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/p4748_ad49c256c33bfe4088fd3c7ecb7d28cb81a8fc70/ for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-te",https://github.com/bitcoin/bitcoin/pull/4748#issuecomment-53407324,53407324,
sipa,2014-08-26T14:51:42Z,"Merging, as this will likely be outdated soon otherwise.\n\nFile renames can easily be done later if necessary.\n",https://github.com/bitcoin/bitcoin/pull/4748#issuecomment-53432949,53432949,
sipa,2014-08-24T23:12:49Z,2x version.h?\n,https://github.com/bitcoin/bitcoin/pull/4748#discussion_r16638666,16638666,src/rpcprotocol.cpp
