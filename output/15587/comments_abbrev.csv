DrahtBot,2019-03-13T06:27:39Z,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#15010](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15010.html) ([wallet] Fix getbalance with minconf by jne",https://github.com/bitcoin/bitcoin/pull/15587#issuecomment-472296643,472296643,
luke-jr,2019-03-13T10:07:34Z,`GetLegacyBalance` is the only one that returns the *correct* values... The newer stuff is still broken.,https://github.com/bitcoin/bitcoin/pull/15587#issuecomment-472358439,472358439,
MarcoFalke,2019-03-13T12:59:21Z,A negative balance can clearly not be correct,https://github.com/bitcoin/bitcoin/pull/15587#issuecomment-472411496,472411496,
practicalswift,2019-03-13T15:39:37Z,"@MarcoFalke This PR looks a bit unfinished: the calculated `totalAmount` is never used after this change?\n\nCan you describe the code path that will be taken that makes the `GetLegacyBalance` call technically redundant?",https://github.com/bitcoin/bitcoin/pull/15587#issuecomment-472477334,472477334,
luke-jr,2019-03-13T16:09:46Z,"Negative balances can indeed be correct. Receives are only counted once they reach a certain confirmation level. But sends (including ones that use unconfirmed inputs) are always counted. So if you receive 50 BTC, and send 40 BTC, until the 50 BTC confirms, you have a balance of -40 BTC.",https://github.com/bitcoin/bitcoin/pull/15587#issuecomment-472491055,472491055,
MarcoFalke,2019-03-13T17:11:03Z,"> Can you describe the code path that will be taken that makes the GetLegacyBalance call technically redundant?\n\nIt is practically redundant in that it may fail in cases where we'd later create the transaction because we have sufficient balance and it may not fail in cases where we are unable to create a transaction due to insufficient balance.\n\nSo the check is at best confusing. Definitel",https://github.com/bitcoin/bitcoin/pull/15587#issuecomment-472517870,472517870,
practicalswift,2019-03-13T22:14:51Z,"@MarcoFalke \n\nThe PR seems unfinished:\n\nThe `minconf` API argument passed by the user is being ignored after your change:\n\n```\n{""minconf"", RPCArg::Type::NUM, /* default */ ""1"", \n ""Only use the balance confirmed at least this many times.""},\n```\n\nDrop that argument?\n\nAlso `totalAmount` is calculated but not used.\n\nTBH these kind of things should really be detected autom",https://github.com/bitcoin/bitcoin/pull/15587#issuecomment-472627152,472627152,
MarcoFalke,2019-03-13T22:35:49Z,"Going to reopen later, maybe",https://github.com/bitcoin/bitcoin/pull/15587#issuecomment-472633098,472633098,
practicalswift,2019-03-13T23:05:30Z,@MarcoFalke What was the egg (ðŸ¥š) + hash you posted initially about? :-),https://github.com/bitcoin/bitcoin/pull/15587#issuecomment-472640473,472640473,
jnewbery,2019-03-18T19:00:04Z,Concept ACK,https://github.com/bitcoin/bitcoin/pull/15587#issuecomment-474056590,474056590,
