[
  {
    "sha": "29c07196d0b8228bacb5746f136b62ffa3586c7b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyOWMwNzE5NmQwYjgyMjhiYWNiNTc0NmYxMzZiNjJmZmEzNTg2Yzdi",
    "commit": {
      "author": {
        "name": "shaolinfry",
        "email": "shaolinfry@protonmail.ch",
        "date": "2017-05-05T03:21:34Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2017-05-30T17:21:51Z"
      },
      "message": "Rename -bip9params to -vbparams",
      "tree": {
        "sha": "f71ef04738822a8ef28a01a7c39c94dfcd9de820",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f71ef04738822a8ef28a01a7c39c94dfcd9de820"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/29c07196d0b8228bacb5746f136b62ffa3586c7b",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2\n\niQIcBAABCAAGBQJZLaovAAoJEIhmwY6hyUSinpAP/i26bfQzOUhyniw8qRndapdJ\nR51+2ZblRlfqyWO8IKu6dN4p9H0kLyerTB5kbrr/HfFXsHquArarVju9Ccy176cT\nvzr360qXil3sweJvX6gYt+7ppanLlxG9Y1ho6t18uKf6xw/ToBUi50G7LEEtywTU\nSUWJ+yB76WuNSJrWqmF7IY6CGtNHzvE+eol82Nf7iURsE1urQXaUM0VsUeeTSIEz\no4JzT6hhK/XrgVfzntoLBQVCKT54DtWtHUiY6oe9Flc5FomN9KAD/BHOujKJ810q\nfoyz9r8U2D84xWrTlzV+noGv5x9pzQQ7z1mfIORyFPjpPJE3gpg9xIzhq0NrTV2h\nbitPUsmnClkhb+lQYsJ4eYEvjDf3iYHGI0niL5UDubOjFM/qxyJg9owhNm28lHiO\naxwxMTCSMJnA5k1wkGNCTFUkLpBctPMo0kcjbd0+duBkV7bBhsJLtNUGCzfOqpNk\nWVmgfLMAbxTEwNgI5VcQ8alv7UFD2pAnwl2qZa0txTjlG4GNS3sAIcZilKQ9C041\n64pqZ5gTV+KU90HRK/uvlqblwrcCp3Vb8KOo3ob6Cra17du3WVCySZi50rIHayiW\nQrXe/0HJDudIs1l+Z+CbXdUnwTnYrmQhpn8P8waYf6WZnTrObzYUmytMThxzF+lP\n/lJnrerQeg4scQigEUb6\n=RjWy\n-----END PGP SIGNATURE-----",
        "payload": "tree f71ef04738822a8ef28a01a7c39c94dfcd9de820\nparent 4314544d46e8e46c3c9da60f1d18297f52f58418\nauthor shaolinfry <shaolinfry@protonmail.ch> 1493954494 +0000\ncommitter Jorge Tim\u00f3n <jtimon@jtimon.cc> 1496164911 +0200\n\nRename -bip9params to -vbparams\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/29c07196d0b8228bacb5746f136b62ffa3586c7b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/29c07196d0b8228bacb5746f136b62ffa3586c7b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/29c07196d0b8228bacb5746f136b62ffa3586c7b/comments",
    "author": {
      "login": "shaolinfry",
      "id": 19836615,
      "node_id": "MDQ6VXNlcjE5ODM2NjE1",
      "avatar_url": "https://avatars.githubusercontent.com/u/19836615?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shaolinfry",
      "html_url": "https://github.com/shaolinfry",
      "followers_url": "https://api.github.com/users/shaolinfry/followers",
      "following_url": "https://api.github.com/users/shaolinfry/following{/other_user}",
      "gists_url": "https://api.github.com/users/shaolinfry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shaolinfry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shaolinfry/subscriptions",
      "organizations_url": "https://api.github.com/users/shaolinfry/orgs",
      "repos_url": "https://api.github.com/users/shaolinfry/repos",
      "events_url": "https://api.github.com/users/shaolinfry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shaolinfry/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4314544d46e8e46c3c9da60f1d18297f52f58418",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4314544d46e8e46c3c9da60f1d18297f52f58418",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4314544d46e8e46c3c9da60f1d18297f52f58418"
      }
    ],
    "stats": {
      "total": 33,
      "additions": 16,
      "deletions": 17
    },
    "files": [
      {
        "sha": "04a2f680fa6d76814731b6a7ec2a37ecd7fdb2c5",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 4,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/29c07196d0b8228bacb5746f136b62ffa3586c7b/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/29c07196d0b8228bacb5746f136b62ffa3586c7b/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=29c07196d0b8228bacb5746f136b62ffa3586c7b",
        "patch": "@@ -55,7 +55,7 @@ static CBlock CreateGenesisBlock(uint32_t nTime, uint32_t nNonce, uint32_t nBits\n     return CreateGenesisBlock(pszTimestamp, genesisOutputScript, nTime, nNonce, nBits, nVersion, genesisReward);\n }\n \n-void CChainParams::UpdateBIP9Parameters(Consensus::DeploymentPos d, int64_t nStartTime, int64_t nTimeout)\n+void CChainParams::UpdateVersionBitsParameters(Consensus::DeploymentPos d, int64_t nStartTime, int64_t nTimeout)\n {\n     consensus.vDeployments[d].nStartTime = nStartTime;\n     consensus.vDeployments[d].nTimeout = nTimeout;\n@@ -356,8 +356,7 @@ void SelectParams(const std::string& network)\n     globalChainParams = CreateChainParams(network);\n }\n \n-void UpdateBIP9Parameters(Consensus::DeploymentPos d, int64_t nStartTime, int64_t nTimeout)\n+void UpdateVersionBitsParameters(Consensus::DeploymentPos d, int64_t nStartTime, int64_t nTimeout)\n {\n-    globalChainParams->UpdateBIP9Parameters(d, nStartTime, nTimeout);\n+    globalChainParams->UpdateVersionBitsParameters(d, nStartTime, nTimeout);\n }\n- "
      },
      {
        "sha": "a2f136171bd33384f11ef65d3805d2976ebc084f",
        "filename": "src/chainparams.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/29c07196d0b8228bacb5746f136b62ffa3586c7b/src/chainparams.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/29c07196d0b8228bacb5746f136b62ffa3586c7b/src/chainparams.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.h?ref=29c07196d0b8228bacb5746f136b62ffa3586c7b",
        "patch": "@@ -76,7 +76,7 @@ class CChainParams\n     const std::vector<SeedSpec6>& FixedSeeds() const { return vFixedSeeds; }\n     const CCheckpointData& Checkpoints() const { return checkpointData; }\n     const ChainTxData& TxData() const { return chainTxData; }\n-    void UpdateBIP9Parameters(Consensus::DeploymentPos d, int64_t nStartTime, int64_t nTimeout);\n+    void UpdateVersionBitsParameters(Consensus::DeploymentPos d, int64_t nStartTime, int64_t nTimeout);\n protected:\n     CChainParams() {}\n \n@@ -116,8 +116,8 @@ const CChainParams &Params();\n void SelectParams(const std::string& chain);\n \n /**\n- * Allows modifying the BIP9 regtest parameters.\n+ * Allows modifying the Version Bits regtest parameters.\n  */\n-void UpdateBIP9Parameters(Consensus::DeploymentPos d, int64_t nStartTime, int64_t nTimeout);\n+void UpdateVersionBitsParameters(Consensus::DeploymentPos d, int64_t nStartTime, int64_t nTimeout);\n \n #endif // BITCOIN_CHAINPARAMS_H"
      },
      {
        "sha": "4d9a016674327ab803e6032a57d2c66f600382c3",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/29c07196d0b8228bacb5746f136b62ffa3586c7b/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/29c07196d0b8228bacb5746f136b62ffa3586c7b/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=29c07196d0b8228bacb5746f136b62ffa3586c7b",
        "patch": "@@ -449,7 +449,7 @@ std::string HelpMessage(HelpMessageMode mode)\n         strUsage += HelpMessageOpt(\"-limitancestorsize=<n>\", strprintf(\"Do not accept transactions whose size with all in-mempool ancestors exceeds <n> kilobytes (default: %u)\", DEFAULT_ANCESTOR_SIZE_LIMIT));\n         strUsage += HelpMessageOpt(\"-limitdescendantcount=<n>\", strprintf(\"Do not accept transactions if any ancestor would have <n> or more in-mempool descendants (default: %u)\", DEFAULT_DESCENDANT_LIMIT));\n         strUsage += HelpMessageOpt(\"-limitdescendantsize=<n>\", strprintf(\"Do not accept transactions if any ancestor would have more than <n> kilobytes of in-mempool descendants (default: %u).\", DEFAULT_DESCENDANT_SIZE_LIMIT));\n-        strUsage += HelpMessageOpt(\"-bip9params=deployment:start:end\", \"Use given start/end times for specified BIP9 deployment (regtest-only)\");\n+        strUsage += HelpMessageOpt(\"-vbparams=deployment:start:end\", \"Use given start/end times for specified version bits deployment (regtest-only)\");\n     }\n     strUsage += HelpMessageOpt(\"-debug=<category>\", strprintf(_(\"Output debugging information (default: %u, supplying <category> is optional)\"), 0) + \". \" +\n         _(\"If <category> is not supplied or if <category> = 1, output all debugging information.\") + \" \" + _(\"<category> can be:\") + \" \" + ListLogCategories() + \".\");\n@@ -1104,16 +1104,16 @@ bool AppInitParameterInteraction()\n         fEnableReplacement = (std::find(vstrReplacementModes.begin(), vstrReplacementModes.end(), \"fee\") != vstrReplacementModes.end());\n     }\n \n-    if (gArgs.IsArgSet(\"-bip9params\")) {\n-        // Allow overriding BIP9 parameters for testing\n+    if (gArgs.IsArgSet(\"-vbparams\")) {\n+        // Allow overriding version bits parameters for testing\n         if (!chainparams.MineBlocksOnDemand()) {\n-            return InitError(\"BIP9 parameters may only be overridden on regtest.\");\n+            return InitError(\"Version bits parameters may only be overridden on regtest.\");\n         }\n-        for (const std::string& strDeployment : gArgs.GetArgs(\"-bip9params\")) {\n+        for (const std::string& strDeployment : gArgs.GetArgs(\"-vbparams\")) {\n             std::vector<std::string> vDeploymentParams;\n             boost::split(vDeploymentParams, strDeployment, boost::is_any_of(\":\"));\n             if (vDeploymentParams.size() != 3) {\n-                return InitError(\"BIP9 parameters malformed, expecting deployment:start:end\");\n+                return InitError(\"Version bits parameters malformed, expecting deployment:start:end\");\n             }\n             int64_t nStartTime, nTimeout;\n             if (!ParseInt64(vDeploymentParams[1], &nStartTime)) {\n@@ -1126,9 +1126,9 @@ bool AppInitParameterInteraction()\n             for (int j=0; j<(int)Consensus::MAX_VERSION_BITS_DEPLOYMENTS; ++j)\n             {\n                 if (vDeploymentParams[0].compare(VersionBitsDeploymentInfo[j].name) == 0) {\n-                    UpdateBIP9Parameters(Consensus::DeploymentPos(j), nStartTime, nTimeout);\n+                    UpdateVersionBitsParameters(Consensus::DeploymentPos(j), nStartTime, nTimeout);\n                     found = true;\n-                    LogPrintf(\"Setting BIP9 activation parameters for %s to start=%ld, timeout=%ld\\n\", vDeploymentParams[0], nStartTime, nTimeout);\n+                    LogPrintf(\"Setting version bits activation parameters for %s to start=%ld, timeout=%ld\\n\", vDeploymentParams[0], nStartTime, nTimeout);\n                     break;\n                 }\n             }"
      },
      {
        "sha": "ff76e49fba78569446087e9f485f5769b1da635d",
        "filename": "test/functional/p2p-compactblocks.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/29c07196d0b8228bacb5746f136b62ffa3586c7b/test/functional/p2p-compactblocks.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/29c07196d0b8228bacb5746f136b62ffa3586c7b/test/functional/p2p-compactblocks.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p-compactblocks.py?ref=29c07196d0b8228bacb5746f136b62ffa3586c7b",
        "patch": "@@ -98,7 +98,7 @@ def __init__(self):\n         self.setup_clean_chain = True\n         # Node0 = pre-segwit, node1 = segwit-aware\n         self.num_nodes = 2\n-        self.extra_args = [[\"-bip9params=segwit:0:0\"], [\"-txindex\"]]\n+        self.extra_args = [[\"-vbparams=segwit:0:0\"], [\"-txindex\"]]\n         self.utxos = []\n \n     def build_block_on_tip(self, node, segwit=False):"
      },
      {
        "sha": "4c8d5ed8d508814722977c790853926f6a311afd",
        "filename": "test/functional/p2p-segwit.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/29c07196d0b8228bacb5746f136b62ffa3586c7b/test/functional/p2p-segwit.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/29c07196d0b8228bacb5746f136b62ffa3586c7b/test/functional/p2p-segwit.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p-segwit.py?ref=29c07196d0b8228bacb5746f136b62ffa3586c7b",
        "patch": "@@ -114,7 +114,7 @@ def __init__(self):\n         super().__init__()\n         self.setup_clean_chain = True\n         self.num_nodes = 3\n-        self.extra_args = [[\"-whitelist=127.0.0.1\"], [\"-whitelist=127.0.0.1\", \"-acceptnonstdtxn=0\"], [\"-whitelist=127.0.0.1\", \"-bip9params=segwit:0:0\"]]\n+        self.extra_args = [[\"-whitelist=127.0.0.1\"], [\"-whitelist=127.0.0.1\", \"-acceptnonstdtxn=0\"], [\"-whitelist=127.0.0.1\", \"-vbparams=segwit:0:0\"]]\n \n     def setup_network(self):\n         self.setup_nodes()"
      }
    ]
  },
  {
    "sha": "b463bc9215192e6fd93336fdca51778e9aa23d64",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiNDYzYmM5MjE1MTkyZTZmZDkzMzM2ZmRjYTUxNzc4ZTlhYTIzZDY0",
    "commit": {
      "author": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2017-05-26T00:26:52Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2017-05-30T17:21:52Z"
      },
      "message": "scripted-diff: s/BIP9DeploymentInfo/VBDeploymentInfo/\n\n-BEGIN VERIFY SCRIPT-\nsed -i 's/BIP9DeploymentInfo/VBDeploymentInfo/' ./src/*.h ./src/*.cpp ./src/*/*.h ./src/*/*.cpp ./src/*/*/*.h ./src/*/*/*.cpp ;\n-END VERIFY SCRIPT-",
      "tree": {
        "sha": "c885cc21966855673bed4167205c62b1efd3eb3e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c885cc21966855673bed4167205c62b1efd3eb3e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b463bc9215192e6fd93336fdca51778e9aa23d64",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2\n\niQIcBAABCAAGBQJZLaowAAoJEIhmwY6hyUSirH8QAJsPSO9J8ZpmEmEmBsM7922Y\nV2sVc1JMVavKCshrI9ktXKgGulaTXULLuRhWhVzmD/4vuHjJv8eQsBfBt1ltv/wO\nJxX/O32hSx8Pr8ilQM6Ocl1Pda7WcqpKxPKfMnv4KHfn8gpcWgSGsnNDkJqJUE8i\nDUIozIrTGDPUbJoESe+8yZIgceUHqzSgWEdL0JPyzq0SItxDG0Enqp5vMa/X0Jpr\nfTHiMRvLCYilnNzD+Gj9m+EUGAB6CFyihsA3gTB+UOSgAMWo8ex56E4q0/LsuUI2\n1dfZs7Xxk0UXNe7+uHEH6UCjepV3Xp7fj8Vvt4Vy44Zt8iISHJBMMpMSUKh6WCnx\nux5vKQj8Jr6i8a0hYt0n/BxbnAbk1uHRqmkCPwel0x6mEkFD1GOsGJZvgVfPxVop\nhkRJqlcU8jc8aK3lHn75swLMO3/Q6c0lAsE0AlAiVb54UyRcd5uV7VJRS82l9z8X\nZC+Z9MRtpGlD0fQI5gGcRlSM/npGEkIXFwg3MmtvBBGjj/2zOWoSNTPaC8LRpZoa\nrYqNsQ3HxZE/uFdJqH6Zk2KAnc3F5dy3LuZjoA1skkef0S0XR8Pvwqw7ApNFpVqW\nu0k6ww+p5ARCRZfSa+RGF4Kt2TNr+BUtx6DVil3XDyynoapkvg4VbmEVKxH5r+DI\nw7lNLZH/yjRBUC2L5Xny\n=CKnf\n-----END PGP SIGNATURE-----",
        "payload": "tree c885cc21966855673bed4167205c62b1efd3eb3e\nparent 29c07196d0b8228bacb5746f136b62ffa3586c7b\nauthor Jorge Tim\u00f3n <jtimon@jtimon.cc> 1495758412 +0200\ncommitter Jorge Tim\u00f3n <jtimon@jtimon.cc> 1496164912 +0200\n\nscripted-diff: s/BIP9DeploymentInfo/VBDeploymentInfo/\n\n-BEGIN VERIFY SCRIPT-\nsed -i 's/BIP9DeploymentInfo/VBDeploymentInfo/' ./src/*.h ./src/*.cpp ./src/*/*.h ./src/*/*.cpp ./src/*/*/*.h ./src/*/*/*.cpp ;\n-END VERIFY SCRIPT-\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b463bc9215192e6fd93336fdca51778e9aa23d64",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b463bc9215192e6fd93336fdca51778e9aa23d64",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b463bc9215192e6fd93336fdca51778e9aa23d64/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "29c07196d0b8228bacb5746f136b62ffa3586c7b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/29c07196d0b8228bacb5746f136b62ffa3586c7b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/29c07196d0b8228bacb5746f136b62ffa3586c7b"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 7,
      "deletions": 7
    },
    "files": [
      {
        "sha": "ebc206943bb24ffcb27f5391f3dba0b6d202ba2c",
        "filename": "src/rpc/mining.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b463bc9215192e6fd93336fdca51778e9aa23d64/src/rpc/mining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b463bc9215192e6fd93336fdca51778e9aa23d64/src/rpc/mining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/mining.cpp?ref=b463bc9215192e6fd93336fdca51778e9aa23d64",
        "patch": "@@ -303,7 +303,7 @@ static UniValue BIP22ValidationResult(const CValidationState& state)\n }\n \n std::string gbt_vb_name(const Consensus::DeploymentPos pos) {\n-    const struct BIP9DeploymentInfo& vbinfo = VersionBitsDeploymentInfo[pos];\n+    const struct VBDeploymentInfo& vbinfo = VersionBitsDeploymentInfo[pos];\n     std::string s = vbinfo.name;\n     if (!vbinfo.gbt_force) {\n         s.insert(s.begin(), '!');\n@@ -515,7 +515,7 @@ UniValue getblocktemplate(const JSONRPCRequest& request)\n         // TODO: Maybe recheck connections/IBD and (if something wrong) send an expires-immediately template to stop miners?\n     }\n \n-    const struct BIP9DeploymentInfo& segwit_info = VersionBitsDeploymentInfo[Consensus::DEPLOYMENT_SEGWIT];\n+    const struct VBDeploymentInfo& segwit_info = VersionBitsDeploymentInfo[Consensus::DEPLOYMENT_SEGWIT];\n     // If the caller is indicating segwit support, then allow CreateNewBlock()\n     // to select witness transactions, after segwit activates (otherwise\n     // don't).\n@@ -629,7 +629,7 @@ UniValue getblocktemplate(const JSONRPCRequest& request)\n                 // FALL THROUGH to get vbavailable set...\n             case THRESHOLD_STARTED:\n             {\n-                const struct BIP9DeploymentInfo& vbinfo = VersionBitsDeploymentInfo[pos];\n+                const struct VBDeploymentInfo& vbinfo = VersionBitsDeploymentInfo[pos];\n                 vbavailable.push_back(Pair(gbt_vb_name(pos), consensusParams.vDeployments[pos].bit));\n                 if (setClientRules.find(vbinfo.name) == setClientRules.end()) {\n                     if (!vbinfo.gbt_force) {\n@@ -642,7 +642,7 @@ UniValue getblocktemplate(const JSONRPCRequest& request)\n             case THRESHOLD_ACTIVE:\n             {\n                 // Add to rules only\n-                const struct BIP9DeploymentInfo& vbinfo = VersionBitsDeploymentInfo[pos];\n+                const struct VBDeploymentInfo& vbinfo = VersionBitsDeploymentInfo[pos];\n                 aRules.push_back(gbt_vb_name(pos));\n                 if (setClientRules.find(vbinfo.name) == setClientRules.end()) {\n                     // Not supported by the client; make sure it's safe to proceed"
      },
      {
        "sha": "4bb352f23c9300bd92af253cab4f9ada08a1d5c4",
        "filename": "src/versionbits.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b463bc9215192e6fd93336fdca51778e9aa23d64/src/versionbits.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b463bc9215192e6fd93336fdca51778e9aa23d64/src/versionbits.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/versionbits.cpp?ref=b463bc9215192e6fd93336fdca51778e9aa23d64",
        "patch": "@@ -5,7 +5,7 @@\n #include \"versionbits.h\"\n #include \"consensus/params.h\"\n \n-const struct BIP9DeploymentInfo VersionBitsDeploymentInfo[Consensus::MAX_VERSION_BITS_DEPLOYMENTS] = {\n+const struct VBDeploymentInfo VersionBitsDeploymentInfo[Consensus::MAX_VERSION_BITS_DEPLOYMENTS] = {\n     {\n         /*.name =*/ \"testdummy\",\n         /*.gbt_force =*/ true,"
      },
      {
        "sha": "f4dfb71515adf4df7f7390c4580435813af8c7d6",
        "filename": "src/versionbits.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b463bc9215192e6fd93336fdca51778e9aa23d64/src/versionbits.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b463bc9215192e6fd93336fdca51778e9aa23d64/src/versionbits.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/versionbits.h?ref=b463bc9215192e6fd93336fdca51778e9aa23d64",
        "patch": "@@ -30,7 +30,7 @@ enum ThresholdState {\n // will either be NULL or a block with (height + 1) % Period() == 0.\n typedef std::map<const CBlockIndex*, ThresholdState> ThresholdConditionCache;\n \n-struct BIP9DeploymentInfo {\n+struct VBDeploymentInfo {\n     /** Deployment name */\n     const char *name;\n     /** Whether GBT clients can safely ignore this rule in simplified usage */\n@@ -45,7 +45,7 @@ struct BIP9Stats {\n     bool possible;\n };\n \n-extern const struct BIP9DeploymentInfo VersionBitsDeploymentInfo[];\n+extern const struct VBDeploymentInfo VersionBitsDeploymentInfo[];\n \n /**\n  * Abstract class that implements BIP9-style threshold logic, and caches results."
      }
    ]
  }
]