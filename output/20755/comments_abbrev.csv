amitiuttarwar,2020-12-23 18:35:08,"These fields were deprecated in #19469, #19770, #19725. @jonatack & @luke-jr, if you get the chance, would appreciate your review :) ",https://github.com/bitcoin/bitcoin/pull/20755#issuecomment-750423193,750423193,
amitiuttarwar,2020-12-23 18:41:11,Updated to include PR # in release notes ,https://github.com/bitcoin/bitcoin/pull/20755#issuecomment-750425081,750425081,
amitiuttarwar,2020-12-23 21:37:23,"~I believe we can get rid of the `m_legacyWhitelisted` field on `CNode`, but am still trying to build confidence.~\n\n~There is a code comment: `//If this flag is present, the user probably expect that RPC and QT report it as whitelisted (backward compatibility)`. In this PR I'm removing the RPC endpoint, but I'm unable to find anywhere in QT that reveals this field. I'm unfamiliar with QT, mayb",https://github.com/bitcoin/bitcoin/pull/20755#issuecomment-750483407,750483407,
DrahtBot,2020-12-23 21:40:39,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #20721 (Net: Move ping data to net_processing by jnewbery)\n* #20685 (Add I2P support using I2P SAM by vasild)\n* #20286 (",https://github.com/bitcoin/bitcoin/pull/20755#issuecomment-750484253,750484253,
amitiuttarwar,2020-12-24 06:44:31,"I realized this removes the last use of `m_legacyWhitelisted`, so I deleted the field. ",https://github.com/bitcoin/bitcoin/pull/20755#issuecomment-750773253,750773253,
MarcoFalke,2020-12-24 06:49:27,Nice cleanup. Concept ACK,https://github.com/bitcoin/bitcoin/pull/20755#issuecomment-750774756,750774756,
amitiuttarwar,2020-12-26 21:33:11,rebased ,https://github.com/bitcoin/bitcoin/pull/20755#issuecomment-751398221,751398221,
sipa,2020-12-27 05:26:58,utACK 454a4088a87eac5878070b26d13d5574da891877,https://github.com/bitcoin/bitcoin/pull/20755#issuecomment-751428312,751428312,
michaelfolkson,2020-12-29 13:39:08,Looks like no one tested this before merging. Fixed in https://github.com/bitcoin/bitcoin/pull/20791 but as a post mortem should have been tested prior to merging.,https://github.com/bitcoin/bitcoin/pull/20755#issuecomment-752077779,752077779,
MarcoFalke,2020-12-29 14:10:15,"> Looks like no one tested this before merging. Fixed in #20791 but as a post mortem should have been tested prior to merging.\n\nI am not sure what you mean. clang doesn't emit this warning, as explained in https://github.com/bitcoin/bitcoin/pull/20791#issuecomment-751985730. Merging any pull will be impossible if maintainers are required to build with all supported compiler versions on all sup",https://github.com/bitcoin/bitcoin/pull/20755#issuecomment-752088735,752088735,
michaelfolkson,2020-12-29 14:22:06,"This could have been easily caught with a simple manual grep right? For something basic like this someone should do that grep before it is merged? Or am I missing something?\n\nThe above is interesting context though, thanks.",https://github.com/bitcoin/bitcoin/pull/20755#issuecomment-752093882,752093882,
jonatack,2020-12-29 14:35:54,"> Rushing to ""fix"" (silence) them with patches that will break code (https://github.com/bitcoin/bitcoin/pull/20797#discussion_r549701244) is not the way to go. Personally, I prefer correct code over code that is incorrect, but doesn't emit any warnings.\n\nDiligence and vigilance does not mean I am suggesting we rush to break the code to silence the compiler. I'm not interested in blame games, onl",https://github.com/bitcoin/bitcoin/pull/20755#issuecomment-752099482,752099482,
MarcoFalke,2020-12-29 14:44:52,"> This could have been easily caught with a simple manual grep right?\n\nYes, and I assume that either grep or `--function-context` was used to find it in https://github.com/bitcoin/bitcoin/pull/20755#pullrequestreview-558913726.\n\n@jonatack Sorry, didn't want to blame you. It was the most recent example that came to mind. There are many more examples, including many by me. I should have used",https://github.com/bitcoin/bitcoin/pull/20755#issuecomment-752103335,752103335,
jonatack,2020-12-29 14:48:32,Thanks. I think given enough time it happens to everyone anyway. Teamwork makes the dream work.￼￼,https://github.com/bitcoin/bitcoin/pull/20755#issuecomment-752104890,752104890,
jnewbery,2020-12-29 15:08:08,"> Looks like no one tested this before merging. Fixed in #20791 but as a post mortem should have been tested prior to merging.\n\nThis is an entirely unhelpful comment. The 'problem' here is that a variable is now unused and certain compilers warn about it. Unused variables are exactly that - unused - and so have no impact on the logic of the program. In fact, compilers will optimize them out, s",https://github.com/bitcoin/bitcoin/pull/20755#issuecomment-752113131,752113131,
michaelfolkson,2020-12-29 16:31:31,"It seems sloppy to me. Either remove it in the PR or merge it with an instruction that someone should open a new PR to remove it. I don't think it is great hygiene to just leave it hanging in a past comment (but maybe that is just me)\n\nDon't want to belabor the point though (especially when being told it is ""entirely unhelpful"")",https://github.com/bitcoin/bitcoin/pull/20755#issuecomment-752147809,752147809,
jonatack,2020-12-23 21:46:12,"maybe s/no longer supports/no longer returns/\n\nand s/will return manual/returns ""manual""/",https://github.com/bitcoin/bitcoin/pull/20755#discussion_r548266676,548266676,doc/release-notes.md
amitiuttarwar,2020-12-24 06:42:56,"sure, done.",https://github.com/bitcoin/bitcoin/pull/20755#discussion_r548417082,548417082,doc/release-notes.md
jnewbery,2020-12-27 09:05:23,You can get rid of the local variable `legacyWhitelisted` entirely.,https://github.com/bitcoin/bitcoin/pull/20755#discussion_r549086384,549086384,src/net.cpp
