[
  {
    "sha": "537053336fbc1b633e7c99286c3e3492eaca1e9d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1MzcwNTMzMzZmYmMxYjYzM2U3Yzk5Mjg2YzNlMzQ5MmVhY2ExZTlk",
    "commit": {
      "author": {
        "name": "Amiti Uttarwar",
        "email": "amiti@uttarwar.org",
        "date": "2020-12-23T00:44:53Z"
      },
      "committer": {
        "name": "Amiti Uttarwar",
        "email": "amiti@uttarwar.org",
        "date": "2020-12-26T21:30:08Z"
      },
      "message": "[rpc] Remove deprecated \"addnode\" field from getpeerinfo",
      "tree": {
        "sha": "dd7fbe9373a6129088a8143522c0bdcd7862d13a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/dd7fbe9373a6129088a8143522c0bdcd7862d13a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/537053336fbc1b633e7c99286c3e3492eaca1e9d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/537053336fbc1b633e7c99286c3e3492eaca1e9d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/537053336fbc1b633e7c99286c3e3492eaca1e9d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/537053336fbc1b633e7c99286c3e3492eaca1e9d/comments",
    "author": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "02cf20b9f571474c939d18a8b9d6b5d22479a222",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/02cf20b9f571474c939d18a8b9d6b5d22479a222",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/02cf20b9f571474c939d18a8b9d6b5d22479a222"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 0,
      "deletions": 19
    },
    "files": [
      {
        "sha": "f2bcb3226bc92c5768b839b5da32fddc0814c99f",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/537053336fbc1b633e7c99286c3e3492eaca1e9d/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/537053336fbc1b633e7c99286c3e3492eaca1e9d/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=537053336fbc1b633e7c99286c3e3492eaca1e9d",
        "patch": "@@ -587,7 +587,6 @@ void CNode::copyStats(CNodeStats &stats, const std::vector<bool> &m_asmap)\n         X(cleanSubVer);\n     }\n     stats.fInbound = IsInboundConn();\n-    stats.m_manual_connection = IsManualConn();\n     X(m_bip152_highbandwidth_to);\n     X(m_bip152_highbandwidth_from);\n     {"
      },
      {
        "sha": "be9cf742e473ceb7fb5e7952946a23fab14e14db",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/537053336fbc1b633e7c99286c3e3492eaca1e9d/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/537053336fbc1b633e7c99286c3e3492eaca1e9d/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=537053336fbc1b633e7c99286c3e3492eaca1e9d",
        "patch": "@@ -702,7 +702,6 @@ class CNodeStats\n     int nVersion;\n     std::string cleanSubVer;\n     bool fInbound;\n-    bool m_manual_connection;\n     bool m_bip152_highbandwidth_to;\n     bool m_bip152_highbandwidth_from;\n     int m_starting_height;"
      },
      {
        "sha": "66e3202547000318f56ca59b69d3c9105705bb2a",
        "filename": "src/rpc/net.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/537053336fbc1b633e7c99286c3e3492eaca1e9d/src/rpc/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/537053336fbc1b633e7c99286c3e3492eaca1e9d/src/rpc/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/net.cpp?ref=537053336fbc1b633e7c99286c3e3492eaca1e9d",
        "patch": "@@ -128,8 +128,6 @@ static RPCHelpMan getpeerinfo()\n                             {RPCResult::Type::BOOL, \"inbound\", \"Inbound (true) or Outbound (false)\"},\n                             {RPCResult::Type::BOOL, \"bip152_hb_to\", \"Whether we selected peer as (compact blocks) high-bandwidth peer\"},\n                             {RPCResult::Type::BOOL, \"bip152_hb_from\", \"Whether peer selected us as (compact blocks) high-bandwidth peer\"},\n-                            {RPCResult::Type::BOOL, \"addnode\", \"Whether connection was due to addnode/-connect or if it was an automatic/inbound connection\\n\"\n-                                                               \"(DEPRECATED, returned only if the config option -deprecatedrpc=getpeerinfo_addnode is passed)\"},\n                             {RPCResult::Type::STR, \"connection_type\", \"Type of connection: \\n\" + Join(CONNECTION_TYPE_DOC, \",\\n\") + \".\\n\"\n                                                                       \"Please note this output is unlikely to be stable in upcoming releases as we iterate to\\n\"\n                                                                       \"best capture connection behaviors.\"},\n@@ -224,10 +222,6 @@ static RPCHelpMan getpeerinfo()\n         obj.pushKV(\"inbound\", stats.fInbound);\n         obj.pushKV(\"bip152_hb_to\", stats.m_bip152_highbandwidth_to);\n         obj.pushKV(\"bip152_hb_from\", stats.m_bip152_highbandwidth_from);\n-        if (IsDeprecatedRPCEnabled(\"getpeerinfo_addnode\")) {\n-            // addnode is deprecated in v0.21 for removal in v0.22\n-            obj.pushKV(\"addnode\", stats.m_manual_connection);\n-        }\n         if (fStateStats) {\n             if (IsDeprecatedRPCEnabled(\"banscore\")) {\n                 // banscore is deprecated in v0.21 for removal in v0.22"
      },
      {
        "sha": "bde2058464f68915c172ad4ec0450c4d9a59ccb0",
        "filename": "test/functional/rpc_getpeerinfo_deprecation.py",
        "status": "modified",
        "additions": 0,
        "deletions": 11,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/537053336fbc1b633e7c99286c3e3492eaca1e9d/test/functional/rpc_getpeerinfo_deprecation.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/537053336fbc1b633e7c99286c3e3492eaca1e9d/test/functional/rpc_getpeerinfo_deprecation.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_getpeerinfo_deprecation.py?ref=537053336fbc1b633e7c99286c3e3492eaca1e9d",
        "patch": "@@ -14,7 +14,6 @@ def set_test_params(self):\n \n     def run_test(self):\n         self.test_banscore_deprecation()\n-        self.test_addnode_deprecation()\n \n     def test_banscore_deprecation(self):\n         self.log.info(\"Test getpeerinfo by default no longer returns a banscore field\")\n@@ -23,16 +22,6 @@ def test_banscore_deprecation(self):\n         self.log.info(\"Test getpeerinfo returns banscore with -deprecatedrpc=banscore\")\n         assert \"banscore\" in self.nodes[1].getpeerinfo()[0].keys()\n \n-    def test_addnode_deprecation(self):\n-        self.restart_node(1, [\"-deprecatedrpc=getpeerinfo_addnode\"])\n-        self.connect_nodes(0, 1)\n-\n-        self.log.info(\"Test getpeerinfo by default no longer returns an addnode field\")\n-        assert \"addnode\" not in self.nodes[0].getpeerinfo()[0].keys()\n-\n-        self.log.info(\"Test getpeerinfo returns addnode with -deprecatedrpc=addnode\")\n-        assert \"addnode\" in self.nodes[1].getpeerinfo()[0].keys()\n-\n \n if __name__ == \"__main__\":\n     GetpeerinfoDeprecationTest().main()"
      }
    ]
  },
  {
    "sha": "094c3beaa47c909070607e94f2544ed1472ddb17",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowOTRjM2JlYWE0N2M5MDkwNzA2MDdlOTRmMjU0NGVkMTQ3MmRkYjE3",
    "commit": {
      "author": {
        "name": "Amiti Uttarwar",
        "email": "amiti@uttarwar.org",
        "date": "2020-12-23T00:54:18Z"
      },
      "committer": {
        "name": "Amiti Uttarwar",
        "email": "amiti@uttarwar.org",
        "date": "2020-12-26T21:30:08Z"
      },
      "message": "[rpc] Remove deprecated \"banscore\" field from getpeerinfo",
      "tree": {
        "sha": "03dc369769618402b9df163860cb47a99692ef22",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/03dc369769618402b9df163860cb47a99692ef22"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/094c3beaa47c909070607e94f2544ed1472ddb17",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/094c3beaa47c909070607e94f2544ed1472ddb17",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/094c3beaa47c909070607e94f2544ed1472ddb17",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/094c3beaa47c909070607e94f2544ed1472ddb17/comments",
    "author": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "537053336fbc1b633e7c99286c3e3492eaca1e9d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/537053336fbc1b633e7c99286c3e3492eaca1e9d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/537053336fbc1b633e7c99286c3e3492eaca1e9d"
      }
    ],
    "stats": {
      "total": 35,
      "additions": 0,
      "deletions": 35
    },
    "files": [
      {
        "sha": "c5ea2dc85f4829cd9d21fee6c23290dfd0a81335",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/094c3beaa47c909070607e94f2544ed1472ddb17/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/094c3beaa47c909070607e94f2544ed1472ddb17/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=094c3beaa47c909070607e94f2544ed1472ddb17",
        "patch": "@@ -874,7 +874,6 @@ bool PeerManager::GetNodeStateStats(NodeId nodeid, CNodeStateStats &stats) {\n \n     PeerRef peer = GetPeerRef(nodeid);\n     if (peer == nullptr) return false;\n-    stats.m_misbehavior_score = WITH_LOCK(peer->m_misbehavior_mutex, return peer->m_misbehavior_score);\n     stats.m_starting_height = peer->m_starting_height;\n \n     return true;"
      },
      {
        "sha": "b8caa4369c77acac44a2430e12c7d247b655d119",
        "filename": "src/net_processing.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/094c3beaa47c909070607e94f2544ed1472ddb17/src/net_processing.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/094c3beaa47c909070607e94f2544ed1472ddb17/src/net_processing.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.h?ref=094c3beaa47c909070607e94f2544ed1472ddb17",
        "patch": "@@ -33,7 +33,6 @@ static const bool DEFAULT_PEERBLOCKFILTERS = false;\n static const int DISCOURAGEMENT_THRESHOLD{100};\n \n struct CNodeStateStats {\n-    int m_misbehavior_score = 0;\n     int nSyncHeight = -1;\n     int nCommonHeight = -1;\n     int m_starting_height = -1;"
      },
      {
        "sha": "7b23e8cfdc923e3e4209c2be137982d376b8c0d3",
        "filename": "src/rpc/net.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/094c3beaa47c909070607e94f2544ed1472ddb17/src/rpc/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/094c3beaa47c909070607e94f2544ed1472ddb17/src/rpc/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/net.cpp?ref=094c3beaa47c909070607e94f2544ed1472ddb17",
        "patch": "@@ -131,7 +131,6 @@ static RPCHelpMan getpeerinfo()\n                             {RPCResult::Type::STR, \"connection_type\", \"Type of connection: \\n\" + Join(CONNECTION_TYPE_DOC, \",\\n\") + \".\\n\"\n                                                                       \"Please note this output is unlikely to be stable in upcoming releases as we iterate to\\n\"\n                                                                       \"best capture connection behaviors.\"},\n-                            {RPCResult::Type::NUM, \"banscore\", \"The ban score (DEPRECATED, returned only if config option -deprecatedrpc=banscore is passed)\"},\n                             {RPCResult::Type::NUM, \"startingheight\", \"The starting height (block) of the peer\"},\n                             {RPCResult::Type::NUM, \"synced_headers\", \"The last header we have in common with this peer\"},\n                             {RPCResult::Type::NUM, \"synced_blocks\", \"The last block we have in common with this peer\"},\n@@ -223,10 +222,6 @@ static RPCHelpMan getpeerinfo()\n         obj.pushKV(\"bip152_hb_to\", stats.m_bip152_highbandwidth_to);\n         obj.pushKV(\"bip152_hb_from\", stats.m_bip152_highbandwidth_from);\n         if (fStateStats) {\n-            if (IsDeprecatedRPCEnabled(\"banscore\")) {\n-                // banscore is deprecated in v0.21 for removal in v0.22\n-                obj.pushKV(\"banscore\", statestats.m_misbehavior_score);\n-            }\n             obj.pushKV(\"startingheight\", statestats.m_starting_height);\n             obj.pushKV(\"synced_headers\", statestats.nSyncHeight);\n             obj.pushKV(\"synced_blocks\", statestats.nCommonHeight);"
      },
      {
        "sha": "bde2058464f68915c172ad4ec0450c4d9a59ccb0",
        "filename": "test/functional/rpc_getpeerinfo_deprecation.py",
        "status": "removed",
        "additions": 0,
        "deletions": 27,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/537053336fbc1b633e7c99286c3e3492eaca1e9d/test/functional/rpc_getpeerinfo_deprecation.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/537053336fbc1b633e7c99286c3e3492eaca1e9d/test/functional/rpc_getpeerinfo_deprecation.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_getpeerinfo_deprecation.py?ref=537053336fbc1b633e7c99286c3e3492eaca1e9d",
        "patch": "@@ -1,27 +0,0 @@\n-#!/usr/bin/env python3\n-# Copyright (c) 2020 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\"\"\"Test deprecation of getpeerinfo RPC fields.\"\"\"\n-\n-from test_framework.test_framework import BitcoinTestFramework\n-\n-\n-class GetpeerinfoDeprecationTest(BitcoinTestFramework):\n-    def set_test_params(self):\n-        self.num_nodes = 2\n-        self.extra_args = [[], [\"-deprecatedrpc=banscore\"]]\n-\n-    def run_test(self):\n-        self.test_banscore_deprecation()\n-\n-    def test_banscore_deprecation(self):\n-        self.log.info(\"Test getpeerinfo by default no longer returns a banscore field\")\n-        assert \"banscore\" not in self.nodes[0].getpeerinfo()[0].keys()\n-\n-        self.log.info(\"Test getpeerinfo returns banscore with -deprecatedrpc=banscore\")\n-        assert \"banscore\" in self.nodes[1].getpeerinfo()[0].keys()\n-\n-\n-if __name__ == \"__main__\":\n-    GetpeerinfoDeprecationTest().main()"
      },
      {
        "sha": "261c1f0a1b331f39c6376f06518a45d80f9c130c",
        "filename": "test/functional/test_runner.py",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/094c3beaa47c909070607e94f2544ed1472ddb17/test/functional/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/094c3beaa47c909070607e94f2544ed1472ddb17/test/functional/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_runner.py?ref=094c3beaa47c909070607e94f2544ed1472ddb17",
        "patch": "@@ -279,7 +279,6 @@\n     'feature_config_args.py',\n     'feature_settings.py',\n     'rpc_getdescriptorinfo.py',\n-    'rpc_getpeerinfo_deprecation.py',\n     'rpc_help.py',\n     'feature_help.py',\n     'feature_shutdown.py',"
      }
    ]
  },
  {
    "sha": "b1a936d4ae7dd9030b0720ef05579a90ce2894f1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMWE5MzZkNGFlN2RkOTAzMGIwNzIwZWYwNTU3OWE5MGNlMjg5NGYx",
    "commit": {
      "author": {
        "name": "Amiti Uttarwar",
        "email": "amiti@uttarwar.org",
        "date": "2020-12-23T00:54:18Z"
      },
      "committer": {
        "name": "Amiti Uttarwar",
        "email": "amiti@uttarwar.org",
        "date": "2020-12-26T21:30:54Z"
      },
      "message": "[rpc] Remove deprecated \"whitelisted\" field from getpeerinfo",
      "tree": {
        "sha": "15d237a7aa5e20bbcc15ca97366a9ae2c00a2eec",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/15d237a7aa5e20bbcc15ca97366a9ae2c00a2eec"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b1a936d4ae7dd9030b0720ef05579a90ce2894f1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b1a936d4ae7dd9030b0720ef05579a90ce2894f1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b1a936d4ae7dd9030b0720ef05579a90ce2894f1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b1a936d4ae7dd9030b0720ef05579a90ce2894f1/comments",
    "author": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "094c3beaa47c909070607e94f2544ed1472ddb17",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/094c3beaa47c909070607e94f2544ed1472ddb17",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/094c3beaa47c909070607e94f2544ed1472ddb17"
      }
    ],
    "stats": {
      "total": 64,
      "additions": 12,
      "deletions": 52
    },
    "files": [
      {
        "sha": "2f11a61321d4e2c9b9372a8a73d058b043ddf3f2",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b1a936d4ae7dd9030b0720ef05579a90ce2894f1/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b1a936d4ae7dd9030b0720ef05579a90ce2894f1/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=b1a936d4ae7dd9030b0720ef05579a90ce2894f1",
        "patch": "@@ -599,7 +599,6 @@ void CNode::copyStats(CNodeStats &stats, const std::vector<bool> &m_asmap)\n         X(mapRecvBytesPerMsgCmd);\n         X(nRecvBytes);\n     }\n-    X(m_legacyWhitelisted);\n     X(m_permissionFlags);\n     if (m_tx_relay != nullptr) {\n         LOCK(m_tx_relay->cs_feeFilter);\n@@ -1122,8 +1121,6 @@ void CConnman::AcceptConnection(const ListenSocket& hListenSocket) {\n     CNode* pnode = new CNode(id, nodeServices, GetBestHeight(), hSocket, addr, CalculateKeyedNetGroup(addr), nonce, addr_bind, \"\", ConnectionType::INBOUND, inbound_onion);\n     pnode->AddRef();\n     pnode->m_permissionFlags = permissionFlags;\n-    // If this flag is present, the user probably expect that RPC and QT report it as whitelisted (backward compatibility)\n-    pnode->m_legacyWhitelisted = legacyWhitelisted;\n     pnode->m_prefer_evict = discouraged;\n     m_msgproc->InitializeNode(pnode);\n "
      },
      {
        "sha": "7c396a99cf7e33675afc7915210a8c4c2709eb91",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b1a936d4ae7dd9030b0720ef05579a90ce2894f1/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b1a936d4ae7dd9030b0720ef05579a90ce2894f1/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=b1a936d4ae7dd9030b0720ef05579a90ce2894f1",
        "patch": "@@ -710,7 +710,6 @@ class CNodeStats\n     uint64_t nRecvBytes;\n     mapMsgCmdSize mapRecvBytesPerMsgCmd;\n     NetPermissionFlags m_permissionFlags;\n-    bool m_legacyWhitelisted;\n     int64_t m_ping_usec;\n     int64_t m_ping_wait_usec;\n     int64_t m_min_ping_usec;\n@@ -891,8 +890,6 @@ class CNode\n     bool HasPermission(NetPermissionFlags permission) const {\n         return NetPermissions::HasFlag(m_permissionFlags, permission);\n     }\n-    // This boolean is unusued in actual processing, only present for backward compatibility at RPC/QT level\n-    bool m_legacyWhitelisted{false};\n     bool fClient{false}; // set by version message\n     bool m_limited_node{false}; //after BIP159, set by version message\n     /**"
      },
      {
        "sha": "1e82bc068a9e2d3f674b1e4c00684a47fc9a433c",
        "filename": "src/rpc/net.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b1a936d4ae7dd9030b0720ef05579a90ce2894f1/src/rpc/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b1a936d4ae7dd9030b0720ef05579a90ce2894f1/src/rpc/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/net.cpp?ref=b1a936d4ae7dd9030b0720ef05579a90ce2894f1",
        "patch": "@@ -138,8 +138,6 @@ static RPCHelpMan getpeerinfo()\n                             {\n                                 {RPCResult::Type::NUM, \"n\", \"The heights of blocks we're currently asking from this peer\"},\n                             }},\n-                            {RPCResult::Type::BOOL, \"whitelisted\", /* optional */ true, \"Whether the peer is whitelisted with default permissions\\n\"\n-                                                                                        \"(DEPRECATED, returned only if config option -deprecatedrpc=whitelisted is passed)\"},\n                             {RPCResult::Type::ARR, \"permissions\", \"Any special permissions that have been granted to this peer\",\n                             {\n                                 {RPCResult::Type::STR, \"permission_type\", Join(NET_PERMISSIONS_DOC, \",\\n\") + \".\\n\"},\n@@ -231,10 +229,6 @@ static RPCHelpMan getpeerinfo()\n             }\n             obj.pushKV(\"inflight\", heights);\n         }\n-        if (IsDeprecatedRPCEnabled(\"whitelisted\")) {\n-            // whitelisted is deprecated in v0.21 for removal in v0.22\n-            obj.pushKV(\"whitelisted\", stats.m_legacyWhitelisted);\n-        }\n         UniValue permissions(UniValue::VARR);\n         for (const auto& permission : NetPermissions::ToStrings(stats.m_permissionFlags)) {\n             permissions.push_back(permission);"
      },
      {
        "sha": "646baa155075e1f72b9e356a6d2bace513d4487c",
        "filename": "test/functional/p2p_blocksonly.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b1a936d4ae7dd9030b0720ef05579a90ce2894f1/test/functional/p2p_blocksonly.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b1a936d4ae7dd9030b0720ef05579a90ce2894f1/test/functional/p2p_blocksonly.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_blocksonly.py?ref=b1a936d4ae7dd9030b0720ef05579a90ce2894f1",
        "patch": "@@ -59,7 +59,7 @@ def run_test(self):\n \n         self.log.info('Check that txs from peers with relay-permission are not rejected and relayed to others')\n         self.log.info(\"Restarting node 0 with relay permission and blocksonly\")\n-        self.restart_node(0, [\"-persistmempool=0\", \"-whitelist=relay@127.0.0.1\", \"-blocksonly\", '-deprecatedrpc=whitelisted'])\n+        self.restart_node(0, [\"-persistmempool=0\", \"-whitelist=relay@127.0.0.1\", \"-blocksonly\"])\n         assert_equal(self.nodes[0].getrawmempool(), [])\n         first_peer = self.nodes[0].add_p2p_connection(P2PInterface())\n         second_peer = self.nodes[0].add_p2p_connection(P2PInterface())"
      },
      {
        "sha": "62652d949d2664ed7b6c3096f18595ceb75e0489",
        "filename": "test/functional/p2p_permissions.py",
        "status": "modified",
        "additions": 11,
        "deletions": 39,
        "changes": 50,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b1a936d4ae7dd9030b0720ef05579a90ce2894f1/test/functional/p2p_permissions.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b1a936d4ae7dd9030b0720ef05579a90ce2894f1/test/functional/p2p_permissions.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_permissions.py?ref=b1a936d4ae7dd9030b0720ef05579a90ce2894f1",
        "patch": "@@ -38,35 +38,24 @@ def run_test(self):\n             # default permissions (no specific permissions)\n             [\"-whitelist=127.0.0.1\"],\n             # Make sure the default values in the command line documentation match the ones here\n-            [\"relay\", \"noban\", \"mempool\", \"download\"],\n-            True)\n-\n-        self.checkpermission(\n-            # check without deprecatedrpc=whitelisted\n-            [\"-whitelist=127.0.0.1\"],\n-            # Make sure the default values in the command line documentation match the ones here\n-            [\"relay\", \"noban\", \"mempool\", \"download\"],\n-            None)\n+            [\"relay\", \"noban\", \"mempool\", \"download\"])\n \n         self.checkpermission(\n             # no permission (even with forcerelay)\n             [\"-whitelist=@127.0.0.1\", \"-whitelistforcerelay=1\"],\n-            [],\n-            False)\n+            [])\n \n         self.checkpermission(\n             # relay permission removed (no specific permissions)\n             [\"-whitelist=127.0.0.1\", \"-whitelistrelay=0\"],\n-            [\"noban\", \"mempool\", \"download\"],\n-            True)\n+            [\"noban\", \"mempool\", \"download\"])\n \n         self.checkpermission(\n             # forcerelay and relay permission added\n             # Legacy parameter interaction which set whitelistrelay to true\n             # if whitelistforcerelay is true\n             [\"-whitelist=127.0.0.1\", \"-whitelistforcerelay\"],\n-            [\"forcerelay\", \"relay\", \"noban\", \"mempool\", \"download\"],\n-            True)\n+            [\"forcerelay\", \"relay\", \"noban\", \"mempool\", \"download\"])\n \n         # Let's make sure permissions are merged correctly\n         # For this, we need to use whitebind instead of bind\n@@ -76,39 +65,28 @@ def run_test(self):\n         self.checkpermission(\n             [\"-whitelist=noban@127.0.0.1\"],\n             # Check parameter interaction forcerelay should activate relay\n-            [\"noban\", \"bloomfilter\", \"forcerelay\", \"relay\", \"download\"],\n-            False)\n+            [\"noban\", \"bloomfilter\", \"forcerelay\", \"relay\", \"download\"])\n         self.replaceinconfig(1, \"whitebind=bloomfilter,forcerelay@\" + ip_port, \"bind=127.0.0.1\")\n \n         self.checkpermission(\n             # legacy whitelistrelay should be ignored\n             [\"-whitelist=noban,mempool@127.0.0.1\", \"-whitelistrelay\"],\n-            [\"noban\", \"mempool\", \"download\"],\n-            False)\n-\n-        self.checkpermission(\n-            # check without deprecatedrpc=whitelisted\n-            [\"-whitelist=noban,mempool@127.0.0.1\", \"-whitelistrelay\"],\n-            [\"noban\", \"mempool\", \"download\"],\n-            None)\n+            [\"noban\", \"mempool\", \"download\"])\n \n         self.checkpermission(\n             # legacy whitelistforcerelay should be ignored\n             [\"-whitelist=noban,mempool@127.0.0.1\", \"-whitelistforcerelay\"],\n-            [\"noban\", \"mempool\", \"download\"],\n-            False)\n+            [\"noban\", \"mempool\", \"download\"])\n \n         self.checkpermission(\n             # missing mempool permission to be considered legacy whitelisted\n             [\"-whitelist=noban@127.0.0.1\"],\n-            [\"noban\", \"download\"],\n-            False)\n+            [\"noban\", \"download\"])\n \n         self.checkpermission(\n             # all permission added\n             [\"-whitelist=all@127.0.0.1\"],\n-            [\"forcerelay\", \"noban\", \"mempool\", \"bloomfilter\", \"relay\", \"download\", \"addr\"],\n-            False)\n+            [\"forcerelay\", \"noban\", \"mempool\", \"bloomfilter\", \"relay\", \"download\", \"addr\"])\n \n         self.stop_node(1)\n         self.nodes[1].assert_start_raises_init_error([\"-whitelist=oopsie@127.0.0.1\"], \"Invalid P2P permission\", match=ErrorMatch.PARTIAL_REGEX)\n@@ -169,19 +147,13 @@ def check_tx_relay(self):\n             reject_reason='Not relaying non-mempool transaction {} from forcerelay peer=0'.format(txid)\n         )\n \n-    def checkpermission(self, args, expectedPermissions, whitelisted):\n-        if whitelisted is not None:\n-            args = [*args, '-deprecatedrpc=whitelisted']\n+    def checkpermission(self, args, expectedPermissions):\n         self.restart_node(1, args)\n         self.connect_nodes(0, 1)\n         peerinfo = self.nodes[1].getpeerinfo()[0]\n-        if whitelisted is None:\n-            assert 'whitelisted' not in peerinfo\n-        else:\n-            assert_equal(peerinfo['whitelisted'], whitelisted)\n         assert_equal(len(expectedPermissions), len(peerinfo['permissions']))\n         for p in expectedPermissions:\n-            if not p in peerinfo['permissions']:\n+            if p not in peerinfo['permissions']:\n                 raise AssertionError(\"Expected permissions %r is not granted.\" % p)\n \n     def replaceinconfig(self, nodeid, old, new):"
      }
    ]
  },
  {
    "sha": "454a4088a87eac5878070b26d13d5574da891877",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0NTRhNDA4OGE4N2VhYzU4NzgwNzBiMjZkMTNkNTU3NGRhODkxODc3",
    "commit": {
      "author": {
        "name": "Amiti Uttarwar",
        "email": "amiti@uttarwar.org",
        "date": "2020-12-23T03:08:01Z"
      },
      "committer": {
        "name": "Amiti Uttarwar",
        "email": "amiti@uttarwar.org",
        "date": "2020-12-26T21:30:54Z"
      },
      "message": "[doc] Add release notes for removed getpeerinfo fields.",
      "tree": {
        "sha": "130652f13697095f61e0c285b7bcf57c4623d02d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/130652f13697095f61e0c285b7bcf57c4623d02d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/454a4088a87eac5878070b26d13d5574da891877",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/454a4088a87eac5878070b26d13d5574da891877",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/454a4088a87eac5878070b26d13d5574da891877",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/454a4088a87eac5878070b26d13d5574da891877/comments",
    "author": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b1a936d4ae7dd9030b0720ef05579a90ce2894f1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b1a936d4ae7dd9030b0720ef05579a90ce2894f1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b1a936d4ae7dd9030b0720ef05579a90ce2894f1"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 5,
      "deletions": 0
    },
    "files": [
      {
        "sha": "8f1e03e16b64a975b9fff3be7197b0e6001c1f4f",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/454a4088a87eac5878070b26d13d5574da891877/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/454a4088a87eac5878070b26d13d5574da891877/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=454a4088a87eac5878070b26d13d5574da891877",
        "patch": "@@ -63,6 +63,11 @@ P2P and network changes\n \n Updated RPCs\n ------------\n+- `getpeerinfo` no longer returns the following fields: `addnode`, `banscore`,\n+  and `whitelisted`, which were previously deprecated in 0.21. Instead of\n+  `addnode`, the `connection_type` field returns manual. Instead of\n+  `whitelisted`, the `permissions` field indicates if the peer has special\n+  privileges. The `banscore` field has simply been removed. (#20755)\n \n Changes to Wallet or GUI related RPCs can be found in the GUI or Wallet section below.\n "
      }
    ]
  }
]