[
  {
    "sha": "d5af70439f27e1f5c4a0b59aaa80860ca6cc0141",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkNWFmNzA0MzlmMjdlMWY1YzRhMGI1OWFhYTgwODYwY2E2Y2MwMTQx",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2019-01-17T15:07:46Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2019-01-17T15:21:31Z"
      },
      "message": "fees: Complete the removal of fee-estimation file read code for old versions\n\nComplete the removal of fee-estimation file read code for old versions.\n\nThis completes the removal performed in 62e7c04fb82c1b99ee27b61af17cda343c9f9912.",
      "tree": {
        "sha": "43a18412ba2c3d0a5c489c5e1f4583d4869f8ff8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/43a18412ba2c3d0a5c489c5e1f4583d4869f8ff8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d5af70439f27e1f5c4a0b59aaa80860ca6cc0141",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d5af70439f27e1f5c4a0b59aaa80860ca6cc0141",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d5af70439f27e1f5c4a0b59aaa80860ca6cc0141",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d5af70439f27e1f5c4a0b59aaa80860ca6cc0141/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7ee604487f547cc63413bc691609f38703dc6d6a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7ee604487f547cc63413bc691609f38703dc6d6a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7ee604487f547cc63413bc691609f38703dc6d6a"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 5,
      "deletions": 5
    },
    "files": [
      {
        "sha": "21f829813db6993bd6f0786181edb24994cfc4a9",
        "filename": "src/policy/fees.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d5af70439f27e1f5c4a0b59aaa80860ca6cc0141/src/policy/fees.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d5af70439f27e1f5c4a0b59aaa80860ca6cc0141/src/policy/fees.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/fees.cpp?ref=d5af70439f27e1f5c4a0b59aaa80860ca6cc0141",
        "patch": "@@ -168,7 +168,7 @@ class TxConfirmStats\n      * Read saved state of estimation data from a file and replace all internal data structures and\n      * variables with this state.\n      */\n-    void Read(CAutoFile& filein, int nFileVersion, size_t numBuckets);\n+    void Read(CAutoFile& filein, size_t numBuckets);\n };\n \n \n@@ -403,7 +403,7 @@ void TxConfirmStats::Write(CAutoFile& fileout) const\n     fileout << failAvg;\n }\n \n-void TxConfirmStats::Read(CAutoFile& filein, int nFileVersion, size_t numBuckets)\n+void TxConfirmStats::Read(CAutoFile& filein, size_t numBuckets)\n {\n     // Read data file and do some very basic sanity checking\n     // buckets and bucketMap are not updated yet, so don't access them\n@@ -953,9 +953,9 @@ bool CBlockPolicyEstimator::Read(CAutoFile& filein)\n             std::unique_ptr<TxConfirmStats> fileFeeStats(new TxConfirmStats(buckets, bucketMap, MED_BLOCK_PERIODS, MED_DECAY, MED_SCALE));\n             std::unique_ptr<TxConfirmStats> fileShortStats(new TxConfirmStats(buckets, bucketMap, SHORT_BLOCK_PERIODS, SHORT_DECAY, SHORT_SCALE));\n             std::unique_ptr<TxConfirmStats> fileLongStats(new TxConfirmStats(buckets, bucketMap, LONG_BLOCK_PERIODS, LONG_DECAY, LONG_SCALE));\n-            fileFeeStats->Read(filein, nVersionThatWrote, numBuckets);\n-            fileShortStats->Read(filein, nVersionThatWrote, numBuckets);\n-            fileLongStats->Read(filein, nVersionThatWrote, numBuckets);\n+            fileFeeStats->Read(filein, numBuckets);\n+            fileShortStats->Read(filein, numBuckets);\n+            fileLongStats->Read(filein, numBuckets);\n \n             // Fee estimates file parsed correctly\n             // Copy buckets from file and refresh our bucketmap"
      }
    ]
  }
]