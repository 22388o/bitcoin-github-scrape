[
  {
    "sha": "8995f8ed6148d7cf07868524456f7a2b9bd8ffdd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4OTk1ZjhlZDYxNDhkN2NmMDc4Njg1MjQ0NTZmN2EyYjliZDhmZmRk",
    "commit": {
      "author": {
        "name": "svost",
        "email": "ya.nowa@yandex.ru",
        "date": "2016-02-12T19:10:40Z"
      },
      "committer": {
        "name": "svost",
        "email": "ya.nowa@yandex.ru",
        "date": "2016-02-12T19:10:40Z"
      },
      "message": "Reorganize includes a bit.",
      "tree": {
        "sha": "82c62bd2d80cc941a336fecf6bdc466a79963b6c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/82c62bd2d80cc941a336fecf6bdc466a79963b6c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8995f8ed6148d7cf07868524456f7a2b9bd8ffdd",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8995f8ed6148d7cf07868524456f7a2b9bd8ffdd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8995f8ed6148d7cf07868524456f7a2b9bd8ffdd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8995f8ed6148d7cf07868524456f7a2b9bd8ffdd/comments",
    "author": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1940caffedac775521a1cdab0be22d0a71ce246d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1940caffedac775521a1cdab0be22d0a71ce246d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1940caffedac775521a1cdab0be22d0a71ce246d"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 0,
      "deletions": 6
    },
    "files": [
      {
        "sha": "f2a86ddd5f5e2bf4d8ecc07391bb8233c8aeea84",
        "filename": "src/ecies.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8995f8ed6148d7cf07868524456f7a2b9bd8ffdd/src/ecies.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8995f8ed6148d7cf07868524456f7a2b9bd8ffdd/src/ecies.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/ecies.cpp?ref=8995f8ed6148d7cf07868524456f7a2b9bd8ffdd",
        "patch": "@@ -11,7 +11,6 @@\n #include \"ies.h\"\n #include <iostream>\n #include <vector>\n-#include <openssl/ecdh.h>\n \n #define SET_ERROR(string) \\\n     sprintf(error, \"%s %s:%d\", (string), __FILE__, __LINE__)"
      },
      {
        "sha": "39a7ebbabd6ccd34611696324159a5cd5e242207",
        "filename": "src/key.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8995f8ed6148d7cf07868524456f7a2b9bd8ffdd/src/key.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8995f8ed6148d7cf07868524456f7a2b9bd8ffdd/src/key.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.cpp?ref=8995f8ed6148d7cf07868524456f7a2b9bd8ffdd",
        "patch": "@@ -6,12 +6,9 @@\n \n #include <openssl/ecdsa.h>\n #include <openssl/obj_mac.h>\n-#include <openssl/ssl.h>\n-#include <openssl/ecdh.h>\n \n #include \"key.h\"\n #include \"base58.h\"\n-#include \"ies.h\"\n \n // Generate a private key from just the secret parameter\n int EC_KEY_regenerate_key(EC_KEY *eckey, BIGNUM *priv_key)"
      },
      {
        "sha": "fd40d5fc426205baeb9478958a8fdc8255acb171",
        "filename": "src/rpcrawtransaction.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8995f8ed6148d7cf07868524456f7a2b9bd8ffdd/src/rpcrawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8995f8ed6148d7cf07868524456f7a2b9bd8ffdd/src/rpcrawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcrawtransaction.cpp?ref=8995f8ed6148d7cf07868524456f7a2b9bd8ffdd",
        "patch": "@@ -12,8 +12,6 @@\n #include \"main.h\"\n #include \"net.h\"\n #include \"wallet.h\"\n-#include \"script.h\"\n-#include \"util.h\"\n \n using namespace std;\n using namespace boost;"
      }
    ]
  },
  {
    "sha": "87f1882c68513889bdb2be2a5559df689458f55a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4N2YxODgyYzY4NTEzODg5YmRiMmJlMmE1NTU5ZGY2ODk0NThmNTVh",
    "commit": {
      "author": {
        "name": "svost",
        "email": "ya.nowa@yandex.ru",
        "date": "2016-02-12T20:27:43Z"
      },
      "committer": {
        "name": "svost",
        "email": "ya.nowa@yandex.ru",
        "date": "2016-02-12T20:27:43Z"
      },
      "message": "Fix V595 PVS Studio - the pointer was utilized before it was verified against nullptr.",
      "tree": {
        "sha": "ee45e2d7738d6a10bb5cb6e73df0539c93734f71",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ee45e2d7738d6a10bb5cb6e73df0539c93734f71"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/87f1882c68513889bdb2be2a5559df689458f55a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/87f1882c68513889bdb2be2a5559df689458f55a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/87f1882c68513889bdb2be2a5559df689458f55a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/87f1882c68513889bdb2be2a5559df689458f55a/comments",
    "author": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1940caffedac775521a1cdab0be22d0a71ce246d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1940caffedac775521a1cdab0be22d0a71ce246d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1940caffedac775521a1cdab0be22d0a71ce246d"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 5,
      "deletions": 5
    },
    "files": [
      {
        "sha": "fe2fb55676432c2febdb383b9bc3d7e24f8b11c7",
        "filename": "src/ecies.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/87f1882c68513889bdb2be2a5559df689458f55a/src/ecies.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/87f1882c68513889bdb2be2a5559df689458f55a/src/ecies.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/ecies.cpp?ref=87f1882c68513889bdb2be2a5559df689458f55a",
        "patch": "@@ -273,16 +273,16 @@ static int store_mac_tag(const ies_ctx_t *ctx, const unsigned char *envelope_key\n \n cryptogram_t * ecies_encrypt(const ies_ctx_t *ctx, const unsigned char *data, size_t length, char *error) {\n \n-    const size_t block_length = EVP_CIPHER_block_size(ctx->cipher);\n-    const size_t mac_length = EVP_MD_size(ctx->md);\n-    cryptogram_t *cryptogram = NULL;\n-    unsigned char *envelope_key = NULL;\n-\n     if (!ctx || !data || !length) {\n         SET_ERROR(\"Invalid arguments\");\n         return NULL;\n     }\n \n+    const size_t block_length = EVP_CIPHER_block_size(ctx->cipher);\n+    const size_t mac_length = EVP_MD_size(ctx->md);\n+    cryptogram_t *cryptogram = NULL;\n+    unsigned char *envelope_key = NULL;\n+\n     if (block_length == 0 || block_length > EVP_MAX_BLOCK_LENGTH) {\n         SET_ERROR(\"Derived block size is incorrect\");\n         return NULL;"
      }
    ]
  },
  {
    "sha": "661cd826c1153ef5b59a8d8433ed121daf010132",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2NjFjZDgyNmMxMTUzZWY1YjU5YThkODQzM2VkMTIxZGFmMDEwMTMy",
    "commit": {
      "author": {
        "name": "0xDEADFACE",
        "email": "masmfan@gmail.com",
        "date": "2016-02-12T23:43:57Z"
      },
      "committer": {
        "name": "0xDEADFACE",
        "email": "masmfan@gmail.com",
        "date": "2016-02-12T23:43:57Z"
      },
      "message": "Experimental support for TX_PUBKEY_DROP spending.",
      "tree": {
        "sha": "e828b31af80fb447fa16e74dc8420399456076d7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e828b31af80fb447fa16e74dc8420399456076d7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/661cd826c1153ef5b59a8d8433ed121daf010132",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/661cd826c1153ef5b59a8d8433ed121daf010132",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/661cd826c1153ef5b59a8d8433ed121daf010132",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/661cd826c1153ef5b59a8d8433ed121daf010132/comments",
    "author": {
      "login": "0xDEADFACE",
      "id": 6503509,
      "node_id": "MDQ6VXNlcjY1MDM1MDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6503509?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xDEADFACE",
      "html_url": "https://github.com/0xDEADFACE",
      "followers_url": "https://api.github.com/users/0xDEADFACE/followers",
      "following_url": "https://api.github.com/users/0xDEADFACE/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xDEADFACE/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xDEADFACE/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xDEADFACE/subscriptions",
      "organizations_url": "https://api.github.com/users/0xDEADFACE/orgs",
      "repos_url": "https://api.github.com/users/0xDEADFACE/repos",
      "events_url": "https://api.github.com/users/0xDEADFACE/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xDEADFACE/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "0xDEADFACE",
      "id": 6503509,
      "node_id": "MDQ6VXNlcjY1MDM1MDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6503509?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xDEADFACE",
      "html_url": "https://github.com/0xDEADFACE",
      "followers_url": "https://api.github.com/users/0xDEADFACE/followers",
      "following_url": "https://api.github.com/users/0xDEADFACE/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xDEADFACE/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xDEADFACE/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xDEADFACE/subscriptions",
      "organizations_url": "https://api.github.com/users/0xDEADFACE/orgs",
      "repos_url": "https://api.github.com/users/0xDEADFACE/repos",
      "events_url": "https://api.github.com/users/0xDEADFACE/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xDEADFACE/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1940caffedac775521a1cdab0be22d0a71ce246d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1940caffedac775521a1cdab0be22d0a71ce246d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1940caffedac775521a1cdab0be22d0a71ce246d"
      }
    ],
    "stats": {
      "total": 136,
      "additions": 125,
      "deletions": 11
    },
    "files": [
      {
        "sha": "9503f958972a08a7b4ef97734634542c8cca0d92",
        "filename": "src/key.cpp",
        "status": "modified",
        "additions": 35,
        "deletions": 0,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/661cd826c1153ef5b59a8d8433ed121daf010132/src/key.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/661cd826c1153ef5b59a8d8433ed121daf010132/src/key.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.cpp?ref=661cd826c1153ef5b59a8d8433ed121daf010132",
        "patch": "@@ -1004,6 +1004,14 @@ CMalleableKeyView::CMalleableKeyView(const CMalleableKey &b)\n     vchPubKeyH = H.GetPubKey().Raw();\n }\n \n+CMalleableKeyView::CMalleableKeyView(const CMalleableKeyView &b)\n+{\n+    assert(b.nVersion == CURRENT_VERSION);\n+    vchSecretL = b.vchSecretL;\n+    vchPubKeyH = b.vchPubKeyH;\n+    nVersion = CURRENT_VERSION;\n+}\n+\n CMalleableKeyView::CMalleableKeyView(const CSecret &L, const CPubKey &pvchPubKeyH)\n {\n     vchSecretL = L;\n@@ -1095,6 +1103,33 @@ bool CMalleableKeyView::CheckKeyVariant(const CPubKey &R, const CPubKey &vchPubK\n     return true;\n }\n \n+std::string CMalleableKeyView::ToString()\n+{\n+    CDataStream ssKey(SER_NETWORK, PROTOCOL_VERSION);\n+    ssKey << *this;\n+    std::vector<unsigned char> vch(ssKey.begin(), ssKey.end());\n+\n+    return EncodeBase58Check(vch);\n+}\n+\n+bool CMalleableKeyView::SetString(const std::string& strMutableKey)\n+{\n+    std::vector<unsigned char> vchTemp;\n+    if (!DecodeBase58Check(strMutableKey, vchTemp)) {\n+        throw key_error(\"CMalleableKeyView::SetString() : Provided key data seems corrupted.\");\n+    }\n+\n+    CDataStream ssKey(vchTemp, SER_NETWORK, PROTOCOL_VERSION);\n+    ssKey >> *this;\n+\n+    return IsNull();\n+}\n+\n+bool CMalleableKeyView::IsNull() const\n+{\n+    return nVersion != CURRENT_VERSION;\n+}\n+\n //// Asymmetric encryption\n \n void CPubKey::EncryptData(const std::vector<unsigned char>& data, std::vector<unsigned char>& encrypted)"
      },
      {
        "sha": "ca78c724e8a273c1dddc5e6e2ea051a1ca65cc87",
        "filename": "src/key.h",
        "status": "modified",
        "additions": 14,
        "deletions": 5,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/661cd826c1153ef5b59a8d8433ed121daf010132/src/key.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/661cd826c1153ef5b59a8d8433ed121daf010132/src/key.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.h?ref=661cd826c1153ef5b59a8d8433ed121daf010132",
        "patch": "@@ -277,32 +277,41 @@ class CMalleableKey\n     void GetSecrets(CSecret &pvchSecretL, CSecret &pvchSecretH) const;\n \n     CMalleablePubKey GetMalleablePubKey() const;\n-\n     bool CheckKeyVariant(const CPubKey &R, const CPubKey &vchPubKeyVariant);\n     bool CheckKeyVariant(const CPubKey &R, const CPubKey &vchPubKeyVariant, CKey &privKeyVariant);\n };\n \n class CMalleableKeyView\n {\n private:\n+    unsigned char nVersion;\n     CSecret vchSecretL;\n     std::vector<unsigned char> vchPubKeyH;\n \n-    // disabled constructor\n-    CMalleableKeyView() { };\n-\n     static const unsigned char CURRENT_VERSION = 1;\n \n public:\n+    CMalleableKeyView() { nVersion = 0; };\n     CMalleableKeyView(const CMalleableKey &b);\n     CMalleableKeyView(const CSecret &L, const CPubKey &pvchPubKeyH);\n \n     CMalleableKeyView(const CMalleableKeyView &b);\n     CMalleableKeyView& operator=(const CMalleableKey &b);\n     ~CMalleableKeyView();\n \n-    CMalleablePubKey GetMalleablePubKey() const;\n \n+    IMPLEMENT_SERIALIZE(\n+        READWRITE(this->nVersion);\n+        nVersion = this->nVersion;\n+        READWRITE(vchSecretL);\n+        READWRITE(vchPubKeyH);\n+    )\n+\n+    bool IsNull() const;\n+    std::string ToString();\n+    bool SetString(const std::string& strMalleablePubKey);\n+\n+    CMalleablePubKey GetMalleablePubKey() const;\n     bool CheckKeyVariant(const CPubKey &R, const CPubKey &vchPubKeyVariant);\n };\n "
      },
      {
        "sha": "197b73ef12143d8336d6d02a1edf4d5c10408bc6",
        "filename": "src/keystore.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/661cd826c1153ef5b59a8d8433ed121daf010132/src/keystore.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/661cd826c1153ef5b59a8d8433ed121daf010132/src/keystore.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/keystore.cpp?ref=661cd826c1153ef5b59a8d8433ed121daf010132",
        "patch": "@@ -102,6 +102,20 @@ bool CBasicKeyStore::HaveWatchOnly() const\n     return (!setWatchOnly.empty());\n }\n \n+CCryptoKeyStore::CCryptoKeyStore() : fUseCrypto(false)\n+{\n+    std::string strMalleableKey = GetArg(\"-masterkey\", \"\");\n+    CMalleableKey malleableKey;\n+    if (strMalleableKey != \"\")\n+        malleableKey.SetString(strMalleableKey);\n+    else\n+        malleableKey.MakeNewKeys();\n+\n+    CMalleableKeyView keyView(malleableKey);\n+\n+    malleableKeyPair = std::pair<CMalleableKeyView, CMalleableKey>(keyView, malleableKey);\n+}\n+\n bool CCryptoKeyStore::SetCrypted()\n {\n     {\n@@ -154,6 +168,7 @@ bool CCryptoKeyStore::Unlock(const CKeyingMaterial& vMasterKeyIn)\n                 break;\n             return false;\n         }\n+\n         vMasterKey = vMasterKeyIn;\n     }\n     NotifyStatusChanged(this);"
      },
      {
        "sha": "7dc346435f0c988c8a8f40ec517e362e589351b4",
        "filename": "src/keystore.h",
        "status": "modified",
        "additions": 26,
        "deletions": 3,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/661cd826c1153ef5b59a8d8433ed121daf010132/src/keystore.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/661cd826c1153ef5b59a8d8433ed121daf010132/src/keystore.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/keystore.h?ref=661cd826c1153ef5b59a8d8433ed121daf010132",
        "patch": "@@ -64,11 +64,15 @@ class CKeyStore\n         vchSecret = key.GetSecret(fCompressed);\n         return true;\n     }\n+\n+    virtual bool CheckOwnership(const CPubKey &pubKeyVariant, const CPubKey &R) const =0;\n+    virtual bool CreatePrivKey(const CPubKey &pubKeyVariant, const CPubKey &R, CKey &privKey) const =0;\n };\n \n typedef std::map<CKeyID, std::pair<CSecret, bool> > KeyMap;\n typedef std::map<CScriptID, CScript > ScriptMap;\n typedef std::set<CScript> WatchOnlySet;\n+typedef std::pair<CMalleableKeyView, CMalleableKey> MalleableKeyPair;\n \n /** Basic key store, that keeps keys in an address->secret map */\n class CBasicKeyStore : public CKeyStore\n@@ -77,6 +81,7 @@ class CBasicKeyStore : public CKeyStore\n     KeyMap mapKeys;\n     ScriptMap mapScripts;\n     WatchOnlySet setWatchOnly;\n+    MalleableKeyPair malleableKeyPair;\n \n public:\n     bool AddKey(const CKey& key);\n@@ -124,6 +129,26 @@ class CBasicKeyStore : public CKeyStore\n     virtual bool RemoveWatchOnly(const CScript &dest);\n     virtual bool HaveWatchOnly(const CScript &dest) const;\n     virtual bool HaveWatchOnly() const;\n+\n+    bool CheckOwnership(const CPubKey &pubKeyVariant, const CPubKey &R) const\n+    {\n+        bool result;\n+        {\n+            LOCK(cs_KeyStore);\n+            result = const_cast<CBasicKeyStore*>(this)->malleableKeyPair.first.CheckKeyVariant(R, pubKeyVariant);\n+        }\n+        return result;\n+    }\n+\n+    bool CreatePrivKey(const CPubKey &pubKeyVariant, const CPubKey &R, CKey &privKey) const\n+    {\n+        bool result;\n+        {\n+            LOCK(cs_KeyStore);\n+            result = const_cast<CBasicKeyStore*>(this)->malleableKeyPair.second.CheckKeyVariant(R, pubKeyVariant, privKey);\n+        }\n+        return result;\n+    }\n };\n \n typedef std::map<CKeyID, std::pair<CPubKey, std::vector<unsigned char> > > CryptedKeyMap;\n@@ -152,9 +177,7 @@ class CCryptoKeyStore : public CBasicKeyStore\n     bool Unlock(const CKeyingMaterial& vMasterKeyIn);\n \n public:\n-    CCryptoKeyStore() : fUseCrypto(false)\n-    {\n-    }\n+    CCryptoKeyStore();\n \n     bool IsCrypted() const\n     {"
      },
      {
        "sha": "26b7c941f428169e910ccea6c0dbe8ae239712c4",
        "filename": "src/script.cpp",
        "status": "modified",
        "additions": 35,
        "deletions": 3,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/661cd826c1153ef5b59a8d8433ed121daf010132/src/script.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/661cd826c1153ef5b59a8d8433ed121daf010132/src/script.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script.cpp?ref=661cd826c1153ef5b59a8d8433ed121daf010132",
        "patch": "@@ -1328,6 +1328,21 @@ bool Sign1(const CKeyID& address, const CKeyStore& keystore, const uint256& hash\n     return true;\n }\n \n+bool SignR(const CPubKey& pubKey, const CPubKey& R, const CKeyStore& keystore, const uint256& hash, int nHashType, CScript& scriptSigRet)\n+{\n+    CKey key;\n+    if (!keystore.CreatePrivKey(pubKey, R, key))\n+        return false;\n+\n+    vector<unsigned char> vchSig;\n+    if (!key.Sign(hash, vchSig))\n+        return false;\n+    vchSig.push_back((unsigned char)nHashType);\n+    scriptSigRet << vchSig;\n+\n+    return true;\n+}\n+\n bool SignN(const vector<valtype>& multisigdata, const CKeyStore& keystore, const uint256& hash, int nHashType, CScript& scriptSigRet)\n {\n     int nSigned = 0;\n@@ -1364,9 +1379,14 @@ bool Solver(const CKeyStore& keystore, const CScript& scriptPubKey, const uint25\n     case TX_NULL_DATA:\n         return false;\n     case TX_PUBKEY:\n-    case TX_PUBKEY_DROP:\n         keyID = CPubKey(vSolutions[0]).GetID();\n         return Sign1(keyID, keystore, hash, nHashType, scriptSigRet);\n+    case TX_PUBKEY_DROP:\n+        {\n+            CPubKey key = CPubKey(vSolutions[0]);\n+            CPubKey R = CPubKey(vSolutions[1]);\n+            return SignR(key, R, keystore, hash, nHashType, scriptSigRet);\n+        }\n     case TX_PUBKEYHASH:\n         keyID = CKeyID(uint160(vSolutions[0]));\n         if (!Sign1(keyID, keystore, hash, nHashType, scriptSigRet))\n@@ -1480,11 +1500,23 @@ isminetype IsMine(const CKeyStore &keystore, const CScript& scriptPubKey)\n     case TX_NULL_DATA:\n         break;\n     case TX_PUBKEY:\n-    case TX_PUBKEY_DROP:\n         keyID = CPubKey(vSolutions[0]).GetID();\n         if (keystore.HaveKey(keyID))\n             return MINE_SPENDABLE;\n         break;\n+    case TX_PUBKEY_DROP:\n+        {\n+            CPubKey key = CPubKey(vSolutions[0]);\n+            if (keystore.HaveKey(key.GetID()))\n+                return MINE_SPENDABLE;\n+            else\n+            {\n+                CPubKey R = CPubKey(vSolutions[1]);\n+                if (keystore.CheckOwnership(key, R))\n+                    return MINE_SPENDABLE;\n+            }\n+        }\n+        break;\n     case TX_PUBKEYHASH:\n         keyID = CKeyID(uint160(vSolutions[0]));\n         if (keystore.HaveKey(keyID))\n@@ -1527,7 +1559,7 @@ bool ExtractDestination(const CScript& scriptPubKey, CTxDestination& addressRet)\n     if (!Solver(scriptPubKey, whichType, vSolutions))\n         return false;\n \n-    if (whichType == TX_PUBKEY)\n+    if (whichType == TX_PUBKEY || whichType == TX_PUBKEY_DROP)\n     {\n         addressRet = CPubKey(vSolutions[0]).GetID();\n         return true;"
      }
    ]
  },
  {
    "sha": "a5f0a4f9ea0e7addbff0c3c41c867a7902e7469b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNWYwYTRmOWVhMGU3YWRkYmZmMGMzYzQxYzg2N2E3OTAyZTc0Njli",
    "commit": {
      "author": {
        "name": "0xDEADFACE",
        "email": "masmfan@gmail.com",
        "date": "2016-02-13T13:51:15Z"
      },
      "committer": {
        "name": "0xDEADFACE",
        "email": "masmfan@gmail.com",
        "date": "2016-02-13T13:51:15Z"
      },
      "message": "Remove asserts.",
      "tree": {
        "sha": "b6fbcebd253cfda5ba488ee7ad8c5352df092817",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b6fbcebd253cfda5ba488ee7ad8c5352df092817"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a5f0a4f9ea0e7addbff0c3c41c867a7902e7469b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a5f0a4f9ea0e7addbff0c3c41c867a7902e7469b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a5f0a4f9ea0e7addbff0c3c41c867a7902e7469b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a5f0a4f9ea0e7addbff0c3c41c867a7902e7469b/comments",
    "author": {
      "login": "0xDEADFACE",
      "id": 6503509,
      "node_id": "MDQ6VXNlcjY1MDM1MDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6503509?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xDEADFACE",
      "html_url": "https://github.com/0xDEADFACE",
      "followers_url": "https://api.github.com/users/0xDEADFACE/followers",
      "following_url": "https://api.github.com/users/0xDEADFACE/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xDEADFACE/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xDEADFACE/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xDEADFACE/subscriptions",
      "organizations_url": "https://api.github.com/users/0xDEADFACE/orgs",
      "repos_url": "https://api.github.com/users/0xDEADFACE/repos",
      "events_url": "https://api.github.com/users/0xDEADFACE/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xDEADFACE/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "0xDEADFACE",
      "id": 6503509,
      "node_id": "MDQ6VXNlcjY1MDM1MDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6503509?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xDEADFACE",
      "html_url": "https://github.com/0xDEADFACE",
      "followers_url": "https://api.github.com/users/0xDEADFACE/followers",
      "following_url": "https://api.github.com/users/0xDEADFACE/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xDEADFACE/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xDEADFACE/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xDEADFACE/subscriptions",
      "organizations_url": "https://api.github.com/users/0xDEADFACE/orgs",
      "repos_url": "https://api.github.com/users/0xDEADFACE/repos",
      "events_url": "https://api.github.com/users/0xDEADFACE/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xDEADFACE/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "661cd826c1153ef5b59a8d8433ed121daf010132",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/661cd826c1153ef5b59a8d8433ed121daf010132",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/661cd826c1153ef5b59a8d8433ed121daf010132"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "89c0dccb94406c65ec6ea1299d0d6624e8abbbf8",
        "filename": "src/key.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a5f0a4f9ea0e7addbff0c3c41c867a7902e7469b/src/key.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a5f0a4f9ea0e7addbff0c3c41c867a7902e7469b/src/key.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.cpp?ref=a5f0a4f9ea0e7addbff0c3c41c867a7902e7469b",
        "patch": "@@ -996,17 +996,16 @@ bool CMalleableKey::SetString(const std::string& strMutableKey)\n \n CMalleableKeyView::CMalleableKeyView(const CMalleableKey &b)\n {\n-    assert(b.nVersion == CURRENT_VERSION);\n     vchSecretL = b.vchSecretL;\n \n     CKey H;\n     H.SetSecret(b.vchSecretH, true);\n     vchPubKeyH = H.GetPubKey().Raw();\n+    nVersion = b.nVersion;\n }\n \n CMalleableKeyView::CMalleableKeyView(const CMalleableKeyView &b)\n {\n-    assert(b.nVersion == CURRENT_VERSION);\n     vchSecretL = b.vchSecretL;\n     vchPubKeyH = b.vchPubKeyH;\n     nVersion = CURRENT_VERSION;\n@@ -1016,16 +1015,17 @@ CMalleableKeyView::CMalleableKeyView(const CSecret &L, const CPubKey &pvchPubKey\n {\n     vchSecretL = L;\n     vchPubKeyH = pvchPubKeyH.Raw();\n+    nVersion = CURRENT_VERSION;\n }\n \n CMalleableKeyView& CMalleableKeyView::operator=(const CMalleableKey &b)\n {\n-    assert(b.nVersion == CURRENT_VERSION);\n     vchSecretL = b.vchSecretL;\n \n     CKey H;\n     H.SetSecret(b.vchSecretH, true);\n     vchPubKeyH = H.GetPubKey().Raw();\n+    nVersion = b.nVersion;\n \n     return (*this);\n }"
      }
    ]
  },
  {
    "sha": "4703e1af35388bd7b1aba61a020edc2b327e06d3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0NzAzZTFhZjM1Mzg4YmQ3YjFhYmE2MWEwMjBlZGMyYjMyN2UwNmQz",
    "commit": {
      "author": {
        "name": "svost",
        "email": "ya.nowa@yandex.ru",
        "date": "2016-02-13T21:08:31Z"
      },
      "committer": {
        "name": "svost",
        "email": "ya.nowa@yandex.ru",
        "date": "2016-02-13T21:08:31Z"
      },
      "message": "Same as @92e04fc",
      "tree": {
        "sha": "2517791c20d13acfab575a221c1aa7a2ef9e5d44",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2517791c20d13acfab575a221c1aa7a2ef9e5d44"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4703e1af35388bd7b1aba61a020edc2b327e06d3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4703e1af35388bd7b1aba61a020edc2b327e06d3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4703e1af35388bd7b1aba61a020edc2b327e06d3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4703e1af35388bd7b1aba61a020edc2b327e06d3/comments",
    "author": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "87f1882c68513889bdb2be2a5559df689458f55a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/87f1882c68513889bdb2be2a5559df689458f55a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/87f1882c68513889bdb2be2a5559df689458f55a"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "67491b99d97ec311f314e50e3616bc1a2f9adfef",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4703e1af35388bd7b1aba61a020edc2b327e06d3/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4703e1af35388bd7b1aba61a020edc2b327e06d3/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=4703e1af35388bd7b1aba61a020edc2b327e06d3",
        "patch": "@@ -1189,11 +1189,11 @@ const CBlockIndex* GetLastBlockIndex(const CBlockIndex* pindex, bool fProofOfSta\n \n unsigned int GetNextTargetRequired(const CBlockIndex* pindexLast, bool fProofOfStake)\n {\n-    CBigNum bnTargetLimit = !fProofOfStake ? bnProofOfWorkLimit : GetProofOfStakeLimit(pindexLast->nHeight, pindexLast->nTime);\n-\n     if (pindexLast == NULL)\n         return bnTargetLimit.GetCompact(); // genesis block\n \n+    CBigNum bnTargetLimit = !fProofOfStake ? bnProofOfWorkLimit : GetProofOfStakeLimit(pindexLast->nHeight, pindexLast->nTime);\n+\n     const CBlockIndex* pindexPrev = GetLastBlockIndex(pindexLast, fProofOfStake);\n     if (pindexPrev->pprev == NULL)\n         return bnTargetLimit.GetCompact(); // first block"
      }
    ]
  },
  {
    "sha": "febcfc9c0575fe9c26e588570929f2d64b6aca45",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmZWJjZmM5YzA1NzVmZTljMjZlNTg4NTcwOTI5ZjJkNjRiNmFjYTQ1",
    "commit": {
      "author": {
        "name": "0xDEADFACE",
        "email": "masmfan@gmail.com",
        "date": "2016-02-13T21:25:37Z"
      },
      "committer": {
        "name": "0xDEADFACE",
        "email": "masmfan@gmail.com",
        "date": "2016-02-13T21:25:37Z"
      },
      "message": "ListMalleablePubKeys method",
      "tree": {
        "sha": "0b61da5fdc569bd956c5b6e84fda8242071ade16",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0b61da5fdc569bd956c5b6e84fda8242071ade16"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/febcfc9c0575fe9c26e588570929f2d64b6aca45",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/febcfc9c0575fe9c26e588570929f2d64b6aca45",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/febcfc9c0575fe9c26e588570929f2d64b6aca45",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/febcfc9c0575fe9c26e588570929f2d64b6aca45/comments",
    "author": {
      "login": "0xDEADFACE",
      "id": 6503509,
      "node_id": "MDQ6VXNlcjY1MDM1MDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6503509?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xDEADFACE",
      "html_url": "https://github.com/0xDEADFACE",
      "followers_url": "https://api.github.com/users/0xDEADFACE/followers",
      "following_url": "https://api.github.com/users/0xDEADFACE/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xDEADFACE/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xDEADFACE/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xDEADFACE/subscriptions",
      "organizations_url": "https://api.github.com/users/0xDEADFACE/orgs",
      "repos_url": "https://api.github.com/users/0xDEADFACE/repos",
      "events_url": "https://api.github.com/users/0xDEADFACE/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xDEADFACE/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "0xDEADFACE",
      "id": 6503509,
      "node_id": "MDQ6VXNlcjY1MDM1MDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6503509?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xDEADFACE",
      "html_url": "https://github.com/0xDEADFACE",
      "followers_url": "https://api.github.com/users/0xDEADFACE/followers",
      "following_url": "https://api.github.com/users/0xDEADFACE/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xDEADFACE/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xDEADFACE/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xDEADFACE/subscriptions",
      "organizations_url": "https://api.github.com/users/0xDEADFACE/orgs",
      "repos_url": "https://api.github.com/users/0xDEADFACE/repos",
      "events_url": "https://api.github.com/users/0xDEADFACE/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xDEADFACE/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a5f0a4f9ea0e7addbff0c3c41c867a7902e7469b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a5f0a4f9ea0e7addbff0c3c41c867a7902e7469b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a5f0a4f9ea0e7addbff0c3c41c867a7902e7469b"
      }
    ],
    "stats": {
      "total": 129,
      "additions": 93,
      "deletions": 36
    },
    "files": [
      {
        "sha": "92042d0803e072f714d3d0a17692701523672c10",
        "filename": "src/bitcoinrpc.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/febcfc9c0575fe9c26e588570929f2d64b6aca45/src/bitcoinrpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/febcfc9c0575fe9c26e588570929f2d64b6aca45/src/bitcoinrpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoinrpc.cpp?ref=febcfc9c0575fe9c26e588570929f2d64b6aca45",
        "patch": "@@ -319,6 +319,7 @@ static const CRPCCommand vRPCCommands[] =\n     { \"newmalleablekey\",        &newmalleablekey,        false,  false},\n     { \"adjustmalleablekey\",     &adjustmalleablekey,     false,  false},\n     { \"adjustmalleablepubkey\",  &adjustmalleablepubkey,  false,  false},\n+    { \"listmalleablepubkeys\",   &listmalleablepubkeys,   false,  false},\n     { \"sendalert\",              &sendalert,              false,  false},\n };\n "
      },
      {
        "sha": "226007b8e5edf9108577c1cd5106d908fdee8681",
        "filename": "src/bitcoinrpc.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/febcfc9c0575fe9c26e588570929f2d64b6aca45/src/bitcoinrpc.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/febcfc9c0575fe9c26e588570929f2d64b6aca45/src/bitcoinrpc.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoinrpc.h?ref=febcfc9c0575fe9c26e588570929f2d64b6aca45",
        "patch": "@@ -209,6 +209,7 @@ extern json_spirit::Value mergecoins(const json_spirit::Array& params, bool fHel\n extern json_spirit::Value newmalleablekey(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value adjustmalleablekey(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value adjustmalleablepubkey(const json_spirit::Array& params, bool fHelp);\n+extern json_spirit::Value listmalleablepubkeys(const json_spirit::Array& params, bool fHelp);\n \n extern json_spirit::Value getrawtransaction(const json_spirit::Array& params, bool fHelp); // in rcprawtransaction.cpp\n extern json_spirit::Value listunspent(const json_spirit::Array& params, bool fHelp);"
      },
      {
        "sha": "dafffcfe5a55a26133cbce575c952b4f193a1675",
        "filename": "src/key.cpp",
        "status": "modified",
        "additions": 31,
        "deletions": 18,
        "changes": 49,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/febcfc9c0575fe9c26e588570929f2d64b6aca45/src/key.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/febcfc9c0575fe9c26e588570929f2d64b6aca45/src/key.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.cpp?ref=febcfc9c0575fe9c26e588570929f2d64b6aca45",
        "patch": "@@ -592,6 +592,12 @@ bool CPoint::setBytes(const std::vector<unsigned char> &vchBytes)\n     return true;\n }\n \n+// Initialize from octets stream\n+bool CPoint::setPubKey(const CPubKey &vchPubKey)\n+{\n+    return setBytes(vchPubKey.Raw());\n+}\n+\n // Serialize to octets stream\n bool CPoint::getBytes(std::vector<unsigned char> &vchBytes)\n {\n@@ -666,7 +672,7 @@ void CMalleablePubKey::GetVariant(CPubKey &R, CPubKey &vchPubKeyVariant)\n     EC_KEY_free(eckey);\n \n     CPoint point;\n-    if (!point.setBytes(pubKeyL.Raw())) {\n+    if (!point.setPubKey(pubKeyL)) {\n         throw key_error(\"CMalleablePubKey::GetVariant() : Unable to decode L value\");\n     }\n \n@@ -683,7 +689,7 @@ void CMalleablePubKey::GetVariant(CPubKey &R, CPubKey &vchPubKeyVariant)\n     bnHash.setuint160(Hash160(vchLr));\n \n     CPoint pointH;\n-    pointH.setBytes(pubKeyH.Raw());\n+    pointH.setPubKey(pubKeyH);\n \n     CPoint P;\n     // Calculate P = Hash(L*r)*G + H\n@@ -699,7 +705,7 @@ void CMalleablePubKey::GetVariant(CPubKey &R, CPubKey &vchPubKeyVariant)\n     vchPubKeyVariant = CPubKey(vchResult);\n }\n \n-std::string CMalleablePubKey::ToString()\n+std::string CMalleablePubKey::ToString() const\n {\n     CDataStream ssKey(SER_NETWORK, PROTOCOL_VERSION);\n     ssKey << *this;\n@@ -789,7 +795,7 @@ bool CMalleableKey::SetSecrets(const CSecret &pvchSecretL, const CSecret &pvchSe\n     Reset();\n     CKey L, H;\n \n-    if (!L.SetSecret(pvchSecretL, true) || !H.SetSecret(pvchSecretH, true))\n+    if (pvchSecretL.size() != 32 || !pvchSecretH.size() != 32 || !L.SetSecret(pvchSecretL, true) || !H.SetSecret(pvchSecretH, true))\n     {\n         nVersion = 0;\n         return false;\n@@ -821,7 +827,7 @@ CMalleablePubKey CMalleableKey::GetMalleablePubKey() const\n }\n \n // Check ownership\n-bool CMalleableKey::CheckKeyVariant(const CPubKey &R, const CPubKey &vchPubKeyVariant)\n+bool CMalleableKey::CheckKeyVariant(const CPubKey &R, const CPubKey &vchPubKeyVariant) const\n {\n     if (IsNull()) {\n         throw key_error(\"CMalleableKey::CheckKeyVariant() : Attempting to run on NULL key object.\");\n@@ -836,7 +842,7 @@ bool CMalleableKey::CheckKeyVariant(const CPubKey &R, const CPubKey &vchPubKeyVa\n     }\n \n     CPoint point_R;\n-    if (!point_R.setBytes(R.Raw())) {\n+    if (!point_R.setPubKey(R)) {\n         throw key_error(\"CMalleableKey::CheckKeyVariant() : Unable to decode R value\");\n     }\n \n@@ -845,12 +851,12 @@ bool CMalleableKey::CheckKeyVariant(const CPubKey &R, const CPubKey &vchPubKeyVa\n     std::vector<unsigned char> vchPubKeyH = H.GetPubKey().Raw();\n \n     CPoint point_H;\n-    if (!point_H.setBytes(vchPubKeyH)) {\n+    if (!point_H.setPubKey(vchPubKeyH)) {\n         throw key_error(\"CMalleableKey::CheckKeyVariant() : Unable to decode H value\");\n     }\n \n     CPoint point_P;\n-    if (!point_P.setBytes(vchPubKeyVariant.Raw())) {\n+    if (!point_P.setPubKey(vchPubKeyVariant)) {\n         throw key_error(\"CMalleableKey::CheckKeyVariant() : Unable to decode P value\");\n     }\n \n@@ -891,7 +897,7 @@ bool CMalleableKey::CheckKeyVariant(const CPubKey &R, const CPubKey &vchPubKeyVa\n }\n \n // Check ownership and restore private key\n-bool CMalleableKey::CheckKeyVariant(const CPubKey &R, const CPubKey &vchPubKeyVariant, CKey &privKeyVariant)\n+bool CMalleableKey::CheckKeyVariant(const CPubKey &R, const CPubKey &vchPubKeyVariant, CKey &privKeyVariant) const\n {\n     if (IsNull()) {\n         throw key_error(\"CMalleableKey::CheckKeyVariant() : Attempting to run on NULL key object.\");\n@@ -906,7 +912,7 @@ bool CMalleableKey::CheckKeyVariant(const CPubKey &R, const CPubKey &vchPubKeyVa\n     }\n \n     CPoint point_R;\n-    if (!point_R.setBytes(R.Raw())) {\n+    if (!point_R.setPubKey(R)) {\n         throw key_error(\"CMalleableKey::CheckKeyVariant() : Unable to decode R value\");\n     }\n \n@@ -915,12 +921,12 @@ bool CMalleableKey::CheckKeyVariant(const CPubKey &R, const CPubKey &vchPubKeyVa\n     std::vector<unsigned char> vchPubKeyH = H.GetPubKey().Raw();\n \n     CPoint point_H;\n-    if (!point_H.setBytes(vchPubKeyH)) {\n+    if (!point_H.setPubKey(vchPubKeyH)) {\n         throw key_error(\"CMalleableKey::CheckKeyVariant() : Unable to decode H value\");\n     }\n \n     CPoint point_P;\n-    if (!point_P.setBytes(vchPubKeyVariant.Raw())) {\n+    if (!point_P.setPubKey(vchPubKeyVariant)) {\n         throw key_error(\"CMalleableKey::CheckKeyVariant() : Unable to decode P value\");\n     }\n \n@@ -970,7 +976,7 @@ bool CMalleableKey::CheckKeyVariant(const CPubKey &R, const CPubKey &vchPubKeyVa\n     return true;\n }\n \n-std::string CMalleableKey::ToString()\n+std::string CMalleableKey::ToString() const\n {\n     CDataStream ssKey(SER_NETWORK, PROTOCOL_VERSION);\n     ssKey << *this;\n@@ -996,10 +1002,17 @@ bool CMalleableKey::SetString(const std::string& strMutableKey)\n \n CMalleableKeyView::CMalleableKeyView(const CMalleableKey &b)\n {\n+    if (b.vchSecretL.size() != 32)\n+        throw key_error(\"CMalleableKeyView::CMalleableKeyView() : L size must be 32 bytes\");\n+\n+    if (b.vchSecretH.size() != 32)\n+        throw key_error(\"CMalleableKeyView::CMalleableKeyView() : L size must be 32 bytes\");\n+\n     vchSecretL = b.vchSecretL;\n \n     CKey H;\n     H.SetSecret(b.vchSecretH, true);\n+\n     vchPubKeyH = H.GetPubKey().Raw();\n     nVersion = b.nVersion;\n }\n@@ -1042,7 +1055,7 @@ CMalleablePubKey CMalleableKeyView::GetMalleablePubKey() const\n }\n \n // Check ownership\n-bool CMalleableKeyView::CheckKeyVariant(const CPubKey &R, const CPubKey &vchPubKeyVariant)\n+bool CMalleableKeyView::CheckKeyVariant(const CPubKey &R, const CPubKey &vchPubKeyVariant) const\n {\n     if (!R.IsValid()) {\n         throw key_error(\"CMalleableKeyView::CheckKeyVariant() : R is invalid\");\n@@ -1053,17 +1066,17 @@ bool CMalleableKeyView::CheckKeyVariant(const CPubKey &R, const CPubKey &vchPubK\n     }\n \n     CPoint point_R;\n-    if (!point_R.setBytes(R.Raw())) {\n+    if (!point_R.setPubKey(R)) {\n         throw key_error(\"CMalleableKeyView::CheckKeyVariant() : Unable to decode R value\");\n     }\n \n     CPoint point_H;\n-    if (!point_H.setBytes(vchPubKeyH)) {\n+    if (!point_H.setPubKey(vchPubKeyH)) {\n         throw key_error(\"CMalleableKeyView::CheckKeyVariant() : Unable to decode H value\");\n     }\n \n     CPoint point_P;\n-    if (!point_P.setBytes(vchPubKeyVariant.Raw())) {\n+    if (!point_P.setPubKey(vchPubKeyVariant)) {\n         throw key_error(\"CMalleableKeyView::CheckKeyVariant() : Unable to decode P value\");\n     }\n \n@@ -1103,7 +1116,7 @@ bool CMalleableKeyView::CheckKeyVariant(const CPubKey &R, const CPubKey &vchPubK\n     return true;\n }\n \n-std::string CMalleableKeyView::ToString()\n+std::string CMalleableKeyView::ToString() const\n {\n     CDataStream ssKey(SER_NETWORK, PROTOCOL_VERSION);\n     ssKey << *this;"
      },
      {
        "sha": "a829834f844b511186ff641a703ca771db2d82e3",
        "filename": "src/key.h",
        "status": "modified",
        "additions": 12,
        "deletions": 7,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/febcfc9c0575fe9c26e588570929f2d64b6aca45/src/key.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/febcfc9c0575fe9c26e588570929f2d64b6aca45/src/key.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.h?ref=febcfc9c0575fe9c26e588570929f2d64b6aca45",
        "patch": "@@ -191,6 +191,9 @@ class CPoint\n     // Initialize from octets stream\n     bool setBytes(const std::vector<unsigned char> &vchBytes);\n \n+    // Initialize from pubkey\n+    bool setPubKey(const CPubKey &vchPubKey);\n+\n     // Serialize to octets stream\n     bool getBytes(std::vector<unsigned char> &vchBytes);\n \n@@ -233,7 +236,7 @@ class CMalleablePubKey\n     bool operator==(const CMalleablePubKey &b);\n     bool operator!=(const CMalleablePubKey &b) { return !(*this == b); }\n \n-    std::string ToString();\n+    std::string ToString() const;\n     bool SetString(const std::string& strMalleablePubKey);\n     uint256 GetID() const;\n \n@@ -267,7 +270,7 @@ class CMalleableKey\n         READWRITE(vchSecretH);\n     )\n \n-    std::string ToString();\n+    std::string ToString() const;\n     bool SetString(const std::string& strMalleablePubKey);\n \n     void Reset();\n@@ -277,16 +280,16 @@ class CMalleableKey\n     void GetSecrets(CSecret &pvchSecretL, CSecret &pvchSecretH) const;\n \n     CMalleablePubKey GetMalleablePubKey() const;\n-    bool CheckKeyVariant(const CPubKey &R, const CPubKey &vchPubKeyVariant);\n-    bool CheckKeyVariant(const CPubKey &R, const CPubKey &vchPubKeyVariant, CKey &privKeyVariant);\n+    bool CheckKeyVariant(const CPubKey &R, const CPubKey &vchPubKeyVariant) const;\n+    bool CheckKeyVariant(const CPubKey &R, const CPubKey &vchPubKeyVariant, CKey &privKeyVariant) const;\n };\n \n class CMalleableKeyView\n {\n private:\n     unsigned char nVersion;\n     CSecret vchSecretL;\n-    std::vector<unsigned char> vchPubKeyH;\n+    CPubKey vchPubKeyH;\n \n     static const unsigned char CURRENT_VERSION = 1;\n \n@@ -308,11 +311,13 @@ class CMalleableKeyView\n     )\n \n     bool IsNull() const;\n-    std::string ToString();\n+    std::string ToString() const;\n     bool SetString(const std::string& strMalleablePubKey);\n \n     CMalleablePubKey GetMalleablePubKey() const;\n-    bool CheckKeyVariant(const CPubKey &R, const CPubKey &vchPubKeyVariant);\n+    bool CheckKeyVariant(const CPubKey &R, const CPubKey &vchPubKeyVariant) const;\n+\n+    bool operator <(const CMalleableKeyView& kv) const { return vchPubKeyH.GetID() < kv.vchPubKeyH.GetID(); }\n };\n \n #endif"
      },
      {
        "sha": "fdba2915fec0145e5efd497bbd9ddb4084e99e1d",
        "filename": "src/keystore.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/febcfc9c0575fe9c26e588570929f2d64b6aca45/src/keystore.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/febcfc9c0575fe9c26e588570929f2d64b6aca45/src/keystore.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/keystore.cpp?ref=febcfc9c0575fe9c26e588570929f2d64b6aca45",
        "patch": "@@ -111,9 +111,8 @@ CCryptoKeyStore::CCryptoKeyStore() : fUseCrypto(false)\n     else\n         malleableKey.MakeNewKeys();\n \n-    CMalleableKeyView keyView(malleableKey);\n-\n-    malleableKeyPair = std::pair<CMalleableKeyView, CMalleableKey>(keyView, malleableKey);\n+    const CMalleableKeyView& keyView(malleableKey);\n+    mapMalleableKeys[keyView] = malleableKey;\n }\n \n bool CCryptoKeyStore::SetCrypted()"
      },
      {
        "sha": "7d49735db9d22bdaedbb572f09376ad5acdbabf9",
        "filename": "src/keystore.h",
        "status": "modified",
        "additions": 27,
        "deletions": 8,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/febcfc9c0575fe9c26e588570929f2d64b6aca45/src/keystore.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/febcfc9c0575fe9c26e588570929f2d64b6aca45/src/keystore.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/keystore.h?ref=febcfc9c0575fe9c26e588570929f2d64b6aca45",
        "patch": "@@ -67,21 +67,23 @@ class CKeyStore\n \n     virtual bool CheckOwnership(const CPubKey &pubKeyVariant, const CPubKey &R) const =0;\n     virtual bool CreatePrivKey(const CPubKey &pubKeyVariant, const CPubKey &R, CKey &privKey) const =0;\n+    virtual void ListMalleablePubKeys(std::list<CMalleablePubKey> &malleablePubKeyList) const =0;\n };\n \n typedef std::map<CKeyID, std::pair<CSecret, bool> > KeyMap;\n typedef std::map<CScriptID, CScript > ScriptMap;\n typedef std::set<CScript> WatchOnlySet;\n-typedef std::pair<CMalleableKeyView, CMalleableKey> MalleableKeyPair;\n+typedef std::map<CMalleableKeyView, CMalleableKey> MalleableKeyMap;\n \n /** Basic key store, that keeps keys in an address->secret map */\n class CBasicKeyStore : public CKeyStore\n {\n protected:\n     KeyMap mapKeys;\n+    MalleableKeyMap mapMalleableKeys;\n+\n     ScriptMap mapScripts;\n     WatchOnlySet setWatchOnly;\n-    MalleableKeyPair malleableKeyPair;\n \n public:\n     bool AddKey(const CKey& key);\n@@ -132,22 +134,39 @@ class CBasicKeyStore : public CKeyStore\n \n     bool CheckOwnership(const CPubKey &pubKeyVariant, const CPubKey &R) const\n     {\n-        bool result;\n         {\n             LOCK(cs_KeyStore);\n-            result = const_cast<CBasicKeyStore*>(this)->malleableKeyPair.first.CheckKeyVariant(R, pubKeyVariant);\n+            for (MalleableKeyMap::const_iterator mi = mapMalleableKeys.begin(); mi != mapMalleableKeys.end(); mi++)\n+            {\n+                if (mi->first.CheckKeyVariant(R, pubKeyVariant))\n+                    return true;\n+            }\n         }\n-        return result;\n+        return false;\n     }\n \n     bool CreatePrivKey(const CPubKey &pubKeyVariant, const CPubKey &R, CKey &privKey) const\n     {\n-        bool result;\n         {\n             LOCK(cs_KeyStore);\n-            result = const_cast<CBasicKeyStore*>(this)->malleableKeyPair.second.CheckKeyVariant(R, pubKeyVariant, privKey);\n+            for (MalleableKeyMap::const_iterator mi = mapMalleableKeys.begin(); mi != mapMalleableKeys.end(); mi++)\n+            {\n+                if (mi->second.CheckKeyVariant(R, pubKeyVariant, privKey))\n+                    return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    void ListMalleablePubKeys(std::list<CMalleablePubKey> &malleablePubKeyList) const\n+    {\n+        malleablePubKeyList.clear();\n+\n+        {\n+            LOCK(cs_KeyStore);\n+            for (MalleableKeyMap::const_iterator mi = mapMalleableKeys.begin(); mi != mapMalleableKeys.end(); mi++)\n+                malleablePubKeyList.push_back(mi->first.GetMalleablePubKey());\n         }\n-        return result;\n     }\n };\n "
      },
      {
        "sha": "6a7a3b101a544f1757dd869f8569391b7f338d1e",
        "filename": "src/rpcwallet.cpp",
        "status": "modified",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/febcfc9c0575fe9c26e588570929f2d64b6aca45/src/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/febcfc9c0575fe9c26e588570929f2d64b6aca45/src/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.cpp?ref=febcfc9c0575fe9c26e588570929f2d64b6aca45",
        "patch": "@@ -1934,5 +1934,24 @@ Value adjustmalleablepubkey(const Array& params, bool fHelp)\n     result.push_back(Pair(\"KeyVariantID\", CBitcoinAddress(vchPubKeyVariant.GetID()).ToString()));\n \n \n+    return result;\n+}\n+\n+Value listmalleablepubkeys(const Array& params, bool fHelp)\n+{\n+    if (fHelp || params.size() != 0)\n+        throw runtime_error(\n+            \"listmalleablepubkeys\\n\"\n+            \"Get list of malleable public keys.\\n\");\n+\n+    std::list<CMalleablePubKey> keyList;\n+    pwalletMain->ListMalleablePubKeys(keyList);\n+\n+    Array result;\n+    BOOST_FOREACH(const CMalleablePubKey &key, keyList)\n+    {\n+        result.push_back(key.ToString());\n+    }\n+\n     return result;\n }"
      }
    ]
  },
  {
    "sha": "05dcb40ecb2e2f47a92b54cfb133170cf2a56f8a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNWRjYjQwZWNiMmUyZjQ3YTkyYjU0Y2ZiMTMzMTcwY2YyYTU2Zjhh",
    "commit": {
      "author": {
        "name": "0xDEADFACE",
        "email": "masmfan@gmail.com",
        "date": "2016-02-13T22:52:28Z"
      },
      "committer": {
        "name": "0xDEADFACE",
        "email": "masmfan@gmail.com",
        "date": "2016-02-13T22:52:28Z"
      },
      "message": "Merge pull request #272 from svost/V668\n\nFix V668 PVS Studio - deal with pointer and NULL",
      "tree": {
        "sha": "adf3b8a7e192739f6e165f3f2832054f8caa2cc1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/adf3b8a7e192739f6e165f3f2832054f8caa2cc1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/05dcb40ecb2e2f47a92b54cfb133170cf2a56f8a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/05dcb40ecb2e2f47a92b54cfb133170cf2a56f8a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/05dcb40ecb2e2f47a92b54cfb133170cf2a56f8a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/05dcb40ecb2e2f47a92b54cfb133170cf2a56f8a/comments",
    "author": {
      "login": "0xDEADFACE",
      "id": 6503509,
      "node_id": "MDQ6VXNlcjY1MDM1MDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6503509?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xDEADFACE",
      "html_url": "https://github.com/0xDEADFACE",
      "followers_url": "https://api.github.com/users/0xDEADFACE/followers",
      "following_url": "https://api.github.com/users/0xDEADFACE/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xDEADFACE/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xDEADFACE/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xDEADFACE/subscriptions",
      "organizations_url": "https://api.github.com/users/0xDEADFACE/orgs",
      "repos_url": "https://api.github.com/users/0xDEADFACE/repos",
      "events_url": "https://api.github.com/users/0xDEADFACE/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xDEADFACE/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "0xDEADFACE",
      "id": 6503509,
      "node_id": "MDQ6VXNlcjY1MDM1MDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6503509?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xDEADFACE",
      "html_url": "https://github.com/0xDEADFACE",
      "followers_url": "https://api.github.com/users/0xDEADFACE/followers",
      "following_url": "https://api.github.com/users/0xDEADFACE/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xDEADFACE/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xDEADFACE/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xDEADFACE/subscriptions",
      "organizations_url": "https://api.github.com/users/0xDEADFACE/orgs",
      "repos_url": "https://api.github.com/users/0xDEADFACE/repos",
      "events_url": "https://api.github.com/users/0xDEADFACE/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xDEADFACE/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "febcfc9c0575fe9c26e588570929f2d64b6aca45",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/febcfc9c0575fe9c26e588570929f2d64b6aca45",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/febcfc9c0575fe9c26e588570929f2d64b6aca45"
      },
      {
        "sha": "27e9d00d5d8043ea07311e9f3837bb9f5e906082",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/27e9d00d5d8043ea07311e9f3837bb9f5e906082",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/27e9d00d5d8043ea07311e9f3837bb9f5e906082"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "329105453122dabe323dd4076440fe3dc5c73903",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/05dcb40ecb2e2f47a92b54cfb133170cf2a56f8a/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/05dcb40ecb2e2f47a92b54cfb133170cf2a56f8a/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=05dcb40ecb2e2f47a92b54cfb133170cf2a56f8a",
        "patch": "@@ -2137,7 +2137,7 @@ bool CBlock::AddToBlockIndex(unsigned int nFile, unsigned int nBlockPos)\n         return error(\"AddToBlockIndex() : %s already exists\", hash.ToString().substr(0,20).c_str());\n \n     // Construct new block index object\n-    CBlockIndex* pindexNew = new CBlockIndex(nFile, nBlockPos, *this);\n+    CBlockIndex* pindexNew = new(nothrow) CBlockIndex(nFile, nBlockPos, *this);\n     if (!pindexNew)\n         return error(\"AddToBlockIndex() : new CBlockIndex failed\");\n     pindexNew->phashBlock = &hash;"
      },
      {
        "sha": "5ce59b5aa41ec2cc246926dbc73cf0e7bdcb04cc",
        "filename": "src/txdb-bdb.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/05dcb40ecb2e2f47a92b54cfb133170cf2a56f8a/src/txdb-bdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/05dcb40ecb2e2f47a92b54cfb133170cf2a56f8a/src/txdb-bdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txdb-bdb.cpp?ref=05dcb40ecb2e2f47a92b54cfb133170cf2a56f8a",
        "patch": "@@ -160,7 +160,7 @@ CBlockIndex static * InsertBlockIndex(uint256 hash)\n         return (*mi).second;\n \n     // Create new\n-    CBlockIndex* pindexNew = new CBlockIndex();\n+    CBlockIndex* pindexNew = new(nothrow) CBlockIndex();\n     if (!pindexNew)\n         throw runtime_error(\"LoadBlockIndex() : new CBlockIndex failed\");\n     mi = mapBlockIndex.insert(make_pair(hash, pindexNew)).first;"
      },
      {
        "sha": "97bf88cc38886ab60ded34813f200aad33b8d1e5",
        "filename": "src/txdb-leveldb.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/05dcb40ecb2e2f47a92b54cfb133170cf2a56f8a/src/txdb-leveldb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/05dcb40ecb2e2f47a92b54cfb133170cf2a56f8a/src/txdb-leveldb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txdb-leveldb.cpp?ref=05dcb40ecb2e2f47a92b54cfb133170cf2a56f8a",
        "patch": "@@ -325,7 +325,7 @@ static CBlockIndex *InsertBlockIndex(uint256 hash)\n         return (*mi).second;\n \n     // Create new\n-    CBlockIndex* pindexNew = new CBlockIndex();\n+    CBlockIndex* pindexNew = new(nothrow) CBlockIndex();\n     if (!pindexNew)\n         throw runtime_error(\"LoadBlockIndex() : new CBlockIndex failed\");\n     mi = mapBlockIndex.insert(make_pair(hash, pindexNew)).first;"
      },
      {
        "sha": "7fb43bc1b487e75c9bdb93c0dbc6fe0560313e45",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/05dcb40ecb2e2f47a92b54cfb133170cf2a56f8a/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/05dcb40ecb2e2f47a92b54cfb133170cf2a56f8a/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=05dcb40ecb2e2f47a92b54cfb133170cf2a56f8a",
        "patch": "@@ -331,7 +331,7 @@ string vstrprintf(const char *format, va_list ap)\n         if (p != buffer)\n             delete[] p;\n         limit *= 2;\n-        p = new char[limit];\n+        p = new(nothrow) char[limit];\n         if (p == NULL)\n             throw std::bad_alloc();\n     }"
      }
    ]
  },
  {
    "sha": "2fa437d0d0893758c86cc87537d25d3fc1833bbb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyZmE0MzdkMGQwODkzNzU4Yzg2Y2M4NzUzN2QyNWQzZmMxODMzYmJi",
    "commit": {
      "author": {
        "name": "0xDEADFACE",
        "email": "masmfan@gmail.com",
        "date": "2016-02-13T22:52:49Z"
      },
      "committer": {
        "name": "0xDEADFACE",
        "email": "masmfan@gmail.com",
        "date": "2016-02-13T22:52:49Z"
      },
      "message": "Merge pull request #273 from svost/includes\n\nReorganize includes a bit.",
      "tree": {
        "sha": "b0945f8e2d73f97c5676f0600d1e5b64af282b39",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b0945f8e2d73f97c5676f0600d1e5b64af282b39"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2fa437d0d0893758c86cc87537d25d3fc1833bbb",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2fa437d0d0893758c86cc87537d25d3fc1833bbb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2fa437d0d0893758c86cc87537d25d3fc1833bbb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2fa437d0d0893758c86cc87537d25d3fc1833bbb/comments",
    "author": {
      "login": "0xDEADFACE",
      "id": 6503509,
      "node_id": "MDQ6VXNlcjY1MDM1MDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6503509?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xDEADFACE",
      "html_url": "https://github.com/0xDEADFACE",
      "followers_url": "https://api.github.com/users/0xDEADFACE/followers",
      "following_url": "https://api.github.com/users/0xDEADFACE/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xDEADFACE/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xDEADFACE/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xDEADFACE/subscriptions",
      "organizations_url": "https://api.github.com/users/0xDEADFACE/orgs",
      "repos_url": "https://api.github.com/users/0xDEADFACE/repos",
      "events_url": "https://api.github.com/users/0xDEADFACE/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xDEADFACE/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "0xDEADFACE",
      "id": 6503509,
      "node_id": "MDQ6VXNlcjY1MDM1MDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6503509?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xDEADFACE",
      "html_url": "https://github.com/0xDEADFACE",
      "followers_url": "https://api.github.com/users/0xDEADFACE/followers",
      "following_url": "https://api.github.com/users/0xDEADFACE/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xDEADFACE/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xDEADFACE/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xDEADFACE/subscriptions",
      "organizations_url": "https://api.github.com/users/0xDEADFACE/orgs",
      "repos_url": "https://api.github.com/users/0xDEADFACE/repos",
      "events_url": "https://api.github.com/users/0xDEADFACE/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xDEADFACE/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "05dcb40ecb2e2f47a92b54cfb133170cf2a56f8a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/05dcb40ecb2e2f47a92b54cfb133170cf2a56f8a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/05dcb40ecb2e2f47a92b54cfb133170cf2a56f8a"
      },
      {
        "sha": "8995f8ed6148d7cf07868524456f7a2b9bd8ffdd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8995f8ed6148d7cf07868524456f7a2b9bd8ffdd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8995f8ed6148d7cf07868524456f7a2b9bd8ffdd"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 0,
      "deletions": 6
    },
    "files": [
      {
        "sha": "f2a86ddd5f5e2bf4d8ecc07391bb8233c8aeea84",
        "filename": "src/ecies.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2fa437d0d0893758c86cc87537d25d3fc1833bbb/src/ecies.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2fa437d0d0893758c86cc87537d25d3fc1833bbb/src/ecies.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/ecies.cpp?ref=2fa437d0d0893758c86cc87537d25d3fc1833bbb",
        "patch": "@@ -11,7 +11,6 @@\n #include \"ies.h\"\n #include <iostream>\n #include <vector>\n-#include <openssl/ecdh.h>\n \n #define SET_ERROR(string) \\\n     sprintf(error, \"%s %s:%d\", (string), __FILE__, __LINE__)"
      },
      {
        "sha": "fe8573e532a81b9dc9a392c0369fb2c1bfeb494e",
        "filename": "src/key.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2fa437d0d0893758c86cc87537d25d3fc1833bbb/src/key.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2fa437d0d0893758c86cc87537d25d3fc1833bbb/src/key.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.cpp?ref=2fa437d0d0893758c86cc87537d25d3fc1833bbb",
        "patch": "@@ -6,12 +6,9 @@\n \n #include <openssl/ecdsa.h>\n #include <openssl/obj_mac.h>\n-#include <openssl/ssl.h>\n-#include <openssl/ecdh.h>\n \n #include \"key.h\"\n #include \"base58.h\"\n-#include \"ies.h\"\n \n // Generate a private key from just the secret parameter\n int EC_KEY_regenerate_key(EC_KEY *eckey, BIGNUM *priv_key)"
      },
      {
        "sha": "fd40d5fc426205baeb9478958a8fdc8255acb171",
        "filename": "src/rpcrawtransaction.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2fa437d0d0893758c86cc87537d25d3fc1833bbb/src/rpcrawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2fa437d0d0893758c86cc87537d25d3fc1833bbb/src/rpcrawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcrawtransaction.cpp?ref=2fa437d0d0893758c86cc87537d25d3fc1833bbb",
        "patch": "@@ -12,8 +12,6 @@\n #include \"main.h\"\n #include \"net.h\"\n #include \"wallet.h\"\n-#include \"script.h\"\n-#include \"util.h\"\n \n using namespace std;\n using namespace boost;"
      }
    ]
  },
  {
    "sha": "0b47046733d065cd174c9c17268e76b8d854e280",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowYjQ3MDQ2NzMzZDA2NWNkMTc0YzljMTcyNjhlNzZiOGQ4NTRlMjgw",
    "commit": {
      "author": {
        "name": "0xDEADFACE",
        "email": "masmfan@gmail.com",
        "date": "2016-02-13T22:53:43Z"
      },
      "committer": {
        "name": "0xDEADFACE",
        "email": "masmfan@gmail.com",
        "date": "2016-02-13T22:53:43Z"
      },
      "message": "Merge pull request #274 from svost/patch\n\nFix V595 PVS Studio - the pointer was utilized before it was verified\u2026",
      "tree": {
        "sha": "b979874180f3ca3bbdf41e94dde237c197d6ebf2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b979874180f3ca3bbdf41e94dde237c197d6ebf2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0b47046733d065cd174c9c17268e76b8d854e280",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0b47046733d065cd174c9c17268e76b8d854e280",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0b47046733d065cd174c9c17268e76b8d854e280",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0b47046733d065cd174c9c17268e76b8d854e280/comments",
    "author": {
      "login": "0xDEADFACE",
      "id": 6503509,
      "node_id": "MDQ6VXNlcjY1MDM1MDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6503509?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xDEADFACE",
      "html_url": "https://github.com/0xDEADFACE",
      "followers_url": "https://api.github.com/users/0xDEADFACE/followers",
      "following_url": "https://api.github.com/users/0xDEADFACE/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xDEADFACE/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xDEADFACE/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xDEADFACE/subscriptions",
      "organizations_url": "https://api.github.com/users/0xDEADFACE/orgs",
      "repos_url": "https://api.github.com/users/0xDEADFACE/repos",
      "events_url": "https://api.github.com/users/0xDEADFACE/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xDEADFACE/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "0xDEADFACE",
      "id": 6503509,
      "node_id": "MDQ6VXNlcjY1MDM1MDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6503509?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xDEADFACE",
      "html_url": "https://github.com/0xDEADFACE",
      "followers_url": "https://api.github.com/users/0xDEADFACE/followers",
      "following_url": "https://api.github.com/users/0xDEADFACE/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xDEADFACE/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xDEADFACE/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xDEADFACE/subscriptions",
      "organizations_url": "https://api.github.com/users/0xDEADFACE/orgs",
      "repos_url": "https://api.github.com/users/0xDEADFACE/repos",
      "events_url": "https://api.github.com/users/0xDEADFACE/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xDEADFACE/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2fa437d0d0893758c86cc87537d25d3fc1833bbb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2fa437d0d0893758c86cc87537d25d3fc1833bbb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2fa437d0d0893758c86cc87537d25d3fc1833bbb"
      },
      {
        "sha": "4703e1af35388bd7b1aba61a020edc2b327e06d3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4703e1af35388bd7b1aba61a020edc2b327e06d3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4703e1af35388bd7b1aba61a020edc2b327e06d3"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 7,
      "deletions": 7
    },
    "files": [
      {
        "sha": "39fe2d7d1b57071a329e0c741d2f994fa4dae8ba",
        "filename": "src/ecies.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0b47046733d065cd174c9c17268e76b8d854e280/src/ecies.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0b47046733d065cd174c9c17268e76b8d854e280/src/ecies.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/ecies.cpp?ref=0b47046733d065cd174c9c17268e76b8d854e280",
        "patch": "@@ -272,16 +272,16 @@ static int store_mac_tag(const ies_ctx_t *ctx, const unsigned char *envelope_key\n \n cryptogram_t * ecies_encrypt(const ies_ctx_t *ctx, const unsigned char *data, size_t length, char *error) {\n \n-    const size_t block_length = EVP_CIPHER_block_size(ctx->cipher);\n-    const size_t mac_length = EVP_MD_size(ctx->md);\n-    cryptogram_t *cryptogram = NULL;\n-    unsigned char *envelope_key = NULL;\n-\n     if (!ctx || !data || !length) {\n         SET_ERROR(\"Invalid arguments\");\n         return NULL;\n     }\n \n+    const size_t block_length = EVP_CIPHER_block_size(ctx->cipher);\n+    const size_t mac_length = EVP_MD_size(ctx->md);\n+    cryptogram_t *cryptogram = NULL;\n+    unsigned char *envelope_key = NULL;\n+\n     if (block_length == 0 || block_length > EVP_MAX_BLOCK_LENGTH) {\n         SET_ERROR(\"Derived block size is incorrect\");\n         return NULL;"
      },
      {
        "sha": "68ae6a2c2d15d93c468c563a41df02a0e7de0f75",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0b47046733d065cd174c9c17268e76b8d854e280/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0b47046733d065cd174c9c17268e76b8d854e280/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=0b47046733d065cd174c9c17268e76b8d854e280",
        "patch": "@@ -1189,11 +1189,11 @@ const CBlockIndex* GetLastBlockIndex(const CBlockIndex* pindex, bool fProofOfSta\n \n unsigned int GetNextTargetRequired(const CBlockIndex* pindexLast, bool fProofOfStake)\n {\n-    CBigNum bnTargetLimit = !fProofOfStake ? bnProofOfWorkLimit : GetProofOfStakeLimit(pindexLast->nHeight, pindexLast->nTime);\n-\n     if (pindexLast == NULL)\n         return bnTargetLimit.GetCompact(); // genesis block\n \n+    CBigNum bnTargetLimit = !fProofOfStake ? bnProofOfWorkLimit : GetProofOfStakeLimit(pindexLast->nHeight, pindexLast->nTime);\n+\n     const CBlockIndex* pindexPrev = GetLastBlockIndex(pindexLast, fProofOfStake);\n     if (pindexPrev->pprev == NULL)\n         return bnTargetLimit.GetCompact(); // first block"
      }
    ]
  },
  {
    "sha": "132c462454743017778dc71d4e508cf8dcbf24cc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxMzJjNDYyNDU0NzQzMDE3Nzc4ZGM3MWQ0ZTUwOGNmOGRjYmYyNGNj",
    "commit": {
      "author": {
        "name": "0xDEADFACE",
        "email": "masmfan@gmail.com",
        "date": "2016-02-14T03:20:49Z"
      },
      "committer": {
        "name": "0xDEADFACE",
        "email": "masmfan@gmail.com",
        "date": "2016-02-14T03:20:49Z"
      },
      "message": "RPC: Add new methods suitable for malleable key pairs management;\nSave generated key pairs in the wallet.dat.\n\nDue to lack of time for a proper debugging the generation of malleable keys has been disabled on the main network. Of course it will be enabled in the near future.",
      "tree": {
        "sha": "bb43f60b8f2b55c5c6cc08079352ac8bb6168da1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bb43f60b8f2b55c5c6cc08079352ac8bb6168da1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/132c462454743017778dc71d4e508cf8dcbf24cc",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/132c462454743017778dc71d4e508cf8dcbf24cc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/132c462454743017778dc71d4e508cf8dcbf24cc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/132c462454743017778dc71d4e508cf8dcbf24cc/comments",
    "author": {
      "login": "0xDEADFACE",
      "id": 6503509,
      "node_id": "MDQ6VXNlcjY1MDM1MDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6503509?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xDEADFACE",
      "html_url": "https://github.com/0xDEADFACE",
      "followers_url": "https://api.github.com/users/0xDEADFACE/followers",
      "following_url": "https://api.github.com/users/0xDEADFACE/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xDEADFACE/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xDEADFACE/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xDEADFACE/subscriptions",
      "organizations_url": "https://api.github.com/users/0xDEADFACE/orgs",
      "repos_url": "https://api.github.com/users/0xDEADFACE/repos",
      "events_url": "https://api.github.com/users/0xDEADFACE/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xDEADFACE/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "0xDEADFACE",
      "id": 6503509,
      "node_id": "MDQ6VXNlcjY1MDM1MDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6503509?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xDEADFACE",
      "html_url": "https://github.com/0xDEADFACE",
      "followers_url": "https://api.github.com/users/0xDEADFACE/followers",
      "following_url": "https://api.github.com/users/0xDEADFACE/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xDEADFACE/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xDEADFACE/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xDEADFACE/subscriptions",
      "organizations_url": "https://api.github.com/users/0xDEADFACE/orgs",
      "repos_url": "https://api.github.com/users/0xDEADFACE/repos",
      "events_url": "https://api.github.com/users/0xDEADFACE/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xDEADFACE/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "febcfc9c0575fe9c26e588570929f2d64b6aca45",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/febcfc9c0575fe9c26e588570929f2d64b6aca45",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/febcfc9c0575fe9c26e588570929f2d64b6aca45"
      }
    ],
    "stats": {
      "total": 290,
      "additions": 249,
      "deletions": 41
    },
    "files": [
      {
        "sha": "c6b64fe6c0a80089976db1b72667e40e1608fb5f",
        "filename": "src/bitcoinrpc.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/132c462454743017778dc71d4e508cf8dcbf24cc/src/bitcoinrpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/132c462454743017778dc71d4e508cf8dcbf24cc/src/bitcoinrpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoinrpc.cpp?ref=132c462454743017778dc71d4e508cf8dcbf24cc",
        "patch": "@@ -319,7 +319,8 @@ static const CRPCCommand vRPCCommands[] =\n     { \"newmalleablekey\",        &newmalleablekey,        false,  false},\n     { \"adjustmalleablekey\",     &adjustmalleablekey,     false,  false},\n     { \"adjustmalleablepubkey\",  &adjustmalleablepubkey,  false,  false},\n-    { \"listmalleablepubkeys\",   &listmalleablepubkeys,   false,  false},\n+    { \"listmalleableviews\",     &listmalleableviews,     false,  false},\n+    { \"dumpmalleablekey\",       &dumpmalleablekey,       false,  false},\n     { \"sendalert\",              &sendalert,              false,  false},\n };\n "
      },
      {
        "sha": "abadd8bc83a8e020db854c7fd79b299a05ad0263",
        "filename": "src/bitcoinrpc.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/132c462454743017778dc71d4e508cf8dcbf24cc/src/bitcoinrpc.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/132c462454743017778dc71d4e508cf8dcbf24cc/src/bitcoinrpc.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoinrpc.h?ref=132c462454743017778dc71d4e508cf8dcbf24cc",
        "patch": "@@ -209,7 +209,8 @@ extern json_spirit::Value mergecoins(const json_spirit::Array& params, bool fHel\n extern json_spirit::Value newmalleablekey(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value adjustmalleablekey(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value adjustmalleablepubkey(const json_spirit::Array& params, bool fHelp);\n-extern json_spirit::Value listmalleablepubkeys(const json_spirit::Array& params, bool fHelp);\n+extern json_spirit::Value listmalleableviews(const json_spirit::Array& params, bool fHelp);\n+extern json_spirit::Value dumpmalleablekey(const json_spirit::Array& params, bool fHelp);\n \n extern json_spirit::Value getrawtransaction(const json_spirit::Array& params, bool fHelp); // in rcprawtransaction.cpp\n extern json_spirit::Value listunspent(const json_spirit::Array& params, bool fHelp);"
      },
      {
        "sha": "c37b1023fdf3d6bbf62986e48b92cb808ccae868",
        "filename": "src/key.cpp",
        "status": "modified",
        "additions": 30,
        "deletions": 0,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/132c462454743017778dc71d4e508cf8dcbf24cc/src/key.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/132c462454743017778dc71d4e508cf8dcbf24cc/src/key.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.cpp?ref=132c462454743017778dc71d4e508cf8dcbf24cc",
        "patch": "@@ -714,6 +714,15 @@ std::string CMalleablePubKey::ToString() const\n     return EncodeBase58Check(vch);\n }\n \n+std::vector<unsigned char> CMalleablePubKey::Raw() const\n+{\n+    CDataStream ssKey(SER_NETWORK, PROTOCOL_VERSION);\n+    ssKey << *this;\n+    std::vector<unsigned char> vch(ssKey.begin(), ssKey.end());\n+\n+    return vch;\n+}\n+\n bool CMalleablePubKey::SetString(const std::string& strMalleablePubKey)\n {\n     std::vector<unsigned char> vchTemp;\n@@ -774,12 +783,14 @@ CMalleableKey::CMalleableKey(const CSecret &L, const CSecret &H)\n     SetSecrets(L, H);\n }\n \n+/*\n CMalleableKey& CMalleableKey::operator=(const CMalleableKey &b)\n {\n     SetSecrets(b.vchSecretL, b.vchSecretH);\n \n     return (*this);\n }\n+*/\n \n CMalleableKey::~CMalleableKey()\n {\n@@ -985,6 +996,15 @@ std::string CMalleableKey::ToString() const\n     return EncodeBase58Check(vch);\n }\n \n+std::vector<unsigned char> CMalleableKey::Raw() const\n+{\n+    CDataStream ssKey(SER_NETWORK, PROTOCOL_VERSION);\n+    ssKey << *this;\n+    std::vector<unsigned char> vch(ssKey.begin(), ssKey.end());\n+\n+    return vch;\n+}\n+\n bool CMalleableKey::SetString(const std::string& strMutableKey)\n {\n     std::vector<unsigned char> vchTemp;\n@@ -1138,6 +1158,16 @@ bool CMalleableKeyView::SetString(const std::string& strMutableKey)\n     return IsNull();\n }\n \n+std::vector<unsigned char> CMalleableKeyView::Raw() const\n+{\n+    CDataStream ssKey(SER_NETWORK, PROTOCOL_VERSION);\n+    ssKey << *this;\n+    std::vector<unsigned char> vch(ssKey.begin(), ssKey.end());\n+\n+    return vch;\n+}\n+\n+\n bool CMalleableKeyView::IsNull() const\n {\n     return nVersion != CURRENT_VERSION;"
      },
      {
        "sha": "1ce14f89bf051270f78addf30abeaf3e84f5da1e",
        "filename": "src/key.h",
        "status": "modified",
        "additions": 32,
        "deletions": 2,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/132c462454743017778dc71d4e508cf8dcbf24cc/src/key.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/132c462454743017778dc71d4e508cf8dcbf24cc/src/key.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.h?ref=132c462454743017778dc71d4e508cf8dcbf24cc",
        "patch": "@@ -235,10 +235,21 @@ class CMalleablePubKey\n \n     bool operator==(const CMalleablePubKey &b);\n     bool operator!=(const CMalleablePubKey &b) { return !(*this == b); }\n+    CMalleablePubKey& operator=(const CMalleablePubKey& mpk) {\n+        nVersion = mpk.nVersion;\n+        pubKeyL = mpk.pubKeyL;\n+        pubKeyH = mpk.pubKeyH;\n+        return *this;\n+    }\n \n     std::string ToString() const;\n     bool SetString(const std::string& strMalleablePubKey);\n-    uint256 GetID() const;\n+\n+    CKeyID GetID() const {\n+        return pubKeyL.GetID();\n+    }\n+\n+    std::vector<unsigned char> Raw() const;\n \n     CPubKey& GetL() { return pubKeyL; }\n     CPubKey& GetH() { return pubKeyH; }\n@@ -260,7 +271,6 @@ class CMalleableKey\n     CMalleableKey();\n     CMalleableKey(const CMalleableKey &b);\n     CMalleableKey(const CSecret &L, const CSecret &H);\n-    CMalleableKey& operator=(const CMalleableKey &b);\n     ~CMalleableKey();\n \n     IMPLEMENT_SERIALIZE(\n@@ -272,13 +282,23 @@ class CMalleableKey\n \n     std::string ToString() const;\n     bool SetString(const std::string& strMalleablePubKey);\n+    std::vector<unsigned char> Raw() const;\n+    CMalleableKey& operator=(const CMalleableKey& mk) {\n+        nVersion = mk.nVersion;\n+        vchSecretL = mk.vchSecretL;\n+        vchSecretH = mk.vchSecretH;\n+        return *this;\n+    }\n \n     void Reset();\n     void MakeNewKeys();\n     bool IsNull() const;\n     bool SetSecrets(const CSecret &pvchSecretL, const CSecret &pvchSecretH);\n     void GetSecrets(CSecret &pvchSecretL, CSecret &pvchSecretH) const;\n \n+    CKeyID GetID() const {\n+        return GetMalleablePubKey().GetID();\n+    }\n     CMalleablePubKey GetMalleablePubKey() const;\n     bool CheckKeyVariant(const CPubKey &R, const CPubKey &vchPubKeyVariant) const;\n     bool CheckKeyVariant(const CPubKey &R, const CPubKey &vchPubKeyVariant, CKey &privKeyVariant) const;\n@@ -313,7 +333,17 @@ class CMalleableKeyView\n     bool IsNull() const;\n     std::string ToString() const;\n     bool SetString(const std::string& strMalleablePubKey);\n+    std::vector<unsigned char> Raw() const;\n+    CMalleableKeyView& operator=(const CMalleableKeyView& mkv) {\n+        nVersion = mkv.nVersion;\n+        vchSecretL = mkv.vchSecretL;\n+        vchPubKeyH = mkv.vchPubKeyH;\n+        return *this;\n+    }\n \n+    CKeyID GetID() const {\n+        return GetMalleablePubKey().GetID();\n+    }\n     CMalleablePubKey GetMalleablePubKey() const;\n     bool CheckKeyVariant(const CPubKey &R, const CPubKey &vchPubKeyVariant) const;\n "
      },
      {
        "sha": "fdbecbabe873e281a89639f9c5731ab7a98b9341",
        "filename": "src/keystore.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 13,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/132c462454743017778dc71d4e508cf8dcbf24cc/src/keystore.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/132c462454743017778dc71d4e508cf8dcbf24cc/src/keystore.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/keystore.cpp?ref=132c462454743017778dc71d4e508cf8dcbf24cc",
        "patch": "@@ -29,6 +29,15 @@ bool CBasicKeyStore::AddKey(const CKey& key)\n     return true;\n }\n \n+bool CBasicKeyStore::AddMalleableKey(const CMalleableKey& mKey)\n+{\n+    {\n+        LOCK(cs_KeyStore);\n+        mapMalleableKeys[CMalleableKeyView(mKey)] = mKey;\n+    }\n+    return true;\n+}\n+\n bool CBasicKeyStore::AddCScript(const CScript& redeemScript)\n {\n     if (redeemScript.size() > MAX_SCRIPT_ELEMENT_SIZE)\n@@ -102,19 +111,6 @@ bool CBasicKeyStore::HaveWatchOnly() const\n     return (!setWatchOnly.empty());\n }\n \n-CCryptoKeyStore::CCryptoKeyStore() : fUseCrypto(false)\n-{\n-    std::string strMalleableKey = GetArg(\"-masterkey\", \"\");\n-    CMalleableKey malleableKey;\n-    if (strMalleableKey != \"\")\n-        malleableKey.SetString(strMalleableKey);\n-    else\n-        malleableKey.MakeNewKeys();\n-\n-    const CMalleableKeyView& keyView(malleableKey);\n-    mapMalleableKeys[keyView] = malleableKey;\n-}\n-\n bool CCryptoKeyStore::SetCrypted()\n {\n     {"
      },
      {
        "sha": "21930603f7705e39a7b157b1f87249ca30e73789",
        "filename": "src/keystore.h",
        "status": "modified",
        "additions": 24,
        "deletions": 5,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/132c462454743017778dc71d4e508cf8dcbf24cc/src/keystore.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/132c462454743017778dc71d4e508cf8dcbf24cc/src/keystore.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/keystore.h?ref=132c462454743017778dc71d4e508cf8dcbf24cc",
        "patch": "@@ -39,6 +39,10 @@ class CKeyStore\n     // Add a key to the store.\n     virtual bool AddKey(const CKey& key) =0;\n \n+    // Add a malleable key to store.\n+    virtual bool AddMalleableKey(const CMalleableKey& mKey) =0;\n+    virtual bool GetMalleableKey(const CMalleableKeyView &keyView, CMalleableKey &mKey) const =0;\n+\n     // Check whether a key corresponding to a given address is present in the store.\n     virtual bool HaveKey(const CKeyID &address) const =0;\n     virtual bool GetKey(const CKeyID &address, CKey& keyOut) const =0;\n@@ -67,7 +71,7 @@ class CKeyStore\n \n     virtual bool CheckOwnership(const CPubKey &pubKeyVariant, const CPubKey &R) const =0;\n     virtual bool CreatePrivKey(const CPubKey &pubKeyVariant, const CPubKey &R, CKey &privKey) const =0;\n-    virtual void ListMalleablePubKeys(std::list<CMalleablePubKey> &malleablePubKeyList) const =0;\n+    virtual void ListMalleableViews(std::list<CMalleableKeyView> &malleableViewList) const =0;\n };\n \n typedef std::map<CKeyID, std::pair<CSecret, bool> > KeyMap;\n@@ -87,6 +91,21 @@ class CBasicKeyStore : public CKeyStore\n \n public:\n     bool AddKey(const CKey& key);\n+    bool AddMalleableKey(const CMalleableKey& mKey);\n+    bool GetMalleableKey(const CMalleableKeyView &keyView, CMalleableKey &mKey) const\n+    {\n+        {\n+            LOCK(cs_KeyStore);\n+            MalleableKeyMap::const_iterator mi = mapMalleableKeys.find(keyView);\n+            if (mi != mapMalleableKeys.end())\n+            {\n+                mKey = mi->second;\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n     bool HaveKey(const CKeyID &address) const\n     {\n         bool result;\n@@ -158,14 +177,14 @@ class CBasicKeyStore : public CKeyStore\n         return false;\n     }\n \n-    void ListMalleablePubKeys(std::list<CMalleablePubKey> &malleablePubKeyList) const\n+    void ListMalleableViews(std::list<CMalleableKeyView> &malleableViewList) const\n     {\n-        malleablePubKeyList.clear();\n+        malleableViewList.clear();\n \n         {\n             LOCK(cs_KeyStore);\n             for (MalleableKeyMap::const_iterator mi = mapMalleableKeys.begin(); mi != mapMalleableKeys.end(); mi++)\n-                malleablePubKeyList.push_back(mi->first.GetMalleablePubKey());\n+                malleableViewList.push_back(CMalleableKeyView(mi->first));\n         }\n     }\n };\n@@ -196,7 +215,7 @@ class CCryptoKeyStore : public CBasicKeyStore\n     bool Unlock(const CKeyingMaterial& vMasterKeyIn);\n \n public:\n-    CCryptoKeyStore();\n+    CCryptoKeyStore() : fUseCrypto(false) { }\n \n     bool IsCrypted() const\n     {"
      },
      {
        "sha": "8b3780ecbc29f79ece87bb1b2d1657a65d9c7e34",
        "filename": "src/rpcwallet.cpp",
        "status": "modified",
        "additions": 38,
        "deletions": 16,
        "changes": 54,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/132c462454743017778dc71d4e508cf8dcbf24cc/src/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/132c462454743017778dc71d4e508cf8dcbf24cc/src/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.cpp?ref=132c462454743017778dc71d4e508cf8dcbf24cc",
        "patch": "@@ -1866,17 +1866,39 @@ Value newmalleablekey(const Array& params, bool fHelp)\n             \"newmalleablekey\\n\"\n             \"Make a malleable public/private key pair.\\n\");\n \n-    CMalleableKey malleableKey;\n-    malleableKey.MakeNewKeys();\n-    CMalleablePubKey malleablePubKey = malleableKey.GetMalleablePubKey();\n+    if (!fTestNet)\n+        throw runtime_error(\"This feature has been disabled for mainNet clients\");\n+\n+    CMalleableKeyView keyView = pwalletMain->GenerateNewMalleableKey();\n+\n+    CMalleableKey mKey;\n+    if (!pwalletMain->GetMalleableKey(keyView, mKey))\n+        throw runtime_error(\"Unable to generate new malleable key\");\n+\n+    Object result;\n+    result.push_back(Pair(\"PublicPair\", mKey.GetMalleablePubKey().ToString()));\n+    result.push_back(Pair(\"KeyView\", keyView.ToString()));\n+\n+    return result;\n+}\n+\n+Value dumpmalleablekey(const Array& params, bool fHelp)\n+{\n+    if (fHelp || params.size() != 1)\n+        throw runtime_error (\n+            \"dumpmalleablekey <Key view>\\n\"\n+            \"Dump the private and public key pairs, which correspond to provided key view.\\n\");\n \n-    CDataStream ssPublicBytes(SER_NETWORK, PROTOCOL_VERSION);\n-    ssPublicBytes << malleablePubKey;\n+    CMalleableKey mKey;\n+    CMalleableKeyView keyView;\n+    keyView.SetString(params[0].get_str());\n+\n+    if (!pwalletMain->GetMalleableKey(keyView, mKey))\n+        throw runtime_error(\"There is no such item in the wallet\");\n \n     Object result;\n-    result.push_back(Pair(\"PrivatePair\", malleableKey.ToString()));\n-    result.push_back(Pair(\"PublicPair\", malleablePubKey.ToString()));\n-    result.push_back(Pair(\"PublicBytes\", HexStr(ssPublicBytes.begin(), ssPublicBytes.end())));\n+    result.push_back(Pair(\"PrivatePair\", mKey.ToString()));\n+    result.push_back(Pair(\"PublicPair\", mKey.GetMalleablePubKey().ToString()));\n \n     return result;\n }\n@@ -1933,25 +1955,25 @@ Value adjustmalleablepubkey(const Array& params, bool fHelp)\n     result.push_back(Pair(\"PubkeyVariant\", HexStr(vchPubKeyVariant.Raw())));\n     result.push_back(Pair(\"KeyVariantID\", CBitcoinAddress(vchPubKeyVariant.GetID()).ToString()));\n \n-\n     return result;\n }\n \n-Value listmalleablepubkeys(const Array& params, bool fHelp)\n+Value listmalleableviews(const Array& params, bool fHelp)\n {\n     if (fHelp || params.size() != 0)\n         throw runtime_error(\n-            \"listmalleablepubkeys\\n\"\n-            \"Get list of malleable public keys.\\n\");\n+            \"listmalleableviews\\n\"\n+            \"Get list of views for generated malleable keys.\\n\");\n \n-    std::list<CMalleablePubKey> keyList;\n-    pwalletMain->ListMalleablePubKeys(keyList);\n+    std::list<CMalleableKeyView> keyViewList;\n+    pwalletMain->ListMalleableViews(keyViewList);\n \n     Array result;\n-    BOOST_FOREACH(const CMalleablePubKey &key, keyList)\n+    BOOST_FOREACH(const CMalleableKeyView &keyView, keyViewList)\n     {\n-        result.push_back(key.ToString());\n+        result.push_back(keyView.ToString());\n     }\n \n     return result;\n }\n+"
      },
      {
        "sha": "e7e3e3268ee78066446ae72bb49ac61ccf0b5983",
        "filename": "src/version.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/132c462454743017778dc71d4e508cf8dcbf24cc/src/version.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/132c462454743017778dc71d4e508cf8dcbf24cc/src/version.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/version.h?ref=132c462454743017778dc71d4e508cf8dcbf24cc",
        "patch": "@@ -30,7 +30,7 @@ static const int DATABASE_VERSION = 70507;\n // network protocol versioning\n //\n \n-static const int PROTOCOL_VERSION = 60016;\n+static const int PROTOCOL_VERSION = 60017;\n \n // earlier versions not supported as of Feb 2012, and are disconnected\n static const int MIN_PROTO_VERSION = 209;"
      },
      {
        "sha": "5c46a1b55670e4b560a742e2db903591c4eda7f6",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 43,
        "deletions": 0,
        "changes": 43,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/132c462454743017778dc71d4e508cf8dcbf24cc/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/132c462454743017778dc71d4e508cf8dcbf24cc/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=132c462454743017778dc71d4e508cf8dcbf24cc",
        "patch": "@@ -57,6 +57,28 @@ CPubKey CWallet::GenerateNewKey()\n     return key.GetPubKey();\n }\n \n+CMalleableKeyView CWallet::GenerateNewMalleableKey()\n+{\n+    RandAddSeedPerfmon();\n+\n+    // Compressed public keys were introduced in version 0.6.0\n+    SetMinVersion(FEATURE_MALLKEY);\n+\n+    CMalleableKey mKey;\n+    mKey.MakeNewKeys();\n+    const CMalleableKeyView &keyView(mKey);\n+\n+    // Create new metadata\n+    int64_t nCreationTime = GetTime();\n+    mapMalleableKeyMetadata[keyView] = CKeyMetadata(nCreationTime);\n+    if (!nTimeFirstKey || nCreationTime < nTimeFirstKey)\n+        nTimeFirstKey = nCreationTime;\n+\n+    if (!AddMalleableKey(mKey))\n+        throw std::runtime_error(\"CWallet::GenerateNewMalleableKey() : AddMalleableKey failed\");\n+    return CMalleableKeyView(mKey);\n+}\n+\n bool CWallet::AddKey(const CKey& key)\n {\n     CPubKey pubkey = key.GetPubKey();\n@@ -69,6 +91,18 @@ bool CWallet::AddKey(const CKey& key)\n     return true;\n }\n \n+bool CWallet::AddMalleableKey(const CMalleableKey& mKey)\n+{\n+    CMalleableKeyView keyView = CMalleableKeyView(mKey);\n+    if (!CCryptoKeyStore::AddMalleableKey(mKey))\n+        return false;\n+    if (!fFileBacked)\n+        return true;\n+    if (!IsCrypted())\n+        return CWalletDB(strWalletFile).WriteMalleableKey(keyView, mKey, mapMalleableKeyMetadata[keyView]);\n+    return true;\n+}\n+\n bool CWallet::AddCryptedKey(const CPubKey &vchPubKey, const vector<unsigned char> &vchCryptedSecret)\n {\n     if (!CCryptoKeyStore::AddCryptedKey(vchPubKey, vchCryptedSecret))\n@@ -101,6 +135,15 @@ bool CWallet::LoadKeyMetadata(const CPubKey &pubkey, const CKeyMetadata &meta)\n     return true;\n }\n \n+bool CWallet::LoadMalleableKeyMetadata(const CMalleableKeyView &keyView, const CKeyMetadata &metadata)\n+{\n+    if (metadata.nCreateTime && (!nTimeFirstKey || metadata.nCreateTime < nTimeFirstKey))\n+        nTimeFirstKey = metadata.nCreateTime;\n+\n+    mapMalleableKeyMetadata[keyView] = metadata;\n+    return true;\n+}\n+\n bool CWallet::AddCScript(const CScript& redeemScript)\n {\n     if (!CCryptoKeyStore::AddCScript(redeemScript))"
      },
      {
        "sha": "20abe44563431be0904c665c3945b39e9341dc7e",
        "filename": "src/wallet.h",
        "status": "modified",
        "additions": 9,
        "deletions": 1,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/132c462454743017778dc71d4e508cf8dcbf24cc/src/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/132c462454743017778dc71d4e508cf8dcbf24cc/src/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.h?ref=132c462454743017778dc71d4e508cf8dcbf24cc",
        "patch": "@@ -37,7 +37,8 @@ enum WalletFeature\n \n     FEATURE_WALLETCRYPT = 40000, // wallet encryption\n     FEATURE_COMPRPUBKEY = 60000, // compressed public keys\n-    FEATURE_LATEST = 60000\n+    FEATURE_MALLKEY = 60017,\n+    FEATURE_LATEST = 60017\n };\n \n /** A key pool entry */\n@@ -95,6 +96,7 @@ class CWallet : public CCryptoKeyStore\n \n     std::set<int64_t> setKeyPool;\n     std::map<CKeyID, CKeyMetadata> mapKeyMetadata;\n+    std::map<CMalleableKeyView, CKeyMetadata> mapMalleableKeyMetadata;\n \n     typedef std::map<unsigned int, CMasterKey> MasterKeyMap;\n     MasterKeyMap mapMasterKeys;\n@@ -148,12 +150,18 @@ class CWallet : public CCryptoKeyStore\n     // keystore implementation\n     // Generate a new key\n     CPubKey GenerateNewKey();\n+    CMalleableKeyView GenerateNewMalleableKey();\n     // Adds a key to the store, and saves it to disk.\n     bool AddKey(const CKey& key);\n+    bool AddMalleableKey(const CMalleableKey& mKey);\n     // Adds a key to the store, without saving it to disk (used by LoadWallet)\n     bool LoadKey(const CKey& key) { return CCryptoKeyStore::AddKey(key); }\n     // Load metadata (used by LoadWallet)\n     bool LoadKeyMetadata(const CPubKey &pubkey, const CKeyMetadata &metadata);\n+    bool LoadMalleableKeyMetadata(const CMalleableKeyView &keyView, const CKeyMetadata &metadata);\n+\n+    // Load malleable key without saving it to disk (used by LoadWallet)\n+    bool LoadMalleableKey(const CMalleableKey &mKey) { return CCryptoKeyStore::AddMalleableKey(mKey); }\n \n     bool LoadMinVersion(int nVersion) { nWalletVersion = nVersion; nWalletMaxVersion = std::max(nWalletMaxVersion, nVersion); return true; }\n "
      },
      {
        "sha": "64168ee80a2e8c5bb777d525c384a85e3e2e4afb",
        "filename": "src/walletdb.cpp",
        "status": "modified",
        "additions": 46,
        "deletions": 1,
        "changes": 47,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/132c462454743017778dc71d4e508cf8dcbf24cc/src/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/132c462454743017778dc71d4e508cf8dcbf24cc/src/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/walletdb.cpp?ref=132c462454743017778dc71d4e508cf8dcbf24cc",
        "patch": "@@ -220,6 +220,7 @@ ReadKeyValue(CWallet* pwallet, CDataStream& ssKey, CDataStream& ssValue,\n         // Taking advantage of the fact that pair serialization\n         // is just the two items serialized one after the other\n         ssKey >> strType;\n+\n         if (strType == \"name\")\n         {\n             string strAddress;\n@@ -301,6 +302,36 @@ ReadKeyValue(CWallet* pwallet, CDataStream& ssKey, CDataStream& ssValue,\n             // so set the wallet birthday to the beginning of time.\n             pwallet->nTimeFirstKey = 1;\n         }\n+        else if (strType == \"malpair\")\n+        {\n+            string strKey, strKeyView;\n+\n+            CMalleableKey mKey;\n+            CMalleableKeyView keyView;\n+\n+            ssKey >> strKeyView;\n+            ssValue >> strKey;\n+\n+            keyView.SetString(strKeyView);\n+            mKey.SetString(strKey);\n+\n+            if (mKey.IsNull())\n+            {\n+                strErr = \"Error reading wallet database: CMalleableKey is corrupt\";\n+                return false;\n+            }\n+            if (mKey.GetID() != keyView.GetID())\n+            {\n+                strErr = \"Error reading wallet database: CMalleableKey view inconsistency\";\n+                return false;\n+            }\n+\n+            if (!pwallet->LoadMalleableKey(mKey))\n+            {\n+                strErr = \"Error reading wallet database: LoadMalleableKey failed\";\n+                return false;\n+            }\n+        }\n         else if (strType == \"key\" || strType == \"wkey\")\n         {\n             vector<unsigned char> vchPubKey;\n@@ -385,6 +416,20 @@ ReadKeyValue(CWallet* pwallet, CDataStream& ssKey, CDataStream& ssValue,\n             }\n             wss.fIsEncrypted = true;\n         }\n+        else if (strType == \"malmeta\")\n+        {\n+            string strKeyView;\n+            ssKey >> strKeyView;\n+\n+            CMalleableKeyView keyView;\n+            keyView.SetString(strKeyView);\n+\n+            CKeyMetadata keyMeta;\n+            ssValue >> keyMeta;\n+            wss.nKeyMeta++;\n+\n+            pwallet->LoadMalleableKeyMetadata(keyView, keyMeta);\n+        }\n         else if (strType == \"keymeta\")\n         {\n             CPubKey vchPubKey;\n@@ -452,7 +497,7 @@ ReadKeyValue(CWallet* pwallet, CDataStream& ssKey, CDataStream& ssValue,\n static bool IsKeyType(string strType)\n {\n     return (strType== \"key\" || strType == \"wkey\" ||\n-            strType == \"mkey\" || strType == \"ckey\");\n+            strType == \"mkey\" || strType == \"ckey\" || strType == \"malpair\");\n }\n \n DBErrors CWalletDB::LoadWallet(CWallet* pwallet)"
      },
      {
        "sha": "fe2b22501cbfa4cd5ee0764b0505b84640fef567",
        "filename": "src/walletdb.h",
        "status": "modified",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/132c462454743017778dc71d4e508cf8dcbf24cc/src/walletdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/132c462454743017778dc71d4e508cf8dcbf24cc/src/walletdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/walletdb.h?ref=132c462454743017778dc71d4e508cf8dcbf24cc",
        "patch": "@@ -95,6 +95,19 @@ class CWalletDB : public CDB\n         return true;\n     }\n \n+    bool WriteMalleableKey(const CMalleableKeyView& keyView, const CMalleableKey& malleableKey, const CKeyMetadata &keyMeta)\n+    {\n+        nWalletDBUpdated++;\n+        if(!Write(std::make_pair(std::string(\"malmeta\"), keyView.ToString()), keyMeta))\n+            return false;\n+\n+        if(!Write(std::make_pair(std::string(\"malpair\"), keyView.ToString()), malleableKey.ToString(), false))\n+            return false;\n+\n+        return true;\n+    }\n+\n+\n     bool WriteCryptedKey(const CPubKey& vchPubKey, const std::vector<unsigned char>& vchCryptedSecret, const CKeyMetadata &keyMeta)\n     {\n         nWalletDBUpdated++;"
      }
    ]
  },
  {
    "sha": "0e14c940baf1ceea6a194492caf324588b779e58",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowZTE0Yzk0MGJhZjFjZWVhNmExOTQ0OTJjYWYzMjQ1ODhiNzc5ZTU4",
    "commit": {
      "author": {
        "name": "0xDEADFACE",
        "email": "masmfan@gmail.com",
        "date": "2016-02-14T03:23:21Z"
      },
      "committer": {
        "name": "0xDEADFACE",
        "email": "masmfan@gmail.com",
        "date": "2016-02-14T03:23:21Z"
      },
      "message": "Merge branch 'master' of ssh://github.com/novacoin-project/novacoin",
      "tree": {
        "sha": "96ebfd5be50ce66612ce2be9633b563e9b69e558",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/96ebfd5be50ce66612ce2be9633b563e9b69e558"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0e14c940baf1ceea6a194492caf324588b779e58",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0e14c940baf1ceea6a194492caf324588b779e58",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0e14c940baf1ceea6a194492caf324588b779e58",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0e14c940baf1ceea6a194492caf324588b779e58/comments",
    "author": {
      "login": "0xDEADFACE",
      "id": 6503509,
      "node_id": "MDQ6VXNlcjY1MDM1MDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6503509?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xDEADFACE",
      "html_url": "https://github.com/0xDEADFACE",
      "followers_url": "https://api.github.com/users/0xDEADFACE/followers",
      "following_url": "https://api.github.com/users/0xDEADFACE/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xDEADFACE/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xDEADFACE/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xDEADFACE/subscriptions",
      "organizations_url": "https://api.github.com/users/0xDEADFACE/orgs",
      "repos_url": "https://api.github.com/users/0xDEADFACE/repos",
      "events_url": "https://api.github.com/users/0xDEADFACE/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xDEADFACE/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "0xDEADFACE",
      "id": 6503509,
      "node_id": "MDQ6VXNlcjY1MDM1MDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6503509?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xDEADFACE",
      "html_url": "https://github.com/0xDEADFACE",
      "followers_url": "https://api.github.com/users/0xDEADFACE/followers",
      "following_url": "https://api.github.com/users/0xDEADFACE/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xDEADFACE/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xDEADFACE/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xDEADFACE/subscriptions",
      "organizations_url": "https://api.github.com/users/0xDEADFACE/orgs",
      "repos_url": "https://api.github.com/users/0xDEADFACE/repos",
      "events_url": "https://api.github.com/users/0xDEADFACE/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xDEADFACE/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "132c462454743017778dc71d4e508cf8dcbf24cc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/132c462454743017778dc71d4e508cf8dcbf24cc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/132c462454743017778dc71d4e508cf8dcbf24cc"
      },
      {
        "sha": "0b47046733d065cd174c9c17268e76b8d854e280",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0b47046733d065cd174c9c17268e76b8d854e280",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0b47046733d065cd174c9c17268e76b8d854e280"
      }
    ],
    "stats": {
      "total": 28,
      "additions": 11,
      "deletions": 17
    },
    "files": [
      {
        "sha": "39fe2d7d1b57071a329e0c741d2f994fa4dae8ba",
        "filename": "src/ecies.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 6,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e14c940baf1ceea6a194492caf324588b779e58/src/ecies.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e14c940baf1ceea6a194492caf324588b779e58/src/ecies.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/ecies.cpp?ref=0e14c940baf1ceea6a194492caf324588b779e58",
        "patch": "@@ -11,7 +11,6 @@\n #include \"ies.h\"\n #include <iostream>\n #include <vector>\n-#include <openssl/ecdh.h>\n \n #define SET_ERROR(string) \\\n     sprintf(error, \"%s %s:%d\", (string), __FILE__, __LINE__)\n@@ -273,16 +272,16 @@ static int store_mac_tag(const ies_ctx_t *ctx, const unsigned char *envelope_key\n \n cryptogram_t * ecies_encrypt(const ies_ctx_t *ctx, const unsigned char *data, size_t length, char *error) {\n \n-    const size_t block_length = EVP_CIPHER_block_size(ctx->cipher);\n-    const size_t mac_length = EVP_MD_size(ctx->md);\n-    cryptogram_t *cryptogram = NULL;\n-    unsigned char *envelope_key = NULL;\n-\n     if (!ctx || !data || !length) {\n         SET_ERROR(\"Invalid arguments\");\n         return NULL;\n     }\n \n+    const size_t block_length = EVP_CIPHER_block_size(ctx->cipher);\n+    const size_t mac_length = EVP_MD_size(ctx->md);\n+    cryptogram_t *cryptogram = NULL;\n+    unsigned char *envelope_key = NULL;\n+\n     if (block_length == 0 || block_length > EVP_MAX_BLOCK_LENGTH) {\n         SET_ERROR(\"Derived block size is incorrect\");\n         return NULL;"
      },
      {
        "sha": "bf0f99db8a82155f065723d9ee66eabadc022c13",
        "filename": "src/key.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e14c940baf1ceea6a194492caf324588b779e58/src/key.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e14c940baf1ceea6a194492caf324588b779e58/src/key.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.cpp?ref=0e14c940baf1ceea6a194492caf324588b779e58",
        "patch": "@@ -6,12 +6,9 @@\n \n #include <openssl/ecdsa.h>\n #include <openssl/obj_mac.h>\n-#include <openssl/ssl.h>\n-#include <openssl/ecdh.h>\n \n #include \"key.h\"\n #include \"base58.h\"\n-#include \"ies.h\"\n \n // Generate a private key from just the secret parameter\n int EC_KEY_regenerate_key(EC_KEY *eckey, BIGNUM *priv_key)"
      },
      {
        "sha": "68ae6a2c2d15d93c468c563a41df02a0e7de0f75",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e14c940baf1ceea6a194492caf324588b779e58/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e14c940baf1ceea6a194492caf324588b779e58/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=0e14c940baf1ceea6a194492caf324588b779e58",
        "patch": "@@ -1189,11 +1189,11 @@ const CBlockIndex* GetLastBlockIndex(const CBlockIndex* pindex, bool fProofOfSta\n \n unsigned int GetNextTargetRequired(const CBlockIndex* pindexLast, bool fProofOfStake)\n {\n-    CBigNum bnTargetLimit = !fProofOfStake ? bnProofOfWorkLimit : GetProofOfStakeLimit(pindexLast->nHeight, pindexLast->nTime);\n-\n     if (pindexLast == NULL)\n         return bnTargetLimit.GetCompact(); // genesis block\n \n+    CBigNum bnTargetLimit = !fProofOfStake ? bnProofOfWorkLimit : GetProofOfStakeLimit(pindexLast->nHeight, pindexLast->nTime);\n+\n     const CBlockIndex* pindexPrev = GetLastBlockIndex(pindexLast, fProofOfStake);\n     if (pindexPrev->pprev == NULL)\n         return bnTargetLimit.GetCompact(); // first block\n@@ -2137,7 +2137,7 @@ bool CBlock::AddToBlockIndex(unsigned int nFile, unsigned int nBlockPos)\n         return error(\"AddToBlockIndex() : %s already exists\", hash.ToString().substr(0,20).c_str());\n \n     // Construct new block index object\n-    CBlockIndex* pindexNew = new CBlockIndex(nFile, nBlockPos, *this);\n+    CBlockIndex* pindexNew = new(nothrow) CBlockIndex(nFile, nBlockPos, *this);\n     if (!pindexNew)\n         return error(\"AddToBlockIndex() : new CBlockIndex failed\");\n     pindexNew->phashBlock = &hash;"
      },
      {
        "sha": "fd40d5fc426205baeb9478958a8fdc8255acb171",
        "filename": "src/rpcrawtransaction.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e14c940baf1ceea6a194492caf324588b779e58/src/rpcrawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e14c940baf1ceea6a194492caf324588b779e58/src/rpcrawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcrawtransaction.cpp?ref=0e14c940baf1ceea6a194492caf324588b779e58",
        "patch": "@@ -12,8 +12,6 @@\n #include \"main.h\"\n #include \"net.h\"\n #include \"wallet.h\"\n-#include \"script.h\"\n-#include \"util.h\"\n \n using namespace std;\n using namespace boost;"
      },
      {
        "sha": "5ce59b5aa41ec2cc246926dbc73cf0e7bdcb04cc",
        "filename": "src/txdb-bdb.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e14c940baf1ceea6a194492caf324588b779e58/src/txdb-bdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e14c940baf1ceea6a194492caf324588b779e58/src/txdb-bdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txdb-bdb.cpp?ref=0e14c940baf1ceea6a194492caf324588b779e58",
        "patch": "@@ -160,7 +160,7 @@ CBlockIndex static * InsertBlockIndex(uint256 hash)\n         return (*mi).second;\n \n     // Create new\n-    CBlockIndex* pindexNew = new CBlockIndex();\n+    CBlockIndex* pindexNew = new(nothrow) CBlockIndex();\n     if (!pindexNew)\n         throw runtime_error(\"LoadBlockIndex() : new CBlockIndex failed\");\n     mi = mapBlockIndex.insert(make_pair(hash, pindexNew)).first;"
      },
      {
        "sha": "97bf88cc38886ab60ded34813f200aad33b8d1e5",
        "filename": "src/txdb-leveldb.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e14c940baf1ceea6a194492caf324588b779e58/src/txdb-leveldb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e14c940baf1ceea6a194492caf324588b779e58/src/txdb-leveldb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txdb-leveldb.cpp?ref=0e14c940baf1ceea6a194492caf324588b779e58",
        "patch": "@@ -325,7 +325,7 @@ static CBlockIndex *InsertBlockIndex(uint256 hash)\n         return (*mi).second;\n \n     // Create new\n-    CBlockIndex* pindexNew = new CBlockIndex();\n+    CBlockIndex* pindexNew = new(nothrow) CBlockIndex();\n     if (!pindexNew)\n         throw runtime_error(\"LoadBlockIndex() : new CBlockIndex failed\");\n     mi = mapBlockIndex.insert(make_pair(hash, pindexNew)).first;"
      },
      {
        "sha": "7fb43bc1b487e75c9bdb93c0dbc6fe0560313e45",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e14c940baf1ceea6a194492caf324588b779e58/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e14c940baf1ceea6a194492caf324588b779e58/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=0e14c940baf1ceea6a194492caf324588b779e58",
        "patch": "@@ -331,7 +331,7 @@ string vstrprintf(const char *format, va_list ap)\n         if (p != buffer)\n             delete[] p;\n         limit *= 2;\n-        p = new char[limit];\n+        p = new(nothrow) char[limit];\n         if (p == NULL)\n             throw std::bad_alloc();\n     }"
      }
    ]
  },
  {
    "sha": "213f208b2ccb51f4f7752ea214fef03be73cab2b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyMTNmMjA4YjJjY2I1MWY0Zjc3NTJlYTIxNGZlZjAzYmU3M2NhYjJi",
    "commit": {
      "author": {
        "name": "svost",
        "email": "svost@users.noreply.github.com",
        "date": "2016-02-14T16:24:17Z"
      },
      "committer": {
        "name": "svost",
        "email": "svost@users.noreply.github.com",
        "date": "2016-02-14T16:24:17Z"
      },
      "message": "fDetachDB missed in constructor",
      "tree": {
        "sha": "9a40680088c10bf2a09cbf6bb5c09a3ba0dc2e5e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9a40680088c10bf2a09cbf6bb5c09a3ba0dc2e5e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/213f208b2ccb51f4f7752ea214fef03be73cab2b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/213f208b2ccb51f4f7752ea214fef03be73cab2b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/213f208b2ccb51f4f7752ea214fef03be73cab2b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/213f208b2ccb51f4f7752ea214fef03be73cab2b/comments",
    "author": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0e14c940baf1ceea6a194492caf324588b779e58",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0e14c940baf1ceea6a194492caf324588b779e58",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0e14c940baf1ceea6a194492caf324588b779e58"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 1,
      "deletions": 5
    },
    "files": [
      {
        "sha": "aa46cec079f44e80a34b4e586a513277b3c2210c",
        "filename": "src/db.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 5,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/213f208b2ccb51f4f7752ea214fef03be73cab2b/src/db.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/213f208b2ccb51f4f7752ea214fef03be73cab2b/src/db.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/db.cpp?ref=213f208b2ccb51f4f7752ea214fef03be73cab2b",
        "patch": "@@ -42,11 +42,7 @@ void CDBEnv::EnvShutdown()\n         DbEnv(0).remove(strPath.c_str(), 0);\n }\n \n-CDBEnv::CDBEnv() : dbenv(DB_CXX_NO_EXCEPTIONS)\n-{\n-    fDbEnvInit = false;\n-    fMockDb = false;\n-}\n+CDBEnv::CDBEnv() : dbenv(DB_CXX_NO_EXCEPTIONS), fDetachDB(false), fDbEnvInit(false), fMockDb(false) { }\n \n CDBEnv::~CDBEnv()\n {"
      }
    ]
  },
  {
    "sha": "f87679bb0741ddd1eec443b446c11f751edf3ee2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmODc2NzliYjA3NDFkZGQxZWVjNDQzYjQ0NmMxMWY3NTFlZGYzZWUy",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-02-14T17:04:24Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-02-14T17:04:24Z"
      },
      "message": "Fix compilation error.",
      "tree": {
        "sha": "e7a20d8f081df3a40bb68eef82bdcb7bb19ca82d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e7a20d8f081df3a40bb68eef82bdcb7bb19ca82d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f87679bb0741ddd1eec443b446c11f751edf3ee2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f87679bb0741ddd1eec443b446c11f751edf3ee2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f87679bb0741ddd1eec443b446c11f751edf3ee2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f87679bb0741ddd1eec443b446c11f751edf3ee2/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0e14c940baf1ceea6a194492caf324588b779e58",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0e14c940baf1ceea6a194492caf324588b779e58",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0e14c940baf1ceea6a194492caf324588b779e58"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "8a963795fc812aeceb69a8250cf1d61ce8e5b7e3",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f87679bb0741ddd1eec443b446c11f751edf3ee2/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f87679bb0741ddd1eec443b446c11f751edf3ee2/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=f87679bb0741ddd1eec443b446c11f751edf3ee2",
        "patch": "@@ -1190,7 +1190,7 @@ const CBlockIndex* GetLastBlockIndex(const CBlockIndex* pindex, bool fProofOfSta\n unsigned int GetNextTargetRequired(const CBlockIndex* pindexLast, bool fProofOfStake)\n {\n     if (pindexLast == NULL)\n-        return bnTargetLimit.GetCompact(); // genesis block\n+        return bnProofOfWorkLimit.GetCompact(); // genesis block\n \n     CBigNum bnTargetLimit = !fProofOfStake ? bnProofOfWorkLimit : GetProofOfStakeLimit(pindexLast->nHeight, pindexLast->nTime);\n "
      }
    ]
  },
  {
    "sha": "d8f174b14a88165bef97daebdcce7a4f0c0aeef1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkOGYxNzRiMTRhODgxNjViZWY5N2RhZWJkY2NlN2E0ZjBjMGFlZWYx",
    "commit": {
      "author": {
        "name": "0xDEADFACE",
        "email": "masmfan@gmail.com",
        "date": "2016-02-14T17:23:32Z"
      },
      "committer": {
        "name": "0xDEADFACE",
        "email": "masmfan@gmail.com",
        "date": "2016-02-14T17:23:32Z"
      },
      "message": "RPC: encryptdata & decryptdata methods",
      "tree": {
        "sha": "e66e772ca22c7b471a5427f1e7ac824453639c0f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e66e772ca22c7b471a5427f1e7ac824453639c0f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d8f174b14a88165bef97daebdcce7a4f0c0aeef1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d8f174b14a88165bef97daebdcce7a4f0c0aeef1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d8f174b14a88165bef97daebdcce7a4f0c0aeef1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d8f174b14a88165bef97daebdcce7a4f0c0aeef1/comments",
    "author": {
      "login": "0xDEADFACE",
      "id": 6503509,
      "node_id": "MDQ6VXNlcjY1MDM1MDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6503509?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xDEADFACE",
      "html_url": "https://github.com/0xDEADFACE",
      "followers_url": "https://api.github.com/users/0xDEADFACE/followers",
      "following_url": "https://api.github.com/users/0xDEADFACE/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xDEADFACE/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xDEADFACE/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xDEADFACE/subscriptions",
      "organizations_url": "https://api.github.com/users/0xDEADFACE/orgs",
      "repos_url": "https://api.github.com/users/0xDEADFACE/repos",
      "events_url": "https://api.github.com/users/0xDEADFACE/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xDEADFACE/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "0xDEADFACE",
      "id": 6503509,
      "node_id": "MDQ6VXNlcjY1MDM1MDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6503509?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xDEADFACE",
      "html_url": "https://github.com/0xDEADFACE",
      "followers_url": "https://api.github.com/users/0xDEADFACE/followers",
      "following_url": "https://api.github.com/users/0xDEADFACE/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xDEADFACE/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xDEADFACE/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xDEADFACE/subscriptions",
      "organizations_url": "https://api.github.com/users/0xDEADFACE/orgs",
      "repos_url": "https://api.github.com/users/0xDEADFACE/repos",
      "events_url": "https://api.github.com/users/0xDEADFACE/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xDEADFACE/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f87679bb0741ddd1eec443b446c11f751edf3ee2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f87679bb0741ddd1eec443b446c11f751edf3ee2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f87679bb0741ddd1eec443b446c11f751edf3ee2"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 11,
      "deletions": 0
    },
    "files": [
      {
        "sha": "52f99593d510a4d6c0e13f39e1b55ae1f1db1e08",
        "filename": "novacoin-qt.pro",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d8f174b14a88165bef97daebdcce7a4f0c0aeef1/novacoin-qt.pro",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d8f174b14a88165bef97daebdcce7a4f0c0aeef1/novacoin-qt.pro",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/novacoin-qt.pro?ref=d8f174b14a88165bef97daebdcce7a4f0c0aeef1",
        "patch": "@@ -313,6 +313,7 @@ SOURCES += src/qt/bitcoin.cpp src/qt/bitcoingui.cpp \\\n     src/qt/transactionview.cpp \\\n     src/qt/walletmodel.cpp \\\n     src/bitcoinrpc.cpp \\\n+    src/rpccrypt.cpp \\\n     src/rpcdump.cpp \\\n     src/rpcnet.cpp \\\n     src/rpcmining.cpp \\"
      },
      {
        "sha": "5535b9bbea2aedfcef7254b9dd5462ad2c44b4e1",
        "filename": "src/bitcoinrpc.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d8f174b14a88165bef97daebdcce7a4f0c0aeef1/src/bitcoinrpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d8f174b14a88165bef97daebdcce7a4f0c0aeef1/src/bitcoinrpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoinrpc.cpp?ref=d8f174b14a88165bef97daebdcce7a4f0c0aeef1",
        "patch": "@@ -321,6 +321,8 @@ static const CRPCCommand vRPCCommands[] =\n     { \"adjustmalleablepubkey\",  &adjustmalleablepubkey,  false,  false},\n     { \"listmalleableviews\",     &listmalleableviews,     false,  false},\n     { \"dumpmalleablekey\",       &dumpmalleablekey,       false,  false},\n+    { \"encryptdata\",            &encryptdata,            false,  false },\n+    { \"decryptdata\",            &decryptdata,            false,  false },\n     { \"sendalert\",              &sendalert,              false,  false},\n };\n "
      },
      {
        "sha": "d18e5f6dc37d4ca8318370b49917842175168564",
        "filename": "src/bitcoinrpc.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d8f174b14a88165bef97daebdcce7a4f0c0aeef1/src/bitcoinrpc.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d8f174b14a88165bef97daebdcce7a4f0c0aeef1/src/bitcoinrpc.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoinrpc.h?ref=d8f174b14a88165bef97daebdcce7a4f0c0aeef1",
        "patch": "@@ -212,6 +212,9 @@ extern json_spirit::Value adjustmalleablepubkey(const json_spirit::Array& params\n extern json_spirit::Value listmalleableviews(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value dumpmalleablekey(const json_spirit::Array& params, bool fHelp);\n \n+extern json_spirit::Value encryptdata(const json_spirit::Array& params, bool fHelp); // in rpccrypt.cpp\n+extern json_spirit::Value decryptdata(const json_spirit::Array& params, bool fHelp);\n+\n extern json_spirit::Value getrawtransaction(const json_spirit::Array& params, bool fHelp); // in rcprawtransaction.cpp\n extern json_spirit::Value listunspent(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value createrawtransaction(const json_spirit::Array& params, bool fHelp);"
      },
      {
        "sha": "7afc86dba3141268f58139112705e6449bd3b4cd",
        "filename": "src/makefile.bsd",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d8f174b14a88165bef97daebdcce7a4f0c0aeef1/src/makefile.bsd",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d8f174b14a88165bef97daebdcce7a4f0c0aeef1/src/makefile.bsd",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/makefile.bsd?ref=d8f174b14a88165bef97daebdcce7a4f0c0aeef1",
        "patch": "@@ -118,6 +118,7 @@ OBJS= \\\n     obj/stun.o \\\n     obj/protocol.o \\\n     obj/bitcoinrpc.o \\\n+    obj/rpccrypt.o \\\n     obj/rpcdump.o \\\n     obj/rpcnet.o \\\n     obj/rpcmining.o \\"
      },
      {
        "sha": "aadac6b1397e87a9c08b3ac6db2f605d8aa11b6b",
        "filename": "src/makefile.linux-mingw",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d8f174b14a88165bef97daebdcce7a4f0c0aeef1/src/makefile.linux-mingw",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d8f174b14a88165bef97daebdcce7a4f0c0aeef1/src/makefile.linux-mingw",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/makefile.linux-mingw?ref=d8f174b14a88165bef97daebdcce7a4f0c0aeef1",
        "patch": "@@ -85,6 +85,7 @@ OBJS= \\\n     obj/stun.o \\\n     obj/protocol.o \\\n     obj/bitcoinrpc.o \\\n+    obj/rpccrypt.o \\\n     obj/rpcdump.o \\\n     obj/rpcnet.o \\\n     obj/rpcmining.o \\"
      },
      {
        "sha": "368ca6215c10b660986ac9f5ba04b7e2c8c407d0",
        "filename": "src/makefile.mingw",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d8f174b14a88165bef97daebdcce7a4f0c0aeef1/src/makefile.mingw",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d8f174b14a88165bef97daebdcce7a4f0c0aeef1/src/makefile.mingw",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/makefile.mingw?ref=d8f174b14a88165bef97daebdcce7a4f0c0aeef1",
        "patch": "@@ -75,6 +75,7 @@ OBJS= \\\n     obj/stun.o \\\n     obj/protocol.o \\\n     obj/bitcoinrpc.o \\\n+    obj/rpccrypt.o \\\n     obj/rpcdump.o \\\n     obj/rpcnet.o \\\n     obj/rpcmining.o \\"
      },
      {
        "sha": "a057b9ef6c25a95cd777c9b3fdd6f981c5704fc1",
        "filename": "src/makefile.osx",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d8f174b14a88165bef97daebdcce7a4f0c0aeef1/src/makefile.osx",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d8f174b14a88165bef97daebdcce7a4f0c0aeef1/src/makefile.osx",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/makefile.osx?ref=d8f174b14a88165bef97daebdcce7a4f0c0aeef1",
        "patch": "@@ -82,6 +82,7 @@ OBJS= \\\n     obj/stun.o \\\n     obj/protocol.o \\\n     obj/bitcoinrpc.o \\\n+    obj/rpccrypt.o \\\n     obj/rpcdump.o \\\n     obj/rpcnet.o \\\n     obj/rpcmining.o \\"
      },
      {
        "sha": "2dddfa62537b218cc2486dd87b83cb1e3de9d575",
        "filename": "src/makefile.unix",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d8f174b14a88165bef97daebdcce7a4f0c0aeef1/src/makefile.unix",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d8f174b14a88165bef97daebdcce7a4f0c0aeef1/src/makefile.unix",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/makefile.unix?ref=d8f174b14a88165bef97daebdcce7a4f0c0aeef1",
        "patch": "@@ -119,6 +119,7 @@ OBJS= \\\n     obj/stun.o \\\n     obj/protocol.o \\\n     obj/bitcoinrpc.o \\\n+    obj/rpccrypt.o \\\n     obj/rpcdump.o \\\n     obj/rpcnet.o \\\n     obj/rpcmining.o \\"
      }
    ]
  },
  {
    "sha": "16f94b8c51a1622f658f617c0740850adc7c5221",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxNmY5NGI4YzUxYTE2MjJmNjU4ZjYxN2MwNzQwODUwYWRjN2M1MjIx",
    "commit": {
      "author": {
        "name": "svost",
        "email": "svost@users.noreply.github.com",
        "date": "2016-02-14T18:10:09Z"
      },
      "committer": {
        "name": "svost",
        "email": "svost@users.noreply.github.com",
        "date": "2016-02-14T18:10:09Z"
      },
      "message": "Performance: replace iterator++ with ++iterator\n\n\u041e\u0441\u0442\u0430\u0432\u043b\u044e \u043a\u0430\u043a \u044f\u043a\u043e\u0440\u044c, \u043f\u043e\u0434\u043e\u0431\u043d\u044b\u0445 \u043c\u0435\u0441\u0442 \u0432 \u043a\u043e\u0434\u0435 \u043c\u043d\u043e\u0433\u043e, \u043f\u043e \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u0438 \u043c\u043e\u0436\u043d\u043e \u0431\u0443\u0434\u0435\u0442 \u043f\u0435\u0440\u0435\u043f\u0438\u0441\u0430\u0442\u044c.",
      "tree": {
        "sha": "89b85ad89d7935326e661504900e9fef77314343",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/89b85ad89d7935326e661504900e9fef77314343"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/16f94b8c51a1622f658f617c0740850adc7c5221",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/16f94b8c51a1622f658f617c0740850adc7c5221",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/16f94b8c51a1622f658f617c0740850adc7c5221",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/16f94b8c51a1622f658f617c0740850adc7c5221/comments",
    "author": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "213f208b2ccb51f4f7752ea214fef03be73cab2b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/213f208b2ccb51f4f7752ea214fef03be73cab2b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/213f208b2ccb51f4f7752ea214fef03be73cab2b"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 2,
      "deletions": 6
    },
    "files": [
      {
        "sha": "f03ffb3794ba5446cfc7731861e591cda52f9d01",
        "filename": "src/keystore.h",
        "status": "modified",
        "additions": 2,
        "deletions": 6,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/16f94b8c51a1622f658f617c0740850adc7c5221/src/keystore.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/16f94b8c51a1622f658f617c0740850adc7c5221/src/keystore.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/keystore.h?ref=16f94b8c51a1622f658f617c0740850adc7c5221",
        "patch": "@@ -120,12 +120,8 @@ class CBasicKeyStore : public CKeyStore\n         setAddress.clear();\n         {\n             LOCK(cs_KeyStore);\n-            KeyMap::const_iterator mi = mapKeys.begin();\n-            while (mi != mapKeys.end())\n-            {\n-                setAddress.insert((*mi).first);\n-                mi++;\n-            }\n+            KeyMap::const_iterator mi;\n+            for (mi = mapKeys.begin(); mi != mapKeys.end(); ++mi) setAddress.insert((*mi).first);\n         }\n     }\n     bool GetKey(const CKeyID &address, CKey &keyOut) const"
      }
    ]
  },
  {
    "sha": "9c8de278b43a022c45f5329dd8f7f467f897eb65",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5YzhkZTI3OGI0M2EwMjJjNDVmNTMyOWRkOGY3ZjQ2N2Y4OTdlYjY1",
    "commit": {
      "author": {
        "name": "0xDEADFACE",
        "email": "masmfan@gmail.com",
        "date": "2016-02-14T18:13:06Z"
      },
      "committer": {
        "name": "0xDEADFACE",
        "email": "masmfan@gmail.com",
        "date": "2016-02-14T18:13:06Z"
      },
      "message": "Examples and missed file.",
      "tree": {
        "sha": "931cd5eadc73a697a4a5cc936561b8772e669b51",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/931cd5eadc73a697a4a5cc936561b8772e669b51"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9c8de278b43a022c45f5329dd8f7f467f897eb65",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9c8de278b43a022c45f5329dd8f7f467f897eb65",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9c8de278b43a022c45f5329dd8f7f467f897eb65",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9c8de278b43a022c45f5329dd8f7f467f897eb65/comments",
    "author": {
      "login": "0xDEADFACE",
      "id": 6503509,
      "node_id": "MDQ6VXNlcjY1MDM1MDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6503509?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xDEADFACE",
      "html_url": "https://github.com/0xDEADFACE",
      "followers_url": "https://api.github.com/users/0xDEADFACE/followers",
      "following_url": "https://api.github.com/users/0xDEADFACE/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xDEADFACE/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xDEADFACE/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xDEADFACE/subscriptions",
      "organizations_url": "https://api.github.com/users/0xDEADFACE/orgs",
      "repos_url": "https://api.github.com/users/0xDEADFACE/repos",
      "events_url": "https://api.github.com/users/0xDEADFACE/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xDEADFACE/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "0xDEADFACE",
      "id": 6503509,
      "node_id": "MDQ6VXNlcjY1MDM1MDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6503509?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xDEADFACE",
      "html_url": "https://github.com/0xDEADFACE",
      "followers_url": "https://api.github.com/users/0xDEADFACE/followers",
      "following_url": "https://api.github.com/users/0xDEADFACE/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xDEADFACE/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xDEADFACE/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xDEADFACE/subscriptions",
      "organizations_url": "https://api.github.com/users/0xDEADFACE/orgs",
      "repos_url": "https://api.github.com/users/0xDEADFACE/repos",
      "events_url": "https://api.github.com/users/0xDEADFACE/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xDEADFACE/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d8f174b14a88165bef97daebdcce7a4f0c0aeef1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d8f174b14a88165bef97daebdcce7a4f0c0aeef1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d8f174b14a88165bef97daebdcce7a4f0c0aeef1"
      }
    ],
    "stats": {
      "total": 84,
      "additions": 84,
      "deletions": 0
    },
    "files": [
      {
        "sha": "e6ae1a0f6b2b22167b4cff7f099a0eed9d355e02",
        "filename": "doc/EncryptRPC.txt",
        "status": "added",
        "additions": 32,
        "deletions": 0,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9c8de278b43a022c45f5329dd8f7f467f897eb65/doc/EncryptRPC.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9c8de278b43a022c45f5329dd8f7f467f897eb65/doc/EncryptRPC.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/EncryptRPC.txt?ref=9c8de278b43a022c45f5329dd8f7f467f897eb65",
        "patch": "@@ -0,0 +1,32 @@\n+Encryption RPC api allows you to encrypt an arbitrary data bytes with some public key. Only owner of corresponding private key will be able to recover the original data stream.\n+\n+Example\n+\n+1. Let's generate new novacoin address first.\n+\n+> getnewaddress\n+4NZFZZS9b8iawVA8sYtHsqNbpq57envuBz\n+\n+2. Then run validateaddress to dump its public key\n+\n+> validateaddress 4NZFZZS9b8iawVA8sYtHsqNbpq57envuBz\n+{\n+\"isvalid\" : true,\n+\"address\" : \"4NZFZZS9b8iawVA8sYtHsqNbpq57envuBz\",\n+\"ismine\" : true,\n+\"watchonly\" : false,\n+\"isscript\" : false,\n+\"pubkey\" : \"023ca82f71f40d18f5cf6a696367a4172b87d7b3db5f45086bdb4bd4a3e3e9bde9\",\n+\"iscompressed\" : true,\n+\"account\" : \"\"\n+}\n+\n+3. Trying to encrypt hex representation of \"Hello world!\" string using this public key.\n+\n+> encryptdata 023ca82f71f40d18f5cf6a696367a4172b87d7b3db5f45086bdb4bd4a3e3e9bde9 48656c6c6f20776f726c6421\n+02a2fe5afb10c40fc64552e1b81d8b4e991838d50c6a7129bd9f466eee29a5ab9def7cc5a3b1b526d59d06178fa4471b778e80bf8f72ae34889e58a4568f8ad2a3ecc9004a\n+\n+4. Now we should be able to decrypt that cryptogram into original byte stream.\n+\n+> decryptdata 4NZFZZS9b8iawVA8sYtHsqNbpq57envuBz 02a2fe5afb10c40fc64552e1b81d8b4e991838d50c6a7129bd9f466eee29a5ab9def7cc5a3b1b526d59d06178fa4471b778e80bf8f72ae34889e58a4568f8ad2a3ecc9004a\n+48656c6c6f20776f726c6421"
      },
      {
        "sha": "056917636608c91382e1826b959929d0f0dffad2",
        "filename": "src/rpccrypt.cpp",
        "status": "added",
        "additions": 52,
        "deletions": 0,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9c8de278b43a022c45f5329dd8f7f467f897eb65/src/rpccrypt.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9c8de278b43a022c45f5329dd8f7f467f897eb65/src/rpccrypt.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpccrypt.cpp?ref=9c8de278b43a022c45f5329dd8f7f467f897eb65",
        "patch": "@@ -0,0 +1,52 @@\n+// Copyright (c) 2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2012 The Bitcoin developers\n+// Distributed under the MIT/X11 software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"wallet.h\"\n+#include \"walletdb.h\"\n+#include \"bitcoinrpc.h\"\n+#include \"init.h\"\n+#include \"util.h\"\n+#include \"ntp.h\"\n+#include \"base58.h\"\n+\n+using namespace json_spirit;\n+using namespace std;\n+\n+Value encryptdata(const Array& params, bool fHelp)\n+{\n+    if (fHelp || params.size() != 2)\n+        throw runtime_error(\n+            \"encryptdata <public key> <hex data>\\n\"\n+            \"Encrypt octet stream with provided public key..\\n\");\n+\n+    CPubKey pubKey(ParseHex(params[0].get_str()));\n+\n+    vector<unsigned char> vchEncrypted;\n+    pubKey.EncryptData(ParseHex(params[1].get_str()), vchEncrypted);\n+\n+    return HexStr(vchEncrypted);\n+}\n+\n+Value decryptdata(const Array& params, bool fHelp)\n+{\n+    if (fHelp || params.size() != 2)\n+        throw runtime_error(\n+            \"decryptdata <novacoin address> <encrypted stream>\\n\"\n+            \"Decrypt octet stream.\\n\");\n+\n+    EnsureWalletIsUnlocked();\n+    CBitcoinAddress addr(params[0].get_str());\n+\n+    CKeyID keyID;\n+    addr.GetKeyID(keyID);\n+\n+    CKey key;\n+    pwalletMain->GetKey(keyID, key);\n+\n+    vector<unsigned char> vchDecrypted;\n+    key.DecryptData(ParseHex(params[1].get_str()), vchDecrypted);\n+\n+    return HexStr(vchDecrypted);\n+}"
      }
    ]
  },
  {
    "sha": "379ba3caf07cca22dc65c6c6ba49975cd00c9860",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNzliYTNjYWYwN2NjYTIyZGM2NWM2YzZiYTQ5OTc1Y2QwMGM5ODYw",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "CryptoManiac@users.noreply.github.com",
        "date": "2016-02-14T19:17:22Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "CryptoManiac@users.noreply.github.com",
        "date": "2016-02-14T19:17:22Z"
      },
      "message": "Merge pull request #275 from svost/patch\n\nfDetachDB missed in constructor",
      "tree": {
        "sha": "54bea9bbf2a65027a306291d0225d63009781bcc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/54bea9bbf2a65027a306291d0225d63009781bcc"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/379ba3caf07cca22dc65c6c6ba49975cd00c9860",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/379ba3caf07cca22dc65c6c6ba49975cd00c9860",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/379ba3caf07cca22dc65c6c6ba49975cd00c9860",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/379ba3caf07cca22dc65c6c6ba49975cd00c9860/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9c8de278b43a022c45f5329dd8f7f467f897eb65",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9c8de278b43a022c45f5329dd8f7f467f897eb65",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9c8de278b43a022c45f5329dd8f7f467f897eb65"
      },
      {
        "sha": "16f94b8c51a1622f658f617c0740850adc7c5221",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/16f94b8c51a1622f658f617c0740850adc7c5221",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/16f94b8c51a1622f658f617c0740850adc7c5221"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 3,
      "deletions": 11
    },
    "files": [
      {
        "sha": "aa46cec079f44e80a34b4e586a513277b3c2210c",
        "filename": "src/db.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 5,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/379ba3caf07cca22dc65c6c6ba49975cd00c9860/src/db.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/379ba3caf07cca22dc65c6c6ba49975cd00c9860/src/db.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/db.cpp?ref=379ba3caf07cca22dc65c6c6ba49975cd00c9860",
        "patch": "@@ -42,11 +42,7 @@ void CDBEnv::EnvShutdown()\n         DbEnv(0).remove(strPath.c_str(), 0);\n }\n \n-CDBEnv::CDBEnv() : dbenv(DB_CXX_NO_EXCEPTIONS)\n-{\n-    fDbEnvInit = false;\n-    fMockDb = false;\n-}\n+CDBEnv::CDBEnv() : dbenv(DB_CXX_NO_EXCEPTIONS), fDetachDB(false), fDbEnvInit(false), fMockDb(false) { }\n \n CDBEnv::~CDBEnv()\n {"
      },
      {
        "sha": "f03ffb3794ba5446cfc7731861e591cda52f9d01",
        "filename": "src/keystore.h",
        "status": "modified",
        "additions": 2,
        "deletions": 6,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/379ba3caf07cca22dc65c6c6ba49975cd00c9860/src/keystore.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/379ba3caf07cca22dc65c6c6ba49975cd00c9860/src/keystore.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/keystore.h?ref=379ba3caf07cca22dc65c6c6ba49975cd00c9860",
        "patch": "@@ -120,12 +120,8 @@ class CBasicKeyStore : public CKeyStore\n         setAddress.clear();\n         {\n             LOCK(cs_KeyStore);\n-            KeyMap::const_iterator mi = mapKeys.begin();\n-            while (mi != mapKeys.end())\n-            {\n-                setAddress.insert((*mi).first);\n-                mi++;\n-            }\n+            KeyMap::const_iterator mi;\n+            for (mi = mapKeys.begin(); mi != mapKeys.end(); ++mi) setAddress.insert((*mi).first);\n         }\n     }\n     bool GetKey(const CKeyID &address, CKey &keyOut) const"
      }
    ]
  },
  {
    "sha": "a267c7697fcc3c96781da212156ae1595289cc8e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphMjY3Yzc2OTdmY2MzYzk2NzgxZGEyMTIxNTZhZTE1OTUyODljYzhl",
    "commit": {
      "author": {
        "name": "svost",
        "email": "svost@users.noreply.github.com",
        "date": "2016-02-14T21:35:17Z"
      },
      "committer": {
        "name": "svost",
        "email": "svost@users.noreply.github.com",
        "date": "2016-02-14T21:35:17Z"
      },
      "message": "Header guard added",
      "tree": {
        "sha": "0c48b7bdd4f408be8b4c5af0f19cfe262a406135",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0c48b7bdd4f408be8b4c5af0f19cfe262a406135"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a267c7697fcc3c96781da212156ae1595289cc8e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a267c7697fcc3c96781da212156ae1595289cc8e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a267c7697fcc3c96781da212156ae1595289cc8e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a267c7697fcc3c96781da212156ae1595289cc8e/comments",
    "author": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "379ba3caf07cca22dc65c6c6ba49975cd00c9860",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/379ba3caf07cca22dc65c6c6ba49975cd00c9860",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/379ba3caf07cca22dc65c6c6ba49975cd00c9860"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 8,
      "deletions": 0
    },
    "files": [
      {
        "sha": "464b3edced9af33c2131660788f40dca3915ff43",
        "filename": "src/ntp.h",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a267c7697fcc3c96781da212156ae1595289cc8e/src/ntp.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a267c7697fcc3c96781da212156ae1595289cc8e/src/ntp.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/ntp.h?ref=a267c7697fcc3c96781da212156ae1595289cc8e",
        "patch": "@@ -1,3 +1,9 @@\n+// Copyright (c) 2013-2016 The NovaCoin developers\n+// Distributed under the MIT/X11 software license, see the accompanying\n+// file COPYING or https://opensource.org/licenses/mit-license.php\n+#ifndef NOVACOIN_NTP_H\n+#define NOVACOIN_NTP_H\n+\n // Get time from random server and return server address.\n int64_t NtpGetTime(CNetAddr& ip);\n \n@@ -11,3 +17,5 @@ void ThreadNtpSamples(void* parg);\n \n // NTP offset\n int64_t GetNtpOffset();\n+\n+#endif // NOVACOIN_NTP_H"
      }
    ]
  },
  {
    "sha": "4bbf8430595fc972cfc7b3215d0792195af1fa3a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0YmJmODQzMDU5NWZjOTcyY2ZjN2IzMjE1ZDA3OTIxOTVhZjFmYTNh",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "CryptoManiac@users.noreply.github.com",
        "date": "2016-02-15T01:06:40Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "CryptoManiac@users.noreply.github.com",
        "date": "2016-02-15T01:06:40Z"
      },
      "message": "Merge pull request #276 from svost/patch\n\nMinor fix",
      "tree": {
        "sha": "0c48b7bdd4f408be8b4c5af0f19cfe262a406135",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0c48b7bdd4f408be8b4c5af0f19cfe262a406135"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4bbf8430595fc972cfc7b3215d0792195af1fa3a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4bbf8430595fc972cfc7b3215d0792195af1fa3a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4bbf8430595fc972cfc7b3215d0792195af1fa3a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4bbf8430595fc972cfc7b3215d0792195af1fa3a/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "379ba3caf07cca22dc65c6c6ba49975cd00c9860",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/379ba3caf07cca22dc65c6c6ba49975cd00c9860",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/379ba3caf07cca22dc65c6c6ba49975cd00c9860"
      },
      {
        "sha": "a267c7697fcc3c96781da212156ae1595289cc8e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a267c7697fcc3c96781da212156ae1595289cc8e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a267c7697fcc3c96781da212156ae1595289cc8e"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 8,
      "deletions": 0
    },
    "files": [
      {
        "sha": "464b3edced9af33c2131660788f40dca3915ff43",
        "filename": "src/ntp.h",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4bbf8430595fc972cfc7b3215d0792195af1fa3a/src/ntp.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4bbf8430595fc972cfc7b3215d0792195af1fa3a/src/ntp.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/ntp.h?ref=4bbf8430595fc972cfc7b3215d0792195af1fa3a",
        "patch": "@@ -1,3 +1,9 @@\n+// Copyright (c) 2013-2016 The NovaCoin developers\n+// Distributed under the MIT/X11 software license, see the accompanying\n+// file COPYING or https://opensource.org/licenses/mit-license.php\n+#ifndef NOVACOIN_NTP_H\n+#define NOVACOIN_NTP_H\n+\n // Get time from random server and return server address.\n int64_t NtpGetTime(CNetAddr& ip);\n \n@@ -11,3 +17,5 @@ void ThreadNtpSamples(void* parg);\n \n // NTP offset\n int64_t GetNtpOffset();\n+\n+#endif // NOVACOIN_NTP_H"
      }
    ]
  },
  {
    "sha": "a61b9f488d1e20b5382fca977a2d937feac791f8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNjFiOWY0ODhkMWUyMGI1MzgyZmNhOTc3YTJkOTM3ZmVhYzc5MWY4",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-02-15T18:14:46Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-02-15T18:14:46Z"
      },
      "message": "Comparison fix",
      "tree": {
        "sha": "bf366c7dfeffc563cbd9d736bec1610ca211cd91",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bf366c7dfeffc563cbd9d736bec1610ca211cd91"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a61b9f488d1e20b5382fca977a2d937feac791f8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a61b9f488d1e20b5382fca977a2d937feac791f8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a61b9f488d1e20b5382fca977a2d937feac791f8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a61b9f488d1e20b5382fca977a2d937feac791f8/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4bbf8430595fc972cfc7b3215d0792195af1fa3a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4bbf8430595fc972cfc7b3215d0792195af1fa3a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4bbf8430595fc972cfc7b3215d0792195af1fa3a"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "a1ab2a398b7377cd060f2c2191d64587446da10f",
        "filename": "src/key.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a61b9f488d1e20b5382fca977a2d937feac791f8/src/key.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a61b9f488d1e20b5382fca977a2d937feac791f8/src/key.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.cpp?ref=a61b9f488d1e20b5382fca977a2d937feac791f8",
        "patch": "@@ -803,7 +803,7 @@ bool CMalleableKey::SetSecrets(const CSecret &pvchSecretL, const CSecret &pvchSe\n     Reset();\n     CKey L, H;\n \n-    if (pvchSecretL.size() != 32 || !pvchSecretH.size() != 32 || !L.SetSecret(pvchSecretL, true) || !H.SetSecret(pvchSecretH, true))\n+    if (pvchSecretL.size() != 32 || pvchSecretH.size() != 32 || !L.SetSecret(pvchSecretL, true) || !H.SetSecret(pvchSecretH, true))\n     {\n         nVersion = 0;\n         return false;"
      }
    ]
  },
  {
    "sha": "9d7059e6d6470d1dd6473288e7c23ca24a057988",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ZDcwNTllNmQ2NDcwZDFkZDY0NzMyODhlN2MyM2NhMjRhMDU3OTg4",
    "commit": {
      "author": {
        "name": "svost",
        "email": "svost@users.noreply.github.com",
        "date": "2016-02-15T18:22:44Z"
      },
      "committer": {
        "name": "svost",
        "email": "svost@users.noreply.github.com",
        "date": "2016-02-15T18:22:44Z"
      },
      "message": "Fix gcc Wreorder warning",
      "tree": {
        "sha": "86b00bdfa96a169bee9a61552988b65cb6f5f55b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/86b00bdfa96a169bee9a61552988b65cb6f5f55b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9d7059e6d6470d1dd6473288e7c23ca24a057988",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9d7059e6d6470d1dd6473288e7c23ca24a057988",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9d7059e6d6470d1dd6473288e7c23ca24a057988",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9d7059e6d6470d1dd6473288e7c23ca24a057988/comments",
    "author": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4bbf8430595fc972cfc7b3215d0792195af1fa3a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4bbf8430595fc972cfc7b3215d0792195af1fa3a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4bbf8430595fc972cfc7b3215d0792195af1fa3a"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "6dde84e90fec14f166235d456c382f71e364aeec",
        "filename": "src/db.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9d7059e6d6470d1dd6473288e7c23ca24a057988/src/db.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9d7059e6d6470d1dd6473288e7c23ca24a057988/src/db.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/db.cpp?ref=9d7059e6d6470d1dd6473288e7c23ca24a057988",
        "patch": "@@ -42,7 +42,7 @@ void CDBEnv::EnvShutdown()\n         DbEnv(0).remove(strPath.c_str(), 0);\n }\n \n-CDBEnv::CDBEnv() : dbenv(DB_CXX_NO_EXCEPTIONS), fDetachDB(false), fDbEnvInit(false), fMockDb(false) { }\n+CDBEnv::CDBEnv() : fDetachDB(false), fDbEnvInit(false), fMockDb(false), dbenv(DB_CXX_NO_EXCEPTIONS) { }\n \n CDBEnv::~CDBEnv()\n {"
      }
    ]
  },
  {
    "sha": "84dbd33baf5330ef883d1ede208d5a17ad5c736e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4NGRiZDMzYmFmNTMzMGVmODgzZDFlZGUyMDhkNWExN2FkNWM3MzZl",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-02-15T18:23:11Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-02-15T18:23:11Z"
      },
      "message": "Add copy constructor to prevent undefined behaviour.",
      "tree": {
        "sha": "3cde9e91e44fc9fc5dbbfd57308dfaefd9c1b899",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3cde9e91e44fc9fc5dbbfd57308dfaefd9c1b899"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/84dbd33baf5330ef883d1ede208d5a17ad5c736e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/84dbd33baf5330ef883d1ede208d5a17ad5c736e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/84dbd33baf5330ef883d1ede208d5a17ad5c736e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/84dbd33baf5330ef883d1ede208d5a17ad5c736e/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a61b9f488d1e20b5382fca977a2d937feac791f8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a61b9f488d1e20b5382fca977a2d937feac791f8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a61b9f488d1e20b5382fca977a2d937feac791f8"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 6,
      "deletions": 0
    },
    "files": [
      {
        "sha": "38ebe764c993fdd38565bf407a760d49614b36be",
        "filename": "src/key.h",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/84dbd33baf5330ef883d1ede208d5a17ad5c736e/src/key.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/84dbd33baf5330ef883d1ede208d5a17ad5c736e/src/key.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.h?ref=84dbd33baf5330ef883d1ede208d5a17ad5c736e",
        "patch": "@@ -218,6 +218,12 @@ class CMalleablePubKey\n \n public:\n     CMalleablePubKey() { nVersion = CMalleablePubKey::CURRENT_VERSION; }\n+    CMalleablePubKey(const CMalleablePubKey& mpk)\n+    {\n+        nVersion = mpk.nVersion;\n+        pubKeyL = mpk.pubKeyL;\n+        pubKeyH = mpk.pubKeyH;\n+    }\n     CMalleablePubKey(const std::string& strMalleablePubKey) { SetString(strMalleablePubKey); }\n     CMalleablePubKey(const CPubKey &pubKeyInL, const CPubKey &pubKeyInH) : pubKeyL(pubKeyInL), pubKeyH(pubKeyInH) { nVersion = CMalleablePubKey::CURRENT_VERSION; }\n     CMalleablePubKey(const std::vector<unsigned char> &pubKeyInL, const std::vector<unsigned char> &pubKeyInH) : pubKeyL(pubKeyInL), pubKeyH(pubKeyInH) { nVersion = CMalleablePubKey::CURRENT_VERSION; }"
      }
    ]
  },
  {
    "sha": "c12fd552e3037edbe9fc7a117ed0780bf727077a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjMTJmZDU1MmUzMDM3ZWRiZTlmYzdhMTE3ZWQwNzgwYmY3MjcwNzdh",
    "commit": {
      "author": {
        "name": "svost",
        "email": "svost@users.noreply.github.com",
        "date": "2016-02-15T18:52:07Z"
      },
      "committer": {
        "name": "svost",
        "email": "svost@users.noreply.github.com",
        "date": "2016-02-15T18:52:07Z"
      },
      "message": "Move the constant variable outside the loop",
      "tree": {
        "sha": "da34608d49245324b44c81bbcef750844b6333f9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/da34608d49245324b44c81bbcef750844b6333f9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c12fd552e3037edbe9fc7a117ed0780bf727077a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c12fd552e3037edbe9fc7a117ed0780bf727077a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c12fd552e3037edbe9fc7a117ed0780bf727077a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c12fd552e3037edbe9fc7a117ed0780bf727077a/comments",
    "author": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9d7059e6d6470d1dd6473288e7c23ca24a057988",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9d7059e6d6470d1dd6473288e7c23ca24a057988",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9d7059e6d6470d1dd6473288e7c23ca24a057988"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 4,
      "deletions": 2
    },
    "files": [
      {
        "sha": "81d519a72edfe716fc5b7824b780abd220b09100",
        "filename": "src/db.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c12fd552e3037edbe9fc7a117ed0780bf727077a/src/db.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c12fd552e3037edbe9fc7a117ed0780bf727077a/src/db.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/db.cpp?ref=c12fd552e3037edbe9fc7a117ed0780bf727077a",
        "patch": "@@ -396,7 +396,8 @@ bool CDB::Rewrite(const string& strFile, const char* pszSkip)\n                     }\n \n                     Dbc* pcursor = db.GetCursor();\n-                    if (pcursor)\n+                    if (pcursor) {\n+                        size_t pszSkipLen = strlen(pszSkip);\n                         while (fSuccess)\n                         {\n                             CDataStream ssKey(SER_DISK, CLIENT_VERSION);\n@@ -414,7 +415,7 @@ bool CDB::Rewrite(const string& strFile, const char* pszSkip)\n                                 break;\n                             }\n                             if (pszSkip &&\n-                                strncmp(&ssKey[0], pszSkip, std::min(ssKey.size(), strlen(pszSkip))) == 0)\n+                                strncmp(&ssKey[0], pszSkip, std::min(ssKey.size(), pszSkipLen)) == 0)\n                                 continue;\n                             if (strncmp(&ssKey[0], \"\\x07version\", 8) == 0)\n                             {\n@@ -428,6 +429,7 @@ bool CDB::Rewrite(const string& strFile, const char* pszSkip)\n                             if (ret2 > 0)\n                                 fSuccess = false;\n                         }\n+                    }\n                     if (fSuccess)\n                     {\n                         db.Close();"
      }
    ]
  },
  {
    "sha": "5e82f02b5963c9dbe93898d1bf9ee804c6e1f918",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ZTgyZjAyYjU5NjNjOWRiZTkzODk4ZDFiZjllZTgwNGM2ZTFmOTE4",
    "commit": {
      "author": {
        "name": "svost",
        "email": "ya.nowa@yandex.ru",
        "date": "2016-02-16T13:30:55Z"
      },
      "committer": {
        "name": "svost",
        "email": "ya.nowa@yandex.ru",
        "date": "2016-02-16T13:30:55Z"
      },
      "message": "Remove namespaces from header files",
      "tree": {
        "sha": "1c66bfd343b3e346eac4607a87c1138bf8f45ae4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1c66bfd343b3e346eac4607a87c1138bf8f45ae4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5e82f02b5963c9dbe93898d1bf9ee804c6e1f918",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5e82f02b5963c9dbe93898d1bf9ee804c6e1f918",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5e82f02b5963c9dbe93898d1bf9ee804c6e1f918",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5e82f02b5963c9dbe93898d1bf9ee804c6e1f918/comments",
    "author": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4bbf8430595fc972cfc7b3215d0792195af1fa3a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4bbf8430595fc972cfc7b3215d0792195af1fa3a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4bbf8430595fc972cfc7b3215d0792195af1fa3a"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 9,
      "deletions": 14
    },
    "files": [
      {
        "sha": "464e401c8a7eae0710120f18f7ea82644f23ad97",
        "filename": "src/kernel.h",
        "status": "modified",
        "additions": 2,
        "deletions": 5,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5e82f02b5963c9dbe93898d1bf9ee804c6e1f918/src/kernel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5e82f02b5963c9dbe93898d1bf9ee804c6e1f918/src/kernel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/kernel.h?ref=5e82f02b5963c9dbe93898d1bf9ee804c6e1f918",
        "patch": "@@ -7,8 +7,6 @@\n #include \"main.h\"\n #include \"wallet.h\"\n \n-using namespace std;\n-\n // ChainDB upgrade time\n extern unsigned int nModifierUpgradeTime;\n \n@@ -55,8 +53,7 @@ inline int64_t GetWeight(int64_t nIntervalBeginning, int64_t nIntervalEnd)\n     //\n     // Maximum TimeWeight is 90 days.\n \n-    return min(nIntervalEnd - nIntervalBeginning - nStakeMinAge, (int64_t)nStakeMaxAge);\n+    return std::min(nIntervalEnd - nIntervalBeginning - nStakeMinAge, (int64_t)nStakeMaxAge);\n }\n \n-\n-#endif // PPCOIN_KERNEL_H\n+#endif // PPCOIN_KERNEL_H\n\\ No newline at end of file"
      },
      {
        "sha": "93ee62cbea4a8f211314809c894dc007e94a137e",
        "filename": "src/kernel_worker.h",
        "status": "modified",
        "additions": 7,
        "deletions": 9,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5e82f02b5963c9dbe93898d1bf9ee804c6e1f918/src/kernel_worker.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5e82f02b5963c9dbe93898d1bf9ee804c6e1f918/src/kernel_worker.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/kernel_worker.h?ref=5e82f02b5963c9dbe93898d1bf9ee804c6e1f918",
        "patch": "@@ -1,27 +1,25 @@\n-#ifndef BITCOIN_HERNELWORKER_H\n-#define BITCOIN_HERNELWORKER_H\n+#ifndef NOVACOIN_KERNELWORKER_H\n+#define NOVACOIN_KERNELWORKER_H\n \n #include <vector>\n \n-using namespace std;\n-\n class KernelWorker\n {\n public:\n     KernelWorker()\n     { }\n     KernelWorker(unsigned char *kernel, uint32_t nBits, uint32_t nInputTxTime, int64_t nValueIn, uint32_t nIntervalBegin, uint32_t nIntervalEnd);\n     void Do();\n-    vector<pair<uint256,uint32_t> >& GetSolutions();\n+    std::vector<std::pair<uint256,uint32_t> >& GetSolutions();\n \n private:\n     // One way hashing.\n     void Do_generic();\n \n     // Kernel solutions.\n-    vector<pair<uint256,uint32_t> > solutions;\n+    std::vector<std::pair<uint256,uint32_t> > solutions;\n \n-    // Kernel metadaya\n+    // Kernel metadata.\n     uint8_t *kernel;\n     uint32_t nBits;\n     uint32_t nInputTxTime;\n@@ -33,6 +31,6 @@ class KernelWorker\n };\n \n // Scan given kernel for solutions\n-bool ScanKernelBackward(unsigned char *kernel, uint32_t nBits, uint32_t nInputTxTime, int64_t nValueIn, pair<uint32_t, uint32_t> &SearchInterval, pair<uint256, uint32_t> &solution);\n+bool ScanKernelBackward(unsigned char *kernel, uint32_t nBits, uint32_t nInputTxTime, int64_t nValueIn, std::pair<uint32_t, uint32_t> &SearchInterval, std::pair<uint256, uint32_t> &solution);\n \n-#endif\n+#endif // NOVACOIN_KERNELWORKER_H\n\\ No newline at end of file"
      }
    ]
  },
  {
    "sha": "5bb062c5a612086fe46805cf6c0151345dd70243",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1YmIwNjJjNWE2MTIwODZmZTQ2ODA1Y2Y2YzAxNTEzNDVkZDcwMjQz",
    "commit": {
      "author": {
        "name": "svost",
        "email": "svost@users.noreply.github.com",
        "date": "2016-02-17T08:57:38Z"
      },
      "committer": {
        "name": "svost",
        "email": "svost@users.noreply.github.com",
        "date": "2016-02-17T08:57:38Z"
      },
      "message": "Format fix: %p prefer void*\n\n\u041a\u0430\u043a \u043f\u0440\u0438\u043c\u0435\u0440\r\nhttps://gcc.gnu.org/viewcvs/gcc/trunk/gcc/config/iq2000/iq2000.c?r1=192717&r2=192716&pathrev=192717",
      "tree": {
        "sha": "43ac03d029ad64b7952ba51ce4b5f0a3a3bd07df",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/43ac03d029ad64b7952ba51ce4b5f0a3a3bd07df"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5bb062c5a612086fe46805cf6c0151345dd70243",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5bb062c5a612086fe46805cf6c0151345dd70243",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5bb062c5a612086fe46805cf6c0151345dd70243",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5bb062c5a612086fe46805cf6c0151345dd70243/comments",
    "author": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c12fd552e3037edbe9fc7a117ed0780bf727077a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c12fd552e3037edbe9fc7a117ed0780bf727077a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c12fd552e3037edbe9fc7a117ed0780bf727077a"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "b4187098131bfa437879c9a3b73177f0c74d2382",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5bb062c5a612086fe46805cf6c0151345dd70243/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5bb062c5a612086fe46805cf6c0151345dd70243/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=5bb062c5a612086fe46805cf6c0151345dd70243",
        "patch": "@@ -1367,10 +1367,10 @@ class CBlockIndex\n     std::string ToString() const\n     {\n         return strprintf(\"CBlockIndex(nprev=%p, pnext=%p, nFile=%u, nBlockPos=%-6d nHeight=%d, nMint=%s, nMoneySupply=%s, nFlags=(%s)(%d)(%s), nStakeModifier=%016\" PRIx64 \", nStakeModifierChecksum=%08x, hashProofOfStake=%s, prevoutStake=(%s), nStakeTime=%d merkle=%s, hashBlock=%s)\",\n-            pprev, pnext, nFile, nBlockPos, nHeight,\n+            (const void*)pprev, (const void*)pnext, nFile, nBlockPos, nHeight,\n             FormatMoney(nMint).c_str(), FormatMoney(nMoneySupply).c_str(),\n             GeneratedStakeModifier() ? \"MOD\" : \"-\", GetStakeEntropyBit(), IsProofOfStake()? \"PoS\" : \"PoW\",\n-            nStakeModifier, nStakeModifierChecksum, \n+            nStakeModifier, nStakeModifierChecksum,\n             hashProofOfStake.ToString().c_str(),\n             prevoutStake.ToString().c_str(), nStakeTime,\n             hashMerkleRoot.ToString().c_str(),"
      }
    ]
  },
  {
    "sha": "fa743e433bb668772bcd06f280a3b886b0c87eb1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTc0M2U0MzNiYjY2ODc3MmJjZDA2ZjI4MGEzYjg4NmIwYzg3ZWIx",
    "commit": {
      "author": {
        "name": "Alex",
        "email": "balthazar.ad@gmail.com",
        "date": "2016-02-18T15:05:08Z"
      },
      "committer": {
        "name": "Alex",
        "email": "balthazar.ad@gmail.com",
        "date": "2016-02-18T15:05:08Z"
      },
      "message": "rpccrypt.cpp: Add message encryption and decryption methods.",
      "tree": {
        "sha": "e2b93f0f12f57c4d9e205735c776484d0a590ee3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e2b93f0f12f57c4d9e205735c776484d0a590ee3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa743e433bb668772bcd06f280a3b886b0c87eb1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa743e433bb668772bcd06f280a3b886b0c87eb1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa743e433bb668772bcd06f280a3b886b0c87eb1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa743e433bb668772bcd06f280a3b886b0c87eb1/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "84dbd33baf5330ef883d1ede208d5a17ad5c736e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/84dbd33baf5330ef883d1ede208d5a17ad5c736e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/84dbd33baf5330ef883d1ede208d5a17ad5c736e"
      }
    ],
    "stats": {
      "total": 64,
      "additions": 64,
      "deletions": 0
    },
    "files": [
      {
        "sha": "6cdeca63156de0076fd68446722d9e7ad4b5f86b",
        "filename": "doc/EncryptMsgAPI.txt",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa743e433bb668772bcd06f280a3b886b0c87eb1/doc/EncryptMsgAPI.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa743e433bb668772bcd06f280a3b886b0c87eb1/doc/EncryptMsgAPI.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/EncryptMsgAPI.txt?ref=fa743e433bb668772bcd06f280a3b886b0c87eb1",
        "patch": "@@ -0,0 +1,19 @@\n+> getnewaddress\n+4GELig4Rh4VZVnEnvp4v9cN29SH8F3JEeT\n+> validateaddress 4GELig4Rh4VZVnEnvp4v9cN29SH8F3JEeT\n+{\n+\"isvalid\" : true,\n+\"address\" : \"4GELig4Rh4VZVnEnvp4v9cN29SH8F3JEeT\",\n+\"ismine\" : true,\n+\"watchonly\" : false,\n+\"isscript\" : false,\n+\"pubkey\" : \"027742dfa3fd23b86f4fd6bfa4707da5dfe433db609d7d458f6576b7c84f20dcef\",\n+\"iscompressed\" : true,\n+\"account\" : \"\"\n+}\n+\n+> encryptmessage 027742dfa3fd23b86f4fd6bfa4707da5dfe433db609d7d458f6576b7c84f20dcef \"Hello world!\"\n+BHzjL9u1h8K1f5pqEZ4KLzmYXLD4qdZWWPnQPJdRgttWJ8QU4LbZLu4KxZpYcNNrgePkxVv2Ps8XV1AC34VCt3oBMdMW7HuaSB6\n+\n+> decryptmessage 4GELig4Rh4VZVnEnvp4v9cN29SH8F3JEeT BHzjL9u1h8K1f5pqEZ4KLzmYXLD4qdZWWPnQPJdRgttWJ8QU4LbZLu4KxZpYcNNrgePkxVv2Ps8XV1AC34VCt3oBMdMW7HuaSB6\n+Hello world!"
      },
      {
        "sha": "bf82c301032712c92e806e339cea02babc7588c5",
        "filename": "src/bitcoinrpc.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa743e433bb668772bcd06f280a3b886b0c87eb1/src/bitcoinrpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa743e433bb668772bcd06f280a3b886b0c87eb1/src/bitcoinrpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoinrpc.cpp?ref=fa743e433bb668772bcd06f280a3b886b0c87eb1",
        "patch": "@@ -323,6 +323,8 @@ static const CRPCCommand vRPCCommands[] =\n     { \"dumpmalleablekey\",       &dumpmalleablekey,       false,  false},\n     { \"encryptdata\",            &encryptdata,            false,  false },\n     { \"decryptdata\",            &decryptdata,            false,  false },\n+    { \"encryptmessage\",         &encryptmessage,         false,  false },\n+    { \"decryptmessage\",         &decryptmessage,         false,  false },\n     { \"sendalert\",              &sendalert,              false,  false},\n };\n "
      },
      {
        "sha": "9d032b9291f903d483f81e3b4455552ae0a9b10e",
        "filename": "src/bitcoinrpc.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa743e433bb668772bcd06f280a3b886b0c87eb1/src/bitcoinrpc.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa743e433bb668772bcd06f280a3b886b0c87eb1/src/bitcoinrpc.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoinrpc.h?ref=fa743e433bb668772bcd06f280a3b886b0c87eb1",
        "patch": "@@ -214,6 +214,8 @@ extern json_spirit::Value dumpmalleablekey(const json_spirit::Array& params, boo\n \n extern json_spirit::Value encryptdata(const json_spirit::Array& params, bool fHelp); // in rpccrypt.cpp\n extern json_spirit::Value decryptdata(const json_spirit::Array& params, bool fHelp);\n+extern json_spirit::Value encryptmessage(const json_spirit::Array& params, bool fHelp);\n+extern json_spirit::Value decryptmessage(const json_spirit::Array& params, bool fHelp);\n \n extern json_spirit::Value getrawtransaction(const json_spirit::Array& params, bool fHelp); // in rcprawtransaction.cpp\n extern json_spirit::Value listunspent(const json_spirit::Array& params, bool fHelp);"
      },
      {
        "sha": "aaccb701ffa82a127a57369e6f28911f54780958",
        "filename": "src/rpccrypt.cpp",
        "status": "modified",
        "additions": 41,
        "deletions": 0,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa743e433bb668772bcd06f280a3b886b0c87eb1/src/rpccrypt.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa743e433bb668772bcd06f280a3b886b0c87eb1/src/rpccrypt.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpccrypt.cpp?ref=fa743e433bb668772bcd06f280a3b886b0c87eb1",
        "patch": "@@ -50,3 +50,44 @@ Value decryptdata(const Array& params, bool fHelp)\n \n     return HexStr(vchDecrypted);\n }\n+\n+Value encryptmessage(const Array& params, bool fHelp)\n+{\n+    if (fHelp || params.size() != 2)\n+        throw runtime_error(\n+            \"encryptmessage <public key> <message string>\\n\"\n+            \"Encrypt message with provided public key.\\n\");\n+\n+    CPubKey pubKey(ParseHex(params[0].get_str()));\n+\n+    vector<unsigned char> vchEncrypted;\n+    string strData = params[1].get_str();\n+    pubKey.EncryptData(vector<unsigned char>(strData.begin(), strData.end()), vchEncrypted);\n+\n+    return EncodeBase58Check(vchEncrypted);\n+}\n+\n+Value decryptmessage(const Array& params, bool fHelp)\n+{\n+    if (fHelp || params.size() != 2)\n+        throw runtime_error(\n+            \"decryptdata <novacoin address> <encrypted message>\\n\"\n+            \"Decrypt message string.\\n\");\n+\n+    EnsureWalletIsUnlocked();\n+    CBitcoinAddress addr(params[0].get_str());\n+\n+    CKeyID keyID;\n+    addr.GetKeyID(keyID);\n+\n+    CKey key;\n+    pwalletMain->GetKey(keyID, key);\n+\n+    vector<unsigned char> vchEncrypted;\n+    if (!DecodeBase58Check(params[1].get_str(), vchEncrypted))\n+        throw runtime_error(\"Incorrect string\");\n+    vector<unsigned char> vchDecrypted;\n+    key.DecryptData(vchEncrypted, vchDecrypted);\n+\n+    return std::string((const char*)&vchDecrypted[0], vchDecrypted.size());\n+}"
      }
    ]
  },
  {
    "sha": "e8920545581f103fe1fe2b4bdb45b3f677284197",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplODkyMDU0NTU4MWYxMDNmZTFmZTJiNGJkYjQ1YjNmNjc3Mjg0MTk3",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "CryptoManiac@users.noreply.github.com",
        "date": "2016-02-18T15:07:28Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "CryptoManiac@users.noreply.github.com",
        "date": "2016-02-18T15:07:28Z"
      },
      "message": "Merge pull request #277 from svost/patch\n\nMinor fix",
      "tree": {
        "sha": "7a5695c89b29f3ce545340c3bd67eb1b209f7898",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7a5695c89b29f3ce545340c3bd67eb1b209f7898"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e8920545581f103fe1fe2b4bdb45b3f677284197",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e8920545581f103fe1fe2b4bdb45b3f677284197",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e8920545581f103fe1fe2b4bdb45b3f677284197",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e8920545581f103fe1fe2b4bdb45b3f677284197/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa743e433bb668772bcd06f280a3b886b0c87eb1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa743e433bb668772bcd06f280a3b886b0c87eb1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa743e433bb668772bcd06f280a3b886b0c87eb1"
      },
      {
        "sha": "5bb062c5a612086fe46805cf6c0151345dd70243",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5bb062c5a612086fe46805cf6c0151345dd70243",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5bb062c5a612086fe46805cf6c0151345dd70243"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 7,
      "deletions": 5
    },
    "files": [
      {
        "sha": "81d519a72edfe716fc5b7824b780abd220b09100",
        "filename": "src/db.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 3,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e8920545581f103fe1fe2b4bdb45b3f677284197/src/db.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e8920545581f103fe1fe2b4bdb45b3f677284197/src/db.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/db.cpp?ref=e8920545581f103fe1fe2b4bdb45b3f677284197",
        "patch": "@@ -42,7 +42,7 @@ void CDBEnv::EnvShutdown()\n         DbEnv(0).remove(strPath.c_str(), 0);\n }\n \n-CDBEnv::CDBEnv() : dbenv(DB_CXX_NO_EXCEPTIONS), fDetachDB(false), fDbEnvInit(false), fMockDb(false) { }\n+CDBEnv::CDBEnv() : fDetachDB(false), fDbEnvInit(false), fMockDb(false), dbenv(DB_CXX_NO_EXCEPTIONS) { }\n \n CDBEnv::~CDBEnv()\n {\n@@ -396,7 +396,8 @@ bool CDB::Rewrite(const string& strFile, const char* pszSkip)\n                     }\n \n                     Dbc* pcursor = db.GetCursor();\n-                    if (pcursor)\n+                    if (pcursor) {\n+                        size_t pszSkipLen = strlen(pszSkip);\n                         while (fSuccess)\n                         {\n                             CDataStream ssKey(SER_DISK, CLIENT_VERSION);\n@@ -414,7 +415,7 @@ bool CDB::Rewrite(const string& strFile, const char* pszSkip)\n                                 break;\n                             }\n                             if (pszSkip &&\n-                                strncmp(&ssKey[0], pszSkip, std::min(ssKey.size(), strlen(pszSkip))) == 0)\n+                                strncmp(&ssKey[0], pszSkip, std::min(ssKey.size(), pszSkipLen)) == 0)\n                                 continue;\n                             if (strncmp(&ssKey[0], \"\\x07version\", 8) == 0)\n                             {\n@@ -428,6 +429,7 @@ bool CDB::Rewrite(const string& strFile, const char* pszSkip)\n                             if (ret2 > 0)\n                                 fSuccess = false;\n                         }\n+                    }\n                     if (fSuccess)\n                     {\n                         db.Close();"
      },
      {
        "sha": "b4187098131bfa437879c9a3b73177f0c74d2382",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e8920545581f103fe1fe2b4bdb45b3f677284197/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e8920545581f103fe1fe2b4bdb45b3f677284197/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=e8920545581f103fe1fe2b4bdb45b3f677284197",
        "patch": "@@ -1367,10 +1367,10 @@ class CBlockIndex\n     std::string ToString() const\n     {\n         return strprintf(\"CBlockIndex(nprev=%p, pnext=%p, nFile=%u, nBlockPos=%-6d nHeight=%d, nMint=%s, nMoneySupply=%s, nFlags=(%s)(%d)(%s), nStakeModifier=%016\" PRIx64 \", nStakeModifierChecksum=%08x, hashProofOfStake=%s, prevoutStake=(%s), nStakeTime=%d merkle=%s, hashBlock=%s)\",\n-            pprev, pnext, nFile, nBlockPos, nHeight,\n+            (const void*)pprev, (const void*)pnext, nFile, nBlockPos, nHeight,\n             FormatMoney(nMint).c_str(), FormatMoney(nMoneySupply).c_str(),\n             GeneratedStakeModifier() ? \"MOD\" : \"-\", GetStakeEntropyBit(), IsProofOfStake()? \"PoS\" : \"PoW\",\n-            nStakeModifier, nStakeModifierChecksum, \n+            nStakeModifier, nStakeModifierChecksum,\n             hashProofOfStake.ToString().c_str(),\n             prevoutStake.ToString().c_str(), nStakeTime,\n             hashMerkleRoot.ToString().c_str(),"
      }
    ]
  },
  {
    "sha": "18719a4615a9d0295c49b890c8d35b852c957337",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxODcxOWE0NjE1YTlkMDI5NWM0OWI4OTBjOGQzNWI4NTJjOTU3MzM3",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "CryptoManiac@users.noreply.github.com",
        "date": "2016-02-18T15:07:42Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "CryptoManiac@users.noreply.github.com",
        "date": "2016-02-18T15:07:42Z"
      },
      "message": "Merge pull request #278 from svost/headers\n\nRemove namespaces from header files",
      "tree": {
        "sha": "20c3c7e98703ba3be63e89900dce1a0ccc98bc92",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/20c3c7e98703ba3be63e89900dce1a0ccc98bc92"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/18719a4615a9d0295c49b890c8d35b852c957337",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/18719a4615a9d0295c49b890c8d35b852c957337",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/18719a4615a9d0295c49b890c8d35b852c957337",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/18719a4615a9d0295c49b890c8d35b852c957337/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e8920545581f103fe1fe2b4bdb45b3f677284197",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e8920545581f103fe1fe2b4bdb45b3f677284197",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e8920545581f103fe1fe2b4bdb45b3f677284197"
      },
      {
        "sha": "5e82f02b5963c9dbe93898d1bf9ee804c6e1f918",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5e82f02b5963c9dbe93898d1bf9ee804c6e1f918",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5e82f02b5963c9dbe93898d1bf9ee804c6e1f918"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 9,
      "deletions": 14
    },
    "files": [
      {
        "sha": "464e401c8a7eae0710120f18f7ea82644f23ad97",
        "filename": "src/kernel.h",
        "status": "modified",
        "additions": 2,
        "deletions": 5,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/18719a4615a9d0295c49b890c8d35b852c957337/src/kernel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/18719a4615a9d0295c49b890c8d35b852c957337/src/kernel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/kernel.h?ref=18719a4615a9d0295c49b890c8d35b852c957337",
        "patch": "@@ -7,8 +7,6 @@\n #include \"main.h\"\n #include \"wallet.h\"\n \n-using namespace std;\n-\n // ChainDB upgrade time\n extern unsigned int nModifierUpgradeTime;\n \n@@ -55,8 +53,7 @@ inline int64_t GetWeight(int64_t nIntervalBeginning, int64_t nIntervalEnd)\n     //\n     // Maximum TimeWeight is 90 days.\n \n-    return min(nIntervalEnd - nIntervalBeginning - nStakeMinAge, (int64_t)nStakeMaxAge);\n+    return std::min(nIntervalEnd - nIntervalBeginning - nStakeMinAge, (int64_t)nStakeMaxAge);\n }\n \n-\n-#endif // PPCOIN_KERNEL_H\n+#endif // PPCOIN_KERNEL_H\n\\ No newline at end of file"
      },
      {
        "sha": "93ee62cbea4a8f211314809c894dc007e94a137e",
        "filename": "src/kernel_worker.h",
        "status": "modified",
        "additions": 7,
        "deletions": 9,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/18719a4615a9d0295c49b890c8d35b852c957337/src/kernel_worker.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/18719a4615a9d0295c49b890c8d35b852c957337/src/kernel_worker.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/kernel_worker.h?ref=18719a4615a9d0295c49b890c8d35b852c957337",
        "patch": "@@ -1,27 +1,25 @@\n-#ifndef BITCOIN_HERNELWORKER_H\n-#define BITCOIN_HERNELWORKER_H\n+#ifndef NOVACOIN_KERNELWORKER_H\n+#define NOVACOIN_KERNELWORKER_H\n \n #include <vector>\n \n-using namespace std;\n-\n class KernelWorker\n {\n public:\n     KernelWorker()\n     { }\n     KernelWorker(unsigned char *kernel, uint32_t nBits, uint32_t nInputTxTime, int64_t nValueIn, uint32_t nIntervalBegin, uint32_t nIntervalEnd);\n     void Do();\n-    vector<pair<uint256,uint32_t> >& GetSolutions();\n+    std::vector<std::pair<uint256,uint32_t> >& GetSolutions();\n \n private:\n     // One way hashing.\n     void Do_generic();\n \n     // Kernel solutions.\n-    vector<pair<uint256,uint32_t> > solutions;\n+    std::vector<std::pair<uint256,uint32_t> > solutions;\n \n-    // Kernel metadaya\n+    // Kernel metadata.\n     uint8_t *kernel;\n     uint32_t nBits;\n     uint32_t nInputTxTime;\n@@ -33,6 +31,6 @@ class KernelWorker\n };\n \n // Scan given kernel for solutions\n-bool ScanKernelBackward(unsigned char *kernel, uint32_t nBits, uint32_t nInputTxTime, int64_t nValueIn, pair<uint32_t, uint32_t> &SearchInterval, pair<uint256, uint32_t> &solution);\n+bool ScanKernelBackward(unsigned char *kernel, uint32_t nBits, uint32_t nInputTxTime, int64_t nValueIn, std::pair<uint32_t, uint32_t> &SearchInterval, std::pair<uint256, uint32_t> &solution);\n \n-#endif\n+#endif // NOVACOIN_KERNELWORKER_H\n\\ No newline at end of file"
      }
    ]
  },
  {
    "sha": "455f59ba9af626d4c6b202b96ae36561154de8f7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0NTVmNTliYTlhZjYyNmQ0YzZiMjAyYjk2YWUzNjU2MTE1NGRlOGY3",
    "commit": {
      "author": {
        "name": "svost",
        "email": "svost@users.noreply.github.com",
        "date": "2016-02-18T19:45:37Z"
      },
      "committer": {
        "name": "svost",
        "email": "svost@users.noreply.github.com",
        "date": "2016-02-18T19:45:37Z"
      },
      "message": "Removed dependency (boost::algorithm::starts_with)",
      "tree": {
        "sha": "02a8a95f7feaeda9610ddeed234b090977682ed9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/02a8a95f7feaeda9610ddeed234b090977682ed9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/455f59ba9af626d4c6b202b96ae36561154de8f7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/455f59ba9af626d4c6b202b96ae36561154de8f7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/455f59ba9af626d4c6b202b96ae36561154de8f7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/455f59ba9af626d4c6b202b96ae36561154de8f7/comments",
    "author": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "18719a4615a9d0295c49b890c8d35b852c957337",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/18719a4615a9d0295c49b890c8d35b852c957337",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/18719a4615a9d0295c49b890c8d35b852c957337"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 1,
      "deletions": 4
    },
    "files": [
      {
        "sha": "03bc607a9134c952673a8ae9802d76013ad17413",
        "filename": "src/irc.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 4,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/455f59ba9af626d4c6b202b96ae36561154de8f7/src/irc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/455f59ba9af626d4c6b202b96ae36561154de8f7/src/irc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/irc.cpp?ref=455f59ba9af626d4c6b202b96ae36561154de8f7",
        "patch": "@@ -7,10 +7,7 @@\n #include \"base58.h\"\n #include \"net.h\"\n \n-#include <boost/algorithm/string/predicate.hpp> // for startswith() and endswith()\n-\n using namespace std;\n-using namespace boost;\n \n int nGotIRCAddresses = 0;\n \n@@ -347,7 +344,7 @@ void ThreadIRCSeed2(void* parg)\n                 printf(\"IRC got join\\n\");\n             }\n \n-            if (boost::algorithm::starts_with(strName, \"u\"))\n+            if (strName.compare(0,1, \"u\") == 0)\n             {\n                 CAddress addr;\n                 if (DecodeAddress(strName, addr))"
      }
    ]
  },
  {
    "sha": "fb1e78e0e8d22db0552f0c9413c21c9ab8512d35",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYjFlNzhlMGU4ZDIyZGIwNTUyZjBjOTQxM2MyMWM5YWI4NTEyZDM1",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-02-18T21:22:21Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-02-18T21:22:21Z"
      },
      "message": "Wallet core: remove SendMoneyToDestination",
      "tree": {
        "sha": "dc6612806217f4f2c67873dbf3e3b3b7414b5ab4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/dc6612806217f4f2c67873dbf3e3b3b7414b5ab4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fb1e78e0e8d22db0552f0c9413c21c9ab8512d35",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fb1e78e0e8d22db0552f0c9413c21c9ab8512d35",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fb1e78e0e8d22db0552f0c9413c21c9ab8512d35",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fb1e78e0e8d22db0552f0c9413c21c9ab8512d35/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "18719a4615a9d0295c49b890c8d35b852c957337",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/18719a4615a9d0295c49b890c8d35b852c957337",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/18719a4615a9d0295c49b890c8d35b852c957337"
      }
    ],
    "stats": {
      "total": 39,
      "additions": 16,
      "deletions": 23
    },
    "files": [
      {
        "sha": "ca64fff8c543926967a1472cba586262e981bc5c",
        "filename": "src/rpcwallet.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 2,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fb1e78e0e8d22db0552f0c9413c21c9ab8512d35/src/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fb1e78e0e8d22db0552f0c9413c21c9ab8512d35/src/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.cpp?ref=fb1e78e0e8d22db0552f0c9413c21c9ab8512d35",
        "patch": "@@ -343,7 +343,11 @@ Value sendtoaddress(const Array& params, bool fHelp)\n     if (pwalletMain->IsLocked())\n         throw JSONRPCError(RPC_WALLET_UNLOCK_NEEDED, \"Error: Please enter the wallet passphrase with walletpassphrase first.\");\n \n-    string strError = pwalletMain->SendMoneyToDestination(address.Get(), nAmount, wtx);\n+    // Parse Bitcoin address\n+    CScript scriptPubKey;\n+    scriptPubKey.SetDestination(address.Get());\n+\n+    string strError = pwalletMain->SendMoney(scriptPubKey, nAmount, wtx);\n     if (strError != \"\")\n         throw JSONRPCError(RPC_WALLET_ERROR, strError);\n \n@@ -721,8 +725,12 @@ Value sendfrom(const Array& params, bool fHelp)\n     if (nAmount > nBalance)\n         throw JSONRPCError(RPC_WALLET_INSUFFICIENT_FUNDS, \"Account has insufficient funds\");\n \n+    // Parse Bitcoin address\n+    CScript scriptPubKey;\n+    scriptPubKey.SetDestination(address.Get());\n+\n     // Send\n-    string strError = pwalletMain->SendMoneyToDestination(address.Get(), nAmount, wtx);\n+    string strError = pwalletMain->SendMoney(scriptPubKey, nAmount, wtx);\n     if (strError != \"\")\n         throw JSONRPCError(RPC_WALLET_ERROR, strError);\n "
      },
      {
        "sha": "5eed75c1ca3ea557e3fbe21082ac9033e43c5f89",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 20,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fb1e78e0e8d22db0552f0c9413c21c9ab8512d35/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fb1e78e0e8d22db0552f0c9413c21c9ab8512d35/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=fb1e78e0e8d22db0552f0c9413c21c9ab8512d35",
        "patch": "@@ -2101,6 +2101,12 @@ bool CWallet::CommitTransaction(CWalletTx& wtxNew, CReserveKey& reservekey)\n \n string CWallet::SendMoney(CScript scriptPubKey, int64_t nValue, CWalletTx& wtxNew, bool fAskFee)\n {\n+    // Check amount\n+    if (nValue <= 0)\n+        return _(\"Invalid amount\");\n+    if (nValue + nTransactionFee > GetBalance())\n+        return _(\"Insufficient funds\");\n+\n     CReserveKey reservekey(this);\n     int64_t nFeeRequired;\n \n@@ -2136,26 +2142,6 @@ string CWallet::SendMoney(CScript scriptPubKey, int64_t nValue, CWalletTx& wtxNe\n     return \"\";\n }\n \n-\n-\n-string CWallet::SendMoneyToDestination(const CTxDestination& address, int64_t nValue, CWalletTx& wtxNew, bool fAskFee)\n-{\n-    // Check amount\n-    if (nValue <= 0)\n-        return _(\"Invalid amount\");\n-    if (nValue + nTransactionFee > GetBalance())\n-        return _(\"Insufficient funds\");\n-\n-    // Parse Bitcoin address\n-    CScript scriptPubKey;\n-    scriptPubKey.SetDestination(address);\n-\n-    return SendMoney(scriptPubKey, nValue, wtxNew, fAskFee);\n-}\n-\n-\n-\n-\n DBErrors CWallet::LoadWallet(bool& fFirstRunRet)\n {\n     if (!fFileBacked)"
      },
      {
        "sha": "bc8afa85058d1bdbc7009972de754ea8b650356e",
        "filename": "src/wallet.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fb1e78e0e8d22db0552f0c9413c21c9ab8512d35/src/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fb1e78e0e8d22db0552f0c9413c21c9ab8512d35/src/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.h?ref=fb1e78e0e8d22db0552f0c9413c21c9ab8512d35",
        "patch": "@@ -229,7 +229,6 @@ class CWallet : public CCryptoKeyStore\n     bool MergeCoins(const int64_t& nAmount, const int64_t& nMinValue, const int64_t& nMaxValue, std::list<uint256>& listMerged);\n \n     std::string SendMoney(CScript scriptPubKey, int64_t nValue, CWalletTx& wtxNew, bool fAskFee=false);\n-    std::string SendMoneyToDestination(const CTxDestination &address, int64_t nValue, CWalletTx& wtxNew, bool fAskFee=false);\n \n     bool NewKeyPool(unsigned int nSize = 0);\n     bool TopUpKeyPool(unsigned int nSize = 0);"
      }
    ]
  },
  {
    "sha": "2d834e1bd2ccba535a9940950b660cc11e50cc5f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyZDgzNGUxYmQyY2NiYTUzNWE5OTQwOTUwYjY2MGNjMTFlNTBjYzVm",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-02-18T21:48:26Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-02-18T21:48:26Z"
      },
      "message": "RPC: Modify sendtoaddress/sendfrom methods to treat public key pair as a variant of novacoin address.",
      "tree": {
        "sha": "08a50af8a09e1ceb0c60074835f60245932651c0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/08a50af8a09e1ceb0c60074835f60245932651c0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2d834e1bd2ccba535a9940950b660cc11e50cc5f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2d834e1bd2ccba535a9940950b660cc11e50cc5f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2d834e1bd2ccba535a9940950b660cc11e50cc5f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2d834e1bd2ccba535a9940950b660cc11e50cc5f/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fb1e78e0e8d22db0552f0c9413c21c9ab8512d35",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fb1e78e0e8d22db0552f0c9413c21c9ab8512d35",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fb1e78e0e8d22db0552f0c9413c21c9ab8512d35"
      }
    ],
    "stats": {
      "total": 58,
      "additions": 44,
      "deletions": 14
    },
    "files": [
      {
        "sha": "135314936d468dbfbddf4f67425f2fedd7eb4e5d",
        "filename": "src/rpcwallet.cpp",
        "status": "modified",
        "additions": 36,
        "deletions": 14,
        "changes": 50,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2d834e1bd2ccba535a9940950b660cc11e50cc5f/src/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2d834e1bd2ccba535a9940950b660cc11e50cc5f/src/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.cpp?ref=2d834e1bd2ccba535a9940950b660cc11e50cc5f",
        "patch": "@@ -323,9 +323,23 @@ Value sendtoaddress(const Array& params, bool fHelp)\n             \"<amount> is a real and is rounded to the nearest \" + FormatMoney(nMinimumInputValue)\n             + HelpRequiringPassphrase());\n \n-    CBitcoinAddress address(params[0].get_str());\n-    if (!address.IsValid())\n-        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid NovaCoin address\");\n+    // Parse address\n+    CScript scriptPubKey;\n+    string strAddress = params[0].get_str();\n+\n+    CBitcoinAddress address(strAddress);\n+    if (address.IsValid())\n+        scriptPubKey.SetDestination(address.Get());\n+    else\n+    {\n+        CMalleablePubKey mpk(strAddress);\n+        if (!mpk.IsValid())\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid NovaCoin address\");\n+\n+        CPubKey R, pubKeyVariant;\n+        mpk.GetVariant(R, pubKeyVariant);\n+        scriptPubKey.SetDestination(R, pubKeyVariant);\n+    }\n \n     // Amount\n     int64_t nAmount = AmountFromValue(params[1]);\n@@ -343,10 +357,6 @@ Value sendtoaddress(const Array& params, bool fHelp)\n     if (pwalletMain->IsLocked())\n         throw JSONRPCError(RPC_WALLET_UNLOCK_NEEDED, \"Error: Please enter the wallet passphrase with walletpassphrase first.\");\n \n-    // Parse Bitcoin address\n-    CScript scriptPubKey;\n-    scriptPubKey.SetDestination(address.Get());\n-\n     string strError = pwalletMain->SendMoney(scriptPubKey, nAmount, wtx);\n     if (strError != \"\")\n         throw JSONRPCError(RPC_WALLET_ERROR, strError);\n@@ -699,9 +709,25 @@ Value sendfrom(const Array& params, bool fHelp)\n             + HelpRequiringPassphrase());\n \n     string strAccount = AccountFromValue(params[0]);\n-    CBitcoinAddress address(params[1].get_str());\n-    if (!address.IsValid())\n-        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid NovaCoin address\");\n+\n+    // Parse address\n+    CScript scriptPubKey;\n+    string strAddress = params[0].get_str();\n+\n+    CBitcoinAddress address(strAddress);\n+    if (address.IsValid())\n+        scriptPubKey.SetDestination(address.Get());\n+    else\n+    {\n+        CMalleablePubKey mpk(strAddress);\n+        if (!mpk.IsValid())\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid NovaCoin address\");\n+\n+        CPubKey R, pubKeyVariant;\n+        mpk.GetVariant(R, pubKeyVariant);\n+        scriptPubKey.SetDestination(R, pubKeyVariant);\n+    }\n+\n     int64_t nAmount = AmountFromValue(params[2]);\n \n     if (nAmount < nMinimumInputValue)\n@@ -725,10 +751,6 @@ Value sendfrom(const Array& params, bool fHelp)\n     if (nAmount > nBalance)\n         throw JSONRPCError(RPC_WALLET_INSUFFICIENT_FUNDS, \"Account has insufficient funds\");\n \n-    // Parse Bitcoin address\n-    CScript scriptPubKey;\n-    scriptPubKey.SetDestination(address.Get());\n-\n     // Send\n     string strError = pwalletMain->SendMoney(scriptPubKey, nAmount, wtx);\n     if (strError != \"\")"
      },
      {
        "sha": "b79dc23923a4591ff68179ec405502c554f0db3f",
        "filename": "src/script.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2d834e1bd2ccba535a9940950b660cc11e50cc5f/src/script.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2d834e1bd2ccba535a9940950b660cc11e50cc5f/src/script.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script.cpp?ref=2d834e1bd2ccba535a9940950b660cc11e50cc5f",
        "patch": "@@ -1972,6 +1972,13 @@ void CScript::SetDestination(const CTxDestination& dest)\n     boost::apply_visitor(CScriptVisitor(this), dest);\n }\n \n+void CScript::SetDestination(const CPubKey& R, CPubKey& pubKeyVariant)\n+{\n+    this->clear();\n+    *this << pubKeyVariant << R << OP_DROP << OP_CHECKSIG;\n+}\n+\n+\n void CScript::SetMultisig(int nRequired, const std::vector<CKey>& keys)\n {\n     this->clear();"
      },
      {
        "sha": "ef13bf4a1976a8e1f9ac3e9c564610ffd1ec1088",
        "filename": "src/script.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2d834e1bd2ccba535a9940950b660cc11e50cc5f/src/script.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2d834e1bd2ccba535a9940950b660cc11e50cc5f/src/script.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script.h?ref=2d834e1bd2ccba535a9940950b660cc11e50cc5f",
        "patch": "@@ -557,6 +557,7 @@ class CScript : public std::vector<uint8_t>\n     bool HasCanonicalPushes() const;\n \n     void SetDestination(const CTxDestination& address);\n+    void SetDestination(const CPubKey& R, CPubKey& pubKeyVariant);\n     void SetMultisig(int nRequired, const std::vector<CKey>& keys);\n \n "
      }
    ]
  },
  {
    "sha": "50b8ba09b7f820cb29eddcf9a98f1ec6115b02f1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1MGI4YmEwOWI3ZjgyMGNiMjllZGRjZjlhOThmMWVjNjExNWIwMmYx",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-02-19T17:04:45Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-02-19T17:04:45Z"
      },
      "message": "Raw transactions: TX_PUBKEY_DROP parsing",
      "tree": {
        "sha": "fe90f1432f9c877e3bb21632e47746a7c443ca2f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fe90f1432f9c877e3bb21632e47746a7c443ca2f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/50b8ba09b7f820cb29eddcf9a98f1ec6115b02f1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/50b8ba09b7f820cb29eddcf9a98f1ec6115b02f1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/50b8ba09b7f820cb29eddcf9a98f1ec6115b02f1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/50b8ba09b7f820cb29eddcf9a98f1ec6115b02f1/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2d834e1bd2ccba535a9940950b660cc11e50cc5f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2d834e1bd2ccba535a9940950b660cc11e50cc5f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2d834e1bd2ccba535a9940950b660cc11e50cc5f"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 14,
      "deletions": 9
    },
    "files": [
      {
        "sha": "4bcf911fb3014257e070810cd85b528112316737",
        "filename": "src/rpcrawtransaction.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/50b8ba09b7f820cb29eddcf9a98f1ec6115b02f1/src/rpcrawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/50b8ba09b7f820cb29eddcf9a98f1ec6115b02f1/src/rpcrawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcrawtransaction.cpp?ref=50b8ba09b7f820cb29eddcf9a98f1ec6115b02f1",
        "patch": "@@ -40,6 +40,16 @@ void ScriptPubKeyToJSON(const CScript& scriptPubKey, Object& out, bool fIncludeH\n         out.push_back(Pair(\"reqSigs\", nRequired));\n         out.push_back(Pair(\"type\", GetTxnOutputType(type)));\n \n+        if (type == TX_PUBKEY_DROP)\n+        {\n+            vector<valtype> vSolutions;\n+            if (!Solver(scriptPubKey, type, vSolutions))\n+            {\n+                out.push_back(Pair(\"keyVariant\", HexStr(vSolutions[0])));\n+                out.push_back(Pair(\"R\", HexStr(vSolutions[1])));\n+            }\n+        }\n+\n         Array a;\n         BOOST_FOREACH(const CTxDestination& addr, addresses)\n             a.push_back(CBitcoinAddress(addr).ToString());"
      },
      {
        "sha": "e8bfab53cf1c48e053f3be070cfb8fba5e65ef74",
        "filename": "src/script.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 9,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/50b8ba09b7f820cb29eddcf9a98f1ec6115b02f1/src/script.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/50b8ba09b7f820cb29eddcf9a98f1ec6115b02f1/src/script.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script.cpp?ref=50b8ba09b7f820cb29eddcf9a98f1ec6115b02f1",
        "patch": "@@ -1507,14 +1507,9 @@ isminetype IsMine(const CKeyStore &keystore, const CScript& scriptPubKey)\n     case TX_PUBKEY_DROP:\n         {\n             CPubKey key = CPubKey(vSolutions[0]);\n-            if (keystore.HaveKey(key.GetID()))\n+            CPubKey R = CPubKey(vSolutions[1]);\n+            if (keystore.CheckOwnership(key, R))\n                 return MINE_SPENDABLE;\n-            else\n-            {\n-                CPubKey R = CPubKey(vSolutions[1]);\n-                if (keystore.CheckOwnership(key, R))\n-                    return MINE_SPENDABLE;\n-            }\n         }\n         break;\n     case TX_PUBKEYHASH:\n@@ -1559,7 +1554,7 @@ bool ExtractDestination(const CScript& scriptPubKey, CTxDestination& addressRet)\n     if (!Solver(scriptPubKey, whichType, vSolutions))\n         return false;\n \n-    if (whichType == TX_PUBKEY || whichType == TX_PUBKEY_DROP)\n+    if (whichType == TX_PUBKEY)\n     {\n         addressRet = CPubKey(vSolutions[0]).GetID();\n         return true;\n@@ -1623,7 +1618,7 @@ bool ExtractDestinations(const CScript& scriptPubKey, txnouttype& typeRet, vecto\n     vector<valtype> vSolutions;\n     if (!Solver(scriptPubKey, typeRet, vSolutions))\n         return false;\n-    if (typeRet == TX_NULL_DATA)\n+    if (typeRet == TX_NULL_DATA || typeRet == TX_PUBKEY_DROP)\n         return true;\n \n     if (typeRet == TX_MULTISIG)"
      }
    ]
  },
  {
    "sha": "d420f6281cb1ee6c5e731380e36b6445d84be63a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkNDIwZjYyODFjYjFlZTZjNWU3MzEzODBlMzZiNjQ0NWQ4NGJlNjNh",
    "commit": {
      "author": {
        "name": "alex",
        "email": "balthazar@yandex.ru",
        "date": "2016-02-19T17:39:31Z"
      },
      "committer": {
        "name": "alex",
        "email": "balthazar@yandex.ru",
        "date": "2016-02-19T17:39:31Z"
      },
      "message": "Don't inbclude listen port and testnet option into autogenerated config file.",
      "tree": {
        "sha": "0b58d41f82c672f3ceb7203b89f4122bc536846f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0b58d41f82c672f3ceb7203b89f4122bc536846f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d420f6281cb1ee6c5e731380e36b6445d84be63a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d420f6281cb1ee6c5e731380e36b6445d84be63a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d420f6281cb1ee6c5e731380e36b6445d84be63a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d420f6281cb1ee6c5e731380e36b6445d84be63a/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "50b8ba09b7f820cb29eddcf9a98f1ec6115b02f1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/50b8ba09b7f820cb29eddcf9a98f1ec6115b02f1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/50b8ba09b7f820cb29eddcf9a98f1ec6115b02f1"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 3,
      "deletions": 5
    },
    "files": [
      {
        "sha": "ece61840d587cb05c9258182cce18c781bb2257f",
        "filename": "src/protocol.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d420f6281cb1ee6c5e731380e36b6445d84be63a/src/protocol.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d420f6281cb1ee6c5e731380e36b6445d84be63a/src/protocol.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/protocol.h?ref=d420f6281cb1ee6c5e731380e36b6445d84be63a",
        "patch": "@@ -17,9 +17,9 @@\n #include \"uint256.h\"\n \n extern bool fTestNet;\n-static inline unsigned short GetDefaultPort(const bool testnet = fTestNet)\n+inline unsigned short GetDefaultPort()\n {\n-    return static_cast<unsigned short>(testnet ? 17777 : 7777);\n+    return static_cast<unsigned short>(fTestNet ? 17777 : 7777);\n }\n \n "
      },
      {
        "sha": "73621d8abdc3fd8fb9d79c887c8b4c81a726dbfb",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d420f6281cb1ee6c5e731380e36b6445d84be63a/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d420f6281cb1ee6c5e731380e36b6445d84be63a/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=d420f6281cb1ee6c5e731380e36b6445d84be63a",
        "patch": "@@ -1180,13 +1180,11 @@ void createConf()\n     pConf << \"rpcuser=user\\nrpcpassword=\"\n             + randomStrGen(15)\n             + \"\\nrpcport=8344\"\n-            + \"\\nport=7777\"\n             + \"\\n#(0=off, 1=on) daemon - run in the background as a daemon and accept commands\"\n             + \"\\ndaemon=0\"\n             + \"\\n#(0=off, 1=on) server - accept command line and JSON-RPC commands\"\n             + \"\\nserver=0\"\n-            + \"\\nrpcallowip=127.0.0.1\"\n-            + \"\\ntestnet=0\";\n+            + \"\\nrpcallowip=127.0.0.1\";\n     pConf.close();\n }\n "
      }
    ]
  },
  {
    "sha": "01983570a6033b9d3b6f7c11b51c9d19906a65af",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowMTk4MzU3MGE2MDMzYjlkM2I2ZjdjMTFiNTFjOWQxOTkwNmE2NWFm",
    "commit": {
      "author": {
        "name": "alex",
        "email": "balthazar@yandex.ru",
        "date": "2016-02-19T17:59:20Z"
      },
      "committer": {
        "name": "alex",
        "email": "balthazar@yandex.ru",
        "date": "2016-02-19T17:59:20Z"
      },
      "message": "Allow PUBKEY_DROP inputs on testnet",
      "tree": {
        "sha": "a7ab494a0eccfe2c8acc0b7cfca7e27c01e39812",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a7ab494a0eccfe2c8acc0b7cfca7e27c01e39812"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/01983570a6033b9d3b6f7c11b51c9d19906a65af",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/01983570a6033b9d3b6f7c11b51c9d19906a65af",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/01983570a6033b9d3b6f7c11b51c9d19906a65af",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/01983570a6033b9d3b6f7c11b51c9d19906a65af/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d420f6281cb1ee6c5e731380e36b6445d84be63a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d420f6281cb1ee6c5e731380e36b6445d84be63a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d420f6281cb1ee6c5e731380e36b6445d84be63a"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "90be3eb2cd1935d95dbcdb4340278d647ab5d9b9",
        "filename": "src/script.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/01983570a6033b9d3b6f7c11b51c9d19906a65af/src/script.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/01983570a6033b9d3b6f7c11b51c9d19906a65af/src/script.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script.cpp?ref=01983570a6033b9d3b6f7c11b51c9d19906a65af",
        "patch": "@@ -1195,7 +1195,7 @@ bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, vector<vector<unsi\n         // Standard tx, sender provides pubkey, receiver adds signature\n         mTemplates.insert(make_pair(TX_PUBKEY, CScript() << OP_PUBKEY << OP_CHECKSIG));\n \n-        if (GetTime() > SMALLDATA_SWITCH_TIME)\n+        if (fTestNet || GetTime() > SMALLDATA_SWITCH_TIME)\n         {\n             // Malleable pubkey tx hack, sender provides generated pubkey combined with R parameter. The R parameter is dropped before checking a signature.\n             mTemplates.insert(make_pair(TX_PUBKEY_DROP, CScript() << OP_PUBKEY << OP_PUBKEY << OP_DROP << OP_CHECKSIG));"
      }
    ]
  },
  {
    "sha": "a38a9762f226f3a7b506c55841cae7e8786571d2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphMzhhOTc2MmYyMjZmM2E3YjUwNmM1NTg0MWNhZTdlODc4NjU3MWQy",
    "commit": {
      "author": {
        "name": "alex",
        "email": "balthazar@yandex.ru",
        "date": "2016-02-19T18:06:37Z"
      },
      "committer": {
        "name": "alex",
        "email": "balthazar@yandex.ru",
        "date": "2016-02-19T18:06:37Z"
      },
      "message": "TX_PUBKEY_DROP fix",
      "tree": {
        "sha": "fcf82f98cfa11960ec71db629c5a774e1cc751af",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fcf82f98cfa11960ec71db629c5a774e1cc751af"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a38a9762f226f3a7b506c55841cae7e8786571d2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a38a9762f226f3a7b506c55841cae7e8786571d2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a38a9762f226f3a7b506c55841cae7e8786571d2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a38a9762f226f3a7b506c55841cae7e8786571d2/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "01983570a6033b9d3b6f7c11b51c9d19906a65af",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/01983570a6033b9d3b6f7c11b51c9d19906a65af",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/01983570a6033b9d3b6f7c11b51c9d19906a65af"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 3,
      "deletions": 5
    },
    "files": [
      {
        "sha": "3106ce3df877db8cae28b349612a36e302377161",
        "filename": "src/rpcrawtransaction.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 5,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a38a9762f226f3a7b506c55841cae7e8786571d2/src/rpcrawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a38a9762f226f3a7b506c55841cae7e8786571d2/src/rpcrawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcrawtransaction.cpp?ref=a38a9762f226f3a7b506c55841cae7e8786571d2",
        "patch": "@@ -43,11 +43,9 @@ void ScriptPubKeyToJSON(const CScript& scriptPubKey, Object& out, bool fIncludeH\n         if (type == TX_PUBKEY_DROP)\n         {\n             vector<valtype> vSolutions;\n-            if (!Solver(scriptPubKey, type, vSolutions))\n-            {\n-                out.push_back(Pair(\"keyVariant\", HexStr(vSolutions[0])));\n-                out.push_back(Pair(\"R\", HexStr(vSolutions[1])));\n-            }\n+            Solver(scriptPubKey, type, vSolutions);\n+            out.push_back(Pair(\"keyVariant\", HexStr(vSolutions[0])));\n+            out.push_back(Pair(\"R\", HexStr(vSolutions[1])));\n         }\n \n         Array a;"
      }
    ]
  },
  {
    "sha": "f2c5d911d392a6b4a12bb4b5903ad2c6dae8c12d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmMmM1ZDkxMWQzOTJhNmI0YTEyYmI0YjU5MDNhZDJjNmRhZThjMTJk",
    "commit": {
      "author": {
        "name": "alex",
        "email": "balthazar@yandex.ru",
        "date": "2016-02-19T18:48:29Z"
      },
      "committer": {
        "name": "alex",
        "email": "balthazar@yandex.ru",
        "date": "2016-02-19T18:48:29Z"
      },
      "message": "A proper initialization of nReqSigs.",
      "tree": {
        "sha": "1dfc02a3d5aa599b990fbddbe6a162e8aecc7261",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1dfc02a3d5aa599b990fbddbe6a162e8aecc7261"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f2c5d911d392a6b4a12bb4b5903ad2c6dae8c12d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f2c5d911d392a6b4a12bb4b5903ad2c6dae8c12d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f2c5d911d392a6b4a12bb4b5903ad2c6dae8c12d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f2c5d911d392a6b4a12bb4b5903ad2c6dae8c12d/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a38a9762f226f3a7b506c55841cae7e8786571d2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a38a9762f226f3a7b506c55841cae7e8786571d2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a38a9762f226f3a7b506c55841cae7e8786571d2"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 6,
      "deletions": 1
    },
    "files": [
      {
        "sha": "c7c2b29e7d0a56c6831ddc921938e2cd1e8535c9",
        "filename": "src/script.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f2c5d911d392a6b4a12bb4b5903ad2c6dae8c12d/src/script.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f2c5d911d392a6b4a12bb4b5903ad2c6dae8c12d/src/script.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script.cpp?ref=f2c5d911d392a6b4a12bb4b5903ad2c6dae8c12d",
        "patch": "@@ -1618,8 +1618,11 @@ bool ExtractDestinations(const CScript& scriptPubKey, txnouttype& typeRet, vecto\n     vector<valtype> vSolutions;\n     if (!Solver(scriptPubKey, typeRet, vSolutions))\n         return false;\n-    if (typeRet == TX_NULL_DATA || typeRet == TX_PUBKEY_DROP)\n+    if (typeRet == TX_NULL_DATA)\n+    {\n+        nRequiredRet = 0;\n         return true;\n+    }\n \n     if (typeRet == TX_MULTISIG)\n     {\n@@ -1633,6 +1636,8 @@ bool ExtractDestinations(const CScript& scriptPubKey, txnouttype& typeRet, vecto\n     else\n     {\n         nRequiredRet = 1;\n+        if (typeRet == TX_PUBKEY_DROP)\n+            return true;\n         CTxDestination address;\n         if (!ExtractDestination(scriptPubKey, address))\n            return false;"
      }
    ]
  },
  {
    "sha": "1fb1a79af02d81a42b9619e03f397c3e449cd1eb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxZmIxYTc5YWYwMmQ4MWE0MmI5NjE5ZTAzZjM5N2MzZTQ0OWNkMWVi",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-02-19T20:35:05Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-02-19T20:35:05Z"
      },
      "message": "getrawtransaction: Support for malleable public keys",
      "tree": {
        "sha": "0103a517962235f334282b85e9244139386961a9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0103a517962235f334282b85e9244139386961a9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1fb1a79af02d81a42b9619e03f397c3e449cd1eb",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1fb1a79af02d81a42b9619e03f397c3e449cd1eb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1fb1a79af02d81a42b9619e03f397c3e449cd1eb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1fb1a79af02d81a42b9619e03f397c3e449cd1eb/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d420f6281cb1ee6c5e731380e36b6445d84be63a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d420f6281cb1ee6c5e731380e36b6445d84be63a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d420f6281cb1ee6c5e731380e36b6445d84be63a"
      }
    ],
    "stats": {
      "total": 114,
      "additions": 108,
      "deletions": 6
    },
    "files": [
      {
        "sha": "66e08af8fac5d141cb9c2833157336058c780969",
        "filename": "doc/MalleableKeysRawTx.txt",
        "status": "added",
        "additions": 91,
        "deletions": 0,
        "changes": 91,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1fb1a79af02d81a42b9619e03f397c3e449cd1eb/doc/MalleableKeysRawTx.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1fb1a79af02d81a42b9619e03f397c3e449cd1eb/doc/MalleableKeysRawTx.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/MalleableKeysRawTx.txt?ref=1fb1a79af02d81a42b9619e03f397c3e449cd1eb",
        "patch": "@@ -0,0 +1,91 @@\n+> createrawtransaction '[{\"txid\" : \"fe19e91308bc7d5e564d51d3401c40b47e18fb4abb713be2c75e517f9607e8c0\",\"vout\" : 0}, {\"txid\" : \"ffb6281239fa8b882188aa9b53ce9c753592ce5db9ed360b95cf96fca14ff7c3\",\"vout\" : 0}, {\"txid\" : \"fe9373cce4729f1e75092f9b85843bb5cad96e7fec4af728fb36f4f7d068044a\",\"vout\" : 0}]' '{\"5GRatXVWnTHNjBaeLCw6TEqdYhMqDuej5n2aQJxoJj65bMMQvxDnnhCg6PEhCassbnSBrNpzWZu4YaLy13y8jLsUJz6ta5ad1c6\" : 50, \"5GRatXVWnTHNjBaeLCw6TEqdYhMqDuej5n2aQJxoJj65bMMQvxDnnhCg6PEhCassbnSBrNpzWZu4YaLy13y8jLsUJz6ta5ad1c6\" : 50, \"5GRatXVWnTHNjBaeLCw6TEqdYhMqDuej5n2aQJxoJj65bMMQvxDnnhCg6PEhCassbnSBrNpzWZu4YaLy13y8jLsUJz6ta5ad1c6\" : 50, \"5GRatXVWnTHNjBaeLCw6TEqdYhMqDuej5n2aQJxoJj65bMMQvxDnnhCg6PEhCassbnSBrNpzWZu4YaLy13y8jLsUJz6ta5ad1c6\" : 50}'\n+01000000ec7ac75603c0e807967f515ec7e23b71bb4afb187eb4401c40d3514d565e7dbc0813e919fe0000000000ffffffffc3f74fa1fc96cf950b36edb95dce9235759cce539baa8821888bfa391228b6ff0000000000ffffffff4a0468d0f7f436fb28f74aec7f6ed9cab53b84859b2f09751e9f72e4cc7393fe0000000000ffffffff0480f0fa02000000004621023465cd42efb1e62f0d74d4c968fa421fa900d46a87f91374a4f2cec16c61df072102cac2526421051d91daefa199277d2119ca0e447cff3a4136cb1e5326ea31e99175ac80f0fa020000000046210286ba58eef592aa6e883676445cb2e0797ebf221731caf57d5382f6ba7d04862a2102f1c4a308096f0484db4a5ca2297929f4c8b32a9e91d15d09c0c366f314835b7b75ac80f0fa02000000004621039c4ca9434cbcd65b0646b86302eadf2c22ba5e726a8c62bb413420a891f76a902102b5c6ad4ab2a017912bbb5923d3f00d0e93f486d6879bf1b284faca7c1e2f9fdd75ac80f0fa020000000046210227f68a9f13dbba130c3930f0d2ce90138135d7bea038264500e2188803af376821023343909069b8520a3a362b2b6ce70d3cd651f2c2e0119eaf3c6b410d3bd7cec075ac00000000\n+\n+> signrawtransaction 01000000ec7ac75603c0e807967f515ec7e23b71bb4afb187eb4401c40d3514d565e7dbc0813e919fe0000000000ffffffffc3f74fa1fc96cf950b36edb95dce9235759cce539baa8821888bfa391228b6ff0000000000ffffffff4a0468d0f7f436fb28f74aec7f6ed9cab53b84859b2f09751e9f72e4cc7393fe0000000000ffffffff0480f0fa02000000004621023465cd42efb1e62f0d74d4c968fa421fa900d46a87f91374a4f2cec16c61df072102cac2526421051d91daefa199277d2119ca0e447cff3a4136cb1e5326ea31e99175ac80f0fa020000000046210286ba58eef592aa6e883676445cb2e0797ebf221731caf57d5382f6ba7d04862a2102f1c4a308096f0484db4a5ca2297929f4c8b32a9e91d15d09c0c366f314835b7b75ac80f0fa02000000004621039c4ca9434cbcd65b0646b86302eadf2c22ba5e726a8c62bb413420a891f76a902102b5c6ad4ab2a017912bbb5923d3f00d0e93f486d6879bf1b284faca7c1e2f9fdd75ac80f0fa020000000046210227f68a9f13dbba130c3930f0d2ce90138135d7bea038264500e2188803af376821023343909069b8520a3a362b2b6ce70d3cd651f2c2e0119eaf3c6b410d3bd7cec075ac00000000\n+{\n+\"hex\" : \"01000000ec7ac75603c0e807967f515ec7e23b71bb4afb187eb4401c40d3514d565e7dbc0813e919fe000000006a47304402206ae066f932568244b300207516941ec1ed3c1d1d073a64e73b030d648a873ba0022066cd2972fc33ccd72fbf2851926671cef3162a31c1b8d3fa54d5c1f48e64ddaa012102a277f7eece96158bb86879b887adb3d5ad1ae2caf333633f41931687a95cdbeaffffffffc3f74fa1fc96cf950b36edb95dce9235759cce539baa8821888bfa391228b6ff000000006b483045022100ac66cd8c20df9cf83efe16f0d5e8e4c120289b48d4599f74f240e75e63fabbf202207a479da48b723ca44ec7da49564642c53a01316be5e8e1f6faf54747df6cd471012102a277f7eece96158bb86879b887adb3d5ad1ae2caf333633f41931687a95cdbeaffffffff4a0468d0f7f436fb28f74aec7f6ed9cab53b84859b2f09751e9f72e4cc7393fe000000006a47304402202ecf35bf1aaa054db9cecbdb078a42a596bb58cfafe73a51910851799f6596fe022040dbae44820144d6c099fcdd077a29beb56ccbfa0be6a1173810bf7566981a8a012102a277f7eece96158bb86879b887adb3d5ad1ae2caf333633f41931687a95cdbeaffffffff0480f0fa02000000004621023465cd42efb1e62f0d74d4c968fa421fa900d46a87f91374a4f2cec16c61df072102cac2526421051d91daefa199277d2119ca0e447cff3a4136cb1e5326ea31e99175ac80f0fa020000000046210286ba58eef592aa6e883676445cb2e0797ebf221731caf57d5382f6ba7d04862a2102f1c4a308096f0484db4a5ca2297929f4c8b32a9e91d15d09c0c366f314835b7b75ac80f0fa02000000004621039c4ca9434cbcd65b0646b86302eadf2c22ba5e726a8c62bb413420a891f76a902102b5c6ad4ab2a017912bbb5923d3f00d0e93f486d6879bf1b284faca7c1e2f9fdd75ac80f0fa020000000046210227f68a9f13dbba130c3930f0d2ce90138135d7bea038264500e2188803af376821023343909069b8520a3a362b2b6ce70d3cd651f2c2e0119eaf3c6b410d3bd7cec075ac00000000\",\n+\"complete\" : true\n+}\n+\n+> sendrawtransaction 01000000ec7ac75603c0e807967f515ec7e23b71bb4afb187eb4401c40d3514d565e7dbc0813e919fe000000006a47304402206ae066f932568244b300207516941ec1ed3c1d1d073a64e73b030d648a873ba0022066cd2972fc33ccd72fbf2851926671cef3162a31c1b8d3fa54d5c1f48e64ddaa012102a277f7eece96158bb86879b887adb3d5ad1ae2caf333633f41931687a95cdbeaffffffffc3f74fa1fc96cf950b36edb95dce9235759cce539baa8821888bfa391228b6ff000000006b483045022100ac66cd8c20df9cf83efe16f0d5e8e4c120289b48d4599f74f240e75e63fabbf202207a479da48b723ca44ec7da49564642c53a01316be5e8e1f6faf54747df6cd471012102a277f7eece96158bb86879b887adb3d5ad1ae2caf333633f41931687a95cdbeaffffffff4a0468d0f7f436fb28f74aec7f6ed9cab53b84859b2f09751e9f72e4cc7393fe000000006a47304402202ecf35bf1aaa054db9cecbdb078a42a596bb58cfafe73a51910851799f6596fe022040dbae44820144d6c099fcdd077a29beb56ccbfa0be6a1173810bf7566981a8a012102a277f7eece96158bb86879b887adb3d5ad1ae2caf333633f41931687a95cdbeaffffffff0480f0fa02000000004621023465cd42efb1e62f0d74d4c968fa421fa900d46a87f91374a4f2cec16c61df072102cac2526421051d91daefa199277d2119ca0e447cff3a4136cb1e5326ea31e99175ac80f0fa020000000046210286ba58eef592aa6e883676445cb2e0797ebf221731caf57d5382f6ba7d04862a2102f1c4a308096f0484db4a5ca2297929f4c8b32a9e91d15d09c0c366f314835b7b75ac80f0fa02000000004621039c4ca9434cbcd65b0646b86302eadf2c22ba5e726a8c62bb413420a891f76a902102b5c6ad4ab2a017912bbb5923d3f00d0e93f486d6879bf1b284faca7c1e2f9fdd75ac80f0fa020000000046210227f68a9f13dbba130c3930f0d2ce90138135d7bea038264500e2188803af376821023343909069b8520a3a362b2b6ce70d3cd651f2c2e0119eaf3c6b410d3bd7cec075ac00000000\n+3835044e34803034aba65613925d424996237e97bc18a7649f550a5038bc3ce1\n+\n+> getrawtransaction 3835044e34803034aba65613925d424996237e97bc18a7649f550a5038bc3ce1 1\n+{\n+\"hex\" : \"01000000ec7ac75603c0e807967f515ec7e23b71bb4afb187eb4401c40d3514d565e7dbc0813e919fe000000006a47304402206ae066f932568244b300207516941ec1ed3c1d1d073a64e73b030d648a873ba0022066cd2972fc33ccd72fbf2851926671cef3162a31c1b8d3fa54d5c1f48e64ddaa012102a277f7eece96158bb86879b887adb3d5ad1ae2caf333633f41931687a95cdbeaffffffffc3f74fa1fc96cf950b36edb95dce9235759cce539baa8821888bfa391228b6ff000000006b483045022100ac66cd8c20df9cf83efe16f0d5e8e4c120289b48d4599f74f240e75e63fabbf202207a479da48b723ca44ec7da49564642c53a01316be5e8e1f6faf54747df6cd471012102a277f7eece96158bb86879b887adb3d5ad1ae2caf333633f41931687a95cdbeaffffffff4a0468d0f7f436fb28f74aec7f6ed9cab53b84859b2f09751e9f72e4cc7393fe000000006a47304402202ecf35bf1aaa054db9cecbdb078a42a596bb58cfafe73a51910851799f6596fe022040dbae44820144d6c099fcdd077a29beb56ccbfa0be6a1173810bf7566981a8a012102a277f7eece96158bb86879b887adb3d5ad1ae2caf333633f41931687a95cdbeaffffffff0480f0fa02000000004621023465cd42efb1e62f0d74d4c968fa421fa900d46a87f91374a4f2cec16c61df072102cac2526421051d91daefa199277d2119ca0e447cff3a4136cb1e5326ea31e99175ac80f0fa020000000046210286ba58eef592aa6e883676445cb2e0797ebf221731caf57d5382f6ba7d04862a2102f1c4a308096f0484db4a5ca2297929f4c8b32a9e91d15d09c0c366f314835b7b75ac80f0fa02000000004621039c4ca9434cbcd65b0646b86302eadf2c22ba5e726a8c62bb413420a891f76a902102b5c6ad4ab2a017912bbb5923d3f00d0e93f486d6879bf1b284faca7c1e2f9fdd75ac80f0fa020000000046210227f68a9f13dbba130c3930f0d2ce90138135d7bea038264500e2188803af376821023343909069b8520a3a362b2b6ce70d3cd651f2c2e0119eaf3c6b410d3bd7cec075ac00000000\",\n+\"txid\" : \"3835044e34803034aba65613925d424996237e97bc18a7649f550a5038bc3ce1\",\n+\"version\" : 1,\n+\"time\" : 1455913708,\n+\"locktime\" : 0,\n+\"vin\" : [\n+{\n+\"txid\" : \"fe19e91308bc7d5e564d51d3401c40b47e18fb4abb713be2c75e517f9607e8c0\",\n+\"vout\" : 0,\n+\"scriptSig\" : {\n+\"asm\" : \"304402206ae066f932568244b300207516941ec1ed3c1d1d073a64e73b030d648a873ba0022066cd2972fc33ccd72fbf2851926671cef3162a31c1b8d3fa54d5c1f48e64ddaa01 02a277f7eece96158bb86879b887adb3d5ad1ae2caf333633f41931687a95cdbea\",\n+\"hex\" : \"47304402206ae066f932568244b300207516941ec1ed3c1d1d073a64e73b030d648a873ba0022066cd2972fc33ccd72fbf2851926671cef3162a31c1b8d3fa54d5c1f48e64ddaa012102a277f7eece96158bb86879b887adb3d5ad1ae2caf333633f41931687a95cdbea\"\n+},\n+\"sequence\" : 4294967295\n+},\n+{\n+\"txid\" : \"ffb6281239fa8b882188aa9b53ce9c753592ce5db9ed360b95cf96fca14ff7c3\",\n+\"vout\" : 0,\n+\"scriptSig\" : {\n+\"asm\" : \"3045022100ac66cd8c20df9cf83efe16f0d5e8e4c120289b48d4599f74f240e75e63fabbf202207a479da48b723ca44ec7da49564642c53a01316be5e8e1f6faf54747df6cd47101 02a277f7eece96158bb86879b887adb3d5ad1ae2caf333633f41931687a95cdbea\",\n+\"hex\" : \"483045022100ac66cd8c20df9cf83efe16f0d5e8e4c120289b48d4599f74f240e75e63fabbf202207a479da48b723ca44ec7da49564642c53a01316be5e8e1f6faf54747df6cd471012102a277f7eece96158bb86879b887adb3d5ad1ae2caf333633f41931687a95cdbea\"\n+},\n+\"sequence\" : 4294967295\n+},\n+{\n+\"txid\" : \"fe9373cce4729f1e75092f9b85843bb5cad96e7fec4af728fb36f4f7d068044a\",\n+\"vout\" : 0,\n+\"scriptSig\" : {\n+\"asm\" : \"304402202ecf35bf1aaa054db9cecbdb078a42a596bb58cfafe73a51910851799f6596fe022040dbae44820144d6c099fcdd077a29beb56ccbfa0be6a1173810bf7566981a8a01 02a277f7eece96158bb86879b887adb3d5ad1ae2caf333633f41931687a95cdbea\",\n+\"hex\" : \"47304402202ecf35bf1aaa054db9cecbdb078a42a596bb58cfafe73a51910851799f6596fe022040dbae44820144d6c099fcdd077a29beb56ccbfa0be6a1173810bf7566981a8a012102a277f7eece96158bb86879b887adb3d5ad1ae2caf333633f41931687a95cdbea\"\n+},\n+\"sequence\" : 4294967295\n+}\n+],\n+\"vout\" : [\n+{\n+\"value\" : 50.00000000,\n+\"n\" : 0,\n+\"scriptPubKey\" : {\n+\"asm\" : \"023465cd42efb1e62f0d74d4c968fa421fa900d46a87f91374a4f2cec16c61df07 02cac2526421051d91daefa199277d2119ca0e447cff3a4136cb1e5326ea31e991 OP_DROP OP_CHECKSIG\",\n+\"hex\" : \"21023465cd42efb1e62f0d74d4c968fa421fa900d46a87f91374a4f2cec16c61df072102cac2526421051d91daefa199277d2119ca0e447cff3a4136cb1e5326ea31e99175ac\",\n+\"type\" : \"pubkeydrop\"\n+}\n+},\n+{\n+\"value\" : 50.00000000,\n+\"n\" : 1,\n+\"scriptPubKey\" : {\n+\"asm\" : \"0286ba58eef592aa6e883676445cb2e0797ebf221731caf57d5382f6ba7d04862a 02f1c4a308096f0484db4a5ca2297929f4c8b32a9e91d15d09c0c366f314835b7b OP_DROP OP_CHECKSIG\",\n+\"hex\" : \"210286ba58eef592aa6e883676445cb2e0797ebf221731caf57d5382f6ba7d04862a2102f1c4a308096f0484db4a5ca2297929f4c8b32a9e91d15d09c0c366f314835b7b75ac\",\n+\"type\" : \"pubkeydrop\"\n+}\n+},\n+{\n+\"value\" : 50.00000000,\n+\"n\" : 2,\n+\"scriptPubKey\" : {\n+\"asm\" : \"039c4ca9434cbcd65b0646b86302eadf2c22ba5e726a8c62bb413420a891f76a90 02b5c6ad4ab2a017912bbb5923d3f00d0e93f486d6879bf1b284faca7c1e2f9fdd OP_DROP OP_CHECKSIG\",\n+\"hex\" : \"21039c4ca9434cbcd65b0646b86302eadf2c22ba5e726a8c62bb413420a891f76a902102b5c6ad4ab2a017912bbb5923d3f00d0e93f486d6879bf1b284faca7c1e2f9fdd75ac\",\n+\"type\" : \"pubkeydrop\"\n+}\n+},\n+{\n+\"value\" : 50.00000000,\n+\"n\" : 3,\n+\"scriptPubKey\" : {\n+\"asm\" : \"0227f68a9f13dbba130c3930f0d2ce90138135d7bea038264500e2188803af3768 023343909069b8520a3a362b2b6ce70d3cd651f2c2e0119eaf3c6b410d3bd7cec0 OP_DROP OP_CHECKSIG\",\n+\"hex\" : \"210227f68a9f13dbba130c3930f0d2ce90138135d7bea038264500e2188803af376821023343909069b8520a3a362b2b6ce70d3cd651f2c2e0119eaf3c6b410d3bd7cec075ac\",\n+\"type\" : \"pubkeydrop\"\n+}\n+}\n+],\n+\"blockhash\" : \"00006b9e0ba9faadf6fdf86123789d58c828cbd61565edcf7a46b9eaf87086d2\",\n+\"confirmations\" : 16,\n+\"time\" : 1455913743,\n+\"blocktime\" : 1455913743\n+}"
      },
      {
        "sha": "c58170b1111dcc43f3756df4df52bb73f70f8d18",
        "filename": "src/rpcrawtransaction.cpp",
        "status": "modified",
        "additions": 17,
        "deletions": 6,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1fb1a79af02d81a42b9619e03f397c3e449cd1eb/src/rpcrawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1fb1a79af02d81a42b9619e03f397c3e449cd1eb/src/rpcrawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcrawtransaction.cpp?ref=1fb1a79af02d81a42b9619e03f397c3e449cd1eb",
        "patch": "@@ -286,16 +286,27 @@ Value createrawtransaction(const Array& params, bool fHelp)\n     set<CBitcoinAddress> setAddress;\n     BOOST_FOREACH(const Pair& s, sendTo)\n     {\n+        // Create output destination script\n+        CScript scriptPubKey;\n         CBitcoinAddress address(s.name_);\n         if (!address.IsValid())\n-            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, string(\"Invalid NovaCoin address: \")+s.name_);\n+        {\n+            CMalleablePubKey mpk(s.name_);\n+            if (!mpk.IsValid())\n+                throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, string(\"Invalid output destination: \")+s.name_);\n \n-        if (setAddress.count(address))\n-            throw JSONRPCError(RPC_INVALID_PARAMETER, string(\"Invalid parameter, duplicated address: \")+s.name_);\n-        setAddress.insert(address);\n+            CPubKey keyVariant, R;\n+            mpk.GetVariant(R, keyVariant);\n+            scriptPubKey.SetDestination(R, keyVariant);\n+        }\n+        else\n+        {\n+            scriptPubKey.SetDestination(address.Get());\n+            if (setAddress.count(address))\n+                throw JSONRPCError(RPC_INVALID_PARAMETER, string(\"Invalid parameter, duplicated address: \")+s.name_);\n+            setAddress.insert(address);\n+        }\n \n-        CScript scriptPubKey;\n-        scriptPubKey.SetDestination(address.Get());\n         int64_t nAmount = AmountFromValue(s.value_);\n \n         CTxOut out(nAmount, scriptPubKey);"
      }
    ]
  },
  {
    "sha": "0bf6a81d74c6b3e0dcafcc8ecb06d1d296db0969",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowYmY2YTgxZDc0YzZiM2UwZGNhZmNjOGVjYjA2ZDFkMjk2ZGIwOTY5",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-02-19T20:35:43Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-02-19T20:35:43Z"
      },
      "message": "Merge branch 'master' of github.com:novacoin-project/novacoin",
      "tree": {
        "sha": "d97183852af8ced18fc1c3c98a8afcf8a40a4e05",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d97183852af8ced18fc1c3c98a8afcf8a40a4e05"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0bf6a81d74c6b3e0dcafcc8ecb06d1d296db0969",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0bf6a81d74c6b3e0dcafcc8ecb06d1d296db0969",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0bf6a81d74c6b3e0dcafcc8ecb06d1d296db0969",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0bf6a81d74c6b3e0dcafcc8ecb06d1d296db0969/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1fb1a79af02d81a42b9619e03f397c3e449cd1eb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1fb1a79af02d81a42b9619e03f397c3e449cd1eb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1fb1a79af02d81a42b9619e03f397c3e449cd1eb"
      },
      {
        "sha": "f2c5d911d392a6b4a12bb4b5903ad2c6dae8c12d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f2c5d911d392a6b4a12bb4b5903ad2c6dae8c12d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f2c5d911d392a6b4a12bb4b5903ad2c6dae8c12d"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 10,
      "deletions": 7
    },
    "files": [
      {
        "sha": "346dcfc2484b236926186608d25791e9b18df706",
        "filename": "src/rpcrawtransaction.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 5,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0bf6a81d74c6b3e0dcafcc8ecb06d1d296db0969/src/rpcrawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0bf6a81d74c6b3e0dcafcc8ecb06d1d296db0969/src/rpcrawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcrawtransaction.cpp?ref=0bf6a81d74c6b3e0dcafcc8ecb06d1d296db0969",
        "patch": "@@ -43,11 +43,9 @@ void ScriptPubKeyToJSON(const CScript& scriptPubKey, Object& out, bool fIncludeH\n         if (type == TX_PUBKEY_DROP)\n         {\n             vector<valtype> vSolutions;\n-            if (!Solver(scriptPubKey, type, vSolutions))\n-            {\n-                out.push_back(Pair(\"keyVariant\", HexStr(vSolutions[0])));\n-                out.push_back(Pair(\"R\", HexStr(vSolutions[1])));\n-            }\n+            Solver(scriptPubKey, type, vSolutions);\n+            out.push_back(Pair(\"keyVariant\", HexStr(vSolutions[0])));\n+            out.push_back(Pair(\"R\", HexStr(vSolutions[1])));\n         }\n \n         Array a;"
      },
      {
        "sha": "c7c2b29e7d0a56c6831ddc921938e2cd1e8535c9",
        "filename": "src/script.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 2,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0bf6a81d74c6b3e0dcafcc8ecb06d1d296db0969/src/script.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0bf6a81d74c6b3e0dcafcc8ecb06d1d296db0969/src/script.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script.cpp?ref=0bf6a81d74c6b3e0dcafcc8ecb06d1d296db0969",
        "patch": "@@ -1195,7 +1195,7 @@ bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, vector<vector<unsi\n         // Standard tx, sender provides pubkey, receiver adds signature\n         mTemplates.insert(make_pair(TX_PUBKEY, CScript() << OP_PUBKEY << OP_CHECKSIG));\n \n-        if (GetTime() > SMALLDATA_SWITCH_TIME)\n+        if (fTestNet || GetTime() > SMALLDATA_SWITCH_TIME)\n         {\n             // Malleable pubkey tx hack, sender provides generated pubkey combined with R parameter. The R parameter is dropped before checking a signature.\n             mTemplates.insert(make_pair(TX_PUBKEY_DROP, CScript() << OP_PUBKEY << OP_PUBKEY << OP_DROP << OP_CHECKSIG));\n@@ -1618,8 +1618,11 @@ bool ExtractDestinations(const CScript& scriptPubKey, txnouttype& typeRet, vecto\n     vector<valtype> vSolutions;\n     if (!Solver(scriptPubKey, typeRet, vSolutions))\n         return false;\n-    if (typeRet == TX_NULL_DATA || typeRet == TX_PUBKEY_DROP)\n+    if (typeRet == TX_NULL_DATA)\n+    {\n+        nRequiredRet = 0;\n         return true;\n+    }\n \n     if (typeRet == TX_MULTISIG)\n     {\n@@ -1633,6 +1636,8 @@ bool ExtractDestinations(const CScript& scriptPubKey, txnouttype& typeRet, vecto\n     else\n     {\n         nRequiredRet = 1;\n+        if (typeRet == TX_PUBKEY_DROP)\n+            return true;\n         CTxDestination address;\n         if (!ExtractDestination(scriptPubKey, address))\n            return false;"
      }
    ]
  },
  {
    "sha": "eecfdfba2e20ce81aebe24313324172844b4088e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplZWNmZGZiYTJlMjBjZTgxYWViZTI0MzEzMzI0MTcyODQ0YjQwODhl",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-02-19T21:40:43Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-02-19T21:40:43Z"
      },
      "message": "ScriptPubKeyToJSON: include matched key view.",
      "tree": {
        "sha": "bb637acac107057820d931957efc7359b8a0d3bd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bb637acac107057820d931957efc7359b8a0d3bd"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/eecfdfba2e20ce81aebe24313324172844b4088e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eecfdfba2e20ce81aebe24313324172844b4088e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/eecfdfba2e20ce81aebe24313324172844b4088e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eecfdfba2e20ce81aebe24313324172844b4088e/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0bf6a81d74c6b3e0dcafcc8ecb06d1d296db0969",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0bf6a81d74c6b3e0dcafcc8ecb06d1d296db0969",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0bf6a81d74c6b3e0dcafcc8ecb06d1d296db0969"
      }
    ],
    "stats": {
      "total": 33,
      "additions": 28,
      "deletions": 5
    },
    "files": [
      {
        "sha": "eb38ddd7f1c4aaaabe23e14121e3b0ebeba4c6cb",
        "filename": "src/keystore.h",
        "status": "modified",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eecfdfba2e20ce81aebe24313324172844b4088e/src/keystore.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eecfdfba2e20ce81aebe24313324172844b4088e/src/keystore.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/keystore.h?ref=eecfdfba2e20ce81aebe24313324172844b4088e",
        "patch": "@@ -70,6 +70,7 @@ class CKeyStore\n     }\n \n     virtual bool CheckOwnership(const CPubKey &pubKeyVariant, const CPubKey &R) const =0;\n+    virtual bool CheckOwnership(const CPubKey &pubKeyVariant, const CPubKey &R, CMalleableKeyView &view) const =0;\n     virtual bool CreatePrivKey(const CPubKey &pubKeyVariant, const CPubKey &R, CKey &privKey) const =0;\n     virtual void ListMalleableViews(std::list<CMalleableKeyView> &malleableViewList) const =0;\n };\n@@ -160,6 +161,22 @@ class CBasicKeyStore : public CKeyStore\n         return false;\n     }\n \n+    bool CheckOwnership(const CPubKey &pubKeyVariant, const CPubKey &R, CMalleableKeyView &view) const\n+    {\n+        {\n+            LOCK(cs_KeyStore);\n+            for (MalleableKeyMap::const_iterator mi = mapMalleableKeys.begin(); mi != mapMalleableKeys.end(); mi++)\n+            {\n+                if (mi->first.CheckKeyVariant(R, pubKeyVariant))\n+                {\n+                    view = mi->first;\n+                    return true;\n+                }\n+            }\n+        }\n+        return false;\n+    }\n+\n     bool CreatePrivKey(const CPubKey &pubKeyVariant, const CPubKey &R, CKey &privKey) const\n     {\n         {"
      },
      {
        "sha": "855e9bec943ac90634582feb414243e61e8bcb2d",
        "filename": "src/rpcrawtransaction.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 5,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eecfdfba2e20ce81aebe24313324172844b4088e/src/rpcrawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eecfdfba2e20ce81aebe24313324172844b4088e/src/rpcrawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcrawtransaction.cpp?ref=eecfdfba2e20ce81aebe24313324172844b4088e",
        "patch": "@@ -46,12 +46,18 @@ void ScriptPubKeyToJSON(const CScript& scriptPubKey, Object& out, bool fIncludeH\n             Solver(scriptPubKey, type, vSolutions);\n             out.push_back(Pair(\"keyVariant\", HexStr(vSolutions[0])));\n             out.push_back(Pair(\"R\", HexStr(vSolutions[1])));\n-        }\n \n-        Array a;\n-        BOOST_FOREACH(const CTxDestination& addr, addresses)\n-            a.push_back(CBitcoinAddress(addr).ToString());\n-        out.push_back(Pair(\"addresses\", a));\n+            CMalleableKeyView view;\n+            if (pwalletMain->CheckOwnership(CPubKey(vSolutions[0]), CPubKey(vSolutions[1]), view))\n+                out.push_back(Pair(\"keyView\", view.ToString()));\n+        }\n+        else\n+        {\n+            Array a;\n+            BOOST_FOREACH(const CTxDestination& addr, addresses)\n+                a.push_back(CBitcoinAddress(addr).ToString());\n+            out.push_back(Pair(\"addresses\", a));\n+        }\n     }\n     else\n     {"
      }
    ]
  },
  {
    "sha": "7b30fc99cf10a3dd8cae3239d3c5ed98a553f238",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3YjMwZmM5OWNmMTBhM2RkOGNhZTMyMzlkM2M1ZWQ5OGE1NTNmMjM4",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "CryptoManiac@users.noreply.github.com",
        "date": "2016-02-20T06:17:59Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "CryptoManiac@users.noreply.github.com",
        "date": "2016-02-20T06:17:59Z"
      },
      "message": "Merge pull request #279 from svost/patch\n\nMinor fix",
      "tree": {
        "sha": "b8b9a2d413433b1a7e33cc5d35fe9ac00af5a655",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b8b9a2d413433b1a7e33cc5d35fe9ac00af5a655"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7b30fc99cf10a3dd8cae3239d3c5ed98a553f238",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7b30fc99cf10a3dd8cae3239d3c5ed98a553f238",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7b30fc99cf10a3dd8cae3239d3c5ed98a553f238",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7b30fc99cf10a3dd8cae3239d3c5ed98a553f238/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "eecfdfba2e20ce81aebe24313324172844b4088e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eecfdfba2e20ce81aebe24313324172844b4088e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/eecfdfba2e20ce81aebe24313324172844b4088e"
      },
      {
        "sha": "455f59ba9af626d4c6b202b96ae36561154de8f7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/455f59ba9af626d4c6b202b96ae36561154de8f7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/455f59ba9af626d4c6b202b96ae36561154de8f7"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 1,
      "deletions": 4
    },
    "files": [
      {
        "sha": "03bc607a9134c952673a8ae9802d76013ad17413",
        "filename": "src/irc.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 4,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7b30fc99cf10a3dd8cae3239d3c5ed98a553f238/src/irc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7b30fc99cf10a3dd8cae3239d3c5ed98a553f238/src/irc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/irc.cpp?ref=7b30fc99cf10a3dd8cae3239d3c5ed98a553f238",
        "patch": "@@ -7,10 +7,7 @@\n #include \"base58.h\"\n #include \"net.h\"\n \n-#include <boost/algorithm/string/predicate.hpp> // for startswith() and endswith()\n-\n using namespace std;\n-using namespace boost;\n \n int nGotIRCAddresses = 0;\n \n@@ -347,7 +344,7 @@ void ThreadIRCSeed2(void* parg)\n                 printf(\"IRC got join\\n\");\n             }\n \n-            if (boost::algorithm::starts_with(strName, \"u\"))\n+            if (strName.compare(0,1, \"u\") == 0)\n             {\n                 CAddress addr;\n                 if (DecodeAddress(strName, addr))"
      }
    ]
  },
  {
    "sha": "572dd6fda7a5dc3e2b9b3432b18ddee38453e736",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NzJkZDZmZGE3YTVkYzNlMmI5YjM0MzJiMThkZGVlMzg0NTNlNzM2",
    "commit": {
      "author": {
        "name": "svost",
        "email": "ya.nowa@yandex.ru",
        "date": "2016-02-20T08:35:07Z"
      },
      "committer": {
        "name": "svost",
        "email": "ya.nowa@yandex.ru",
        "date": "2016-02-20T08:35:07Z"
      },
      "message": "Get rid of some LONG variables",
      "tree": {
        "sha": "a1cc5e7c74d5a1941bf74d52e215a7084b847b21",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a1cc5e7c74d5a1941bf74d52e215a7084b847b21"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/572dd6fda7a5dc3e2b9b3432b18ddee38453e736",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/572dd6fda7a5dc3e2b9b3432b18ddee38453e736",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/572dd6fda7a5dc3e2b9b3432b18ddee38453e736",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/572dd6fda7a5dc3e2b9b3432b18ddee38453e736/comments",
    "author": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7b30fc99cf10a3dd8cae3239d3c5ed98a553f238",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7b30fc99cf10a3dd8cae3239d3c5ed98a553f238",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7b30fc99cf10a3dd8cae3239d3c5ed98a553f238"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 5,
      "deletions": 5
    },
    "files": [
      {
        "sha": "757a18e40ca9ba747218cdc07aa0011531c211ea",
        "filename": "src/db.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/572dd6fda7a5dc3e2b9b3432b18ddee38453e736/src/db.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/572dd6fda7a5dc3e2b9b3432b18ddee38453e736/src/db.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/db.cpp?ref=572dd6fda7a5dc3e2b9b3432b18ddee38453e736",
        "patch": "@@ -118,13 +118,13 @@ bool CDBEnv::Open(boost::filesystem::path pathEnv_)\n         nBlocks = nMaxLocks / 48768;\n         nDeepReorg = (nBlocks - 1) / 2;\n \n-        printf(\"Final lk_max_locks is %lu, sufficient for (worst case) %d block%s in a single transaction (up to a %d-deep reorganization)\\n\", (unsigned long)nMaxLocks, nBlocks, (nBlocks == 1) ? \"\" : \"s\", nDeepReorg);\n+        printf(\"Final lk_max_locks is %u, sufficient for (worst case) %d block%s in a single transaction (up to a %d-deep reorganization)\\n\", nMaxLocks, nBlocks, (nBlocks == 1) ? \"\" : \"s\", nDeepReorg);\n         if (nDeepReorg < 3)\n         {\n             if (nBlocks < 1)\n-                strMessage = strprintf(_(\"Warning: DB_CONFIG has set_lk_max_locks %lu, which may be too low for a single block. If this limit is reached, NovaCoin may stop working.\"), (unsigned long)nMaxLocks);\n+                strMessage = strprintf(_(\"Warning: DB_CONFIG has set_lk_max_locks %u, which may be too low for a single block. If this limit is reached, NovaCoin may stop working.\"), nMaxLocks);\n             else\n-                strMessage = strprintf(_(\"Warning: DB_CONFIG has set_lk_max_locks %lu, which may be too low for a common blockchain reorganization. If this limit is reached, NovaCoin may stop working.\"), (unsigned long)nMaxLocks);\n+                strMessage = strprintf(_(\"Warning: DB_CONFIG has set_lk_max_locks %u, which may be too low for a common blockchain reorganization. If this limit is reached, NovaCoin may stop working.\"), nMaxLocks);\n \n             strMiscWarning = strMessage;\n             printf(\"*** %s\\n\", strMessage.c_str());"
      },
      {
        "sha": "da8d602a82fc25bb619c473852c6c73f60ef18e4",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/572dd6fda7a5dc3e2b9b3432b18ddee38453e736/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/572dd6fda7a5dc3e2b9b3432b18ddee38453e736/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=572dd6fda7a5dc3e2b9b3432b18ddee38453e736",
        "patch": "@@ -962,7 +962,7 @@ class CBlock\n         if (nHeight >= 9689 || fTestNet)\n         {\n             // Take last bit of block hash as entropy bit\n-            unsigned int nEntropyBit = ((GetHash().Get64()) & 1ULL);\n+            unsigned int nEntropyBit = (GetHash().Get64()) & (uint64_t)1;\n             if (fDebug && GetBoolArg(\"-printstakemodifier\"))\n                 printf(\"GetStakeEntropyBit: nTime=%u hashBlock=%s nEntropyBit=%u\\n\", nTime, GetHash().ToString().c_str(), nEntropyBit);\n             return nEntropyBit;"
      },
      {
        "sha": "c97c8946a72d70f6004b7974d946229dab1714aa",
        "filename": "src/script.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/572dd6fda7a5dc3e2b9b3432b18ddee38453e736/src/script.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/572dd6fda7a5dc3e2b9b3432b18ddee38453e736/src/script.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script.cpp?ref=572dd6fda7a5dc3e2b9b3432b18ddee38453e736",
        "patch": "@@ -294,7 +294,7 @@ bool IsDERSignature(const valtype &vchSig, bool fWithHashType, bool fCheckLow) {\n     if (5 + nLenR >= vchSig.size())\n         return error(\"Non-canonical signature: S length misplaced\");\n     unsigned int nLenS = vchSig[5+nLenR];\n-    if ((unsigned long)(nLenR + nLenS + (fWithHashType ? 7 : 6)) != vchSig.size())\n+    if ((nLenR + nLenS + (fWithHashType ? 7 : 6)) != vchSig.size())\n         return error(\"Non-canonical signature: R+S length mismatch\");\n \n     const unsigned char *R = &vchSig[4];"
      }
    ]
  },
  {
    "sha": "3d5401d7f056b2ca431212a59ba46a4f65236586",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozZDU0MDFkN2YwNTZiMmNhNDMxMjEyYTU5YmE0NmE0ZjY1MjM2NTg2",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-02-20T16:16:30Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-02-20T16:16:30Z"
      },
      "message": "gettransaction: use pubkey pair instead of key view.",
      "tree": {
        "sha": "56258ed4ac82bab6a14895f2f3911eb9151572fa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/56258ed4ac82bab6a14895f2f3911eb9151572fa"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3d5401d7f056b2ca431212a59ba46a4f65236586",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3d5401d7f056b2ca431212a59ba46a4f65236586",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3d5401d7f056b2ca431212a59ba46a4f65236586",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3d5401d7f056b2ca431212a59ba46a4f65236586/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "eecfdfba2e20ce81aebe24313324172844b4088e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eecfdfba2e20ce81aebe24313324172844b4088e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/eecfdfba2e20ce81aebe24313324172844b4088e"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "319953bc2b01cd6c76df47c2e314aec2d58d683e",
        "filename": "src/rpcrawtransaction.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3d5401d7f056b2ca431212a59ba46a4f65236586/src/rpcrawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3d5401d7f056b2ca431212a59ba46a4f65236586/src/rpcrawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcrawtransaction.cpp?ref=3d5401d7f056b2ca431212a59ba46a4f65236586",
        "patch": "@@ -49,7 +49,7 @@ void ScriptPubKeyToJSON(const CScript& scriptPubKey, Object& out, bool fIncludeH\n \n             CMalleableKeyView view;\n             if (pwalletMain->CheckOwnership(CPubKey(vSolutions[0]), CPubKey(vSolutions[1]), view))\n-                out.push_back(Pair(\"keyView\", view.ToString()));\n+                out.push_back(Pair(\"pubkeyPair\", view.GetMalleablePubKey().ToString()));\n         }\n         else\n         {"
      }
    ]
  },
  {
    "sha": "cac9353f3e75d7dd8d7ec3ee554d40270efb9f8a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjYWM5MzUzZjNlNzVkN2RkOGQ3ZWMzZWU1NTRkNDAyNzBlZmI5Zjhh",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-02-20T16:17:12Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-02-20T16:17:12Z"
      },
      "message": "Merge branch 'master' of github.com:novacoin-project/novacoin",
      "tree": {
        "sha": "458e11db268e3bcef3e02d3db591e7d57939f679",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/458e11db268e3bcef3e02d3db591e7d57939f679"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cac9353f3e75d7dd8d7ec3ee554d40270efb9f8a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cac9353f3e75d7dd8d7ec3ee554d40270efb9f8a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cac9353f3e75d7dd8d7ec3ee554d40270efb9f8a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cac9353f3e75d7dd8d7ec3ee554d40270efb9f8a/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3d5401d7f056b2ca431212a59ba46a4f65236586",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3d5401d7f056b2ca431212a59ba46a4f65236586",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3d5401d7f056b2ca431212a59ba46a4f65236586"
      },
      {
        "sha": "7b30fc99cf10a3dd8cae3239d3c5ed98a553f238",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7b30fc99cf10a3dd8cae3239d3c5ed98a553f238",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7b30fc99cf10a3dd8cae3239d3c5ed98a553f238"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 1,
      "deletions": 4
    },
    "files": [
      {
        "sha": "03bc607a9134c952673a8ae9802d76013ad17413",
        "filename": "src/irc.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 4,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cac9353f3e75d7dd8d7ec3ee554d40270efb9f8a/src/irc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cac9353f3e75d7dd8d7ec3ee554d40270efb9f8a/src/irc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/irc.cpp?ref=cac9353f3e75d7dd8d7ec3ee554d40270efb9f8a",
        "patch": "@@ -7,10 +7,7 @@\n #include \"base58.h\"\n #include \"net.h\"\n \n-#include <boost/algorithm/string/predicate.hpp> // for startswith() and endswith()\n-\n using namespace std;\n-using namespace boost;\n \n int nGotIRCAddresses = 0;\n \n@@ -347,7 +344,7 @@ void ThreadIRCSeed2(void* parg)\n                 printf(\"IRC got join\\n\");\n             }\n \n-            if (boost::algorithm::starts_with(strName, \"u\"))\n+            if (strName.compare(0,1, \"u\") == 0)\n             {\n                 CAddress addr;\n                 if (DecodeAddress(strName, addr))"
      }
    ]
  },
  {
    "sha": "885c94832a8af9c909c46dae1bf4c0076f4c8bd2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4ODVjOTQ4MzJhOGFmOWM5MDljNDZkYWUxYmY0YzAwNzZmNGM4YmQy",
    "commit": {
      "author": {
        "name": "FuzzyHobbit",
        "email": "fuzzyhobbit@gmx.com",
        "date": "2016-02-20T18:32:05Z"
      },
      "committer": {
        "name": "FuzzyHobbit",
        "email": "fuzzyhobbit@gmx.com",
        "date": "2016-02-20T18:32:05Z"
      },
      "message": "Use largest finite value for MAX_MONEY",
      "tree": {
        "sha": "42c4b68f1ead8837159afa16a4c57039bf352d07",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/42c4b68f1ead8837159afa16a4c57039bf352d07"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/885c94832a8af9c909c46dae1bf4c0076f4c8bd2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/885c94832a8af9c909c46dae1bf4c0076f4c8bd2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/885c94832a8af9c909c46dae1bf4c0076f4c8bd2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/885c94832a8af9c909c46dae1bf4c0076f4c8bd2/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "cac9353f3e75d7dd8d7ec3ee554d40270efb9f8a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cac9353f3e75d7dd8d7ec3ee554d40270efb9f8a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cac9353f3e75d7dd8d7ec3ee554d40270efb9f8a"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 2,
      "deletions": 1
    },
    "files": [
      {
        "sha": "a36f32840b0e762ca80cbfb65c7d62daecd1a123",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/885c94832a8af9c909c46dae1bf4c0076f4c8bd2/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/885c94832a8af9c909c46dae1bf4c0076f4c8bd2/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=885c94832a8af9c909c46dae1bf4c0076f4c8bd2",
        "patch": "@@ -14,6 +14,7 @@\n #include \"script.h\"\n #include \"scrypt.h\"\n \n+#include <limits>\n #include <list>\n #include <map>\n \n@@ -42,7 +43,7 @@ static const unsigned int MAX_INV_SZ = 50000;\n static const int64_t MIN_TX_FEE = CENT/10;\n static const int64_t MIN_RELAY_TX_FEE = CENT/50;\n \n-static const int64_t MAX_MONEY = 2000000000 * COIN;\n+static const int64_t MAX_MONEY = std::numeric_limits<int64_t>::max();\n static const int64_t MAX_MINT_PROOF_OF_WORK = 100 * COIN;\n static const int64_t MAX_MINT_PROOF_OF_STAKE = 1 * COIN;\n static const int64_t MIN_TXOUT_AMOUNT = CENT/100;"
      }
    ]
  },
  {
    "sha": "a1ecd31c232fc7c788ddf50189d3c4a4546993a5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphMWVjZDMxYzIzMmZjN2M3ODhkZGY1MDE4OWQzYzRhNDU0Njk5M2E1",
    "commit": {
      "author": {
        "name": "svost",
        "email": "ya.nowa@yandex.ru",
        "date": "2016-02-20T19:06:53Z"
      },
      "committer": {
        "name": "svost",
        "email": "ya.nowa@yandex.ru",
        "date": "2016-02-20T19:06:53Z"
      },
      "message": "Fix V808 PVS Studio: object created but was not utilized",
      "tree": {
        "sha": "3b41fcff220e43b8b0d33deb1958f0c27b97c5d9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3b41fcff220e43b8b0d33deb1958f0c27b97c5d9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a1ecd31c232fc7c788ddf50189d3c4a4546993a5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a1ecd31c232fc7c788ddf50189d3c4a4546993a5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a1ecd31c232fc7c788ddf50189d3c4a4546993a5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a1ecd31c232fc7c788ddf50189d3c4a4546993a5/comments",
    "author": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "572dd6fda7a5dc3e2b9b3432b18ddee38453e736",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/572dd6fda7a5dc3e2b9b3432b18ddee38453e736",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/572dd6fda7a5dc3e2b9b3432b18ddee38453e736"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 1,
      "deletions": 2
    },
    "files": [
      {
        "sha": "fa0244242940e693d2efb3716d3518f0d02260ba",
        "filename": "src/rpcmining.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a1ecd31c232fc7c788ddf50189d3c4a4546993a5/src/rpcmining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a1ecd31c232fc7c788ddf50189d3c4a4546993a5/src/rpcmining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcmining.cpp?ref=a1ecd31c232fc7c788ddf50189d3c4a4546993a5",
        "patch": "@@ -50,7 +50,7 @@ Value getmininginfo(const Array& params, bool fHelp)\n             \"getmininginfo\\n\"\n             \"Returns an object containing mining-related information.\");\n \n-    Object obj, diff, weight;\n+    Object obj, diff;\n     obj.push_back(Pair(\"blocks\",        (int)nBestHeight));\n     obj.push_back(Pair(\"currentblocksize\",(uint64_t)nLastBlockSize));\n     obj.push_back(Pair(\"currentblocktx\",(uint64_t)nLastBlockTx));"
      },
      {
        "sha": "118af69b08e547476287a295df3e0156d0573674",
        "filename": "src/rpcrawtransaction.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a1ecd31c232fc7c788ddf50189d3c4a4546993a5/src/rpcrawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a1ecd31c232fc7c788ddf50189d3c4a4546993a5/src/rpcrawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcrawtransaction.cpp?ref=a1ecd31c232fc7c788ddf50189d3c4a4546993a5",
        "patch": "@@ -644,7 +644,6 @@ Value createmultisig(const Array& params, bool fHelp)\n \n     int nRequired = params[0].get_int();\n     const Array& keys = params[1].get_array();\n-    string strAccount;\n \n     // Gather public keys\n     if (nRequired < 1)"
      }
    ]
  },
  {
    "sha": "0a3c2f66e941bf69d4f9e4101c2bd87182f2da66",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowYTNjMmY2NmU5NDFiZjY5ZDRmOWU0MTAxYzJiZDg3MTgyZjJkYTY2",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-09-08T10:20:50Z"
      },
      "committer": {
        "name": "svost",
        "email": "ya.nowa@yandex.ru",
        "date": "2016-02-21T14:47:25Z"
      },
      "message": "netbase: Use .data() instead of .c_str() on binary string\n\n`.c_str()` is only guaranteed to return the data up to the first NUL\ncharacter.",
      "tree": {
        "sha": "712cc25e27575728afa0da519279f5825ad763e4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/712cc25e27575728afa0da519279f5825ad763e4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0a3c2f66e941bf69d4f9e4101c2bd87182f2da66",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0a3c2f66e941bf69d4f9e4101c2bd87182f2da66",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0a3c2f66e941bf69d4f9e4101c2bd87182f2da66",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0a3c2f66e941bf69d4f9e4101c2bd87182f2da66/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7b30fc99cf10a3dd8cae3239d3c5ed98a553f238",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7b30fc99cf10a3dd8cae3239d3c5ed98a553f238",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7b30fc99cf10a3dd8cae3239d3c5ed98a553f238"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "41dec48d7324a8791a54b04ecbeb2fd013cb4bee",
        "filename": "src/netbase.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0a3c2f66e941bf69d4f9e4101c2bd87182f2da66/src/netbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0a3c2f66e941bf69d4f9e4101c2bd87182f2da66/src/netbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.cpp?ref=0a3c2f66e941bf69d4f9e4101c2bd87182f2da66",
        "patch": "@@ -252,7 +252,7 @@ bool static Socks5(string strDest, uint16_t port, SOCKET& hSocket)\n     strSocks5 += strDest;\n     strSocks5 += static_cast<char>((port >> 8) & 0xFF);\n     strSocks5 += static_cast<char>((port >> 0) & 0xFF);\n-    ret = send(hSocket, strSocks5.c_str(), strSocks5.size(), MSG_NOSIGNAL);\n+    ret = send(hSocket, strSocks5.data(), strSocks5.size(), MSG_NOSIGNAL);\n     if (ret != (ssize_t)strSocks5.size())\n     {\n         CloseSocket(hSocket);"
      }
    ]
  },
  {
    "sha": "40d7e7206095dc36110ba4f652fd9f17e727a075",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0MGQ3ZTcyMDYwOTVkYzM2MTEwYmE0ZjY1MmZkOWYxN2U3MjdhMDc1",
    "commit": {
      "author": {
        "name": "svost",
        "email": "ya.nowa@yandex.ru",
        "date": "2016-02-21T14:48:37Z"
      },
      "committer": {
        "name": "svost",
        "email": "ya.nowa@yandex.ru",
        "date": "2016-02-21T14:48:37Z"
      },
      "message": "Remove LookupHostNumeric( ) which is never used",
      "tree": {
        "sha": "eab2a5d69ea3ca4d8d87ddadeeafb8bb1ae56b52",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/eab2a5d69ea3ca4d8d87ddadeeafb8bb1ae56b52"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/40d7e7206095dc36110ba4f652fd9f17e727a075",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/40d7e7206095dc36110ba4f652fd9f17e727a075",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/40d7e7206095dc36110ba4f652fd9f17e727a075",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/40d7e7206095dc36110ba4f652fd9f17e727a075/comments",
    "author": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0a3c2f66e941bf69d4f9e4101c2bd87182f2da66",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0a3c2f66e941bf69d4f9e4101c2bd87182f2da66",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0a3c2f66e941bf69d4f9e4101c2bd87182f2da66"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 0,
      "deletions": 6
    },
    "files": [
      {
        "sha": "9bf5fe9de0a40c9ef07e2222fb67a10cc4875ce6",
        "filename": "src/netbase.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/40d7e7206095dc36110ba4f652fd9f17e727a075/src/netbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/40d7e7206095dc36110ba4f652fd9f17e727a075/src/netbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.cpp?ref=40d7e7206095dc36110ba4f652fd9f17e727a075",
        "patch": "@@ -136,11 +136,6 @@ bool LookupHost(const char *pszName, std::vector<CNetAddr>& vIP, unsigned int nM\n     return LookupIntern(strHost.c_str(), vIP, nMaxSolutions, fAllowLookup);\n }\n \n-bool LookupHostNumeric(const char *pszName, std::vector<CNetAddr>& vIP, unsigned int nMaxSolutions)\n-{\n-    return LookupHost(pszName, vIP, nMaxSolutions, false);\n-}\n-\n bool Lookup(const char *pszName, std::vector<CService>& vAddr, uint16_t portDefault, bool fAllowLookup, unsigned int nMaxSolutions)\n {\n     if (pszName[0] == 0)"
      },
      {
        "sha": "7e995f617db7263a250652e09f4becbd53c48546",
        "filename": "src/netbase.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/40d7e7206095dc36110ba4f652fd9f17e727a075/src/netbase.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/40d7e7206095dc36110ba4f652fd9f17e727a075/src/netbase.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.h?ref=40d7e7206095dc36110ba4f652fd9f17e727a075",
        "patch": "@@ -143,7 +143,6 @@ bool IsProxy(const CNetAddr &addr);\n bool SetNameProxy(CService addrProxy, int nSocksVersion = 5);\n bool HaveNameProxy();\n bool LookupHost(const char *pszName, std::vector<CNetAddr>& vIP, unsigned int nMaxSolutions = 0, bool fAllowLookup = true);\n-bool LookupHostNumeric(const char *pszName, std::vector<CNetAddr>& vIP, unsigned int nMaxSolutions = 0);\n bool Lookup(const char *pszName, CService& addr, uint16_t portDefault = 0, bool fAllowLookup = true);\n bool Lookup(const char *pszName, std::vector<CService>& vAddr, uint16_t portDefault = 0, bool fAllowLookup = true, unsigned int nMaxSolutions = 0);\n bool LookupNumeric(const char *pszName, CService& addr, uint16_t portDefault = 0);"
      }
    ]
  },
  {
    "sha": "0d6fb4761b7d2e06873ba66c57f78a35df72851c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowZDZmYjQ3NjFiN2QyZTA2ODczYmE2NmM1N2Y3OGEzNWRmNzI4NTFj",
    "commit": {
      "author": {
        "name": "svost",
        "email": "ya.nowa@yandex.ru",
        "date": "2016-02-21T14:56:03Z"
      },
      "committer": {
        "name": "svost",
        "email": "ya.nowa@yandex.ru",
        "date": "2016-02-21T14:56:03Z"
      },
      "message": "openssl: avoid config file load/race (see bitcoin d4b1d5a)",
      "tree": {
        "sha": "dfb88011002d7426cd0b32d3d4361d7cd4fe6a7a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/dfb88011002d7426cd0b32d3d4361d7cd4fe6a7a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0d6fb4761b7d2e06873ba66c57f78a35df72851c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0d6fb4761b7d2e06873ba66c57f78a35df72851c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0d6fb4761b7d2e06873ba66c57f78a35df72851c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0d6fb4761b7d2e06873ba66c57f78a35df72851c/comments",
    "author": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "40d7e7206095dc36110ba4f652fd9f17e727a075",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/40d7e7206095dc36110ba4f652fd9f17e727a075",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/40d7e7206095dc36110ba4f652fd9f17e727a075"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 8,
      "deletions": 0
    },
    "files": [
      {
        "sha": "0f84938e68dde29e0c7344f583f7e8e231987eeb",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0d6fb4761b7d2e06873ba66c57f78a35df72851c/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0d6fb4761b7d2e06873ba66c57f78a35df72851c/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=0d6fb4761b7d2e06873ba66c57f78a35df72851c",
        "patch": "@@ -31,6 +31,7 @@ namespace boost {\n #include <boost/thread.hpp>\n #include <openssl/crypto.h>\n #include <openssl/rand.h>\n+#include <openssl/conf.h>\n \n #ifdef WIN32\n #ifdef _MSC_VER\n@@ -127,6 +128,13 @@ class CInit\n             ppmutexOpenSSL[i] = new CCriticalSection();\n         CRYPTO_set_locking_callback(locking_callback);\n \n+        // OpenSSL can optionally load a config file which lists optional loadable modules and engines.\n+        // We don't use them so we don't require the config. However some of our libs may call functions\n+        // which attempt to load the config file, possibly resulting in an exit() or crash if it is missing\n+        // or corrupt. Explicitly tell OpenSSL not to try to load the file. The result for our libs will be\n+        // that the config appears to have been loaded and there are no modules/engines available.\n+        OPENSSL_no_config();\n+\n #ifdef WIN32\n         // Seed random number generator with screen scrape and other hardware sources\n         RAND_screen();"
      }
    ]
  },
  {
    "sha": "e1ebe9e91b427c48ddc1b512c8527f48dcc7f692",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplMWViZTllOTFiNDI3YzQ4ZGRjMWI1MTJjODUyN2Y0OGRjYzdmNjky",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-02-21T15:02:40Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-02-21T15:02:40Z"
      },
      "message": "Add OP_CHECKLOCKTIMEVERIFY support.",
      "tree": {
        "sha": "d73077f1995b9d7d4ba261f78ac2cbf5b6e19972",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d73077f1995b9d7d4ba261f78ac2cbf5b6e19972"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e1ebe9e91b427c48ddc1b512c8527f48dcc7f692",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e1ebe9e91b427c48ddc1b512c8527f48dcc7f692",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e1ebe9e91b427c48ddc1b512c8527f48dcc7f692",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e1ebe9e91b427c48ddc1b512c8527f48dcc7f692/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cac9353f3e75d7dd8d7ec3ee554d40270efb9f8a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cac9353f3e75d7dd8d7ec3ee554d40270efb9f8a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cac9353f3e75d7dd8d7ec3ee554d40270efb9f8a"
      }
    ],
    "stats": {
      "total": 57,
      "additions": 51,
      "deletions": 6
    },
    "files": [
      {
        "sha": "95927c8efd2fe2038f5878400b14086cb34e2e34",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 1,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e1ebe9e91b427c48ddc1b512c8527f48dcc7f692/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e1ebe9e91b427c48ddc1b512c8527f48dcc7f692/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=e1ebe9e91b427c48ddc1b512c8527f48dcc7f692",
        "patch": "@@ -1758,8 +1758,14 @@ bool CBlock::ConnectBlock(CTxDB& txdb, CBlockIndex* pindex, bool fJustCheck)\n             if (!tx.IsCoinStake())\n                 nFees += nTxValueIn - nTxValueOut;\n \n+            unsigned int nFlags = SCRIPT_VERIFY_NOCACHE | SCRIPT_VERIFY_P2SH;\n+\n+            if (tx.nTime >= CHECKLOCKTIMEVERIFY_SWITCH_TIME) {\n+                nFlags |= SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY;\n+            }\n+\n             std::vector<CScriptCheck> vChecks;\n-            if (!tx.ConnectInputs(txdb, mapInputs, mapQueuedChanges, posThisTx, pindex, true, false, fScriptChecks, SCRIPT_VERIFY_NOCACHE | SCRIPT_VERIFY_P2SH, nScriptCheckThreads ? &vChecks : NULL))\n+            if (!tx.ConnectInputs(txdb, mapInputs, mapQueuedChanges, posThisTx, pindex, true, false, fScriptChecks, nFlags, nScriptCheckThreads ? &vChecks : NULL))\n                 return false;\n             control.Add(vChecks);\n         }"
      },
      {
        "sha": "6b8e163e44185226477cee3e07324130f9cd715f",
        "filename": "src/script.cpp",
        "status": "modified",
        "additions": 39,
        "deletions": 2,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e1ebe9e91b427c48ddc1b512c8527f48dcc7f692/src/script.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e1ebe9e91b427c48ddc1b512c8527f48dcc7f692/src/script.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script.cpp?ref=e1ebe9e91b427c48ddc1b512c8527f48dcc7f692",
        "patch": "@@ -148,6 +148,7 @@ const char* GetOpName(opcodetype opcode)\n     case OP_ENDIF                  : return \"OP_ENDIF\";\n     case OP_VERIFY                 : return \"OP_VERIFY\";\n     case OP_RETURN                 : return \"OP_RETURN\";\n+    case OP_CHECKLOCKTIMEVERIFY    : return \"OP_CHECKLOCKTIMEVERIFY\";\n \n     // stack ops\n     case OP_TOALTSTACK             : return \"OP_TOALTSTACK\";\n@@ -230,7 +231,6 @@ const char* GetOpName(opcodetype opcode)\n \n     // expanson\n     case OP_NOP1                   : return \"OP_NOP1\";\n-    case OP_NOP2                   : return \"OP_NOP2\";\n     case OP_NOP3                   : return \"OP_NOP3\";\n     case OP_NOP4                   : return \"OP_NOP4\";\n     case OP_NOP5                   : return \"OP_NOP5\";\n@@ -422,7 +422,7 @@ bool EvalScript(vector<vector<unsigned char> >& stack, const CScript& script, co\n                 // Control\n                 //\n                 case OP_NOP:\n-                case OP_NOP1: case OP_NOP2: case OP_NOP3: case OP_NOP4: case OP_NOP5:\n+                case OP_NOP1: case OP_NOP3: case OP_NOP4: case OP_NOP5:\n                 case OP_NOP6: case OP_NOP7: case OP_NOP8: case OP_NOP9: case OP_NOP10:\n                 break;\n \n@@ -481,6 +481,43 @@ bool EvalScript(vector<vector<unsigned char> >& stack, const CScript& script, co\n                 }\n                 break;\n \n+                case OP_CHECKLOCKTIMEVERIFY:\n+                {\n+                    // CHECKLOCKTIMEVERIFY\n+                    //\n+                    // (nLockTime -- nLockTime)\n+                    if (!(flags & SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY))\n+                        break; // treat as a NOP is not enabled\n+                    if (stack.size() < 1)\n+                        return false;\n+                    const CBigNum nLockTime = CastToBigNum(stacktop(-1));\n+                    if (nLockTime < 0)\n+                        return false; // Negative argument is senseless.\n+\n+                    if (!( // We can have either lock-by-blockheight or lock-by-blocktime.\n+                          (txTo.nLockTime <  LOCKTIME_THRESHOLD && nLockTime <  LOCKTIME_THRESHOLD) || \n+                          (txTo.nLockTime >= LOCKTIME_THRESHOLD && nLockTime >= LOCKTIME_THRESHOLD)\n+                    ))\n+                        return false;\n+\n+                    // Now we can perform a simple numerical comparison\n+                    if (nLockTime > (int64_t)txTo.nLockTime)\n+                        return false;\n+\n+                    // Finally the nLockTime feature can be disabled and thus\n+                    // CHECKLOCKTIMEVERIFY bypassed if every txin has been\n+                    // finalized by setting nSequence to maxint. The\n+                    // transaction would be allowed into the blockchain, making\n+                    // the opcode ineffective.\n+                    //\n+                    // Testing if this vin is not final is sufficient to\n+                    // prevent this condition. Alternatively we could test all\n+                    // inputs, but testing just this input minimizes the data\n+                    // required to prove correct CHECKLOCKTIMEVERIFY execution.\n+                    if (txTo.vin[nIn].IsFinal())\n+                        return false;\n+                    break;\n+                }\n \n                 //\n                 // Stack ops"
      },
      {
        "sha": "e9afde81ee55bfb393f2d3b68f884f6c044cbc81",
        "filename": "src/script.h",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e1ebe9e91b427c48ddc1b512c8527f48dcc7f692/src/script.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e1ebe9e91b427c48ddc1b512c8527f48dcc7f692/src/script.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script.h?ref=e1ebe9e91b427c48ddc1b512c8527f48dcc7f692",
        "patch": "@@ -47,7 +47,9 @@ enum\n     SCRIPT_VERIFY_STRICTENC = (1U << 1), // enforce strict conformance to DER and SEC2 for signatures and pubkeys\n     SCRIPT_VERIFY_LOW_S     = (1U << 2), // enforce low S values in signatures (depends on STRICTENC)\n     SCRIPT_VERIFY_NOCACHE   = (1U << 3), // do not store results in signature cache (but do query it)\n-    SCRIPT_VERIFY_NULLDUMMY = (1U << 4)  // verify dummy stack item consumed by CHECKMULTISIG is of zero-length\n+    SCRIPT_VERIFY_NULLDUMMY = (1U << 4),  // verify dummy stack item consumed by CHECKMULTISIG is of zero-length\n+    SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY = (1U << 9)\n+\n };\n \n // Strict verification:\n@@ -125,6 +127,7 @@ enum opcodetype\n     OP_ENDIF = 0x68,\n     OP_VERIFY = 0x69,\n     OP_RETURN = 0x6a,\n+    OP_CHECKLOCKTIMEVERIFY = 0xb1,\n \n     // stack ops\n     OP_TOALTSTACK = 0x6b,\n@@ -210,7 +213,6 @@ enum opcodetype\n \n     // expansion\n     OP_NOP1 = 0xb0,\n-    OP_NOP2 = 0xb1,\n     OP_NOP3 = 0xb2,\n     OP_NOP4 = 0xb3,\n     OP_NOP5 = 0xb4,"
      },
      {
        "sha": "eb45fa4e7dd8e8b5d7084b55597867cf58280c4b",
        "filename": "src/timestamps.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e1ebe9e91b427c48ddc1b512c8527f48dcc7f692/src/timestamps.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e1ebe9e91b427c48ddc1b512c8527f48dcc7f692/src/timestamps.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/timestamps.h?ref=e1ebe9e91b427c48ddc1b512c8527f48dcc7f692",
        "patch": "@@ -4,5 +4,5 @@\n static const unsigned int TARGETS_SWITCH_TIME = 1374278400; // Saturday, 20-Jul-2013 00:00:00 UTC\n static const unsigned int COINBASE_SIGOPS_SWITCH_TIME = 1447977600; // Friday, 20-Nov-15 00:00:00 UTC\n static const unsigned int SMALLDATA_SWITCH_TIME = 1458432000; // Sunday, 20-Mar-16 00:00:00 UTC\n-\n+static const unsigned int CHECKLOCKTIMEVERIFY_SWITCH_TIME = 1461110400; // Wednesday, 20-Apr-16 00:00:00 UTC\n #endif"
      }
    ]
  },
  {
    "sha": "96b34e50e8b4ba397a6c242e0de787d402685d01",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5NmIzNGU1MGU4YjRiYTM5N2E2YzI0MmUwZGU3ODdkNDAyNjg1ZDAx",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-02-21T18:06:08Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-02-21T18:06:08Z"
      },
      "message": "Simplify OP_RETURN handling.",
      "tree": {
        "sha": "249c78b37c6e9f79fc539c633ee2008865e031b5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/249c78b37c6e9f79fc539c633ee2008865e031b5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/96b34e50e8b4ba397a6c242e0de787d402685d01",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/96b34e50e8b4ba397a6c242e0de787d402685d01",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/96b34e50e8b4ba397a6c242e0de787d402685d01",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/96b34e50e8b4ba397a6c242e0de787d402685d01/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e1ebe9e91b427c48ddc1b512c8527f48dcc7f692",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e1ebe9e91b427c48ddc1b512c8527f48dcc7f692",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e1ebe9e91b427c48ddc1b512c8527f48dcc7f692"
      }
    ],
    "stats": {
      "total": 22,
      "additions": 19,
      "deletions": 3
    },
    "files": [
      {
        "sha": "570e8a4d7a22626589fe70032c583dc6e81a3b01",
        "filename": "src/script.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96b34e50e8b4ba397a6c242e0de787d402685d01/src/script.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96b34e50e8b4ba397a6c242e0de787d402685d01/src/script.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script.cpp?ref=96b34e50e8b4ba397a6c242e0de787d402685d01",
        "patch": "@@ -1248,6 +1248,8 @@ bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, vector<vector<unsi\n         mTemplates.insert(make_pair(TX_NULL_DATA, CScript() << OP_RETURN << OP_SMALLDATA));\n     }\n \n+    vSolutionsRet.clear();\n+\n     // Shortcut for pay-to-script-hash, which are more constrained than the other types:\n     // it is always OP_HASH160 20 [20 byte hash] OP_EQUAL\n     if (scriptPubKey.IsPayToScriptHash())\n@@ -1258,6 +1260,16 @@ bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, vector<vector<unsi\n         return true;\n     }\n \n+    // Provably prunable, data-carrying output\n+    //\n+    // So long as script passes the IsUnspendable() test and all but the first\n+    // byte passes the IsPushOnly() test we don't care what exactly is in the\n+    // script.\n+    if (scriptPubKey.size() >= 1 && scriptPubKey[0] == OP_RETURN && scriptPubKey.IsPushOnly(scriptPubKey.begin()+1)) {\n+        typeRet = TX_NULL_DATA;\n+        return true;\n+    }\n+\n     // Scan templates\n     const CScript& script1 = scriptPubKey;\n     BOOST_FOREACH(const PAIRTYPE(txnouttype, CScript)& tplate, mTemplates)"
      },
      {
        "sha": "a99bcbc6bbfd8706c76591af6aa0bdf62360caee",
        "filename": "src/script.h",
        "status": "modified",
        "additions": 7,
        "deletions": 3,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96b34e50e8b4ba397a6c242e0de787d402685d01/src/script.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96b34e50e8b4ba397a6c242e0de787d402685d01/src/script.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script.h?ref=96b34e50e8b4ba397a6c242e0de787d402685d01",
        "patch": "@@ -540,10 +540,8 @@ class CScript : public std::vector<uint8_t>\n \n     bool IsPayToScriptHash() const;\n \n-    // Called by CTransaction::IsStandard and P2SH VerifyScript (which makes it consensus-critical).\n-    bool IsPushOnly() const\n+    bool IsPushOnly(const_iterator pc) const\n     {\n-        const_iterator pc = begin();\n         while (pc < end())\n         {\n             opcodetype opcode;\n@@ -555,6 +553,12 @@ class CScript : public std::vector<uint8_t>\n         return true;\n     }\n \n+    // Called by CTransaction::IsStandard and P2SH VerifyScript (which makes it consensus-critical).\n+    bool IsPushOnly() const\n+    {\n+        return this->IsPushOnly(begin());\n+    }\n+\n     // Called by CTransaction::IsStandard.\n     bool HasCanonicalPushes() const;\n "
      }
    ]
  },
  {
    "sha": "b67a0d796721df375e63167a0a630f24c1684a29",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiNjdhMGQ3OTY3MjFkZjM3NWU2MzE2N2EwYTYzMGYyNGMxNjg0YTI5",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "CryptoManiac@users.noreply.github.com",
        "date": "2016-02-21T18:13:53Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "CryptoManiac@users.noreply.github.com",
        "date": "2016-02-21T18:13:53Z"
      },
      "message": "Merge pull request #280 from svost/patch\n\nMinor fix",
      "tree": {
        "sha": "e87792c50719eacc6f315aeac21603da181bbfc4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e87792c50719eacc6f315aeac21603da181bbfc4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b67a0d796721df375e63167a0a630f24c1684a29",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b67a0d796721df375e63167a0a630f24c1684a29",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b67a0d796721df375e63167a0a630f24c1684a29",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b67a0d796721df375e63167a0a630f24c1684a29/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "96b34e50e8b4ba397a6c242e0de787d402685d01",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/96b34e50e8b4ba397a6c242e0de787d402685d01",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/96b34e50e8b4ba397a6c242e0de787d402685d01"
      },
      {
        "sha": "a1ecd31c232fc7c788ddf50189d3c4a4546993a5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a1ecd31c232fc7c788ddf50189d3c4a4546993a5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a1ecd31c232fc7c788ddf50189d3c4a4546993a5"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 6,
      "deletions": 7
    },
    "files": [
      {
        "sha": "757a18e40ca9ba747218cdc07aa0011531c211ea",
        "filename": "src/db.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b67a0d796721df375e63167a0a630f24c1684a29/src/db.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b67a0d796721df375e63167a0a630f24c1684a29/src/db.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/db.cpp?ref=b67a0d796721df375e63167a0a630f24c1684a29",
        "patch": "@@ -118,13 +118,13 @@ bool CDBEnv::Open(boost::filesystem::path pathEnv_)\n         nBlocks = nMaxLocks / 48768;\n         nDeepReorg = (nBlocks - 1) / 2;\n \n-        printf(\"Final lk_max_locks is %lu, sufficient for (worst case) %d block%s in a single transaction (up to a %d-deep reorganization)\\n\", (unsigned long)nMaxLocks, nBlocks, (nBlocks == 1) ? \"\" : \"s\", nDeepReorg);\n+        printf(\"Final lk_max_locks is %u, sufficient for (worst case) %d block%s in a single transaction (up to a %d-deep reorganization)\\n\", nMaxLocks, nBlocks, (nBlocks == 1) ? \"\" : \"s\", nDeepReorg);\n         if (nDeepReorg < 3)\n         {\n             if (nBlocks < 1)\n-                strMessage = strprintf(_(\"Warning: DB_CONFIG has set_lk_max_locks %lu, which may be too low for a single block. If this limit is reached, NovaCoin may stop working.\"), (unsigned long)nMaxLocks);\n+                strMessage = strprintf(_(\"Warning: DB_CONFIG has set_lk_max_locks %u, which may be too low for a single block. If this limit is reached, NovaCoin may stop working.\"), nMaxLocks);\n             else\n-                strMessage = strprintf(_(\"Warning: DB_CONFIG has set_lk_max_locks %lu, which may be too low for a common blockchain reorganization. If this limit is reached, NovaCoin may stop working.\"), (unsigned long)nMaxLocks);\n+                strMessage = strprintf(_(\"Warning: DB_CONFIG has set_lk_max_locks %u, which may be too low for a common blockchain reorganization. If this limit is reached, NovaCoin may stop working.\"), nMaxLocks);\n \n             strMiscWarning = strMessage;\n             printf(\"*** %s\\n\", strMessage.c_str());"
      },
      {
        "sha": "da8d602a82fc25bb619c473852c6c73f60ef18e4",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b67a0d796721df375e63167a0a630f24c1684a29/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b67a0d796721df375e63167a0a630f24c1684a29/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=b67a0d796721df375e63167a0a630f24c1684a29",
        "patch": "@@ -962,7 +962,7 @@ class CBlock\n         if (nHeight >= 9689 || fTestNet)\n         {\n             // Take last bit of block hash as entropy bit\n-            unsigned int nEntropyBit = ((GetHash().Get64()) & 1ULL);\n+            unsigned int nEntropyBit = (GetHash().Get64()) & (uint64_t)1;\n             if (fDebug && GetBoolArg(\"-printstakemodifier\"))\n                 printf(\"GetStakeEntropyBit: nTime=%u hashBlock=%s nEntropyBit=%u\\n\", nTime, GetHash().ToString().c_str(), nEntropyBit);\n             return nEntropyBit;"
      },
      {
        "sha": "fa0244242940e693d2efb3716d3518f0d02260ba",
        "filename": "src/rpcmining.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b67a0d796721df375e63167a0a630f24c1684a29/src/rpcmining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b67a0d796721df375e63167a0a630f24c1684a29/src/rpcmining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcmining.cpp?ref=b67a0d796721df375e63167a0a630f24c1684a29",
        "patch": "@@ -50,7 +50,7 @@ Value getmininginfo(const Array& params, bool fHelp)\n             \"getmininginfo\\n\"\n             \"Returns an object containing mining-related information.\");\n \n-    Object obj, diff, weight;\n+    Object obj, diff;\n     obj.push_back(Pair(\"blocks\",        (int)nBestHeight));\n     obj.push_back(Pair(\"currentblocksize\",(uint64_t)nLastBlockSize));\n     obj.push_back(Pair(\"currentblocktx\",(uint64_t)nLastBlockTx));"
      },
      {
        "sha": "776789810dbc85e564776aa3d9271814d7037ea3",
        "filename": "src/rpcrawtransaction.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b67a0d796721df375e63167a0a630f24c1684a29/src/rpcrawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b67a0d796721df375e63167a0a630f24c1684a29/src/rpcrawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcrawtransaction.cpp?ref=b67a0d796721df375e63167a0a630f24c1684a29",
        "patch": "@@ -644,7 +644,6 @@ Value createmultisig(const Array& params, bool fHelp)\n \n     int nRequired = params[0].get_int();\n     const Array& keys = params[1].get_array();\n-    string strAccount;\n \n     // Gather public keys\n     if (nRequired < 1)"
      },
      {
        "sha": "942ddc84a97e5c9f274c1524f8da254b76c0656b",
        "filename": "src/script.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b67a0d796721df375e63167a0a630f24c1684a29/src/script.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b67a0d796721df375e63167a0a630f24c1684a29/src/script.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script.cpp?ref=b67a0d796721df375e63167a0a630f24c1684a29",
        "patch": "@@ -294,7 +294,7 @@ bool IsDERSignature(const valtype &vchSig, bool fWithHashType, bool fCheckLow) {\n     if (5 + nLenR >= vchSig.size())\n         return error(\"Non-canonical signature: S length misplaced\");\n     unsigned int nLenS = vchSig[5+nLenR];\n-    if ((unsigned long)(nLenR + nLenS + (fWithHashType ? 7 : 6)) != vchSig.size())\n+    if ((nLenR + nLenS + (fWithHashType ? 7 : 6)) != vchSig.size())\n         return error(\"Non-canonical signature: R+S length mismatch\");\n \n     const unsigned char *R = &vchSig[4];"
      }
    ]
  },
  {
    "sha": "42696f28d7d88742a95b96b1ccafd2201aefc4cf",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0MjY5NmYyOGQ3ZDg4NzQyYTk1Yjk2YjFjY2FmZDIyMDFhZWZjNGNm",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "CryptoManiac@users.noreply.github.com",
        "date": "2016-02-21T18:14:30Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "CryptoManiac@users.noreply.github.com",
        "date": "2016-02-21T18:14:30Z"
      },
      "message": "Merge pull request #281 from FuzzyHobbit/patch-6\n\nUse largest finite value for MAX_MONEY",
      "tree": {
        "sha": "d08fb461752494ec7ddf73386f7d97e19155c9cb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d08fb461752494ec7ddf73386f7d97e19155c9cb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/42696f28d7d88742a95b96b1ccafd2201aefc4cf",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/42696f28d7d88742a95b96b1ccafd2201aefc4cf",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/42696f28d7d88742a95b96b1ccafd2201aefc4cf",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/42696f28d7d88742a95b96b1ccafd2201aefc4cf/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b67a0d796721df375e63167a0a630f24c1684a29",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b67a0d796721df375e63167a0a630f24c1684a29",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b67a0d796721df375e63167a0a630f24c1684a29"
      },
      {
        "sha": "885c94832a8af9c909c46dae1bf4c0076f4c8bd2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/885c94832a8af9c909c46dae1bf4c0076f4c8bd2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/885c94832a8af9c909c46dae1bf4c0076f4c8bd2"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 2,
      "deletions": 1
    },
    "files": [
      {
        "sha": "c9e3fd5a0ce68a3ac087c083e12738e6cc405c48",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/42696f28d7d88742a95b96b1ccafd2201aefc4cf/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/42696f28d7d88742a95b96b1ccafd2201aefc4cf/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=42696f28d7d88742a95b96b1ccafd2201aefc4cf",
        "patch": "@@ -14,6 +14,7 @@\n #include \"script.h\"\n #include \"scrypt.h\"\n \n+#include <limits>\n #include <list>\n #include <map>\n \n@@ -42,7 +43,7 @@ static const unsigned int MAX_INV_SZ = 50000;\n static const int64_t MIN_TX_FEE = CENT/10;\n static const int64_t MIN_RELAY_TX_FEE = CENT/50;\n \n-static const int64_t MAX_MONEY = 2000000000 * COIN;\n+static const int64_t MAX_MONEY = std::numeric_limits<int64_t>::max();\n static const int64_t MAX_MINT_PROOF_OF_WORK = 100 * COIN;\n static const int64_t MAX_MINT_PROOF_OF_STAKE = 1 * COIN;\n static const int64_t MIN_TXOUT_AMOUNT = CENT/100;"
      }
    ]
  },
  {
    "sha": "13fb9d6960a639fdb23cc5b3ddd06df3fe8f8165",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxM2ZiOWQ2OTYwYTYzOWZkYjIzY2M1YjNkZGQwNmRmM2ZlOGY4MTY1",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "CryptoManiac@users.noreply.github.com",
        "date": "2016-02-21T18:16:04Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "CryptoManiac@users.noreply.github.com",
        "date": "2016-02-21T18:16:04Z"
      },
      "message": "Merge pull request #282 from svost/from-bitcoin\n\nFrom bitcoin",
      "tree": {
        "sha": "1416e11c1e17d7eadef9214da662611ffbbc61c7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1416e11c1e17d7eadef9214da662611ffbbc61c7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/13fb9d6960a639fdb23cc5b3ddd06df3fe8f8165",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/13fb9d6960a639fdb23cc5b3ddd06df3fe8f8165",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/13fb9d6960a639fdb23cc5b3ddd06df3fe8f8165",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/13fb9d6960a639fdb23cc5b3ddd06df3fe8f8165/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "42696f28d7d88742a95b96b1ccafd2201aefc4cf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/42696f28d7d88742a95b96b1ccafd2201aefc4cf",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/42696f28d7d88742a95b96b1ccafd2201aefc4cf"
      },
      {
        "sha": "0d6fb4761b7d2e06873ba66c57f78a35df72851c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0d6fb4761b7d2e06873ba66c57f78a35df72851c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0d6fb4761b7d2e06873ba66c57f78a35df72851c"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 9,
      "deletions": 7
    },
    "files": [
      {
        "sha": "9bf5fe9de0a40c9ef07e2222fb67a10cc4875ce6",
        "filename": "src/netbase.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 6,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/13fb9d6960a639fdb23cc5b3ddd06df3fe8f8165/src/netbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/13fb9d6960a639fdb23cc5b3ddd06df3fe8f8165/src/netbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.cpp?ref=13fb9d6960a639fdb23cc5b3ddd06df3fe8f8165",
        "patch": "@@ -136,11 +136,6 @@ bool LookupHost(const char *pszName, std::vector<CNetAddr>& vIP, unsigned int nM\n     return LookupIntern(strHost.c_str(), vIP, nMaxSolutions, fAllowLookup);\n }\n \n-bool LookupHostNumeric(const char *pszName, std::vector<CNetAddr>& vIP, unsigned int nMaxSolutions)\n-{\n-    return LookupHost(pszName, vIP, nMaxSolutions, false);\n-}\n-\n bool Lookup(const char *pszName, std::vector<CService>& vAddr, uint16_t portDefault, bool fAllowLookup, unsigned int nMaxSolutions)\n {\n     if (pszName[0] == 0)\n@@ -252,7 +247,7 @@ bool static Socks5(string strDest, uint16_t port, SOCKET& hSocket)\n     strSocks5 += strDest;\n     strSocks5 += static_cast<char>((port >> 8) & 0xFF);\n     strSocks5 += static_cast<char>((port >> 0) & 0xFF);\n-    ret = send(hSocket, strSocks5.c_str(), strSocks5.size(), MSG_NOSIGNAL);\n+    ret = send(hSocket, strSocks5.data(), strSocks5.size(), MSG_NOSIGNAL);\n     if (ret != (ssize_t)strSocks5.size())\n     {\n         CloseSocket(hSocket);"
      },
      {
        "sha": "7e995f617db7263a250652e09f4becbd53c48546",
        "filename": "src/netbase.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/13fb9d6960a639fdb23cc5b3ddd06df3fe8f8165/src/netbase.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/13fb9d6960a639fdb23cc5b3ddd06df3fe8f8165/src/netbase.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.h?ref=13fb9d6960a639fdb23cc5b3ddd06df3fe8f8165",
        "patch": "@@ -143,7 +143,6 @@ bool IsProxy(const CNetAddr &addr);\n bool SetNameProxy(CService addrProxy, int nSocksVersion = 5);\n bool HaveNameProxy();\n bool LookupHost(const char *pszName, std::vector<CNetAddr>& vIP, unsigned int nMaxSolutions = 0, bool fAllowLookup = true);\n-bool LookupHostNumeric(const char *pszName, std::vector<CNetAddr>& vIP, unsigned int nMaxSolutions = 0);\n bool Lookup(const char *pszName, CService& addr, uint16_t portDefault = 0, bool fAllowLookup = true);\n bool Lookup(const char *pszName, std::vector<CService>& vAddr, uint16_t portDefault = 0, bool fAllowLookup = true, unsigned int nMaxSolutions = 0);\n bool LookupNumeric(const char *pszName, CService& addr, uint16_t portDefault = 0);"
      },
      {
        "sha": "0f84938e68dde29e0c7344f583f7e8e231987eeb",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/13fb9d6960a639fdb23cc5b3ddd06df3fe8f8165/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/13fb9d6960a639fdb23cc5b3ddd06df3fe8f8165/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=13fb9d6960a639fdb23cc5b3ddd06df3fe8f8165",
        "patch": "@@ -31,6 +31,7 @@ namespace boost {\n #include <boost/thread.hpp>\n #include <openssl/crypto.h>\n #include <openssl/rand.h>\n+#include <openssl/conf.h>\n \n #ifdef WIN32\n #ifdef _MSC_VER\n@@ -127,6 +128,13 @@ class CInit\n             ppmutexOpenSSL[i] = new CCriticalSection();\n         CRYPTO_set_locking_callback(locking_callback);\n \n+        // OpenSSL can optionally load a config file which lists optional loadable modules and engines.\n+        // We don't use them so we don't require the config. However some of our libs may call functions\n+        // which attempt to load the config file, possibly resulting in an exit() or crash if it is missing\n+        // or corrupt. Explicitly tell OpenSSL not to try to load the file. The result for our libs will be\n+        // that the config appears to have been loaded and there are no modules/engines available.\n+        OPENSSL_no_config();\n+\n #ifdef WIN32\n         // Seed random number generator with screen scrape and other hardware sources\n         RAND_screen();"
      }
    ]
  },
  {
    "sha": "49db62f89441309b3db121d4955108c9aed9f380",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0OWRiNjJmODk0NDEzMDliM2RiMTIxZDQ5NTUxMDhjOWFlZDlmMzgw",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-02-21T21:12:33Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-02-21T21:12:33Z"
      },
      "message": "Integer tempalte matching opcode.",
      "tree": {
        "sha": "6595d578c7f27af9f5434f4b0e173d27ed8ed173",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6595d578c7f27af9f5434f4b0e173d27ed8ed173"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/49db62f89441309b3db121d4955108c9aed9f380",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/49db62f89441309b3db121d4955108c9aed9f380",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/49db62f89441309b3db121d4955108c9aed9f380",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/49db62f89441309b3db121d4955108c9aed9f380/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "13fb9d6960a639fdb23cc5b3ddd06df3fe8f8165",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/13fb9d6960a639fdb23cc5b3ddd06df3fe8f8165",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/13fb9d6960a639fdb23cc5b3ddd06df3fe8f8165"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 15,
      "deletions": 2
    },
    "files": [
      {
        "sha": "1b504e4cd933dbc9c022b1b6276f6b1c0f3e4ae4",
        "filename": "src/script.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49db62f89441309b3db121d4955108c9aed9f380/src/script.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49db62f89441309b3db121d4955108c9aed9f380/src/script.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script.cpp?ref=49db62f89441309b3db121d4955108c9aed9f380",
        "patch": "@@ -1342,6 +1342,20 @@ bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, vector<vector<unsi\n                 else\n                     break;\n             }\n+            else if (opcode2 == OP_INTEGER)\n+            {   // Up to four-byte integer pushed onto vSolutions\n+                try\n+                {\n+                    CBigNum bnVal = CastToBigNum(vch1);\n+                    if (bnVal <= 16)\n+                        break; // It's better to use OP_0 ... OP_16 for small integers.\n+                    vSolutionsRet.push_back(vch1);\n+                }\n+                catch(...)\n+                {\n+                    break;\n+                }\n+            }\n             else if (opcode2 == OP_SMALLDATA)\n             {\n                 // small pushdata, <= 1024 bytes"
      },
      {
        "sha": "7d4798916957dd279d3666fed66d86e361eafaf4",
        "filename": "src/script.h",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49db62f89441309b3db121d4955108c9aed9f380/src/script.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49db62f89441309b3db121d4955108c9aed9f380/src/script.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script.h?ref=49db62f89441309b3db121d4955108c9aed9f380",
        "patch": "@@ -222,12 +222,11 @@ enum opcodetype\n     OP_NOP9 = 0xb8,\n     OP_NOP10 = 0xb9,\n \n-\n-\n     // template matching params\n     OP_SMALLDATA = 0xf9,\n     OP_SMALLINTEGER = 0xfa,\n     OP_PUBKEYS = 0xfb,\n+    OP_INTEGER = 0xfc,\n     OP_PUBKEYHASH = 0xfd,\n     OP_PUBKEY = 0xfe,\n "
      }
    ]
  },
  {
    "sha": "f8f873db4bf22c326a1f453acbf01e067fa327d4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmOGY4NzNkYjRiZjIyYzMyNmExZjQ1M2FjYmYwMWUwNjdmYTMyN2Q0",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-02-21T22:41:13Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-02-21T22:41:13Z"
      },
      "message": "OP_CHECKSEQUENCEVERIFY",
      "tree": {
        "sha": "4c42339a562a12f2f024bbc6b62e896b71d3a637",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4c42339a562a12f2f024bbc6b62e896b71d3a637"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f8f873db4bf22c326a1f453acbf01e067fa327d4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f8f873db4bf22c326a1f453acbf01e067fa327d4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f8f873db4bf22c326a1f453acbf01e067fa327d4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f8f873db4bf22c326a1f453acbf01e067fa327d4/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "49db62f89441309b3db121d4955108c9aed9f380",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/49db62f89441309b3db121d4955108c9aed9f380",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/49db62f89441309b3db121d4955108c9aed9f380"
      }
    ],
    "stats": {
      "total": 51,
      "additions": 47,
      "deletions": 4
    },
    "files": [
      {
        "sha": "404e135b77e1489e34d93988de316dbfd17bd1b2",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8f873db4bf22c326a1f453acbf01e067fa327d4/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8f873db4bf22c326a1f453acbf01e067fa327d4/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=f8f873db4bf22c326a1f453acbf01e067fa327d4",
        "patch": "@@ -1762,6 +1762,7 @@ bool CBlock::ConnectBlock(CTxDB& txdb, CBlockIndex* pindex, bool fJustCheck)\n \n             if (tx.nTime >= CHECKLOCKTIMEVERIFY_SWITCH_TIME) {\n                 nFlags |= SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY;\n+                nFlags |= SCRIPT_VERIFY_CHECKSEQUENCEVERIFY;\n             }\n \n             std::vector<CScriptCheck> vChecks;"
      },
      {
        "sha": "eb1dc9aee0730bd18f58bdadddf2eecb592df63e",
        "filename": "src/script.cpp",
        "status": "modified",
        "additions": 39,
        "deletions": 2,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8f873db4bf22c326a1f453acbf01e067fa327d4/src/script.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8f873db4bf22c326a1f453acbf01e067fa327d4/src/script.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script.cpp?ref=f8f873db4bf22c326a1f453acbf01e067fa327d4",
        "patch": "@@ -149,6 +149,7 @@ const char* GetOpName(opcodetype opcode)\n     case OP_VERIFY                 : return \"OP_VERIFY\";\n     case OP_RETURN                 : return \"OP_RETURN\";\n     case OP_CHECKLOCKTIMEVERIFY    : return \"OP_CHECKLOCKTIMEVERIFY\";\n+    case OP_CHECKSEQUENCEVERIFY    : return \"OP_CHECKSEQUENCEVERIFY\";\n \n     // stack ops\n     case OP_TOALTSTACK             : return \"OP_TOALTSTACK\";\n@@ -231,7 +232,6 @@ const char* GetOpName(opcodetype opcode)\n \n     // expanson\n     case OP_NOP1                   : return \"OP_NOP1\";\n-    case OP_NOP3                   : return \"OP_NOP3\";\n     case OP_NOP4                   : return \"OP_NOP4\";\n     case OP_NOP5                   : return \"OP_NOP5\";\n     case OP_NOP6                   : return \"OP_NOP6\";\n@@ -422,7 +422,7 @@ bool EvalScript(vector<vector<unsigned char> >& stack, const CScript& script, co\n                 // Control\n                 //\n                 case OP_NOP:\n-                case OP_NOP1: case OP_NOP3: case OP_NOP4: case OP_NOP5:\n+                case OP_NOP1: case OP_NOP4: case OP_NOP5:\n                 case OP_NOP6: case OP_NOP7: case OP_NOP8: case OP_NOP9: case OP_NOP10:\n                 break;\n \n@@ -519,6 +519,43 @@ bool EvalScript(vector<vector<unsigned char> >& stack, const CScript& script, co\n                     break;\n                 }\n \n+                case OP_CHECKSEQUENCEVERIFY:\n+                {\n+                    if (!(flags & SCRIPT_VERIFY_CHECKSEQUENCEVERIFY))\n+                        // treat as a NOP if not enabled\n+                        break;\n+                    if (stack.size() < 1)\n+                        return false;\n+                    const CBigNum nInvSequence = CastToBigNum(stacktop(-1));\n+\n+                    // In the rare event that the argument may be < 0 due to\n+                    // some arithmetic being done first, you can always use\n+                    // 0 MAX CHECKSEQUENCEVERIFY.\n+                    if (nInvSequence < 0)\n+                        return false; // negative nSequence is senseless\n+\n+                    // Relative lock times are supported by comparing the passed\n+                    // in lock time to the sequence number of the input. All other\n+                    // logic is the same, all that differs is what we are comparing\n+                    // the lock time to.\n+                    int64_t txToLockTime = (int64_t)~txTo.vin[nIn].nSequence;\n+                        if (txToLockTime >= SEQUENCE_THRESHOLD)\n+                            return false;\n+\n+                    if (!(\n+                        (txToLockTime <  LOCKTIME_THRESHOLD && nInvSequence <  LOCKTIME_THRESHOLD) || \n+                        (txToLockTime >= LOCKTIME_THRESHOLD && nInvSequence >= LOCKTIME_THRESHOLD)\n+                    ))\n+                        return false;\n+\n+                    // Now that we know we're comparing apples-to-apples, the\n+                    // comparison is a simple numeric one.\n+                    if (nInvSequence > txToLockTime)\n+                        return false;\n+\n+                    break;\n+                }\n+\n                 //\n                 // Stack ops\n                 //"
      },
      {
        "sha": "98d09656b562b4447e80144d5ecac0ef5e91ad9e",
        "filename": "src/script.h",
        "status": "modified",
        "additions": 7,
        "deletions": 2,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8f873db4bf22c326a1f453acbf01e067fa327d4/src/script.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8f873db4bf22c326a1f453acbf01e067fa327d4/src/script.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script.h?ref=f8f873db4bf22c326a1f453acbf01e067fa327d4",
        "patch": "@@ -19,6 +19,10 @@ class CTransaction;\n \n static const unsigned int MAX_SCRIPT_ELEMENT_SIZE = 520; // bytes\n \n+// Threshold for inverted nSequence: below this value it is interpreted\n+// as a relative lock-time, otherwise ignored.\n+static const uint32_t SEQUENCE_THRESHOLD = (1 << 31);\n+\n /** IsMine() return codes */\n enum isminetype\n {\n@@ -48,7 +52,8 @@ enum\n     SCRIPT_VERIFY_LOW_S     = (1U << 2), // enforce low S values in signatures (depends on STRICTENC)\n     SCRIPT_VERIFY_NOCACHE   = (1U << 3), // do not store results in signature cache (but do query it)\n     SCRIPT_VERIFY_NULLDUMMY = (1U << 4),  // verify dummy stack item consumed by CHECKMULTISIG is of zero-length\n-    SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY = (1U << 9)\n+    SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY = (1U << 9),\n+    SCRIPT_VERIFY_CHECKSEQUENCEVERIFY = (1U << 9)\n \n };\n \n@@ -128,6 +133,7 @@ enum opcodetype\n     OP_VERIFY = 0x69,\n     OP_RETURN = 0x6a,\n     OP_CHECKLOCKTIMEVERIFY = 0xb1,\n+    OP_CHECKSEQUENCEVERIFY = 0xb2,\n \n     // stack ops\n     OP_TOALTSTACK = 0x6b,\n@@ -213,7 +219,6 @@ enum opcodetype\n \n     // expansion\n     OP_NOP1 = 0xb0,\n-    OP_NOP3 = 0xb2,\n     OP_NOP4 = 0xb3,\n     OP_NOP5 = 0xb4,\n     OP_NOP6 = 0xb5,"
      }
    ]
  },
  {
    "sha": "7a0b1a6c2a8e7f9fc1ab0c4f036f2b8daeae8621",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3YTBiMWE2YzJhOGU3ZjlmYzFhYjBjNGYwMzZmMmI4ZGFlYWU4NjIx",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-02-21T22:44:21Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-02-21T22:46:11Z"
      },
      "message": "Well, I'd say that indents aren't needed here.",
      "tree": {
        "sha": "8b1363a52e808eb9191037e1bfec8d8055d66e0d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8b1363a52e808eb9191037e1bfec8d8055d66e0d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7a0b1a6c2a8e7f9fc1ab0c4f036f2b8daeae8621",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7a0b1a6c2a8e7f9fc1ab0c4f036f2b8daeae8621",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7a0b1a6c2a8e7f9fc1ab0c4f036f2b8daeae8621",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7a0b1a6c2a8e7f9fc1ab0c4f036f2b8daeae8621/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f8f873db4bf22c326a1f453acbf01e067fa327d4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f8f873db4bf22c326a1f453acbf01e067fa327d4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f8f873db4bf22c326a1f453acbf01e067fa327d4"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "2eb71f02cc6e292e2f11e8ef73289e39aa9da647",
        "filename": "src/script.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7a0b1a6c2a8e7f9fc1ab0c4f036f2b8daeae8621/src/script.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7a0b1a6c2a8e7f9fc1ab0c4f036f2b8daeae8621/src/script.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script.cpp?ref=7a0b1a6c2a8e7f9fc1ab0c4f036f2b8daeae8621",
        "patch": "@@ -539,8 +539,8 @@ bool EvalScript(vector<vector<unsigned char> >& stack, const CScript& script, co\n                     // logic is the same, all that differs is what we are comparing\n                     // the lock time to.\n                     int64_t txToLockTime = (int64_t)~txTo.vin[nIn].nSequence;\n-                        if (txToLockTime >= SEQUENCE_THRESHOLD)\n-                            return false;\n+                    if (txToLockTime >= SEQUENCE_THRESHOLD)\n+                        return false;\n \n                     if (!(\n                         (txToLockTime <  LOCKTIME_THRESHOLD && nInvSequence <  LOCKTIME_THRESHOLD) || "
      }
    ]
  },
  {
    "sha": "f4507055f23bf1abb1656d1d56058763661ed567",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmNDUwNzA1NWYyM2JmMWFiYjE2NTZkMWQ1NjA1ODc2MzY2MWVkNTY3",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-02-21T23:37:42Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-02-21T23:37:42Z"
      },
      "message": "Allow generation of keypairs for mainNet clients since 20 March, 2016",
      "tree": {
        "sha": "d5a962649e1b5d5e6df1bf808839a181f56b8dbd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d5a962649e1b5d5e6df1bf808839a181f56b8dbd"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f4507055f23bf1abb1656d1d56058763661ed567",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f4507055f23bf1abb1656d1d56058763661ed567",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f4507055f23bf1abb1656d1d56058763661ed567",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f4507055f23bf1abb1656d1d56058763661ed567/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7a0b1a6c2a8e7f9fc1ab0c4f036f2b8daeae8621",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7a0b1a6c2a8e7f9fc1ab0c4f036f2b8daeae8621",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7a0b1a6c2a8e7f9fc1ab0c4f036f2b8daeae8621"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "5ebff9c9cce13dc3bba0d24b4dc108d5fc4b9ed7",
        "filename": "src/rpcwallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f4507055f23bf1abb1656d1d56058763661ed567/src/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f4507055f23bf1abb1656d1d56058763661ed567/src/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.cpp?ref=f4507055f23bf1abb1656d1d56058763661ed567",
        "patch": "@@ -1896,7 +1896,7 @@ Value newmalleablekey(const Array& params, bool fHelp)\n             \"newmalleablekey\\n\"\n             \"Make a malleable public/private key pair.\\n\");\n \n-    if (!fTestNet)\n+    if (!fTestNet && GetTime() < SMALLDATA_SWITCH_TIME)\n         throw runtime_error(\"This feature has been disabled for mainNet clients\");\n \n     CMalleableKeyView keyView = pwalletMain->GenerateNewMalleableKey();"
      }
    ]
  },
  {
    "sha": "2f2bcf880ccea7579b88f354dc4acb8cb445669b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyZjJiY2Y4ODBjY2VhNzU3OWI4OGYzNTRkYzRhY2I4Y2I0NDU2Njli",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "CryptoManiac@users.noreply.github.com",
        "date": "2016-02-21T23:47:24Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "CryptoManiac@users.noreply.github.com",
        "date": "2016-02-21T23:47:24Z"
      },
      "message": "Update README.md",
      "tree": {
        "sha": "fccbab265d17257360fcb282e59915c07a73f9e2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fccbab265d17257360fcb282e59915c07a73f9e2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2f2bcf880ccea7579b88f354dc4acb8cb445669b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2f2bcf880ccea7579b88f354dc4acb8cb445669b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2f2bcf880ccea7579b88f354dc4acb8cb445669b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2f2bcf880ccea7579b88f354dc4acb8cb445669b/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f4507055f23bf1abb1656d1d56058763661ed567",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f4507055f23bf1abb1656d1d56058763661ed567",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f4507055f23bf1abb1656d1d56058763661ed567"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "cc27b34b31f9c4b304039f397362618923e1ceee",
        "filename": "README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2f2bcf880ccea7579b88f354dc4acb8cb445669b/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2f2bcf880ccea7579b88f354dc4acb8cb445669b/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/README.md?ref=2f2bcf880ccea7579b88f354dc4acb8cb445669b",
        "patch": "@@ -10,7 +10,7 @@ NovaCoin - a hybrid scrypt PoW + PoS based cryptocurrency.\n * The PoS interest halves every x64 multiply of PoS difficulty\n * Maximum PoW reward is 100 coins\n * Maximum PoS reward is 10 coins\n-* No deterministic limit of the supply, currently ~ 1282144 coins mined\n+* No deterministic limit of the supply, currently ~ 1411259 coins mined\n \n Development process\n ==========================="
      }
    ]
  },
  {
    "sha": "3497f0f22da7f2751ceeb9ed1ead4f67d9f5de0d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNDk3ZjBmMjJkYTdmMjc1MWNlZWI5ZWQxZWFkNGY2N2Q5ZjVkZTBk",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "CryptoManiac@users.noreply.github.com",
        "date": "2016-02-22T02:20:47Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "CryptoManiac@users.noreply.github.com",
        "date": "2016-02-22T02:20:47Z"
      },
      "message": "Don't compare oranges to apples.",
      "tree": {
        "sha": "d20e76af0157d7dd615e8e20097f881150f7a0ec",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d20e76af0157d7dd615e8e20097f881150f7a0ec"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3497f0f22da7f2751ceeb9ed1ead4f67d9f5de0d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3497f0f22da7f2751ceeb9ed1ead4f67d9f5de0d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3497f0f22da7f2751ceeb9ed1ead4f67d9f5de0d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3497f0f22da7f2751ceeb9ed1ead4f67d9f5de0d/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2f2bcf880ccea7579b88f354dc4acb8cb445669b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2f2bcf880ccea7579b88f354dc4acb8cb445669b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2f2bcf880ccea7579b88f354dc4acb8cb445669b"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "c0da405b215322cb886082b854282649b86efc6c",
        "filename": "src/script.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3497f0f22da7f2751ceeb9ed1ead4f67d9f5de0d/src/script.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3497f0f22da7f2751ceeb9ed1ead4f67d9f5de0d/src/script.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script.cpp?ref=3497f0f22da7f2751ceeb9ed1ead4f67d9f5de0d",
        "patch": "@@ -543,8 +543,8 @@ bool EvalScript(vector<vector<unsigned char> >& stack, const CScript& script, co\n                         return false;\n \n                     if (!(\n-                        (txToLockTime <  LOCKTIME_THRESHOLD && nInvSequence <  LOCKTIME_THRESHOLD) || \n-                        (txToLockTime >= LOCKTIME_THRESHOLD && nInvSequence >= LOCKTIME_THRESHOLD)\n+                        (txToLockTime <  SEQUENCE_THRESHOLD && nInvSequence <  SEQUENCE_THRESHOLD) || \n+                        (txToLockTime >= SEQUENCE_THRESHOLD && nInvSequence >= SEQUENCE_THRESHOLD)\n                     ))\n                         return false;\n "
      }
    ]
  },
  {
    "sha": "ed42780b91d75b6b27127771af62b644706ab2a8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplZDQyNzgwYjkxZDc1YjZiMjcxMjc3NzFhZjYyYjY0NDcwNmFiMmE4",
    "commit": {
      "author": {
        "name": "svost",
        "email": "ya.nowa@yandex.ru",
        "date": "2016-02-22T12:30:33Z"
      },
      "committer": {
        "name": "svost",
        "email": "ya.nowa@yandex.ru",
        "date": "2016-02-22T12:30:33Z"
      },
      "message": "Remove c_str: stringvar1 = stringvar2",
      "tree": {
        "sha": "9a98bd2d84ebf5ac393f0c9d05174f9fc9c45ae3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9a98bd2d84ebf5ac393f0c9d05174f9fc9c45ae3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ed42780b91d75b6b27127771af62b644706ab2a8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ed42780b91d75b6b27127771af62b644706ab2a8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ed42780b91d75b6b27127771af62b644706ab2a8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ed42780b91d75b6b27127771af62b644706ab2a8/comments",
    "author": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3497f0f22da7f2751ceeb9ed1ead4f67d9f5de0d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3497f0f22da7f2751ceeb9ed1ead4f67d9f5de0d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3497f0f22da7f2751ceeb9ed1ead4f67d9f5de0d"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "ecdafaaceaf8e261fc16199fa345f7a2b63a2fcd",
        "filename": "src/irc.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ed42780b91d75b6b27127771af62b644706ab2a8/src/irc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ed42780b91d75b6b27127771af62b644706ab2a8/src/irc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/irc.cpp?ref=ed42780b91d75b6b27127771af62b644706ab2a8",
        "patch": "@@ -333,7 +333,7 @@ void ThreadIRCSeed2(void* parg)\n             {\n                 // index 7 is limited to 16 characters\n                 // could get full length name at index 10, but would be different from join messages\n-                strName = vWords[7].c_str();\n+                strName = vWords[7];\n                 printf(\"IRC got who\\n\");\n             }\n "
      },
      {
        "sha": "0c27a90eb6e70875585a835ad800c5cbcf8435a4",
        "filename": "src/rpcwallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ed42780b91d75b6b27127771af62b644706ab2a8/src/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ed42780b91d75b6b27127771af62b644706ab2a8/src/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.cpp?ref=ed42780b91d75b6b27127771af62b644706ab2a8",
        "patch": "@@ -1785,7 +1785,7 @@ Value reservebalance(const Array& params, bool fHelp)\n             nAmount = (nAmount / CENT) * CENT;  // round to cent\n             if (nAmount < 0)\n                 throw runtime_error(\"amount cannot be negative.\\n\");\n-            mapArgs[\"-reservebalance\"] = FormatMoney(nAmount).c_str();\n+            mapArgs[\"-reservebalance\"] = FormatMoney(nAmount);\n         }\n         else\n         {"
      }
    ]
  },
  {
    "sha": "194fca886d70f7c410e9e5709e4a5344dee45678",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxOTRmY2E4ODZkNzBmN2M0MTBlOWU1NzA5ZTRhNTM0NGRlZTQ1Njc4",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-02-22T13:38:02Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-02-22T13:38:02Z"
      },
      "message": "Add -splitthreshold option\n\nhttps://bitcointalk.org/index.php?topic=704756.msg13890630#msg13890630",
      "tree": {
        "sha": "2693c45896954276b267d2ac7ca2f407246742e6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2693c45896954276b267d2ac7ca2f407246742e6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/194fca886d70f7c410e9e5709e4a5344dee45678",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/194fca886d70f7c410e9e5709e4a5344dee45678",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/194fca886d70f7c410e9e5709e4a5344dee45678",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/194fca886d70f7c410e9e5709e4a5344dee45678/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f4507055f23bf1abb1656d1d56058763661ed567",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f4507055f23bf1abb1656d1d56058763661ed567",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f4507055f23bf1abb1656d1d56058763661ed567"
      }
    ],
    "stats": {
      "total": 27,
      "additions": 20,
      "deletions": 7
    },
    "files": [
      {
        "sha": "d5e3285749483c003ba0cc8e103ec70b7a8a1cb0",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 20,
        "deletions": 7,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/194fca886d70f7c410e9e5709e4a5344dee45678/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/194fca886d70f7c410e9e5709e4a5344dee45678/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=194fca886d70f7c410e9e5709e4a5344dee45678",
        "patch": "@@ -1938,7 +1938,7 @@ bool CWallet::CreateCoinStake(uint256 &hashTx, uint32_t nOut, uint32_t nGenerati\n     if (setCoins.empty())\n         return false;\n \n-    bool fMaxTimeWeight = false;\n+    bool fDontSplitCoins = false;\n     if (GetWeight((int64_t)wtx.nTime, (int64_t)nGenerationTime) == nStakeMaxAge)\n     {\n         // Only one output for old kernel inputs\n@@ -1981,16 +1981,29 @@ bool CWallet::CreateCoinStake(uint256 &hashTx, uint32_t nOut, uint32_t nGenerati\n             vwtxPrev.push_back(pcoin->first);\n         }\n \n-        fMaxTimeWeight = true;\n+        fDontSplitCoins = true;\n     }\n     else\n     {\n-        // Split stake input if maximum weight isn't reached yet\n-        txNew.vout.push_back(CTxOut(0, scriptPubKeyOut));\n-        txNew.vout.push_back(CTxOut(0, scriptPubKeyOut));\n+        int64_t nSplitThreshold = GetArg(\"-splitthreshold\", nCombineThreshold);\n \n         if (fDebug && GetBoolArg(\"-printcoinstake\"))\n-            printf(\"CreateCoinStake : maximum time weight isn't reached, splitting coinstake\\n\");\n+            printf(\"CreateCoinStake : nSplitThreshold=%\" PRId64 \"\\n\", nSplitThreshold);\n+\n+        if (nCredit > nSplitThreshold)\n+        {\n+            // Split stake input if credit is lower than combine threshold and maximum weight isn't reached yet\n+            txNew.vout.push_back(CTxOut(0, scriptPubKeyOut));\n+            txNew.vout.push_back(CTxOut(0, scriptPubKeyOut));\n+\n+            if (fDebug && GetBoolArg(\"-printcoinstake\"))\n+                printf(\"CreateCoinStake : splitting coinstake\\n\");\n+        }\n+        else\n+        {\n+            txNew.vout.push_back(CTxOut(0, scriptPubKeyOut));\n+            fDontSplitCoins = true;\n+        }\n     }\n \n     // Calculate coin age reward\n@@ -2004,7 +2017,7 @@ bool CWallet::CreateCoinStake(uint256 &hashTx, uint32_t nOut, uint32_t nGenerati\n     while (true)\n     {\n         // Set output amount\n-        if (fMaxTimeWeight)\n+        if (fDontSplitCoins)\n             txNew.vout[1].nValue = nCredit - nMinFee;\n         else\n         {"
      }
    ]
  },
  {
    "sha": "294fd35276b21c217424a61aec93bc0252423973",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyOTRmZDM1Mjc2YjIxYzIxNzQyNGE2MWFlYzkzYmMwMjUyNDIzOTcz",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-02-22T13:38:38Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-02-22T13:38:38Z"
      },
      "message": "Merge branch 'master' of github.com:novacoin-project/novacoin",
      "tree": {
        "sha": "5187a73ac4065ac1eaeae1d9702fed6807031ca3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5187a73ac4065ac1eaeae1d9702fed6807031ca3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/294fd35276b21c217424a61aec93bc0252423973",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/294fd35276b21c217424a61aec93bc0252423973",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/294fd35276b21c217424a61aec93bc0252423973",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/294fd35276b21c217424a61aec93bc0252423973/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "194fca886d70f7c410e9e5709e4a5344dee45678",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/194fca886d70f7c410e9e5709e4a5344dee45678",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/194fca886d70f7c410e9e5709e4a5344dee45678"
      },
      {
        "sha": "3497f0f22da7f2751ceeb9ed1ead4f67d9f5de0d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3497f0f22da7f2751ceeb9ed1ead4f67d9f5de0d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3497f0f22da7f2751ceeb9ed1ead4f67d9f5de0d"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "cc27b34b31f9c4b304039f397362618923e1ceee",
        "filename": "README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/294fd35276b21c217424a61aec93bc0252423973/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/294fd35276b21c217424a61aec93bc0252423973/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/README.md?ref=294fd35276b21c217424a61aec93bc0252423973",
        "patch": "@@ -10,7 +10,7 @@ NovaCoin - a hybrid scrypt PoW + PoS based cryptocurrency.\n * The PoS interest halves every x64 multiply of PoS difficulty\n * Maximum PoW reward is 100 coins\n * Maximum PoS reward is 10 coins\n-* No deterministic limit of the supply, currently ~ 1282144 coins mined\n+* No deterministic limit of the supply, currently ~ 1411259 coins mined\n \n Development process\n ==========================="
      },
      {
        "sha": "c0da405b215322cb886082b854282649b86efc6c",
        "filename": "src/script.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/294fd35276b21c217424a61aec93bc0252423973/src/script.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/294fd35276b21c217424a61aec93bc0252423973/src/script.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script.cpp?ref=294fd35276b21c217424a61aec93bc0252423973",
        "patch": "@@ -543,8 +543,8 @@ bool EvalScript(vector<vector<unsigned char> >& stack, const CScript& script, co\n                         return false;\n \n                     if (!(\n-                        (txToLockTime <  LOCKTIME_THRESHOLD && nInvSequence <  LOCKTIME_THRESHOLD) || \n-                        (txToLockTime >= LOCKTIME_THRESHOLD && nInvSequence >= LOCKTIME_THRESHOLD)\n+                        (txToLockTime <  SEQUENCE_THRESHOLD && nInvSequence <  SEQUENCE_THRESHOLD) || \n+                        (txToLockTime >= SEQUENCE_THRESHOLD && nInvSequence >= SEQUENCE_THRESHOLD)\n                     ))\n                         return false;\n "
      }
    ]
  },
  {
    "sha": "e8c66fbba72dce97886305097c161168d1655c69",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplOGM2NmZiYmE3MmRjZTk3ODg2MzA1MDk3YzE2MTE2OGQxNjU1YzY5",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "CryptoManiac@users.noreply.github.com",
        "date": "2016-02-22T13:39:21Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "CryptoManiac@users.noreply.github.com",
        "date": "2016-02-22T13:39:21Z"
      },
      "message": "Merge pull request #283 from svost/patch\n\nMinor fix",
      "tree": {
        "sha": "0df668fbc4fce1467f129148e34ff34eb1956524",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0df668fbc4fce1467f129148e34ff34eb1956524"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e8c66fbba72dce97886305097c161168d1655c69",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e8c66fbba72dce97886305097c161168d1655c69",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e8c66fbba72dce97886305097c161168d1655c69",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e8c66fbba72dce97886305097c161168d1655c69/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "294fd35276b21c217424a61aec93bc0252423973",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/294fd35276b21c217424a61aec93bc0252423973",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/294fd35276b21c217424a61aec93bc0252423973"
      },
      {
        "sha": "ed42780b91d75b6b27127771af62b644706ab2a8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ed42780b91d75b6b27127771af62b644706ab2a8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ed42780b91d75b6b27127771af62b644706ab2a8"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "ecdafaaceaf8e261fc16199fa345f7a2b63a2fcd",
        "filename": "src/irc.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e8c66fbba72dce97886305097c161168d1655c69/src/irc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e8c66fbba72dce97886305097c161168d1655c69/src/irc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/irc.cpp?ref=e8c66fbba72dce97886305097c161168d1655c69",
        "patch": "@@ -333,7 +333,7 @@ void ThreadIRCSeed2(void* parg)\n             {\n                 // index 7 is limited to 16 characters\n                 // could get full length name at index 10, but would be different from join messages\n-                strName = vWords[7].c_str();\n+                strName = vWords[7];\n                 printf(\"IRC got who\\n\");\n             }\n "
      },
      {
        "sha": "0c27a90eb6e70875585a835ad800c5cbcf8435a4",
        "filename": "src/rpcwallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e8c66fbba72dce97886305097c161168d1655c69/src/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e8c66fbba72dce97886305097c161168d1655c69/src/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.cpp?ref=e8c66fbba72dce97886305097c161168d1655c69",
        "patch": "@@ -1785,7 +1785,7 @@ Value reservebalance(const Array& params, bool fHelp)\n             nAmount = (nAmount / CENT) * CENT;  // round to cent\n             if (nAmount < 0)\n                 throw runtime_error(\"amount cannot be negative.\\n\");\n-            mapArgs[\"-reservebalance\"] = FormatMoney(nAmount).c_str();\n+            mapArgs[\"-reservebalance\"] = FormatMoney(nAmount);\n         }\n         else\n         {"
      }
    ]
  },
  {
    "sha": "3886cd3beef91ed8a7f02ceb737b6f967394803b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozODg2Y2QzYmVlZjkxZWQ4YTdmMDJjZWI3MzdiNmY5NjczOTQ4MDNi",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-02-22T15:03:48Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-02-22T15:03:48Z"
      },
      "message": "Remove COINBASE_SIGOPS_SWITCH_TIME",
      "tree": {
        "sha": "bae0f7305cb9188cc3ec9780491fcbe687ae6ac0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bae0f7305cb9188cc3ec9780491fcbe687ae6ac0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3886cd3beef91ed8a7f02ceb737b6f967394803b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3886cd3beef91ed8a7f02ceb737b6f967394803b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3886cd3beef91ed8a7f02ceb737b6f967394803b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3886cd3beef91ed8a7f02ceb737b6f967394803b/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e8c66fbba72dce97886305097c161168d1655c69",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e8c66fbba72dce97886305097c161168d1655c69",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e8c66fbba72dce97886305097c161168d1655c69"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 1,
      "deletions": 2
    },
    "files": [
      {
        "sha": "c8769af41de0ba9d157671a26d79c5f6c941b98a",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3886cd3beef91ed8a7f02ceb737b6f967394803b/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3886cd3beef91ed8a7f02ceb737b6f967394803b/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=3886cd3beef91ed8a7f02ceb737b6f967394803b",
        "patch": "@@ -429,7 +429,7 @@ unsigned int\n CTransaction::GetLegacySigOpCount() const\n {\n     unsigned int nSigOps = 0;\n-    if (!IsCoinBase() || nTime < COINBASE_SIGOPS_SWITCH_TIME)\n+    if (!IsCoinBase())\n     {\n         // Coinbase scriptsigs are never executed, so there is \n         //    no sense in calculation of sigops."
      },
      {
        "sha": "bc4b95063a1ec8416e6ce33d250f4de03d71a315",
        "filename": "src/timestamps.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3886cd3beef91ed8a7f02ceb737b6f967394803b/src/timestamps.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3886cd3beef91ed8a7f02ceb737b6f967394803b/src/timestamps.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/timestamps.h?ref=3886cd3beef91ed8a7f02ceb737b6f967394803b",
        "patch": "@@ -2,7 +2,6 @@\n #define BITCOIN_TIMESTAMPS_H\n \n static const unsigned int TARGETS_SWITCH_TIME = 1374278400; // Saturday, 20-Jul-2013 00:00:00 UTC\n-static const unsigned int COINBASE_SIGOPS_SWITCH_TIME = 1447977600; // Friday, 20-Nov-15 00:00:00 UTC\n static const unsigned int SMALLDATA_SWITCH_TIME = 1458432000; // Sunday, 20-Mar-16 00:00:00 UTC\n static const unsigned int CHECKLOCKTIMEVERIFY_SWITCH_TIME = 1461110400; // Wednesday, 20-Apr-16 00:00:00 UTC\n #endif"
      }
    ]
  },
  {
    "sha": "3e7d89885034b2b0ce682ef93c56d86060c4aedd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozZTdkODk4ODUwMzRiMmIwY2U2ODJlZjkzYzU2ZDg2MDYwYzRhZWRk",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-02-22T15:17:30Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-02-22T15:17:30Z"
      },
      "message": "Remove BIP0031_VERSION and MEMPOOL_GD_VERSION.",
      "tree": {
        "sha": "d5dfda1f60bbd12e5be1a682dbcc22b827d718bc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d5dfda1f60bbd12e5be1a682dbcc22b827d718bc"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3e7d89885034b2b0ce682ef93c56d86060c4aedd",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3e7d89885034b2b0ce682ef93c56d86060c4aedd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3e7d89885034b2b0ce682ef93c56d86060c4aedd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3e7d89885034b2b0ce682ef93c56d86060c4aedd/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3886cd3beef91ed8a7f02ceb737b6f967394803b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3886cd3beef91ed8a7f02ceb737b6f967394803b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3886cd3beef91ed8a7f02ceb737b6f967394803b"
      }
    ],
    "stats": {
      "total": 42,
      "additions": 15,
      "deletions": 27
    },
    "files": [
      {
        "sha": "dbd3276503a6b316d3cde0b4270261dfae2977d9",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 21,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3e7d89885034b2b0ce682ef93c56d86060c4aedd/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3e7d89885034b2b0ce682ef93c56d86060c4aedd/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=3e7d89885034b2b0ce682ef93c56d86060c4aedd",
        "patch": "@@ -3720,23 +3720,20 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n \n     else if (strCommand == \"ping\")\n     {\n-        if (pfrom->nVersion > BIP0031_VERSION)\n-        {\n-            uint64_t nonce = 0;\n-            vRecv >> nonce;\n-            // Echo the message back with the nonce. This allows for two useful features:\n-            //\n-            // 1) A remote node can quickly check if the connection is operational\n-            // 2) Remote nodes can measure the latency of the network thread. If this node\n-            //    is overloaded it won't respond to pings quickly and the remote node can\n-            //    avoid sending us more work, like chain download requests.\n-            //\n-            // The nonce stops the remote getting confused between different pings: without\n-            // it, if the remote node sends a ping once per second and this node takes 5\n-            // seconds to respond to each, the 5th ping the remote sends would appear to\n-            // return very quickly.\n-            pfrom->PushMessage(\"pong\", nonce);\n-        }\n+        uint64_t nonce = 0;\n+        vRecv >> nonce;\n+        // Echo the message back with the nonce. This allows for two useful features:\n+        //\n+        // 1) A remote node can quickly check if the connection is operational\n+        // 2) Remote nodes can measure the latency of the network thread. If this node\n+        //    is overloaded it won't respond to pings quickly and the remote node can\n+        //    avoid sending us more work, like chain download requests.\n+        //\n+        // The nonce stops the remote getting confused between different pings: without\n+        // it, if the remote node sends a ping once per second and this node takes 5\n+        // seconds to respond to each, the 5th ping the remote sends would appear to\n+        // return very quickly.\n+        pfrom->PushMessage(\"pong\", nonce);\n     }\n \n \n@@ -3920,10 +3917,7 @@ bool SendMessages(CNode* pto, bool fSendTrickle)\n         // right now.\n         if (pto->nLastSend && GetTime() - pto->nLastSend > nPingInterval && pto->vSend.empty()) {\n             uint64_t nonce = 0;\n-            if (pto->nVersion > BIP0031_VERSION)\n-                pto->PushMessage(\"ping\", nonce);\n-            else\n-                pto->PushMessage(\"ping\");\n+            pto->PushMessage(\"ping\", nonce);\n         }\n \n         // Start block sync"
      },
      {
        "sha": "3fa5be8ed80831a570487432f58b4b179e9dd815",
        "filename": "src/version.h",
        "status": "modified",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3e7d89885034b2b0ce682ef93c56d86060c4aedd/src/version.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3e7d89885034b2b0ce682ef93c56d86060c4aedd/src/version.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/version.h?ref=3e7d89885034b2b0ce682ef93c56d86060c4aedd",
        "patch": "@@ -43,12 +43,6 @@ static const int CADDR_TIME_VERSION = 31402;\n static const int NOBLKS_VERSION_START = 60002;\n static const int NOBLKS_VERSION_END = 60006;\n \n-// BIP 0031, pong message, is enabled for all versions AFTER this one\n-static const int BIP0031_VERSION = 60000;\n-\n-// \"mempool\" command, enhanced \"getdata\" behavior starts with this version:\n-static const int MEMPOOL_GD_VERSION = 60002;\n-\n #define DISPLAY_VERSION_MAJOR       0\n #define DISPLAY_VERSION_MINOR       5\n #define DISPLAY_VERSION_REVISION    5"
      }
    ]
  },
  {
    "sha": "7653c7370e1a14976d0a095bd0f2ec75051139c6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3NjUzYzczNzBlMWExNDk3NmQwYTA5NWJkMGYyZWM3NTA1MTEzOWM2",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-02-22T15:36:39Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-02-22T15:36:39Z"
      },
      "message": "Bump CLIENT_VERSION_BUILD",
      "tree": {
        "sha": "9070dbe4a83582604ebe7818c71ddd9d8df0a90d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9070dbe4a83582604ebe7818c71ddd9d8df0a90d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7653c7370e1a14976d0a095bd0f2ec75051139c6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7653c7370e1a14976d0a095bd0f2ec75051139c6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7653c7370e1a14976d0a095bd0f2ec75051139c6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7653c7370e1a14976d0a095bd0f2ec75051139c6/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3e7d89885034b2b0ce682ef93c56d86060c4aedd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3e7d89885034b2b0ce682ef93c56d86060c4aedd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3e7d89885034b2b0ce682ef93c56d86060c4aedd"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "f3481b8a96495c535cb1260ec3cb15be9a80e2b7",
        "filename": "src/clientversion.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7653c7370e1a14976d0a095bd0f2ec75051139c6/src/clientversion.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7653c7370e1a14976d0a095bd0f2ec75051139c6/src/clientversion.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/clientversion.h?ref=7653c7370e1a14976d0a095bd0f2ec75051139c6",
        "patch": "@@ -9,7 +9,7 @@\n #define CLIENT_VERSION_MAJOR       0\n #define CLIENT_VERSION_MINOR       7\n #define CLIENT_VERSION_REVISION    6\n-#define CLIENT_VERSION_BUILD       4\n+#define CLIENT_VERSION_BUILD       5\n \n // Converts the parameter X to a string after macro replacement on X has been performed.\n // Don't merge these into one macro!"
      }
    ]
  },
  {
    "sha": "fd84b67eaddb839de0e48c992ad956e8e17b4626",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmZDg0YjY3ZWFkZGI4MzlkZTBlNDhjOTkyYWQ5NTZlOGUxN2I0NjI2",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-02-22T20:18:34Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-02-22T20:18:34Z"
      },
      "message": "Do some cleanup, add importmalleablekey RPC call",
      "tree": {
        "sha": "97c8401a9099e9a971275b5bd872742f1f077735",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/97c8401a9099e9a971275b5bd872742f1f077735"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fd84b67eaddb839de0e48c992ad956e8e17b4626",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fd84b67eaddb839de0e48c992ad956e8e17b4626",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fd84b67eaddb839de0e48c992ad956e8e17b4626",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fd84b67eaddb839de0e48c992ad956e8e17b4626/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7653c7370e1a14976d0a095bd0f2ec75051139c6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7653c7370e1a14976d0a095bd0f2ec75051139c6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7653c7370e1a14976d0a095bd0f2ec75051139c6"
      }
    ],
    "stats": {
      "total": 131,
      "additions": 91,
      "deletions": 40
    },
    "files": [
      {
        "sha": "80674d6a1faa16ed5c1b5fbfcdc44afc266f6b1c",
        "filename": "src/bitcoinrpc.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd84b67eaddb839de0e48c992ad956e8e17b4626/src/bitcoinrpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd84b67eaddb839de0e48c992ad956e8e17b4626/src/bitcoinrpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoinrpc.cpp?ref=fd84b67eaddb839de0e48c992ad956e8e17b4626",
        "patch": "@@ -321,6 +321,8 @@ static const CRPCCommand vRPCCommands[] =\n     { \"adjustmalleablepubkey\",  &adjustmalleablepubkey,  false,  false},\n     { \"listmalleableviews\",     &listmalleableviews,     false,  false},\n     { \"dumpmalleablekey\",       &dumpmalleablekey,       false,  false},\n+    { \"validatemalleablepubkey\",&validatemalleablepubkey,true,   false },\n+    { \"importmalleablekey\",     &importmalleablekey,     true,   false },\n     { \"encryptdata\",            &encryptdata,            false,  false },\n     { \"decryptdata\",            &decryptdata,            false,  false },\n     { \"encryptmessage\",         &encryptmessage,         false,  false },"
      },
      {
        "sha": "84dd6a4523d9cc596af997c43f1637dc008cf945",
        "filename": "src/bitcoinrpc.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd84b67eaddb839de0e48c992ad956e8e17b4626/src/bitcoinrpc.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd84b67eaddb839de0e48c992ad956e8e17b4626/src/bitcoinrpc.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoinrpc.h?ref=fd84b67eaddb839de0e48c992ad956e8e17b4626",
        "patch": "@@ -211,6 +211,8 @@ extern json_spirit::Value adjustmalleablekey(const json_spirit::Array& params, b\n extern json_spirit::Value adjustmalleablepubkey(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value listmalleableviews(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value dumpmalleablekey(const json_spirit::Array& params, bool fHelp);\n+extern json_spirit::Value validatemalleablepubkey(const json_spirit::Array& params, bool fHelp);\n+extern json_spirit::Value importmalleablekey(const json_spirit::Array& params, bool fHelp);\n \n extern json_spirit::Value encryptdata(const json_spirit::Array& params, bool fHelp); // in rpccrypt.cpp\n extern json_spirit::Value decryptdata(const json_spirit::Array& params, bool fHelp);"
      },
      {
        "sha": "c11da92e62d9559874f1cbab11b74ec7a0e75a05",
        "filename": "src/key.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 24,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd84b67eaddb839de0e48c992ad956e8e17b4626/src/key.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd84b67eaddb839de0e48c992ad956e8e17b4626/src/key.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.cpp?ref=fd84b67eaddb839de0e48c992ad956e8e17b4626",
        "patch": "@@ -780,15 +780,6 @@ CMalleableKey::CMalleableKey(const CSecret &L, const CSecret &H)\n     SetSecrets(L, H);\n }\n \n-/*\n-CMalleableKey& CMalleableKey::operator=(const CMalleableKey &b)\n-{\n-    SetSecrets(b.vchSecretL, b.vchSecretH);\n-\n-    return (*this);\n-}\n-*/\n-\n CMalleableKey::~CMalleableKey()\n {\n }\n@@ -816,12 +807,6 @@ bool CMalleableKey::SetSecrets(const CSecret &pvchSecretL, const CSecret &pvchSe\n     return true;\n }\n \n-void CMalleableKey::GetSecrets(CSecret &pvchSecretL, CSecret &pvchSecretH) const\n-{\n-    pvchSecretL = vchSecretL;\n-    pvchSecretH = vchSecretH;\n-}\n-\n CMalleablePubKey CMalleableKey::GetMalleablePubKey() const\n {\n     CKey L, H;\n@@ -1012,7 +997,7 @@ bool CMalleableKey::SetString(const std::string& strMutableKey)\n     CDataStream ssKey(vchTemp, SER_NETWORK, PROTOCOL_VERSION);\n     ssKey >> *this;\n \n-    return IsNull();\n+    return IsValid();\n }\n \n // CMalleableKeyView\n@@ -1041,13 +1026,6 @@ CMalleableKeyView::CMalleableKeyView(const CMalleableKeyView &b)\n     nVersion = CURRENT_VERSION;\n }\n \n-CMalleableKeyView::CMalleableKeyView(const CSecret &L, const CPubKey &pvchPubKeyH)\n-{\n-    vchSecretL = L;\n-    vchPubKeyH = pvchPubKeyH.Raw();\n-    nVersion = CURRENT_VERSION;\n-}\n-\n CMalleableKeyView& CMalleableKeyView::operator=(const CMalleableKey &b)\n {\n     vchSecretL = b.vchSecretL;\n@@ -1152,7 +1130,7 @@ bool CMalleableKeyView::SetString(const std::string& strMutableKey)\n     CDataStream ssKey(vchTemp, SER_NETWORK, PROTOCOL_VERSION);\n     ssKey >> *this;\n \n-    return IsNull();\n+    return IsValid();\n }\n \n std::vector<unsigned char> CMalleableKeyView::Raw() const"
      },
      {
        "sha": "67c414e516f3ac3724c4aeecb801e90ae5f74daf",
        "filename": "src/key.h",
        "status": "modified",
        "additions": 6,
        "deletions": 4,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd84b67eaddb839de0e48c992ad956e8e17b4626/src/key.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd84b67eaddb839de0e48c992ad956e8e17b4626/src/key.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.h?ref=fd84b67eaddb839de0e48c992ad956e8e17b4626",
        "patch": "@@ -226,7 +226,6 @@ class CMalleablePubKey\n     }\n     CMalleablePubKey(const std::string& strMalleablePubKey) { SetString(strMalleablePubKey); }\n     CMalleablePubKey(const CPubKey &pubKeyInL, const CPubKey &pubKeyInH) : pubKeyL(pubKeyInL), pubKeyH(pubKeyInH) { nVersion = CMalleablePubKey::CURRENT_VERSION; }\n-    CMalleablePubKey(const std::vector<unsigned char> &pubKeyInL, const std::vector<unsigned char> &pubKeyInH) : pubKeyL(pubKeyInL), pubKeyH(pubKeyInH) { nVersion = CMalleablePubKey::CURRENT_VERSION; }\n \n     IMPLEMENT_SERIALIZE(\n         READWRITE(this->nVersion);\n@@ -299,8 +298,11 @@ class CMalleableKey\n     void Reset();\n     void MakeNewKeys();\n     bool IsNull() const;\n+    bool IsValid() const { return !IsNull() && GetMalleablePubKey().IsValid(); }\n     bool SetSecrets(const CSecret &pvchSecretL, const CSecret &pvchSecretH);\n-    void GetSecrets(CSecret &pvchSecretL, CSecret &pvchSecretH) const;\n+\n+    CSecret GetSecretL() const { return vchSecretL; }\n+    CSecret GetSecretH() const { return vchSecretH; }\n \n     CKeyID GetID() const {\n         return GetMalleablePubKey().GetID();\n@@ -322,13 +324,11 @@ class CMalleableKeyView\n public:\n     CMalleableKeyView() { nVersion = 0; };\n     CMalleableKeyView(const CMalleableKey &b);\n-    CMalleableKeyView(const CSecret &L, const CPubKey &pvchPubKeyH);\n \n     CMalleableKeyView(const CMalleableKeyView &b);\n     CMalleableKeyView& operator=(const CMalleableKey &b);\n     ~CMalleableKeyView();\n \n-\n     IMPLEMENT_SERIALIZE(\n         READWRITE(this->nVersion);\n         nVersion = this->nVersion;\n@@ -337,6 +337,7 @@ class CMalleableKeyView\n     )\n \n     bool IsNull() const;\n+    bool IsValid() const { return !IsNull() && GetMalleablePubKey().IsValid(); }\n     std::string ToString() const;\n     bool SetString(const std::string& strMalleablePubKey);\n     std::vector<unsigned char> Raw() const;\n@@ -351,6 +352,7 @@ class CMalleableKeyView\n         return GetMalleablePubKey().GetID();\n     }\n     CMalleablePubKey GetMalleablePubKey() const;\n+    CMalleableKey GetMalleableKey(const CSecret &vchSecretH) const { return CMalleableKey(vchSecretL, vchSecretH); }\n     bool CheckKeyVariant(const CPubKey &R, const CPubKey &vchPubKeyVariant) const;\n \n     bool operator <(const CMalleableKeyView& kv) const { return vchPubKeyH.GetID() < kv.vchPubKeyH.GetID(); }"
      },
      {
        "sha": "fa4f33c9048e5f95b52f5fb32e48e45c01ad6144",
        "filename": "src/keystore.h",
        "status": "modified",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd84b67eaddb839de0e48c992ad956e8e17b4626/src/keystore.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd84b67eaddb839de0e48c992ad956e8e17b4626/src/keystore.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/keystore.h?ref=fd84b67eaddb839de0e48c992ad956e8e17b4626",
        "patch": "@@ -200,6 +200,22 @@ class CBasicKeyStore : public CKeyStore\n                 malleableViewList.push_back(CMalleableKeyView(mi->first));\n         }\n     }\n+\n+    bool GetMalleableView(const CMalleablePubKey &mpk, CMalleableKeyView &view)\n+    {\n+        const CKeyID &mpkID = mpk.GetID();\n+        {\n+            LOCK(cs_KeyStore);\n+            for (MalleableKeyMap::const_iterator mi = mapMalleableKeys.begin(); mi != mapMalleableKeys.end(); mi++)\n+                if (mi->first.GetID() == mpkID)\n+                {\n+                    view = CMalleableKeyView(mi->first);\n+                    return true;\n+                }\n+        }\n+\n+        return false;\n+    }\n };\n \n typedef std::map<CKeyID, std::pair<CPubKey, std::vector<unsigned char> > > CryptedKeyMap;"
      },
      {
        "sha": "b0693ed27d559d0e710678739144b335e2c5c225",
        "filename": "src/rpcdump.cpp",
        "status": "modified",
        "additions": 46,
        "deletions": 0,
        "changes": 46,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd84b67eaddb839de0e48c992ad956e8e17b4626/src/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd84b67eaddb839de0e48c992ad956e8e17b4626/src/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcdump.cpp?ref=fd84b67eaddb839de0e48c992ad956e8e17b4626",
        "patch": "@@ -239,3 +239,49 @@ Value dumpwallet(const Array& params, bool fHelp)\n \n     return Value::null;\n }\n+\n+Value dumpmalleablekey(const Array& params, bool fHelp)\n+{\n+    if (fHelp || params.size() != 1)\n+        throw runtime_error (\n+            \"dumpmalleablekey <Key view>\\n\"\n+            \"Dump the private and public key pairs, which correspond to provided key view.\\n\");\n+\n+    CMalleableKey mKey;\n+    CMalleableKeyView keyView;\n+    keyView.SetString(params[0].get_str());\n+\n+    if (!pwalletMain->GetMalleableKey(keyView, mKey))\n+        throw runtime_error(\"There is no such item in the wallet\");\n+\n+    Object result;\n+    result.push_back(Pair(\"PrivatePair\", mKey.ToString()));\n+    result.push_back(Pair(\"PublicPair\", mKey.GetMalleablePubKey().ToString()));\n+\n+    return result;\n+}\n+\n+Value importmalleablekey(const Array& params, bool fHelp)\n+{\n+    if (fHelp || params.size() != 1)\n+        throw runtime_error (\n+            \"importmalleablekey <Key data>\\n\"\n+            \"Imports the private key pair into your wallet.\\n\");\n+\n+    CMalleableKey mKey;\n+    bool fSuccess = mKey.SetString(params[0].get_str());\n+\n+    Object result;\n+\n+    if (fSuccess)\n+    {\n+        fSuccess = pwalletMain->AddMalleableKey(mKey);\n+        result.push_back(Pair(\"Successful\", fSuccess));\n+        result.push_back(Pair(\"PublicPair\", mKey.GetMalleablePubKey().ToString()));\n+        result.push_back(Pair(\"KeyView\", CMalleableKeyView(mKey).ToString()));\n+    }\n+    else\n+        result.push_back(Pair(\"Successful\", false));\n+\n+    return result;\n+}"
      },
      {
        "sha": "ff627c11adfdb21b1ed611a87dca8b9a2d7567c1",
        "filename": "src/rpcwallet.cpp",
        "status": "modified",
        "additions": 17,
        "deletions": 12,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd84b67eaddb839de0e48c992ad956e8e17b4626/src/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd84b67eaddb839de0e48c992ad956e8e17b4626/src/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.cpp?ref=fd84b67eaddb839de0e48c992ad956e8e17b4626",
        "patch": "@@ -1912,23 +1912,28 @@ Value newmalleablekey(const Array& params, bool fHelp)\n     return result;\n }\n \n-Value dumpmalleablekey(const Array& params, bool fHelp)\n+Value validatemalleablepubkey(const Array& params, bool fHelp)\n {\n     if (fHelp || params.size() != 1)\n-        throw runtime_error (\n-            \"dumpmalleablekey <Key view>\\n\"\n-            \"Dump the private and public key pairs, which correspond to provided key view.\\n\");\n+        throw runtime_error(\n+            \"validatemalleablekey <Malleable public key data>\\n\"\n+            \"Check the validity and ownership for priovided malleable public key.\\n\");\n \n-    CMalleableKey mKey;\n-    CMalleableKeyView keyView;\n-    keyView.SetString(params[0].get_str());\n-\n-    if (!pwalletMain->GetMalleableKey(keyView, mKey))\n-        throw runtime_error(\"There is no such item in the wallet\");\n+    CMalleablePubKey mpk;\n+    bool isValid = mpk.SetString(params[0].get_str());\n \n     Object result;\n-    result.push_back(Pair(\"PrivatePair\", mKey.ToString()));\n-    result.push_back(Pair(\"PublicPair\", mKey.GetMalleablePubKey().ToString()));\n+    result.push_back(Pair(\"isvalid\", isValid));\n+\n+    if (isValid)\n+    {\n+        CMalleableKeyView view;\n+        bool isMine = pwalletMain->GetMalleableView(mpk, view);\n+        result.push_back(Pair(\"ismine\", isMine));\n+\n+        if (isMine)\n+            result.push_back(Pair(\"KeyView\", view.ToString()));\n+    }\n \n     return result;\n }"
      }
    ]
  },
  {
    "sha": "6d5a91c80be06a391ff07e338591e90b1da46326",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ZDVhOTFjODBiZTA2YTM5MWZmMDdlMzM4NTkxZTkwYjFkYTQ2MzI2",
    "commit": {
      "author": {
        "name": "svost",
        "email": "ya.nowa@yandex.ru",
        "date": "2016-02-22T21:23:38Z"
      },
      "committer": {
        "name": "svost",
        "email": "ya.nowa@yandex.ru",
        "date": "2016-02-22T21:23:38Z"
      },
      "message": "MSVC solution update",
      "tree": {
        "sha": "4b7e3fea62543a8cfc512a5a2b5a43a5dacd3c54",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4b7e3fea62543a8cfc512a5a2b5a43a5dacd3c54"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6d5a91c80be06a391ff07e338591e90b1da46326",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6d5a91c80be06a391ff07e338591e90b1da46326",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6d5a91c80be06a391ff07e338591e90b1da46326",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6d5a91c80be06a391ff07e338591e90b1da46326/comments",
    "author": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fd84b67eaddb839de0e48c992ad956e8e17b4626",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fd84b67eaddb839de0e48c992ad956e8e17b4626",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fd84b67eaddb839de0e48c992ad956e8e17b4626"
      }
    ],
    "stats": {
      "total": 29,
      "additions": 24,
      "deletions": 5
    },
    "files": [
      {
        "sha": "c1968c67ff01dc2fd3f0cea254deb95f96239142",
        "filename": "MSVC/libcommon/libcommon.vcxproj",
        "status": "modified",
        "additions": 6,
        "deletions": 2,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6d5a91c80be06a391ff07e338591e90b1da46326/MSVC/libcommon/libcommon.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6d5a91c80be06a391ff07e338591e90b1da46326/MSVC/libcommon/libcommon.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/MSVC/libcommon/libcommon.vcxproj?ref=6d5a91c80be06a391ff07e338591e90b1da46326",
        "patch": "@@ -20,8 +20,11 @@\n   </ItemGroup>\n   <ItemGroup>\n     <ClCompile Include=\"..\\..\\src\\alert.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\cryptogram.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\ecies.cpp\" />\n     <ClCompile Include=\"..\\..\\src\\kernel.cpp\" />\n     <ClCompile Include=\"..\\..\\src\\kernel_worker.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\rpccrypt.cpp\" />\n     <ClCompile Include=\"..\\..\\src\\stun.cpp\" />\n     <ClCompile Include=\"..\\..\\src\\base58.cpp\" />\n     <ClCompile Include=\"..\\..\\src\\txdb-leveldb.cpp\" />\n@@ -73,6 +76,7 @@\n     <ClInclude Include=\"..\\..\\src\\crypter.h\" />\n     <ClInclude Include=\"..\\..\\src\\db.h\" />\n     <ClInclude Include=\"..\\..\\src\\hash.h\" />\n+    <ClInclude Include=\"..\\..\\src\\ies.h\" />\n     <ClInclude Include=\"..\\..\\src\\init.h\" />\n     <ClInclude Include=\"..\\..\\src\\inttypes.h\" />\n     <ClInclude Include=\"..\\..\\src\\irc.h\" />\n@@ -86,7 +90,7 @@\n     <ClInclude Include=\"..\\..\\src\\mruset.h\" />\n     <ClInclude Include=\"..\\..\\src\\net.h\" />\n     <ClInclude Include=\"..\\..\\src\\netbase.h\" />\n-    <ClInclude Include=\"..\\..\\src\\ntp.h \"/>\n+    <ClInclude Include=\"..\\..\\src\\ntp.h \" />\n     <ClInclude Include=\"..\\..\\src\\protocol.h\" />\n     <ClInclude Include=\"..\\..\\src\\script.h\" />\n     <ClInclude Include=\"..\\..\\src\\scrypt.h\" />\n@@ -252,4 +256,4 @@\n   </ItemDefinitionGroup>\n   <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n   <ImportGroup Label=\"ExtensionTargets\" />\n-</Project>\n+</Project>\n\\ No newline at end of file"
      },
      {
        "sha": "a1a6e028b40fa3193b9df8c762a55c2c02b3cf9c",
        "filename": "MSVC/libcommon/libcommon.vcxproj.filters",
        "status": "modified",
        "additions": 18,
        "deletions": 3,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6d5a91c80be06a391ff07e338591e90b1da46326/MSVC/libcommon/libcommon.vcxproj.filters",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6d5a91c80be06a391ff07e338591e90b1da46326/MSVC/libcommon/libcommon.vcxproj.filters",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/MSVC/libcommon/libcommon.vcxproj.filters?ref=6d5a91c80be06a391ff07e338591e90b1da46326",
        "patch": "@@ -113,6 +113,15 @@\n     <ClCompile Include=\"..\\..\\src\\kernel_worker.cpp\">\n       <Filter>Source Files</Filter>\n     </ClCompile>\n+    <ClCompile Include=\"..\\..\\src\\cryptogram.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"..\\..\\src\\ecies.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"..\\..\\src\\rpccrypt.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n   </ItemGroup>\n   <ItemGroup>\n     <ClInclude Include=\"..\\..\\src\\addrman.h\">\n@@ -184,9 +193,6 @@\n     <ClInclude Include=\"..\\..\\src\\netbase.h\">\n       <Filter>Header Files</Filter>\n     </ClInclude>\n-    <ClInclude Include=\"..\\..\\src\\ntp.h\">\n-      <Filter>Header Files</Filter>\n-    </ClInclude>\n     <ClInclude Include=\"..\\..\\src\\protocol.h\">\n       <Filter>Header Files</Filter>\n     </ClInclude>\n@@ -235,5 +241,14 @@\n     <ClInclude Include=\"..\\..\\src\\ministun.h\">\n       <Filter>Header Files</Filter>\n     </ClInclude>\n+    <ClInclude Include=\"..\\..\\src\\kernel_worker.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"..\\..\\src\\ntp.h \">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"..\\..\\src\\ies.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n   </ItemGroup>\n </Project>\n\\ No newline at end of file"
      }
    ]
  },
  {
    "sha": "db0fbd2d3af982a3e2c7d98c204555c0323892ec",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkYjBmYmQyZDNhZjk4MmEzZTJjN2Q5OGMyMDQ1NTVjMDMyMzg5MmVj",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-02-23T02:39:08Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-02-23T02:39:08Z"
      },
      "message": "Separate implementations of CHECKLOCKTIMEVERIFY and CHECKSEQUENCEVERIFY.",
      "tree": {
        "sha": "03da7b68b39fbf44210b63f97f15b3aa5eeb6506",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/03da7b68b39fbf44210b63f97f15b3aa5eeb6506"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/db0fbd2d3af982a3e2c7d98c204555c0323892ec",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/db0fbd2d3af982a3e2c7d98c204555c0323892ec",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/db0fbd2d3af982a3e2c7d98c204555c0323892ec",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/db0fbd2d3af982a3e2c7d98c204555c0323892ec/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fd84b67eaddb839de0e48c992ad956e8e17b4626",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fd84b67eaddb839de0e48c992ad956e8e17b4626",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fd84b67eaddb839de0e48c992ad956e8e17b4626"
      }
    ],
    "stats": {
      "total": 174,
      "additions": 127,
      "deletions": 47
    },
    "files": [
      {
        "sha": "040c90698eb070b7c97ad905ceb6679739d7ddfb",
        "filename": "src/script.cpp",
        "status": "modified",
        "additions": 107,
        "deletions": 43,
        "changes": 150,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/db0fbd2d3af982a3e2c7d98c204555c0323892ec/src/script.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/db0fbd2d3af982a3e2c7d98c204555c0323892ec/src/script.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script.cpp?ref=db0fbd2d3af982a3e2c7d98c204555c0323892ec",
        "patch": "@@ -338,6 +338,83 @@ bool IsCanonicalSignature(const valtype &vchSig, unsigned int flags) {\n     return IsDERSignature(vchSig, true, (flags & SCRIPT_VERIFY_LOW_S) != 0);\n }\n \n+bool CheckLockTime(const int64_t& nLockTime, const CTransaction &txTo, unsigned int nIn)\n+{\n+    // There are two kinds of nLockTime: lock-by-blockheight\n+    // and lock-by-blocktime, distinguished by whether\n+    // nLockTime < LOCKTIME_THRESHOLD.\n+    //\n+    // We want to compare apples to apples, so fail the script\n+    // unless the type of nLockTime being tested is the same as\n+    // the nLockTime in the transaction.\n+    if (!(\n+        (txTo.nLockTime <  LOCKTIME_THRESHOLD && nLockTime <  LOCKTIME_THRESHOLD) ||\n+        (txTo.nLockTime >= LOCKTIME_THRESHOLD && nLockTime >= LOCKTIME_THRESHOLD)\n+    ))\n+        return false;\n+\n+    // Now that we know we're comparing apples-to-apples, the\n+    // comparison is a simple numeric one.\n+    if (nLockTime > (int64_t)txTo.nLockTime)\n+        return false;\n+\n+    // Finally the nLockTime feature can be disabled and thus\n+    // CHECKLOCKTIMEVERIFY bypassed if every txin has been\n+    // finalized by setting nSequence to maxint. The\n+    // transaction would be allowed into the blockchain, making\n+    // the opcode ineffective.\n+    //\n+    // Testing if this vin is not final is sufficient to\n+    // prevent this condition. Alternatively we could test all\n+    // inputs, but testing just this input minimizes the data\n+    // required to prove correct CHECKLOCKTIMEVERIFY execution.\n+    if (SEQUENCE_FINAL == txTo.vin[nIn].nSequence)\n+        return false;\n+\n+    return true;\n+}\n+\n+bool CheckSequence(const int64_t& nSequence, const CTransaction &txTo, unsigned int nIn)\n+{\n+    // Relative lock times are supported by comparing the passed\n+    // in operand to the sequence number of the input.\n+    const int64_t txToSequence = (int64_t)txTo.vin[nIn].nSequence;\n+\n+    // Sequence numbers with their most significant bit set are not\n+    // consensus constrained. Testing that the transaction's sequence\n+    // number do not have this bit set prevents using this property\n+    // to get around a CHECKSEQUENCEVERIFY check.\n+    if (txToSequence & SEQUENCE_LOCKTIME_DISABLE_FLAG)\n+        return false;\n+\n+    // Mask off any bits that do not have consensus-enforced meaning\n+    // before doing the integer comparisons\n+    const uint32_t nLockTimeMask = SEQUENCE_LOCKTIME_TYPE_FLAG | SEQUENCE_LOCKTIME_MASK;\n+    const int64_t txToSequenceMasked = txToSequence & nLockTimeMask;\n+    const int64_t nSequenceMasked = nSequence & nLockTimeMask;\n+\n+    // There are two kinds of nSequence: lock-by-blockheight\n+    // and lock-by-blocktime, distinguished by whether\n+    // nSequenceMasked < CTxIn::SEQUENCE_LOCKTIME_TYPE_FLAG.\n+    //\n+    // We want to compare apples to apples, so fail the script\n+    // unless the type of nSequenceMasked being tested is the same as\n+    // the nSequenceMasked in the transaction.\n+    if (!(\n+        (txToSequenceMasked <  SEQUENCE_LOCKTIME_TYPE_FLAG && nSequenceMasked <  SEQUENCE_LOCKTIME_TYPE_FLAG) ||\n+        (txToSequenceMasked >= SEQUENCE_LOCKTIME_TYPE_FLAG && nSequenceMasked >= SEQUENCE_LOCKTIME_TYPE_FLAG)\n+    )) {\n+        return false;\n+    }\n+\n+    // Now that we know we're comparing apples-to-apples, the\n+    // comparison is a simple numeric one.\n+    if (nSequenceMasked > txToSequenceMasked)\n+        return false;\n+\n+    return true;\n+}\n+\n bool EvalScript(vector<vector<unsigned char> >& stack, const CScript& script, const CTransaction& txTo, unsigned int nIn, unsigned int flags, int nHashType)\n {\n     CAutoBN_CTX pctx;\n@@ -486,71 +563,58 @@ bool EvalScript(vector<vector<unsigned char> >& stack, const CScript& script, co\n                     // CHECKLOCKTIMEVERIFY\n                     //\n                     // (nLockTime -- nLockTime)\n-                    if (!(flags & SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY))\n-                        break; // treat as a NOP is not enabled\n+                    if (!(flags & SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY)) {\n+                        // treat as a NOP2 if not enabled\n+                        break;\n+                    }\n+\n                     if (stack.size() < 1)\n                         return false;\n-                    const CBigNum nLockTime = CastToBigNum(stacktop(-1));\n-                    if (nLockTime < 0)\n-                        return false; // Negative argument is senseless.\n \n-                    if (!( // We can have either lock-by-blockheight or lock-by-blocktime.\n-                          (txTo.nLockTime <  LOCKTIME_THRESHOLD && nLockTime <  LOCKTIME_THRESHOLD) || \n-                          (txTo.nLockTime >= LOCKTIME_THRESHOLD && nLockTime >= LOCKTIME_THRESHOLD)\n-                    ))\n-                        return false;\n+                    CBigNum nLockTime = CastToBigNum(stacktop(-1));\n \n-                    // Now we can perform a simple numerical comparison\n-                    if (nLockTime > (int64_t)txTo.nLockTime)\n+                    // In the rare event that the argument may be < 0 due to\n+                    // some arithmetic being done first, you can always use\n+                    // 0 MAX CHECKLOCKTIMEVERIFY.\n+                    if (nLockTime < 0)\n                         return false;\n \n-                    // Finally the nLockTime feature can be disabled and thus\n-                    // CHECKLOCKTIMEVERIFY bypassed if every txin has been\n-                    // finalized by setting nSequence to maxint. The\n-                    // transaction would be allowed into the blockchain, making\n-                    // the opcode ineffective.\n-                    //\n-                    // Testing if this vin is not final is sufficient to\n-                    // prevent this condition. Alternatively we could test all\n-                    // inputs, but testing just this input minimizes the data\n-                    // required to prove correct CHECKLOCKTIMEVERIFY execution.\n-                    if (txTo.vin[nIn].IsFinal())\n+                    // Actually compare the specified lock time with the transaction.\n+                    if (!CheckLockTime(nLockTime.getuint64(), txTo, nIn))\n                         return false;\n+\n                     break;\n                 }\n \n                 case OP_CHECKSEQUENCEVERIFY:\n                 {\n-                    if (!(flags & SCRIPT_VERIFY_CHECKSEQUENCEVERIFY))\n-                        // treat as a NOP if not enabled\n+                    if (!(flags & SCRIPT_VERIFY_CHECKSEQUENCEVERIFY)) {\n+                        // treat as a NOP3 not enabled\n                         break;\n+                    }\n+\n                     if (stack.size() < 1)\n                         return false;\n-                    const CBigNum nInvSequence = CastToBigNum(stacktop(-1));\n+\n+                    // nSequence, like nLockTime, is a 32-bit unsigned integer\n+                    // field. See the comment in CHECKLOCKTIMEVERIFY regarding\n+                    // 5-byte numeric operands.\n+                    CBigNum nSequence = CastToBigNum(stacktop(-1));\n \n                     // In the rare event that the argument may be < 0 due to\n                     // some arithmetic being done first, you can always use\n                     // 0 MAX CHECKSEQUENCEVERIFY.\n-                    if (nInvSequence < 0)\n-                        return false; // negative nSequence is senseless\n-\n-                    // Relative lock times are supported by comparing the passed\n-                    // in lock time to the sequence number of the input. All other\n-                    // logic is the same, all that differs is what we are comparing\n-                    // the lock time to.\n-                    int64_t txToLockTime = (int64_t)~txTo.vin[nIn].nSequence;\n-                    if (txToLockTime >= SEQUENCE_THRESHOLD)\n+                    if (nSequence < 0)\n                         return false;\n \n-                    if (!(\n-                        (txToLockTime <  SEQUENCE_THRESHOLD && nInvSequence <  SEQUENCE_THRESHOLD) || \n-                        (txToLockTime >= SEQUENCE_THRESHOLD && nInvSequence >= SEQUENCE_THRESHOLD)\n-                    ))\n-                        return false;\n+                    // To provide for future soft-fork extensibility, if the\n+                    // operand has the disabled lock-time flag set,\n+                    // CHECKSEQUENCEVERIFY behaves as a NOP.\n+                    if ((nSequence.getint32() & SEQUENCE_LOCKTIME_DISABLE_FLAG) != 0)\n+                        break;\n \n-                    // Now that we know we're comparing apples-to-apples, the\n-                    // comparison is a simple numeric one.\n-                    if (nInvSequence > txToLockTime)\n+                    // Compare the specified sequence number with the input.\n+                    if (!CheckSequence(nSequence.getuint64(), txTo, nIn))\n                         return false;\n \n                     break;"
      },
      {
        "sha": "2ff23250d2c23a4e27d81a280dd4c7759ce1625c",
        "filename": "src/script.h",
        "status": "modified",
        "additions": 20,
        "deletions": 4,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/db0fbd2d3af982a3e2c7d98c204555c0323892ec/src/script.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/db0fbd2d3af982a3e2c7d98c204555c0323892ec/src/script.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script.h?ref=db0fbd2d3af982a3e2c7d98c204555c0323892ec",
        "patch": "@@ -19,10 +19,27 @@ class CTransaction;\n \n static const unsigned int MAX_SCRIPT_ELEMENT_SIZE = 520; // bytes\n \n-// Threshold for inverted nSequence: below this value it is interpreted\n-// as a relative lock-time, otherwise ignored.\n+/* Setting nSequence to this value for every input in a transaction\n+ * disables nLockTime. */\n+static const uint32_t SEQUENCE_FINAL = 0xffffffff;\n+\n+/* Threshold for inverted nSequence: below this value it is interpreted\n+ * as a relative lock-time, otherwise ignored. */\n static const uint32_t SEQUENCE_THRESHOLD = (1 << 31);\n \n+/* If this flag set, CTxIn::nSequence is NOT interpreted as a\n+ * relative lock-time. */\n+static const uint32_t SEQUENCE_LOCKTIME_DISABLE_FLAG = (1 << 31);\n+\n+/* If CTxIn::nSequence encodes a relative lock-time and this flag\n+ * is set, the relative lock-time has units of 512 seconds,\n+ * otherwise it specifies blocks with a granularity of 1. */\n+static const uint32_t SEQUENCE_LOCKTIME_TYPE_FLAG = (1 << 22);\n+\n+/* If CTxIn::nSequence encodes a relative lock-time, this mask is\n+ * applied to extract that lock-time from the sequence field. */\n+static const uint32_t SEQUENCE_LOCKTIME_MASK = 0x0000ffff;\n+\n /** IsMine() return codes */\n enum isminetype\n {\n@@ -53,8 +70,7 @@ enum\n     SCRIPT_VERIFY_NOCACHE   = (1U << 3), // do not store results in signature cache (but do query it)\n     SCRIPT_VERIFY_NULLDUMMY = (1U << 4),  // verify dummy stack item consumed by CHECKMULTISIG is of zero-length\n     SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY = (1U << 9),\n-    SCRIPT_VERIFY_CHECKSEQUENCEVERIFY = (1U << 9)\n-\n+    SCRIPT_VERIFY_CHECKSEQUENCEVERIFY = (1U << 10)\n };\n \n // Strict verification:"
      }
    ]
  },
  {
    "sha": "5843fbb2225e5f276071b7e711f947c48f93bc91",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ODQzZmJiMjIyNWU1ZjI3NjA3MWI3ZTcxMWY5NDdjNDhmOTNiYzkx",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-02-23T03:08:31Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-02-23T03:09:43Z"
      },
      "message": "Disable OP_CHECKSEQUENCEVERIFY for now, since the BIP68 is not implemented.",
      "tree": {
        "sha": "9829bbcec2b18479b46df2c138e8e411b499225b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9829bbcec2b18479b46df2c138e8e411b499225b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5843fbb2225e5f276071b7e711f947c48f93bc91",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5843fbb2225e5f276071b7e711f947c48f93bc91",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5843fbb2225e5f276071b7e711f947c48f93bc91",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5843fbb2225e5f276071b7e711f947c48f93bc91/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "db0fbd2d3af982a3e2c7d98c204555c0323892ec",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/db0fbd2d3af982a3e2c7d98c204555c0323892ec",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/db0fbd2d3af982a3e2c7d98c204555c0323892ec"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 2,
      "deletions": 1
    },
    "files": [
      {
        "sha": "f3f1d55b9cafde74f90913e4cb4aaefa964e9d59",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5843fbb2225e5f276071b7e711f947c48f93bc91/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5843fbb2225e5f276071b7e711f947c48f93bc91/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=5843fbb2225e5f276071b7e711f947c48f93bc91",
        "patch": "@@ -1762,7 +1762,8 @@ bool CBlock::ConnectBlock(CTxDB& txdb, CBlockIndex* pindex, bool fJustCheck)\n \n             if (tx.nTime >= CHECKLOCKTIMEVERIFY_SWITCH_TIME) {\n                 nFlags |= SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY;\n-                nFlags |= SCRIPT_VERIFY_CHECKSEQUENCEVERIFY;\n+                // OP_CHECKSEQUENCEVERIFY is senseless without BIP68, so we're going disable it for now.\n+                // nFlags |= SCRIPT_VERIFY_CHECKSEQUENCEVERIFY;\n             }\n \n             std::vector<CScriptCheck> vChecks;"
      }
    ]
  },
  {
    "sha": "54690ebcdea064f62a62352baf6f3f46373c7ab6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NDY5MGViY2RlYTA2NGY2MmE2MjM1MmJhZjZmM2Y0NjM3M2M3YWI2",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "CryptoManiac@users.noreply.github.com",
        "date": "2016-02-23T05:28:24Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "CryptoManiac@users.noreply.github.com",
        "date": "2016-02-23T05:28:24Z"
      },
      "message": "Merge pull request #284 from svost/solution\n\nMSVC solution update",
      "tree": {
        "sha": "1dce1d3349f4bb23f78663184e30e3f5af4cd2ff",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1dce1d3349f4bb23f78663184e30e3f5af4cd2ff"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/54690ebcdea064f62a62352baf6f3f46373c7ab6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/54690ebcdea064f62a62352baf6f3f46373c7ab6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/54690ebcdea064f62a62352baf6f3f46373c7ab6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/54690ebcdea064f62a62352baf6f3f46373c7ab6/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5843fbb2225e5f276071b7e711f947c48f93bc91",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5843fbb2225e5f276071b7e711f947c48f93bc91",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5843fbb2225e5f276071b7e711f947c48f93bc91"
      },
      {
        "sha": "6d5a91c80be06a391ff07e338591e90b1da46326",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6d5a91c80be06a391ff07e338591e90b1da46326",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6d5a91c80be06a391ff07e338591e90b1da46326"
      }
    ],
    "stats": {
      "total": 29,
      "additions": 24,
      "deletions": 5
    },
    "files": [
      {
        "sha": "c1968c67ff01dc2fd3f0cea254deb95f96239142",
        "filename": "MSVC/libcommon/libcommon.vcxproj",
        "status": "modified",
        "additions": 6,
        "deletions": 2,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/54690ebcdea064f62a62352baf6f3f46373c7ab6/MSVC/libcommon/libcommon.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/54690ebcdea064f62a62352baf6f3f46373c7ab6/MSVC/libcommon/libcommon.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/MSVC/libcommon/libcommon.vcxproj?ref=54690ebcdea064f62a62352baf6f3f46373c7ab6",
        "patch": "@@ -20,8 +20,11 @@\n   </ItemGroup>\n   <ItemGroup>\n     <ClCompile Include=\"..\\..\\src\\alert.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\cryptogram.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\ecies.cpp\" />\n     <ClCompile Include=\"..\\..\\src\\kernel.cpp\" />\n     <ClCompile Include=\"..\\..\\src\\kernel_worker.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\rpccrypt.cpp\" />\n     <ClCompile Include=\"..\\..\\src\\stun.cpp\" />\n     <ClCompile Include=\"..\\..\\src\\base58.cpp\" />\n     <ClCompile Include=\"..\\..\\src\\txdb-leveldb.cpp\" />\n@@ -73,6 +76,7 @@\n     <ClInclude Include=\"..\\..\\src\\crypter.h\" />\n     <ClInclude Include=\"..\\..\\src\\db.h\" />\n     <ClInclude Include=\"..\\..\\src\\hash.h\" />\n+    <ClInclude Include=\"..\\..\\src\\ies.h\" />\n     <ClInclude Include=\"..\\..\\src\\init.h\" />\n     <ClInclude Include=\"..\\..\\src\\inttypes.h\" />\n     <ClInclude Include=\"..\\..\\src\\irc.h\" />\n@@ -86,7 +90,7 @@\n     <ClInclude Include=\"..\\..\\src\\mruset.h\" />\n     <ClInclude Include=\"..\\..\\src\\net.h\" />\n     <ClInclude Include=\"..\\..\\src\\netbase.h\" />\n-    <ClInclude Include=\"..\\..\\src\\ntp.h \"/>\n+    <ClInclude Include=\"..\\..\\src\\ntp.h \" />\n     <ClInclude Include=\"..\\..\\src\\protocol.h\" />\n     <ClInclude Include=\"..\\..\\src\\script.h\" />\n     <ClInclude Include=\"..\\..\\src\\scrypt.h\" />\n@@ -252,4 +256,4 @@\n   </ItemDefinitionGroup>\n   <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n   <ImportGroup Label=\"ExtensionTargets\" />\n-</Project>\n+</Project>\n\\ No newline at end of file"
      },
      {
        "sha": "a1a6e028b40fa3193b9df8c762a55c2c02b3cf9c",
        "filename": "MSVC/libcommon/libcommon.vcxproj.filters",
        "status": "modified",
        "additions": 18,
        "deletions": 3,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/54690ebcdea064f62a62352baf6f3f46373c7ab6/MSVC/libcommon/libcommon.vcxproj.filters",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/54690ebcdea064f62a62352baf6f3f46373c7ab6/MSVC/libcommon/libcommon.vcxproj.filters",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/MSVC/libcommon/libcommon.vcxproj.filters?ref=54690ebcdea064f62a62352baf6f3f46373c7ab6",
        "patch": "@@ -113,6 +113,15 @@\n     <ClCompile Include=\"..\\..\\src\\kernel_worker.cpp\">\n       <Filter>Source Files</Filter>\n     </ClCompile>\n+    <ClCompile Include=\"..\\..\\src\\cryptogram.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"..\\..\\src\\ecies.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=\"..\\..\\src\\rpccrypt.cpp\">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n   </ItemGroup>\n   <ItemGroup>\n     <ClInclude Include=\"..\\..\\src\\addrman.h\">\n@@ -184,9 +193,6 @@\n     <ClInclude Include=\"..\\..\\src\\netbase.h\">\n       <Filter>Header Files</Filter>\n     </ClInclude>\n-    <ClInclude Include=\"..\\..\\src\\ntp.h\">\n-      <Filter>Header Files</Filter>\n-    </ClInclude>\n     <ClInclude Include=\"..\\..\\src\\protocol.h\">\n       <Filter>Header Files</Filter>\n     </ClInclude>\n@@ -235,5 +241,14 @@\n     <ClInclude Include=\"..\\..\\src\\ministun.h\">\n       <Filter>Header Files</Filter>\n     </ClInclude>\n+    <ClInclude Include=\"..\\..\\src\\kernel_worker.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"..\\..\\src\\ntp.h \">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=\"..\\..\\src\\ies.h\">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n   </ItemGroup>\n </Project>\n\\ No newline at end of file"
      }
    ]
  },
  {
    "sha": "101094563e7fcc767064091d07b098ddac27cac5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxMDEwOTQ1NjNlN2ZjYzc2NzA2NDA5MWQwN2IwOThkZGFjMjdjYWM1",
    "commit": {
      "author": {
        "name": "svost",
        "email": "svost@users.noreply.github.com",
        "date": "2016-02-23T07:46:17Z"
      },
      "committer": {
        "name": "svost",
        "email": "svost@users.noreply.github.com",
        "date": "2016-02-23T07:46:17Z"
      },
      "message": "Fix msvc c4800: explicit cast to bool",
      "tree": {
        "sha": "29ecdaa65630447c097328fed45e14c0bec94f72",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/29ecdaa65630447c097328fed45e14c0bec94f72"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/101094563e7fcc767064091d07b098ddac27cac5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/101094563e7fcc767064091d07b098ddac27cac5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/101094563e7fcc767064091d07b098ddac27cac5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/101094563e7fcc767064091d07b098ddac27cac5/comments",
    "author": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "54690ebcdea064f62a62352baf6f3f46373c7ab6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/54690ebcdea064f62a62352baf6f3f46373c7ab6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/54690ebcdea064f62a62352baf6f3f46373c7ab6"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "a9ac6c71910a4148986564d398dfcb7af6a88d87",
        "filename": "src/key.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/101094563e7fcc767064091d07b098ddac27cac5/src/key.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/101094563e7fcc767064091d07b098ddac27cac5/src/key.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.h?ref=101094563e7fcc767064091d07b098ddac27cac5",
        "patch": "@@ -203,7 +203,7 @@ class CPoint\n     // Calculate G*m + q\n     bool ECMULGEN(const CBigNum &bnMultiplier, const CPoint &qPoint);\n \n-    bool IsInfinity() { return EC_POINT_is_at_infinity(group, point); }\n+    bool IsInfinity() { return EC_POINT_is_at_infinity(group, point) != 0; }\n };\n \n class CMalleablePubKey"
      }
    ]
  },
  {
    "sha": "b50bcafff563a4e19b5b402521d413101a1437b2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiNTBiY2FmZmY1NjNhNGUxOWI1YjQwMjUyMWQ0MTMxMDFhMTQzN2Iy",
    "commit": {
      "author": {
        "name": "svost",
        "email": "svost@users.noreply.github.com",
        "date": "2016-02-23T15:28:30Z"
      },
      "committer": {
        "name": "svost",
        "email": "svost@users.noreply.github.com",
        "date": "2016-02-23T15:28:30Z"
      },
      "message": "FormatMoney cleanup",
      "tree": {
        "sha": "c43b100950dbceed11ed8bf8a619efd9a09583a4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c43b100950dbceed11ed8bf8a619efd9a09583a4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b50bcafff563a4e19b5b402521d413101a1437b2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b50bcafff563a4e19b5b402521d413101a1437b2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b50bcafff563a4e19b5b402521d413101a1437b2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b50bcafff563a4e19b5b402521d413101a1437b2/comments",
    "author": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "101094563e7fcc767064091d07b098ddac27cac5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/101094563e7fcc767064091d07b098ddac27cac5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/101094563e7fcc767064091d07b098ddac27cac5"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "a3848fd38432081e01ee399f1e59131e42af13d7",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b50bcafff563a4e19b5b402521d413101a1437b2/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b50bcafff563a4e19b5b402521d413101a1437b2/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=b50bcafff563a4e19b5b402521d413101a1437b2",
        "patch": "@@ -408,16 +408,16 @@ string FormatMoney(int64_t n, bool fPlus)\n     string str = strprintf(\"%\" PRId64 \".%06\" PRId64, quotient, remainder);\n \n     // Right-trim excess zeros before the decimal point:\n-    int nTrim = 0;\n+    size_t nTrim = 0;\n     for (size_t i = str.size()-1; (str[i] == '0' && isdigit(str[i-2])); --i)\n         ++nTrim;\n     if (nTrim)\n         str.erase(str.size()-nTrim, nTrim);\n \n     if (n < 0)\n-        str.insert((unsigned int)0, 1, '-');\n+        str.insert(0u, 1, '-');\n     else if (fPlus && n > 0)\n-        str.insert((unsigned int)0, 1, '+');\n+        str.insert(0u, 1, '+');\n     return str;\n }\n \n@@ -1500,4 +1500,4 @@ std::string DateTimeStrFormat(const char* pszFormat, int64_t nTime)\n     ss.imbue(loc);\n     ss << boost::posix_time::from_time_t(nTime);\n     return ss.str();\n-}\n\\ No newline at end of file\n+}"
      }
    ]
  },
  {
    "sha": "1d7a5b08666616561487ddf8fd412aabab013b5a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxZDdhNWIwODY2NjYxNjU2MTQ4N2RkZjhmZDQxMmFhYmFiMDEzYjVh",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-02-23T20:07:39Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-02-23T20:08:43Z"
      },
      "message": "Move transaction timestamp checking to CTxMemPool::accept()",
      "tree": {
        "sha": "ae9ae1ef446c538c7ebefef932a22310fedc75ce",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ae9ae1ef446c538c7ebefef932a22310fedc75ce"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1d7a5b08666616561487ddf8fd412aabab013b5a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1d7a5b08666616561487ddf8fd412aabab013b5a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1d7a5b08666616561487ddf8fd412aabab013b5a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1d7a5b08666616561487ddf8fd412aabab013b5a/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "54690ebcdea064f62a62352baf6f3f46373c7ab6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/54690ebcdea064f62a62352baf6f3f46373c7ab6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/54690ebcdea064f62a62352baf6f3f46373c7ab6"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "54b852dafd19224dd60d664fc2ad8a0570a04992",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1d7a5b08666616561487ddf8fd412aabab013b5a/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1d7a5b08666616561487ddf8fd412aabab013b5a/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=1d7a5b08666616561487ddf8fd412aabab013b5a",
        "patch": "@@ -510,10 +510,6 @@ bool CTransaction::CheckTransaction() const\n         return DoS(10, error(\"CTransaction::CheckTransaction() : vin empty\"));\n     if (vout.empty())\n         return DoS(10, error(\"CTransaction::CheckTransaction() : vout empty\"));\n-    // Time (prevent mempool memory exhaustion attack)\n-    // Comes into force since 20 December 2015.\n-    if (nTime > 1450569600 && nTime > FutureDrift(GetAdjustedTime()))\n-        return DoS(10, error(\"CTransaction::CheckTransaction() : timestamp is too far into the future\"));\n     // Size limits\n     if (::GetSerializeSize(*this, SER_NETWORK, PROTOCOL_VERSION) > MAX_BLOCK_SIZE)\n         return DoS(100, error(\"CTransaction::CheckTransaction() : size limits failed\"));\n@@ -622,6 +618,10 @@ bool CTxMemPool::accept(CTxDB& txdb, CTransaction &tx, bool fCheckInputs,\n     if (pfMissingInputs)\n         *pfMissingInputs = false;\n \n+    // Time (prevent mempool memory exhaustion attack)\n+    if (tx.nTime > FutureDrift(GetAdjustedTime()))\n+        return tx.DoS(10, error(\"CTxMemPool::accept() : transaction timestamp is too far in the future\"));\n+\n     if (!tx.CheckTransaction())\n         return error(\"CTxMemPool::accept() : CheckTransaction failed\");\n "
      }
    ]
  },
  {
    "sha": "10d86b0a120df89d3fc9e10a72fa185699e08c56",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxMGQ4NmIwYTEyMGRmODlkM2ZjOWUxMGE3MmZhMTg1Njk5ZTA4YzU2",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-02-23T20:20:39Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-02-23T20:20:39Z"
      },
      "message": "Force one week max offset for testNet.",
      "tree": {
        "sha": "a2cc6875f10fa65251b7bbff784e75b5068530c3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a2cc6875f10fa65251b7bbff784e75b5068530c3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/10d86b0a120df89d3fc9e10a72fa185699e08c56",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/10d86b0a120df89d3fc9e10a72fa185699e08c56",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/10d86b0a120df89d3fc9e10a72fa185699e08c56",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/10d86b0a120df89d3fc9e10a72fa185699e08c56/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1d7a5b08666616561487ddf8fd412aabab013b5a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1d7a5b08666616561487ddf8fd412aabab013b5a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1d7a5b08666616561487ddf8fd412aabab013b5a"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "f8af9dfe7cdf13d02ea871fa009eed1fde13c94e",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/10d86b0a120df89d3fc9e10a72fa185699e08c56/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/10d86b0a120df89d3fc9e10a72fa185699e08c56/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=10d86b0a120df89d3fc9e10a72fa185699e08c56",
        "patch": "@@ -2348,8 +2348,8 @@ bool CBlock::AcceptBlock()\n \n     int64_t nMedianTimePast = pindexPrev->GetMedianTimePast();\n     int nMaxOffset = 12 * 3600; // 12 hours\n-    if (pindexPrev->nTime < 1450569600)\n-        nMaxOffset = 7 * 86400; // One week until 20 Dec, 2015\n+    if (fTestNet || pindexPrev->nTime < 1450569600)\n+        nMaxOffset = 7 * 86400; // One week (permanently on testNet or until 20 Dec, 2015 on mainNet)\n \n     // Check timestamp against prev\n     if (GetBlockTime() <= nMedianTimePast || FutureDrift(GetBlockTime()) < pindexPrev->GetBlockTime())"
      }
    ]
  },
  {
    "sha": "d20116c8fa5bb1a3254cfe9cbe38ea129029756a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkMjAxMTZjOGZhNWJiMWEzMjU0Y2ZlOWNiZTM4ZWExMjkwMjk3NTZh",
    "commit": {
      "author": {
        "name": "svost",
        "email": "svost@users.noreply.github.com",
        "date": "2016-02-23T20:40:26Z"
      },
      "committer": {
        "name": "svost",
        "email": "svost@users.noreply.github.com",
        "date": "2016-02-23T20:40:26Z"
      },
      "message": "Not utilized",
      "tree": {
        "sha": "21170e840e554db5057df860007b7053e1b749e1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/21170e840e554db5057df860007b7053e1b749e1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d20116c8fa5bb1a3254cfe9cbe38ea129029756a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d20116c8fa5bb1a3254cfe9cbe38ea129029756a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d20116c8fa5bb1a3254cfe9cbe38ea129029756a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d20116c8fa5bb1a3254cfe9cbe38ea129029756a/comments",
    "author": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b50bcafff563a4e19b5b402521d413101a1437b2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b50bcafff563a4e19b5b402521d413101a1437b2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b50bcafff563a4e19b5b402521d413101a1437b2"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 0,
      "deletions": 1
    },
    "files": [
      {
        "sha": "12000bee2c2d5b374d08297b53e0a4d55db625f9",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d20116c8fa5bb1a3254cfe9cbe38ea129029756a/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d20116c8fa5bb1a3254cfe9cbe38ea129029756a/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=d20116c8fa5bb1a3254cfe9cbe38ea129029756a",
        "patch": "@@ -2091,7 +2091,6 @@ bool CWallet::CommitTransaction(CWalletTx& wtxNew, CReserveKey& reservekey)\n             AddToWallet(wtxNew);\n \n             // Mark old coins as spent\n-            set<CWalletTx*> setCoins;\n             BOOST_FOREACH(const CTxIn& txin, wtxNew.vin)\n             {\n                 CWalletTx &coin = mapWallet[txin.prevout.hash];"
      }
    ]
  },
  {
    "sha": "4334f0854a0995da7bafa526722b99824b29d9e9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0MzM0ZjA4NTRhMDk5NWRhN2JhZmE1MjY3MjJiOTk4MjRiMjlkOWU5",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-02-23T22:25:40Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-02-23T22:25:40Z"
      },
      "message": "Experimental: use Solver to find out all solutions for txout.scriptPublicKey",
      "tree": {
        "sha": "6330e2919d71fec921743c2327a66fdd303c4b78",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6330e2919d71fec921743c2327a66fdd303c4b78"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4334f0854a0995da7bafa526722b99824b29d9e9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4334f0854a0995da7bafa526722b99824b29d9e9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4334f0854a0995da7bafa526722b99824b29d9e9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4334f0854a0995da7bafa526722b99824b29d9e9/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "10d86b0a120df89d3fc9e10a72fa185699e08c56",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/10d86b0a120df89d3fc9e10a72fa185699e08c56",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/10d86b0a120df89d3fc9e10a72fa185699e08c56"
      }
    ],
    "stats": {
      "total": 73,
      "additions": 62,
      "deletions": 11
    },
    "files": [
      {
        "sha": "ec4ba10be32883df539cb93b4a041c15b8d538ff",
        "filename": "src/qt/transactionrecord.cpp",
        "status": "modified",
        "additions": 62,
        "deletions": 11,
        "changes": 73,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4334f0854a0995da7bafa526722b99824b29d9e9/src/qt/transactionrecord.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4334f0854a0995da7bafa526722b99824b29d9e9/src/qt/transactionrecord.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionrecord.cpp?ref=4334f0854a0995da7bafa526722b99824b29d9e9",
        "patch": "@@ -3,6 +3,8 @@\n #include \"wallet.h\"\n #include \"base58.h\"\n \n+extern CWallet* pwalletMain;\n+\n /* Return positive answer if transaction should be shown in list.\n  */\n bool TransactionRecord::showTransaction(const CWalletTx &wtx)\n@@ -41,20 +43,69 @@ QList<TransactionRecord> TransactionRecord::decomposeTransaction(const CWallet *\n             if(wallet->IsMine(txout))\n             {\n                 TransactionRecord sub(hash, nTime);\n-                CTxDestination address;\n                 sub.idx = parts.size(); // sequence number\n                 sub.credit = txout.nValue;\n-                if (ExtractDestination(txout.scriptPubKey, address) && IsMine(*wallet, address))\n-                {\n-                    // Received by Bitcoin Address\n-                    sub.type = TransactionRecord::RecvWithAddress;\n-                    sub.address = CBitcoinAddress(address).ToString();\n-                }\n-                else\n+\n+                if (!fTestNet)\n                 {\n-                    // Received by IP connection (deprecated features), or a multisignature or other non-simple transaction\n-                    sub.type = TransactionRecord::RecvFromOther;\n-                    sub.address = mapValue[\"from\"];\n+                    CTxDestination address;\n+                    if (ExtractDestination(txout.scriptPubKey, address) && IsMine(*wallet, address))\n+                    {\n+                        // Received by Bitcoin Address\n+                        sub.type = TransactionRecord::RecvWithAddress;\n+                        sub.address = CBitcoinAddress(address).ToString();\n+                    }\n+                    else\n+                    {\n+                        // Received by IP connection (deprecated features), or a multisignature or other non-simple transaction\n+                        sub.type = TransactionRecord::RecvFromOther;\n+                        sub.address = mapValue[\"from\"];\n+                    }\n+                    }\n+                    else\n+                    {\n+                    txnouttype whichType;\n+                    std::vector<valtype> vSolutions;\n+                    if (Solver(txout.scriptPubKey, whichType, vSolutions))\n+                    {\n+                        CTxDestination address;\n+                        if (whichType == TX_PUBKEY)\n+                        {\n+                            // Pay-to-Pubkey\n+                            address = CPubKey(vSolutions[0]).GetID();\n+                            sub.type = TransactionRecord::RecvWithAddress;\n+                            sub.address = CBitcoinAddress(address).ToString();\n+                        }\n+                        else if (whichType == TX_PUBKEYHASH)\n+                        {\n+                            // Pay-to-PubkeyHash\n+                            address = CKeyID(uint160(vSolutions[0]));\n+                            sub.type = TransactionRecord::RecvWithAddress;\n+                            sub.address = CBitcoinAddress(address).ToString();\n+                        }\n+                        else if (whichType == TX_SCRIPTHASH)\n+                        {\n+                            // Pay-to-ScriptHash\n+                            address = CScriptID(uint160(vSolutions[0]));\n+                            sub.type = TransactionRecord::RecvWithAddress;\n+                            sub.address = CBitcoinAddress(address).ToString();\n+                        }\n+                        else if (whichType == TX_PUBKEY_DROP)\n+                        {\n+                            // Pay-to-Pubkey-R\n+                            sub.type = TransactionRecord::RecvWithAddress;\n+\n+                            CMalleableKeyView view;\n+                            pwalletMain->CheckOwnership(CPubKey(vSolutions[0]), CPubKey(vSolutions[1]), view);\n+                            sub.address = view.GetMalleablePubKey().ToString();\n+                        }\n+                        else\n+                        {\n+                            // Received by IP connection (deprecated features), or a multisignature or other non-simple transaction\n+                            sub.type = TransactionRecord::RecvFromOther;\n+                            sub.address = mapValue[\"from\"];\n+                        }\n+                    }\n                 }\n                 if (wtx.IsCoinBase())\n                 {"
      }
    ]
  },
  {
    "sha": "c5dbcadfa061e818113b01019b896114cc0cd397",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNWRiY2FkZmEwNjFlODE4MTEzYjAxMDE5Yjg5NjExNGNjMGNkMzk3",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-02-23T22:32:18Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-02-23T22:32:18Z"
      },
      "message": "Remove testnet condition",
      "tree": {
        "sha": "6c7a42e667ad87afd41a393c9cf746c0efdbff8c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6c7a42e667ad87afd41a393c9cf746c0efdbff8c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c5dbcadfa061e818113b01019b896114cc0cd397",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c5dbcadfa061e818113b01019b896114cc0cd397",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c5dbcadfa061e818113b01019b896114cc0cd397",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c5dbcadfa061e818113b01019b896114cc0cd397/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4334f0854a0995da7bafa526722b99824b29d9e9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4334f0854a0995da7bafa526722b99824b29d9e9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4334f0854a0995da7bafa526722b99824b29d9e9"
      }
    ],
    "stats": {
      "total": 77,
      "additions": 29,
      "deletions": 48
    },
    "files": [
      {
        "sha": "7c50f91c7b717126bb87c0054a7de37c6ccf2a4d",
        "filename": "src/qt/transactionrecord.cpp",
        "status": "modified",
        "additions": 29,
        "deletions": 48,
        "changes": 77,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c5dbcadfa061e818113b01019b896114cc0cd397/src/qt/transactionrecord.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c5dbcadfa061e818113b01019b896114cc0cd397/src/qt/transactionrecord.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionrecord.cpp?ref=c5dbcadfa061e818113b01019b896114cc0cd397",
        "patch": "@@ -46,65 +46,46 @@ QList<TransactionRecord> TransactionRecord::decomposeTransaction(const CWallet *\n                 sub.idx = parts.size(); // sequence number\n                 sub.credit = txout.nValue;\n \n-                if (!fTestNet)\n+                txnouttype whichType;\n+                std::vector<valtype> vSolutions;\n+                if (Solver(txout.scriptPubKey, whichType, vSolutions))\n                 {\n                     CTxDestination address;\n-                    if (ExtractDestination(txout.scriptPubKey, address) && IsMine(*wallet, address))\n+                    if (whichType == TX_PUBKEY)\n                     {\n-                        // Received by Bitcoin Address\n+                        // Pay-to-Pubkey\n+                        address = CPubKey(vSolutions[0]).GetID();\n                         sub.type = TransactionRecord::RecvWithAddress;\n                         sub.address = CBitcoinAddress(address).ToString();\n                     }\n-                    else\n+                    else if (whichType == TX_PUBKEYHASH)\n                     {\n-                        // Received by IP connection (deprecated features), or a multisignature or other non-simple transaction\n-                        sub.type = TransactionRecord::RecvFromOther;\n-                        sub.address = mapValue[\"from\"];\n-                    }\n+                        // Pay-to-PubkeyHash\n+                        address = CKeyID(uint160(vSolutions[0]));\n+                        sub.type = TransactionRecord::RecvWithAddress;\n+                        sub.address = CBitcoinAddress(address).ToString();\n                     }\n-                    else\n+                    else if (whichType == TX_SCRIPTHASH)\n                     {\n-                    txnouttype whichType;\n-                    std::vector<valtype> vSolutions;\n-                    if (Solver(txout.scriptPubKey, whichType, vSolutions))\n+                        // Pay-to-ScriptHash\n+                        address = CScriptID(uint160(vSolutions[0]));\n+                        sub.type = TransactionRecord::RecvWithAddress;\n+                        sub.address = CBitcoinAddress(address).ToString();\n+                    }\n+                    else if (whichType == TX_PUBKEY_DROP)\n                     {\n-                        CTxDestination address;\n-                        if (whichType == TX_PUBKEY)\n-                        {\n-                            // Pay-to-Pubkey\n-                            address = CPubKey(vSolutions[0]).GetID();\n-                            sub.type = TransactionRecord::RecvWithAddress;\n-                            sub.address = CBitcoinAddress(address).ToString();\n-                        }\n-                        else if (whichType == TX_PUBKEYHASH)\n-                        {\n-                            // Pay-to-PubkeyHash\n-                            address = CKeyID(uint160(vSolutions[0]));\n-                            sub.type = TransactionRecord::RecvWithAddress;\n-                            sub.address = CBitcoinAddress(address).ToString();\n-                        }\n-                        else if (whichType == TX_SCRIPTHASH)\n-                        {\n-                            // Pay-to-ScriptHash\n-                            address = CScriptID(uint160(vSolutions[0]));\n-                            sub.type = TransactionRecord::RecvWithAddress;\n-                            sub.address = CBitcoinAddress(address).ToString();\n-                        }\n-                        else if (whichType == TX_PUBKEY_DROP)\n-                        {\n-                            // Pay-to-Pubkey-R\n-                            sub.type = TransactionRecord::RecvWithAddress;\n+                        // Pay-to-Pubkey-R\n+                        sub.type = TransactionRecord::RecvWithAddress;\n \n-                            CMalleableKeyView view;\n-                            pwalletMain->CheckOwnership(CPubKey(vSolutions[0]), CPubKey(vSolutions[1]), view);\n-                            sub.address = view.GetMalleablePubKey().ToString();\n-                        }\n-                        else\n-                        {\n-                            // Received by IP connection (deprecated features), or a multisignature or other non-simple transaction\n-                            sub.type = TransactionRecord::RecvFromOther;\n-                            sub.address = mapValue[\"from\"];\n-                        }\n+                        CMalleableKeyView view;\n+                        pwalletMain->CheckOwnership(CPubKey(vSolutions[0]), CPubKey(vSolutions[1]), view);\n+                        sub.address = view.GetMalleablePubKey().ToString();\n+                    }\n+                    else\n+                    {\n+                        // Received by IP connection (deprecated features), or a multisignature or other non-simple transaction\n+                        sub.type = TransactionRecord::RecvFromOther;\n+                        sub.address = mapValue[\"from\"];\n                     }\n                 }\n                 if (wtx.IsCoinBase())"
      }
    ]
  },
  {
    "sha": "331e3c98640165f2b3eb3c56d2f8645e6fc401b7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozMzFlM2M5ODY0MDE2NWYyYjNlYjNjNTZkMmY4NjQ1ZTZmYzQwMWI3",
    "commit": {
      "author": {
        "name": "alex",
        "email": "balthazar@yandex.ru",
        "date": "2016-02-23T23:27:02Z"
      },
      "committer": {
        "name": "alex",
        "email": "balthazar@yandex.ru",
        "date": "2016-02-23T23:27:02Z"
      },
      "message": "Add CWallet::ExtractAddress method",
      "tree": {
        "sha": "7a0f43ee1017375b896c8a703f7b00b384b24e19",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7a0f43ee1017375b896c8a703f7b00b384b24e19"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/331e3c98640165f2b3eb3c56d2f8645e6fc401b7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/331e3c98640165f2b3eb3c56d2f8645e6fc401b7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/331e3c98640165f2b3eb3c56d2f8645e6fc401b7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/331e3c98640165f2b3eb3c56d2f8645e6fc401b7/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c5dbcadfa061e818113b01019b896114cc0cd397",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c5dbcadfa061e818113b01019b896114cc0cd397",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c5dbcadfa061e818113b01019b896114cc0cd397"
      }
    ],
    "stats": {
      "total": 143,
      "additions": 100,
      "deletions": 43
    },
    "files": [
      {
        "sha": "998a992914ae0701aea841fcf8b8823b3c28a4ce",
        "filename": "src/qt/coincontroldialog.cpp",
        "status": "modified",
        "additions": 47,
        "deletions": 0,
        "changes": 47,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/331e3c98640165f2b3eb3c56d2f8645e6fc401b7/src/qt/coincontroldialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/331e3c98640165f2b3eb3c56d2f8645e6fc401b7/src/qt/coincontroldialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/coincontroldialog.cpp?ref=331e3c98640165f2b3eb3c56d2f8645e6fc401b7",
        "patch": "@@ -631,6 +631,7 @@ void CoinControlDialog::updateView()\n             itemOutput->setCheckState(COLUMN_CHECKBOX,Qt::Unchecked);\n \n             // address\n+/*\n             CTxDestination outputAddress;\n             QString sAddress = \"\";\n             if(ExtractDestination(out.tx->vout[out.i].scriptPubKey, outputAddress))\n@@ -646,6 +647,52 @@ void CoinControlDialog::updateView()\n                 if (keyid && model->getPubKey(*keyid, pubkey) && !pubkey.IsCompressed())\n                     nInputSize = 180;\n             }\n+*/\n+            QString sAddress = \"\";\n+            txnouttype whichType;\n+            std::vector<valtype> vSolutions;\n+            if (Solver(out.tx->vout[out.i].scriptPubKey, whichType, vSolutions))\n+            {\n+                CTxDestination address;\n+                if (whichType == TX_PUBKEY)\n+                {\n+                    // Pay-to-Pubkey\n+                    CPubKey pubKey = CPubKey(vSolutions[0]);\n+                    address = pubKey.GetID();\n+                    sAddress = CBitcoinAddress(address).ToString().c_str();\n+\n+                    if (!pubKey.IsCompressed())\n+                        nInputSize = 180;\n+                }\n+                else if (whichType == TX_PUBKEYHASH)\n+                {\n+                    // Pay-to-PubkeyHash\n+                    address = CKeyID(uint160(vSolutions[0]));\n+                    sAddress = CBitcoinAddress(address).ToString().c_str();\n+\n+                    CPubKey pubkey;\n+                    CKeyID *keyid = boost::get< CKeyID >(&address);\n+                    if (keyid && model->getPubKey(*keyid, pubkey) && !pubkey.IsCompressed())\n+                        nInputSize = 180;\n+                }\n+                else if (whichType == TX_SCRIPTHASH)\n+                {\n+                    // Pay-to-ScriptHash\n+                    address = CScriptID(uint160(vSolutions[0]));\n+                    sAddress = CBitcoinAddress(address).ToString().c_str();\n+                }\n+                else if (whichType == TX_PUBKEY_DROP)\n+                {\n+                    // Pay-to-Pubkey-R\n+                    CMalleableKeyView view;\n+                    pwalletMain->CheckOwnership(CPubKey(vSolutions[0]), CPubKey(vSolutions[1]), view);\n+                    sAddress = view.GetMalleablePubKey().ToString().c_str();\n+                }\n+\n+                // if listMode or change => show bitcoin address. In tree mode, address is not shown again for direct wallet address outputs\n+                if (!treeMode || (!(sAddress == sWalletAddress)))\n+                    itemOutput->setText(COLUMN_ADDRESS, sAddress);\n+            }\n \n             // label\n             if (!(sAddress == sWalletAddress)) // change"
      },
      {
        "sha": "e28a64bdc37826fc67a87e50353d10a3b9c5b1ad",
        "filename": "src/qt/transactionrecord.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 40,
        "changes": 51,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/331e3c98640165f2b3eb3c56d2f8645e6fc401b7/src/qt/transactionrecord.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/331e3c98640165f2b3eb3c56d2f8645e6fc401b7/src/qt/transactionrecord.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionrecord.cpp?ref=331e3c98640165f2b3eb3c56d2f8645e6fc401b7",
        "patch": "@@ -46,48 +46,19 @@ QList<TransactionRecord> TransactionRecord::decomposeTransaction(const CWallet *\n                 sub.idx = parts.size(); // sequence number\n                 sub.credit = txout.nValue;\n \n-                txnouttype whichType;\n-                std::vector<valtype> vSolutions;\n-                if (Solver(txout.scriptPubKey, whichType, vSolutions))\n+                std::string address;\n+                if (pwalletMain->ExtractAddress(txout.scriptPubKey, address))\n                 {\n-                    CTxDestination address;\n-                    if (whichType == TX_PUBKEY)\n-                    {\n-                        // Pay-to-Pubkey\n-                        address = CPubKey(vSolutions[0]).GetID();\n-                        sub.type = TransactionRecord::RecvWithAddress;\n-                        sub.address = CBitcoinAddress(address).ToString();\n-                    }\n-                    else if (whichType == TX_PUBKEYHASH)\n-                    {\n-                        // Pay-to-PubkeyHash\n-                        address = CKeyID(uint160(vSolutions[0]));\n-                        sub.type = TransactionRecord::RecvWithAddress;\n-                        sub.address = CBitcoinAddress(address).ToString();\n-                    }\n-                    else if (whichType == TX_SCRIPTHASH)\n-                    {\n-                        // Pay-to-ScriptHash\n-                        address = CScriptID(uint160(vSolutions[0]));\n-                        sub.type = TransactionRecord::RecvWithAddress;\n-                        sub.address = CBitcoinAddress(address).ToString();\n-                    }\n-                    else if (whichType == TX_PUBKEY_DROP)\n-                    {\n-                        // Pay-to-Pubkey-R\n-                        sub.type = TransactionRecord::RecvWithAddress;\n-\n-                        CMalleableKeyView view;\n-                        pwalletMain->CheckOwnership(CPubKey(vSolutions[0]), CPubKey(vSolutions[1]), view);\n-                        sub.address = view.GetMalleablePubKey().ToString();\n-                    }\n-                    else\n-                    {\n-                        // Received by IP connection (deprecated features), or a multisignature or other non-simple transaction\n-                        sub.type = TransactionRecord::RecvFromOther;\n-                        sub.address = mapValue[\"from\"];\n-                    }\n+                    sub.type = TransactionRecord::RecvWithAddress;\n+                    sub.address = address;\n                 }\n+                else\n+                {\n+                    // Received by IP connection (deprecated features), or a multisignature or other non-simple transaction\n+                    sub.type = TransactionRecord::RecvFromOther;\n+                    sub.address = mapValue[\"from\"];\n+                }\n+\n                 if (wtx.IsCoinBase())\n                 {\n                     // Generated (proof-of-work)"
      },
      {
        "sha": "47b12e9d13d3fc30f1dd2033946fdefe66fbbb4b",
        "filename": "src/qt/walletmodel.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/331e3c98640165f2b3eb3c56d2f8645e6fc401b7/src/qt/walletmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/331e3c98640165f2b3eb3c56d2f8645e6fc401b7/src/qt/walletmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.cpp?ref=331e3c98640165f2b3eb3c56d2f8645e6fc401b7",
        "patch": "@@ -495,10 +495,11 @@ void WalletModel::listCoins(std::map<QString, std::vector<COutput> >& mapCoins)\n             cout = COutput(&wallet->mapWallet[cout.tx->vin[0].prevout.hash], cout.tx->vin[0].prevout.n, 0, true);\n         }\n \n-        CTxDestination address;\n-        if(!out.fSpendable || !ExtractDestination(cout.tx->vout[cout.i].scriptPubKey, address))\n+        std::string address;\n+        if(!out.fSpendable || !wallet->ExtractAddress(cout.tx->vout[cout.i].scriptPubKey, address))\n             continue;\n-        mapCoins[CBitcoinAddress(address).ToString().c_str()].push_back(out);\n+\n+        mapCoins[address.c_str()].push_back(out);\n     }\n }\n "
      },
      {
        "sha": "780c7f4e37b74d4a2aa81eae9ab59bec00137891",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 36,
        "deletions": 0,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/331e3c98640165f2b3eb3c56d2f8645e6fc401b7/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/331e3c98640165f2b3eb3c56d2f8645e6fc401b7/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=331e3c98640165f2b3eb3c56d2f8645e6fc401b7",
        "patch": "@@ -2780,3 +2780,39 @@ void CWallet::ClearOrphans()\n     for(list<uint256>::const_iterator it = orphans.begin(); it != orphans.end(); ++it)\n         EraseFromWallet(*it);\n }\n+\n+bool CWallet::ExtractAddress(const CScript& scriptPubKey, std::string& addressRet)\n+{\n+    vector<valtype> vSolutions;\n+    txnouttype whichType;\n+    if (!Solver(scriptPubKey, whichType, vSolutions))\n+        return false;\n+\n+    if (whichType == TX_PUBKEY)\n+    {\n+        addressRet = CBitcoinAddress(CPubKey(vSolutions[0]).GetID()).ToString();\n+        return true;\n+    }\n+    if (whichType == TX_PUBKEY_DROP)\n+    {\n+        // Pay-to-Pubkey-R\n+        CMalleableKeyView view;\n+        if (!CheckOwnership(CPubKey(vSolutions[0]), CPubKey(vSolutions[1]), view))\n+            return false;\n+\n+        addressRet = view.GetMalleablePubKey().ToString();\n+        return true;\n+    }\n+    else if (whichType == TX_PUBKEYHASH)\n+    {\n+        addressRet = CBitcoinAddress(CKeyID(uint160(vSolutions[0]))).ToString();\n+        return true;\n+    }\n+    else if (whichType == TX_SCRIPTHASH)\n+    {\n+        addressRet = CBitcoinAddress(CScriptID(uint160(vSolutions[0]))).ToString();\n+        return true;\n+    }\n+    // Multisig txns have more than one address...\n+    return false;\n+}"
      },
      {
        "sha": "12d8af54ee1fec3ba89ce47f13449619e49094a3",
        "filename": "src/wallet.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/331e3c98640165f2b3eb3c56d2f8645e6fc401b7/src/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/331e3c98640165f2b3eb3c56d2f8645e6fc401b7/src/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.h?ref=331e3c98640165f2b3eb3c56d2f8645e6fc401b7",
        "patch": "@@ -337,6 +337,8 @@ class CWallet : public CCryptoKeyStore\n \n     bool GetTransaction(const uint256 &hashTx, CWalletTx& wtx);\n \n+    bool ExtractAddress(const CScript& scriptPubKey, std::string& addressRet);\n+\n     bool SetDefaultKey(const CPubKey &vchPubKey);\n \n     // signify that a particular wallet feature is now used. this may change nWalletVersion and nWalletMaxVersion if those are lower"
      }
    ]
  },
  {
    "sha": "5c3da961f214386b7a1526d1ddd6e2a289a39134",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1YzNkYTk2MWYyMTQzODZiN2ExNTI2ZDFkZGQ2ZTJhMjg5YTM5MTM0",
    "commit": {
      "author": {
        "name": "svost",
        "email": "ya.nowa@yandex.ru",
        "date": "2016-02-24T07:01:50Z"
      },
      "committer": {
        "name": "svost",
        "email": "ya.nowa@yandex.ru",
        "date": "2016-02-24T07:07:11Z"
      },
      "message": "Introduce nOneWeek constant",
      "tree": {
        "sha": "69606af96316003fca18c166538738a8df8988eb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/69606af96316003fca18c166538738a8df8988eb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5c3da961f214386b7a1526d1ddd6e2a289a39134",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5c3da961f214386b7a1526d1ddd6e2a289a39134",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5c3da961f214386b7a1526d1ddd6e2a289a39134",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5c3da961f214386b7a1526d1ddd6e2a289a39134/comments",
    "author": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d20116c8fa5bb1a3254cfe9cbe38ea129029756a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d20116c8fa5bb1a3254cfe9cbe38ea129029756a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d20116c8fa5bb1a3254cfe9cbe38ea129029756a"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 3,
      "deletions": 4
    },
    "files": [
      {
        "sha": "970dd7e8d705eb6a22c9d831a08c790ec6a9e16f",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5c3da961f214386b7a1526d1ddd6e2a289a39134/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5c3da961f214386b7a1526d1ddd6e2a289a39134/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=5c3da961f214386b7a1526d1ddd6e2a289a39134",
        "patch": "@@ -2347,9 +2347,9 @@ bool CBlock::AcceptBlock()\n         return DoS(100, error(\"AcceptBlock() : incorrect %s\", IsProofOfWork() ? \"proof-of-work\" : \"proof-of-stake\"));\n \n     int64_t nMedianTimePast = pindexPrev->GetMedianTimePast();\n-    int nMaxOffset = 12 * 3600; // 12 hours\n+    int nMaxOffset = 12 * nOneHour; // 12 hours\n     if (pindexPrev->nTime < 1450569600)\n-        nMaxOffset = 7 * 86400; // One week until 20 Dec, 2015\n+        nMaxOffset = nOneWeek; // One week until 20 Dec, 2015\n \n     // Check timestamp against prev\n     if (GetBlockTime() <= nMedianTimePast || FutureDrift(GetBlockTime()) < pindexPrev->GetBlockTime())"
      },
      {
        "sha": "756e5cb5f3a9b1b3e89c0ac22abd08937a7faf8e",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5c3da961f214386b7a1526d1ddd6e2a289a39134/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5c3da961f214386b7a1526d1ddd6e2a289a39134/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=5c3da961f214386b7a1526d1ddd6e2a289a39134",
        "patch": "@@ -1181,7 +1181,6 @@ void ThreadOpenConnections2(void* parg)\n                 // it'll get a pile of addresses with newer timestamps.\n                 // Seed nodes are given a random 'last seen time' of between one and two\n                 // weeks ago.\n-                const int64_t nOneWeek = 7*24*60*60;\n                 struct in_addr ip;\n                 memcpy(&ip, &pnSeed[i], sizeof(ip));\n                 CAddress addr(CService(ip, GetDefaultPort()));\n@@ -1197,7 +1196,6 @@ void ThreadOpenConnections2(void* parg)\n             std::vector<CAddress> vAdd;\n             for (unsigned int i = 0; i < ARRAYLEN(pchTorSeed); i++)\n             {\n-                const int64_t nOneWeek = 7*24*60*60;\n                 CAddress addr(CService(pchTorSeed[i], GetDefaultPort()));\n                 addr.nTime = GetTime()-GetRand(nOneWeek)-nOneWeek;\n                 vAdd.push_back(addr);"
      },
      {
        "sha": "c8ae742501963c6ad872089ea97e1e3ec89c6938",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5c3da961f214386b7a1526d1ddd6e2a289a39134/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5c3da961f214386b7a1526d1ddd6e2a289a39134/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=5c3da961f214386b7a1526d1ddd6e2a289a39134",
        "patch": "@@ -37,6 +37,7 @@\n \n static const int32_t nOneHour = 60 * 60;\n static const int32_t nOneDay = 24 * 60 * 60;\n+static const int64_t nOneWeek = 7 * 24 * 60 * 60;\n \n static const int64_t COIN = 1000000;\n static const int64_t CENT = 10000;"
      }
    ]
  },
  {
    "sha": "c7f60eb71dad3cd49f1deb5489e67311985ad81d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjN2Y2MGViNzFkYWQzY2Q0OWYxZGViNTQ4OWU2NzMxMTk4NWFkODFk",
    "commit": {
      "author": {
        "name": "svost",
        "email": "svost@users.noreply.github.com",
        "date": "2016-02-27T17:13:01Z"
      },
      "committer": {
        "name": "svost",
        "email": "svost@users.noreply.github.com",
        "date": "2016-02-27T17:13:01Z"
      },
      "message": "Since the buffer is constant,  we set the length directly",
      "tree": {
        "sha": "3f6c3cbfd1869e15911a54887fc1b53afb3e6a00",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3f6c3cbfd1869e15911a54887fc1b53afb3e6a00"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c7f60eb71dad3cd49f1deb5489e67311985ad81d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c7f60eb71dad3cd49f1deb5489e67311985ad81d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c7f60eb71dad3cd49f1deb5489e67311985ad81d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c7f60eb71dad3cd49f1deb5489e67311985ad81d/comments",
    "author": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5c3da961f214386b7a1526d1ddd6e2a289a39134",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5c3da961f214386b7a1526d1ddd6e2a289a39134",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5c3da961f214386b7a1526d1ddd6e2a289a39134"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 4,
      "deletions": 6
    },
    "files": [
      {
        "sha": "4699abf975be4ddb9e01cb0337c22e078c34a473",
        "filename": "src/netbase.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 6,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c7f60eb71dad3cd49f1deb5489e67311985ad81d/src/netbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c7f60eb71dad3cd49f1deb5489e67311985ad81d/src/netbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.cpp?ref=c7f60eb71dad3cd49f1deb5489e67311985ad81d",
        "patch": "@@ -221,11 +221,9 @@ bool static Socks5(string strDest, uint16_t port, SOCKET& hSocket)\n         CloseSocket(hSocket);\n         return error(\"Hostname too long\");\n     }\n-    char pszSocks5Init[] = \"\\5\\1\\0\";\n-    ssize_t nSize = sizeof(pszSocks5Init) - 1;\n-\n-    ssize_t ret = send(hSocket, pszSocks5Init, nSize, MSG_NOSIGNAL);\n-    if (ret != nSize)\n+    const char pszSocks5Init[] = \"\\5\\1\\0\";\n+        ssize_t ret = send(hSocket, pszSocks5Init, 3, MSG_NOSIGNAL);\n+    if (ret != 3)\n     {\n         CloseSocket(hSocket);\n         return error(\"Error sending to proxy\");\n@@ -1193,4 +1191,4 @@ bool CloseSocket(SOCKET& hSocket)\n #endif\n     hSocket = INVALID_SOCKET;\n     return ret != SOCKET_ERROR;\n-}\n\\ No newline at end of file\n+}"
      }
    ]
  },
  {
    "sha": "07795bdb375852bf2a87e306eae34af862d72c4c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNzc5NWJkYjM3NTg1MmJmMmE4N2UzMDZlYWUzNGFmODYyZDcyYzRj",
    "commit": {
      "author": {
        "name": "svost",
        "email": "svost@users.noreply.github.com",
        "date": "2016-02-27T19:35:12Z"
      },
      "committer": {
        "name": "svost",
        "email": "svost@users.noreply.github.com",
        "date": "2016-02-27T19:35:12Z"
      },
      "message": "Update script.h\n\n* Fix MSVC C4245: signed/unsigned mismatch\r\n* Commented out SEQUENCE_THRESHOLD: never used\r\n* C++ style comments",
      "tree": {
        "sha": "9bf8843e9d69640e80f57bbf728208addacafd28",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9bf8843e9d69640e80f57bbf728208addacafd28"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/07795bdb375852bf2a87e306eae34af862d72c4c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/07795bdb375852bf2a87e306eae34af862d72c4c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/07795bdb375852bf2a87e306eae34af862d72c4c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/07795bdb375852bf2a87e306eae34af862d72c4c/comments",
    "author": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c7f60eb71dad3cd49f1deb5489e67311985ad81d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c7f60eb71dad3cd49f1deb5489e67311985ad81d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c7f60eb71dad3cd49f1deb5489e67311985ad81d"
      }
    ],
    "stats": {
      "total": 40,
      "additions": 20,
      "deletions": 20
    },
    "files": [
      {
        "sha": "00b05253c656ac97f270fb3cf96513d5b0919699",
        "filename": "src/script.h",
        "status": "modified",
        "additions": 20,
        "deletions": 20,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07795bdb375852bf2a87e306eae34af862d72c4c/src/script.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07795bdb375852bf2a87e306eae34af862d72c4c/src/script.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script.h?ref=07795bdb375852bf2a87e306eae34af862d72c4c",
        "patch": "@@ -19,28 +19,28 @@ class CTransaction;\n \n static const unsigned int MAX_SCRIPT_ELEMENT_SIZE = 520; // bytes\n \n-/* Setting nSequence to this value for every input in a transaction\n- * disables nLockTime. */\n+// Setting nSequence to this value for every input in a transaction\n+// disables nLockTime.\n static const uint32_t SEQUENCE_FINAL = 0xffffffff;\n \n-/* Threshold for inverted nSequence: below this value it is interpreted\n- * as a relative lock-time, otherwise ignored. */\n-static const uint32_t SEQUENCE_THRESHOLD = (1 << 31);\n+// Threshold for inverted nSequence: below this value it is interpreted\n+// as a relative lock-time, otherwise ignored.\n+//static const uint32_t SEQUENCE_THRESHOLD = 0x80000000;\n \n-/* If this flag set, CTxIn::nSequence is NOT interpreted as a\n- * relative lock-time. */\n-static const uint32_t SEQUENCE_LOCKTIME_DISABLE_FLAG = (1 << 31);\n+// If this flag set, CTxIn::nSequence is NOT interpreted as a\n+// relative lock-time.\n+static const uint32_t SEQUENCE_LOCKTIME_DISABLE_FLAG = 0x80000000;\n \n-/* If CTxIn::nSequence encodes a relative lock-time and this flag\n- * is set, the relative lock-time has units of 512 seconds,\n- * otherwise it specifies blocks with a granularity of 1. */\n-static const uint32_t SEQUENCE_LOCKTIME_TYPE_FLAG = (1 << 22);\n+// If CTxIn::nSequence encodes a relative lock-time and this flag\n+// is set, the relative lock-time has units of 512 seconds,\n+// otherwise it specifies blocks with a granularity of 1.\n+static const uint32_t SEQUENCE_LOCKTIME_TYPE_FLAG = 0x00400000;\n \n-/* If CTxIn::nSequence encodes a relative lock-time, this mask is\n- * applied to extract that lock-time from the sequence field. */\n+// If CTxIn::nSequence encodes a relative lock-time, this mask is\n+// applied to extract that lock-time from the sequence field.\n static const uint32_t SEQUENCE_LOCKTIME_MASK = 0x0000ffff;\n \n-/** IsMine() return codes */\n+// IsMine() return codes\n enum isminetype\n {\n     MINE_NO = 0,\n@@ -51,7 +51,7 @@ enum isminetype\n \n typedef uint8_t isminefilter;\n \n-/** Signature hash types/flags */\n+// Signature hash types/flags\n enum\n {\n     SIGHASH_ALL = 1,\n@@ -60,15 +60,15 @@ enum\n     SIGHASH_ANYONECANPAY = 0x80\n };\n \n-/** Script verification flags */\n+// Script verification flags\n enum\n {\n     SCRIPT_VERIFY_NONE      = 0,\n     SCRIPT_VERIFY_P2SH      = (1U << 0), // evaluate P2SH (BIP16) subscripts\n     SCRIPT_VERIFY_STRICTENC = (1U << 1), // enforce strict conformance to DER and SEC2 for signatures and pubkeys\n     SCRIPT_VERIFY_LOW_S     = (1U << 2), // enforce low S values in signatures (depends on STRICTENC)\n     SCRIPT_VERIFY_NOCACHE   = (1U << 3), // do not store results in signature cache (but do query it)\n-    SCRIPT_VERIFY_NULLDUMMY = (1U << 4),  // verify dummy stack item consumed by CHECKMULTISIG is of zero-length\n+    SCRIPT_VERIFY_NULLDUMMY = (1U << 4), // verify dummy stack item consumed by CHECKMULTISIG is of zero-length\n     SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY = (1U << 9),\n     SCRIPT_VERIFY_CHECKSEQUENCEVERIFY = (1U << 10)\n };\n@@ -108,7 +108,7 @@ enum txnouttype\n \n const char* GetTxnOutputType(txnouttype t);\n \n-/** Script opcodes */\n+// Script opcodes\n enum opcodetype\n {\n     // push value\n@@ -276,7 +276,7 @@ inline std::string StackString(const std::vector<std::vector<unsigned char> >& v\n     return str;\n }\n \n-/** Serialized script, used inside transaction inputs and outputs */\n+// Serialized script, used inside transaction inputs and outputs\n class CScript : public std::vector<uint8_t>\n {\n protected:"
      }
    ]
  },
  {
    "sha": "7dd7fb48b19b2601e38dd0d74fe632736022f4f2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3ZGQ3ZmI0OGIxOWIyNjAxZTM4ZGQwZDc0ZmU2MzI3MzYwMjJmNGYy",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-04T17:44:08Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-04T17:44:08Z"
      },
      "message": "Store only the second half of private key pair.",
      "tree": {
        "sha": "3283c4809fdf1a98b2e653b5f82b64d18a86f02b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3283c4809fdf1a98b2e653b5f82b64d18a86f02b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7dd7fb48b19b2601e38dd0d74fe632736022f4f2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7dd7fb48b19b2601e38dd0d74fe632736022f4f2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7dd7fb48b19b2601e38dd0d74fe632736022f4f2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7dd7fb48b19b2601e38dd0d74fe632736022f4f2/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "331e3c98640165f2b3eb3c56d2f8645e6fc401b7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/331e3c98640165f2b3eb3c56d2f8645e6fc401b7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/331e3c98640165f2b3eb3c56d2f8645e6fc401b7"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 13,
      "deletions": 10
    },
    "files": [
      {
        "sha": "451f7ea1f6820a72dd271109db7c903a889b7988",
        "filename": "src/keystore.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7dd7fb48b19b2601e38dd0d74fe632736022f4f2/src/keystore.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7dd7fb48b19b2601e38dd0d74fe632736022f4f2/src/keystore.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/keystore.cpp?ref=7dd7fb48b19b2601e38dd0d74fe632736022f4f2",
        "patch": "@@ -33,7 +33,7 @@ bool CBasicKeyStore::AddMalleableKey(const CMalleableKey& mKey)\n {\n     {\n         LOCK(cs_KeyStore);\n-        mapMalleableKeys[CMalleableKeyView(mKey)] = mKey;\n+        mapMalleableKeys[CMalleableKeyView(mKey)] = mKey.GetSecretH();\n     }\n     return true;\n }"
      },
      {
        "sha": "d4ac615059d03d40a79db5c8a6dcb7daa1be4b22",
        "filename": "src/keystore.h",
        "status": "modified",
        "additions": 7,
        "deletions": 4,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7dd7fb48b19b2601e38dd0d74fe632736022f4f2/src/keystore.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7dd7fb48b19b2601e38dd0d74fe632736022f4f2/src/keystore.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/keystore.h?ref=7dd7fb48b19b2601e38dd0d74fe632736022f4f2",
        "patch": "@@ -78,7 +78,7 @@ class CKeyStore\n typedef std::map<CKeyID, std::pair<CSecret, bool> > KeyMap;\n typedef std::map<CScriptID, CScript > ScriptMap;\n typedef std::set<CScript> WatchOnlySet;\n-typedef std::map<CMalleableKeyView, CMalleableKey> MalleableKeyMap;\n+typedef std::map<CMalleableKeyView, CSecret> MalleableKeyMap;\n \n /** Basic key store, that keeps keys in an address->secret map */\n class CBasicKeyStore : public CKeyStore\n@@ -100,7 +100,7 @@ class CBasicKeyStore : public CKeyStore\n             MalleableKeyMap::const_iterator mi = mapMalleableKeys.find(keyView);\n             if (mi != mapMalleableKeys.end())\n             {\n-                mKey = mi->second;\n+                mKey = mi->first.GetMalleableKey(mi->second);\n                 return true;\n             }\n         }\n@@ -183,8 +183,11 @@ class CBasicKeyStore : public CKeyStore\n             LOCK(cs_KeyStore);\n             for (MalleableKeyMap::const_iterator mi = mapMalleableKeys.begin(); mi != mapMalleableKeys.end(); mi++)\n             {\n-                if (mi->second.CheckKeyVariant(R, pubKeyVariant, privKey))\n-                    return true;\n+                if (mi->first.CheckKeyVariant(R, pubKeyVariant))\n+                {\n+                    CMalleableKey mKey = mi->first.GetMalleableKey(mi->second);\n+                    return mKey.CheckKeyVariant(R, pubKeyVariant, privKey);\n+                }\n             }\n         }\n         return false;"
      },
      {
        "sha": "2fe59ce54b911bda8d8af6250d7d0e757efefff9",
        "filename": "src/walletdb.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7dd7fb48b19b2601e38dd0d74fe632736022f4f2/src/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7dd7fb48b19b2601e38dd0d74fe632736022f4f2/src/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/walletdb.cpp?ref=7dd7fb48b19b2601e38dd0d74fe632736022f4f2",
        "patch": "@@ -306,14 +306,14 @@ ReadKeyValue(CWallet* pwallet, CDataStream& ssKey, CDataStream& ssValue,\n         {\n             string strKey, strKeyView;\n \n-            CMalleableKey mKey;\n+            CSecret vchSecret;\n             CMalleableKeyView keyView;\n \n             ssKey >> strKeyView;\n-            ssValue >> strKey;\n-\n             keyView.SetString(strKeyView);\n-            mKey.SetString(strKey);\n+            ssValue >> vchSecret;\n+\n+            CMalleableKey mKey = keyView.GetMalleableKey(vchSecret);\n \n             if (mKey.IsNull())\n             {"
      },
      {
        "sha": "64a2d9f41e4a36d5b0c867eb962334296c8c987d",
        "filename": "src/walletdb.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7dd7fb48b19b2601e38dd0d74fe632736022f4f2/src/walletdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7dd7fb48b19b2601e38dd0d74fe632736022f4f2/src/walletdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/walletdb.h?ref=7dd7fb48b19b2601e38dd0d74fe632736022f4f2",
        "patch": "@@ -101,7 +101,7 @@ class CWalletDB : public CDB\n         if(!Write(std::make_pair(std::string(\"malmeta\"), keyView.ToString()), keyMeta))\n             return false;\n \n-        if(!Write(std::make_pair(std::string(\"malpair\"), keyView.ToString()), malleableKey.ToString(), false))\n+        if(!Write(std::make_pair(std::string(\"malpair\"), keyView.ToString()), malleableKey.GetSecretH(), false))\n             return false;\n \n         return true;"
      }
    ]
  },
  {
    "sha": "75e0e72d8c755abd975d3bc21a0ff35498c252db",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3NWUwZTcyZDhjNzU1YWJkOTc1ZDNiYzIxYTBmZjM1NDk4YzI1MmRi",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-04T20:19:59Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-04T20:19:59Z"
      },
      "message": "Check for NULL values properly.",
      "tree": {
        "sha": "e110397127b767f9097b9aa4e8424b05c0696a39",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e110397127b767f9097b9aa4e8424b05c0696a39"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/75e0e72d8c755abd975d3bc21a0ff35498c252db",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/75e0e72d8c755abd975d3bc21a0ff35498c252db",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/75e0e72d8c755abd975d3bc21a0ff35498c252db",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/75e0e72d8c755abd975d3bc21a0ff35498c252db/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7dd7fb48b19b2601e38dd0d74fe632736022f4f2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7dd7fb48b19b2601e38dd0d74fe632736022f4f2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7dd7fb48b19b2601e38dd0d74fe632736022f4f2"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 8,
      "deletions": 4
    },
    "files": [
      {
        "sha": "68d19fe540f3e32edba7c79c3c2eee62cac7787b",
        "filename": "src/db.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 4,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/75e0e72d8c755abd975d3bc21a0ff35498c252db/src/db.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/75e0e72d8c755abd975d3bc21a0ff35498c252db/src/db.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/db.cpp?ref=75e0e72d8c755abd975d3bc21a0ff35498c252db",
        "patch": "@@ -397,7 +397,6 @@ bool CDB::Rewrite(const string& strFile, const char* pszSkip)\n \n                     Dbc* pcursor = db.GetCursor();\n                     if (pcursor) {\n-                        size_t pszSkipLen = strlen(pszSkip);\n                         while (fSuccess)\n                         {\n                             CDataStream ssKey(SER_DISK, CLIENT_VERSION);\n@@ -414,9 +413,14 @@ bool CDB::Rewrite(const string& strFile, const char* pszSkip)\n                                 fSuccess = false;\n                                 break;\n                             }\n-                            if (pszSkip &&\n-                                strncmp(&ssKey[0], pszSkip, std::min(ssKey.size(), pszSkipLen)) == 0)\n-                                continue;\n+\n+                            if (pszSkip != NULL)\n+                            {\n+                                size_t pszSkipLen = strlen(pszSkip);\n+                                if (strncmp(&ssKey[0], pszSkip, std::min(ssKey.size(), pszSkipLen)) == 0)\n+                                    continue;\n+                            }\n+\n                             if (strncmp(&ssKey[0], \"\\x07version\", 8) == 0)\n                             {\n                                 // Update version:"
      }
    ]
  },
  {
    "sha": "766371edb6ff55678db369ee784fd1efa5938007",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3NjYzNzFlZGI2ZmY1NTY3OGRiMzY5ZWU3ODRmZDFlZmE1OTM4MDA3",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-04T22:21:34Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-04T22:21:34Z"
      },
      "message": "Add DEBUG option",
      "tree": {
        "sha": "8e00f659fc7f35fbaea688d3486240ddcad7665b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8e00f659fc7f35fbaea688d3486240ddcad7665b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/766371edb6ff55678db369ee784fd1efa5938007",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/766371edb6ff55678db369ee784fd1efa5938007",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/766371edb6ff55678db369ee784fd1efa5938007",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/766371edb6ff55678db369ee784fd1efa5938007/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "75e0e72d8c755abd975d3bc21a0ff35498c252db",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/75e0e72d8c755abd975d3bc21a0ff35498c252db",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/75e0e72d8c755abd975d3bc21a0ff35498c252db"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 8,
      "deletions": 0
    },
    "files": [
      {
        "sha": "abafeb7eda8786bfe5c9854d343b90b843a5f16a",
        "filename": "novacoin-qt.pro",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/766371edb6ff55678db369ee784fd1efa5938007/novacoin-qt.pro",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/766371edb6ff55678db369ee784fd1efa5938007/novacoin-qt.pro",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/novacoin-qt.pro?ref=766371edb6ff55678db369ee784fd1efa5938007",
        "patch": "@@ -51,6 +51,14 @@ contains(RELEASE, 1) {\n     }\n }\n \n+contains(DEBUG, 1) {\n+    QMAKE_CXXFLAGS_RELEASE -= -O2\n+    QMAKE_CFLAGS_RELEASE -= -O2\n+\n+    QMAKE_CFLAGS += -g -O0\n+    QMAKE_CXXCFLAGS += -g -O0\n+}\n+\n !win32 {\n # for extra security against potential buffer overflows: enable GCCs Stack Smashing Protection\n QMAKE_CXXFLAGS *= -fstack-protector-all --param ssp-buffer-size=1"
      }
    ]
  },
  {
    "sha": "75d1689816053f249e432faffba9ded7199c2037",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3NWQxNjg5ODE2MDUzZjI0OWU0MzJmYWZmYmE5ZGVkNzE5OWMyMDM3",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-04T22:24:45Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-04T22:24:45Z"
      },
      "message": "Encryption/decryption support for malleable keys.",
      "tree": {
        "sha": "0b0c5d50847db6c6c64e8ad1605d0c303504f270",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0b0c5d50847db6c6c64e8ad1605d0c303504f270"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/75d1689816053f249e432faffba9ded7199c2037",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/75d1689816053f249e432faffba9ded7199c2037",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/75d1689816053f249e432faffba9ded7199c2037",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/75d1689816053f249e432faffba9ded7199c2037/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "766371edb6ff55678db369ee784fd1efa5938007",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/766371edb6ff55678db369ee784fd1efa5938007",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/766371edb6ff55678db369ee784fd1efa5938007"
      }
    ],
    "stats": {
      "total": 301,
      "additions": 275,
      "deletions": 26
    },
    "files": [
      {
        "sha": "6c0a57dd131e21b2ae8989bdfcf2a173444128b6",
        "filename": "src/key.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/75d1689816053f249e432faffba9ded7199c2037/src/key.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/75d1689816053f249e432faffba9ded7199c2037/src/key.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.cpp?ref=75d1689816053f249e432faffba9ded7199c2037",
        "patch": "@@ -1002,6 +1002,11 @@ bool CMalleableKey::SetString(const std::string& strMutableKey)\n \n // CMalleableKeyView\n \n+CMalleableKeyView::CMalleableKeyView(const std::string &strMalleableKey)\n+{\n+    SetString(strMalleableKey);\n+}\n+\n CMalleableKeyView::CMalleableKeyView(const CMalleableKey &b)\n {\n     if (b.vchSecretL.size() != 32)"
      },
      {
        "sha": "3f9d8f1b2c524f6f7f9537cd26ce81d9cfcec7d6",
        "filename": "src/key.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/75d1689816053f249e432faffba9ded7199c2037/src/key.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/75d1689816053f249e432faffba9ded7199c2037/src/key.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.h?ref=75d1689816053f249e432faffba9ded7199c2037",
        "patch": "@@ -324,6 +324,7 @@ class CMalleableKeyView\n public:\n     CMalleableKeyView() { nVersion = 0; };\n     CMalleableKeyView(const CMalleableKey &b);\n+    CMalleableKeyView(const std::string &strMalleableKey);\n \n     CMalleableKeyView(const CMalleableKeyView &b);\n     CMalleableKeyView& operator=(const CMalleableKey &b);"
      },
      {
        "sha": "215590eca883a470d6e227f907eb97e2e79d2b48",
        "filename": "src/keystore.cpp",
        "status": "modified",
        "additions": 116,
        "deletions": 2,
        "changes": 118,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/75d1689816053f249e432faffba9ded7199c2037/src/keystore.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/75d1689816053f249e432faffba9ded7199c2037/src/keystore.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/keystore.cpp?ref=75d1689816053f249e432faffba9ded7199c2037",
        "patch": "@@ -29,11 +29,11 @@ bool CBasicKeyStore::AddKey(const CKey& key)\n     return true;\n }\n \n-bool CBasicKeyStore::AddMalleableKey(const CMalleableKey& mKey)\n+bool CBasicKeyStore::AddMalleableKey(const CMalleableKeyView& keyView, const CSecret& vchSecretH)\n {\n     {\n         LOCK(cs_KeyStore);\n-        mapMalleableKeys[CMalleableKeyView(mKey)] = mKey.GetSecretH();\n+        mapMalleableKeys[CMalleableKeyView(keyView)] = vchSecretH;\n     }\n     return true;\n }\n@@ -199,6 +199,28 @@ bool CCryptoKeyStore::AddKey(const CKey& key)\n     return true;\n }\n \n+bool CCryptoKeyStore::AddMalleableKey(const CMalleableKeyView& keyView, const CSecret &vchSecretH)\n+{\n+    {\n+        LOCK(cs_KeyStore);\n+        if (!SetCrypted())\n+            return CBasicKeyStore::AddMalleableKey(keyView, vchSecretH);\n+\n+        if (IsLocked())\n+            return false;\n+\n+        CKey keyH;\n+        keyH.SetSecret(vchSecretH, true);\n+\n+        std::vector<unsigned char> vchCryptedSecretH;\n+        if (!EncryptSecret(vMasterKey, vchSecretH, keyH.GetPubKey().GetHash(), vchCryptedSecretH))\n+            return false;\n+\n+        if (!AddCryptedMalleableKey(keyView, vchCryptedSecretH))\n+            return false;\n+    }\n+    return true;\n+}\n \n bool CCryptoKeyStore::AddCryptedKey(const CPubKey &vchPubKey, const std::vector<unsigned char> &vchCryptedSecret)\n {\n@@ -212,6 +234,71 @@ bool CCryptoKeyStore::AddCryptedKey(const CPubKey &vchPubKey, const std::vector<\n     return true;\n }\n \n+bool CCryptoKeyStore::AddCryptedMalleableKey(const CMalleableKeyView& keyView, const std::vector<unsigned char>  &vchCryptedSecretH)\n+{\n+    {\n+        LOCK(cs_KeyStore);\n+        if (!SetCrypted())\n+            return false;\n+\n+        mapCryptedMalleableKeys[CMalleableKeyView(keyView)] = vchCryptedSecretH;\n+    }\n+    return true;\n+}\n+\n+bool CCryptoKeyStore::CreatePrivKey(const CPubKey &pubKeyVariant, const CPubKey &R, CKey &privKey) const\n+{\n+    {\n+        LOCK(cs_KeyStore);\n+        if (!IsCrypted())\n+            return CBasicKeyStore::CreatePrivKey(pubKeyVariant, R, privKey);\n+\n+        for (CryptedMalleableKeyMap::const_iterator mi = mapCryptedMalleableKeys.begin(); mi != mapCryptedMalleableKeys.end(); mi++)\n+        {\n+            if (mi->first.CheckKeyVariant(R, pubKeyVariant))\n+            {\n+                const CPubKey H = mi->first.GetMalleablePubKey().GetH();\n+\n+                CSecret vchSecretH;\n+                if (!DecryptSecret(vMasterKey, mi->second, H.GetHash(), vchSecretH))\n+                    return false;\n+                if (vchSecretH.size() != 32)\n+                    return false;\n+\n+                CMalleableKey mKey = mi->first.GetMalleableKey(vchSecretH);\n+                return mKey.CheckKeyVariant(R, pubKeyVariant, privKey);;\n+            }\n+        }\n+\n+    }\n+    return true;\n+}\n+\n+bool CCryptoKeyStore::GetMalleableKey(const CMalleableKeyView &keyView, CMalleableKey &mKey) const\n+{\n+    {\n+        LOCK(cs_KeyStore);\n+        if (!IsCrypted())\n+            return CBasicKeyStore::GetMalleableKey(keyView, mKey);\n+        CryptedMalleableKeyMap::const_iterator mi = mapCryptedMalleableKeys.find(keyView);\n+        if (mi != mapCryptedMalleableKeys.end())\n+        {\n+            const CPubKey H = keyView.GetMalleablePubKey().GetH();\n+\n+            CSecret vchSecretH;\n+            if (!DecryptSecret(vMasterKey, mi->second, H.GetHash(), vchSecretH))\n+                return false;\n+\n+            if (vchSecretH.size() != 32)\n+                return false;\n+            mKey = mi->first.GetMalleableKey(vchSecretH);\n+\n+            return true;\n+        }\n+    }\n+    return false;\n+}\n+\n bool CCryptoKeyStore::GetKey(const CKeyID &address, CKey& keyOut) const\n {\n     {\n@@ -276,6 +363,17 @@ bool CCryptoKeyStore::EncryptKeys(CKeyingMaterial& vMasterKeyIn)\n                 return false;\n         }\n         mapKeys.clear();\n+\n+        BOOST_FOREACH(MalleableKeyMap::value_type& mKey, mapMalleableKeys)\n+        {\n+            const CPubKey vchPubKeyH = mKey.first.GetMalleablePubKey().GetH();\n+            std::vector<unsigned char> vchCryptedSecretH;\n+            if (!EncryptSecret(vMasterKeyIn, mKey.second, vchPubKeyH.GetHash(), vchCryptedSecretH))\n+                return false;\n+            if (!AddCryptedMalleableKey(mKey.first, vchCryptedSecretH))\n+                return false;\n+        }\n+        mapMalleableKeys.clear();\n     }\n     return true;\n }\n@@ -305,6 +403,22 @@ bool CCryptoKeyStore::DecryptKeys(const CKeyingMaterial& vMasterKeyIn)\n         }\n \n         mapCryptedKeys.clear();\n+\n+        CryptedMalleableKeyMap::const_iterator mi2 = mapCryptedMalleableKeys.begin();\n+        for(; mi2 != mapCryptedMalleableKeys.end(); ++mi2)\n+        {\n+            const CPubKey vchPubKeyH = mi2->first.GetMalleablePubKey().GetH();\n+\n+            CSecret vchSecretH;\n+            if(!DecryptSecret(vMasterKeyIn, mi2->second, vchPubKeyH.GetHash(), vchSecretH))\n+                return false;\n+            if (vchSecretH.size() != 32)\n+                return false;\n+\n+            if (!CBasicKeyStore::AddMalleableKey(mi2->first, vchSecretH))\n+                return false;\n+        }\n+        mapCryptedMalleableKeys.clear();\n     }\n \n     return true;"
      },
      {
        "sha": "438752fa03f046b86794754c4ffce45202974712",
        "filename": "src/keystore.h",
        "status": "modified",
        "additions": 74,
        "deletions": 3,
        "changes": 77,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/75d1689816053f249e432faffba9ded7199c2037/src/keystore.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/75d1689816053f249e432faffba9ded7199c2037/src/keystore.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/keystore.h?ref=75d1689816053f249e432faffba9ded7199c2037",
        "patch": "@@ -40,7 +40,7 @@ class CKeyStore\n     virtual bool AddKey(const CKey& key) =0;\n \n     // Add a malleable key to store.\n-    virtual bool AddMalleableKey(const CMalleableKey& mKey) =0;\n+    virtual bool AddMalleableKey(const CMalleableKeyView &keyView, const CSecret &vchSecretH) =0;\n     virtual bool GetMalleableKey(const CMalleableKeyView &keyView, CMalleableKey &mKey) const =0;\n \n     // Check whether a key corresponding to a given address is present in the store.\n@@ -92,7 +92,7 @@ class CBasicKeyStore : public CKeyStore\n \n public:\n     bool AddKey(const CKey& key);\n-    bool AddMalleableKey(const CMalleableKey& mKey);\n+    bool AddMalleableKey(const CMalleableKeyView& keyView, const CSecret &vchSecretH);\n     bool GetMalleableKey(const CMalleableKeyView &keyView, CMalleableKey &mKey) const\n     {\n         {\n@@ -196,7 +196,6 @@ class CBasicKeyStore : public CKeyStore\n     void ListMalleableViews(std::list<CMalleableKeyView> &malleableViewList) const\n     {\n         malleableViewList.clear();\n-\n         {\n             LOCK(cs_KeyStore);\n             for (MalleableKeyMap::const_iterator mi = mapMalleableKeys.begin(); mi != mapMalleableKeys.end(); mi++)\n@@ -222,6 +221,7 @@ class CBasicKeyStore : public CKeyStore\n };\n \n typedef std::map<CKeyID, std::pair<CPubKey, std::vector<unsigned char> > > CryptedKeyMap;\n+typedef std::map<CMalleableKeyView, std::vector<unsigned char> > CryptedMalleableKeyMap;\n \n /** Keystore which keeps the private keys encrypted.\n  * It derives from the basic key store, which is used if no encryption is active.\n@@ -230,6 +230,7 @@ class CCryptoKeyStore : public CBasicKeyStore\n {\n private:\n     CryptedKeyMap mapCryptedKeys;\n+    CryptedMalleableKeyMap mapCryptedMalleableKeys;\n \n     CKeyingMaterial vMasterKey;\n \n@@ -269,7 +270,10 @@ class CCryptoKeyStore : public CBasicKeyStore\n     bool Lock();\n \n     virtual bool AddCryptedKey(const CPubKey &vchPubKey, const std::vector<unsigned char> &vchCryptedSecret);\n+    virtual bool AddCryptedMalleableKey(const CMalleableKeyView& keyView, const std::vector<unsigned char>  &vchCryptedSecretH);\n+\n     bool AddKey(const CKey& key);\n+    bool AddMalleableKey(const CMalleableKeyView& keyView, const CSecret &vchSecretH);\n     bool HaveKey(const CKeyID &address) const\n     {\n         {\n@@ -297,6 +301,73 @@ class CCryptoKeyStore : public CBasicKeyStore\n         }\n     }\n \n+    bool GetMalleableKey(const CMalleableKeyView &keyView, CMalleableKey &mKey) const;\n+\n+    bool CheckOwnership(const CPubKey &pubKeyVariant, const CPubKey &R) const\n+    {\n+        {\n+            LOCK(cs_KeyStore);\n+            if (!IsCrypted())\n+                return CBasicKeyStore::CheckOwnership(pubKeyVariant, R);\n+            for (CryptedMalleableKeyMap::const_iterator mi = mapCryptedMalleableKeys.begin(); mi != mapCryptedMalleableKeys.end(); mi++)\n+            {\n+                if (mi->first.CheckKeyVariant(R, pubKeyVariant))\n+                    return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    bool CheckOwnership(const CPubKey &pubKeyVariant, const CPubKey &R, CMalleableKeyView &view) const\n+    {\n+        {\n+            LOCK(cs_KeyStore);\n+            if (!IsCrypted())\n+                return CBasicKeyStore::CheckOwnership(pubKeyVariant, R, view);\n+            for (CryptedMalleableKeyMap::const_iterator mi = mapCryptedMalleableKeys.begin(); mi != mapCryptedMalleableKeys.end(); mi++)\n+            {\n+                if (mi->first.CheckKeyVariant(R, pubKeyVariant))\n+                {\n+                    view = mi->first;\n+                    return true;\n+                }\n+            }\n+        }\n+        return false;\n+    }\n+\n+    bool CreatePrivKey(const CPubKey &pubKeyVariant, const CPubKey &R, CKey &privKey) const;\n+\n+    void ListMalleableViews(std::list<CMalleableKeyView> &malleableViewList) const\n+    {\n+        malleableViewList.clear();\n+        {\n+            LOCK(cs_KeyStore);\n+            if (!IsCrypted())\n+                return CBasicKeyStore::ListMalleableViews(malleableViewList);\n+            for (CryptedMalleableKeyMap::const_iterator mi = mapCryptedMalleableKeys.begin(); mi != mapCryptedMalleableKeys.end(); mi++)\n+                malleableViewList.push_back(CMalleableKeyView(mi->first));\n+        }\n+    }\n+\n+    bool GetMalleableView(const CMalleablePubKey &mpk, CMalleableKeyView &view)\n+    {\n+        const CKeyID &mpkID = mpk.GetID();\n+        {\n+            LOCK(cs_KeyStore);\n+            if (!IsCrypted())\n+                return CBasicKeyStore::GetMalleableView(mpk, view);\n+            for (CryptedMalleableKeyMap::const_iterator mi = mapCryptedMalleableKeys.begin(); mi != mapCryptedMalleableKeys.end(); mi++)\n+                if (mi->first.GetID() == mpkID)\n+                {\n+                    view = CMalleableKeyView(mi->first);\n+                    return true;\n+                }\n+        }\n+\n+        return false;\n+    }\n+\n     /* Wallet status (encrypted, locked) changed.\n      * Note: Called without locks held.\n      */"
      },
      {
        "sha": "6a83604c7b4d049652c210edf1505c672a320841",
        "filename": "src/rpcdump.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/75d1689816053f249e432faffba9ded7199c2037/src/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/75d1689816053f249e432faffba9ded7199c2037/src/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcdump.cpp?ref=75d1689816053f249e432faffba9ded7199c2037",
        "patch": "@@ -39,6 +39,8 @@ Value importprivkey(const Array& params, bool fHelp)\n             \"importprivkey <novacoinprivkey> [label] [rescan=true]\\n\"\n             \"Adds a private key (as returned by dumpprivkey) to your wallet.\");\n \n+    EnsureWalletIsUnlocked();\n+\n     string strSecret = params[0].get_str();\n     string strLabel = \"\";\n     if (params.size() > 1)\n@@ -247,6 +249,8 @@ Value dumpmalleablekey(const Array& params, bool fHelp)\n             \"dumpmalleablekey <Key view>\\n\"\n             \"Dump the private and public key pairs, which correspond to provided key view.\\n\");\n \n+    EnsureWalletIsUnlocked();\n+\n     CMalleableKey mKey;\n     CMalleableKeyView keyView;\n     keyView.SetString(params[0].get_str());\n@@ -268,6 +272,9 @@ Value importmalleablekey(const Array& params, bool fHelp)\n             \"importmalleablekey <Key data>\\n\"\n             \"Imports the private key pair into your wallet.\\n\");\n \n+\n+    EnsureWalletIsUnlocked();\n+\n     CMalleableKey mKey;\n     bool fSuccess = mKey.SetString(params[0].get_str());\n "
      },
      {
        "sha": "c7206156474850450104ba1d2087019944f536d7",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 32,
        "deletions": 2,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/75d1689816053f249e432faffba9ded7199c2037/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/75d1689816053f249e432faffba9ded7199c2037/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=75d1689816053f249e432faffba9ded7199c2037",
        "patch": "@@ -94,12 +94,32 @@ bool CWallet::AddKey(const CKey& key)\n bool CWallet::AddMalleableKey(const CMalleableKey& mKey)\n {\n     CMalleableKeyView keyView = CMalleableKeyView(mKey);\n-    if (!CCryptoKeyStore::AddMalleableKey(mKey))\n+    CSecret vchSecretH = mKey.GetSecretH();\n+    if (!CCryptoKeyStore::AddMalleableKey(keyView, vchSecretH))\n         return false;\n     if (!fFileBacked)\n         return true;\n     if (!IsCrypted())\n-        return CWalletDB(strWalletFile).WriteMalleableKey(keyView, mKey, mapMalleableKeyMetadata[keyView]);\n+        return CWalletDB(strWalletFile).WriteMalleableKey(keyView, vchSecretH, mapMalleableKeyMetadata[keyView]);\n+    return true;\n+}\n+\n+bool CWallet::AddCryptedMalleableKey(const CMalleableKeyView& keyView, const std::vector<unsigned char> &vchCryptedSecretH)\n+{\n+    if (!CCryptoKeyStore::AddCryptedMalleableKey(keyView, vchCryptedSecretH))\n+        return false;\n+\n+    if (!fFileBacked)\n+        return true;\n+\n+    {\n+        LOCK(cs_wallet);\n+        if (pwalletdbEncryption)\n+            return pwalletdbEncryption->WriteCryptedMalleableKey(keyView, vchCryptedSecretH, mapMalleableKeyMetadata[keyView]);\n+        else\n+            return CWalletDB(strWalletFile).WriteCryptedMalleableKey(keyView, vchCryptedSecretH, mapMalleableKeyMetadata[keyView]);\n+    }\n+\n     return true;\n }\n \n@@ -460,6 +480,16 @@ bool CWallet::DecryptWallet(const SecureString& strWalletPassphrase)\n                 mi++;\n             }\n \n+            MalleableKeyMap::const_iterator mi2 = mapMalleableKeys.begin();\n+            while (mi2 != mapMalleableKeys.end())\n+            {\n+                const CSecret &vchSecretH = mi2->second;\n+                const CMalleableKeyView &keyView = mi2->first;\n+                pwalletdbDecryption->EraseCryptedMalleableKey(keyView);\n+                pwalletdbDecryption->WriteMalleableKey(keyView, vchSecretH, mapMalleableKeyMetadata[keyView]);\n+                mi2++;\n+            }\n+\n             // Erase master keys\n             MasterKeyMap::const_iterator mk = mapMasterKeys.begin();\n             while (mk != mapMasterKeys.end())"
      },
      {
        "sha": "d07aa7c6a397fcfd21e1f31f0410b373f437b79e",
        "filename": "src/wallet.h",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/75d1689816053f249e432faffba9ded7199c2037/src/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/75d1689816053f249e432faffba9ded7199c2037/src/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.h?ref=75d1689816053f249e432faffba9ded7199c2037",
        "patch": "@@ -161,12 +161,14 @@ class CWallet : public CCryptoKeyStore\n     bool LoadMalleableKeyMetadata(const CMalleableKeyView &keyView, const CKeyMetadata &metadata);\n \n     // Load malleable key without saving it to disk (used by LoadWallet)\n-    bool LoadMalleableKey(const CMalleableKey &mKey) { return CCryptoKeyStore::AddMalleableKey(mKey); }\n+    bool LoadMalleableKey(const CMalleableKeyView &keyView, const CSecret &vchSecretH) { return CCryptoKeyStore::AddMalleableKey(keyView, vchSecretH); }\n+    bool LoadCryptedMalleableKey(const CMalleableKeyView &keyView, const std::vector<unsigned char> &vchCryptedSecretH) { return CCryptoKeyStore::AddCryptedMalleableKey(keyView, vchCryptedSecretH); }\n \n     bool LoadMinVersion(int nVersion) { nWalletVersion = nVersion; nWalletMaxVersion = std::max(nWalletMaxVersion, nVersion); return true; }\n \n     // Adds an encrypted key to the store, and saves it to disk.\n     bool AddCryptedKey(const CPubKey &vchPubKey, const std::vector<unsigned char> &vchCryptedSecret);\n+    bool AddCryptedMalleableKey(const CMalleableKeyView& keyView, const std::vector<unsigned char> &vchCryptedSecretH);\n     // Adds an encrypted key to the store, without saving it to disk (used by LoadWallet)\n     bool LoadCryptedKey(const CPubKey &vchPubKey, const std::vector<unsigned char> &vchCryptedSecret) { SetMinVersion(FEATURE_WALLETCRYPT); return CCryptoKeyStore::AddCryptedKey(vchPubKey, vchCryptedSecret); }\n     bool AddCScript(const CScript& redeemScript);"
      },
      {
        "sha": "a072f18783d872a5154c351802022e26ad7744e0",
        "filename": "src/walletdb.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 16,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/75d1689816053f249e432faffba9ded7199c2037/src/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/75d1689816053f249e432faffba9ded7199c2037/src/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/walletdb.cpp?ref=75d1689816053f249e432faffba9ded7199c2037",
        "patch": "@@ -304,31 +304,31 @@ ReadKeyValue(CWallet* pwallet, CDataStream& ssKey, CDataStream& ssValue,\n         }\n         else if (strType == \"malpair\")\n         {\n-            string strKey, strKeyView;\n+            string strKeyView;\n \n             CSecret vchSecret;\n-            CMalleableKeyView keyView;\n-\n             ssKey >> strKeyView;\n-            keyView.SetString(strKeyView);\n             ssValue >> vchSecret;\n \n-            CMalleableKey mKey = keyView.GetMalleableKey(vchSecret);\n-\n-            if (mKey.IsNull())\n-            {\n-                strErr = \"Error reading wallet database: CMalleableKey is corrupt\";\n-                return false;\n-            }\n-            if (mKey.GetID() != keyView.GetID())\n+            CMalleableKeyView keyView(strKeyView);\n+            if (!pwallet->LoadMalleableKey(keyView, vchSecret))\n             {\n-                strErr = \"Error reading wallet database: CMalleableKey view inconsistency\";\n+                strErr = \"Error reading wallet database: LoadMalleableKey failed\";\n                 return false;\n             }\n+        }\n+        else if (strType == \"malcpair\")\n+        {\n+            string strKeyView;\n \n-            if (!pwallet->LoadMalleableKey(mKey))\n+            std::vector<unsigned char> vchCryptedSecret;\n+            ssKey >> strKeyView;\n+            ssValue >> vchCryptedSecret;\n+\n+            CMalleableKeyView keyView(strKeyView);\n+            if (!pwallet->LoadCryptedMalleableKey(keyView, vchCryptedSecret))\n             {\n-                strErr = \"Error reading wallet database: LoadMalleableKey failed\";\n+                strErr = \"Error reading wallet database: LoadCryptedMalleableKey failed\";\n                 return false;\n             }\n         }\n@@ -497,7 +497,7 @@ ReadKeyValue(CWallet* pwallet, CDataStream& ssKey, CDataStream& ssValue,\n static bool IsKeyType(string strType)\n {\n     return (strType== \"key\" || strType == \"wkey\" ||\n-            strType == \"mkey\" || strType == \"ckey\" || strType == \"malpair\");\n+            strType == \"mkey\" || strType == \"ckey\" || strType == \"malpair\" || strType == \"malcpair\");\n }\n \n DBErrors CWalletDB::LoadWallet(CWallet* pwallet)"
      },
      {
        "sha": "94b355f9256bc0cbf12e75d266baf10e79595198",
        "filename": "src/walletdb.h",
        "status": "modified",
        "additions": 21,
        "deletions": 2,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/75d1689816053f249e432faffba9ded7199c2037/src/walletdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/75d1689816053f249e432faffba9ded7199c2037/src/walletdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/walletdb.h?ref=75d1689816053f249e432faffba9ded7199c2037",
        "patch": "@@ -95,18 +95,32 @@ class CWalletDB : public CDB\n         return true;\n     }\n \n-    bool WriteMalleableKey(const CMalleableKeyView& keyView, const CMalleableKey& malleableKey, const CKeyMetadata &keyMeta)\n+    bool WriteMalleableKey(const CMalleableKeyView& keyView, const CSecret& vchSecretH, const CKeyMetadata &keyMeta)\n     {\n         nWalletDBUpdated++;\n         if(!Write(std::make_pair(std::string(\"malmeta\"), keyView.ToString()), keyMeta))\n             return false;\n \n-        if(!Write(std::make_pair(std::string(\"malpair\"), keyView.ToString()), malleableKey.GetSecretH(), false))\n+        if(!Write(std::make_pair(std::string(\"malpair\"), keyView.ToString()), vchSecretH, false))\n             return false;\n \n         return true;\n     }\n \n+    bool WriteCryptedMalleableKey(const CMalleableKeyView& keyView, const std::vector<unsigned char>& vchCryptedSecretH, const CKeyMetadata &keyMeta)\n+    {\n+        nWalletDBUpdated++;\n+        if(!Write(std::make_pair(std::string(\"malmeta\"), keyView.ToString()), keyMeta))\n+            return false;\n+\n+        if(!Write(std::make_pair(std::string(\"malcpair\"), keyView.ToString()), vchCryptedSecretH, false))\n+            return false;\n+\n+        Erase(std::make_pair(std::string(\"malpair\"), keyView.ToString()));\n+\n+        return true;\n+    }\n+\n \n     bool WriteCryptedKey(const CPubKey& vchPubKey, const std::vector<unsigned char>& vchCryptedSecret, const CKeyMetadata &keyMeta)\n     {\n@@ -143,6 +157,11 @@ class CWalletDB : public CDB\n         return Erase(std::make_pair(std::string(\"ckey\"), vchPubKey.Raw()));\n     }\n \n+    bool EraseCryptedMalleableKey(const CMalleableKeyView& keyView)\n+    {\n+        return Erase(std::make_pair(std::string(\"malcpair\"), keyView.ToString()));\n+    }\n+\n     bool WriteCScript(const uint160& hash, const CScript& redeemScript)\n     {\n         nWalletDBUpdated++;"
      }
    ]
  },
  {
    "sha": "17026a81cbe8ee59bec74cb1e421fe0f5979e702",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxNzAyNmE4MWNiZThlZTU5YmVjNzRjYjFlNDIxZmUwZjU5NzllNzAy",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-05T17:45:37Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-05T17:45:37Z"
      },
      "message": "Merge branch 'patch' of ssh://github.com/svost/novacoin into svost-patch",
      "tree": {
        "sha": "083de4ff2aa757d1594545c6d173cfb45d467b73",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/083de4ff2aa757d1594545c6d173cfb45d467b73"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/17026a81cbe8ee59bec74cb1e421fe0f5979e702",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/17026a81cbe8ee59bec74cb1e421fe0f5979e702",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/17026a81cbe8ee59bec74cb1e421fe0f5979e702",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/17026a81cbe8ee59bec74cb1e421fe0f5979e702/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "75d1689816053f249e432faffba9ded7199c2037",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/75d1689816053f249e432faffba9ded7199c2037",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/75d1689816053f249e432faffba9ded7199c2037"
      },
      {
        "sha": "07795bdb375852bf2a87e306eae34af862d72c4c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/07795bdb375852bf2a87e306eae34af862d72c4c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/07795bdb375852bf2a87e306eae34af862d72c4c"
      }
    ],
    "stats": {
      "total": 68,
      "additions": 32,
      "deletions": 36
    },
    "files": [
      {
        "sha": "c3dea572006c454184dcc51886b85d44cf41c1c8",
        "filename": "src/key.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17026a81cbe8ee59bec74cb1e421fe0f5979e702/src/key.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17026a81cbe8ee59bec74cb1e421fe0f5979e702/src/key.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.h?ref=17026a81cbe8ee59bec74cb1e421fe0f5979e702",
        "patch": "@@ -203,7 +203,7 @@ class CPoint\n     // Calculate G*m + q\n     bool ECMULGEN(const CBigNum &bnMultiplier, const CPoint &qPoint);\n \n-    bool IsInfinity() { return EC_POINT_is_at_infinity(group, point); }\n+    bool IsInfinity() { return EC_POINT_is_at_infinity(group, point) != 0; }\n };\n \n class CMalleablePubKey"
      },
      {
        "sha": "3ab03f2686f2215a1c6f97474eac0a8d38bc9abb",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17026a81cbe8ee59bec74cb1e421fe0f5979e702/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17026a81cbe8ee59bec74cb1e421fe0f5979e702/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=17026a81cbe8ee59bec74cb1e421fe0f5979e702",
        "patch": "@@ -2347,9 +2347,9 @@ bool CBlock::AcceptBlock()\n         return DoS(100, error(\"AcceptBlock() : incorrect %s\", IsProofOfWork() ? \"proof-of-work\" : \"proof-of-stake\"));\n \n     int64_t nMedianTimePast = pindexPrev->GetMedianTimePast();\n-    int nMaxOffset = 12 * 3600; // 12 hours\n+    int nMaxOffset = 12 * nOneHour; // 12 hours\n     if (fTestNet || pindexPrev->nTime < 1450569600)\n-        nMaxOffset = 7 * 86400; // One week (permanently on testNet or until 20 Dec, 2015 on mainNet)\n+        nMaxOffset = 7 * nOneWeek; // One week (permanently on testNet or until 20 Dec, 2015 on mainNet)\n \n     // Check timestamp against prev\n     if (GetBlockTime() <= nMedianTimePast || FutureDrift(GetBlockTime()) < pindexPrev->GetBlockTime())"
      },
      {
        "sha": "756e5cb5f3a9b1b3e89c0ac22abd08937a7faf8e",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17026a81cbe8ee59bec74cb1e421fe0f5979e702/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17026a81cbe8ee59bec74cb1e421fe0f5979e702/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=17026a81cbe8ee59bec74cb1e421fe0f5979e702",
        "patch": "@@ -1181,7 +1181,6 @@ void ThreadOpenConnections2(void* parg)\n                 // it'll get a pile of addresses with newer timestamps.\n                 // Seed nodes are given a random 'last seen time' of between one and two\n                 // weeks ago.\n-                const int64_t nOneWeek = 7*24*60*60;\n                 struct in_addr ip;\n                 memcpy(&ip, &pnSeed[i], sizeof(ip));\n                 CAddress addr(CService(ip, GetDefaultPort()));\n@@ -1197,7 +1196,6 @@ void ThreadOpenConnections2(void* parg)\n             std::vector<CAddress> vAdd;\n             for (unsigned int i = 0; i < ARRAYLEN(pchTorSeed); i++)\n             {\n-                const int64_t nOneWeek = 7*24*60*60;\n                 CAddress addr(CService(pchTorSeed[i], GetDefaultPort()));\n                 addr.nTime = GetTime()-GetRand(nOneWeek)-nOneWeek;\n                 vAdd.push_back(addr);"
      },
      {
        "sha": "4699abf975be4ddb9e01cb0337c22e078c34a473",
        "filename": "src/netbase.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 6,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17026a81cbe8ee59bec74cb1e421fe0f5979e702/src/netbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17026a81cbe8ee59bec74cb1e421fe0f5979e702/src/netbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.cpp?ref=17026a81cbe8ee59bec74cb1e421fe0f5979e702",
        "patch": "@@ -221,11 +221,9 @@ bool static Socks5(string strDest, uint16_t port, SOCKET& hSocket)\n         CloseSocket(hSocket);\n         return error(\"Hostname too long\");\n     }\n-    char pszSocks5Init[] = \"\\5\\1\\0\";\n-    ssize_t nSize = sizeof(pszSocks5Init) - 1;\n-\n-    ssize_t ret = send(hSocket, pszSocks5Init, nSize, MSG_NOSIGNAL);\n-    if (ret != nSize)\n+    const char pszSocks5Init[] = \"\\5\\1\\0\";\n+        ssize_t ret = send(hSocket, pszSocks5Init, 3, MSG_NOSIGNAL);\n+    if (ret != 3)\n     {\n         CloseSocket(hSocket);\n         return error(\"Error sending to proxy\");\n@@ -1193,4 +1191,4 @@ bool CloseSocket(SOCKET& hSocket)\n #endif\n     hSocket = INVALID_SOCKET;\n     return ret != SOCKET_ERROR;\n-}\n\\ No newline at end of file\n+}"
      },
      {
        "sha": "00b05253c656ac97f270fb3cf96513d5b0919699",
        "filename": "src/script.h",
        "status": "modified",
        "additions": 20,
        "deletions": 20,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17026a81cbe8ee59bec74cb1e421fe0f5979e702/src/script.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17026a81cbe8ee59bec74cb1e421fe0f5979e702/src/script.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script.h?ref=17026a81cbe8ee59bec74cb1e421fe0f5979e702",
        "patch": "@@ -19,28 +19,28 @@ class CTransaction;\n \n static const unsigned int MAX_SCRIPT_ELEMENT_SIZE = 520; // bytes\n \n-/* Setting nSequence to this value for every input in a transaction\n- * disables nLockTime. */\n+// Setting nSequence to this value for every input in a transaction\n+// disables nLockTime.\n static const uint32_t SEQUENCE_FINAL = 0xffffffff;\n \n-/* Threshold for inverted nSequence: below this value it is interpreted\n- * as a relative lock-time, otherwise ignored. */\n-static const uint32_t SEQUENCE_THRESHOLD = (1 << 31);\n+// Threshold for inverted nSequence: below this value it is interpreted\n+// as a relative lock-time, otherwise ignored.\n+//static const uint32_t SEQUENCE_THRESHOLD = 0x80000000;\n \n-/* If this flag set, CTxIn::nSequence is NOT interpreted as a\n- * relative lock-time. */\n-static const uint32_t SEQUENCE_LOCKTIME_DISABLE_FLAG = (1 << 31);\n+// If this flag set, CTxIn::nSequence is NOT interpreted as a\n+// relative lock-time.\n+static const uint32_t SEQUENCE_LOCKTIME_DISABLE_FLAG = 0x80000000;\n \n-/* If CTxIn::nSequence encodes a relative lock-time and this flag\n- * is set, the relative lock-time has units of 512 seconds,\n- * otherwise it specifies blocks with a granularity of 1. */\n-static const uint32_t SEQUENCE_LOCKTIME_TYPE_FLAG = (1 << 22);\n+// If CTxIn::nSequence encodes a relative lock-time and this flag\n+// is set, the relative lock-time has units of 512 seconds,\n+// otherwise it specifies blocks with a granularity of 1.\n+static const uint32_t SEQUENCE_LOCKTIME_TYPE_FLAG = 0x00400000;\n \n-/* If CTxIn::nSequence encodes a relative lock-time, this mask is\n- * applied to extract that lock-time from the sequence field. */\n+// If CTxIn::nSequence encodes a relative lock-time, this mask is\n+// applied to extract that lock-time from the sequence field.\n static const uint32_t SEQUENCE_LOCKTIME_MASK = 0x0000ffff;\n \n-/** IsMine() return codes */\n+// IsMine() return codes\n enum isminetype\n {\n     MINE_NO = 0,\n@@ -51,7 +51,7 @@ enum isminetype\n \n typedef uint8_t isminefilter;\n \n-/** Signature hash types/flags */\n+// Signature hash types/flags\n enum\n {\n     SIGHASH_ALL = 1,\n@@ -60,15 +60,15 @@ enum\n     SIGHASH_ANYONECANPAY = 0x80\n };\n \n-/** Script verification flags */\n+// Script verification flags\n enum\n {\n     SCRIPT_VERIFY_NONE      = 0,\n     SCRIPT_VERIFY_P2SH      = (1U << 0), // evaluate P2SH (BIP16) subscripts\n     SCRIPT_VERIFY_STRICTENC = (1U << 1), // enforce strict conformance to DER and SEC2 for signatures and pubkeys\n     SCRIPT_VERIFY_LOW_S     = (1U << 2), // enforce low S values in signatures (depends on STRICTENC)\n     SCRIPT_VERIFY_NOCACHE   = (1U << 3), // do not store results in signature cache (but do query it)\n-    SCRIPT_VERIFY_NULLDUMMY = (1U << 4),  // verify dummy stack item consumed by CHECKMULTISIG is of zero-length\n+    SCRIPT_VERIFY_NULLDUMMY = (1U << 4), // verify dummy stack item consumed by CHECKMULTISIG is of zero-length\n     SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY = (1U << 9),\n     SCRIPT_VERIFY_CHECKSEQUENCEVERIFY = (1U << 10)\n };\n@@ -108,7 +108,7 @@ enum txnouttype\n \n const char* GetTxnOutputType(txnouttype t);\n \n-/** Script opcodes */\n+// Script opcodes\n enum opcodetype\n {\n     // push value\n@@ -276,7 +276,7 @@ inline std::string StackString(const std::vector<std::vector<unsigned char> >& v\n     return str;\n }\n \n-/** Serialized script, used inside transaction inputs and outputs */\n+// Serialized script, used inside transaction inputs and outputs\n class CScript : public std::vector<uint8_t>\n {\n protected:"
      },
      {
        "sha": "a3848fd38432081e01ee399f1e59131e42af13d7",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17026a81cbe8ee59bec74cb1e421fe0f5979e702/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17026a81cbe8ee59bec74cb1e421fe0f5979e702/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=17026a81cbe8ee59bec74cb1e421fe0f5979e702",
        "patch": "@@ -408,16 +408,16 @@ string FormatMoney(int64_t n, bool fPlus)\n     string str = strprintf(\"%\" PRId64 \".%06\" PRId64, quotient, remainder);\n \n     // Right-trim excess zeros before the decimal point:\n-    int nTrim = 0;\n+    size_t nTrim = 0;\n     for (size_t i = str.size()-1; (str[i] == '0' && isdigit(str[i-2])); --i)\n         ++nTrim;\n     if (nTrim)\n         str.erase(str.size()-nTrim, nTrim);\n \n     if (n < 0)\n-        str.insert((unsigned int)0, 1, '-');\n+        str.insert(0u, 1, '-');\n     else if (fPlus && n > 0)\n-        str.insert((unsigned int)0, 1, '+');\n+        str.insert(0u, 1, '+');\n     return str;\n }\n \n@@ -1500,4 +1500,4 @@ std::string DateTimeStrFormat(const char* pszFormat, int64_t nTime)\n     ss.imbue(loc);\n     ss << boost::posix_time::from_time_t(nTime);\n     return ss.str();\n-}\n\\ No newline at end of file\n+}"
      },
      {
        "sha": "c8ae742501963c6ad872089ea97e1e3ec89c6938",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17026a81cbe8ee59bec74cb1e421fe0f5979e702/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17026a81cbe8ee59bec74cb1e421fe0f5979e702/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=17026a81cbe8ee59bec74cb1e421fe0f5979e702",
        "patch": "@@ -37,6 +37,7 @@\n \n static const int32_t nOneHour = 60 * 60;\n static const int32_t nOneDay = 24 * 60 * 60;\n+static const int64_t nOneWeek = 7 * 24 * 60 * 60;\n \n static const int64_t COIN = 1000000;\n static const int64_t CENT = 10000;"
      },
      {
        "sha": "ee601ca4aeba6d4053c69ab4aa1bc6217f0535ce",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17026a81cbe8ee59bec74cb1e421fe0f5979e702/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17026a81cbe8ee59bec74cb1e421fe0f5979e702/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=17026a81cbe8ee59bec74cb1e421fe0f5979e702",
        "patch": "@@ -2121,7 +2121,6 @@ bool CWallet::CommitTransaction(CWalletTx& wtxNew, CReserveKey& reservekey)\n             AddToWallet(wtxNew);\n \n             // Mark old coins as spent\n-            set<CWalletTx*> setCoins;\n             BOOST_FOREACH(const CTxIn& txin, wtxNew.vin)\n             {\n                 CWalletTx &coin = mapWallet[txin.prevout.hash];"
      }
    ]
  },
  {
    "sha": "72ded6ae92f8f6fc8e2a1b57a6fdfbdd1d3dadbe",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3MmRlZDZhZTkyZjhmNmZjOGUyYTFiNTdhNmZkZmJkZDFkM2RhZGJl",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-05T17:46:14Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-05T17:46:14Z"
      },
      "message": "Merge branch 'svost-patch'",
      "tree": {
        "sha": "083de4ff2aa757d1594545c6d173cfb45d467b73",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/083de4ff2aa757d1594545c6d173cfb45d467b73"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/72ded6ae92f8f6fc8e2a1b57a6fdfbdd1d3dadbe",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/72ded6ae92f8f6fc8e2a1b57a6fdfbdd1d3dadbe",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/72ded6ae92f8f6fc8e2a1b57a6fdfbdd1d3dadbe",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/72ded6ae92f8f6fc8e2a1b57a6fdfbdd1d3dadbe/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "75d1689816053f249e432faffba9ded7199c2037",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/75d1689816053f249e432faffba9ded7199c2037",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/75d1689816053f249e432faffba9ded7199c2037"
      },
      {
        "sha": "17026a81cbe8ee59bec74cb1e421fe0f5979e702",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/17026a81cbe8ee59bec74cb1e421fe0f5979e702",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/17026a81cbe8ee59bec74cb1e421fe0f5979e702"
      }
    ],
    "stats": {
      "total": 68,
      "additions": 32,
      "deletions": 36
    },
    "files": [
      {
        "sha": "c3dea572006c454184dcc51886b85d44cf41c1c8",
        "filename": "src/key.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/72ded6ae92f8f6fc8e2a1b57a6fdfbdd1d3dadbe/src/key.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/72ded6ae92f8f6fc8e2a1b57a6fdfbdd1d3dadbe/src/key.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.h?ref=72ded6ae92f8f6fc8e2a1b57a6fdfbdd1d3dadbe",
        "patch": "@@ -203,7 +203,7 @@ class CPoint\n     // Calculate G*m + q\n     bool ECMULGEN(const CBigNum &bnMultiplier, const CPoint &qPoint);\n \n-    bool IsInfinity() { return EC_POINT_is_at_infinity(group, point); }\n+    bool IsInfinity() { return EC_POINT_is_at_infinity(group, point) != 0; }\n };\n \n class CMalleablePubKey"
      },
      {
        "sha": "3ab03f2686f2215a1c6f97474eac0a8d38bc9abb",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/72ded6ae92f8f6fc8e2a1b57a6fdfbdd1d3dadbe/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/72ded6ae92f8f6fc8e2a1b57a6fdfbdd1d3dadbe/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=72ded6ae92f8f6fc8e2a1b57a6fdfbdd1d3dadbe",
        "patch": "@@ -2347,9 +2347,9 @@ bool CBlock::AcceptBlock()\n         return DoS(100, error(\"AcceptBlock() : incorrect %s\", IsProofOfWork() ? \"proof-of-work\" : \"proof-of-stake\"));\n \n     int64_t nMedianTimePast = pindexPrev->GetMedianTimePast();\n-    int nMaxOffset = 12 * 3600; // 12 hours\n+    int nMaxOffset = 12 * nOneHour; // 12 hours\n     if (fTestNet || pindexPrev->nTime < 1450569600)\n-        nMaxOffset = 7 * 86400; // One week (permanently on testNet or until 20 Dec, 2015 on mainNet)\n+        nMaxOffset = 7 * nOneWeek; // One week (permanently on testNet or until 20 Dec, 2015 on mainNet)\n \n     // Check timestamp against prev\n     if (GetBlockTime() <= nMedianTimePast || FutureDrift(GetBlockTime()) < pindexPrev->GetBlockTime())"
      },
      {
        "sha": "756e5cb5f3a9b1b3e89c0ac22abd08937a7faf8e",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/72ded6ae92f8f6fc8e2a1b57a6fdfbdd1d3dadbe/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/72ded6ae92f8f6fc8e2a1b57a6fdfbdd1d3dadbe/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=72ded6ae92f8f6fc8e2a1b57a6fdfbdd1d3dadbe",
        "patch": "@@ -1181,7 +1181,6 @@ void ThreadOpenConnections2(void* parg)\n                 // it'll get a pile of addresses with newer timestamps.\n                 // Seed nodes are given a random 'last seen time' of between one and two\n                 // weeks ago.\n-                const int64_t nOneWeek = 7*24*60*60;\n                 struct in_addr ip;\n                 memcpy(&ip, &pnSeed[i], sizeof(ip));\n                 CAddress addr(CService(ip, GetDefaultPort()));\n@@ -1197,7 +1196,6 @@ void ThreadOpenConnections2(void* parg)\n             std::vector<CAddress> vAdd;\n             for (unsigned int i = 0; i < ARRAYLEN(pchTorSeed); i++)\n             {\n-                const int64_t nOneWeek = 7*24*60*60;\n                 CAddress addr(CService(pchTorSeed[i], GetDefaultPort()));\n                 addr.nTime = GetTime()-GetRand(nOneWeek)-nOneWeek;\n                 vAdd.push_back(addr);"
      },
      {
        "sha": "4699abf975be4ddb9e01cb0337c22e078c34a473",
        "filename": "src/netbase.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 6,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/72ded6ae92f8f6fc8e2a1b57a6fdfbdd1d3dadbe/src/netbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/72ded6ae92f8f6fc8e2a1b57a6fdfbdd1d3dadbe/src/netbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.cpp?ref=72ded6ae92f8f6fc8e2a1b57a6fdfbdd1d3dadbe",
        "patch": "@@ -221,11 +221,9 @@ bool static Socks5(string strDest, uint16_t port, SOCKET& hSocket)\n         CloseSocket(hSocket);\n         return error(\"Hostname too long\");\n     }\n-    char pszSocks5Init[] = \"\\5\\1\\0\";\n-    ssize_t nSize = sizeof(pszSocks5Init) - 1;\n-\n-    ssize_t ret = send(hSocket, pszSocks5Init, nSize, MSG_NOSIGNAL);\n-    if (ret != nSize)\n+    const char pszSocks5Init[] = \"\\5\\1\\0\";\n+        ssize_t ret = send(hSocket, pszSocks5Init, 3, MSG_NOSIGNAL);\n+    if (ret != 3)\n     {\n         CloseSocket(hSocket);\n         return error(\"Error sending to proxy\");\n@@ -1193,4 +1191,4 @@ bool CloseSocket(SOCKET& hSocket)\n #endif\n     hSocket = INVALID_SOCKET;\n     return ret != SOCKET_ERROR;\n-}\n\\ No newline at end of file\n+}"
      },
      {
        "sha": "00b05253c656ac97f270fb3cf96513d5b0919699",
        "filename": "src/script.h",
        "status": "modified",
        "additions": 20,
        "deletions": 20,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/72ded6ae92f8f6fc8e2a1b57a6fdfbdd1d3dadbe/src/script.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/72ded6ae92f8f6fc8e2a1b57a6fdfbdd1d3dadbe/src/script.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script.h?ref=72ded6ae92f8f6fc8e2a1b57a6fdfbdd1d3dadbe",
        "patch": "@@ -19,28 +19,28 @@ class CTransaction;\n \n static const unsigned int MAX_SCRIPT_ELEMENT_SIZE = 520; // bytes\n \n-/* Setting nSequence to this value for every input in a transaction\n- * disables nLockTime. */\n+// Setting nSequence to this value for every input in a transaction\n+// disables nLockTime.\n static const uint32_t SEQUENCE_FINAL = 0xffffffff;\n \n-/* Threshold for inverted nSequence: below this value it is interpreted\n- * as a relative lock-time, otherwise ignored. */\n-static const uint32_t SEQUENCE_THRESHOLD = (1 << 31);\n+// Threshold for inverted nSequence: below this value it is interpreted\n+// as a relative lock-time, otherwise ignored.\n+//static const uint32_t SEQUENCE_THRESHOLD = 0x80000000;\n \n-/* If this flag set, CTxIn::nSequence is NOT interpreted as a\n- * relative lock-time. */\n-static const uint32_t SEQUENCE_LOCKTIME_DISABLE_FLAG = (1 << 31);\n+// If this flag set, CTxIn::nSequence is NOT interpreted as a\n+// relative lock-time.\n+static const uint32_t SEQUENCE_LOCKTIME_DISABLE_FLAG = 0x80000000;\n \n-/* If CTxIn::nSequence encodes a relative lock-time and this flag\n- * is set, the relative lock-time has units of 512 seconds,\n- * otherwise it specifies blocks with a granularity of 1. */\n-static const uint32_t SEQUENCE_LOCKTIME_TYPE_FLAG = (1 << 22);\n+// If CTxIn::nSequence encodes a relative lock-time and this flag\n+// is set, the relative lock-time has units of 512 seconds,\n+// otherwise it specifies blocks with a granularity of 1.\n+static const uint32_t SEQUENCE_LOCKTIME_TYPE_FLAG = 0x00400000;\n \n-/* If CTxIn::nSequence encodes a relative lock-time, this mask is\n- * applied to extract that lock-time from the sequence field. */\n+// If CTxIn::nSequence encodes a relative lock-time, this mask is\n+// applied to extract that lock-time from the sequence field.\n static const uint32_t SEQUENCE_LOCKTIME_MASK = 0x0000ffff;\n \n-/** IsMine() return codes */\n+// IsMine() return codes\n enum isminetype\n {\n     MINE_NO = 0,\n@@ -51,7 +51,7 @@ enum isminetype\n \n typedef uint8_t isminefilter;\n \n-/** Signature hash types/flags */\n+// Signature hash types/flags\n enum\n {\n     SIGHASH_ALL = 1,\n@@ -60,15 +60,15 @@ enum\n     SIGHASH_ANYONECANPAY = 0x80\n };\n \n-/** Script verification flags */\n+// Script verification flags\n enum\n {\n     SCRIPT_VERIFY_NONE      = 0,\n     SCRIPT_VERIFY_P2SH      = (1U << 0), // evaluate P2SH (BIP16) subscripts\n     SCRIPT_VERIFY_STRICTENC = (1U << 1), // enforce strict conformance to DER and SEC2 for signatures and pubkeys\n     SCRIPT_VERIFY_LOW_S     = (1U << 2), // enforce low S values in signatures (depends on STRICTENC)\n     SCRIPT_VERIFY_NOCACHE   = (1U << 3), // do not store results in signature cache (but do query it)\n-    SCRIPT_VERIFY_NULLDUMMY = (1U << 4),  // verify dummy stack item consumed by CHECKMULTISIG is of zero-length\n+    SCRIPT_VERIFY_NULLDUMMY = (1U << 4), // verify dummy stack item consumed by CHECKMULTISIG is of zero-length\n     SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY = (1U << 9),\n     SCRIPT_VERIFY_CHECKSEQUENCEVERIFY = (1U << 10)\n };\n@@ -108,7 +108,7 @@ enum txnouttype\n \n const char* GetTxnOutputType(txnouttype t);\n \n-/** Script opcodes */\n+// Script opcodes\n enum opcodetype\n {\n     // push value\n@@ -276,7 +276,7 @@ inline std::string StackString(const std::vector<std::vector<unsigned char> >& v\n     return str;\n }\n \n-/** Serialized script, used inside transaction inputs and outputs */\n+// Serialized script, used inside transaction inputs and outputs\n class CScript : public std::vector<uint8_t>\n {\n protected:"
      },
      {
        "sha": "a3848fd38432081e01ee399f1e59131e42af13d7",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/72ded6ae92f8f6fc8e2a1b57a6fdfbdd1d3dadbe/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/72ded6ae92f8f6fc8e2a1b57a6fdfbdd1d3dadbe/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=72ded6ae92f8f6fc8e2a1b57a6fdfbdd1d3dadbe",
        "patch": "@@ -408,16 +408,16 @@ string FormatMoney(int64_t n, bool fPlus)\n     string str = strprintf(\"%\" PRId64 \".%06\" PRId64, quotient, remainder);\n \n     // Right-trim excess zeros before the decimal point:\n-    int nTrim = 0;\n+    size_t nTrim = 0;\n     for (size_t i = str.size()-1; (str[i] == '0' && isdigit(str[i-2])); --i)\n         ++nTrim;\n     if (nTrim)\n         str.erase(str.size()-nTrim, nTrim);\n \n     if (n < 0)\n-        str.insert((unsigned int)0, 1, '-');\n+        str.insert(0u, 1, '-');\n     else if (fPlus && n > 0)\n-        str.insert((unsigned int)0, 1, '+');\n+        str.insert(0u, 1, '+');\n     return str;\n }\n \n@@ -1500,4 +1500,4 @@ std::string DateTimeStrFormat(const char* pszFormat, int64_t nTime)\n     ss.imbue(loc);\n     ss << boost::posix_time::from_time_t(nTime);\n     return ss.str();\n-}\n\\ No newline at end of file\n+}"
      },
      {
        "sha": "c8ae742501963c6ad872089ea97e1e3ec89c6938",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/72ded6ae92f8f6fc8e2a1b57a6fdfbdd1d3dadbe/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/72ded6ae92f8f6fc8e2a1b57a6fdfbdd1d3dadbe/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=72ded6ae92f8f6fc8e2a1b57a6fdfbdd1d3dadbe",
        "patch": "@@ -37,6 +37,7 @@\n \n static const int32_t nOneHour = 60 * 60;\n static const int32_t nOneDay = 24 * 60 * 60;\n+static const int64_t nOneWeek = 7 * 24 * 60 * 60;\n \n static const int64_t COIN = 1000000;\n static const int64_t CENT = 10000;"
      },
      {
        "sha": "ee601ca4aeba6d4053c69ab4aa1bc6217f0535ce",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/72ded6ae92f8f6fc8e2a1b57a6fdfbdd1d3dadbe/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/72ded6ae92f8f6fc8e2a1b57a6fdfbdd1d3dadbe/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=72ded6ae92f8f6fc8e2a1b57a6fdfbdd1d3dadbe",
        "patch": "@@ -2121,7 +2121,6 @@ bool CWallet::CommitTransaction(CWalletTx& wtxNew, CReserveKey& reservekey)\n             AddToWallet(wtxNew);\n \n             // Mark old coins as spent\n-            set<CWalletTx*> setCoins;\n             BOOST_FOREACH(const CTxIn& txin, wtxNew.vin)\n             {\n                 CWalletTx &coin = mapWallet[txin.prevout.hash];"
      }
    ]
  },
  {
    "sha": "ecc21b2723d50ad420f6600977f570e20172f512",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplY2MyMWIyNzIzZDUwYWQ0MjBmNjYwMDk3N2Y1NzBlMjAxNzJmNTEy",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-05T20:43:40Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-05T20:43:40Z"
      },
      "message": "Malleable keys: remove version byte",
      "tree": {
        "sha": "b9200a39f70865d31f964ae643cb784f60dccd78",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b9200a39f70865d31f964ae643cb784f60dccd78"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ecc21b2723d50ad420f6600977f570e20172f512",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ecc21b2723d50ad420f6600977f570e20172f512",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ecc21b2723d50ad420f6600977f570e20172f512",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ecc21b2723d50ad420f6600977f570e20172f512/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "72ded6ae92f8f6fc8e2a1b57a6fdfbdd1d3dadbe",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/72ded6ae92f8f6fc8e2a1b57a6fdfbdd1d3dadbe",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/72ded6ae92f8f6fc8e2a1b57a6fdfbdd1d3dadbe"
      }
    ],
    "stats": {
      "total": 87,
      "additions": 37,
      "deletions": 50
    },
    "files": [
      {
        "sha": "b1db7cbf0e6a6f313ce1509a6d659f4640412bba",
        "filename": "src/key.cpp",
        "status": "modified",
        "additions": 28,
        "deletions": 25,
        "changes": 53,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ecc21b2723d50ad420f6600977f570e20172f512/src/key.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ecc21b2723d50ad420f6600977f570e20172f512/src/key.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.cpp?ref=ecc21b2723d50ad420f6600977f570e20172f512",
        "patch": "@@ -198,6 +198,14 @@ CKey::CKey(const CKey& b)\n     fCompressedPubKey = b.fCompressedPubKey;\n }\n \n+CKey::CKey(const CSecret& b, bool fCompressed)\n+{\n+    pkey = EC_KEY_new_by_curve_name(NID_secp256k1);\n+    if (pkey == NULL)\n+        throw key_error(\"CKey::CKey(const CKey&) : EC_KEY_dup failed\");\n+    SetSecret(b, fCompressed);\n+}\n+\n CKey& CKey::operator=(const CKey& b)\n {\n     if (!EC_KEY_copy(pkey, b.pkey))\n@@ -323,6 +331,12 @@ CSecret CKey::GetSecret(bool &fCompressed) const\n     return vchRet;\n }\n \n+CSecret CKey::GetSecret() const\n+{\n+    bool fCompressed;\n+    return GetSecret(fCompressed);\n+}\n+\n CPrivKey CKey::GetPrivKey() const\n {\n     int nSize = i2d_ECPrivateKey(pkey, NULL);\n@@ -735,9 +749,7 @@ bool CMalleablePubKey::SetString(const std::string& strMalleablePubKey)\n \n bool CMalleablePubKey::operator==(const CMalleablePubKey &b)\n {\n-    return (nVersion == b.nVersion &&\n-            pubKeyL == b.pubKeyL &&\n-            pubKeyH == b.pubKeyH);\n+    return pubKeyL == b.pubKeyL && pubKeyH == b.pubKeyH;\n }\n \n \n@@ -747,22 +759,18 @@ void CMalleableKey::Reset()\n {\n     vchSecretL.clear();\n     vchSecretH.clear();\n-\n-    nVersion = 0;\n }\n \n void CMalleableKey::MakeNewKeys()\n {\n-    CKey L, H;\n-    bool fCompressed = true;\n-\n-    L.MakeNewKey(true);\n-    H.MakeNewKey(true);\n+    Reset();\n \n-    vchSecretL = L.GetSecret(fCompressed);\n-    vchSecretH = H.GetSecret(fCompressed);\n+    CKey keyL, keyH;\n+    keyL.MakeNewKey();\n+    keyH.MakeNewKey();\n \n-    nVersion = CURRENT_VERSION;\n+    vchSecretL = keyL.GetSecret();\n+    vchSecretH = keyH.GetSecret();\n }\n \n CMalleableKey::CMalleableKey()\n@@ -786,23 +794,21 @@ CMalleableKey::~CMalleableKey()\n \n bool CMalleableKey::IsNull() const\n {\n-    return nVersion != CURRENT_VERSION;\n+    return vchSecretL.size() != 32 || vchSecretH.size() != 32;\n }\n \n bool CMalleableKey::SetSecrets(const CSecret &pvchSecretL, const CSecret &pvchSecretH)\n {\n     Reset();\n-    CKey L, H;\n \n-    if (pvchSecretL.size() != 32 || pvchSecretH.size() != 32 || !L.SetSecret(pvchSecretL, true) || !H.SetSecret(pvchSecretH, true))\n-    {\n-        nVersion = 0;\n+    CKey keyL(pvchSecretL);\n+    CKey keyH(pvchSecretH);\n+\n+    if (!keyL.IsValid() || !keyL.IsValid())\n         return false;\n-    }\n \n     vchSecretL = pvchSecretL;\n     vchSecretH = pvchSecretH;\n-    nVersion = CURRENT_VERSION;\n \n     return true;\n }\n@@ -1021,14 +1027,12 @@ CMalleableKeyView::CMalleableKeyView(const CMalleableKey &b)\n     H.SetSecret(b.vchSecretH, true);\n \n     vchPubKeyH = H.GetPubKey().Raw();\n-    nVersion = b.nVersion;\n }\n \n CMalleableKeyView::CMalleableKeyView(const CMalleableKeyView &b)\n {\n     vchSecretL = b.vchSecretL;\n     vchPubKeyH = b.vchPubKeyH;\n-    nVersion = CURRENT_VERSION;\n }\n \n CMalleableKeyView& CMalleableKeyView::operator=(const CMalleableKey &b)\n@@ -1038,7 +1042,6 @@ CMalleableKeyView& CMalleableKeyView::operator=(const CMalleableKey &b)\n     CKey H;\n     H.SetSecret(b.vchSecretH, true);\n     vchPubKeyH = H.GetPubKey().Raw();\n-    nVersion = b.nVersion;\n \n     return (*this);\n }\n@@ -1148,9 +1151,9 @@ std::vector<unsigned char> CMalleableKeyView::Raw() const\n }\n \n \n-bool CMalleableKeyView::IsNull() const\n+bool CMalleableKeyView::IsValid() const\n {\n-    return nVersion != CURRENT_VERSION;\n+    return vchSecretL.size() == 32 && GetMalleablePubKey().IsValid();\n }\n \n //// Asymmetric encryption"
      },
      {
        "sha": "bf1557afb123e677fd4126b074f787a4181e0715",
        "filename": "src/key.h",
        "status": "modified",
        "additions": 8,
        "deletions": 24,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ecc21b2723d50ad420f6600977f570e20172f512/src/key.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ecc21b2723d50ad420f6600977f570e20172f512/src/key.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.h?ref=ecc21b2723d50ad420f6600977f570e20172f512",
        "patch": "@@ -126,6 +126,7 @@ class CKey\n \n     CKey();\n     CKey(const CKey& b);\n+    CKey(const CSecret& b, bool fCompressed=true);\n \n     CKey& operator=(const CKey& b);\n \n@@ -134,10 +135,11 @@ class CKey\n     bool IsNull() const;\n     bool IsCompressed() const;\n \n-    void MakeNewKey(bool fCompressed);\n+    void MakeNewKey(bool fCompressed=true);\n     bool SetPrivKey(const CPrivKey& vchPrivKey);\n-    bool SetSecret(const CSecret& vchSecret, bool fCompressed = false);\n+    bool SetSecret(const CSecret& vchSecret, bool fCompressed = true);\n     CSecret GetSecret(bool &fCompressed) const;\n+    CSecret GetSecret() const;\n     CPrivKey GetPrivKey() const;\n     bool SetPubKey(const CPubKey& vchPubKey);\n     CPubKey GetPubKey() const;\n@@ -209,27 +211,23 @@ class CPoint\n class CMalleablePubKey\n {\n private:\n-    unsigned char nVersion;\n     CPubKey pubKeyL;\n     CPubKey pubKeyH;\n     friend class CMalleableKey;\n \n     static const unsigned char CURRENT_VERSION = 1;\n \n public:\n-    CMalleablePubKey() { nVersion = CMalleablePubKey::CURRENT_VERSION; }\n+    CMalleablePubKey() { }\n     CMalleablePubKey(const CMalleablePubKey& mpk)\n     {\n-        nVersion = mpk.nVersion;\n         pubKeyL = mpk.pubKeyL;\n         pubKeyH = mpk.pubKeyH;\n     }\n     CMalleablePubKey(const std::string& strMalleablePubKey) { SetString(strMalleablePubKey); }\n-    CMalleablePubKey(const CPubKey &pubKeyInL, const CPubKey &pubKeyInH) : pubKeyL(pubKeyInL), pubKeyH(pubKeyInH) { nVersion = CMalleablePubKey::CURRENT_VERSION; }\n+    CMalleablePubKey(const CPubKey &pubKeyInL, const CPubKey &pubKeyInH) : pubKeyL(pubKeyInL), pubKeyH(pubKeyInH) { }\n \n     IMPLEMENT_SERIALIZE(\n-        READWRITE(this->nVersion);\n-        nVersion = this->nVersion;\n         READWRITE(pubKeyL);\n         READWRITE(pubKeyH);\n     )\n@@ -241,7 +239,6 @@ class CMalleablePubKey\n     bool operator==(const CMalleablePubKey &b);\n     bool operator!=(const CMalleablePubKey &b) { return !(*this == b); }\n     CMalleablePubKey& operator=(const CMalleablePubKey& mpk) {\n-        nVersion = mpk.nVersion;\n         pubKeyL = mpk.pubKeyL;\n         pubKeyH = mpk.pubKeyH;\n         return *this;\n@@ -264,23 +261,18 @@ class CMalleablePubKey\n class CMalleableKey\n {\n private:\n-    unsigned char nVersion;\n     CSecret vchSecretL;\n     CSecret vchSecretH;\n \n     friend class CMalleableKeyView;\n \n-    static const unsigned char CURRENT_VERSION = 1;\n-\n public:\n     CMalleableKey();\n     CMalleableKey(const CMalleableKey &b);\n     CMalleableKey(const CSecret &L, const CSecret &H);\n     ~CMalleableKey();\n \n     IMPLEMENT_SERIALIZE(\n-        READWRITE(this->nVersion);\n-        nVersion = this->nVersion;\n         READWRITE(vchSecretL);\n         READWRITE(vchSecretH);\n     )\n@@ -289,7 +281,6 @@ class CMalleableKey\n     bool SetString(const std::string& strMalleablePubKey);\n     std::vector<unsigned char> Raw() const;\n     CMalleableKey& operator=(const CMalleableKey& mk) {\n-        nVersion = mk.nVersion;\n         vchSecretL = mk.vchSecretL;\n         vchSecretH = mk.vchSecretH;\n         return *this;\n@@ -315,14 +306,11 @@ class CMalleableKey\n class CMalleableKeyView\n {\n private:\n-    unsigned char nVersion;\n     CSecret vchSecretL;\n     CPubKey vchPubKeyH;\n \n-    static const unsigned char CURRENT_VERSION = 1;\n-\n public:\n-    CMalleableKeyView() { nVersion = 0; };\n+    CMalleableKeyView() { };\n     CMalleableKeyView(const CMalleableKey &b);\n     CMalleableKeyView(const std::string &strMalleableKey);\n \n@@ -331,19 +319,15 @@ class CMalleableKeyView\n     ~CMalleableKeyView();\n \n     IMPLEMENT_SERIALIZE(\n-        READWRITE(this->nVersion);\n-        nVersion = this->nVersion;\n         READWRITE(vchSecretL);\n         READWRITE(vchPubKeyH);\n     )\n \n-    bool IsNull() const;\n-    bool IsValid() const { return !IsNull() && GetMalleablePubKey().IsValid(); }\n+    bool IsValid() const;\n     std::string ToString() const;\n     bool SetString(const std::string& strMalleablePubKey);\n     std::vector<unsigned char> Raw() const;\n     CMalleableKeyView& operator=(const CMalleableKeyView& mkv) {\n-        nVersion = mkv.nVersion;\n         vchSecretL = mkv.vchSecretL;\n         vchPubKeyH = mkv.vchPubKeyH;\n         return *this;"
      },
      {
        "sha": "872471c127ce53cb8b610aade35360a7cdac177c",
        "filename": "src/rpcwallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ecc21b2723d50ad420f6600977f570e20172f512/src/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ecc21b2723d50ad420f6600977f570e20172f512/src/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.cpp?ref=ecc21b2723d50ad420f6600977f570e20172f512",
        "patch": "@@ -1896,7 +1896,7 @@ Value newmalleablekey(const Array& params, bool fHelp)\n             \"newmalleablekey\\n\"\n             \"Make a malleable public/private key pair.\\n\");\n \n-    if (!fTestNet && GetTime() < SMALLDATA_SWITCH_TIME)\n+    if (!(fDebug || fTestNet) && GetTime() < SMALLDATA_SWITCH_TIME)\n         throw runtime_error(\"This feature has been disabled for mainNet clients\");\n \n     CMalleableKeyView keyView = pwalletMain->GenerateNewMalleableKey();"
      }
    ]
  },
  {
    "sha": "81e9e33e6bc5325bc8e5ac54678470d607e500a7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4MWU5ZTMzZTZiYzUzMjViYzhlNWFjNTQ2Nzg0NzBkNjA3ZTUwMGE3",
    "commit": {
      "author": {
        "name": "svost",
        "email": "ya.nowa@yandex.ru",
        "date": "2016-03-05T20:51:18Z"
      },
      "committer": {
        "name": "svost",
        "email": "ya.nowa@yandex.ru",
        "date": "2016-03-05T20:51:18Z"
      },
      "message": "Simplified macro",
      "tree": {
        "sha": "75605f36916676527883e8ebd02c39d484e2c93b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/75605f36916676527883e8ebd02c39d484e2c93b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/81e9e33e6bc5325bc8e5ac54678470d607e500a7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/81e9e33e6bc5325bc8e5ac54678470d607e500a7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/81e9e33e6bc5325bc8e5ac54678470d607e500a7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/81e9e33e6bc5325bc8e5ac54678470d607e500a7/comments",
    "author": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "72ded6ae92f8f6fc8e2a1b57a6fdfbdd1d3dadbe",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/72ded6ae92f8f6fc8e2a1b57a6fdfbdd1d3dadbe",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/72ded6ae92f8f6fc8e2a1b57a6fdfbdd1d3dadbe"
      }
    ],
    "stats": {
      "total": 199,
      "additions": 8,
      "deletions": 191
    },
    "files": [
      {
        "sha": "7e5f9f5beca95e82cf3ce520545d44eb62686dd6",
        "filename": "src/addrman.h",
        "status": "modified",
        "additions": 8,
        "deletions": 145,
        "changes": 153,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/81e9e33e6bc5325bc8e5ac54678470d607e500a7/src/addrman.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/81e9e33e6bc5325bc8e5ac54678470d607e500a7/src/addrman.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrman.h?ref=81e9e33e6bc5325bc8e5ac54678470d607e500a7",
        "patch": "@@ -246,141 +246,7 @@ class CAddrMan\n \n public:\n \n-#ifndef _MSC_VER \n-    IMPLEMENT_SERIALIZE\n-    (({\n-        // serialized format:\n-        // * version byte (currently 0)\n-        // * nKey\n-        // * nNew\n-        // * nTried\n-        // * number of \"new\" buckets\n-        // * all nNew addrinfos in vvNew\n-        // * all nTried addrinfos in vvTried\n-        // * for each bucket:\n-        //   * number of elements\n-        //   * for each element: index\n-        //\n-        // Notice that vvTried, mapAddr and vVector are never encoded explicitly;\n-        // they are instead reconstructed from the other information.\n-        //\n-        // vvNew is serialized, but only used if ADDRMAN_UNKOWN_BUCKET_COUNT didn't change,\n-        // otherwise it is reconstructed as well.\n-        //\n-        // This format is more complex, but significantly smaller (at most 1.5 MiB), and supports\n-        // changes to the ADDRMAN_ parameters without breaking the on-disk structure.\n-        {\n-            LOCK(cs);\n-            unsigned char nVersion = 0;\n-            READWRITE(nVersion);\n-            READWRITE(nKey);\n-            READWRITE(nNew);\n-            READWRITE(nTried);\n-\n-            CAddrMan *am = const_cast<CAddrMan*>(this);\n-            if (fWrite)\n-            {\n-                int nUBuckets = ADDRMAN_NEW_BUCKET_COUNT;\n-                READWRITE(nUBuckets);\n-                std::map<int, int> mapUnkIds;\n-                int nIds = 0;\n-                for (std::map<int, CAddrInfo>::iterator it = am->mapInfo.begin(); it != am->mapInfo.end(); it++)\n-                {\n-                    if (nIds == nNew) break; // this means nNew was wrong, oh ow\n-                    mapUnkIds[(*it).first] = nIds;\n-                    CAddrInfo &info = (*it).second;\n-                    if (info.nRefCount)\n-                    {\n-                        READWRITE(info);\n-                        nIds++;\n-                    }\n-                }\n-                nIds = 0;\n-                for (std::map<int, CAddrInfo>::iterator it = am->mapInfo.begin(); it != am->mapInfo.end(); it++)\n-                {\n-                    if (nIds == nTried) break; // this means nTried was wrong, oh ow\n-                    CAddrInfo &info = (*it).second;\n-                    if (info.fInTried)\n-                    {\n-                        READWRITE(info);\n-                        nIds++;\n-                    }\n-                }\n-                for (std::vector<std::set<int> >::iterator it = am->vvNew.begin(); it != am->vvNew.end(); it++)\n-                {\n-                    const std::set<int> &vNew = (*it);\n-                    int nSize = vNew.size();\n-                    READWRITE(nSize);\n-                    for (std::set<int>::iterator it2 = vNew.begin(); it2 != vNew.end(); it2++)\n-                    {\n-                        int nIndex = mapUnkIds[*it2];\n-                        READWRITE(nIndex);\n-                    }\n-                }\n-            } else {\n-                int nUBuckets = 0;\n-                READWRITE(nUBuckets);\n-                am->nIdCount = 0;\n-                am->mapInfo.clear();\n-                am->mapAddr.clear();\n-                am->vRandom.clear();\n-                am->vvTried = std::vector<std::vector<int> >(ADDRMAN_TRIED_BUCKET_COUNT, std::vector<int>(0));\n-                am->vvNew = std::vector<std::set<int> >(ADDRMAN_NEW_BUCKET_COUNT, std::set<int>());\n-                for (int n = 0; n < am->nNew; n++)\n-                {\n-                    CAddrInfo &info = am->mapInfo[n];\n-                    READWRITE(info);\n-                    am->mapAddr[info] = n;\n-                    info.nRandomPos = vRandom.size();\n-                    am->vRandom.push_back(n);\n-                    if (nUBuckets != ADDRMAN_NEW_BUCKET_COUNT)\n-                    {\n-                        am->vvNew[info.GetNewBucket(am->nKey)].insert(n);\n-                        info.nRefCount++;\n-                    }\n-                }\n-                am->nIdCount = am->nNew;\n-                int nLost = 0;\n-                for (int n = 0; n < am->nTried; n++)\n-                {\n-                    CAddrInfo info;\n-                    READWRITE(info);\n-                    std::vector<int> &vTried = am->vvTried[info.GetTriedBucket(am->nKey)];\n-                    if (vTried.size() < ADDRMAN_TRIED_BUCKET_SIZE)\n-                    {\n-                        info.nRandomPos = vRandom.size();\n-                        info.fInTried = true;\n-                        am->vRandom.push_back(am->nIdCount);\n-                        am->mapInfo[am->nIdCount] = info;\n-                        am->mapAddr[info] = am->nIdCount;\n-                        vTried.push_back(am->nIdCount);\n-                        am->nIdCount++;\n-                    } else {\n-                        nLost++;\n-                    }\n-                }\n-                am->nTried -= nLost;\n-                for (int b = 0; b < nUBuckets; b++)\n-                {\n-                    std::set<int> &vNew = am->vvNew[b];\n-                    int nSize = 0;\n-                    READWRITE(nSize);\n-                    for (int n = 0; n < nSize; n++)\n-                    {\n-                        int nIndex = 0;\n-                        READWRITE(nIndex);\n-                        CAddrInfo &info = am->mapInfo[nIndex];\n-                        if (nUBuckets == ADDRMAN_NEW_BUCKET_COUNT && info.nRefCount < ADDRMAN_NEW_BUCKETS_PER_ADDRESS)\n-                        {\n-                            info.nRefCount++;\n-                            vNew.insert(nIndex);\n-                        }\n-                    }\n-                }\n-            }\n-        }\n-    });)\n-#else\n+    typedef std::map<int, int> MapUnkIds; // For MSVC macro\n     IMPLEMENT_SERIALIZE\n             (\n             LOCK(cs);\n@@ -392,28 +258,25 @@ class CAddrMan\n                 READWRITE(nNew);\n                 READWRITE(nTried);\n \n-                CAddrMan \n+                CAddrMan\n                     *am = const_cast<CAddrMan*>(this);\n \n                 if (fWrite)\n                 {\n-                    int \n+                    int\n                         nUBuckets = ADDRMAN_NEW_BUCKET_COUNT;\n \n                     READWRITE(nUBuckets);\n-/************\n-                    std::map<int, int>  \n-                        mapUnkIds;\n-************/  \n-                    int \n+                    MapUnkIds mapUnkIds;\n+                    int\n                         nIds = 0;\n                     for (std::map<int, CAddrInfo>::iterator it = am->mapInfo.begin(); it != am->mapInfo.end(); it++)\n                     {\n-                        if (nIds == nNew) \n+                        if (nIds == nNew)\n                             break; // this means nNew was wrong, oh ow\n                         mapUnkIds[(*it).first] = nIds;\n \n-                        CAddrInfo \n+                        CAddrInfo\n                             &info = (*it).second;\n \n                         if (info.nRefCount)\n@@ -556,7 +419,7 @@ class CAddrMan\n                 }\n             )\n \n-#endif  //_MSC_VER\n+\n     CAddrMan() : vRandom(0), vvTried(ADDRMAN_TRIED_BUCKET_COUNT, std::vector<int>(0)), vvNew(ADDRMAN_NEW_BUCKET_COUNT, std::set<int>())\n     {\n          nKey.resize(32);"
      },
      {
        "sha": "0e2fa9db36b5e8fd532994020763fa408d6fe586",
        "filename": "src/serialize.h",
        "status": "modified",
        "additions": 0,
        "deletions": 46,
        "changes": 46,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/81e9e33e6bc5325bc8e5ac54678470d607e500a7/src/serialize.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/81e9e33e6bc5325bc8e5ac54678470d607e500a7/src/serialize.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/serialize.h?ref=81e9e33e6bc5325bc8e5ac54678470d607e500a7",
        "patch": "@@ -62,50 +62,6 @@ enum\n \n };\n \n-#ifdef _MSC_VER\n-#define IMPLEMENT_SERIALIZE(statements)    \\\n-    unsigned int GetSerializeSize(int nType, int nVersion) const  \\\n-    {                                           \\\n-        CSerActionGetSerializeSize ser_action;  \\\n-        const bool fGetSize = true;             \\\n-        const bool fWrite = false;              \\\n-        const bool fRead = false;               \\\n-        unsigned int nSerSize = 0;              \\\n-        ser_streamplaceholder s;                \\\n-        assert(fGetSize||fWrite||fRead); /* suppress warning */ \\\n-        s.nType = nType;                        \\\n-        s.nVersion = nVersion;                  \\\n-        std::map<int, int>  mapUnkIds;          \\\n-        {statements}                            \\\n-        return nSerSize;                        \\\n-    }                                           \\\n-    template<typename Stream>                   \\\n-    void Serialize(Stream& s, int nType, int nVersion) const  \\\n-    {                                           \\\n-        CSerActionSerialize ser_action;         \\\n-        const bool fGetSize = false;            \\\n-        const bool fWrite = true;               \\\n-        const bool fRead = false;               \\\n-        unsigned int nSerSize = 0;              \\\n-        assert(fGetSize||fWrite||fRead); /* suppress warning */ \\\n-    std::map<int, int>  mapUnkIds;  \\\n-        {statements}                            \\\n-    }                                           \\\n-    template<typename Stream>                   \\\n-    void Unserialize(Stream& s, int nType, int nVersion)  \\\n-    {                                           \\\n-        CSerActionUnserialize ser_action;       \\\n-        const bool fGetSize = false;            \\\n-        const bool fWrite = false;              \\\n-        const bool fRead = true;                \\\n-        unsigned int nSerSize = 0;              \\\n-    std::map<int, int>  mapUnkIds;  \\\n-        assert(fGetSize||fWrite||fRead); /* suppress warning */ \\\n-        {statements}                            \\\n-    }\n-\n-#else\n-\n #define IMPLEMENT_SERIALIZE(statements)    \\\n     unsigned int GetSerializeSize(int nType, int nVersion) const  \\\n     {                                           \\\n@@ -144,8 +100,6 @@ enum\n         {statements}                            \\\n     }\n \n-#endif\n-\n #define READWRITE(obj)      (nSerSize += ::SerReadWrite(s, (obj), nType, nVersion, ser_action))\n \n "
      }
    ]
  },
  {
    "sha": "2058eaa4ce0450c6d52f9795d79bf3055c29e53a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyMDU4ZWFhNGNlMDQ1MGM2ZDUyZjk3OTVkNzliZjMwNTVjMjllNTNh",
    "commit": {
      "author": {
        "name": "svost",
        "email": "ya.nowa@yandex.ru",
        "date": "2016-03-05T20:59:54Z"
      },
      "committer": {
        "name": "svost",
        "email": "ya.nowa@yandex.ru",
        "date": "2016-03-05T20:59:54Z"
      },
      "message": "Useless pragma",
      "tree": {
        "sha": "749944767f2a7d5cbed6ae9d6cd6e89a91d936c4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/749944767f2a7d5cbed6ae9d6cd6e89a91d936c4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2058eaa4ce0450c6d52f9795d79bf3055c29e53a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2058eaa4ce0450c6d52f9795d79bf3055c29e53a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2058eaa4ce0450c6d52f9795d79bf3055c29e53a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2058eaa4ce0450c6d52f9795d79bf3055c29e53a/comments",
    "author": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "81e9e33e6bc5325bc8e5ac54678470d607e500a7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/81e9e33e6bc5325bc8e5ac54678470d607e500a7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/81e9e33e6bc5325bc8e5ac54678470d607e500a7"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 0,
      "deletions": 10
    },
    "files": [
      {
        "sha": "3a0b2dbc9f4fff00b5ac22397f7321c9b6da757a",
        "filename": "src/kernelrecord.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2058eaa4ce0450c6d52f9795d79bf3055c29e53a/src/kernelrecord.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2058eaa4ce0450c6d52f9795d79bf3055c29e53a/src/kernelrecord.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/kernelrecord.cpp?ref=2058eaa4ce0450c6d52f9795d79bf3055c29e53a",
        "patch": "@@ -3,10 +3,6 @@\n #include \"wallet.h\"\n #include \"base58.h\"\n \n-#ifdef _MSC_VER\n-#pragma warning( disable : 4345)\n-#endif\n-\n using namespace std;\n \n bool KernelRecord::showTransaction(const CWalletTx &wtx)"
      },
      {
        "sha": "0a19fe92557b174df12e64836920ffaf4da4ff9d",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2058eaa4ce0450c6d52f9795d79bf3055c29e53a/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2058eaa4ce0450c6d52f9795d79bf3055c29e53a/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=2058eaa4ce0450c6d52f9795d79bf3055c29e53a",
        "patch": "@@ -34,12 +34,6 @@ namespace boost {\n #include <openssl/conf.h>\n \n #ifdef WIN32\n-#ifdef _MSC_VER\n-#pragma warning(disable:4786)\n-#pragma warning(disable:4804)\n-#pragma warning(disable:4805)\n-#pragma warning(disable:4717)\n-#endif\n #ifdef _WIN32_WINNT\n #undef _WIN32_WINNT\n #endif"
      }
    ]
  },
  {
    "sha": "56c09fb0cecfed2da021467f98d81fc8fd4f7216",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NmMwOWZiMGNlY2ZlZDJkYTAyMTQ2N2Y5OGQ4MWZjOGZkNGY3MjE2",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "CryptoManiac@users.noreply.github.com",
        "date": "2016-03-05T21:13:21Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "CryptoManiac@users.noreply.github.com",
        "date": "2016-03-05T21:13:21Z"
      },
      "message": "Merge pull request #286 from svost/patch\n\nPatch",
      "tree": {
        "sha": "1a123de3c1f24dee7d95ff97296a35250384a3e1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1a123de3c1f24dee7d95ff97296a35250384a3e1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/56c09fb0cecfed2da021467f98d81fc8fd4f7216",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/56c09fb0cecfed2da021467f98d81fc8fd4f7216",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/56c09fb0cecfed2da021467f98d81fc8fd4f7216",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/56c09fb0cecfed2da021467f98d81fc8fd4f7216/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ecc21b2723d50ad420f6600977f570e20172f512",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ecc21b2723d50ad420f6600977f570e20172f512",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ecc21b2723d50ad420f6600977f570e20172f512"
      },
      {
        "sha": "2058eaa4ce0450c6d52f9795d79bf3055c29e53a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2058eaa4ce0450c6d52f9795d79bf3055c29e53a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2058eaa4ce0450c6d52f9795d79bf3055c29e53a"
      }
    ],
    "stats": {
      "total": 209,
      "additions": 8,
      "deletions": 201
    },
    "files": [
      {
        "sha": "7e5f9f5beca95e82cf3ce520545d44eb62686dd6",
        "filename": "src/addrman.h",
        "status": "modified",
        "additions": 8,
        "deletions": 145,
        "changes": 153,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/56c09fb0cecfed2da021467f98d81fc8fd4f7216/src/addrman.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/56c09fb0cecfed2da021467f98d81fc8fd4f7216/src/addrman.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrman.h?ref=56c09fb0cecfed2da021467f98d81fc8fd4f7216",
        "patch": "@@ -246,141 +246,7 @@ class CAddrMan\n \n public:\n \n-#ifndef _MSC_VER \n-    IMPLEMENT_SERIALIZE\n-    (({\n-        // serialized format:\n-        // * version byte (currently 0)\n-        // * nKey\n-        // * nNew\n-        // * nTried\n-        // * number of \"new\" buckets\n-        // * all nNew addrinfos in vvNew\n-        // * all nTried addrinfos in vvTried\n-        // * for each bucket:\n-        //   * number of elements\n-        //   * for each element: index\n-        //\n-        // Notice that vvTried, mapAddr and vVector are never encoded explicitly;\n-        // they are instead reconstructed from the other information.\n-        //\n-        // vvNew is serialized, but only used if ADDRMAN_UNKOWN_BUCKET_COUNT didn't change,\n-        // otherwise it is reconstructed as well.\n-        //\n-        // This format is more complex, but significantly smaller (at most 1.5 MiB), and supports\n-        // changes to the ADDRMAN_ parameters without breaking the on-disk structure.\n-        {\n-            LOCK(cs);\n-            unsigned char nVersion = 0;\n-            READWRITE(nVersion);\n-            READWRITE(nKey);\n-            READWRITE(nNew);\n-            READWRITE(nTried);\n-\n-            CAddrMan *am = const_cast<CAddrMan*>(this);\n-            if (fWrite)\n-            {\n-                int nUBuckets = ADDRMAN_NEW_BUCKET_COUNT;\n-                READWRITE(nUBuckets);\n-                std::map<int, int> mapUnkIds;\n-                int nIds = 0;\n-                for (std::map<int, CAddrInfo>::iterator it = am->mapInfo.begin(); it != am->mapInfo.end(); it++)\n-                {\n-                    if (nIds == nNew) break; // this means nNew was wrong, oh ow\n-                    mapUnkIds[(*it).first] = nIds;\n-                    CAddrInfo &info = (*it).second;\n-                    if (info.nRefCount)\n-                    {\n-                        READWRITE(info);\n-                        nIds++;\n-                    }\n-                }\n-                nIds = 0;\n-                for (std::map<int, CAddrInfo>::iterator it = am->mapInfo.begin(); it != am->mapInfo.end(); it++)\n-                {\n-                    if (nIds == nTried) break; // this means nTried was wrong, oh ow\n-                    CAddrInfo &info = (*it).second;\n-                    if (info.fInTried)\n-                    {\n-                        READWRITE(info);\n-                        nIds++;\n-                    }\n-                }\n-                for (std::vector<std::set<int> >::iterator it = am->vvNew.begin(); it != am->vvNew.end(); it++)\n-                {\n-                    const std::set<int> &vNew = (*it);\n-                    int nSize = vNew.size();\n-                    READWRITE(nSize);\n-                    for (std::set<int>::iterator it2 = vNew.begin(); it2 != vNew.end(); it2++)\n-                    {\n-                        int nIndex = mapUnkIds[*it2];\n-                        READWRITE(nIndex);\n-                    }\n-                }\n-            } else {\n-                int nUBuckets = 0;\n-                READWRITE(nUBuckets);\n-                am->nIdCount = 0;\n-                am->mapInfo.clear();\n-                am->mapAddr.clear();\n-                am->vRandom.clear();\n-                am->vvTried = std::vector<std::vector<int> >(ADDRMAN_TRIED_BUCKET_COUNT, std::vector<int>(0));\n-                am->vvNew = std::vector<std::set<int> >(ADDRMAN_NEW_BUCKET_COUNT, std::set<int>());\n-                for (int n = 0; n < am->nNew; n++)\n-                {\n-                    CAddrInfo &info = am->mapInfo[n];\n-                    READWRITE(info);\n-                    am->mapAddr[info] = n;\n-                    info.nRandomPos = vRandom.size();\n-                    am->vRandom.push_back(n);\n-                    if (nUBuckets != ADDRMAN_NEW_BUCKET_COUNT)\n-                    {\n-                        am->vvNew[info.GetNewBucket(am->nKey)].insert(n);\n-                        info.nRefCount++;\n-                    }\n-                }\n-                am->nIdCount = am->nNew;\n-                int nLost = 0;\n-                for (int n = 0; n < am->nTried; n++)\n-                {\n-                    CAddrInfo info;\n-                    READWRITE(info);\n-                    std::vector<int> &vTried = am->vvTried[info.GetTriedBucket(am->nKey)];\n-                    if (vTried.size() < ADDRMAN_TRIED_BUCKET_SIZE)\n-                    {\n-                        info.nRandomPos = vRandom.size();\n-                        info.fInTried = true;\n-                        am->vRandom.push_back(am->nIdCount);\n-                        am->mapInfo[am->nIdCount] = info;\n-                        am->mapAddr[info] = am->nIdCount;\n-                        vTried.push_back(am->nIdCount);\n-                        am->nIdCount++;\n-                    } else {\n-                        nLost++;\n-                    }\n-                }\n-                am->nTried -= nLost;\n-                for (int b = 0; b < nUBuckets; b++)\n-                {\n-                    std::set<int> &vNew = am->vvNew[b];\n-                    int nSize = 0;\n-                    READWRITE(nSize);\n-                    for (int n = 0; n < nSize; n++)\n-                    {\n-                        int nIndex = 0;\n-                        READWRITE(nIndex);\n-                        CAddrInfo &info = am->mapInfo[nIndex];\n-                        if (nUBuckets == ADDRMAN_NEW_BUCKET_COUNT && info.nRefCount < ADDRMAN_NEW_BUCKETS_PER_ADDRESS)\n-                        {\n-                            info.nRefCount++;\n-                            vNew.insert(nIndex);\n-                        }\n-                    }\n-                }\n-            }\n-        }\n-    });)\n-#else\n+    typedef std::map<int, int> MapUnkIds; // For MSVC macro\n     IMPLEMENT_SERIALIZE\n             (\n             LOCK(cs);\n@@ -392,28 +258,25 @@ class CAddrMan\n                 READWRITE(nNew);\n                 READWRITE(nTried);\n \n-                CAddrMan \n+                CAddrMan\n                     *am = const_cast<CAddrMan*>(this);\n \n                 if (fWrite)\n                 {\n-                    int \n+                    int\n                         nUBuckets = ADDRMAN_NEW_BUCKET_COUNT;\n \n                     READWRITE(nUBuckets);\n-/************\n-                    std::map<int, int>  \n-                        mapUnkIds;\n-************/  \n-                    int \n+                    MapUnkIds mapUnkIds;\n+                    int\n                         nIds = 0;\n                     for (std::map<int, CAddrInfo>::iterator it = am->mapInfo.begin(); it != am->mapInfo.end(); it++)\n                     {\n-                        if (nIds == nNew) \n+                        if (nIds == nNew)\n                             break; // this means nNew was wrong, oh ow\n                         mapUnkIds[(*it).first] = nIds;\n \n-                        CAddrInfo \n+                        CAddrInfo\n                             &info = (*it).second;\n \n                         if (info.nRefCount)\n@@ -556,7 +419,7 @@ class CAddrMan\n                 }\n             )\n \n-#endif  //_MSC_VER\n+\n     CAddrMan() : vRandom(0), vvTried(ADDRMAN_TRIED_BUCKET_COUNT, std::vector<int>(0)), vvNew(ADDRMAN_NEW_BUCKET_COUNT, std::set<int>())\n     {\n          nKey.resize(32);"
      },
      {
        "sha": "3a0b2dbc9f4fff00b5ac22397f7321c9b6da757a",
        "filename": "src/kernelrecord.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/56c09fb0cecfed2da021467f98d81fc8fd4f7216/src/kernelrecord.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/56c09fb0cecfed2da021467f98d81fc8fd4f7216/src/kernelrecord.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/kernelrecord.cpp?ref=56c09fb0cecfed2da021467f98d81fc8fd4f7216",
        "patch": "@@ -3,10 +3,6 @@\n #include \"wallet.h\"\n #include \"base58.h\"\n \n-#ifdef _MSC_VER\n-#pragma warning( disable : 4345)\n-#endif\n-\n using namespace std;\n \n bool KernelRecord::showTransaction(const CWalletTx &wtx)"
      },
      {
        "sha": "0e2fa9db36b5e8fd532994020763fa408d6fe586",
        "filename": "src/serialize.h",
        "status": "modified",
        "additions": 0,
        "deletions": 46,
        "changes": 46,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/56c09fb0cecfed2da021467f98d81fc8fd4f7216/src/serialize.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/56c09fb0cecfed2da021467f98d81fc8fd4f7216/src/serialize.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/serialize.h?ref=56c09fb0cecfed2da021467f98d81fc8fd4f7216",
        "patch": "@@ -62,50 +62,6 @@ enum\n \n };\n \n-#ifdef _MSC_VER\n-#define IMPLEMENT_SERIALIZE(statements)    \\\n-    unsigned int GetSerializeSize(int nType, int nVersion) const  \\\n-    {                                           \\\n-        CSerActionGetSerializeSize ser_action;  \\\n-        const bool fGetSize = true;             \\\n-        const bool fWrite = false;              \\\n-        const bool fRead = false;               \\\n-        unsigned int nSerSize = 0;              \\\n-        ser_streamplaceholder s;                \\\n-        assert(fGetSize||fWrite||fRead); /* suppress warning */ \\\n-        s.nType = nType;                        \\\n-        s.nVersion = nVersion;                  \\\n-        std::map<int, int>  mapUnkIds;          \\\n-        {statements}                            \\\n-        return nSerSize;                        \\\n-    }                                           \\\n-    template<typename Stream>                   \\\n-    void Serialize(Stream& s, int nType, int nVersion) const  \\\n-    {                                           \\\n-        CSerActionSerialize ser_action;         \\\n-        const bool fGetSize = false;            \\\n-        const bool fWrite = true;               \\\n-        const bool fRead = false;               \\\n-        unsigned int nSerSize = 0;              \\\n-        assert(fGetSize||fWrite||fRead); /* suppress warning */ \\\n-    std::map<int, int>  mapUnkIds;  \\\n-        {statements}                            \\\n-    }                                           \\\n-    template<typename Stream>                   \\\n-    void Unserialize(Stream& s, int nType, int nVersion)  \\\n-    {                                           \\\n-        CSerActionUnserialize ser_action;       \\\n-        const bool fGetSize = false;            \\\n-        const bool fWrite = false;              \\\n-        const bool fRead = true;                \\\n-        unsigned int nSerSize = 0;              \\\n-    std::map<int, int>  mapUnkIds;  \\\n-        assert(fGetSize||fWrite||fRead); /* suppress warning */ \\\n-        {statements}                            \\\n-    }\n-\n-#else\n-\n #define IMPLEMENT_SERIALIZE(statements)    \\\n     unsigned int GetSerializeSize(int nType, int nVersion) const  \\\n     {                                           \\\n@@ -144,8 +100,6 @@ enum\n         {statements}                            \\\n     }\n \n-#endif\n-\n #define READWRITE(obj)      (nSerSize += ::SerReadWrite(s, (obj), nType, nVersion, ser_action))\n \n "
      },
      {
        "sha": "0a19fe92557b174df12e64836920ffaf4da4ff9d",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/56c09fb0cecfed2da021467f98d81fc8fd4f7216/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/56c09fb0cecfed2da021467f98d81fc8fd4f7216/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=56c09fb0cecfed2da021467f98d81fc8fd4f7216",
        "patch": "@@ -34,12 +34,6 @@ namespace boost {\n #include <openssl/conf.h>\n \n #ifdef WIN32\n-#ifdef _MSC_VER\n-#pragma warning(disable:4786)\n-#pragma warning(disable:4804)\n-#pragma warning(disable:4805)\n-#pragma warning(disable:4717)\n-#endif\n #ifdef _WIN32_WINNT\n #undef _WIN32_WINNT\n #endif"
      }
    ]
  },
  {
    "sha": "025e8938eeb56c0749061d5668039f6ee05c1f64",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowMjVlODkzOGVlYjU2YzA3NDkwNjFkNTY2ODAzOWY2ZWUwNWMxZjY0",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-05T21:34:26Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-05T21:34:26Z"
      },
      "message": "Add hex representation",
      "tree": {
        "sha": "a1d48c2ac88b1402006bea82f6d4580ecb88fcda",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a1d48c2ac88b1402006bea82f6d4580ecb88fcda"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/025e8938eeb56c0749061d5668039f6ee05c1f64",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/025e8938eeb56c0749061d5668039f6ee05c1f64",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/025e8938eeb56c0749061d5668039f6ee05c1f64",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/025e8938eeb56c0749061d5668039f6ee05c1f64/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "56c09fb0cecfed2da021467f98d81fc8fd4f7216",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/56c09fb0cecfed2da021467f98d81fc8fd4f7216",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/56c09fb0cecfed2da021467f98d81fc8fd4f7216"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 7,
      "deletions": 2
    },
    "files": [
      {
        "sha": "12b6603051542719ea947c3ab9150a4c584a8f1a",
        "filename": "src/rpcwallet.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 2,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/025e8938eeb56c0749061d5668039f6ee05c1f64/src/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/025e8938eeb56c0749061d5668039f6ee05c1f64/src/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.cpp?ref=025e8938eeb56c0749061d5668039f6ee05c1f64",
        "patch": "@@ -1905,8 +1905,13 @@ Value newmalleablekey(const Array& params, bool fHelp)\n     if (!pwalletMain->GetMalleableKey(keyView, mKey))\n         throw runtime_error(\"Unable to generate new malleable key\");\n \n+    CMalleablePubKey mPubKey = mKey.GetMalleablePubKey();\n+    CDataStream ssPublicBytes(SER_NETWORK, PROTOCOL_VERSION);\n+    ssPublicBytes << mPubKey;\n+\n     Object result;\n-    result.push_back(Pair(\"PublicPair\", mKey.GetMalleablePubKey().ToString()));\n+    result.push_back(Pair(\"PublicPair\", mPubKey.ToString()));\n+    result.push_back(Pair(\"PublicBytes\", HexStr(ssPublicBytes.begin(), ssPublicBytes.end())));\n     result.push_back(Pair(\"KeyView\", keyView.ToString()));\n \n     return result;\n@@ -1976,7 +1981,7 @@ Value adjustmalleablepubkey(const Array& params, bool fHelp)\n     string pubKeyPair = params[0].get_str();\n     CMalleablePubKey malleablePubKey;\n \n-    if (pubKeyPair.size() == 138) {\n+    if (pubKeyPair.size() == 136) {\n         CDataStream ssPublicBytes(ParseHex(pubKeyPair), SER_NETWORK, PROTOCOL_VERSION);\n         ssPublicBytes >> malleablePubKey;\n     } else"
      }
    ]
  },
  {
    "sha": "7cacf505fc47e61d294c4d11de9e8f02be186763",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3Y2FjZjUwNWZjNDdlNjFkMjk0YzRkMTFkZTllOGYwMmJlMTg2NzYz",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-05T23:02:57Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-05T23:02:57Z"
      },
      "message": "PUBKEY_PAIR_ADDRESS / PUBKEY_PAIR_ADDRESS_TEST",
      "tree": {
        "sha": "2794faf0347cd8e6b7f9b5f2fd5f956d51845a42",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2794faf0347cd8e6b7f9b5f2fd5f956d51845a42"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7cacf505fc47e61d294c4d11de9e8f02be186763",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7cacf505fc47e61d294c4d11de9e8f02be186763",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7cacf505fc47e61d294c4d11de9e8f02be186763",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7cacf505fc47e61d294c4d11de9e8f02be186763/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "025e8938eeb56c0749061d5668039f6ee05c1f64",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/025e8938eeb56c0749061d5668039f6ee05c1f64",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/025e8938eeb56c0749061d5668039f6ee05c1f64"
      }
    ],
    "stats": {
      "total": 224,
      "additions": 143,
      "deletions": 81
    },
    "files": [
      {
        "sha": "a524be6819248a7b7522ac18ee2354822de33b08",
        "filename": "src/base58.cpp",
        "status": "modified",
        "additions": 38,
        "deletions": 0,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7cacf505fc47e61d294c4d11de9e8f02be186763/src/base58.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7cacf505fc47e61d294c4d11de9e8f02be186763/src/base58.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/base58.cpp?ref=7cacf505fc47e61d294c4d11de9e8f02be186763",
        "patch": "@@ -183,6 +183,11 @@ bool DecodeBase58Check(const std::string& str, std::vector<unsigned char>& vchRe\n         if (!vchData.empty())\n             memcpy(&vchData[0], pdata, nSize);\n     }\n+    \n+    const std::vector<unsigned char> &CBase58Data::GetData() const\n+    {\n+        return vchData;\n+    }\n \n     void CBase58Data::SetData(int nVersionIn, const unsigned char *pbegin, const unsigned char *pend)\n     {\n@@ -243,12 +248,22 @@ bool DecodeBase58Check(const std::string& str, std::vector<unsigned char>& vchRe\n         return boost::apply_visitor(CBitcoinAddressVisitor(this), dest);\n     }\n \n+    bool CBitcoinAddress::Set(const CMalleablePubKey &mpk) {\n+        std::vector<unsigned char> vchPubkeyPair = mpk.Raw();\n+        SetData(fTestNet ? PUBKEY_PAIR_ADDRESS_TEST : PUBKEY_PAIR_ADDRESS, &vchPubkeyPair[0], 68);\n+        return true;\n+    }\n+\n     bool CBitcoinAddress::IsValid() const\n     {\n         unsigned int nExpectedSize = 20;\n         bool fExpectTestNet = false;\n         switch(nVersion)\n         {\n+            case PUBKEY_PAIR_ADDRESS:\n+                nExpectedSize = 68; // Serialized pair of public keys\n+                fExpectTestNet = false;\n+                break;\n             case PUBKEY_ADDRESS:\n                 nExpectedSize = 20; // Hash of public key\n                 fExpectTestNet = false;\n@@ -258,6 +273,10 @@ bool DecodeBase58Check(const std::string& str, std::vector<unsigned char>& vchRe\n                 fExpectTestNet = false;\n                 break;\n \n+            case PUBKEY_PAIR_ADDRESS_TEST:\n+                nExpectedSize = 68;\n+                fExpectTestNet = true;\n+                break;\n             case PUBKEY_ADDRESS_TEST:\n                 nExpectedSize = 20;\n                 fExpectTestNet = true;\n@@ -304,6 +323,13 @@ bool DecodeBase58Check(const std::string& str, std::vector<unsigned char>& vchRe\n             keyID = CKeyID(id);\n             return true;\n         }\n+        case PUBKEY_PAIR_ADDRESS:\n+        case PUBKEY_PAIR_ADDRESS_TEST:\n+        {\n+            CMalleablePubKey mPubKey;\n+            mPubKey.setvch(vchData);\n+            keyID = mPubKey.GetID();\n+        }\n         default: return false;\n         }\n     }\n@@ -319,6 +345,18 @@ bool DecodeBase58Check(const std::string& str, std::vector<unsigned char>& vchRe\n         default: return false;\n         }\n     }\n+    \n+    bool CBitcoinAddress::IsPair() const {\n+        if (!IsValid())\n+            return false;\n+        switch (nVersion) {\n+        case PUBKEY_PAIR_ADDRESS:\n+        case PUBKEY_PAIR_ADDRESS_TEST: {\n+            return true;\n+        }\n+        default: return false;\n+        }\n+    }\n \n     void CBitcoinSecret::SetSecret(const CSecret& vchSecret, bool fCompressed)\n     {"
      },
      {
        "sha": "b312443110e947d7d77461087cf8d258893ec213",
        "filename": "src/base58.h",
        "status": "modified",
        "additions": 15,
        "deletions": 3,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7cacf505fc47e61d294c4d11de9e8f02be186763/src/base58.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7cacf505fc47e61d294c4d11de9e8f02be186763/src/base58.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/base58.h?ref=7cacf505fc47e61d294c4d11de9e8f02be186763",
        "patch": "@@ -67,6 +67,7 @@ class CBase58Data\n     bool SetString(const char* psz);\n     bool SetString(const std::string& str);\n     std::string ToString() const;\n+    const std::vector<unsigned char> &GetData() const;\n \n     int CompareTo(const CBase58Data& b58) const;\n     bool operator==(const CBase58Data& b58) const { return CompareTo(b58) == 0; }\n@@ -91,6 +92,7 @@ class CBitcoinAddressVisitor : public boost::static_visitor<bool>\n     CBitcoinAddressVisitor(CBitcoinAddress *addrIn) : addr(addrIn) { }\n     bool operator()(const CKeyID &id) const;\n     bool operator()(const CScriptID &id) const;\n+    bool operator()(const CMalleablePubKey &mpk) const;\n     bool operator()(const CNoDestination &no) const;\n };\n \n@@ -99,15 +101,18 @@ class CBitcoinAddress : public CBase58Data\n public:\n     enum\n     {\n+        PUBKEY_PAIR_ADDRESS = 1,\n         PUBKEY_ADDRESS = 8,\n         SCRIPT_ADDRESS = 20,\n+        PUBKEY_PAIR_ADDRESS_TEST = 6,\n         PUBKEY_ADDRESS_TEST = 111,\n         SCRIPT_ADDRESS_TEST = 196\n     };\n \n     bool Set(const CKeyID &id);\n     bool Set(const CScriptID &id);\n     bool Set(const CTxDestination &dest);\n+    bool Set(const CMalleablePubKey &mpk);\n     bool IsValid() const;\n \n     CBitcoinAddress()\n@@ -119,6 +124,11 @@ class CBitcoinAddress : public CBase58Data\n         Set(dest);\n     }\n \n+    CBitcoinAddress(const CMalleablePubKey &mpk)\n+    {\n+        Set(mpk);\n+    }\n+\n     CBitcoinAddress(const std::string& strAddress)\n     {\n         SetString(strAddress);\n@@ -132,11 +142,13 @@ class CBitcoinAddress : public CBase58Data\n     CTxDestination Get() const;\n     bool GetKeyID(CKeyID &keyID) const;\n     bool IsScript() const;\n+    bool IsPair() const;\n };\n \n-bool inline CBitcoinAddressVisitor::operator()(const CKeyID &id) const         { return addr->Set(id); }\n-bool inline CBitcoinAddressVisitor::operator()(const CScriptID &id) const      { return addr->Set(id); }\n-bool inline CBitcoinAddressVisitor::operator()(const CNoDestination &id) const { return false; }\n+bool inline CBitcoinAddressVisitor::operator()(const CKeyID &id) const            { return addr->Set(id); }\n+bool inline CBitcoinAddressVisitor::operator()(const CScriptID &id) const         { return addr->Set(id); }\n+bool inline CBitcoinAddressVisitor::operator()(const CMalleablePubKey &mpk) const { return addr->Set(mpk); }\n+bool inline CBitcoinAddressVisitor::operator()(const CNoDestination &id) const    { return false; }\n \n /** A base58-encoded secret key */\n class CBitcoinSecret : public CBase58Data"
      },
      {
        "sha": "f52ae80e98ac39bfd63005d4cf93417a88761c9e",
        "filename": "src/bitcoinrpc.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7cacf505fc47e61d294c4d11de9e8f02be186763/src/bitcoinrpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7cacf505fc47e61d294c4d11de9e8f02be186763/src/bitcoinrpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoinrpc.cpp?ref=7cacf505fc47e61d294c4d11de9e8f02be186763",
        "patch": "@@ -321,7 +321,6 @@ static const CRPCCommand vRPCCommands[] =\n     { \"adjustmalleablepubkey\",  &adjustmalleablepubkey,  false,  false},\n     { \"listmalleableviews\",     &listmalleableviews,     false,  false},\n     { \"dumpmalleablekey\",       &dumpmalleablekey,       false,  false},\n-    { \"validatemalleablepubkey\",&validatemalleablepubkey,true,   false },\n     { \"importmalleablekey\",     &importmalleablekey,     true,   false },\n     { \"encryptdata\",            &encryptdata,            false,  false },\n     { \"decryptdata\",            &decryptdata,            false,  false },"
      },
      {
        "sha": "5befb76534d0525ff40d1638689c0b36b483db79",
        "filename": "src/bitcoinrpc.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7cacf505fc47e61d294c4d11de9e8f02be186763/src/bitcoinrpc.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7cacf505fc47e61d294c4d11de9e8f02be186763/src/bitcoinrpc.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoinrpc.h?ref=7cacf505fc47e61d294c4d11de9e8f02be186763",
        "patch": "@@ -211,7 +211,6 @@ extern json_spirit::Value adjustmalleablekey(const json_spirit::Array& params, b\n extern json_spirit::Value adjustmalleablepubkey(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value listmalleableviews(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value dumpmalleablekey(const json_spirit::Array& params, bool fHelp);\n-extern json_spirit::Value validatemalleablepubkey(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value importmalleablekey(const json_spirit::Array& params, bool fHelp);\n \n extern json_spirit::Value encryptdata(const json_spirit::Array& params, bool fHelp); // in rpccrypt.cpp"
      },
      {
        "sha": "1012915c1ef6bdacc7707c8862fd083603999863",
        "filename": "src/key.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7cacf505fc47e61d294c4d11de9e8f02be186763/src/key.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7cacf505fc47e61d294c4d11de9e8f02be186763/src/key.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.cpp?ref=7cacf505fc47e61d294c4d11de9e8f02be186763",
        "patch": "@@ -725,6 +725,14 @@ std::string CMalleablePubKey::ToString() const\n     return EncodeBase58Check(vch);\n }\n \n+bool CMalleablePubKey::setvch(const std::vector<unsigned char> &vchPubKeyPair)\n+{\n+    CDataStream ssKey(vchPubKeyPair, SER_NETWORK, PROTOCOL_VERSION);\n+    ssKey >> *this;\n+\n+    return IsValid();\n+}\n+\n std::vector<unsigned char> CMalleablePubKey::Raw() const\n {\n     CDataStream ssKey(SER_NETWORK, PROTOCOL_VERSION);"
      },
      {
        "sha": "bc7e2ab59a518efc190bfb04100ca4e7202254ef",
        "filename": "src/key.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7cacf505fc47e61d294c4d11de9e8f02be186763/src/key.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7cacf505fc47e61d294c4d11de9e8f02be186763/src/key.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.h?ref=7cacf505fc47e61d294c4d11de9e8f02be186763",
        "patch": "@@ -251,6 +251,7 @@ class CMalleablePubKey\n         return pubKeyL.GetID();\n     }\n \n+    bool setvch(const std::vector<unsigned char> &vchPubKeyPair);\n     std::vector<unsigned char> Raw() const;\n \n     CPubKey& GetL() { return pubKeyL; }"
      },
      {
        "sha": "3f67ee658a0d3be229435dd7e4d1cb7bf8373fa8",
        "filename": "src/qt/coincontroldialog.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7cacf505fc47e61d294c4d11de9e8f02be186763/src/qt/coincontroldialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7cacf505fc47e61d294c4d11de9e8f02be186763/src/qt/coincontroldialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/coincontroldialog.cpp?ref=7cacf505fc47e61d294c4d11de9e8f02be186763",
        "patch": "@@ -686,7 +686,7 @@ void CoinControlDialog::updateView()\n                     // Pay-to-Pubkey-R\n                     CMalleableKeyView view;\n                     pwalletMain->CheckOwnership(CPubKey(vSolutions[0]), CPubKey(vSolutions[1]), view);\n-                    sAddress = view.GetMalleablePubKey().ToString().c_str();\n+                    sAddress = CBitcoinAddress(view.GetMalleablePubKey()).ToString().c_str();\n                 }\n \n                 // if listMode or change => show bitcoin address. In tree mode, address is not shown again for direct wallet address outputs"
      },
      {
        "sha": "6e72688e8d7dc124fd489758745dd579e159d2a6",
        "filename": "src/rpcdump.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7cacf505fc47e61d294c4d11de9e8f02be186763/src/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7cacf505fc47e61d294c4d11de9e8f02be186763/src/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcdump.cpp?ref=7cacf505fc47e61d294c4d11de9e8f02be186763",
        "patch": "@@ -260,7 +260,7 @@ Value dumpmalleablekey(const Array& params, bool fHelp)\n \n     Object result;\n     result.push_back(Pair(\"PrivatePair\", mKey.ToString()));\n-    result.push_back(Pair(\"PublicPair\", mKey.GetMalleablePubKey().ToString()));\n+    result.push_back(Pair(\"Address\", CBitcoinAddress(mKey.GetMalleablePubKey()).ToString()));\n \n     return result;\n }\n@@ -284,7 +284,7 @@ Value importmalleablekey(const Array& params, bool fHelp)\n     {\n         fSuccess = pwalletMain->AddMalleableKey(mKey);\n         result.push_back(Pair(\"Successful\", fSuccess));\n-        result.push_back(Pair(\"PublicPair\", mKey.GetMalleablePubKey().ToString()));\n+        result.push_back(Pair(\"Address\", CBitcoinAddress(mKey.GetMalleablePubKey()).ToString()));\n         result.push_back(Pair(\"KeyView\", CMalleableKeyView(mKey).ToString()));\n     }\n     else"
      },
      {
        "sha": "127215665ff362b731592f006e423fe1690e82ff",
        "filename": "src/rpcrawtransaction.cpp",
        "status": "modified",
        "additions": 20,
        "deletions": 14,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7cacf505fc47e61d294c4d11de9e8f02be186763/src/rpcrawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7cacf505fc47e61d294c4d11de9e8f02be186763/src/rpcrawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcrawtransaction.cpp?ref=7cacf505fc47e61d294c4d11de9e8f02be186763",
        "patch": "@@ -49,7 +49,7 @@ void ScriptPubKeyToJSON(const CScript& scriptPubKey, Object& out, bool fIncludeH\n \n             CMalleableKeyView view;\n             if (pwalletMain->CheckOwnership(CPubKey(vSolutions[0]), CPubKey(vSolutions[1]), view))\n-                out.push_back(Pair(\"pubkeyPair\", view.GetMalleablePubKey().ToString()));\n+                out.push_back(Pair(\"pubkeyPair\", CBitcoinAddress(view.GetMalleablePubKey()).ToString()));\n         }\n         else\n         {\n@@ -293,23 +293,29 @@ Value createrawtransaction(const Array& params, bool fHelp)\n         // Create output destination script\n         CScript scriptPubKey;\n         CBitcoinAddress address(s.name_);\n-        if (!address.IsValid())\n+\n+        if (address.IsValid())\n         {\n-            CMalleablePubKey mpk(s.name_);\n-            if (!mpk.IsValid())\n-                throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, string(\"Invalid output destination: \")+s.name_);\n+            if (!address.IsPair())\n+            {\n+                scriptPubKey.SetDestination(address.Get());\n+                if (setAddress.count(address))\n+                    throw JSONRPCError(RPC_INVALID_PARAMETER, string(\"Invalid parameter, duplicated address: \")+s.name_);\n+                setAddress.insert(address);\n+            }\n+            else\n+            {\n+                CMalleablePubKey mpk;\n+                if (!mpk.setvch(address.GetData()))\n+                    throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, string(\"Invalid output destination: \")+s.name_);\n \n-            CPubKey keyVariant, R;\n-            mpk.GetVariant(R, keyVariant);\n-            scriptPubKey.SetDestination(R, keyVariant);\n+                CPubKey R, pubKeyVariant;\n+                mpk.GetVariant(R, pubKeyVariant);\n+                scriptPubKey.SetDestination(R, pubKeyVariant);\n+            }\n         }\n         else\n-        {\n-            scriptPubKey.SetDestination(address.Get());\n-            if (setAddress.count(address))\n-                throw JSONRPCError(RPC_INVALID_PARAMETER, string(\"Invalid parameter, duplicated address: \")+s.name_);\n-            setAddress.insert(address);\n-        }\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, string(\"Invalid output destination: \")+s.name_);\n \n         int64_t nAmount = AmountFromValue(s.value_);\n "
      },
      {
        "sha": "a0e6afc476400bd958198e245a01e10cee6b073a",
        "filename": "src/rpcwallet.cpp",
        "status": "modified",
        "additions": 57,
        "deletions": 58,
        "changes": 115,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7cacf505fc47e61d294c4d11de9e8f02be186763/src/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7cacf505fc47e61d294c4d11de9e8f02be186763/src/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.cpp?ref=7cacf505fc47e61d294c4d11de9e8f02be186763",
        "patch": "@@ -329,17 +329,22 @@ Value sendtoaddress(const Array& params, bool fHelp)\n \n     CBitcoinAddress address(strAddress);\n     if (address.IsValid())\n-        scriptPubKey.SetDestination(address.Get());\n-    else\n     {\n-        CMalleablePubKey mpk(strAddress);\n-        if (!mpk.IsValid())\n-            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid NovaCoin address\");\n+        if (!address.IsPair())\n+            scriptPubKey.SetDestination(address.Get());\n+        else\n+        {\n+            CMalleablePubKey mpk;\n+            if (!mpk.setvch(address.GetData()))\n+                throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid NovaCoin address\");\n \n-        CPubKey R, pubKeyVariant;\n-        mpk.GetVariant(R, pubKeyVariant);\n-        scriptPubKey.SetDestination(R, pubKeyVariant);\n+            CPubKey R, pubKeyVariant;\n+            mpk.GetVariant(R, pubKeyVariant);\n+            scriptPubKey.SetDestination(R, pubKeyVariant);\n+        }\n     }\n+    else\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid NovaCoin address\");\n \n     // Amount\n     int64_t nAmount = AmountFromValue(params[1]);\n@@ -716,17 +721,23 @@ Value sendfrom(const Array& params, bool fHelp)\n \n     CBitcoinAddress address(strAddress);\n     if (address.IsValid())\n-        scriptPubKey.SetDestination(address.Get());\n-    else\n     {\n-        CMalleablePubKey mpk(strAddress);\n-        if (!mpk.IsValid())\n-            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid NovaCoin address\");\n+        if (!address.IsPair())\n+            scriptPubKey.SetDestination(address.Get());\n+        else\n+        {\n+            CMalleablePubKey mpk;\n+            if (!mpk.setvch(address.GetData()))\n+                throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid NovaCoin address\");\n \n-        CPubKey R, pubKeyVariant;\n-        mpk.GetVariant(R, pubKeyVariant);\n-        scriptPubKey.SetDestination(R, pubKeyVariant);\n+            CPubKey R, pubKeyVariant;\n+            mpk.GetVariant(R, pubKeyVariant);\n+            scriptPubKey.SetDestination(R, pubKeyVariant);\n+        }\n     }\n+    else\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid NovaCoin address\");\n+\n \n     int64_t nAmount = AmountFromValue(params[2]);\n \n@@ -1747,18 +1758,34 @@ Value validateaddress(const Array& params, bool fHelp)\n     ret.push_back(Pair(\"isvalid\", isValid));\n     if (isValid)\n     {\n-        CTxDestination dest = address.Get();\n-        string currentAddress = address.ToString();\n-        ret.push_back(Pair(\"address\", currentAddress));\n-        isminetype mine = pwalletMain ? IsMine(*pwalletMain, dest) : MINE_NO;\n-        ret.push_back(Pair(\"ismine\", mine != MINE_NO));\n-        if (mine != MINE_NO) {\n-            ret.push_back(Pair(\"watchonly\", mine == MINE_WATCH_ONLY));\n-            Object detail = boost::apply_visitor(DescribeAddressVisitor(mine), dest);\n-            ret.insert(ret.end(), detail.begin(), detail.end());\n+        if (address.IsPair())\n+        {\n+            CMalleablePubKey mpk;\n+            mpk.setvch(address.GetData());\n+            ret.push_back(Pair(\"ispair\", true));\n+\n+            CMalleableKeyView view;\n+            bool isMine = pwalletMain->GetMalleableView(mpk, view);\n+            ret.push_back(Pair(\"ismine\", isMine));\n+\n+            if (isMine)\n+                ret.push_back(Pair(\"KeyView\", view.ToString()));\n+        }\n+        else\n+        {\n+            CTxDestination dest = address.Get();\n+            string currentAddress = address.ToString();\n+            ret.push_back(Pair(\"address\", currentAddress));\n+            isminetype mine = pwalletMain ? IsMine(*pwalletMain, dest) : MINE_NO;\n+            ret.push_back(Pair(\"ismine\", mine != MINE_NO));\n+            if (mine != MINE_NO) {\n+                ret.push_back(Pair(\"watchonly\", mine == MINE_WATCH_ONLY));\n+                Object detail = boost::apply_visitor(DescribeAddressVisitor(mine), dest);\n+                ret.insert(ret.end(), detail.begin(), detail.end());\n+            }\n+            if (pwalletMain->mapAddressBook.count(dest))\n+                ret.push_back(Pair(\"account\", pwalletMain->mapAddressBook[dest]));\n         }\n-        if (pwalletMain->mapAddressBook.count(dest))\n-            ret.push_back(Pair(\"account\", pwalletMain->mapAddressBook[dest]));\n     }\n     return ret;\n }\n@@ -1906,43 +1933,16 @@ Value newmalleablekey(const Array& params, bool fHelp)\n         throw runtime_error(\"Unable to generate new malleable key\");\n \n     CMalleablePubKey mPubKey = mKey.GetMalleablePubKey();\n-    CDataStream ssPublicBytes(SER_NETWORK, PROTOCOL_VERSION);\n-    ssPublicBytes << mPubKey;\n \n     Object result;\n     result.push_back(Pair(\"PublicPair\", mPubKey.ToString()));\n-    result.push_back(Pair(\"PublicBytes\", HexStr(ssPublicBytes.begin(), ssPublicBytes.end())));\n+    result.push_back(Pair(\"PublicBytes\", HexStr(mPubKey.Raw())));\n+    result.push_back(Pair(\"Address\", CBitcoinAddress(mPubKey).ToString()));\n     result.push_back(Pair(\"KeyView\", keyView.ToString()));\n \n     return result;\n }\n \n-Value validatemalleablepubkey(const Array& params, bool fHelp)\n-{\n-    if (fHelp || params.size() != 1)\n-        throw runtime_error(\n-            \"validatemalleablekey <Malleable public key data>\\n\"\n-            \"Check the validity and ownership for priovided malleable public key.\\n\");\n-\n-    CMalleablePubKey mpk;\n-    bool isValid = mpk.SetString(params[0].get_str());\n-\n-    Object result;\n-    result.push_back(Pair(\"isvalid\", isValid));\n-\n-    if (isValid)\n-    {\n-        CMalleableKeyView view;\n-        bool isMine = pwalletMain->GetMalleableView(mpk, view);\n-        result.push_back(Pair(\"ismine\", isMine));\n-\n-        if (isMine)\n-            result.push_back(Pair(\"KeyView\", view.ToString()));\n-    }\n-\n-    return result;\n-}\n-\n Value adjustmalleablekey(const Array& params, bool fHelp)\n {\n     if (fHelp || params.size() != 3)\n@@ -1982,8 +1982,7 @@ Value adjustmalleablepubkey(const Array& params, bool fHelp)\n     CMalleablePubKey malleablePubKey;\n \n     if (pubKeyPair.size() == 136) {\n-        CDataStream ssPublicBytes(ParseHex(pubKeyPair), SER_NETWORK, PROTOCOL_VERSION);\n-        ssPublicBytes >> malleablePubKey;\n+        malleablePubKey.setvch(ParseHex(pubKeyPair));\n     } else\n         malleablePubKey.SetString(pubKeyPair);\n "
      },
      {
        "sha": "908afaa4998628279ba05428587f2c11a7482ab0",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7cacf505fc47e61d294c4d11de9e8f02be186763/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7cacf505fc47e61d294c4d11de9e8f02be186763/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=7cacf505fc47e61d294c4d11de9e8f02be186763",
        "patch": "@@ -2829,7 +2829,7 @@ bool CWallet::ExtractAddress(const CScript& scriptPubKey, std::string& addressRe\n         if (!CheckOwnership(CPubKey(vSolutions[0]), CPubKey(vSolutions[1]), view))\n             return false;\n \n-        addressRet = view.GetMalleablePubKey().ToString();\n+        addressRet = CBitcoinAddress(view.GetMalleablePubKey()).ToString();\n         return true;\n     }\n     else if (whichType == TX_PUBKEYHASH)"
      }
    ]
  },
  {
    "sha": "c04f979c80cdd4ca4a5e18437d370fc29d658efa",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjMDRmOTc5YzgwY2RkNGNhNGE1ZTE4NDM3ZDM3MGZjMjlkNjU4ZWZh",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-06T13:38:02Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-06T13:38:02Z"
      },
      "message": "Cleanup",
      "tree": {
        "sha": "bbe288c10d2ad126607a5359afadf23ab6431510",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bbe288c10d2ad126607a5359afadf23ab6431510"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c04f979c80cdd4ca4a5e18437d370fc29d658efa",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c04f979c80cdd4ca4a5e18437d370fc29d658efa",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c04f979c80cdd4ca4a5e18437d370fc29d658efa",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c04f979c80cdd4ca4a5e18437d370fc29d658efa/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7cacf505fc47e61d294c4d11de9e8f02be186763",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7cacf505fc47e61d294c4d11de9e8f02be186763",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7cacf505fc47e61d294c4d11de9e8f02be186763"
      }
    ],
    "stats": {
      "total": 85,
      "additions": 37,
      "deletions": 48
    },
    "files": [
      {
        "sha": "022d83afcd203667889ea1bd63e28661c9b5566c",
        "filename": "src/key.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 22,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c04f979c80cdd4ca4a5e18437d370fc29d658efa/src/key.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c04f979c80cdd4ca4a5e18437d370fc29d658efa/src/key.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.cpp?ref=c04f979c80cdd4ca4a5e18437d370fc29d658efa",
        "patch": "@@ -812,7 +812,7 @@ bool CMalleableKey::SetSecrets(const CSecret &pvchSecretL, const CSecret &pvchSe\n     CKey keyL(pvchSecretL);\n     CKey keyH(pvchSecretH);\n \n-    if (!keyL.IsValid() || !keyL.IsValid())\n+    if (!keyL.IsValid() || !keyH.IsValid())\n         return false;\n \n     vchSecretL = pvchSecretL;\n@@ -823,14 +823,8 @@ bool CMalleableKey::SetSecrets(const CSecret &pvchSecretL, const CSecret &pvchSe\n \n CMalleablePubKey CMalleableKey::GetMalleablePubKey() const\n {\n-    CKey L, H;\n-    L.SetSecret(vchSecretL, true);\n-    H.SetSecret(vchSecretH, true);\n-\n-    std::vector<unsigned char> vchPubKeyL = L.GetPubKey().Raw();\n-    std::vector<unsigned char> vchPubKeyH = H.GetPubKey().Raw();\n-\n-    return CMalleablePubKey(vchPubKeyL, vchPubKeyH);\n+    CKey L(vchSecretL), H(vchSecretH);\n+    return CMalleablePubKey(L.GetPubKey().Raw(), H.GetPubKey().Raw());\n }\n \n // Check ownership\n@@ -853,8 +847,7 @@ bool CMalleableKey::CheckKeyVariant(const CPubKey &R, const CPubKey &vchPubKeyVa\n         throw key_error(\"CMalleableKey::CheckKeyVariant() : Unable to decode R value\");\n     }\n \n-    CKey H;\n-    H.SetSecret(vchSecretH, true);\n+    CKey H(vchSecretH);\n     std::vector<unsigned char> vchPubKeyH = H.GetPubKey().Raw();\n \n     CPoint point_H;\n@@ -923,8 +916,7 @@ bool CMalleableKey::CheckKeyVariant(const CPubKey &R, const CPubKey &vchPubKeyVa\n         throw key_error(\"CMalleableKey::CheckKeyVariant() : Unable to decode R value\");\n     }\n \n-    CKey H;\n-    H.SetSecret(vchSecretH, true);\n+    CKey H(vchSecretH);\n     std::vector<unsigned char> vchPubKeyH = H.GetPubKey().Raw();\n \n     CPoint point_H;\n@@ -978,7 +970,7 @@ bool CMalleableKey::CheckKeyVariant(const CPubKey &R, const CPubKey &vchPubKeyVa\n     CBigNum bnp = bnHash + bnh;\n \n     std::vector<unsigned char> vchp = bnp.getBytes();\n-    privKeyVariant.SetSecret(CSecret(vchp.begin(), vchp.end()), true);\n+    privKeyVariant.SetSecret(CSecret(vchp.begin(), vchp.end()));\n \n     return true;\n }\n@@ -1027,13 +1019,11 @@ CMalleableKeyView::CMalleableKeyView(const CMalleableKey &b)\n         throw key_error(\"CMalleableKeyView::CMalleableKeyView() : L size must be 32 bytes\");\n \n     if (b.vchSecretH.size() != 32)\n-        throw key_error(\"CMalleableKeyView::CMalleableKeyView() : L size must be 32 bytes\");\n+        throw key_error(\"CMalleableKeyView::CMalleableKeyView() : H size must be 32 bytes\");\n \n     vchSecretL = b.vchSecretL;\n \n-    CKey H;\n-    H.SetSecret(b.vchSecretH, true);\n-\n+    CKey H(b.vchSecretH);\n     vchPubKeyH = H.GetPubKey().Raw();\n }\n \n@@ -1047,8 +1037,7 @@ CMalleableKeyView& CMalleableKeyView::operator=(const CMalleableKey &b)\n {\n     vchSecretL = b.vchSecretL;\n \n-    CKey H;\n-    H.SetSecret(b.vchSecretH, true);\n+    CKey H(b.vchSecretH);\n     vchPubKeyH = H.GetPubKey().Raw();\n \n     return (*this);\n@@ -1060,8 +1049,7 @@ CMalleableKeyView::~CMalleableKeyView()\n \n CMalleablePubKey CMalleableKeyView::GetMalleablePubKey() const\n {\n-    CKey keyL;\n-    keyL.SetSecret(vchSecretL, true);\n+    CKey keyL(vchSecretL);\n     return CMalleablePubKey(keyL.GetPubKey(), vchPubKeyH);\n }\n "
      },
      {
        "sha": "98b61718c200f4708eebd608a461503bb6d4d590",
        "filename": "src/qt/transactionrecord.cpp",
        "status": "modified",
        "additions": 17,
        "deletions": 17,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c04f979c80cdd4ca4a5e18437d370fc29d658efa/src/qt/transactionrecord.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c04f979c80cdd4ca4a5e18437d370fc29d658efa/src/qt/transactionrecord.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionrecord.cpp?ref=c04f979c80cdd4ca4a5e18437d370fc29d658efa",
        "patch": "@@ -32,8 +32,11 @@ QList<TransactionRecord> TransactionRecord::decomposeTransaction(const CWallet *\n     int64_t nNet = nCredit - nDebit;\n     uint256 hash = wtx.GetHash(), hashPrev = 0;\n     std::map<std::string, std::string> mapValue = wtx.mapValue;\n+    \n+    bool fCoinBase = wtx.IsCoinBase(),\n+         fCoinStake = wtx.IsCoinStake();\n \n-    if (nNet > 0 || wtx.IsCoinBase() || wtx.IsCoinStake())\n+    if (nNet > 0 || fCoinBase || fCoinStake)\n     {\n         //\n         // Credit\n@@ -46,11 +49,11 @@ QList<TransactionRecord> TransactionRecord::decomposeTransaction(const CWallet *\n                 sub.idx = parts.size(); // sequence number\n                 sub.credit = txout.nValue;\n \n-                std::string address;\n-                if (pwalletMain->ExtractAddress(txout.scriptPubKey, address))\n+                CBitcoinAddress addressRet;\n+                if (pwalletMain->ExtractAddress(txout.scriptPubKey, addressRet))\n                 {\n                     sub.type = TransactionRecord::RecvWithAddress;\n-                    sub.address = address;\n+                    sub.address = addressRet.ToString();\n                 }\n                 else\n                 {\n@@ -59,21 +62,18 @@ QList<TransactionRecord> TransactionRecord::decomposeTransaction(const CWallet *\n                     sub.address = mapValue[\"from\"];\n                 }\n \n-                if (wtx.IsCoinBase())\n+                if (fCoinBase || fCoinStake)\n                 {\n-                    // Generated (proof-of-work)\n+                    // Generated\n                     sub.type = TransactionRecord::Generated;\n-                }\n-                if (wtx.IsCoinStake())\n-                {\n-                    // Generated (proof-of-stake)\n-\n-                    if (hashPrev == hash)\n-                        continue; // last coinstake output\n-\n-                    sub.type = TransactionRecord::Generated;\n-                    sub.credit = nNet > 0 ? nNet : wtx.GetValueOut() - nDebit;\n-                    hashPrev = hash;\n+                    if (fCoinStake)\n+                    {\n+                        // proof-of-stake\n+                        if (hashPrev == hash)\n+                            continue; // last coinstake output\n+                        sub.credit = nNet > 0 ? nNet : wtx.GetValueOut() - nDebit;\n+                        hashPrev = hash;\n+                    }\n                 }\n \n                 parts.append(sub);"
      },
      {
        "sha": "a185ed3cf4ed586e7f186e826f998b9d3759ab10",
        "filename": "src/qt/walletmodel.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c04f979c80cdd4ca4a5e18437d370fc29d658efa/src/qt/walletmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c04f979c80cdd4ca4a5e18437d370fc29d658efa/src/qt/walletmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.cpp?ref=c04f979c80cdd4ca4a5e18437d370fc29d658efa",
        "patch": "@@ -495,11 +495,11 @@ void WalletModel::listCoins(std::map<QString, std::vector<COutput> >& mapCoins)\n             cout = COutput(&wallet->mapWallet[cout.tx->vin[0].prevout.hash], cout.tx->vin[0].prevout.n, 0, true);\n         }\n \n-        std::string address;\n-        if(!out.fSpendable || !wallet->ExtractAddress(cout.tx->vout[cout.i].scriptPubKey, address))\n+        CBitcoinAddress addressRet;\n+        if(!out.fSpendable || !wallet->ExtractAddress(cout.tx->vout[cout.i].scriptPubKey, addressRet))\n             continue;\n \n-        mapCoins[address.c_str()].push_back(out);\n+        mapCoins[addressRet.ToString().c_str()].push_back(out);\n     }\n }\n "
      },
      {
        "sha": "ab44a9be4d6121599e5f1dcf368a61e25d2253d9",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c04f979c80cdd4ca4a5e18437d370fc29d658efa/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c04f979c80cdd4ca4a5e18437d370fc29d658efa/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=c04f979c80cdd4ca4a5e18437d370fc29d658efa",
        "patch": "@@ -2810,7 +2810,7 @@ void CWallet::ClearOrphans()\n         EraseFromWallet(*it);\n }\n \n-bool CWallet::ExtractAddress(const CScript& scriptPubKey, std::string& addressRet)\n+bool CWallet::ExtractAddress(const CScript& scriptPubKey, CBitcoinAddress& addressRet)\n {\n     vector<valtype> vSolutions;\n     txnouttype whichType;\n@@ -2819,7 +2819,7 @@ bool CWallet::ExtractAddress(const CScript& scriptPubKey, std::string& addressRe\n \n     if (whichType == TX_PUBKEY)\n     {\n-        addressRet = CBitcoinAddress(CPubKey(vSolutions[0]).GetID()).ToString();\n+        addressRet = CBitcoinAddress(CPubKey(vSolutions[0]).GetID());\n         return true;\n     }\n     if (whichType == TX_PUBKEY_DROP)\n@@ -2829,17 +2829,17 @@ bool CWallet::ExtractAddress(const CScript& scriptPubKey, std::string& addressRe\n         if (!CheckOwnership(CPubKey(vSolutions[0]), CPubKey(vSolutions[1]), view))\n             return false;\n \n-        addressRet = CBitcoinAddress(view.GetMalleablePubKey()).ToString();\n+        addressRet = CBitcoinAddress(view.GetMalleablePubKey());\n         return true;\n     }\n     else if (whichType == TX_PUBKEYHASH)\n     {\n-        addressRet = CBitcoinAddress(CKeyID(uint160(vSolutions[0]))).ToString();\n+        addressRet = CBitcoinAddress(CKeyID(uint160(vSolutions[0])));\n         return true;\n     }\n     else if (whichType == TX_SCRIPTHASH)\n     {\n-        addressRet = CBitcoinAddress(CScriptID(uint160(vSolutions[0]))).ToString();\n+        addressRet = CBitcoinAddress(CScriptID(uint160(vSolutions[0])));\n         return true;\n     }\n     // Multisig txns have more than one address..."
      },
      {
        "sha": "aa2194411e8f878625a3f3cea768c2f16531efe2",
        "filename": "src/wallet.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c04f979c80cdd4ca4a5e18437d370fc29d658efa/src/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c04f979c80cdd4ca4a5e18437d370fc29d658efa/src/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.h?ref=c04f979c80cdd4ca4a5e18437d370fc29d658efa",
        "patch": "@@ -17,6 +17,7 @@\n #include \"ui_interface.h\"\n #include \"util.h\"\n #include \"walletdb.h\"\n+#include \"base58.h\"\n \n extern unsigned int nStakeMaxAge;\n extern bool fWalletUnlockMintOnly;\n@@ -339,7 +340,7 @@ class CWallet : public CCryptoKeyStore\n \n     bool GetTransaction(const uint256 &hashTx, CWalletTx& wtx);\n \n-    bool ExtractAddress(const CScript& scriptPubKey, std::string& addressRet);\n+    bool ExtractAddress(const CScript& scriptPubKey, CBitcoinAddress& addressRet);\n \n     bool SetDefaultKey(const CPubKey &vchPubKey);\n "
      }
    ]
  },
  {
    "sha": "a37aeb3dd44f502c7e2a455ca820f789cbcca80b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphMzdhZWIzZGQ0NGY1MDJjN2UyYTQ1NWNhODIwZjc4OWNiY2NhODBi",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-06T14:03:53Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-06T14:03:53Z"
      },
      "message": "Don't throw exceptions while processing public values.",
      "tree": {
        "sha": "af0c0246c30a46eef5c65c0497a27e86c95bba0c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/af0c0246c30a46eef5c65c0497a27e86c95bba0c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a37aeb3dd44f502c7e2a455ca820f789cbcca80b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a37aeb3dd44f502c7e2a455ca820f789cbcca80b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a37aeb3dd44f502c7e2a455ca820f789cbcca80b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a37aeb3dd44f502c7e2a455ca820f789cbcca80b/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c04f979c80cdd4ca4a5e18437d370fc29d658efa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c04f979c80cdd4ca4a5e18437d370fc29d658efa",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c04f979c80cdd4ca4a5e18437d370fc29d658efa"
      }
    ],
    "stats": {
      "total": 76,
      "additions": 52,
      "deletions": 24
    },
    "files": [
      {
        "sha": "49868b8f394abdd193165ad60dc08b356b922cca",
        "filename": "src/key.cpp",
        "status": "modified",
        "additions": 52,
        "deletions": 24,
        "changes": 76,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a37aeb3dd44f502c7e2a455ca820f789cbcca80b/src/key.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a37aeb3dd44f502c7e2a455ca820f789cbcca80b/src/key.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.cpp?ref=a37aeb3dd44f502c7e2a455ca820f789cbcca80b",
        "patch": "@@ -835,34 +835,40 @@ bool CMalleableKey::CheckKeyVariant(const CPubKey &R, const CPubKey &vchPubKeyVa\n     }\n \n     if (!R.IsValid()) {\n-        throw key_error(\"CMalleableKey::CheckKeyVariant() : R is invalid\");\n+        printf(\"CMalleableKey::CheckKeyVariant() : R is invalid\");\n+        return false;\n     }\n \n     if (!vchPubKeyVariant.IsValid()) {\n-        throw key_error(\"CMalleableKey::CheckKeyVariant() : public key variant is invalid\");\n+        printf(\"CMalleableKey::CheckKeyVariant() : public key variant is invalid\");\n+        return false;\n     }\n \n     CPoint point_R;\n     if (!point_R.setPubKey(R)) {\n-        throw key_error(\"CMalleableKey::CheckKeyVariant() : Unable to decode R value\");\n+        printf(\"CMalleableKey::CheckKeyVariant() : Unable to decode R value\");\n+        return false;\n     }\n \n     CKey H(vchSecretH);\n     std::vector<unsigned char> vchPubKeyH = H.GetPubKey().Raw();\n \n     CPoint point_H;\n     if (!point_H.setPubKey(vchPubKeyH)) {\n-        throw key_error(\"CMalleableKey::CheckKeyVariant() : Unable to decode H value\");\n+        printf(\"CMalleableKey::CheckKeyVariant() : Unable to decode H value\");\n+        return false;\n     }\n \n     CPoint point_P;\n     if (!point_P.setPubKey(vchPubKeyVariant)) {\n-        throw key_error(\"CMalleableKey::CheckKeyVariant() : Unable to decode P value\");\n+        printf(\"CMalleableKey::CheckKeyVariant() : Unable to decode P value\");\n+        return false;\n     }\n \n     // Infinity points are senseless\n     if (point_P.IsInfinity()) {\n-        throw key_error(\"CMalleableKey::CheckKeyVariant() : P is infinity\");\n+        printf(\"CMalleableKey::CheckKeyVariant() : P is infinity\");\n+        return false;\n     }\n \n     CBigNum bnl;\n@@ -872,7 +878,8 @@ bool CMalleableKey::CheckKeyVariant(const CPubKey &R, const CPubKey &vchPubKeyVa\n \n     std::vector<unsigned char> vchRl;\n     if (!point_R.getBytes(vchRl)) {\n-        throw key_error(\"CMalleableKey::CheckKeyVariant() : Unable to convert Rl value\");\n+        printf(\"CMalleableKey::CheckKeyVariant() : Unable to convert Rl value\");\n+        return false;\n     }\n \n     // Calculate Hash(R*l)\n@@ -885,7 +892,8 @@ bool CMalleableKey::CheckKeyVariant(const CPubKey &R, const CPubKey &vchPubKeyVa\n \n     // Infinity points are senseless\n     if (point_Ps.IsInfinity()) {\n-        throw key_error(\"CMalleableKey::CheckKeyVariant() : Ps is infinity\");\n+        printf(\"CMalleableKey::CheckKeyVariant() : Ps is infinity\");\n+        return false;\n     }\n \n     // Check ownership\n@@ -904,34 +912,40 @@ bool CMalleableKey::CheckKeyVariant(const CPubKey &R, const CPubKey &vchPubKeyVa\n     }\n \n     if (!R.IsValid()) {\n-        throw key_error(\"CMalleableKey::CheckKeyVariant() : R is invalid\");\n+        printf(\"CMalleableKey::CheckKeyVariant() : R is invalid\");\n+        return false;\n     }\n \n     if (!vchPubKeyVariant.IsValid()) {\n-        throw key_error(\"CMalleableKey::CheckKeyVariant() : public key variant is invalid\");\n+        printf(\"CMalleableKey::CheckKeyVariant() : public key variant is invalid\");\n+        return false;\n     }\n \n     CPoint point_R;\n     if (!point_R.setPubKey(R)) {\n-        throw key_error(\"CMalleableKey::CheckKeyVariant() : Unable to decode R value\");\n+        printf(\"CMalleableKey::CheckKeyVariant() : Unable to decode R value\");\n+        return false;\n     }\n \n     CKey H(vchSecretH);\n     std::vector<unsigned char> vchPubKeyH = H.GetPubKey().Raw();\n \n     CPoint point_H;\n     if (!point_H.setPubKey(vchPubKeyH)) {\n-        throw key_error(\"CMalleableKey::CheckKeyVariant() : Unable to decode H value\");\n+        printf(\"CMalleableKey::CheckKeyVariant() : Unable to decode H value\");\n+        return false;\n     }\n \n     CPoint point_P;\n     if (!point_P.setPubKey(vchPubKeyVariant)) {\n-        throw key_error(\"CMalleableKey::CheckKeyVariant() : Unable to decode P value\");\n+        printf(\"CMalleableKey::CheckKeyVariant() : Unable to decode P value\");\n+        return false;\n     }\n \n     // Infinity points are senseless\n     if (point_P.IsInfinity()) {\n-        throw key_error(\"CMalleableKey::CheckKeyVariant() : P is infinity\");\n+        printf(\"CMalleableKey::CheckKeyVariant() : P is infinity\");\n+        return false;\n     }\n \n     CBigNum bnl;\n@@ -941,7 +955,8 @@ bool CMalleableKey::CheckKeyVariant(const CPubKey &R, const CPubKey &vchPubKeyVa\n \n     std::vector<unsigned char> vchRl;\n     if (!point_R.getBytes(vchRl)) {\n-        throw key_error(\"CMalleableKey::CheckKeyVariant() : Unable to convert Rl value\");\n+        printf(\"CMalleableKey::CheckKeyVariant() : Unable to convert Rl value\");\n+        return false;\n     }\n \n     // Calculate Hash(R*l)\n@@ -954,7 +969,8 @@ bool CMalleableKey::CheckKeyVariant(const CPubKey &R, const CPubKey &vchPubKeyVa\n \n     // Infinity points are senseless\n     if (point_Ps.IsInfinity()) {\n-        throw key_error(\"CMalleableKey::CheckKeyVariant() : Ps is infinity\");\n+        printf(\"CMalleableKey::CheckKeyVariant() : Ps is infinity\");\n+        return false;\n     }\n \n     // Check ownership\n@@ -1056,32 +1072,42 @@ CMalleablePubKey CMalleableKeyView::GetMalleablePubKey() const\n // Check ownership\n bool CMalleableKeyView::CheckKeyVariant(const CPubKey &R, const CPubKey &vchPubKeyVariant) const\n {\n+    if (!IsValid()) {\n+        throw key_error(\"CMalleableKeyView::CheckKeyVariant() : Attempting to run on invalid view object.\");\n+    }\n+\n     if (!R.IsValid()) {\n-        throw key_error(\"CMalleableKeyView::CheckKeyVariant() : R is invalid\");\n+        printf(\"CMalleableKeyView::CheckKeyVariant() : R is invalid\");\n+        return false;\n     }\n \n     if (!vchPubKeyVariant.IsValid()) {\n-        throw key_error(\"CMalleableKeyView::CheckKeyVariant() : public key variant is invalid\");\n+        printf(\"CMalleableKeyView::CheckKeyVariant() : public key variant is invalid\");\n+        return false;\n     }\n \n     CPoint point_R;\n     if (!point_R.setPubKey(R)) {\n-        throw key_error(\"CMalleableKeyView::CheckKeyVariant() : Unable to decode R value\");\n+        printf(\"CMalleableKeyView::CheckKeyVariant() : Unable to decode R value\");\n+        return false;\n     }\n \n     CPoint point_H;\n     if (!point_H.setPubKey(vchPubKeyH)) {\n-        throw key_error(\"CMalleableKeyView::CheckKeyVariant() : Unable to decode H value\");\n+        printf(\"CMalleableKeyView::CheckKeyVariant() : Unable to decode H value\");\n+        return false;\n     }\n \n     CPoint point_P;\n     if (!point_P.setPubKey(vchPubKeyVariant)) {\n-        throw key_error(\"CMalleableKeyView::CheckKeyVariant() : Unable to decode P value\");\n+        printf(\"CMalleableKeyView::CheckKeyVariant() : Unable to decode P value\");\n+        return false;\n     }\n \n     // Infinity points are senseless\n     if (point_P.IsInfinity()) {\n-        throw key_error(\"CMalleableKeyView::CheckKeyVariant() : P is infinity\");\n+        printf(\"CMalleableKeyView::CheckKeyVariant() : P is infinity\");\n+        return false;\n     }\n \n     CBigNum bnl;\n@@ -1091,7 +1117,8 @@ bool CMalleableKeyView::CheckKeyVariant(const CPubKey &R, const CPubKey &vchPubK\n \n     std::vector<unsigned char> vchRl;\n     if (!point_R.getBytes(vchRl)) {\n-        throw key_error(\"CMalleableKeyView::CheckKeyVariant() : Unable to convert Rl value\");\n+        printf(\"CMalleableKeyView::CheckKeyVariant() : Unable to convert Rl value\");\n+        return false;\n     }\n \n     // Calculate Hash(R*l)\n@@ -1104,7 +1131,8 @@ bool CMalleableKeyView::CheckKeyVariant(const CPubKey &R, const CPubKey &vchPubK\n \n     // Infinity points are senseless\n     if (point_Ps.IsInfinity()) {\n-        throw key_error(\"CMalleableKeyView::CheckKeyVariant() : Ps is infinity\");\n+        printf(\"CMalleableKeyView::CheckKeyVariant() : Ps is infinity\");\n+        return false;\n     }\n \n     // Check ownership"
      }
    ]
  },
  {
    "sha": "75ec6d7e0bd24c2c16120d88d70667208c300f28",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3NWVjNmQ3ZTBiZDI0YzJjMTYxMjBkODhkNzA2NjcyMDhjMzAwZjI4",
    "commit": {
      "author": {
        "name": "svost",
        "email": "ya.nowa@yandex.ru",
        "date": "2016-03-06T17:10:10Z"
      },
      "committer": {
        "name": "svost",
        "email": "ya.nowa@yandex.ru",
        "date": "2016-03-06T17:10:10Z"
      },
      "message": "Get rid of boost::split function",
      "tree": {
        "sha": "fd5604437a64d42c4e20a6d0eee984ff82d31953",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fd5604437a64d42c4e20a6d0eee984ff82d31953"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/75ec6d7e0bd24c2c16120d88d70667208c300f28",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/75ec6d7e0bd24c2c16120d88d70667208c300f28",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/75ec6d7e0bd24c2c16120d88d70667208c300f28",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/75ec6d7e0bd24c2c16120d88d70667208c300f28/comments",
    "author": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a37aeb3dd44f502c7e2a455ca820f789cbcca80b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a37aeb3dd44f502c7e2a455ca820f789cbcca80b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a37aeb3dd44f502c7e2a455ca820f789cbcca80b"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 4,
      "deletions": 2
    },
    "files": [
      {
        "sha": "d0f4e15d0054b823b800ced2b239cb3b11905fb0",
        "filename": "src/bitcoinrpc.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/75ec6d7e0bd24c2c16120d88d70667208c300f28/src/bitcoinrpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/75ec6d7e0bd24c2c16120d88d70667208c300f28/src/bitcoinrpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoinrpc.cpp?ref=75ec6d7e0bd24c2c16120d88d70667208c300f28",
        "patch": "@@ -427,7 +427,8 @@ int ReadHTTPStatus(std::basic_istream<char>& stream, int &proto)\n     string str;\n     getline(stream, str);\n     vector<string> vWords;\n-    boost::split(vWords, str, boost::is_any_of(\" \"));\n+    istringstream iss(str);\n+    copy(istream_iterator<string>(iss), istream_iterator<string>(), back_inserter(vWords));\n     if (vWords.size() < 2)\n         return HTTP_INTERNAL_SERVER_ERROR;\n     proto = 0;"
      },
      {
        "sha": "5c78ff2d2c5abeac14f556b846d0645ccb3a679f",
        "filename": "src/walletdb.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/75ec6d7e0bd24c2c16120d88d70667208c300f28/src/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/75ec6d7e0bd24c2c16120d88d70667208c300f28/src/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/walletdb.cpp?ref=75ec6d7e0bd24c2c16120d88d70667208c300f28",
        "patch": "@@ -879,7 +879,8 @@ bool ImportWallet(CWallet *pwallet, const string& strLocation)\n               continue;\n \n           std::vector<std::string> vstr;\n-          boost::split(vstr, line, boost::is_any_of(\" \"));\n+          istringstream iss(line);\n+          copy(istream_iterator<string>(iss), istream_iterator<string>(), back_inserter(vstr));\n           if (vstr.size() < 2)\n               continue;\n           CBitcoinSecret vchSecret;"
      }
    ]
  },
  {
    "sha": "3eedd3abbdc9582edd7a5c422f31e1449e14d1e8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozZWVkZDNhYmJkYzk1ODJlZGQ3YTVjNDIyZjMxZTE0NDllMTRkMWU4",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-06T20:54:53Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-06T20:54:53Z"
      },
      "message": "Simplification of scriptPubKey handling code.",
      "tree": {
        "sha": "101db271f5a06f149bc3046bbc2c3018a2531a64",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/101db271f5a06f149bc3046bbc2c3018a2531a64"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3eedd3abbdc9582edd7a5c422f31e1449e14d1e8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3eedd3abbdc9582edd7a5c422f31e1449e14d1e8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3eedd3abbdc9582edd7a5c422f31e1449e14d1e8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3eedd3abbdc9582edd7a5c422f31e1449e14d1e8/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a37aeb3dd44f502c7e2a455ca820f789cbcca80b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a37aeb3dd44f502c7e2a455ca820f789cbcca80b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a37aeb3dd44f502c7e2a455ca820f789cbcca80b"
      }
    ],
    "stats": {
      "total": 196,
      "additions": 86,
      "deletions": 110
    },
    "files": [
      {
        "sha": "9b9cb1477054a67f3194dff61d7e8d81dc041cf8",
        "filename": "novacoin-qt.pro",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3eedd3abbdc9582edd7a5c422f31e1449e14d1e8/novacoin-qt.pro",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3eedd3abbdc9582edd7a5c422f31e1449e14d1e8/novacoin-qt.pro",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/novacoin-qt.pro?ref=3eedd3abbdc9582edd7a5c422f31e1449e14d1e8",
        "patch": "@@ -52,8 +52,8 @@ contains(RELEASE, 1) {\n }\n \n contains(DEBUG, 1) {\n-    QMAKE_CXXFLAGS_RELEASE -= -O2\n-    QMAKE_CFLAGS_RELEASE -= -O2\n+    QMAKE_CXXFLAGS -= -O2\n+    QMAKE_CFLAGS -= -O2\n \n     QMAKE_CFLAGS += -g -O0\n     QMAKE_CXXCFLAGS += -g -O0"
      },
      {
        "sha": "2691ea4d6f999d8d47533443437f0aaf67a93076",
        "filename": "src/base58.cpp",
        "status": "modified",
        "additions": 29,
        "deletions": 1,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3eedd3abbdc9582edd7a5c422f31e1449e14d1e8/src/base58.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3eedd3abbdc9582edd7a5c422f31e1449e14d1e8/src/base58.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/base58.cpp?ref=3eedd3abbdc9582edd7a5c422f31e1449e14d1e8",
        "patch": "@@ -258,11 +258,13 @@ bool DecodeBase58Check(const std::string& str, std::vector<unsigned char>& vchRe\n     {\n         unsigned int nExpectedSize = 20;\n         bool fExpectTestNet = false;\n+        bool fSimple = true;\n         switch(nVersion)\n         {\n             case PUBKEY_PAIR_ADDRESS:\n                 nExpectedSize = 68; // Serialized pair of public keys\n                 fExpectTestNet = false;\n+                fSimple = false;\n                 break;\n             case PUBKEY_ADDRESS:\n                 nExpectedSize = 20; // Hash of public key\n@@ -276,6 +278,7 @@ bool DecodeBase58Check(const std::string& str, std::vector<unsigned char>& vchRe\n             case PUBKEY_PAIR_ADDRESS_TEST:\n                 nExpectedSize = 68;\n                 fExpectTestNet = true;\n+                fSimple = false;\n                 break;\n             case PUBKEY_ADDRESS_TEST:\n                 nExpectedSize = 20;\n@@ -289,7 +292,20 @@ bool DecodeBase58Check(const std::string& str, std::vector<unsigned char>& vchRe\n             default:\n                 return false;\n         }\n-        return fExpectTestNet == fTestNet && vchData.size() == nExpectedSize;\n+\n+        // Basic format sanity check\n+        bool fSeemsSane = (fExpectTestNet == fTestNet && vchData.size() == nExpectedSize);\n+\n+        if (fSeemsSane && !fSimple)\n+        {\n+            // Perform dditional checking\n+            //    for pubkey pair addresses\n+            CMalleablePubKey mpk;\n+            mpk.setvch(vchData);\n+            return mpk.IsValid();\n+        }\n+        else\n+            return fSeemsSane;\n     }\n \n     CTxDestination CBitcoinAddress::Get() const {\n@@ -345,6 +361,18 @@ bool DecodeBase58Check(const std::string& str, std::vector<unsigned char>& vchRe\n         default: return false;\n         }\n     }\n+\n+    bool CBitcoinAddress::IsPubKey() const {\n+        if (!IsValid())\n+            return false;\n+        switch (nVersion) {\n+        case PUBKEY_ADDRESS:\n+        case PUBKEY_ADDRESS_TEST: {\n+            return true;\n+        }\n+        default: return false;\n+        }\n+    }\n     \n     bool CBitcoinAddress::IsPair() const {\n         if (!IsValid())"
      },
      {
        "sha": "d5df354d781cdb9a9f63c813b3466e64b0a3da83",
        "filename": "src/base58.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3eedd3abbdc9582edd7a5c422f31e1449e14d1e8/src/base58.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3eedd3abbdc9582edd7a5c422f31e1449e14d1e8/src/base58.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/base58.h?ref=3eedd3abbdc9582edd7a5c422f31e1449e14d1e8",
        "patch": "@@ -142,6 +142,7 @@ class CBitcoinAddress : public CBase58Data\n     CTxDestination Get() const;\n     bool GetKeyID(CKeyID &keyID) const;\n     bool IsScript() const;\n+    bool IsPubKey() const;\n     bool IsPair() const;\n };\n "
      },
      {
        "sha": "9ea82a4d8f4bccf200d136bba056c792ec88fe48",
        "filename": "src/qt/coincontroldialog.cpp",
        "status": "modified",
        "additions": 21,
        "deletions": 57,
        "changes": 78,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3eedd3abbdc9582edd7a5c422f31e1449e14d1e8/src/qt/coincontroldialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3eedd3abbdc9582edd7a5c422f31e1449e14d1e8/src/qt/coincontroldialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/coincontroldialog.cpp?ref=3eedd3abbdc9582edd7a5c422f31e1449e14d1e8",
        "patch": "@@ -4,6 +4,7 @@\n #include \"init.h\"\n #include \"base58.h\"\n #include \"bitcoinunits.h\"\n+#include \"wallet.h\"\n #include \"walletmodel.h\"\n #include \"addresstablemodel.h\"\n #include \"optionsmodel.h\"\n@@ -469,17 +470,22 @@ void CoinControlDialog::updateLabels(WalletModel *model, QWidget* dialog)\n         dPriorityInputs += (double)out.tx->vout[out.i].nValue * (out.nDepth+1);\n \n         // Bytes\n-        CTxDestination address;\n-        if(ExtractDestination(out.tx->vout[out.i].scriptPubKey, address))\n+        CBitcoinAddress address;\n+        if(pwalletMain->ExtractAddress(out.tx->vout[out.i].scriptPubKey, address))\n         {\n-            CPubKey pubkey;\n-            CKeyID *keyid = boost::get< CKeyID >(&address);\n-            if (keyid && model->getPubKey(*keyid, pubkey))\n-                nBytesInputs += (pubkey.IsCompressed() ? 148 : 180);\n-            else\n-                nBytesInputs += 148; // in all error cases, simply assume 148 here\n+            if (address.IsPair())\n+                nBytesInputs += 213;\n+            else if (address.IsPubKey())\n+            {\n+                CPubKey pubkey;\n+                CTxDestination dest = address.Get();\n+                CKeyID *keyid = boost::get< CKeyID >(&dest);\n+                if (keyid && model->getPubKey(*keyid, pubkey))\n+                    nBytesInputs += (pubkey.IsCompressed() ? 148 : 180);\n+                else\n+                    nBytesInputs += 148; // in all error cases, simply assume 148 here\n+            }\n         }\n-        else nBytesInputs += 148;\n     }\n \n     // calculation\n@@ -631,67 +637,25 @@ void CoinControlDialog::updateView()\n             itemOutput->setCheckState(COLUMN_CHECKBOX,Qt::Unchecked);\n \n             // address\n-/*\n-            CTxDestination outputAddress;\n+            CBitcoinAddress outputAddress;\n             QString sAddress = \"\";\n-            if(ExtractDestination(out.tx->vout[out.i].scriptPubKey, outputAddress))\n+\n+            if(pwalletMain->ExtractAddress(out.tx->vout[out.i].scriptPubKey, outputAddress))\n             {\n                 sAddress = CBitcoinAddress(outputAddress).ToString().c_str();\n \n                 // if listMode or change => show bitcoin address. In tree mode, address is not shown again for direct wallet address outputs\n                 if (!treeMode || (!(sAddress == sWalletAddress)))\n                     itemOutput->setText(COLUMN_ADDRESS, sAddress);\n \n-                CPubKey pubkey;\n-                CKeyID *keyid = boost::get< CKeyID >(&outputAddress);\n-                if (keyid && model->getPubKey(*keyid, pubkey) && !pubkey.IsCompressed())\n-                    nInputSize = 180;\n-            }\n-*/\n-            QString sAddress = \"\";\n-            txnouttype whichType;\n-            std::vector<valtype> vSolutions;\n-            if (Solver(out.tx->vout[out.i].scriptPubKey, whichType, vSolutions))\n-            {\n-                CTxDestination address;\n-                if (whichType == TX_PUBKEY)\n+                if (outputAddress.IsPubKey())\n                 {\n-                    // Pay-to-Pubkey\n-                    CPubKey pubKey = CPubKey(vSolutions[0]);\n-                    address = pubKey.GetID();\n-                    sAddress = CBitcoinAddress(address).ToString().c_str();\n-\n-                    if (!pubKey.IsCompressed())\n-                        nInputSize = 180;\n-                }\n-                else if (whichType == TX_PUBKEYHASH)\n-                {\n-                    // Pay-to-PubkeyHash\n-                    address = CKeyID(uint160(vSolutions[0]));\n-                    sAddress = CBitcoinAddress(address).ToString().c_str();\n-\n                     CPubKey pubkey;\n-                    CKeyID *keyid = boost::get< CKeyID >(&address);\n+                    CTxDestination dest = outputAddress.Get();\n+                    CKeyID *keyid = boost::get< CKeyID >(&dest);\n                     if (keyid && model->getPubKey(*keyid, pubkey) && !pubkey.IsCompressed())\n                         nInputSize = 180;\n                 }\n-                else if (whichType == TX_SCRIPTHASH)\n-                {\n-                    // Pay-to-ScriptHash\n-                    address = CScriptID(uint160(vSolutions[0]));\n-                    sAddress = CBitcoinAddress(address).ToString().c_str();\n-                }\n-                else if (whichType == TX_PUBKEY_DROP)\n-                {\n-                    // Pay-to-Pubkey-R\n-                    CMalleableKeyView view;\n-                    pwalletMain->CheckOwnership(CPubKey(vSolutions[0]), CPubKey(vSolutions[1]), view);\n-                    sAddress = CBitcoinAddress(view.GetMalleablePubKey()).ToString().c_str();\n-                }\n-\n-                // if listMode or change => show bitcoin address. In tree mode, address is not shown again for direct wallet address outputs\n-                if (!treeMode || (!(sAddress == sWalletAddress)))\n-                    itemOutput->setText(COLUMN_ADDRESS, sAddress);\n             }\n \n             // label"
      },
      {
        "sha": "8d011ab8faf142a6ceffa2f7c893b4032be680f0",
        "filename": "src/qt/signverifymessagedialog.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3eedd3abbdc9582edd7a5c422f31e1449e14d1e8/src/qt/signverifymessagedialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3eedd3abbdc9582edd7a5c422f31e1449e14d1e8/src/qt/signverifymessagedialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/signverifymessagedialog.cpp?ref=3eedd3abbdc9582edd7a5c422f31e1449e14d1e8",
        "patch": "@@ -288,4 +288,4 @@ void SignVerifyMessageDialog::keyPressEvent(QKeyEvent *event)\n         close();\n     }\n #endif\n-}\n\\ No newline at end of file\n+}"
      },
      {
        "sha": "d761fa06b85e1de36ae89743670807f431fd5a8e",
        "filename": "src/qt/walletmodel.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3eedd3abbdc9582edd7a5c422f31e1449e14d1e8/src/qt/walletmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3eedd3abbdc9582edd7a5c422f31e1449e14d1e8/src/qt/walletmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.cpp?ref=3eedd3abbdc9582edd7a5c422f31e1449e14d1e8",
        "patch": "@@ -207,7 +207,7 @@ WalletModel::SendCoinsReturn WalletModel::sendCoins(const QList<SendCoinsRecipie\n         foreach(const SendCoinsRecipient &rcp, recipients)\n         {\n             CScript scriptPubKey;\n-            scriptPubKey.SetDestination(CBitcoinAddress(rcp.address.toStdString()).Get());\n+            scriptPubKey.SetAddress(CBitcoinAddress(rcp.address.toStdString()));\n             vecSend.push_back(make_pair(scriptPubKey, rcp.amount));\n         }\n \n@@ -531,4 +531,4 @@ void WalletModel::clearOrphans()\n CWallet* WalletModel::getWallet()\n {\n     return wallet;\n-}\n\\ No newline at end of file\n+}"
      },
      {
        "sha": "c2a10f3056fd38b2a699f003594e7f622665274a",
        "filename": "src/rpcrawtransaction.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 11,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3eedd3abbdc9582edd7a5c422f31e1449e14d1e8/src/rpcrawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3eedd3abbdc9582edd7a5c422f31e1449e14d1e8/src/rpcrawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcrawtransaction.cpp?ref=3eedd3abbdc9582edd7a5c422f31e1449e14d1e8",
        "patch": "@@ -296,23 +296,15 @@ Value createrawtransaction(const Array& params, bool fHelp)\n \n         if (address.IsValid())\n         {\n+            scriptPubKey.SetAddress(address);\n+\n+            // Don't perform duplication checking for pubkey-pair addresses\n             if (!address.IsPair())\n             {\n-                scriptPubKey.SetDestination(address.Get());\n                 if (setAddress.count(address))\n                     throw JSONRPCError(RPC_INVALID_PARAMETER, string(\"Invalid parameter, duplicated address: \")+s.name_);\n                 setAddress.insert(address);\n             }\n-            else\n-            {\n-                CMalleablePubKey mpk;\n-                if (!mpk.setvch(address.GetData()))\n-                    throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, string(\"Invalid output destination: \")+s.name_);\n-\n-                CPubKey R, pubKeyVariant;\n-                mpk.GetVariant(R, pubKeyVariant);\n-                scriptPubKey.SetDestination(R, pubKeyVariant);\n-            }\n         }\n         else\n             throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, string(\"Invalid output destination: \")+s.name_);"
      },
      {
        "sha": "7ad807e23006319b14debebc83fd7ae805be47eb",
        "filename": "src/rpcwallet.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 32,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3eedd3abbdc9582edd7a5c422f31e1449e14d1e8/src/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3eedd3abbdc9582edd7a5c422f31e1449e14d1e8/src/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.cpp?ref=3eedd3abbdc9582edd7a5c422f31e1449e14d1e8",
        "patch": "@@ -329,20 +329,7 @@ Value sendtoaddress(const Array& params, bool fHelp)\n \n     CBitcoinAddress address(strAddress);\n     if (address.IsValid())\n-    {\n-        if (!address.IsPair())\n-            scriptPubKey.SetDestination(address.Get());\n-        else\n-        {\n-            CMalleablePubKey mpk;\n-            if (!mpk.setvch(address.GetData()))\n-                throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid NovaCoin address\");\n-\n-            CPubKey R, pubKeyVariant;\n-            mpk.GetVariant(R, pubKeyVariant);\n-            scriptPubKey.SetDestination(R, pubKeyVariant);\n-        }\n-    }\n+        scriptPubKey.SetAddress(address);\n     else\n         throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid NovaCoin address\");\n \n@@ -721,20 +708,7 @@ Value sendfrom(const Array& params, bool fHelp)\n \n     CBitcoinAddress address(strAddress);\n     if (address.IsValid())\n-    {\n-        if (!address.IsPair())\n-            scriptPubKey.SetDestination(address.Get());\n-        else\n-        {\n-            CMalleablePubKey mpk;\n-            if (!mpk.setvch(address.GetData()))\n-                throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid NovaCoin address\");\n-\n-            CPubKey R, pubKeyVariant;\n-            mpk.GetVariant(R, pubKeyVariant);\n-            scriptPubKey.SetDestination(R, pubKeyVariant);\n-        }\n-    }\n+        scriptPubKey.SetAddress(address);\n     else\n         throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid NovaCoin address\");\n \n@@ -800,12 +774,15 @@ Value sendmany(const Array& params, bool fHelp)\n         if (!address.IsValid())\n             throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, string(\"Invalid NovaCoin address: \")+s.name_);\n \n-        if (setAddress.count(address))\n-            throw JSONRPCError(RPC_INVALID_PARAMETER, string(\"Invalid parameter, duplicated address: \")+s.name_);\n-        setAddress.insert(address);\n+        if (!address.IsPair())\n+        {\n+            if (setAddress.count(address))\n+                throw JSONRPCError(RPC_INVALID_PARAMETER, string(\"Invalid parameter, duplicated address: \")+s.name_);\n+            setAddress.insert(address);\n+        }\n \n         CScript scriptPubKey;\n-        scriptPubKey.SetDestination(address.Get());\n+        scriptPubKey.SetAddress(address);\n         int64_t nAmount = AmountFromValue(s.value_);\n \n         if (nAmount < nMinimumInputValue)"
      },
      {
        "sha": "ceacdc38466ef8114b4672b15f614633b820a159",
        "filename": "src/script.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 3,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3eedd3abbdc9582edd7a5c422f31e1449e14d1e8/src/script.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3eedd3abbdc9582edd7a5c422f31e1449e14d1e8/src/script.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script.cpp?ref=3eedd3abbdc9582edd7a5c422f31e1449e14d1e8",
        "patch": "@@ -2136,13 +2136,25 @@ void CScript::SetDestination(const CTxDestination& dest)\n     boost::apply_visitor(CScriptVisitor(this), dest);\n }\n \n-void CScript::SetDestination(const CPubKey& R, CPubKey& pubKeyVariant)\n+void CScript::SetAddress(const CBitcoinAddress& dest)\n {\n     this->clear();\n-    *this << pubKeyVariant << R << OP_DROP << OP_CHECKSIG;\n+    if (dest.IsScript())\n+        *this << OP_HASH160 << dest.GetData() << OP_EQUAL;\n+    else if (dest.IsPubKey())\n+        *this << OP_DUP << OP_HASH160 << dest.GetData() << OP_EQUALVERIFY << OP_CHECKSIG;\n+    else if (dest.IsPair()) {\n+        // Pubkey pair address, going to generate\n+        //   new one-time public key.\n+        CMalleablePubKey mpk;\n+        if (!mpk.setvch(dest.GetData()))\n+            return;\n+        CPubKey R, pubKeyVariant;\n+        mpk.GetVariant(R, pubKeyVariant);\n+        *this << pubKeyVariant << R << OP_DROP << OP_CHECKSIG;\n+    }\n }\n \n-\n void CScript::SetMultisig(int nRequired, const std::vector<CKey>& keys)\n {\n     this->clear();"
      },
      {
        "sha": "af523e6a32faecd595d0bf7948b5a527100db9d8",
        "filename": "src/script.h",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3eedd3abbdc9582edd7a5c422f31e1449e14d1e8/src/script.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3eedd3abbdc9582edd7a5c422f31e1449e14d1e8/src/script.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script.h?ref=3eedd3abbdc9582edd7a5c422f31e1449e14d1e8",
        "patch": "@@ -12,10 +12,12 @@\n \n #include \"keystore.h\"\n #include \"bignum.h\"\n+#include \"base58.h\"\n \n typedef std::vector<uint8_t> valtype;\n \n class CTransaction;\n+class CBitcoinAddress;\n \n static const unsigned int MAX_SCRIPT_ELEMENT_SIZE = 520; // bytes\n \n@@ -583,7 +585,7 @@ class CScript : public std::vector<uint8_t>\n     bool HasCanonicalPushes() const;\n \n     void SetDestination(const CTxDestination& address);\n-    void SetDestination(const CPubKey& R, CPubKey& pubKeyVariant);\n+    void SetAddress(const CBitcoinAddress& dest);\n     void SetMultisig(int nRequired, const std::vector<CKey>& keys);\n \n "
      }
    ]
  },
  {
    "sha": "425455bb3308c0f9765b0fe1a5333d5807889bfb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0MjU0NTViYjMzMDhjMGY5NzY1YjBmZTFhNTMzM2Q1ODA3ODg5YmZi",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-06T21:47:41Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-06T21:47:41Z"
      },
      "message": "Use CBitcoinAddress ti store change destination",
      "tree": {
        "sha": "73df8cbd3c1434033f5a3163e932ecf5e43c853b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/73df8cbd3c1434033f5a3163e932ecf5e43c853b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/425455bb3308c0f9765b0fe1a5333d5807889bfb",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/425455bb3308c0f9765b0fe1a5333d5807889bfb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/425455bb3308c0f9765b0fe1a5333d5807889bfb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/425455bb3308c0f9765b0fe1a5333d5807889bfb/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3eedd3abbdc9582edd7a5c422f31e1449e14d1e8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3eedd3abbdc9582edd7a5c422f31e1449e14d1e8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3eedd3abbdc9582edd7a5c422f31e1449e14d1e8"
      }
    ],
    "stats": {
      "total": 30,
      "additions": 16,
      "deletions": 14
    },
    "files": [
      {
        "sha": "a64a0ec3c85364ce573b6d598ddd6b9dcce48930",
        "filename": "src/coincontrol.h",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/425455bb3308c0f9765b0fe1a5333d5807889bfb/src/coincontrol.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/425455bb3308c0f9765b0fe1a5333d5807889bfb/src/coincontrol.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/coincontrol.h?ref=425455bb3308c0f9765b0fe1a5333d5807889bfb",
        "patch": "@@ -1,11 +1,13 @@\n #ifndef COINCONTROL_H\n #define COINCONTROL_H\n \n+#include \"base58.h\"\n+\n /** Coin Control Features. */\n class CCoinControl\n {\n public:\n-    CTxDestination destChange;\n+    CBitcoinAddress destChange;\n \n     CCoinControl()\n     {\n@@ -14,7 +16,7 @@ class CCoinControl\n         \n     void SetNull()\n     {\n-        destChange = CNoDestination();\n+        destChange = CBitcoinAddress();\n         setSelected.clear();\n     }\n     "
      },
      {
        "sha": "6cad8cefac18486427a177d81202c8cb094843d9",
        "filename": "src/qt/bitcoinaddressvalidator.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/425455bb3308c0f9765b0fe1a5333d5807889bfb/src/qt/bitcoinaddressvalidator.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/425455bb3308c0f9765b0fe1a5333d5807889bfb/src/qt/bitcoinaddressvalidator.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoinaddressvalidator.h?ref=425455bb3308c0f9765b0fe1a5333d5807889bfb",
        "patch": "@@ -14,7 +14,7 @@ class BitcoinAddressValidator : public QValidator\n \n     State validate(QString &input, int &pos) const;\n \n-    static const int MaxAddressLength = 35;\n+    static const int MaxAddressLength = 99;\n signals:\n \n public slots:"
      },
      {
        "sha": "bdbffb17c6948c9c780cc3a97016aa34e9ddce9e",
        "filename": "src/qt/forms/sendcoinsentry.ui",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/425455bb3308c0f9765b0fe1a5333d5807889bfb/src/qt/forms/sendcoinsentry.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/425455bb3308c0f9765b0fe1a5333d5807889bfb/src/qt/forms/sendcoinsentry.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/sendcoinsentry.ui?ref=425455bb3308c0f9765b0fe1a5333d5807889bfb",
        "patch": "@@ -58,7 +58,7 @@\n       <number>0</number>\n      </property>\n      <item>\n-      <widget class=\"QValidatedLineEdit\" name=\"addAsLabel\">\n+      <widget class=\"QValidatedLineEdit\" name=\"addAsLabel\" native=\"true\">\n        <property name=\"enabled\">\n         <bool>true</bool>\n        </property>\n@@ -88,12 +88,12 @@\n       <number>0</number>\n      </property>\n      <item>\n-      <widget class=\"QValidatedLineEdit\" name=\"payTo\">\n+      <widget class=\"QValidatedLineEdit\" name=\"payTo\" native=\"true\">\n        <property name=\"toolTip\">\n         <string>The address to send the payment to  (e.g. 4Zo1ga6xuKuQ7JV7M9rGDoxdbYwV5zgQJ5)</string>\n        </property>\n-       <property name=\"maxLength\">\n-        <number>34</number>\n+       <property name=\"maxLength\" stdset=\"0\">\n+        <number>100</number>\n        </property>\n       </widget>\n      </item>\n@@ -152,7 +152,7 @@\n  <customwidgets>\n   <customwidget>\n    <class>QValidatedLineEdit</class>\n-   <extends>QLineEdit</extends>\n+   <extends>QWidget</extends>\n    <header>qvalidatedlineedit.h</header>\n   </customwidget>\n   <customwidget>"
      },
      {
        "sha": "b0e73825e32fddc368a7d6b0af04147085aa81e1",
        "filename": "src/qt/sendcoinsdialog.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/425455bb3308c0f9765b0fe1a5333d5807889bfb/src/qt/sendcoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/425455bb3308c0f9765b0fe1a5333d5807889bfb/src/qt/sendcoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.cpp?ref=425455bb3308c0f9765b0fe1a5333d5807889bfb",
        "patch": "@@ -131,12 +131,12 @@ void SendCoinsDialog::on_sendButton_clicked()\n         if(!ui->lineEditCoinControlChange->hasAcceptableInput() ||\n            (model && !model->validateAddress(ui->lineEditCoinControlChange->text())))\n         {\n-            CoinControlDialog::coinControl->destChange = CNoDestination();\n+            CoinControlDialog::coinControl->destChange = CBitcoinAddress();\n             ui->lineEditCoinControlChange->setValid(false);\n             valid = false;\n         }\n         else\n-            CoinControlDialog::coinControl->destChange = CBitcoinAddress(ui->lineEditCoinControlChange->text().toStdString()).Get();\n+            CoinControlDialog::coinControl->destChange = CBitcoinAddress(ui->lineEditCoinControlChange->text().toStdString());\n     }\n \n     for(int i = 0; i < ui->entries->count(); ++i)\n@@ -461,9 +461,9 @@ void SendCoinsDialog::coinControlChangeChecked(int state)\n     if (model)\n     {\n         if (state == Qt::Checked)\n-            CoinControlDialog::coinControl->destChange = CBitcoinAddress(ui->lineEditCoinControlChange->text().toStdString()).Get();\n+            CoinControlDialog::coinControl->destChange = CBitcoinAddress(ui->lineEditCoinControlChange->text().toStdString());\n         else\n-            CoinControlDialog::coinControl->destChange = CNoDestination();\n+            CoinControlDialog::coinControl->destChange = CBitcoinAddress();\n     }\n \n     ui->lineEditCoinControlChange->setEnabled((state == Qt::Checked));"
      },
      {
        "sha": "1846d17c923e8350b728f40e1200a55be32fc8f1",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/425455bb3308c0f9765b0fe1a5333d5807889bfb/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/425455bb3308c0f9765b0fe1a5333d5807889bfb/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=425455bb3308c0f9765b0fe1a5333d5807889bfb",
        "patch": "@@ -1688,8 +1688,8 @@ bool CWallet::CreateTransaction(const vector<pair<CScript, int64_t> >& vecSend,\n                     CScript scriptChange;\n \n                     // coin control: send change to custom address\n-                    if (coinControl && !boost::get<CNoDestination>(&coinControl->destChange))\n-                        scriptChange.SetDestination(coinControl->destChange);\n+                    if (coinControl && coinControl->destChange.IsValid())\n+                        scriptChange.SetAddress(coinControl->destChange);\n \n                     // no coin control: send change to newly generated address\n                     else"
      }
    ]
  },
  {
    "sha": "17237eaed7381e23980d48550e86e7b1bca0b0f3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxNzIzN2VhZWQ3MzgxZTIzOTgwZDQ4NTUwZTg2ZTdiMWJjYTBiMGYz",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "CryptoManiac@users.noreply.github.com",
        "date": "2016-03-06T22:22:19Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "CryptoManiac@users.noreply.github.com",
        "date": "2016-03-06T22:22:19Z"
      },
      "message": "Merge pull request #287 from svost/patch\n\nMinor fix",
      "tree": {
        "sha": "27e215952c4e9e827b10fe742620d3dc78ff00d0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/27e215952c4e9e827b10fe742620d3dc78ff00d0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/17237eaed7381e23980d48550e86e7b1bca0b0f3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/17237eaed7381e23980d48550e86e7b1bca0b0f3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/17237eaed7381e23980d48550e86e7b1bca0b0f3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/17237eaed7381e23980d48550e86e7b1bca0b0f3/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "425455bb3308c0f9765b0fe1a5333d5807889bfb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/425455bb3308c0f9765b0fe1a5333d5807889bfb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/425455bb3308c0f9765b0fe1a5333d5807889bfb"
      },
      {
        "sha": "75ec6d7e0bd24c2c16120d88d70667208c300f28",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/75ec6d7e0bd24c2c16120d88d70667208c300f28",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/75ec6d7e0bd24c2c16120d88d70667208c300f28"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 4,
      "deletions": 2
    },
    "files": [
      {
        "sha": "d0f4e15d0054b823b800ced2b239cb3b11905fb0",
        "filename": "src/bitcoinrpc.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17237eaed7381e23980d48550e86e7b1bca0b0f3/src/bitcoinrpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17237eaed7381e23980d48550e86e7b1bca0b0f3/src/bitcoinrpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoinrpc.cpp?ref=17237eaed7381e23980d48550e86e7b1bca0b0f3",
        "patch": "@@ -427,7 +427,8 @@ int ReadHTTPStatus(std::basic_istream<char>& stream, int &proto)\n     string str;\n     getline(stream, str);\n     vector<string> vWords;\n-    boost::split(vWords, str, boost::is_any_of(\" \"));\n+    istringstream iss(str);\n+    copy(istream_iterator<string>(iss), istream_iterator<string>(), back_inserter(vWords));\n     if (vWords.size() < 2)\n         return HTTP_INTERNAL_SERVER_ERROR;\n     proto = 0;"
      },
      {
        "sha": "5c78ff2d2c5abeac14f556b846d0645ccb3a679f",
        "filename": "src/walletdb.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17237eaed7381e23980d48550e86e7b1bca0b0f3/src/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17237eaed7381e23980d48550e86e7b1bca0b0f3/src/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/walletdb.cpp?ref=17237eaed7381e23980d48550e86e7b1bca0b0f3",
        "patch": "@@ -879,7 +879,8 @@ bool ImportWallet(CWallet *pwallet, const string& strLocation)\n               continue;\n \n           std::vector<std::string> vstr;\n-          boost::split(vstr, line, boost::is_any_of(\" \"));\n+          istringstream iss(line);\n+          copy(istream_iterator<string>(iss), istream_iterator<string>(), back_inserter(vstr));\n           if (vstr.size() < 2)\n               continue;\n           CBitcoinSecret vchSecret;"
      }
    ]
  },
  {
    "sha": "5842a4a143ab8aff8b20c390333bfea83f9951de",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ODQyYTRhMTQzYWI4YWZmOGIyMGMzOTAzMzNiZmVhODNmOTk1MWRl",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-07T01:54:01Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-07T01:54:01Z"
      },
      "message": "It's senseless to import pubkey pair address.",
      "tree": {
        "sha": "9584bfcfe5aea9bde8fc1af79966fd0c230a7d0b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9584bfcfe5aea9bde8fc1af79966fd0c230a7d0b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5842a4a143ab8aff8b20c390333bfea83f9951de",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5842a4a143ab8aff8b20c390333bfea83f9951de",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5842a4a143ab8aff8b20c390333bfea83f9951de",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5842a4a143ab8aff8b20c390333bfea83f9951de/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "425455bb3308c0f9765b0fe1a5333d5807889bfb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/425455bb3308c0f9765b0fe1a5333d5807889bfb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/425455bb3308c0f9765b0fe1a5333d5807889bfb"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 10,
      "deletions": 8
    },
    "files": [
      {
        "sha": "8f9beea69ae332b8ecd34d879148d76f83ddeb29",
        "filename": "src/qt/multisigdialog.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5842a4a143ab8aff8b20c390333bfea83f9951de/src/qt/multisigdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5842a4a143ab8aff8b20c390333bfea83f9951de/src/qt/multisigdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/multisigdialog.cpp?ref=5842a4a143ab8aff8b20c390333bfea83f9951de",
        "patch": "@@ -312,7 +312,7 @@ void MultisigDialog::on_createTransactionButton_clicked()\n                 SendCoinsRecipient recipient = entry->getValue();\n                 CBitcoinAddress address(recipient.address.toStdString());\n                 CScript scriptPubKey;\n-                scriptPubKey.SetDestination(address.Get());\n+                scriptPubKey.SetAddress(address);\n                 int64_t amount = recipient.amount;\n                 CTxOut output(amount, scriptPubKey);\n                 transaction.vout.push_back(output);\n@@ -657,4 +657,4 @@ void MultisigDialog::keyPressEvent(QKeyEvent *event)\n         close();\n     }\n #endif\n-}\n\\ No newline at end of file\n+}"
      },
      {
        "sha": "1499acec3c69649df307f570bbf2ea5f743f4a7e",
        "filename": "src/rpcdump.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 6,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5842a4a143ab8aff8b20c390333bfea83f9951de/src/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5842a4a143ab8aff8b20c390333bfea83f9951de/src/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcdump.cpp?ref=5842a4a143ab8aff8b20c390333bfea83f9951de",
        "patch": "@@ -101,13 +101,14 @@ Value importaddress(const Array& params, bool fHelp)\n     CScript script;\n     CBitcoinAddress address(params[0].get_str());\n     if (address.IsValid()) {\n-        script.SetDestination(address.Get());\n+        if (address.IsPair())\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"It's senseless to import pubkey pair address.\");\n+        script.SetAddress(address);\n     } else if (IsHex(params[0].get_str())) {\n         std::vector<unsigned char> data(ParseHex(params[0].get_str()));\n         script = CScript(data.begin(), data.end());\n-    } else {\n+    } else\n         throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid Novacoin address or script\");\n-    }\n \n     string strLabel = \"\";\n     if (params.size() > 1)\n@@ -161,13 +162,14 @@ Value removeaddress(const Array& params, bool fHelp)\n \n     CBitcoinAddress address(params[0].get_str());\n     if (address.IsValid()) {\n-        script.SetDestination(address.Get());\n+        if (address.IsPair())\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Pubkey pair addresses aren't supported.\");\n+        script.SetAddress(address);\n     } else if (IsHex(params[0].get_str())) {\n         std::vector<unsigned char> data(ParseHex(params[0].get_str()));\n         script = CScript(data.begin(), data.end());\n-    } else {\n+    } else\n         throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid Bitcoin address or script\");\n-    }\n \n     if (::IsMine(*pwalletMain, script) == MINE_SPENDABLE)\n         throw JSONRPCError(RPC_WALLET_ERROR, \"The wallet contains the private key for this address or script - can't remove it\");"
      }
    ]
  },
  {
    "sha": "0b40e919221a6ed5de588244d8afae5d2333ef3b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowYjQwZTkxOTIyMWE2ZWQ1ZGU1ODgyNDRkOGFmYWU1ZDIzMzNlZjNi",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-07T01:54:19Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-07T01:54:19Z"
      },
      "message": "Merge branch 'master' of github.com:novacoin-project/novacoin",
      "tree": {
        "sha": "5c4157df5c22d92ae421f9aa186301d4caa29af4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5c4157df5c22d92ae421f9aa186301d4caa29af4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0b40e919221a6ed5de588244d8afae5d2333ef3b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0b40e919221a6ed5de588244d8afae5d2333ef3b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0b40e919221a6ed5de588244d8afae5d2333ef3b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0b40e919221a6ed5de588244d8afae5d2333ef3b/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5842a4a143ab8aff8b20c390333bfea83f9951de",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5842a4a143ab8aff8b20c390333bfea83f9951de",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5842a4a143ab8aff8b20c390333bfea83f9951de"
      },
      {
        "sha": "17237eaed7381e23980d48550e86e7b1bca0b0f3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/17237eaed7381e23980d48550e86e7b1bca0b0f3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/17237eaed7381e23980d48550e86e7b1bca0b0f3"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 4,
      "deletions": 2
    },
    "files": [
      {
        "sha": "d0f4e15d0054b823b800ced2b239cb3b11905fb0",
        "filename": "src/bitcoinrpc.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0b40e919221a6ed5de588244d8afae5d2333ef3b/src/bitcoinrpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0b40e919221a6ed5de588244d8afae5d2333ef3b/src/bitcoinrpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoinrpc.cpp?ref=0b40e919221a6ed5de588244d8afae5d2333ef3b",
        "patch": "@@ -427,7 +427,8 @@ int ReadHTTPStatus(std::basic_istream<char>& stream, int &proto)\n     string str;\n     getline(stream, str);\n     vector<string> vWords;\n-    boost::split(vWords, str, boost::is_any_of(\" \"));\n+    istringstream iss(str);\n+    copy(istream_iterator<string>(iss), istream_iterator<string>(), back_inserter(vWords));\n     if (vWords.size() < 2)\n         return HTTP_INTERNAL_SERVER_ERROR;\n     proto = 0;"
      },
      {
        "sha": "5c78ff2d2c5abeac14f556b846d0645ccb3a679f",
        "filename": "src/walletdb.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0b40e919221a6ed5de588244d8afae5d2333ef3b/src/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0b40e919221a6ed5de588244d8afae5d2333ef3b/src/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/walletdb.cpp?ref=0b40e919221a6ed5de588244d8afae5d2333ef3b",
        "patch": "@@ -879,7 +879,8 @@ bool ImportWallet(CWallet *pwallet, const string& strLocation)\n               continue;\n \n           std::vector<std::string> vstr;\n-          boost::split(vstr, line, boost::is_any_of(\" \"));\n+          istringstream iss(line);\n+          copy(istream_iterator<string>(iss), istream_iterator<string>(), back_inserter(vstr));\n           if (vstr.size() < 2)\n               continue;\n           CBitcoinSecret vchSecret;"
      }
    ]
  },
  {
    "sha": "12f1208c4221a8d0c4aab38c999c1ee5ac754345",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxMmYxMjA4YzQyMjFhOGQwYzRhYWIzOGM5OTljMWVlNWFjNzU0MzQ1",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-07T04:04:09Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-07T04:04:09Z"
      },
      "message": "COunt received coins for owned pubkey-pair addresses properly",
      "tree": {
        "sha": "d287e6bfee00adfe8e9f89ad0a40843aa0905301",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d287e6bfee00adfe8e9f89ad0a40843aa0905301"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/12f1208c4221a8d0c4aab38c999c1ee5ac754345",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/12f1208c4221a8d0c4aab38c999c1ee5ac754345",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/12f1208c4221a8d0c4aab38c999c1ee5ac754345",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/12f1208c4221a8d0c4aab38c999c1ee5ac754345/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0b40e919221a6ed5de588244d8afae5d2333ef3b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0b40e919221a6ed5de588244d8afae5d2333ef3b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0b40e919221a6ed5de588244d8afae5d2333ef3b"
      }
    ],
    "stats": {
      "total": 28,
      "additions": 19,
      "deletions": 9
    },
    "files": [
      {
        "sha": "2b6e3266c5fc51131e2f670012d7ae4471ee2dad",
        "filename": "src/base58.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/12f1208c4221a8d0c4aab38c999c1ee5ac754345/src/base58.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/12f1208c4221a8d0c4aab38c999c1ee5ac754345/src/base58.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/base58.h?ref=12f1208c4221a8d0c4aab38c999c1ee5ac754345",
        "patch": "@@ -82,6 +82,8 @@ class CBase58Data\n  * The data vector contains RIPEMD160(SHA256(pubkey)), where pubkey is the serialized public key.\n  * Script-hash-addresses have version 5 (or 196 testnet).\n  * The data vector contains RIPEMD160(SHA256(cscript)), where cscript is the serialized redemption script.\n+ * Pubkey-pair-addresses have version 1 (or 6 testnet)\n+ * The data vector contains a serialized copy of two compressed ECDSA secp256k1 public keys.\n  */\n class CBitcoinAddress;\n class CBitcoinAddressVisitor : public boost::static_visitor<bool>"
      },
      {
        "sha": "5ef253fcc90fb2581421033ebea1c6897690bbe9",
        "filename": "src/rpcwallet.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 9,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/12f1208c4221a8d0c4aab38c999c1ee5ac754345/src/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/12f1208c4221a8d0c4aab38c999c1ee5ac754345/src/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.cpp?ref=12f1208c4221a8d0c4aab38c999c1ee5ac754345",
        "patch": "@@ -463,41 +463,41 @@ Value getreceivedbyaddress(const Array& params, bool fHelp)\n {\n     if (fHelp || params.size() < 1 || params.size() > 2)\n         throw runtime_error(\n-            \"getreceivedbyaddress <novacoinaddress> [minconf=1]\\n\"\n-            \"Returns the total amount received by <novacoinaddress> in transactions with at least [minconf] confirmations.\");\n+                \"getreceivedbyaddress <novacoinaddress> [minconf=1]\\n\"\n+                \"Returns the total amount received by <novacoinaddress> in transactions with at least [minconf] confirmations.\");\n \n     // Bitcoin address\n     CBitcoinAddress address = CBitcoinAddress(params[0].get_str());\n-    CScript scriptPubKey;\n     if (!address.IsValid())\n         throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid NovaCoin address\");\n-    scriptPubKey.SetDestination(address.Get());\n-    if (!IsMine(*pwalletMain,scriptPubKey))\n+    if (!IsMine(*pwalletMain,address))\n         return 0.0;\n \n     // Minimum confirmations\n     int nMinDepth = 1;\n     if (params.size() > 1)\n         nMinDepth = params[1].get_int();\n \n-    // Tally\n     int64_t nAmount = 0;\n     for (map<uint256, CWalletTx>::iterator it = pwalletMain->mapWallet.begin(); it != pwalletMain->mapWallet.end(); ++it)\n     {\n         const CWalletTx& wtx = (*it).second;\n         if (wtx.IsCoinBase() || wtx.IsCoinStake() || !wtx.IsFinal())\n             continue;\n-\n         BOOST_FOREACH(const CTxOut& txout, wtx.vout)\n-            if (txout.scriptPubKey == scriptPubKey)\n+        {\n+            CBitcoinAddress addressRet;\n+            if (!pwalletMain->ExtractAddress(txout.scriptPubKey, addressRet))\n+                continue;\n+            if (addressRet == address)\n                 if (wtx.GetDepthInMainChain() >= nMinDepth)\n                     nAmount += txout.nValue;\n+        }\n     }\n \n     return  ValueFromAmount(nAmount);\n }\n \n-\n void GetAccountAddresses(string strAccount, set<CTxDestination>& setAddress)\n {\n     BOOST_FOREACH(const PAIRTYPE(CTxDestination, string)& item, pwalletMain->mapAddressBook)"
      },
      {
        "sha": "2212fe1f58bd7846cad4730c04e8971dc82ef21c",
        "filename": "src/script.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/12f1208c4221a8d0c4aab38c999c1ee5ac754345/src/script.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/12f1208c4221a8d0c4aab38c999c1ee5ac754345/src/script.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script.cpp?ref=12f1208c4221a8d0c4aab38c999c1ee5ac754345",
        "patch": "@@ -1647,6 +1647,13 @@ isminetype IsMine(const CKeyStore &keystore, const CTxDestination& dest)\n     return IsMine(keystore, script);\n }\n \n+isminetype IsMine(const CKeyStore &keystore, const CBitcoinAddress& dest)\n+{\n+    CScript script;\n+    script.SetAddress(dest);\n+    return IsMine(keystore, script);\n+}\n+\n isminetype IsMine(const CKeyStore &keystore, const CScript& scriptPubKey)\n {\n     vector<valtype> vSolutions;"
      },
      {
        "sha": "7177339b8dd469ce64b822f62da3e789ba695ba0",
        "filename": "src/script.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/12f1208c4221a8d0c4aab38c999c1ee5ac754345/src/script.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/12f1208c4221a8d0c4aab38c999c1ee5ac754345/src/script.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script.h?ref=12f1208c4221a8d0c4aab38c999c1ee5ac754345",
        "patch": "@@ -638,6 +638,7 @@ int ScriptSigArgsExpected(txnouttype t, const std::vector<std::vector<unsigned c\n bool IsStandard(const CScript& scriptPubKey, txnouttype& whichType);\n isminetype IsMine(const CKeyStore& keystore, const CScript& scriptPubKey);\n isminetype IsMine(const CKeyStore& keystore, const CTxDestination& dest);\n+isminetype IsMine(const CKeyStore& keystore, const CBitcoinAddress& dest);\n void ExtractAffectedKeys(const CKeyStore &keystore, const CScript& scriptPubKey, std::vector<CKeyID> &vKeys);\n bool ExtractDestination(const CScript& scriptPubKey, CTxDestination& addressRet);\n bool ExtractDestinations(const CScript& scriptPubKey, txnouttype& typeRet, std::vector<CTxDestination>& addressRet, int& nRequiredRet);"
      }
    ]
  },
  {
    "sha": "d3f6c99eb138bb0200840e371c812410e86f6c2e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkM2Y2Yzk5ZWIxMzhiYjAyMDA4NDBlMzcxYzgxMjQxMGU4NmY2YzJl",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-07T23:46:59Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-07T23:46:59Z"
      },
      "message": "New dump function.\n\nTODO: pubkey pair addresses import.",
      "tree": {
        "sha": "65f3767e75b729db34dfc4b159c0a7227a0fdeb5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/65f3767e75b729db34dfc4b159c0a7227a0fdeb5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d3f6c99eb138bb0200840e371c812410e86f6c2e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d3f6c99eb138bb0200840e371c812410e86f6c2e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d3f6c99eb138bb0200840e371c812410e86f6c2e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d3f6c99eb138bb0200840e371c812410e86f6c2e/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "12f1208c4221a8d0c4aab38c999c1ee5ac754345",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/12f1208c4221a8d0c4aab38c999c1ee5ac754345",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/12f1208c4221a8d0c4aab38c999c1ee5ac754345"
      }
    ],
    "stats": {
      "total": 223,
      "additions": 119,
      "deletions": 104
    },
    "files": [
      {
        "sha": "2d8e61850f1d77e041e36c8b2e26bc1980f0dd0f",
        "filename": "src/key.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d3f6c99eb138bb0200840e371c812410e86f6c2e/src/key.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d3f6c99eb138bb0200840e371c812410e86f6c2e/src/key.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.h?ref=d3f6c99eb138bb0200840e371c812410e86f6c2e",
        "patch": "@@ -224,6 +224,7 @@ class CMalleablePubKey\n         pubKeyL = mpk.pubKeyL;\n         pubKeyH = mpk.pubKeyH;\n     }\n+    CMalleablePubKey(const std::vector<unsigned char> &vchPubKeyPair) { setvch(vchPubKeyPair); }\n     CMalleablePubKey(const std::string& strMalleablePubKey) { SetString(strMalleablePubKey); }\n     CMalleablePubKey(const CPubKey &pubKeyInL, const CPubKey &pubKeyInH) : pubKeyL(pubKeyInL), pubKeyH(pubKeyInH) { }\n "
      },
      {
        "sha": "beb5d856186664ed5003485a3185c1cfcbeef6b3",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 33,
        "deletions": 38,
        "changes": 71,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d3f6c99eb138bb0200840e371c812410e86f6c2e/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d3f6c99eb138bb0200840e371c812410e86f6c2e/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=d3f6c99eb138bb0200840e371c812410e86f6c2e",
        "patch": "@@ -2741,55 +2741,50 @@ void CWallet::UpdatedTransaction(const uint256 &hashTx)\n     }\n }\n \n-void CWallet::GetKeyBirthTimes(std::map<CKeyID, int64_t> &mapKeyBirth) const {\n-    mapKeyBirth.clear();\n+void CWallet::GetAddresses(std::map<CBitcoinAddress, int64_t> &mapAddresses) const {\n+    mapAddresses.clear();\n \n     // get birth times for keys with metadata\n-    for (std::map<CKeyID, CKeyMetadata>::const_iterator it = mapKeyMetadata.begin(); it != mapKeyMetadata.end(); it++)\n-        if (it->second.nCreateTime)\n-            mapKeyBirth[it->first] = it->second.nCreateTime;\n-\n-    // map in which we'll infer heights of other keys\n-    CBlockIndex *pindexMax = FindBlockByHeight(std::max(0, nBestHeight - 144)); // the tip can be reorganised; use a 144-block safety margin\n-    std::map<CKeyID, CBlockIndex*> mapKeyFirstBlock;\n-    std::set<CKeyID> setKeys;\n-    GetKeys(setKeys);\n-    BOOST_FOREACH(const CKeyID &keyid, setKeys) {\n-        if (mapKeyBirth.count(keyid) == 0)\n-            mapKeyFirstBlock[keyid] = pindexMax;\n-    }\n-    setKeys.clear();\n-\n-    // if there are no such keys, we're done\n-    if (mapKeyFirstBlock.empty())\n-        return;\n+    for (std::map<CMalleableKeyView, CKeyMetadata>::const_iterator it = mapMalleableKeyMetadata.begin(); it != mapMalleableKeyMetadata.end(); it++) {\n+        CBitcoinAddress addr(it->first.GetMalleablePubKey());\n+        mapAddresses[addr] = it->second.nCreateTime ? it->second.nCreateTime : 0;\n+    }\n+\n+    for (std::map<CKeyID, CKeyMetadata>::const_iterator it = mapKeyMetadata.begin(); it != mapKeyMetadata.end(); it++) {\n+        CBitcoinAddress addr(it->first);\n+        mapAddresses[addr] = it->second.nCreateTime ? it->second.nCreateTime : 0;\n+    }\n \n-    // find first block that affects those keys, if there are any left\n-    std::vector<CKeyID> vAffected;\n     for (std::map<uint256, CWalletTx>::const_iterator it = mapWallet.begin(); it != mapWallet.end(); it++) {\n         // iterate over all wallet transactions...\n         const CWalletTx &wtx = (*it).second;\n-        std::map<uint256, CBlockIndex*>::const_iterator blit = mapBlockIndex.find(wtx.hashBlock);\n-        if (blit != mapBlockIndex.end() && blit->second->IsInMainChain()) {\n-            // ... which are already in a block\n-            int nHeight = blit->second->nHeight;\n-            BOOST_FOREACH(const CTxOut &txout, wtx.vout) {\n-                // iterate over all their outputs\n-                ::ExtractAffectedKeys(*this, txout.scriptPubKey, vAffected);\n-                BOOST_FOREACH(const CKeyID &keyid, vAffected) {\n-                    // ... and all their affected keys\n-                    std::map<CKeyID, CBlockIndex*>::iterator rit = mapKeyFirstBlock.find(keyid);\n-                    if (rit != mapKeyFirstBlock.end() && nHeight < rit->second->nHeight)\n-                        rit->second = blit->second;\n+        if (wtx.hashBlock == 0)\n+            continue; // skip unconfirmed transactions\n+\n+        for(std::vector<CTxOut>::const_iterator it2 = wtx.vout.begin(); it2 != wtx.vout.end(); it2++) {\n+            const CTxOut &out = (*it2);\n+            // iterate over all their outputs\n+            CBitcoinAddress addressRet;\n+            if (const_cast<CWallet*>(this)->ExtractAddress(out.scriptPubKey, addressRet)) {\n+                if (mapAddresses.find(addressRet) != mapAddresses.end() && mapAddresses[addressRet] > wtx.nTime)\n+                    mapAddresses[addressRet] = wtx.nTime;\n+            }\n+            else {\n+                // multisig output affects more than one key\n+                std::vector<CKeyID> vAffected;\n+                ::ExtractAffectedKeys(*this, out.scriptPubKey, vAffected);\n+\n+                for(std::vector<CKeyID>::const_iterator it3 = vAffected.begin(); it3 != vAffected.end(); it3++) {\n+                    CBitcoinAddress addrAffected(*it3);\n+\n+                    if (mapAddresses.find(addrAffected) != mapAddresses.end() && mapAddresses[addrAffected] > wtx.nTime)\n+                        mapAddresses[addrAffected] = wtx.nTime;\n                 }\n                 vAffected.clear();\n             }\n         }\n-    }\n \n-    // Extract block timestamps for those keys\n-    for (std::map<CKeyID, CBlockIndex*>::const_iterator it = mapKeyFirstBlock.begin(); it != mapKeyFirstBlock.end(); it++)\n-        mapKeyBirth[it->first] = it->second->nTime - 7200; // block times can be 2h off\n+    }\n }\n \n void CWallet::ClearOrphans()"
      },
      {
        "sha": "493e9d9517d08b5b5e52fe6dbdcbd1dcf18b9339",
        "filename": "src/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d3f6c99eb138bb0200840e371c812410e86f6c2e/src/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d3f6c99eb138bb0200840e371c812410e86f6c2e/src/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.h?ref=d3f6c99eb138bb0200840e371c812410e86f6c2e",
        "patch": "@@ -186,7 +186,7 @@ class CWallet : public CCryptoKeyStore\n     bool EncryptWallet(const SecureString& strWalletPassphrase);\n     bool DecryptWallet(const SecureString& strWalletPassphrase);\n \n-    void GetKeyBirthTimes(std::map<CKeyID, int64_t> &mapKeyBirth) const;\n+    void GetAddresses(std::map<CBitcoinAddress, int64_t> &mapAddresses) const;\n \n \n     /** Increment the next transaction order id"
      },
      {
        "sha": "c9e187d75f354ed186979a24440ad2d6cddfb87b",
        "filename": "src/walletdb.cpp",
        "status": "modified",
        "additions": 84,
        "deletions": 65,
        "changes": 149,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d3f6c99eb138bb0200840e371c812410e86f6c2e/src/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d3f6c99eb138bb0200840e371c812410e86f6c2e/src/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/walletdb.cpp?ref=d3f6c99eb138bb0200840e371c812410e86f6c2e",
        "patch": "@@ -784,75 +784,94 @@ bool BackupWallet(const CWallet& wallet, const string& strDest)\n \n bool DumpWallet(CWallet* pwallet, const string& strDest)\n {\n+    if (!pwallet->fFileBacked)\n+        return false;\n \n-  if (!pwallet->fFileBacked)\n-      return false;\n-  while (!fShutdown)\n-  {\n-      // Populate maps\n-      std::map<CKeyID, int64_t> mapKeyBirth;\n-      std::set<CKeyID> setKeyPool;\n-      pwallet->GetKeyBirthTimes(mapKeyBirth);\n-      pwallet->GetAllReserveKeys(setKeyPool);\n-\n-      // sort time/key pairs\n-      std::vector<std::pair<int64_t, CKeyID> > vKeyBirth;\n-      for (std::map<CKeyID, int64_t>::const_iterator it = mapKeyBirth.begin(); it != mapKeyBirth.end(); it++) {\n-          vKeyBirth.push_back(std::make_pair(it->second, it->first));\n-      }\n-      mapKeyBirth.clear();\n-      std::sort(vKeyBirth.begin(), vKeyBirth.end());\n+    std::map<CBitcoinAddress, int64_t> mapAddresses;\n+    std::set<CKeyID> setKeyPool;\n \n-      // open outputfile as a stream\n-      ofstream file;\n-      file.open(strDest.c_str());\n-      if (!file.is_open())\n-         return false;\n-\n-      // produce output\n-      file << strprintf(\"# Wallet dump created by NovaCoin %s (%s)\\n\", CLIENT_BUILD.c_str(), CLIENT_DATE.c_str());\n-      file << strprintf(\"# * Created on %s\\n\", EncodeDumpTime(GetTime()).c_str());\n-      file << strprintf(\"# * Best block at time of backup was %i (%s),\\n\", nBestHeight, hashBestChain.ToString().c_str());\n-      file << strprintf(\"#   mined on %s\\n\", EncodeDumpTime(pindexBest->nTime).c_str());\n-      file << \"\\n\";\n-      for (std::vector<std::pair<int64_t, CKeyID> >::const_iterator it = vKeyBirth.begin(); it != vKeyBirth.end(); it++) {\n-          const CKeyID &keyid = it->second;\n-          std::string strTime = EncodeDumpTime(it->first);\n-          std::string strAddr = CBitcoinAddress(keyid).ToString();\n-          bool IsCompressed;\n+    pwallet->GetAddresses(mapAddresses);\n+    pwallet->GetAllReserveKeys(setKeyPool);\n \n-          CKey key;\n-          if (pwallet->GetKey(keyid, key)) {\n-              if (pwallet->mapAddressBook.count(keyid)) {\n-                  CSecret secret = key.GetSecret(IsCompressed);\n-                  file << strprintf(\"%s %s label=%s # addr=%s\\n\",\n-                                    CBitcoinSecret(secret, IsCompressed).ToString().c_str(),\n-                                    strTime.c_str(),\n-                                    EncodeDumpString(pwallet->mapAddressBook[keyid]).c_str(),\n-                                    strAddr.c_str());\n-              } else if (setKeyPool.count(keyid)) {\n-                  CSecret secret = key.GetSecret(IsCompressed);\n-                  file << strprintf(\"%s %s reserve=1 # addr=%s\\n\",\n-                                    CBitcoinSecret(secret, IsCompressed).ToString().c_str(),\n-                                    strTime.c_str(),\n-                                    strAddr.c_str());\n-              } else {\n-                  CSecret secret = key.GetSecret(IsCompressed);\n-                  file << strprintf(\"%s %s change=1 # addr=%s\\n\",\n-                                    CBitcoinSecret(secret, IsCompressed).ToString().c_str(),\n-                                    strTime.c_str(),\n-                                    strAddr.c_str());\n-              }\n-          }\n-      }\n-      file << \"\\n\";\n-      file << \"# End of dump\\n\";\n-      file.close();\n-      return true;\n-     }\n-   return false;\n-}\n+    // sort time/key pairs\n+    std::vector<std::pair<int64_t, CBitcoinAddress> > vAddresses;\n+    for (std::map<CBitcoinAddress, int64_t>::const_iterator it = mapAddresses.begin(); it != mapAddresses.end(); it++) {\n+        vAddresses.push_back(std::make_pair(it->second, it->first));\n+    }\n+    mapAddresses.clear();\n+    std::sort(vAddresses.begin(), vAddresses.end());\n \n+    // open outputfile as a stream\n+    ofstream file;\n+    file.open(strDest.c_str());\n+    if (!file.is_open())\n+       return false;\n+\n+    // produce output\n+    file << strprintf(\"# Wallet dump created by NovaCoin %s (%s)\\n\", CLIENT_BUILD.c_str(), CLIENT_DATE.c_str());\n+    file << strprintf(\"# * Created on %s\\n\", EncodeDumpTime(GetTime()).c_str());\n+    file << strprintf(\"# * Best block at time of backup was %i (%s),\\n\", nBestHeight, hashBestChain.ToString().c_str());\n+    file << strprintf(\"#   mined on %s\\n\", EncodeDumpTime(pindexBest->nTime).c_str());\n+    file << \"\\n\";\n+\n+    for (std::vector<std::pair<int64_t, CBitcoinAddress> >::const_iterator it = vAddresses.begin(); it != vAddresses.end(); it++) {\n+        const CBitcoinAddress &addr = it->second;\n+        std::string strTime = EncodeDumpTime(it->first);\n+        std::string strAddr = addr.ToString();\n+        bool IsCompressed;\n+\n+        if (addr.IsPair()) {\n+            // Pubkey pair address\n+            CMalleableKeyView keyView;\n+            CMalleablePubKey mPubKey(addr.GetData());\n+            if (pwallet->GetMalleableView(mPubKey, keyView)) {\n+                CMalleableKey mKey;\n+                pwallet->GetMalleableKey(keyView, mKey);\n+\n+                file << strprintf(\"%s %s # addr=%s view=%s\\n\",\n+                                  mKey.ToString().c_str(),\n+                                  strTime.c_str(),\n+                                  strAddr.c_str(),\n+                                  keyView.ToString().c_str());\n+            }\n+        }\n+        else {\n+            // Pubkey hash address\n+            CKeyID keyid;\n+            addr.GetKeyID(keyid);\n+\n+            CKey key;\n+            if (pwallet->GetKey(keyid, key)) {\n+                if (pwallet->mapAddressBook.count(keyid)) {\n+                    CSecret secret = key.GetSecret(IsCompressed);\n+                    file << strprintf(\"%s %s label=%s # addr=%s\\n\",\n+                                      CBitcoinSecret(secret, IsCompressed).ToString().c_str(),\n+                                      strTime.c_str(),\n+                                      EncodeDumpString(pwallet->mapAddressBook[keyid]).c_str(),\n+                                      strAddr.c_str());\n+                } else if (setKeyPool.count(keyid)) {\n+                    CSecret secret = key.GetSecret(IsCompressed);\n+                    file << strprintf(\"%s %s reserve=1 # addr=%s\\n\",\n+                                      CBitcoinSecret(secret, IsCompressed).ToString().c_str(),\n+                                      strTime.c_str(),\n+                                      strAddr.c_str());\n+                } else {\n+                    CSecret secret = key.GetSecret(IsCompressed);\n+                    file << strprintf(\"%s %s change=1 # addr=%s\\n\",\n+                                      CBitcoinSecret(secret, IsCompressed).ToString().c_str(),\n+                                      strTime.c_str(),\n+                                      strAddr.c_str());\n+                }\n+            }\n+        }\n+    }\n+\n+    file << \"\\n\";\n+    file << \"# End of dump\\n\";\n+    file.close();\n+\n+    return true;\n+}\n \n bool ImportWallet(CWallet *pwallet, const string& strLocation)\n {"
      }
    ]
  },
  {
    "sha": "08ab3b77925813e55b88614591fe783efaa00ff3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowOGFiM2I3NzkyNTgxM2U1NWI4ODYxNDU5MWZlNzgzZWZhYTAwZmYz",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-08T17:39:56Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-08T17:39:56Z"
      },
      "message": "DumpWallet() cleanup",
      "tree": {
        "sha": "a41e36a5b72d36f6617579a49766fcb3bfd15593",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a41e36a5b72d36f6617579a49766fcb3bfd15593"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/08ab3b77925813e55b88614591fe783efaa00ff3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/08ab3b77925813e55b88614591fe783efaa00ff3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/08ab3b77925813e55b88614591fe783efaa00ff3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/08ab3b77925813e55b88614591fe783efaa00ff3/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d3f6c99eb138bb0200840e371c812410e86f6c2e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d3f6c99eb138bb0200840e371c812410e86f6c2e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d3f6c99eb138bb0200840e371c812410e86f6c2e"
      }
    ],
    "stats": {
      "total": 54,
      "additions": 18,
      "deletions": 36
    },
    "files": [
      {
        "sha": "5976cb544d308e11d14329fda809382a33189d08",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/08ab3b77925813e55b88614591fe783efaa00ff3/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/08ab3b77925813e55b88614591fe783efaa00ff3/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=08ab3b77925813e55b88614591fe783efaa00ff3",
        "patch": "@@ -2766,7 +2766,7 @@ void CWallet::GetAddresses(std::map<CBitcoinAddress, int64_t> &mapAddresses) con\n             // iterate over all their outputs\n             CBitcoinAddress addressRet;\n             if (const_cast<CWallet*>(this)->ExtractAddress(out.scriptPubKey, addressRet)) {\n-                if (mapAddresses.find(addressRet) != mapAddresses.end() && mapAddresses[addressRet] > wtx.nTime)\n+                if (mapAddresses.find(addressRet) != mapAddresses.end() && (mapAddresses[addressRet] == 0 || mapAddresses[addressRet] > wtx.nTime))\n                     mapAddresses[addressRet] = wtx.nTime;\n             }\n             else {\n@@ -2777,7 +2777,7 @@ void CWallet::GetAddresses(std::map<CBitcoinAddress, int64_t> &mapAddresses) con\n                 for(std::vector<CKeyID>::const_iterator it3 = vAffected.begin(); it3 != vAffected.end(); it3++) {\n                     CBitcoinAddress addrAffected(*it3);\n \n-                    if (mapAddresses.find(addrAffected) != mapAddresses.end() && mapAddresses[addrAffected] > wtx.nTime)\n+                    if (mapAddresses.find(addrAffected) != mapAddresses.end() && (mapAddresses[addrAffected] == 0 || mapAddresses[addrAffected] > wtx.nTime))\n                         mapAddresses[addrAffected] = wtx.nTime;\n                 }\n                 vAffected.clear();"
      },
      {
        "sha": "bc358468d0a840dcb78819d8385bc5268b31671a",
        "filename": "src/walletdb.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 34,
        "changes": 50,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/08ab3b77925813e55b88614591fe783efaa00ff3/src/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/08ab3b77925813e55b88614591fe783efaa00ff3/src/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/walletdb.cpp?ref=08ab3b77925813e55b88614591fe783efaa00ff3",
        "patch": "@@ -818,51 +818,33 @@ bool DumpWallet(CWallet* pwallet, const string& strDest)\n         const CBitcoinAddress &addr = it->second;\n         std::string strTime = EncodeDumpTime(it->first);\n         std::string strAddr = addr.ToString();\n-        bool IsCompressed;\n \n         if (addr.IsPair()) {\n             // Pubkey pair address\n             CMalleableKeyView keyView;\n             CMalleablePubKey mPubKey(addr.GetData());\n-            if (pwallet->GetMalleableView(mPubKey, keyView)) {\n-                CMalleableKey mKey;\n-                pwallet->GetMalleableKey(keyView, mKey);\n-\n-                file << strprintf(\"%s %s # addr=%s view=%s\\n\",\n-                                  mKey.ToString().c_str(),\n-                                  strTime.c_str(),\n-                                  strAddr.c_str(),\n-                                  keyView.ToString().c_str());\n-            }\n+            if (!pwallet->GetMalleableView(mPubKey, keyView))\n+                continue;\n+            CMalleableKey mKey;\n+            pwallet->GetMalleableKey(keyView, mKey);\n+            file << strprintf(\"%s %s # view=%s addr=%s\\n\", mKey.ToString().c_str(), strTime.c_str(), keyView.ToString().c_str(), strAddr.c_str());\n         }\n         else {\n             // Pubkey hash address\n             CKeyID keyid;\n             addr.GetKeyID(keyid);\n-\n+            bool IsCompressed;\n             CKey key;\n-            if (pwallet->GetKey(keyid, key)) {\n-                if (pwallet->mapAddressBook.count(keyid)) {\n-                    CSecret secret = key.GetSecret(IsCompressed);\n-                    file << strprintf(\"%s %s label=%s # addr=%s\\n\",\n-                                      CBitcoinSecret(secret, IsCompressed).ToString().c_str(),\n-                                      strTime.c_str(),\n-                                      EncodeDumpString(pwallet->mapAddressBook[keyid]).c_str(),\n-                                      strAddr.c_str());\n-                } else if (setKeyPool.count(keyid)) {\n-                    CSecret secret = key.GetSecret(IsCompressed);\n-                    file << strprintf(\"%s %s reserve=1 # addr=%s\\n\",\n-                                      CBitcoinSecret(secret, IsCompressed).ToString().c_str(),\n-                                      strTime.c_str(),\n-                                      strAddr.c_str());\n-                } else {\n-                    CSecret secret = key.GetSecret(IsCompressed);\n-                    file << strprintf(\"%s %s change=1 # addr=%s\\n\",\n-                                      CBitcoinSecret(secret, IsCompressed).ToString().c_str(),\n-                                      strTime.c_str(),\n-                                      strAddr.c_str());\n-                }\n-            }\n+            if (!pwallet->GetKey(keyid, key))\n+                continue;\n+            CSecret secret = key.GetSecret(IsCompressed);\n+            file << CBitcoinSecret(secret, IsCompressed).ToString().c_str();\n+            if (pwallet->mapAddressBook.count(keyid))\n+                file << strprintf(\" %s label=%s # addr=%s\\n\", strTime.c_str(), EncodeDumpString(pwallet->mapAddressBook[keyid]).c_str(), strAddr.c_str());\n+            else if (setKeyPool.count(keyid))\n+                file << strprintf(\" %s reserve=1 # addr=%s\\n\", strTime.c_str(), strAddr.c_str());\n+            else\n+                file << strprintf(\" %s change=1 # addr=%s\\n\", strTime.c_str(), strAddr.c_str());\n         }\n     }\n "
      }
    ]
  },
  {
    "sha": "233f0f2c68c19c02b2090b89ad4ab8cb1a1f9b6d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyMzNmMGYyYzY4YzE5YzAyYjIwOTBiODlhZDRhYjhjYjFhMWY5YjZk",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-08T17:42:26Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-08T17:42:26Z"
      },
      "message": "c_str() isn't needed here",
      "tree": {
        "sha": "f1bc7c2f9f711700235fb0147369041eb13b13ee",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f1bc7c2f9f711700235fb0147369041eb13b13ee"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/233f0f2c68c19c02b2090b89ad4ab8cb1a1f9b6d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/233f0f2c68c19c02b2090b89ad4ab8cb1a1f9b6d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/233f0f2c68c19c02b2090b89ad4ab8cb1a1f9b6d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/233f0f2c68c19c02b2090b89ad4ab8cb1a1f9b6d/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "08ab3b77925813e55b88614591fe783efaa00ff3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/08ab3b77925813e55b88614591fe783efaa00ff3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/08ab3b77925813e55b88614591fe783efaa00ff3"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "1a90f74f3e901beb17db423789a61b87f0bea664",
        "filename": "src/walletdb.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/233f0f2c68c19c02b2090b89ad4ab8cb1a1f9b6d/src/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/233f0f2c68c19c02b2090b89ad4ab8cb1a1f9b6d/src/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/walletdb.cpp?ref=233f0f2c68c19c02b2090b89ad4ab8cb1a1f9b6d",
        "patch": "@@ -838,7 +838,7 @@ bool DumpWallet(CWallet* pwallet, const string& strDest)\n             if (!pwallet->GetKey(keyid, key))\n                 continue;\n             CSecret secret = key.GetSecret(IsCompressed);\n-            file << CBitcoinSecret(secret, IsCompressed).ToString().c_str();\n+            file << CBitcoinSecret(secret, IsCompressed).ToString();\n             if (pwallet->mapAddressBook.count(keyid))\n                 file << strprintf(\" %s label=%s # addr=%s\\n\", strTime.c_str(), EncodeDumpString(pwallet->mapAddressBook[keyid]).c_str(), strAddr.c_str());\n             else if (setKeyPool.count(keyid))"
      }
    ]
  },
  {
    "sha": "ce4428704478918d90e4ebcf73cdbee04b88c376",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjZTQ0Mjg3MDQ0Nzg5MThkOTBlNGViY2Y3M2NkYmVlMDRiODhjMzc2",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-08T17:59:28Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-08T17:59:28Z"
      },
      "message": "ResendTX: forced rebroadcasting of unconfirmed transactions.",
      "tree": {
        "sha": "ec0da7417d3a326f79ed50e2e10ebb264eb9d3bc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ec0da7417d3a326f79ed50e2e10ebb264eb9d3bc"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ce4428704478918d90e4ebcf73cdbee04b88c376",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ce4428704478918d90e4ebcf73cdbee04b88c376",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ce4428704478918d90e4ebcf73cdbee04b88c376",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ce4428704478918d90e4ebcf73cdbee04b88c376/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "233f0f2c68c19c02b2090b89ad4ab8cb1a1f9b6d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/233f0f2c68c19c02b2090b89ad4ab8cb1a1f9b6d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/233f0f2c68c19c02b2090b89ad4ab8cb1a1f9b6d"
      }
    ],
    "stats": {
      "total": 46,
      "additions": 23,
      "deletions": 23
    },
    "files": [
      {
        "sha": "bdc7e8d6d3e55029aba4a490d78b86ca25986a39",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ce4428704478918d90e4ebcf73cdbee04b88c376/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ce4428704478918d90e4ebcf73cdbee04b88c376/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=ce4428704478918d90e4ebcf73cdbee04b88c376",
        "patch": "@@ -181,10 +181,10 @@ void static Inventory(const uint256& hash)\n }\n \n // ask wallets to resend their transactions\n-void ResendWalletTransactions()\n+void ResendWalletTransactions(bool fForceResend)\n {\n     BOOST_FOREACH(CWallet* pwallet, setpwalletRegistered)\n-        pwallet->ResendWalletTransactions();\n+        pwallet->ResendWalletTransactions(fForceResend);\n }\n \n "
      },
      {
        "sha": "63884b214d2d6360908fcbdcd94ccb071a59c0a7",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ce4428704478918d90e4ebcf73cdbee04b88c376/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ce4428704478918d90e4ebcf73cdbee04b88c376/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=ce4428704478918d90e4ebcf73cdbee04b88c376",
        "patch": "@@ -133,7 +133,7 @@ std::string GetWarnings(std::string strFor);\n bool GetTransaction(const uint256 &hash, CTransaction &tx, uint256 &hashBlock);\n uint256 WantedByOrphan(const CBlock* pblockOrphan);\n const CBlockIndex* GetLastBlockIndex(const CBlockIndex* pindex, bool fProofOfStake);\n-void ResendWalletTransactions();\n+void ResendWalletTransactions(bool fForceResend=false);\n \n bool VerifySignature(const CTransaction& txFrom, const CTransaction& txTo, unsigned int nIn, unsigned int flags, int nHashType);\n "
      },
      {
        "sha": "bab881d270312f626000a55583decd32b4f5d109",
        "filename": "src/rpcwallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ce4428704478918d90e4ebcf73cdbee04b88c376/src/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ce4428704478918d90e4ebcf73cdbee04b88c376/src/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.cpp?ref=ce4428704478918d90e4ebcf73cdbee04b88c376",
        "patch": "@@ -1862,7 +1862,7 @@ Value resendtx(const Array& params, bool fHelp)\n             \"Re-send unconfirmed transactions.\\n\"\n         );\n \n-    ResendWalletTransactions();\n+    ResendWalletTransactions(true);\n \n     return Value::null;\n }"
      },
      {
        "sha": "07518d010fa80cd3977bdee5bd7a44138123de47",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 18,
        "deletions": 18,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ce4428704478918d90e4ebcf73cdbee04b88c376/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ce4428704478918d90e4ebcf73cdbee04b88c376/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=ce4428704478918d90e4ebcf73cdbee04b88c376",
        "patch": "@@ -1152,23 +1152,25 @@ void CWalletTx::RelayWalletTransaction()\n    RelayWalletTransaction(txdb);\n }\n \n-void CWallet::ResendWalletTransactions()\n+void CWallet::ResendWalletTransactions(bool fForceResend)\n {\n-    // Do this infrequently and randomly to avoid giving away\n-    // that these are our transactions.\n-    static int64_t nNextTime = GetRand(GetTime() + 30 * 60);\n-    if (GetTime() < nNextTime)\n-        return;\n-    bool fFirst = (nNextTime == 0);\n-    nNextTime = GetTime() + GetRand(30 * 60);\n-    if (fFirst)\n-        return;\n+    if (!fForceResend) {\n+        // Do this infrequently and randomly to avoid giving away\n+        // that these are our transactions.\n+        static int64_t nNextTime = GetRand(GetTime() + 30 * 60);\n+        if (GetTime() < nNextTime)\n+            return;\n+        bool fFirst = (nNextTime == 0);\n+        nNextTime = GetTime() + GetRand(30 * 60);\n+        if (fFirst)\n+            return;\n \n-    // Only do it if there's been a new block since last time\n-    static int64_t nLastTime = 0;\n-    if (nTimeBestReceived < nLastTime)\n-        return;\n-    nLastTime = GetTime();\n+        // Only do it if there's been a new block since last time\n+        static int64_t nLastTime = 0;\n+        if (nTimeBestReceived < nLastTime)\n+            return;\n+        nLastTime = GetTime();\n+    }\n \n     // Rebroadcast any of our txes that aren't in a block yet\n     printf(\"ResendWalletTransactions()\\n\");\n@@ -1182,7 +1184,7 @@ void CWallet::ResendWalletTransactions()\n             CWalletTx& wtx = item.second;\n             // Don't rebroadcast until it's had plenty of time that\n             // it should have gotten in already by now.\n-            if (nTimeBestReceived - (int64_t)wtx.nTimeReceived > 5 * 60)\n+            if (fForceResend || nTimeBestReceived - (int64_t)wtx.nTimeReceived > 5 * 60)\n                 mapSorted.insert(make_pair(wtx.nTimeReceived, &wtx));\n         }\n         BOOST_FOREACH(PAIRTYPE(const unsigned int, CWalletTx*)& item, mapSorted)\n@@ -2776,14 +2778,12 @@ void CWallet::GetAddresses(std::map<CBitcoinAddress, int64_t> &mapAddresses) con\n \n                 for(std::vector<CKeyID>::const_iterator it3 = vAffected.begin(); it3 != vAffected.end(); it3++) {\n                     CBitcoinAddress addrAffected(*it3);\n-\n                     if (mapAddresses.find(addrAffected) != mapAddresses.end() && (mapAddresses[addrAffected] == 0 || mapAddresses[addrAffected] > wtx.nTime))\n                         mapAddresses[addrAffected] = wtx.nTime;\n                 }\n                 vAffected.clear();\n             }\n         }\n-\n     }\n }\n "
      },
      {
        "sha": "6e36e9d4f34f5f550cbf2cfd29ae4626fd95231f",
        "filename": "src/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ce4428704478918d90e4ebcf73cdbee04b88c376/src/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ce4428704478918d90e4ebcf73cdbee04b88c376/src/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.h?ref=ce4428704478918d90e4ebcf73cdbee04b88c376",
        "patch": "@@ -212,7 +212,7 @@ class CWallet : public CCryptoKeyStore\n     int ScanForWalletTransactions(CBlockIndex* pindexStart, bool fUpdate = false);\n     int ScanForWalletTransaction(const uint256& hashTx);\n     void ReacceptWalletTransactions();\n-    void ResendWalletTransactions();\n+    void ResendWalletTransactions(bool fForceResend=false);\n     int64_t GetBalance() const;\n     int64_t GetWatchOnlyBalance() const;\n     int64_t GetUnconfirmedBalance() const;"
      }
    ]
  },
  {
    "sha": "fe67404738fbd13719bf770074615a5204d299a1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmZTY3NDA0NzM4ZmJkMTM3MTliZjc3MDA3NDYxNWE1MjA0ZDI5OWEx",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-08T21:47:03Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-08T21:47:03Z"
      },
      "message": "ImportWallet() : process private key pairs",
      "tree": {
        "sha": "fd27ee64c8d6179ab582731f6a01da1007505d84",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fd27ee64c8d6179ab582731f6a01da1007505d84"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fe67404738fbd13719bf770074615a5204d299a1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fe67404738fbd13719bf770074615a5204d299a1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fe67404738fbd13719bf770074615a5204d299a1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fe67404738fbd13719bf770074615a5204d299a1/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ce4428704478918d90e4ebcf73cdbee04b88c376",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ce4428704478918d90e4ebcf73cdbee04b88c376",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ce4428704478918d90e4ebcf73cdbee04b88c376"
      }
    ],
    "stats": {
      "total": 182,
      "additions": 101,
      "deletions": 81
    },
    "files": [
      {
        "sha": "f4d0ad396cd61a668e815aaa94c5260ba1435752",
        "filename": "src/keystore.h",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fe67404738fbd13719bf770074615a5204d299a1/src/keystore.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fe67404738fbd13719bf770074615a5204d299a1/src/keystore.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/keystore.h?ref=fe67404738fbd13719bf770074615a5204d299a1",
        "patch": "@@ -336,6 +336,12 @@ class CCryptoKeyStore : public CBasicKeyStore\n         return false;\n     }\n \n+    bool CheckOwnership(const CMalleablePubKey &mpk)\n+    {\n+        CMalleableKeyView view;\n+        return GetMalleableView(mpk, view);\n+    }\n+\n     bool CreatePrivKey(const CPubKey &pubKeyVariant, const CPubKey &R, CKey &privKey) const;\n \n     void ListMalleableViews(std::list<CMalleableKeyView> &malleableViewList) const"
      },
      {
        "sha": "c8e64ca6bff2c756dd3dd0fc636d05e58904aa8c",
        "filename": "src/walletdb.cpp",
        "status": "modified",
        "additions": 95,
        "deletions": 81,
        "changes": 176,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fe67404738fbd13719bf770074615a5204d299a1/src/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fe67404738fbd13719bf770074615a5204d299a1/src/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/walletdb.cpp?ref=fe67404738fbd13719bf770074615a5204d299a1",
        "patch": "@@ -860,89 +860,103 @@ bool ImportWallet(CWallet *pwallet, const string& strLocation)\n \n    if (!pwallet->fFileBacked)\n        return false;\n-   while (!fShutdown)\n-   {\n-      // open inputfile as stream\n-      ifstream file;\n-      file.open(strLocation.c_str());\n-      if (!file.is_open())\n-          return false;\n-\n-      int64_t nTimeBegin = pindexBest->nTime;\n-\n-      bool fGood = true;\n-\n-      // read through input file checking and importing keys into wallet.\n-      while (file.good()) {\n-          std::string line;\n-          std::getline(file, line);\n-          if (line.empty() || line[0] == '#')\n-              continue;\n-\n-          std::vector<std::string> vstr;\n-          istringstream iss(line);\n-          copy(istream_iterator<string>(iss), istream_iterator<string>(), back_inserter(vstr));\n-          if (vstr.size() < 2)\n-              continue;\n-          CBitcoinSecret vchSecret;\n-          if (!vchSecret.SetString(vstr[0]))\n-              continue;\n-\n-          bool fCompressed;\n-          CKey key;\n-          CSecret secret = vchSecret.GetSecret(fCompressed);\n-          key.SetSecret(secret, fCompressed);\n-          CKeyID keyid = key.GetPubKey().GetID();\n-\n-          if (pwallet->HaveKey(keyid)) {\n-              printf(\"Skipping import of %s (key already present)\\n\", CBitcoinAddress(keyid).ToString().c_str());\n-             continue;\n-          }\n-          int64_t nTime = DecodeDumpTime(vstr[1]);\n-          std::string strLabel;\n-          bool fLabel = true;\n-          for (unsigned int nStr = 2; nStr < vstr.size(); nStr++) {\n-              if (boost::algorithm::starts_with(vstr[nStr], \"#\"))\n-                  break;\n-              if (vstr[nStr] == \"change=1\")\n-                  fLabel = false;\n-              if (vstr[nStr] == \"reserve=1\")\n-                  fLabel = false;\n-              if (boost::algorithm::starts_with(vstr[nStr], \"label=\")) {\n-                  strLabel = DecodeDumpString(vstr[nStr].substr(6));\n-                  fLabel = true;\n-              }\n-          }\n-          printf(\"Importing %s...\\n\", CBitcoinAddress(keyid).ToString().c_str());\n-          if (!pwallet->AddKey(key)) {\n-              fGood = false;\n-              continue;\n-          }\n-          pwallet->mapKeyMetadata[keyid].nCreateTime = nTime;\n-          if (fLabel)\n-              pwallet->SetAddressBookName(keyid, strLabel);\n-          nTimeBegin = std::min(nTimeBegin, nTime);\n-      }\n-      file.close();\n-\n-      // rescan block chain looking for coins from new keys\n-      CBlockIndex *pindex = pindexBest;\n-      while (pindex && pindex->pprev && pindex->nTime > nTimeBegin - 7200)\n-          pindex = pindex->pprev;\n-\n-      printf(\"Rescanning last %i blocks\\n\", pindexBest->nHeight - pindex->nHeight + 1);\n-      pwallet->ScanForWalletTransactions(pindex);\n-      pwallet->ReacceptWalletTransactions();\n-      pwallet->MarkDirty();\n-\n-      return fGood;\n-\n-  }\n-\n-  return false;\n \n-}\n+   // open inputfile as stream\n+   ifstream file;\n+   file.open(strLocation.c_str());\n+   if (!file.is_open())\n+       return false;\n \n+   bool fGood = true;\n+   int64_t nTimeBegin = pindexBest->nTime;\n+\n+   // read through input file checking and importing keys into wallet.\n+   while (file.good()) {\n+       std::string line;\n+       std::getline(file, line);\n+       if (line.empty() || line[0] == '#')\n+           continue; // Skip comments and empty lines\n+\n+       std::vector<std::string> vstr;\n+       istringstream iss(line);\n+       copy(istream_iterator<string>(iss), istream_iterator<string>(), back_inserter(vstr));\n+       if (vstr.size() < 2)\n+           continue;\n+\n+       int64_t nTime = DecodeDumpTime(vstr[1]);\n+       std::string strLabel;\n+       bool fLabel = true;\n+       for (unsigned int nStr = 2; nStr < vstr.size(); nStr++) {\n+           if (boost::algorithm::starts_with(vstr[nStr], \"#\"))\n+               break;\n+           if (vstr[nStr] == \"change=1\")\n+               fLabel = false;\n+           if (vstr[nStr] == \"reserve=1\")\n+               fLabel = false;\n+           if (boost::algorithm::starts_with(vstr[nStr], \"label=\")) {\n+               strLabel = DecodeDumpString(vstr[nStr].substr(6));\n+               fLabel = true;\n+           }\n+       }\n+\n+       CBitcoinSecret vchSecret;\n+       if (vchSecret.SetString(vstr[0])) {\n+           // Simple private key\n+\n+           bool fCompressed;\n+           CKey key;\n+           CSecret secret = vchSecret.GetSecret(fCompressed);\n+           key.SetSecret(secret, fCompressed);\n+           CKeyID keyid = key.GetPubKey().GetID();\n+\n+           if (pwallet->HaveKey(keyid)) {\n+               printf(\"Skipping import of %s (key already present)\\n\", CBitcoinAddress(keyid).ToString().c_str());\n+               continue;\n+           }\n+\n+           printf(\"Importing %s...\\n\", CBitcoinAddress(keyid).ToString().c_str());\n+           if (!pwallet->AddKey(key)) {\n+               fGood = false;\n+               continue;\n+           }\n+           pwallet->mapKeyMetadata[keyid].nCreateTime = nTime;\n+           if (fLabel)\n+               pwallet->SetAddressBookName(keyid, strLabel);\n+       } else {\n+           // A pair of private keys\n+\n+           CMalleableKey mKey;\n+           if (!mKey.SetString(vstr[0]))\n+               continue;\n+           CMalleablePubKey mPubKey = mKey.GetMalleablePubKey();\n+           if (pwallet->CheckOwnership(mPubKey)) {\n+               printf(\"Skipping import of %s (key already present)\\n\", CBitcoinAddress(mPubKey).ToString().c_str());\n+               continue;\n+           }\n+\n+           printf(\"Importing %s...\\n\", CBitcoinAddress(mPubKey).ToString().c_str());\n+           if (!pwallet->AddMalleableKey(mKey)) {\n+               fGood = false;\n+               continue;\n+           }\n+           pwallet->mapMalleableKeyMetadata[CMalleableKeyView(mKey)].nCreateTime = nTime;\n+       }\n+       nTimeBegin = std::min(nTimeBegin, nTime);\n+   }\n+   file.close();\n+\n+   // rescan block chain looking for coins from new keys\n+   CBlockIndex *pindex = pindexBest;\n+   while (pindex && pindex->pprev && pindex->nTime > nTimeBegin - 7200)\n+       pindex = pindex->pprev;\n+\n+   printf(\"Rescanning last %i blocks\\n\", pindexBest->nHeight - pindex->nHeight + 1);\n+   pwallet->ScanForWalletTransactions(pindex);\n+   pwallet->ReacceptWalletTransactions();\n+   pwallet->MarkDirty();\n+\n+   return fGood;\n+}\n \n //\n // Try to (very carefully!) recover wallet.dat if there is a problem."
      }
    ]
  },
  {
    "sha": "0467c286a9f8ce84f4bb21c80847372fbb35cc11",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNDY3YzI4NmE5ZjhjZTg0ZjRiYjIxYzgwODQ3MzcyZmJiMzVjYzEx",
    "commit": {
      "author": {
        "name": "svost",
        "email": "svost@users.noreply.github.com",
        "date": "2016-03-11T08:13:49Z"
      },
      "committer": {
        "name": "svost",
        "email": "svost@users.noreply.github.com",
        "date": "2016-03-11T08:13:49Z"
      },
      "message": "Ies_ctx_t - move to try catch block",
      "tree": {
        "sha": "7dc80a9b0e565798f7c353a8400a002abf64602f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7dc80a9b0e565798f7c353a8400a002abf64602f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0467c286a9f8ce84f4bb21c80847372fbb35cc11",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0467c286a9f8ce84f4bb21c80847372fbb35cc11",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0467c286a9f8ce84f4bb21c80847372fbb35cc11",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0467c286a9f8ce84f4bb21c80847372fbb35cc11/comments",
    "author": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fe67404738fbd13719bf770074615a5204d299a1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fe67404738fbd13719bf770074615a5204d299a1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fe67404738fbd13719bf770074615a5204d299a1"
      }
    ],
    "stats": {
      "total": 21,
      "additions": 13,
      "deletions": 8
    },
    "files": [
      {
        "sha": "4d72bfd7100f866103b197e8f70dd86c709f6f6f",
        "filename": "src/ecies.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 8,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0467c286a9f8ce84f4bb21c80847372fbb35cc11/src/ecies.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0467c286a9f8ce84f4bb21c80847372fbb35cc11/src/ecies.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/ecies.cpp?ref=0467c286a9f8ce84f4bb21c80847372fbb35cc11",
        "patch": "@@ -556,12 +556,17 @@ unsigned char * ecies_decrypt(const ies_ctx_t *ctx, const cryptogram_t *cryptogr\n \n ies_ctx_t *create_context(EC_KEY *user_key)\n {\n-    ies_ctx_t* ctx = (ies_ctx_t*) malloc(sizeof(ies_ctx_t));\n-    ctx->cipher = EVP_aes_128_cbc();\n-    ctx->md = EVP_sha1();\n-    ctx->kdf_md = EVP_sha1();\n-    ctx->stored_key_length = 33;\n-    ctx->user_key = user_key;\n-\n-    return ctx;\n+    try {\n+      ies_ctx_t* ctx = new ies_ctx_t;\n+      ctx->cipher = EVP_aes_128_cbc();\n+      ctx->md = EVP_sha1();\n+      ctx->kdf_md = EVP_sha1();\n+      ctx->stored_key_length = 33;\n+      ctx->user_key = user_key;\n+      return ctx;\n+    }\n+    catch (const std::bad_alloc& e) {\n+      printf(\"Error: %s in %s:%d\\n\", e.what(), __FILE__, __LINE__);\n+      return NULL;\n+    }\n }"
      }
    ]
  },
  {
    "sha": "7e553ad006e403ed9fad17e9c50e65bd5d2dfa37",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3ZTU1M2FkMDA2ZTQwM2VkOWZhZDE3ZTljNTBlNjViZDVkMmRmYTM3",
    "commit": {
      "author": {
        "name": "svost",
        "email": "svost@users.noreply.github.com",
        "date": "2016-03-11T08:24:37Z"
      },
      "committer": {
        "name": "svost",
        "email": "svost@users.noreply.github.com",
        "date": "2016-03-11T08:24:37Z"
      },
      "message": "Code style fix (no \"tab\" symbol).",
      "tree": {
        "sha": "4df255fe098bc3c949daa923bc97ac8e77940c72",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4df255fe098bc3c949daa923bc97ac8e77940c72"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7e553ad006e403ed9fad17e9c50e65bd5d2dfa37",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7e553ad006e403ed9fad17e9c50e65bd5d2dfa37",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7e553ad006e403ed9fad17e9c50e65bd5d2dfa37",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7e553ad006e403ed9fad17e9c50e65bd5d2dfa37/comments",
    "author": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0467c286a9f8ce84f4bb21c80847372fbb35cc11",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0467c286a9f8ce84f4bb21c80847372fbb35cc11",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0467c286a9f8ce84f4bb21c80847372fbb35cc11"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "8305dd079eae3750a5432b365fde5555a2989631",
        "filename": "src/serialize.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7e553ad006e403ed9fad17e9c50e65bd5d2dfa37/src/serialize.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7e553ad006e403ed9fad17e9c50e65bd5d2dfa37/src/serialize.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/serialize.h?ref=7e553ad006e403ed9fad17e9c50e65bd5d2dfa37",
        "patch": "@@ -56,9 +56,9 @@ enum\n     SER_DISK            = (1 << 1),\n     SER_GETHASH         = (1 << 2),\n \n-\t // modifiers\n-\t SER_SKIPSIG = (1 << 16),\n-\t SER_BLOCKHEADERONLY = (1 << 17)\n+    // modifiers\n+    SER_SKIPSIG         = (1 << 16),\n+    SER_BLOCKHEADERONLY = (1 << 17)\n \n };\n "
      }
    ]
  },
  {
    "sha": "d0533f11f151a98336532365bffe64ecb6962197",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkMDUzM2YxMWYxNTFhOTgzMzY1MzIzNjViZmZlNjRlY2I2OTYyMTk3",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-11T17:10:20Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-11T17:10:20Z"
      },
      "message": "Keep address labels for pubkey pair addresses.",
      "tree": {
        "sha": "8a97810130e405de10a8a8d66befef76ac894af0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8a97810130e405de10a8a8d66befef76ac894af0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d0533f11f151a98336532365bffe64ecb6962197",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d0533f11f151a98336532365bffe64ecb6962197",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d0533f11f151a98336532365bffe64ecb6962197",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d0533f11f151a98336532365bffe64ecb6962197/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fe67404738fbd13719bf770074615a5204d299a1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fe67404738fbd13719bf770074615a5204d299a1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fe67404738fbd13719bf770074615a5204d299a1"
      }
    ],
    "stats": {
      "total": 437,
      "additions": 226,
      "deletions": 211
    },
    "files": [
      {
        "sha": "1c26380ff378f5424d9407e10b0def225da6e8d7",
        "filename": "src/base58.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d0533f11f151a98336532365bffe64ecb6962197/src/base58.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d0533f11f151a98336532365bffe64ecb6962197/src/base58.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/base58.cpp?ref=d0533f11f151a98336532365bffe64ecb6962197",
        "patch": "@@ -254,6 +254,13 @@ bool DecodeBase58Check(const std::string& str, std::vector<unsigned char>& vchRe\n         return true;\n     }\n \n+    bool CBitcoinAddress::Set(const CBitcoinAddress &dest)\n+    {\n+        nVersion = dest.nVersion;\n+        vchData = dest.vchData;\n+        return true;\n+    }\n+\n     bool CBitcoinAddress::IsValid() const\n     {\n         unsigned int nExpectedSize = 20;"
      },
      {
        "sha": "0ca0fda7da37646e00c6c4d5203a8e1d4b741784",
        "filename": "src/base58.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d0533f11f151a98336532365bffe64ecb6962197/src/base58.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d0533f11f151a98336532365bffe64ecb6962197/src/base58.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/base58.h?ref=d0533f11f151a98336532365bffe64ecb6962197",
        "patch": "@@ -115,6 +115,7 @@ class CBitcoinAddress : public CBase58Data\n     bool Set(const CScriptID &id);\n     bool Set(const CTxDestination &dest);\n     bool Set(const CMalleablePubKey &mpk);\n+    bool Set(const CBitcoinAddress &dest);\n     bool IsValid() const;\n \n     CBitcoinAddress()"
      },
      {
        "sha": "2f237c0d7d3b0e80ef814d2335748b7488bcb61c",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d0533f11f151a98336532365bffe64ecb6962197/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d0533f11f151a98336532365bffe64ecb6962197/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=d0533f11f151a98336532365bffe64ecb6962197",
        "patch": "@@ -900,7 +900,7 @@ bool AppInit2()\n         if (!pwalletMain->GetKeyFromPool(newDefaultKey, false))\n             strErrors << _(\"Cannot initialize keypool\") << \"\\n\";\n         pwalletMain->SetDefaultKey(newDefaultKey);\n-        if (!pwalletMain->SetAddressBookName(pwalletMain->vchDefaultKey.GetID(), \"\"))\n+        if (!pwalletMain->SetAddressBookName(CBitcoinAddress(pwalletMain->vchDefaultKey.GetID()), \"\"))\n             strErrors << _(\"Cannot write default address\") << \"\\n\";\n     }\n "
      },
      {
        "sha": "a5dc784e09fd3902fd65b3f066563d36f0fde511",
        "filename": "src/qt/addresstablemodel.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 10,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d0533f11f151a98336532365bffe64ecb6962197/src/qt/addresstablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d0533f11f151a98336532365bffe64ecb6962197/src/qt/addresstablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/addresstablemodel.cpp?ref=d0533f11f151a98336532365bffe64ecb6962197",
        "patch": "@@ -59,11 +59,11 @@ class AddressTablePriv\n         cachedAddressTable.clear();\n         {\n             LOCK(wallet->cs_wallet);\n-            BOOST_FOREACH(const PAIRTYPE(CTxDestination, std::string)& item, wallet->mapAddressBook)\n+            BOOST_FOREACH(const PAIRTYPE(CBitcoinAddress, std::string)& item, wallet->mapAddressBook)\n             {\n                 const CBitcoinAddress& address = item.first;\n                 const std::string& strName = item.second;\n-                bool fMine = IsMine(*wallet, address.Get());\n+                bool fMine = IsMine(*wallet, address);\n                 cachedAddressTable.append(AddressTableEntry(fMine ? AddressTableEntry::Receiving : AddressTableEntry::Sending,\n                                   QString::fromStdString(strName),\n                                   QString::fromStdString(address.ToString())));\n@@ -229,7 +229,7 @@ bool AddressTableModel::setData(const QModelIndex &index, const QVariant &value,\n                 editStatus = NO_CHANGES;\n                 return false;\n             }\n-            wallet->SetAddressBookName(CBitcoinAddress(rec->address.toStdString()).Get(), value.toString().toStdString());\n+            wallet->SetAddressBookName(CBitcoinAddress(rec->address.toStdString()), value.toString().toStdString());\n             break;\n         case Address:\n             // Do nothing, if old address == new address\n@@ -246,7 +246,7 @@ bool AddressTableModel::setData(const QModelIndex &index, const QVariant &value,\n             }\n             // Check for duplicate addresses to prevent accidental deletion of addresses, if you try\n             // to paste an existing address over another address (with a different label)\n-            else if(wallet->mapAddressBook.count(CBitcoinAddress(value.toString().toStdString()).Get()))\n+            else if(wallet->mapAddressBook.count(CBitcoinAddress(value.toString().toStdString())))\n             {\n                 editStatus = DUPLICATE_ADDRESS;\n                 return false;\n@@ -257,9 +257,9 @@ bool AddressTableModel::setData(const QModelIndex &index, const QVariant &value,\n                 {\n                     LOCK(wallet->cs_wallet);\n                     // Remove old entry\n-                    wallet->DelAddressBookName(CBitcoinAddress(rec->address.toStdString()).Get());\n+                    wallet->DelAddressBookName(CBitcoinAddress(rec->address.toStdString()));\n                     // Add new entry with new address\n-                    wallet->SetAddressBookName(CBitcoinAddress(value.toString().toStdString()).Get(), rec->label.toStdString());\n+                    wallet->SetAddressBookName(CBitcoinAddress(value.toString().toStdString()), rec->label.toStdString());\n                 }\n             }\n             break;\n@@ -335,7 +335,7 @@ QString AddressTableModel::addRow(const QString &type, const QString &label, con\n         // Check for duplicate addresses\n         {\n             LOCK(wallet->cs_wallet);\n-            if(wallet->mapAddressBook.count(CBitcoinAddress(strAddress).Get()))\n+            if(wallet->mapAddressBook.count(CBitcoinAddress(strAddress)))\n             {\n                 editStatus = DUPLICATE_ADDRESS;\n                 return QString();\n@@ -368,7 +368,7 @@ QString AddressTableModel::addRow(const QString &type, const QString &label, con\n     // Add entry\n     {\n         LOCK(wallet->cs_wallet);\n-        wallet->SetAddressBookName(CBitcoinAddress(strAddress).Get(), strLabel);\n+        wallet->SetAddressBookName(CBitcoinAddress(strAddress), strLabel);\n     }\n     return QString::fromStdString(strAddress);\n }\n@@ -385,7 +385,7 @@ bool AddressTableModel::removeRows(int row, int count, const QModelIndex &parent\n     }\n     {\n         LOCK(wallet->cs_wallet);\n-        wallet->DelAddressBookName(CBitcoinAddress(rec->address.toStdString()).Get());\n+        wallet->DelAddressBookName(CBitcoinAddress(rec->address.toStdString()));\n     }\n     return true;\n }\n@@ -397,7 +397,7 @@ QString AddressTableModel::labelForAddress(const QString &address) const\n     {\n         LOCK(wallet->cs_wallet);\n         CBitcoinAddress address_parsed(address.toStdString());\n-        std::map<CTxDestination, std::string>::iterator mi = wallet->mapAddressBook.find(address_parsed.Get());\n+        std::map<CBitcoinAddress, std::string>::iterator mi = wallet->mapAddressBook.find(address_parsed);\n         if (mi != wallet->mapAddressBook.end())\n         {\n             return QString::fromStdString(mi->second);"
      },
      {
        "sha": "7b7472b5ba133954bc0d6b460695025e9567f97b",
        "filename": "src/qt/coincontroldialog.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 9,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d0533f11f151a98336532365bffe64ecb6962197/src/qt/coincontroldialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d0533f11f151a98336532365bffe64ecb6962197/src/qt/coincontroldialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/coincontroldialog.cpp?ref=d0533f11f151a98336532365bffe64ecb6962197",
        "patch": "@@ -4,7 +4,7 @@\n #include \"init.h\"\n #include \"base58.h\"\n #include \"bitcoinunits.h\"\n-#include \"wallet.h\"\n+#include \"script.h\"\n #include \"walletmodel.h\"\n #include \"addresstablemodel.h\"\n #include \"optionsmodel.h\"\n@@ -471,16 +471,15 @@ void CoinControlDialog::updateLabels(WalletModel *model, QWidget* dialog)\n \n         // Bytes\n         CBitcoinAddress address;\n-        if(pwalletMain->ExtractAddress(out.tx->vout[out.i].scriptPubKey, address))\n+        if(ExtractAddress(*pwalletMain, out.tx->vout[out.i].scriptPubKey, address))\n         {\n             if (address.IsPair())\n                 nBytesInputs += 213;\n             else if (address.IsPubKey())\n             {\n                 CPubKey pubkey;\n-                CTxDestination dest = address.Get();\n-                CKeyID *keyid = boost::get< CKeyID >(&dest);\n-                if (keyid && model->getPubKey(*keyid, pubkey))\n+                CKeyID keyid;\n+                if (address.GetKeyID(keyid) && model->getPubKey(keyid, pubkey))\n                     nBytesInputs += (pubkey.IsCompressed() ? 148 : 180);\n                 else\n                     nBytesInputs += 148; // in all error cases, simply assume 148 here\n@@ -640,7 +639,7 @@ void CoinControlDialog::updateView()\n             CBitcoinAddress outputAddress;\n             QString sAddress = \"\";\n \n-            if(pwalletMain->ExtractAddress(out.tx->vout[out.i].scriptPubKey, outputAddress))\n+            if(ExtractAddress(*pwalletMain, out.tx->vout[out.i].scriptPubKey, outputAddress))\n             {\n                 sAddress = CBitcoinAddress(outputAddress).ToString().c_str();\n \n@@ -651,9 +650,8 @@ void CoinControlDialog::updateView()\n                 if (outputAddress.IsPubKey())\n                 {\n                     CPubKey pubkey;\n-                    CTxDestination dest = outputAddress.Get();\n-                    CKeyID *keyid = boost::get< CKeyID >(&dest);\n-                    if (keyid && model->getPubKey(*keyid, pubkey) && !pubkey.IsCompressed())\n+                    CKeyID keyid;\n+                    if (outputAddress.GetKeyID(keyid) && model->getPubKey(keyid, pubkey) && !pubkey.IsCompressed())\n                         nInputSize = 180;\n                 }\n             }"
      },
      {
        "sha": "a82f76e9d54579453dbd16e81a817ee55cedff8f",
        "filename": "src/qt/multisigdialog.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d0533f11f151a98336532365bffe64ecb6962197/src/qt/multisigdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d0533f11f151a98336532365bffe64ecb6962197/src/qt/multisigdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/multisigdialog.cpp?ref=d0533f11f151a98336532365bffe64ecb6962197",
        "patch": "@@ -243,8 +243,8 @@ void MultisigDialog::on_saveMultisigAddressButton_clicked()\n     LOCK(wallet->cs_wallet);\n     if(!wallet->HaveCScript(scriptID))\n         wallet->AddCScript(script);\n-    if(!wallet->mapAddressBook.count(CBitcoinAddress(address).Get()))\n-        wallet->SetAddressBookName(CBitcoinAddress(address).Get(), label);\n+    if(!wallet->mapAddressBook.count(CBitcoinAddress(address)))\n+        wallet->SetAddressBookName(CBitcoinAddress(address), label);\n }\n \n void MultisigDialog::clear()"
      },
      {
        "sha": "72bc4607fd8069e181635d78482756ec208c27aa",
        "filename": "src/qt/transactiondesc.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d0533f11f151a98336532365bffe64ecb6962197/src/qt/transactiondesc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d0533f11f151a98336532365bffe64ecb6962197/src/qt/transactiondesc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactiondesc.cpp?ref=d0533f11f151a98336532365bffe64ecb6962197",
        "patch": "@@ -142,9 +142,9 @@ QString TransactionDesc::toHTML(CWallet *wallet, CWalletTx &wtx)\n             // Online transaction\n             std::string strAddress = wtx.mapValue[\"to\"];\n             strHTML += \"<b>\" + tr(\"To\") + \":</b> \";\n-            CTxDestination dest = CBitcoinAddress(strAddress).Get();\n-            if (wallet->mapAddressBook.count(dest) && !wallet->mapAddressBook[dest].empty())\n-                strHTML += GUIUtil::HtmlEscape(wallet->mapAddressBook[dest]) + \" \";\n+            CBitcoinAddress addr(strAddress);\n+            if (wallet->mapAddressBook.count(addr) && !wallet->mapAddressBook[addr].empty())\n+                strHTML += GUIUtil::HtmlEscape(wallet->mapAddressBook[addr]) + \" \";\n             strHTML += GUIUtil::HtmlEscape(strAddress) + \"<br>\";\n         }\n "
      },
      {
        "sha": "a4066cfaf2ab3ae18469e88ad95d54123d38ee70",
        "filename": "src/qt/transactionrecord.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d0533f11f151a98336532365bffe64ecb6962197/src/qt/transactionrecord.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d0533f11f151a98336532365bffe64ecb6962197/src/qt/transactionrecord.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionrecord.cpp?ref=d0533f11f151a98336532365bffe64ecb6962197",
        "patch": "@@ -50,7 +50,7 @@ QList<TransactionRecord> TransactionRecord::decomposeTransaction(const CWallet *\n                 sub.credit = txout.nValue;\n \n                 CBitcoinAddress addressRet;\n-                if (pwalletMain->ExtractAddress(txout.scriptPubKey, addressRet))\n+                if (ExtractAddress(*pwalletMain, txout.scriptPubKey, addressRet))\n                 {\n                     sub.type = TransactionRecord::RecvWithAddress;\n                     sub.address = addressRet.ToString();"
      },
      {
        "sha": "faf5049ead72976ab0d5ee6d62dc1d2fcec39b18",
        "filename": "src/qt/walletmodel.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d0533f11f151a98336532365bffe64ecb6962197/src/qt/walletmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d0533f11f151a98336532365bffe64ecb6962197/src/qt/walletmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.cpp?ref=d0533f11f151a98336532365bffe64ecb6962197",
        "patch": "@@ -239,17 +239,17 @@ WalletModel::SendCoinsReturn WalletModel::sendCoins(const QList<SendCoinsRecipie\n     foreach(const SendCoinsRecipient &rcp, recipients)\n     {\n         std::string strAddress = rcp.address.toStdString();\n-        CTxDestination dest = CBitcoinAddress(strAddress).Get();\n+        CBitcoinAddress addr(strAddress);\n         std::string strLabel = rcp.label.toStdString();\n         {\n             LOCK(wallet->cs_wallet);\n \n-            std::map<CTxDestination, std::string>::iterator mi = wallet->mapAddressBook.find(dest);\n+            std::map<CBitcoinAddress, std::string>::iterator mi = wallet->mapAddressBook.find(addr);\n \n             // Check if we have a new address or an updated label\n             if (mi == wallet->mapAddressBook.end() || mi->second != strLabel)\n             {\n-                wallet->SetAddressBookName(dest, strLabel);\n+                wallet->SetAddressBookName(addr, strLabel);\n             }\n         }\n     }\n@@ -359,11 +359,11 @@ static void NotifyKeyStoreStatusChanged(WalletModel *walletmodel, CCryptoKeyStor\n     QMetaObject::invokeMethod(walletmodel, \"updateStatus\", Qt::QueuedConnection);\n }\n \n-static void NotifyAddressBookChanged(WalletModel *walletmodel, CWallet *wallet, const CTxDestination &address, const std::string &label, bool isMine, ChangeType status)\n+static void NotifyAddressBookChanged(WalletModel *walletmodel, CWallet *wallet, const CBitcoinAddress &address, const std::string &label, bool isMine, ChangeType status)\n {\n-    OutputDebugStringF(\"NotifyAddressBookChanged %s %s isMine=%i status=%i\\n\", CBitcoinAddress(address).ToString().c_str(), label.c_str(), isMine, status);\n+    OutputDebugStringF(\"NotifyAddressBookChanged %s %s isMine=%i status=%i\\n\", address.ToString().c_str(), label.c_str(), isMine, status);\n     QMetaObject::invokeMethod(walletmodel, \"updateAddressBook\", Qt::QueuedConnection,\n-                              Q_ARG(QString, QString::fromStdString(CBitcoinAddress(address).ToString())),\n+                              Q_ARG(QString, QString::fromStdString(address.ToString())),\n                               Q_ARG(QString, QString::fromStdString(label)),\n                               Q_ARG(bool, isMine),\n                               Q_ARG(int, status));\n@@ -496,7 +496,7 @@ void WalletModel::listCoins(std::map<QString, std::vector<COutput> >& mapCoins)\n         }\n \n         CBitcoinAddress addressRet;\n-        if(!out.fSpendable || !wallet->ExtractAddress(cout.tx->vout[cout.i].scriptPubKey, addressRet))\n+        if(!out.fSpendable || !ExtractAddress(*wallet, cout.tx->vout[cout.i].scriptPubKey, addressRet))\n             continue;\n \n         mapCoins[addressRet.ToString().c_str()].push_back(out);"
      },
      {
        "sha": "94eaad2674c405c3e2598d7194dbf29edf921b3e",
        "filename": "src/rpcdump.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 5,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d0533f11f151a98336532365bffe64ecb6962197/src/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d0533f11f151a98336532365bffe64ecb6962197/src/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcdump.cpp?ref=d0533f11f151a98336532365bffe64ecb6962197",
        "patch": "@@ -62,18 +62,19 @@ Value importprivkey(const Array& params, bool fHelp)\n     bool fCompressed;\n     CSecret secret = vchSecret.GetSecret(fCompressed);\n     key.SetSecret(secret, fCompressed);\n-    CKeyID vchAddress = key.GetPubKey().GetID();\n+    CKeyID keyid = key.GetPubKey().GetID();\n+    CBitcoinAddress addr = CBitcoinAddress(keyid);\n     {\n         LOCK2(cs_main, pwalletMain->cs_wallet);\n \n         pwalletMain->MarkDirty();\n-        pwalletMain->SetAddressBookName(vchAddress, strLabel);\n+        pwalletMain->SetAddressBookName(addr, strLabel);\n \n         // Don't throw error in case a key is already there\n-        if (pwalletMain->HaveKey(vchAddress))\n+        if (pwalletMain->HaveKey(keyid))\n             return Value::null;\n \n-        pwalletMain->mapKeyMetadata[vchAddress].nCreateTime = 1;\n+        pwalletMain->mapKeyMetadata[addr].nCreateTime = 1;\n \n         if (!pwalletMain->AddKey(key))\n             throw JSONRPCError(RPC_WALLET_ERROR, \"Error adding key to wallet\");\n@@ -131,7 +132,7 @@ Value importaddress(const Array& params, bool fHelp)\n         pwalletMain->MarkDirty();\n \n         if (address.IsValid())\n-            pwalletMain->SetAddressBookName(address.Get(), strLabel);\n+            pwalletMain->SetAddressBookName(address, strLabel);\n \n         if (!pwalletMain->AddWatchOnly(script))\n             throw JSONRPCError(RPC_WALLET_ERROR, \"Error adding address to wallet\");"
      },
      {
        "sha": "61ee9e9b76efdbffb302bf90f0fd6ec79b200ccc",
        "filename": "src/rpcwallet.cpp",
        "status": "modified",
        "additions": 46,
        "deletions": 48,
        "changes": 94,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d0533f11f151a98336532365bffe64ecb6962197/src/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d0533f11f151a98336532365bffe64ecb6962197/src/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.cpp?ref=d0533f11f151a98336532365bffe64ecb6962197",
        "patch": "@@ -134,11 +134,11 @@ Value getnewaddress(const Array& params, bool fHelp)\n     CPubKey newKey;\n     if (!pwalletMain->GetKeyFromPool(newKey, false))\n         throw JSONRPCError(RPC_WALLET_KEYPOOL_RAN_OUT, \"Error: Keypool ran out, please call keypoolrefill first\");\n-    CKeyID keyID = newKey.GetID();\n+    CBitcoinAddress address(newKey.GetID());\n \n-    pwalletMain->SetAddressBookName(keyID, strAccount);\n+    pwalletMain->SetAddressBookName(address, strAccount);\n \n-    return CBitcoinAddress(keyID).ToString();\n+    return address.ToString();\n }\n \n \n@@ -173,7 +173,7 @@ CBitcoinAddress GetAccountAddress(string strAccount, bool bForceNew=false)\n         if (!pwalletMain->GetKeyFromPool(account.vchPubKey, false))\n             throw JSONRPCError(RPC_WALLET_KEYPOOL_RAN_OUT, \"Error: Keypool ran out, please call keypoolrefill first\");\n \n-        pwalletMain->SetAddressBookName(account.vchPubKey.GetID(), strAccount);\n+        pwalletMain->SetAddressBookName(CBitcoinAddress(account.vchPubKey.GetID()), strAccount);\n         walletdb.WriteAccount(strAccount, account);\n     }\n \n@@ -216,14 +216,14 @@ Value setaccount(const Array& params, bool fHelp)\n         strAccount = AccountFromValue(params[1]);\n \n     // Detect when changing the account of an address that is the 'unused current key' of another account:\n-    if (pwalletMain->mapAddressBook.count(address.Get()))\n+    if (pwalletMain->mapAddressBook.count(address))\n     {\n-        string strOldAccount = pwalletMain->mapAddressBook[address.Get()];\n+        string strOldAccount = pwalletMain->mapAddressBook[address];\n         if (address == GetAccountAddress(strOldAccount))\n             GetAccountAddress(strOldAccount, true);\n     }\n \n-    pwalletMain->SetAddressBookName(address.Get(), strAccount);\n+    pwalletMain->SetAddressBookName(address, strAccount);\n \n     return Value::null;\n }\n@@ -241,7 +241,7 @@ Value getaccount(const Array& params, bool fHelp)\n         throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid NovaCoin address\");\n \n     string strAccount;\n-    map<CTxDestination, string>::iterator mi = pwalletMain->mapAddressBook.find(address.Get());\n+    map<CBitcoinAddress, string>::iterator mi = pwalletMain->mapAddressBook.find(address);\n     if (mi != pwalletMain->mapAddressBook.end() && !(*mi).second.empty())\n         strAccount = (*mi).second;\n     return strAccount;\n@@ -366,19 +366,19 @@ Value listaddressgroupings(const Array& params, bool fHelp)\n             \"in past transactions\");\n \n     Array jsonGroupings;\n-    map<CTxDestination, int64_t> balances = pwalletMain->GetAddressBalances();\n-    BOOST_FOREACH(set<CTxDestination> grouping, pwalletMain->GetAddressGroupings())\n+    map<CBitcoinAddress, int64_t> balances = pwalletMain->GetAddressBalances();\n+    BOOST_FOREACH(set<CBitcoinAddress> grouping, pwalletMain->GetAddressGroupings())\n     {\n         Array jsonGrouping;\n-        BOOST_FOREACH(CTxDestination address, grouping)\n+        BOOST_FOREACH(CBitcoinAddress address, grouping)\n         {\n             Array addressInfo;\n-            addressInfo.push_back(CBitcoinAddress(address).ToString());\n+            addressInfo.push_back(address.ToString());\n             addressInfo.push_back(ValueFromAmount(balances[address]));\n             {\n                 LOCK(pwalletMain->cs_wallet);\n-                if (pwalletMain->mapAddressBook.find(CBitcoinAddress(address).Get()) != pwalletMain->mapAddressBook.end())\n-                    addressInfo.push_back(pwalletMain->mapAddressBook.find(CBitcoinAddress(address).Get())->second);\n+                if (pwalletMain->mapAddressBook.find(address) != pwalletMain->mapAddressBook.end())\n+                    addressInfo.push_back(pwalletMain->mapAddressBook.find(address)->second);\n             }\n             jsonGrouping.push_back(addressInfo);\n         }\n@@ -487,7 +487,7 @@ Value getreceivedbyaddress(const Array& params, bool fHelp)\n         BOOST_FOREACH(const CTxOut& txout, wtx.vout)\n         {\n             CBitcoinAddress addressRet;\n-            if (!pwalletMain->ExtractAddress(txout.scriptPubKey, addressRet))\n+            if (!ExtractAddress(*pwalletMain, txout.scriptPubKey, addressRet))\n                 continue;\n             if (addressRet == address)\n                 if (wtx.GetDepthInMainChain() >= nMinDepth)\n@@ -498,11 +498,11 @@ Value getreceivedbyaddress(const Array& params, bool fHelp)\n     return  ValueFromAmount(nAmount);\n }\n \n-void GetAccountAddresses(string strAccount, set<CTxDestination>& setAddress)\n+void GetAccountAddresses(string strAccount, set<CBitcoinAddress>& setAddress)\n {\n-    BOOST_FOREACH(const PAIRTYPE(CTxDestination, string)& item, pwalletMain->mapAddressBook)\n+    BOOST_FOREACH(const PAIRTYPE(CBitcoinAddress, string)& item, pwalletMain->mapAddressBook)\n     {\n-        const CTxDestination& address = item.first;\n+        const CBitcoinAddress& address = item.first;\n         const string& strName = item.second;\n         if (strName == strAccount)\n             setAddress.insert(address);\n@@ -523,7 +523,7 @@ Value getreceivedbyaccount(const Array& params, bool fHelp)\n \n     // Get the set of pub keys assigned to account\n     string strAccount = AccountFromValue(params[0]);\n-    set<CTxDestination> setAddress;\n+    set<CBitcoinAddress> setAddress;\n     GetAccountAddresses(strAccount, setAddress);\n \n     // Tally\n@@ -536,8 +536,8 @@ Value getreceivedbyaccount(const Array& params, bool fHelp)\n \n         BOOST_FOREACH(const CTxOut& txout, wtx.vout)\n         {\n-            CTxDestination address;\n-            if (ExtractDestination(txout.scriptPubKey, address) && IsMine(*pwalletMain, address) && setAddress.count(address))\n+            CBitcoinAddress address;\n+            if (ExtractAddress(*pwalletMain, txout.scriptPubKey, address) && IsMine(*pwalletMain, address) && setAddress.count(address))\n                 if (wtx.GetDepthInMainChain() >= nMinDepth)\n                     nAmount += txout.nValue;\n         }\n@@ -614,15 +614,15 @@ Value getbalance(const Array& params, bool fHelp)\n             allGeneratedImmature = allGeneratedMature = allFee = 0;\n \n             string strSentAccount;\n-            list<pair<CTxDestination, int64_t> > listReceived;\n-            list<pair<CTxDestination, int64_t> > listSent;\n+            list<pair<CBitcoinAddress, int64_t> > listReceived;\n+            list<pair<CBitcoinAddress, int64_t> > listSent;\n             wtx.GetAmounts(allGeneratedImmature, allGeneratedMature, listReceived, listSent, allFee, strSentAccount, filter);\n             if (wtx.GetDepthInMainChain() >= nMinDepth)\n             {\n-                BOOST_FOREACH(const PAIRTYPE(CTxDestination,int64_t)& r, listReceived)\n+                BOOST_FOREACH(const PAIRTYPE(CBitcoinAddress,int64_t)& r, listReceived)\n                     nBalance += r.second;\n             }\n-            BOOST_FOREACH(const PAIRTYPE(CTxDestination,int64_t)& r, listSent)\n+            BOOST_FOREACH(const PAIRTYPE(CBitcoinAddress,int64_t)& r, listSent)\n                 nBalance -= r.second;\n             nBalance -= allFee;\n             nBalance += allGeneratedMature;\n@@ -886,11 +886,11 @@ Value addmultisigaddress(const Array& params, bool fHelp)\n     throw runtime_error(\n         strprintf(\"redeemScript exceeds size limit: %\" PRIszu \" > %d\", inner.size(), MAX_SCRIPT_ELEMENT_SIZE));\n \n-    CScriptID innerID = inner.GetID();\n     pwalletMain->AddCScript(inner);\n+    CBitcoinAddress address(inner.GetID());\n \n-    pwalletMain->SetAddressBookName(innerID, strAccount);\n-    return CBitcoinAddress(innerID).ToString();\n+    pwalletMain->SetAddressBookName(address, strAccount);\n+    return address.ToString();\n }\n \n Value addredeemscript(const Array& params, bool fHelp)\n@@ -910,11 +910,11 @@ Value addredeemscript(const Array& params, bool fHelp)\n     // Construct using pay-to-script-hash:\n     vector<unsigned char> innerData = ParseHexV(params[0], \"redeemScript\");\n     CScript inner(innerData.begin(), innerData.end());\n-    CScriptID innerID = inner.GetID();\n     pwalletMain->AddCScript(inner);\n+    CBitcoinAddress address(inner.GetID());\n \n-    pwalletMain->SetAddressBookName(innerID, strAccount);\n-    return CBitcoinAddress(innerID).ToString();\n+    pwalletMain->SetAddressBookName(address, strAccount);\n+    return address.ToString();\n }\n \n struct tallyitem\n@@ -1049,19 +1049,17 @@ Value listreceivedbyaccount(const Array& params, bool fHelp)\n     return ListReceived(params, true);\n }\n \n-static void MaybePushAddress(Object & entry, const CTxDestination &dest)\n+static void MaybePushAddress(Object & entry, const CBitcoinAddress &dest)\n {\n-    CBitcoinAddress addr;\n-    if (addr.Set(dest))\n-        entry.push_back(Pair(\"address\", addr.ToString()));\n+    entry.push_back(Pair(\"address\", dest.ToString()));\n }\n \n void ListTransactions(const CWalletTx& wtx, const string& strAccount, int nMinDepth, bool fLong, Array& ret, const isminefilter& filter)\n {\n     int64_t nGeneratedImmature, nGeneratedMature, nFee;\n     string strSentAccount;\n-    list<pair<CTxDestination, int64_t> > listReceived;\n-    list<pair<CTxDestination, int64_t> > listSent;\n+    list<pair<CBitcoinAddress, int64_t> > listReceived;\n+    list<pair<CBitcoinAddress, int64_t> > listSent;\n \n     wtx.GetAmounts(nGeneratedImmature, nGeneratedMature, listReceived, listSent, nFee, strSentAccount, filter);\n \n@@ -1091,7 +1089,7 @@ void ListTransactions(const CWalletTx& wtx, const string& strAccount, int nMinDe\n     // Sent\n     if ((!listSent.empty() || nFee != 0) && (fAllAccounts || strAccount == strSentAccount))\n     {\n-        BOOST_FOREACH(const PAIRTYPE(CTxDestination, int64_t)& s, listSent)\n+        BOOST_FOREACH(const PAIRTYPE(CBitcoinAddress, int64_t)& s, listSent)\n         {\n             Object entry;\n             entry.push_back(Pair(\"account\", strSentAccount));\n@@ -1116,7 +1114,7 @@ void ListTransactions(const CWalletTx& wtx, const string& strAccount, int nMinDe\n     // Received\n     if (listReceived.size() > 0 && wtx.GetDepthInMainChain() >= nMinDepth)\n     {\n-        BOOST_FOREACH(const PAIRTYPE(CTxDestination, int64_t)& r, listReceived)\n+        BOOST_FOREACH(const PAIRTYPE(CBitcoinAddress, int64_t)& r, listReceived)\n         {\n             string account;\n             if (pwalletMain->mapAddressBook.count(r.first))\n@@ -1246,7 +1244,7 @@ Value listaccounts(const Array& params, bool fHelp)\n \n \n     map<string, int64_t> mapAccountBalances;\n-    BOOST_FOREACH(const PAIRTYPE(CTxDestination, string)& entry, pwalletMain->mapAddressBook) {\n+    BOOST_FOREACH(const PAIRTYPE(CBitcoinAddress, string)& entry, pwalletMain->mapAddressBook) {\n         if (IsMine(*pwalletMain, entry.first)) // This address belongs to me\n             mapAccountBalances[entry.second] = 0;\n     }\n@@ -1256,16 +1254,16 @@ Value listaccounts(const Array& params, bool fHelp)\n         const CWalletTx& wtx = (*it).second;\n         int64_t nGeneratedImmature, nGeneratedMature, nFee;\n         string strSentAccount;\n-        list<pair<CTxDestination, int64_t> > listReceived;\n-        list<pair<CTxDestination, int64_t> > listSent;\n+        list<pair<CBitcoinAddress, int64_t> > listReceived;\n+        list<pair<CBitcoinAddress, int64_t> > listSent;\n         wtx.GetAmounts(nGeneratedImmature, nGeneratedMature, listReceived, listSent, nFee, strSentAccount, includeWatchonly);\n         mapAccountBalances[strSentAccount] -= nFee;\n-        BOOST_FOREACH(const PAIRTYPE(CTxDestination, int64_t)& s, listSent)\n+        BOOST_FOREACH(const PAIRTYPE(CBitcoinAddress, int64_t)& s, listSent)\n             mapAccountBalances[strSentAccount] -= s.second;\n         if (wtx.GetDepthInMainChain() >= nMinDepth)\n         {\n             mapAccountBalances[\"\"] += nGeneratedMature;\n-            BOOST_FOREACH(const PAIRTYPE(CTxDestination, int64_t)& r, listReceived)\n+            BOOST_FOREACH(const PAIRTYPE(CBitcoinAddress, int64_t)& r, listReceived)\n                 if (pwalletMain->mapAddressBook.count(r.first))\n                     mapAccountBalances[pwalletMain->mapAddressBook[r.first]] += r.second;\n                 else\n@@ -1750,18 +1748,18 @@ Value validateaddress(const Array& params, bool fHelp)\n         }\n         else\n         {\n-            CTxDestination dest = address.Get();\n             string currentAddress = address.ToString();\n+            CTxDestination dest = address.Get();\n             ret.push_back(Pair(\"address\", currentAddress));\n-            isminetype mine = pwalletMain ? IsMine(*pwalletMain, dest) : MINE_NO;\n+            isminetype mine = pwalletMain ? IsMine(*pwalletMain, address) : MINE_NO;\n             ret.push_back(Pair(\"ismine\", mine != MINE_NO));\n             if (mine != MINE_NO) {\n                 ret.push_back(Pair(\"watchonly\", mine == MINE_WATCH_ONLY));\n                 Object detail = boost::apply_visitor(DescribeAddressVisitor(mine), dest);\n                 ret.insert(ret.end(), detail.begin(), detail.end());\n             }\n-            if (pwalletMain->mapAddressBook.count(dest))\n-                ret.push_back(Pair(\"account\", pwalletMain->mapAddressBook[dest]));\n+            if (pwalletMain->mapAddressBook.count(address))\n+                ret.push_back(Pair(\"account\", pwalletMain->mapAddressBook[address]));\n         }\n     }\n     return ret;"
      },
      {
        "sha": "16dfa999b1c69eaad5522c9bc77f902b6605d4f5",
        "filename": "src/script.cpp",
        "status": "modified",
        "additions": 38,
        "deletions": 1,
        "changes": 39,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d0533f11f151a98336532365bffe64ecb6962197/src/script.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d0533f11f151a98336532365bffe64ecb6962197/src/script.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script.cpp?ref=d0533f11f151a98336532365bffe64ecb6962197",
        "patch": "@@ -1640,12 +1640,13 @@ class CKeyStoreIsMineVisitor : public boost::static_visitor<bool>\n     bool operator()(const CScriptID &scriptID) const { return keystore->HaveCScript(scriptID); }\n };\n \n+/*\n isminetype IsMine(const CKeyStore &keystore, const CTxDestination& dest)\n {\n     CScript script;\n     script.SetDestination(dest);\n     return IsMine(keystore, script);\n-}\n+}*/\n \n isminetype IsMine(const CKeyStore &keystore, const CBitcoinAddress& dest)\n {\n@@ -1744,6 +1745,42 @@ bool ExtractDestination(const CScript& scriptPubKey, CTxDestination& addressRet)\n     return false;\n }\n \n+bool ExtractAddress(const CKeyStore &keystore, const CScript& scriptPubKey, CBitcoinAddress& addressRet)\n+{\n+    vector<valtype> vSolutions;\n+    txnouttype whichType;\n+    if (!Solver(scriptPubKey, whichType, vSolutions))\n+        return false;\n+\n+    if (whichType == TX_PUBKEY)\n+    {\n+        addressRet = CBitcoinAddress(CPubKey(vSolutions[0]).GetID());\n+        return true;\n+    }\n+    if (whichType == TX_PUBKEY_DROP)\n+    {\n+        // Pay-to-Pubkey-R\n+        CMalleableKeyView view;\n+        if (!keystore.CheckOwnership(CPubKey(vSolutions[0]), CPubKey(vSolutions[1]), view))\n+            return false;\n+\n+        addressRet = CBitcoinAddress(view.GetMalleablePubKey());\n+        return true;\n+    }\n+    else if (whichType == TX_PUBKEYHASH)\n+    {\n+        addressRet = CBitcoinAddress(CKeyID(uint160(vSolutions[0])));\n+        return true;\n+    }\n+    else if (whichType == TX_SCRIPTHASH)\n+    {\n+        addressRet = CBitcoinAddress(CScriptID(uint160(vSolutions[0])));\n+        return true;\n+    }\n+    // Multisig txns have more than one address...\n+    return false;\n+}\n+\n class CAffectedKeysVisitor : public boost::static_visitor<void> {\n private:\n     const CKeyStore &keystore;"
      },
      {
        "sha": "c24ab9cdea5e848eeca445b1d3b157909f9aead8",
        "filename": "src/script.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d0533f11f151a98336532365bffe64ecb6962197/src/script.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d0533f11f151a98336532365bffe64ecb6962197/src/script.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script.h?ref=d0533f11f151a98336532365bffe64ecb6962197",
        "patch": "@@ -637,10 +637,11 @@ bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, std::vector<std::v\n int ScriptSigArgsExpected(txnouttype t, const std::vector<std::vector<unsigned char> >& vSolutions);\n bool IsStandard(const CScript& scriptPubKey, txnouttype& whichType);\n isminetype IsMine(const CKeyStore& keystore, const CScript& scriptPubKey);\n-isminetype IsMine(const CKeyStore& keystore, const CTxDestination& dest);\n+//isminetype IsMine(const CKeyStore& keystore, const CTxDestination& dest);\n isminetype IsMine(const CKeyStore& keystore, const CBitcoinAddress& dest);\n void ExtractAffectedKeys(const CKeyStore &keystore, const CScript& scriptPubKey, std::vector<CKeyID> &vKeys);\n bool ExtractDestination(const CScript& scriptPubKey, CTxDestination& addressRet);\n+bool ExtractAddress(const CKeyStore &keystore, const CScript& scriptPubKey, CBitcoinAddress& addressRet);\n bool ExtractDestinations(const CScript& scriptPubKey, txnouttype& typeRet, std::vector<CTxDestination>& addressRet, int& nRequiredRet);\n bool SignSignature(const CKeyStore& keystore, const CScript& fromPubKey, CTransaction& txTo, unsigned int nIn, int nHashType=SIGHASH_ALL);\n bool SignSignature(const CKeyStore& keystore, const CTransaction& txFrom, CTransaction& txTo, unsigned int nIn, int nHashType=SIGHASH_ALL);"
      },
      {
        "sha": "8006674f5d6b8c9a8a364d1aa92a3054033a20b5",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 57,
        "deletions": 96,
        "changes": 153,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d0533f11f151a98336532365bffe64ecb6962197/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d0533f11f151a98336532365bffe64ecb6962197/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=d0533f11f151a98336532365bffe64ecb6962197",
        "patch": "@@ -48,7 +48,7 @@ CPubKey CWallet::GenerateNewKey()\n \n     // Create new metadata\n     int64_t nCreationTime = GetTime();\n-    mapKeyMetadata[pubkey.GetID()] = CKeyMetadata(nCreationTime);\n+    mapKeyMetadata[CBitcoinAddress(pubkey.GetID())] = CKeyMetadata(nCreationTime);\n     if (!nTimeFirstKey || nCreationTime < nTimeFirstKey)\n         nTimeFirstKey = nCreationTime;\n \n@@ -70,7 +70,7 @@ CMalleableKeyView CWallet::GenerateNewMalleableKey()\n \n     // Create new metadata\n     int64_t nCreationTime = GetTime();\n-    mapMalleableKeyMetadata[keyView] = CKeyMetadata(nCreationTime);\n+    mapKeyMetadata[CBitcoinAddress(keyView.GetMalleablePubKey())] = CKeyMetadata(nCreationTime);\n     if (!nTimeFirstKey || nCreationTime < nTimeFirstKey)\n         nTimeFirstKey = nCreationTime;\n \n@@ -87,7 +87,7 @@ bool CWallet::AddKey(const CKey& key)\n     if (!fFileBacked)\n         return true;\n     if (!IsCrypted())\n-        return CWalletDB(strWalletFile).WriteKey(pubkey, key.GetPrivKey(), mapKeyMetadata[pubkey.GetID()]);\n+        return CWalletDB(strWalletFile).WriteKey(pubkey, key.GetPrivKey(), mapKeyMetadata[CBitcoinAddress(pubkey.GetID())]);\n     return true;\n }\n \n@@ -100,7 +100,7 @@ bool CWallet::AddMalleableKey(const CMalleableKey& mKey)\n     if (!fFileBacked)\n         return true;\n     if (!IsCrypted())\n-        return CWalletDB(strWalletFile).WriteMalleableKey(keyView, vchSecretH, mapMalleableKeyMetadata[keyView]);\n+        return CWalletDB(strWalletFile).WriteMalleableKey(keyView, vchSecretH, mapKeyMetadata[CBitcoinAddress(keyView.GetMalleablePubKey())]);\n     return true;\n }\n \n@@ -114,10 +114,11 @@ bool CWallet::AddCryptedMalleableKey(const CMalleableKeyView& keyView, const std\n \n     {\n         LOCK(cs_wallet);\n+        CBitcoinAddress addr(keyView.GetMalleablePubKey());\n         if (pwalletdbEncryption)\n-            return pwalletdbEncryption->WriteCryptedMalleableKey(keyView, vchCryptedSecretH, mapMalleableKeyMetadata[keyView]);\n+            return pwalletdbEncryption->WriteCryptedMalleableKey(keyView, vchCryptedSecretH, mapKeyMetadata[addr]);\n         else\n-            return CWalletDB(strWalletFile).WriteCryptedMalleableKey(keyView, vchCryptedSecretH, mapMalleableKeyMetadata[keyView]);\n+            return CWalletDB(strWalletFile).WriteCryptedMalleableKey(keyView, vchCryptedSecretH, mapKeyMetadata[addr]);\n     }\n \n     return true;\n@@ -138,10 +139,11 @@ bool CWallet::AddCryptedKey(const CPubKey &vchPubKey, const vector<unsigned char\n         return true;\n     {\n         LOCK(cs_wallet);\n+        CBitcoinAddress addr(vchPubKey.GetID());\n         if (pwalletdbEncryption)\n-            return pwalletdbEncryption->WriteCryptedKey(vchPubKey, vchCryptedSecret, mapKeyMetadata[vchPubKey.GetID()]);\n+            return pwalletdbEncryption->WriteCryptedKey(vchPubKey, vchCryptedSecret, mapKeyMetadata[addr]);\n         else\n-            return CWalletDB(strWalletFile).WriteCryptedKey(vchPubKey, vchCryptedSecret, mapKeyMetadata[vchPubKey.GetID()]);\n+            return CWalletDB(strWalletFile).WriteCryptedKey(vchPubKey, vchCryptedSecret, mapKeyMetadata[addr]);\n     }\n     return false;\n }\n@@ -151,16 +153,16 @@ bool CWallet::LoadKeyMetadata(const CPubKey &pubkey, const CKeyMetadata &meta)\n     if (meta.nCreateTime && (!nTimeFirstKey || meta.nCreateTime < nTimeFirstKey))\n         nTimeFirstKey = meta.nCreateTime;\n \n-    mapKeyMetadata[pubkey.GetID()] = meta;\n+    mapKeyMetadata[CBitcoinAddress(pubkey.GetID())] = meta;\n     return true;\n }\n \n-bool CWallet::LoadMalleableKeyMetadata(const CMalleableKeyView &keyView, const CKeyMetadata &metadata)\n+bool CWallet::LoadKeyMetadata(const CMalleableKeyView &keyView, const CKeyMetadata &metadata)\n {\n     if (metadata.nCreateTime && (!nTimeFirstKey || metadata.nCreateTime < nTimeFirstKey))\n         nTimeFirstKey = metadata.nCreateTime;\n \n-    mapMalleableKeyMetadata[keyView] = metadata;\n+    mapKeyMetadata[CBitcoinAddress(keyView.GetMalleablePubKey())] = metadata;\n     return true;\n }\n \n@@ -476,7 +478,7 @@ bool CWallet::DecryptWallet(const SecureString& strWalletPassphrase)\n                 CKey key;\n                 key.SetSecret((*mi).second.first, (*mi).second.second);\n                 pwalletdbDecryption->EraseCryptedKey(key.GetPubKey());\n-                pwalletdbDecryption->WriteKey(key.GetPubKey(), key.GetPrivKey(), mapKeyMetadata[(*mi).first]);\n+                pwalletdbDecryption->WriteKey(key.GetPubKey(), key.GetPrivKey(), mapKeyMetadata[CBitcoinAddress(mi->first)]);\n                 mi++;\n             }\n \n@@ -486,7 +488,7 @@ bool CWallet::DecryptWallet(const SecureString& strWalletPassphrase)\n                 const CSecret &vchSecretH = mi2->second;\n                 const CMalleableKeyView &keyView = mi2->first;\n                 pwalletdbDecryption->EraseCryptedMalleableKey(keyView);\n-                pwalletdbDecryption->WriteMalleableKey(keyView, vchSecretH, mapMalleableKeyMetadata[keyView]);\n+                pwalletdbDecryption->WriteMalleableKey(keyView, vchSecretH, mapKeyMetadata[CBitcoinAddress(keyView.GetMalleablePubKey())]);\n                 mi2++;\n             }\n \n@@ -867,8 +869,8 @@ int CWalletTx::GetRequestCount() const\n     return nRequests;\n }\n \n-void CWalletTx::GetAmounts(int64_t& nGeneratedImmature, int64_t& nGeneratedMature, list<pair<CTxDestination, int64_t> >& listReceived,\n-                           list<pair<CTxDestination, int64_t> >& listSent, int64_t& nFee, string& strSentAccount, const isminefilter& filter) const\n+void CWalletTx::GetAmounts(int64_t& nGeneratedImmature, int64_t& nGeneratedMature, list<pair<CBitcoinAddress, int64_t> >& listReceived,\n+                           list<pair<CBitcoinAddress, int64_t> >& listSent, int64_t& nFee, string& strSentAccount, const isminefilter& filter) const\n {\n     nGeneratedImmature = nGeneratedMature = nFee = 0;\n     listReceived.clear();\n@@ -909,12 +911,12 @@ void CWalletTx::GetAmounts(int64_t& nGeneratedImmature, int64_t& nGeneratedMatur\n             continue;\n \n         // In either case, we need to get the destination address\n-        CTxDestination address;\n-        if (!ExtractDestination(txout.scriptPubKey, address))\n+        CBitcoinAddress address;\n+        if (!ExtractAddress(*pwallet, txout.scriptPubKey, address))\n         {\n             printf(\"CWalletTx::GetAmounts: Unknown transaction type found, txid %s\\n\",\n                    this->GetHash().ToString().c_str());\n-            address = CNoDestination();\n+            address = CBitcoinAddress();\n         }\n \n         // If we are debited by the transaction, add the output as a \"sent\" entry\n@@ -936,25 +938,25 @@ void CWalletTx::GetAccountAmounts(const string& strAccount, int64_t& nGenerated,\n     int64_t allGeneratedImmature, allGeneratedMature, allFee;\n     allGeneratedImmature = allGeneratedMature = allFee = 0;\n     string strSentAccount;\n-    list<pair<CTxDestination, int64_t> > listReceived;\n-    list<pair<CTxDestination, int64_t> > listSent;\n+    list<pair<CBitcoinAddress, int64_t> > listReceived;\n+    list<pair<CBitcoinAddress, int64_t> > listSent;\n     GetAmounts(allGeneratedImmature, allGeneratedMature, listReceived, listSent, allFee, strSentAccount, filter);\n \n     if (strAccount == \"\")\n         nGenerated = allGeneratedMature;\n     if (strAccount == strSentAccount)\n     {\n-        BOOST_FOREACH(const PAIRTYPE(CTxDestination,int64_t)& s, listSent)\n+        BOOST_FOREACH(const PAIRTYPE(CBitcoinAddress,int64_t)& s, listSent)\n             nSent += s.second;\n         nFee = allFee;\n     }\n     {\n         LOCK(pwallet->cs_wallet);\n-        BOOST_FOREACH(const PAIRTYPE(CTxDestination,int64_t)& r, listReceived)\n+        BOOST_FOREACH(const PAIRTYPE(CBitcoinAddress,int64_t)& r, listReceived)\n         {\n             if (pwallet->mapAddressBook.count(r.first))\n             {\n-                map<CTxDestination, string>::const_iterator mi = pwallet->mapAddressBook.find(r.first);\n+                map<CBitcoinAddress, string>::const_iterator mi = pwallet->mapAddressBook.find(r.first);\n                 if (mi != pwallet->mapAddressBook.end() && (*mi).second == strAccount)\n                     nReceived += r.second;\n             }\n@@ -2234,23 +2236,23 @@ DBErrors CWallet::ZapWalletTx()\n     return DB_LOAD_OK;\n }\n \n-bool CWallet::SetAddressBookName(const CTxDestination& address, const string& strName)\n+bool CWallet::SetAddressBookName(const CBitcoinAddress& address, const string& strName)\n {\n-    std::map<CTxDestination, std::string>::iterator mi = mapAddressBook.find(address);\n+    std::map<CBitcoinAddress, string>::iterator mi = mapAddressBook.find(address);\n     mapAddressBook[address] = strName;\n     NotifyAddressBookChanged(this, address, strName, ::IsMine(*this, address) != MINE_NO, (mi == mapAddressBook.end()) ? CT_NEW : CT_UPDATED);\n     if (!fFileBacked)\n         return false;\n-    return CWalletDB(strWalletFile).WriteName(CBitcoinAddress(address).ToString(), strName);\n+    return CWalletDB(strWalletFile).WriteName(address.ToString(), strName);\n }\n \n-bool CWallet::DelAddressBookName(const CTxDestination& address)\n+bool CWallet::DelAddressBookName(const CBitcoinAddress& address)\n {\n     mapAddressBook.erase(address);\n     NotifyAddressBookChanged(this, address, \"\", ::IsMine(*this, address) != MINE_NO, CT_DELETED);\n     if (!fFileBacked)\n         return false;\n-    return CWalletDB(strWalletFile).EraseName(CBitcoinAddress(address).ToString());\n+    return CWalletDB(strWalletFile).EraseName(address.ToString());\n }\n \n \n@@ -2470,9 +2472,9 @@ int64_t CWallet::GetOldestKeyPoolTime()\n     return keypool.nTime;\n }\n \n-std::map<CTxDestination, int64_t> CWallet::GetAddressBalances()\n+std::map<CBitcoinAddress, int64_t> CWallet::GetAddressBalances()\n {\n-    map<CTxDestination, int64_t> balances;\n+    map<CBitcoinAddress, int64_t> balances;\n \n     {\n         LOCK(cs_wallet);\n@@ -2492,10 +2494,10 @@ std::map<CTxDestination, int64_t> CWallet::GetAddressBalances()\n \n             for (unsigned int i = 0; i < pcoin->vout.size(); i++)\n             {\n-                CTxDestination addr;\n+                CBitcoinAddress addr;\n                 if (!IsMine(pcoin->vout[i]))\n                     continue;\n-                if(!ExtractDestination(pcoin->vout[i].scriptPubKey, addr))\n+                if(!ExtractAddress(*this, pcoin->vout[i].scriptPubKey, addr))\n                     continue;\n \n                 int64_t n = pcoin->IsSpent(i) ? 0 : pcoin->vout[i].nValue;\n@@ -2510,10 +2512,10 @@ std::map<CTxDestination, int64_t> CWallet::GetAddressBalances()\n     return balances;\n }\n \n-set< set<CTxDestination> > CWallet::GetAddressGroupings()\n+set< set<CBitcoinAddress> > CWallet::GetAddressGroupings()\n {\n-    set< set<CTxDestination> > groupings;\n-    set<CTxDestination> grouping;\n+    set< set<CBitcoinAddress> > groupings;\n+    set<CBitcoinAddress> grouping;\n \n     BOOST_FOREACH(PAIRTYPE(uint256, CWalletTx) walletEntry, mapWallet)\n     {\n@@ -2524,8 +2526,8 @@ set< set<CTxDestination> > CWallet::GetAddressGroupings()\n             // group all input addresses with each other\n             BOOST_FOREACH(CTxIn txin, pcoin->vin)\n             {\n-                CTxDestination address;\n-                if(!ExtractDestination(mapWallet[txin.prevout.hash].vout[txin.prevout.n].scriptPubKey, address))\n+                CBitcoinAddress address;\n+                if(!ExtractAddress(*this, mapWallet[txin.prevout.hash].vout[txin.prevout.n].scriptPubKey, address))\n                     continue;\n                 grouping.insert(address);\n             }\n@@ -2535,8 +2537,8 @@ set< set<CTxDestination> > CWallet::GetAddressGroupings()\n                 if (IsChange(txout))\n                 {\n                     CWalletTx tx = mapWallet[pcoin->vin[0].prevout.hash];\n-                    CTxDestination txoutAddr;\n-                    if(!ExtractDestination(txout.scriptPubKey, txoutAddr))\n+                    CBitcoinAddress txoutAddr;\n+                    if(!ExtractAddress(*this, txout.scriptPubKey, txoutAddr))\n                         continue;\n                     grouping.insert(txoutAddr);\n                 }\n@@ -2548,29 +2550,29 @@ set< set<CTxDestination> > CWallet::GetAddressGroupings()\n         for (unsigned int i = 0; i < pcoin->vout.size(); i++)\n             if (IsMine(pcoin->vout[i]))\n             {\n-                CTxDestination address;\n-                if(!ExtractDestination(pcoin->vout[i].scriptPubKey, address))\n+                CBitcoinAddress address;\n+                if(!ExtractAddress(*this, pcoin->vout[i].scriptPubKey, address))\n                     continue;\n                 grouping.insert(address);\n                 groupings.insert(grouping);\n                 grouping.clear();\n             }\n     }\n \n-    set< set<CTxDestination>* > uniqueGroupings; // a set of pointers to groups of addresses\n-    map< CTxDestination, set<CTxDestination>* > setmap;  // map addresses to the unique group containing it\n-    BOOST_FOREACH(set<CTxDestination> grouping, groupings)\n+    set< set<CBitcoinAddress>* > uniqueGroupings; // a set of pointers to groups of addresses\n+    map< CBitcoinAddress, set<CBitcoinAddress>* > setmap;  // map addresses to the unique group containing it\n+    BOOST_FOREACH(set<CBitcoinAddress> grouping, groupings)\n     {\n         // make a set of all the groups hit by this new group\n-        set< set<CTxDestination>* > hits;\n-        map< CTxDestination, set<CTxDestination>* >::iterator it;\n-        BOOST_FOREACH(CTxDestination address, grouping)\n+        set< set<CBitcoinAddress>* > hits;\n+        map< CBitcoinAddress, set<CBitcoinAddress>* >::iterator it;\n+        BOOST_FOREACH(CBitcoinAddress address, grouping)\n             if ((it = setmap.find(address)) != setmap.end())\n                 hits.insert((*it).second);\n \n         // merge all hit groups into a new single group and delete old groups\n-        set<CTxDestination>* merged = new set<CTxDestination>(grouping);\n-        BOOST_FOREACH(set<CTxDestination>* hit, hits)\n+        set<CBitcoinAddress>* merged = new set<CBitcoinAddress>(grouping);\n+        BOOST_FOREACH(set<CBitcoinAddress>* hit, hits)\n         {\n             merged->insert(hit->begin(), hit->end());\n             uniqueGroupings.erase(hit);\n@@ -2579,12 +2581,12 @@ set< set<CTxDestination> > CWallet::GetAddressGroupings()\n         uniqueGroupings.insert(merged);\n \n         // update setmap\n-        BOOST_FOREACH(CTxDestination element, *merged)\n+        BOOST_FOREACH(CBitcoinAddress element, *merged)\n             setmap[element] = merged;\n     }\n \n-    set< set<CTxDestination> > ret;\n-    BOOST_FOREACH(set<CTxDestination>* uniqueGrouping, uniqueGroupings)\n+    set< set<CBitcoinAddress> > ret;\n+    BOOST_FOREACH(set<CBitcoinAddress>* uniqueGrouping, uniqueGroupings)\n     {\n         ret.insert(*uniqueGrouping);\n         delete uniqueGrouping;\n@@ -2747,14 +2749,8 @@ void CWallet::GetAddresses(std::map<CBitcoinAddress, int64_t> &mapAddresses) con\n     mapAddresses.clear();\n \n     // get birth times for keys with metadata\n-    for (std::map<CMalleableKeyView, CKeyMetadata>::const_iterator it = mapMalleableKeyMetadata.begin(); it != mapMalleableKeyMetadata.end(); it++) {\n-        CBitcoinAddress addr(it->first.GetMalleablePubKey());\n-        mapAddresses[addr] = it->second.nCreateTime ? it->second.nCreateTime : 0;\n-    }\n-\n-    for (std::map<CKeyID, CKeyMetadata>::const_iterator it = mapKeyMetadata.begin(); it != mapKeyMetadata.end(); it++) {\n-        CBitcoinAddress addr(it->first);\n-        mapAddresses[addr] = it->second.nCreateTime ? it->second.nCreateTime : 0;\n+    for (std::map<CBitcoinAddress, CKeyMetadata>::const_iterator it = mapKeyMetadata.begin(); it != mapKeyMetadata.end(); it++) {\n+        mapAddresses[it->first] = it->second.nCreateTime ? it->second.nCreateTime : 0;\n     }\n \n     for (std::map<uint256, CWalletTx>::const_iterator it = mapWallet.begin(); it != mapWallet.end(); it++) {\n@@ -2767,7 +2763,7 @@ void CWallet::GetAddresses(std::map<CBitcoinAddress, int64_t> &mapAddresses) con\n             const CTxOut &out = (*it2);\n             // iterate over all their outputs\n             CBitcoinAddress addressRet;\n-            if (const_cast<CWallet*>(this)->ExtractAddress(out.scriptPubKey, addressRet)) {\n+            if (ExtractAddress(*this, out.scriptPubKey, addressRet)) {\n                 if (mapAddresses.find(addressRet) != mapAddresses.end() && (mapAddresses[addressRet] == 0 || mapAddresses[addressRet] > wtx.nTime))\n                     mapAddresses[addressRet] = wtx.nTime;\n             }\n@@ -2805,38 +2801,3 @@ void CWallet::ClearOrphans()\n         EraseFromWallet(*it);\n }\n \n-bool CWallet::ExtractAddress(const CScript& scriptPubKey, CBitcoinAddress& addressRet)\n-{\n-    vector<valtype> vSolutions;\n-    txnouttype whichType;\n-    if (!Solver(scriptPubKey, whichType, vSolutions))\n-        return false;\n-\n-    if (whichType == TX_PUBKEY)\n-    {\n-        addressRet = CBitcoinAddress(CPubKey(vSolutions[0]).GetID());\n-        return true;\n-    }\n-    if (whichType == TX_PUBKEY_DROP)\n-    {\n-        // Pay-to-Pubkey-R\n-        CMalleableKeyView view;\n-        if (!CheckOwnership(CPubKey(vSolutions[0]), CPubKey(vSolutions[1]), view))\n-            return false;\n-\n-        addressRet = CBitcoinAddress(view.GetMalleablePubKey());\n-        return true;\n-    }\n-    else if (whichType == TX_PUBKEYHASH)\n-    {\n-        addressRet = CBitcoinAddress(CKeyID(uint160(vSolutions[0])));\n-        return true;\n-    }\n-    else if (whichType == TX_SCRIPTHASH)\n-    {\n-        addressRet = CBitcoinAddress(CScriptID(uint160(vSolutions[0])));\n-        return true;\n-    }\n-    // Multisig txns have more than one address...\n-    return false;\n-}"
      },
      {
        "sha": "b3d7d33e5d919f980b8cb2454836bf0111d697c9",
        "filename": "src/wallet.h",
        "status": "modified",
        "additions": 13,
        "deletions": 11,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d0533f11f151a98336532365bffe64ecb6962197/src/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d0533f11f151a98336532365bffe64ecb6962197/src/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.h?ref=d0533f11f151a98336532365bffe64ecb6962197",
        "patch": "@@ -96,8 +96,12 @@ class CWallet : public CCryptoKeyStore\n     std::string strWalletFile;\n \n     std::set<int64_t> setKeyPool;\n+    /*\n     std::map<CKeyID, CKeyMetadata> mapKeyMetadata;\n     std::map<CMalleableKeyView, CKeyMetadata> mapMalleableKeyMetadata;\n+    */\n+\n+    std::map<CBitcoinAddress, CKeyMetadata> mapKeyMetadata;\n \n     typedef std::map<unsigned int, CMasterKey> MasterKeyMap;\n     MasterKeyMap mapMasterKeys;\n@@ -133,7 +137,7 @@ class CWallet : public CCryptoKeyStore\n     int64_t nOrderPosNext;\n     std::map<uint256, int> mapRequestCount;\n \n-    std::map<CTxDestination, std::string> mapAddressBook;\n+    std::map<CBitcoinAddress, std::string> mapAddressBook;\n \n     CPubKey vchDefaultKey;\n     int64_t nTimeFirstKey;\n@@ -159,7 +163,7 @@ class CWallet : public CCryptoKeyStore\n     bool LoadKey(const CKey& key) { return CCryptoKeyStore::AddKey(key); }\n     // Load metadata (used by LoadWallet)\n     bool LoadKeyMetadata(const CPubKey &pubkey, const CKeyMetadata &metadata);\n-    bool LoadMalleableKeyMetadata(const CMalleableKeyView &keyView, const CKeyMetadata &metadata);\n+    bool LoadKeyMetadata(const CMalleableKeyView &keyView, const CKeyMetadata &metadata);\n \n     // Load malleable key without saving it to disk (used by LoadWallet)\n     bool LoadMalleableKey(const CMalleableKeyView &keyView, const CSecret &vchSecretH) { return CCryptoKeyStore::AddMalleableKey(keyView, vchSecretH); }\n@@ -243,8 +247,8 @@ class CWallet : public CCryptoKeyStore\n     int64_t GetOldestKeyPoolTime();\n     void GetAllReserveKeys(std::set<CKeyID>& setAddress) const;\n \n-    std::set< std::set<CTxDestination> > GetAddressGroupings();\n-    std::map<CTxDestination, int64_t> GetAddressBalances();\n+    std::set< std::set<CBitcoinAddress> > GetAddressGroupings();\n+    std::map<CBitcoinAddress, int64_t> GetAddressBalances();\n \n     isminetype IsMine(const CTxIn& txin) const;\n     int64_t GetDebit(const CTxIn& txin, const isminefilter& filter) const;\n@@ -315,9 +319,9 @@ class CWallet : public CCryptoKeyStore\n \n     DBErrors ZapWalletTx();\n \n-    bool SetAddressBookName(const CTxDestination& address, const std::string& strName);\n+    bool SetAddressBookName(const CBitcoinAddress& address, const std::string& strName);\n \n-    bool DelAddressBookName(const CTxDestination& address);\n+    bool DelAddressBookName(const CBitcoinAddress& address);\n \n     void UpdatedTransaction(const uint256 &hashTx);\n \n@@ -340,8 +344,6 @@ class CWallet : public CCryptoKeyStore\n \n     bool GetTransaction(const uint256 &hashTx, CWalletTx& wtx);\n \n-    bool ExtractAddress(const CScript& scriptPubKey, CBitcoinAddress& addressRet);\n-\n     bool SetDefaultKey(const CPubKey &vchPubKey);\n \n     // signify that a particular wallet feature is now used. this may change nWalletVersion and nWalletMaxVersion if those are lower\n@@ -359,7 +361,7 @@ class CWallet : public CCryptoKeyStore\n     /** Address book entry changed.\n      * @note called with lock cs_wallet held.\n      */\n-    boost::signals2::signal<void (CWallet *wallet, const CTxDestination &address, const std::string &label, bool isMine, ChangeType status)> NotifyAddressBookChanged;\n+    boost::signals2::signal<void (CWallet *wallet, const CBitcoinAddress &address, const std::string &label, bool isMine, ChangeType status)> NotifyAddressBookChanged;\n \n     /** Wallet transaction added, removed or updated.\n      * @note called with lock cs_wallet held.\n@@ -797,8 +799,8 @@ class CWalletTx : public CMerkleTx\n         return nChangeCached;\n     }\n \n-    void GetAmounts(int64_t& nGeneratedImmature, int64_t& nGeneratedMature, std::list<std::pair<CTxDestination, int64_t> >& listReceived,\n-                    std::list<std::pair<CTxDestination, int64_t> >& listSent, int64_t& nFee, std::string& strSentAccount, const isminefilter& filter) const;\n+    void GetAmounts(int64_t& nGeneratedImmature, int64_t& nGeneratedMature, std::list<std::pair<CBitcoinAddress, int64_t> >& listReceived,\n+                    std::list<std::pair<CBitcoinAddress, int64_t> >& listSent, int64_t& nFee, std::string& strSentAccount, const isminefilter& filter) const;\n \n     void GetAccountAmounts(const std::string& strAccount, int64_t& nGenerated, int64_t& nReceived,\n                            int64_t& nSent, int64_t& nFee, const isminefilter& filter) const;"
      },
      {
        "sha": "e44885da6816da508c9ee5d16e47d8f3d519a287",
        "filename": "src/walletdb.cpp",
        "status": "modified",
        "additions": 25,
        "deletions": 16,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d0533f11f151a98336532365bffe64ecb6962197/src/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d0533f11f151a98336532365bffe64ecb6962197/src/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/walletdb.cpp?ref=d0533f11f151a98336532365bffe64ecb6962197",
        "patch": "@@ -225,7 +225,7 @@ ReadKeyValue(CWallet* pwallet, CDataStream& ssKey, CDataStream& ssValue,\n         {\n             string strAddress;\n             ssKey >> strAddress;\n-            ssValue >> pwallet->mapAddressBook[CBitcoinAddress(strAddress).Get()];\n+            ssValue >> pwallet->mapAddressBook[CBitcoinAddress(strAddress)];\n         }\n         else if (strType == \"tx\")\n         {\n@@ -428,7 +428,7 @@ ReadKeyValue(CWallet* pwallet, CDataStream& ssKey, CDataStream& ssValue,\n             ssValue >> keyMeta;\n             wss.nKeyMeta++;\n \n-            pwallet->LoadMalleableKeyMetadata(keyView, keyMeta);\n+            pwallet->LoadKeyMetadata(keyView, keyMeta);\n         }\n         else if (strType == \"keymeta\")\n         {\n@@ -460,9 +460,9 @@ ReadKeyValue(CWallet* pwallet, CDataStream& ssKey, CDataStream& ssValue,\n             // If no metadata exists yet, create a default with the pool key's\n             // creation time. Note that this may be overwritten by actually\n             // stored metadata for that key later, which is fine.\n-            CKeyID keyid = keypool.vchPubKey.GetID();\n-            if (pwallet->mapKeyMetadata.count(keyid) == 0)\n-                pwallet->mapKeyMetadata[keyid] = CKeyMetadata(keypool.nTime);\n+            CBitcoinAddress addr = CBitcoinAddress(keypool.vchPubKey.GetID());\n+            if (pwallet->mapKeyMetadata.count(addr) == 0)\n+                pwallet->mapKeyMetadata[addr] = CKeyMetadata(keypool.nTime);\n \n         }\n         else if (strType == \"version\")\n@@ -827,7 +827,11 @@ bool DumpWallet(CWallet* pwallet, const string& strDest)\n                 continue;\n             CMalleableKey mKey;\n             pwallet->GetMalleableKey(keyView, mKey);\n-            file << strprintf(\"%s %s # view=%s addr=%s\\n\", mKey.ToString().c_str(), strTime.c_str(), keyView.ToString().c_str(), strAddr.c_str());\n+            file << mKey.ToString();\n+            if (pwallet->mapAddressBook.count(addr))\n+                file << strprintf(\" %s label=%s # view=%s addr=%s\\n\", strTime.c_str(), EncodeDumpString(pwallet->mapAddressBook[addr]).c_str(), keyView.ToString().c_str(), strAddr.c_str());\n+            else\n+                file << strprintf(\" %s # view=%s addr=%s\\n\", strTime.c_str(), keyView.ToString().c_str(), strAddr.c_str());\n         }\n         else {\n             // Pubkey hash address\n@@ -839,8 +843,8 @@ bool DumpWallet(CWallet* pwallet, const string& strDest)\n                 continue;\n             CSecret secret = key.GetSecret(IsCompressed);\n             file << CBitcoinSecret(secret, IsCompressed).ToString();\n-            if (pwallet->mapAddressBook.count(keyid))\n-                file << strprintf(\" %s label=%s # addr=%s\\n\", strTime.c_str(), EncodeDumpString(pwallet->mapAddressBook[keyid]).c_str(), strAddr.c_str());\n+            if (pwallet->mapAddressBook.count(addr))\n+                file << strprintf(\" %s label=%s # addr=%s\\n\", strTime.c_str(), EncodeDumpString(pwallet->mapAddressBook[addr]).c_str(), strAddr.c_str());\n             else if (setKeyPool.count(keyid))\n                 file << strprintf(\" %s reserve=1 # addr=%s\\n\", strTime.c_str(), strAddr.c_str());\n             else\n@@ -899,6 +903,7 @@ bool ImportWallet(CWallet *pwallet, const string& strLocation)\n            }\n        }\n \n+       CBitcoinAddress addr;\n        CBitcoinSecret vchSecret;\n        if (vchSecret.SetString(vstr[0])) {\n            // Simple private key\n@@ -908,39 +913,43 @@ bool ImportWallet(CWallet *pwallet, const string& strLocation)\n            CSecret secret = vchSecret.GetSecret(fCompressed);\n            key.SetSecret(secret, fCompressed);\n            CKeyID keyid = key.GetPubKey().GetID();\n+           addr = CBitcoinAddress(keyid);\n \n            if (pwallet->HaveKey(keyid)) {\n-               printf(\"Skipping import of %s (key already present)\\n\", CBitcoinAddress(keyid).ToString().c_str());\n+               printf(\"Skipping import of %s (key already present)\\n\", addr.ToString().c_str());\n                continue;\n            }\n \n-           printf(\"Importing %s...\\n\", CBitcoinAddress(keyid).ToString().c_str());\n+           printf(\"Importing %s...\\n\", addr.ToString().c_str());\n            if (!pwallet->AddKey(key)) {\n                fGood = false;\n                continue;\n            }\n-           pwallet->mapKeyMetadata[keyid].nCreateTime = nTime;\n-           if (fLabel)\n-               pwallet->SetAddressBookName(keyid, strLabel);\n        } else {\n            // A pair of private keys\n \n            CMalleableKey mKey;\n            if (!mKey.SetString(vstr[0]))\n                continue;\n            CMalleablePubKey mPubKey = mKey.GetMalleablePubKey();\n+           addr = CBitcoinAddress(mPubKey);\n+\n            if (pwallet->CheckOwnership(mPubKey)) {\n-               printf(\"Skipping import of %s (key already present)\\n\", CBitcoinAddress(mPubKey).ToString().c_str());\n+               printf(\"Skipping import of %s (key already present)\\n\", addr.ToString().c_str());\n                continue;\n            }\n \n-           printf(\"Importing %s...\\n\", CBitcoinAddress(mPubKey).ToString().c_str());\n+           printf(\"Importing %s...\\n\", addr.ToString().c_str());\n            if (!pwallet->AddMalleableKey(mKey)) {\n                fGood = false;\n                continue;\n            }\n-           pwallet->mapMalleableKeyMetadata[CMalleableKeyView(mKey)].nCreateTime = nTime;\n        }\n+\n+       pwallet->mapKeyMetadata[addr].nCreateTime = nTime;\n+       if (fLabel)\n+           pwallet->SetAddressBookName(addr, strLabel);\n+\n        nTimeBegin = std::min(nTimeBegin, nTime);\n    }\n    file.close();"
      }
    ]
  },
  {
    "sha": "de495eadd003c7907e54fb6d6ad26395fb130ee5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkZTQ5NWVhZGQwMDNjNzkwN2U1NGZiNmQ2YWQyNjM5NWZiMTMwZWU1",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-11T20:07:21Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-11T20:07:21Z"
      },
      "message": "Fix daemon compilation isue.",
      "tree": {
        "sha": "d347f5ead0649fc4b4d8326f2cb2aaf684484f76",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d347f5ead0649fc4b4d8326f2cb2aaf684484f76"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/de495eadd003c7907e54fb6d6ad26395fb130ee5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/de495eadd003c7907e54fb6d6ad26395fb130ee5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/de495eadd003c7907e54fb6d6ad26395fb130ee5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/de495eadd003c7907e54fb6d6ad26395fb130ee5/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d0533f11f151a98336532365bffe64ecb6962197",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d0533f11f151a98336532365bffe64ecb6962197",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d0533f11f151a98336532365bffe64ecb6962197"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 9,
      "deletions": 2
    },
    "files": [
      {
        "sha": "417b342042dc62b934b50a1bb702dfc2619f2c67",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de495eadd003c7907e54fb6d6ad26395fb130ee5/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de495eadd003c7907e54fb6d6ad26395fb130ee5/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=de495eadd003c7907e54fb6d6ad26395fb130ee5",
        "patch": "@@ -900,7 +900,7 @@ bool AppInit2()\n         if (!pwalletMain->GetKeyFromPool(newDefaultKey, false))\n             strErrors << _(\"Cannot initialize keypool\") << \"\\n\";\n         pwalletMain->SetDefaultKey(newDefaultKey);\n-        if (!pwalletMain->SetAddressBookName(CBitcoinAddress(pwalletMain->vchDefaultKey.GetID()), \"\"))\n+        if (!pwalletMain->SetAddressBookName(pwalletMain->vchDefaultKey.GetID(), \"\"))\n             strErrors << _(\"Cannot write default address\") << \"\\n\";\n     }\n "
      },
      {
        "sha": "0d0946e0c0723030a2959f5704b16714d65e9f33",
        "filename": "src/rpcwallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de495eadd003c7907e54fb6d6ad26395fb130ee5/src/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de495eadd003c7907e54fb6d6ad26395fb130ee5/src/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.cpp?ref=de495eadd003c7907e54fb6d6ad26395fb130ee5",
        "patch": "@@ -173,7 +173,7 @@ CBitcoinAddress GetAccountAddress(string strAccount, bool bForceNew=false)\n         if (!pwalletMain->GetKeyFromPool(account.vchPubKey, false))\n             throw JSONRPCError(RPC_WALLET_KEYPOOL_RAN_OUT, \"Error: Keypool ran out, please call keypoolrefill first\");\n \n-        pwalletMain->SetAddressBookName(CBitcoinAddress(account.vchPubKey.GetID()), strAccount);\n+        pwalletMain->SetAddressBookName(account.vchPubKey.GetID(), strAccount);\n         walletdb.WriteAccount(strAccount, account);\n     }\n "
      },
      {
        "sha": "b484ab6ec93f37b60a099182fdc7517ed7e967c4",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de495eadd003c7907e54fb6d6ad26395fb130ee5/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de495eadd003c7907e54fb6d6ad26395fb130ee5/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=de495eadd003c7907e54fb6d6ad26395fb130ee5",
        "patch": "@@ -2236,6 +2236,11 @@ DBErrors CWallet::ZapWalletTx()\n     return DB_LOAD_OK;\n }\n \n+bool CWallet::SetAddressBookName(const CTxDestination& address, const string& strName)\n+{\n+    return SetAddressBookName(CBitcoinAddress(address), strName);\n+}\n+\n bool CWallet::SetAddressBookName(const CBitcoinAddress& address, const string& strName)\n {\n     std::map<CBitcoinAddress, string>::iterator mi = mapAddressBook.find(address);"
      },
      {
        "sha": "2dffd04f847295dfc93542dd09c1f668eeff72c9",
        "filename": "src/wallet.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de495eadd003c7907e54fb6d6ad26395fb130ee5/src/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de495eadd003c7907e54fb6d6ad26395fb130ee5/src/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.h?ref=de495eadd003c7907e54fb6d6ad26395fb130ee5",
        "patch": "@@ -319,6 +319,8 @@ class CWallet : public CCryptoKeyStore\n \n     DBErrors ZapWalletTx();\n \n+    bool SetAddressBookName(const CTxDestination& address, const std::string& strName);\n+\n     bool SetAddressBookName(const CBitcoinAddress& address, const std::string& strName);\n \n     bool DelAddressBookName(const CBitcoinAddress& address);"
      }
    ]
  },
  {
    "sha": "21a158ae527bdbcac4c35551bbd8e2adee363158",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyMWExNThhZTUyN2JkYmNhYzRjMzU1NTFiYmQ4ZTJhZGVlMzYzMTU4",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-11T20:27:03Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-11T20:27:03Z"
      },
      "message": "Automatically add empty label for pubkey pair addresses.",
      "tree": {
        "sha": "e611acee07d6e06629c2045115e025c8b9dc8d1f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e611acee07d6e06629c2045115e025c8b9dc8d1f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/21a158ae527bdbcac4c35551bbd8e2adee363158",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/21a158ae527bdbcac4c35551bbd8e2adee363158",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/21a158ae527bdbcac4c35551bbd8e2adee363158",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/21a158ae527bdbcac4c35551bbd8e2adee363158/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "de495eadd003c7907e54fb6d6ad26395fb130ee5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/de495eadd003c7907e54fb6d6ad26395fb130ee5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/de495eadd003c7907e54fb6d6ad26395fb130ee5"
      }
    ],
    "stats": {
      "total": 21,
      "additions": 19,
      "deletions": 2
    },
    "files": [
      {
        "sha": "8fec3c6026b28351bb530aaa88b55d7c97af0515",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/21a158ae527bdbcac4c35551bbd8e2adee363158/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/21a158ae527bdbcac4c35551bbd8e2adee363158/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=21a158ae527bdbcac4c35551bbd8e2adee363158",
        "patch": "@@ -902,6 +902,15 @@ bool AppInit2()\n         pwalletMain->SetDefaultKey(newDefaultKey);\n         if (!pwalletMain->SetAddressBookName(pwalletMain->vchDefaultKey.GetID(), \"\"))\n             strErrors << _(\"Cannot write default address\") << \"\\n\";\n+\n+        if (fTestNet || GetTime() < SMALLDATA_SWITCH_TIME) {\n+            CMalleableKeyView keyView = pwalletMain->GenerateNewMalleableKey();\n+            CMalleableKey mKey;\n+            if (!pwalletMain->GetMalleableKey(keyView, mKey))\n+                strErrors << _(\"Unable to generate new malleable key\");\n+            if (!pwalletMain->SetAddressBookName(CBitcoinAddress(keyView.GetMalleablePubKey()), \"\"))\n+                strErrors << _(\"Cannot write default address\") << \"\\n\";\n+        }\n     }\n \n     printf(\"%s\", strErrors.str().c_str());"
      },
      {
        "sha": "8c3683617538449cd84ff3aed41469964f314490",
        "filename": "src/rpcwallet.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 2,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/21a158ae527bdbcac4c35551bbd8e2adee363158/src/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/21a158ae527bdbcac4c35551bbd8e2adee363158/src/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.cpp?ref=21a158ae527bdbcac4c35551bbd8e2adee363158",
        "patch": "@@ -1893,26 +1893,34 @@ Value makekeypair(const Array& params, bool fHelp)\n \n Value newmalleablekey(const Array& params, bool fHelp)\n {\n-    if (fHelp || params.size() > 0)\n+    if (fHelp || params.size() > 1)\n         throw runtime_error(\n             \"newmalleablekey\\n\"\n             \"Make a malleable public/private key pair.\\n\");\n \n     if (!(fDebug || fTestNet) && GetTime() < SMALLDATA_SWITCH_TIME)\n         throw runtime_error(\"This feature has been disabled for mainNet clients\");\n \n+    // Parse the account first so we don't generate a key if there's an error\n+    string strAccount;\n+    if (params.size() > 0)\n+        strAccount = AccountFromValue(params[0]);\n+\n     CMalleableKeyView keyView = pwalletMain->GenerateNewMalleableKey();\n \n     CMalleableKey mKey;\n     if (!pwalletMain->GetMalleableKey(keyView, mKey))\n         throw runtime_error(\"Unable to generate new malleable key\");\n \n     CMalleablePubKey mPubKey = mKey.GetMalleablePubKey();\n+    CBitcoinAddress address(mPubKey);\n+\n+    pwalletMain->SetAddressBookName(address, strAccount);\n \n     Object result;\n     result.push_back(Pair(\"PublicPair\", mPubKey.ToString()));\n     result.push_back(Pair(\"PublicBytes\", HexStr(mPubKey.Raw())));\n-    result.push_back(Pair(\"Address\", CBitcoinAddress(mPubKey).ToString()));\n+    result.push_back(Pair(\"Address\", address.ToString()));\n     result.push_back(Pair(\"KeyView\", keyView.ToString()));\n \n     return result;"
      }
    ]
  },
  {
    "sha": "8f8b8543b836c2ae67f24dc5e4b03dc27dde3cc3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4ZjhiODU0M2I4MzZjMmFlNjdmMjRkYzVlNGIwM2RjMjdkZGUzY2Mz",
    "commit": {
      "author": {
        "name": "svost",
        "email": "ya.nowa@yandex.ru",
        "date": "2016-03-12T14:27:27Z"
      },
      "committer": {
        "name": "svost",
        "email": "ya.nowa@yandex.ru",
        "date": "2016-03-12T14:27:27Z"
      },
      "message": "Update for 85088c5",
      "tree": {
        "sha": "4837e688f563e28fba5a44dba0de2d3f57aa4555",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4837e688f563e28fba5a44dba0de2d3f57aa4555"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8f8b8543b836c2ae67f24dc5e4b03dc27dde3cc3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8f8b8543b836c2ae67f24dc5e4b03dc27dde3cc3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8f8b8543b836c2ae67f24dc5e4b03dc27dde3cc3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8f8b8543b836c2ae67f24dc5e4b03dc27dde3cc3/comments",
    "author": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7e553ad006e403ed9fad17e9c50e65bd5d2dfa37",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7e553ad006e403ed9fad17e9c50e65bd5d2dfa37",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7e553ad006e403ed9fad17e9c50e65bd5d2dfa37"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 6,
      "deletions": 5
    },
    "files": [
      {
        "sha": "3f8eaf721b45123f68abfa822fe6d322a38da22f",
        "filename": "src/ecies.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8f8b8543b836c2ae67f24dc5e4b03dc27dde3cc3/src/ecies.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8f8b8543b836c2ae67f24dc5e4b03dc27dde3cc3/src/ecies.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/ecies.cpp?ref=8f8b8543b836c2ae67f24dc5e4b03dc27dde3cc3",
        "patch": "@@ -567,6 +567,7 @@ ies_ctx_t *create_context(EC_KEY *user_key)\n     }\n     catch (const std::bad_alloc& e) {\n       printf(\"Error: %s in %s:%d\\n\", e.what(), __FILE__, __LINE__);\n+// TODO: add checking to NULL where necessary\n       return NULL;\n     }\n-}\n+}\n\\ No newline at end of file"
      },
      {
        "sha": "2232324453b8e7dc8dc465dc9fab8cfe0d921eb0",
        "filename": "src/key.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8f8b8543b836c2ae67f24dc5e4b03dc27dde3cc3/src/key.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8f8b8543b836c2ae67f24dc5e4b03dc27dde3cc3/src/key.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.cpp?ref=8f8b8543b836c2ae67f24dc5e4b03dc27dde3cc3",
        "patch": "@@ -1202,7 +1202,7 @@ void CKey::EncryptData(const std::vector<unsigned char>& data, std::vector<unsig\n \n     cryptogram = ecies_encrypt(ctx, (unsigned char*)&data[0], data.size(), error);\n     if (cryptogram == NULL) {\n-        free(ctx);\n+        delete ctx;\n         ctx = NULL;\n         throw key_error(std::string(\"Error in encryption: %s\") + error);\n     }\n@@ -1211,7 +1211,7 @@ void CKey::EncryptData(const std::vector<unsigned char>& data, std::vector<unsig\n     unsigned char *key_data = cryptogram_key_data(cryptogram);\n     memcpy(&encrypted[0], key_data, encrypted.size());\n     cryptogram_free(cryptogram);\n-    free(ctx);\n+    delete ctx;\n }\n \n void CKey::DecryptData(const std::vector<unsigned char>& encrypted, std::vector<unsigned char>& data)\n@@ -1234,7 +1234,7 @@ void CKey::DecryptData(const std::vector<unsigned char>& encrypted, std::vector<\n \n     decrypted = ecies_decrypt(ctx, cryptogram, &length, error);\n     cryptogram_free(cryptogram);\n-    free(ctx);\n+    delete ctx;\n \n     if (decrypted == NULL) {\n         throw key_error(std::string(\"Error in decryption: %s\") + error);\n@@ -1243,4 +1243,4 @@ void CKey::DecryptData(const std::vector<unsigned char>& encrypted, std::vector<\n     data.resize(length);\n     memcpy(&data[0], decrypted, length);\n     free(decrypted);\n-}\n+}\n\\ No newline at end of file"
      }
    ]
  },
  {
    "sha": "61894db63556a8783fb78c576eb7320be6edfad0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2MTg5NGRiNjM1NTZhODc4M2ZiNzhjNTc2ZWI3MzIwYmU2ZWRmYWQw",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-12T20:13:03Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-12T20:15:02Z"
      },
      "message": "List of unconditionally banned blocks.\n\nUnlike with checkpoints, block height doesn't matter here.",
      "tree": {
        "sha": "48880c2196d07151e9a7c7f97eaf3b843193b23f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/48880c2196d07151e9a7c7f97eaf3b843193b23f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/61894db63556a8783fb78c576eb7320be6edfad0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/61894db63556a8783fb78c576eb7320be6edfad0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/61894db63556a8783fb78c576eb7320be6edfad0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/61894db63556a8783fb78c576eb7320be6edfad0/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "21a158ae527bdbcac4c35551bbd8e2adee363158",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/21a158ae527bdbcac4c35551bbd8e2adee363158",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/21a158ae527bdbcac4c35551bbd8e2adee363158"
      }
    ],
    "stats": {
      "total": 26,
      "additions": 26,
      "deletions": 0
    },
    "files": [
      {
        "sha": "095def362fd35af8f3b8686e20297d2d71f74af8",
        "filename": "src/checkpoints.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/61894db63556a8783fb78c576eb7320be6edfad0/src/checkpoints.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/61894db63556a8783fb78c576eb7320be6edfad0/src/checkpoints.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/checkpoints.cpp?ref=61894db63556a8783fb78c576eb7320be6edfad0",
        "patch": "@@ -4,6 +4,7 @@\n \n #include <boost/assign/list_of.hpp> // for 'map_list_of()'\n #include <boost/foreach.hpp>\n+#include <algorithm>\n \n #include \"checkpoints.h\"\n \n@@ -14,6 +15,7 @@\n namespace Checkpoints\n {\n     typedef std::map<int, std::pair<uint256, unsigned int> > MapCheckpoints;\n+    typedef std::list<uint256> ListBannedBlocks;\n \n     //\n     // What makes a good checkpoint block?\n@@ -32,6 +34,12 @@ namespace Checkpoints\n         ( 200000, std::make_pair(uint256(\"0x0000000000029f8bbf66e6ea6f3e5db55009404aae0fe395a53dd33142b2bff2\"), 1441127233) )\n         ( 221047, std::make_pair(uint256(\"0xa28aef712e7aa0c285bfe29351ca21ed416689139e3063ef770fc826a8b9e9da\"), 1449431646) )\n     ;\n+    \n+    static ListBannedBlocks listBanned =\n+        boost::assign::list_of\n+        // Invalid block #221047 with future timestamp of 2016/02/23 09:24:17 UTC\n+        ( uint256(\"0x46223e5432ceffe650d5729b4bb8479dcdf0ca1e534fa8e69382dc87b42ea94b\") )\n+    ;\n \n     // TestNet has no checkpoints\n     static MapCheckpoints mapCheckpointsTestnet =\n@@ -48,6 +56,14 @@ namespace Checkpoints\n         return hash == i->second.first;\n     }\n \n+    bool CheckBanned(const uint256 &nHash)\n+    {\n+        if (fTestNet) // Testnet has no banned blocks\n+            return true;\n+        ListBannedBlocks::const_iterator it = std::find(listBanned.begin(), listBanned.end(), nHash);\n+        return it == listBanned.end();\n+    }\n+\n     int GetTotalBlocksEstimate()\n     {\n         MapCheckpoints& checkpoints = (fTestNet ? mapCheckpointsTestnet : mapCheckpoints);"
      },
      {
        "sha": "0250618e47a04f55c11e6635b0b1d36071cb4c43",
        "filename": "src/checkpoints.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/61894db63556a8783fb78c576eb7320be6edfad0/src/checkpoints.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/61894db63556a8783fb78c576eb7320be6edfad0/src/checkpoints.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/checkpoints.h?ref=61894db63556a8783fb78c576eb7320be6edfad0",
        "patch": "@@ -40,6 +40,9 @@ namespace Checkpoints\n     // Returns true if block passes checkpoint checks\n     bool CheckHardened(int nHeight, const uint256& hash);\n \n+    // Returns true if block passes banlist checks\n+    bool CheckBanned(const uint256 &nHash);\n+\n     // Return conservative estimate of total number of blocks, 0 if unknown\n     int GetTotalBlocksEstimate();\n "
      },
      {
        "sha": "1a90e5172df83080463f1b5e6e847cef7a9db243",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/61894db63556a8783fb78c576eb7320be6edfad0/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/61894db63556a8783fb78c576eb7320be6edfad0/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=61894db63556a8783fb78c576eb7320be6edfad0",
        "patch": "@@ -2528,6 +2528,13 @@ bool ProcessBlock(CNode* pfrom, CBlock* pblock)\n     if (mapOrphanBlocks.count(hash))\n         return error(\"ProcessBlock() : already have block (orphan) %s\", hash.ToString().substr(0,20).c_str());\n \n+    // Check that block isn't listed as unconditionally banned.\n+    if (!Checkpoints::CheckBanned(hash)) {\n+        if (pfrom)\n+            pfrom->Misbehaving(100);\n+        return error(\"ProcessBlock() : block %s is rejected by hard-coded banlist\", hash.GetHex().substr(0,20).c_str());\n+    }\n+\n     // Check proof-of-stake\n     // Limited duplicity on stake: prevents block flood attack\n     // Duplicate stake allowed only when there is orphan child block"
      }
    ]
  },
  {
    "sha": "81b151b696a536ae3ac71a0e5d6b98369ce0ab7c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4MWIxNTFiNjk2YTUzNmFlM2FjNzFhMGU1ZDZiOTgzNjljZTBhYjdj",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-12T21:39:26Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-12T21:39:26Z"
      },
      "message": "Revert \"openssl: avoid config file load/race (see bitcoin d4b1d5a)\"\n\nThis reverts commit a303a6ee32ebc04eb261db780f1e968f58d6e260.\n\nThis feature was made deprecated ages ago.",
      "tree": {
        "sha": "30a3f15605ae81c024eba3cfb2253c5cdd35e43f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/30a3f15605ae81c024eba3cfb2253c5cdd35e43f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/81b151b696a536ae3ac71a0e5d6b98369ce0ab7c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/81b151b696a536ae3ac71a0e5d6b98369ce0ab7c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/81b151b696a536ae3ac71a0e5d6b98369ce0ab7c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/81b151b696a536ae3ac71a0e5d6b98369ce0ab7c/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "61894db63556a8783fb78c576eb7320be6edfad0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/61894db63556a8783fb78c576eb7320be6edfad0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/61894db63556a8783fb78c576eb7320be6edfad0"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 0,
      "deletions": 8
    },
    "files": [
      {
        "sha": "80186e5fa13652d981278155478ac1a9f3f5c77b",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 8,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/81b151b696a536ae3ac71a0e5d6b98369ce0ab7c/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/81b151b696a536ae3ac71a0e5d6b98369ce0ab7c/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=81b151b696a536ae3ac71a0e5d6b98369ce0ab7c",
        "patch": "@@ -31,7 +31,6 @@ namespace boost {\n #include <boost/thread.hpp>\n #include <openssl/crypto.h>\n #include <openssl/rand.h>\n-#include <openssl/conf.h>\n \n #ifdef WIN32\n #ifdef _WIN32_WINNT\n@@ -122,13 +121,6 @@ class CInit\n             ppmutexOpenSSL[i] = new CCriticalSection();\n         CRYPTO_set_locking_callback(locking_callback);\n \n-        // OpenSSL can optionally load a config file which lists optional loadable modules and engines.\n-        // We don't use them so we don't require the config. However some of our libs may call functions\n-        // which attempt to load the config file, possibly resulting in an exit() or crash if it is missing\n-        // or corrupt. Explicitly tell OpenSSL not to try to load the file. The result for our libs will be\n-        // that the config appears to have been loaded and there are no modules/engines available.\n-        OPENSSL_no_config();\n-\n #ifdef WIN32\n         // Seed random number generator with screen scrape and other hardware sources\n         RAND_screen();"
      }
    ]
  },
  {
    "sha": "5bad5c79d6d6cc4d070d0da04c3695bfcbfa4a76",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1YmFkNWM3OWQ2ZDZjYzRkMDcwZDBkYTA0YzM2OTViZmNiZmE0YTc2",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-12T21:41:09Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-12T21:41:09Z"
      },
      "message": "New version of OpenSSL",
      "tree": {
        "sha": "dea0b1e3d60da8621ebc61b3d4fe79678b857769",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/dea0b1e3d60da8621ebc61b3d4fe79678b857769"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5bad5c79d6d6cc4d070d0da04c3695bfcbfa4a76",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5bad5c79d6d6cc4d070d0da04c3695bfcbfa4a76",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5bad5c79d6d6cc4d070d0da04c3695bfcbfa4a76",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5bad5c79d6d6cc4d070d0da04c3695bfcbfa4a76/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "81b151b696a536ae3ac71a0e5d6b98369ce0ab7c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/81b151b696a536ae3ac71a0e5d6b98369ce0ab7c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/81b151b696a536ae3ac71a0e5d6b98369ce0ab7c"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "28df51115d4f0060ffcdf471ed0ad2f4f9137813",
        "filename": "novacoin-qt.pro",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5bad5c79d6d6cc4d070d0da04c3695bfcbfa4a76/novacoin-qt.pro",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5bad5c79d6d6cc4d070d0da04c3695bfcbfa4a76/novacoin-qt.pro",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/novacoin-qt.pro?ref=5bad5c79d6d6cc4d070d0da04c3695bfcbfa4a76",
        "patch": "@@ -30,8 +30,8 @@ win32-g++-cross: QMAKE_TARGET.arch = $$TARGET_PLATFORM\n #BOOST_LIB_PATH=C:/deps/boost_1_55_0/stage/lib\n #BDB_INCLUDE_PATH=C:/deps/db-6.0.20/build_unix\n #BDB_LIB_PATH=C:/deps/db-6.0.20/build_unix\n-#OPENSSL_INCLUDE_PATH=C:/deps/openssl-1.0.1j/include\n-#OPENSSL_LIB_PATH=C:/deps/openssl-1.0.1j\n+#OPENSSL_INCLUDE_PATH=C:/deps/openssl-1.0.2g/include\n+#OPENSSL_LIB_PATH=C:/deps/openssl-1.0.2g\n #QRENCODE_INCLUDE_PATH=C:/deps/qrencode-3.4.4\n #QRENCODE_LIB_PATH=C:/deps/qrencode-3.4.4/.libs\n "
      },
      {
        "sha": "12ed6d88f2a8915a6346cf621fda786e2fb152db",
        "filename": "src/makefile.linux-mingw",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5bad5c79d6d6cc4d070d0da04c3695bfcbfa4a76/src/makefile.linux-mingw",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5bad5c79d6d6cc4d070d0da04c3695bfcbfa4a76/src/makefile.linux-mingw",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/makefile.linux-mingw?ref=5bad5c79d6d6cc4d070d0da04c3695bfcbfa4a76",
        "patch": "@@ -13,11 +13,11 @@ DEPSDIR:=/usr/$(TARGET_PLATFORM)-w64-mingw32\n \n BOOST_LIB_PATH:=$(DEPSDIR)/boost_1_57_0/stage/lib\n BDB_LIB_PATH:=$(DEPSDIR)/db-6.0.20.NC/build_unix\n-OPENSSL_LIB_PATH:=$(DEPSDIR)/openssl-1.0.1h\n+OPENSSL_LIB_PATH:=$(DEPSDIR)/openssl-1.0.2g\n \n BOOST_INCLUDE_PATH:=$(DEPSDIR)/boost_1_57_0\n BDB_INCLUDE_PATH:=$(DEPSDIR)/db-6.0.20.NC/build_unix\n-OPENSSL_INCLUDE_PATH:=$(DEPSDIR)/openssl-1.0.1h/include\n+OPENSSL_INCLUDE_PATH:=$(DEPSDIR)/openssl-1.0.2g/include\n \n USE_LEVELDB:=0\n USE_IPV6:=1"
      }
    ]
  },
  {
    "sha": "0c9d9eadd8bbc527f139ad1365fca7b8c32600b8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowYzlkOWVhZGQ4YmJjNTI3ZjEzOWFkMTM2NWZjYTdiOGMzMjYwMGI4",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "CryptoManiac@users.noreply.github.com",
        "date": "2016-03-12T22:43:37Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "CryptoManiac@users.noreply.github.com",
        "date": "2016-03-12T22:43:37Z"
      },
      "message": "Merge pull request #288 from svost/patch\n\nPatch",
      "tree": {
        "sha": "c7646979be25a6ff309a8dfcd67f674a2c46e017",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c7646979be25a6ff309a8dfcd67f674a2c46e017"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0c9d9eadd8bbc527f139ad1365fca7b8c32600b8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0c9d9eadd8bbc527f139ad1365fca7b8c32600b8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0c9d9eadd8bbc527f139ad1365fca7b8c32600b8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0c9d9eadd8bbc527f139ad1365fca7b8c32600b8/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5bad5c79d6d6cc4d070d0da04c3695bfcbfa4a76",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5bad5c79d6d6cc4d070d0da04c3695bfcbfa4a76",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5bad5c79d6d6cc4d070d0da04c3695bfcbfa4a76"
      },
      {
        "sha": "8f8b8543b836c2ae67f24dc5e4b03dc27dde3cc3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8f8b8543b836c2ae67f24dc5e4b03dc27dde3cc3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8f8b8543b836c2ae67f24dc5e4b03dc27dde3cc3"
      }
    ],
    "stats": {
      "total": 38,
      "additions": 22,
      "deletions": 16
    },
    "files": [
      {
        "sha": "3f8eaf721b45123f68abfa822fe6d322a38da22f",
        "filename": "src/ecies.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 9,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0c9d9eadd8bbc527f139ad1365fca7b8c32600b8/src/ecies.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0c9d9eadd8bbc527f139ad1365fca7b8c32600b8/src/ecies.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/ecies.cpp?ref=0c9d9eadd8bbc527f139ad1365fca7b8c32600b8",
        "patch": "@@ -556,12 +556,18 @@ unsigned char * ecies_decrypt(const ies_ctx_t *ctx, const cryptogram_t *cryptogr\n \n ies_ctx_t *create_context(EC_KEY *user_key)\n {\n-    ies_ctx_t* ctx = (ies_ctx_t*) malloc(sizeof(ies_ctx_t));\n-    ctx->cipher = EVP_aes_128_cbc();\n-    ctx->md = EVP_sha1();\n-    ctx->kdf_md = EVP_sha1();\n-    ctx->stored_key_length = 33;\n-    ctx->user_key = user_key;\n-\n-    return ctx;\n-}\n+    try {\n+      ies_ctx_t* ctx = new ies_ctx_t;\n+      ctx->cipher = EVP_aes_128_cbc();\n+      ctx->md = EVP_sha1();\n+      ctx->kdf_md = EVP_sha1();\n+      ctx->stored_key_length = 33;\n+      ctx->user_key = user_key;\n+      return ctx;\n+    }\n+    catch (const std::bad_alloc& e) {\n+      printf(\"Error: %s in %s:%d\\n\", e.what(), __FILE__, __LINE__);\n+// TODO: add checking to NULL where necessary\n+      return NULL;\n+    }\n+}\n\\ No newline at end of file"
      },
      {
        "sha": "2232324453b8e7dc8dc465dc9fab8cfe0d921eb0",
        "filename": "src/key.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0c9d9eadd8bbc527f139ad1365fca7b8c32600b8/src/key.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0c9d9eadd8bbc527f139ad1365fca7b8c32600b8/src/key.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.cpp?ref=0c9d9eadd8bbc527f139ad1365fca7b8c32600b8",
        "patch": "@@ -1202,7 +1202,7 @@ void CKey::EncryptData(const std::vector<unsigned char>& data, std::vector<unsig\n \n     cryptogram = ecies_encrypt(ctx, (unsigned char*)&data[0], data.size(), error);\n     if (cryptogram == NULL) {\n-        free(ctx);\n+        delete ctx;\n         ctx = NULL;\n         throw key_error(std::string(\"Error in encryption: %s\") + error);\n     }\n@@ -1211,7 +1211,7 @@ void CKey::EncryptData(const std::vector<unsigned char>& data, std::vector<unsig\n     unsigned char *key_data = cryptogram_key_data(cryptogram);\n     memcpy(&encrypted[0], key_data, encrypted.size());\n     cryptogram_free(cryptogram);\n-    free(ctx);\n+    delete ctx;\n }\n \n void CKey::DecryptData(const std::vector<unsigned char>& encrypted, std::vector<unsigned char>& data)\n@@ -1234,7 +1234,7 @@ void CKey::DecryptData(const std::vector<unsigned char>& encrypted, std::vector<\n \n     decrypted = ecies_decrypt(ctx, cryptogram, &length, error);\n     cryptogram_free(cryptogram);\n-    free(ctx);\n+    delete ctx;\n \n     if (decrypted == NULL) {\n         throw key_error(std::string(\"Error in decryption: %s\") + error);\n@@ -1243,4 +1243,4 @@ void CKey::DecryptData(const std::vector<unsigned char>& encrypted, std::vector<\n     data.resize(length);\n     memcpy(&data[0], decrypted, length);\n     free(decrypted);\n-}\n+}\n\\ No newline at end of file"
      },
      {
        "sha": "8305dd079eae3750a5432b365fde5555a2989631",
        "filename": "src/serialize.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0c9d9eadd8bbc527f139ad1365fca7b8c32600b8/src/serialize.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0c9d9eadd8bbc527f139ad1365fca7b8c32600b8/src/serialize.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/serialize.h?ref=0c9d9eadd8bbc527f139ad1365fca7b8c32600b8",
        "patch": "@@ -56,9 +56,9 @@ enum\n     SER_DISK            = (1 << 1),\n     SER_GETHASH         = (1 << 2),\n \n-\t // modifiers\n-\t SER_SKIPSIG = (1 << 16),\n-\t SER_BLOCKHEADERONLY = (1 << 17)\n+    // modifiers\n+    SER_SKIPSIG         = (1 << 16),\n+    SER_BLOCKHEADERONLY = (1 << 17)\n \n };\n "
      }
    ]
  },
  {
    "sha": "a281267a9d38ee401f524545e5903a5f58956f83",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphMjgxMjY3YTlkMzhlZTQwMWY1MjQ1NDVlNTkwM2E1ZjU4OTU2Zjgz",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-13T15:19:38Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-13T15:19:38Z"
      },
      "message": "Fix compilation warnings.",
      "tree": {
        "sha": "4662c130fc7386a1251d1543940bea256531038c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4662c130fc7386a1251d1543940bea256531038c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a281267a9d38ee401f524545e5903a5f58956f83",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a281267a9d38ee401f524545e5903a5f58956f83",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a281267a9d38ee401f524545e5903a5f58956f83",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a281267a9d38ee401f524545e5903a5f58956f83/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0c9d9eadd8bbc527f139ad1365fca7b8c32600b8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0c9d9eadd8bbc527f139ad1365fca7b8c32600b8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0c9d9eadd8bbc527f139ad1365fca7b8c32600b8"
      }
    ],
    "stats": {
      "total": 27,
      "additions": 15,
      "deletions": 12
    },
    "files": [
      {
        "sha": "8643309f0768aba7a1ab668d58f783e49c47afaf",
        "filename": "novacoin-qt.pro",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a281267a9d38ee401f524545e5903a5f58956f83/novacoin-qt.pro",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a281267a9d38ee401f524545e5903a5f58956f83/novacoin-qt.pro",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/novacoin-qt.pro?ref=a281267a9d38ee401f524545e5903a5f58956f83",
        "patch": "@@ -9,6 +9,9 @@ CONFIG += no_include_pwd\n CONFIG += thread\n CONFIG += static\n \n+#QMAKE_CC=clang\n+#QMAKE_CXX=clang++\n+\n freebsd-g++: QMAKE_TARGET.arch = $$QMAKE_HOST.arch\n linux-g++: QMAKE_TARGET.arch = $$QMAKE_HOST.arch\n linux-g++-32: QMAKE_TARGET.arch = i686"
      },
      {
        "sha": "48112a5b86768b2a529d995d2135c061fdbdf34f",
        "filename": "src/rpcdump.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a281267a9d38ee401f524545e5903a5f58956f83/src/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a281267a9d38ee401f524545e5903a5f58956f83/src/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcdump.cpp?ref=a281267a9d38ee401f524545e5903a5f58956f83",
        "patch": "@@ -285,7 +285,7 @@ Value importmalleablekey(const Array& params, bool fHelp)\n \n     if (fSuccess)\n     {\n-        fSuccess = pwalletMain->AddMalleableKey(mKey);\n+        fSuccess = pwalletMain->AddKey(mKey);\n         result.push_back(Pair(\"Successful\", fSuccess));\n         result.push_back(Pair(\"Address\", CBitcoinAddress(mKey.GetMalleablePubKey()).ToString()));\n         result.push_back(Pair(\"KeyView\", CMalleableKeyView(mKey).ToString()));"
      },
      {
        "sha": "2ee7dfac3e569f375215a6c417d5c8d3e8a15719",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a281267a9d38ee401f524545e5903a5f58956f83/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a281267a9d38ee401f524545e5903a5f58956f83/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=a281267a9d38ee401f524545e5903a5f58956f83",
        "patch": "@@ -74,8 +74,8 @@ CMalleableKeyView CWallet::GenerateNewMalleableKey()\n     if (!nTimeFirstKey || nCreationTime < nTimeFirstKey)\n         nTimeFirstKey = nCreationTime;\n \n-    if (!AddMalleableKey(mKey))\n-        throw std::runtime_error(\"CWallet::GenerateNewMalleableKey() : AddMalleableKey failed\");\n+    if (!AddKey(mKey))\n+        throw std::runtime_error(\"CWallet::GenerateNewMalleableKey() : AddKey failed\");\n     return CMalleableKeyView(mKey);\n }\n \n@@ -91,7 +91,7 @@ bool CWallet::AddKey(const CKey& key)\n     return true;\n }\n \n-bool CWallet::AddMalleableKey(const CMalleableKey& mKey)\n+bool CWallet::AddKey(const CMalleableKey& mKey)\n {\n     CMalleableKeyView keyView = CMalleableKeyView(mKey);\n     CSecret vchSecretH = mKey.GetSecretH();"
      },
      {
        "sha": "fb02d0222a44104283dfb1601c8168b798684704",
        "filename": "src/wallet.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a281267a9d38ee401f524545e5903a5f58956f83/src/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a281267a9d38ee401f524545e5903a5f58956f83/src/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.h?ref=a281267a9d38ee401f524545e5903a5f58956f83",
        "patch": "@@ -158,16 +158,16 @@ class CWallet : public CCryptoKeyStore\n     CMalleableKeyView GenerateNewMalleableKey();\n     // Adds a key to the store, and saves it to disk.\n     bool AddKey(const CKey& key);\n-    bool AddMalleableKey(const CMalleableKey& mKey);\n+    bool AddKey(const CMalleableKey& mKey);\n     // Adds a key to the store, without saving it to disk (used by LoadWallet)\n     bool LoadKey(const CKey& key) { return CCryptoKeyStore::AddKey(key); }\n     // Load metadata (used by LoadWallet)\n     bool LoadKeyMetadata(const CPubKey &pubkey, const CKeyMetadata &metadata);\n     bool LoadKeyMetadata(const CMalleableKeyView &keyView, const CKeyMetadata &metadata);\n \n     // Load malleable key without saving it to disk (used by LoadWallet)\n-    bool LoadMalleableKey(const CMalleableKeyView &keyView, const CSecret &vchSecretH) { return CCryptoKeyStore::AddMalleableKey(keyView, vchSecretH); }\n-    bool LoadCryptedMalleableKey(const CMalleableKeyView &keyView, const std::vector<unsigned char> &vchCryptedSecretH) { return CCryptoKeyStore::AddCryptedMalleableKey(keyView, vchCryptedSecretH); }\n+    bool LoadKey(const CMalleableKeyView &keyView, const CSecret &vchSecretH) { return CCryptoKeyStore::AddMalleableKey(keyView, vchSecretH); }\n+    bool LoadCryptedKey(const CMalleableKeyView &keyView, const std::vector<unsigned char> &vchCryptedSecretH) { return CCryptoKeyStore::AddCryptedMalleableKey(keyView, vchCryptedSecretH); }\n \n     bool LoadMinVersion(int nVersion) { nWalletVersion = nVersion; nWalletMaxVersion = std::max(nWalletMaxVersion, nVersion); return true; }\n "
      },
      {
        "sha": "640f78b993dd2da355cdf4b8bc84325c1d5a587f",
        "filename": "src/walletdb.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a281267a9d38ee401f524545e5903a5f58956f83/src/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a281267a9d38ee401f524545e5903a5f58956f83/src/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/walletdb.cpp?ref=a281267a9d38ee401f524545e5903a5f58956f83",
        "patch": "@@ -311,9 +311,9 @@ ReadKeyValue(CWallet* pwallet, CDataStream& ssKey, CDataStream& ssValue,\n             ssValue >> vchSecret;\n \n             CMalleableKeyView keyView(strKeyView);\n-            if (!pwallet->LoadMalleableKey(keyView, vchSecret))\n+            if (!pwallet->LoadKey(keyView, vchSecret))\n             {\n-                strErr = \"Error reading wallet database: LoadMalleableKey failed\";\n+                strErr = \"Error reading wallet database: LoadKey failed\";\n                 return false;\n             }\n         }\n@@ -326,9 +326,9 @@ ReadKeyValue(CWallet* pwallet, CDataStream& ssKey, CDataStream& ssValue,\n             ssValue >> vchCryptedSecret;\n \n             CMalleableKeyView keyView(strKeyView);\n-            if (!pwallet->LoadCryptedMalleableKey(keyView, vchCryptedSecret))\n+            if (!pwallet->LoadCryptedKey(keyView, vchCryptedSecret))\n             {\n-                strErr = \"Error reading wallet database: LoadCryptedMalleableKey failed\";\n+                strErr = \"Error reading wallet database: LoadCryptedKey failed\";\n                 return false;\n             }\n         }\n@@ -940,7 +940,7 @@ bool ImportWallet(CWallet *pwallet, const string& strLocation)\n            }\n \n            printf(\"Importing %s...\\n\", addr.ToString().c_str());\n-           if (!pwallet->AddMalleableKey(mKey)) {\n+           if (!pwallet->AddKey(mKey)) {\n                fGood = false;\n                continue;\n            }"
      }
    ]
  },
  {
    "sha": "982d13875e964931cfca1a00e8b89bc32b5a5aa5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ODJkMTM4NzVlOTY0OTMxY2ZjYTFhMDBlOGI4OWJjMzJiNWE1YWE1",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-13T15:49:33Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-13T15:49:33Z"
      },
      "message": "Use current CC and CXX environment variables for leveldb compilation.",
      "tree": {
        "sha": "65409a9c8d385ce07679588309d129f071747d5c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/65409a9c8d385ce07679588309d129f071747d5c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/982d13875e964931cfca1a00e8b89bc32b5a5aa5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/982d13875e964931cfca1a00e8b89bc32b5a5aa5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/982d13875e964931cfca1a00e8b89bc32b5a5aa5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/982d13875e964931cfca1a00e8b89bc32b5a5aa5/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a281267a9d38ee401f524545e5903a5f58956f83",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a281267a9d38ee401f524545e5903a5f58956f83",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a281267a9d38ee401f524545e5903a5f58956f83"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 12,
      "deletions": 5
    },
    "files": [
      {
        "sha": "e0050900f025e3c8ffc98415fb3f47777578d249",
        "filename": "novacoin-qt.pro",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/982d13875e964931cfca1a00e8b89bc32b5a5aa5/novacoin-qt.pro",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/982d13875e964931cfca1a00e8b89bc32b5a5aa5/novacoin-qt.pro",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/novacoin-qt.pro?ref=982d13875e964931cfca1a00e8b89bc32b5a5aa5",
        "patch": "@@ -9,8 +9,8 @@ CONFIG += no_include_pwd\n CONFIG += thread\n CONFIG += static\n \n-#QMAKE_CC=clang\n-#QMAKE_CXX=clang++\n+# QMAKE_CC=clang\n+# QMAKE_CXX=clang++\n \n freebsd-g++: QMAKE_TARGET.arch = $$QMAKE_HOST.arch\n linux-g++: QMAKE_TARGET.arch = $$QMAKE_HOST.arch"
      },
      {
        "sha": "b31e457b0c21fb23d848b36ef72b028b1bf00899",
        "filename": "src/makefile.bsd",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/982d13875e964931cfca1a00e8b89bc32b5a5aa5/src/makefile.bsd",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/982d13875e964931cfca1a00e8b89bc32b5a5aa5/src/makefile.bsd",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/makefile.bsd?ref=982d13875e964931cfca1a00e8b89bc32b5a5aa5",
        "patch": "@@ -6,6 +6,9 @@ USE_LEVELDB:=0\n USE_IPV6:=1\n ARCH:=$(uname -m)\n \n+# CC:=clang\n+# CXX:=clang++\n+\n LINK:=$(CXX)\n \n DEFS=-DBOOST_SPIRIT_THREADSAFE -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS\n@@ -147,7 +150,7 @@ DEFS += $(addprefix -I,$(CURDIR)/leveldb/include) -DUSE_LEVELDB\n DEFS += $(addprefix -I,$(CURDIR)/leveldb/helpers)\n OBJS += obj/txdb-leveldb.o\n leveldb/libleveldb.a:\n-\t@echo \"Building LevelDB ...\"; cd leveldb; gmake libleveldb.a libmemenv.a; cd ..;\n+\t@echo \"Building LevelDB ...\"; cd leveldb; CC=$(CC) CXX=$(CXX) gmake libleveldb.a libmemenv.a; cd ..;\n obj/txdb-leveldb.o: leveldb/libleveldb.a\n endif\n ifneq (${USE_LEVELDB}, 1)"
      },
      {
        "sha": "0fc1052b09ee91d62f67c28aff5196e03fbd91f9",
        "filename": "src/makefile.osx",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/982d13875e964931cfca1a00e8b89bc32b5a5aa5/src/makefile.osx",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/982d13875e964931cfca1a00e8b89bc32b5a5aa5/src/makefile.osx",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/makefile.osx?ref=982d13875e964931cfca1a00e8b89bc32b5a5aa5",
        "patch": "@@ -6,6 +6,7 @@\n # Mac OS X makefile for bitcoin\n # Originally by Laszlo Hanyecz (solar@heliacal.net)\n \n+CC=llvm-gcc\n CXX=llvm-g++\n DEPSDIR=/opt/local\n \n@@ -115,7 +116,7 @@ DEFS += $(addprefix -I,$(CURDIR)/leveldb/include) -DUSE_LEVELDB\n DEFS += $(addprefix -I,$(CURDIR)/leveldb/helpers)\n OBJS += obj/txdb-leveldb.o\n leveldb/libleveldb.a:\n-\t@echo \"Building LevelDB ...\"; cd leveldb; make; cd ..\n+\t@echo \"Building LevelDB ...\"; cd leveldb; CC=$(CC) CXX=$(CXX) make; cd ..\n obj/txdb-leveldb.o: leveldb/libleveldb.a\n else\n OBJS += obj/txdb-bdb.o"
      },
      {
        "sha": "f4da324a437153df8c55d6f37db11efb161b1d56",
        "filename": "src/makefile.unix",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/982d13875e964931cfca1a00e8b89bc32b5a5aa5/src/makefile.unix",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/982d13875e964931cfca1a00e8b89bc32b5a5aa5/src/makefile.unix",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/makefile.unix?ref=982d13875e964931cfca1a00e8b89bc32b5a5aa5",
        "patch": "@@ -5,6 +5,9 @@\n USE_LEVELDB:=0\n USE_IPV6:=1\n \n+# CC=clang\n+# CXX=clang++\n+\n LINK:=$(CXX)\n ARCH:=$(shell uname -m)\n \n@@ -148,7 +151,7 @@ DEFS += $(addprefix -I,$(CURDIR)/leveldb/include) -DUSE_LEVELDB\n DEFS += $(addprefix -I,$(CURDIR)/leveldb/helpers)\n OBJS += obj/txdb-leveldb.o\n leveldb/libleveldb.a:\n-\t@echo \"Building LevelDB ...\"; cd leveldb; make libleveldb.a libmemenv.a; cd ..;\n+\t@echo \"Building LevelDB ...\"; cd leveldb; CC=$(CC) CXX=$(CXX) make libleveldb.a libmemenv.a; cd ..;\n obj/txdb-leveldb.o: leveldb/libleveldb.a\n endif\n ifneq (${USE_LEVELDB}, 1)"
      }
    ]
  },
  {
    "sha": "fe41e33bdf2420e78448a28d972c577d89d7d03d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmZTQxZTMzYmRmMjQyMGU3ODQ0OGEyOGQ5NzJjNTc3ZDg5ZDdkMDNk",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-13T15:54:36Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-13T15:54:36Z"
      },
      "message": "ECIES: Replace SHA1 with RIPEMD-160.",
      "tree": {
        "sha": "5a3804a6f4c188114630e32da187cb32c78b61c6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5a3804a6f4c188114630e32da187cb32c78b61c6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fe41e33bdf2420e78448a28d972c577d89d7d03d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fe41e33bdf2420e78448a28d972c577d89d7d03d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fe41e33bdf2420e78448a28d972c577d89d7d03d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fe41e33bdf2420e78448a28d972c577d89d7d03d/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "982d13875e964931cfca1a00e8b89bc32b5a5aa5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/982d13875e964931cfca1a00e8b89bc32b5a5aa5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/982d13875e964931cfca1a00e8b89bc32b5a5aa5"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "dec773f9cecf2d62f65d647d9e0c76b5b2a5fd2c",
        "filename": "src/ecies.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fe41e33bdf2420e78448a28d972c577d89d7d03d/src/ecies.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fe41e33bdf2420e78448a28d972c577d89d7d03d/src/ecies.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/ecies.cpp?ref=fe41e33bdf2420e78448a28d972c577d89d7d03d",
        "patch": "@@ -559,8 +559,8 @@ ies_ctx_t *create_context(EC_KEY *user_key)\n     try {\n       ies_ctx_t* ctx = new ies_ctx_t;\n       ctx->cipher = EVP_aes_128_cbc();\n-      ctx->md = EVP_sha1();\n-      ctx->kdf_md = EVP_sha1();\n+      ctx->md = EVP_ripemd160();\n+      ctx->kdf_md = EVP_ripemd160();\n       ctx->stored_key_length = 33;\n       ctx->user_key = user_key;\n       return ctx;\n@@ -570,4 +570,4 @@ ies_ctx_t *create_context(EC_KEY *user_key)\n // TODO: add checking to NULL where necessary\n       return NULL;\n     }\n-}\n\\ No newline at end of file\n+}"
      }
    ]
  },
  {
    "sha": "bde368e9dd14c93b9f4d2aabc03aed60c6a20dd2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiZGUzNjhlOWRkMTRjOTNiOWY0ZDJhYWJjMDNhZWQ2MGM2YTIwZGQy",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-13T16:11:54Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-13T16:11:54Z"
      },
      "message": "Remove unused includes.",
      "tree": {
        "sha": "bb216ce081e585658bd233ca7f5f07848e2593cb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bb216ce081e585658bd233ca7f5f07848e2593cb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bde368e9dd14c93b9f4d2aabc03aed60c6a20dd2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bde368e9dd14c93b9f4d2aabc03aed60c6a20dd2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bde368e9dd14c93b9f4d2aabc03aed60c6a20dd2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bde368e9dd14c93b9f4d2aabc03aed60c6a20dd2/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fe41e33bdf2420e78448a28d972c577d89d7d03d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fe41e33bdf2420e78448a28d972c577d89d7d03d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fe41e33bdf2420e78448a28d972c577d89d7d03d"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 0,
      "deletions": 3
    },
    "files": [
      {
        "sha": "d892324159751423c34c0c121efa7c80dc02c54d",
        "filename": "src/rpccrypt.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bde368e9dd14c93b9f4d2aabc03aed60c6a20dd2/src/rpccrypt.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bde368e9dd14c93b9f4d2aabc03aed60c6a20dd2/src/rpccrypt.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpccrypt.cpp?ref=bde368e9dd14c93b9f4d2aabc03aed60c6a20dd2",
        "patch": "@@ -4,11 +4,8 @@\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #include \"wallet.h\"\n-#include \"walletdb.h\"\n #include \"bitcoinrpc.h\"\n #include \"init.h\"\n-#include \"util.h\"\n-#include \"ntp.h\"\n #include \"base58.h\"\n \n using namespace json_spirit;"
      }
    ]
  },
  {
    "sha": "c9689329818f1b8321f7e5339b269f1e5cf1789f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjOTY4OTMyOTgxOGYxYjgzMjFmN2U1MzM5YjI2OWYxZTVjZjE3ODlm",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-13T17:42:30Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-13T17:42:30Z"
      },
      "message": "RPC: decryptmessage documentation fix",
      "tree": {
        "sha": "eef9170f715498de7783ebfb315bee6cf07d856e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/eef9170f715498de7783ebfb315bee6cf07d856e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c9689329818f1b8321f7e5339b269f1e5cf1789f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c9689329818f1b8321f7e5339b269f1e5cf1789f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c9689329818f1b8321f7e5339b269f1e5cf1789f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c9689329818f1b8321f7e5339b269f1e5cf1789f/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bde368e9dd14c93b9f4d2aabc03aed60c6a20dd2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bde368e9dd14c93b9f4d2aabc03aed60c6a20dd2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bde368e9dd14c93b9f4d2aabc03aed60c6a20dd2"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "69e14c09c106520fcaee3d05f3d7dcb990dc0e5b",
        "filename": "src/rpccrypt.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c9689329818f1b8321f7e5339b269f1e5cf1789f/src/rpccrypt.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c9689329818f1b8321f7e5339b269f1e5cf1789f/src/rpccrypt.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpccrypt.cpp?ref=c9689329818f1b8321f7e5339b269f1e5cf1789f",
        "patch": "@@ -68,7 +68,7 @@ Value decryptmessage(const Array& params, bool fHelp)\n {\n     if (fHelp || params.size() != 2)\n         throw runtime_error(\n-            \"decryptdata <novacoin address> <encrypted message>\\n\"\n+            \"decryptmessage <novacoin address> <encrypted message>\\n\"\n             \"Decrypt message string.\\n\");\n \n     EnsureWalletIsUnlocked();"
      }
    ]
  },
  {
    "sha": "f248e7c93a3b1904d24dbad0927db0790e2adbfa",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmMjQ4ZTdjOTNhM2IxOTA0ZDI0ZGJhZDA5MjdkYjA3OTBlMmFkYmZh",
    "commit": {
      "author": {
        "name": "svost",
        "email": "svost@users.noreply.github.com",
        "date": "2016-03-13T18:09:26Z"
      },
      "committer": {
        "name": "svost",
        "email": "svost@users.noreply.github.com",
        "date": "2016-03-13T18:09:26Z"
      },
      "message": "Fix msvc c6262 warning: excessive stack usage",
      "tree": {
        "sha": "49e1fe60231c723ecf15c9d6faff31c70b6651dd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/49e1fe60231c723ecf15c9d6faff31c70b6651dd"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f248e7c93a3b1904d24dbad0927db0790e2adbfa",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f248e7c93a3b1904d24dbad0927db0790e2adbfa",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f248e7c93a3b1904d24dbad0927db0790e2adbfa",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f248e7c93a3b1904d24dbad0927db0790e2adbfa/comments",
    "author": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c9689329818f1b8321f7e5339b269f1e5cf1789f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c9689329818f1b8321f7e5339b269f1e5cf1789f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c9689329818f1b8321f7e5339b269f1e5cf1789f"
      }
    ],
    "stats": {
      "total": 25,
      "additions": 16,
      "deletions": 9
    },
    "files": [
      {
        "sha": "a583cd5dde5c9b03a810edef51e2b6c6d6eb001a",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 9,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f248e7c93a3b1904d24dbad0927db0790e2adbfa/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f248e7c93a3b1904d24dbad0927db0790e2adbfa/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=f248e7c93a3b1904d24dbad0927db0790e2adbfa",
        "patch": "@@ -1276,16 +1276,23 @@ void ShrinkDebugFile()\n     if (file && GetFilesize(file) > 10 * 1000000)\n     {\n         // Restart the file with some of the end\n-        char pch[200000];\n-        fseek(file, -((long long)sizeof(pch)), SEEK_END);\n-        size_t nBytes = fread(pch, 1, sizeof(pch), file);\n-        fclose(file);\n-\n-        file = fopen(pathLog.string().c_str(), \"w\");\n-        if (file)\n-        {\n-            fwrite(pch, 1, nBytes, file);\n+        try {\n+            vector<char>* vBuf = new vector <char>(200000, 0);\n+            fseek(file, -((long)(vBuf->size())), SEEK_END);\n+            size_t nBytes = fread(&vBuf->operator[](0), 1, vBuf->size(), file);\n+            fclose(file);\n+            file = fopen(pathLog.string().c_str(), \"w\");\n+            if (file)\n+            {\n+                fwrite(&vBuf->operator[](0), 1, nBytes, file);\n+                fclose(file);\n+            }\n+            delete vBuf;\n+        }\n+        catch (const bad_alloc& e) {\n+            // Bad things happen - no free memory in heap at program startup\n             fclose(file);\n+            printf(\"Warning: %s in %s:%d\\n ShrinkDebugFile failed - debug.log expands further\", e.what(), __FILE__, __LINE__);\n         }\n     }\n }"
      }
    ]
  },
  {
    "sha": "5c3b37dc26271c76120d86a17f016fb4922e7356",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1YzNiMzdkYzI2MjcxYzc2MTIwZDg2YTE3ZjAxNmZiNDkyMmU3MzU2",
    "commit": {
      "author": {
        "name": "svost",
        "email": "svost@users.noreply.github.com",
        "date": "2016-03-13T20:11:27Z"
      },
      "committer": {
        "name": "svost",
        "email": "svost@users.noreply.github.com",
        "date": "2016-03-13T20:11:27Z"
      },
      "message": "Switch nSize to size_t\n\nBased on:\r\nEC_POINT_point2oct return size_t\r\nvoid resize (size_type n, value_type val = value_type());",
      "tree": {
        "sha": "4678e42341aff03141aa51ab28f032375a16896a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4678e42341aff03141aa51ab28f032375a16896a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5c3b37dc26271c76120d86a17f016fb4922e7356",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5c3b37dc26271c76120d86a17f016fb4922e7356",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5c3b37dc26271c76120d86a17f016fb4922e7356",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5c3b37dc26271c76120d86a17f016fb4922e7356/comments",
    "author": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f248e7c93a3b1904d24dbad0927db0790e2adbfa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f248e7c93a3b1904d24dbad0927db0790e2adbfa",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f248e7c93a3b1904d24dbad0927db0790e2adbfa"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "546d95f648a47efdf34bd786944a71cd58efc52b",
        "filename": "src/key.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5c3b37dc26271c76120d86a17f016fb4922e7356/src/key.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5c3b37dc26271c76120d86a17f016fb4922e7356/src/key.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.cpp?ref=5c3b37dc26271c76120d86a17f016fb4922e7356",
        "patch": "@@ -612,7 +612,7 @@ bool CPoint::setPubKey(const CPubKey &vchPubKey)\n // Serialize to octets stream\n bool CPoint::getBytes(std::vector<unsigned char> &vchBytes)\n {\n-    unsigned int nSize = EC_POINT_point2oct(group, point, POINT_CONVERSION_COMPRESSED, NULL, 0, ctx);\n+    size_t nSize = EC_POINT_point2oct(group, point, POINT_CONVERSION_COMPRESSED, NULL, 0, ctx);\n     vchBytes.resize(nSize);\n     if (!(nSize == EC_POINT_point2oct(group, point, POINT_CONVERSION_COMPRESSED, &vchBytes[0], nSize, ctx))) {\n         return false;\n@@ -1243,4 +1243,4 @@ void CKey::DecryptData(const std::vector<unsigned char>& encrypted, std::vector<\n     data.resize(length);\n     memcpy(&data[0], decrypted, length);\n     free(decrypted);\n-}\n\\ No newline at end of file\n+}"
      }
    ]
  },
  {
    "sha": "3a67fa790761b4244b6d746b8531b4012b84266d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozYTY3ZmE3OTA3NjFiNDI0NGI2ZDc0NmI4NTMxYjQwMTJiODQyNjZk",
    "commit": {
      "author": {
        "name": "svost",
        "email": "svost@users.noreply.github.com",
        "date": "2016-03-13T20:41:29Z"
      },
      "committer": {
        "name": "svost",
        "email": "svost@users.noreply.github.com",
        "date": "2016-03-13T20:41:29Z"
      },
      "message": "Fix msvc warning C4706: assignment within conditional expression",
      "tree": {
        "sha": "049ba1691f8fb36530b1aeff2d390d8569e574ca",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/049ba1691f8fb36530b1aeff2d390d8569e574ca"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3a67fa790761b4244b6d746b8531b4012b84266d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3a67fa790761b4244b6d746b8531b4012b84266d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3a67fa790761b4244b6d746b8531b4012b84266d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3a67fa790761b4244b6d746b8531b4012b84266d/comments",
    "author": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5c3b37dc26271c76120d86a17f016fb4922e7356",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5c3b37dc26271c76120d86a17f016fb4922e7356",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5c3b37dc26271c76120d86a17f016fb4922e7356"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "1668679134e0f6fbdcefb0e19111dc345150cbf8",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3a67fa790761b4244b6d746b8531b4012b84266d/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3a67fa790761b4244b6d746b8531b4012b84266d/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=3a67fa790761b4244b6d746b8531b4012b84266d",
        "patch": "@@ -1838,11 +1838,11 @@ bool static Reorganize(CTxDB& txdb, CBlockIndex* pindexNew)\n     while (pfork != plonger)\n     {\n         while (plonger->nHeight > pfork->nHeight)\n-            if (!(plonger = plonger->pprev))\n+            if ((plonger = plonger->pprev) == NULL)\n                 return error(\"Reorganize() : plonger->pprev is null\");\n         if (pfork == plonger)\n             break;\n-        if (!(pfork = pfork->pprev))\n+        if ((pfork = pfork->pprev) == NULL)\n             return error(\"Reorganize() : pfork->pprev is null\");\n     }\n "
      }
    ]
  },
  {
    "sha": "e3a906a0b907e63c56f2f4e06c2982261b58b7ab",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplM2E5MDZhMGI5MDdlNjNjNTZmMmY0ZTA2YzI5ODIyNjFiNThiN2Fi",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "CryptoManiac@users.noreply.github.com",
        "date": "2016-03-13T23:22:23Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "CryptoManiac@users.noreply.github.com",
        "date": "2016-03-13T23:22:23Z"
      },
      "message": "Merge pull request #289 from svost/patch\n\nPatch",
      "tree": {
        "sha": "049ba1691f8fb36530b1aeff2d390d8569e574ca",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/049ba1691f8fb36530b1aeff2d390d8569e574ca"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e3a906a0b907e63c56f2f4e06c2982261b58b7ab",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e3a906a0b907e63c56f2f4e06c2982261b58b7ab",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e3a906a0b907e63c56f2f4e06c2982261b58b7ab",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e3a906a0b907e63c56f2f4e06c2982261b58b7ab/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c9689329818f1b8321f7e5339b269f1e5cf1789f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c9689329818f1b8321f7e5339b269f1e5cf1789f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c9689329818f1b8321f7e5339b269f1e5cf1789f"
      },
      {
        "sha": "3a67fa790761b4244b6d746b8531b4012b84266d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3a67fa790761b4244b6d746b8531b4012b84266d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3a67fa790761b4244b6d746b8531b4012b84266d"
      }
    ],
    "stats": {
      "total": 33,
      "additions": 20,
      "deletions": 13
    },
    "files": [
      {
        "sha": "546d95f648a47efdf34bd786944a71cd58efc52b",
        "filename": "src/key.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e3a906a0b907e63c56f2f4e06c2982261b58b7ab/src/key.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e3a906a0b907e63c56f2f4e06c2982261b58b7ab/src/key.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.cpp?ref=e3a906a0b907e63c56f2f4e06c2982261b58b7ab",
        "patch": "@@ -612,7 +612,7 @@ bool CPoint::setPubKey(const CPubKey &vchPubKey)\n // Serialize to octets stream\n bool CPoint::getBytes(std::vector<unsigned char> &vchBytes)\n {\n-    unsigned int nSize = EC_POINT_point2oct(group, point, POINT_CONVERSION_COMPRESSED, NULL, 0, ctx);\n+    size_t nSize = EC_POINT_point2oct(group, point, POINT_CONVERSION_COMPRESSED, NULL, 0, ctx);\n     vchBytes.resize(nSize);\n     if (!(nSize == EC_POINT_point2oct(group, point, POINT_CONVERSION_COMPRESSED, &vchBytes[0], nSize, ctx))) {\n         return false;\n@@ -1243,4 +1243,4 @@ void CKey::DecryptData(const std::vector<unsigned char>& encrypted, std::vector<\n     data.resize(length);\n     memcpy(&data[0], decrypted, length);\n     free(decrypted);\n-}\n\\ No newline at end of file\n+}"
      },
      {
        "sha": "1668679134e0f6fbdcefb0e19111dc345150cbf8",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e3a906a0b907e63c56f2f4e06c2982261b58b7ab/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e3a906a0b907e63c56f2f4e06c2982261b58b7ab/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=e3a906a0b907e63c56f2f4e06c2982261b58b7ab",
        "patch": "@@ -1838,11 +1838,11 @@ bool static Reorganize(CTxDB& txdb, CBlockIndex* pindexNew)\n     while (pfork != plonger)\n     {\n         while (plonger->nHeight > pfork->nHeight)\n-            if (!(plonger = plonger->pprev))\n+            if ((plonger = plonger->pprev) == NULL)\n                 return error(\"Reorganize() : plonger->pprev is null\");\n         if (pfork == plonger)\n             break;\n-        if (!(pfork = pfork->pprev))\n+        if ((pfork = pfork->pprev) == NULL)\n             return error(\"Reorganize() : pfork->pprev is null\");\n     }\n "
      },
      {
        "sha": "a583cd5dde5c9b03a810edef51e2b6c6d6eb001a",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 9,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e3a906a0b907e63c56f2f4e06c2982261b58b7ab/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e3a906a0b907e63c56f2f4e06c2982261b58b7ab/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=e3a906a0b907e63c56f2f4e06c2982261b58b7ab",
        "patch": "@@ -1276,16 +1276,23 @@ void ShrinkDebugFile()\n     if (file && GetFilesize(file) > 10 * 1000000)\n     {\n         // Restart the file with some of the end\n-        char pch[200000];\n-        fseek(file, -((long long)sizeof(pch)), SEEK_END);\n-        size_t nBytes = fread(pch, 1, sizeof(pch), file);\n-        fclose(file);\n-\n-        file = fopen(pathLog.string().c_str(), \"w\");\n-        if (file)\n-        {\n-            fwrite(pch, 1, nBytes, file);\n+        try {\n+            vector<char>* vBuf = new vector <char>(200000, 0);\n+            fseek(file, -((long)(vBuf->size())), SEEK_END);\n+            size_t nBytes = fread(&vBuf->operator[](0), 1, vBuf->size(), file);\n+            fclose(file);\n+            file = fopen(pathLog.string().c_str(), \"w\");\n+            if (file)\n+            {\n+                fwrite(&vBuf->operator[](0), 1, nBytes, file);\n+                fclose(file);\n+            }\n+            delete vBuf;\n+        }\n+        catch (const bad_alloc& e) {\n+            // Bad things happen - no free memory in heap at program startup\n             fclose(file);\n+            printf(\"Warning: %s in %s:%d\\n ShrinkDebugFile failed - debug.log expands further\", e.what(), __FILE__, __LINE__);\n         }\n     }\n }"
      }
    ]
  },
  {
    "sha": "27433b3702804094c12e5baf5dd50f0efeecd25b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyNzQzM2IzNzAyODA0MDk0YzEyZTViYWY1ZGQ1MGYwZWZlZWNkMjVi",
    "commit": {
      "author": {
        "name": "svost",
        "email": "ya.nowa@yandex.ru",
        "date": "2016-03-14T05:56:02Z"
      },
      "committer": {
        "name": "svost",
        "email": "ya.nowa@yandex.ru",
        "date": "2016-03-14T05:56:02Z"
      },
      "message": "Fix msvc warning C4706: assignment within conditional expression",
      "tree": {
        "sha": "ee4a1641768d789e7900109cd7907adb18dfa8b0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ee4a1641768d789e7900109cd7907adb18dfa8b0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/27433b3702804094c12e5baf5dd50f0efeecd25b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/27433b3702804094c12e5baf5dd50f0efeecd25b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/27433b3702804094c12e5baf5dd50f0efeecd25b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/27433b3702804094c12e5baf5dd50f0efeecd25b/comments",
    "author": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e3a906a0b907e63c56f2f4e06c2982261b58b7ab",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e3a906a0b907e63c56f2f4e06c2982261b58b7ab",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e3a906a0b907e63c56f2f4e06c2982261b58b7ab"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "05d55a4b26f37f6a1df21ebd0d3f29a1b78f7495",
        "filename": "src/checkpoints.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/27433b3702804094c12e5baf5dd50f0efeecd25b/src/checkpoints.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/27433b3702804094c12e5baf5dd50f0efeecd25b/src/checkpoints.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/checkpoints.cpp?ref=27433b3702804094c12e5baf5dd50f0efeecd25b",
        "patch": "@@ -34,7 +34,7 @@ namespace Checkpoints\n         ( 200000, std::make_pair(uint256(\"0x0000000000029f8bbf66e6ea6f3e5db55009404aae0fe395a53dd33142b2bff2\"), 1441127233) )\n         ( 221047, std::make_pair(uint256(\"0xa28aef712e7aa0c285bfe29351ca21ed416689139e3063ef770fc826a8b9e9da\"), 1449431646) )\n     ;\n-    \n+\n     static ListBannedBlocks listBanned =\n         boost::assign::list_of\n         // Invalid block #221047 with future timestamp of 2016/02/23 09:24:17 UTC\n@@ -129,7 +129,7 @@ namespace Checkpoints\n             // that current checkpoint should be a descendant block\n             CBlockIndex* pindex = pindexSyncCheckpoint;\n             while (pindex->nHeight > pindexCheckpointRecv->nHeight)\n-                if (!(pindex = pindex->pprev))\n+                if ((pindex = pindex->pprev) == NULL)\n                     return error(\"ValidateSyncCheckpoint: pprev null - block index structure failure\");\n             if (pindex->GetBlockHash() != hashCheckpoint)\n             {\n@@ -144,7 +144,7 @@ namespace Checkpoints\n         // to verify.\n         CBlockIndex* pindex = pindexCheckpointRecv;\n         while (pindex->nHeight > pindexSyncCheckpoint->nHeight)\n-            if (!(pindex = pindex->pprev))\n+            if ((pindex = pindex->pprev) == NULL)\n                 return error(\"ValidateSyncCheckpoint: pprev2 null - block index structure failure\");\n         if (pindex->GetBlockHash() != hashSyncCheckpoint)\n         {\n@@ -246,7 +246,7 @@ namespace Checkpoints\n             // trace back to same height as sync-checkpoint\n             const CBlockIndex* pindex = pindexPrev;\n             while (pindex->nHeight > pindexSync->nHeight)\n-                if (!(pindex = pindex->pprev))\n+                if ((pindex = pindex->pprev) == NULL)\n                     return error(\"CheckSync: pprev null - block index structure failure\");\n             if (pindex->nHeight < pindexSync->nHeight || pindex->GetBlockHash() != hashSyncCheckpoint)\n                 return false; // only descendant of sync-checkpoint can pass check"
      }
    ]
  },
  {
    "sha": "af6238566c0ccf49ef79f780718d147b413321b8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphZjYyMzg1NjZjMGNjZjQ5ZWY3OWY3ODA3MThkMTQ3YjQxMzMyMWI4",
    "commit": {
      "author": {
        "name": "svost",
        "email": "ya.nowa@yandex.ru",
        "date": "2016-03-14T08:55:38Z"
      },
      "committer": {
        "name": "svost",
        "email": "ya.nowa@yandex.ru",
        "date": "2016-03-14T08:55:38Z"
      },
      "message": "Version: compiler name suffix update",
      "tree": {
        "sha": "d390b043fef1c73da9f52efa17c1096708a8202c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d390b043fef1c73da9f52efa17c1096708a8202c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/af6238566c0ccf49ef79f780718d147b413321b8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/af6238566c0ccf49ef79f780718d147b413321b8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/af6238566c0ccf49ef79f780718d147b413321b8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/af6238566c0ccf49ef79f780718d147b413321b8/comments",
    "author": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "27433b3702804094c12e5baf5dd50f0efeecd25b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/27433b3702804094c12e5baf5dd50f0efeecd25b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/27433b3702804094c12e5baf5dd50f0efeecd25b"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 10,
      "deletions": 13
    },
    "files": [
      {
        "sha": "8430dc7ae5e6a20781deb5bdf743e975accd0a59",
        "filename": "src/version.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 13,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/af6238566c0ccf49ef79f780718d147b413321b8/src/version.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/af6238566c0ccf49ef79f780718d147b413321b8/src/version.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/version.cpp?ref=af6238566c0ccf49ef79f780718d147b413321b8",
        "patch": "@@ -18,27 +18,24 @@ const std::string CLIENT_NAME(\"Satoshi\");\n #endif\n \n // Compiler name\n-#if defined(__GNUC__) && defined(__INTEL_COMPILER)\n-/*code specific to linux icc compiler*/\n-#define CL_NAME   \"-icc\"\n-#else\n-#ifdef __GNUC__\n-/*code for GNU C compiler */\n-#define CL_NAME   \"-gcc\"\n+#ifdef __INTEL_COMPILER\n+//code specific to intel compiler\n+#define CL_NAME   \"-icpc\"\n #elif _MSC_VER\n-/*usually has the version number in _MSC_VER*/\n-/*code specific to MSVC compiler*/\n+//code specific to MSVC compiler\n #define CL_NAME   \"-msvc\"\n #elif __clang__\n-/*code specific to clang compilers*/\n+//code specific to clang compilers\n #define CL_NAME   \"-clang\"\n+#elif __GNUC__\n+//code for GNU C compiler\n+#define CL_NAME   \"-gcc\"\n #elif __MINGW32__\n-/*code specific to mingw compilers*/\n+//code specific to mingw compilers\n #define CL_NAME   \"-mingw\"\n #else\n #define CL_NAME   \"-genericcl\"\n-/*others*/\n-#endif\n+//others\n #endif\n \n // The following part of the code determines the CLIENT_BUILD variable."
      }
    ]
  },
  {
    "sha": "a23a71eaf5778e2dcc16a870c200aeac1ee71e72",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphMjNhNzFlYWY1Nzc4ZTJkY2MxNmE4NzBjMjAwYWVhYzFlZTcxZTcy",
    "commit": {
      "author": {
        "name": "svost",
        "email": "ya.nowa@yandex.ru",
        "date": "2016-03-14T13:20:22Z"
      },
      "committer": {
        "name": "svost",
        "email": "ya.nowa@yandex.ru",
        "date": "2016-03-14T13:20:22Z"
      },
      "message": "Fix msvc c4127 warning",
      "tree": {
        "sha": "233b21df01b0d75109b4d4f67dad79819aad8418",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/233b21df01b0d75109b4d4f67dad79819aad8418"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a23a71eaf5778e2dcc16a870c200aeac1ee71e72",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a23a71eaf5778e2dcc16a870c200aeac1ee71e72",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a23a71eaf5778e2dcc16a870c200aeac1ee71e72",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a23a71eaf5778e2dcc16a870c200aeac1ee71e72/comments",
    "author": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "af6238566c0ccf49ef79f780718d147b413321b8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/af6238566c0ccf49ef79f780718d147b413321b8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/af6238566c0ccf49ef79f780718d147b413321b8"
      }
    ],
    "stats": {
      "total": 54,
      "additions": 27,
      "deletions": 27
    },
    "files": [
      {
        "sha": "b555f0ba953951dcd4f4900a2b807cec97870f88",
        "filename": "src/bitcoinrpc.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a23a71eaf5778e2dcc16a870c200aeac1ee71e72/src/bitcoinrpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a23a71eaf5778e2dcc16a870c200aeac1ee71e72/src/bitcoinrpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoinrpc.cpp?ref=a23a71eaf5778e2dcc16a870c200aeac1ee71e72",
        "patch": "@@ -441,7 +441,7 @@ int ReadHTTPStatus(std::basic_istream<char>& stream, int &proto)\n int ReadHTTPHeader(std::basic_istream<char>& stream, map<string, string>& mapHeadersRet)\n {\n     int nLen = 0;\n-    while (true)\n+    for ( ; ; )\n     {\n         string str;\n         std::getline(stream, str);\n@@ -992,7 +992,7 @@ void ThreadRPCServer3(void* parg)\n     AcceptedConnection *conn = (AcceptedConnection *) parg;\n \n     bool fRun = true;\n-    while (true)\n+    for ( ; ; )\n     {\n         if (fShutdown || !fRun)\n         {"
      },
      {
        "sha": "8fab885672f6ef502a04be4ef005d9d2177f25e6",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a23a71eaf5778e2dcc16a870c200aeac1ee71e72/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a23a71eaf5778e2dcc16a870c200aeac1ee71e72/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=a23a71eaf5778e2dcc16a870c200aeac1ee71e72",
        "patch": "@@ -1013,7 +1013,7 @@ bool AppInit2()\n #if !defined(QT_GUI)\n     // Loop until process is exit()ed from shutdown() function,\n     // called from ThreadRPCServer thread when a \"stop\" command is received.\n-    while (1)\n+    for ( ; ; )\n         Sleep(5000);\n #endif\n "
      },
      {
        "sha": "b594529846ec81e68e14d421976afcaf7e724edf",
        "filename": "src/irc.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a23a71eaf5778e2dcc16a870c200aeac1ee71e72/src/irc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a23a71eaf5778e2dcc16a870c200aeac1ee71e72/src/irc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/irc.cpp?ref=a23a71eaf5778e2dcc16a870c200aeac1ee71e72",
        "patch": "@@ -75,7 +75,7 @@ static bool Send(SOCKET hSocket, const char* pszSend)\n \n bool RecvLineIRC(SOCKET hSocket, string& strLine)\n {\n-    while (true)\n+    for ( ; ; )\n     {\n         bool fRet = RecvLine(hSocket, strLine);\n         if (fRet)\n@@ -98,7 +98,7 @@ bool RecvLineIRC(SOCKET hSocket, string& strLine)\n \n int RecvUntil(SOCKET hSocket, const char* psz1, const char* psz2=NULL, const char* psz3=NULL, const char* psz4=NULL)\n {\n-    while (true)\n+    for ( ; ; )\n     {\n         string strLine;\n         strLine.reserve(10000);\n@@ -133,7 +133,7 @@ bool Wait(int nSeconds)\n bool RecvCodeLine(SOCKET hSocket, const char* psz1, string& strRet)\n {\n     strRet.clear();\n-    while (true)\n+    for ( ; ; )\n     {\n         string strLine;\n         if (!RecvLineIRC(hSocket, strLine))"
      },
      {
        "sha": "38b3ac5f839a3ad79e5896cf97afe566cb048080",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a23a71eaf5778e2dcc16a870c200aeac1ee71e72/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a23a71eaf5778e2dcc16a870c200aeac1ee71e72/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=a23a71eaf5778e2dcc16a870c200aeac1ee71e72",
        "patch": "@@ -2723,7 +2723,7 @@ static unsigned int nCurrentBlockFile = 1;\n FILE* AppendBlockFile(unsigned int& nFileRet)\n {\n     nFileRet = 0;\n-    while (true)\n+    for ( ; ; )\n     {\n         FILE* file = OpenBlockFile(nCurrentBlockFile, 0, \"ab\");\n         if (!file)\n@@ -3808,7 +3808,7 @@ bool ProcessMessages(CNode* pfrom)\n     //  (x) data\n     //\n \n-    while (true)\n+    for ( ; ; )\n     {\n         // Don't bother if send buffer is too full to respond anyway\n         if (pfrom->vSend.size() >= SendBufferSize())"
      },
      {
        "sha": "5a853da7a998e5fa7df5522df4f77cade392da01",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a23a71eaf5778e2dcc16a870c200aeac1ee71e72/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a23a71eaf5778e2dcc16a870c200aeac1ee71e72/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=a23a71eaf5778e2dcc16a870c200aeac1ee71e72",
        "patch": "@@ -143,7 +143,7 @@ CAddress GetLocalAddress(const CNetAddr *paddrPeer)\n bool RecvLine(SOCKET hSocket, string& strLine)\n {\n     strLine = \"\";\n-    while (true)\n+    for ( ; ; )\n     {\n         char c;\n         int nBytes = recv(hSocket, &c, 1, 0);\n@@ -606,7 +606,7 @@ void ThreadSocketHandler2(void* parg)\n {\n     printf(\"ThreadSocketHandler started\\n\");\n     size_t nPrevNodeCount = 0;\n-    while (true)\n+    for ( ; ; )\n     {\n         //\n         // Disconnect nodes\n@@ -1154,7 +1154,7 @@ void ThreadOpenConnections2(void* parg)\n \n     // Initiate network connections\n     int64_t nStart = GetTime();\n-    while (true)\n+    for ( ; ; )\n     {\n         ProcessOneShot();\n \n@@ -1225,7 +1225,7 @@ void ThreadOpenConnections2(void* parg)\n         int64_t nANow = GetAdjustedTime();\n \n         int nTries = 0;\n-        while (true)\n+        for ( ; ; )\n         {\n             // use an nUnkBias between 10 (no outgoing connections) and 90 (8 outgoing connections)\n             CAddress addr = addrman.Select(10 + min(nOutbound,8)*10);"
      },
      {
        "sha": "8d2d30f569d827ea4bb44b20909c96080f5c7a03",
        "filename": "src/qt/qtipcserver.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a23a71eaf5778e2dcc16a870c200aeac1ee71e72/src/qt/qtipcserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a23a71eaf5778e2dcc16a870c200aeac1ee71e72/src/qt/qtipcserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/qtipcserver.cpp?ref=a23a71eaf5778e2dcc16a870c200aeac1ee71e72",
        "patch": "@@ -100,7 +100,7 @@ static void ipcThread2(void* pArg)\n     size_t nSize = 0;\n     unsigned int nPriority = 0;\n \n-    while (true)\n+    for ( ; ; )\n     {\n         ptime d = boost::posix_time::microsec_clock::universal_time() + millisec(100);\n         if (mq->timed_receive(&buffer, sizeof(buffer), nSize, nPriority, d))"
      },
      {
        "sha": "1b82de49a695aa700ede5a228464da9c18368b77",
        "filename": "src/script.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a23a71eaf5778e2dcc16a870c200aeac1ee71e72/src/script.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a23a71eaf5778e2dcc16a870c200aeac1ee71e72/src/script.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script.cpp?ref=a23a71eaf5778e2dcc16a870c200aeac1ee71e72",
        "patch": "@@ -1384,7 +1384,7 @@ bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, vector<vector<unsi\n         // Compare\n         CScript::const_iterator pc1 = script1.begin();\n         CScript::const_iterator pc2 = script2.begin();\n-        while (true)\n+        for ( ; ; )\n         {\n             if (pc1 == script1.end() && pc2 == script2.end())\n             {"
      },
      {
        "sha": "1235125c821d95d1c35d08de4d3d50eade13f33c",
        "filename": "src/txdb-bdb.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a23a71eaf5778e2dcc16a870c200aeac1ee71e72/src/txdb-bdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a23a71eaf5778e2dcc16a870c200aeac1ee71e72/src/txdb-bdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txdb-bdb.cpp?ref=a23a71eaf5778e2dcc16a870c200aeac1ee71e72",
        "patch": "@@ -362,7 +362,7 @@ bool CTxDB::LoadBlockIndexGuts()\n \n     // Load mapBlockIndex\n     unsigned int fFlags = DB_SET_RANGE;\n-    while (true)\n+    for ( ; ; )\n     {\n         // Read next record\n         CDataStream ssKey(SER_DISK, CLIENT_VERSION);"
      },
      {
        "sha": "8f956fe16413c5c6f29a3414706fe2401265bf14",
        "filename": "src/txdb-leveldb.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a23a71eaf5778e2dcc16a870c200aeac1ee71e72/src/txdb-leveldb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a23a71eaf5778e2dcc16a870c200aeac1ee71e72/src/txdb-leveldb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txdb-leveldb.cpp?ref=a23a71eaf5778e2dcc16a870c200aeac1ee71e72",
        "patch": "@@ -41,7 +41,7 @@ void init_blockindex(leveldb::Options& options, bool fRemoveOld = false) {\n         filesystem::remove_all(directory); // remove directory\n         unsigned int nFile = 1;\n \n-        while (true)\n+        for ( ; ; )\n         {\n             filesystem::path strBlockFile = GetDataDir() / strprintf(\"blk%04u.dat\", nFile);\n "
      },
      {
        "sha": "42d38f6925de1612dcf98983619dcc2c98e9bcea",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a23a71eaf5778e2dcc16a870c200aeac1ee71e72/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a23a71eaf5778e2dcc16a870c200aeac1ee71e72/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=a23a71eaf5778e2dcc16a870c200aeac1ee71e72",
        "patch": "@@ -306,7 +306,7 @@ string vstrprintf(const char *format, va_list ap)\n     char* p = buffer;\n     int limit = sizeof(buffer);\n     int ret;\n-    while (true)\n+    for ( ; ; )\n     {\n #ifndef _MSC_VER\n         va_list arg_ptr;\n@@ -370,7 +370,7 @@ void ParseString(const string& str, char c, vector<string>& v)\n         return;\n     string::size_type i1 = 0;\n     string::size_type i2;\n-    while (true)\n+    for ( ; ; )\n     {\n         i2 = str.find(c, i1);\n         if (i2 == str.npos)\n@@ -486,7 +486,7 @@ vector<unsigned char> ParseHex(const char* psz)\n {\n     // convert hex dump to vector\n     vector<unsigned char> vch;\n-    while (true)\n+    for ( ; ; )\n     {\n         while (isspace(*psz))\n             psz++;\n@@ -705,7 +705,7 @@ vector<unsigned char> DecodeBase64(const char* p, bool* pfInvalid)\n     int mode = 0;\n     int left = 0;\n \n-    while (1)\n+    for ( ; ; )\n     {\n          int dec = decode64_table[(unsigned char)*p];\n          if (dec == -1) break;\n@@ -858,7 +858,7 @@ vector<unsigned char> DecodeBase32(const char* p, bool* pfInvalid)\n     int mode = 0;\n     int left = 0;\n \n-    while (1)\n+    for ( ; ; )\n     {\n          int dec = decode32_table[(unsigned char)*p];\n          if (dec == -1) break;\n@@ -1001,7 +1001,7 @@ std::string DecodeDumpString(const std::string &str) {\n \n bool WildcardMatch(const char* psz, const char* mask)\n {\n-    while (true)\n+    for ( ; ; )\n     {\n         switch (*mask)\n         {"
      },
      {
        "sha": "87ffe936f9701a1f62e77b2bf0a366348955dfaf",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a23a71eaf5778e2dcc16a870c200aeac1ee71e72/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a23a71eaf5778e2dcc16a870c200aeac1ee71e72/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=a23a71eaf5778e2dcc16a870c200aeac1ee71e72",
        "patch": "@@ -1660,7 +1660,7 @@ bool CWallet::CreateTransaction(const vector<pair<CScript, int64_t> >& vecSend,\n         CTxDB txdb(\"r\");\n         {\n             nFeeRet = nTransactionFee;\n-            while (true)\n+            for ( ; ; )\n             {\n                 wtxNew.vin.clear();\n                 wtxNew.vout.clear();\n@@ -2048,7 +2048,7 @@ bool CWallet::CreateCoinStake(uint256 &hashTx, uint32_t nOut, uint32_t nGenerati\n     nCredit += GetProofOfStakeReward(nCoinAge, nBits, nGenerationTime);\n \n     int64_t nMinFee = 0;\n-    while (true)\n+    for ( ; ; )\n     {\n         // Set output amount\n         if (fDontSplitCoins)"
      },
      {
        "sha": "cd90f970783bed5db9c34ffbbe8467e1640f156a",
        "filename": "src/walletdb.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a23a71eaf5778e2dcc16a870c200aeac1ee71e72/src/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a23a71eaf5778e2dcc16a870c200aeac1ee71e72/src/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/walletdb.cpp?ref=a23a71eaf5778e2dcc16a870c200aeac1ee71e72",
        "patch": "@@ -85,7 +85,7 @@ void CWalletDB::ListAccountCreditDebit(const string& strAccount, list<CAccountin\n     if (!pcursor)\n         throw runtime_error(\"CWalletDB::ListAccountCreditDebit() : cannot create DB cursor\");\n     unsigned int fFlags = DB_SET_RANGE;\n-    while (true)\n+    for ( ; ; )\n     {\n         // Read next record\n         CDataStream ssKey(SER_DISK, CLIENT_VERSION);\n@@ -525,7 +525,7 @@ DBErrors CWalletDB::LoadWallet(CWallet* pwallet)\n             return DB_CORRUPT;\n         }\n \n-        while (true)\n+        for ( ; ; )\n         {\n             // Read next record\n             CDataStream ssKey(SER_DISK, CLIENT_VERSION);\n@@ -625,7 +625,7 @@ DBErrors CWalletDB::FindWalletTx(CWallet* pwallet, vector<uint256>& vTxHash)\n             return DB_CORRUPT;\n         }\n \n-        while (true)\n+        for ( ; ; )\n         {\n             // Read next record\n             CDataStream ssKey(SER_DISK, CLIENT_VERSION);"
      }
    ]
  },
  {
    "sha": "b4185e4f7cc2d0902e0f73b2e7a683c4f4bb6458",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiNDE4NWU0ZjdjYzJkMDkwMmUwZjczYjJlN2E2ODNjNGY0YmI2NDU4",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "CryptoManiac@users.noreply.github.com",
        "date": "2016-03-15T22:00:00Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "CryptoManiac@users.noreply.github.com",
        "date": "2016-03-15T22:00:00Z"
      },
      "message": "Merge pull request #290 from svost/patch\n\nMinor fix",
      "tree": {
        "sha": "233b21df01b0d75109b4d4f67dad79819aad8418",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/233b21df01b0d75109b4d4f67dad79819aad8418"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b4185e4f7cc2d0902e0f73b2e7a683c4f4bb6458",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b4185e4f7cc2d0902e0f73b2e7a683c4f4bb6458",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b4185e4f7cc2d0902e0f73b2e7a683c4f4bb6458",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b4185e4f7cc2d0902e0f73b2e7a683c4f4bb6458/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e3a906a0b907e63c56f2f4e06c2982261b58b7ab",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e3a906a0b907e63c56f2f4e06c2982261b58b7ab",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e3a906a0b907e63c56f2f4e06c2982261b58b7ab"
      },
      {
        "sha": "a23a71eaf5778e2dcc16a870c200aeac1ee71e72",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a23a71eaf5778e2dcc16a870c200aeac1ee71e72",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a23a71eaf5778e2dcc16a870c200aeac1ee71e72"
      }
    ],
    "stats": {
      "total": 85,
      "additions": 41,
      "deletions": 44
    },
    "files": [
      {
        "sha": "b555f0ba953951dcd4f4900a2b807cec97870f88",
        "filename": "src/bitcoinrpc.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b4185e4f7cc2d0902e0f73b2e7a683c4f4bb6458/src/bitcoinrpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b4185e4f7cc2d0902e0f73b2e7a683c4f4bb6458/src/bitcoinrpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoinrpc.cpp?ref=b4185e4f7cc2d0902e0f73b2e7a683c4f4bb6458",
        "patch": "@@ -441,7 +441,7 @@ int ReadHTTPStatus(std::basic_istream<char>& stream, int &proto)\n int ReadHTTPHeader(std::basic_istream<char>& stream, map<string, string>& mapHeadersRet)\n {\n     int nLen = 0;\n-    while (true)\n+    for ( ; ; )\n     {\n         string str;\n         std::getline(stream, str);\n@@ -992,7 +992,7 @@ void ThreadRPCServer3(void* parg)\n     AcceptedConnection *conn = (AcceptedConnection *) parg;\n \n     bool fRun = true;\n-    while (true)\n+    for ( ; ; )\n     {\n         if (fShutdown || !fRun)\n         {"
      },
      {
        "sha": "05d55a4b26f37f6a1df21ebd0d3f29a1b78f7495",
        "filename": "src/checkpoints.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b4185e4f7cc2d0902e0f73b2e7a683c4f4bb6458/src/checkpoints.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b4185e4f7cc2d0902e0f73b2e7a683c4f4bb6458/src/checkpoints.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/checkpoints.cpp?ref=b4185e4f7cc2d0902e0f73b2e7a683c4f4bb6458",
        "patch": "@@ -34,7 +34,7 @@ namespace Checkpoints\n         ( 200000, std::make_pair(uint256(\"0x0000000000029f8bbf66e6ea6f3e5db55009404aae0fe395a53dd33142b2bff2\"), 1441127233) )\n         ( 221047, std::make_pair(uint256(\"0xa28aef712e7aa0c285bfe29351ca21ed416689139e3063ef770fc826a8b9e9da\"), 1449431646) )\n     ;\n-    \n+\n     static ListBannedBlocks listBanned =\n         boost::assign::list_of\n         // Invalid block #221047 with future timestamp of 2016/02/23 09:24:17 UTC\n@@ -129,7 +129,7 @@ namespace Checkpoints\n             // that current checkpoint should be a descendant block\n             CBlockIndex* pindex = pindexSyncCheckpoint;\n             while (pindex->nHeight > pindexCheckpointRecv->nHeight)\n-                if (!(pindex = pindex->pprev))\n+                if ((pindex = pindex->pprev) == NULL)\n                     return error(\"ValidateSyncCheckpoint: pprev null - block index structure failure\");\n             if (pindex->GetBlockHash() != hashCheckpoint)\n             {\n@@ -144,7 +144,7 @@ namespace Checkpoints\n         // to verify.\n         CBlockIndex* pindex = pindexCheckpointRecv;\n         while (pindex->nHeight > pindexSyncCheckpoint->nHeight)\n-            if (!(pindex = pindex->pprev))\n+            if ((pindex = pindex->pprev) == NULL)\n                 return error(\"ValidateSyncCheckpoint: pprev2 null - block index structure failure\");\n         if (pindex->GetBlockHash() != hashSyncCheckpoint)\n         {\n@@ -246,7 +246,7 @@ namespace Checkpoints\n             // trace back to same height as sync-checkpoint\n             const CBlockIndex* pindex = pindexPrev;\n             while (pindex->nHeight > pindexSync->nHeight)\n-                if (!(pindex = pindex->pprev))\n+                if ((pindex = pindex->pprev) == NULL)\n                     return error(\"CheckSync: pprev null - block index structure failure\");\n             if (pindex->nHeight < pindexSync->nHeight || pindex->GetBlockHash() != hashSyncCheckpoint)\n                 return false; // only descendant of sync-checkpoint can pass check"
      },
      {
        "sha": "8fab885672f6ef502a04be4ef005d9d2177f25e6",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b4185e4f7cc2d0902e0f73b2e7a683c4f4bb6458/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b4185e4f7cc2d0902e0f73b2e7a683c4f4bb6458/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=b4185e4f7cc2d0902e0f73b2e7a683c4f4bb6458",
        "patch": "@@ -1013,7 +1013,7 @@ bool AppInit2()\n #if !defined(QT_GUI)\n     // Loop until process is exit()ed from shutdown() function,\n     // called from ThreadRPCServer thread when a \"stop\" command is received.\n-    while (1)\n+    for ( ; ; )\n         Sleep(5000);\n #endif\n "
      },
      {
        "sha": "b594529846ec81e68e14d421976afcaf7e724edf",
        "filename": "src/irc.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b4185e4f7cc2d0902e0f73b2e7a683c4f4bb6458/src/irc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b4185e4f7cc2d0902e0f73b2e7a683c4f4bb6458/src/irc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/irc.cpp?ref=b4185e4f7cc2d0902e0f73b2e7a683c4f4bb6458",
        "patch": "@@ -75,7 +75,7 @@ static bool Send(SOCKET hSocket, const char* pszSend)\n \n bool RecvLineIRC(SOCKET hSocket, string& strLine)\n {\n-    while (true)\n+    for ( ; ; )\n     {\n         bool fRet = RecvLine(hSocket, strLine);\n         if (fRet)\n@@ -98,7 +98,7 @@ bool RecvLineIRC(SOCKET hSocket, string& strLine)\n \n int RecvUntil(SOCKET hSocket, const char* psz1, const char* psz2=NULL, const char* psz3=NULL, const char* psz4=NULL)\n {\n-    while (true)\n+    for ( ; ; )\n     {\n         string strLine;\n         strLine.reserve(10000);\n@@ -133,7 +133,7 @@ bool Wait(int nSeconds)\n bool RecvCodeLine(SOCKET hSocket, const char* psz1, string& strRet)\n {\n     strRet.clear();\n-    while (true)\n+    for ( ; ; )\n     {\n         string strLine;\n         if (!RecvLineIRC(hSocket, strLine))"
      },
      {
        "sha": "38b3ac5f839a3ad79e5896cf97afe566cb048080",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b4185e4f7cc2d0902e0f73b2e7a683c4f4bb6458/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b4185e4f7cc2d0902e0f73b2e7a683c4f4bb6458/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=b4185e4f7cc2d0902e0f73b2e7a683c4f4bb6458",
        "patch": "@@ -2723,7 +2723,7 @@ static unsigned int nCurrentBlockFile = 1;\n FILE* AppendBlockFile(unsigned int& nFileRet)\n {\n     nFileRet = 0;\n-    while (true)\n+    for ( ; ; )\n     {\n         FILE* file = OpenBlockFile(nCurrentBlockFile, 0, \"ab\");\n         if (!file)\n@@ -3808,7 +3808,7 @@ bool ProcessMessages(CNode* pfrom)\n     //  (x) data\n     //\n \n-    while (true)\n+    for ( ; ; )\n     {\n         // Don't bother if send buffer is too full to respond anyway\n         if (pfrom->vSend.size() >= SendBufferSize())"
      },
      {
        "sha": "5a853da7a998e5fa7df5522df4f77cade392da01",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b4185e4f7cc2d0902e0f73b2e7a683c4f4bb6458/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b4185e4f7cc2d0902e0f73b2e7a683c4f4bb6458/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=b4185e4f7cc2d0902e0f73b2e7a683c4f4bb6458",
        "patch": "@@ -143,7 +143,7 @@ CAddress GetLocalAddress(const CNetAddr *paddrPeer)\n bool RecvLine(SOCKET hSocket, string& strLine)\n {\n     strLine = \"\";\n-    while (true)\n+    for ( ; ; )\n     {\n         char c;\n         int nBytes = recv(hSocket, &c, 1, 0);\n@@ -606,7 +606,7 @@ void ThreadSocketHandler2(void* parg)\n {\n     printf(\"ThreadSocketHandler started\\n\");\n     size_t nPrevNodeCount = 0;\n-    while (true)\n+    for ( ; ; )\n     {\n         //\n         // Disconnect nodes\n@@ -1154,7 +1154,7 @@ void ThreadOpenConnections2(void* parg)\n \n     // Initiate network connections\n     int64_t nStart = GetTime();\n-    while (true)\n+    for ( ; ; )\n     {\n         ProcessOneShot();\n \n@@ -1225,7 +1225,7 @@ void ThreadOpenConnections2(void* parg)\n         int64_t nANow = GetAdjustedTime();\n \n         int nTries = 0;\n-        while (true)\n+        for ( ; ; )\n         {\n             // use an nUnkBias between 10 (no outgoing connections) and 90 (8 outgoing connections)\n             CAddress addr = addrman.Select(10 + min(nOutbound,8)*10);"
      },
      {
        "sha": "8d2d30f569d827ea4bb44b20909c96080f5c7a03",
        "filename": "src/qt/qtipcserver.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b4185e4f7cc2d0902e0f73b2e7a683c4f4bb6458/src/qt/qtipcserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b4185e4f7cc2d0902e0f73b2e7a683c4f4bb6458/src/qt/qtipcserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/qtipcserver.cpp?ref=b4185e4f7cc2d0902e0f73b2e7a683c4f4bb6458",
        "patch": "@@ -100,7 +100,7 @@ static void ipcThread2(void* pArg)\n     size_t nSize = 0;\n     unsigned int nPriority = 0;\n \n-    while (true)\n+    for ( ; ; )\n     {\n         ptime d = boost::posix_time::microsec_clock::universal_time() + millisec(100);\n         if (mq->timed_receive(&buffer, sizeof(buffer), nSize, nPriority, d))"
      },
      {
        "sha": "1b82de49a695aa700ede5a228464da9c18368b77",
        "filename": "src/script.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b4185e4f7cc2d0902e0f73b2e7a683c4f4bb6458/src/script.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b4185e4f7cc2d0902e0f73b2e7a683c4f4bb6458/src/script.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script.cpp?ref=b4185e4f7cc2d0902e0f73b2e7a683c4f4bb6458",
        "patch": "@@ -1384,7 +1384,7 @@ bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, vector<vector<unsi\n         // Compare\n         CScript::const_iterator pc1 = script1.begin();\n         CScript::const_iterator pc2 = script2.begin();\n-        while (true)\n+        for ( ; ; )\n         {\n             if (pc1 == script1.end() && pc2 == script2.end())\n             {"
      },
      {
        "sha": "1235125c821d95d1c35d08de4d3d50eade13f33c",
        "filename": "src/txdb-bdb.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b4185e4f7cc2d0902e0f73b2e7a683c4f4bb6458/src/txdb-bdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b4185e4f7cc2d0902e0f73b2e7a683c4f4bb6458/src/txdb-bdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txdb-bdb.cpp?ref=b4185e4f7cc2d0902e0f73b2e7a683c4f4bb6458",
        "patch": "@@ -362,7 +362,7 @@ bool CTxDB::LoadBlockIndexGuts()\n \n     // Load mapBlockIndex\n     unsigned int fFlags = DB_SET_RANGE;\n-    while (true)\n+    for ( ; ; )\n     {\n         // Read next record\n         CDataStream ssKey(SER_DISK, CLIENT_VERSION);"
      },
      {
        "sha": "8f956fe16413c5c6f29a3414706fe2401265bf14",
        "filename": "src/txdb-leveldb.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b4185e4f7cc2d0902e0f73b2e7a683c4f4bb6458/src/txdb-leveldb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b4185e4f7cc2d0902e0f73b2e7a683c4f4bb6458/src/txdb-leveldb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txdb-leveldb.cpp?ref=b4185e4f7cc2d0902e0f73b2e7a683c4f4bb6458",
        "patch": "@@ -41,7 +41,7 @@ void init_blockindex(leveldb::Options& options, bool fRemoveOld = false) {\n         filesystem::remove_all(directory); // remove directory\n         unsigned int nFile = 1;\n \n-        while (true)\n+        for ( ; ; )\n         {\n             filesystem::path strBlockFile = GetDataDir() / strprintf(\"blk%04u.dat\", nFile);\n "
      },
      {
        "sha": "42d38f6925de1612dcf98983619dcc2c98e9bcea",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b4185e4f7cc2d0902e0f73b2e7a683c4f4bb6458/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b4185e4f7cc2d0902e0f73b2e7a683c4f4bb6458/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=b4185e4f7cc2d0902e0f73b2e7a683c4f4bb6458",
        "patch": "@@ -306,7 +306,7 @@ string vstrprintf(const char *format, va_list ap)\n     char* p = buffer;\n     int limit = sizeof(buffer);\n     int ret;\n-    while (true)\n+    for ( ; ; )\n     {\n #ifndef _MSC_VER\n         va_list arg_ptr;\n@@ -370,7 +370,7 @@ void ParseString(const string& str, char c, vector<string>& v)\n         return;\n     string::size_type i1 = 0;\n     string::size_type i2;\n-    while (true)\n+    for ( ; ; )\n     {\n         i2 = str.find(c, i1);\n         if (i2 == str.npos)\n@@ -486,7 +486,7 @@ vector<unsigned char> ParseHex(const char* psz)\n {\n     // convert hex dump to vector\n     vector<unsigned char> vch;\n-    while (true)\n+    for ( ; ; )\n     {\n         while (isspace(*psz))\n             psz++;\n@@ -705,7 +705,7 @@ vector<unsigned char> DecodeBase64(const char* p, bool* pfInvalid)\n     int mode = 0;\n     int left = 0;\n \n-    while (1)\n+    for ( ; ; )\n     {\n          int dec = decode64_table[(unsigned char)*p];\n          if (dec == -1) break;\n@@ -858,7 +858,7 @@ vector<unsigned char> DecodeBase32(const char* p, bool* pfInvalid)\n     int mode = 0;\n     int left = 0;\n \n-    while (1)\n+    for ( ; ; )\n     {\n          int dec = decode32_table[(unsigned char)*p];\n          if (dec == -1) break;\n@@ -1001,7 +1001,7 @@ std::string DecodeDumpString(const std::string &str) {\n \n bool WildcardMatch(const char* psz, const char* mask)\n {\n-    while (true)\n+    for ( ; ; )\n     {\n         switch (*mask)\n         {"
      },
      {
        "sha": "8430dc7ae5e6a20781deb5bdf743e975accd0a59",
        "filename": "src/version.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 13,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b4185e4f7cc2d0902e0f73b2e7a683c4f4bb6458/src/version.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b4185e4f7cc2d0902e0f73b2e7a683c4f4bb6458/src/version.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/version.cpp?ref=b4185e4f7cc2d0902e0f73b2e7a683c4f4bb6458",
        "patch": "@@ -18,27 +18,24 @@ const std::string CLIENT_NAME(\"Satoshi\");\n #endif\n \n // Compiler name\n-#if defined(__GNUC__) && defined(__INTEL_COMPILER)\n-/*code specific to linux icc compiler*/\n-#define CL_NAME   \"-icc\"\n-#else\n-#ifdef __GNUC__\n-/*code for GNU C compiler */\n-#define CL_NAME   \"-gcc\"\n+#ifdef __INTEL_COMPILER\n+//code specific to intel compiler\n+#define CL_NAME   \"-icpc\"\n #elif _MSC_VER\n-/*usually has the version number in _MSC_VER*/\n-/*code specific to MSVC compiler*/\n+//code specific to MSVC compiler\n #define CL_NAME   \"-msvc\"\n #elif __clang__\n-/*code specific to clang compilers*/\n+//code specific to clang compilers\n #define CL_NAME   \"-clang\"\n+#elif __GNUC__\n+//code for GNU C compiler\n+#define CL_NAME   \"-gcc\"\n #elif __MINGW32__\n-/*code specific to mingw compilers*/\n+//code specific to mingw compilers\n #define CL_NAME   \"-mingw\"\n #else\n #define CL_NAME   \"-genericcl\"\n-/*others*/\n-#endif\n+//others\n #endif\n \n // The following part of the code determines the CLIENT_BUILD variable."
      },
      {
        "sha": "87ffe936f9701a1f62e77b2bf0a366348955dfaf",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b4185e4f7cc2d0902e0f73b2e7a683c4f4bb6458/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b4185e4f7cc2d0902e0f73b2e7a683c4f4bb6458/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=b4185e4f7cc2d0902e0f73b2e7a683c4f4bb6458",
        "patch": "@@ -1660,7 +1660,7 @@ bool CWallet::CreateTransaction(const vector<pair<CScript, int64_t> >& vecSend,\n         CTxDB txdb(\"r\");\n         {\n             nFeeRet = nTransactionFee;\n-            while (true)\n+            for ( ; ; )\n             {\n                 wtxNew.vin.clear();\n                 wtxNew.vout.clear();\n@@ -2048,7 +2048,7 @@ bool CWallet::CreateCoinStake(uint256 &hashTx, uint32_t nOut, uint32_t nGenerati\n     nCredit += GetProofOfStakeReward(nCoinAge, nBits, nGenerationTime);\n \n     int64_t nMinFee = 0;\n-    while (true)\n+    for ( ; ; )\n     {\n         // Set output amount\n         if (fDontSplitCoins)"
      },
      {
        "sha": "cd90f970783bed5db9c34ffbbe8467e1640f156a",
        "filename": "src/walletdb.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b4185e4f7cc2d0902e0f73b2e7a683c4f4bb6458/src/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b4185e4f7cc2d0902e0f73b2e7a683c4f4bb6458/src/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/walletdb.cpp?ref=b4185e4f7cc2d0902e0f73b2e7a683c4f4bb6458",
        "patch": "@@ -85,7 +85,7 @@ void CWalletDB::ListAccountCreditDebit(const string& strAccount, list<CAccountin\n     if (!pcursor)\n         throw runtime_error(\"CWalletDB::ListAccountCreditDebit() : cannot create DB cursor\");\n     unsigned int fFlags = DB_SET_RANGE;\n-    while (true)\n+    for ( ; ; )\n     {\n         // Read next record\n         CDataStream ssKey(SER_DISK, CLIENT_VERSION);\n@@ -525,7 +525,7 @@ DBErrors CWalletDB::LoadWallet(CWallet* pwallet)\n             return DB_CORRUPT;\n         }\n \n-        while (true)\n+        for ( ; ; )\n         {\n             // Read next record\n             CDataStream ssKey(SER_DISK, CLIENT_VERSION);\n@@ -625,7 +625,7 @@ DBErrors CWalletDB::FindWalletTx(CWallet* pwallet, vector<uint256>& vTxHash)\n             return DB_CORRUPT;\n         }\n \n-        while (true)\n+        for ( ; ; )\n         {\n             // Read next record\n             CDataStream ssKey(SER_DISK, CLIENT_VERSION);"
      }
    ]
  },
  {
    "sha": "de656fc87cd07091cc3a3ae214b0d03a7e453352",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkZTY1NmZjODdjZDA3MDkxY2MzYTNhZTIxNGIwZDAzYTdlNDUzMzUy",
    "commit": {
      "author": {
        "name": "svost",
        "email": "ya.nowa@yandex.ru",
        "date": "2016-03-17T06:53:21Z"
      },
      "committer": {
        "name": "svost",
        "email": "ya.nowa@yandex.ru",
        "date": "2016-03-17T06:53:21Z"
      },
      "message": "Fix msvc c4127 warning",
      "tree": {
        "sha": "d9cdd7d377b15408cb201455b4667d963045c7bc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d9cdd7d377b15408cb201455b4667d963045c7bc"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/de656fc87cd07091cc3a3ae214b0d03a7e453352",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/de656fc87cd07091cc3a3ae214b0d03a7e453352",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/de656fc87cd07091cc3a3ae214b0d03a7e453352",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/de656fc87cd07091cc3a3ae214b0d03a7e453352/comments",
    "author": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b4185e4f7cc2d0902e0f73b2e7a683c4f4bb6458",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b4185e4f7cc2d0902e0f73b2e7a683c4f4bb6458",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b4185e4f7cc2d0902e0f73b2e7a683c4f4bb6458"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 4,
      "deletions": 1
    },
    "files": [
      {
        "sha": "4bda99d42515d31bb409df2dc89a446a2cc3063b",
        "filename": "src/bignum.h",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de656fc87cd07091cc3a3ae214b0d03a7e453352/src/bignum.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de656fc87cd07091cc3a3ae214b0d03a7e453352/src/bignum.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bignum.h?ref=de656fc87cd07091cc3a3ae214b0d03a7e453352",
        "patch": "@@ -206,10 +206,13 @@ class CBigNum : public BIGNUM\n         return n;\n     }\n \n+    //supress msvc C4127: conditional expression is constant\n+    inline bool check(bool value) {return value;}\n+\n     void setuint64(uint64_t n)\n     {\n         // Use BN_set_word if word size is sufficient for uint64_t\n-        if (sizeof(n) <= sizeof(BN_ULONG))\n+        if (check(sizeof(n) <= sizeof(BN_ULONG)))\n         {\n             if (!BN_set_word(this, (BN_ULONG)n))\n                 throw bignum_error(\"CBigNum conversion from uint64_t : BN_set_word failed\");"
      }
    ]
  },
  {
    "sha": "5fc478219a3b5302c4cb05fc89eeb7fce9ed6a53",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ZmM0NzgyMTlhM2I1MzAyYzRjYjA1ZmM4OWVlYjdmY2U5ZWQ2YTUz",
    "commit": {
      "author": {
        "name": "svost",
        "email": "ya.nowa@yandex.ru",
        "date": "2016-03-17T17:46:48Z"
      },
      "committer": {
        "name": "svost",
        "email": "ya.nowa@yandex.ru",
        "date": "2016-03-17T17:46:48Z"
      },
      "message": "Initializing: type mismatch",
      "tree": {
        "sha": "0213f70779c2e71a047e5fe7bc07516886f81557",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0213f70779c2e71a047e5fe7bc07516886f81557"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5fc478219a3b5302c4cb05fc89eeb7fce9ed6a53",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5fc478219a3b5302c4cb05fc89eeb7fce9ed6a53",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5fc478219a3b5302c4cb05fc89eeb7fce9ed6a53",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5fc478219a3b5302c4cb05fc89eeb7fce9ed6a53/comments",
    "author": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "de656fc87cd07091cc3a3ae214b0d03a7e453352",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/de656fc87cd07091cc3a3ae214b0d03a7e453352",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/de656fc87cd07091cc3a3ae214b0d03a7e453352"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "62f26fdb8eed64cce76f733c8a15fa58ff0b2b51",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5fc478219a3b5302c4cb05fc89eeb7fce9ed6a53/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5fc478219a3b5302c4cb05fc89eeb7fce9ed6a53/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=5fc478219a3b5302c4cb05fc89eeb7fce9ed6a53",
        "patch": "@@ -523,7 +523,7 @@ template <typename T> class CMedianFilter\n \n     T median() const\n     {\n-        int size = vSorted.size();\n+        size_t size = vSorted.size();\n         assert(size>0);\n         if(size & 1) // Odd number of elements\n         {"
      }
    ]
  },
  {
    "sha": "2a6d1dcc77488b68ec43e3ec39313820b308d603",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyYTZkMWRjYzc3NDg4YjY4ZWM0M2UzZWMzOTMxMzgyMGIzMDhkNjAz",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "CryptoManiac@users.noreply.github.com",
        "date": "2016-03-17T17:54:03Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "CryptoManiac@users.noreply.github.com",
        "date": "2016-03-17T17:54:03Z"
      },
      "message": "Merge pull request #291 from svost/patch\n\nMinor fix",
      "tree": {
        "sha": "0213f70779c2e71a047e5fe7bc07516886f81557",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0213f70779c2e71a047e5fe7bc07516886f81557"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2a6d1dcc77488b68ec43e3ec39313820b308d603",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2a6d1dcc77488b68ec43e3ec39313820b308d603",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2a6d1dcc77488b68ec43e3ec39313820b308d603",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2a6d1dcc77488b68ec43e3ec39313820b308d603/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b4185e4f7cc2d0902e0f73b2e7a683c4f4bb6458",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b4185e4f7cc2d0902e0f73b2e7a683c4f4bb6458",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b4185e4f7cc2d0902e0f73b2e7a683c4f4bb6458"
      },
      {
        "sha": "5fc478219a3b5302c4cb05fc89eeb7fce9ed6a53",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5fc478219a3b5302c4cb05fc89eeb7fce9ed6a53",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5fc478219a3b5302c4cb05fc89eeb7fce9ed6a53"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 5,
      "deletions": 2
    },
    "files": [
      {
        "sha": "4bda99d42515d31bb409df2dc89a446a2cc3063b",
        "filename": "src/bignum.h",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2a6d1dcc77488b68ec43e3ec39313820b308d603/src/bignum.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2a6d1dcc77488b68ec43e3ec39313820b308d603/src/bignum.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bignum.h?ref=2a6d1dcc77488b68ec43e3ec39313820b308d603",
        "patch": "@@ -206,10 +206,13 @@ class CBigNum : public BIGNUM\n         return n;\n     }\n \n+    //supress msvc C4127: conditional expression is constant\n+    inline bool check(bool value) {return value;}\n+\n     void setuint64(uint64_t n)\n     {\n         // Use BN_set_word if word size is sufficient for uint64_t\n-        if (sizeof(n) <= sizeof(BN_ULONG))\n+        if (check(sizeof(n) <= sizeof(BN_ULONG)))\n         {\n             if (!BN_set_word(this, (BN_ULONG)n))\n                 throw bignum_error(\"CBigNum conversion from uint64_t : BN_set_word failed\");"
      },
      {
        "sha": "62f26fdb8eed64cce76f733c8a15fa58ff0b2b51",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2a6d1dcc77488b68ec43e3ec39313820b308d603/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2a6d1dcc77488b68ec43e3ec39313820b308d603/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=2a6d1dcc77488b68ec43e3ec39313820b308d603",
        "patch": "@@ -523,7 +523,7 @@ template <typename T> class CMedianFilter\n \n     T median() const\n     {\n-        int size = vSorted.size();\n+        size_t size = vSorted.size();\n         assert(size>0);\n         if(size & 1) // Odd number of elements\n         {"
      }
    ]
  },
  {
    "sha": "fa8a69c1fcddde9e5b2bfa5e09ba631658d2f08f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYThhNjljMWZjZGRkZTllNWIyYmZhNWUwOWJhNjMxNjU4ZDJmMDhm",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-17T18:57:55Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-17T18:57:55Z"
      },
      "message": "Checkpoint",
      "tree": {
        "sha": "507639302a33a8aa548a671a571382307a02375b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/507639302a33a8aa548a671a571382307a02375b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa8a69c1fcddde9e5b2bfa5e09ba631658d2f08f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa8a69c1fcddde9e5b2bfa5e09ba631658d2f08f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa8a69c1fcddde9e5b2bfa5e09ba631658d2f08f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa8a69c1fcddde9e5b2bfa5e09ba631658d2f08f/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2a6d1dcc77488b68ec43e3ec39313820b308d603",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2a6d1dcc77488b68ec43e3ec39313820b308d603",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2a6d1dcc77488b68ec43e3ec39313820b308d603"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 2,
      "deletions": 0
    },
    "files": [
      {
        "sha": "54f57901beafcab207ada461c056152ddc4194cb",
        "filename": "src/checkpoints.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa8a69c1fcddde9e5b2bfa5e09ba631658d2f08f/src/checkpoints.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa8a69c1fcddde9e5b2bfa5e09ba631658d2f08f/src/checkpoints.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/checkpoints.cpp?ref=fa8a69c1fcddde9e5b2bfa5e09ba631658d2f08f",
        "patch": "@@ -33,6 +33,7 @@ namespace Checkpoints\n         ( 160000, std::make_pair(uint256(\"0x000000000001cb1133043d38d077c0e93f66c8b2566779f10f182137d1e34a68\"), 1425150237) )\n         ( 200000, std::make_pair(uint256(\"0x0000000000029f8bbf66e6ea6f3e5db55009404aae0fe395a53dd33142b2bff2\"), 1441127233) )\n         ( 221047, std::make_pair(uint256(\"0xa28aef712e7aa0c285bfe29351ca21ed416689139e3063ef770fc826a8b9e9da\"), 1449431646) )\n+        ( 243100, std::make_pair(uint256(\"0x000000000006522d1ebc0734cb0e6b83f5d4da0c3cbc72bd91b82016f611c4f0\"), 1458215793) )\n     ;\n \n     static ListBannedBlocks listBanned ="
      },
      {
        "sha": "c8dc5514131f16516bc7591be0786aabb13041ec",
        "filename": "src/kernel.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa8a69c1fcddde9e5b2bfa5e09ba631658d2f08f/src/kernel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa8a69c1fcddde9e5b2bfa5e09ba631658d2f08f/src/kernel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/kernel.cpp?ref=fa8a69c1fcddde9e5b2bfa5e09ba631658d2f08f",
        "patch": "@@ -38,6 +38,7 @@ static std::map<int, unsigned int> mapStakeModifierCheckpoints =\n         (160000, 0x789df0f0u )\n         (200000, 0x01ec1503u )\n         (221047, 0x0b39ef50u )\n+        (243100, 0xe928d83au )\n     ;\n \n // Hard checkpoints of stake modifiers to ensure they are deterministic (testNet)"
      }
    ]
  },
  {
    "sha": "30d7d109c9c741753bc379707e45d4325d4fbbd8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozMGQ3ZDEwOWM5Yzc0MTc1M2JjMzc5NzA3ZTQ1ZDQzMjVkNGZiYmQ4",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-17T19:53:25Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-17T19:53:25Z"
      },
      "message": "Bump client version",
      "tree": {
        "sha": "bab61836cda72745c3a530c32d6ba0e9aee6e84b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bab61836cda72745c3a530c32d6ba0e9aee6e84b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/30d7d109c9c741753bc379707e45d4325d4fbbd8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/30d7d109c9c741753bc379707e45d4325d4fbbd8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/30d7d109c9c741753bc379707e45d4325d4fbbd8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/30d7d109c9c741753bc379707e45d4325d4fbbd8/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa8a69c1fcddde9e5b2bfa5e09ba631658d2f08f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa8a69c1fcddde9e5b2bfa5e09ba631658d2f08f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa8a69c1fcddde9e5b2bfa5e09ba631658d2f08f"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "14ff66fe37ff071f40c9036d98bf24bf57822226",
        "filename": "src/clientversion.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/30d7d109c9c741753bc379707e45d4325d4fbbd8/src/clientversion.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/30d7d109c9c741753bc379707e45d4325d4fbbd8/src/clientversion.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/clientversion.h?ref=30d7d109c9c741753bc379707e45d4325d4fbbd8",
        "patch": "@@ -9,7 +9,7 @@\n #define CLIENT_VERSION_MAJOR       0\n #define CLIENT_VERSION_MINOR       7\n #define CLIENT_VERSION_REVISION    6\n-#define CLIENT_VERSION_BUILD       5\n+#define CLIENT_VERSION_BUILD       6\n \n // Converts the parameter X to a string after macro replacement on X has been performed.\n // Don't merge these into one macro!"
      },
      {
        "sha": "feb6edf8f47a73c12f0fbe3713c3f3f8bcaf4ffb",
        "filename": "src/version.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/30d7d109c9c741753bc379707e45d4325d4fbbd8/src/version.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/30d7d109c9c741753bc379707e45d4325d4fbbd8/src/version.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/version.h?ref=30d7d109c9c741753bc379707e45d4325d4fbbd8",
        "patch": "@@ -45,6 +45,6 @@ static const int NOBLKS_VERSION_END = 60006;\n \n #define DISPLAY_VERSION_MAJOR       0\n #define DISPLAY_VERSION_MINOR       5\n-#define DISPLAY_VERSION_REVISION    5\n+#define DISPLAY_VERSION_REVISION    6\n \n #endif"
      }
    ]
  },
  {
    "sha": "5ad982d70e9c1ee8c44e661dc613c9f6e5b394b4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1YWQ5ODJkNzBlOWMxZWU4YzQ0ZTY2MWRjNjEzYzlmNmU1YjM5NGI0",
    "commit": {
      "author": {
        "name": "svost",
        "email": "ya.nowa@yandex.ru",
        "date": "2016-03-18T05:58:36Z"
      },
      "committer": {
        "name": "svost",
        "email": "ya.nowa@yandex.ru",
        "date": "2016-03-18T05:58:36Z"
      },
      "message": "Switch from boost types to <stdint.h>\nsee 6cea4ed\ngrep -rn '::uint64_t' * && grep -rn '::int64_t' *",
      "tree": {
        "sha": "0413e0dd8434354e25ddd8ed9421e7322e654f8c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0413e0dd8434354e25ddd8ed9421e7322e654f8c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5ad982d70e9c1ee8c44e661dc613c9f6e5b394b4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5ad982d70e9c1ee8c44e661dc613c9f6e5b394b4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5ad982d70e9c1ee8c44e661dc613c9f6e5b394b4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5ad982d70e9c1ee8c44e661dc613c9f6e5b394b4/comments",
    "author": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "30d7d109c9c741753bc379707e45d4325d4fbbd8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/30d7d109c9c741753bc379707e45d4325d4fbbd8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/30d7d109c9c741753bc379707e45d4325d4fbbd8"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "5e1ae64457aac07d2b2455b601bf3d41ee69986f",
        "filename": "src/json/json_spirit_value.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5ad982d70e9c1ee8c44e661dc613c9f6e5b394b4/src/json/json_spirit_value.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5ad982d70e9c1ee8c44e661dc613c9f6e5b394b4/src/json/json_spirit_value.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/json/json_spirit_value.h?ref=5ad982d70e9c1ee8c44e661dc613c9f6e5b394b4",
        "patch": "@@ -64,8 +64,8 @@ namespace json_spirit\n         const Array&       get_array()  const;\n         bool               get_bool()   const;\n         int                get_int()    const;\n-        boost::int64_t     get_int64()  const;\n-        boost::uint64_t    get_uint64() const;\n+        int64_t            get_int64()  const;\n+        uint64_t           get_uint64() const;\n         double             get_real()   const;\n \n         Object& get_obj();\n@@ -273,7 +273,7 @@ namespace json_spirit\n     template< class Config >\n     Value_impl< Config >::Value_impl( uint64_t value )\n     :   type_( int_type )\n-    ,   v_( static_cast< boost::int64_t >( value ) )\n+    ,   v_( static_cast< int64_t >( value ) )\n     ,   is_uint64_( true )\n     {\n     }"
      }
    ]
  },
  {
    "sha": "ea1c500f6f2d88a79f952cad6aad98fa9145b4cc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplYTFjNTAwZjZmMmQ4OGE3OWY5NTJjYWQ2YWFkOThmYTkxNDViNGNj",
    "commit": {
      "author": {
        "name": "svost",
        "email": "ya.nowa@yandex.ru",
        "date": "2016-03-18T08:18:29Z"
      },
      "committer": {
        "name": "svost",
        "email": "ya.nowa@yandex.ru",
        "date": "2016-03-18T08:18:29Z"
      },
      "message": "Fix set of msvc C4127 warning",
      "tree": {
        "sha": "ca7090e0d7d1bf1e3de8199248f6b2bf437932b2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ca7090e0d7d1bf1e3de8199248f6b2bf437932b2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ea1c500f6f2d88a79f952cad6aad98fa9145b4cc",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ea1c500f6f2d88a79f952cad6aad98fa9145b4cc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ea1c500f6f2d88a79f952cad6aad98fa9145b4cc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ea1c500f6f2d88a79f952cad6aad98fa9145b4cc/comments",
    "author": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5ad982d70e9c1ee8c44e661dc613c9f6e5b394b4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5ad982d70e9c1ee8c44e661dc613c9f6e5b394b4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5ad982d70e9c1ee8c44e661dc613c9f6e5b394b4"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 10,
      "deletions": 10
    },
    "files": [
      {
        "sha": "f24e7e78202c89d64b4a6354ce6ebd65e2832215",
        "filename": "src/addrman.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea1c500f6f2d88a79f952cad6aad98fa9145b4cc/src/addrman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea1c500f6f2d88a79f952cad6aad98fa9145b4cc/src/addrman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrman.cpp?ref=ea1c500f6f2d88a79f952cad6aad98fa9145b4cc",
        "patch": "@@ -398,7 +398,7 @@ CAddress CAddrMan::Select_(int nUnkBias)\n     {\n         // use a tried node\n         double fChanceFactor = 1.0;\n-        while(1)\n+        for ( ; ; )\n         {\n             int nKBucket = GetRandInt(vvTried.size());\n             std::vector<int> &vTried = vvTried[nKBucket];\n@@ -413,7 +413,7 @@ CAddress CAddrMan::Select_(int nUnkBias)\n     } else {\n         // use a new node\n         double fChanceFactor = 1.0;\n-        while(1)\n+        for ( ; ; )\n         {\n             int nUBucket = GetRandInt(vvNew.size());\n             std::set<int> &vNew = vvNew[nUBucket];"
      },
      {
        "sha": "9d3b9983add1f6719b561a527e4abfd37683932d",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea1c500f6f2d88a79f952cad6aad98fa9145b4cc/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea1c500f6f2d88a79f952cad6aad98fa9145b4cc/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=ea1c500f6f2d88a79f952cad6aad98fa9145b4cc",
        "patch": "@@ -1760,7 +1760,7 @@ bool StopNode()\n     if (semOutbound)\n         for (int i=0; i<MAX_OUTBOUND_CONNECTIONS; i++)\n             semOutbound->post();\n-    do\n+    for ( ; ; )\n     {\n         int nThreadsRunning = 0;\n         for (int n = 0; n < THREAD_MAX; n++)\n@@ -1770,7 +1770,7 @@ bool StopNode()\n         if (GetTime() - nStart > 20)\n             break;\n         Sleep(20);\n-    } while(true);\n+    };\n     if (vnThreadsRunning[THREAD_SOCKETHANDLER] > 0) printf(\"ThreadSocketHandler still running\\n\");\n     if (vnThreadsRunning[THREAD_OPENCONNECTIONS] > 0) printf(\"ThreadOpenConnections still running\\n\");\n     if (vnThreadsRunning[THREAD_MESSAGEHANDLER] > 0) printf(\"ThreadMessageHandler still running\\n\");"
      },
      {
        "sha": "75c1c82ab2d025f9a14795037b7b4d48786b7e4d",
        "filename": "src/qt/intro.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea1c500f6f2d88a79f952cad6aad98fa9145b4cc/src/qt/intro.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea1c500f6f2d88a79f952cad6aad98fa9145b4cc/src/qt/intro.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/intro.cpp?ref=ea1c500f6f2d88a79f952cad6aad98fa9145b4cc",
        "patch": "@@ -169,7 +169,7 @@ void Intro::pickDataDirectory()\n         intro.setDataDirectory(dataDir);\n         intro.setWindowIcon(QIcon(\":icons/bitcoin\"));\n \n-        while(true)\n+        for ( ; ; )\n         {\n             if(!intro.exec())\n             {"
      },
      {
        "sha": "aa8f876342b0fa50bfee3ad48ae7457e43fd39d4",
        "filename": "src/rpcwallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea1c500f6f2d88a79f952cad6aad98fa9145b4cc/src/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea1c500f6f2d88a79f952cad6aad98fa9145b4cc/src/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.cpp?ref=ea1c500f6f2d88a79f952cad6aad98fa9145b4cc",
        "patch": "@@ -1511,7 +1511,7 @@ void ThreadCleanWalletPassphrase(void* parg)\n     {\n         nWalletUnlockTime = nMyWakeTime;\n \n-        do\n+        for ( ; ; )\n         {\n             if (nWalletUnlockTime==0)\n                 break;\n@@ -1523,7 +1523,7 @@ void ThreadCleanWalletPassphrase(void* parg)\n             Sleep(nToSleep);\n             ENTER_CRITICAL_SECTION(cs_nWalletUnlockTime);\n \n-        } while(1);\n+        };\n \n         if (nWalletUnlockTime)\n         {"
      },
      {
        "sha": "bdcd830591d570dbde8aacb9d4ab8312b0cc406f",
        "filename": "src/serialize.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea1c500f6f2d88a79f952cad6aad98fa9145b4cc/src/serialize.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea1c500f6f2d88a79f952cad6aad98fa9145b4cc/src/serialize.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/serialize.h?ref=ea1c500f6f2d88a79f952cad6aad98fa9145b4cc",
        "patch": "@@ -270,7 +270,7 @@ template<typename I>\n inline unsigned int GetSizeOfVarInt(I n)\n {\n     int nRet = 0;\n-    while(true) {\n+    for ( ; ; ) {\n         nRet++;\n         if (n <= 0x7F)\n             break;\n@@ -284,7 +284,7 @@ void WriteVarInt(Stream& os, I n)\n {\n     unsigned char tmp[(sizeof(n)*8+6)/7];\n     int len=0;\n-    while(true) {\n+    for ( ; ; ) {\n         tmp[len] = (n & 0x7F) | (len ? 0x80 : 0x00);\n         if (n <= 0x7F)\n             break;\n@@ -300,7 +300,7 @@ template<typename Stream, typename I>\n I ReadVarInt(Stream& is)\n {\n     I n = 0;\n-    while(true) {\n+    for ( ; ; ) {\n         unsigned char chData;\n         READDATA(is, chData);\n         n = (n << 7) | (chData & 0x7F);"
      }
    ]
  },
  {
    "sha": "c1aacb3c27dfb824a1fde1e9b3bff764e499115d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjMWFhY2IzYzI3ZGZiODI0YTFmZGUxZTliM2JmZjc2NGU0OTkxMTVk",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "CryptoManiac@users.noreply.github.com",
        "date": "2016-03-21T09:17:51Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "CryptoManiac@users.noreply.github.com",
        "date": "2016-03-21T09:17:51Z"
      },
      "message": "Merge pull request #292 from svost/patch\n\nMinor fix",
      "tree": {
        "sha": "ca7090e0d7d1bf1e3de8199248f6b2bf437932b2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ca7090e0d7d1bf1e3de8199248f6b2bf437932b2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c1aacb3c27dfb824a1fde1e9b3bff764e499115d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c1aacb3c27dfb824a1fde1e9b3bff764e499115d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c1aacb3c27dfb824a1fde1e9b3bff764e499115d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c1aacb3c27dfb824a1fde1e9b3bff764e499115d/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "30d7d109c9c741753bc379707e45d4325d4fbbd8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/30d7d109c9c741753bc379707e45d4325d4fbbd8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/30d7d109c9c741753bc379707e45d4325d4fbbd8"
      },
      {
        "sha": "ea1c500f6f2d88a79f952cad6aad98fa9145b4cc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ea1c500f6f2d88a79f952cad6aad98fa9145b4cc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ea1c500f6f2d88a79f952cad6aad98fa9145b4cc"
      }
    ],
    "stats": {
      "total": 26,
      "additions": 13,
      "deletions": 13
    },
    "files": [
      {
        "sha": "f24e7e78202c89d64b4a6354ce6ebd65e2832215",
        "filename": "src/addrman.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c1aacb3c27dfb824a1fde1e9b3bff764e499115d/src/addrman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c1aacb3c27dfb824a1fde1e9b3bff764e499115d/src/addrman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrman.cpp?ref=c1aacb3c27dfb824a1fde1e9b3bff764e499115d",
        "patch": "@@ -398,7 +398,7 @@ CAddress CAddrMan::Select_(int nUnkBias)\n     {\n         // use a tried node\n         double fChanceFactor = 1.0;\n-        while(1)\n+        for ( ; ; )\n         {\n             int nKBucket = GetRandInt(vvTried.size());\n             std::vector<int> &vTried = vvTried[nKBucket];\n@@ -413,7 +413,7 @@ CAddress CAddrMan::Select_(int nUnkBias)\n     } else {\n         // use a new node\n         double fChanceFactor = 1.0;\n-        while(1)\n+        for ( ; ; )\n         {\n             int nUBucket = GetRandInt(vvNew.size());\n             std::set<int> &vNew = vvNew[nUBucket];"
      },
      {
        "sha": "5e1ae64457aac07d2b2455b601bf3d41ee69986f",
        "filename": "src/json/json_spirit_value.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c1aacb3c27dfb824a1fde1e9b3bff764e499115d/src/json/json_spirit_value.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c1aacb3c27dfb824a1fde1e9b3bff764e499115d/src/json/json_spirit_value.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/json/json_spirit_value.h?ref=c1aacb3c27dfb824a1fde1e9b3bff764e499115d",
        "patch": "@@ -64,8 +64,8 @@ namespace json_spirit\n         const Array&       get_array()  const;\n         bool               get_bool()   const;\n         int                get_int()    const;\n-        boost::int64_t     get_int64()  const;\n-        boost::uint64_t    get_uint64() const;\n+        int64_t            get_int64()  const;\n+        uint64_t           get_uint64() const;\n         double             get_real()   const;\n \n         Object& get_obj();\n@@ -273,7 +273,7 @@ namespace json_spirit\n     template< class Config >\n     Value_impl< Config >::Value_impl( uint64_t value )\n     :   type_( int_type )\n-    ,   v_( static_cast< boost::int64_t >( value ) )\n+    ,   v_( static_cast< int64_t >( value ) )\n     ,   is_uint64_( true )\n     {\n     }"
      },
      {
        "sha": "9d3b9983add1f6719b561a527e4abfd37683932d",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c1aacb3c27dfb824a1fde1e9b3bff764e499115d/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c1aacb3c27dfb824a1fde1e9b3bff764e499115d/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=c1aacb3c27dfb824a1fde1e9b3bff764e499115d",
        "patch": "@@ -1760,7 +1760,7 @@ bool StopNode()\n     if (semOutbound)\n         for (int i=0; i<MAX_OUTBOUND_CONNECTIONS; i++)\n             semOutbound->post();\n-    do\n+    for ( ; ; )\n     {\n         int nThreadsRunning = 0;\n         for (int n = 0; n < THREAD_MAX; n++)\n@@ -1770,7 +1770,7 @@ bool StopNode()\n         if (GetTime() - nStart > 20)\n             break;\n         Sleep(20);\n-    } while(true);\n+    };\n     if (vnThreadsRunning[THREAD_SOCKETHANDLER] > 0) printf(\"ThreadSocketHandler still running\\n\");\n     if (vnThreadsRunning[THREAD_OPENCONNECTIONS] > 0) printf(\"ThreadOpenConnections still running\\n\");\n     if (vnThreadsRunning[THREAD_MESSAGEHANDLER] > 0) printf(\"ThreadMessageHandler still running\\n\");"
      },
      {
        "sha": "75c1c82ab2d025f9a14795037b7b4d48786b7e4d",
        "filename": "src/qt/intro.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c1aacb3c27dfb824a1fde1e9b3bff764e499115d/src/qt/intro.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c1aacb3c27dfb824a1fde1e9b3bff764e499115d/src/qt/intro.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/intro.cpp?ref=c1aacb3c27dfb824a1fde1e9b3bff764e499115d",
        "patch": "@@ -169,7 +169,7 @@ void Intro::pickDataDirectory()\n         intro.setDataDirectory(dataDir);\n         intro.setWindowIcon(QIcon(\":icons/bitcoin\"));\n \n-        while(true)\n+        for ( ; ; )\n         {\n             if(!intro.exec())\n             {"
      },
      {
        "sha": "aa8f876342b0fa50bfee3ad48ae7457e43fd39d4",
        "filename": "src/rpcwallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c1aacb3c27dfb824a1fde1e9b3bff764e499115d/src/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c1aacb3c27dfb824a1fde1e9b3bff764e499115d/src/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.cpp?ref=c1aacb3c27dfb824a1fde1e9b3bff764e499115d",
        "patch": "@@ -1511,7 +1511,7 @@ void ThreadCleanWalletPassphrase(void* parg)\n     {\n         nWalletUnlockTime = nMyWakeTime;\n \n-        do\n+        for ( ; ; )\n         {\n             if (nWalletUnlockTime==0)\n                 break;\n@@ -1523,7 +1523,7 @@ void ThreadCleanWalletPassphrase(void* parg)\n             Sleep(nToSleep);\n             ENTER_CRITICAL_SECTION(cs_nWalletUnlockTime);\n \n-        } while(1);\n+        };\n \n         if (nWalletUnlockTime)\n         {"
      },
      {
        "sha": "bdcd830591d570dbde8aacb9d4ab8312b0cc406f",
        "filename": "src/serialize.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c1aacb3c27dfb824a1fde1e9b3bff764e499115d/src/serialize.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c1aacb3c27dfb824a1fde1e9b3bff764e499115d/src/serialize.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/serialize.h?ref=c1aacb3c27dfb824a1fde1e9b3bff764e499115d",
        "patch": "@@ -270,7 +270,7 @@ template<typename I>\n inline unsigned int GetSizeOfVarInt(I n)\n {\n     int nRet = 0;\n-    while(true) {\n+    for ( ; ; ) {\n         nRet++;\n         if (n <= 0x7F)\n             break;\n@@ -284,7 +284,7 @@ void WriteVarInt(Stream& os, I n)\n {\n     unsigned char tmp[(sizeof(n)*8+6)/7];\n     int len=0;\n-    while(true) {\n+    for ( ; ; ) {\n         tmp[len] = (n & 0x7F) | (len ? 0x80 : 0x00);\n         if (n <= 0x7F)\n             break;\n@@ -300,7 +300,7 @@ template<typename Stream, typename I>\n I ReadVarInt(Stream& is)\n {\n     I n = 0;\n-    while(true) {\n+    for ( ; ; ) {\n         unsigned char chData;\n         READDATA(is, chData);\n         n = (n << 7) | (chData & 0x7F);"
      }
    ]
  },
  {
    "sha": "c55924cc1a1d808a98f8f4c4346202366cac2a3e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNTU5MjRjYzFhMWQ4MDhhOThmOGY0YzQzNDYyMDIzNjZjYWMyYTNl",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-21T18:08:56Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-21T18:08:56Z"
      },
      "message": "There is no need for these conditions anymore.",
      "tree": {
        "sha": "b1e48a0823a3b1b7d6a68bac8a5fc7b44a0820bb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b1e48a0823a3b1b7d6a68bac8a5fc7b44a0820bb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c55924cc1a1d808a98f8f4c4346202366cac2a3e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c55924cc1a1d808a98f8f4c4346202366cac2a3e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c55924cc1a1d808a98f8f4c4346202366cac2a3e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c55924cc1a1d808a98f8f4c4346202366cac2a3e/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "30d7d109c9c741753bc379707e45d4325d4fbbd8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/30d7d109c9c741753bc379707e45d4325d4fbbd8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/30d7d109c9c741753bc379707e45d4325d4fbbd8"
      }
    ],
    "stats": {
      "total": 27,
      "additions": 9,
      "deletions": 18
    },
    "files": [
      {
        "sha": "994c7843f0a80025d62a1ffdd8bd8977d2f3135a",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 8,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c55924cc1a1d808a98f8f4c4346202366cac2a3e/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c55924cc1a1d808a98f8f4c4346202366cac2a3e/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=c55924cc1a1d808a98f8f4c4346202366cac2a3e",
        "patch": "@@ -903,14 +903,12 @@ bool AppInit2()\n         if (!pwalletMain->SetAddressBookName(pwalletMain->vchDefaultKey.GetID(), \"\"))\n             strErrors << _(\"Cannot write default address\") << \"\\n\";\n \n-        if (fTestNet || GetTime() < SMALLDATA_SWITCH_TIME) {\n-            CMalleableKeyView keyView = pwalletMain->GenerateNewMalleableKey();\n-            CMalleableKey mKey;\n-            if (!pwalletMain->GetMalleableKey(keyView, mKey))\n-                strErrors << _(\"Unable to generate new malleable key\");\n-            if (!pwalletMain->SetAddressBookName(CBitcoinAddress(keyView.GetMalleablePubKey()), \"\"))\n-                strErrors << _(\"Cannot write default address\") << \"\\n\";\n-        }\n+        CMalleableKeyView keyView = pwalletMain->GenerateNewMalleableKey();\n+        CMalleableKey mKey;\n+        if (!pwalletMain->GetMalleableKey(keyView, mKey))\n+            strErrors << _(\"Unable to generate new malleable key\");\n+        if (!pwalletMain->SetAddressBookName(CBitcoinAddress(keyView.GetMalleablePubKey()), \"\"))\n+            strErrors << _(\"Cannot write default address\") << \"\\n\";\n     }\n \n     printf(\"%s\", strErrors.str().c_str());"
      },
      {
        "sha": "5ff8320fd7120c245b197b9b00af6dea16dcc48b",
        "filename": "src/rpcwallet.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c55924cc1a1d808a98f8f4c4346202366cac2a3e/src/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c55924cc1a1d808a98f8f4c4346202366cac2a3e/src/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.cpp?ref=c55924cc1a1d808a98f8f4c4346202366cac2a3e",
        "patch": "@@ -1898,9 +1898,6 @@ Value newmalleablekey(const Array& params, bool fHelp)\n             \"newmalleablekey\\n\"\n             \"Make a malleable public/private key pair.\\n\");\n \n-    if (!(fDebug || fTestNet) && GetTime() < SMALLDATA_SWITCH_TIME)\n-        throw runtime_error(\"This feature has been disabled for mainNet clients\");\n-\n     // Parse the account first so we don't generate a key if there's an error\n     string strAccount;\n     if (params.size() > 0)"
      },
      {
        "sha": "0f31de1a5efd4e59111d27cb799c0a40c4e04940",
        "filename": "src/script.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 6,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c55924cc1a1d808a98f8f4c4346202366cac2a3e/src/script.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c55924cc1a1d808a98f8f4c4346202366cac2a3e/src/script.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script.cpp?ref=c55924cc1a1d808a98f8f4c4346202366cac2a3e",
        "patch": "@@ -1333,11 +1333,8 @@ bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, vector<vector<unsi\n         // Standard tx, sender provides pubkey, receiver adds signature\n         mTemplates.insert(make_pair(TX_PUBKEY, CScript() << OP_PUBKEY << OP_CHECKSIG));\n \n-        if (fTestNet || GetTime() > SMALLDATA_SWITCH_TIME)\n-        {\n-            // Malleable pubkey tx hack, sender provides generated pubkey combined with R parameter. The R parameter is dropped before checking a signature.\n-            mTemplates.insert(make_pair(TX_PUBKEY_DROP, CScript() << OP_PUBKEY << OP_PUBKEY << OP_DROP << OP_CHECKSIG));\n-        }\n+        // Malleable pubkey tx hack, sender provides generated pubkey combined with R parameter. The R parameter is dropped before checking a signature.\n+        mTemplates.insert(make_pair(TX_PUBKEY_DROP, CScript() << OP_PUBKEY << OP_PUBKEY << OP_DROP << OP_CHECKSIG));\n \n         // Bitcoin address tx, sender provides hash of pubkey, receiver provides signature and pubkey\n         mTemplates.insert(make_pair(TX_PUBKEYHASH, CScript() << OP_DUP << OP_HASH160 << OP_PUBKEYHASH << OP_EQUALVERIFY << OP_CHECKSIG));\n@@ -1460,7 +1457,7 @@ bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, vector<vector<unsi\n             else if (opcode2 == OP_SMALLDATA)\n             {\n                 // small pushdata, <= 1024 bytes\n-                if (vch1.size() > (GetTime() > SMALLDATA_SWITCH_TIME ? 1024 : 80))\n+                if (vch1.size() > 1024)\n                     break;\n             }\n             else if (opcode1 != opcode2 || vch1 != vch2)"
      },
      {
        "sha": "57382bd1d6460633fe41658c34168865a044a14f",
        "filename": "src/timestamps.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c55924cc1a1d808a98f8f4c4346202366cac2a3e/src/timestamps.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c55924cc1a1d808a98f8f4c4346202366cac2a3e/src/timestamps.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/timestamps.h?ref=c55924cc1a1d808a98f8f4c4346202366cac2a3e",
        "patch": "@@ -2,6 +2,5 @@\n #define BITCOIN_TIMESTAMPS_H\n \n static const unsigned int TARGETS_SWITCH_TIME = 1374278400; // Saturday, 20-Jul-2013 00:00:00 UTC\n-static const unsigned int SMALLDATA_SWITCH_TIME = 1458432000; // Sunday, 20-Mar-16 00:00:00 UTC\n static const unsigned int CHECKLOCKTIMEVERIFY_SWITCH_TIME = 1461110400; // Wednesday, 20-Apr-16 00:00:00 UTC\n #endif"
      }
    ]
  },
  {
    "sha": "cce6abf46dd7f62968565e07a3952acf93a83488",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjY2U2YWJmNDZkZDdmNjI5Njg1NjVlMDdhMzk1MmFjZjkzYTgzNDg4",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-21T18:09:48Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-21T18:09:48Z"
      },
      "message": "Merge branch 'master' of github.com:novacoin-project/novacoin",
      "tree": {
        "sha": "b8dc46edd050b7c1733d2145c277e0b689be7d8a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b8dc46edd050b7c1733d2145c277e0b689be7d8a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cce6abf46dd7f62968565e07a3952acf93a83488",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cce6abf46dd7f62968565e07a3952acf93a83488",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cce6abf46dd7f62968565e07a3952acf93a83488",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cce6abf46dd7f62968565e07a3952acf93a83488/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c55924cc1a1d808a98f8f4c4346202366cac2a3e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c55924cc1a1d808a98f8f4c4346202366cac2a3e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c55924cc1a1d808a98f8f4c4346202366cac2a3e"
      },
      {
        "sha": "c1aacb3c27dfb824a1fde1e9b3bff764e499115d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c1aacb3c27dfb824a1fde1e9b3bff764e499115d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c1aacb3c27dfb824a1fde1e9b3bff764e499115d"
      }
    ],
    "stats": {
      "total": 26,
      "additions": 13,
      "deletions": 13
    },
    "files": [
      {
        "sha": "f24e7e78202c89d64b4a6354ce6ebd65e2832215",
        "filename": "src/addrman.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cce6abf46dd7f62968565e07a3952acf93a83488/src/addrman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cce6abf46dd7f62968565e07a3952acf93a83488/src/addrman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrman.cpp?ref=cce6abf46dd7f62968565e07a3952acf93a83488",
        "patch": "@@ -398,7 +398,7 @@ CAddress CAddrMan::Select_(int nUnkBias)\n     {\n         // use a tried node\n         double fChanceFactor = 1.0;\n-        while(1)\n+        for ( ; ; )\n         {\n             int nKBucket = GetRandInt(vvTried.size());\n             std::vector<int> &vTried = vvTried[nKBucket];\n@@ -413,7 +413,7 @@ CAddress CAddrMan::Select_(int nUnkBias)\n     } else {\n         // use a new node\n         double fChanceFactor = 1.0;\n-        while(1)\n+        for ( ; ; )\n         {\n             int nUBucket = GetRandInt(vvNew.size());\n             std::set<int> &vNew = vvNew[nUBucket];"
      },
      {
        "sha": "5e1ae64457aac07d2b2455b601bf3d41ee69986f",
        "filename": "src/json/json_spirit_value.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cce6abf46dd7f62968565e07a3952acf93a83488/src/json/json_spirit_value.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cce6abf46dd7f62968565e07a3952acf93a83488/src/json/json_spirit_value.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/json/json_spirit_value.h?ref=cce6abf46dd7f62968565e07a3952acf93a83488",
        "patch": "@@ -64,8 +64,8 @@ namespace json_spirit\n         const Array&       get_array()  const;\n         bool               get_bool()   const;\n         int                get_int()    const;\n-        boost::int64_t     get_int64()  const;\n-        boost::uint64_t    get_uint64() const;\n+        int64_t            get_int64()  const;\n+        uint64_t           get_uint64() const;\n         double             get_real()   const;\n \n         Object& get_obj();\n@@ -273,7 +273,7 @@ namespace json_spirit\n     template< class Config >\n     Value_impl< Config >::Value_impl( uint64_t value )\n     :   type_( int_type )\n-    ,   v_( static_cast< boost::int64_t >( value ) )\n+    ,   v_( static_cast< int64_t >( value ) )\n     ,   is_uint64_( true )\n     {\n     }"
      },
      {
        "sha": "9d3b9983add1f6719b561a527e4abfd37683932d",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cce6abf46dd7f62968565e07a3952acf93a83488/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cce6abf46dd7f62968565e07a3952acf93a83488/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=cce6abf46dd7f62968565e07a3952acf93a83488",
        "patch": "@@ -1760,7 +1760,7 @@ bool StopNode()\n     if (semOutbound)\n         for (int i=0; i<MAX_OUTBOUND_CONNECTIONS; i++)\n             semOutbound->post();\n-    do\n+    for ( ; ; )\n     {\n         int nThreadsRunning = 0;\n         for (int n = 0; n < THREAD_MAX; n++)\n@@ -1770,7 +1770,7 @@ bool StopNode()\n         if (GetTime() - nStart > 20)\n             break;\n         Sleep(20);\n-    } while(true);\n+    };\n     if (vnThreadsRunning[THREAD_SOCKETHANDLER] > 0) printf(\"ThreadSocketHandler still running\\n\");\n     if (vnThreadsRunning[THREAD_OPENCONNECTIONS] > 0) printf(\"ThreadOpenConnections still running\\n\");\n     if (vnThreadsRunning[THREAD_MESSAGEHANDLER] > 0) printf(\"ThreadMessageHandler still running\\n\");"
      },
      {
        "sha": "75c1c82ab2d025f9a14795037b7b4d48786b7e4d",
        "filename": "src/qt/intro.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cce6abf46dd7f62968565e07a3952acf93a83488/src/qt/intro.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cce6abf46dd7f62968565e07a3952acf93a83488/src/qt/intro.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/intro.cpp?ref=cce6abf46dd7f62968565e07a3952acf93a83488",
        "patch": "@@ -169,7 +169,7 @@ void Intro::pickDataDirectory()\n         intro.setDataDirectory(dataDir);\n         intro.setWindowIcon(QIcon(\":icons/bitcoin\"));\n \n-        while(true)\n+        for ( ; ; )\n         {\n             if(!intro.exec())\n             {"
      },
      {
        "sha": "b96f5c11157a1b51d7fcfbfbb4e80fa6244af168",
        "filename": "src/rpcwallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cce6abf46dd7f62968565e07a3952acf93a83488/src/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cce6abf46dd7f62968565e07a3952acf93a83488/src/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.cpp?ref=cce6abf46dd7f62968565e07a3952acf93a83488",
        "patch": "@@ -1511,7 +1511,7 @@ void ThreadCleanWalletPassphrase(void* parg)\n     {\n         nWalletUnlockTime = nMyWakeTime;\n \n-        do\n+        for ( ; ; )\n         {\n             if (nWalletUnlockTime==0)\n                 break;\n@@ -1523,7 +1523,7 @@ void ThreadCleanWalletPassphrase(void* parg)\n             Sleep(nToSleep);\n             ENTER_CRITICAL_SECTION(cs_nWalletUnlockTime);\n \n-        } while(1);\n+        };\n \n         if (nWalletUnlockTime)\n         {"
      },
      {
        "sha": "bdcd830591d570dbde8aacb9d4ab8312b0cc406f",
        "filename": "src/serialize.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cce6abf46dd7f62968565e07a3952acf93a83488/src/serialize.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cce6abf46dd7f62968565e07a3952acf93a83488/src/serialize.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/serialize.h?ref=cce6abf46dd7f62968565e07a3952acf93a83488",
        "patch": "@@ -270,7 +270,7 @@ template<typename I>\n inline unsigned int GetSizeOfVarInt(I n)\n {\n     int nRet = 0;\n-    while(true) {\n+    for ( ; ; ) {\n         nRet++;\n         if (n <= 0x7F)\n             break;\n@@ -284,7 +284,7 @@ void WriteVarInt(Stream& os, I n)\n {\n     unsigned char tmp[(sizeof(n)*8+6)/7];\n     int len=0;\n-    while(true) {\n+    for ( ; ; ) {\n         tmp[len] = (n & 0x7F) | (len ? 0x80 : 0x00);\n         if (n <= 0x7F)\n             break;\n@@ -300,7 +300,7 @@ template<typename Stream, typename I>\n I ReadVarInt(Stream& is)\n {\n     I n = 0;\n-    while(true) {\n+    for ( ; ; ) {\n         unsigned char chData;\n         READDATA(is, chData);\n         n = (n << 7) | (chData & 0x7F);"
      }
    ]
  },
  {
    "sha": "e6eea8ea303dd9b0b356526896bb0564ffb983d8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNmVlYThlYTMwM2RkOWIwYjM1NjUyNjg5NmJiMDU2NGZmYjk4M2Q4",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-22T00:59:23Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-22T00:59:23Z"
      },
      "message": "HTTP seeding script",
      "tree": {
        "sha": "0e11a312f8f33c6b5956a902d33d376a76e38259",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0e11a312f8f33c6b5956a902d33d376a76e38259"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e6eea8ea303dd9b0b356526896bb0564ffb983d8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e6eea8ea303dd9b0b356526896bb0564ffb983d8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e6eea8ea303dd9b0b356526896bb0564ffb983d8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e6eea8ea303dd9b0b356526896bb0564ffb983d8/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cce6abf46dd7f62968565e07a3952acf93a83488",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cce6abf46dd7f62968565e07a3952acf93a83488",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cce6abf46dd7f62968565e07a3952acf93a83488"
      }
    ],
    "stats": {
      "total": 86,
      "additions": 86,
      "deletions": 0
    },
    "files": [
      {
        "sha": "a739e7a25da9f511f3b2a0abb22513fa0ed6f2a2",
        "filename": "contrib/seeds/getseeds.py",
        "status": "added",
        "additions": 86,
        "deletions": 0,
        "changes": 86,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e6eea8ea303dd9b0b356526896bb0564ffb983d8/contrib/seeds/getseeds.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e6eea8ea303dd9b0b356526896bb0564ffb983d8/contrib/seeds/getseeds.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/getseeds.py?ref=e6eea8ea303dd9b0b356526896bb0564ffb983d8",
        "patch": "@@ -0,0 +1,86 @@\n+###\n+###  Automatic seeding over HTTP\n+###  (C) 2016 Alex D.\n+###\n+###  http://www.gnu.org/licenses/agpl-3.0.en.html\n+###\n+\n+import json\n+import random\n+import urllib2\n+\n+import os\n+import platform\n+\n+###  This module is required to function properly: \n+###      https://github.com/jgarzik/python-bitcoinrpc\n+\n+from bitcoinrpc.authproxy import AuthServiceProxy, JSONRPCException\n+\n+sources = ['http://dalexhz1.cloudapp.net', 'http://dalexhz2.cloudapp.net', 'http://dalexhz4.cloudapp.net', 'http://dalexhz5.cloudapp.net']\n+\n+def confFile():\n+    folder = ''\n+    if platform.system() == 'Windows':\n+        folder = os.path.join(os.path.join(os.environ['APPDATA'], 'NovaCoin'))\n+    else:\n+        if platform.system() == 'Darwin':\n+            folder = os.path.expanduser('~/Library/Application Support/NovaCoin/')\n+        else:\n+            folder = os.path.expanduser('~/.novacoin')\n+\n+    return os.path.join(folder, 'novacoin.conf')\n+\n+conf_path = confFile()\n+if not os.path.exists(conf_path):\n+    parser.error('''Novacoin configuration file not found. Manually enter your RPC password.\\r\\n'''\n+        '''If you actually haven't created a configuration file, you should create one at %s with the text like this:\\r\\n'''\n+        '''\\r\\n'''\n+        '''server=1\\r\\n'''\n+        '''rpcuser=yourname\\r\\n'''\n+        '''rpcpassword=%x\\r\\n'''\n+        '''\\r\\n'''\n+        '''Keep that password secret! After creating the file, restart Novacoin.''' % (conf_path, random.randrange(2**128)))\n+\n+conf = open(conf_path, 'rb').read()\n+contents = {}\n+\n+for line in conf.splitlines(True):\n+    if '#' in line:\n+        line = line[:line.index('#')]\n+    if '=' not in line:\n+        continue\n+    k, v = line.split('=', 1)\n+    contents[k.strip()] = v.strip()\n+\n+if 'rpcpassword' not in contents.keys():\n+    parser.error(\n+        '''RPC password is not found in the %s file.''' % (conf_path))\n+\n+rpcuser = 'novacoin'\n+rpcpassword = contents['rpcpassword']\n+rpcport = 8344\n+rpclisten = '127.0.0.1'\n+\n+if 'rpcport' in contents.keys():\n+    rpcport = contents['rpcport']\n+\n+if 'rpcuser' in contents.keys():\n+    rpcuser = contents['rpcuser']\n+\n+if 'rpclisten' in contents.keys():\n+    rpcuser = contents['rpclisten']\n+\n+url = \"http://\"+rpcuser+\":\"+rpcpassword+\"@\"+rpclisten+\":\"+rpcport+\"/\"\n+\n+access = AuthServiceProxy(url)\n+data = json.load(urllib2.urlopen(random.choice(sources)))\n+\n+for node in data:\n+    print 'Adding', node\n+    try:\n+        access.addnode(node, 'add')\n+    except:\n+        print 'Already added'\n+        pass\n+    \n\\ No newline at end of file"
      }
    ]
  },
  {
    "sha": "dece05facd46c7ce5d6b7f092f9bfc803f98b294",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkZWNlMDVmYWNkNDZjN2NlNWQ2YjdmMDkyZjliZmM4MDNmOThiMjk0",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-22T18:51:18Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-22T18:51:18Z"
      },
      "message": "Exception handling, implement norpc option",
      "tree": {
        "sha": "18010252b3d9d00901e9d97fe9551460e381fe11",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/18010252b3d9d00901e9d97fe9551460e381fe11"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dece05facd46c7ce5d6b7f092f9bfc803f98b294",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dece05facd46c7ce5d6b7f092f9bfc803f98b294",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/dece05facd46c7ce5d6b7f092f9bfc803f98b294",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dece05facd46c7ce5d6b7f092f9bfc803f98b294/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e6eea8ea303dd9b0b356526896bb0564ffb983d8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e6eea8ea303dd9b0b356526896bb0564ffb983d8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e6eea8ea303dd9b0b356526896bb0564ffb983d8"
      }
    ],
    "stats": {
      "total": 35,
      "additions": 25,
      "deletions": 10
    },
    "files": [
      {
        "sha": "2d61795ff93de01a3333e7657ed990f76cd3e265",
        "filename": "contrib/seeds/getseeds.py",
        "status": "modified",
        "additions": 25,
        "deletions": 10,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dece05facd46c7ce5d6b7f092f9bfc803f98b294/contrib/seeds/getseeds.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dece05facd46c7ce5d6b7f092f9bfc803f98b294/contrib/seeds/getseeds.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/getseeds.py?ref=dece05facd46c7ce5d6b7f092f9bfc803f98b294",
        "patch": "@@ -1,23 +1,34 @@\n+#!/usr/bin/python\n+\n ###\n ###  Automatic seeding over HTTP\n ###  (C) 2016 Alex D.\n ###\n ###  http://www.gnu.org/licenses/agpl-3.0.en.html\n ###\n \n+import os\n+import sys\n import json\n import random\n import urllib2\n-\n-import os\n import platform\n \n+\n+sources = ['http://dalexhz1.cloudapp.net', 'http://dalexhz2.cloudapp.net', 'http://dalexhz4.cloudapp.net', 'http://dalexhz5.cloudapp.net']\n+data = urllib2.urlopen(random.choice(sources))\n+\n+if 'norpc' in sys.argv:\n+    for node in json.load(data):\n+        print node\n+    sys.exit()\n+\n ###  This module is required to function properly: \n ###      https://github.com/jgarzik/python-bitcoinrpc\n \n+import errno\n from bitcoinrpc.authproxy import AuthServiceProxy, JSONRPCException\n-\n-sources = ['http://dalexhz1.cloudapp.net', 'http://dalexhz2.cloudapp.net', 'http://dalexhz4.cloudapp.net', 'http://dalexhz5.cloudapp.net']\n+from socket import error as socket_error\n \n def confFile():\n     folder = ''\n@@ -74,13 +85,17 @@ def confFile():\n url = \"http://\"+rpcuser+\":\"+rpcpassword+\"@\"+rpclisten+\":\"+rpcport+\"/\"\n \n access = AuthServiceProxy(url)\n-data = json.load(urllib2.urlopen(random.choice(sources)))\n \n-for node in data:\n+for node in json.load(data):\n     print 'Adding', node\n     try:\n         access.addnode(node, 'add')\n-    except:\n-        print 'Already added'\n-        pass\n-    \n\\ No newline at end of file\n+    except socket_error, e:\n+        if e.errno == errno.ECONNREFUSED:\n+            print 'Unable to communicate with Novacoin RPC'\n+        break\n+    except JSONRPCException, e:\n+        if e.code == -23:\n+            print 'Already added'\n+            continue\n+        break"
      }
    ]
  },
  {
    "sha": "95df9721903f8ccc668994f648c573b355d3a247",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5NWRmOTcyMTkwM2Y4Y2NjNjY4OTk0ZjY0OGM1NzNiMzU1ZDNhMjQ3",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-22T21:43:45Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-22T21:43:45Z"
      },
      "message": "EXPERIMENTAL: custom peer collector\n\nYou can specify a custom peer collector using syntax like -peercollector=<cmd>. Sample collector can be found in the contriob/seeds/getseeds.py file.",
      "tree": {
        "sha": "a6c66fa678d0792d8c8a8702211aefa2398f0c3e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a6c66fa678d0792d8c8a8702211aefa2398f0c3e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/95df9721903f8ccc668994f648c573b355d3a247",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/95df9721903f8ccc668994f648c573b355d3a247",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/95df9721903f8ccc668994f648c573b355d3a247",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/95df9721903f8ccc668994f648c573b355d3a247/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "dece05facd46c7ce5d6b7f092f9bfc803f98b294",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dece05facd46c7ce5d6b7f092f9bfc803f98b294",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/dece05facd46c7ce5d6b7f092f9bfc803f98b294"
      }
    ],
    "stats": {
      "total": 107,
      "additions": 99,
      "deletions": 8
    },
    "files": [
      {
        "sha": "4bdce2a74c2be675bf5e246e68ed10d51b147ea7",
        "filename": "novacoin-qt.pro",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/95df9721903f8ccc668994f648c573b355d3a247/novacoin-qt.pro",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/95df9721903f8ccc668994f648c573b355d3a247/novacoin-qt.pro",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/novacoin-qt.pro?ref=95df9721903f8ccc668994f648c573b355d3a247",
        "patch": "@@ -271,7 +271,8 @@ HEADERS += src/qt/bitcoingui.h \\\n     src/qt/multisigdialog.h \\\n     src/qt/secondauthdialog.h \\\n     src/qt/qrcodedialog.h \\\n-    src/ies.h\n+    src/ies.h \\\n+    src/ipcollector.h\n \n SOURCES += src/qt/bitcoin.cpp src/qt/bitcoingui.cpp \\\n     src/qt/intro.cpp \\\n@@ -353,7 +354,8 @@ SOURCES += src/qt/bitcoin.cpp src/qt/bitcoingui.cpp \\\n     src/qt/qrcodedialog.cpp \\\n     src/base58.cpp \\\n     src/cryptogram.cpp \\\n-    src/ecies.cpp\n+    src/ecies.cpp \\\n+    src/ipcollector.cpp\n \n RESOURCES += \\\n     src/qt/bitcoin.qrc"
      },
      {
        "sha": "a636b6e32d8b41eed9807435080bad2278f5aa98",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 1,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/95df9721903f8ccc668994f648c573b355d3a247/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/95df9721903f8ccc668994f648c573b355d3a247/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=95df9721903f8ccc668994f648c573b355d3a247",
        "patch": "@@ -8,6 +8,7 @@\n #include \"net.h\"\n #include \"init.h\"\n #include \"util.h\"\n+#include \"ipcollector.h\"\n #include \"ui_interface.h\"\n #include \"checkpoints.h\"\n #include <boost/format.hpp>\n@@ -292,6 +293,7 @@ std::string HelpMessage()\n         \"  -rpcconnect=<ip>       \" + _(\"Send commands to node running on <ip> (default: 127.0.0.1)\") + \"\\n\" +\n         \"  -blocknotify=<cmd>     \" + _(\"Execute command when the best block changes (%s in cmd is replaced by block hash)\") + \"\\n\" +\n         \"  -walletnotify=<cmd>    \" + _(\"Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)\") + \"\\n\" +\n+        \"  -peercollector=<cmd>     \" + _(\"Execute command to collect peer addresses\") + \"\\n\" +\n         \"  -confchange            \" + _(\"Require a confirmations for change (default: 0)\") + \"\\n\" +\n         \"  -upgradewallet         \" + _(\"Upgrade wallet to latest format\") + \"\\n\" +\n         \"  -keypool=<n>           \" + _(\"Set key pool size to <n> (default: 100)\") + \"\\n\" +\n@@ -997,7 +999,11 @@ bool AppInit2()\n     if (fServer)\n         NewThread(ThreadRPCServer, NULL);\n \n-    // ********************************************************* Step 12: finished\n+    // ********************************************************* Step 13: IP collection thread\n+    strCollectorCommand = GetArg(\"-peercollector\", \"\");\n+    if (strCollectorCommand != \"\")\n+        NewThread(ThreadIPCollector, NULL);\n+    // ********************************************************* Step 14: finished\n \n     uiInterface.InitMessage(_(\"Done loading\"));\n     printf(\"Done loading\\n\");"
      },
      {
        "sha": "f50d098f534f559961195fab92aa294699579bd5",
        "filename": "src/ipcollector.cpp",
        "status": "added",
        "additions": 70,
        "deletions": 0,
        "changes": 70,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/95df9721903f8ccc668994f648c573b355d3a247/src/ipcollector.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/95df9721903f8ccc668994f648c573b355d3a247/src/ipcollector.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/ipcollector.cpp?ref=95df9721903f8ccc668994f648c573b355d3a247",
        "patch": "@@ -0,0 +1,70 @@\n+#include <string>\n+#include <iostream>\n+#include <cstdio>\n+\n+#include \"net.h\"\n+#include \"ui_interface.h\"\n+\n+#ifdef WIN32\n+#define popen    _popen\n+#define pclose   _pclose\n+#else\n+#endif\n+\n+std::string strCollectorCommand;\n+\n+std::string exec(const char* cmd) {\n+    std::string result = \"\";\n+    char buffer[128];\n+    FILE *fp;\n+\n+    fp = popen(cmd, \"r\");\n+    while (fgets(buffer, sizeof(buffer), fp) != NULL) {\n+        result += buffer;\n+    }\n+    pclose(fp);\n+    return result;\n+}\n+\n+bool AddPeer(std::string &strIpAddr) {\n+    LOCK(cs_vAddedNodes);\n+    std::vector<std::string>::iterator it = vAddedNodes.begin();\n+    for(; it != vAddedNodes.end(); it++) {\n+        if (strIpAddr == *it) break;\n+    }\n+    if (it != vAddedNodes.end())\n+        return false;\n+\n+    vAddedNodes.push_back(strIpAddr);\n+    return true;\n+}\n+\n+\n+void ThreadIPCollector(void* parg) {\n+    printf(\"ThreadIPCollector started\\n\");\n+    vnThreadsRunning[THREAD_IPCOLLECTOR]++;\n+\n+    while(!fShutdown) {\n+        if (!fServer) {\n+            // If RPC server is enabled then we don't have to parse anything.\n+            std::string strCollectorOutput = exec(strCollectorCommand.c_str());\n+            printf(\"Peer collector output: %s\\n\", strCollectorOutput.c_str());\n+        } else {\n+            // Otherwise, there is a work to be done.\n+            std::string strCollectorOutput = exec((strCollectorCommand + \" norpc\").c_str());\n+            std::istringstream collectorStream(strCollectorOutput);\n+\n+            std::string strIpAddr;\n+            while (std::getline(collectorStream, strIpAddr)) {\n+                AddPeer(strIpAddr);\n+            }\n+        }\n+\n+        int nSleepHours = 1 + GetRandInt(5); // Sleep for 1-6 hours.\n+        for (int i = 0; i < nSleepHours * 3600 && !fShutdown; i++)\n+            Sleep(1000);\n+    }\n+\n+    printf(\"ThreadIPCollector stopped\\n\");\n+    vnThreadsRunning[THREAD_IPCOLLECTOR]--;\n+}"
      },
      {
        "sha": "e16279f4b47088aa5c99072a683ebe561194920e",
        "filename": "src/ipcollector.h",
        "status": "added",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/95df9721903f8ccc668994f648c573b355d3a247/src/ipcollector.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/95df9721903f8ccc668994f648c573b355d3a247/src/ipcollector.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/ipcollector.h?ref=95df9721903f8ccc668994f648c573b355d3a247",
        "patch": "@@ -0,0 +1,7 @@\n+#ifndef IPCOLLECTOR_H\n+#define IPCOLLECTOR_H\n+\n+extern std::string strCollectorCommand;\n+extern void ThreadIPCollector(void* parg);\n+\n+#endif\n\\ No newline at end of file"
      },
      {
        "sha": "c7a2f24ccac22d6e79d71f8d63d553abd2ffb4a7",
        "filename": "src/makefile.bsd",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/95df9721903f8ccc668994f648c573b355d3a247/src/makefile.bsd",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/95df9721903f8ccc668994f648c573b355d3a247/src/makefile.bsd",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/makefile.bsd?ref=95df9721903f8ccc668994f648c573b355d3a247",
        "patch": "@@ -137,7 +137,8 @@ OBJS= \\\n     obj/kernel.o \\\n     obj/kernel_worker.o \\\n     obj/ecies.o \\\n-    obj/cryptogram.o\n+    obj/cryptogram.o \\\n+    obj/ipcollector.o\n \n all: novacoind\n "
      },
      {
        "sha": "28372185167d8a6eb7713ed4a9fbeb4a14589fbf",
        "filename": "src/makefile.linux-mingw",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/95df9721903f8ccc668994f648c573b355d3a247/src/makefile.linux-mingw",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/95df9721903f8ccc668994f648c573b355d3a247/src/makefile.linux-mingw",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/makefile.linux-mingw?ref=95df9721903f8ccc668994f648c573b355d3a247",
        "patch": "@@ -101,7 +101,8 @@ OBJS= \\\n     obj/kernel.o \\\n     obj/kernel_worker.o \\\n     obj/ecies.o \\\n-    obj/cryptogram.o\n+    obj/cryptogram.o \\\n+    obj/ipcollector.o\n \n all: novacoind.exe\n "
      },
      {
        "sha": "c83e234fa34c193a27183bccabf6b5444f454ee1",
        "filename": "src/makefile.mingw",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/95df9721903f8ccc668994f648c573b355d3a247/src/makefile.mingw",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/95df9721903f8ccc668994f648c573b355d3a247/src/makefile.mingw",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/makefile.mingw?ref=95df9721903f8ccc668994f648c573b355d3a247",
        "patch": "@@ -91,7 +91,8 @@ OBJS= \\\n     obj/kernel.o \\\n     obj/kernel_worker.o \\\n     obj/ecies.o \\\n-    obj/cryptogram.o\n+    obj/cryptogram.o \\\n+    obj/ipcollector.o\n \n all: novacoind.exe\n "
      },
      {
        "sha": "e0a00c8754358c79f5c1a5a5a1176c528f42b920",
        "filename": "src/makefile.osx",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/95df9721903f8ccc668994f648c573b355d3a247/src/makefile.osx",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/95df9721903f8ccc668994f648c573b355d3a247/src/makefile.osx",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/makefile.osx?ref=95df9721903f8ccc668994f648c573b355d3a247",
        "patch": "@@ -99,7 +99,8 @@ OBJS= \\\n     obj/kernel.o \\\n     obj/kernel_worker.o \\\n     obj/ecies.o \\\n-    obj/cryptogram.o\n+    obj/cryptogram.o \\\n+    obj/ipcollector.o\n \n ifneq (${USE_IPV6}, -)\n \tDEFS += -DUSE_IPV6=$(USE_IPV6)"
      },
      {
        "sha": "69749c241d1e95c7721a07e58a153d8cff4289ec",
        "filename": "src/makefile.unix",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/95df9721903f8ccc668994f648c573b355d3a247/src/makefile.unix",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/95df9721903f8ccc668994f648c573b355d3a247/src/makefile.unix",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/makefile.unix?ref=95df9721903f8ccc668994f648c573b355d3a247",
        "patch": "@@ -138,7 +138,8 @@ OBJS= \\\n     obj/kernel.o \\\n     obj/kernel_worker.o \\\n     obj/ecies.o \\\n-    obj/cryptogram.o\n+    obj/cryptogram.o \\\n+    obj/ipcollector.o\n \n all: novacoind\n "
      },
      {
        "sha": "8569d237338d25c1ff336af28f443dbbf9307ef4",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/95df9721903f8ccc668994f648c573b355d3a247/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/95df9721903f8ccc668994f648c573b355d3a247/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=95df9721903f8ccc668994f648c573b355d3a247",
        "patch": "@@ -112,6 +112,7 @@ enum threadId\n     THREAD_MINTER,\n     THREAD_SCRIPTCHECK,\n     THREAD_NTP,\n+    THREAD_IPCOLLECTOR,\n \n     THREAD_MAX\n };"
      }
    ]
  },
  {
    "sha": "0600cb7efdd1cb3716f9d9d76cf2a340925ba790",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNjAwY2I3ZWZkZDFjYjM3MTZmOWQ5ZDc2Y2YyYTM0MDkyNWJhNzkw",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-22T21:47:21Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-22T21:47:21Z"
      },
      "message": "Fix",
      "tree": {
        "sha": "a6071fff9091918541e4ae33903814834c558fee",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a6071fff9091918541e4ae33903814834c558fee"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0600cb7efdd1cb3716f9d9d76cf2a340925ba790",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0600cb7efdd1cb3716f9d9d76cf2a340925ba790",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0600cb7efdd1cb3716f9d9d76cf2a340925ba790",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0600cb7efdd1cb3716f9d9d76cf2a340925ba790/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "95df9721903f8ccc668994f648c573b355d3a247",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/95df9721903f8ccc668994f648c573b355d3a247",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/95df9721903f8ccc668994f648c573b355d3a247"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "83d8f535ea88a61569b7e54ca4cab09b61e86cd3",
        "filename": "src/ipcollector.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0600cb7efdd1cb3716f9d9d76cf2a340925ba790/src/ipcollector.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0600cb7efdd1cb3716f9d9d76cf2a340925ba790/src/ipcollector.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/ipcollector.cpp?ref=0600cb7efdd1cb3716f9d9d76cf2a340925ba790",
        "patch": "@@ -45,7 +45,7 @@ void ThreadIPCollector(void* parg) {\n     vnThreadsRunning[THREAD_IPCOLLECTOR]++;\n \n     while(!fShutdown) {\n-        if (!fServer) {\n+        if (fServer) {\n             // If RPC server is enabled then we don't have to parse anything.\n             std::string strCollectorOutput = exec(strCollectorCommand.c_str());\n             printf(\"Peer collector output: %s\\n\", strCollectorOutput.c_str());"
      }
    ]
  },
  {
    "sha": "85193098d509d22351b1617f39d35d9cf80be495",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4NTE5MzA5OGQ1MDlkMjIzNTFiMTYxN2YzOWQzNWQ5Y2Y4MGJlNDk1",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-22T22:22:49Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-22T22:22:49Z"
      },
      "message": "MSVC project update",
      "tree": {
        "sha": "b84eb6a7e6d8cba2e0f1df561f763774d27d346a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b84eb6a7e6d8cba2e0f1df561f763774d27d346a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/85193098d509d22351b1617f39d35d9cf80be495",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/85193098d509d22351b1617f39d35d9cf80be495",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/85193098d509d22351b1617f39d35d9cf80be495",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/85193098d509d22351b1617f39d35d9cf80be495/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0600cb7efdd1cb3716f9d9d76cf2a340925ba790",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0600cb7efdd1cb3716f9d9d76cf2a340925ba790",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0600cb7efdd1cb3716f9d9d76cf2a340925ba790"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 2,
      "deletions": 1
    },
    "files": [
      {
        "sha": "1c31e332fa216d1890d4029543acc069c398a77d",
        "filename": "MSVC/libcommon/libcommon.vcxproj",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/85193098d509d22351b1617f39d35d9cf80be495/MSVC/libcommon/libcommon.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/85193098d509d22351b1617f39d35d9cf80be495/MSVC/libcommon/libcommon.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/MSVC/libcommon/libcommon.vcxproj?ref=85193098d509d22351b1617f39d35d9cf80be495",
        "patch": "@@ -22,6 +22,7 @@\n     <ClCompile Include=\"..\\..\\src\\alert.cpp\" />\n     <ClCompile Include=\"..\\..\\src\\cryptogram.cpp\" />\n     <ClCompile Include=\"..\\..\\src\\ecies.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\ipcollector.cpp\" />\n     <ClCompile Include=\"..\\..\\src\\kernel.cpp\" />\n     <ClCompile Include=\"..\\..\\src\\kernel_worker.cpp\" />\n     <ClCompile Include=\"..\\..\\src\\rpccrypt.cpp\" />\n@@ -79,6 +80,7 @@\n     <ClInclude Include=\"..\\..\\src\\ies.h\" />\n     <ClInclude Include=\"..\\..\\src\\init.h\" />\n     <ClInclude Include=\"..\\..\\src\\inttypes.h\" />\n+    <ClInclude Include=\"..\\..\\src\\ipcollector.h\" />\n     <ClInclude Include=\"..\\..\\src\\irc.h\" />\n     <ClInclude Include=\"..\\..\\src\\kernel_worker.h\" />\n     <ClInclude Include=\"..\\..\\src\\key.h\" />"
      },
      {
        "sha": "85fe44a9a93607411f9b76d732404e27a9f0e8f1",
        "filename": "src/ipcollector.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/85193098d509d22351b1617f39d35d9cf80be495/src/ipcollector.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/85193098d509d22351b1617f39d35d9cf80be495/src/ipcollector.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/ipcollector.cpp?ref=85193098d509d22351b1617f39d35d9cf80be495",
        "patch": "@@ -3,7 +3,6 @@\n #include <cstdio>\n \n #include \"net.h\"\n-#include \"ui_interface.h\"\n \n #ifdef WIN32\n #define popen    _popen"
      }
    ]
  },
  {
    "sha": "b92308f3b3a1a5bc177d60264799acda1e1e7eab",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiOTIzMDhmM2IzYTFhNWJjMTc3ZDYwMjY0Nzk5YWNkYTFlMWU3ZWFi",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-22T23:55:47Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-22T23:55:47Z"
      },
      "message": "=> Python3",
      "tree": {
        "sha": "50f436a34b1553301125d0ceceaedc09dcf03285",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/50f436a34b1553301125d0ceceaedc09dcf03285"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b92308f3b3a1a5bc177d60264799acda1e1e7eab",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b92308f3b3a1a5bc177d60264799acda1e1e7eab",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b92308f3b3a1a5bc177d60264799acda1e1e7eab",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b92308f3b3a1a5bc177d60264799acda1e1e7eab/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "85193098d509d22351b1617f39d35d9cf80be495",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/85193098d509d22351b1617f39d35d9cf80be495",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/85193098d509d22351b1617f39d35d9cf80be495"
      }
    ],
    "stats": {
      "total": 61,
      "additions": 30,
      "deletions": 31
    },
    "files": [
      {
        "sha": "fb0f15795b42bc9dcc6da94c4f4ce4de961cb739",
        "filename": "contrib/seeds/getseeds.py",
        "status": "modified",
        "additions": 30,
        "deletions": 31,
        "changes": 61,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b92308f3b3a1a5bc177d60264799acda1e1e7eab/contrib/seeds/getseeds.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b92308f3b3a1a5bc177d60264799acda1e1e7eab/contrib/seeds/getseeds.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/getseeds.py?ref=b92308f3b3a1a5bc177d60264799acda1e1e7eab",
        "patch": "@@ -1,4 +1,4 @@\n-#!/usr/bin/python\n+#!/usr/bin/python3\n \n ###\n ###  Automatic seeding over HTTP\n@@ -11,16 +11,15 @@\n import sys\n import json\n import random\n-import urllib2\n import platform\n-\n+import urllib.request\n \n sources = ['http://dalexhz1.cloudapp.net', 'http://dalexhz2.cloudapp.net', 'http://dalexhz4.cloudapp.net', 'http://dalexhz5.cloudapp.net']\n-data = urllib2.urlopen(random.choice(sources))\n+data = urllib.request.urlopen(random.choice(sources)).readall();\n \n if 'norpc' in sys.argv:\n-    for node in json.load(data):\n-        print node\n+    for node in json.loads(data.decode()):\n+        print (node)\n     sys.exit()\n \n ###  This module is required to function properly: \n@@ -57,45 +56,45 @@ def confFile():\n contents = {}\n \n for line in conf.splitlines(True):\n-    if '#' in line:\n+    if line.startswith(b'#'):\n         line = line[:line.index('#')]\n-    if '=' not in line:\n+    if not line.__contains__(b'='):\n         continue\n-    k, v = line.split('=', 1)\n+    k, v = line.split(b'=', 1)\n     contents[k.strip()] = v.strip()\n \n-if 'rpcpassword' not in contents.keys():\n-    parser.error(\n-        '''RPC password is not found in the %s file.''' % (conf_path))\n-\n-rpcuser = 'novacoin'\n-rpcpassword = contents['rpcpassword']\n-rpcport = 8344\n-rpclisten = '127.0.0.1'\n+print(contents)\n \n-if 'rpcport' in contents.keys():\n-    rpcport = contents['rpcport']\n+if b'rpcpassword' not in contents.keys():\n+    print('''RPC password is not found in the %s file.''' % (conf_path))\n+    sys.exit()\n \n-if 'rpcuser' in contents.keys():\n-    rpcuser = contents['rpcuser']\n+if b'rpcuser' not in contents.keys():\n+    print('''RPC user is not found in the %s file.''' % (conf_path))\n+    sys.exit()\n \n-if 'rpclisten' in contents.keys():\n-    rpcuser = contents['rpclisten']\n+rpcuser = contents[b'rpcuser'].decode()\n+rpcpassword = contents[b'rpcpassword'].decode()\n+rpcport = 8344\n+rpclisten = '127.0.0.1'\n \n-url = \"http://\"+rpcuser+\":\"+rpcpassword+\"@\"+rpclisten+\":\"+rpcport+\"/\"\n+if b'rpcport' in contents.keys():\n+    rpcport = contents[b'rpcport'].decode()\n+if b'rpclisten' in contents.keys():\n+    rpcuser = contents[b'rpclisten'].decode()\n \n-access = AuthServiceProxy(url)\n+access = AuthServiceProxy(\"http://\"+rpcuser+\":\"+rpcpassword+\"@\"+rpclisten+\":\"+rpcport+\"/\")\n \n-for node in json.load(data):\n-    print 'Adding', node\n+for node in json.loads(data.decode()):\n+    print ('Adding', node)\n     try:\n         access.addnode(node, 'add')\n-    except socket_error, e:\n+    except socket_error as e:\n         if e.errno == errno.ECONNREFUSED:\n-            print 'Unable to communicate with Novacoin RPC'\n+            print ('Unable to communicate with Novacoin RPC')\n         break\n-    except JSONRPCException, e:\n+    except JSONRPCException as e:\n         if e.code == -23:\n-            print 'Already added'\n+            print ('Already added')\n             continue\n         break"
      }
    ]
  },
  {
    "sha": "7d83156596be93793655419c065e1f7425653bf6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3ZDgzMTU2NTk2YmU5Mzc5MzY1NTQxOWMwNjVlMWY3NDI1NjUzYmY2",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-22T23:56:25Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-22T23:56:25Z"
      },
      "message": "Fix",
      "tree": {
        "sha": "09c91240460e1f2b04cb7b12972d8ecd75e26014",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/09c91240460e1f2b04cb7b12972d8ecd75e26014"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7d83156596be93793655419c065e1f7425653bf6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7d83156596be93793655419c065e1f7425653bf6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7d83156596be93793655419c065e1f7425653bf6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7d83156596be93793655419c065e1f7425653bf6/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b92308f3b3a1a5bc177d60264799acda1e1e7eab",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b92308f3b3a1a5bc177d60264799acda1e1e7eab",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b92308f3b3a1a5bc177d60264799acda1e1e7eab"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "7a208e8d4388f63e1645df5a84982fbc97ac1997",
        "filename": "contrib/seeds/getseeds.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7d83156596be93793655419c065e1f7425653bf6/contrib/seeds/getseeds.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7d83156596be93793655419c065e1f7425653bf6/contrib/seeds/getseeds.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/getseeds.py?ref=7d83156596be93793655419c065e1f7425653bf6",
        "patch": "@@ -81,7 +81,7 @@ def confFile():\n if b'rpcport' in contents.keys():\n     rpcport = contents[b'rpcport'].decode()\n if b'rpclisten' in contents.keys():\n-    rpcuser = contents[b'rpclisten'].decode()\n+    rpclisten = contents[b'rpclisten'].decode()\n \n access = AuthServiceProxy(\"http://\"+rpcuser+\":\"+rpcpassword+\"@\"+rpclisten+\":\"+rpcport+\"/\")\n "
      }
    ]
  },
  {
    "sha": "d72572136a0c4b4939df6dd63d16e85057cbb366",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkNzI1NzIxMzZhMGM0YjQ5MzlkZjZkZDYzZDE2ZTg1MDU3Y2JiMzY2",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-23T00:34:50Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-23T00:34:50Z"
      },
      "message": "Create setup.py for getseeds script.",
      "tree": {
        "sha": "7e9b98616a7731393167e7934c695a8f23de1f3f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7e9b98616a7731393167e7934c695a8f23de1f3f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d72572136a0c4b4939df6dd63d16e85057cbb366",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d72572136a0c4b4939df6dd63d16e85057cbb366",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d72572136a0c4b4939df6dd63d16e85057cbb366",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d72572136a0c4b4939df6dd63d16e85057cbb366/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7d83156596be93793655419c065e1f7425653bf6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7d83156596be93793655419c065e1f7425653bf6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7d83156596be93793655419c065e1f7425653bf6"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 10,
      "deletions": 0
    },
    "files": [
      {
        "sha": "7a208e8d4388f63e1645df5a84982fbc97ac1997",
        "filename": "contrib/seeds/getseeds/getseeds.py",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d72572136a0c4b4939df6dd63d16e85057cbb366/contrib/seeds/getseeds/getseeds.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d72572136a0c4b4939df6dd63d16e85057cbb366/contrib/seeds/getseeds/getseeds.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/getseeds/getseeds.py?ref=d72572136a0c4b4939df6dd63d16e85057cbb366",
        "previous_filename": "contrib/seeds/getseeds.py"
      },
      {
        "sha": "0a797757b49c5197f56d7026c57fcc0671e8009b",
        "filename": "contrib/seeds/getseeds/setup.py",
        "status": "added",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d72572136a0c4b4939df6dd63d16e85057cbb366/contrib/seeds/getseeds/setup.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d72572136a0c4b4939df6dd63d16e85057cbb366/contrib/seeds/getseeds/setup.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/getseeds/setup.py?ref=d72572136a0c4b4939df6dd63d16e85057cbb366",
        "patch": "@@ -0,0 +1,10 @@\n+from distutils.core import setup\n+import py2exe, sys, os\n+\n+sys.argv.append('py2exe')\n+\n+setup(\n+    options = {'py2exe': {'bundle_files': 1, 'compressed': True}},\n+    windows = [{'script': \"getseeds.py\"}],\n+    zipfile = None,\n+)"
      }
    ]
  },
  {
    "sha": "2a0c53d4811785c615380488e64498521b786906",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyYTBjNTNkNDgxMTc4NWM2MTUzODA0ODhlNjQ0OTg1MjFiNzg2OTA2",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-23T00:41:23Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-23T00:41:23Z"
      },
      "message": "Do not print sensitive data",
      "tree": {
        "sha": "2cf099dc8db749e52f32f92d8321a8302279096a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2cf099dc8db749e52f32f92d8321a8302279096a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2a0c53d4811785c615380488e64498521b786906",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2a0c53d4811785c615380488e64498521b786906",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2a0c53d4811785c615380488e64498521b786906",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2a0c53d4811785c615380488e64498521b786906/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d72572136a0c4b4939df6dd63d16e85057cbb366",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d72572136a0c4b4939df6dd63d16e85057cbb366",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d72572136a0c4b4939df6dd63d16e85057cbb366"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 1,
      "deletions": 3
    },
    "files": [
      {
        "sha": "a0874f0831e216fce23f3ec0be5db7aeb7bce45d",
        "filename": "contrib/seeds/getseeds/getseeds.py",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2a0c53d4811785c615380488e64498521b786906/contrib/seeds/getseeds/getseeds.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2a0c53d4811785c615380488e64498521b786906/contrib/seeds/getseeds/getseeds.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/getseeds/getseeds.py?ref=2a0c53d4811785c615380488e64498521b786906",
        "patch": "@@ -57,14 +57,12 @@ def confFile():\n \n for line in conf.splitlines(True):\n     if line.startswith(b'#'):\n-        line = line[:line.index('#')]\n+        line = line[:line.index(b'#')]\n     if not line.__contains__(b'='):\n         continue\n     k, v = line.split(b'=', 1)\n     contents[k.strip()] = v.strip()\n \n-print(contents)\n-\n if b'rpcpassword' not in contents.keys():\n     print('''RPC password is not found in the %s file.''' % (conf_path))\n     sys.exit()"
      }
    ]
  },
  {
    "sha": "78b1e58377e147a37cb06291af6bf1fe12dde5bd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3OGIxZTU4Mzc3ZTE0N2EzN2NiMDYyOTFhZjZiZjFmZTEyZGRlNWJk",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-23T00:48:07Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-23T00:48:07Z"
      },
      "message": "http://stackoverflow.com/questions/12505383/print-not-working-when-compiled-with-py2exe",
      "tree": {
        "sha": "c230d8556e0a304b2b62d7b6067e147f6404c66c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c230d8556e0a304b2b62d7b6067e147f6404c66c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/78b1e58377e147a37cb06291af6bf1fe12dde5bd",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/78b1e58377e147a37cb06291af6bf1fe12dde5bd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/78b1e58377e147a37cb06291af6bf1fe12dde5bd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/78b1e58377e147a37cb06291af6bf1fe12dde5bd/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2a0c53d4811785c615380488e64498521b786906",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2a0c53d4811785c615380488e64498521b786906",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2a0c53d4811785c615380488e64498521b786906"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "383efe571f532f8a079ee28540ab09e1d3c31a81",
        "filename": "contrib/seeds/getseeds/setup.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/78b1e58377e147a37cb06291af6bf1fe12dde5bd/contrib/seeds/getseeds/setup.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/78b1e58377e147a37cb06291af6bf1fe12dde5bd/contrib/seeds/getseeds/setup.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/getseeds/setup.py?ref=78b1e58377e147a37cb06291af6bf1fe12dde5bd",
        "patch": "@@ -5,6 +5,6 @@\n \n setup(\n     options = {'py2exe': {'bundle_files': 1, 'compressed': True}},\n-    windows = [{'script': \"getseeds.py\"}],\n+    console = [{'script': \"getseeds.py\"}],\n     zipfile = None,\n )"
      }
    ]
  },
  {
    "sha": "6584e580729ce454e822d5655c513802f72da735",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2NTg0ZTU4MDcyOWNlNDU0ZTgyMmQ1NjU1YzUxMzgwMmY3MmRhNzM1",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-23T22:50:20Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-23T22:50:20Z"
      },
      "message": "Network options: External seeder option",
      "tree": {
        "sha": "6b9e912b8f11b033c1604012646b4999143aac88",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6b9e912b8f11b033c1604012646b4999143aac88"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6584e580729ce454e822d5655c513802f72da735",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6584e580729ce454e822d5655c513802f72da735",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6584e580729ce454e822d5655c513802f72da735",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6584e580729ce454e822d5655c513802f72da735/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "78b1e58377e147a37cb06291af6bf1fe12dde5bd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/78b1e58377e147a37cb06291af6bf1fe12dde5bd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/78b1e58377e147a37cb06291af6bf1fe12dde5bd"
      }
    ],
    "stats": {
      "total": 63,
      "additions": 59,
      "deletions": 4
    },
    "files": [
      {
        "sha": "46a3fc7ec0d7fd70b956be31cf3d0d0cdd6ffb6b",
        "filename": "novacoin-qt.pro",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6584e580729ce454e822d5655c513802f72da735/novacoin-qt.pro",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6584e580729ce454e822d5655c513802f72da735/novacoin-qt.pro",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/novacoin-qt.pro?ref=6584e580729ce454e822d5655c513802f72da735",
        "patch": "@@ -11,6 +11,7 @@ CONFIG += static\n \n # QMAKE_CC=clang\n # QMAKE_CXX=clang++\n+# QMAKE_LINK=clang++\n \n freebsd-g++: QMAKE_TARGET.arch = $$QMAKE_HOST.arch\n linux-g++: QMAKE_TARGET.arch = $$QMAKE_HOST.arch"
      },
      {
        "sha": "55308eab24aca85d0fb9d3b21ffcdb7fe58c586e",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6584e580729ce454e822d5655c513802f72da735/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6584e580729ce454e822d5655c513802f72da735/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=6584e580729ce454e822d5655c513802f72da735",
        "patch": "@@ -1001,7 +1001,7 @@ bool AppInit2()\n \n     // ********************************************************* Step 13: IP collection thread\n     strCollectorCommand = GetArg(\"-peercollector\", \"\");\n-    if (strCollectorCommand != \"\")\n+    if (!fTestNet && strCollectorCommand != \"\")\n         NewThread(ThreadIPCollector, NULL);\n     // ********************************************************* Step 14: finished\n "
      },
      {
        "sha": "7cf60cf3cdb431cdd26052b527bd200866bf6dfd",
        "filename": "src/qt/forms/optionsdialog.ui",
        "status": "modified",
        "additions": 23,
        "deletions": 2,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6584e580729ce454e822d5655c513802f72da735/src/qt/forms/optionsdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6584e580729ce454e822d5655c513802f72da735/src/qt/forms/optionsdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/optionsdialog.ui?ref=6584e580729ce454e822d5655c513802f72da735",
        "patch": "@@ -6,7 +6,7 @@\n    <rect>\n     <x>0</x>\n     <y>0</y>\n-    <width>550</width>\n+    <width>595</width>\n     <height>380</height>\n    </rect>\n   </property>\n@@ -324,7 +324,28 @@\n         </layout>\n        </item>\n        <item>\n-        <spacer name=\"verticalSpacer_Network\">\n+        <layout class=\"QHBoxLayout\" name=\"horizontalLayout_3\">\n+         <item>\n+          <widget class=\"QLabel\" name=\"externalSeederLabel\">\n+           <property name=\"text\">\n+            <string>Seeder command:</string>\n+           </property>\n+          </widget>\n+         </item>\n+         <item>\n+          <widget class=\"QLineEdit\" name=\"externalSeederCommand\"/>\n+         </item>\n+         <item>\n+          <widget class=\"QPushButton\" name=\"chooseSeeder\">\n+           <property name=\"text\">\n+            <string>Choose ...</string>\n+           </property>\n+          </widget>\n+         </item>\n+        </layout>\n+       </item>\n+       <item>\n+        <spacer name=\"verticalSpacer\">\n          <property name=\"orientation\">\n           <enum>Qt::Vertical</enum>\n          </property>"
      },
      {
        "sha": "63b5c7dece81845ab87fc7970a7005fcf46431c6",
        "filename": "src/qt/optionsdialog.cpp",
        "status": "modified",
        "additions": 22,
        "deletions": 1,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6584e580729ce454e822d5655c513802f72da735/src/qt/optionsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6584e580729ce454e822d5655c513802f72da735/src/qt/optionsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsdialog.cpp?ref=6584e580729ce454e822d5655c513802f72da735",
        "patch": "@@ -14,6 +14,13 @@\n #include <QRegExp>\n #include <QRegExpValidator>\n #include <QKeyEvent>\n+#include <QFileDialog>\n+\n+#if QT_VERSION < 0x050000\n+#include <QDesktopServices>\n+#else\n+#include <QStandardPaths>\n+#endif\n \n OptionsDialog::OptionsDialog(QWidget *parent) :\n     QWidget(parent, DIALOGWINDOWHINTS),\n@@ -164,6 +171,7 @@ void OptionsDialog::setMapper()\n     mapper->addMapping(ui->torPort, OptionsModel::TorPort);\n     mapper->addMapping(ui->TorOnly, OptionsModel::TorOnly);\n     mapper->addMapping(ui->torName, OptionsModel::TorName);\n+    mapper->addMapping(ui->externalSeederCommand, OptionsModel::ExternalSeeder);\n \n \n     /* Window */\n@@ -345,4 +353,17 @@ void OptionsDialog::keyPressEvent(QKeyEvent *event)\n         close();\n     }\n #endif\n-}\n\\ No newline at end of file\n+}\n+void OptionsDialog::on_chooseSeeder_clicked()\n+{\n+#if QT_VERSION < 0x050000\n+    QString openDir = QDesktopServices::storageLocation(QDesktopServices::ApplicationsLocation);\n+#else\n+    QString openDir = QStandardPaths::ApplicationsLocation(QStandardPaths::ApplicationsLocation);\n+#endif\n+\n+    QString filename = QFileDialog::getOpenFileName(this, tr(\"Choose peer collector application\"), openDir, tr(\"Applications (*.*)\"));\n+    if(!filename.isEmpty()) {\n+        ui->externalSeederCommand->setText(filename);\n+    }\n+}"
      },
      {
        "sha": "b568916f673d760e19d8a48f10784b047eaa4e80",
        "filename": "src/qt/optionsdialog.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6584e580729ce454e822d5655c513802f72da735/src/qt/optionsdialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6584e580729ce454e822d5655c513802f72da735/src/qt/optionsdialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsdialog.h?ref=6584e580729ce454e822d5655c513802f72da735",
        "patch": "@@ -49,6 +49,8 @@ private slots:\n     void handleProxyIpValid(QValidatedLineEdit *object, bool fState);\n     void handleTorIpValid(QValidatedLineEdit *object, bool fState);\n \n+    void on_chooseSeeder_clicked();\n+\n signals:\n     void proxyIpValid(QValidatedLineEdit *object, bool fValid);\n     void torIpValid(QValidatedLineEdit *object, bool fValid);"
      },
      {
        "sha": "6639e276a71f15a6f1c95ce5c60cc6e3763942fc",
        "filename": "src/qt/optionsmodel.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6584e580729ce454e822d5655c513802f72da735/src/qt/optionsmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6584e580729ce454e822d5655c513802f72da735/src/qt/optionsmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsmodel.cpp?ref=6584e580729ce454e822d5655c513802f72da735",
        "patch": "@@ -99,6 +99,10 @@ void OptionsModel::Init()\n         }\n     }\n \n+    if (!fTestNet && settings.contains(\"externalSeeder\") && settings.value(\"externalSeeder\").toString() != \"\") {\n+        SoftSetArg(\"-peercollector\", settings.value(\"externalSeeder\").toString().toStdString());\n+    }\n+\n     if (settings.contains(\"detachDB\"))\n         SoftSetBoolArg(\"-detachdb\", settings.value(\"detachDB\").toBool());\n     if (!language.isEmpty())\n@@ -161,6 +165,8 @@ QVariant OptionsModel::data(const QModelIndex & index, int role) const\n             return settings.value(\"fTorOnly\", false);\n         case TorName:\n             return settings.value(\"TorName\", \"\");\n+        case ExternalSeeder:\n+            return settings.value(\"externalSeeder\", \"\");\n         case Fee:\n             return QVariant(static_cast<qlonglong>(nTransactionFee));\n         case DisplayUnit:\n@@ -270,6 +276,9 @@ bool OptionsModel::setData(const QModelIndex & index, const QVariant & value, in\n             settings.setValue(\"TorName\", value.toString());\n         }\n         break;\n+        case ExternalSeeder:\n+            settings.setValue(\"externalSeeder\", value.toString());\n+        break;\n         case Fee:\n             nTransactionFee = value.toLongLong();\n             settings.setValue(\"nTransactionFee\", static_cast<qlonglong>(nTransactionFee));"
      },
      {
        "sha": "605f821962daec06f85d43d8e27912f3c7be68dd",
        "filename": "src/qt/optionsmodel.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6584e580729ce454e822d5655c513802f72da735/src/qt/optionsmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6584e580729ce454e822d5655c513802f72da735/src/qt/optionsmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsmodel.h?ref=6584e580729ce454e822d5655c513802f72da735",
        "patch": "@@ -36,6 +36,7 @@ class OptionsModel : public QAbstractListModel\n         DetachDatabases,   // bool\n         Language,          // QString\n         CoinControlFeatures, // bool\n+        ExternalSeeder,    // QString\n         OptionIDRowCount,\n     };\n "
      }
    ]
  },
  {
    "sha": "b7ea7c2f160daeec70c11e7a8c0bd3cc5441306c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiN2VhN2MyZjE2MGRhZWVjNzBjMTFlN2E4YzBiZDNjYzU0NDEzMDZj",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-23T22:56:04Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-23T22:56:04Z"
      },
      "message": "QT5 fix",
      "tree": {
        "sha": "a39f8da5ff077b5b4b7053582a9ca4d0dfb33192",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a39f8da5ff077b5b4b7053582a9ca4d0dfb33192"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b7ea7c2f160daeec70c11e7a8c0bd3cc5441306c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b7ea7c2f160daeec70c11e7a8c0bd3cc5441306c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b7ea7c2f160daeec70c11e7a8c0bd3cc5441306c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b7ea7c2f160daeec70c11e7a8c0bd3cc5441306c/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6584e580729ce454e822d5655c513802f72da735",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6584e580729ce454e822d5655c513802f72da735",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6584e580729ce454e822d5655c513802f72da735"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "adb6ffb66488c3bd4b247c83686217f5c40d3113",
        "filename": "src/qt/optionsdialog.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b7ea7c2f160daeec70c11e7a8c0bd3cc5441306c/src/qt/optionsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b7ea7c2f160daeec70c11e7a8c0bd3cc5441306c/src/qt/optionsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsdialog.cpp?ref=b7ea7c2f160daeec70c11e7a8c0bd3cc5441306c",
        "patch": "@@ -359,7 +359,7 @@ void OptionsDialog::on_chooseSeeder_clicked()\n #if QT_VERSION < 0x050000\n     QString openDir = QDesktopServices::storageLocation(QDesktopServices::ApplicationsLocation);\n #else\n-    QString openDir = QStandardPaths::ApplicationsLocation(QStandardPaths::ApplicationsLocation);\n+    QString openDir = QStandardPaths::writableLocation(QStandardPaths::ApplicationsLocation);\n #endif\n \n     QString filename = QFileDialog::getOpenFileName(this, tr(\"Choose peer collector application\"), openDir, tr(\"Applications (*.*)\"));"
      }
    ]
  },
  {
    "sha": "5da8fc5521bc69508ebf0ad8670e06d6239d0cd7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ZGE4ZmM1NTIxYmM2OTUwOGViZjBhZDg2NzBlMDZkNjIzOWQwY2Q3",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar.ad@gmail.com",
        "date": "2016-03-24T00:47:06Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar.ad@gmail.com",
        "date": "2016-03-24T00:47:06Z"
      },
      "message": "Trying to proccess .app references correctly",
      "tree": {
        "sha": "4d4bb258a37deaf5b7b20163df57438e2f1943c0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4d4bb258a37deaf5b7b20163df57438e2f1943c0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5da8fc5521bc69508ebf0ad8670e06d6239d0cd7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5da8fc5521bc69508ebf0ad8670e06d6239d0cd7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5da8fc5521bc69508ebf0ad8670e06d6239d0cd7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5da8fc5521bc69508ebf0ad8670e06d6239d0cd7/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b7ea7c2f160daeec70c11e7a8c0bd3cc5441306c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b7ea7c2f160daeec70c11e7a8c0bd3cc5441306c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b7ea7c2f160daeec70c11e7a8c0bd3cc5441306c"
      }
    ],
    "stats": {
      "total": 55,
      "additions": 38,
      "deletions": 17
    },
    "files": [
      {
        "sha": "30014fda651bf89d7b76b0ea9a257673df905d65",
        "filename": "src/ipcollector.cpp",
        "status": "modified",
        "additions": 38,
        "deletions": 17,
        "changes": 55,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5da8fc5521bc69508ebf0ad8670e06d6239d0cd7/src/ipcollector.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5da8fc5521bc69508ebf0ad8670e06d6239d0cd7/src/ipcollector.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/ipcollector.cpp?ref=5da8fc5521bc69508ebf0ad8670e06d6239d0cd7",
        "patch": "@@ -34,34 +34,55 @@ bool AddPeer(std::string &strIpAddr) {\n     if (it != vAddedNodes.end())\n         return false;\n \n+    printf(\"Adding node %s\\n\", strIpAddr.c_str());\n     vAddedNodes.push_back(strIpAddr);\n+\n     return true;\n }\n \n-\n void ThreadIPCollector(void* parg) {\n     printf(\"ThreadIPCollector started\\n\");\n     vnThreadsRunning[THREAD_IPCOLLECTOR]++;\n \n-    while(!fShutdown) {\n-        if (fServer) {\n-            // If RPC server is enabled then we don't have to parse anything.\n-            std::string strCollectorOutput = exec(strCollectorCommand.c_str());\n-            printf(\"Peer collector output: %s\\n\", strCollectorOutput.c_str());\n-        } else {\n-            // Otherwise, there is a work to be done.\n-            std::string strCollectorOutput = exec((strCollectorCommand + \" norpc\").c_str());\n-            std::istringstream collectorStream(strCollectorOutput);\n+    std::string strExecutableFilePath = \"\";\n+#ifdef MAC_OSX\n+    size_t nameEnd = strCollectorCommand.rfind(\".app\");\n+    if (nameEnd != std::string::npos) {\n+        size_t nameBeginning = strCollectorCommand.rfind(\"/\");\n+        if (nameBeginning == std::string::npos)\n+            nameBeginning = 0;\n \n-            std::string strIpAddr;\n-            while (std::getline(collectorStream, strIpAddr)) {\n-                AddPeer(strIpAddr);\n+        std::string strFileName = strCollectorCommand.substr(nameBeginning, nameEnd - nameBeginning);\n+        strExecutableFilePath = strCollectorCommand + \"/Contents/MacOS/\" + strFileName;\n+    }\n+    else\n+        strExecutableFilePath = strCollectorCommand;\n+#else\n+        strExecutableFilePath = strCollectorCommand;\n+#endif\n+\n+    if (strExecutableFilePath != \"\")\n+    {\n+        while(!fShutdown) {\n+            if (fServer) {\n+                // If RPC server is enabled then we don't have to parse anything.\n+                std::string strCollectorOutput = exec(strExecutableFilePath.c_str());\n+                printf(\"Peer collector output: %s\\n\", strCollectorOutput.c_str());\n+            } else {\n+                // Otherwise, there is a work to be done.\n+                std::string strCollectorOutput = exec((strExecutableFilePath + \" norpc\").c_str());\n+                std::istringstream collectorStream(strCollectorOutput);\n+\n+                std::string strIpAddr;\n+                while (std::getline(collectorStream, strIpAddr)) {\n+                    AddPeer(strIpAddr);\n+                }\n             }\n-        }\n \n-        int nSleepHours = 1 + GetRandInt(5); // Sleep for 1-6 hours.\n-        for (int i = 0; i < nSleepHours * 3600 && !fShutdown; i++)\n-            Sleep(1000);\n+            int nSleepHours = 1 + GetRandInt(5); // Sleep for 1-6 hours.\n+            for (int i = 0; i < nSleepHours * 3600 && !fShutdown; i++)\n+                Sleep(1000);\n+        }\n     }\n \n     printf(\"ThreadIPCollector stopped\\n\");"
      }
    ]
  },
  {
    "sha": "9d2db684c11f18c0d5e4f6622ee9e919b42267ea",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ZDJkYjY4NGMxMWYxOGMwZDVlNGY2NjIyZWU5ZTkxOWI0MjI2N2Vh",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-24T18:19:50Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-24T18:19:50Z"
      },
      "message": "lupdate",
      "tree": {
        "sha": "12aad470dffd989d52a8f4d51c9f52d092a031ce",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/12aad470dffd989d52a8f4d51c9f52d092a031ce"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9d2db684c11f18c0d5e4f6622ee9e919b42267ea",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9d2db684c11f18c0d5e4f6622ee9e919b42267ea",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9d2db684c11f18c0d5e4f6622ee9e919b42267ea",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9d2db684c11f18c0d5e4f6622ee9e919b42267ea/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5da8fc5521bc69508ebf0ad8670e06d6239d0cd7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5da8fc5521bc69508ebf0ad8670e06d6239d0cd7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5da8fc5521bc69508ebf0ad8670e06d6239d0cd7"
      }
    ],
    "stats": {
      "total": 823,
      "additions": 443,
      "deletions": 380
    },
    "files": [
      {
        "sha": "61287899212ece0c88e57a22ad69c274e0643a3b",
        "filename": "src/qt/locale/bitcoin_en.ts",
        "status": "modified",
        "additions": 148,
        "deletions": 127,
        "changes": 275,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9d2db684c11f18c0d5e4f6622ee9e919b42267ea/src/qt/locale/bitcoin_en.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9d2db684c11f18c0d5e4f6622ee9e919b42267ea/src/qt/locale/bitcoin_en.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_en.ts?ref=9d2db684c11f18c0d5e4f6622ee9e919b42267ea",
        "patch": "@@ -1,6 +1,7 @@\n <?xml version=\"1.0\" encoding=\"utf-8\"?>\n <!DOCTYPE TS>\n-<TS version=\"2.1\" language=\"en\">\n+<TS version=\"2.0\" language=\"en\">\n+<defaultcodec>UTF-8</defaultcodec>\n <context>\n     <name>AboutDialog</name>\n     <message>\n@@ -109,32 +110,32 @@ Copyright \u00a9 2012-2016 The NovaCoin developers</translation>\n         <translation>&amp;Delete</translation>\n     </message>\n     <message>\n-        <location filename=\"../addressbookpage.cpp\" line=\"65\"/>\n+        <location filename=\"../addressbookpage.cpp\" line=\"61\"/>\n         <source>Copy &amp;Label</source>\n         <translation>Copy &amp;Label</translation>\n     </message>\n     <message>\n-        <location filename=\"../addressbookpage.cpp\" line=\"67\"/>\n+        <location filename=\"../addressbookpage.cpp\" line=\"63\"/>\n         <source>&amp;Edit</source>\n         <translation>&amp;Edit</translation>\n     </message>\n     <message>\n-        <location filename=\"../addressbookpage.cpp\" line=\"327\"/>\n+        <location filename=\"../addressbookpage.cpp\" line=\"317\"/>\n         <source>Export Address Book Data</source>\n         <translation>Export Address Book Data</translation>\n     </message>\n     <message>\n-        <location filename=\"../addressbookpage.cpp\" line=\"328\"/>\n+        <location filename=\"../addressbookpage.cpp\" line=\"318\"/>\n         <source>Comma separated file (*.csv)</source>\n         <translation>Comma separated file (*.csv)</translation>\n     </message>\n     <message>\n-        <location filename=\"../addressbookpage.cpp\" line=\"341\"/>\n+        <location filename=\"../addressbookpage.cpp\" line=\"331\"/>\n         <source>Error exporting</source>\n         <translation>Error exporting</translation>\n     </message>\n     <message>\n-        <location filename=\"../addressbookpage.cpp\" line=\"341\"/>\n+        <location filename=\"../addressbookpage.cpp\" line=\"331\"/>\n         <source>Could not write to file %1.</source>\n         <translation>Could not write to file %1.</translation>\n     </message>\n@@ -949,7 +950,7 @@ Some or all keys from:\n     </message>\n     <message>\n         <location filename=\"../forms/coincontroldialog.ui\" line=\"262\"/>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"543\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"549\"/>\n         <source>no</source>\n         <translation>no</translation>\n     </message>\n@@ -1019,108 +1020,108 @@ Some or all keys from:\n         <translation>Priority</translation>\n     </message>\n     <message>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"38\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"40\"/>\n         <source>Copy address</source>\n         <translation>Copy address</translation>\n     </message>\n     <message>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"39\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"41\"/>\n         <source>Copy label</source>\n         <translation>Copy label</translation>\n     </message>\n     <message>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"40\"/>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"66\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"42\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"68\"/>\n         <source>Copy amount</source>\n         <translation>Copy amount</translation>\n     </message>\n     <message>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"41\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"43\"/>\n         <source>Copy transaction ID</source>\n         <translation>Copy transaction ID</translation>\n     </message>\n     <message>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"65\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"67\"/>\n         <source>Copy quantity</source>\n         <translation>Copy quantity</translation>\n     </message>\n     <message>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"67\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"69\"/>\n         <source>Copy fee</source>\n         <translation>Copy fee</translation>\n     </message>\n     <message>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"68\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"70\"/>\n         <source>Copy after fee</source>\n         <translation>Copy after fee</translation>\n     </message>\n     <message>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"69\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"71\"/>\n         <source>Copy bytes</source>\n         <translation>Copy bytes</translation>\n     </message>\n     <message>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"70\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"72\"/>\n         <source>Copy priority</source>\n         <translation>Copy priority</translation>\n     </message>\n     <message>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"71\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"73\"/>\n         <source>Copy low output</source>\n         <translation>Copy low output</translation>\n     </message>\n     <message>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"72\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"74\"/>\n         <source>Copy change</source>\n         <translation>Copy change</translation>\n     </message>\n     <message>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"392\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"394\"/>\n         <source>highest</source>\n         <translation>highest</translation>\n     </message>\n     <message>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"393\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"395\"/>\n         <source>high</source>\n         <translation>high</translation>\n     </message>\n     <message>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"394\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"396\"/>\n         <source>medium-high</source>\n         <translation>medium-high</translation>\n     </message>\n     <message>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"395\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"397\"/>\n         <source>medium</source>\n         <translation>medium</translation>\n     </message>\n     <message>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"399\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"401\"/>\n         <source>low-medium</source>\n         <translation>low-medium</translation>\n     </message>\n     <message>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"400\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"402\"/>\n         <source>low</source>\n         <translation>low</translation>\n     </message>\n     <message>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"401\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"403\"/>\n         <source>lowest</source>\n         <translation>lowest</translation>\n     </message>\n     <message>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"543\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"549\"/>\n         <source>DUST</source>\n         <translation>DUST</translation>\n     </message>\n     <message>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"543\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"549\"/>\n         <source>yes</source>\n         <translation>yes</translation>\n     </message>\n     <message>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"553\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"559\"/>\n         <source>This label turns red, if the transaction size is bigger than 1000 bytes.\n \n  This means a fee of at least %1 per kb is required.\n@@ -1133,7 +1134,7 @@ Some or all keys from:\n  Can vary +/- 1 Byte per input.</translation>\n     </message>\n     <message>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"554\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"560\"/>\n         <source>Transactions with higher priority get more likely into a block.\n \n This label turns red, if the priority is smaller than &quot;medium&quot;.\n@@ -1146,7 +1147,7 @@ This label turns red, if the priority is smaller than &quot;medium&quot;.\n  This means a fee of at least %1 per kb is required.</translation>\n     </message>\n     <message>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"555\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"561\"/>\n         <source>This label turns red, if any recipient receives an amount smaller than %1.\n \n  This means a fee of at least %2 is required. \n@@ -1159,7 +1160,7 @@ This label turns red, if the priority is smaller than &quot;medium&quot;.\n  Amounts below the minimum fee are shown as DUST.</translation>\n     </message>\n     <message>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"556\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"562\"/>\n         <source>This label turns red, if the change is smaller than %1.\n \n  This means a fee of at least %2 is required.</source>\n@@ -1168,18 +1169,18 @@ This label turns red, if the priority is smaller than &quot;medium&quot;.\n  This means a fee of at least %2 is required.</translation>\n     </message>\n     <message>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"593\"/>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"662\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"599\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"672\"/>\n         <source>(no label)</source>\n         <translation>(no label)</translation>\n     </message>\n     <message>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"653\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"663\"/>\n         <source>change from %1 (%2)</source>\n         <translation>change from %1 (%2)</translation>\n     </message>\n     <message>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"654\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"664\"/>\n         <source>(change)</source>\n         <translation>(change)</translation>\n     </message>\n@@ -2003,197 +2004,217 @@ Reduce the number of addresses involved in the address creation.</translation>\n         <translation>&amp;Network</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"136\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"126\"/>\n         <source>Connect to the NovaCoin network through a SOCKS proxy (e.g. when connecting through Tor).</source>\n         <translation>Connect to the NovaCoin network through a SOCKS proxy (e.g. when connecting through Tor).</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"139\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"129\"/>\n         <source>&amp;Connect through SOCKS proxy:</source>\n         <translation>&amp;Connect through SOCKS proxy:</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"148\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"138\"/>\n         <source>Proxy &amp;IP:</source>\n         <translation>Proxy &amp;IP:</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"167\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"157\"/>\n         <source>IP address of the proxy (e.g. 127.0.0.1)</source>\n         <translation>IP address of the proxy (e.g. 127.0.0.1)</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"174\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"164\"/>\n         <source>&amp;Port:</source>\n         <translation>&amp;Port:</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"193\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"183\"/>\n         <source>Port of the proxy (e.g. 9050)</source>\n         <translation>Port of the proxy (e.g. 9050)</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"200\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"190\"/>\n         <source>SOCKS &amp;Version:</source>\n         <translation>SOCKS &amp;Version:</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"213\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"203\"/>\n         <source>SOCKS version of the proxy (e.g. 5)</source>\n         <translation>SOCKS version of the proxy (e.g. 5)</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"235\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"225\"/>\n         <source>Connect through &amp;Tor:</source>\n         <translation>Connect through &amp;Tor:</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"250\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"240\"/>\n         <source>Tor IP:</source>\n         <translation>Tor IP:</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"267\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"257\"/>\n         <source>Port:</source>\n         <translation>Port:</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"284\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"274\"/>\n         <source>Use Tor only</source>\n         <translation>Use Tor only</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"308\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"298\"/>\n         <source>Tor name:</source>\n         <translation>Tor name:</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"353\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"331\"/>\n+        <source>Seeder command:</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"341\"/>\n+        <source>Choose ...</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"364\"/>\n         <source>&amp;Window</source>\n         <translation>&amp;Window</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"359\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"370\"/>\n         <source>Show only a tray icon after minimizing the window.</source>\n         <translation>Show only a tray icon after minimizing the window.</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"362\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"373\"/>\n         <source>&amp;Minimize to the tray instead of the taskbar</source>\n         <translation>&amp;Minimize to the tray instead of the taskbar</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"369\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"380\"/>\n         <source>Minimize instead of exit the application when the window is closed. When this option is enabled, the application will be closed only after selecting Exit in the menu.</source>\n         <translation>Minimize instead of exit the application when the window is closed. When this option is enabled, the application will be closed only after selecting Exit in the menu.</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"372\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"383\"/>\n         <source>M&amp;inimize on close</source>\n         <translation>M&amp;inimize on close</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"393\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"404\"/>\n         <source>&amp;Display</source>\n         <translation>&amp;Display</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"401\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"412\"/>\n         <source>User Interface &amp;language:</source>\n         <translation>User Interface &amp;language:</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"414\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"425\"/>\n         <source>The user interface language can be set here. This setting will take effect after restarting NovaCoin.</source>\n         <translation>The user interface language can be set here. This setting will take effect after restarting NovaCoin.</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"425\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"436\"/>\n         <source>&amp;Unit to show amounts in:</source>\n         <translation>&amp;Unit to show amounts in:</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"438\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"449\"/>\n         <source>Choose the default subdivision unit to show in the interface and when sending coins.</source>\n         <translation>Choose the default subdivision unit to show in the interface and when sending coins.</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"447\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"458\"/>\n         <source>Whether to show NovaCoin addresses in the transaction list or not.</source>\n         <translation>Whether to show NovaCoin addresses in the transaction list or not.</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"450\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"461\"/>\n         <source>&amp;Display addresses in transaction list</source>\n         <translation>&amp;Display addresses in transaction list</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"457\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"468\"/>\n         <source>Whether to show coin control features or not.</source>\n         <translation>Whether to show coin control features or not.</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"460\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"471\"/>\n         <source>Display coin &amp;control features (experts only!)</source>\n         <translation>Display coin &amp;control features (experts only!)</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"469\"/>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"482\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"480\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"493\"/>\n         <source>Third party URLs (e.g. explorer.novaco.in) that appear in the transactions tab as context menu items. %s in the URL is replaced by transaction hash. Multiple URLs are separated by vertical bar |.</source>\n         <translation>Third party URLs (e.g. explorer.novaco.in) that appear in the transactions tab as context menu items. %s in the URL is replaced by transaction hash. Multiple URLs are separated by vertical bar |.</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"472\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"483\"/>\n         <source>Third party transaction URLs</source>\n         <translation>Third party transaction URLs</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"555\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"566\"/>\n         <source>&amp;OK</source>\n         <translation>&amp;OK</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"562\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"573\"/>\n         <source>&amp;Cancel</source>\n         <translation>&amp;Cancel</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"572\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"583\"/>\n         <source>&amp;Apply</source>\n         <translation>&amp;Apply</translation>\n     </message>\n     <message>\n-        <location filename=\"../optionsdialog.cpp\" line=\"74\"/>\n+        <location filename=\"../optionsdialog.cpp\" line=\"77\"/>\n         <source>default</source>\n         <translation>default</translation>\n     </message>\n     <message>\n-        <location filename=\"../optionsdialog.cpp\" line=\"240\"/>\n-        <location filename=\"../optionsdialog.cpp\" line=\"249\"/>\n-        <location filename=\"../optionsdialog.cpp\" line=\"258\"/>\n-        <location filename=\"../optionsdialog.cpp\" line=\"267\"/>\n+        <location filename=\"../optionsdialog.cpp\" line=\"242\"/>\n+        <location filename=\"../optionsdialog.cpp\" line=\"251\"/>\n+        <location filename=\"../optionsdialog.cpp\" line=\"260\"/>\n+        <location filename=\"../optionsdialog.cpp\" line=\"269\"/>\n         <source>Warning</source>\n         <translation>Warning</translation>\n     </message>\n     <message>\n-        <location filename=\"../optionsdialog.cpp\" line=\"240\"/>\n-        <location filename=\"../optionsdialog.cpp\" line=\"249\"/>\n-        <location filename=\"../optionsdialog.cpp\" line=\"258\"/>\n-        <location filename=\"../optionsdialog.cpp\" line=\"267\"/>\n+        <location filename=\"../optionsdialog.cpp\" line=\"242\"/>\n+        <location filename=\"../optionsdialog.cpp\" line=\"251\"/>\n+        <location filename=\"../optionsdialog.cpp\" line=\"260\"/>\n+        <location filename=\"../optionsdialog.cpp\" line=\"269\"/>\n         <source>This setting will take effect after restarting NovaCoin.</source>\n         <translation>This setting will take effect after restarting NovaCoin.</translation>\n     </message>\n     <message>\n-        <location filename=\"../optionsdialog.cpp\" line=\"297\"/>\n+        <location filename=\"../optionsdialog.cpp\" line=\"299\"/>\n         <source>The supplied proxy address is invalid.</source>\n         <translation>The supplied proxy address is invalid.</translation>\n     </message>\n     <message>\n-        <location filename=\"../optionsdialog.cpp\" line=\"316\"/>\n+        <location filename=\"../optionsdialog.cpp\" line=\"318\"/>\n         <source>The supplied tor address is invalid.</source>\n         <translation>The supplied tor address is invalid.</translation>\n     </message>\n+    <message>\n+        <location filename=\"../optionsdialog.cpp\" line=\"365\"/>\n+        <source>Choose peer collector application</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location filename=\"../optionsdialog.cpp\" line=\"365\"/>\n+        <source>Applications (*.*)</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n </context>\n <context>\n     <name>OverviewPage</name>\n@@ -2662,7 +2683,7 @@ Reduce the number of addresses involved in the address creation.</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/secondauthdialog.ui\" line=\"17\"/>\n-        <source>Second Authentication</source>\n+        <source>Second Authentification</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n@@ -2775,13 +2796,13 @@ Reduce the number of addresses involved in the address creation.</translation>\n     <name>SendCoinsDialog</name>\n     <message>\n         <location filename=\"../forms/sendcoinsdialog.ui\" line=\"14\"/>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"204\"/>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"209\"/>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"214\"/>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"219\"/>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"225\"/>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"230\"/>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"235\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"205\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"210\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"215\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"220\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"226\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"231\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"236\"/>\n         <source>Send Coins</source>\n         <translation>Send Coins</translation>\n     </message>\n@@ -2928,103 +2949,103 @@ Reduce the number of addresses involved in the address creation.</translation>\n         <translation>S&amp;end</translation>\n     </message>\n     <message>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"42\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"43\"/>\n         <source>Enter a NovaCoin address (e.g. 4Zo1ga6xuKuQ7JV7M9rGDoxdbYwV5zgQJ5)</source>\n         <translation>Enter a NovaCoin address (e.g. 4Zo1ga6xuKuQ7JV7M9rGDoxdbYwV5zgQJ5)</translation>\n     </message>\n     <message>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"56\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"57\"/>\n         <source>Copy quantity</source>\n         <translation>Copy quantity</translation>\n     </message>\n     <message>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"57\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"58\"/>\n         <source>Copy amount</source>\n         <translation>Copy amount</translation>\n     </message>\n     <message>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"58\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"59\"/>\n         <source>Copy fee</source>\n         <translation>Copy fee</translation>\n     </message>\n     <message>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"59\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"60\"/>\n         <source>Copy after fee</source>\n         <translation>Copy after fee</translation>\n     </message>\n     <message>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"60\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"61\"/>\n         <source>Copy bytes</source>\n         <translation>Copy bytes</translation>\n     </message>\n     <message>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"61\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"62\"/>\n         <source>Copy priority</source>\n         <translation>Copy priority</translation>\n     </message>\n     <message>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"62\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"63\"/>\n         <source>Copy low output</source>\n         <translation>Copy low output</translation>\n     </message>\n     <message>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"63\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"64\"/>\n         <source>Copy change</source>\n         <translation>Copy change</translation>\n     </message>\n     <message>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"167\"/>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"169\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"168\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"170\"/>\n         <source>&lt;b&gt;%1&lt;/b&gt; to %2 (%3)</source>\n         <translation>&lt;b&gt;%1&lt;/b&gt; to %2 (%3)</translation>\n     </message>\n     <message>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"175\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"176\"/>\n         <source>Confirm send coins</source>\n         <translation>Confirm send coins</translation>\n     </message>\n     <message>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"176\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"177\"/>\n         <source>Are you sure you want to send %1?</source>\n         <translation>Are you sure you want to send %1?</translation>\n     </message>\n     <message>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"176\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"177\"/>\n         <source> and </source>\n         <translation> and </translation>\n     </message>\n     <message>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"205\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"206\"/>\n         <source>The recipient address is not valid, please recheck.</source>\n         <translation>The recipient address is not valid, please recheck.</translation>\n     </message>\n     <message>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"210\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"211\"/>\n         <source>The amount to pay must be larger than 0.</source>\n         <translation>The amount to pay must be larger than 0.</translation>\n     </message>\n     <message>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"215\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"216\"/>\n         <source>The amount exceeds your balance.</source>\n         <translation>The amount exceeds your balance.</translation>\n     </message>\n     <message>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"220\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"221\"/>\n         <source>The total exceeds your balance when the %1 transaction fee is included.</source>\n         <translation>The total exceeds your balance when the %1 transaction fee is included.</translation>\n     </message>\n     <message>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"226\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"227\"/>\n         <source>Duplicate address found, can only send to each address once per send operation.</source>\n         <translation>Duplicate address found, can only send to each address once per send operation.</translation>\n     </message>\n     <message>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"231\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"232\"/>\n         <source>Error: Transaction creation failed.</source>\n         <translation>Error: Transaction creation failed.</translation>\n     </message>\n     <message>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"236\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"237\"/>\n         <source>Error: The transaction was rejected. This might happen if some of the coins in your wallet were already spent, such as if you used a copy of wallet.dat and coins were spent in the copy but not marked as spent here.</source>\n         <translation>Error: The transaction was rejected. This might happen if some of the coins in your wallet were already spent, such as if you used a copy of wallet.dat and coins were spent in the copy but not marked as spent here.</translation>\n     </message>\n@@ -4359,87 +4380,87 @@ If the file does not exist, create it with owner-readable-only file permissions.\n         <translation>Use OpenSSL (https) for JSON-RPC connections</translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"167\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"165\"/>\n         <source>Use proxy to reach tor hidden services (default: same as -proxy)</source>\n         <translation>Use proxy to reach tor hidden services (default: same as -proxy)</translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"168\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"166\"/>\n         <source>Use the test network</source>\n         <translation>Use the test network</translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"169\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"167\"/>\n         <source>Username for JSON-RPC connections</source>\n         <translation>Username for JSON-RPC connections</translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"170\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"168\"/>\n         <source>Verifying database integrity...</source>\n         <translation>Verifying database integrity...</translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"171\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"169\"/>\n         <source>Wallet needed to be rewritten: restart NovaCoin to complete</source>\n         <translation>Wallet needed to be rewritten: restart NovaCoin to complete</translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"172\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"170\"/>\n         <source>Warning: Disk space is low!</source>\n         <translation>Warning: Disk space is low!</translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"173\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"171\"/>\n         <source>Warning: This version is obsolete, upgrade required!</source>\n         <translation>Warning: This version is obsolete, upgrade required!</translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"174\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"172\"/>\n         <source>wallet.dat corrupt, salvage failed</source>\n         <translation>wallet.dat corrupt, salvage failed</translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"175\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"173\"/>\n         <source>Specify wallet file (within data directory)</source>\n         <translation>Specify wallet file (within data directory)</translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"176\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"174\"/>\n         <source>Use in-memory logging for block index database (default: 1)</source>\n         <translation>Use in-memory logging for block index database (default: 1)</translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"177\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"175\"/>\n         <source>Find peers using DNS lookup (default: 1)</source>\n         <translation>Find peers using DNS lookup (default: 0) {1)?}</translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"178\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"176\"/>\n         <source>Sync checkpoints policy (default: strict)</source>\n         <translation>Sync checkpoints policy (default: strict)</translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"179\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"177\"/>\n         <source>Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)</source>\n         <translation>Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)</translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"180\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"178\"/>\n         <source>Require a confirmations for change (default: 0)</source>\n         <translation>Require a confirmations for change (default: 0)</translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"181\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"179\"/>\n         <source>Enforce transaction scripts to use canonical PUSH operators (default: 1)</source>\n         <translation>Enforce transaction scripts to use canonical PUSH operators (default: 1)</translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"182\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"180\"/>\n         <source>Set the number of script verification threads (1-16, 0=auto, default: 0)</source>\n         <translation>Set the number of script verification threads (1-16, 0=auto, default: 0)</translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"183\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"181\"/>\n         <source>When creating transactions, ignore inputs with value less than this (default: %s)</source>\n         <translation>When creating transactions, ignore inputs with value less than this (default: %s)</translation>\n     </message>"
      },
      {
        "sha": "a1cf05c253b27d814c118a687646fb80daff3683",
        "filename": "src/qt/locale/bitcoin_ru.ts",
        "status": "modified",
        "additions": 147,
        "deletions": 126,
        "changes": 273,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9d2db684c11f18c0d5e4f6622ee9e919b42267ea/src/qt/locale/bitcoin_ru.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9d2db684c11f18c0d5e4f6622ee9e919b42267ea/src/qt/locale/bitcoin_ru.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ru.ts?ref=9d2db684c11f18c0d5e4f6622ee9e919b42267ea",
        "patch": "@@ -1,6 +1,7 @@\n <?xml version=\"1.0\" encoding=\"utf-8\"?>\n <!DOCTYPE TS>\n-<TS version=\"2.1\" language=\"ru_RU\">\n+<TS version=\"2.0\" language=\"ru_RU\">\n+<defaultcodec>UTF-8</defaultcodec>\n <context>\n     <name>AboutDialog</name>\n     <message>\n@@ -105,32 +106,32 @@ Copyright \u00a9 2012-2016 The NovaCoin developers</source>\n         <translation>&amp;\u0423\u0434\u0430\u043b\u0438\u0442\u044c</translation>\n     </message>\n     <message>\n-        <location filename=\"../addressbookpage.cpp\" line=\"65\"/>\n+        <location filename=\"../addressbookpage.cpp\" line=\"61\"/>\n         <source>Copy &amp;Label</source>\n         <translation>\u041a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u0442\u044c &amp;\u043c\u0435\u0442\u043a\u0443</translation>\n     </message>\n     <message>\n-        <location filename=\"../addressbookpage.cpp\" line=\"67\"/>\n+        <location filename=\"../addressbookpage.cpp\" line=\"63\"/>\n         <source>&amp;Edit</source>\n         <translation>&amp;\u041f\u0440\u0430\u0432\u043a\u0430</translation>\n     </message>\n     <message>\n-        <location filename=\"../addressbookpage.cpp\" line=\"327\"/>\n+        <location filename=\"../addressbookpage.cpp\" line=\"317\"/>\n         <source>Export Address Book Data</source>\n         <translation>\u042d\u043a\u0441\u043f\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0430\u0434\u0440\u0435\u0441\u043d\u0443\u044e \u043a\u043d\u0438\u0433\u0443</translation>\n     </message>\n     <message>\n-        <location filename=\"../addressbookpage.cpp\" line=\"328\"/>\n+        <location filename=\"../addressbookpage.cpp\" line=\"318\"/>\n         <source>Comma separated file (*.csv)</source>\n         <translation>\u0422\u0435\u043a\u0441\u0442, \u0440\u0430\u0437\u0434\u0435\u043b\u0451\u043d\u043d\u044b\u0439 \u0437\u0430\u043f\u044f\u0442\u044b\u043c\u0438 (*.csv)</translation>\n     </message>\n     <message>\n-        <location filename=\"../addressbookpage.cpp\" line=\"341\"/>\n+        <location filename=\"../addressbookpage.cpp\" line=\"331\"/>\n         <source>Error exporting</source>\n         <translation>\u041e\u0448\u0438\u0431\u043a\u0430 \u044d\u043a\u0441\u043f\u043e\u0440\u0442\u0430</translation>\n     </message>\n     <message>\n-        <location filename=\"../addressbookpage.cpp\" line=\"341\"/>\n+        <location filename=\"../addressbookpage.cpp\" line=\"331\"/>\n         <source>Could not write to file %1.</source>\n         <translation>\u041d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u0437\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u0432 \u0444\u0430\u0439\u043b %1.</translation>\n     </message>\n@@ -951,7 +952,7 @@ Some or all keys from:\n     </message>\n     <message>\n         <location filename=\"../forms/coincontroldialog.ui\" line=\"262\"/>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"543\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"549\"/>\n         <source>no</source>\n         <translation>\u043d\u0435\u0442</translation>\n     </message>\n@@ -1021,108 +1022,108 @@ Some or all keys from:\n         <translation>\u041f\u0440\u0438\u043e\u0440\u0438\u0442\u0435\u0442</translation>\n     </message>\n     <message>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"38\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"40\"/>\n         <source>Copy address</source>\n         <translation>\u041a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0430\u0434\u0440\u0435\u0441</translation>\n     </message>\n     <message>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"39\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"41\"/>\n         <source>Copy label</source>\n         <translation>\u041a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043c\u0435\u0442\u043a\u0443</translation>\n     </message>\n     <message>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"40\"/>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"66\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"42\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"68\"/>\n         <source>Copy amount</source>\n         <translation>\u041a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0441\u0443\u043c\u043c\u0443</translation>\n     </message>\n     <message>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"41\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"43\"/>\n         <source>Copy transaction ID</source>\n         <translation>\u0421\u043a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u0442\u044c ID \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0438</translation>\n     </message>\n     <message>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"65\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"67\"/>\n         <source>Copy quantity</source>\n         <translation>\u041a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e</translation>\n     </message>\n     <message>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"67\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"69\"/>\n         <source>Copy fee</source>\n         <translation>\u041a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043a\u043e\u043c\u0438\u0441\u0441\u0438\u044e</translation>\n     </message>\n     <message>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"68\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"70\"/>\n         <source>Copy after fee</source>\n         <translation>\u041a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0441 \u043a\u043e\u043c\u0438\u0441\u0441\u0438\u0435\u0439</translation>\n     </message>\n     <message>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"69\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"71\"/>\n         <source>Copy bytes</source>\n         <translation>\u041a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043e\u0431\u044a\u0435\u043c</translation>\n     </message>\n     <message>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"70\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"72\"/>\n         <source>Copy priority</source>\n         <translation>\u041a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043f\u0440\u0438\u043e\u0440\u0438\u0442\u0435\u0442</translation>\n     </message>\n     <message>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"71\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"73\"/>\n         <source>Copy low output</source>\n         <translation>\u041a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043c\u0435\u043b\u043a\u0438\u0439 \u0432\u044b\u0445\u043e\u0434</translation>\n     </message>\n     <message>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"72\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"74\"/>\n         <source>Copy change</source>\n         <translation>\u041a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0441\u0434\u0430\u0447\u0443</translation>\n     </message>\n     <message>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"392\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"394\"/>\n         <source>highest</source>\n         <translation>\u043d\u0430\u0438\u0432\u044b\u0441\u0448\u0438\u0439</translation>\n     </message>\n     <message>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"393\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"395\"/>\n         <source>high</source>\n         <translation>\u0432\u044b\u0441\u043e\u043a\u0438\u0439</translation>\n     </message>\n     <message>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"394\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"396\"/>\n         <source>medium-high</source>\n         <translation>\u0432\u044b\u0448\u0435 \u0441\u0440\u0435\u0434\u043d\u0435\u0433\u043e</translation>\n     </message>\n     <message>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"395\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"397\"/>\n         <source>medium</source>\n         <translation>\u0441\u0440\u0435\u0434\u043d\u0438\u0439</translation>\n     </message>\n     <message>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"399\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"401\"/>\n         <source>low-medium</source>\n         <translation>\u043d\u0438\u0436\u0435 \u0441\u0440\u0435\u0434\u043d\u0435\u0433\u043e</translation>\n     </message>\n     <message>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"400\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"402\"/>\n         <source>low</source>\n         <translation>\u043d\u0438\u0437\u043a\u0438\u0439</translation>\n     </message>\n     <message>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"401\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"403\"/>\n         <source>lowest</source>\n         <translation>\u043d\u0430\u0438\u043c\u0435\u043d\u044c\u0448\u0438\u0439</translation>\n     </message>\n     <message>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"543\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"549\"/>\n         <source>DUST</source>\n         <translation>\u041f\u042b\u041b\u042c</translation>\n     </message>\n     <message>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"543\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"549\"/>\n         <source>yes</source>\n         <translation>\u0434\u0430</translation>\n     </message>\n     <message>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"553\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"559\"/>\n         <source>This label turns red, if the transaction size is bigger than 1000 bytes.\n \n  This means a fee of at least %1 per kb is required.\n@@ -1133,7 +1134,7 @@ Some or all keys from:\n  \u042d\u0442\u043e \u043e\u0437\u043d\u0430\u0447\u0430\u0435\u0442, \u0447\u0442\u043e \u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u043a\u043e\u043c\u0438\u0441\u0441\u0438\u044f \u043a\u0430\u043a \u043c\u0438\u043d\u0438\u043c\u0443\u043c %1 \u0437\u0430 1\u043a\u0431.</translation>\n     </message>\n     <message>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"554\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"560\"/>\n         <source>Transactions with higher priority get more likely into a block.\n \n This label turns red, if the priority is smaller than &quot;medium&quot;.\n@@ -1146,7 +1147,7 @@ This label turns red, if the priority is smaller than &quot;medium&quot;.\n  \u042d\u0442\u043e \u043e\u0437\u043d\u0430\u0447\u0430\u0435\u0442, \u0447\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u043a\u043e\u043c\u0438\u0441\u0441\u0438\u044f \u043a\u0430\u043a \u043c\u0438\u043d\u0438\u043c\u0443\u043c %2.</translation>\n     </message>\n     <message>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"555\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"561\"/>\n         <source>This label turns red, if any recipient receives an amount smaller than %1.\n \n  This means a fee of at least %2 is required. \n@@ -1159,7 +1160,7 @@ This label turns red, if the priority is smaller than &quot;medium&quot;.\n  \u0421\u0443\u043c\u043c\u044b \u043d\u0438\u0436\u0435 \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0439 \u043a\u043e\u043c\u0438\u0441\u0441\u0438\u0438 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u044e\u0442\u0441\u044f \u043a\u0430\u043a DUST.</translation>\n     </message>\n     <message>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"556\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"562\"/>\n         <source>This label turns red, if the change is smaller than %1.\n \n  This means a fee of at least %2 is required.</source>\n@@ -1168,18 +1169,18 @@ This label turns red, if the priority is smaller than &quot;medium&quot;.\n  \u042d\u0442\u043e \u043e\u0437\u043d\u0430\u0447\u0430\u0435\u0442, \u0447\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u043a\u043e\u043c\u0438\u0441\u0441\u0438\u044f \u043a\u0430\u043a \u043c\u0438\u043d\u0438\u043c\u0443\u043c %2.</translation>\n     </message>\n     <message>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"593\"/>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"662\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"599\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"672\"/>\n         <source>(no label)</source>\n         <translation>[\u043d\u0435\u0442 \u043c\u0435\u0442\u043a\u0438]</translation>\n     </message>\n     <message>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"653\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"663\"/>\n         <source>change from %1 (%2)</source>\n         <translation>\u0441\u0434\u0430\u0447\u0430 \u0441 %1 (%2)</translation>\n     </message>\n     <message>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"654\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"664\"/>\n         <source>(change)</source>\n         <translation>(\u0441\u0434\u0430\u0447\u0430)</translation>\n     </message>\n@@ -2005,197 +2006,217 @@ Reduce the number of addresses involved in the address creation.</source>\n         <translation>&amp;\u0421\u0435\u0442\u044c</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"136\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"126\"/>\n         <source>Connect to the NovaCoin network through a SOCKS proxy (e.g. when connecting through Tor).</source>\n         <translation>\u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0442\u044c\u0441\u044f \u043a \u0441\u0435\u0442\u0438 NovaCoin \u0447\u0435\u0440\u0435\u0437 \u043f\u0440\u043e\u043a\u0441\u0438 SOCKS (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u043f\u0440\u0438 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0438 \u0447\u0435\u0440\u0435\u0437 Tor).</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"139\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"129\"/>\n         <source>&amp;Connect through SOCKS proxy:</source>\n         <translation>&amp;\u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0442\u044c\u0441\u044f \u0447\u0435\u0440\u0435\u0437 SOCKS \u043f\u0440\u043e\u043a\u0441\u0438:</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"148\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"138\"/>\n         <source>Proxy &amp;IP:</source>\n         <translation>&amp;IP \u041f\u0440\u043e\u043a\u0441\u0438: </translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"167\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"157\"/>\n         <source>IP address of the proxy (e.g. 127.0.0.1)</source>\n         <translation>IP-\u0430\u0434\u0440\u0435\u0441 \u043f\u0440\u043e\u043a\u0441\u0438 (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440 127.0.0.1)</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"174\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"164\"/>\n         <source>&amp;Port:</source>\n         <translation>\u041f\u043e&amp;\u0440\u0442: </translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"193\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"183\"/>\n         <source>Port of the proxy (e.g. 9050)</source>\n         <translation>\u041f\u043e\u0440\u0442 \u043f\u0440\u043e\u043a\u0441\u0438-\u0441\u0435\u0440\u0432\u0435\u0440\u0430 (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, 9050)</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"200\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"190\"/>\n         <source>SOCKS &amp;Version:</source>\n         <translation>&amp;\u0412\u0435\u0440\u0441\u0438\u044f SOCKS:</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"213\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"203\"/>\n         <source>SOCKS version of the proxy (e.g. 5)</source>\n         <translation>\u0412\u0435\u0440\u0441\u0438\u044f SOCKS-\u043f\u0440\u043e\u043a\u0441\u0438 (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, 5)</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"235\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"225\"/>\n         <source>Connect through &amp;Tor:</source>\n         <translation>\u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0442\u044c\u0441\u044f \u0447\u0435\u0440\u0435\u0437 &amp;Tor:</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"250\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"240\"/>\n         <source>Tor IP:</source>\n         <translation>IP tor \u043f\u0440\u043e\u043a\u0441\u0438:</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"267\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"257\"/>\n         <source>Port:</source>\n         <translation>\u041f\u043e\u0440\u0442:</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"284\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"274\"/>\n         <source>Use Tor only</source>\n         <translation>\u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0442\u044c\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u0447\u0435\u0440\u0435\u0437 Tor</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"308\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"298\"/>\n         <source>Tor name:</source>\n         <translation>\u0418\u043c\u044f \u0412\u0430\u0448\u0435\u0433\u043e tor \u0445\u043e\u0441\u0442\u0430:</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"353\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"331\"/>\n+        <source>Seeder command:</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"341\"/>\n+        <source>Choose ...</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"364\"/>\n         <source>&amp;Window</source>\n         <translation>&amp;\u041e\u043a\u043d\u043e</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"359\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"370\"/>\n         <source>Show only a tray icon after minimizing the window.</source>\n         <translation>\u041f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0442\u044c \u0442\u043e\u043b\u044c\u043a\u043e \u0438\u043a\u043e\u043d\u043a\u0443 \u0432 \u0441\u0438\u0441\u0442\u0435\u043c\u043d\u043e\u043c \u043b\u043e\u0442\u043a\u0435 \u043f\u043e\u0441\u043b\u0435 \u0441\u0432\u043e\u0440\u0430\u0447\u0438\u0432\u0430\u043d\u0438\u044f \u043e\u043a\u043d\u0430.</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"362\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"373\"/>\n         <source>&amp;Minimize to the tray instead of the taskbar</source>\n         <translation>&amp;C\u0432\u043e\u0440\u0430\u0447\u0438\u0432\u0430\u0442\u044c \u0432 \u0441\u0438\u0441\u0442\u0435\u043c\u043d\u044b\u0439 \u043b\u043e\u0442\u043e\u043a \u0432\u043c\u0435\u0441\u0442\u043e \u043f\u0430\u043d\u0435\u043b\u0438 \u0437\u0430\u0434\u0430\u0447</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"369\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"380\"/>\n         <source>Minimize instead of exit the application when the window is closed. When this option is enabled, the application will be closed only after selecting Exit in the menu.</source>\n         <translation>\u0421\u0432\u043e\u0440\u0430\u0447\u0438\u0432\u0430\u0442\u044c \u0432\u043c\u0435\u0441\u0442\u043e \u0437\u0430\u043a\u0440\u044b\u0442\u0438\u044f. \u0415\u0441\u043b\u0438 \u0434\u0430\u043d\u043d\u0430\u044f \u043e\u043f\u0446\u0438\u044f \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0431\u0440\u0430\u043d\u0430 \u2014 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0437\u0430\u043a\u0440\u043e\u0435\u0442\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u043e\u0441\u043b\u0435 \u0432\u044b\u0431\u043e\u0440\u0430 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0435\u0433\u043e \u043f\u0443\u043d\u043a\u0442\u0430 \u0432 \u043c\u0435\u043d\u044e.</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"372\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"383\"/>\n         <source>M&amp;inimize on close</source>\n         <translation>\u0421&amp;\u0432\u043e\u0440\u0430\u0447\u0438\u0432\u0430\u0442\u044c \u043f\u0440\u0438 \u0437\u0430\u043a\u0440\u044b\u0442\u0438\u0438</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"393\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"404\"/>\n         <source>&amp;Display</source>\n         <translation>\u041e&amp;\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"401\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"412\"/>\n         <source>User Interface &amp;language:</source>\n         <translation>&amp;\u042f\u0437\u044b\u043a \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430:</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"414\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"425\"/>\n         <source>The user interface language can be set here. This setting will take effect after restarting NovaCoin.</source>\n         <translation>\u0417\u0434\u0435\u0441\u044c \u043c\u043e\u0436\u043d\u043e \u0432\u044b\u0431\u0440\u0430\u0442\u044c \u044f\u0437\u044b\u043a \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430. \u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u0432\u0441\u0442\u0443\u043f\u044f\u0442 \u0432 \u0441\u0438\u043b\u0443 \u043f\u043e\u0441\u043b\u0435 \u043f\u0435\u0440\u0435\u0437\u0430\u043f\u0443\u0441\u043a\u0430 NovaCoin.</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"425\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"436\"/>\n         <source>&amp;Unit to show amounts in:</source>\n         <translation>&amp;\u041e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0442\u044c \u0441\u0443\u043c\u043c\u044b \u0432 \u0435\u0434\u0438\u043d\u0438\u0446\u0430\u0445: </translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"438\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"449\"/>\n         <source>Choose the default subdivision unit to show in the interface and when sending coins.</source>\n         <translation>\u0412\u044b\u0431\u0435\u0440\u0438\u0442\u0435 \u0435\u0434\u0438\u043d\u0438\u0446\u0443 \u0438\u0437\u043c\u0435\u0440\u0435\u043d\u0438\u044f \u043c\u043e\u043d\u0435\u0442 \u043f\u0440\u0438 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0438 \u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0435.</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"447\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"458\"/>\n         <source>Whether to show NovaCoin addresses in the transaction list or not.</source>\n         <translation>\u041f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0442\u044c \u043b\u0438 \u0430\u0434\u0440\u0435\u0441\u0430 NovaCoin \u0432 \u0441\u043f\u0438\u0441\u043a\u0435 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0439.</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"450\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"461\"/>\n         <source>&amp;Display addresses in transaction list</source>\n         <translation>&amp;\u041f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0442\u044c \u0430\u0434\u0440\u0435\u0441\u0430 \u0432 \u0441\u043f\u0438\u0441\u043a\u0435 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0439</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"457\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"468\"/>\n         <source>Whether to show coin control features or not.</source>\n         <translation>\u0412\u044b\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0438 \u0432\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u043f\u0430\u043d\u0435\u043b\u0438 \u0432\u044b\u0431\u043e\u0440\u0430 \u0432\u0445\u043e\u0434\u043e\u0432.</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"460\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"471\"/>\n         <source>Display coin &amp;control features (experts only!)</source>\n         <translation>\u0423\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435 &amp;\u0432\u0445\u043e\u0434\u0430\u043c\u0438 (\u0442\u043e\u043b\u044c\u043a\u043e \u0434\u043b\u044f \u043f\u0440\u043e\u0434\u0432\u0438\u043d\u0443\u0442\u044b\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439!)</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"469\"/>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"482\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"480\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"493\"/>\n         <source>Third party URLs (e.g. explorer.novaco.in) that appear in the transactions tab as context menu items. %s in the URL is replaced by transaction hash. Multiple URLs are separated by vertical bar |.</source>\n         <translation>\u0421\u0442\u043e\u0440\u043e\u043d\u043d\u0438\u0435 URL (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440 explorer.novaco.in), \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u044e\u0442\u0441\u044f \u043d\u0430 \u0432\u043a\u043b\u0430\u0434\u043a\u0435 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0439 \u043a\u0430\u043a \u043f\u0443\u043d\u043a\u0442\u044b \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u043d\u043e\u0433\u043e \u043c\u0435\u043d\u044e. %s \u0432 URL \u0437\u0430\u043c\u0435\u043d\u044f\u0435\u0442\u0441\u044f \u0445\u0435\u0448\u0435\u043c \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0438. URL \u043e\u0442\u0434\u0435\u043b\u044f\u044e\u0442\u0441\u044f \u0434\u0440\u0443\u0433 \u043e\u0442 \u0434\u0440\u0443\u0433\u0430 \u0432\u0435\u0440\u0442\u0438\u043a\u0430\u043b\u044c\u043d\u043e\u0439 \u0447\u0435\u0440\u0442\u043e\u0439 |.</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"472\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"483\"/>\n         <source>Third party transaction URLs</source>\n         <translation>\u0421\u0442\u043e\u0440\u043e\u043d\u043d\u0438\u0435 URL \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0439</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"555\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"566\"/>\n         <source>&amp;OK</source>\n         <translation>\u041e&amp;\u041a</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"562\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"573\"/>\n         <source>&amp;Cancel</source>\n         <translation>&amp;\u041e\u0442\u043c\u0435\u043d\u0430</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"572\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"583\"/>\n         <source>&amp;Apply</source>\n         <translation>&amp;\u041f\u0440\u0438\u043c\u0435\u043d\u0438\u0442\u044c</translation>\n     </message>\n     <message>\n-        <location filename=\"../optionsdialog.cpp\" line=\"74\"/>\n+        <location filename=\"../optionsdialog.cpp\" line=\"77\"/>\n         <source>default</source>\n         <translation>\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e</translation>\n     </message>\n     <message>\n-        <location filename=\"../optionsdialog.cpp\" line=\"240\"/>\n-        <location filename=\"../optionsdialog.cpp\" line=\"249\"/>\n-        <location filename=\"../optionsdialog.cpp\" line=\"258\"/>\n-        <location filename=\"../optionsdialog.cpp\" line=\"267\"/>\n+        <location filename=\"../optionsdialog.cpp\" line=\"242\"/>\n+        <location filename=\"../optionsdialog.cpp\" line=\"251\"/>\n+        <location filename=\"../optionsdialog.cpp\" line=\"260\"/>\n+        <location filename=\"../optionsdialog.cpp\" line=\"269\"/>\n         <source>Warning</source>\n         <translation>\u0412\u043d\u0438\u043c\u0430\u043d\u0438\u0435</translation>\n     </message>\n     <message>\n-        <location filename=\"../optionsdialog.cpp\" line=\"240\"/>\n-        <location filename=\"../optionsdialog.cpp\" line=\"249\"/>\n-        <location filename=\"../optionsdialog.cpp\" line=\"258\"/>\n-        <location filename=\"../optionsdialog.cpp\" line=\"267\"/>\n+        <location filename=\"../optionsdialog.cpp\" line=\"242\"/>\n+        <location filename=\"../optionsdialog.cpp\" line=\"251\"/>\n+        <location filename=\"../optionsdialog.cpp\" line=\"260\"/>\n+        <location filename=\"../optionsdialog.cpp\" line=\"269\"/>\n         <source>This setting will take effect after restarting NovaCoin.</source>\n         <translation>\u042d\u0442\u0430 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u0432\u0441\u0442\u0443\u043f\u0438\u0442 \u0432 \u0441\u0438\u043b\u0443 \u043f\u043e\u0441\u043b\u0435 \u043f\u0435\u0440\u0435\u0437\u0430\u043f\u0443\u0441\u043a\u0430 NovaCoin</translation>\n     </message>\n     <message>\n-        <location filename=\"../optionsdialog.cpp\" line=\"297\"/>\n+        <location filename=\"../optionsdialog.cpp\" line=\"299\"/>\n         <source>The supplied proxy address is invalid.</source>\n         <translation>\u0410\u0434\u0440\u0435\u0441 \u043f\u0440\u043e\u043a\u0441\u0438 \u043d\u0435\u0432\u0435\u0440\u0435\u043d.</translation>\n     </message>\n     <message>\n-        <location filename=\"../optionsdialog.cpp\" line=\"316\"/>\n+        <location filename=\"../optionsdialog.cpp\" line=\"318\"/>\n         <source>The supplied tor address is invalid.</source>\n         <translation>Tor \u0430\u0434\u0440\u0435\u0441 \u043d\u0435\u0432\u0435\u0440\u0435\u043d</translation>\n     </message>\n+    <message>\n+        <location filename=\"../optionsdialog.cpp\" line=\"365\"/>\n+        <source>Choose peer collector application</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location filename=\"../optionsdialog.cpp\" line=\"365\"/>\n+        <source>Applications (*.*)</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n </context>\n <context>\n     <name>OverviewPage</name>\n@@ -2773,13 +2794,13 @@ Reduce the number of addresses involved in the address creation.</source>\n     <name>SendCoinsDialog</name>\n     <message>\n         <location filename=\"../forms/sendcoinsdialog.ui\" line=\"14\"/>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"204\"/>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"209\"/>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"214\"/>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"219\"/>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"225\"/>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"230\"/>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"235\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"205\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"210\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"215\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"220\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"226\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"231\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"236\"/>\n         <source>Send Coins</source>\n         <translation>\u041e\u0442\u043f\u0440\u0430\u0432\u043a\u0430</translation>\n     </message>\n@@ -2926,103 +2947,103 @@ Reduce the number of addresses involved in the address creation.</source>\n         <translation>&amp;\u041e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u044c</translation>\n     </message>\n     <message>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"42\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"43\"/>\n         <source>Enter a NovaCoin address (e.g. 4Zo1ga6xuKuQ7JV7M9rGDoxdbYwV5zgQJ5)</source>\n         <translation>\u0412\u0432\u0435\u0434\u0438\u0442\u0435 NovaCoin-\u0430\u0434\u0440\u0435\u0441 (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440 4Zo1ga6xuKuQ7JV7M9rGDoxdbYwV5zgQJ5)</translation>\n     </message>\n     <message>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"56\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"57\"/>\n         <source>Copy quantity</source>\n         <translation>\u041a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e</translation>\n     </message>\n     <message>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"57\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"58\"/>\n         <source>Copy amount</source>\n         <translation>\u041a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0441\u0443\u043c\u043c\u0443</translation>\n     </message>\n     <message>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"58\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"59\"/>\n         <source>Copy fee</source>\n         <translation>\u041a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043a\u043e\u043c\u0438\u0441\u0441\u0438\u044e</translation>\n     </message>\n     <message>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"59\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"60\"/>\n         <source>Copy after fee</source>\n         <translation>\u041a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043f\u043e\u0441\u043b\u0435 \u043a\u043e\u043c\u0438\u0441\u0441\u0438\u0438</translation>\n     </message>\n     <message>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"60\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"61\"/>\n         <source>Copy bytes</source>\n         <translation>\u041a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043e\u0431\u044a\u0451\u043c</translation>\n     </message>\n     <message>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"61\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"62\"/>\n         <source>Copy priority</source>\n         <translation>\u041a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043f\u0440\u0438\u043e\u0440\u0438\u0442\u0435\u0442</translation>\n     </message>\n     <message>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"62\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"63\"/>\n         <source>Copy low output</source>\n         <translation>\u041a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043c\u0435\u043b\u043a\u0438\u0439 \u0432\u044b\u0445\u043e\u0434</translation>\n     </message>\n     <message>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"63\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"64\"/>\n         <source>Copy change</source>\n         <translation>\u041a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0441\u0434\u0430\u0447\u0443</translation>\n     </message>\n     <message>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"167\"/>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"169\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"168\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"170\"/>\n         <source>&lt;b&gt;%1&lt;/b&gt; to %2 (%3)</source>\n         <translation>&lt;b&gt;%1&lt;/b&gt; \u0430\u0434\u0440\u0435\u0441\u0430\u0442\u0443 %2 (%3)</translation>\n     </message>\n     <message>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"175\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"176\"/>\n         <source>Confirm send coins</source>\n         <translation>\u041f\u043e\u0434\u0442\u0432\u0435\u0440\u0434\u0438\u0442\u0435 \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0443 \u043c\u043e\u043d\u0435\u0442</translation>\n     </message>\n     <message>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"176\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"177\"/>\n         <source>Are you sure you want to send %1?</source>\n         <translation>\u0412\u044b \u0443\u0432\u0435\u0440\u0435\u043d\u044b, \u0447\u0442\u043e \u0445\u043e\u0442\u0438\u0442\u0435 \u043e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u044c %1?</translation>\n     </message>\n     <message>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"176\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"177\"/>\n         <source> and </source>\n         <translation> \u0438 </translation>\n     </message>\n     <message>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"205\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"206\"/>\n         <source>The recipient address is not valid, please recheck.</source>\n         <translation>\u0410\u0434\u0440\u0435\u0441 \u043f\u043e\u043b\u0443\u0447\u0430\u0442\u0435\u043b\u044f \u043d\u0435\u0432\u0435\u0440\u043d\u044b\u0439, \u043f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u043f\u0435\u0440\u0435\u043f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435.</translation>\n     </message>\n     <message>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"210\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"211\"/>\n         <source>The amount to pay must be larger than 0.</source>\n         <translation>\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u043e\u043d\u0435\u0442 \u0434\u043b\u044f \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438 \u0434\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c \u0431\u043e\u043b\u044c\u0448\u0435 0.</translation>\n     </message>\n     <message>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"215\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"216\"/>\n         <source>The amount exceeds your balance.</source>\n         <translation>\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c\u044b\u0445 \u043c\u043e\u043d\u0435\u0442 \u043f\u0440\u0435\u0432\u044b\u0448\u0430\u0435\u0442 \u0412\u0430\u0448 \u0431\u0430\u043b\u0430\u043d\u0441</translation>\n     </message>\n     <message>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"220\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"221\"/>\n         <source>The total exceeds your balance when the %1 transaction fee is included.</source>\n         <translation>\u0421\u0443\u043c\u043c\u0430 \u043f\u0440\u0435\u0432\u044b\u0441\u0438\u0442 \u0412\u0430\u0448 \u0431\u0430\u043b\u0430\u043d\u0441, \u0435\u0441\u043b\u0438 \u043a\u043e\u043c\u0438\u0441\u0441\u0438\u044f \u0432 \u0440\u0430\u0437\u043c\u0435\u0440\u0435 %1 \u0431\u0443\u0434\u0435\u0442 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0430 \u043a \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0438</translation>\n     </message>\n     <message>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"226\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"227\"/>\n         <source>Duplicate address found, can only send to each address once per send operation.</source>\n         <translation>\u041e\u0431\u043d\u0430\u0440\u0443\u0436\u0435\u043d \u0434\u0443\u0431\u043b\u0438\u0440\u0443\u044e\u0449\u0438\u0439\u0441\u044f \u0430\u0434\u0440\u0435\u0441. \u041e\u0442\u043f\u0440\u0430\u0432\u043a\u0430 \u043d\u0430 \u043e\u0434\u0438\u043d \u0438 \u0442\u043e\u0442 \u0436\u0435 \u0430\u0434\u0440\u0435\u0441 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u0430 \u0442\u043e\u043b\u044c\u043a\u043e \u043e\u0434\u0438\u043d \u0440\u0430\u0437 \u0437\u0430 \u043e\u0434\u043d\u0443 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044e \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438</translation>\n     </message>\n     <message>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"231\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"232\"/>\n         <source>Error: Transaction creation failed.</source>\n         <translation>\u041e\u0448\u0438\u0431\u043a\u0430: \u043d\u0435 \u0443\u0434\u0430\u043b\u043e\u0441\u044c \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u044e.</translation>\n     </message>\n     <message>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"236\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"237\"/>\n         <source>Error: The transaction was rejected. This might happen if some of the coins in your wallet were already spent, such as if you used a copy of wallet.dat and coins were spent in the copy but not marked as spent here.</source>\n         <translation>\u041e\u0448\u0438\u0431\u043a\u0430: \u0412 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0438 \u043e\u0442\u043a\u0430\u0437\u0430\u043d\u043e.  \u0422\u0430\u043a\u043e\u0435 \u043c\u043e\u0436\u0435\u0442 \u043f\u0440\u043e\u0438\u0437\u043e\u0439\u0442\u0438, \u0435\u0441\u043b\u0438 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u043e\u043d\u0435\u0442\u044b \u0443\u0436\u0435 \u0431\u044b\u043b\u0438 \u043f\u043e\u0442\u0440\u0430\u0447\u0435\u043d\u044b, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0435\u0441\u043b\u0438 \u0412\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0435 \u043e\u0434\u043d\u0443 \u043a\u043e\u043f\u0438\u044e \u0444\u0430\u0439\u043b\u0430 wallet.dat, \u0430 \u043c\u043e\u043d\u0435\u0442\u044b \u0431\u044b\u043b\u0438 \u043f\u043e\u0442\u0440\u0430\u0447\u0435\u043d\u044b \u0438\u0437 \u0434\u0440\u0443\u0433\u043e\u0439 \u043a\u043e\u043f\u0438\u0438, \u043d\u043e \u043d\u0435 \u0431\u044b\u043b\u0438 \u043e\u0442\u043c\u0435\u0447\u0435\u043d\u044b \u043a\u0430\u043a \u043f\u043e\u0442\u0440\u0430\u0447\u0435\u043d\u043d\u044b\u0435 \u0432 \u044d\u0442\u043e\u0439.</translation>\n     </message>\n@@ -4365,87 +4386,87 @@ If the file does not exist, create it with owner-readable-only file permissions.\n         <translation>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c OpenSSL (https) \u0434\u043b\u044f \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439 JSON-RPC</translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"167\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"165\"/>\n         <source>Use proxy to reach tor hidden services (default: same as -proxy)</source>\n         <translation>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043f\u0440\u043e\u043a\u0441\u0438 \u0434\u043b\u044f \u0441\u043a\u0440\u044b\u0442\u044b\u0445 \u0441\u0435\u0440\u0432\u0438\u0441\u043e\u0432 tor(\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: \u0442\u043e\u0442 \u0436\u0435, \u0447\u0442\u043e \u0438 \u0432 -proxy)</translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"168\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"166\"/>\n         <source>Use the test network</source>\n         <translation>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0442\u0435\u0441\u0442\u043e\u0432\u0443\u044e \u0441\u0435\u0442\u044c</translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"169\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"167\"/>\n         <source>Username for JSON-RPC connections</source>\n         <translation>\u0418\u043c\u044f \u0434\u043b\u044f \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439 JSON-RPC</translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"170\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"168\"/>\n         <source>Verifying database integrity...</source>\n         <translation>\u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0446\u0435\u043b\u043e\u0441\u0442\u043d\u043e\u0441\u0442\u0438 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445...</translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"171\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"169\"/>\n         <source>Wallet needed to be rewritten: restart NovaCoin to complete</source>\n         <translation>\u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043f\u0435\u0440\u0435\u0437\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u0431\u0443\u043c\u0430\u0436\u043d\u0438\u043a, \u043f\u0435\u0440\u0435\u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u0435 NovaCoin \u0434\u043b\u044f \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438.</translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"172\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"170\"/>\n         <source>Warning: Disk space is low!</source>\n         <translation>\u0412\u043d\u0438\u043c\u0430\u043d\u0438\u0435: \u043c\u0430\u043b\u043e \u043c\u0435\u0441\u0442\u0430 \u043d\u0430 \u0434\u0438\u0441\u043a\u0435!</translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"173\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"171\"/>\n         <source>Warning: This version is obsolete, upgrade required!</source>\n         <translation>\u0412\u043d\u0438\u043c\u0430\u043d\u0438\u0435: \u044d\u0442\u0430 \u0432\u0435\u0440\u0441\u0438\u044f \u0443\u0441\u0442\u0430\u0440\u0435\u043b\u0430, \u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435!</translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"174\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"172\"/>\n         <source>wallet.dat corrupt, salvage failed</source>\n         <translation>wallet.dat \u043f\u043e\u0432\u0440\u0435\u0436\u0434\u0435\u043d, \u0432\u043e\u0441\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u043d\u0435 \u0443\u0434\u0430\u043b\u043e\u0441\u044c</translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"175\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"173\"/>\n         <source>Specify wallet file (within data directory)</source>\n         <translation>\u0423\u043a\u0430\u0437\u0430\u0442\u044c \u0444\u0430\u0439\u043b \u043a\u043e\u0448\u0435\u043b\u044c\u043a\u0430 (\u0432 \u043f\u0440\u0435\u0434\u0435\u043b\u0430\u0445 DATA \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438)</translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"176\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"174\"/>\n         <source>Use in-memory logging for block index database (default: 1)</source>\n         <translation>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0432\u0435\u0434\u0435\u043d\u0438\u0435 \u0436\u0443\u0440\u043d\u0430\u043b\u0430 \u0432 \u043f\u0430\u043c\u044f\u0442\u0438 \u0434\u043b\u044f \u0438\u043d\u0434\u0435\u043a\u0441\u0430 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445 \u0431\u043b\u043e\u043a\u043e\u0432 (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: 1)</translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"177\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"175\"/>\n         <source>Find peers using DNS lookup (default: 1)</source>\n         <translation>\u0418\u0441\u043a\u0430\u0442\u044c \u0443\u0437\u043b\u044b \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e DNS (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: 1)</translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"178\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"176\"/>\n         <source>Sync checkpoints policy (default: strict)</source>\n         <translation>\u041f\u043e\u043b\u0438\u0442\u0438\u043a\u0430 \u0441\u0438\u043d\u0445\u0440\u043e\u043d\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u043c\u0435\u0442\u043e\u043a (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: strict)</translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"179\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"177\"/>\n         <source>Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)</source>\n         <translation>\u0412\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u043a\u043e\u043c\u0430\u043d\u0434\u0443, \u043a\u043e\u0433\u0434\u0430 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0430 \u043d\u043e\u0432\u0430\u044f \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u044f (%s \u0432 \u043a\u043e\u043c\u0430\u043d\u0434\u0435 \u0437\u0430\u043c\u0435\u043d\u044f\u0435\u0442\u0441\u044f \u043d\u0430 ID \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0438)</translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"180\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"178\"/>\n         <source>Require a confirmations for change (default: 0)</source>\n         <translation>\u0422\u0440\u0435\u0431\u043e\u0432\u0430\u0442\u044c \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u044f \u0434\u043b\u044f \u0441\u0434\u0430\u0447\u0438 (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: 0)</translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"181\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"179\"/>\n         <source>Enforce transaction scripts to use canonical PUSH operators (default: 1)</source>\n         <translation>\u0422\u0440\u0435\u0431\u043e\u0432\u0430\u0442\u044c \u043e\u0442 \u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0432 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0445 PUSH \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440\u043e\u0432 (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: 1)</translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"182\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"180\"/>\n         <source>Set the number of script verification threads (1-16, 0=auto, default: 0)</source>\n         <translation>\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0447\u0438\u0441\u043b\u043e \u043f\u043e\u0442\u043e\u043a\u043e\u0432 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u0441\u043a\u0440\u0438\u043f\u0442\u0430 (1-16, 0= \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438, \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: 0)</translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"183\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"181\"/>\n         <source>When creating transactions, ignore inputs with value less than this (default: %s)</source>\n         <translation>\u041f\u0440\u0438 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0438 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0439 \u0438\u0433\u043d\u043e\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0432\u0445\u043e\u0434\u044b \u0441 \u0441\u0443\u043c\u043c\u043e\u0439 \u043d\u0438\u0436\u0435 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0439 (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: %s)</translation>\n     </message>"
      },
      {
        "sha": "f48acac01009e55227a44a53d48e520263668edc",
        "filename": "src/qt/locale/bitcoin_uk.ts",
        "status": "modified",
        "additions": 148,
        "deletions": 127,
        "changes": 275,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9d2db684c11f18c0d5e4f6622ee9e919b42267ea/src/qt/locale/bitcoin_uk.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9d2db684c11f18c0d5e4f6622ee9e919b42267ea/src/qt/locale/bitcoin_uk.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_uk.ts?ref=9d2db684c11f18c0d5e4f6622ee9e919b42267ea",
        "patch": "@@ -1,6 +1,7 @@\n <?xml version=\"1.0\" encoding=\"utf-8\"?>\n <!DOCTYPE TS>\n-<TS version=\"2.1\" language=\"uk_UA\">\n+<TS version=\"2.0\" language=\"uk_UA\">\n+<defaultcodec>UTF-8</defaultcodec>\n <context>\n     <name>AboutDialog</name>\n     <message>\n@@ -105,32 +106,32 @@ Copyright \u00a9 2012-2016 The NovaCoin developers</source>\n         <translation>&amp;\u0412\u0438\u0434\u0430\u043b\u0438\u0442\u0438</translation>\n     </message>\n     <message>\n-        <location filename=\"../addressbookpage.cpp\" line=\"65\"/>\n+        <location filename=\"../addressbookpage.cpp\" line=\"61\"/>\n         <source>Copy &amp;Label</source>\n         <translation>\u0421\u043a\u043e\u043f\u0456\u044e\u0432\u0430\u0442\u0438 &amp;\u043c\u0456\u0442\u043a\u0443</translation>\n     </message>\n     <message>\n-        <location filename=\"../addressbookpage.cpp\" line=\"67\"/>\n+        <location filename=\"../addressbookpage.cpp\" line=\"63\"/>\n         <source>&amp;Edit</source>\n         <translation>&amp;\u0420\u0435\u0434\u0430\u0433\u0443\u0432\u0430\u0442\u0438</translation>\n     </message>\n     <message>\n-        <location filename=\"../addressbookpage.cpp\" line=\"327\"/>\n+        <location filename=\"../addressbookpage.cpp\" line=\"317\"/>\n         <source>Export Address Book Data</source>\n         <translation>\u0415\u043a\u0441\u043f\u043e\u0440\u0442\u0443\u0432\u0430\u0442\u0438 \u0430\u0434\u0440\u0435\u0441\u043d\u0443 \u043a\u043d\u0438\u0433\u0443</translation>\n     </message>\n     <message>\n-        <location filename=\"../addressbookpage.cpp\" line=\"328\"/>\n+        <location filename=\"../addressbookpage.cpp\" line=\"318\"/>\n         <source>Comma separated file (*.csv)</source>\n         <translation>\u0424\u0430\u0439\u043b\u0438 \u0432\u0456\u0434\u0434\u0456\u043b\u0435\u043d\u0456 \u043a\u043e\u043c\u0430\u043c\u0438 (*.csv)</translation>\n     </message>\n     <message>\n-        <location filename=\"../addressbookpage.cpp\" line=\"341\"/>\n+        <location filename=\"../addressbookpage.cpp\" line=\"331\"/>\n         <source>Error exporting</source>\n         <translation>\u041f\u043e\u043c\u0438\u043b\u043a\u0430 \u043f\u0440\u0438 \u0435\u043a\u0441\u043f\u043e\u0440\u0442\u0443\u0432\u0430\u043d\u043d\u0456</translation>\n     </message>\n     <message>\n-        <location filename=\"../addressbookpage.cpp\" line=\"341\"/>\n+        <location filename=\"../addressbookpage.cpp\" line=\"331\"/>\n         <source>Could not write to file %1.</source>\n         <translation>\u041d\u0435\u043c\u043e\u0436\u043b\u0438\u0432\u043e \u0437\u0430\u043f\u0438\u0441\u0430\u0442\u0438 \u0443 \u0444\u0430\u0439\u043b %1.</translation>\n     </message>\n@@ -952,7 +953,7 @@ Some or all keys from:\n     </message>\n     <message>\n         <location filename=\"../forms/coincontroldialog.ui\" line=\"262\"/>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"543\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"549\"/>\n         <source>no</source>\n         <translation>\u043d\u0456</translation>\n     </message>\n@@ -1022,108 +1023,108 @@ Some or all keys from:\n         <translation>\u041f\u0440\u0456\u043e\u0440\u0438\u0442\u0435\u0442</translation>\n     </message>\n     <message>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"38\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"40\"/>\n         <source>Copy address</source>\n         <translation>\u0421\u043a\u043e\u043f\u0456\u044e\u0432\u0430\u0442\u0438 \u0430\u0434\u0440\u0435\u0441\u0443</translation>\n     </message>\n     <message>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"39\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"41\"/>\n         <source>Copy label</source>\n         <translation>\u0421\u043a\u043e\u043f\u0456\u044e\u0432\u0430\u0442\u0438 \u043c\u0456\u0442\u043a\u0443</translation>\n     </message>\n     <message>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"40\"/>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"66\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"42\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"68\"/>\n         <source>Copy amount</source>\n         <translation>\u0421\u043a\u043e\u043f\u0456\u044e\u0432\u0430\u0442\u0438 \u0441\u0443\u043c\u0443</translation>\n     </message>\n     <message>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"41\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"43\"/>\n         <source>Copy transaction ID</source>\n         <translation>\u0421\u043a\u043e\u043f\u0456\u044e\u0432\u0430\u0442\u0438 ID \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u0457</translation>\n     </message>\n     <message>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"65\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"67\"/>\n         <source>Copy quantity</source>\n         <translation>\u0421\u043a\u043e\u043f\u0456\u044e\u0432\u0430\u0442\u0438 \u043a\u0456\u043b\u044c\u043a\u0456\u0441\u0442\u044c</translation>\n     </message>\n     <message>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"67\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"69\"/>\n         <source>Copy fee</source>\n         <translation>\u0421\u043a\u043e\u043f\u0456\u044e\u0432\u0430\u0442\u0438 \u043a\u043e\u043c\u0456\u0441\u0456\u044e</translation>\n     </message>\n     <message>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"68\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"70\"/>\n         <source>Copy after fee</source>\n         <translation>\u0421\u043a\u043e\u043f\u0456\u044e\u0432\u0430\u0442\u0438 \u043f\u0456\u0441\u043b\u044f \u043a\u043e\u043c\u0456\u0441\u0456\u0457</translation>\n     </message>\n     <message>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"69\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"71\"/>\n         <source>Copy bytes</source>\n         <translation>\u0421\u043a\u043e\u043f\u0456\u044e\u0432\u0430\u0442\u0438 \u0431\u0430\u0439\u0442\u0438</translation>\n     </message>\n     <message>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"70\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"72\"/>\n         <source>Copy priority</source>\n         <translation>\u0421\u043a\u043e\u043f\u0456\u044e\u0432\u0430\u0442\u0438 \u043f\u0440\u0456\u043e\u0440\u0456\u0442\u0435\u0442</translation>\n     </message>\n     <message>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"71\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"73\"/>\n         <source>Copy low output</source>\n         <translation>\u0421\u043a\u043e\u043f\u0456\u044e\u0432\u0430\u0442\u0438 \u043c\u0430\u043b\u0435\u043d\u044c\u043a\u0456 \u0432\u0438\u0445\u043e\u0434\u0438</translation>\n     </message>\n     <message>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"72\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"74\"/>\n         <source>Copy change</source>\n         <translation>\u0421\u043a\u043e\u043f\u0456\u044e\u0432\u0430\u0442\u0438 \u0440\u0435\u0448\u0442\u0443</translation>\n     </message>\n     <message>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"392\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"394\"/>\n         <source>highest</source>\n         <translation>\u043d\u0430\u0439\u0432\u0438\u0449\u0438\u0439</translation>\n     </message>\n     <message>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"393\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"395\"/>\n         <source>high</source>\n         <translation>\u0432\u0438\u0441\u043e\u043a\u0438\u0439</translation>\n     </message>\n     <message>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"394\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"396\"/>\n         <source>medium-high</source>\n         <translation>\u0432\u0438\u0449\u0435 \u0437\u0430 \u0441\u0435\u0440\u0435\u0434\u043d\u0456\u0439</translation>\n     </message>\n     <message>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"395\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"397\"/>\n         <source>medium</source>\n         <translation>\u0441\u0435\u0440\u0435\u0434\u043d\u0456\u0439</translation>\n     </message>\n     <message>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"399\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"401\"/>\n         <source>low-medium</source>\n         <translation>\u043d\u0438\u0436\u0447\u0435 \u0437\u0430 \u0441\u0435\u0440\u0435\u0434\u043d\u0456\u0439</translation>\n     </message>\n     <message>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"400\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"402\"/>\n         <source>low</source>\n         <translation>\u043d\u0438\u0437\u044c\u043a\u0438\u0439</translation>\n     </message>\n     <message>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"401\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"403\"/>\n         <source>lowest</source>\n         <translation>\u043d\u0430\u0439\u043d\u0438\u0436\u0447\u0438\u0439</translation>\n     </message>\n     <message>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"543\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"549\"/>\n         <source>DUST</source>\n         <translation>\u041f\u0418\u041b</translation>\n     </message>\n     <message>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"543\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"549\"/>\n         <source>yes</source>\n         <translation>\u0442\u0430\u043a</translation>\n     </message>\n     <message>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"553\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"559\"/>\n         <source>This label turns red, if the transaction size is bigger than 1000 bytes.\n \n  This means a fee of at least %1 per kb is required.\n@@ -1136,7 +1137,7 @@ Some or all keys from:\n \u041c\u043e\u0436\u0435 \u0432\u0456\u0434\u0440\u0456\u0437\u043d\u044f\u0442\u0438\u0441\u044f \u043d\u0430 +/- 1 \u0431\u0430\u0439\u0442 \u0437\u0430 \u0432\u0445\u0456\u0434.</translation>\n     </message>\n     <message>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"554\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"560\"/>\n         <source>Transactions with higher priority get more likely into a block.\n \n This label turns red, if the priority is smaller than &quot;medium&quot;.\n@@ -1149,7 +1150,7 @@ This label turns red, if the priority is smaller than &quot;medium&quot;.\n \u0426\u0435 \u043e\u0437\u043d\u0430\u0447\u0430\u0454, \u0449\u043e \u043d\u0435\u043e\u0431\u0445\u0456\u0434\u043d\u043e \u0432\u043d\u0435\u0441\u0442\u0438 \u043a\u043e\u043c\u0456\u0441\u0456\u044e (\u0449\u043e\u043d\u0430\u0439\u043c\u0435\u043d\u0448\u0435 %1 \u0437\u0430 \u041a\u0411).</translation>\n     </message>\n     <message>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"555\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"561\"/>\n         <source>This label turns red, if any recipient receives an amount smaller than %1.\n \n  This means a fee of at least %2 is required. \n@@ -1162,7 +1163,7 @@ This label turns red, if the priority is smaller than &quot;medium&quot;.\n \u0421\u0443\u043c\u0438 \u043d\u0438\u0436\u0447\u0435 \u043c\u0456\u043d\u0456\u043c\u0430\u043b\u044c\u043d\u043e\u0457 \u043a\u043e\u043c\u0456\u0441\u0456\u0457 \u043f\u043e\u043a\u0430\u0437\u0430\u043d\u0456 \u044f\u043a &quot;\u041f\u0418\u041b&quot;.</translation>\n     </message>\n     <message>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"556\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"562\"/>\n         <source>This label turns red, if the change is smaller than %1.\n \n  This means a fee of at least %2 is required.</source>\n@@ -1171,18 +1172,18 @@ This label turns red, if the priority is smaller than &quot;medium&quot;.\n \u0426\u0435 \u043e\u0437\u043d\u0430\u0447\u0430\u0454, \u0449\u043e \u043d\u0435\u043e\u0431\u0445\u0456\u0434\u043d\u043e \u0432\u043d\u0435\u0441\u0442\u0438 \u043a\u043e\u043c\u0456\u0441\u0456\u044e (\u0449\u043e\u043d\u0430\u0439\u043c\u0435\u043d\u0448\u0435 %2).</translation>\n     </message>\n     <message>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"593\"/>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"662\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"599\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"672\"/>\n         <source>(no label)</source>\n         <translation>(\u043d\u0435\u043c\u0430\u0454 \u043d\u0430\u0437\u0432\u0438)</translation>\n     </message>\n     <message>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"653\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"663\"/>\n         <source>change from %1 (%2)</source>\n         <translation>\u0437\u0434\u0430\u0447\u0430 \u0437 %1 (%2)</translation>\n     </message>\n     <message>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"654\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"664\"/>\n         <source>(change)</source>\n         <translation>(\u0440\u0435\u0448\u0442\u0430)</translation>\n     </message>\n@@ -2008,197 +2009,217 @@ Reduce the number of addresses involved in the address creation.</source>\n         <translation>&amp;\u041c\u0435\u0440\u0435\u0436\u0430</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"136\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"126\"/>\n         <source>Connect to the NovaCoin network through a SOCKS proxy (e.g. when connecting through Tor).</source>\n         <translation>\u041f\u0456\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u043d\u044f \u0434\u043e \u043c\u0435\u0440\u0435\u0436\u0456 \u0447\u0435\u0440\u0435\u0437 SOCKS5 \u043f\u0440\u043e\u043a\u0441\u0456 (\u043d\u0430\u043f\u0440. \u043f\u0440\u0438 \u043f\u0456\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u043d\u0456 \u0447\u0435\u0440\u0435\u0437 Tor).</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"139\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"129\"/>\n         <source>&amp;Connect through SOCKS proxy:</source>\n         <translation>&amp;\u041f\u0456\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u043d\u044f \u0447\u0435\u0440\u0435\u0437 SOCKS \u043f\u0440\u043e\u043a\u0441\u0456:</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"148\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"138\"/>\n         <source>Proxy &amp;IP:</source>\n         <translation>&amp;IP \u043f\u0440\u043e\u043a\u0441\u0456:</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"167\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"157\"/>\n         <source>IP address of the proxy (e.g. 127.0.0.1)</source>\n         <translation>IP-\u0430\u0434\u0440\u0435\u0441\u0430 \u043f\u0440\u043e\u043a\u0441\u0456-\u0441\u0435\u0440\u0432\u0435\u0440\u0430 (\u043d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434, 127.0.0.1)</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"174\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"164\"/>\n         <source>&amp;Port:</source>\n         <translation>&amp;\u041f\u043e\u0440\u0442:</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"193\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"183\"/>\n         <source>Port of the proxy (e.g. 9050)</source>\n         <translation>\u041f\u043e\u0440\u0442 \u043f\u0440\u043e\u043a\u0441\u0456-\u0441\u0435\u0440\u0432\u0435\u0440\u0430 (\u043d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434 9050)</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"200\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"190\"/>\n         <source>SOCKS &amp;Version:</source>\n         <translation>SOCKS &amp;\u0432\u0435\u0440\u0441\u0456\u044f:</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"213\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"203\"/>\n         <source>SOCKS version of the proxy (e.g. 5)</source>\n         <translation>SOCKS \u0432\u0435\u0440\u0441\u0456\u044f \u043f\u0440\u043e\u043a\u0441\u0456 (\u043d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434, 5)</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"235\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"225\"/>\n         <source>Connect through &amp;Tor:</source>\n         <translation>\u0417&apos;\u0454\u0434\u043d\u0430\u043d\u043d\u044f \u0447\u0435\u0440\u0435\u0437 &amp;\u0422\u043e\u0440:</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"250\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"240\"/>\n         <source>Tor IP:</source>\n         <translation>\u0422\u043e\u0440 IP:</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"267\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"257\"/>\n         <source>Port:</source>\n         <translation>\u041f\u043e\u0440\u0442:</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"284\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"274\"/>\n         <source>Use Tor only</source>\n         <translation>\u0412\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u043e\u0432\u0443\u0432\u0430\u0442\u0438 \u0442\u0456\u043b\u044c\u043a\u0438 Tor</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"308\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"298\"/>\n         <source>Tor name:</source>\n         <translation>\u0422\u043e\u0440 \u0456\u043c&apos;\u044f:</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"353\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"331\"/>\n+        <source>Seeder command:</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"341\"/>\n+        <source>Choose ...</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"364\"/>\n         <source>&amp;Window</source>\n         <translation>&amp;\u0412\u0456\u043a\u043d\u043e</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"359\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"370\"/>\n         <source>Show only a tray icon after minimizing the window.</source>\n         <translation>\u041f\u043e\u043a\u0430\u0437\u0443\u0432\u0430\u0442\u0438 \u043b\u0438\u0448\u0435 \u0456\u043a\u043e\u043d\u043a\u0443 \u0432 \u0442\u0440\u0435\u0457 \u043f\u0456\u0441\u043b\u044f \u0437\u0433\u043e\u0440\u0442\u0430\u043d\u043d\u044f \u0432\u0456\u043a\u043d\u0430.</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"362\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"373\"/>\n         <source>&amp;Minimize to the tray instead of the taskbar</source>\n         <translation>\u041c\u0456\u043d\u0456\u043c\u0456\u0437\u0443\u0432\u0430\u0442\u0438 &amp;\u0443 \u0442\u0440\u0435\u0439</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"369\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"380\"/>\n         <source>Minimize instead of exit the application when the window is closed. When this option is enabled, the application will be closed only after selecting Exit in the menu.</source>\n         <translation>\u0417\u0433\u043e\u0440\u0442\u0430\u0442\u0438 \u0437\u0430\u043c\u0456\u0441\u0442\u044c \u0437\u0430\u043a\u0440\u0438\u0442\u0442\u044f. \u042f\u043a\u0449\u043e \u0446\u044f \u043e\u043f\u0446\u0456\u044f \u0432\u043a\u043b\u044e\u0447\u0435\u043d\u0430, \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u0430 \u0437\u0430\u043a\u0440\u0438\u0454\u0442\u044c\u0441\u044f \u043b\u0438\u0448\u0435 \u043f\u0456\u0441\u043b\u044f \u0432\u0438\u0431\u043e\u0440\u0443 \u0432\u0456\u0434\u043f\u043e\u0432\u0456\u0434\u043d\u043e\u0433\u043e \u043f\u0443\u043d\u043a\u0442\u0443 \u0432 \u043c\u0435\u043d\u044e.</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"372\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"383\"/>\n         <source>M&amp;inimize on close</source>\n         <translation>\u0417\u0433\u043e\u0440\u0442\u0430\u0442\u0438 \u0437\u0430\u043c\u0456\u0441\u0442\u044c \u0437\u0430\u043a\u0440\u0438\u0442\u0442&amp;\u044f</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"393\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"404\"/>\n         <source>&amp;Display</source>\n         <translation>&amp;\u0412\u0456\u0434\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u043d\u044f</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"401\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"412\"/>\n         <source>User Interface &amp;language:</source>\n         <translation>\u041c\u043e\u0432&amp;\u0430 \u0456\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0443 \u043a\u043e\u0440\u0438\u0441\u0442\u0443\u0432\u0430\u0447\u0430:</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"414\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"425\"/>\n         <source>The user interface language can be set here. This setting will take effect after restarting NovaCoin.</source>\n         <translation>\u0412\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u044e\u0454 \u043c\u043e\u0432\u0443 \u0456\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0443. \u0417\u043c\u0456\u043d\u0438 \u043d\u0430\u0431\u0443\u0434\u0443\u0442\u044c \u0447\u0438\u043d\u043d\u043e\u0441\u0442\u0456 \u043f\u0456\u0441\u043b\u044f \u043f\u0435\u0440\u0435\u0437\u0430\u043f\u0443\u0441\u043a\u0443 NovaCoin.</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"425\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"436\"/>\n         <source>&amp;Unit to show amounts in:</source>\n         <translation>\u0412&amp;\u0438\u043c\u0456\u0440\u044e\u0432\u0430\u0442\u0438 \u0441\u0443\u043c\u0438 \u0432:</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"438\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"449\"/>\n         <source>Choose the default subdivision unit to show in the interface and when sending coins.</source>\n         <translation>\u0412\u0438\u0431\u0435\u0440\u0456\u0442\u044c \u043e\u0434\u0438\u043d\u0438\u0446\u044e \u0432\u0438\u043c\u0456\u0440\u044e\u0432\u0430\u043d\u043d\u044f \u043c\u043e\u043d\u0435\u0442, \u044f\u043a\u0430 \u0431\u0443\u0434\u0435 \u0432\u0456\u0434\u043e\u0431\u0440\u0430\u0436\u0430\u0442\u0438\u0441\u044c \u0432 \u0433\u0430\u043c\u0430\u043d\u0446\u0456 \u0442\u0430 \u043f\u0440\u0438 \u0432\u0456\u0434\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u043d\u0456.</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"447\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"458\"/>\n         <source>Whether to show NovaCoin addresses in the transaction list or not.</source>\n         <translation>\u0412\u0456\u0434\u043e\u0431\u0440\u0430\u0436\u0430\u0442\u0438 \u0430\u0434\u0440\u0435\u0441\u0438 NovaCoin \u0443 \u0441\u043f\u0438\u0441\u043a\u0443 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u0439 \u0447\u0438 \u043d\u0456.</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"450\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"461\"/>\n         <source>&amp;Display addresses in transaction list</source>\n         <translation>&amp;\u0412\u0456\u0434\u043e\u0431\u0440\u0430\u0436\u0430\u0442\u0438 \u0430\u0434\u0440\u0435\u0441\u0438 \u0443 \u043b\u0438\u0441\u0442\u0456 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u0439</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"457\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"468\"/>\n         <source>Whether to show coin control features or not.</source>\n         <translation>\u041f\u043e\u043a\u0430\u0437\u0430\u0442\u0438 \u0430\u0431\u043e \u0441\u0445\u043e\u0432\u0430\u0442\u0438 \u043a\u0435\u0440\u0443\u0432\u0430\u043d\u043d\u044f \u0432\u0445\u043e\u0434\u0430\u043c\u0438.</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"460\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"471\"/>\n         <source>Display coin &amp;control features (experts only!)</source>\n         <translation>\u0423\u043f\u0440\u0430\u0432\u043b\u0456\u043d\u043d\u044f \u0432\u0445\u043e\u0434\u0430\u043c\u0438 (\u0442\u0456\u043b\u044c\u043a\u0438 \u0434\u043b\u044f \u0435\u043a\u0441\u043f\u0435\u0440\u0442\u0456\u0432!)</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"469\"/>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"482\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"480\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"493\"/>\n         <source>Third party URLs (e.g. explorer.novaco.in) that appear in the transactions tab as context menu items. %s in the URL is replaced by transaction hash. Multiple URLs are separated by vertical bar |.</source>\n         <translation>\u0421\u0442\u043e\u0440\u043e\u043d\u043d\u0456 URL (\u043d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434 explorer.novaco.in), \u044f\u043a\u0456 \u0432\u0456\u0434\u043e\u0431\u0440\u0430\u0436\u0430\u044e\u0442\u044c\u0441\u044f \u043d\u0430 \u0432\u043a\u043b\u0430\u0434\u0446\u0456 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u0439 \u044f\u043a \u043f\u0443\u043d\u043a\u0442\u0438 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u043d\u043e\u0433\u043e \u043c\u0435\u043d\u044e. %s \u0432 URL \u0437\u0430\u043c\u0456\u043d\u044e\u0454\u0442\u044c\u0441\u044f \u0445\u0435\u0448\u0435\u043c \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u0457. URL \u0432\u0456\u0434\u043e\u043a\u0440\u0435\u043c\u043b\u044e\u044e\u0442\u044c\u0441\u044f \u043e\u0434\u0438\u043d \u0432\u0456\u0434 \u043e\u0434\u043d\u043e\u0433\u043e \u0432\u0435\u0440\u0442\u0438\u043a\u0430\u043b\u044c\u043d\u043e\u044e \u0440\u0438\u0441\u043a\u043e\u044e |.</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"472\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"483\"/>\n         <source>Third party transaction URLs</source>\n         <translation>\u0421\u0442\u043e\u0440\u043e\u043d\u043d\u0456 URL \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u0439</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"555\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"566\"/>\n         <source>&amp;OK</source>\n         <translation>&amp;\u0413\u0430\u0440\u0430\u0437\u0434</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"562\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"573\"/>\n         <source>&amp;Cancel</source>\n         <translation>&amp;\u0421\u043a\u0430\u0441\u0443\u0432\u0430\u0442\u0438</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"572\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"583\"/>\n         <source>&amp;Apply</source>\n         <translation>&amp;\u0417\u0430\u0441\u0442\u043e\u0441\u0443\u0432\u0430\u0442\u0438</translation>\n     </message>\n     <message>\n-        <location filename=\"../optionsdialog.cpp\" line=\"74\"/>\n+        <location filename=\"../optionsdialog.cpp\" line=\"77\"/>\n         <source>default</source>\n         <translation>\u0442\u0438\u043f\u043e\u0432\u043e</translation>\n     </message>\n     <message>\n-        <location filename=\"../optionsdialog.cpp\" line=\"240\"/>\n-        <location filename=\"../optionsdialog.cpp\" line=\"249\"/>\n-        <location filename=\"../optionsdialog.cpp\" line=\"258\"/>\n-        <location filename=\"../optionsdialog.cpp\" line=\"267\"/>\n+        <location filename=\"../optionsdialog.cpp\" line=\"242\"/>\n+        <location filename=\"../optionsdialog.cpp\" line=\"251\"/>\n+        <location filename=\"../optionsdialog.cpp\" line=\"260\"/>\n+        <location filename=\"../optionsdialog.cpp\" line=\"269\"/>\n         <source>Warning</source>\n         <translation>\u041f\u043e\u043f\u0435\u0440\u0435\u0434\u0436\u0435\u043d\u043d\u044f</translation>\n     </message>\n     <message>\n-        <location filename=\"../optionsdialog.cpp\" line=\"240\"/>\n-        <location filename=\"../optionsdialog.cpp\" line=\"249\"/>\n-        <location filename=\"../optionsdialog.cpp\" line=\"258\"/>\n-        <location filename=\"../optionsdialog.cpp\" line=\"267\"/>\n+        <location filename=\"../optionsdialog.cpp\" line=\"242\"/>\n+        <location filename=\"../optionsdialog.cpp\" line=\"251\"/>\n+        <location filename=\"../optionsdialog.cpp\" line=\"260\"/>\n+        <location filename=\"../optionsdialog.cpp\" line=\"269\"/>\n         <source>This setting will take effect after restarting NovaCoin.</source>\n         <translation>\u0426\u0435\u0439 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 \u043d\u0430\u0431\u0443\u0434\u0435 \u0447\u0438\u043d\u043d\u043e\u0441\u0442\u0456 \u043f\u0456\u0441\u043b\u044f \u043f\u0435\u0440\u0435\u0437\u0430\u0432\u0430\u043d\u0442\u0430\u0436\u0435\u043d\u043d\u044f NovaCoin.</translation>\n     </message>\n     <message>\n-        <location filename=\"../optionsdialog.cpp\" line=\"297\"/>\n+        <location filename=\"../optionsdialog.cpp\" line=\"299\"/>\n         <source>The supplied proxy address is invalid.</source>\n         <translation>\u041d\u0430\u0434\u0430\u043d\u0430 \u0430\u0434\u0440\u0435\u0441\u0430 \u043f\u0440\u043e\u043a\u0441\u0456-\u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u043d\u0435\u0434\u0456\u0439\u0441\u043d\u0430.</translation>\n     </message>\n     <message>\n-        <location filename=\"../optionsdialog.cpp\" line=\"316\"/>\n+        <location filename=\"../optionsdialog.cpp\" line=\"318\"/>\n         <source>The supplied tor address is invalid.</source>\n         <translation>\u041d\u0430\u0434\u0430\u043d\u0430 \u0430\u0434\u0440\u0435\u0441\u0430 \u0442\u043e\u0440 \u043d\u0435\u0434\u0456\u0439\u0441\u043d\u0430.</translation>\n     </message>\n+    <message>\n+        <location filename=\"../optionsdialog.cpp\" line=\"365\"/>\n+        <source>Choose peer collector application</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location filename=\"../optionsdialog.cpp\" line=\"365\"/>\n+        <source>Applications (*.*)</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n </context>\n <context>\n     <name>OverviewPage</name>\n@@ -2663,7 +2684,7 @@ Reduce the number of addresses involved in the address creation.</source>\n     </message>\n     <message>\n         <location filename=\"../forms/secondauthdialog.ui\" line=\"17\"/>\n-        <source>Second Authentication</source>\n+        <source>Second Authentification</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n@@ -2776,13 +2797,13 @@ Reduce the number of addresses involved in the address creation.</source>\n     <name>SendCoinsDialog</name>\n     <message>\n         <location filename=\"../forms/sendcoinsdialog.ui\" line=\"14\"/>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"204\"/>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"209\"/>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"214\"/>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"219\"/>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"225\"/>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"230\"/>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"235\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"205\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"210\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"215\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"220\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"226\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"231\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"236\"/>\n         <source>Send Coins</source>\n         <translation>\u0412\u0456\u0434\u043f\u0440\u0430\u0432\u0438\u0442\u0438</translation>\n     </message>\n@@ -2929,103 +2950,103 @@ Reduce the number of addresses involved in the address creation.</source>\n         <translation>&amp;\u0412\u0456\u0434\u043f\u0440\u0430\u0432\u0438\u0442\u0438</translation>\n     </message>\n     <message>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"42\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"43\"/>\n         <source>Enter a NovaCoin address (e.g. 4Zo1ga6xuKuQ7JV7M9rGDoxdbYwV5zgQJ5)</source>\n         <translation>\u0412\u0432\u0435\u0434\u0456\u0442\u044c \u0430\u0434\u0440\u0435\u0441\u0443 NovaCoin (\u043d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434 4Zo1ga6xuKuQ7JV7M9rGDoxdbYwV5zgQJ5)</translation>\n     </message>\n     <message>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"56\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"57\"/>\n         <source>Copy quantity</source>\n         <translation>\u0421\u043a\u043e\u043f\u0456\u044e\u0432\u0430\u0442\u0438 \u043a\u0456\u043b\u044c\u043a\u0456\u0441\u0442\u044c</translation>\n     </message>\n     <message>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"57\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"58\"/>\n         <source>Copy amount</source>\n         <translation>\u0421\u043a\u043e\u043f\u0456\u044e\u0432\u0430\u0442\u0438 \u0441\u0443\u043c\u0443</translation>\n     </message>\n     <message>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"58\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"59\"/>\n         <source>Copy fee</source>\n         <translation>\u0421\u043a\u043e\u043f\u0456\u044e\u0432\u0430\u0442\u0438 \u043a\u043e\u043c\u0456\u0441\u0456\u044e</translation>\n     </message>\n     <message>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"59\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"60\"/>\n         <source>Copy after fee</source>\n         <translation>\u0421\u043a\u043e\u043f\u0456\u044e\u0432\u0430\u0442\u0438 \u043f\u0456\u0441\u043b\u044f \u043a\u043e\u043c\u0456\u0441\u0456\u0457</translation>\n     </message>\n     <message>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"60\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"61\"/>\n         <source>Copy bytes</source>\n         <translation>\u0421\u043a\u043e\u043f\u0456\u044e\u0432\u0430\u0442\u0438 \u0431\u0430\u0439\u0442\u0438</translation>\n     </message>\n     <message>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"61\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"62\"/>\n         <source>Copy priority</source>\n         <translation>\u0421\u043a\u043e\u043f\u0456\u044e\u0432\u0430\u0442\u0438 \u043f\u0440\u0456\u043e\u0440\u0456\u0442\u0435\u0442</translation>\n     </message>\n     <message>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"62\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"63\"/>\n         <source>Copy low output</source>\n         <translation>\u0421\u043a\u043e\u043f\u0456\u044e\u0432\u0430\u0442\u0438 \u043c\u0430\u043b\u0435\u043d\u044c\u043a\u0456 \u0432\u0438\u0445\u043e\u0434\u0438</translation>\n     </message>\n     <message>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"63\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"64\"/>\n         <source>Copy change</source>\n         <translation>\u0421\u043a\u043e\u043f\u0456\u044e\u0432\u0430\u0442\u0438 \u0440\u0435\u0448\u0442\u0443</translation>\n     </message>\n     <message>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"167\"/>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"169\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"168\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"170\"/>\n         <source>&lt;b&gt;%1&lt;/b&gt; to %2 (%3)</source>\n         <translation>&lt;b&gt;%1&lt;/b&gt; \u0430\u0434\u0440\u0435\u0441\u0430\u0442\u0443 %2 (%3)</translation>\n     </message>\n     <message>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"175\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"176\"/>\n         <source>Confirm send coins</source>\n         <translation>\u041f\u0456\u0434\u0442\u0432\u0435\u0440\u0434\u0456\u0442\u044c \u0432\u0456\u0434\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u043d\u044f</translation>\n     </message>\n     <message>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"176\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"177\"/>\n         <source>Are you sure you want to send %1?</source>\n         <translation>\u0412\u0438 \u0432\u043f\u0435\u0432\u043d\u0435\u043d\u0456 \u0449\u043e \u0445\u043e\u0447\u0435\u0442\u0435 \u0432\u0456\u0434\u043f\u0440\u0430\u0432\u0438\u0442\u0438 %1</translation>\n     </message>\n     <message>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"176\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"177\"/>\n         <source> and </source>\n         <translation> \u0456 </translation>\n     </message>\n     <message>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"205\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"206\"/>\n         <source>The recipient address is not valid, please recheck.</source>\n         <translation>\u0410\u0434\u0440\u0435\u0441\u0430 \u043e\u0442\u0440\u0438\u043c\u0443\u0432\u0430\u0447\u0430 \u043d\u0435\u0432\u0456\u0440\u043d\u0430, \u0431\u0443\u0434\u044c \u043b\u0430\u0441\u043a\u0430 \u043f\u0435\u0440\u0435\u043f\u0440\u043e\u0432\u0456\u0440\u0442\u0435.</translation>\n     </message>\n     <message>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"210\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"211\"/>\n         <source>The amount to pay must be larger than 0.</source>\n         <translation>\u0421\u0443\u043c\u0430 \u043c\u043e\u043d\u0435\u0442 \u0434\u043b\u044f \u0432\u0456\u0434\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u043d\u044f \u043f\u043e\u0432\u0438\u043d\u043d\u0430 \u0431\u0443\u0442\u0438 \u0431\u0456\u043b\u044c\u0448\u043e\u044e 0.</translation>\n     </message>\n     <message>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"215\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"216\"/>\n         <source>The amount exceeds your balance.</source>\n         <translation>\u041a\u0456\u043b\u044c\u043a\u0456\u0441\u0442\u044c \u043c\u043e\u043d\u0435\u0442 \u0434\u043b\u044f \u0432\u0456\u0434\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u043d\u044f \u043f\u0435\u0440\u0435\u0432\u0438\u0449\u0443\u0454 \u0432\u0430\u0448 \u0431\u0430\u043b\u0430\u043d\u0441.</translation>\n     </message>\n     <message>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"220\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"221\"/>\n         <source>The total exceeds your balance when the %1 transaction fee is included.</source>\n         <translation>\u0421\u0443\u043c\u0430 \u043f\u0435\u0440\u0435\u0432\u0438\u0449\u0438\u0442\u044c \u0432\u0430\u0448 \u0431\u0430\u043b\u0430\u043d\u0441, \u044f\u043a\u0449\u043e \u043a\u043e\u043c\u0456\u0441\u0456\u044f %1 \u0431\u0443\u0434\u0435 \u0434\u043e\u0434\u0430\u043d\u0430 \u0434\u043e \u0432\u0430\u0448\u043e\u0457 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u0457.</translation>\n     </message>\n     <message>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"226\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"227\"/>\n         <source>Duplicate address found, can only send to each address once per send operation.</source>\n         <translation>\u0417\u043d\u0430\u0439\u0434\u0435\u043d\u043e \u0430\u0434\u0440\u0435\u0441\u0443 \u0449\u043e \u0434\u0443\u0431\u043b\u044e\u0454\u0442\u044c\u0441\u044f. \u0412\u0456\u0434\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u043d\u044f \u043d\u0430 \u043a\u043e\u0436\u043d\u0443 \u0430\u0434\u0440\u0435\u0441\u0443 \u0434\u043e\u0437\u0432\u043e\u043b\u044f\u0454\u0442\u044c\u0441\u044f \u043b\u0438\u0448\u0435 \u043e\u0434\u0438\u043d \u0440\u0430\u0437 \u043d\u0430 \u043a\u043e\u0436\u043d\u0443 \u043e\u043f\u0435\u0440\u0430\u0446\u0456\u044e \u043f\u0435\u0440\u0435\u043a\u0430\u0437\u0443.</translation>\n     </message>\n     <message>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"231\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"232\"/>\n         <source>Error: Transaction creation failed.</source>\n         <translation>\u041f\u043e\u043c\u0438\u043b\u043a\u0430: \u041d\u0435 \u0432\u0434\u0430\u043b\u043e\u0441\u044f \u0441\u0442\u0432\u043e\u0440\u0438\u0442\u0438 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u044e!</translation>\n     </message>\n     <message>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"236\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"237\"/>\n         <source>Error: The transaction was rejected. This might happen if some of the coins in your wallet were already spent, such as if you used a copy of wallet.dat and coins were spent in the copy but not marked as spent here.</source>\n         <translation>\u041f\u043e\u043c\u0438\u043b\u043a\u0430: \u0422\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u044e \u0432\u0456\u0434\u0445\u0438\u043b\u0435\u043d\u043e! \u0426\u0435 \u043c\u043e\u0436\u0435 \u0441\u0442\u0430\u0442\u0438\u0441\u044c, \u044f\u043a\u0449\u043e \u0434\u0435\u043a\u0456\u043b\u044c\u043a\u0430 \u043c\u043e\u043d\u0435\u0442 \u0437 \u0432\u0430\u0448\u043e\u0433\u043e \u0433\u0430\u043c\u0430\u043d\u0446\u044f \u0432\u0436\u0435 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u0430\u043d\u0456, \u043d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434, \u044f\u043a\u0449\u043e \u0432\u0438 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u043e\u0432\u0443\u0454\u0442\u0435 \u043e\u0434\u043d\u0443 \u043a\u043e\u043f\u0456\u044e \u0433\u0430\u043c\u0430\u043d\u0446\u044f, \u0430 \u043c\u043e\u043d\u0435\u0442\u0438 \u0431\u0443\u043b\u0438 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u0430\u043d\u0456 \u0437 \u0456\u043d\u0448\u043e\u0457 \u043a\u043e\u043f\u0456\u0457, \u0430\u043b\u0435 \u043d\u0435 \u043f\u043e\u0437\u043d\u0430\u0447\u0435\u043d\u0456 \u044f\u043a \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u0430\u043d\u0456 \u0432 \u0446\u0456\u0439.</translation>\n     </message>\n@@ -4386,89 +4407,89 @@ If the file does not exist, create it with owner-readable-only file permissions.\n </translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"167\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"165\"/>\n         <source>Use proxy to reach tor hidden services (default: same as -proxy)</source>\n         <translation>\u0412\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u043e\u0432\u0443\u0432\u0430\u0442\u0438 \u043e\u043a\u0440\u0435\u043c\u0438\u0439 \u043f\u0440\u043e\u043a\u0441\u0456 \u0434\u043b\u044f \u0437&apos;\u0454\u0434\u043d\u0430\u043d\u043d\u044f \u0437 \u0443\u0447\u0430\u0441\u043d\u0438\u043a\u0430\u043c\u0438 \u0447\u0435\u0440\u0435\u0437 \u043f\u0440\u0438\u0445\u043e\u0432\u0430\u043d\u0456 \u0441\u0435\u0440\u0432\u0456\u0441\u0438 Tor (\u0442\u0438\u043f\u043e\u0432\u043e: \u0442\u0430\u043a \u0441\u0430\u043c\u043e, \u044f\u043a -proxy)</translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"168\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"166\"/>\n         <source>Use the test network</source>\n         <translation>\u0412\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u043e\u0432\u0443\u0432\u0430\u0442\u0438 \u0442\u0435\u0441\u0442\u043e\u0432\u0443 \u043c\u0435\u0440\u0435\u0436\u0443\n </translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"169\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"167\"/>\n         <source>Username for JSON-RPC connections</source>\n         <translation>\u0406\u043c\u2019\u044f \u043a\u043e\u0440\u0438\u0441\u0442\u0443\u0432\u0430\u0447\u0430 \u0434\u043b\u044f JSON-RPC-\u0437\u2019\u0454\u0434\u043d\u0430\u043d\u044c\n </translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"170\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"168\"/>\n         <source>Verifying database integrity...</source>\n         <translation>\u041f\u0435\u0440\u0435\u0432\u0456\u0440\u043a\u0430 \u0446\u0456\u043b\u0456\u0441\u043d\u043e\u0441\u0442\u0456 \u0431\u0430\u0437\u0438 \u0434\u0430\u043d\u0438\u0445...</translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"171\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"169\"/>\n         <source>Wallet needed to be rewritten: restart NovaCoin to complete</source>\n         <translation>\u041f\u043e\u0442\u0440\u0456\u0431\u043d\u043e \u043f\u0435\u0440\u0435\u0437\u0430\u043f\u0438\u0441\u0430\u0442\u0438 \u0433\u0430\u043c\u0430\u043d\u0435\u0446\u044c: \u043f\u0435\u0440\u0435\u0437\u0430\u043f\u0443\u0441\u0442\u0456\u0442\u044c NovaCoin \u0434\u043b\u044f \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u043d\u044f</translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"172\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"170\"/>\n         <source>Warning: Disk space is low!</source>\n         <translation>\u0423\u0432\u0430\u0433\u0430: \u041c\u0430\u043b\u043e \u0432\u0456\u043b\u044c\u043d\u043e\u0433\u043e \u043c\u0456\u0441\u0446\u044f \u043d\u0430 \u0434\u0438\u0441\u043a\u0443!</translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"173\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"171\"/>\n         <source>Warning: This version is obsolete, upgrade required!</source>\n         <translation>\u0423\u0432\u0430\u0433\u0430: \u041f\u043e\u0442\u043e\u0447\u043d\u0430 \u0432\u0435\u0440\u0441\u0456\u044f \u0437\u0430\u0441\u0442\u0430\u0440\u0456\u043b\u0430, \u043d\u0435\u043e\u0431\u0445\u0456\u0434\u043d\u0435 \u043e\u043d\u043e\u0432\u043b\u0435\u043d\u043d\u044f!</translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"174\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"172\"/>\n         <source>wallet.dat corrupt, salvage failed</source>\n         <translation>wallet.dat \u043f\u043e\u0448\u043a\u043e\u0434\u0436\u0435\u043d\u043e, \u0432\u0456\u0434\u043d\u043e\u0432\u043b\u0435\u043d\u043d\u044f \u043d\u0435 \u0432\u0434\u0430\u043b\u043e\u0441\u044f</translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"175\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"173\"/>\n         <source>Specify wallet file (within data directory)</source>\n         <translation>\u0412\u043a\u0430\u0436\u0456\u0442\u044c \u0444\u0430\u0439\u043b \u0433\u0430\u043c\u0430\u043d\u0446\u044f (\u0432 \u043c\u0435\u0436\u0430\u0445 \u043a\u0430\u0442\u0430\u043b\u043e\u0433\u0443 \u0434\u0430\u043d\u0438\u0445)</translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"176\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"174\"/>\n         <source>Use in-memory logging for block index database (default: 1)</source>\n         <translation>\u0412\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u043e\u0432\u0443\u0432\u0430\u0442\u0438 \u0432\u0435\u0434\u0435\u043d\u043d\u044f \u0436\u0443\u0440\u043d\u0430\u043b\u0443 \u0443 \u043f\u0430\u043c&apos;\u044f\u0442\u0456 \u0434\u043b\u044f \u0456\u043d\u0434\u0435\u043a\u0441\u0443 \u0431\u0430\u0437\u0438 \u0434\u0430\u043d\u0438\u0445 \u0431\u043b\u043e\u043a\u0456\u0432 (\u0437\u0430 \u0437\u0430\u043c\u043e\u0432\u0447\u0443\u0432\u0430\u043d\u043d\u044f\u043c: 1)</translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"177\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"175\"/>\n         <source>Find peers using DNS lookup (default: 1)</source>\n         <translation>\u0428\u0443\u043a\u0430\u0442\u0438 \u0432\u0443\u0437\u043b\u0438 \u0437\u0430 \u0434\u043e\u043f\u043e\u043c\u043e\u0433\u043e\u044e DNS (\u0437\u0430 \u0437\u0430\u043c\u043e\u0432\u0447\u0443\u0432\u0430\u043d\u043d\u044f\u043c: 0) {1)?}</translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"178\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"176\"/>\n         <source>Sync checkpoints policy (default: strict)</source>\n         <translation>\u041f\u043e\u043b\u0456\u0442\u0438\u043a\u0430 \u0441\u0438\u043d\u0445\u0440\u043e\u043d\u0456\u0437\u043e\u0432\u0430\u043d\u0438\u0445 \u043c\u0456\u0442\u043e\u043a (\u0437\u0430 \u0437\u0430\u043c\u043e\u0432\u0447\u0443\u0432\u0430\u043d\u043d\u044f\u043c: strict)</translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"179\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"177\"/>\n         <source>Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)</source>\n         <translation>\u0412\u0438\u043a\u043e\u043d\u0430\u0442\u0438 \u043a\u043e\u043c\u0430\u043d\u0434\u0443, \u043a\u043e\u043b\u0438 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u044f \u0433\u0430\u043c\u0430\u043d\u0446\u044f \u0437\u043c\u0456\u043d\u0438\u0442\u044c\u0441\u044f (\u0437\u0430\u043c\u0456\u0441\u0442\u044c %s \u0432 \u043a\u043e\u043c\u0430\u043d\u0434\u0456 \u0431\u0443\u0434\u0435 \u043f\u0456\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043e \u0456\u0434\u0435\u043d\u0442\u0438\u0444\u0456\u043a\u0430\u0442\u043e\u0440 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u0457)</translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"180\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"178\"/>\n         <source>Require a confirmations for change (default: 0)</source>\n         <translation>\u0412\u0438\u043c\u0430\u0433\u0430\u0442\u0438 \u043f\u0456\u0434\u0442\u0432\u0435\u0440\u0434\u0436\u0435\u043d\u043d\u044f \u0434\u043b\u044f \u0440\u0435\u0448\u0442\u0438 (\u0442\u0438\u043f\u043e\u0432\u043e: 0)</translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"181\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"179\"/>\n         <source>Enforce transaction scripts to use canonical PUSH operators (default: 1)</source>\n         <translation>\u0412\u0438\u043c\u0430\u0433\u0430\u0442\u0438 \u0432\u0456\u0434 \u0441\u043a\u0440\u0438\u043f\u0442\u0456\u0432 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u0430\u043d\u043d\u044f \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u0438\u0445 PUSH \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440\u0456\u0432 (\u0437\u0430 \u0437\u0430\u043c\u043e\u0432\u0447\u0443\u0432\u0430\u043d\u043d\u044f\u043c: 1)</translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"182\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"180\"/>\n         <source>Set the number of script verification threads (1-16, 0=auto, default: 0)</source>\n         <translation>\u0412\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u0438 \u043a\u0456\u043b\u044c\u043a\u0456\u0441\u0442\u044c \u043f\u043e\u0442\u043e\u043a\u0456\u0432 \u0441\u043a\u0440\u0438\u043f\u0442\u0443 \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u043a\u0438 (1-16, 0=\u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u043d\u043e, \u0442\u0438\u043f\u043e\u0432\u043e: 0)</translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"183\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"181\"/>\n         <source>When creating transactions, ignore inputs with value less than this (default: %s)</source>\n         <translation>\u041f\u0440\u0438 \u0441\u0442\u0432\u043e\u0440\u0435\u043d\u043d\u0456 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u0439, \u0456\u0433\u043d\u043e\u0440\u0443\u0432\u0430\u0442\u0438 \u0432\u0445\u043e\u0434\u0438 \u0437 \u0441\u0443\u043c\u043e\u044e \u043c\u0435\u043d\u0448\u0443 \u0437\u0430 \u0446\u044e (\u0437\u0430 \u0437\u0430\u043c\u043e\u0432\u0447\u0443\u0432\u0430\u043d\u043d\u044f\u043c:  %s)</translation>\n     </message>"
      }
    ]
  },
  {
    "sha": "8163cc7f1309492dab288b2a715cb34f8b66585c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4MTYzY2M3ZjEzMDk0OTJkYWIyODhiMmE3MTVjYjM0ZjhiNjY1ODVj",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-24T18:23:46Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-24T18:23:46Z"
      },
      "message": "Bump version to 0.5.7",
      "tree": {
        "sha": "b062aa7459dd6b49984fd80db4aa71efca859835",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b062aa7459dd6b49984fd80db4aa71efca859835"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8163cc7f1309492dab288b2a715cb34f8b66585c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8163cc7f1309492dab288b2a715cb34f8b66585c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8163cc7f1309492dab288b2a715cb34f8b66585c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8163cc7f1309492dab288b2a715cb34f8b66585c/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9d2db684c11f18c0d5e4f6622ee9e919b42267ea",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9d2db684c11f18c0d5e4f6622ee9e919b42267ea",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9d2db684c11f18c0d5e4f6622ee9e919b42267ea"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "a50cfcf75520edf9215ef8833f2a5f03ec5c5cb3",
        "filename": "src/clientversion.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8163cc7f1309492dab288b2a715cb34f8b66585c/src/clientversion.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8163cc7f1309492dab288b2a715cb34f8b66585c/src/clientversion.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/clientversion.h?ref=8163cc7f1309492dab288b2a715cb34f8b66585c",
        "patch": "@@ -9,7 +9,7 @@\n #define CLIENT_VERSION_MAJOR       0\n #define CLIENT_VERSION_MINOR       7\n #define CLIENT_VERSION_REVISION    6\n-#define CLIENT_VERSION_BUILD       6\n+#define CLIENT_VERSION_BUILD       7\n \n // Converts the parameter X to a string after macro replacement on X has been performed.\n // Don't merge these into one macro!"
      },
      {
        "sha": "9afa2a942558b6dfbad10857f1b661734902727f",
        "filename": "src/version.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8163cc7f1309492dab288b2a715cb34f8b66585c/src/version.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8163cc7f1309492dab288b2a715cb34f8b66585c/src/version.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/version.h?ref=8163cc7f1309492dab288b2a715cb34f8b66585c",
        "patch": "@@ -45,6 +45,6 @@ static const int NOBLKS_VERSION_END = 60006;\n \n #define DISPLAY_VERSION_MAJOR       0\n #define DISPLAY_VERSION_MINOR       5\n-#define DISPLAY_VERSION_REVISION    6\n+#define DISPLAY_VERSION_REVISION    7\n \n #endif"
      }
    ]
  },
  {
    "sha": "6db326c707337c3b8e6e2d78e8e992b1f89b4026",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ZGIzMjZjNzA3MzM3YzNiOGU2ZTJkNzhlOGU5OTJiMWY4OWI0MDI2",
    "commit": {
      "author": {
        "name": "svost",
        "email": "ya.nowa@yandex.ru",
        "date": "2016-03-24T20:14:53Z"
      },
      "committer": {
        "name": "svost",
        "email": "ya.nowa@yandex.ru",
        "date": "2016-03-24T20:14:53Z"
      },
      "message": "Minor optimization",
      "tree": {
        "sha": "83f8146732aa8353a7b89e7d07f7b32104ad787e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/83f8146732aa8353a7b89e7d07f7b32104ad787e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6db326c707337c3b8e6e2d78e8e992b1f89b4026",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6db326c707337c3b8e6e2d78e8e992b1f89b4026",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6db326c707337c3b8e6e2d78e8e992b1f89b4026",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6db326c707337c3b8e6e2d78e8e992b1f89b4026/comments",
    "author": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8163cc7f1309492dab288b2a715cb34f8b66585c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8163cc7f1309492dab288b2a715cb34f8b66585c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8163cc7f1309492dab288b2a715cb34f8b66585c"
      }
    ],
    "stats": {
      "total": 34,
      "additions": 14,
      "deletions": 20
    },
    "files": [
      {
        "sha": "bc828e3dc1468a05cae2ac27cfb3eae17865a109",
        "filename": "src/crypto/scrypt/intrin/scrypt-sse2.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 20,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6db326c707337c3b8e6e2d78e8e992b1f89b4026/src/crypto/scrypt/intrin/scrypt-sse2.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6db326c707337c3b8e6e2d78e8e992b1f89b4026/src/crypto/scrypt/intrin/scrypt-sse2.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crypto/scrypt/intrin/scrypt-sse2.cpp?ref=6db326c707337c3b8e6e2d78e8e992b1f89b4026",
        "patch": "@@ -48,18 +48,14 @@ static inline void le32enc(void *pp, uint32_t x)\n \n static inline void xor_salsa8_sse2(__m128i B[4], const __m128i Bx[4])\n {\n-    __m128i X0, X1, X2, X3;\n-    __m128i T;\n-    int i;\n+    __m128i X0 = B[0] = _mm_xor_si128(B[0], Bx[0]);\n+    __m128i X1 = B[1] = _mm_xor_si128(B[1], Bx[1]);\n+    __m128i X2 = B[2] = _mm_xor_si128(B[2], Bx[2]);\n+    __m128i X3 = B[3] = _mm_xor_si128(B[3], Bx[3]);\n \n-    X0 = B[0] = _mm_xor_si128(B[0], Bx[0]);\n-    X1 = B[1] = _mm_xor_si128(B[1], Bx[1]);\n-    X2 = B[2] = _mm_xor_si128(B[2], Bx[2]);\n-    X3 = B[3] = _mm_xor_si128(B[3], Bx[3]);\n-\n-    for (i = 0; i < 8; i += 2) {\n+    for (uint32_t i = 0; i < 8; i += 2) {\n         /* Operate on \"columns\". */\n-        T = _mm_add_epi32(X0, X3);\n+        __m128i T = _mm_add_epi32(X0, X3);\n         X1 = _mm_xor_si128(X1, _mm_slli_epi32(T, 7));\n         X1 = _mm_xor_si128(X1, _mm_srli_epi32(T, 25));\n         T = _mm_add_epi32(X1, X0);\n@@ -105,21 +101,18 @@ static inline void xor_salsa8_sse2(__m128i B[4], const __m128i Bx[4])\n \n uint256 scrypt_blockhash(const uint8_t* input)\n {\n-    uint256 result = 0;\n     uint8_t scratchpad[SCRYPT_BUFFER_SIZE];\n+    __m128i *V = (__m128i *)(((uintptr_t)(scratchpad) + 63) & ~ (uintptr_t)(63));\n+\n     uint8_t B[128];\n+    void *const tmp = const_cast<uint8_t*>(input);\n+    PKCS5_PBKDF2_HMAC(static_cast<const char*>(tmp), 80, input, 80, 1, EVP_sha256(), 128, B);\n+\n     union {\n         __m128i i128[8];\n         uint32_t u32[32];\n     } X;\n-    __m128i *V;\n-    uint32_t i, j, k;\n-\n-    V = (__m128i *)(((uintptr_t)(scratchpad) + 63) & ~ (uintptr_t)(63));\n-\n-    void *const tmp = const_cast<uint8_t*>(input);\n-    PKCS5_PBKDF2_HMAC(static_cast<const char*>(tmp), 80, input, 80, 1, EVP_sha256(), 128, B);\n-\n+    uint32_t i, k;\n     for (k = 0; k < 2; k++) {\n         for (i = 0; i < 16; i++) {\n             X.u32[k * 16 + i] = le32dec(&B[(k * 16 + (i * 5 % 16)) * 4]);\n@@ -133,7 +126,7 @@ uint256 scrypt_blockhash(const uint8_t* input)\n         xor_salsa8_sse2(&X.i128[4], &X.i128[0]);\n     }\n     for (i = 0; i < 1024; i++) {\n-        j = 8 * (X.u32[16] & 1023);\n+        uint32_t j = 8 * (X.u32[16] & 1023);\n         for (k = 0; k < 8; k++)\n             X.i128[k] = _mm_xor_si128(X.i128[k], V[j + k]);\n         xor_salsa8_sse2(&X.i128[0], &X.i128[4]);\n@@ -146,6 +139,7 @@ uint256 scrypt_blockhash(const uint8_t* input)\n         }\n     }\n \n+    uint256 result = 0;\n     PKCS5_PBKDF2_HMAC(static_cast<const char*>(tmp), 80, B, 128, 1, EVP_sha256(), 32, (unsigned char*)&result);\n \n     return result;"
      }
    ]
  },
  {
    "sha": "6198cc370523c58f587ede3f61c7c1feeae56110",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2MTk4Y2MzNzA1MjNjNThmNTg3ZWRlM2Y2MWM3YzFmZWVhZTU2MTEw",
    "commit": {
      "author": {
        "name": "svost",
        "email": "ya.nowa@yandex.ru",
        "date": "2016-03-25T05:27:05Z"
      },
      "committer": {
        "name": "svost",
        "email": "ya.nowa@yandex.ru",
        "date": "2016-03-25T05:27:05Z"
      },
      "message": "Fix type mismatch",
      "tree": {
        "sha": "f14d1dc33b3cb3b7f5449ffd82742ebd6de48ed3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f14d1dc33b3cb3b7f5449ffd82742ebd6de48ed3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6198cc370523c58f587ede3f61c7c1feeae56110",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6198cc370523c58f587ede3f61c7c1feeae56110",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6198cc370523c58f587ede3f61c7c1feeae56110",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6198cc370523c58f587ede3f61c7c1feeae56110/comments",
    "author": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6db326c707337c3b8e6e2d78e8e992b1f89b4026",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6db326c707337c3b8e6e2d78e8e992b1f89b4026",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6db326c707337c3b8e6e2d78e8e992b1f89b4026"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 5,
      "deletions": 5
    },
    "files": [
      {
        "sha": "1e0daaaf0593fd223c73848bc20f940556756aa9",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6198cc370523c58f587ede3f61c7c1feeae56110/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6198cc370523c58f587ede3f61c7c1feeae56110/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=6198cc370523c58f587ede3f61c7c1feeae56110",
        "patch": "@@ -376,7 +376,7 @@ bool AppInit2()\n \n     // ********************************************************* Step 2: parameter interactions\n \n-    nNodeLifespan = (unsigned int)(GetArg(\"-addrlifespan\", 7));\n+    nNodeLifespan = GetArgUInt(\"-addrlifespan\", 7);\n     fUseFastIndex = GetBoolArg(\"-fastindex\", true);\n     fUseMemoryLog = GetBoolArg(\"-memorylog\", true);\n "
      },
      {
        "sha": "5d01bb2d2841a5565a99be6109726a846aceea27",
        "filename": "src/miner.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6198cc370523c58f587ede3f61c7c1feeae56110/src/miner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6198cc370523c58f587ede3f61c7c1feeae56110/src/miner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.cpp?ref=6198cc370523c58f587ede3f61c7c1feeae56110",
        "patch": "@@ -147,18 +147,18 @@ CBlock* CreateNewBlock(CWallet* pwallet, CTransaction *txCoinStake)\n     }\n \n     // Largest block you're willing to create:\n-    unsigned int nBlockMaxSize = GetArg(\"-blockmaxsize\", MAX_BLOCK_SIZE_GEN/2);\n+    unsigned int nBlockMaxSize = GetArgUInt(\"-blockmaxsize\", MAX_BLOCK_SIZE_GEN/2);\n     // Limit to betweeen 1K and MAX_BLOCK_SIZE-1K for sanity:\n-    nBlockMaxSize = std::max((unsigned int)1000, std::min((unsigned int)(MAX_BLOCK_SIZE-1000), nBlockMaxSize));\n+    nBlockMaxSize = std::max(1000u, std::min(MAX_BLOCK_SIZE-1000u, nBlockMaxSize));\n \n     // How much of the block should be dedicated to high-priority transactions,\n     // included regardless of the fees they pay\n-    unsigned int nBlockPrioritySize = GetArg(\"-blockprioritysize\", 27000);\n+    unsigned int nBlockPrioritySize = GetArgUInt(\"-blockprioritysize\", 27000);\n     nBlockPrioritySize = std::min(nBlockMaxSize, nBlockPrioritySize);\n \n     // Minimum block size you want to create; block will be filled with free transactions\n     // until there are no more or the block reaches this size:\n-    unsigned int nBlockMinSize = GetArg(\"-blockminsize\", 0);\n+    unsigned int nBlockMinSize = GetArgUInt(\"-blockminsize\", 0);\n     nBlockMinSize = std::min(nBlockMaxSize, nBlockMinSize);\n \n     // Fee-per-kilobyte amount considered the same as \"free\""
      }
    ]
  },
  {
    "sha": "cb243bbc0df48609f7b4ecaeee6e0a2e4b887104",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjYjI0M2JiYzBkZjQ4NjA5ZjdiNGVjYWVlZTZlMGEyZTRiODg3MTA0",
    "commit": {
      "author": {
        "name": "svost",
        "email": "ya.nowa@yandex.ru",
        "date": "2016-03-25T19:41:39Z"
      },
      "committer": {
        "name": "svost",
        "email": "ya.nowa@yandex.ru",
        "date": "2016-03-25T19:41:39Z"
      },
      "message": "Main.cpp: fix type mismatch",
      "tree": {
        "sha": "9811879b62032a96f1df25583a1c7c6b0a829840",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9811879b62032a96f1df25583a1c7c6b0a829840"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cb243bbc0df48609f7b4ecaeee6e0a2e4b887104",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cb243bbc0df48609f7b4ecaeee6e0a2e4b887104",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cb243bbc0df48609f7b4ecaeee6e0a2e4b887104",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cb243bbc0df48609f7b4ecaeee6e0a2e4b887104/comments",
    "author": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6198cc370523c58f587ede3f61c7c1feeae56110",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6198cc370523c58f587ede3f61c7c1feeae56110",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6198cc370523c58f587ede3f61c7c1feeae56110"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "0a6fda1c036f3479d2514bcc64677f8e35badb3e",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cb243bbc0df48609f7b4ecaeee6e0a2e4b887104/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cb243bbc0df48609f7b4ecaeee6e0a2e4b887104/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=cb243bbc0df48609f7b4ecaeee6e0a2e4b887104",
        "patch": "@@ -2974,7 +2974,7 @@ bool LoadExternalBlockFile(FILE* fileIn)\n                 unsigned char pchData[65536];\n                 do {\n                     fseek(blkdat, nPos, SEEK_SET);\n-                    int nRead = fread(pchData, 1, sizeof(pchData), blkdat);\n+                    size_t nRead = fread(pchData, 1, sizeof(pchData), blkdat);\n                     if (nRead <= 8)\n                     {\n                         nPos = std::numeric_limits<uint32_t>::max();\n@@ -3362,15 +3362,15 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n         }\n \n         // find last block in inv vector\n-        unsigned int nLastBlock = std::numeric_limits<uint32_t>::max();\n-        for (unsigned int nInv = 0; nInv < vInv.size(); nInv++) {\n+        size_t nLastBlock = std::numeric_limits<size_t>::max();\n+        for (size_t nInv = 0; nInv < vInv.size(); nInv++) {\n             if (vInv[vInv.size() - 1 - nInv].type == MSG_BLOCK) {\n                 nLastBlock = vInv.size() - 1 - nInv;\n                 break;\n             }\n         }\n         CTxDB txdb(\"r\");\n-        for (unsigned int nInv = 0; nInv < vInv.size(); nInv++)\n+        for (size_t nInv = 0; nInv < vInv.size(); nInv++)\n         {\n             const CInv &inv = vInv[nInv];\n "
      }
    ]
  },
  {
    "sha": "e8bc2c6b0262d5639264e1c777a6e9670edd624a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplOGJjMmM2YjAyNjJkNTYzOTI2NGUxYzc3N2E2ZTk2NzBlZGQ2MjRh",
    "commit": {
      "author": {
        "name": "svost",
        "email": "ya.nowa@yandex.ru",
        "date": "2016-03-26T20:28:04Z"
      },
      "committer": {
        "name": "svost",
        "email": "ya.nowa@yandex.ru",
        "date": "2016-03-26T20:28:04Z"
      },
      "message": "Remove BOOST_FOREACH macro",
      "tree": {
        "sha": "e816777daadeb638c9393cd954fbee4c69c8b188",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e816777daadeb638c9393cd954fbee4c69c8b188"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e8bc2c6b0262d5639264e1c777a6e9670edd624a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e8bc2c6b0262d5639264e1c777a6e9670edd624a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e8bc2c6b0262d5639264e1c777a6e9670edd624a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e8bc2c6b0262d5639264e1c777a6e9670edd624a/comments",
    "author": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cb243bbc0df48609f7b4ecaeee6e0a2e4b887104",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cb243bbc0df48609f7b4ecaeee6e0a2e4b887104",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cb243bbc0df48609f7b4ecaeee6e0a2e4b887104"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 5,
      "deletions": 8
    },
    "files": [
      {
        "sha": "c69e83c0abc5e8403c215a125a0bf2f00f94f475",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 8,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e8bc2c6b0262d5639264e1c777a6e9670edd624a/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e8bc2c6b0262d5639264e1c777a6e9670edd624a/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=e8bc2c6b0262d5639264e1c777a6e9670edd624a",
        "patch": "@@ -570,10 +570,9 @@ void CNode::copyStats(CNodeStats &stats)\n }\n #undef X\n \n-\n-\n-\n-\n+void Release(CNode* node) {\n+    node->Release();\n+}\n \n \n \n@@ -925,8 +924,7 @@ void ThreadSocketHandler2(void* parg)\n         }\n         {\n             LOCK(cs_vNodes);\n-            BOOST_FOREACH(CNode* pnode, vNodesCopy)\n-                pnode->Release();\n+            for_each(vNodesCopy.begin(), vNodesCopy.end(), Release);\n         }\n \n         Sleep(10);\n@@ -1507,8 +1505,7 @@ void ThreadMessageHandler2(void* parg)\n \n         {\n             LOCK(cs_vNodes);\n-            BOOST_FOREACH(CNode* pnode, vNodesCopy)\n-                pnode->Release();\n+            for_each(vNodesCopy.begin(), vNodesCopy.end(), Release);\n         }\n \n         // Wait and allow messages to bunch up."
      }
    ]
  },
  {
    "sha": "8ef54c4d84f565668e565b1e69df4547deb532b6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4ZWY1NGM0ZDg0ZjU2NTY2OGU1NjViMWU2OWRmNDU0N2RlYjUzMmI2",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-27T12:39:51Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-27T12:39:51Z"
      },
      "message": "Partially revert acd906f9bbf55e42.",
      "tree": {
        "sha": "c33638430fc7918d90dc8b4db4815d210047750e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c33638430fc7918d90dc8b4db4815d210047750e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8ef54c4d84f565668e565b1e69df4547deb532b6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8ef54c4d84f565668e565b1e69df4547deb532b6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8ef54c4d84f565668e565b1e69df4547deb532b6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8ef54c4d84f565668e565b1e69df4547deb532b6/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8163cc7f1309492dab288b2a715cb34f8b66585c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8163cc7f1309492dab288b2a715cb34f8b66585c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8163cc7f1309492dab288b2a715cb34f8b66585c"
      }
    ],
    "stats": {
      "total": 58,
      "additions": 33,
      "deletions": 25
    },
    "files": [
      {
        "sha": "77f19b0f996ce603180218546c4fb6ee2258c97a",
        "filename": "novacoin-qt.pro",
        "status": "modified",
        "additions": 16,
        "deletions": 5,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8ef54c4d84f565668e565b1e69df4547deb532b6/novacoin-qt.pro",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8ef54c4d84f565668e565b1e69df4547deb532b6/novacoin-qt.pro",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/novacoin-qt.pro?ref=8ef54c4d84f565668e565b1e69df4547deb532b6",
        "patch": "@@ -34,7 +34,7 @@ win32-g++-cross: QMAKE_TARGET.arch = $$TARGET_PLATFORM\n #BOOST_LIB_PATH=C:/deps/boost_1_55_0/stage/lib\n #BDB_INCLUDE_PATH=C:/deps/db-6.0.20/build_unix\n #BDB_LIB_PATH=C:/deps/db-6.0.20/build_unix\n-#OPENSSL_INCLUDE_PATH=C:/deps/openssl-1.0.2g/include\n+#OPENSSL_INCLUDE_PATH=C:/d1eps/openssl-1.0.2g/include\n #OPENSSL_LIB_PATH=C:/deps/openssl-1.0.2g\n #QRENCODE_INCLUDE_PATH=C:/deps/qrencode-3.4.4\n #QRENCODE_LIB_PATH=C:/deps/qrencode-3.4.4/.libs\n@@ -75,6 +75,14 @@ QMAKE_LFLAGS *= -fstack-protector-all --param ssp-buffer-size=1\n win32:QMAKE_LFLAGS *= -Wl,--dynamicbase -Wl,--nxcompat\n win32:QMAKE_LFLAGS += -static-libgcc -static-libstdc++\n \n+# use: qmake \"USE_QRCODE=1\"\n+# libqrencode (http://fukuchi.org/works/qrencode/index.en.html) must be installed for support\n+contains(USE_QRCODE, 1) {\n+    message(Building with QRCode support)\n+    DEFINES += USE_QRCODE\n+    LIBS += -lqrencode\n+}\n+\n # use: qmake \"USE_DBUS=1\"\n contains(USE_DBUS, 1) {\n     message(Building with DBUS (Freedesktop notifications) support)\n@@ -271,7 +279,6 @@ HEADERS += src/qt/bitcoingui.h \\\n     src/qt/multisiginputentry.h \\\n     src/qt/multisigdialog.h \\\n     src/qt/secondauthdialog.h \\\n-    src/qt/qrcodedialog.h \\\n     src/ies.h \\\n     src/ipcollector.h\n \n@@ -352,7 +359,6 @@ SOURCES += src/qt/bitcoin.cpp src/qt/bitcoingui.cpp \\\n     src/qt/multisiginputentry.cpp \\\n     src/qt/multisigdialog.cpp \\\n     src/qt/secondauthdialog.cpp \\\n-    src/qt/qrcodedialog.cpp \\\n     src/base58.cpp \\\n     src/cryptogram.cpp \\\n     src/ecies.cpp \\\n@@ -378,8 +384,13 @@ FORMS += \\\n     src/qt/forms/multisigaddressentry.ui \\\n     src/qt/forms/multisiginputentry.ui \\\n     src/qt/forms/multisigdialog.ui \\\n-    src/qt/forms/secondauthdialog.ui \\\n-    src/qt/forms/qrcodedialog.ui\n+    src/qt/forms/secondauthdialog.ui\n+\n+contains(USE_QRCODE, 1) {\n+    HEADERS += src/qt/qrcodedialog.h\n+    SOURCES += src/qt/qrcodedialog.cpp\n+    FORMS += src/qt/forms/qrcodedialog.ui\n+}\n \n CODECFORTR = UTF-8\n "
      },
      {
        "sha": "9460657792105521c9be2e0eca42c98166f9f172",
        "filename": "src/qt/addressbookpage.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 8,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8ef54c4d84f565668e565b1e69df4547deb532b6/src/qt/addressbookpage.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8ef54c4d84f565668e565b1e69df4547deb532b6/src/qt/addressbookpage.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/addressbookpage.cpp?ref=8ef54c4d84f565668e565b1e69df4547deb532b6",
        "patch": "@@ -7,7 +7,10 @@\n #include \"editaddressdialog.h\"\n #include \"csvmodelwriter.h\"\n #include \"guiutil.h\"\n+\n+#ifdef USE_QRCODE\n #include \"qrcodedialog.h\"\n+#endif\n \n #include <QSortFilterProxyModel>\n #include <QClipboard>\n@@ -31,8 +34,6 @@ AddressBookPage::AddressBookPage(Mode mode, Tabs tab, QWidget *parent) :\n     ui->deleteButton->setIcon(QIcon());\n #endif\n \n-    ui->showQRCode->setVisible(false);\n-\n     switch(mode)\n     {\n     case ForSending:\n@@ -50,18 +51,22 @@ AddressBookPage::AddressBookPage(Mode mode, Tabs tab, QWidget *parent) :\n         ui->labelExplanation->setVisible(false);\n         ui->deleteButton->setVisible(true);\n         ui->signMessage->setVisible(false);\n+        ui->verifyMessage->setVisible(true);\n         break;\n     case ReceivingTab:\n         ui->deleteButton->setVisible(false);\n         ui->signMessage->setVisible(true);\n+        ui->verifyMessage->setVisible(false);\n         break;\n     }\n \n     // Context menu actions\n     QAction *copyLabelAction = new QAction(tr(\"Copy &Label\"), this);\n     QAction *copyAddressAction = new QAction(ui->copyToClipboard->text(), this);\n     QAction *editAction = new QAction(tr(\"&Edit\"), this);\n-    QAction *showQRCodeAction = new QAction(ui->showQRCode->text(), this);\n+#ifdef USE_QRCODE\n+    QAction *showQRCodeAction = new QAction(tr(\"Show &QR Code\"), this);\n+#endif\n     QAction *signMessageAction = new QAction(ui->signMessage->text(), this);\n     QAction *verifyMessageAction = new QAction(ui->verifyMessage->text(), this);\n     deleteAction = new QAction(ui->deleteButton->text(), this);\n@@ -74,7 +79,9 @@ AddressBookPage::AddressBookPage(Mode mode, Tabs tab, QWidget *parent) :\n     if(tab == SendingTab)\n         contextMenu->addAction(deleteAction);\n     contextMenu->addSeparator();\n-    contextMenu->addAction(showQRCodeAction);\n+    #ifdef USE_QRCODE\n+        contextMenu->addAction(showQRCodeAction);\n+    #endif\n     if(tab == ReceivingTab)\n         contextMenu->addAction(signMessageAction);\n     else if(tab == SendingTab)\n@@ -85,10 +92,11 @@ AddressBookPage::AddressBookPage(Mode mode, Tabs tab, QWidget *parent) :\n     connect(copyLabelAction, SIGNAL(triggered()), this, SLOT(onCopyLabelAction()));\n     connect(editAction, SIGNAL(triggered()), this, SLOT(onEditAction()));\n     connect(deleteAction, SIGNAL(triggered()), this, SLOT(on_deleteButton_clicked()));\n-    connect(showQRCodeAction, SIGNAL(triggered()), this, SLOT(on_showQRCode_clicked()));\n+    #ifdef USE_QRCODE\n+        connect(showQRCodeAction, SIGNAL(triggered()), this, SLOT(on_showQRCode_clicked()));\n+    #endif\n     connect(signMessageAction, SIGNAL(triggered()), this, SLOT(on_signMessage_clicked()));\n     connect(verifyMessageAction, SIGNAL(triggered()), this, SLOT(on_verifyMessage_clicked()));\n-\n     connect(ui->tableView, SIGNAL(customContextMenuRequested(QPoint)), this, SLOT(contextualMenu(QPoint)));\n \n     // Pass through accept action from button box\n@@ -270,12 +278,10 @@ void AddressBookPage::selectionChanged()\n             break;\n         }\n         ui->copyToClipboard->setEnabled(true);\n-        ui->showQRCode->setEnabled(true);\n     }\n     else\n     {\n         ui->deleteButton->setEnabled(false);\n-        ui->showQRCode->setEnabled(false);\n         ui->copyToClipboard->setEnabled(false);\n         ui->signMessage->setEnabled(false);\n         ui->verifyMessage->setEnabled(false);\n@@ -335,6 +341,7 @@ void AddressBookPage::exportClicked()\n \n void AddressBookPage::on_showQRCode_clicked()\n {\n+ #ifdef USE_QRCODE\n     QTableView *table = ui->tableView;\n     QModelIndexList indexes = table->selectionModel()->selectedRows(AddressTableModel::Address);\n \n@@ -348,6 +355,7 @@ void AddressBookPage::on_showQRCode_clicked()\n         dialog->setAttribute(Qt::WA_DeleteOnClose);\n         dialog->show();\n     }\n+#endif\n }\n \n void AddressBookPage::contextualMenu(const QPoint &point)"
      },
      {
        "sha": "d0fc71adc5edadaba07867fee1a7305ff4ca4383",
        "filename": "src/qt/forms/addressbookpage.ui",
        "status": "modified",
        "additions": 1,
        "deletions": 12,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8ef54c4d84f565668e565b1e69df4547deb532b6/src/qt/forms/addressbookpage.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8ef54c4d84f565668e565b1e69df4547deb532b6/src/qt/forms/addressbookpage.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/addressbookpage.ui?ref=8ef54c4d84f565668e565b1e69df4547deb532b6",
        "patch": "@@ -6,7 +6,7 @@\n    <rect>\n     <x>0</x>\n     <y>0</y>\n-    <width>760</width>\n+    <width>799</width>\n     <height>380</height>\n    </rect>\n   </property>\n@@ -85,17 +85,6 @@\n        </property>\n       </widget>\n      </item>\n-     <item>\n-      <widget class=\"QPushButton\" name=\"showQRCode\">\n-       <property name=\"text\">\n-        <string>Show &amp;QR Code</string>\n-       </property>\n-       <property name=\"icon\">\n-        <iconset resource=\"../bitcoin.qrc\">\n-         <normaloff>:/icons/qrcode</normaloff>:/icons/qrcode</iconset>\n-       </property>\n-      </widget>\n-     </item>\n      <item>\n       <widget class=\"QPushButton\" name=\"signMessage\">\n        <property name=\"toolTip\">"
      }
    ]
  },
  {
    "sha": "5471fad9ab176a694afbc42b7d7bc74f93cd5781",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NDcxZmFkOWFiMTc2YTY5NGFmYmM0MmI3ZDdiYzc0ZjkzY2Q1Nzgx",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-27T13:14:35Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-27T13:14:35Z"
      },
      "message": "QREncode linking fix",
      "tree": {
        "sha": "1e883fdeb8fba927ba57e3c7b9667d19fe419fcc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1e883fdeb8fba927ba57e3c7b9667d19fe419fcc"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5471fad9ab176a694afbc42b7d7bc74f93cd5781",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5471fad9ab176a694afbc42b7d7bc74f93cd5781",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5471fad9ab176a694afbc42b7d7bc74f93cd5781",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5471fad9ab176a694afbc42b7d7bc74f93cd5781/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8ef54c4d84f565668e565b1e69df4547deb532b6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8ef54c4d84f565668e565b1e69df4547deb532b6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8ef54c4d84f565668e565b1e69df4547deb532b6"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "16277f72ebe5cbc612471e3edd16abc34fad7451",
        "filename": "novacoin-qt.pro",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5471fad9ab176a694afbc42b7d7bc74f93cd5781/novacoin-qt.pro",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5471fad9ab176a694afbc42b7d7bc74f93cd5781/novacoin-qt.pro",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/novacoin-qt.pro?ref=5471fad9ab176a694afbc42b7d7bc74f93cd5781",
        "patch": "@@ -487,7 +487,7 @@ macx:QMAKE_CXXFLAGS_THREAD += -pthread\n # Set libraries and includes at end, to use platform-defined defaults if not overridden\n INCLUDEPATH += $$BOOST_INCLUDE_PATH $$BDB_INCLUDE_PATH $$OPENSSL_INCLUDE_PATH $$QRENCODE_INCLUDE_PATH\n LIBS += $$join(BOOST_LIB_PATH,,-L,) $$join(BDB_LIB_PATH,,-L,) $$join(OPENSSL_LIB_PATH,,-L,) $$join(QRENCODE_LIB_PATH,,-L,)\n-LIBS += -lqrencode -lssl -lcrypto -ldb_cxx$$BDB_LIB_SUFFIX\n+LIBS += -lssl -lcrypto -ldb_cxx$$BDB_LIB_SUFFIX\n # -lgdi32 has to happen after -lcrypto (see  #681)\n windows:LIBS += -lws2_32 -lshlwapi -lmswsock -lole32 -loleaut32 -luuid -lgdi32\n LIBS += -lboost_system$$BOOST_LIB_SUFFIX -lboost_filesystem$$BOOST_LIB_SUFFIX -lboost_program_options$$BOOST_LIB_SUFFIX -lboost_thread$$BOOST_THREAD_LIB_SUFFIX"
      }
    ]
  },
  {
    "sha": "261ecdea9f08e493f4c013b44005a39c71d4d916",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyNjFlY2RlYTlmMDhlNDkzZjRjMDEzYjQ0MDA1YTM5YzcxZDRkOTE2",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "CryptoManiac@users.noreply.github.com",
        "date": "2016-03-27T13:15:22Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "CryptoManiac@users.noreply.github.com",
        "date": "2016-03-27T13:15:22Z"
      },
      "message": "Merge pull request #293 from svost/patch\n\nMinor fix",
      "tree": {
        "sha": "4d2ddb673682bd8850753580f42b2276cf82baac",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4d2ddb673682bd8850753580f42b2276cf82baac"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/261ecdea9f08e493f4c013b44005a39c71d4d916",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/261ecdea9f08e493f4c013b44005a39c71d4d916",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/261ecdea9f08e493f4c013b44005a39c71d4d916",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/261ecdea9f08e493f4c013b44005a39c71d4d916/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5471fad9ab176a694afbc42b7d7bc74f93cd5781",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5471fad9ab176a694afbc42b7d7bc74f93cd5781",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5471fad9ab176a694afbc42b7d7bc74f93cd5781"
      },
      {
        "sha": "e8bc2c6b0262d5639264e1c777a6e9670edd624a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e8bc2c6b0262d5639264e1c777a6e9670edd624a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e8bc2c6b0262d5639264e1c777a6e9670edd624a"
      }
    ],
    "stats": {
      "total": 65,
      "additions": 28,
      "deletions": 37
    },
    "files": [
      {
        "sha": "bc828e3dc1468a05cae2ac27cfb3eae17865a109",
        "filename": "src/crypto/scrypt/intrin/scrypt-sse2.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 20,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/261ecdea9f08e493f4c013b44005a39c71d4d916/src/crypto/scrypt/intrin/scrypt-sse2.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/261ecdea9f08e493f4c013b44005a39c71d4d916/src/crypto/scrypt/intrin/scrypt-sse2.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crypto/scrypt/intrin/scrypt-sse2.cpp?ref=261ecdea9f08e493f4c013b44005a39c71d4d916",
        "patch": "@@ -48,18 +48,14 @@ static inline void le32enc(void *pp, uint32_t x)\n \n static inline void xor_salsa8_sse2(__m128i B[4], const __m128i Bx[4])\n {\n-    __m128i X0, X1, X2, X3;\n-    __m128i T;\n-    int i;\n+    __m128i X0 = B[0] = _mm_xor_si128(B[0], Bx[0]);\n+    __m128i X1 = B[1] = _mm_xor_si128(B[1], Bx[1]);\n+    __m128i X2 = B[2] = _mm_xor_si128(B[2], Bx[2]);\n+    __m128i X3 = B[3] = _mm_xor_si128(B[3], Bx[3]);\n \n-    X0 = B[0] = _mm_xor_si128(B[0], Bx[0]);\n-    X1 = B[1] = _mm_xor_si128(B[1], Bx[1]);\n-    X2 = B[2] = _mm_xor_si128(B[2], Bx[2]);\n-    X3 = B[3] = _mm_xor_si128(B[3], Bx[3]);\n-\n-    for (i = 0; i < 8; i += 2) {\n+    for (uint32_t i = 0; i < 8; i += 2) {\n         /* Operate on \"columns\". */\n-        T = _mm_add_epi32(X0, X3);\n+        __m128i T = _mm_add_epi32(X0, X3);\n         X1 = _mm_xor_si128(X1, _mm_slli_epi32(T, 7));\n         X1 = _mm_xor_si128(X1, _mm_srli_epi32(T, 25));\n         T = _mm_add_epi32(X1, X0);\n@@ -105,21 +101,18 @@ static inline void xor_salsa8_sse2(__m128i B[4], const __m128i Bx[4])\n \n uint256 scrypt_blockhash(const uint8_t* input)\n {\n-    uint256 result = 0;\n     uint8_t scratchpad[SCRYPT_BUFFER_SIZE];\n+    __m128i *V = (__m128i *)(((uintptr_t)(scratchpad) + 63) & ~ (uintptr_t)(63));\n+\n     uint8_t B[128];\n+    void *const tmp = const_cast<uint8_t*>(input);\n+    PKCS5_PBKDF2_HMAC(static_cast<const char*>(tmp), 80, input, 80, 1, EVP_sha256(), 128, B);\n+\n     union {\n         __m128i i128[8];\n         uint32_t u32[32];\n     } X;\n-    __m128i *V;\n-    uint32_t i, j, k;\n-\n-    V = (__m128i *)(((uintptr_t)(scratchpad) + 63) & ~ (uintptr_t)(63));\n-\n-    void *const tmp = const_cast<uint8_t*>(input);\n-    PKCS5_PBKDF2_HMAC(static_cast<const char*>(tmp), 80, input, 80, 1, EVP_sha256(), 128, B);\n-\n+    uint32_t i, k;\n     for (k = 0; k < 2; k++) {\n         for (i = 0; i < 16; i++) {\n             X.u32[k * 16 + i] = le32dec(&B[(k * 16 + (i * 5 % 16)) * 4]);\n@@ -133,7 +126,7 @@ uint256 scrypt_blockhash(const uint8_t* input)\n         xor_salsa8_sse2(&X.i128[4], &X.i128[0]);\n     }\n     for (i = 0; i < 1024; i++) {\n-        j = 8 * (X.u32[16] & 1023);\n+        uint32_t j = 8 * (X.u32[16] & 1023);\n         for (k = 0; k < 8; k++)\n             X.i128[k] = _mm_xor_si128(X.i128[k], V[j + k]);\n         xor_salsa8_sse2(&X.i128[0], &X.i128[4]);\n@@ -146,6 +139,7 @@ uint256 scrypt_blockhash(const uint8_t* input)\n         }\n     }\n \n+    uint256 result = 0;\n     PKCS5_PBKDF2_HMAC(static_cast<const char*>(tmp), 80, B, 128, 1, EVP_sha256(), 32, (unsigned char*)&result);\n \n     return result;"
      },
      {
        "sha": "1e0daaaf0593fd223c73848bc20f940556756aa9",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/261ecdea9f08e493f4c013b44005a39c71d4d916/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/261ecdea9f08e493f4c013b44005a39c71d4d916/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=261ecdea9f08e493f4c013b44005a39c71d4d916",
        "patch": "@@ -376,7 +376,7 @@ bool AppInit2()\n \n     // ********************************************************* Step 2: parameter interactions\n \n-    nNodeLifespan = (unsigned int)(GetArg(\"-addrlifespan\", 7));\n+    nNodeLifespan = GetArgUInt(\"-addrlifespan\", 7);\n     fUseFastIndex = GetBoolArg(\"-fastindex\", true);\n     fUseMemoryLog = GetBoolArg(\"-memorylog\", true);\n "
      },
      {
        "sha": "0a6fda1c036f3479d2514bcc64677f8e35badb3e",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/261ecdea9f08e493f4c013b44005a39c71d4d916/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/261ecdea9f08e493f4c013b44005a39c71d4d916/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=261ecdea9f08e493f4c013b44005a39c71d4d916",
        "patch": "@@ -2974,7 +2974,7 @@ bool LoadExternalBlockFile(FILE* fileIn)\n                 unsigned char pchData[65536];\n                 do {\n                     fseek(blkdat, nPos, SEEK_SET);\n-                    int nRead = fread(pchData, 1, sizeof(pchData), blkdat);\n+                    size_t nRead = fread(pchData, 1, sizeof(pchData), blkdat);\n                     if (nRead <= 8)\n                     {\n                         nPos = std::numeric_limits<uint32_t>::max();\n@@ -3362,15 +3362,15 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n         }\n \n         // find last block in inv vector\n-        unsigned int nLastBlock = std::numeric_limits<uint32_t>::max();\n-        for (unsigned int nInv = 0; nInv < vInv.size(); nInv++) {\n+        size_t nLastBlock = std::numeric_limits<size_t>::max();\n+        for (size_t nInv = 0; nInv < vInv.size(); nInv++) {\n             if (vInv[vInv.size() - 1 - nInv].type == MSG_BLOCK) {\n                 nLastBlock = vInv.size() - 1 - nInv;\n                 break;\n             }\n         }\n         CTxDB txdb(\"r\");\n-        for (unsigned int nInv = 0; nInv < vInv.size(); nInv++)\n+        for (size_t nInv = 0; nInv < vInv.size(); nInv++)\n         {\n             const CInv &inv = vInv[nInv];\n "
      },
      {
        "sha": "5d01bb2d2841a5565a99be6109726a846aceea27",
        "filename": "src/miner.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/261ecdea9f08e493f4c013b44005a39c71d4d916/src/miner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/261ecdea9f08e493f4c013b44005a39c71d4d916/src/miner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.cpp?ref=261ecdea9f08e493f4c013b44005a39c71d4d916",
        "patch": "@@ -147,18 +147,18 @@ CBlock* CreateNewBlock(CWallet* pwallet, CTransaction *txCoinStake)\n     }\n \n     // Largest block you're willing to create:\n-    unsigned int nBlockMaxSize = GetArg(\"-blockmaxsize\", MAX_BLOCK_SIZE_GEN/2);\n+    unsigned int nBlockMaxSize = GetArgUInt(\"-blockmaxsize\", MAX_BLOCK_SIZE_GEN/2);\n     // Limit to betweeen 1K and MAX_BLOCK_SIZE-1K for sanity:\n-    nBlockMaxSize = std::max((unsigned int)1000, std::min((unsigned int)(MAX_BLOCK_SIZE-1000), nBlockMaxSize));\n+    nBlockMaxSize = std::max(1000u, std::min(MAX_BLOCK_SIZE-1000u, nBlockMaxSize));\n \n     // How much of the block should be dedicated to high-priority transactions,\n     // included regardless of the fees they pay\n-    unsigned int nBlockPrioritySize = GetArg(\"-blockprioritysize\", 27000);\n+    unsigned int nBlockPrioritySize = GetArgUInt(\"-blockprioritysize\", 27000);\n     nBlockPrioritySize = std::min(nBlockMaxSize, nBlockPrioritySize);\n \n     // Minimum block size you want to create; block will be filled with free transactions\n     // until there are no more or the block reaches this size:\n-    unsigned int nBlockMinSize = GetArg(\"-blockminsize\", 0);\n+    unsigned int nBlockMinSize = GetArgUInt(\"-blockminsize\", 0);\n     nBlockMinSize = std::min(nBlockMaxSize, nBlockMinSize);\n \n     // Fee-per-kilobyte amount considered the same as \"free\""
      },
      {
        "sha": "c69e83c0abc5e8403c215a125a0bf2f00f94f475",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 8,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/261ecdea9f08e493f4c013b44005a39c71d4d916/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/261ecdea9f08e493f4c013b44005a39c71d4d916/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=261ecdea9f08e493f4c013b44005a39c71d4d916",
        "patch": "@@ -570,10 +570,9 @@ void CNode::copyStats(CNodeStats &stats)\n }\n #undef X\n \n-\n-\n-\n-\n+void Release(CNode* node) {\n+    node->Release();\n+}\n \n \n \n@@ -925,8 +924,7 @@ void ThreadSocketHandler2(void* parg)\n         }\n         {\n             LOCK(cs_vNodes);\n-            BOOST_FOREACH(CNode* pnode, vNodesCopy)\n-                pnode->Release();\n+            for_each(vNodesCopy.begin(), vNodesCopy.end(), Release);\n         }\n \n         Sleep(10);\n@@ -1507,8 +1505,7 @@ void ThreadMessageHandler2(void* parg)\n \n         {\n             LOCK(cs_vNodes);\n-            BOOST_FOREACH(CNode* pnode, vNodesCopy)\n-                pnode->Release();\n+            for_each(vNodesCopy.begin(), vNodesCopy.end(), Release);\n         }\n \n         // Wait and allow messages to bunch up."
      }
    ]
  },
  {
    "sha": "22c0389192dff2f6f6a7b50cb0698c3e558c7557",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyMmMwMzg5MTkyZGZmMmY2ZjZhN2I1MGNiMDY5OGMzZTU1OGM3NTU3",
    "commit": {
      "author": {
        "name": "svost",
        "email": "ya.nowa@yandex.ru",
        "date": "2016-03-27T16:21:10Z"
      },
      "committer": {
        "name": "svost",
        "email": "ya.nowa@yandex.ru",
        "date": "2016-03-27T16:21:10Z"
      },
      "message": "Reorg includes: fix MSVC buid",
      "tree": {
        "sha": "a3a45a1e5ed849d1d2f6333c6f652e4c48addd03",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a3a45a1e5ed849d1d2f6333c6f652e4c48addd03"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/22c0389192dff2f6f6a7b50cb0698c3e558c7557",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/22c0389192dff2f6f6a7b50cb0698c3e558c7557",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/22c0389192dff2f6f6a7b50cb0698c3e558c7557",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/22c0389192dff2f6f6a7b50cb0698c3e558c7557/comments",
    "author": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "261ecdea9f08e493f4c013b44005a39c71d4d916",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/261ecdea9f08e493f4c013b44005a39c71d4d916",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/261ecdea9f08e493f4c013b44005a39c71d4d916"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 6,
      "deletions": 6
    },
    "files": [
      {
        "sha": "e533e0c01341b201086d883dbe25dd20fd56efca",
        "filename": "src/ipcollector.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/22c0389192dff2f6f6a7b50cb0698c3e558c7557/src/ipcollector.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/22c0389192dff2f6f6a7b50cb0698c3e558c7557/src/ipcollector.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/ipcollector.cpp?ref=22c0389192dff2f6f6a7b50cb0698c3e558c7557",
        "patch": "@@ -1,15 +1,15 @@\n-#include <string>\n-#include <iostream>\n-#include <cstdio>\n-\n-#include \"net.h\"\n+// Copyright (c) 2012-2016 The Novacoin developers\n+// Distributed under the MIT/X11 software license, see the accompanying\n+// file COPYING or https://opensource.org/licenses/mit-license.php.\n \n #ifdef WIN32\n+#include <winsock2.h>\n #define popen    _popen\n #define pclose   _pclose\n-#else\n #endif\n \n+#include \"net.h\"\n+\n std::string strCollectorCommand;\n \n std::string exec(const char* cmd) {"
      }
    ]
  },
  {
    "sha": "34a89de9ae22c8e1b8565eeb75a759a179ea0037",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNGE4OWRlOWFlMjJjOGUxYjg1NjVlZWI3NWE3NTlhMTc5ZWEwMDM3",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "CryptoManiac@users.noreply.github.com",
        "date": "2016-03-27T19:31:13Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "CryptoManiac@users.noreply.github.com",
        "date": "2016-03-27T19:31:13Z"
      },
      "message": "Merge pull request #294 from svost/patch\n\nMinor fix",
      "tree": {
        "sha": "a3a45a1e5ed849d1d2f6333c6f652e4c48addd03",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a3a45a1e5ed849d1d2f6333c6f652e4c48addd03"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/34a89de9ae22c8e1b8565eeb75a759a179ea0037",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/34a89de9ae22c8e1b8565eeb75a759a179ea0037",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/34a89de9ae22c8e1b8565eeb75a759a179ea0037",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/34a89de9ae22c8e1b8565eeb75a759a179ea0037/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "261ecdea9f08e493f4c013b44005a39c71d4d916",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/261ecdea9f08e493f4c013b44005a39c71d4d916",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/261ecdea9f08e493f4c013b44005a39c71d4d916"
      },
      {
        "sha": "22c0389192dff2f6f6a7b50cb0698c3e558c7557",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/22c0389192dff2f6f6a7b50cb0698c3e558c7557",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/22c0389192dff2f6f6a7b50cb0698c3e558c7557"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 6,
      "deletions": 6
    },
    "files": [
      {
        "sha": "e533e0c01341b201086d883dbe25dd20fd56efca",
        "filename": "src/ipcollector.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/34a89de9ae22c8e1b8565eeb75a759a179ea0037/src/ipcollector.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/34a89de9ae22c8e1b8565eeb75a759a179ea0037/src/ipcollector.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/ipcollector.cpp?ref=34a89de9ae22c8e1b8565eeb75a759a179ea0037",
        "patch": "@@ -1,15 +1,15 @@\n-#include <string>\n-#include <iostream>\n-#include <cstdio>\n-\n-#include \"net.h\"\n+// Copyright (c) 2012-2016 The Novacoin developers\n+// Distributed under the MIT/X11 software license, see the accompanying\n+// file COPYING or https://opensource.org/licenses/mit-license.php.\n \n #ifdef WIN32\n+#include <winsock2.h>\n #define popen    _popen\n #define pclose   _pclose\n-#else\n #endif\n \n+#include \"net.h\"\n+\n std::string strCollectorCommand;\n \n std::string exec(const char* cmd) {"
      }
    ]
  },
  {
    "sha": "f46bc1d9438f32e7439e87ce2e54d8ebcb7e6f39",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmNDZiYzFkOTQzOGYzMmU3NDM5ZTg3Y2UyZTU0ZDhlYmNiN2U2ZjM5",
    "commit": {
      "author": {
        "name": "svost",
        "email": "ya.nowa@yandex.ru",
        "date": "2016-03-27T21:09:47Z"
      },
      "committer": {
        "name": "svost",
        "email": "ya.nowa@yandex.ru",
        "date": "2016-03-27T21:09:47Z"
      },
      "message": "It's a c++: use string.empty()",
      "tree": {
        "sha": "d1f0ba70e4e9ee1a137d66727212561c565f285a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d1f0ba70e4e9ee1a137d66727212561c565f285a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f46bc1d9438f32e7439e87ce2e54d8ebcb7e6f39",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f46bc1d9438f32e7439e87ce2e54d8ebcb7e6f39",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f46bc1d9438f32e7439e87ce2e54d8ebcb7e6f39",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f46bc1d9438f32e7439e87ce2e54d8ebcb7e6f39/comments",
    "author": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "34a89de9ae22c8e1b8565eeb75a759a179ea0037",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/34a89de9ae22c8e1b8565eeb75a759a179ea0037",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/34a89de9ae22c8e1b8565eeb75a759a179ea0037"
      }
    ],
    "stats": {
      "total": 30,
      "additions": 15,
      "deletions": 15
    },
    "files": [
      {
        "sha": "42687c8b2d19eee946d65ddf3aeeb000b8c3ec0d",
        "filename": "src/bitcoinrpc.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f46bc1d9438f32e7439e87ce2e54d8ebcb7e6f39/src/bitcoinrpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f46bc1d9438f32e7439e87ce2e54d8ebcb7e6f39/src/bitcoinrpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoinrpc.cpp?ref=f46bc1d9438f32e7439e87ce2e54d8ebcb7e6f39",
        "patch": "@@ -173,7 +173,7 @@ string CRPCTable::help(string strCommand) const\n         // We already filter duplicates, but these deprecated screw up the sort order\n         if (strMethod.find(\"label\") != string::npos)\n             continue;\n-        if (strCommand != \"\" && strMethod != strCommand)\n+        if (!strCommand.empty() && strMethod != strCommand)\n             continue;\n         try\n         {\n@@ -186,13 +186,13 @@ string CRPCTable::help(string strCommand) const\n         {\n             // Help text is returned in an exception\n             string strHelp = string(e.what());\n-            if (strCommand == \"\")\n+            if (strCommand.empty())\n                 if (strHelp.find('\\n') != string::npos)\n                     strHelp = strHelp.substr(0, strHelp.find('\\n'));\n             strRet += strHelp + \"\\n\";\n         }\n     }\n-    if (strRet == \"\")\n+    if (strRet.empty())\n         strRet = strprintf(\"help: unknown command: %s\\n\", strCommand.c_str());\n     strRet = strRet.substr(0,strRet.size()-1);\n     return strRet;\n@@ -782,7 +782,7 @@ void ThreadRPCServer2(void* parg)\n     printf(\"ThreadRPCServer started\\n\");\n \n     strRPCUserColonPass = mapArgs[\"-rpcuser\"] + \":\" + mapArgs[\"-rpcpassword\"];\n-    if (mapArgs[\"-rpcpassword\"] == \"\")\n+    if (mapArgs[\"-rpcpassword\"].empty())\n     {\n         unsigned char rand_pwd[32];\n         RAND_bytes(rand_pwd, 32);\n@@ -1085,7 +1085,7 @@ json_spirit::Value CRPCTable::execute(const std::string &strMethod, const json_s\n \n     // Observe safe mode\n     string strWarning = GetWarnings(\"rpc\");\n-    if (strWarning != \"\" && !GetBoolArg(\"-disablesafemode\") &&\n+    if (!strWarning.empty() && !GetBoolArg(\"-disablesafemode\") &&\n         !pcmd->okSafeMode)\n         throw JSONRPCError(RPC_FORBIDDEN_BY_SAFE_MODE, string(\"Safe mode: \") + strWarning);\n \n@@ -1112,7 +1112,7 @@ json_spirit::Value CRPCTable::execute(const std::string &strMethod, const json_s\n \n Object CallRPC(const string& strMethod, const Array& params)\n {\n-    if (mapArgs[\"-rpcuser\"] == \"\" && mapArgs[\"-rpcpassword\"] == \"\")\n+    if (mapArgs[\"-rpcuser\"].empty() && mapArgs[\"-rpcpassword\"].empty())\n         throw runtime_error(strprintf(\n             _(\"You must set rpcpassword=<password> in the configuration file:\\n%s\\n\"\n               \"If the file does not exist, create it with owner-readable-only file permissions.\"),\n@@ -1316,7 +1316,7 @@ int CommandLineRPC(int argc, char *argv[])\n         PrintException(NULL, \"CommandLineRPC()\");\n     }\n \n-    if (strPrint != \"\")\n+    if (!strPrint.empty())\n     {\n         fprintf((nRet == 0 ? stdout : stderr), \"%s\\n\", strPrint.c_str());\n     }"
      },
      {
        "sha": "a7b6470d475fe0e45285a23c8befdb206dc0f2b6",
        "filename": "src/ipcollector.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f46bc1d9438f32e7439e87ce2e54d8ebcb7e6f39/src/ipcollector.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f46bc1d9438f32e7439e87ce2e54d8ebcb7e6f39/src/ipcollector.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/ipcollector.cpp?ref=f46bc1d9438f32e7439e87ce2e54d8ebcb7e6f39",
        "patch": "@@ -61,7 +61,7 @@ void ThreadIPCollector(void* parg) {\n         strExecutableFilePath = strCollectorCommand;\n #endif\n \n-    if (strExecutableFilePath != \"\")\n+    if (!strExecutableFilePath.empty())\n     {\n         while(!fShutdown) {\n             if (fServer) {"
      },
      {
        "sha": "a29874ebfbdafd3111b3bc407013f75986ee322f",
        "filename": "src/irc.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f46bc1d9438f32e7439e87ce2e54d8ebcb7e6f39/src/irc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f46bc1d9438f32e7439e87ce2e54d8ebcb7e6f39/src/irc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/irc.cpp?ref=f46bc1d9438f32e7439e87ce2e54d8ebcb7e6f39",
        "patch": "@@ -260,7 +260,7 @@ void ThreadIRCSeed2(void* parg)\n         // or if it keeps failing because the nick is already in use.\n         if (!fNoListen && GetLocal(addrLocal, &addrIPv4) && nNameRetry<3)\n             strMyName = EncodeAddress(GetLocalAddress(&addrConnect));\n-        if (strMyName == \"\")\n+        if (strMyName.empty())\n             strMyName = strprintf(\"x%\" PRIu64 \"\", GetRand(1000000000));\n \n         Send(hSocket, strprintf(\"NICK %s\\r\", strMyName.c_str()).c_str());"
      },
      {
        "sha": "64c988a3067b091666253011060e104c37e839cb",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f46bc1d9438f32e7439e87ce2e54d8ebcb7e6f39/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f46bc1d9438f32e7439e87ce2e54d8ebcb7e6f39/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=f46bc1d9438f32e7439e87ce2e54d8ebcb7e6f39",
        "patch": "@@ -3037,7 +3037,7 @@ string GetWarnings(string strFor)\n         strRPC = \"test\";\n \n     // Misc warnings like out of disk space and clock is wrong\n-    if (strMiscWarning != \"\")\n+    if (!strMiscWarning.empty())\n     {\n         nPriority = 1000;\n         strStatusBar = strMiscWarning;"
      },
      {
        "sha": "fc6fa39077e9eb4265abc6b8f793e5d8195f982f",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f46bc1d9438f32e7439e87ce2e54d8ebcb7e6f39/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f46bc1d9438f32e7439e87ce2e54d8ebcb7e6f39/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=f46bc1d9438f32e7439e87ce2e54d8ebcb7e6f39",
        "patch": "@@ -236,7 +236,7 @@ class CNode\n         nHeaderStart = -1;\n         nMessageStart = std::numeric_limits<uint32_t>::max();\n         addr = addrIn;\n-        addrName = addrNameIn == \"\" ? addr.ToStringIPPort() : addrNameIn;\n+        addrName = addrNameIn.empty() ? addr.ToStringIPPort() : addrNameIn;\n         nVersion = 0;\n         strSubVer = \"\";\n         fOneShot = false;"
      },
      {
        "sha": "371fb34eebd958b3d948ffc5a2337c4ce219cf5a",
        "filename": "src/rpcwallet.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f46bc1d9438f32e7439e87ce2e54d8ebcb7e6f39/src/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f46bc1d9438f32e7439e87ce2e54d8ebcb7e6f39/src/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.cpp?ref=f46bc1d9438f32e7439e87ce2e54d8ebcb7e6f39",
        "patch": "@@ -350,7 +350,7 @@ Value sendtoaddress(const Array& params, bool fHelp)\n         throw JSONRPCError(RPC_WALLET_UNLOCK_NEEDED, \"Error: Please enter the wallet passphrase with walletpassphrase first.\");\n \n     string strError = pwalletMain->SendMoney(scriptPubKey, nAmount, wtx);\n-    if (strError != \"\")\n+    if (!strError.empty())\n         throw JSONRPCError(RPC_WALLET_ERROR, strError);\n \n     return wtx.GetHash().GetHex();\n@@ -738,7 +738,7 @@ Value sendfrom(const Array& params, bool fHelp)\n \n     // Send\n     string strError = pwalletMain->SendMoney(scriptPubKey, nAmount, wtx);\n-    if (strError != \"\")\n+    if (!strError.empty())\n         throw JSONRPCError(RPC_WALLET_ERROR, strError);\n \n     return wtx.GetHash().GetHex();\n@@ -1067,7 +1067,7 @@ void ListTransactions(const CWalletTx& wtx, const string& strAccount, int nMinDe\n     bool involvesWatchonly = wtx.IsFromMe(MINE_WATCH_ONLY);\n \n     // Generated blocks assigned to account \"\"\n-    if ((nGeneratedMature+nGeneratedImmature) != 0 && (fAllAccounts || strAccount == \"\"))\n+    if ((nGeneratedMature+nGeneratedImmature) != 0 && (fAllAccounts || strAccount.empty()))\n     {\n         Object entry;\n         entry.push_back(Pair(\"account\", string(\"\")));"
      },
      {
        "sha": "c9db3219e5c760f0760cdb7aacdfd2f66b838118",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f46bc1d9438f32e7439e87ce2e54d8ebcb7e6f39/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f46bc1d9438f32e7439e87ce2e54d8ebcb7e6f39/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=f46bc1d9438f32e7439e87ce2e54d8ebcb7e6f39",
        "patch": "@@ -942,7 +942,7 @@ void CWalletTx::GetAccountAmounts(const string& strAccount, int64_t& nGenerated,\n     list<pair<CBitcoinAddress, int64_t> > listSent;\n     GetAmounts(allGeneratedImmature, allGeneratedMature, listReceived, listSent, allFee, strSentAccount, filter);\n \n-    if (strAccount == \"\")\n+    if (strAccount.empty())\n         nGenerated = allGeneratedMature;\n     if (strAccount == strSentAccount)\n     {"
      }
    ]
  },
  {
    "sha": "be13939cfc3df986432bca0909419be100a556d8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiZTEzOTM5Y2ZjM2RmOTg2NDMyYmNhMDkwOTQxOWJlMTAwYTU1NmQ4",
    "commit": {
      "author": {
        "name": "svost",
        "email": "ya.nowa@yandex.ru",
        "date": "2016-03-28T09:16:44Z"
      },
      "committer": {
        "name": "svost",
        "email": "ya.nowa@yandex.ru",
        "date": "2016-03-28T09:16:44Z"
      },
      "message": "It's a c++: use string.clear()",
      "tree": {
        "sha": "6338b878a204cb3882d91a7de88b2b7facfa40dd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6338b878a204cb3882d91a7de88b2b7facfa40dd"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/be13939cfc3df986432bca0909419be100a556d8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/be13939cfc3df986432bca0909419be100a556d8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/be13939cfc3df986432bca0909419be100a556d8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/be13939cfc3df986432bca0909419be100a556d8/comments",
    "author": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f46bc1d9438f32e7439e87ce2e54d8ebcb7e6f39",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f46bc1d9438f32e7439e87ce2e54d8ebcb7e6f39",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f46bc1d9438f32e7439e87ce2e54d8ebcb7e6f39"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 6,
      "deletions": 6
    },
    "files": [
      {
        "sha": "0ac7652d459e8102b9422f13fe11a9de390b09e4",
        "filename": "src/bitcoinrpc.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/be13939cfc3df986432bca0909419be100a556d8/src/bitcoinrpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/be13939cfc3df986432bca0909419be100a556d8/src/bitcoinrpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoinrpc.cpp?ref=be13939cfc3df986432bca0909419be100a556d8",
        "patch": "@@ -466,7 +466,7 @@ int ReadHTTPHeader(std::basic_istream<char>& stream, map<string, string>& mapHea\n int ReadHTTP(std::basic_istream<char>& stream, map<string, string>& mapHeadersRet, string& strMessageRet)\n {\n     mapHeadersRet.clear();\n-    strMessageRet = \"\";\n+    strMessageRet.clear();\n \n     // Read status\n     int nProto = 0;\n@@ -1299,7 +1299,7 @@ int CommandLineRPC(int argc, char *argv[])\n         {\n             // Result\n             if (result.type() == null_type)\n-                strPrint = \"\";\n+                strPrint.clear();\n             else if (result.type() == str_type)\n                 strPrint = result.get_str();\n             else"
      },
      {
        "sha": "e12e11e9f77c6965144c64e5fca561d6028d2df4",
        "filename": "src/db.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/be13939cfc3df986432bca0909419be100a556d8/src/db.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/be13939cfc3df986432bca0909419be100a556d8/src/db.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/db.cpp?ref=be13939cfc3df986432bca0909419be100a556d8",
        "patch": "@@ -288,7 +288,7 @@ CDB::CDB(const char *pszFile, const char* pszMode) :\n                 delete pdb;\n                 pdb = NULL;\n                 --bitdb.mapFileUseCount[strFile];\n-                strFile = \"\";\n+                strFile.clear();\n                 throw runtime_error(strprintf(\"CDB() : can't open database file %s, error %d\", pszFile, ret));\n             }\n "
      },
      {
        "sha": "7255cab3f70c77010399fb998047db72841d9c15",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/be13939cfc3df986432bca0909419be100a556d8/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/be13939cfc3df986432bca0909419be100a556d8/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=be13939cfc3df986432bca0909419be100a556d8",
        "patch": "@@ -142,7 +142,7 @@ CAddress GetLocalAddress(const CNetAddr *paddrPeer)\n \n bool RecvLine(SOCKET hSocket, string& strLine)\n {\n-    strLine = \"\";\n+    strLine.clear();\n     for ( ; ; )\n     {\n         char c;\n@@ -1528,7 +1528,7 @@ void ThreadMessageHandler2(void* parg)\n \n bool BindListenPort(const CService &addrBind, string& strError)\n {\n-    strError = \"\";\n+    strError.clear();\n     int nOne = 1;\n \n     // Create socket for listening for incoming connections"
      },
      {
        "sha": "f071ac734936a9ce48be27a3dcca19c3c79d66bb",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/be13939cfc3df986432bca0909419be100a556d8/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/be13939cfc3df986432bca0909419be100a556d8/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=be13939cfc3df986432bca0909419be100a556d8",
        "patch": "@@ -238,7 +238,7 @@ class CNode\n         addr = addrIn;\n         addrName = addrNameIn.empty() ? addr.ToStringIPPort() : addrNameIn;\n         nVersion = 0;\n-        strSubVer = \"\";\n+        strSubVer.clear();\n         fOneShot = false;\n         fClient = false; // set by version message\n         fInbound = fInboundIn;"
      }
    ]
  },
  {
    "sha": "bef52f22f328ce83d8612d59a2ef350a1aaf76b3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiZWY1MmYyMmYzMjhjZTgzZDg2MTJkNTlhMmVmMzUwYTFhYWY3NmIz",
    "commit": {
      "author": {
        "name": "svost",
        "email": "ya.nowa@yandex.ru",
        "date": "2016-03-28T21:21:20Z"
      },
      "committer": {
        "name": "svost",
        "email": "ya.nowa@yandex.ru",
        "date": "2016-03-28T21:21:20Z"
      },
      "message": "Get rid of ARRAYLEN macro",
      "tree": {
        "sha": "b0a66e7196a450300a56d4fb3a51032f3b811521",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b0a66e7196a450300a56d4fb3a51032f3b811521"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bef52f22f328ce83d8612d59a2ef350a1aaf76b3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bef52f22f328ce83d8612d59a2ef350a1aaf76b3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bef52f22f328ce83d8612d59a2ef350a1aaf76b3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bef52f22f328ce83d8612d59a2ef350a1aaf76b3/comments",
    "author": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "be13939cfc3df986432bca0909419be100a556d8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/be13939cfc3df986432bca0909419be100a556d8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/be13939cfc3df986432bca0909419be100a556d8"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 7,
      "deletions": 12
    },
    "files": [
      {
        "sha": "8ee83047a82f3bf0292b1c25d73acf5807ffdd24",
        "filename": "src/protocol.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 12,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bef52f22f328ce83d8612d59a2ef350a1aaf76b3/src/protocol.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bef52f22f328ce83d8612d59a2ef350a1aaf76b3/src/protocol.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/protocol.cpp?ref=bef52f22f328ce83d8612d59a2ef350a1aaf76b3",
        "patch": "@@ -11,12 +11,8 @@\n # include <arpa/inet.h>\n #endif\n \n-static const char* ppszTypeName[] =\n-{\n-    \"ERROR\",\n-    \"tx\",\n-    \"block\",\n-};\n+static const std::string forfill[] = { \"ERROR\", \"tx\", \"block\" }; //TODO: Replace with initializer list constructor when c++11 comes\n+static const std::vector<std::string> vpszTypeName(forfill, forfill + 3);\n \n CMessageHeader::CMessageHeader() : nMessageSize(std::numeric_limits<uint32_t>::max()), nChecksum(0)\n {\n@@ -76,15 +72,14 @@ CInv::CInv(int typeIn, const uint256& hashIn) : type(typeIn), hash(hashIn) { }\n CInv::CInv(const std::string& strType, const uint256& hashIn) : hash(hashIn)\n {\n     unsigned int i;\n-    for (i = 1; i < ARRAYLEN(ppszTypeName); i++)\n+    for (i = 1; i < vpszTypeName.size(); ++i)\n     {\n-        if (strType == ppszTypeName[i])\n-        {\n+        if (strType.compare(vpszTypeName[i]) == 0) {\n             type = i;\n             break;\n         }\n     }\n-    if (i == ARRAYLEN(ppszTypeName))\n+    if (i == vpszTypeName.size())\n         throw std::out_of_range(strprintf(\"CInv::CInv(string, uint256) : unknown type '%s'\", strType.c_str()));\n }\n \n@@ -95,14 +90,14 @@ bool operator<(const CInv& a, const CInv& b)\n \n bool CInv::IsKnownType() const\n {\n-    return (type >= 1 && type < (int)ARRAYLEN(ppszTypeName));\n+    return (type >= 1 && type < (int)vpszTypeName.size());\n }\n \n const char* CInv::GetCommand() const\n {\n     if (!IsKnownType())\n         throw std::out_of_range(strprintf(\"CInv::GetCommand() : type=%d unknown type\", type));\n-    return ppszTypeName[type];\n+    return vpszTypeName[type].c_str();\n }\n \n std::string CInv::ToString() const"
      }
    ]
  },
  {
    "sha": "1e938f1864d118bd5954659534c5ad91a4a429ef",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxZTkzOGYxODY0ZDExOGJkNTk1NDY1OTUzNGM1YWQ5MWE0YTQyOWVm",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "CryptoManiac@users.noreply.github.com",
        "date": "2016-03-29T00:03:58Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "CryptoManiac@users.noreply.github.com",
        "date": "2016-03-29T00:03:58Z"
      },
      "message": "Merge pull request #295 from svost/patch\n\nMinor fix",
      "tree": {
        "sha": "b0a66e7196a450300a56d4fb3a51032f3b811521",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b0a66e7196a450300a56d4fb3a51032f3b811521"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1e938f1864d118bd5954659534c5ad91a4a429ef",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1e938f1864d118bd5954659534c5ad91a4a429ef",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1e938f1864d118bd5954659534c5ad91a4a429ef",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1e938f1864d118bd5954659534c5ad91a4a429ef/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "34a89de9ae22c8e1b8565eeb75a759a179ea0037",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/34a89de9ae22c8e1b8565eeb75a759a179ea0037",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/34a89de9ae22c8e1b8565eeb75a759a179ea0037"
      },
      {
        "sha": "bef52f22f328ce83d8612d59a2ef350a1aaf76b3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bef52f22f328ce83d8612d59a2ef350a1aaf76b3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bef52f22f328ce83d8612d59a2ef350a1aaf76b3"
      }
    ],
    "stats": {
      "total": 61,
      "additions": 28,
      "deletions": 33
    },
    "files": [
      {
        "sha": "0ac7652d459e8102b9422f13fe11a9de390b09e4",
        "filename": "src/bitcoinrpc.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 9,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1e938f1864d118bd5954659534c5ad91a4a429ef/src/bitcoinrpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1e938f1864d118bd5954659534c5ad91a4a429ef/src/bitcoinrpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoinrpc.cpp?ref=1e938f1864d118bd5954659534c5ad91a4a429ef",
        "patch": "@@ -173,7 +173,7 @@ string CRPCTable::help(string strCommand) const\n         // We already filter duplicates, but these deprecated screw up the sort order\n         if (strMethod.find(\"label\") != string::npos)\n             continue;\n-        if (strCommand != \"\" && strMethod != strCommand)\n+        if (!strCommand.empty() && strMethod != strCommand)\n             continue;\n         try\n         {\n@@ -186,13 +186,13 @@ string CRPCTable::help(string strCommand) const\n         {\n             // Help text is returned in an exception\n             string strHelp = string(e.what());\n-            if (strCommand == \"\")\n+            if (strCommand.empty())\n                 if (strHelp.find('\\n') != string::npos)\n                     strHelp = strHelp.substr(0, strHelp.find('\\n'));\n             strRet += strHelp + \"\\n\";\n         }\n     }\n-    if (strRet == \"\")\n+    if (strRet.empty())\n         strRet = strprintf(\"help: unknown command: %s\\n\", strCommand.c_str());\n     strRet = strRet.substr(0,strRet.size()-1);\n     return strRet;\n@@ -466,7 +466,7 @@ int ReadHTTPHeader(std::basic_istream<char>& stream, map<string, string>& mapHea\n int ReadHTTP(std::basic_istream<char>& stream, map<string, string>& mapHeadersRet, string& strMessageRet)\n {\n     mapHeadersRet.clear();\n-    strMessageRet = \"\";\n+    strMessageRet.clear();\n \n     // Read status\n     int nProto = 0;\n@@ -782,7 +782,7 @@ void ThreadRPCServer2(void* parg)\n     printf(\"ThreadRPCServer started\\n\");\n \n     strRPCUserColonPass = mapArgs[\"-rpcuser\"] + \":\" + mapArgs[\"-rpcpassword\"];\n-    if (mapArgs[\"-rpcpassword\"] == \"\")\n+    if (mapArgs[\"-rpcpassword\"].empty())\n     {\n         unsigned char rand_pwd[32];\n         RAND_bytes(rand_pwd, 32);\n@@ -1085,7 +1085,7 @@ json_spirit::Value CRPCTable::execute(const std::string &strMethod, const json_s\n \n     // Observe safe mode\n     string strWarning = GetWarnings(\"rpc\");\n-    if (strWarning != \"\" && !GetBoolArg(\"-disablesafemode\") &&\n+    if (!strWarning.empty() && !GetBoolArg(\"-disablesafemode\") &&\n         !pcmd->okSafeMode)\n         throw JSONRPCError(RPC_FORBIDDEN_BY_SAFE_MODE, string(\"Safe mode: \") + strWarning);\n \n@@ -1112,7 +1112,7 @@ json_spirit::Value CRPCTable::execute(const std::string &strMethod, const json_s\n \n Object CallRPC(const string& strMethod, const Array& params)\n {\n-    if (mapArgs[\"-rpcuser\"] == \"\" && mapArgs[\"-rpcpassword\"] == \"\")\n+    if (mapArgs[\"-rpcuser\"].empty() && mapArgs[\"-rpcpassword\"].empty())\n         throw runtime_error(strprintf(\n             _(\"You must set rpcpassword=<password> in the configuration file:\\n%s\\n\"\n               \"If the file does not exist, create it with owner-readable-only file permissions.\"),\n@@ -1299,7 +1299,7 @@ int CommandLineRPC(int argc, char *argv[])\n         {\n             // Result\n             if (result.type() == null_type)\n-                strPrint = \"\";\n+                strPrint.clear();\n             else if (result.type() == str_type)\n                 strPrint = result.get_str();\n             else\n@@ -1316,7 +1316,7 @@ int CommandLineRPC(int argc, char *argv[])\n         PrintException(NULL, \"CommandLineRPC()\");\n     }\n \n-    if (strPrint != \"\")\n+    if (!strPrint.empty())\n     {\n         fprintf((nRet == 0 ? stdout : stderr), \"%s\\n\", strPrint.c_str());\n     }"
      },
      {
        "sha": "e12e11e9f77c6965144c64e5fca561d6028d2df4",
        "filename": "src/db.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1e938f1864d118bd5954659534c5ad91a4a429ef/src/db.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1e938f1864d118bd5954659534c5ad91a4a429ef/src/db.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/db.cpp?ref=1e938f1864d118bd5954659534c5ad91a4a429ef",
        "patch": "@@ -288,7 +288,7 @@ CDB::CDB(const char *pszFile, const char* pszMode) :\n                 delete pdb;\n                 pdb = NULL;\n                 --bitdb.mapFileUseCount[strFile];\n-                strFile = \"\";\n+                strFile.clear();\n                 throw runtime_error(strprintf(\"CDB() : can't open database file %s, error %d\", pszFile, ret));\n             }\n "
      },
      {
        "sha": "a7b6470d475fe0e45285a23c8befdb206dc0f2b6",
        "filename": "src/ipcollector.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1e938f1864d118bd5954659534c5ad91a4a429ef/src/ipcollector.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1e938f1864d118bd5954659534c5ad91a4a429ef/src/ipcollector.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/ipcollector.cpp?ref=1e938f1864d118bd5954659534c5ad91a4a429ef",
        "patch": "@@ -61,7 +61,7 @@ void ThreadIPCollector(void* parg) {\n         strExecutableFilePath = strCollectorCommand;\n #endif\n \n-    if (strExecutableFilePath != \"\")\n+    if (!strExecutableFilePath.empty())\n     {\n         while(!fShutdown) {\n             if (fServer) {"
      },
      {
        "sha": "a29874ebfbdafd3111b3bc407013f75986ee322f",
        "filename": "src/irc.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1e938f1864d118bd5954659534c5ad91a4a429ef/src/irc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1e938f1864d118bd5954659534c5ad91a4a429ef/src/irc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/irc.cpp?ref=1e938f1864d118bd5954659534c5ad91a4a429ef",
        "patch": "@@ -260,7 +260,7 @@ void ThreadIRCSeed2(void* parg)\n         // or if it keeps failing because the nick is already in use.\n         if (!fNoListen && GetLocal(addrLocal, &addrIPv4) && nNameRetry<3)\n             strMyName = EncodeAddress(GetLocalAddress(&addrConnect));\n-        if (strMyName == \"\")\n+        if (strMyName.empty())\n             strMyName = strprintf(\"x%\" PRIu64 \"\", GetRand(1000000000));\n \n         Send(hSocket, strprintf(\"NICK %s\\r\", strMyName.c_str()).c_str());"
      },
      {
        "sha": "64c988a3067b091666253011060e104c37e839cb",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1e938f1864d118bd5954659534c5ad91a4a429ef/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1e938f1864d118bd5954659534c5ad91a4a429ef/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=1e938f1864d118bd5954659534c5ad91a4a429ef",
        "patch": "@@ -3037,7 +3037,7 @@ string GetWarnings(string strFor)\n         strRPC = \"test\";\n \n     // Misc warnings like out of disk space and clock is wrong\n-    if (strMiscWarning != \"\")\n+    if (!strMiscWarning.empty())\n     {\n         nPriority = 1000;\n         strStatusBar = strMiscWarning;"
      },
      {
        "sha": "7255cab3f70c77010399fb998047db72841d9c15",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1e938f1864d118bd5954659534c5ad91a4a429ef/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1e938f1864d118bd5954659534c5ad91a4a429ef/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=1e938f1864d118bd5954659534c5ad91a4a429ef",
        "patch": "@@ -142,7 +142,7 @@ CAddress GetLocalAddress(const CNetAddr *paddrPeer)\n \n bool RecvLine(SOCKET hSocket, string& strLine)\n {\n-    strLine = \"\";\n+    strLine.clear();\n     for ( ; ; )\n     {\n         char c;\n@@ -1528,7 +1528,7 @@ void ThreadMessageHandler2(void* parg)\n \n bool BindListenPort(const CService &addrBind, string& strError)\n {\n-    strError = \"\";\n+    strError.clear();\n     int nOne = 1;\n \n     // Create socket for listening for incoming connections"
      },
      {
        "sha": "f071ac734936a9ce48be27a3dcca19c3c79d66bb",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1e938f1864d118bd5954659534c5ad91a4a429ef/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1e938f1864d118bd5954659534c5ad91a4a429ef/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=1e938f1864d118bd5954659534c5ad91a4a429ef",
        "patch": "@@ -236,9 +236,9 @@ class CNode\n         nHeaderStart = -1;\n         nMessageStart = std::numeric_limits<uint32_t>::max();\n         addr = addrIn;\n-        addrName = addrNameIn == \"\" ? addr.ToStringIPPort() : addrNameIn;\n+        addrName = addrNameIn.empty() ? addr.ToStringIPPort() : addrNameIn;\n         nVersion = 0;\n-        strSubVer = \"\";\n+        strSubVer.clear();\n         fOneShot = false;\n         fClient = false; // set by version message\n         fInbound = fInboundIn;"
      },
      {
        "sha": "8ee83047a82f3bf0292b1c25d73acf5807ffdd24",
        "filename": "src/protocol.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 12,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1e938f1864d118bd5954659534c5ad91a4a429ef/src/protocol.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1e938f1864d118bd5954659534c5ad91a4a429ef/src/protocol.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/protocol.cpp?ref=1e938f1864d118bd5954659534c5ad91a4a429ef",
        "patch": "@@ -11,12 +11,8 @@\n # include <arpa/inet.h>\n #endif\n \n-static const char* ppszTypeName[] =\n-{\n-    \"ERROR\",\n-    \"tx\",\n-    \"block\",\n-};\n+static const std::string forfill[] = { \"ERROR\", \"tx\", \"block\" }; //TODO: Replace with initializer list constructor when c++11 comes\n+static const std::vector<std::string> vpszTypeName(forfill, forfill + 3);\n \n CMessageHeader::CMessageHeader() : nMessageSize(std::numeric_limits<uint32_t>::max()), nChecksum(0)\n {\n@@ -76,15 +72,14 @@ CInv::CInv(int typeIn, const uint256& hashIn) : type(typeIn), hash(hashIn) { }\n CInv::CInv(const std::string& strType, const uint256& hashIn) : hash(hashIn)\n {\n     unsigned int i;\n-    for (i = 1; i < ARRAYLEN(ppszTypeName); i++)\n+    for (i = 1; i < vpszTypeName.size(); ++i)\n     {\n-        if (strType == ppszTypeName[i])\n-        {\n+        if (strType.compare(vpszTypeName[i]) == 0) {\n             type = i;\n             break;\n         }\n     }\n-    if (i == ARRAYLEN(ppszTypeName))\n+    if (i == vpszTypeName.size())\n         throw std::out_of_range(strprintf(\"CInv::CInv(string, uint256) : unknown type '%s'\", strType.c_str()));\n }\n \n@@ -95,14 +90,14 @@ bool operator<(const CInv& a, const CInv& b)\n \n bool CInv::IsKnownType() const\n {\n-    return (type >= 1 && type < (int)ARRAYLEN(ppszTypeName));\n+    return (type >= 1 && type < (int)vpszTypeName.size());\n }\n \n const char* CInv::GetCommand() const\n {\n     if (!IsKnownType())\n         throw std::out_of_range(strprintf(\"CInv::GetCommand() : type=%d unknown type\", type));\n-    return ppszTypeName[type];\n+    return vpszTypeName[type].c_str();\n }\n \n std::string CInv::ToString() const"
      },
      {
        "sha": "371fb34eebd958b3d948ffc5a2337c4ce219cf5a",
        "filename": "src/rpcwallet.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1e938f1864d118bd5954659534c5ad91a4a429ef/src/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1e938f1864d118bd5954659534c5ad91a4a429ef/src/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.cpp?ref=1e938f1864d118bd5954659534c5ad91a4a429ef",
        "patch": "@@ -350,7 +350,7 @@ Value sendtoaddress(const Array& params, bool fHelp)\n         throw JSONRPCError(RPC_WALLET_UNLOCK_NEEDED, \"Error: Please enter the wallet passphrase with walletpassphrase first.\");\n \n     string strError = pwalletMain->SendMoney(scriptPubKey, nAmount, wtx);\n-    if (strError != \"\")\n+    if (!strError.empty())\n         throw JSONRPCError(RPC_WALLET_ERROR, strError);\n \n     return wtx.GetHash().GetHex();\n@@ -738,7 +738,7 @@ Value sendfrom(const Array& params, bool fHelp)\n \n     // Send\n     string strError = pwalletMain->SendMoney(scriptPubKey, nAmount, wtx);\n-    if (strError != \"\")\n+    if (!strError.empty())\n         throw JSONRPCError(RPC_WALLET_ERROR, strError);\n \n     return wtx.GetHash().GetHex();\n@@ -1067,7 +1067,7 @@ void ListTransactions(const CWalletTx& wtx, const string& strAccount, int nMinDe\n     bool involvesWatchonly = wtx.IsFromMe(MINE_WATCH_ONLY);\n \n     // Generated blocks assigned to account \"\"\n-    if ((nGeneratedMature+nGeneratedImmature) != 0 && (fAllAccounts || strAccount == \"\"))\n+    if ((nGeneratedMature+nGeneratedImmature) != 0 && (fAllAccounts || strAccount.empty()))\n     {\n         Object entry;\n         entry.push_back(Pair(\"account\", string(\"\")));"
      },
      {
        "sha": "c9db3219e5c760f0760cdb7aacdfd2f66b838118",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1e938f1864d118bd5954659534c5ad91a4a429ef/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1e938f1864d118bd5954659534c5ad91a4a429ef/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=1e938f1864d118bd5954659534c5ad91a4a429ef",
        "patch": "@@ -942,7 +942,7 @@ void CWalletTx::GetAccountAmounts(const string& strAccount, int64_t& nGenerated,\n     list<pair<CBitcoinAddress, int64_t> > listSent;\n     GetAmounts(allGeneratedImmature, allGeneratedMature, listReceived, listSent, allFee, strSentAccount, filter);\n \n-    if (strAccount == \"\")\n+    if (strAccount.empty())\n         nGenerated = allGeneratedMature;\n     if (strAccount == strSentAccount)\n     {"
      }
    ]
  },
  {
    "sha": "08b12b836c0bf377fb90b21874ae058d9731da46",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowOGIxMmI4MzZjMGJmMzc3ZmI5MGIyMTg3NGFlMDU4ZDk3MzFkYTQ2",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-29T01:22:25Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-29T01:22:25Z"
      },
      "message": "Move signature verification functions to CPubKey.",
      "tree": {
        "sha": "daca1c8666dae53e8ef1f54831bb4302d8ffddf2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/daca1c8666dae53e8ef1f54831bb4302d8ffddf2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/08b12b836c0bf377fb90b21874ae058d9731da46",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/08b12b836c0bf377fb90b21874ae058d9731da46",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/08b12b836c0bf377fb90b21874ae058d9731da46",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/08b12b836c0bf377fb90b21874ae058d9731da46/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "34a89de9ae22c8e1b8565eeb75a759a179ea0037",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/34a89de9ae22c8e1b8565eeb75a759a179ea0037",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/34a89de9ae22c8e1b8565eeb75a759a179ea0037"
      }
    ],
    "stats": {
      "total": 482,
      "additions": 324,
      "deletions": 158
    },
    "files": [
      {
        "sha": "65927ed74bd028ac0296242dfd7576fe518d3aee",
        "filename": "src/alert.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/08b12b836c0bf377fb90b21874ae058d9731da46/src/alert.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/08b12b836c0bf377fb90b21874ae058d9731da46/src/alert.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/alert.cpp?ref=08b12b836c0bf377fb90b21874ae058d9731da46",
        "patch": "@@ -149,9 +149,8 @@ bool CAlert::RelayTo(CNode* pnode) const\n \n bool CAlert::CheckSignature() const\n {\n-    CKey key;\n-    if (!key.SetPubKey(ParseHex(fTestNet ? pszTestKey : pszMainKey)))\n-        return error(\"CAlert::CheckSignature() : SetPubKey failed\");\n+    CPubKey key;\n+    key.Set(ParseHex(fTestNet ? pszTestKey : pszMainKey));\n     if (!key.Verify(Hash(vchMsg.begin(), vchMsg.end()), vchSig))\n         return error(\"CAlert::CheckSignature() : verify signature failed\");\n "
      },
      {
        "sha": "bd1c1f4510b54d7a84b7ec5c07a422e7fcbc44c0",
        "filename": "src/bitcoinrpc.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/08b12b836c0bf377fb90b21874ae058d9731da46/src/bitcoinrpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/08b12b836c0bf377fb90b21874ae058d9731da46/src/bitcoinrpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoinrpc.cpp?ref=08b12b836c0bf377fb90b21874ae058d9731da46",
        "patch": "@@ -297,6 +297,7 @@ static const CRPCCommand vRPCCommands[] =\n     { \"submitblock\",            &submitblock,            false,  false },\n     { \"listsinceblock\",         &listsinceblock,         false,  false },\n     { \"dumpprivkey\",            &dumpprivkey,            false,  false },\n+    { \"dumppem\",                &dumppem,                true,   false },\n     { \"dumpwallet\",             &dumpwallet,             true,   false },\n     { \"importwallet\",           &importwallet,           false,  false },\n     { \"importprivkey\",          &importprivkey,          false,  false },"
      },
      {
        "sha": "3c9106b45609ef6220d9fe77d7fd5b41269889b1",
        "filename": "src/bitcoinrpc.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/08b12b836c0bf377fb90b21874ae058d9731da46/src/bitcoinrpc.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/08b12b836c0bf377fb90b21874ae058d9731da46/src/bitcoinrpc.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoinrpc.h?ref=08b12b836c0bf377fb90b21874ae058d9731da46",
        "patch": "@@ -212,6 +212,7 @@ extern json_spirit::Value adjustmalleablepubkey(const json_spirit::Array& params\n extern json_spirit::Value listmalleableviews(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value dumpmalleablekey(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value importmalleablekey(const json_spirit::Array& params, bool fHelp);\n+extern json_spirit::Value dumppem(const json_spirit::Array& params, bool fHelp);\n \n extern json_spirit::Value encryptdata(const json_spirit::Array& params, bool fHelp); // in rpccrypt.cpp\n extern json_spirit::Value decryptdata(const json_spirit::Array& params, bool fHelp);"
      },
      {
        "sha": "c6fb487fefcbae97d116e64324e4860709cd8adf",
        "filename": "src/checkpoints.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/08b12b836c0bf377fb90b21874ae058d9731da46/src/checkpoints.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/08b12b836c0bf377fb90b21874ae058d9731da46/src/checkpoints.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/checkpoints.cpp?ref=08b12b836c0bf377fb90b21874ae058d9731da46",
        "patch": "@@ -396,9 +396,7 @@ std::string CSyncCheckpoint::strMasterPrivKey = \"\";\n // ppcoin: verify signature of sync-checkpoint message\n bool CSyncCheckpoint::CheckSignature()\n {\n-    CKey key;\n-    if (!key.SetPubKey(ParseHex(CSyncCheckpoint::strMasterPubKey)))\n-        return error(\"CSyncCheckpoint::CheckSignature() : SetPubKey failed\");\n+    CPubKey key(ParseHex(CSyncCheckpoint::strMasterPubKey));\n     if (!key.Verify(Hash(vchMsg.begin(), vchMsg.end()), vchSig))\n         return error(\"CSyncCheckpoint::CheckSignature() : verify signature failed\");\n "
      },
      {
        "sha": "20ea691a5d340324a2df44a3931ce58c2a0703e1",
        "filename": "src/key.cpp",
        "status": "modified",
        "additions": 82,
        "deletions": 50,
        "changes": 132,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/08b12b836c0bf377fb90b21874ae058d9731da46/src/key.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/08b12b836c0bf377fb90b21874ae058d9731da46/src/key.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.cpp?ref=08b12b836c0bf377fb90b21874ae058d9731da46",
        "patch": "@@ -5,6 +5,7 @@\n #include <map>\n \n #include <openssl/ecdsa.h>\n+#include <openssl/evp.h>\n #include <openssl/obj_mac.h>\n \n #include \"key.h\"\n@@ -164,8 +165,6 @@ const unsigned char vchMaxModHalfOrder[32] = {\n \n const unsigned char *vchZero = NULL;\n \n-\n-\n void CKey::SetCompressedPubKey()\n {\n     EC_KEY_set_conv_form(pkey, POINT_CONVERSION_COMPRESSED);\n@@ -174,13 +173,12 @@ void CKey::SetCompressedPubKey()\n \n void CKey::Reset()\n {\n-    fCompressedPubKey = false;\n+    fCompressedPubKey = fSet = false;\n     if (pkey != NULL)\n         EC_KEY_free(pkey);\n     pkey = EC_KEY_new_by_curve_name(NID_secp256k1);\n     if (pkey == NULL)\n         throw key_error(\"CKey::CKey() : EC_KEY_new_by_curve_name failed\");\n-    fSet = false;\n }\n \n CKey::CKey()\n@@ -217,7 +215,8 @@ CKey& CKey::operator=(const CKey& b)\n \n CKey::~CKey()\n {\n-    EC_KEY_free(pkey);\n+    if (pkey != NULL)\n+        EC_KEY_free(pkey);\n }\n \n bool CKey::IsNull() const\n@@ -235,7 +234,7 @@ bool CKey::CheckSignatureElement(const unsigned char *vch, int len, bool half) {\n         CompareBigEndian(vch, len, half ? vchMaxModHalfOrder : vchMaxModOrder, 32) <= 0;\n }\n \n-bool CKey::ReserealizeSignature(std::vector<unsigned char>& vchSig)\n+bool CPubKey::ReserealizeSignature(std::vector<unsigned char>& vchSig)\n {\n     if (vchSig.empty())\n         return false;\n@@ -299,6 +298,7 @@ bool CKey::SetSecret(const CSecret& vchSecret, bool fCompressed)\n     pkey = EC_KEY_new_by_curve_name(NID_secp256k1);\n     if (pkey == NULL)\n         throw key_error(\"CKey::SetSecret() : EC_KEY_new_by_curve_name failed\");\n+\n     if (vchSecret.size() != 32)\n         throw key_error(\"CKey::SetSecret() : secret must be 32 bytes\");\n     BIGNUM *bn = BN_bin2bn(&vchSecret[0],32,BN_new());\n@@ -331,6 +331,37 @@ CSecret CKey::GetSecret(bool &fCompressed) const\n     return vchRet;\n }\n \n+bool CKey::WritePEM(BIO *streamObj, const SecureString &strPassKey) const // dumppem 4KJLA99FyqMMhjjDe7KnRXK4sjtv9cCtNS /tmp/test.pem 123\n+{\n+    EVP_PKEY *evpKey = EVP_PKEY_new();\n+    bool result = true;\n+\n+    do\n+    {\n+        if (!EVP_PKEY_assign_EC_KEY(evpKey, pkey))\n+        {\n+            result = error(\"CKey::WritePEM() : Error initializing EVP_PKEY instance.\");\n+            break;\n+        }\n+\n+        if(!PEM_write_bio_PKCS8PrivateKey(streamObj, evpKey, EVP_aes_256_cbc(), (char *)&strPassKey[0], strPassKey.size(), NULL, NULL))\n+        {\n+            result = error(\"CKey::WritePEM() : Error writing private key data to stream object\");\n+            break;\n+        }\n+\n+        if(!PEM_write_bio_PUBKEY(streamObj, evpKey))\n+        {\n+            result = error(\"CKey::WritePEM() : Error writing public key data to stream object\");\n+            break;\n+        }\n+    }\n+    while(false);\n+\n+    EVP_PKEY_free(evpKey);\n+    return result;\n+}\n+\n CSecret CKey::GetSecret() const\n {\n     bool fCompressed;\n@@ -349,21 +380,6 @@ CPrivKey CKey::GetPrivKey() const\n     return vchPrivKey;\n }\n \n-bool CKey::SetPubKey(const CPubKey& vchPubKey)\n-{\n-    const unsigned char* pbegin = &vchPubKey.vchPubKey[0];\n-    if (o2i_ECPublicKey(&pkey, &pbegin, vchPubKey.vchPubKey.size()))\n-    {\n-        fSet = true;\n-        if (vchPubKey.vchPubKey.size() == 33)\n-            SetCompressedPubKey();\n-        return true;\n-    }\n-    pkey = NULL;\n-    Reset();\n-    return false;\n-}\n-\n CPubKey CKey::GetPubKey() const\n {\n     int nSize = i2o_ECPublicKey(pkey, NULL);\n@@ -462,7 +478,7 @@ bool CKey::SignCompact(uint256 hash, std::vector<unsigned char>& vchSig)\n // This is only slightly more CPU intensive than just verifying it.\n // If this function succeeds, the recovered public key is guaranteed to be valid\n // (the signature is a valid signature of the given data for that key)\n-bool CKey::SetCompactSignature(uint256 hash, const std::vector<unsigned char>& vchSig)\n+bool CPubKey::SetCompactSignature(uint256 hash, const std::vector<unsigned char>& vchSig)\n {\n     if (vchSig.size() != 65)\n         return false;\n@@ -473,28 +489,46 @@ bool CKey::SetCompactSignature(uint256 hash, const std::vector<unsigned char>& v\n     BN_bin2bn(&vchSig[1],32,sig->r);\n     BN_bin2bn(&vchSig[33],32,sig->s);\n \n-    EC_KEY_free(pkey);\n-    pkey = EC_KEY_new_by_curve_name(NID_secp256k1);\n+    EC_KEY* pkey = EC_KEY_new_by_curve_name(NID_secp256k1);\n     if (nV >= 31)\n     {\n-        SetCompressedPubKey();\n         nV -= 4;\n+        EC_KEY_set_conv_form(pkey, POINT_CONVERSION_COMPRESSED);\n     }\n-    if (ECDSA_SIG_recover_key_GFp(pkey, sig, (unsigned char*)&hash, sizeof(hash), nV - 27, 0) == 1)\n+\n+    do\n     {\n-        fSet = true;\n+        if (ECDSA_SIG_recover_key_GFp(pkey, sig, (unsigned char*)&hash, sizeof(hash), nV - 27, 0) != 1)\n+            break;\n         ECDSA_SIG_free(sig);\n-        return true;\n-    }\n+\n+        int nSize = i2o_ECPublicKey(pkey, NULL);\n+        if (!nSize)\n+            break;\n+        std::vector<unsigned char> vchPubKey(nSize, 0);\n+        unsigned char* pbegin = &vchPubKey[0];\n+        if (i2o_ECPublicKey(pkey, &pbegin) != nSize)\n+            break;\n+        Set(vchPubKey.begin(), vchPubKey.end());\n+        return IsValid();\n+\n+    } while (false);\n+\n     ECDSA_SIG_free(sig);\n+    Invalidate();\n     return false;\n }\n \n-bool CKey::Verify(uint256 hash, const std::vector<unsigned char>& vchSig)\n+bool CPubKey::Verify(const uint256 &hash, const std::vector<unsigned char>& vchSig) const\n {\n-    if (vchSig.empty())\n+    if (vchSig.empty() || !IsValid())\n         return false;\n \n+    const unsigned char* pbegin = &vbytes[0];\n+    EC_KEY *pkey = EC_KEY_new_by_curve_name(NID_secp256k1);\n+    if (!o2i_ECPublicKey(&pkey, &pbegin, size()))\n+        return false; // Unable to parse public key\n+\n     // New versions of OpenSSL will reject non-canonical DER signatures. de/re-serialize first.\n     unsigned char *norm_der = NULL;\n     ECDSA_SIG *norm_sig = ECDSA_SIG_new();\n@@ -522,14 +556,13 @@ bool CKey::Verify(uint256 hash, const std::vector<unsigned char>& vchSig)\n     return ret;\n }\n \n-bool CKey::VerifyCompact(uint256 hash, const std::vector<unsigned char>& vchSig)\n+bool CPubKey::VerifyCompact(uint256 hash, const std::vector<unsigned char>& vchSig)\n {\n-    CKey key;\n+    CPubKey key;\n     if (!key.SetCompactSignature(hash, vchSig))\n         return false;\n-    if (GetPubKey() != key.GetPubKey())\n+    if ((*this) != key)\n         return false;\n-\n     return true;\n }\n \n@@ -545,6 +578,7 @@ bool CKey::IsValid()\n     CSecret secret = GetSecret(fCompr);\n     CKey key2;\n     key2.SetSecret(secret, fCompr);\n+\n     return GetPubKey() == key2.GetPubKey();\n }\n \n@@ -604,9 +638,10 @@ bool CPoint::setBytes(const std::vector<unsigned char> &vchBytes)\n }\n \n // Initialize from octets stream\n-bool CPoint::setPubKey(const CPubKey &vchPubKey)\n+bool CPoint::setPubKey(const CPubKey &key)\n {\n-    return setBytes(vchPubKey.Raw());\n+    std::vector<uint8_t> vchPubKey(key.begin(), key.end());\n+    return setBytes(vchPubKey);\n }\n \n // Serialize to octets stream\n@@ -824,7 +859,7 @@ bool CMalleableKey::SetSecrets(const CSecret &pvchSecretL, const CSecret &pvchSe\n CMalleablePubKey CMalleableKey::GetMalleablePubKey() const\n {\n     CKey L(vchSecretL), H(vchSecretH);\n-    return CMalleablePubKey(L.GetPubKey().Raw(), H.GetPubKey().Raw());\n+    return CMalleablePubKey(L.GetPubKey(), H.GetPubKey());\n }\n \n // Check ownership\n@@ -851,7 +886,7 @@ bool CMalleableKey::CheckKeyVariant(const CPubKey &R, const CPubKey &vchPubKeyVa\n     }\n \n     CKey H(vchSecretH);\n-    std::vector<unsigned char> vchPubKeyH = H.GetPubKey().Raw();\n+    CPubKey vchPubKeyH = H.GetPubKey();\n \n     CPoint point_H;\n     if (!point_H.setPubKey(vchPubKeyH)) {\n@@ -928,7 +963,7 @@ bool CMalleableKey::CheckKeyVariant(const CPubKey &R, const CPubKey &vchPubKeyVa\n     }\n \n     CKey H(vchSecretH);\n-    std::vector<unsigned char> vchPubKeyH = H.GetPubKey().Raw();\n+    CPubKey vchPubKeyH = H.GetPubKey();\n \n     CPoint point_H;\n     if (!point_H.setPubKey(vchPubKeyH)) {\n@@ -1040,7 +1075,7 @@ CMalleableKeyView::CMalleableKeyView(const CMalleableKey &b)\n     vchSecretL = b.vchSecretL;\n \n     CKey H(b.vchSecretH);\n-    vchPubKeyH = H.GetPubKey().Raw();\n+    vchPubKeyH = H.GetPubKey();\n }\n \n CMalleableKeyView::CMalleableKeyView(const CMalleableKeyView &b)\n@@ -1054,7 +1089,7 @@ CMalleableKeyView& CMalleableKeyView::operator=(const CMalleableKey &b)\n     vchSecretL = b.vchSecretL;\n \n     CKey H(b.vchSecretH);\n-    vchPubKeyH = H.GetPubKey().Raw();\n+    vchPubKeyH = H.GetPubKey();\n \n     return (*this);\n }\n@@ -1183,19 +1218,16 @@ bool CMalleableKeyView::IsValid() const\n //// Asymmetric encryption\n \n void CPubKey::EncryptData(const std::vector<unsigned char>& data, std::vector<unsigned char>& encrypted)\n-{\n-    CKey key;\n-    key.SetPubKey(*this);\n-\n-    key.EncryptData(data, encrypted);\n-}\n-\n-void CKey::EncryptData(const std::vector<unsigned char>& data, std::vector<unsigned char>& encrypted)\n {\n     ies_ctx_t *ctx;\n     char error[1024] = \"Unknown error\";\n     cryptogram_t *cryptogram;\n \n+    const unsigned char* pbegin = &vbytes[0];\n+    EC_KEY *pkey = EC_KEY_new_by_curve_name(NID_secp256k1);\n+    if (!o2i_ECPublicKey(&pkey, &pbegin, size()))\n+        throw key_error(\"Unable to parse EC key\");\n+\n     ctx = create_context(pkey);\n     if (!EC_KEY_get0_public_key(ctx->user_key))\n         throw key_error(\"Given EC key is not public key\");"
      },
      {
        "sha": "2489dfc41ff2a11f703c733a7c6ce7a4ebb36e95",
        "filename": "src/key.h",
        "status": "modified",
        "additions": 133,
        "deletions": 44,
        "changes": 177,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/08b12b836c0bf377fb90b21874ae058d9731da46/src/key.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/08b12b836c0bf377fb90b21874ae058d9731da46/src/key.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.h?ref=08b12b836c0bf377fb90b21874ae058d9731da46",
        "patch": "@@ -62,64 +62,169 @@ class CScriptID : public uint160\n     CScriptID(const uint160 &in) : uint160(in) { }\n };\n \n-/** An encapsulated public key. */\n-class CPubKey {\n+/** An encapsulated OpenSSL Elliptic Curve key (public) */\n+class CPubKey\n+{\n private:\n-    std::vector<unsigned char> vchPubKey;\n-    friend class CKey;\n+\n+    /**\n+     * Just store the serialized data.\n+     * Its length can very cheaply be computed from the first byte.\n+     */\n+    unsigned char vbytes[65];\n+\n+    //! Compute the length of a pubkey with a given first byte.\n+    unsigned int static GetLen(unsigned char chHeader)\n+    {\n+        if (chHeader == 2 || chHeader == 3)\n+            return 33;\n+        if (chHeader == 4 || chHeader == 6 || chHeader == 7)\n+            return 65;\n+        return 0;\n+    }\n+\n+    // Set this key data to be invalid\n+    void Invalidate()\n+    {\n+        vbytes[0] = 0xFF;\n+    }\n \n public:\n-    CPubKey() { }\n-    CPubKey(const std::vector<unsigned char> &vchPubKeyIn) : vchPubKey(vchPubKeyIn) { }\n-    friend bool operator==(const CPubKey &a, const CPubKey &b) { return a.vchPubKey == b.vchPubKey; }\n-    friend bool operator!=(const CPubKey &a, const CPubKey &b) { return a.vchPubKey != b.vchPubKey; }\n-    friend bool operator<(const CPubKey &a, const CPubKey &b) { return a.vchPubKey < b.vchPubKey; }\n+    // Construct an invalid public key.\n+    CPubKey()\n+    {\n+        Invalidate();\n+    }\n \n-    IMPLEMENT_SERIALIZE(\n-        READWRITE(vchPubKey);\n-    )\n+    // Initialize a public key using begin/end iterators to byte data.\n+    template <typename T>\n+    void Set(const T pbegin, const T pend)\n+    {\n+        int len = pend == pbegin ? 0 : GetLen(pbegin[0]);\n+        if (len && len == (pend - pbegin))\n+            memcpy(vbytes, (unsigned char*)&pbegin[0], len);\n+        else\n+            Invalidate();\n+    }\n \n-    CKeyID GetID() const {\n-        return CKeyID(Hash160(vchPubKey));\n+    void Set(const std::vector<unsigned char>& vch)\n+    {\n+        Set(vch.begin(), vch.end());\n     }\n \n-    uint256 GetHash() const {\n-        return Hash(vchPubKey.begin(), vchPubKey.end());\n+    template <typename T>\n+    CPubKey(const T pbegin, const T pend)\n+    {\n+        Set(pbegin, pend);\n     }\n \n-    bool IsValid() const {\n-        return vchPubKey.size() == 33 || vchPubKey.size() == 65;\n+    CPubKey(const std::vector<unsigned char>& vch)\n+    {\n+        Set(vch.begin(), vch.end());\n     }\n \n-    bool IsCompressed() const {\n-        return vchPubKey.size() == 33;\n+    // Read-only vector-like interface to the data.\n+    unsigned int size() const { return GetLen(vbytes[0]); }\n+    const unsigned char* begin() const { return vbytes; }\n+    const unsigned char* end() const { return vbytes + size(); }\n+    const unsigned char& operator[](unsigned int pos) const { return vbytes[pos]; }\n+\n+    friend bool operator==(const CPubKey& a, const CPubKey& b) { return a.vbytes[0] == b.vbytes[0] && memcmp(a.vbytes, b.vbytes, a.size()) == 0; }\n+    friend bool operator!=(const CPubKey& a, const CPubKey& b) { return !(a == b); }\n+    friend bool operator<(const CPubKey& a, const CPubKey& b)  { return a.vbytes[0] < b.vbytes[0] || (a.vbytes[0] == b.vbytes[0] && memcmp(a.vbytes, b.vbytes, a.size()) < 0); }\n+\n+    //! Implement serialization, as if this was a byte vector.\n+    unsigned int GetSerializeSize(int nType, int nVersion) const\n+    {\n+        return size() + 1;\n+    }\n+    template <typename Stream>\n+    void Serialize(Stream& s, int nType, int nVersion) const\n+    {\n+        unsigned int len = size();\n+        ::WriteCompactSize(s, len);\n+        s.write((char*)vbytes, len);\n+    }\n+    template <typename Stream>\n+    void Unserialize(Stream& s, int nType, int nVersion)\n+    {\n+        unsigned int len = ::ReadCompactSize(s);\n+        if (len <= 65) {\n+            s.read((char*)vbytes, len);\n+        } else {\n+            // invalid pubkey, skip available data\n+            char dummy;\n+            while (len--)\n+                s.read(&dummy, 1);\n+            Invalidate();\n+        }\n     }\n \n-    std::vector<unsigned char> Raw() const {\n-        return vchPubKey;\n+    CKeyID GetID() const\n+    {\n+        return CKeyID(Hash160(vbytes, vbytes + size()));\n     }\n \n+    uint256 GetHash() const\n+    {\n+        return Hash(vbytes, vbytes + size());\n+    }\n+\n+    /*\n+     * Check syntactic correctness.\n+     *\n+     * Note that this is consensus critical as CheckSig() calls it!\n+     */\n+    bool IsValid() const\n+    {\n+        return size() > 0;\n+    }\n+\n+    //! fully validate whether this is a valid public key (more expensive than IsValid())\n+    bool IsFullyValid() const\n+    {\n+        const unsigned char* pbegin = &vbytes[0];\n+        EC_KEY *pkey = EC_KEY_new_by_curve_name(NID_secp256k1);\n+        if (o2i_ECPublicKey(&pkey, &pbegin, size()))\n+        {\n+            EC_KEY_free(pkey);\n+            return true;\n+        }\n+        return false;\n+    }\n+\n+    //! Check whether this is a compressed public key.\n+    bool IsCompressed() const\n+    {\n+        return size() == 33;\n+    }\n+\n+    bool Verify(const uint256& hash, const std::vector<unsigned char>& vchSig) const;\n+    bool VerifyCompact(uint256 hash, const std::vector<unsigned char>& vchSig);\n+\n+    bool SetCompactSignature(uint256 hash, const std::vector<unsigned char>& vchSig);\n+\n+    // Reserialize to DER\n+    static bool ReserealizeSignature(std::vector<unsigned char>& vchSig);\n+\n     // Encrypt data\n     void EncryptData(const std::vector<unsigned char>& data, std::vector<unsigned char>& encrypted);\n };\n \n-\n // secure_allocator is defined in allocators.h\n // CPrivKey is a serialized private key, with all parameters included (279 bytes)\n typedef std::vector<unsigned char, secure_allocator<unsigned char> > CPrivKey;\n // CSecret is a serialization of just the secret parameter (32 bytes)\n typedef std::vector<unsigned char, secure_allocator<unsigned char> > CSecret;\n \n-/** An encapsulated OpenSSL Elliptic Curve key (public and/or private) */\n+/** An encapsulated OpenSSL Elliptic Curve key (private) */\n class CKey\n {\n protected:\n     EC_KEY* pkey;\n     bool fSet;\n     bool fCompressedPubKey;\n \n-    void SetCompressedPubKey();\n-\n public:\n \n     void Reset();\n@@ -135,14 +240,15 @@ class CKey\n     bool IsNull() const;\n     bool IsCompressed() const;\n \n+    void SetCompressedPubKey();\n     void MakeNewKey(bool fCompressed=true);\n     bool SetPrivKey(const CPrivKey& vchPrivKey);\n     bool SetSecret(const CSecret& vchSecret, bool fCompressed = true);\n     CSecret GetSecret(bool &fCompressed) const;\n     CSecret GetSecret() const;\n     CPrivKey GetPrivKey() const;\n-    bool SetPubKey(const CPubKey& vchPubKey);\n     CPubKey GetPubKey() const;\n+    bool WritePEM(BIO *streamObj, const SecureString &strPassKey) const;\n \n     bool Sign(uint256 hash, std::vector<unsigned char>& vchSig);\n \n@@ -152,28 +258,11 @@ class CKey\n     //                  0x1D = second key with even y, 0x1E = second key with odd y\n     bool SignCompact(uint256 hash, std::vector<unsigned char>& vchSig);\n \n-    // reconstruct public key from a compact signature\n-    // This is only slightly more CPU intensive than just verifying it.\n-    // If this function succeeds, the recovered public key is guaranteed to be valid\n-    // (the signature is a valid signature of the given data for that key)\n-    bool SetCompactSignature(uint256 hash, const std::vector<unsigned char>& vchSig);\n-\n-    bool Verify(uint256 hash, const std::vector<unsigned char>& vchSig);\n-\n-    // Verify a compact signature\n-    bool VerifyCompact(uint256 hash, const std::vector<unsigned char>& vchSig);\n-\n     bool IsValid();\n \n     // Check whether an element of a signature (r or s) is valid.\n     static bool CheckSignatureElement(const unsigned char *vch, int len, bool half);\n \n-    // Reserialize to DER\n-    static bool ReserealizeSignature(std::vector<unsigned char>& vchSig);\n-\n-    // Encrypt data\n-    void EncryptData(const std::vector<unsigned char>& data, std::vector<unsigned char>& encrypted);\n-\n     // Decrypt data\n     void DecryptData(const std::vector<unsigned char>& encrypted, std::vector<unsigned char>& data);\n };"
      },
      {
        "sha": "33b8eb18cea77c71d56277465a02c41841772960",
        "filename": "src/keystore.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 3,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/08b12b836c0bf377fb90b21874ae058d9731da46/src/keystore.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/08b12b836c0bf377fb90b21874ae058d9731da46/src/keystore.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/keystore.cpp?ref=08b12b836c0bf377fb90b21874ae058d9731da46",
        "patch": "@@ -157,8 +157,9 @@ bool CCryptoKeyStore::Unlock(const CKeyingMaterial& vMasterKeyIn)\n             if (vchSecret.size() != 32)\n                 return false;\n             CKey key;\n-            key.SetPubKey(vchPubKey);\n             key.SetSecret(vchSecret);\n+            if (vchPubKey.size() == 33)\n+                key.SetCompressedPubKey();\n             if (key.GetPubKey() == vchPubKey)\n                 break;\n             return false;\n@@ -316,8 +317,9 @@ bool CCryptoKeyStore::GetKey(const CKeyID &address, CKey& keyOut) const\n                 return false;\n             if (vchSecret.size() != 32)\n                 return false;\n-            keyOut.SetPubKey(vchPubKey);\n             keyOut.SetSecret(vchSecret);\n+            if (vchPubKey.size() == 33)\n+                keyOut.SetCompressedPubKey();\n             return true;\n         }\n     }\n@@ -396,8 +398,9 @@ bool CCryptoKeyStore::DecryptKeys(const CKeyingMaterial& vMasterKeyIn)\n             if (vchSecret.size() != 32)\n                 return false;\n             CKey key;\n-            key.SetPubKey(vchPubKey);\n             key.SetSecret(vchSecret);\n+            if (vchPubKey.size() == 33)\n+                key.SetCompressedPubKey();\n             if (!CBasicKeyStore::AddKey(key))\n                 return false;\n         }"
      },
      {
        "sha": "36149ba66bb2d8305e59b104d6bffcf5bf5a7649",
        "filename": "src/keystore.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/08b12b836c0bf377fb90b21874ae058d9731da46/src/keystore.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/08b12b836c0bf377fb90b21874ae058d9731da46/src/keystore.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/keystore.h?ref=08b12b836c0bf377fb90b21874ae058d9731da46",
        "patch": "@@ -132,7 +132,6 @@ class CBasicKeyStore : public CKeyStore\n             KeyMap::const_iterator mi = mapKeys.find(address);\n             if (mi != mapKeys.end())\n             {\n-                keyOut.Reset();\n                 keyOut.SetSecret((*mi).second.first, (*mi).second.second);\n                 return true;\n             }"
      },
      {
        "sha": "65001a3c2b6ad0efb766ab0dc3457ba689dd2b07",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/08b12b836c0bf377fb90b21874ae058d9731da46/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/08b12b836c0bf377fb90b21874ae058d9731da46/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=08b12b836c0bf377fb90b21874ae058d9731da46",
        "patch": "@@ -2508,7 +2508,7 @@ bool static ReserealizeBlockSignature(CBlock* pblock)\n         return true;\n     }\n \n-    return CKey::ReserealizeSignature(pblock->vchBlockSig);\n+    return CPubKey::ReserealizeSignature(pblock->vchBlockSig);\n }\n \n bool static IsCanonicalBlockSignature(CBlock* pblock)\n@@ -2667,8 +2667,8 @@ bool CBlock::CheckBlockSignature() const\n     if (whichType == TX_PUBKEY)\n     {\n         valtype& vchPubKey = vSolutions[0];\n-        CKey key;\n-        if (!key.SetPubKey(vchPubKey))\n+        CPubKey key(vchPubKey);\n+        if (!key.IsValid())\n             return false;\n         return key.Verify(GetHash(), vchBlockSig);\n     }"
      },
      {
        "sha": "4b07e11d2fa2267ce502745363799e10556635b5",
        "filename": "src/qt/multisigaddressentry.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/08b12b836c0bf377fb90b21874ae058d9731da46/src/qt/multisigaddressentry.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/08b12b836c0bf377fb90b21874ae058d9731da46/src/qt/multisigaddressentry.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/multisigaddressentry.cpp?ref=08b12b836c0bf377fb90b21874ae058d9731da46",
        "patch": "@@ -108,7 +108,7 @@ void MultisigAddressEntry::on_address_textChanged(const QString &address)\n     {\n         CPubKey vchPubKey;\n         model->getPubKey(keyID, vchPubKey);\n-        std::string pubkey = HexStr(vchPubKey.Raw());\n+        std::string pubkey = HexStr(vchPubKey.begin(), vchPubKey.end());\n         if(!pubkey.empty())\n             ui->pubkey->setText(pubkey.c_str());\n     }"
      },
      {
        "sha": "97e49cff3adf5d8772c47a5a89ab6527121374e5",
        "filename": "src/qt/multisigdialog.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/08b12b836c0bf377fb90b21874ae058d9731da46/src/qt/multisigdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/08b12b836c0bf377fb90b21874ae058d9731da46/src/qt/multisigdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/multisigdialog.cpp?ref=08b12b836c0bf377fb90b21874ae058d9731da46",
        "patch": "@@ -149,7 +149,7 @@ void MultisigDialog::on_createAddressButton_clicked()\n     if(!model)\n         return;\n \n-    std::vector<CKey> pubkeys;\n+    std::vector<CPubKey> pubkeys;\n     pubkeys.resize(ui->pubkeyEntries->count());\n     unsigned int required = ui->requiredSignatures->text().toUInt();\n \n@@ -162,7 +162,7 @@ void MultisigDialog::on_createAddressButton_clicked()\n         CPubKey vchPubKey(ParseHex(str.toStdString().c_str()));\n         if(!vchPubKey.IsValid())\n             return;\n-        pubkeys[i].SetPubKey(vchPubKey);\n+        pubkeys[i] = vchPubKey;\n     }\n \n     if(pubkeys.size() > 16)"
      },
      {
        "sha": "0782a467b9c52e961e0f34597437aec7c81ee558",
        "filename": "src/qt/signverifymessagedialog.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/08b12b836c0bf377fb90b21874ae058d9731da46/src/qt/signverifymessagedialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/08b12b836c0bf377fb90b21874ae058d9731da46/src/qt/signverifymessagedialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/signverifymessagedialog.cpp?ref=08b12b836c0bf377fb90b21874ae058d9731da46",
        "patch": "@@ -220,7 +220,7 @@ void SignVerifyMessageDialog::on_verifyMessageButton_VM_clicked()\n     ss << strMessageMagic;\n     ss << ui->messageIn_VM->document()->toPlainText().toStdString();\n \n-    CKey key;\n+    CPubKey key;\n     if (!key.SetCompactSignature(Hash(ss.begin(), ss.end()), vchSig))\n     {\n         ui->signatureIn_VM->setValid(false);\n@@ -229,7 +229,7 @@ void SignVerifyMessageDialog::on_verifyMessageButton_VM_clicked()\n         return;\n     }\n \n-    if (!(CBitcoinAddress(key.GetPubKey().GetID()) == addr))\n+    if (!(CBitcoinAddress(key.GetID()) == addr))\n     {\n         ui->statusLabel_VM->setStyleSheet(\"QLabel { color: red; }\");\n         ui->statusLabel_VM->setText(QString(\"<nobr>\") + tr(\"Message verification failed.\") + QString(\"</nobr>\"));"
      },
      {
        "sha": "bb877bf1efa8ceaea01a77bba7bdde54965a6ac0",
        "filename": "src/rpcdump.cpp",
        "status": "modified",
        "additions": 30,
        "deletions": 1,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/08b12b836c0bf377fb90b21874ae058d9731da46/src/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/08b12b836c0bf377fb90b21874ae058d9731da46/src/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcdump.cpp?ref=08b12b836c0bf377fb90b21874ae058d9731da46",
        "patch": "@@ -217,7 +217,7 @@ Value dumpprivkey(const Array& params, bool fHelp)\n     CBitcoinAddress address;\n     if (!address.SetString(strAddress))\n         throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid NovaCoin address\");\n-    if (fWalletUnlockMintOnly) // ppcoin: no dumpprivkey in mint-only mode\n+    if (fWalletUnlockMintOnly)\n         throw JSONRPCError(RPC_WALLET_UNLOCK_NEEDED, \"Wallet is unlocked for minting only.\");\n     CKeyID keyID;\n     if (!address.GetKeyID(keyID))\n@@ -229,6 +229,35 @@ Value dumpprivkey(const Array& params, bool fHelp)\n     return CBitcoinSecret(vchSecret, fCompressed).ToString();\n }\n \n+Value dumppem(const Array& params, bool fHelp)\n+{\n+    if (fHelp || params.size() != 3)\n+        throw runtime_error(\n+            \"dumppem <novacoinaddress> <filename> <passphrase>\\n\"\n+            \"Dump the key pair corresponding to <novacoinaddress> and store it as encrypted PEM file.\"\n+            + HelpRequiringPassphrase());\n+\n+    EnsureWalletIsUnlocked();\n+\n+    string strAddress = params[0].get_str();\n+    SecureString strPassKey;\n+    strPassKey.reserve(100);\n+    strPassKey = params[2].get_str().c_str();\n+\n+    CBitcoinAddress address;\n+    if (!address.SetString(strAddress))\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid NovaCoin address\");\n+    if (fWalletUnlockMintOnly)\n+        throw JSONRPCError(RPC_WALLET_UNLOCK_NEEDED, \"Wallet is unlocked for minting only.\");\n+    CKeyID keyID;\n+    if (!address.GetKeyID(keyID))\n+        throw JSONRPCError(RPC_TYPE_ERROR, \"Address does not refer to a key\");\n+    if (!pwalletMain->GetPEM(keyID, params[1].get_str(), strPassKey))\n+        throw JSONRPCError(RPC_WALLET_ERROR, \"Error dumping key pair to file\");\n+\n+    return Value::null;\n+}\n+\n Value dumpwallet(const Array& params, bool fHelp)\n {\n     if (fHelp || params.size() != 1)"
      },
      {
        "sha": "b8365c633d525493dfdefc763bd883f408aab5ab",
        "filename": "src/rpcrawtransaction.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 3,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/08b12b836c0bf377fb90b21874ae058d9731da46/src/rpcrawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/08b12b836c0bf377fb90b21874ae058d9731da46/src/rpcrawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcrawtransaction.cpp?ref=08b12b836c0bf377fb90b21874ae058d9731da46",
        "patch": "@@ -652,7 +652,7 @@ Value createmultisig(const Array& params, bool fHelp)\n                       \"(got %\" PRIszu \" keys, but need at least %d to redeem)\", keys.size(), nRequired));\n     if (keys.size() > 16)\n         throw runtime_error(\"Number of addresses involved in the multisignature address creation > 16\\nReduce the number\");\n-    std::vector<CKey> pubkeys;\n+    std::vector<CPubKey> pubkeys;\n     pubkeys.resize(keys.size());\n     for (unsigned int i = 0; i < keys.size(); i++)\n     {\n@@ -670,16 +670,18 @@ Value createmultisig(const Array& params, bool fHelp)\n             if (!pwalletMain->GetPubKey(keyID, vchPubKey))\n                 throw runtime_error(\n                     strprintf(\"no full public key for address %s\",ks.c_str()));\n-            if (!vchPubKey.IsValid() || !pubkeys[i].SetPubKey(vchPubKey))\n+            if (!vchPubKey.IsFullyValid())\n                 throw runtime_error(\" Invalid public key: \"+ks);\n+            pubkeys[i] = vchPubKey;\n         }\n \n         // Case 2: hex public key\n         else if (IsHex(ks))\n         {\n             CPubKey vchPubKey(ParseHex(ks));\n-            if (!vchPubKey.IsValid() || !pubkeys[i].SetPubKey(vchPubKey))\n+            if (!vchPubKey.IsFullyValid())\n                 throw runtime_error(\" Invalid public key: \"+ks);\n+            pubkeys[i] = vchPubKey;\n         }\n         else\n         {"
      },
      {
        "sha": "09bacfc789cba725d48530396d9a77b939ecfbbd",
        "filename": "src/rpcwallet.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 9,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/08b12b836c0bf377fb90b21874ae058d9731da46/src/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/08b12b836c0bf377fb90b21874ae058d9731da46/src/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.cpp?ref=08b12b836c0bf377fb90b21874ae058d9731da46",
        "patch": "@@ -451,11 +451,11 @@ Value verifymessage(const Array& params, bool fHelp)\n     ss << strMessageMagic;\n     ss << strMessage;\n \n-    CKey key;\n+    CPubKey key;\n     if (!key.SetCompactSignature(Hash(ss.begin(), ss.end()), vchSig))\n         return false;\n \n-    return (key.GetPubKey().GetID() == keyID);\n+    return (key.GetID() == keyID);\n }\n \n \n@@ -843,7 +843,7 @@ Value addmultisigaddress(const Array& params, bool fHelp)\n                       \"(got %\" PRIszu \" keys, but need at least %d to redeem)\", keys.size(), nRequired));\n     if (keys.size() > 16)\n         throw runtime_error(\"Number of addresses involved in the multisignature address creation > 16\\nReduce the number\");\n-    std::vector<CKey> pubkeys;\n+    std::vector<CPubKey> pubkeys;\n     pubkeys.resize(keys.size());\n     for (unsigned int i = 0; i < keys.size(); i++)\n     {\n@@ -861,16 +861,18 @@ Value addmultisigaddress(const Array& params, bool fHelp)\n             if (!pwalletMain->GetPubKey(keyID, vchPubKey))\n                 throw runtime_error(\n                     strprintf(\"no full public key for address %s\",ks.c_str()));\n-            if (!vchPubKey.IsValid() || !pubkeys[i].SetPubKey(vchPubKey))\n+            if (!vchPubKey.IsValid())\n                 throw runtime_error(\" Invalid public key: \"+ks);\n+            pubkeys[i] = vchPubKey;\n         }\n \n         // Case 2: hex public key\n         else if (IsHex(ks))\n         {\n             CPubKey vchPubKey(ParseHex(ks));\n-            if (!vchPubKey.IsValid() || !pubkeys[i].SetPubKey(vchPubKey))\n+            if (!vchPubKey.IsValid())\n                 throw runtime_error(\" Invalid public key: \"+ks);\n+             pubkeys[i] = vchPubKey;\n         }\n         else\n         {\n@@ -1690,7 +1692,7 @@ class DescribeAddressVisitor : public boost::static_visitor<Object>\n         obj.push_back(Pair(\"isscript\", false));\n         if (mine == MINE_SPENDABLE) {\n             pwalletMain->GetPubKey(keyID, vchPubKey);\n-            obj.push_back(Pair(\"pubkey\", HexStr(vchPubKey.Raw())));\n+            obj.push_back(Pair(\"pubkey\", HexStr(vchPubKey.begin(), vchPubKey.end())));\n             obj.push_back(Pair(\"iscompressed\", vchPubKey.IsCompressed()));\n         }\n         return obj;\n@@ -1886,8 +1888,9 @@ Value makekeypair(const Array& params, bool fHelp)\n \n     bool fCompressed;\n     CSecret vchSecret = key.GetSecret(fCompressed);\n+    CPubKey vchPubKey = key.GetPubKey();\n     result.push_back(Pair(\"Secret\", HexStr<CSecret::iterator>(vchSecret.begin(), vchSecret.end())));\n-    result.push_back(Pair(\"PublicKey\", HexStr(key.GetPubKey().Raw())));\n+    result.push_back(Pair(\"PublicKey\", HexStr(vchPubKey.begin(), vchPubKey.end())));\n     return result;\n }\n \n@@ -1970,8 +1973,8 @@ Value adjustmalleablepubkey(const Array& params, bool fHelp)\n     malleablePubKey.GetVariant(R, vchPubKeyVariant);\n \n     Object result;\n-    result.push_back(Pair(\"R\", HexStr(R.Raw())));\n-    result.push_back(Pair(\"PubkeyVariant\", HexStr(vchPubKeyVariant.Raw())));\n+    result.push_back(Pair(\"R\", HexStr(R.begin(), R.end())));\n+    result.push_back(Pair(\"PubkeyVariant\", HexStr(vchPubKeyVariant.begin(), vchPubKeyVariant.end())));\n     result.push_back(Pair(\"KeyVariantID\", CBitcoinAddress(vchPubKeyVariant.GetID()).ToString()));\n \n     return result;"
      },
      {
        "sha": "ad31b76feedac081b3a8378018b4be950a797783",
        "filename": "src/script.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 14,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/08b12b836c0bf377fb90b21874ae058d9731da46/src/script.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/08b12b836c0bf377fb90b21874ae058d9731da46/src/script.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script.cpp?ref=08b12b836c0bf377fb90b21874ae058d9731da46",
        "patch": "@@ -1284,10 +1284,7 @@ bool CheckSig(vector<unsigned char> vchSig, const vector<unsigned char> &vchPubK\n {\n     static CSignatureCache signatureCache;\n \n-    CKey key;\n-    if (!key.SetPubKey(vchPubKey))\n-         return false;\n-    CPubKey pubkey = key.GetPubKey();\n+    CPubKey pubkey(vchPubKey);\n     if (!pubkey.IsValid())\n         return false;\n \n@@ -1305,7 +1302,7 @@ bool CheckSig(vector<unsigned char> vchSig, const vector<unsigned char> &vchPubK\n     if (signatureCache.Get(sighash, vchSig, pubkey))\n         return true;\n \n-    if (!key.Verify(sighash, vchSig))\n+    if (!pubkey.Verify(sighash, vchSig))\n         return false;\n \n     if (!(flags & SCRIPT_VERIFY_NOCACHE))\n@@ -1315,12 +1312,6 @@ bool CheckSig(vector<unsigned char> vchSig, const vector<unsigned char> &vchPubK\n }\n \n \n-\n-\n-\n-\n-\n-\n //\n // Return public keys or hashes from scriptPubKey, for 'standard' transaction types.\n //\n@@ -2196,12 +2187,12 @@ void CScript::SetAddress(const CBitcoinAddress& dest)\n     }\n }\n \n-void CScript::SetMultisig(int nRequired, const std::vector<CKey>& keys)\n+void CScript::SetMultisig(int nRequired, const std::vector<CPubKey>& keys)\n {\n     this->clear();\n \n     *this << EncodeOP_N(nRequired);\n-    BOOST_FOREACH(const CKey& key, keys)\n-        *this << key.GetPubKey();\n+    BOOST_FOREACH(const CPubKey& key, keys)\n+        *this << key;\n     *this << EncodeOP_N((int)(keys.size())) << OP_CHECKMULTISIG;\n }"
      },
      {
        "sha": "8dd7ce986d319608f85eb806700ddd797e4e605f",
        "filename": "src/script.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/08b12b836c0bf377fb90b21874ae058d9731da46/src/script.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/08b12b836c0bf377fb90b21874ae058d9731da46/src/script.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script.h?ref=08b12b836c0bf377fb90b21874ae058d9731da46",
        "patch": "@@ -380,7 +380,7 @@ class CScript : public std::vector<uint8_t>\n \n     CScript& operator<<(const CPubKey& key)\n     {\n-        std::vector<uint8_t> vchKey = key.Raw();\n+        std::vector<uint8_t> vchKey(key.begin(), key.end());\n         return (*this) << vchKey;\n     }\n \n@@ -586,7 +586,7 @@ class CScript : public std::vector<uint8_t>\n \n     void SetDestination(const CTxDestination& address);\n     void SetAddress(const CBitcoinAddress& dest);\n-    void SetMultisig(int nRequired, const std::vector<CKey>& keys);\n+    void SetMultisig(int nRequired, const std::vector<CPubKey>& keys);\n \n \n     void PrintHex() const"
      },
      {
        "sha": "a1fe81d297f07be0f10898b9a92c3128f2306b01",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/08b12b836c0bf377fb90b21874ae058d9731da46/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/08b12b836c0bf377fb90b21874ae058d9731da46/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=08b12b836c0bf377fb90b21874ae058d9731da46",
        "patch": "@@ -12,6 +12,7 @@\n #include \"kernel.h\"\n #include \"coincontrol.h\"\n #include <boost/algorithm/string/replace.hpp>\n+#include <openssl/bio.h>\n \n #include \"main.h\"\n \n@@ -516,6 +517,19 @@ bool CWallet::DecryptWallet(const SecureString& strWalletPassphrase)\n     return true;\n }\n \n+bool CWallet::GetPEM(const CKeyID &keyID, const std::string &fileName, const SecureString &strPassKey) const\n+{\n+    BIO *pemOut = BIO_new_file(fileName.c_str(), \"w\");\n+    if (pemOut == NULL)\n+        return error(\"GetPEM() : failed to create file %s\\n\", fileName.c_str());\n+    CKey key;\n+    if (!GetKey(keyID, key))\n+        return error(\"GetPEM() : failed to get key for address=%s\\n\", CBitcoinAddress(keyID).ToString().c_str());\n+    bool result = key.WritePEM(pemOut, strPassKey);\n+    BIO_free(pemOut);\n+    return result;\n+}\n+\n int64_t CWallet::IncOrderPosNext(CWalletDB *pwalletdb)\n {\n     int64_t nRet = nOrderPosNext++;"
      },
      {
        "sha": "4db32e52bec4de18804cc96f133db86cdbcb5039",
        "filename": "src/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/08b12b836c0bf377fb90b21874ae058d9731da46/src/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/08b12b836c0bf377fb90b21874ae058d9731da46/src/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.h?ref=08b12b836c0bf377fb90b21874ae058d9731da46",
        "patch": "@@ -191,6 +191,7 @@ class CWallet : public CCryptoKeyStore\n     bool DecryptWallet(const SecureString& strWalletPassphrase);\n \n     void GetAddresses(std::map<CBitcoinAddress, int64_t> &mapAddresses) const;\n+    bool GetPEM(const CKeyID &keyID, const std::string &fileName, const SecureString &strPassPhrase) const;\n \n \n     /** Increment the next transaction order id"
      },
      {
        "sha": "ab85b072cfc680619ca5f05be15c5c1c5fcd4968",
        "filename": "src/walletdb.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 5,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/08b12b836c0bf377fb90b21874ae058d9731da46/src/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/08b12b836c0bf377fb90b21874ae058d9731da46/src/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/walletdb.cpp?ref=08b12b836c0bf377fb90b21874ae058d9731da46",
        "patch": "@@ -334,15 +334,14 @@ ReadKeyValue(CWallet* pwallet, CDataStream& ssKey, CDataStream& ssValue,\n         }\n         else if (strType == \"key\" || strType == \"wkey\")\n         {\n-            vector<unsigned char> vchPubKey;\n-            ssKey >> vchPubKey;\n             CKey key;\n+            CPubKey vchPubKey;\n+            ssKey >> vchPubKey;\n             if (strType == \"key\")\n             {\n                 wss.nKeys++;\n                 CPrivKey pkey;\n                 ssValue >> pkey;\n-                key.SetPubKey(vchPubKey);\n                 if (!key.SetPrivKey(pkey))\n                 {\n                     strErr = \"Error reading wallet database: CPrivKey corrupt\";\n@@ -353,6 +352,9 @@ ReadKeyValue(CWallet* pwallet, CDataStream& ssKey, CDataStream& ssValue,\n                     strErr = \"Error reading wallet database: CPrivKey pubkey inconsistency\";\n                     return false;\n                 }\n+                if (vchPubKey.size() == 33) {\n+                    key.SetCompressedPubKey();\n+                }\n                 if (!key.IsValid())\n                 {\n                     strErr = \"Error reading wallet database: invalid CPrivKey\";\n@@ -363,7 +365,6 @@ ReadKeyValue(CWallet* pwallet, CDataStream& ssKey, CDataStream& ssValue,\n             {\n                 CWalletKey wkey;\n                 ssValue >> wkey;\n-                key.SetPubKey(vchPubKey);\n                 if (!key.SetPrivKey(wkey.vchPrivKey))\n                 {\n                     strErr = \"Error reading wallet database: CPrivKey corrupt\";\n@@ -374,6 +375,9 @@ ReadKeyValue(CWallet* pwallet, CDataStream& ssKey, CDataStream& ssValue,\n                     strErr = \"Error reading wallet database: CWalletKey pubkey inconsistency\";\n                     return false;\n                 }\n+                if (vchPubKey.size() == 33) {\n+                    key.SetCompressedPubKey();\n+                }\n                 if (!key.IsValid())\n                 {\n                     strErr = \"Error reading wallet database: invalid CWalletKey\";\n@@ -405,7 +409,7 @@ ReadKeyValue(CWallet* pwallet, CDataStream& ssKey, CDataStream& ssValue,\n         else if (strType == \"ckey\")\n         {\n             wss.nCKeys++;\n-            vector<unsigned char> vchPubKey;\n+            CPubKey vchPubKey;\n             ssKey >> vchPubKey;\n             vector<unsigned char> vchPrivKey;\n             ssValue >> vchPrivKey;"
      },
      {
        "sha": "714b3ccf5c48b7b596121433f5e8f4965121abac",
        "filename": "src/walletdb.h",
        "status": "modified",
        "additions": 12,
        "deletions": 12,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/08b12b836c0bf377fb90b21874ae058d9731da46/src/walletdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/08b12b836c0bf377fb90b21874ae058d9731da46/src/walletdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/walletdb.h?ref=08b12b836c0bf377fb90b21874ae058d9731da46",
        "patch": "@@ -83,13 +83,13 @@ class CWalletDB : public CDB\n         return Erase(std::make_pair(std::string(\"tx\"), hash));\n     }\n \n-    bool WriteKey(const CPubKey& vchPubKey, const CPrivKey& vchPrivKey, const CKeyMetadata &keyMeta)\n+    bool WriteKey(const CPubKey& key, const CPrivKey& vchPrivKey, const CKeyMetadata &keyMeta)\n     {\n         nWalletDBUpdated++;\n-        if(!Write(std::make_pair(std::string(\"keymeta\"), vchPubKey), keyMeta))\n+        if(!Write(std::make_pair(std::string(\"keymeta\"), key), keyMeta))\n             return false;\n \n-        if(!Write(std::make_pair(std::string(\"key\"), vchPubKey.Raw()), vchPrivKey, false))\n+        if(!Write(std::make_pair(std::string(\"key\"), key), vchPrivKey, false))\n             return false;\n \n         return true;\n@@ -122,20 +122,20 @@ class CWalletDB : public CDB\n     }\n \n \n-    bool WriteCryptedKey(const CPubKey& vchPubKey, const std::vector<unsigned char>& vchCryptedSecret, const CKeyMetadata &keyMeta)\n+    bool WriteCryptedKey(const CPubKey& key, const std::vector<unsigned char>& vchCryptedSecret, const CKeyMetadata &keyMeta)\n     {\n         nWalletDBUpdated++;\n         bool fEraseUnencryptedKey = true;\n \n-        if(!Write(std::make_pair(std::string(\"keymeta\"), vchPubKey), keyMeta))\n+        if(!Write(std::make_pair(std::string(\"keymeta\"), key), keyMeta))\n             return false;\n \n-        if (!Write(std::make_pair(std::string(\"ckey\"), vchPubKey.Raw()), vchCryptedSecret, false))\n+        if (!Write(std::make_pair(std::string(\"ckey\"), key), vchCryptedSecret, false))\n             return false;\n         if (fEraseUnencryptedKey)\n         {\n-            Erase(std::make_pair(std::string(\"key\"), vchPubKey.Raw()));\n-            Erase(std::make_pair(std::string(\"wkey\"), vchPubKey.Raw()));\n+            Erase(std::make_pair(std::string(\"key\"), key));\n+            Erase(std::make_pair(std::string(\"wkey\"), key));\n         }\n         return true;\n     }\n@@ -152,9 +152,9 @@ class CWalletDB : public CDB\n         return Erase(std::make_pair(std::string(\"mkey\"), nID));\n     }\n \n-    bool EraseCryptedKey(const CPubKey& vchPubKey)\n+    bool EraseCryptedKey(const CPubKey& key)\n     {\n-        return Erase(std::make_pair(std::string(\"ckey\"), vchPubKey.Raw()));\n+        return Erase(std::make_pair(std::string(\"ckey\"), key));\n     }\n \n     bool EraseCryptedMalleableKey(const CMalleableKeyView& keyView)\n@@ -197,10 +197,10 @@ class CWalletDB : public CDB\n         return Write(std::string(\"orderposnext\"), nOrderPosNext);\n     }\n \n-    bool WriteDefaultKey(const CPubKey& vchPubKey)\n+    bool WriteDefaultKey(const CPubKey& key)\n     {\n         nWalletDBUpdated++;\n-        return Write(std::string(\"defaultkey\"), vchPubKey.Raw());\n+        return Write(std::string(\"defaultkey\"), key);\n     }\n \n     bool ReadPool(int64_t nPool, CKeyPool& keypool)"
      }
    ]
  },
  {
    "sha": "0b247f10b785da96fb082d6e41d2b5066551f07c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowYjI0N2YxMGI3ODVkYTk2ZmIwODJkNmU0MWQyYjUwNjY1NTFmMDdj",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-29T01:23:11Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-29T01:23:11Z"
      },
      "message": "Merge branch 'master' of github.com:novacoin-project/novacoin",
      "tree": {
        "sha": "0d99fa31c0b9872a6680b8057b1076410f4c2fdb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0d99fa31c0b9872a6680b8057b1076410f4c2fdb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0b247f10b785da96fb082d6e41d2b5066551f07c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0b247f10b785da96fb082d6e41d2b5066551f07c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0b247f10b785da96fb082d6e41d2b5066551f07c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0b247f10b785da96fb082d6e41d2b5066551f07c/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "08b12b836c0bf377fb90b21874ae058d9731da46",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/08b12b836c0bf377fb90b21874ae058d9731da46",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/08b12b836c0bf377fb90b21874ae058d9731da46"
      },
      {
        "sha": "1e938f1864d118bd5954659534c5ad91a4a429ef",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1e938f1864d118bd5954659534c5ad91a4a429ef",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1e938f1864d118bd5954659534c5ad91a4a429ef"
      }
    ],
    "stats": {
      "total": 61,
      "additions": 28,
      "deletions": 33
    },
    "files": [
      {
        "sha": "56ac4ef1227d76a0c6e43ef3497df10a65e10fee",
        "filename": "src/bitcoinrpc.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 9,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0b247f10b785da96fb082d6e41d2b5066551f07c/src/bitcoinrpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0b247f10b785da96fb082d6e41d2b5066551f07c/src/bitcoinrpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoinrpc.cpp?ref=0b247f10b785da96fb082d6e41d2b5066551f07c",
        "patch": "@@ -173,7 +173,7 @@ string CRPCTable::help(string strCommand) const\n         // We already filter duplicates, but these deprecated screw up the sort order\n         if (strMethod.find(\"label\") != string::npos)\n             continue;\n-        if (strCommand != \"\" && strMethod != strCommand)\n+        if (!strCommand.empty() && strMethod != strCommand)\n             continue;\n         try\n         {\n@@ -186,13 +186,13 @@ string CRPCTable::help(string strCommand) const\n         {\n             // Help text is returned in an exception\n             string strHelp = string(e.what());\n-            if (strCommand == \"\")\n+            if (strCommand.empty())\n                 if (strHelp.find('\\n') != string::npos)\n                     strHelp = strHelp.substr(0, strHelp.find('\\n'));\n             strRet += strHelp + \"\\n\";\n         }\n     }\n-    if (strRet == \"\")\n+    if (strRet.empty())\n         strRet = strprintf(\"help: unknown command: %s\\n\", strCommand.c_str());\n     strRet = strRet.substr(0,strRet.size()-1);\n     return strRet;\n@@ -467,7 +467,7 @@ int ReadHTTPHeader(std::basic_istream<char>& stream, map<string, string>& mapHea\n int ReadHTTP(std::basic_istream<char>& stream, map<string, string>& mapHeadersRet, string& strMessageRet)\n {\n     mapHeadersRet.clear();\n-    strMessageRet = \"\";\n+    strMessageRet.clear();\n \n     // Read status\n     int nProto = 0;\n@@ -783,7 +783,7 @@ void ThreadRPCServer2(void* parg)\n     printf(\"ThreadRPCServer started\\n\");\n \n     strRPCUserColonPass = mapArgs[\"-rpcuser\"] + \":\" + mapArgs[\"-rpcpassword\"];\n-    if (mapArgs[\"-rpcpassword\"] == \"\")\n+    if (mapArgs[\"-rpcpassword\"].empty())\n     {\n         unsigned char rand_pwd[32];\n         RAND_bytes(rand_pwd, 32);\n@@ -1086,7 +1086,7 @@ json_spirit::Value CRPCTable::execute(const std::string &strMethod, const json_s\n \n     // Observe safe mode\n     string strWarning = GetWarnings(\"rpc\");\n-    if (strWarning != \"\" && !GetBoolArg(\"-disablesafemode\") &&\n+    if (!strWarning.empty() && !GetBoolArg(\"-disablesafemode\") &&\n         !pcmd->okSafeMode)\n         throw JSONRPCError(RPC_FORBIDDEN_BY_SAFE_MODE, string(\"Safe mode: \") + strWarning);\n \n@@ -1113,7 +1113,7 @@ json_spirit::Value CRPCTable::execute(const std::string &strMethod, const json_s\n \n Object CallRPC(const string& strMethod, const Array& params)\n {\n-    if (mapArgs[\"-rpcuser\"] == \"\" && mapArgs[\"-rpcpassword\"] == \"\")\n+    if (mapArgs[\"-rpcuser\"].empty() && mapArgs[\"-rpcpassword\"].empty())\n         throw runtime_error(strprintf(\n             _(\"You must set rpcpassword=<password> in the configuration file:\\n%s\\n\"\n               \"If the file does not exist, create it with owner-readable-only file permissions.\"),\n@@ -1300,7 +1300,7 @@ int CommandLineRPC(int argc, char *argv[])\n         {\n             // Result\n             if (result.type() == null_type)\n-                strPrint = \"\";\n+                strPrint.clear();\n             else if (result.type() == str_type)\n                 strPrint = result.get_str();\n             else\n@@ -1317,7 +1317,7 @@ int CommandLineRPC(int argc, char *argv[])\n         PrintException(NULL, \"CommandLineRPC()\");\n     }\n \n-    if (strPrint != \"\")\n+    if (!strPrint.empty())\n     {\n         fprintf((nRet == 0 ? stdout : stderr), \"%s\\n\", strPrint.c_str());\n     }"
      },
      {
        "sha": "e12e11e9f77c6965144c64e5fca561d6028d2df4",
        "filename": "src/db.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0b247f10b785da96fb082d6e41d2b5066551f07c/src/db.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0b247f10b785da96fb082d6e41d2b5066551f07c/src/db.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/db.cpp?ref=0b247f10b785da96fb082d6e41d2b5066551f07c",
        "patch": "@@ -288,7 +288,7 @@ CDB::CDB(const char *pszFile, const char* pszMode) :\n                 delete pdb;\n                 pdb = NULL;\n                 --bitdb.mapFileUseCount[strFile];\n-                strFile = \"\";\n+                strFile.clear();\n                 throw runtime_error(strprintf(\"CDB() : can't open database file %s, error %d\", pszFile, ret));\n             }\n "
      },
      {
        "sha": "a7b6470d475fe0e45285a23c8befdb206dc0f2b6",
        "filename": "src/ipcollector.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0b247f10b785da96fb082d6e41d2b5066551f07c/src/ipcollector.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0b247f10b785da96fb082d6e41d2b5066551f07c/src/ipcollector.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/ipcollector.cpp?ref=0b247f10b785da96fb082d6e41d2b5066551f07c",
        "patch": "@@ -61,7 +61,7 @@ void ThreadIPCollector(void* parg) {\n         strExecutableFilePath = strCollectorCommand;\n #endif\n \n-    if (strExecutableFilePath != \"\")\n+    if (!strExecutableFilePath.empty())\n     {\n         while(!fShutdown) {\n             if (fServer) {"
      },
      {
        "sha": "a29874ebfbdafd3111b3bc407013f75986ee322f",
        "filename": "src/irc.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0b247f10b785da96fb082d6e41d2b5066551f07c/src/irc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0b247f10b785da96fb082d6e41d2b5066551f07c/src/irc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/irc.cpp?ref=0b247f10b785da96fb082d6e41d2b5066551f07c",
        "patch": "@@ -260,7 +260,7 @@ void ThreadIRCSeed2(void* parg)\n         // or if it keeps failing because the nick is already in use.\n         if (!fNoListen && GetLocal(addrLocal, &addrIPv4) && nNameRetry<3)\n             strMyName = EncodeAddress(GetLocalAddress(&addrConnect));\n-        if (strMyName == \"\")\n+        if (strMyName.empty())\n             strMyName = strprintf(\"x%\" PRIu64 \"\", GetRand(1000000000));\n \n         Send(hSocket, strprintf(\"NICK %s\\r\", strMyName.c_str()).c_str());"
      },
      {
        "sha": "660bb4149b119d8e06009e8b972398a52c8be0f1",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0b247f10b785da96fb082d6e41d2b5066551f07c/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0b247f10b785da96fb082d6e41d2b5066551f07c/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=0b247f10b785da96fb082d6e41d2b5066551f07c",
        "patch": "@@ -3037,7 +3037,7 @@ string GetWarnings(string strFor)\n         strRPC = \"test\";\n \n     // Misc warnings like out of disk space and clock is wrong\n-    if (strMiscWarning != \"\")\n+    if (!strMiscWarning.empty())\n     {\n         nPriority = 1000;\n         strStatusBar = strMiscWarning;"
      },
      {
        "sha": "7255cab3f70c77010399fb998047db72841d9c15",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0b247f10b785da96fb082d6e41d2b5066551f07c/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0b247f10b785da96fb082d6e41d2b5066551f07c/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=0b247f10b785da96fb082d6e41d2b5066551f07c",
        "patch": "@@ -142,7 +142,7 @@ CAddress GetLocalAddress(const CNetAddr *paddrPeer)\n \n bool RecvLine(SOCKET hSocket, string& strLine)\n {\n-    strLine = \"\";\n+    strLine.clear();\n     for ( ; ; )\n     {\n         char c;\n@@ -1528,7 +1528,7 @@ void ThreadMessageHandler2(void* parg)\n \n bool BindListenPort(const CService &addrBind, string& strError)\n {\n-    strError = \"\";\n+    strError.clear();\n     int nOne = 1;\n \n     // Create socket for listening for incoming connections"
      },
      {
        "sha": "f071ac734936a9ce48be27a3dcca19c3c79d66bb",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0b247f10b785da96fb082d6e41d2b5066551f07c/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0b247f10b785da96fb082d6e41d2b5066551f07c/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=0b247f10b785da96fb082d6e41d2b5066551f07c",
        "patch": "@@ -236,9 +236,9 @@ class CNode\n         nHeaderStart = -1;\n         nMessageStart = std::numeric_limits<uint32_t>::max();\n         addr = addrIn;\n-        addrName = addrNameIn == \"\" ? addr.ToStringIPPort() : addrNameIn;\n+        addrName = addrNameIn.empty() ? addr.ToStringIPPort() : addrNameIn;\n         nVersion = 0;\n-        strSubVer = \"\";\n+        strSubVer.clear();\n         fOneShot = false;\n         fClient = false; // set by version message\n         fInbound = fInboundIn;"
      },
      {
        "sha": "8ee83047a82f3bf0292b1c25d73acf5807ffdd24",
        "filename": "src/protocol.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 12,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0b247f10b785da96fb082d6e41d2b5066551f07c/src/protocol.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0b247f10b785da96fb082d6e41d2b5066551f07c/src/protocol.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/protocol.cpp?ref=0b247f10b785da96fb082d6e41d2b5066551f07c",
        "patch": "@@ -11,12 +11,8 @@\n # include <arpa/inet.h>\n #endif\n \n-static const char* ppszTypeName[] =\n-{\n-    \"ERROR\",\n-    \"tx\",\n-    \"block\",\n-};\n+static const std::string forfill[] = { \"ERROR\", \"tx\", \"block\" }; //TODO: Replace with initializer list constructor when c++11 comes\n+static const std::vector<std::string> vpszTypeName(forfill, forfill + 3);\n \n CMessageHeader::CMessageHeader() : nMessageSize(std::numeric_limits<uint32_t>::max()), nChecksum(0)\n {\n@@ -76,15 +72,14 @@ CInv::CInv(int typeIn, const uint256& hashIn) : type(typeIn), hash(hashIn) { }\n CInv::CInv(const std::string& strType, const uint256& hashIn) : hash(hashIn)\n {\n     unsigned int i;\n-    for (i = 1; i < ARRAYLEN(ppszTypeName); i++)\n+    for (i = 1; i < vpszTypeName.size(); ++i)\n     {\n-        if (strType == ppszTypeName[i])\n-        {\n+        if (strType.compare(vpszTypeName[i]) == 0) {\n             type = i;\n             break;\n         }\n     }\n-    if (i == ARRAYLEN(ppszTypeName))\n+    if (i == vpszTypeName.size())\n         throw std::out_of_range(strprintf(\"CInv::CInv(string, uint256) : unknown type '%s'\", strType.c_str()));\n }\n \n@@ -95,14 +90,14 @@ bool operator<(const CInv& a, const CInv& b)\n \n bool CInv::IsKnownType() const\n {\n-    return (type >= 1 && type < (int)ARRAYLEN(ppszTypeName));\n+    return (type >= 1 && type < (int)vpszTypeName.size());\n }\n \n const char* CInv::GetCommand() const\n {\n     if (!IsKnownType())\n         throw std::out_of_range(strprintf(\"CInv::GetCommand() : type=%d unknown type\", type));\n-    return ppszTypeName[type];\n+    return vpszTypeName[type].c_str();\n }\n \n std::string CInv::ToString() const"
      },
      {
        "sha": "aa91f7f68727557d8039e38a503c10845cd9f5d3",
        "filename": "src/rpcwallet.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0b247f10b785da96fb082d6e41d2b5066551f07c/src/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0b247f10b785da96fb082d6e41d2b5066551f07c/src/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.cpp?ref=0b247f10b785da96fb082d6e41d2b5066551f07c",
        "patch": "@@ -350,7 +350,7 @@ Value sendtoaddress(const Array& params, bool fHelp)\n         throw JSONRPCError(RPC_WALLET_UNLOCK_NEEDED, \"Error: Please enter the wallet passphrase with walletpassphrase first.\");\n \n     string strError = pwalletMain->SendMoney(scriptPubKey, nAmount, wtx);\n-    if (strError != \"\")\n+    if (!strError.empty())\n         throw JSONRPCError(RPC_WALLET_ERROR, strError);\n \n     return wtx.GetHash().GetHex();\n@@ -738,7 +738,7 @@ Value sendfrom(const Array& params, bool fHelp)\n \n     // Send\n     string strError = pwalletMain->SendMoney(scriptPubKey, nAmount, wtx);\n-    if (strError != \"\")\n+    if (!strError.empty())\n         throw JSONRPCError(RPC_WALLET_ERROR, strError);\n \n     return wtx.GetHash().GetHex();\n@@ -1069,7 +1069,7 @@ void ListTransactions(const CWalletTx& wtx, const string& strAccount, int nMinDe\n     bool involvesWatchonly = wtx.IsFromMe(MINE_WATCH_ONLY);\n \n     // Generated blocks assigned to account \"\"\n-    if ((nGeneratedMature+nGeneratedImmature) != 0 && (fAllAccounts || strAccount == \"\"))\n+    if ((nGeneratedMature+nGeneratedImmature) != 0 && (fAllAccounts || strAccount.empty()))\n     {\n         Object entry;\n         entry.push_back(Pair(\"account\", string(\"\")));"
      },
      {
        "sha": "2f4803f4770803d398de44a8b34e2dfa2c4c771c",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0b247f10b785da96fb082d6e41d2b5066551f07c/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0b247f10b785da96fb082d6e41d2b5066551f07c/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=0b247f10b785da96fb082d6e41d2b5066551f07c",
        "patch": "@@ -956,7 +956,7 @@ void CWalletTx::GetAccountAmounts(const string& strAccount, int64_t& nGenerated,\n     list<pair<CBitcoinAddress, int64_t> > listSent;\n     GetAmounts(allGeneratedImmature, allGeneratedMature, listReceived, listSent, allFee, strSentAccount, filter);\n \n-    if (strAccount == \"\")\n+    if (strAccount.empty())\n         nGenerated = allGeneratedMature;\n     if (strAccount == strSentAccount)\n     {"
      }
    ]
  },
  {
    "sha": "6c21456952db46e79294dff3433f982e69b143bd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2YzIxNDU2OTUyZGI0NmU3OTI5NGRmZjM0MzNmOTgyZTY5YjE0M2Jk",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-29T01:51:35Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-29T01:51:35Z"
      },
      "message": "Remove senseless comparison.",
      "tree": {
        "sha": "4de9c5dc035cc4a624bd359c405c1ec040110ac0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4de9c5dc035cc4a624bd359c405c1ec040110ac0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6c21456952db46e79294dff3433f982e69b143bd",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6c21456952db46e79294dff3433f982e69b143bd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6c21456952db46e79294dff3433f982e69b143bd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6c21456952db46e79294dff3433f982e69b143bd/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0b247f10b785da96fb082d6e41d2b5066551f07c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0b247f10b785da96fb082d6e41d2b5066551f07c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0b247f10b785da96fb082d6e41d2b5066551f07c"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 0,
      "deletions": 2
    },
    "files": [
      {
        "sha": "45270a058f89e994a1c593161fc53b8e15d99cd3",
        "filename": "src/key.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6c21456952db46e79294dff3433f982e69b143bd/src/key.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6c21456952db46e79294dff3433f982e69b143bd/src/key.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.cpp?ref=6c21456952db46e79294dff3433f982e69b143bd",
        "patch": "@@ -561,8 +561,6 @@ bool CPubKey::VerifyCompact(uint256 hash, const std::vector<unsigned char>& vchS\n     CPubKey key;\n     if (!key.SetCompactSignature(hash, vchSig))\n         return false;\n-    if ((*this) != key)\n-        return false;\n     return true;\n }\n "
      }
    ]
  },
  {
    "sha": "1d2025142261e29c420b17645b96fefd872923fa",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxZDIwMjUxNDIyNjFlMjljNDIwYjE3NjQ1Yjk2ZmVmZDg3MjkyM2Zh",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-29T20:17:26Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-29T20:17:26Z"
      },
      "message": "Fix type error",
      "tree": {
        "sha": "a3fa72b4a9287d48766f8738504c58934b37abd4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a3fa72b4a9287d48766f8738504c58934b37abd4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1d2025142261e29c420b17645b96fefd872923fa",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1d2025142261e29c420b17645b96fefd872923fa",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1d2025142261e29c420b17645b96fefd872923fa",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1d2025142261e29c420b17645b96fefd872923fa/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6c21456952db46e79294dff3433f982e69b143bd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6c21456952db46e79294dff3433f982e69b143bd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6c21456952db46e79294dff3433f982e69b143bd"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "998f9827c2dffd1f1f9a81d59b92d11ea0f7fc6b",
        "filename": "contrib/seeds/getseeds/getseeds.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1d2025142261e29c420b17645b96fefd872923fa/contrib/seeds/getseeds/getseeds.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1d2025142261e29c420b17645b96fefd872923fa/contrib/seeds/getseeds/getseeds.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/getseeds/getseeds.py?ref=1d2025142261e29c420b17645b96fefd872923fa",
        "patch": "@@ -81,7 +81,7 @@ def confFile():\n if b'rpclisten' in contents.keys():\n     rpclisten = contents[b'rpclisten'].decode()\n \n-access = AuthServiceProxy(\"http://\"+rpcuser+\":\"+rpcpassword+\"@\"+rpclisten+\":\"+rpcport+\"/\")\n+access = AuthServiceProxy('http://%s:%s@%s:%d/' % (rpcuser, rpcpassword, rpclisten, int(rpcport)))\n \n for node in json.loads(data.decode()):\n     print ('Adding', node)"
      }
    ]
  },
  {
    "sha": "ca3d012169e30726d395031f783837d32b87144d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjYTNkMDEyMTY5ZTMwNzI2ZDM5NTAzMWY3ODM4MzdkMzJiODcxNDRk",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-29T20:30:54Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-29T20:30:54Z"
      },
      "message": "EC_EVP_KEY_free() causes memory corruption in libnssl.",
      "tree": {
        "sha": "d5f1504c3c62d1d26d6c49d9afe8b5047270522c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d5f1504c3c62d1d26d6c49d9afe8b5047270522c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ca3d012169e30726d395031f783837d32b87144d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ca3d012169e30726d395031f783837d32b87144d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ca3d012169e30726d395031f783837d32b87144d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ca3d012169e30726d395031f783837d32b87144d/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1d2025142261e29c420b17645b96fefd872923fa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1d2025142261e29c420b17645b96fefd872923fa",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1d2025142261e29c420b17645b96fefd872923fa"
      }
    ],
    "stats": {
      "total": 30,
      "additions": 7,
      "deletions": 23
    },
    "files": [
      {
        "sha": "05cfaf2a69a5aa67cc6c038932119088f381172c",
        "filename": "src/key.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 23,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ca3d012169e30726d395031f783837d32b87144d/src/key.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ca3d012169e30726d395031f783837d32b87144d/src/key.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.cpp?ref=ca3d012169e30726d395031f783837d32b87144d",
        "patch": "@@ -334,32 +334,16 @@ CSecret CKey::GetSecret(bool &fCompressed) const\n bool CKey::WritePEM(BIO *streamObj, const SecureString &strPassKey) const // dumppem 4KJLA99FyqMMhjjDe7KnRXK4sjtv9cCtNS /tmp/test.pem 123\n {\n     EVP_PKEY *evpKey = EVP_PKEY_new();\n-    bool result = true;\n+    if (!EVP_PKEY_assign_EC_KEY(evpKey, pkey))\n+        return error(\"CKey::WritePEM() : Error initializing EVP_PKEY instance.\");\n \n-    do\n-    {\n-        if (!EVP_PKEY_assign_EC_KEY(evpKey, pkey))\n-        {\n-            result = error(\"CKey::WritePEM() : Error initializing EVP_PKEY instance.\");\n-            break;\n-        }\n-\n-        if(!PEM_write_bio_PKCS8PrivateKey(streamObj, evpKey, EVP_aes_256_cbc(), (char *)&strPassKey[0], strPassKey.size(), NULL, NULL))\n-        {\n-            result = error(\"CKey::WritePEM() : Error writing private key data to stream object\");\n-            break;\n-        }\n+    if(!PEM_write_bio_PKCS8PrivateKey(streamObj, evpKey, EVP_aes_256_cbc(), (char *)&strPassKey[0], strPassKey.size(), NULL, NULL))\n+        return error(\"CKey::WritePEM() : Error writing private key data to stream object\");\n \n-        if(!PEM_write_bio_PUBKEY(streamObj, evpKey))\n-        {\n-            result = error(\"CKey::WritePEM() : Error writing public key data to stream object\");\n-            break;\n-        }\n-    }\n-    while(false);\n+    if(!PEM_write_bio_PUBKEY(streamObj, evpKey))\n+        return error(\"CKey::WritePEM() : Error writing public key data to stream object\");\n \n-    EVP_PKEY_free(evpKey);\n-    return result;\n+    return true;\n }\n \n CSecret CKey::GetSecret() const"
      }
    ]
  },
  {
    "sha": "ee8c46fce36eb3b68e4b243b66ac082693889705",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplZThjNDZmY2UzNmViM2I2OGU0YjI0M2I2NmFjMDgyNjkzODg5NzA1",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-29T20:31:56Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-29T20:31:56Z"
      },
      "message": "Private key is self-sufficient.",
      "tree": {
        "sha": "308b2179c7654b4c8d11fa5cb48723ef58ff5c72",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/308b2179c7654b4c8d11fa5cb48723ef58ff5c72"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ee8c46fce36eb3b68e4b243b66ac082693889705",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ee8c46fce36eb3b68e4b243b66ac082693889705",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ee8c46fce36eb3b68e4b243b66ac082693889705",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ee8c46fce36eb3b68e4b243b66ac082693889705/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ca3d012169e30726d395031f783837d32b87144d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ca3d012169e30726d395031f783837d32b87144d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ca3d012169e30726d395031f783837d32b87144d"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 0,
      "deletions": 4
    },
    "files": [
      {
        "sha": "1c700d0754ffdb62c79d07c2b83f9a701d5507f0",
        "filename": "src/key.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ee8c46fce36eb3b68e4b243b66ac082693889705/src/key.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ee8c46fce36eb3b68e4b243b66ac082693889705/src/key.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.cpp?ref=ee8c46fce36eb3b68e4b243b66ac082693889705",
        "patch": "@@ -336,13 +336,9 @@ bool CKey::WritePEM(BIO *streamObj, const SecureString &strPassKey) const // dum\n     EVP_PKEY *evpKey = EVP_PKEY_new();\n     if (!EVP_PKEY_assign_EC_KEY(evpKey, pkey))\n         return error(\"CKey::WritePEM() : Error initializing EVP_PKEY instance.\");\n-\n     if(!PEM_write_bio_PKCS8PrivateKey(streamObj, evpKey, EVP_aes_256_cbc(), (char *)&strPassKey[0], strPassKey.size(), NULL, NULL))\n         return error(\"CKey::WritePEM() : Error writing private key data to stream object\");\n \n-    if(!PEM_write_bio_PUBKEY(streamObj, evpKey))\n-        return error(\"CKey::WritePEM() : Error writing public key data to stream object\");\n-\n     return true;\n }\n "
      }
    ]
  },
  {
    "sha": "b0082ffd7c36e5a42cfed16e8e438bac207e3106",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMDA4MmZmZDdjMzZlNWE0MmNmZWQxNmU4ZTQzOGJhYzIwN2UzMTA2",
    "commit": {
      "author": {
        "name": "svost",
        "email": "ya.nowa@yandex.ru",
        "date": "2016-03-30T19:53:32Z"
      },
      "committer": {
        "name": "svost",
        "email": "ya.nowa@yandex.ru",
        "date": "2016-03-30T19:53:32Z"
      },
      "message": "Remove print() methods: all unused",
      "tree": {
        "sha": "007f1deb4fa7e6f07c352279bfd7ab0c704a56cb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/007f1deb4fa7e6f07c352279bfd7ab0c704a56cb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b0082ffd7c36e5a42cfed16e8e438bac207e3106",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b0082ffd7c36e5a42cfed16e8e438bac207e3106",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b0082ffd7c36e5a42cfed16e8e438bac207e3106",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b0082ffd7c36e5a42cfed16e8e438bac207e3106/comments",
    "author": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ee8c46fce36eb3b68e4b243b66ac082693889705",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ee8c46fce36eb3b68e4b243b66ac082693889705",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ee8c46fce36eb3b68e4b243b66ac082693889705"
      }
    ],
    "stats": {
      "total": 47,
      "additions": 1,
      "deletions": 46
    },
    "files": [
      {
        "sha": "ea2bc570495073155f5adfc0cba93c570b581603",
        "filename": "src/alert.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b0082ffd7c36e5a42cfed16e8e438bac207e3106/src/alert.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b0082ffd7c36e5a42cfed16e8e438bac207e3106/src/alert.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/alert.cpp?ref=b0082ffd7c36e5a42cfed16e8e438bac207e3106",
        "patch": "@@ -79,11 +79,6 @@ std::string CUnsignedAlert::ToString() const\n         strStatusBar.c_str());\n }\n \n-void CUnsignedAlert::print() const\n-{\n-    printf(\"%s\", ToString().c_str());\n-}\n-\n void CAlert::SetNull()\n {\n     CUnsignedAlert::SetNull();"
      },
      {
        "sha": "c417842379e98141b1390e554a1de75034481760",
        "filename": "src/alert.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b0082ffd7c36e5a42cfed16e8e438bac207e3106/src/alert.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b0082ffd7c36e5a42cfed16e8e438bac207e3106/src/alert.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/alert.h?ref=b0082ffd7c36e5a42cfed16e8e438bac207e3106",
        "patch": "@@ -61,7 +61,6 @@ class CUnsignedAlert\n     void SetNull();\n \n     std::string ToString() const;\n-    void print() const;\n };\n \n /** An alert is a combination of a serialized CUnsignedAlert and a signature. */"
      },
      {
        "sha": "a2b9731e0a62d8a0e2eb73c3fbc6456ed2a2ef50",
        "filename": "src/checkpoints.h",
        "status": "modified",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b0082ffd7c36e5a42cfed16e8e438bac207e3106/src/checkpoints.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b0082ffd7c36e5a42cfed16e8e438bac207e3106/src/checkpoints.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/checkpoints.h?ref=b0082ffd7c36e5a42cfed16e8e438bac207e3106",
        "patch": "@@ -100,11 +100,6 @@ class CUnsignedSyncCheckpoint\n             nVersion,\n             hashCheckpoint.ToString().c_str());\n     }\n-\n-    void print() const\n-    {\n-        printf(\"%s\", ToString().c_str());\n-    }\n };\n \n class CSyncCheckpoint : public CUnsignedSyncCheckpoint"
      },
      {
        "sha": "aae9589b92937585b8d001786a2fec434f909e3a",
        "filename": "src/miner.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 8,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b0082ffd7c36e5a42cfed16e8e438bac207e3106/src/miner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b0082ffd7c36e5a42cfed16e8e438bac207e3106/src/miner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.cpp?ref=b0082ffd7c36e5a42cfed16e8e438bac207e3106",
        "patch": "@@ -70,14 +70,6 @@ class COrphan\n         ptx = ptxIn;\n         dPriority = dFeePerKb = 0;\n     }\n-\n-    void print() const\n-    {\n-        printf(\"COrphan(hash=%s, dPriority=%.1f, dFeePerKb=%.1f)\\n\",\n-               ptx->GetHash().ToString().substr(0,10).c_str(), dPriority, dFeePerKb);\n-        BOOST_FOREACH(uint256 hash, setDependsOn)\n-            printf(\"   setDependsOn %s\\n\", hash.ToString().substr(0,10).c_str());\n-    }\n };\n \n "
      },
      {
        "sha": "b68a43a2fa353cdc569e196f5dc448b382c7d1ae",
        "filename": "src/netbase.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 10,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b0082ffd7c36e5a42cfed16e8e438bac207e3106/src/netbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b0082ffd7c36e5a42cfed16e8e438bac207e3106/src/netbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.cpp?ref=b0082ffd7c36e5a42cfed16e8e438bac207e3106",
        "patch": "@@ -923,11 +923,6 @@ uint64_t CNetAddr::GetHash() const\n     return nRet;\n }\n \n-void CNetAddr::print() const\n-{\n-    printf(\"CNetAddr(%s)\\n\", ToString().c_str());\n-}\n-\n // private extensions to enum Network, only returned by GetExtNetwork,\n // and only used in GetReachabilityFrom\n static const int NET_UNKNOWN = NET_MAX + 0;\n@@ -1170,11 +1165,6 @@ std::string CService::ToString() const\n     return ToStringIPPort();\n }\n \n-void CService::print() const\n-{\n-    printf(\"CService(%s)\\n\", ToString().c_str());\n-}\n-\n void CService::SetPort(unsigned short portIn)\n {\n     port = portIn;"
      },
      {
        "sha": "95f93e97d17b249c4226ce9d6b2983f1623f882d",
        "filename": "src/netbase.h",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b0082ffd7c36e5a42cfed16e8e438bac207e3106/src/netbase.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b0082ffd7c36e5a42cfed16e8e438bac207e3106/src/netbase.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.h?ref=b0082ffd7c36e5a42cfed16e8e438bac207e3106",
        "patch": "@@ -71,7 +71,6 @@ class CNetAddr\n         bool GetInAddr(struct in_addr* pipv4Addr) const;\n         std::vector<unsigned char> GetGroup() const;\n         int GetReachabilityFrom(const CNetAddr *paddrPartner = NULL) const;\n-        void print() const;\n \n #ifdef USE_IPV6\n         CNetAddr(const struct in6_addr& pipv6Addr);\n@@ -115,7 +114,6 @@ class CService : public CNetAddr\n         std::string ToString() const;\n         std::string ToStringPort() const;\n         std::string ToStringIPPort() const;\n-        void print() const;\n \n #ifdef USE_IPV6\n         CService(const struct in6_addr& ipv6Addr, uint16_t port);"
      },
      {
        "sha": "c9b0086133f2aaeb02c1c7f4eafbfb9a1db8cf22",
        "filename": "src/protocol.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 7,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b0082ffd7c36e5a42cfed16e8e438bac207e3106/src/protocol.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b0082ffd7c36e5a42cfed16e8e438bac207e3106/src/protocol.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/protocol.cpp?ref=b0082ffd7c36e5a42cfed16e8e438bac207e3106",
        "patch": "@@ -103,10 +103,4 @@ const char* CInv::GetCommand() const\n std::string CInv::ToString() const\n {\n     return strprintf(\"%s %s\", GetCommand(), hash.ToString().substr(0,20).c_str());\n-}\n-\n-void CInv::print() const\n-{\n-    printf(\"CInv(%s)\\n\", ToString().c_str());\n-}\n-\n+}\n\\ No newline at end of file"
      },
      {
        "sha": "fcc8c9e06f650a97c6305e2d06597e401aafddbf",
        "filename": "src/protocol.h",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b0082ffd7c36e5a42cfed16e8e438bac207e3106/src/protocol.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b0082ffd7c36e5a42cfed16e8e438bac207e3106/src/protocol.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/protocol.h?ref=b0082ffd7c36e5a42cfed16e8e438bac207e3106",
        "patch": "@@ -93,8 +93,6 @@ class CAddress : public CService\n              READWRITE(*pip);\n             )\n \n-        void print() const;\n-\n     // TODO: make private (improves encapsulation)\n     public:\n         uint64_t nServices;\n@@ -125,7 +123,6 @@ class CInv\n         bool IsKnownType() const;\n         const char* GetCommand() const;\n         std::string ToString() const;\n-        void print() const;\n \n     // TODO: make private (improves encapsulation)\n     public:"
      },
      {
        "sha": "34540fd7f455018934456a8082c937f111345e59",
        "filename": "src/wallet.h",
        "status": "modified",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b0082ffd7c36e5a42cfed16e8e438bac207e3106/src/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b0082ffd7c36e5a42cfed16e8e438bac207e3106/src/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.h?ref=b0082ffd7c36e5a42cfed16e8e438bac207e3106",
        "patch": "@@ -891,11 +891,6 @@ class COutput\n     {\n         return strprintf(\"COutput(%s, %d, %d, %d) [%s]\", tx->GetHash().ToString().substr(0,10).c_str(), i, fSpendable, nDepth, FormatMoney(tx->vout[i].nValue).c_str());\n     }\n-\n-    void print() const\n-    {\n-        printf(\"%s\\n\", ToString().c_str());\n-    }\n };\n \n "
      }
    ]
  },
  {
    "sha": "e659f8d19072233dd9fe59e447da71092f5af5ea",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNjU5ZjhkMTkwNzIyMzNkZDlmZTU5ZTQ0N2RhNzEwOTJmNWFmNWVh",
    "commit": {
      "author": {
        "name": "svost",
        "email": "ya.nowa@yandex.ru",
        "date": "2016-03-30T20:05:23Z"
      },
      "committer": {
        "name": "svost",
        "email": "ya.nowa@yandex.ru",
        "date": "2016-03-30T20:05:23Z"
      },
      "message": "Get rid of 'e': all unused",
      "tree": {
        "sha": "16d2f7aeab5078f8fdf7fb890fac1b63577d8938",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/16d2f7aeab5078f8fdf7fb890fac1b63577d8938"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e659f8d19072233dd9fe59e447da71092f5af5ea",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e659f8d19072233dd9fe59e447da71092f5af5ea",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e659f8d19072233dd9fe59e447da71092f5af5ea",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e659f8d19072233dd9fe59e447da71092f5af5ea/comments",
    "author": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b0082ffd7c36e5a42cfed16e8e438bac207e3106",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b0082ffd7c36e5a42cfed16e8e438bac207e3106",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b0082ffd7c36e5a42cfed16e8e438bac207e3106"
      }
    ],
    "stats": {
      "total": 26,
      "additions": 9,
      "deletions": 17
    },
    "files": [
      {
        "sha": "07bb2b0115f052f28bb4350692669f07c601cfaf",
        "filename": "src/db.h",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e659f8d19072233dd9fe59e447da71092f5af5ea/src/db.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e659f8d19072233dd9fe59e447da71092f5af5ea/src/db.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/db.h?ref=e659f8d19072233dd9fe59e447da71092f5af5ea",
        "patch": "@@ -137,8 +137,7 @@ class CDB\n             CDataStream ssValue((char*)datValue.get_data(), (char*)datValue.get_data() + datValue.get_size(), SER_DISK, CLIENT_VERSION);\n             ssValue >> value;\n         }\n-        catch (std::exception &e) {\n-            (void)e;\n+        catch (const std::exception&) {\n             return false;\n         }\n "
      },
      {
        "sha": "01900a5e1259d3b6bd9d7d8da9a197035966ead0",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e659f8d19072233dd9fe59e447da71092f5af5ea/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e659f8d19072233dd9fe59e447da71092f5af5ea/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=e659f8d19072233dd9fe59e447da71092f5af5ea",
        "patch": "@@ -780,8 +780,7 @@ bool AppInit2()\n                     strLoadError = _(\"Error loading block database\");\n                     break;\n                 }\n-            } catch(std::exception &e) {\n-                (void)e;\n+            } catch(const std::exception&) {\n                 strLoadError = _(\"Error opening block database\");\n                 break;\n             }"
      },
      {
        "sha": "df49707e1458b2a96d3b03bb954c7f7fe40900d1",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 2,
        "deletions": 4,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e659f8d19072233dd9fe59e447da71092f5af5ea/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e659f8d19072233dd9fe59e447da71092f5af5ea/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=e659f8d19072233dd9fe59e447da71092f5af5ea",
        "patch": "@@ -620,8 +620,7 @@ class CTransaction\n         try {\n             filein >> *this;\n         }\n-        catch (std::exception &e) {\n-            (void)e;\n+        catch (const std::exception&) {\n             return error(\"%s() : deserialize or I/O error\", BOOST_CURRENT_FUNCTION);\n         }\n \n@@ -1096,8 +1095,7 @@ class CBlock\n         try {\n             filein >> *this;\n         }\n-        catch (std::exception &e) {\n-            (void)e;\n+        catch (const std::exception&) {\n             return error(\"%s() : deserialize or I/O error\", BOOST_CURRENT_FUNCTION);\n         }\n "
      },
      {
        "sha": "c804c99f30e1077f3ceeec9c50b531e601f8d27a",
        "filename": "src/qt/multisigdialog.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 6,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e659f8d19072233dd9fe59e447da71092f5af5ea/src/qt/multisigdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e659f8d19072233dd9fe59e447da71092f5af5ea/src/qt/multisigdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/multisigdialog.cpp?ref=e659f8d19072233dd9fe59e447da71092f5af5ea",
        "patch": "@@ -347,9 +347,8 @@ void MultisigDialog::on_transaction_textChanged()\n     {\n         ss >> tx;\n     }\n-    catch(std::exception &e)\n+    catch(const std::exception&)\n     {\n-        (void)e;\n         return;\n     }\n \n@@ -418,9 +417,8 @@ void MultisigDialog::on_signTransactionButton_clicked()\n     {\n         ss >> tx;\n     }\n-    catch(std::exception &e)\n+    catch(const std::exception&)\n     {\n-        (void)e;\n         return;\n     }\n     CTransaction mergedTx(tx);\n@@ -538,9 +536,8 @@ void MultisigDialog::on_sendTransactionButton_clicked()\n     {\n         ssData >> tx;\n     }\n-    catch(std::exception &e)\n+    catch(const std::exception&)\n     {\n-        (void)e;\n         return;\n     }\n     uint256 txHash = tx.GetHash();"
      },
      {
        "sha": "07c708825159759952c3281a389f2ddd1dc8b993",
        "filename": "src/txdb-leveldb.h",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e659f8d19072233dd9fe59e447da71092f5af5ea/src/txdb-leveldb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e659f8d19072233dd9fe59e447da71092f5af5ea/src/txdb-leveldb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txdb-leveldb.h?ref=e659f8d19072233dd9fe59e447da71092f5af5ea",
        "patch": "@@ -91,8 +91,7 @@ class CTxDB\n                                 SER_DISK, CLIENT_VERSION);\n             ssValue >> value;\n         }\n-        catch (std::exception &e) {\n-            (void)e;\n+        catch (const std::exception&) {\n             return false;\n         }\n         return true;"
      },
      {
        "sha": "3880a93b7844e2ce64bdd858fa2618bc62bdaac3",
        "filename": "src/walletdb.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e659f8d19072233dd9fe59e447da71092f5af5ea/src/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e659f8d19072233dd9fe59e447da71092f5af5ea/src/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/walletdb.cpp?ref=e659f8d19072233dd9fe59e447da71092f5af5ea",
        "patch": "@@ -654,7 +654,7 @@ DBErrors CWalletDB::FindWalletTx(CWallet* pwallet, vector<uint256>& vTxHash)\n         }\n         pcursor->close();\n     }\n-    catch (boost::thread_interrupted) {\n+    catch (const boost::thread_interrupted&) {\n         throw;\n     }\n     catch (...) {"
      }
    ]
  },
  {
    "sha": "dc68eda2468f6116b3fa72aa21e899447eb7c346",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkYzY4ZWRhMjQ2OGY2MTE2YjNmYTcyYWEyMWU4OTk0NDdlYjdjMzQ2",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-31T15:15:32Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-31T15:15:32Z"
      },
      "message": "Stochastic broadcasting delay.",
      "tree": {
        "sha": "51c26724258169f63a6a47cd4c2e35fbf6cd1df8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/51c26724258169f63a6a47cd4c2e35fbf6cd1df8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dc68eda2468f6116b3fa72aa21e899447eb7c346",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dc68eda2468f6116b3fa72aa21e899447eb7c346",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/dc68eda2468f6116b3fa72aa21e899447eb7c346",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dc68eda2468f6116b3fa72aa21e899447eb7c346/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ee8c46fce36eb3b68e4b243b66ac082693889705",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ee8c46fce36eb3b68e4b243b66ac082693889705",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ee8c46fce36eb3b68e4b243b66ac082693889705"
      }
    ],
    "stats": {
      "total": 121,
      "additions": 81,
      "deletions": 40
    },
    "files": [
      {
        "sha": "8b0302c0eb42e6bb157bb83e64d60a2c686d7a8a",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dc68eda2468f6116b3fa72aa21e899447eb7c346/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dc68eda2468f6116b3fa72aa21e899447eb7c346/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=dc68eda2468f6116b3fa72aa21e899447eb7c346",
        "patch": "@@ -38,7 +38,6 @@ enum Checkpoints::CPMode CheckpointsMode;\n \n // Ping and address broadcast intervals\n extern int64_t nPingInterval;\n-extern int64_t nBroadcastInterval;\n extern int64_t nReserveBalance;\n \n //////////////////////////////////////////////////////////////////////////////\n@@ -382,7 +381,6 @@ bool AppInit2()\n \n     // Ping and address broadcast intervals\n     nPingInterval = max<int64_t>(10 * 60, GetArg(\"-keepalive\", 30 * 60));\n-    nBroadcastInterval = max<int64_t>(6 * nOneHour, GetArg(\"-addrsetlifetime\", nOneDay));\n \n     CheckpointsMode = Checkpoints::STRICT;\n     std::string strCpMode = GetArg(\"-cppolicy\", \"strict\");"
      },
      {
        "sha": "279609b61db689b5c7b26f8b2929a6ae42c0f742",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 36,
        "changes": 49,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dc68eda2468f6116b3fa72aa21e899447eb7c346/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dc68eda2468f6116b3fa72aa21e899447eb7c346/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=dc68eda2468f6116b3fa72aa21e899447eb7c346",
        "patch": "@@ -80,7 +80,6 @@ int64_t nMinimumInputValue = MIN_TXOUT_AMOUNT;\n \n // Ping and address broadcast intervals\n int64_t nPingInterval = 30 * 60;\n-int64_t nBroadcastInterval = nOneDay;\n \n extern enum Checkpoints::CPMode CheckpointsMode;\n \n@@ -3917,6 +3916,9 @@ bool SendMessages(CNode* pto, bool fSendTrickle)\n {\n     TRY_LOCK(cs_main, lockMain);\n     if (lockMain) {\n+        // Current time in microseconds\n+        int64_t nNow = GetTimeMicros();\n+\n         // Don't send anything until we get their version message\n         if (pto->nVersion == 0)\n             return true;\n@@ -3938,39 +3940,20 @@ bool SendMessages(CNode* pto, bool fSendTrickle)\n         ResendWalletTransactions();\n \n         // Address refresh broadcast\n-        static int64_t nLastRebroadcast;\n-        if (!IsInitialBlockDownload() && (GetTime() - nLastRebroadcast > nBroadcastInterval))\n-        {\n-            {\n-                LOCK(cs_vNodes);\n-                BOOST_FOREACH(CNode* pnode, vNodes)\n-                {\n-                    // Periodically clear setAddrKnown to allow refresh broadcasts\n-                    if (nLastRebroadcast)\n-                        pnode->setAddrKnown.clear();\n-\n-                    // Rebroadcast our address\n-                    if (!fNoListen)\n-                    {\n-                        CAddress addr = GetLocalAddress(&pnode->addr);\n-                        if (addr.IsRoutable())\n-                            pnode->PushAddress(addr);\n-                    }\n-                }\n-            }\n-            nLastRebroadcast = GetTime();\n+        if (!IsInitialBlockDownload() && pto->nNextLocalAddrSend < nNow) {\n+            AdvertiseLocal(pto);\n+            pto->nNextLocalAddrSend = PoissonNextSend(nNow, 14 * 60 * 60);\n         }\n \n         //\n         // Message: addr\n         //\n-        if (fSendTrickle)\n-        {\n+        if (pto->nNextAddrSend < nNow) {\n+            pto->nNextAddrSend = PoissonNextSend(nNow, 30);\n             vector<CAddress> vAddr;\n             vAddr.reserve(pto->vAddrToSend.size());\n             BOOST_FOREACH(const CAddress& addr, pto->vAddrToSend)\n             {\n-                // returns true if wasn't already contained in the set\n                 if (pto->setAddrKnown.insert(addr).second)\n                 {\n                     vAddr.push_back(addr);\n@@ -3987,13 +3970,17 @@ bool SendMessages(CNode* pto, bool fSendTrickle)\n                 pto->PushMessage(\"addr\", vAddr);\n         }\n \n-\n         //\n         // Message: inventory\n         //\n         vector<CInv> vInv;\n         vector<CInv> vInvWait;\n         {\n+            bool fSendTrickle = false;\n+            if (pto->nNextInvSend < nNow) {\n+                fSendTrickle = true;\n+                pto->nNextInvSend = PoissonNextSend(nNow, 5);\n+            }\n             LOCK(pto->cs_inventory);\n             vInv.reserve(pto->vInventoryToSend.size());\n             vInvWait.reserve(pto->vInventoryToSend.size());\n@@ -4013,15 +4000,6 @@ bool SendMessages(CNode* pto, bool fSendTrickle)\n                     hashRand = Hash(BEGIN(hashRand), END(hashRand));\n                     bool fTrickleWait = ((hashRand & 3) != 0);\n \n-                    // always trickle our own transactions\n-                    if (!fTrickleWait)\n-                    {\n-                        CWalletTx wtx;\n-                        if (GetTransaction(inv.hash, wtx))\n-                            if (wtx.fFromMe)\n-                                fTrickleWait = true;\n-                    }\n-\n                     if (fTrickleWait)\n                     {\n                         vInvWait.push_back(inv);\n@@ -4050,7 +4028,6 @@ bool SendMessages(CNode* pto, bool fSendTrickle)\n         // Message: getdata\n         //\n         vector<CInv> vGetData;\n-        int64_t nNow = GetTime() * 1000000;\n         CTxDB txdb(\"r\");\n         while (!pto->mapAskFor.empty() && (*pto->mapAskFor.begin()).first <= nNow)\n         {"
      },
      {
        "sha": "5dcf9fc6e7e46c2d6091516de722974833f926c1",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 41,
        "deletions": 0,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dc68eda2468f6116b3fa72aa21e899447eb7c346/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dc68eda2468f6116b3fa72aa21e899447eb7c346/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=dc68eda2468f6116b3fa72aa21e899447eb7c346",
        "patch": "@@ -218,6 +218,44 @@ void SetReachable(enum Network net, bool fFlag)\n         vfReachable[NET_IPV4] = true;\n }\n \n+int GetnScore(const CService& addr)\n+{\n+    LOCK(cs_mapLocalHost);\n+    if (mapLocalHost.count(addr) == LOCAL_NONE)\n+        return 0;\n+    return mapLocalHost[addr].nScore;\n+}\n+\n+\n+// Is our peer's addrLocal potentially useful as an external IP source?\n+bool IsPeerAddrLocalGood(CNode *pnode)\n+{\n+    return fDiscover && pnode->addr.IsRoutable() && pnode->addrLocal.IsRoutable() &&\n+           !IsLimited(pnode->addrLocal.GetNetwork());\n+}\n+\n+// pushes our own address to a peer\n+void AdvertiseLocal(CNode *pnode)\n+{\n+    if (!fNoListen && pnode->fSuccessfullyConnected)\n+    {\n+        CAddress addrLocal = GetLocalAddress(&pnode->addr);\n+        // If discovery is enabled, sometimes give our peer the address it\n+        // tells us that it sees us as in case it has a better idea of our\n+        // address than we do.\n+        if (IsPeerAddrLocalGood(pnode) && (!addrLocal.IsRoutable() ||\n+             GetRand((GetnScore(addrLocal) > LOCAL_MANUAL) ? 8:2) == 0))\n+        {\n+            addrLocal.SetIP(pnode->addrLocal);\n+        }\n+        if (addrLocal.IsRoutable())\n+        {\n+            printf(\"AdvertiseLocal: advertising address %s\\n\", addrLocal.ToString().c_str());\n+            pnode->PushAddress(addrLocal);\n+        }\n+    }\n+}\n+\n // learn a new local address\n bool AddLocal(const CService& addr, int nScore)\n {\n@@ -1874,3 +1912,6 @@ uint64_t CNode::GetTotalBytesSent()\n     LOCK(cs_totalBytesSent);\n     return nTotalBytesSent;\n }\n+int64_t PoissonNextSend(int64_t nNow, int average_interval_seconds) {\n+    return nNow + (int64_t)(log1p(GetRand(1ULL << 48) * -0.0000000000000035527136788 /* -1/2^48 */) * average_interval_seconds * -1000000.0 + 0.5);\n+}"
      },
      {
        "sha": "8d223aded5a386ce5d401dac6f9535b1f72ca892",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dc68eda2468f6116b3fa72aa21e899447eb7c346/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dc68eda2468f6116b3fa72aa21e899447eb7c346/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=dc68eda2468f6116b3fa72aa21e899447eb7c346",
        "patch": "@@ -60,6 +60,9 @@ enum\n     LOCAL_MAX\n };\n \n+\n+bool IsPeerAddrLocalGood(CNode *pnode);\n+void AdvertiseLocal(CNode *pnode);\n void SetLimited(enum Network net, bool fLimited = true);\n bool IsLimited(enum Network net);\n bool IsLimited(const CNetAddr& addr);\n@@ -118,6 +121,9 @@ enum threadId\n };\n \n extern bool fClient;\n+extern bool fDiscover;\n+extern bool fNoListen;\n+\n extern bool fDiscover;\n extern uint64_t nLocalServices;\n extern uint64_t nLocalHostNonce;\n@@ -216,6 +222,9 @@ class CNode\n     bool fGetAddr;\n     std::set<uint256> setKnown;\n     uint256 hashCheckpointKnown; // ppcoin: known sent sync-checkpoint\n+    int64_t nNextAddrSend;\n+    int64_t nNextLocalAddrSend;\n+    int64_t nNextInvSend;\n \n     // inventory based relay\n     mruset<CInv> setInventoryKnown;\n@@ -251,6 +260,9 @@ class CNode\n         pindexLastGetBlocksBegin = 0;\n         hashLastGetBlocksEnd = 0;\n         nStartingHeight = -1;\n+        nNextLocalAddrSend = 0;\n+        nNextAddrSend = 0;\n+        nNextInvSend = 0;\n         fStartSync = false;\n         fGetAddr = false;\n         nMisbehavior = 0;\n@@ -684,4 +696,7 @@ void RelayTransaction(const CTransaction& tx, const uint256& hash);\n void RelayTransaction(const CTransaction& tx, const uint256& hash, const CDataStream& ss);\n \n \n+/** Return a timestamp in the future (in microseconds) for exponentially distributed events. */\n+int64_t PoissonNextSend(int64_t nNow, int average_interval_seconds);\n+\n #endif"
      },
      {
        "sha": "46f9ec61f227c4a2d307443ea9a970b62fa924c7",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dc68eda2468f6116b3fa72aa21e899447eb7c346/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dc68eda2468f6116b3fa72aa21e899447eb7c346/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=dc68eda2468f6116b3fa72aa21e899447eb7c346",
        "patch": "@@ -1315,7 +1315,9 @@ void ShrinkDebugFile()\n // System clock\n int64_t GetTime()\n {\n-    return time(NULL);\n+    int64_t now = time(NULL);\n+    assert(now > 0);\n+    return now;\n }\n \n // Trusted NTP offset or median of NTP samples."
      },
      {
        "sha": "6cf2070a86700bccab4f820f0d58aa73de455899",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 9,
        "deletions": 1,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dc68eda2468f6116b3fa72aa21e899447eb7c346/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dc68eda2468f6116b3fa72aa21e899447eb7c346/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=dc68eda2468f6116b3fa72aa21e899447eb7c346",
        "patch": "@@ -238,7 +238,9 @@ int GetRandInt(int nMax);\n uint64_t GetRand(uint64_t nMax);\n uint256 GetRandHash();\n int64_t GetTime();\n-void SetMockTime(int64_t nMockTimeIn);\n+int64_t GetTimeMillis();\n+int64_t GetTimeMicros();\n+\n int64_t GetAdjustedTime();\n int64_t GetTimeOffset();\n int64_t GetNodesOffset();\n@@ -387,6 +389,12 @@ inline int64_t GetTimeMillis()\n             boost::posix_time::ptime(boost::gregorian::date(1970,1,1))).total_milliseconds();\n }\n \n+inline int64_t GetTimeMicros()\n+{\n+    return (boost::posix_time::microsec_clock::universal_time() -\n+                   boost::posix_time::ptime(boost::gregorian::date(1970,1,1))).total_microseconds();\n+}\n+\n std::string DateTimeStrFormat(const char* pszFormat, int64_t nTime);\n \n static const std::string strTimestampFormat = \"%Y-%m-%d %H:%M:%S UTC\";"
      }
    ]
  },
  {
    "sha": "c8d39b2602cf34af4585e8abbcf1962a8758992e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjOGQzOWIyNjAyY2YzNGFmNDU4NWU4YWJiY2YxOTYyYTg3NTg5OTJl",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-31T15:34:41Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-31T15:34:41Z"
      },
      "message": "Use nOneDay",
      "tree": {
        "sha": "e6c16a56e6e0824c2b6b979a3e210264f425fe11",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e6c16a56e6e0824c2b6b979a3e210264f425fe11"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c8d39b2602cf34af4585e8abbcf1962a8758992e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c8d39b2602cf34af4585e8abbcf1962a8758992e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c8d39b2602cf34af4585e8abbcf1962a8758992e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c8d39b2602cf34af4585e8abbcf1962a8758992e/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "dc68eda2468f6116b3fa72aa21e899447eb7c346",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dc68eda2468f6116b3fa72aa21e899447eb7c346",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/dc68eda2468f6116b3fa72aa21e899447eb7c346"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "c41f43ad3b963d6f422ff109cfb62737bbabdf55",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c8d39b2602cf34af4585e8abbcf1962a8758992e/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c8d39b2602cf34af4585e8abbcf1962a8758992e/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=c8d39b2602cf34af4585e8abbcf1962a8758992e",
        "patch": "@@ -3942,7 +3942,7 @@ bool SendMessages(CNode* pto, bool fSendTrickle)\n         // Address refresh broadcast\n         if (!IsInitialBlockDownload() && pto->nNextLocalAddrSend < nNow) {\n             AdvertiseLocal(pto);\n-            pto->nNextLocalAddrSend = PoissonNextSend(nNow, 14 * 60 * 60);\n+            pto->nNextLocalAddrSend = PoissonNextSend(nNow, nOneDay);\n         }\n \n         //"
      }
    ]
  },
  {
    "sha": "56c1d14225386bcd0e609c0f79bb6e83b4e5cfa4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NmMxZDE0MjI1Mzg2YmNkMGU2MDljMGY3OWJiNmU4M2I0ZTVjZmE0",
    "commit": {
      "author": {
        "name": "svost",
        "email": "ya.nowa@yandex.ru",
        "date": "2016-03-31T15:38:13Z"
      },
      "committer": {
        "name": "svost",
        "email": "ya.nowa@yandex.ru",
        "date": "2016-03-31T15:38:13Z"
      },
      "message": "Fix pointer to local variable logic (V506 PVS Studio)",
      "tree": {
        "sha": "de40c0e3a7085b08b9e393c931e1c2a9409d0231",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/de40c0e3a7085b08b9e393c931e1c2a9409d0231"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/56c1d14225386bcd0e609c0f79bb6e83b4e5cfa4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/56c1d14225386bcd0e609c0f79bb6e83b4e5cfa4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/56c1d14225386bcd0e609c0f79bb6e83b4e5cfa4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/56c1d14225386bcd0e609c0f79bb6e83b4e5cfa4/comments",
    "author": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e659f8d19072233dd9fe59e447da71092f5af5ea",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e659f8d19072233dd9fe59e447da71092f5af5ea",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e659f8d19072233dd9fe59e447da71092f5af5ea"
      }
    ],
    "stats": {
      "total": 21,
      "additions": 2,
      "deletions": 19
    },
    "files": [
      {
        "sha": "4b7bb9a281e785b72d00b66bb434bc17f17ec8b1",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 18,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/56c1d14225386bcd0e609c0f79bb6e83b4e5cfa4/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/56c1d14225386bcd0e609c0f79bb6e83b4e5cfa4/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=56c1d14225386bcd0e609c0f79bb6e83b4e5cfa4",
        "patch": "@@ -445,7 +445,6 @@ CTransaction::GetLegacySigOpCount() const\n     return nSigOps;\n }\n \n-\n int CMerkleTx::SetMerkleBranch(const CBlock* pblock)\n {\n     if (fClient)\n@@ -456,16 +455,6 @@ int CMerkleTx::SetMerkleBranch(const CBlock* pblock)\n     else\n     {\n         CBlock blockTmp;\n-        if (pblock == NULL)\n-        {\n-            // Load the block this tx is in\n-            CTxIndex txindex;\n-            if (!CTxDB(\"r\").ReadTxIndex(GetHash(), txindex))\n-                return 0;\n-            if (!blockTmp.ReadFromDisk(txindex.pos.nFile, txindex.pos.nBlockPos))\n-                return 0;\n-            pblock = &blockTmp;\n-        }\n \n         // Update the tx's hashBlock\n         hashBlock = pblock->GetHash();\n@@ -490,19 +479,13 @@ int CMerkleTx::SetMerkleBranch(const CBlock* pblock)\n     map<uint256, CBlockIndex*>::iterator mi = mapBlockIndex.find(hashBlock);\n     if (mi == mapBlockIndex.end())\n         return 0;\n-    CBlockIndex* pindex = (*mi).second;\n+    const CBlockIndex* pindex = (*mi).second;\n     if (!pindex || !pindex->IsInMainChain())\n         return 0;\n \n     return pindexBest->nHeight - pindex->nHeight + 1;\n }\n \n-\n-\n-\n-\n-\n-\n bool CTransaction::CheckTransaction() const\n {\n     // Basic checks that don't depend on any context"
      },
      {
        "sha": "cb7650cdf2b8c11e71bd68a6011f745df0d52f84",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/56c1d14225386bcd0e609c0f79bb6e83b4e5cfa4/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/56c1d14225386bcd0e609c0f79bb6e83b4e5cfa4/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=56c1d14225386bcd0e609c0f79bb6e83b4e5cfa4",
        "patch": "@@ -794,7 +794,7 @@ class CMerkleTx : public CTransaction\n     )\n \n \n-    int SetMerkleBranch(const CBlock* pblock=NULL);\n+    int SetMerkleBranch(const CBlock* pblock);\n     int GetDepthInMainChain(CBlockIndex* &pindexRet) const;\n     int GetDepthInMainChain() const { CBlockIndex *pindexRet; return GetDepthInMainChain(pindexRet); }\n     bool IsInMainChain() const { return GetDepthInMainChain() > 0; }"
      }
    ]
  },
  {
    "sha": "1023e3e9be96876c86c655bc67b92a87ff35b0d8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxMDIzZTNlOWJlOTY4NzZjODZjNjU1YmM2N2I5MmE4N2ZmMzViMGQ4",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-31T15:42:38Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-31T15:42:38Z"
      },
      "message": "Get rid of fTrickle parameter",
      "tree": {
        "sha": "6b802e686cb2a19cfd00901671c6df331266d2ae",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6b802e686cb2a19cfd00901671c6df331266d2ae"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1023e3e9be96876c86c655bc67b92a87ff35b0d8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1023e3e9be96876c86c655bc67b92a87ff35b0d8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1023e3e9be96876c86c655bc67b92a87ff35b0d8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1023e3e9be96876c86c655bc67b92a87ff35b0d8/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c8d39b2602cf34af4585e8abbcf1962a8758992e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c8d39b2602cf34af4585e8abbcf1962a8758992e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c8d39b2602cf34af4585e8abbcf1962a8758992e"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "67e4d72e1181ca3228c444e275c0791879384e30",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1023e3e9be96876c86c655bc67b92a87ff35b0d8/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1023e3e9be96876c86c655bc67b92a87ff35b0d8/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=1023e3e9be96876c86c655bc67b92a87ff35b0d8",
        "patch": "@@ -3912,7 +3912,7 @@ bool ProcessMessages(CNode* pfrom)\n }\n \n \n-bool SendMessages(CNode* pto, bool fSendTrickle)\n+bool SendMessages(CNode* pto)\n {\n     TRY_LOCK(cs_main, lockMain);\n     if (lockMain) {"
      }
    ]
  },
  {
    "sha": "3f9387d45832cddfbe0dd75a980a4ea26e73abb0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozZjkzODdkNDU4MzJjZGRmYmUwZGQ3NWE5ODBhNGVhMjZlNzNhYmIw",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-31T15:49:53Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-31T15:49:53Z"
      },
      "message": "Remove unused function.",
      "tree": {
        "sha": "47f97692db4b18760ddb2d8db655f83de16ca313",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/47f97692db4b18760ddb2d8db655f83de16ca313"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3f9387d45832cddfbe0dd75a980a4ea26e73abb0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3f9387d45832cddfbe0dd75a980a4ea26e73abb0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3f9387d45832cddfbe0dd75a980a4ea26e73abb0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3f9387d45832cddfbe0dd75a980a4ea26e73abb0/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1023e3e9be96876c86c655bc67b92a87ff35b0d8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1023e3e9be96876c86c655bc67b92a87ff35b0d8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1023e3e9be96876c86c655bc67b92a87ff35b0d8"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 0,
      "deletions": 9
    },
    "files": [
      {
        "sha": "9ef3d649c876eb41cd2aa4df17be1f7695c5429a",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 9,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f9387d45832cddfbe0dd75a980a4ea26e73abb0/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f9387d45832cddfbe0dd75a980a4ea26e73abb0/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=3f9387d45832cddfbe0dd75a980a4ea26e73abb0",
        "patch": "@@ -116,15 +116,6 @@ bool static IsFromMe(CTransaction& tx)\n     return false;\n }\n \n-// get the wallet transaction with the given hash (if it exists)\n-bool static GetTransaction(const uint256& hashTx, CWalletTx& wtx)\n-{\n-    BOOST_FOREACH(CWallet* pwallet, setpwalletRegistered)\n-        if (pwallet->GetTransaction(hashTx,wtx))\n-            return true;\n-    return false;\n-}\n-\n // erases transaction with the given hash from all wallets\n void static EraseFromWallets(uint256 hash)\n {"
      }
    ]
  },
  {
    "sha": "a4bd291267e7cd5ae7ec0dbd21bb6675b96e9325",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNGJkMjkxMjY3ZTdjZDVhZTdlYzBkYmQyMWJiNjY3NWI5NmU5MzI1",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "CryptoManiac@users.noreply.github.com",
        "date": "2016-03-31T16:02:47Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "CryptoManiac@users.noreply.github.com",
        "date": "2016-03-31T16:02:47Z"
      },
      "message": "Merge pull request #296 from svost/patch\n\nMinor fix",
      "tree": {
        "sha": "729086011e34092e8e93a5e370c3d6585b1d3b5f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/729086011e34092e8e93a5e370c3d6585b1d3b5f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a4bd291267e7cd5ae7ec0dbd21bb6675b96e9325",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a4bd291267e7cd5ae7ec0dbd21bb6675b96e9325",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a4bd291267e7cd5ae7ec0dbd21bb6675b96e9325",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a4bd291267e7cd5ae7ec0dbd21bb6675b96e9325/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3f9387d45832cddfbe0dd75a980a4ea26e73abb0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3f9387d45832cddfbe0dd75a980a4ea26e73abb0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3f9387d45832cddfbe0dd75a980a4ea26e73abb0"
      },
      {
        "sha": "56c1d14225386bcd0e609c0f79bb6e83b4e5cfa4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/56c1d14225386bcd0e609c0f79bb6e83b4e5cfa4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/56c1d14225386bcd0e609c0f79bb6e83b4e5cfa4"
      }
    ],
    "stats": {
      "total": 94,
      "additions": 12,
      "deletions": 82
    },
    "files": [
      {
        "sha": "ea2bc570495073155f5adfc0cba93c570b581603",
        "filename": "src/alert.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a4bd291267e7cd5ae7ec0dbd21bb6675b96e9325/src/alert.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a4bd291267e7cd5ae7ec0dbd21bb6675b96e9325/src/alert.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/alert.cpp?ref=a4bd291267e7cd5ae7ec0dbd21bb6675b96e9325",
        "patch": "@@ -79,11 +79,6 @@ std::string CUnsignedAlert::ToString() const\n         strStatusBar.c_str());\n }\n \n-void CUnsignedAlert::print() const\n-{\n-    printf(\"%s\", ToString().c_str());\n-}\n-\n void CAlert::SetNull()\n {\n     CUnsignedAlert::SetNull();"
      },
      {
        "sha": "c417842379e98141b1390e554a1de75034481760",
        "filename": "src/alert.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a4bd291267e7cd5ae7ec0dbd21bb6675b96e9325/src/alert.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a4bd291267e7cd5ae7ec0dbd21bb6675b96e9325/src/alert.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/alert.h?ref=a4bd291267e7cd5ae7ec0dbd21bb6675b96e9325",
        "patch": "@@ -61,7 +61,6 @@ class CUnsignedAlert\n     void SetNull();\n \n     std::string ToString() const;\n-    void print() const;\n };\n \n /** An alert is a combination of a serialized CUnsignedAlert and a signature. */"
      },
      {
        "sha": "a2b9731e0a62d8a0e2eb73c3fbc6456ed2a2ef50",
        "filename": "src/checkpoints.h",
        "status": "modified",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a4bd291267e7cd5ae7ec0dbd21bb6675b96e9325/src/checkpoints.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a4bd291267e7cd5ae7ec0dbd21bb6675b96e9325/src/checkpoints.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/checkpoints.h?ref=a4bd291267e7cd5ae7ec0dbd21bb6675b96e9325",
        "patch": "@@ -100,11 +100,6 @@ class CUnsignedSyncCheckpoint\n             nVersion,\n             hashCheckpoint.ToString().c_str());\n     }\n-\n-    void print() const\n-    {\n-        printf(\"%s\", ToString().c_str());\n-    }\n };\n \n class CSyncCheckpoint : public CUnsignedSyncCheckpoint"
      },
      {
        "sha": "07bb2b0115f052f28bb4350692669f07c601cfaf",
        "filename": "src/db.h",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a4bd291267e7cd5ae7ec0dbd21bb6675b96e9325/src/db.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a4bd291267e7cd5ae7ec0dbd21bb6675b96e9325/src/db.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/db.h?ref=a4bd291267e7cd5ae7ec0dbd21bb6675b96e9325",
        "patch": "@@ -137,8 +137,7 @@ class CDB\n             CDataStream ssValue((char*)datValue.get_data(), (char*)datValue.get_data() + datValue.get_size(), SER_DISK, CLIENT_VERSION);\n             ssValue >> value;\n         }\n-        catch (std::exception &e) {\n-            (void)e;\n+        catch (const std::exception&) {\n             return false;\n         }\n "
      },
      {
        "sha": "08013119d8d0205ea36db17a8215f43dcac276c5",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a4bd291267e7cd5ae7ec0dbd21bb6675b96e9325/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a4bd291267e7cd5ae7ec0dbd21bb6675b96e9325/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=a4bd291267e7cd5ae7ec0dbd21bb6675b96e9325",
        "patch": "@@ -778,8 +778,7 @@ bool AppInit2()\n                     strLoadError = _(\"Error loading block database\");\n                     break;\n                 }\n-            } catch(std::exception &e) {\n-                (void)e;\n+            } catch(const std::exception&) {\n                 strLoadError = _(\"Error opening block database\");\n                 break;\n             }"
      },
      {
        "sha": "502aa15e0a18af0d18227e45ce97cb70543f5ee7",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 18,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a4bd291267e7cd5ae7ec0dbd21bb6675b96e9325/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a4bd291267e7cd5ae7ec0dbd21bb6675b96e9325/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=a4bd291267e7cd5ae7ec0dbd21bb6675b96e9325",
        "patch": "@@ -435,7 +435,6 @@ CTransaction::GetLegacySigOpCount() const\n     return nSigOps;\n }\n \n-\n int CMerkleTx::SetMerkleBranch(const CBlock* pblock)\n {\n     if (fClient)\n@@ -446,16 +445,6 @@ int CMerkleTx::SetMerkleBranch(const CBlock* pblock)\n     else\n     {\n         CBlock blockTmp;\n-        if (pblock == NULL)\n-        {\n-            // Load the block this tx is in\n-            CTxIndex txindex;\n-            if (!CTxDB(\"r\").ReadTxIndex(GetHash(), txindex))\n-                return 0;\n-            if (!blockTmp.ReadFromDisk(txindex.pos.nFile, txindex.pos.nBlockPos))\n-                return 0;\n-            pblock = &blockTmp;\n-        }\n \n         // Update the tx's hashBlock\n         hashBlock = pblock->GetHash();\n@@ -480,19 +469,13 @@ int CMerkleTx::SetMerkleBranch(const CBlock* pblock)\n     map<uint256, CBlockIndex*>::iterator mi = mapBlockIndex.find(hashBlock);\n     if (mi == mapBlockIndex.end())\n         return 0;\n-    CBlockIndex* pindex = (*mi).second;\n+    const CBlockIndex* pindex = (*mi).second;\n     if (!pindex || !pindex->IsInMainChain())\n         return 0;\n \n     return pindexBest->nHeight - pindex->nHeight + 1;\n }\n \n-\n-\n-\n-\n-\n-\n bool CTransaction::CheckTransaction() const\n {\n     // Basic checks that don't depend on any context"
      },
      {
        "sha": "cb7650cdf2b8c11e71bd68a6011f745df0d52f84",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 3,
        "deletions": 5,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a4bd291267e7cd5ae7ec0dbd21bb6675b96e9325/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a4bd291267e7cd5ae7ec0dbd21bb6675b96e9325/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=a4bd291267e7cd5ae7ec0dbd21bb6675b96e9325",
        "patch": "@@ -620,8 +620,7 @@ class CTransaction\n         try {\n             filein >> *this;\n         }\n-        catch (std::exception &e) {\n-            (void)e;\n+        catch (const std::exception&) {\n             return error(\"%s() : deserialize or I/O error\", BOOST_CURRENT_FUNCTION);\n         }\n \n@@ -795,7 +794,7 @@ class CMerkleTx : public CTransaction\n     )\n \n \n-    int SetMerkleBranch(const CBlock* pblock=NULL);\n+    int SetMerkleBranch(const CBlock* pblock);\n     int GetDepthInMainChain(CBlockIndex* &pindexRet) const;\n     int GetDepthInMainChain() const { CBlockIndex *pindexRet; return GetDepthInMainChain(pindexRet); }\n     bool IsInMainChain() const { return GetDepthInMainChain() > 0; }\n@@ -1096,8 +1095,7 @@ class CBlock\n         try {\n             filein >> *this;\n         }\n-        catch (std::exception &e) {\n-            (void)e;\n+        catch (const std::exception&) {\n             return error(\"%s() : deserialize or I/O error\", BOOST_CURRENT_FUNCTION);\n         }\n "
      },
      {
        "sha": "aae9589b92937585b8d001786a2fec434f909e3a",
        "filename": "src/miner.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 8,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a4bd291267e7cd5ae7ec0dbd21bb6675b96e9325/src/miner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a4bd291267e7cd5ae7ec0dbd21bb6675b96e9325/src/miner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.cpp?ref=a4bd291267e7cd5ae7ec0dbd21bb6675b96e9325",
        "patch": "@@ -70,14 +70,6 @@ class COrphan\n         ptx = ptxIn;\n         dPriority = dFeePerKb = 0;\n     }\n-\n-    void print() const\n-    {\n-        printf(\"COrphan(hash=%s, dPriority=%.1f, dFeePerKb=%.1f)\\n\",\n-               ptx->GetHash().ToString().substr(0,10).c_str(), dPriority, dFeePerKb);\n-        BOOST_FOREACH(uint256 hash, setDependsOn)\n-            printf(\"   setDependsOn %s\\n\", hash.ToString().substr(0,10).c_str());\n-    }\n };\n \n "
      },
      {
        "sha": "b68a43a2fa353cdc569e196f5dc448b382c7d1ae",
        "filename": "src/netbase.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 10,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a4bd291267e7cd5ae7ec0dbd21bb6675b96e9325/src/netbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a4bd291267e7cd5ae7ec0dbd21bb6675b96e9325/src/netbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.cpp?ref=a4bd291267e7cd5ae7ec0dbd21bb6675b96e9325",
        "patch": "@@ -923,11 +923,6 @@ uint64_t CNetAddr::GetHash() const\n     return nRet;\n }\n \n-void CNetAddr::print() const\n-{\n-    printf(\"CNetAddr(%s)\\n\", ToString().c_str());\n-}\n-\n // private extensions to enum Network, only returned by GetExtNetwork,\n // and only used in GetReachabilityFrom\n static const int NET_UNKNOWN = NET_MAX + 0;\n@@ -1170,11 +1165,6 @@ std::string CService::ToString() const\n     return ToStringIPPort();\n }\n \n-void CService::print() const\n-{\n-    printf(\"CService(%s)\\n\", ToString().c_str());\n-}\n-\n void CService::SetPort(unsigned short portIn)\n {\n     port = portIn;"
      },
      {
        "sha": "95f93e97d17b249c4226ce9d6b2983f1623f882d",
        "filename": "src/netbase.h",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a4bd291267e7cd5ae7ec0dbd21bb6675b96e9325/src/netbase.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a4bd291267e7cd5ae7ec0dbd21bb6675b96e9325/src/netbase.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.h?ref=a4bd291267e7cd5ae7ec0dbd21bb6675b96e9325",
        "patch": "@@ -71,7 +71,6 @@ class CNetAddr\n         bool GetInAddr(struct in_addr* pipv4Addr) const;\n         std::vector<unsigned char> GetGroup() const;\n         int GetReachabilityFrom(const CNetAddr *paddrPartner = NULL) const;\n-        void print() const;\n \n #ifdef USE_IPV6\n         CNetAddr(const struct in6_addr& pipv6Addr);\n@@ -115,7 +114,6 @@ class CService : public CNetAddr\n         std::string ToString() const;\n         std::string ToStringPort() const;\n         std::string ToStringIPPort() const;\n-        void print() const;\n \n #ifdef USE_IPV6\n         CService(const struct in6_addr& ipv6Addr, uint16_t port);"
      },
      {
        "sha": "c9b0086133f2aaeb02c1c7f4eafbfb9a1db8cf22",
        "filename": "src/protocol.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 7,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a4bd291267e7cd5ae7ec0dbd21bb6675b96e9325/src/protocol.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a4bd291267e7cd5ae7ec0dbd21bb6675b96e9325/src/protocol.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/protocol.cpp?ref=a4bd291267e7cd5ae7ec0dbd21bb6675b96e9325",
        "patch": "@@ -103,10 +103,4 @@ const char* CInv::GetCommand() const\n std::string CInv::ToString() const\n {\n     return strprintf(\"%s %s\", GetCommand(), hash.ToString().substr(0,20).c_str());\n-}\n-\n-void CInv::print() const\n-{\n-    printf(\"CInv(%s)\\n\", ToString().c_str());\n-}\n-\n+}\n\\ No newline at end of file"
      },
      {
        "sha": "fcc8c9e06f650a97c6305e2d06597e401aafddbf",
        "filename": "src/protocol.h",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a4bd291267e7cd5ae7ec0dbd21bb6675b96e9325/src/protocol.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a4bd291267e7cd5ae7ec0dbd21bb6675b96e9325/src/protocol.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/protocol.h?ref=a4bd291267e7cd5ae7ec0dbd21bb6675b96e9325",
        "patch": "@@ -93,8 +93,6 @@ class CAddress : public CService\n              READWRITE(*pip);\n             )\n \n-        void print() const;\n-\n     // TODO: make private (improves encapsulation)\n     public:\n         uint64_t nServices;\n@@ -125,7 +123,6 @@ class CInv\n         bool IsKnownType() const;\n         const char* GetCommand() const;\n         std::string ToString() const;\n-        void print() const;\n \n     // TODO: make private (improves encapsulation)\n     public:"
      },
      {
        "sha": "c804c99f30e1077f3ceeec9c50b531e601f8d27a",
        "filename": "src/qt/multisigdialog.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 6,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a4bd291267e7cd5ae7ec0dbd21bb6675b96e9325/src/qt/multisigdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a4bd291267e7cd5ae7ec0dbd21bb6675b96e9325/src/qt/multisigdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/multisigdialog.cpp?ref=a4bd291267e7cd5ae7ec0dbd21bb6675b96e9325",
        "patch": "@@ -347,9 +347,8 @@ void MultisigDialog::on_transaction_textChanged()\n     {\n         ss >> tx;\n     }\n-    catch(std::exception &e)\n+    catch(const std::exception&)\n     {\n-        (void)e;\n         return;\n     }\n \n@@ -418,9 +417,8 @@ void MultisigDialog::on_signTransactionButton_clicked()\n     {\n         ss >> tx;\n     }\n-    catch(std::exception &e)\n+    catch(const std::exception&)\n     {\n-        (void)e;\n         return;\n     }\n     CTransaction mergedTx(tx);\n@@ -538,9 +536,8 @@ void MultisigDialog::on_sendTransactionButton_clicked()\n     {\n         ssData >> tx;\n     }\n-    catch(std::exception &e)\n+    catch(const std::exception&)\n     {\n-        (void)e;\n         return;\n     }\n     uint256 txHash = tx.GetHash();"
      },
      {
        "sha": "07c708825159759952c3281a389f2ddd1dc8b993",
        "filename": "src/txdb-leveldb.h",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a4bd291267e7cd5ae7ec0dbd21bb6675b96e9325/src/txdb-leveldb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a4bd291267e7cd5ae7ec0dbd21bb6675b96e9325/src/txdb-leveldb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txdb-leveldb.h?ref=a4bd291267e7cd5ae7ec0dbd21bb6675b96e9325",
        "patch": "@@ -91,8 +91,7 @@ class CTxDB\n                                 SER_DISK, CLIENT_VERSION);\n             ssValue >> value;\n         }\n-        catch (std::exception &e) {\n-            (void)e;\n+        catch (const std::exception&) {\n             return false;\n         }\n         return true;"
      },
      {
        "sha": "34540fd7f455018934456a8082c937f111345e59",
        "filename": "src/wallet.h",
        "status": "modified",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a4bd291267e7cd5ae7ec0dbd21bb6675b96e9325/src/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a4bd291267e7cd5ae7ec0dbd21bb6675b96e9325/src/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.h?ref=a4bd291267e7cd5ae7ec0dbd21bb6675b96e9325",
        "patch": "@@ -891,11 +891,6 @@ class COutput\n     {\n         return strprintf(\"COutput(%s, %d, %d, %d) [%s]\", tx->GetHash().ToString().substr(0,10).c_str(), i, fSpendable, nDepth, FormatMoney(tx->vout[i].nValue).c_str());\n     }\n-\n-    void print() const\n-    {\n-        printf(\"%s\\n\", ToString().c_str());\n-    }\n };\n \n "
      },
      {
        "sha": "3880a93b7844e2ce64bdd858fa2618bc62bdaac3",
        "filename": "src/walletdb.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a4bd291267e7cd5ae7ec0dbd21bb6675b96e9325/src/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a4bd291267e7cd5ae7ec0dbd21bb6675b96e9325/src/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/walletdb.cpp?ref=a4bd291267e7cd5ae7ec0dbd21bb6675b96e9325",
        "patch": "@@ -654,7 +654,7 @@ DBErrors CWalletDB::FindWalletTx(CWallet* pwallet, vector<uint256>& vTxHash)\n         }\n         pcursor->close();\n     }\n-    catch (boost::thread_interrupted) {\n+    catch (const boost::thread_interrupted&) {\n         throw;\n     }\n     catch (...) {"
      }
    ]
  },
  {
    "sha": "1ecb2db25596a2538aa6b5121c4bc66713bdca25",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxZWNiMmRiMjU1OTZhMjUzOGFhNmI1MTIxYzRiYzY2NzEzYmRjYTI1",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-31T17:18:13Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-31T17:18:13Z"
      },
      "message": "Get rid of fTrickle parameter.",
      "tree": {
        "sha": "10e6e52cd3805a4c3c38675a343a288b485dcf25",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/10e6e52cd3805a4c3c38675a343a288b485dcf25"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1ecb2db25596a2538aa6b5121c4bc66713bdca25",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1ecb2db25596a2538aa6b5121c4bc66713bdca25",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1ecb2db25596a2538aa6b5121c4bc66713bdca25",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1ecb2db25596a2538aa6b5121c4bc66713bdca25/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3f9387d45832cddfbe0dd75a980a4ea26e73abb0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3f9387d45832cddfbe0dd75a980a4ea26e73abb0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3f9387d45832cddfbe0dd75a980a4ea26e73abb0"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 2,
      "deletions": 5
    },
    "files": [
      {
        "sha": "64e0f0fa1fe8e0678a2db98a731b070756130ecf",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1ecb2db25596a2538aa6b5121c4bc66713bdca25/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1ecb2db25596a2538aa6b5121c4bc66713bdca25/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=1ecb2db25596a2538aa6b5121c4bc66713bdca25",
        "patch": "@@ -113,7 +113,7 @@ bool LoadBlockIndex(bool fAllowNew=true);\n void PrintBlockTree();\n CBlockIndex* FindBlockByHeight(int nHeight);\n bool ProcessMessages(CNode* pfrom);\n-bool SendMessages(CNode* pto, bool fSendTrickle);\n+bool SendMessages(CNode* pto);\n bool LoadExternalBlockFile(FILE* fileIn);\n \n // Run an instance of the script checking thread"
      },
      {
        "sha": "af5e01a201f19d6332df94f7e34f6104369ff54a",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 4,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1ecb2db25596a2538aa6b5121c4bc66713bdca25/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1ecb2db25596a2538aa6b5121c4bc66713bdca25/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=1ecb2db25596a2538aa6b5121c4bc66713bdca25",
        "patch": "@@ -1517,9 +1517,6 @@ void ThreadMessageHandler2(void* parg)\n             StartSync(vNodesCopy);\n \n         // Poll the connected nodes for messages\n-        CNode* pnodeTrickle = NULL;\n-        if (!vNodesCopy.empty())\n-            pnodeTrickle = vNodesCopy[GetRand(vNodesCopy.size())];\n         BOOST_FOREACH(CNode* pnode, vNodesCopy)\n         {\n             // Receive messages\n@@ -1535,7 +1532,7 @@ void ThreadMessageHandler2(void* parg)\n             {\n                 TRY_LOCK(pnode->cs_vSend, lockSend);\n                 if (lockSend)\n-                    SendMessages(pnode, pnode == pnodeTrickle);\n+                    SendMessages(pnode);\n             }\n             if (fShutdown)\n                 return;"
      }
    ]
  },
  {
    "sha": "e1d33d5e29bf3c8839266e24ab61b3e9c69b154e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplMWQzM2Q1ZTI5YmYzYzg4MzkyNjZlMjRhYjYxYjNlOWM2OWIxNTRl",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-31T17:18:38Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-31T17:18:38Z"
      },
      "message": "Merge branch 'master' of github.com:novacoin-project/novacoin",
      "tree": {
        "sha": "12b7c493f8d5b457d06af6393b930fe65dd86157",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/12b7c493f8d5b457d06af6393b930fe65dd86157"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e1d33d5e29bf3c8839266e24ab61b3e9c69b154e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e1d33d5e29bf3c8839266e24ab61b3e9c69b154e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e1d33d5e29bf3c8839266e24ab61b3e9c69b154e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e1d33d5e29bf3c8839266e24ab61b3e9c69b154e/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1ecb2db25596a2538aa6b5121c4bc66713bdca25",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1ecb2db25596a2538aa6b5121c4bc66713bdca25",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1ecb2db25596a2538aa6b5121c4bc66713bdca25"
      },
      {
        "sha": "a4bd291267e7cd5ae7ec0dbd21bb6675b96e9325",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a4bd291267e7cd5ae7ec0dbd21bb6675b96e9325",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a4bd291267e7cd5ae7ec0dbd21bb6675b96e9325"
      }
    ],
    "stats": {
      "total": 94,
      "additions": 12,
      "deletions": 82
    },
    "files": [
      {
        "sha": "ea2bc570495073155f5adfc0cba93c570b581603",
        "filename": "src/alert.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e1d33d5e29bf3c8839266e24ab61b3e9c69b154e/src/alert.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e1d33d5e29bf3c8839266e24ab61b3e9c69b154e/src/alert.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/alert.cpp?ref=e1d33d5e29bf3c8839266e24ab61b3e9c69b154e",
        "patch": "@@ -79,11 +79,6 @@ std::string CUnsignedAlert::ToString() const\n         strStatusBar.c_str());\n }\n \n-void CUnsignedAlert::print() const\n-{\n-    printf(\"%s\", ToString().c_str());\n-}\n-\n void CAlert::SetNull()\n {\n     CUnsignedAlert::SetNull();"
      },
      {
        "sha": "c417842379e98141b1390e554a1de75034481760",
        "filename": "src/alert.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e1d33d5e29bf3c8839266e24ab61b3e9c69b154e/src/alert.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e1d33d5e29bf3c8839266e24ab61b3e9c69b154e/src/alert.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/alert.h?ref=e1d33d5e29bf3c8839266e24ab61b3e9c69b154e",
        "patch": "@@ -61,7 +61,6 @@ class CUnsignedAlert\n     void SetNull();\n \n     std::string ToString() const;\n-    void print() const;\n };\n \n /** An alert is a combination of a serialized CUnsignedAlert and a signature. */"
      },
      {
        "sha": "a2b9731e0a62d8a0e2eb73c3fbc6456ed2a2ef50",
        "filename": "src/checkpoints.h",
        "status": "modified",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e1d33d5e29bf3c8839266e24ab61b3e9c69b154e/src/checkpoints.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e1d33d5e29bf3c8839266e24ab61b3e9c69b154e/src/checkpoints.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/checkpoints.h?ref=e1d33d5e29bf3c8839266e24ab61b3e9c69b154e",
        "patch": "@@ -100,11 +100,6 @@ class CUnsignedSyncCheckpoint\n             nVersion,\n             hashCheckpoint.ToString().c_str());\n     }\n-\n-    void print() const\n-    {\n-        printf(\"%s\", ToString().c_str());\n-    }\n };\n \n class CSyncCheckpoint : public CUnsignedSyncCheckpoint"
      },
      {
        "sha": "07bb2b0115f052f28bb4350692669f07c601cfaf",
        "filename": "src/db.h",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e1d33d5e29bf3c8839266e24ab61b3e9c69b154e/src/db.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e1d33d5e29bf3c8839266e24ab61b3e9c69b154e/src/db.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/db.h?ref=e1d33d5e29bf3c8839266e24ab61b3e9c69b154e",
        "patch": "@@ -137,8 +137,7 @@ class CDB\n             CDataStream ssValue((char*)datValue.get_data(), (char*)datValue.get_data() + datValue.get_size(), SER_DISK, CLIENT_VERSION);\n             ssValue >> value;\n         }\n-        catch (std::exception &e) {\n-            (void)e;\n+        catch (const std::exception&) {\n             return false;\n         }\n "
      },
      {
        "sha": "08013119d8d0205ea36db17a8215f43dcac276c5",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e1d33d5e29bf3c8839266e24ab61b3e9c69b154e/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e1d33d5e29bf3c8839266e24ab61b3e9c69b154e/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=e1d33d5e29bf3c8839266e24ab61b3e9c69b154e",
        "patch": "@@ -778,8 +778,7 @@ bool AppInit2()\n                     strLoadError = _(\"Error loading block database\");\n                     break;\n                 }\n-            } catch(std::exception &e) {\n-                (void)e;\n+            } catch(const std::exception&) {\n                 strLoadError = _(\"Error opening block database\");\n                 break;\n             }"
      },
      {
        "sha": "502aa15e0a18af0d18227e45ce97cb70543f5ee7",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 18,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e1d33d5e29bf3c8839266e24ab61b3e9c69b154e/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e1d33d5e29bf3c8839266e24ab61b3e9c69b154e/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=e1d33d5e29bf3c8839266e24ab61b3e9c69b154e",
        "patch": "@@ -435,7 +435,6 @@ CTransaction::GetLegacySigOpCount() const\n     return nSigOps;\n }\n \n-\n int CMerkleTx::SetMerkleBranch(const CBlock* pblock)\n {\n     if (fClient)\n@@ -446,16 +445,6 @@ int CMerkleTx::SetMerkleBranch(const CBlock* pblock)\n     else\n     {\n         CBlock blockTmp;\n-        if (pblock == NULL)\n-        {\n-            // Load the block this tx is in\n-            CTxIndex txindex;\n-            if (!CTxDB(\"r\").ReadTxIndex(GetHash(), txindex))\n-                return 0;\n-            if (!blockTmp.ReadFromDisk(txindex.pos.nFile, txindex.pos.nBlockPos))\n-                return 0;\n-            pblock = &blockTmp;\n-        }\n \n         // Update the tx's hashBlock\n         hashBlock = pblock->GetHash();\n@@ -480,19 +469,13 @@ int CMerkleTx::SetMerkleBranch(const CBlock* pblock)\n     map<uint256, CBlockIndex*>::iterator mi = mapBlockIndex.find(hashBlock);\n     if (mi == mapBlockIndex.end())\n         return 0;\n-    CBlockIndex* pindex = (*mi).second;\n+    const CBlockIndex* pindex = (*mi).second;\n     if (!pindex || !pindex->IsInMainChain())\n         return 0;\n \n     return pindexBest->nHeight - pindex->nHeight + 1;\n }\n \n-\n-\n-\n-\n-\n-\n bool CTransaction::CheckTransaction() const\n {\n     // Basic checks that don't depend on any context"
      },
      {
        "sha": "0a9a663e5b2ec8a18a742aa00068c70dfc1e6dab",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 3,
        "deletions": 5,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e1d33d5e29bf3c8839266e24ab61b3e9c69b154e/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e1d33d5e29bf3c8839266e24ab61b3e9c69b154e/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=e1d33d5e29bf3c8839266e24ab61b3e9c69b154e",
        "patch": "@@ -620,8 +620,7 @@ class CTransaction\n         try {\n             filein >> *this;\n         }\n-        catch (std::exception &e) {\n-            (void)e;\n+        catch (const std::exception&) {\n             return error(\"%s() : deserialize or I/O error\", BOOST_CURRENT_FUNCTION);\n         }\n \n@@ -795,7 +794,7 @@ class CMerkleTx : public CTransaction\n     )\n \n \n-    int SetMerkleBranch(const CBlock* pblock=NULL);\n+    int SetMerkleBranch(const CBlock* pblock);\n     int GetDepthInMainChain(CBlockIndex* &pindexRet) const;\n     int GetDepthInMainChain() const { CBlockIndex *pindexRet; return GetDepthInMainChain(pindexRet); }\n     bool IsInMainChain() const { return GetDepthInMainChain() > 0; }\n@@ -1096,8 +1095,7 @@ class CBlock\n         try {\n             filein >> *this;\n         }\n-        catch (std::exception &e) {\n-            (void)e;\n+        catch (const std::exception&) {\n             return error(\"%s() : deserialize or I/O error\", BOOST_CURRENT_FUNCTION);\n         }\n "
      },
      {
        "sha": "aae9589b92937585b8d001786a2fec434f909e3a",
        "filename": "src/miner.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 8,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e1d33d5e29bf3c8839266e24ab61b3e9c69b154e/src/miner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e1d33d5e29bf3c8839266e24ab61b3e9c69b154e/src/miner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.cpp?ref=e1d33d5e29bf3c8839266e24ab61b3e9c69b154e",
        "patch": "@@ -70,14 +70,6 @@ class COrphan\n         ptx = ptxIn;\n         dPriority = dFeePerKb = 0;\n     }\n-\n-    void print() const\n-    {\n-        printf(\"COrphan(hash=%s, dPriority=%.1f, dFeePerKb=%.1f)\\n\",\n-               ptx->GetHash().ToString().substr(0,10).c_str(), dPriority, dFeePerKb);\n-        BOOST_FOREACH(uint256 hash, setDependsOn)\n-            printf(\"   setDependsOn %s\\n\", hash.ToString().substr(0,10).c_str());\n-    }\n };\n \n "
      },
      {
        "sha": "b68a43a2fa353cdc569e196f5dc448b382c7d1ae",
        "filename": "src/netbase.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 10,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e1d33d5e29bf3c8839266e24ab61b3e9c69b154e/src/netbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e1d33d5e29bf3c8839266e24ab61b3e9c69b154e/src/netbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.cpp?ref=e1d33d5e29bf3c8839266e24ab61b3e9c69b154e",
        "patch": "@@ -923,11 +923,6 @@ uint64_t CNetAddr::GetHash() const\n     return nRet;\n }\n \n-void CNetAddr::print() const\n-{\n-    printf(\"CNetAddr(%s)\\n\", ToString().c_str());\n-}\n-\n // private extensions to enum Network, only returned by GetExtNetwork,\n // and only used in GetReachabilityFrom\n static const int NET_UNKNOWN = NET_MAX + 0;\n@@ -1170,11 +1165,6 @@ std::string CService::ToString() const\n     return ToStringIPPort();\n }\n \n-void CService::print() const\n-{\n-    printf(\"CService(%s)\\n\", ToString().c_str());\n-}\n-\n void CService::SetPort(unsigned short portIn)\n {\n     port = portIn;"
      },
      {
        "sha": "95f93e97d17b249c4226ce9d6b2983f1623f882d",
        "filename": "src/netbase.h",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e1d33d5e29bf3c8839266e24ab61b3e9c69b154e/src/netbase.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e1d33d5e29bf3c8839266e24ab61b3e9c69b154e/src/netbase.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.h?ref=e1d33d5e29bf3c8839266e24ab61b3e9c69b154e",
        "patch": "@@ -71,7 +71,6 @@ class CNetAddr\n         bool GetInAddr(struct in_addr* pipv4Addr) const;\n         std::vector<unsigned char> GetGroup() const;\n         int GetReachabilityFrom(const CNetAddr *paddrPartner = NULL) const;\n-        void print() const;\n \n #ifdef USE_IPV6\n         CNetAddr(const struct in6_addr& pipv6Addr);\n@@ -115,7 +114,6 @@ class CService : public CNetAddr\n         std::string ToString() const;\n         std::string ToStringPort() const;\n         std::string ToStringIPPort() const;\n-        void print() const;\n \n #ifdef USE_IPV6\n         CService(const struct in6_addr& ipv6Addr, uint16_t port);"
      },
      {
        "sha": "c9b0086133f2aaeb02c1c7f4eafbfb9a1db8cf22",
        "filename": "src/protocol.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 7,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e1d33d5e29bf3c8839266e24ab61b3e9c69b154e/src/protocol.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e1d33d5e29bf3c8839266e24ab61b3e9c69b154e/src/protocol.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/protocol.cpp?ref=e1d33d5e29bf3c8839266e24ab61b3e9c69b154e",
        "patch": "@@ -103,10 +103,4 @@ const char* CInv::GetCommand() const\n std::string CInv::ToString() const\n {\n     return strprintf(\"%s %s\", GetCommand(), hash.ToString().substr(0,20).c_str());\n-}\n-\n-void CInv::print() const\n-{\n-    printf(\"CInv(%s)\\n\", ToString().c_str());\n-}\n-\n+}\n\\ No newline at end of file"
      },
      {
        "sha": "fcc8c9e06f650a97c6305e2d06597e401aafddbf",
        "filename": "src/protocol.h",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e1d33d5e29bf3c8839266e24ab61b3e9c69b154e/src/protocol.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e1d33d5e29bf3c8839266e24ab61b3e9c69b154e/src/protocol.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/protocol.h?ref=e1d33d5e29bf3c8839266e24ab61b3e9c69b154e",
        "patch": "@@ -93,8 +93,6 @@ class CAddress : public CService\n              READWRITE(*pip);\n             )\n \n-        void print() const;\n-\n     // TODO: make private (improves encapsulation)\n     public:\n         uint64_t nServices;\n@@ -125,7 +123,6 @@ class CInv\n         bool IsKnownType() const;\n         const char* GetCommand() const;\n         std::string ToString() const;\n-        void print() const;\n \n     // TODO: make private (improves encapsulation)\n     public:"
      },
      {
        "sha": "c804c99f30e1077f3ceeec9c50b531e601f8d27a",
        "filename": "src/qt/multisigdialog.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 6,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e1d33d5e29bf3c8839266e24ab61b3e9c69b154e/src/qt/multisigdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e1d33d5e29bf3c8839266e24ab61b3e9c69b154e/src/qt/multisigdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/multisigdialog.cpp?ref=e1d33d5e29bf3c8839266e24ab61b3e9c69b154e",
        "patch": "@@ -347,9 +347,8 @@ void MultisigDialog::on_transaction_textChanged()\n     {\n         ss >> tx;\n     }\n-    catch(std::exception &e)\n+    catch(const std::exception&)\n     {\n-        (void)e;\n         return;\n     }\n \n@@ -418,9 +417,8 @@ void MultisigDialog::on_signTransactionButton_clicked()\n     {\n         ss >> tx;\n     }\n-    catch(std::exception &e)\n+    catch(const std::exception&)\n     {\n-        (void)e;\n         return;\n     }\n     CTransaction mergedTx(tx);\n@@ -538,9 +536,8 @@ void MultisigDialog::on_sendTransactionButton_clicked()\n     {\n         ssData >> tx;\n     }\n-    catch(std::exception &e)\n+    catch(const std::exception&)\n     {\n-        (void)e;\n         return;\n     }\n     uint256 txHash = tx.GetHash();"
      },
      {
        "sha": "07c708825159759952c3281a389f2ddd1dc8b993",
        "filename": "src/txdb-leveldb.h",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e1d33d5e29bf3c8839266e24ab61b3e9c69b154e/src/txdb-leveldb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e1d33d5e29bf3c8839266e24ab61b3e9c69b154e/src/txdb-leveldb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txdb-leveldb.h?ref=e1d33d5e29bf3c8839266e24ab61b3e9c69b154e",
        "patch": "@@ -91,8 +91,7 @@ class CTxDB\n                                 SER_DISK, CLIENT_VERSION);\n             ssValue >> value;\n         }\n-        catch (std::exception &e) {\n-            (void)e;\n+        catch (const std::exception&) {\n             return false;\n         }\n         return true;"
      },
      {
        "sha": "34540fd7f455018934456a8082c937f111345e59",
        "filename": "src/wallet.h",
        "status": "modified",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e1d33d5e29bf3c8839266e24ab61b3e9c69b154e/src/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e1d33d5e29bf3c8839266e24ab61b3e9c69b154e/src/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.h?ref=e1d33d5e29bf3c8839266e24ab61b3e9c69b154e",
        "patch": "@@ -891,11 +891,6 @@ class COutput\n     {\n         return strprintf(\"COutput(%s, %d, %d, %d) [%s]\", tx->GetHash().ToString().substr(0,10).c_str(), i, fSpendable, nDepth, FormatMoney(tx->vout[i].nValue).c_str());\n     }\n-\n-    void print() const\n-    {\n-        printf(\"%s\\n\", ToString().c_str());\n-    }\n };\n \n "
      },
      {
        "sha": "3880a93b7844e2ce64bdd858fa2618bc62bdaac3",
        "filename": "src/walletdb.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e1d33d5e29bf3c8839266e24ab61b3e9c69b154e/src/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e1d33d5e29bf3c8839266e24ab61b3e9c69b154e/src/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/walletdb.cpp?ref=e1d33d5e29bf3c8839266e24ab61b3e9c69b154e",
        "patch": "@@ -654,7 +654,7 @@ DBErrors CWalletDB::FindWalletTx(CWallet* pwallet, vector<uint256>& vTxHash)\n         }\n         pcursor->close();\n     }\n-    catch (boost::thread_interrupted) {\n+    catch (const boost::thread_interrupted&) {\n         throw;\n     }\n     catch (...) {"
      }
    ]
  },
  {
    "sha": "8e5adbbb79510281fb65ef15e6ca9e637e49213a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4ZTVhZGJiYjc5NTEwMjgxZmI2NWVmMTVlNmNhOWU2MzdlNDkyMTNh",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-31T20:01:15Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-31T20:01:15Z"
      },
      "message": "Revert 2d6690cc0c0e2525996856c392566133d1b2de50",
      "tree": {
        "sha": "86f822c4ad110017f4d634452647b8fe3c63986b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/86f822c4ad110017f4d634452647b8fe3c63986b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8e5adbbb79510281fb65ef15e6ca9e637e49213a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8e5adbbb79510281fb65ef15e6ca9e637e49213a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8e5adbbb79510281fb65ef15e6ca9e637e49213a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8e5adbbb79510281fb65ef15e6ca9e637e49213a/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e1d33d5e29bf3c8839266e24ab61b3e9c69b154e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e1d33d5e29bf3c8839266e24ab61b3e9c69b154e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e1d33d5e29bf3c8839266e24ab61b3e9c69b154e"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 12,
      "deletions": 1
    },
    "files": [
      {
        "sha": "292cc51d3238488b067765f8ef5a59a3018debc3",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8e5adbbb79510281fb65ef15e6ca9e637e49213a/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8e5adbbb79510281fb65ef15e6ca9e637e49213a/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=8e5adbbb79510281fb65ef15e6ca9e637e49213a",
        "patch": "@@ -446,6 +446,17 @@ int CMerkleTx::SetMerkleBranch(const CBlock* pblock)\n     {\n         CBlock blockTmp;\n \n+        if (pblock == NULL)\n+        {\n+            // Load the block this tx is in\n+            CTxIndex txindex;\n+            if (!CTxDB(\"r\").ReadTxIndex(GetHash(), txindex))\n+                return 0;\n+            if (!blockTmp.ReadFromDisk(txindex.pos.nFile, txindex.pos.nBlockPos))\n+                return 0;\n+            pblock = &blockTmp;\n+        }\n+\n         // Update the tx's hashBlock\n         hashBlock = pblock->GetHash();\n "
      },
      {
        "sha": "382ef1a33bd04b5caf015727182f24eda8058298",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8e5adbbb79510281fb65ef15e6ca9e637e49213a/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8e5adbbb79510281fb65ef15e6ca9e637e49213a/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=8e5adbbb79510281fb65ef15e6ca9e637e49213a",
        "patch": "@@ -794,7 +794,7 @@ class CMerkleTx : public CTransaction\n     )\n \n \n-    int SetMerkleBranch(const CBlock* pblock);\n+    int SetMerkleBranch(const CBlock* pblock=NULL);\n     int GetDepthInMainChain(CBlockIndex* &pindexRet) const;\n     int GetDepthInMainChain() const { CBlockIndex *pindexRet; return GetDepthInMainChain(pindexRet); }\n     bool IsInMainChain() const { return GetDepthInMainChain() > 0; }"
      }
    ]
  },
  {
    "sha": "180163e0e7255c1ea2b9e532d78addfb0cd85c6f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxODAxNjNlMGU3MjU1YzFlYTJiOWU1MzJkNzhhZGRmYjBjZDg1YzZm",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-31T20:23:02Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-31T20:23:02Z"
      },
      "message": "Split CMerkleTx::SetMerkleBranch",
      "tree": {
        "sha": "2ea1d493d1b79118b507da3d0d7fae0f03c9fcd0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2ea1d493d1b79118b507da3d0d7fae0f03c9fcd0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/180163e0e7255c1ea2b9e532d78addfb0cd85c6f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/180163e0e7255c1ea2b9e532d78addfb0cd85c6f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/180163e0e7255c1ea2b9e532d78addfb0cd85c6f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/180163e0e7255c1ea2b9e532d78addfb0cd85c6f/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8e5adbbb79510281fb65ef15e6ca9e637e49213a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8e5adbbb79510281fb65ef15e6ca9e637e49213a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8e5adbbb79510281fb65ef15e6ca9e637e49213a"
      }
    ],
    "stats": {
      "total": 68,
      "additions": 29,
      "deletions": 39
    },
    "files": [
      {
        "sha": "f62b1e967a42eca3db512a22b3b010ab3518406b",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 25,
        "deletions": 36,
        "changes": 61,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/180163e0e7255c1ea2b9e532d78addfb0cd85c6f/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/180163e0e7255c1ea2b9e532d78addfb0cd85c6f/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=180163e0e7255c1ea2b9e532d78addfb0cd85c6f",
        "patch": "@@ -435,51 +435,40 @@ CTransaction::GetLegacySigOpCount() const\n     return nSigOps;\n }\n \n-int CMerkleTx::SetMerkleBranch(const CBlock* pblock)\n+int CMerkleTx::SetMerkleBranch()\n {\n-    if (fClient)\n-    {\n-        if (hashBlock == 0)\n-            return 0;\n-    }\n-    else\n-    {\n-        CBlock blockTmp;\n-\n-        if (pblock == NULL)\n-        {\n-            // Load the block this tx is in\n-            CTxIndex txindex;\n-            if (!CTxDB(\"r\").ReadTxIndex(GetHash(), txindex))\n-                return 0;\n-            if (!blockTmp.ReadFromDisk(txindex.pos.nFile, txindex.pos.nBlockPos))\n-                return 0;\n-            pblock = &blockTmp;\n-        }\n-\n-        // Update the tx's hashBlock\n-        hashBlock = pblock->GetHash();\n+    // Load the block this tx is in\n+    CTxIndex txindex;\n+    if (!CTxDB(\"r\").ReadTxIndex(GetHash(), txindex))\n+        return 0;\n+    CBlock blockTmp;\n+    if (!blockTmp.ReadFromDisk(txindex.pos.nFile, txindex.pos.nBlockPos))\n+        return 0;\n+    return SetMerkleBranch(blockTmp);\n+}\n \n-        // Locate the transaction\n-        for (nIndex = 0; nIndex < (int)pblock->vtx.size(); nIndex++)\n-            if (pblock->vtx[nIndex] == *(CTransaction*)this)\n-                break;\n-        if (nIndex == (int)pblock->vtx.size())\n-        {\n-            vMerkleBranch.clear();\n-            nIndex = -1;\n-            printf(\"ERROR: SetMerkleBranch() : couldn't find tx in block\\n\");\n-            return 0;\n-        }\n+int CMerkleTx::SetMerkleBranch(const CBlock& block)\n+{\n+    // Update the tx's hashBlock\n+    hashBlock = block.GetHash();\n \n-        // Fill in merkle branch\n-        vMerkleBranch = pblock->GetMerkleBranch(nIndex);\n+    // Locate the transaction\n+    for (nIndex = 0; nIndex < (int)block.vtx.size(); nIndex++)\n+        if (block.vtx[nIndex] == *(CTransaction*)this)\n+            break;\n+    if (nIndex == (int)block.vtx.size())\n+    {\n+        vMerkleBranch.clear();\n+        nIndex = -1;\n+        printf(\"ERROR: SetMerkleBranch() : couldn't find tx in block\\n\");\n+        return 0;\n     }\n \n     // Is the tx in a block that's in the main chain\n     map<uint256, CBlockIndex*>::iterator mi = mapBlockIndex.find(hashBlock);\n     if (mi == mapBlockIndex.end())\n         return 0;\n+\n     const CBlockIndex* pindex = (*mi).second;\n     if (!pindex || !pindex->IsInMainChain())\n         return 0;"
      },
      {
        "sha": "cbec5e7b485096588b615765ddca0cc91fdd8edb",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/180163e0e7255c1ea2b9e532d78addfb0cd85c6f/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/180163e0e7255c1ea2b9e532d78addfb0cd85c6f/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=180163e0e7255c1ea2b9e532d78addfb0cd85c6f",
        "patch": "@@ -794,7 +794,8 @@ class CMerkleTx : public CTransaction\n     )\n \n \n-    int SetMerkleBranch(const CBlock* pblock=NULL);\n+    int SetMerkleBranch();\n+    int SetMerkleBranch(const CBlock &block);\n     int GetDepthInMainChain(CBlockIndex* &pindexRet) const;\n     int GetDepthInMainChain() const { CBlockIndex *pindexRet; return GetDepthInMainChain(pindexRet); }\n     bool IsInMainChain() const { return GetDepthInMainChain() > 0; }"
      },
      {
        "sha": "d19869dbb568c6b4c639ef93b12d84f3fa0b208f",
        "filename": "src/rpcblockchain.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/180163e0e7255c1ea2b9e532d78addfb0cd85c6f/src/rpcblockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/180163e0e7255c1ea2b9e532d78addfb0cd85c6f/src/rpcblockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcblockchain.cpp?ref=180163e0e7255c1ea2b9e532d78addfb0cd85c6f",
        "patch": "@@ -104,7 +104,7 @@ Object blockToJSON(const CBlock& block, const CBlockIndex* blockindex, bool fPri\n     Object result;\n     result.push_back(Pair(\"hash\", block.GetHash().GetHex()));\n     CMerkleTx txGen(block.vtx[0]);\n-    txGen.SetMerkleBranch(&block);\n+    txGen.SetMerkleBranch(block);\n     result.push_back(Pair(\"confirmations\", (int)txGen.GetDepthInMainChain()));\n     result.push_back(Pair(\"size\", (int)::GetSerializeSize(block, SER_NETWORK, PROTOCOL_VERSION)));\n     result.push_back(Pair(\"height\", blockindex->nHeight));"
      },
      {
        "sha": "85bf6acebac6d55e7a0111f181023847f84a8201",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/180163e0e7255c1ea2b9e532d78addfb0cd85c6f/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/180163e0e7255c1ea2b9e532d78addfb0cd85c6f/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=180163e0e7255c1ea2b9e532d78addfb0cd85c6f",
        "patch": "@@ -764,7 +764,7 @@ bool CWallet::AddToWalletIfInvolvingMe(const CTransaction& tx, const CBlock* pbl\n             CWalletTx wtx(this,tx);\n             // Get merkle branch if transaction was found in a block\n             if (pblock)\n-                wtx.SetMerkleBranch(pblock);\n+                wtx.SetMerkleBranch(*pblock);\n             return AddToWallet(wtx);\n         }\n         else"
      }
    ]
  },
  {
    "sha": "78bf82fd1eae33a18ba06859377677441b61092b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3OGJmODJmZDFlYWUzM2ExOGJhMDY4NTkzNzc2Nzc0NDFiNjEwOTJi",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-31T20:38:29Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-03-31T20:38:29Z"
      },
      "message": "Remove unused argument.",
      "tree": {
        "sha": "6ea2162bbeb460284e431f41e3d6fda83accaff8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6ea2162bbeb460284e431f41e3d6fda83accaff8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/78bf82fd1eae33a18ba06859377677441b61092b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/78bf82fd1eae33a18ba06859377677441b61092b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/78bf82fd1eae33a18ba06859377677441b61092b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/78bf82fd1eae33a18ba06859377677441b61092b/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "180163e0e7255c1ea2b9e532d78addfb0cd85c6f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/180163e0e7255c1ea2b9e532d78addfb0cd85c6f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/180163e0e7255c1ea2b9e532d78addfb0cd85c6f"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "b5fb1aa686fc3dd4586d6c1bd31c00d81da73f0d",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/78bf82fd1eae33a18ba06859377677441b61092b/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/78bf82fd1eae33a18ba06859377677441b61092b/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=78bf82fd1eae33a18ba06859377677441b61092b",
        "patch": "@@ -752,7 +752,7 @@ bool CWallet::AddToWallet(const CWalletTx& wtxIn)\n // Add a transaction to the wallet, or update it.\n // pblock is optional, but should be provided if the transaction is known to be in a block.\n // If fUpdate is true, existing transactions will be updated.\n-bool CWallet::AddToWalletIfInvolvingMe(const CTransaction& tx, const CBlock* pblock, bool fUpdate, bool fFindBlock)\n+bool CWallet::AddToWalletIfInvolvingMe(const CTransaction& tx, const CBlock* pblock, bool fUpdate)\n {\n     uint256 hash = tx.GetHash();\n     {\n@@ -1076,7 +1076,7 @@ int CWallet::ScanForWalletTransaction(const uint256& hashTx)\n {\n     CTransaction tx;\n     tx.ReadFromDisk(COutPoint(hashTx, 0));\n-    if (AddToWalletIfInvolvingMe(tx, NULL, true, true))\n+    if (AddToWalletIfInvolvingMe(tx, NULL, true))\n         return 1;\n     return 0;\n }"
      },
      {
        "sha": "a0e2f1d5208d9c3514984f2aad55e7a25e7a68d1",
        "filename": "src/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/78bf82fd1eae33a18ba06859377677441b61092b/src/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/78bf82fd1eae33a18ba06859377677441b61092b/src/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.h?ref=78bf82fd1eae33a18ba06859377677441b61092b",
        "patch": "@@ -210,7 +210,7 @@ class CWallet : public CCryptoKeyStore\n \n     void MarkDirty();\n     bool AddToWallet(const CWalletTx& wtxIn);\n-    bool AddToWalletIfInvolvingMe(const CTransaction& tx, const CBlock* pblock, bool fUpdate = false, bool fFindBlock = false);\n+    bool AddToWalletIfInvolvingMe(const CTransaction& tx, const CBlock* pblock, bool fUpdate = false);\n     bool EraseFromWallet(uint256 hash);\n     void ClearOrphans();\n     void WalletUpdateSpent(const CTransaction& prevout, bool fBlock = false);"
      }
    ]
  },
  {
    "sha": "9869e099436a995680cc3b0903df04ca4763ac82",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ODY5ZTA5OTQzNmE5OTU2ODBjYzNiMDkwM2RmMDRjYTQ3NjNhYzgy",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-04-01T17:47:45Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-04-01T18:10:12Z"
      },
      "message": "Move some implementations of CWallet methods to wallet.cpp.",
      "tree": {
        "sha": "d6dcc5fd80c1a3199d9ffc4685ec112bd091683e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d6dcc5fd80c1a3199d9ffc4685ec112bd091683e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9869e099436a995680cc3b0903df04ca4763ac82",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9869e099436a995680cc3b0903df04ca4763ac82",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9869e099436a995680cc3b0903df04ca4763ac82",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9869e099436a995680cc3b0903df04ca4763ac82/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "78bf82fd1eae33a18ba06859377677441b61092b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/78bf82fd1eae33a18ba06859377677441b61092b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/78bf82fd1eae33a18ba06859377677441b61092b"
      }
    ],
    "stats": {
      "total": 567,
      "additions": 297,
      "deletions": 270
    },
    "files": [
      {
        "sha": "7b43f95e54c0c41e52b934bd6e067d6d7b2dff19",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 277,
        "deletions": 0,
        "changes": 277,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9869e099436a995680cc3b0903df04ca4763ac82/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9869e099436a995680cc3b0903df04ca4763ac82/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=9869e099436a995680cc3b0903df04ca4763ac82",
        "patch": "@@ -33,6 +33,15 @@ struct CompareValueOnly\n     }\n };\n \n+const CWalletTx* CWallet::GetWalletTx(const uint256& hash) const\n+{\n+    LOCK(cs_wallet);\n+    std::map<uint256, CWalletTx>::const_iterator it = mapWallet.find(hash);\n+    if (it == mapWallet.end())\n+        return NULL;\n+    return &(it->second);\n+}\n+\n CPubKey CWallet::GenerateNewKey()\n {\n     bool fCompressed = CanSupportFeature(FEATURE_COMPRPUBKEY); // default to compressed public keys if we want 0.6.0 wallets\n@@ -817,6 +826,18 @@ int64_t CWallet::GetDebit(const CTxIn &txin, const isminefilter& filter) const\n     return 0;\n }\n \n+isminetype CWallet::IsMine(const CTxOut& txout) const\n+{\n+    return ::IsMine(*this, txout.scriptPubKey);\n+}\n+\n+int64_t CWallet::GetCredit(const CTxOut& txout, const isminefilter& filter) const\n+{\n+    if (!MoneyRange(txout.nValue))\n+        throw std::runtime_error(\"CWallet::GetCredit() : value out of range\");\n+    return (IsMine(txout) & filter ? txout.nValue : 0);\n+}\n+\n bool CWallet::IsChange(const CTxOut& txout) const\n {\n     // TODO: fix handling of 'change' outputs. The assumption is that any\n@@ -839,6 +860,62 @@ bool CWallet::IsChange(const CTxOut& txout) const\n     return false;\n }\n \n+int64_t CWallet::GetChange(const CTxOut& txout) const\n+{\n+    if (!MoneyRange(txout.nValue))\n+        throw std::runtime_error(\"CWallet::GetChange() : value out of range\");\n+    return (IsChange(txout) ? txout.nValue : 0);\n+}\n+\n+bool CWallet::IsMine(const CTransaction& tx) const\n+{\n+    BOOST_FOREACH(const CTxOut& txout, tx.vout)\n+        if (IsMine(txout) && txout.nValue >= nMinimumInputValue)\n+            return true;\n+    return false;\n+}\n+\n+bool CWallet::IsFromMe(const CTransaction& tx) const\n+{\n+    return (GetDebit(tx, MINE_ALL) > 0);\n+}\n+\n+int64_t CWallet::GetDebit(const CTransaction& tx, const isminefilter& filter) const\n+{\n+    int64_t nDebit = 0;\n+    BOOST_FOREACH(const CTxIn& txin, tx.vin)\n+    {\n+        nDebit += GetDebit(txin, filter);\n+        if (!MoneyRange(nDebit))\n+            throw std::runtime_error(\"CWallet::GetDebit() : value out of range\");\n+    }\n+    return nDebit;\n+}\n+\n+int64_t CWallet::GetCredit(const CTransaction& tx, const isminefilter& filter) const\n+{\n+    int64_t nCredit = 0;\n+    BOOST_FOREACH(const CTxOut& txout, tx.vout)\n+    {\n+        nCredit += GetCredit(txout, filter);\n+        if (!MoneyRange(nCredit))\n+            throw std::runtime_error(\"CWallet::GetCredit() : value out of range\");\n+    }\n+    return nCredit;\n+}\n+\n+int64_t CWallet::GetChange(const CTransaction& tx) const\n+{\n+    int64_t nChange = 0;\n+    BOOST_FOREACH(const CTxOut& txout, tx.vout)\n+    {\n+        nChange += GetChange(txout);\n+        if (!MoneyRange(nChange))\n+            throw std::runtime_error(\"CWallet::GetChange() : value out of range\");\n+    }\n+    return nChange;\n+}\n+\n int64_t CWalletTx::GetTxTime() const\n {\n     return nTime;\n@@ -883,6 +960,206 @@ int CWalletTx::GetRequestCount() const\n     return nRequests;\n }\n \n+bool CWalletTx::InMempool() const\n+{\n+    LOCK(mempool.cs);\n+    if (mempool.exists(GetHash())) {\n+        return true;\n+    }\n+    return false;\n+}\n+\n+bool CWalletTx::IsTrusted() const\n+{\n+    // Quick answer in most cases\n+    if (!IsFinal())\n+        return false;\n+    int nDepth = GetDepthInMainChain();\n+    if (nDepth >= 1)\n+        return true;\n+    if (nDepth < 0)\n+        return false;\n+    if (!fConfChange || !IsFromMe(MINE_ALL)) // using wtx's cached debit\n+        return false;\n+\n+    // Don't trust unconfirmed transactions from us unless they are in the mempool.\n+    if (!InMempool())\n+        return false;\n+\n+    // Trusted if all inputs are from us and are in the mempool:\n+    BOOST_FOREACH(const CTxIn& txin, vin)\n+    {\n+        // Transactions not sent by us: not trusted\n+        const CWalletTx* parent = pwallet->GetWalletTx(txin.prevout.hash);\n+        if (parent == NULL)\n+            return false;\n+        const CTxOut& parentOut = parent->vout[txin.prevout.n];\n+        if (pwallet->IsMine(parentOut) != MINE_SPENDABLE)\n+            return false;\n+    }\n+    return true;\n+}\n+\n+int64_t CWalletTx::GetDebit(const isminefilter& filter) const\n+{\n+    if (vin.empty())\n+        return 0;\n+\n+    int64_t nDebit = 0;\n+    if (filter & MINE_SPENDABLE)\n+    {\n+        if (fDebitCached)\n+            nDebit += nDebitCached;\n+        else\n+        {\n+            nDebitCached = pwallet->GetDebit(*this, MINE_SPENDABLE);\n+            fDebitCached = true;\n+            nDebit += nDebitCached;\n+        }\n+    }\n+    if (filter & MINE_WATCH_ONLY)\n+    {\n+        if (fWatchDebitCached)\n+            nDebit += nWatchDebitCached;\n+        else\n+        {\n+            nWatchDebitCached = pwallet->GetDebit(*this, MINE_WATCH_ONLY);\n+            fWatchDebitCached = true;\n+            nDebit += nWatchDebitCached;\n+        }\n+    }\n+    return nDebit;\n+}\n+\n+int64_t CWalletTx::GetCredit(const isminefilter& filter) const\n+{\n+    // Must wait until coinbase is safely deep enough in the chain before valuing it\n+    if ((IsCoinBase() || IsCoinStake()) && GetBlocksToMaturity() > 0)\n+        return 0;\n+\n+    int64_t credit = 0;\n+    if (filter & MINE_SPENDABLE)\n+    {\n+        // GetBalance can assume transactions in mapWallet won't change\n+        if (fCreditCached)\n+            credit += nCreditCached;\n+        else\n+        {\n+            nCreditCached = pwallet->GetCredit(*this, MINE_SPENDABLE);\n+            fCreditCached = true;\n+            credit += nCreditCached;\n+        }\n+    }\n+    if (filter & MINE_WATCH_ONLY)\n+    {\n+        if (fWatchCreditCached)\n+            credit += nWatchCreditCached;\n+        else\n+        {\n+            nWatchCreditCached = pwallet->GetCredit(*this, MINE_WATCH_ONLY);\n+            fWatchCreditCached = true;\n+            credit += nWatchCreditCached;\n+        }\n+    }\n+    return credit;\n+}\n+\n+int64_t CWalletTx::GetImmatureCredit(bool fUseCache) const\n+{\n+    if (IsCoinBase() && GetBlocksToMaturity() > 0 && IsInMainChain())\n+    {\n+        if (fUseCache && fImmatureCreditCached)\n+            return nImmatureCreditCached;\n+        nImmatureCreditCached = pwallet->GetCredit(*this, MINE_SPENDABLE);\n+        fImmatureCreditCached = true;\n+        return nImmatureCreditCached;\n+    }\n+\n+    return 0;\n+}\n+\n+int64_t CWalletTx::GetImmatureWatchOnlyCredit(bool fUseCache) const\n+{\n+    if (IsCoinBase() && GetBlocksToMaturity() > 0 && IsInMainChain())\n+    {\n+        if (fUseCache && fImmatureWatchCreditCached)\n+            return nImmatureWatchCreditCached;\n+        nImmatureWatchCreditCached = pwallet->GetCredit(*this, MINE_WATCH_ONLY);\n+        fImmatureWatchCreditCached = true;\n+        return nImmatureWatchCreditCached;\n+    }\n+\n+    return 0;\n+}\n+\n+\n+int64_t CWalletTx::GetAvailableCredit(bool fUseCache) const\n+{\n+    // Must wait until coinbase is safely deep enough in the chain before valuing it\n+    if ((IsCoinBase() || IsCoinStake()) && GetBlocksToMaturity() > 0)\n+        return 0;\n+\n+    if (fUseCache) {\n+        if (fAvailableCreditCached)\n+            return nAvailableCreditCached;\n+    }\n+\n+    int64_t nCredit = 0;\n+    for (unsigned int i = 0; i < vout.size(); i++)\n+    {\n+        if (!IsSpent(i))\n+        {\n+            const CTxOut &txout = vout[i];\n+            nCredit += pwallet->GetCredit(txout, MINE_SPENDABLE);\n+            if (!MoneyRange(nCredit))\n+                throw std::runtime_error(\"CWalletTx::GetAvailableCredit() : value out of range\");\n+        }\n+    }\n+\n+    nAvailableCreditCached = nCredit;\n+    fAvailableCreditCached = true;\n+\n+    return nCredit;\n+}\n+\n+int64_t CWalletTx::GetAvailableWatchCredit(bool fUseCache) const\n+{\n+    // Must wait until coinbase is safely deep enough in the chain before valuing it\n+    if ((IsCoinBase() || IsCoinStake()) && GetBlocksToMaturity() > 0)\n+        return 0;\n+\n+    if (fUseCache) {\n+        if (fAvailableWatchCreditCached)\n+            return nAvailableWatchCreditCached;\n+    }\n+\n+    int64_t nCredit = 0;\n+    for (unsigned int i = 0; i < vout.size(); i++)\n+    {\n+        if (!IsSpent(i))\n+        {\n+            const CTxOut &txout = vout[i];\n+            nCredit += pwallet->GetCredit(txout, MINE_WATCH_ONLY);\n+            if (!MoneyRange(nCredit))\n+                throw std::runtime_error(\"CWalletTx::GetAvailableCredit() : value out of range\");\n+        }\n+    }\n+\n+    nAvailableWatchCreditCached = nCredit;\n+    fAvailableWatchCreditCached = true;\n+\n+    return nCredit;\n+}\n+\n+int64_t CWalletTx::GetChange() const\n+{\n+    if (fChangeCached)\n+        return nChangeCached;\n+    nChangeCached = pwallet->GetChange(*this);\n+    fChangeCached = true;\n+    return nChangeCached;\n+}\n+\n void CWalletTx::GetAmounts(int64_t& nGeneratedImmature, int64_t& nGeneratedMature, list<pair<CBitcoinAddress, int64_t> >& listReceived,\n                            list<pair<CBitcoinAddress, int64_t> >& listSent, int64_t& nFee, string& strSentAccount, const isminefilter& filter) const\n {"
      },
      {
        "sha": "de8da9747ebde0a23a2124269e1d245fbbad021f",
        "filename": "src/wallet.h",
        "status": "modified",
        "additions": 20,
        "deletions": 270,
        "changes": 290,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9869e099436a995680cc3b0903df04ca4763ac82/src/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9869e099436a995680cc3b0903df04ca4763ac82/src/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.h?ref=9869e099436a995680cc3b0903df04ca4763ac82",
        "patch": "@@ -114,7 +114,7 @@ class CWallet : public CCryptoKeyStore\n     CWallet(std::string strWalletFileIn)\n     {\n         SetNull();\n-        \n+\n         strWalletFile = strWalletFileIn;\n         fFileBacked = true;\n     }\n@@ -142,6 +142,8 @@ class CWallet : public CCryptoKeyStore\n     CPubKey vchDefaultKey;\n     int64_t nTimeFirstKey;\n \n+    const CWalletTx* GetWalletTx(const uint256& hash) const;\n+\n     // check whether we are allowed to upgrade (or already support) to the named feature\n     bool CanSupportFeature(enum WalletFeature wf) { return nWalletMaxVersion >= wf; }\n \n@@ -253,81 +255,24 @@ class CWallet : public CCryptoKeyStore\n \n     isminetype IsMine(const CTxIn& txin) const;\n     int64_t GetDebit(const CTxIn& txin, const isminefilter& filter) const;\n-    isminetype IsMine(const CTxOut& txout) const\n-    {\n-        return ::IsMine(*this, txout.scriptPubKey);\n-    }\n-    int64_t GetCredit(const CTxOut& txout, const isminefilter& filter) const\n-    {\n-        if (!MoneyRange(txout.nValue))\n-            throw std::runtime_error(\"CWallet::GetCredit() : value out of range\");\n-        return (IsMine(txout) & filter ? txout.nValue : 0);\n-    }\n+    isminetype IsMine(const CTxOut& txout) const;\n+    int64_t GetCredit(const CTxOut& txout, const isminefilter& filter) const;\n     bool IsChange(const CTxOut& txout) const;\n-    int64_t GetChange(const CTxOut& txout) const\n-    {\n-        if (!MoneyRange(txout.nValue))\n-            throw std::runtime_error(\"CWallet::GetChange() : value out of range\");\n-        return (IsChange(txout) ? txout.nValue : 0);\n-    }\n-    bool IsMine(const CTransaction& tx) const\n-    {\n-        BOOST_FOREACH(const CTxOut& txout, tx.vout)\n-            if (IsMine(txout) && txout.nValue >= nMinimumInputValue)\n-                return true;\n-        return false;\n-    }\n-    bool IsFromMe(const CTransaction& tx) const\n-    {\n-        return (GetDebit(tx, MINE_ALL) > 0);\n-    }\n-    int64_t GetDebit(const CTransaction& tx, const isminefilter& filter) const\n-    {\n-        int64_t nDebit = 0;\n-        BOOST_FOREACH(const CTxIn& txin, tx.vin)\n-        {\n-            nDebit += GetDebit(txin, filter);\n-            if (!MoneyRange(nDebit))\n-                throw std::runtime_error(\"CWallet::GetDebit() : value out of range\");\n-        }\n-        return nDebit;\n-    }\n-    int64_t GetCredit(const CTransaction& tx, const isminefilter& filter) const\n-    {\n-        int64_t nCredit = 0;\n-        BOOST_FOREACH(const CTxOut& txout, tx.vout)\n-        {\n-            nCredit += GetCredit(txout, filter);\n-            if (!MoneyRange(nCredit))\n-                throw std::runtime_error(\"CWallet::GetCredit() : value out of range\");\n-        }\n-        return nCredit;\n-    }\n-    int64_t GetChange(const CTransaction& tx) const\n-    {\n-        int64_t nChange = 0;\n-        BOOST_FOREACH(const CTxOut& txout, tx.vout)\n-        {\n-            nChange += GetChange(txout);\n-            if (!MoneyRange(nChange))\n-                throw std::runtime_error(\"CWallet::GetChange() : value out of range\");\n-        }\n-        return nChange;\n-    }\n+    int64_t GetChange(const CTxOut& txout) const;\n+    bool IsMine(const CTransaction& tx) const;\n+    bool IsFromMe(const CTransaction& tx) const;\n+    int64_t GetDebit(const CTransaction& tx, const isminefilter& filter) const;\n+    int64_t GetCredit(const CTransaction& tx, const isminefilter& filter) const;\n+    int64_t GetChange(const CTransaction& tx) const;\n     void SetBestChain(const CBlockLocator& loc);\n \n     DBErrors LoadWallet(bool& fFirstRunRet);\n-\n     DBErrors ZapWalletTx();\n \n     bool SetAddressBookName(const CTxDestination& address, const std::string& strName);\n-\n     bool SetAddressBookName(const CBitcoinAddress& address, const std::string& strName);\n-\n     bool DelAddressBookName(const CBitcoinAddress& address);\n-\n     void UpdatedTransaction(const uint256 &hashTx);\n-\n     void PrintWallet(const CBlock& block);\n \n     void Inventory(const uint256 &hash)\n@@ -346,7 +291,6 @@ class CWallet : public CCryptoKeyStore\n     }\n \n     bool GetTransaction(const uint256 &hashTx, CWalletTx& wtx);\n-\n     bool SetDefaultKey(const CPubKey &vchPubKey);\n \n     // signify that a particular wallet feature is now used. this may change nWalletVersion and nWalletMaxVersion if those are lower\n@@ -641,166 +585,13 @@ class CWalletTx : public CMerkleTx\n         return (!!vfSpent[nOut]);\n     }\n \n-    int64_t GetDebit(const isminefilter& filter) const\n-    {\n-        if (vin.empty())\n-            return 0;\n-\n-        int64_t nDebit = 0;\n-        if (filter & MINE_SPENDABLE)\n-        {\n-            if (fDebitCached)\n-                nDebit += nDebitCached;\n-            else\n-            {\n-                nDebitCached = pwallet->GetDebit(*this, MINE_SPENDABLE);\n-                fDebitCached = true;\n-                nDebit += nDebitCached;\n-            }\n-        }\n-        if (filter & MINE_WATCH_ONLY)\n-        {\n-            if (fWatchDebitCached)\n-                nDebit += nWatchDebitCached;\n-            else\n-            {\n-                nWatchDebitCached = pwallet->GetDebit(*this, MINE_WATCH_ONLY);\n-                fWatchDebitCached = true;\n-                nDebit += nWatchDebitCached;\n-            }\n-        }\n-\n-        return nDebit;\n-    }\n-\n-    int64_t GetCredit(const isminefilter& filter) const\n-    {\n-        // Must wait until coinbase is safely deep enough in the chain before valuing it\n-        if ((IsCoinBase() || IsCoinStake()) && GetBlocksToMaturity() > 0)\n-            return 0;\n-\n-        int64_t credit = 0;\n-        if (filter & MINE_SPENDABLE)\n-        {\n-            // GetBalance can assume transactions in mapWallet won't change\n-            if (fCreditCached)\n-                credit += nCreditCached;\n-            else\n-            {\n-                nCreditCached = pwallet->GetCredit(*this, MINE_SPENDABLE);\n-                fCreditCached = true;\n-                credit += nCreditCached;\n-            }\n-        }\n-        if (filter & MINE_WATCH_ONLY)\n-        {\n-            if (fWatchCreditCached)\n-                credit += nWatchCreditCached;\n-            else\n-            {\n-                nWatchCreditCached = pwallet->GetCredit(*this, MINE_WATCH_ONLY);\n-                fWatchCreditCached = true;\n-                credit += nWatchCreditCached;\n-            }\n-        }\n-        return credit;\n-    }\n-\n-    int64_t GetImmatureCredit(bool fUseCache=true) const\n-    {\n-        if (IsCoinBase() && GetBlocksToMaturity() > 0 && IsInMainChain())\n-        {\n-            if (fUseCache && fImmatureCreditCached)\n-                return nImmatureCreditCached;\n-            nImmatureCreditCached = pwallet->GetCredit(*this, MINE_SPENDABLE);\n-            fImmatureCreditCached = true;\n-            return nImmatureCreditCached;\n-        }\n-\n-        return 0;\n-    }\n-\n-    int64_t GetImmatureWatchOnlyCredit(bool fUseCache=true) const\n-    {\n-        if (IsCoinBase() && GetBlocksToMaturity() > 0 && IsInMainChain())\n-        {\n-            if (fUseCache && fImmatureWatchCreditCached)\n-                return nImmatureWatchCreditCached;\n-            nImmatureWatchCreditCached = pwallet->GetCredit(*this, MINE_WATCH_ONLY);\n-            fImmatureWatchCreditCached = true;\n-            return nImmatureWatchCreditCached;\n-        }\n-\n-        return 0;\n-    }\n-\n-\n-    int64_t GetAvailableCredit(bool fUseCache=true) const\n-    {\n-        // Must wait until coinbase is safely deep enough in the chain before valuing it\n-        if ((IsCoinBase() || IsCoinStake()) && GetBlocksToMaturity() > 0)\n-            return 0;\n-\n-        if (fUseCache) {\n-            if (fAvailableCreditCached)\n-                return nAvailableCreditCached;\n-        }\n-\n-        int64_t nCredit = 0;\n-        for (unsigned int i = 0; i < vout.size(); i++)\n-        {\n-            if (!IsSpent(i))\n-            {\n-                const CTxOut &txout = vout[i];\n-                nCredit += pwallet->GetCredit(txout, MINE_SPENDABLE);\n-                if (!MoneyRange(nCredit))\n-                    throw std::runtime_error(\"CWalletTx::GetAvailableCredit() : value out of range\");\n-            }\n-        }\n-\n-        nAvailableCreditCached = nCredit;\n-        fAvailableCreditCached = true;\n-\n-        return nCredit;\n-    }\n-\n-    int64_t GetAvailableWatchCredit(bool fUseCache=true) const\n-    {\n-        // Must wait until coinbase is safely deep enough in the chain before valuing it\n-        if ((IsCoinBase() || IsCoinStake()) && GetBlocksToMaturity() > 0)\n-            return 0;\n-\n-        if (fUseCache) {\n-            if (fAvailableWatchCreditCached)\n-                return nAvailableWatchCreditCached;\n-        }\n-\n-        int64_t nCredit = 0;\n-        for (unsigned int i = 0; i < vout.size(); i++)\n-        {\n-            if (!IsSpent(i))\n-            {\n-                const CTxOut &txout = vout[i];\n-                nCredit += pwallet->GetCredit(txout, MINE_WATCH_ONLY);\n-                if (!MoneyRange(nCredit))\n-                    throw std::runtime_error(\"CWalletTx::GetAvailableCredit() : value out of range\");\n-            }\n-        }\n-\n-        nAvailableWatchCreditCached = nCredit;\n-        fAvailableWatchCreditCached = true;\n-\n-        return nCredit;\n-    }\n-\n-    int64_t GetChange() const\n-    {\n-        if (fChangeCached)\n-            return nChangeCached;\n-        nChangeCached = pwallet->GetChange(*this);\n-        fChangeCached = true;\n-        return nChangeCached;\n-    }\n+    int64_t GetDebit(const isminefilter& filter) const;\n+    int64_t GetCredit(const isminefilter& filter) const;\n+    int64_t GetImmatureCredit(bool fUseCache=true) const;\n+    int64_t GetImmatureWatchOnlyCredit(bool fUseCache=true) const;\n+    int64_t GetAvailableCredit(bool fUseCache=true) const;\n+    int64_t GetAvailableWatchCredit(bool fUseCache=true) const;\n+    int64_t GetChange() const;\n \n     void GetAmounts(int64_t& nGeneratedImmature, int64_t& nGeneratedMature, std::list<std::pair<CBitcoinAddress, int64_t> >& listReceived,\n                     std::list<std::pair<CBitcoinAddress, int64_t> >& listSent, int64_t& nFee, std::string& strSentAccount, const isminefilter& filter) const;\n@@ -813,49 +604,8 @@ class CWalletTx : public CMerkleTx\n         return (GetDebit(filter) > 0);\n     }\n \n-    bool IsTrusted() const\n-    {\n-        // Quick answer in most cases\n-        if (!IsFinal())\n-            return false;\n-        if (GetDepthInMainChain() >= 1)\n-            return true;\n-        if (fConfChange || !IsFromMe(MINE_ALL)) // using wtx's cached debit\n-            return false;\n-\n-        // If no confirmations but it's from us, we can still\n-        // consider it confirmed if all dependencies are confirmed\n-        std::map<uint256, const CMerkleTx*> mapPrev;\n-        std::vector<const CMerkleTx*> vWorkQueue;\n-        vWorkQueue.reserve(vtxPrev.size()+1);\n-        vWorkQueue.push_back(this);\n-        for (unsigned int i = 0; i < vWorkQueue.size(); i++)\n-        {\n-            const CMerkleTx* ptx = vWorkQueue[i];\n-\n-            if (!ptx->IsFinal())\n-                return false;\n-            if (ptx->GetDepthInMainChain() >= 1)\n-                continue;\n-            if (!pwallet->IsFromMe(*ptx))\n-                return false;\n-\n-            if (mapPrev.empty())\n-            {\n-                BOOST_FOREACH(const CMerkleTx& tx, vtxPrev)\n-                    mapPrev[tx.GetHash()] = &tx;\n-            }\n-\n-            BOOST_FOREACH(const CTxIn& txin, ptx->vin)\n-            {\n-                if (!mapPrev.count(txin.prevout.hash))\n-                    return false;\n-                vWorkQueue.push_back(mapPrev[txin.prevout.hash]);\n-            }\n-        }\n-\n-        return true;\n-    }\n+    bool InMempool() const;\n+    bool IsTrusted() const;\n \n     bool WriteToDisk();\n "
      }
    ]
  },
  {
    "sha": "98e0cb3b063719f7647b2775514688d63d0fe1eb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5OGUwY2IzYjA2MzcxOWY3NjQ3YjI3NzU1MTQ2ODhkNjNkMGZlMWVi",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-04-01T18:11:18Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-04-01T18:11:18Z"
      },
      "message": "Move some implementations of CWallet methods to wallet.cpp.",
      "tree": {
        "sha": "07b0a626954d3c2401befc1cf0a9ab31bd0640db",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/07b0a626954d3c2401befc1cf0a9ab31bd0640db"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/98e0cb3b063719f7647b2775514688d63d0fe1eb",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/98e0cb3b063719f7647b2775514688d63d0fe1eb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/98e0cb3b063719f7647b2775514688d63d0fe1eb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/98e0cb3b063719f7647b2775514688d63d0fe1eb/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9869e099436a995680cc3b0903df04ca4763ac82",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9869e099436a995680cc3b0903df04ca4763ac82",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9869e099436a995680cc3b0903df04ca4763ac82"
      }
    ],
    "stats": {
      "total": 137,
      "additions": 74,
      "deletions": 63
    },
    "files": [
      {
        "sha": "1d735d3f9380b13b94a045873f19adfec08c9f72",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 68,
        "deletions": 0,
        "changes": 68,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/98e0cb3b063719f7647b2775514688d63d0fe1eb/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/98e0cb3b063719f7647b2775514688d63d0fe1eb/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=98e0cb3b063719f7647b2775514688d63d0fe1eb",
        "patch": "@@ -810,6 +810,74 @@ isminetype CWallet::IsMine(const CTxIn &txin) const\n     return MINE_NO;\n }\n \n+// marks certain txout's as spent\n+// returns true if any update took place\n+bool CWalletTx::UpdateSpent(const std::vector<char>& vfNewSpent)\n+{\n+    bool fReturn = false;\n+    for (unsigned int i = 0; i < vfNewSpent.size(); i++)\n+    {\n+        if (i == vfSpent.size())\n+            break;\n+\n+        if (vfNewSpent[i] && !vfSpent[i])\n+        {\n+            vfSpent[i] = true;\n+            fReturn = true;\n+            fAvailableCreditCached = fAvailableWatchCreditCached = false;\n+        }\n+    }\n+    return fReturn;\n+}\n+\n+// make sure balances are recalculated\n+void CWalletTx::MarkDirty()\n+{\n+    fCreditCached = false;\n+    fAvailableCreditCached = fAvailableWatchCreditCached = false;\n+    fDebitCached = fWatchDebitCached = false;\n+    fChangeCached = false;\n+}\n+\n+void CWalletTx::BindWallet(CWallet *pwalletIn)\n+{\n+    pwallet = pwalletIn;\n+    MarkDirty();\n+}\n+\n+void CWalletTx::MarkSpent(unsigned int nOut)\n+{\n+    if (nOut >= vout.size())\n+        throw std::runtime_error(\"CWalletTx::MarkSpent() : nOut out of range\");\n+    vfSpent.resize(vout.size());\n+    if (!vfSpent[nOut])\n+    {\n+        vfSpent[nOut] = true;\n+        fAvailableCreditCached = fAvailableWatchCreditCached = false;\n+    }\n+}\n+\n+void CWalletTx::MarkUnspent(unsigned int nOut)\n+{\n+    if (nOut >= vout.size())\n+        throw std::runtime_error(\"CWalletTx::MarkUnspent() : nOut out of range\");\n+    vfSpent.resize(vout.size());\n+    if (vfSpent[nOut])\n+    {\n+        vfSpent[nOut] = false;\n+        fAvailableCreditCached = fAvailableWatchCreditCached = false;\n+    }\n+}\n+\n+bool CWalletTx::IsSpent(unsigned int nOut) const\n+{\n+    if (nOut >= vout.size())\n+        throw std::runtime_error(\"CWalletTx::IsSpent() : nOut out of range\");\n+    if (nOut >= vfSpent.size())\n+        return false;\n+    return (!!vfSpent[nOut]);\n+}\n+\n int64_t CWallet::GetDebit(const CTxIn &txin, const isminefilter& filter) const\n {\n     {"
      },
      {
        "sha": "2b1774a578fba211d8e56d7144adab92edb86e35",
        "filename": "src/wallet.h",
        "status": "modified",
        "additions": 6,
        "deletions": 63,
        "changes": 69,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/98e0cb3b063719f7647b2775514688d63d0fe1eb/src/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/98e0cb3b063719f7647b2775514688d63d0fe1eb/src/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.h?ref=98e0cb3b063719f7647b2775514688d63d0fe1eb",
        "patch": "@@ -519,71 +519,14 @@ class CWalletTx : public CMerkleTx\n \n     // marks certain txout's as spent\n     // returns true if any update took place\n-    bool UpdateSpent(const std::vector<char>& vfNewSpent)\n-    {\n-        bool fReturn = false;\n-        for (unsigned int i = 0; i < vfNewSpent.size(); i++)\n-        {\n-            if (i == vfSpent.size())\n-                break;\n-\n-            if (vfNewSpent[i] && !vfSpent[i])\n-            {\n-                vfSpent[i] = true;\n-                fReturn = true;\n-                fAvailableCreditCached = fAvailableWatchCreditCached = false;\n-            }\n-        }\n-        return fReturn;\n-    }\n+    bool UpdateSpent(const std::vector<char>& vfNewSpent);\n \n     // make sure balances are recalculated\n-    void MarkDirty()\n-    {\n-        fCreditCached = false;\n-        fAvailableCreditCached = fAvailableWatchCreditCached = false;\n-        fDebitCached = fWatchDebitCached = false;\n-        fChangeCached = false;\n-    }\n-\n-    void BindWallet(CWallet *pwalletIn)\n-    {\n-        pwallet = pwalletIn;\n-        MarkDirty();\n-    }\n-\n-    void MarkSpent(unsigned int nOut)\n-    {\n-        if (nOut >= vout.size())\n-            throw std::runtime_error(\"CWalletTx::MarkSpent() : nOut out of range\");\n-        vfSpent.resize(vout.size());\n-        if (!vfSpent[nOut])\n-        {\n-            vfSpent[nOut] = true;\n-            fAvailableCreditCached = fAvailableWatchCreditCached = false;\n-        }\n-    }\n-\n-    void MarkUnspent(unsigned int nOut)\n-    {\n-        if (nOut >= vout.size())\n-            throw std::runtime_error(\"CWalletTx::MarkUnspent() : nOut out of range\");\n-        vfSpent.resize(vout.size());\n-        if (vfSpent[nOut])\n-        {\n-            vfSpent[nOut] = false;\n-            fAvailableCreditCached = fAvailableWatchCreditCached = false;\n-        }\n-    }\n-\n-    bool IsSpent(unsigned int nOut) const\n-    {\n-        if (nOut >= vout.size())\n-            throw std::runtime_error(\"CWalletTx::IsSpent() : nOut out of range\");\n-        if (nOut >= vfSpent.size())\n-            return false;\n-        return (!!vfSpent[nOut]);\n-    }\n+    void MarkDirty();\n+    void BindWallet(CWallet *pwalletIn);\n+    void MarkSpent(unsigned int nOut);\n+    void MarkUnspent(unsigned int nOut);\n+    bool IsSpent(unsigned int nOut) const;\n \n     int64_t GetDebit(const isminefilter& filter) const;\n     int64_t GetCredit(const isminefilter& filter) const;"
      }
    ]
  },
  {
    "sha": "28dd1046a20941d28bbdd1be11fe42b6f77a8569",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyOGRkMTA0NmEyMDk0MWQyOGJiZGQxYmUxMWZlNDJiNmY3N2E4NTY5",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-04-01T19:20:32Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-04-01T19:20:32Z"
      },
      "message": "RPC: Replace resendtx with resendwallettransactions.",
      "tree": {
        "sha": "d253d58f0b15a925bf014ce7df43ed6851fbf54f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d253d58f0b15a925bf014ce7df43ed6851fbf54f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/28dd1046a20941d28bbdd1be11fe42b6f77a8569",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/28dd1046a20941d28bbdd1be11fe42b6f77a8569",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/28dd1046a20941d28bbdd1be11fe42b6f77a8569",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/28dd1046a20941d28bbdd1be11fe42b6f77a8569/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "98e0cb3b063719f7647b2775514688d63d0fe1eb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/98e0cb3b063719f7647b2775514688d63d0fe1eb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/98e0cb3b063719f7647b2775514688d63d0fe1eb"
      }
    ],
    "stats": {
      "total": 333,
      "additions": 181,
      "deletions": 152
    },
    "files": [
      {
        "sha": "60baac06dd54a77ca078c38615120e33d6cd21d2",
        "filename": "src/bitcoinrpc.cpp",
        "status": "modified",
        "additions": 91,
        "deletions": 91,
        "changes": 182,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/28dd1046a20941d28bbdd1be11fe42b6f77a8569/src/bitcoinrpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/28dd1046a20941d28bbdd1be11fe42b6f77a8569/src/bitcoinrpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoinrpc.cpp?ref=28dd1046a20941d28bbdd1be11fe42b6f77a8569",
        "patch": "@@ -237,97 +237,97 @@ Value stop(const Array& params, bool fHelp)\n static const CRPCCommand vRPCCommands[] =\n { //  name                      function                 safemd  unlocked\n   //  ------------------------  -----------------------  ------  --------\n-    { \"help\",                   &help,                   true,   true },\n-    { \"stop\",                   &stop,                   true,   true },\n-    { \"getbestblockhash\",       &getbestblockhash,       true,   false },\n-    { \"getblockcount\",          &getblockcount,          true,   false },\n-    { \"getconnectioncount\",     &getconnectioncount,     true,   false },\n-    { \"getaddrmaninfo\",         &getaddrmaninfo,         true,   false },\n-    { \"getpeerinfo\",            &getpeerinfo,            true,   false },\n-    { \"addnode\",                &addnode,                true,   true  },\n-    { \"getaddednodeinfo\",       &getaddednodeinfo,       true,   true  },\n-    { \"getdifficulty\",          &getdifficulty,          true,   false },\n-    { \"getinfo\",                &getinfo,                true,   false },\n-    { \"getsubsidy\",             &getsubsidy,             true,   false },\n-    { \"getmininginfo\",          &getmininginfo,          true,   false },\n-    { \"scaninput\",              &scaninput,              true,   true },\n-    { \"getnewaddress\",          &getnewaddress,          true,   false },\n-    { \"getnettotals\",           &getnettotals,           true,   true  },\n-    { \"ntptime\",                &ntptime,                true,   true  },\n-    { \"getaccountaddress\",      &getaccountaddress,      true,   false },\n-    { \"setaccount\",             &setaccount,             true,   false },\n-    { \"getaccount\",             &getaccount,             false,  false },\n-    { \"getaddressesbyaccount\",  &getaddressesbyaccount,  true,   false },\n-    { \"sendtoaddress\",          &sendtoaddress,          false,  false },\n-    { \"mergecoins\",             &mergecoins,             false,  false },\n-    { \"getreceivedbyaddress\",   &getreceivedbyaddress,   false,  false },\n-    { \"getreceivedbyaccount\",   &getreceivedbyaccount,   false,  false },\n-    { \"listreceivedbyaddress\",  &listreceivedbyaddress,  false,  false },\n-    { \"listreceivedbyaccount\",  &listreceivedbyaccount,  false,  false },\n-    { \"backupwallet\",           &backupwallet,           true,   false },\n-    { \"keypoolrefill\",          &keypoolrefill,          true,   false },\n-    { \"keypoolreset\",           &keypoolreset,           true,   false },\n-    { \"walletpassphrase\",       &walletpassphrase,       true,   false },\n-    { \"walletpassphrasechange\", &walletpassphrasechange, false,  false },\n-    { \"walletlock\",             &walletlock,             true,   false },\n-    { \"encryptwallet\",          &encryptwallet,          false,  false },\n-    { \"validateaddress\",        &validateaddress,        true,   false },\n-    { \"getbalance\",             &getbalance,             false,  false },\n-    { \"move\",                   &movecmd,                false,  false },\n-    { \"sendfrom\",               &sendfrom,               false,  false },\n-    { \"sendmany\",               &sendmany,               false,  false },\n-    { \"addmultisigaddress\",     &addmultisigaddress,     false,  false },\n-    { \"addredeemscript\",        &addredeemscript,        false,  false },\n-    { \"getrawmempool\",          &getrawmempool,          true,   false },\n-    { \"getblock\",               &getblock,               false,  false },\n-    { \"getblockbynumber\",       &getblockbynumber,       false,  false },\n-    { \"dumpblock\",              &dumpblock,              false,  false },\n-    { \"dumpblockbynumber\",      &dumpblockbynumber,      false,  false },\n-    { \"getblockhash\",           &getblockhash,           false,  false },\n-    { \"gettransaction\",         &gettransaction,         false,  false },\n-    { \"listtransactions\",       &listtransactions,       false,  false },\n-    { \"listaddressgroupings\",   &listaddressgroupings,   false,  false },\n-    { \"signmessage\",            &signmessage,            false,  false },\n-    { \"verifymessage\",          &verifymessage,          false,  false },\n-    { \"getwork\",                &getwork,                true,   false },\n-    { \"getworkex\",              &getworkex,              true,   false },\n-    { \"listaccounts\",           &listaccounts,           false,  false },\n-    { \"settxfee\",               &settxfee,               false,  false },\n-    { \"getblocktemplate\",       &getblocktemplate,       true,   false },\n-    { \"submitblock\",            &submitblock,            false,  false },\n-    { \"listsinceblock\",         &listsinceblock,         false,  false },\n-    { \"dumpprivkey\",            &dumpprivkey,            false,  false },\n-    { \"dumppem\",                &dumppem,                true,   false },\n-    { \"dumpwallet\",             &dumpwallet,             true,   false },\n-    { \"importwallet\",           &importwallet,           false,  false },\n-    { \"importprivkey\",          &importprivkey,          false,  false },\n-    { \"importaddress\",          &importaddress,          false,  true  },\n-    { \"removeaddress\",          &removeaddress,          false,  true  },\n-    { \"listunspent\",            &listunspent,            false,  false },\n-    { \"getrawtransaction\",      &getrawtransaction,      false,  false },\n-    { \"createrawtransaction\",   &createrawtransaction,   false,  false },\n-    { \"decoderawtransaction\",   &decoderawtransaction,   false,  false },\n-    { \"createmultisig\",         &createmultisig,         false,  false },\n-    { \"decodescript\",           &decodescript,           false,  false },\n-    { \"signrawtransaction\",     &signrawtransaction,     false,  false },\n-    { \"sendrawtransaction\",     &sendrawtransaction,     false,  false },\n-    { \"getcheckpoint\",          &getcheckpoint,          true,   false },\n-    { \"reservebalance\",         &reservebalance,         false,  true},\n-    { \"checkwallet\",            &checkwallet,            false,  true},\n-    { \"repairwallet\",           &repairwallet,           false,  true},\n-    { \"resendtx\",               &resendtx,               false,  true},\n-    { \"makekeypair\",            &makekeypair,            false,  true},\n-    { \"newmalleablekey\",        &newmalleablekey,        false,  false},\n-    { \"adjustmalleablekey\",     &adjustmalleablekey,     false,  false},\n-    { \"adjustmalleablepubkey\",  &adjustmalleablepubkey,  false,  false},\n-    { \"listmalleableviews\",     &listmalleableviews,     false,  false},\n-    { \"dumpmalleablekey\",       &dumpmalleablekey,       false,  false},\n-    { \"importmalleablekey\",     &importmalleablekey,     true,   false },\n-    { \"encryptdata\",            &encryptdata,            false,  false },\n-    { \"decryptdata\",            &decryptdata,            false,  false },\n-    { \"encryptmessage\",         &encryptmessage,         false,  false },\n-    { \"decryptmessage\",         &decryptmessage,         false,  false },\n-    { \"sendalert\",              &sendalert,              false,  false},\n+    { \"help\",                       &help,                        true,   true },\n+    { \"stop\",                       &stop,                        true,   true },\n+    { \"getbestblockhash\",           &getbestblockhash,            true,   false },\n+    { \"getblockcount\",              &getblockcount,               true,   false },\n+    { \"getconnectioncount\",         &getconnectioncount,          true,   false },\n+    { \"getaddrmaninfo\",             &getaddrmaninfo,              true,   false },\n+    { \"getpeerinfo\",                &getpeerinfo,                 true,   false },\n+    { \"addnode\",                    &addnode,                     true,   true  },\n+    { \"getaddednodeinfo\",           &getaddednodeinfo,            true,   true  },\n+    { \"getdifficulty\",              &getdifficulty,               true,   false },\n+    { \"getinfo\",                    &getinfo,                     true,   false },\n+    { \"getsubsidy\",                 &getsubsidy,                  true,   false },\n+    { \"getmininginfo\",              &getmininginfo,               true,   false },\n+    { \"scaninput\",                  &scaninput,                   true,   true },\n+    { \"getnewaddress\",              &getnewaddress,               true,   false },\n+    { \"getnettotals\",               &getnettotals,                true,   true  },\n+    { \"ntptime\",                    &ntptime,                     true,   true  },\n+    { \"getaccountaddress\",          &getaccountaddress,           true,   false },\n+    { \"setaccount\",                 &setaccount,                  true,   false },\n+    { \"getaccount\",                 &getaccount,                  false,  false },\n+    { \"getaddressesbyaccount\",      &getaddressesbyaccount,       true,   false },\n+    { \"sendtoaddress\",              &sendtoaddress,               false,  false },\n+    { \"mergecoins\",                 &mergecoins,                  false,  false },\n+    { \"getreceivedbyaddress\",       &getreceivedbyaddress,        false,  false },\n+    { \"getreceivedbyaccount\",       &getreceivedbyaccount,        false,  false },\n+    { \"listreceivedbyaddress\",      &listreceivedbyaddress,       false,  false },\n+    { \"listreceivedbyaccount\",      &listreceivedbyaccount,       false,  false },\n+    { \"backupwallet\",               &backupwallet,                true,   false },\n+    { \"keypoolrefill\",              &keypoolrefill,               true,   false },\n+    { \"keypoolreset\",               &keypoolreset,                true,   false },\n+    { \"walletpassphrase\",           &walletpassphrase,            true,   false },\n+    { \"walletpassphrasechange\",     &walletpassphrasechange,      false,  false },\n+    { \"walletlock\",                 &walletlock,                  true,   false },\n+    { \"encryptwallet\",              &encryptwallet,               false,  false },\n+    { \"validateaddress\",            &validateaddress,             true,   false },\n+    { \"getbalance\",                 &getbalance,                  false,  false },\n+    { \"move\",                       &movecmd,                     false,  false },\n+    { \"sendfrom\",                   &sendfrom,                    false,  false },\n+    { \"sendmany\",                   &sendmany,                    false,  false },\n+    { \"addmultisigaddress\",         &addmultisigaddress,          false,  false },\n+    { \"addredeemscript\",            &addredeemscript,             false,  false },\n+    { \"getrawmempool\",              &getrawmempool,               true,   false },\n+    { \"getblock\",                   &getblock,                    false,  false },\n+    { \"getblockbynumber\",           &getblockbynumber,            false,  false },\n+    { \"dumpblock\",                  &dumpblock,                   false,  false },\n+    { \"dumpblockbynumber\",          &dumpblockbynumber,           false,  false },\n+    { \"getblockhash\",               &getblockhash,                false,  false },\n+    { \"gettransaction\",             &gettransaction,              false,  false },\n+    { \"listtransactions\",           &listtransactions,            false,  false },\n+    { \"listaddressgroupings\",       &listaddressgroupings,        false,  false },\n+    { \"signmessage\",                &signmessage,                 false,  false },\n+    { \"verifymessage\",              &verifymessage,               false,  false },\n+    { \"getwork\",                    &getwork,                     true,   false },\n+    { \"getworkex\",                  &getworkex,                   true,   false },\n+    { \"listaccounts\",               &listaccounts,                false,  false },\n+    { \"settxfee\",                   &settxfee,                    false,  false },\n+    { \"getblocktemplate\",           &getblocktemplate,            true,   false },\n+    { \"submitblock\",                &submitblock,                 false,  false },\n+    { \"listsinceblock\",             &listsinceblock,              false,  false },\n+    { \"dumpprivkey\",                &dumpprivkey,                 false,  false },\n+    { \"dumppem\",                    &dumppem,                     true,   false },\n+    { \"dumpwallet\",                 &dumpwallet,                  true,   false },\n+    { \"importwallet\",               &importwallet,                false,  false },\n+    { \"importprivkey\",              &importprivkey,               false,  false },\n+    { \"importaddress\",              &importaddress,               false,  true  },\n+    { \"removeaddress\",              &removeaddress,               false,  true  },\n+    { \"listunspent\",                &listunspent,                 false,  false },\n+    { \"getrawtransaction\",          &getrawtransaction,           false,  false },\n+    { \"createrawtransaction\",       &createrawtransaction,        false,  false },\n+    { \"decoderawtransaction\",       &decoderawtransaction,        false,  false },\n+    { \"createmultisig\",             &createmultisig,              false,  false },\n+    { \"decodescript\",               &decodescript,                false,  false },\n+    { \"signrawtransaction\",         &signrawtransaction,          false,  false },\n+    { \"sendrawtransaction\",         &sendrawtransaction,          false,  false },\n+    { \"getcheckpoint\",              &getcheckpoint,               true,   false },\n+    { \"reservebalance\",             &reservebalance,              false,  true},\n+    { \"checkwallet\",                &checkwallet,                 false,  true},\n+    { \"repairwallet\",               &repairwallet,                false,  true},\n+    { \"resendwallettransactions\",   &resendwallettransactions,    false,  true},\n+    { \"makekeypair\",                &makekeypair,                 false,  true},\n+    { \"newmalleablekey\",            &newmalleablekey,             false,  false},\n+    { \"adjustmalleablekey\",         &adjustmalleablekey,          false,  false},\n+    { \"adjustmalleablepubkey\",      &adjustmalleablepubkey,       false,  false},\n+    { \"listmalleableviews\",         &listmalleableviews,          false,  false},\n+    { \"dumpmalleablekey\",           &dumpmalleablekey,            false,  false},\n+    { \"importmalleablekey\",         &importmalleablekey,          true,   false },\n+    { \"encryptdata\",                &encryptdata,                 false,  false },\n+    { \"decryptdata\",                &decryptdata,                 false,  false },\n+    { \"encryptmessage\",             &encryptmessage,              false,  false },\n+    { \"decryptmessage\",             &decryptmessage,              false,  false },\n+    { \"sendalert\",                  &sendalert,                   false,  false},\n };\n \n CRPCTable::CRPCTable()"
      },
      {
        "sha": "6c707ea87fcf72712b38b112d19d852920642fbe",
        "filename": "src/bitcoinrpc.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/28dd1046a20941d28bbdd1be11fe42b6f77a8569/src/bitcoinrpc.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/28dd1046a20941d28bbdd1be11fe42b6f77a8569/src/bitcoinrpc.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoinrpc.h?ref=28dd1046a20941d28bbdd1be11fe42b6f77a8569",
        "patch": "@@ -203,7 +203,7 @@ extern json_spirit::Value getinfo(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value reservebalance(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value checkwallet(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value repairwallet(const json_spirit::Array& params, bool fHelp);\n-extern json_spirit::Value resendtx(const json_spirit::Array& params, bool fHelp);\n+extern json_spirit::Value resendwallettransactions(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value makekeypair(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value mergecoins(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value newmalleablekey(const json_spirit::Array& params, bool fHelp);"
      },
      {
        "sha": "ba586e990243777cc293d20297526f34b32d0b38",
        "filename": "src/rpcwallet.cpp",
        "status": "modified",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/28dd1046a20941d28bbdd1be11fe42b6f77a8569/src/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/28dd1046a20941d28bbdd1be11fe42b6f77a8569/src/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.cpp?ref=28dd1046a20941d28bbdd1be11fe42b6f77a8569",
        "patch": "@@ -1867,6 +1867,29 @@ Value resendtx(const Array& params, bool fHelp)\n     return Value::null;\n }\n \n+Value resendwallettransactions(const Array& params, bool fHelp)\n+{\n+    if (fHelp || params.size() != 0)\n+        throw runtime_error(\n+            \"resendwallettransactions\\n\"\n+            \"Immediately re-broadcast unconfirmed wallet transactions to all peers.\\n\"\n+            \"Intended only for testing; the wallet code periodically re-broadcasts\\n\"\n+            \"automatically.\\n\"\n+            \"Returns array of transaction ids that were re-broadcast.\\n\"\n+            );\n+\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n+    std::vector<uint256> txids = pwalletMain->ResendWalletTransactionsBefore(GetTime());\n+    Array result;\n+    BOOST_FOREACH(const uint256& txid, txids)\n+    {\n+        result.push_back(txid.ToString());\n+    }\n+    return result;\n+}\n+\n+\n // Make a public-private key pair\n Value makekeypair(const Array& params, bool fHelp)\n {"
      },
      {
        "sha": "0d0cf99dedd852052561c827dd1994bbb63072bc",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 57,
        "deletions": 57,
        "changes": 114,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/28dd1046a20941d28bbdd1be11fe42b6f77a8569/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/28dd1046a20941d28bbdd1be11fe42b6f77a8569/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=28dd1046a20941d28bbdd1be11fe42b6f77a8569",
        "patch": "@@ -1485,83 +1485,83 @@ void CWallet::ReacceptWalletTransactions()\n     }\n }\n \n-void CWalletTx::RelayWalletTransaction(CTxDB& txdb)\n+bool CWalletTx::RelayWalletTransaction(CTxDB& txdb)\n {\n-    BOOST_FOREACH(const CMerkleTx& tx, vtxPrev)\n-    {\n-        if (!(tx.IsCoinBase() || tx.IsCoinStake()))\n-        {\n-            uint256 hash = tx.GetHash();\n-            if (!txdb.ContainsTx(hash))\n-                RelayTransaction((CTransaction)tx, hash);\n-        }\n-    }\n-    if (!(IsCoinBase() || IsCoinStake()))\n+    uint256 hash = GetHash();\n+    if (IsCoinBase() || IsCoinStake() || txdb.ContainsTx(hash) || !InMempool())\n+        return false;\n+\n+    for(std::vector<CMerkleTx>::const_iterator it = vtxPrev.begin(); it != vtxPrev.end(); it++)\n     {\n-        uint256 hash = GetHash();\n+        const CMerkleTx& tx = *it;\n+        uint256 hash = tx.GetHash();\n+\n+        if (tx.IsCoinBase() || tx.IsCoinStake())\n+            continue;\n+\n         if (!txdb.ContainsTx(hash))\n-        {\n-            printf(\"Relaying wtx %s\\n\", hash.ToString().substr(0,10).c_str());\n-            RelayTransaction((CTransaction)*this, hash);\n-        }\n+            RelayTransaction((CTransaction)tx, hash);\n     }\n+\n+    printf(\"Relaying wtx %s\\n\", hash.ToString().substr(0,10).c_str());\n+    RelayTransaction((CTransaction)*this, hash);\n+    return true;\n }\n \n-void CWalletTx::RelayWalletTransaction()\n+bool CWalletTx::RelayWalletTransaction()\n {\n    CTxDB txdb(\"r\");\n-   RelayWalletTransaction(txdb);\n+   return RelayWalletTransaction(txdb);\n }\n \n-void CWallet::ResendWalletTransactions(bool fForceResend)\n+std::vector<uint256> CWallet::ResendWalletTransactionsBefore(int64_t nTime)\n {\n-    if (!fForceResend) {\n-        // Do this infrequently and randomly to avoid giving away\n-        // that these are our transactions.\n-        static int64_t nNextTime = GetRand(GetTime() + 30 * 60);\n-        if (GetTime() < nNextTime)\n-            return;\n-        bool fFirst = (nNextTime == 0);\n-        nNextTime = GetTime() + GetRand(30 * 60);\n-        if (fFirst)\n-            return;\n+    std::vector<uint256> result;\n \n-        // Only do it if there's been a new block since last time\n-        static int64_t nLastTime = 0;\n-        if (nTimeBestReceived < nLastTime)\n-            return;\n-        nLastTime = GetTime();\n+    LOCK(cs_wallet);\n+    // Sort them in chronological order\n+    map<unsigned int, CWalletTx*> mapSorted;\n+    BOOST_FOREACH(PAIRTYPE(const uint256, CWalletTx)& item, mapWallet)\n+    {\n+        CWalletTx& wtx = item.second;\n+        // Don't rebroadcast if newer than nTime:\n+        if (wtx.nTimeReceived > nTime)\n+            continue;\n+        mapSorted.insert(make_pair(wtx.nTimeReceived, &wtx));\n     }\n-\n-    // Rebroadcast any of our txes that aren't in a block yet\n-    printf(\"ResendWalletTransactions()\\n\");\n-    CTxDB txdb(\"r\");\n+    BOOST_FOREACH(PAIRTYPE(const unsigned int, CWalletTx*)& item, mapSorted)\n     {\n-        LOCK(cs_wallet);\n-        // Sort them in chronological order\n-        multimap<unsigned int, CWalletTx*> mapSorted;\n-        BOOST_FOREACH(PAIRTYPE(const uint256, CWalletTx)& item, mapWallet)\n-        {\n-            CWalletTx& wtx = item.second;\n-            // Don't rebroadcast until it's had plenty of time that\n-            // it should have gotten in already by now.\n-            if (fForceResend || nTimeBestReceived - (int64_t)wtx.nTimeReceived > 5 * 60)\n-                mapSorted.insert(make_pair(wtx.nTimeReceived, &wtx));\n-        }\n-        BOOST_FOREACH(PAIRTYPE(const unsigned int, CWalletTx*)& item, mapSorted)\n-        {\n-            CWalletTx& wtx = *item.second;\n-            if (wtx.CheckTransaction())\n-                wtx.RelayWalletTransaction(txdb);\n-            else\n-                printf(\"ResendWalletTransactions() : CheckTransaction failed for transaction %s\\n\", wtx.GetHash().ToString().c_str());\n-        }\n+        CWalletTx& wtx = *item.second;\n+        if (wtx.RelayWalletTransaction())\n+            result.push_back(wtx.GetHash());\n     }\n+    return result;\n }\n \n+void CWallet::ResendWalletTransactions(int64_t nBestBlockTime)\n+{\n+    int64_t nNow = GetTime();\n \n+    // Do this infrequently and randomly to avoid giving away\n+    // that these are our transactions.\n+    if (nNow < nNextResend)\n+        return;\n+    bool fFirst = (nNextResend == 0);\n+    nNextResend = PoissonNextSend(nNow, 5*60);\n+    if (fFirst)\n+        return;\n \n+    // Only do it if there's been a new block since last time\n+    if (nBestBlockTime < nLastResend)\n+        return;\n+    nLastResend = nNow;\n \n+    // Rebroadcast unconfirmed txes older than 5 minutes before the last\n+    // block was found:\n+    std::vector<uint256> relayed = ResendWalletTransactionsBefore(nBestBlockTime - 5*60);\n+    if (!relayed.empty())\n+        printf(\"CWallet::ResendWalletTransactions: rebroadcast %\" PRIszu \" unconfirmed transactions\\n\", relayed.size());\n+}\n \n \n //////////////////////////////////////////////////////////////////////////////"
      },
      {
        "sha": "26cf745e3ca355868ca49dbcea3648cb08f39bc7",
        "filename": "src/wallet.h",
        "status": "modified",
        "additions": 9,
        "deletions": 3,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/28dd1046a20941d28bbdd1be11fe42b6f77a8569/src/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/28dd1046a20941d28bbdd1be11fe42b6f77a8569/src/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.h?ref=28dd1046a20941d28bbdd1be11fe42b6f77a8569",
        "patch": "@@ -85,6 +85,9 @@ class CWallet : public CCryptoKeyStore\n     // the maximum wallet format version: memory-only variable that specifies to what version this wallet may be upgraded\n     int nWalletMaxVersion;\n \n+    int64_t nNextResend;\n+    int64_t nLastResend;\n+\n     // stake mining statistics\n     uint64_t nKernelsTried;\n     uint64_t nCoinDaysTried;\n@@ -126,6 +129,8 @@ class CWallet : public CCryptoKeyStore\n         nMasterKeyMaxID = 0;\n         pwalletdbEncryption = NULL;\n         pwalletdbDecryption = NULL;\n+        nNextResend = 0;\n+        nLastResend = 0;\n         nOrderPosNext = 0;\n         nKernelsTried = 0;\n         nCoinDaysTried = 0;\n@@ -219,7 +224,8 @@ class CWallet : public CCryptoKeyStore\n     int ScanForWalletTransactions(CBlockIndex* pindexStart, bool fUpdate = false);\n     int ScanForWalletTransaction(const uint256& hashTx);\n     void ReacceptWalletTransactions();\n-    void ResendWalletTransactions(bool fForceResend=false);\n+    void ResendWalletTransactions(int64_t nBestBlockTime);\n+    std::vector<uint256> ResendWalletTransactionsBefore(int64_t nTime);\n     int64_t GetBalance() const;\n     int64_t GetWatchOnlyBalance() const;\n     int64_t GetUnconfirmedBalance() const;\n@@ -560,8 +566,8 @@ class CWalletTx : public CMerkleTx\n     bool AcceptWalletTransaction(CTxDB& txdb, bool fCheckInputs=true);\n     bool AcceptWalletTransaction();\n \n-    void RelayWalletTransaction(CTxDB& txdb);\n-    void RelayWalletTransaction();\n+    bool RelayWalletTransaction(CTxDB& txdb);\n+    bool RelayWalletTransaction();\n };\n \n "
      }
    ]
  },
  {
    "sha": "ff2771c19c508cb38d0a7d2cb5af6a24c6db45be",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmZjI3NzFjMTljNTA4Y2IzOGQwYTdkMmNiNWFmNmEyNGM2ZGI0NWJl",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-04-01T20:20:51Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-04-01T20:20:51Z"
      },
      "message": "RPC: In addition to public key pairs, adjustmalleablepubkey method now understands malleable addresses and key views.",
      "tree": {
        "sha": "9061894fbd01955a46ae5b68d1ff9ab9555e2c5d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9061894fbd01955a46ae5b68d1ff9ab9555e2c5d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ff2771c19c508cb38d0a7d2cb5af6a24c6db45be",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ff2771c19c508cb38d0a7d2cb5af6a24c6db45be",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ff2771c19c508cb38d0a7d2cb5af6a24c6db45be",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ff2771c19c508cb38d0a7d2cb5af6a24c6db45be/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "28dd1046a20941d28bbdd1be11fe42b6f77a8569",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/28dd1046a20941d28bbdd1be11fe42b6f77a8569",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/28dd1046a20941d28bbdd1be11fe42b6f77a8569"
      }
    ],
    "stats": {
      "total": 41,
      "additions": 33,
      "deletions": 8
    },
    "files": [
      {
        "sha": "355d6ddf60b0890449b7b07fe4784a3be75e1bb6",
        "filename": "src/key.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 1,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ff2771c19c508cb38d0a7d2cb5af6a24c6db45be/src/key.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ff2771c19c508cb38d0a7d2cb5af6a24c6db45be/src/key.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.cpp?ref=ff2771c19c508cb38d0a7d2cb5af6a24c6db45be",
        "patch": "@@ -761,6 +761,8 @@ bool CMalleablePubKey::SetString(const std::string& strMalleablePubKey)\n     if (!DecodeBase58Check(strMalleablePubKey, vchTemp)) {\n         throw key_error(\"CMalleablePubKey::SetString() : Provided key data seems corrupted.\");\n     }\n+    if (vchTemp.size() != 68)\n+        return false;\n \n     CDataStream ssKey(vchTemp, SER_NETWORK, PROTOCOL_VERSION);\n     ssKey >> *this;\n@@ -1028,7 +1030,8 @@ bool CMalleableKey::SetString(const std::string& strMutableKey)\n     if (!DecodeBase58Check(strMutableKey, vchTemp)) {\n         throw key_error(\"CMalleableKey::SetString() : Provided key data seems corrupted.\");\n     }\n-\n+    if (vchTemp.size() != 66)\n+        return false;\n     CDataStream ssKey(vchTemp, SER_NETWORK, PROTOCOL_VERSION);\n     ssKey >> *this;\n \n@@ -1172,6 +1175,9 @@ bool CMalleableKeyView::SetString(const std::string& strMutableKey)\n         throw key_error(\"CMalleableKeyView::SetString() : Provided key data seems corrupted.\");\n     }\n \n+    if (vchTemp.size() != 67)\n+        return false;\n+\n     CDataStream ssKey(vchTemp, SER_NETWORK, PROTOCOL_VERSION);\n     ssKey >> *this;\n "
      },
      {
        "sha": "757e7f48f7597c385f80e6ba99bd9ccc9800d9d3",
        "filename": "src/rpcwallet.cpp",
        "status": "modified",
        "additions": 26,
        "deletions": 7,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ff2771c19c508cb38d0a7d2cb5af6a24c6db45be/src/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ff2771c19c508cb38d0a7d2cb5af6a24c6db45be/src/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.cpp?ref=ff2771c19c508cb38d0a7d2cb5af6a24c6db45be",
        "patch": "@@ -1744,6 +1744,7 @@ Value validateaddress(const Array& params, bool fHelp)\n             CMalleableKeyView view;\n             bool isMine = pwalletMain->GetMalleableView(mpk, view);\n             ret.push_back(Pair(\"ismine\", isMine));\n+            ret.push_back(Pair(\"PubkeyPair\", mpk.ToString()));\n \n             if (isMine)\n                 ret.push_back(Pair(\"KeyView\", view.ToString()));\n@@ -1981,16 +1982,34 @@ Value adjustmalleablepubkey(const Array& params, bool fHelp)\n {\n     if (fHelp || params.size() > 2 || params.size() == 0)\n         throw runtime_error(\n-            \"adjustmalleablepubkey <Malleable public key data>\\n\"\n-            \"Calculate new public key using provided malleable public key data.\\n\");\n+            \"adjustmalleablepubkey <Malleable address, key view or public key pair>\\n\"\n+            \"Calculate new public key using provided data.\\n\");\n \n-    string pubKeyPair = params[0].get_str();\n+    string strData = params[0].get_str();\n     CMalleablePubKey malleablePubKey;\n \n-    if (pubKeyPair.size() == 136) {\n-        malleablePubKey.setvch(ParseHex(pubKeyPair));\n-    } else\n-        malleablePubKey.SetString(pubKeyPair);\n+    do\n+    {\n+        CBitcoinAddress addr(strData);\n+        if (addr.IsValid() && addr.IsPair())\n+        {\n+            // Initialize malleable pubkey with address data\n+            malleablePubKey = CMalleablePubKey(addr.GetData());\n+            break;\n+        }\n+        CMalleableKeyView viewTmp(strData);\n+        if (viewTmp.IsValid())\n+        {\n+            // Shazaam, we have a valid key view here.\n+            malleablePubKey = viewTmp.GetMalleablePubKey();\n+            break;\n+        }\n+        if (malleablePubKey.SetString(strData))\n+            break; // A valid public key pair\n+\n+        throw runtime_error(\"Though your data seems a valid Base58 string, we were unable to recognize it.\");\n+    }\n+    while(false);\n \n     CPubKey R, vchPubKeyVariant;\n     malleablePubKey.GetVariant(R, vchPubKeyVariant);"
      }
    ]
  },
  {
    "sha": "172d8aee9bfed60590e21606ce316798f88ef888",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxNzJkOGFlZTliZmVkNjA1OTBlMjE2MDZjZTMxNjc5OGY4OGVmODg4",
    "commit": {
      "author": {
        "name": "svost",
        "email": "ya.nowa@yandex.ru",
        "date": "2016-04-01T20:54:15Z"
      },
      "committer": {
        "name": "svost",
        "email": "ya.nowa@yandex.ru",
        "date": "2016-04-01T20:54:15Z"
      },
      "message": "Remove BOOST_FOREACH macro",
      "tree": {
        "sha": "685a99516dd49b13d8cc9b7176227263cd01b1d3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/685a99516dd49b13d8cc9b7176227263cd01b1d3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/172d8aee9bfed60590e21606ce316798f88ef888",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/172d8aee9bfed60590e21606ce316798f88ef888",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/172d8aee9bfed60590e21606ce316798f88ef888",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/172d8aee9bfed60590e21606ce316798f88ef888/comments",
    "author": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "98e0cb3b063719f7647b2775514688d63d0fe1eb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/98e0cb3b063719f7647b2775514688d63d0fe1eb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/98e0cb3b063719f7647b2775514688d63d0fe1eb"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 7,
      "deletions": 7
    },
    "files": [
      {
        "sha": "a9728ff77ad573abf7775e454f8f64f24006c82e",
        "filename": "src/checkpoints.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/172d8aee9bfed60590e21606ce316798f88ef888/src/checkpoints.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/172d8aee9bfed60590e21606ce316798f88ef888/src/checkpoints.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/checkpoints.cpp?ref=172d8aee9bfed60590e21606ce316798f88ef888",
        "patch": "@@ -213,8 +213,8 @@ namespace Checkpoints\n             // relay the checkpoint\n             if (!checkpointMessage.IsNull())\n             {\n-                BOOST_FOREACH(CNode* pnode, vNodes)\n-                    checkpointMessage.RelayTo(pnode);\n+                for (std::vector<CNode*>::iterator it = vNodes.begin(); it != vNodes.end(); ++it)\n+                    checkpointMessage.RelayTo(*it);\n             }\n             return true;\n         }\n@@ -370,8 +370,8 @@ namespace Checkpoints\n         // Relay checkpoint\n         {\n             LOCK(cs_vNodes);\n-            BOOST_FOREACH(CNode* pnode, vNodes)\n-                checkpoint.RelayTo(pnode);\n+            for (std::vector<CNode*>::iterator it = vNodes.begin(); it != vNodes.end(); ++it)\n+                checkpoint.RelayTo(*it);\n         }\n         return true;\n     }"
      },
      {
        "sha": "0d19e8b611090af3b20296565a8ed7b1e8a04eaf",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/172d8aee9bfed60590e21606ce316798f88ef888/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/172d8aee9bfed60590e21606ce316798f88ef888/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=172d8aee9bfed60590e21606ce316798f88ef888",
        "patch": "@@ -1970,10 +1970,10 @@ bool CBlock::SetBestChain(CTxDB& txdb, CBlockIndex* pindexNew)\n         }\n \n         // Connect further blocks\n-        BOOST_REVERSE_FOREACH(CBlockIndex *pindex, vpindexSecondary)\n+        for (std::vector<CBlockIndex*>::reverse_iterator rit = vpindexSecondary.rbegin(); rit != vpindexSecondary.rend(); ++rit)\n         {\n             CBlock block;\n-            if (!block.ReadFromDisk(pindex))\n+            if (!block.ReadFromDisk(*rit))\n             {\n                 printf(\"SetBestChain() : ReadFromDisk failed\\n\");\n                 break;\n@@ -1983,7 +1983,7 @@ bool CBlock::SetBestChain(CTxDB& txdb, CBlockIndex* pindexNew)\n                 break;\n             }\n             // errors now are not fatal, we still did a reorganisation to a new chain in a valid way\n-            if (!block.SetBestChainInner(txdb, pindex))\n+            if (!block.SetBestChainInner(txdb, *rit))\n                 break;\n         }\n     }"
      }
    ]
  },
  {
    "sha": "ada534e074bce0009c3cdc14b0f51b8a51a994e8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphZGE1MzRlMDc0YmNlMDAwOWMzY2RjMTRiMGY1MWI4YTUxYTk5NGU4",
    "commit": {
      "author": {
        "name": "svost",
        "email": "ya.nowa@yandex.ru",
        "date": "2016-04-01T20:56:30Z"
      },
      "committer": {
        "name": "svost",
        "email": "ya.nowa@yandex.ru",
        "date": "2016-04-01T20:56:30Z"
      },
      "message": "Rewrite pszTimestamp var: get rid of char*",
      "tree": {
        "sha": "78344161d17ecff393795b2c2c1319ede3735e3e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/78344161d17ecff393795b2c2c1319ede3735e3e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ada534e074bce0009c3cdc14b0f51b8a51a994e8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ada534e074bce0009c3cdc14b0f51b8a51a994e8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ada534e074bce0009c3cdc14b0f51b8a51a994e8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ada534e074bce0009c3cdc14b0f51b8a51a994e8/comments",
    "author": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "172d8aee9bfed60590e21606ce316798f88ef888",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/172d8aee9bfed60590e21606ce316798f88ef888",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/172d8aee9bfed60590e21606ce316798f88ef888"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "73dade9b396a82fc33a8437bad60221b71b15da7",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ada534e074bce0009c3cdc14b0f51b8a51a994e8/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ada534e074bce0009c3cdc14b0f51b8a51a994e8/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=ada534e074bce0009c3cdc14b0f51b8a51a994e8",
        "patch": "@@ -2775,12 +2775,12 @@ bool LoadBlockIndex(bool fAllowNew)\n         //    CTxOut(empty)\n         //  vMerkleTree: 4cb33b3b6a\n \n-        const char* pszTimestamp = \"https://bitcointalk.org/index.php?topic=134179.msg1502196#msg1502196\";\n+        const string strTimestamp = \"https://bitcointalk.org/index.php?topic=134179.msg1502196#msg1502196\";\n         CTransaction txNew;\n         txNew.nTime = 1360105017;\n         txNew.vin.resize(1);\n         txNew.vout.resize(1);\n-        txNew.vin[0].scriptSig = CScript() << 486604799 << CBigNum(9999) << vector<unsigned char>((const unsigned char*)pszTimestamp, (const unsigned char*)pszTimestamp + strlen(pszTimestamp));\n+        txNew.vin[0].scriptSig = CScript() << 486604799 << CBigNum(9999) << vector<unsigned char>(strTimestamp.begin(), strTimestamp.end());\n         txNew.vout[0].SetEmpty();\n         CBlock block;\n         block.vtx.push_back(txNew);"
      }
    ]
  },
  {
    "sha": "2889514fe2fccc630713627d992bfe784db50d8e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyODg5NTE0ZmUyZmNjYzYzMDcxMzYyN2Q5OTJiZmU3ODRkYjUwZDhl",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "CryptoManiac@users.noreply.github.com",
        "date": "2016-04-02T14:50:17Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "CryptoManiac@users.noreply.github.com",
        "date": "2016-04-02T14:50:17Z"
      },
      "message": "Merge pull request #297 from svost/patch\n\nMinor fix",
      "tree": {
        "sha": "ee6e2e4ca86b996dc0af51050a1b656cb0c75061",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ee6e2e4ca86b996dc0af51050a1b656cb0c75061"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2889514fe2fccc630713627d992bfe784db50d8e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2889514fe2fccc630713627d992bfe784db50d8e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2889514fe2fccc630713627d992bfe784db50d8e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2889514fe2fccc630713627d992bfe784db50d8e/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ff2771c19c508cb38d0a7d2cb5af6a24c6db45be",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ff2771c19c508cb38d0a7d2cb5af6a24c6db45be",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ff2771c19c508cb38d0a7d2cb5af6a24c6db45be"
      },
      {
        "sha": "ada534e074bce0009c3cdc14b0f51b8a51a994e8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ada534e074bce0009c3cdc14b0f51b8a51a994e8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ada534e074bce0009c3cdc14b0f51b8a51a994e8"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 9,
      "deletions": 9
    },
    "files": [
      {
        "sha": "a9728ff77ad573abf7775e454f8f64f24006c82e",
        "filename": "src/checkpoints.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2889514fe2fccc630713627d992bfe784db50d8e/src/checkpoints.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2889514fe2fccc630713627d992bfe784db50d8e/src/checkpoints.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/checkpoints.cpp?ref=2889514fe2fccc630713627d992bfe784db50d8e",
        "patch": "@@ -213,8 +213,8 @@ namespace Checkpoints\n             // relay the checkpoint\n             if (!checkpointMessage.IsNull())\n             {\n-                BOOST_FOREACH(CNode* pnode, vNodes)\n-                    checkpointMessage.RelayTo(pnode);\n+                for (std::vector<CNode*>::iterator it = vNodes.begin(); it != vNodes.end(); ++it)\n+                    checkpointMessage.RelayTo(*it);\n             }\n             return true;\n         }\n@@ -370,8 +370,8 @@ namespace Checkpoints\n         // Relay checkpoint\n         {\n             LOCK(cs_vNodes);\n-            BOOST_FOREACH(CNode* pnode, vNodes)\n-                checkpoint.RelayTo(pnode);\n+            for (std::vector<CNode*>::iterator it = vNodes.begin(); it != vNodes.end(); ++it)\n+                checkpoint.RelayTo(*it);\n         }\n         return true;\n     }"
      },
      {
        "sha": "73dade9b396a82fc33a8437bad60221b71b15da7",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2889514fe2fccc630713627d992bfe784db50d8e/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2889514fe2fccc630713627d992bfe784db50d8e/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=2889514fe2fccc630713627d992bfe784db50d8e",
        "patch": "@@ -1970,10 +1970,10 @@ bool CBlock::SetBestChain(CTxDB& txdb, CBlockIndex* pindexNew)\n         }\n \n         // Connect further blocks\n-        BOOST_REVERSE_FOREACH(CBlockIndex *pindex, vpindexSecondary)\n+        for (std::vector<CBlockIndex*>::reverse_iterator rit = vpindexSecondary.rbegin(); rit != vpindexSecondary.rend(); ++rit)\n         {\n             CBlock block;\n-            if (!block.ReadFromDisk(pindex))\n+            if (!block.ReadFromDisk(*rit))\n             {\n                 printf(\"SetBestChain() : ReadFromDisk failed\\n\");\n                 break;\n@@ -1983,7 +1983,7 @@ bool CBlock::SetBestChain(CTxDB& txdb, CBlockIndex* pindexNew)\n                 break;\n             }\n             // errors now are not fatal, we still did a reorganisation to a new chain in a valid way\n-            if (!block.SetBestChainInner(txdb, pindex))\n+            if (!block.SetBestChainInner(txdb, *rit))\n                 break;\n         }\n     }\n@@ -2775,12 +2775,12 @@ bool LoadBlockIndex(bool fAllowNew)\n         //    CTxOut(empty)\n         //  vMerkleTree: 4cb33b3b6a\n \n-        const char* pszTimestamp = \"https://bitcointalk.org/index.php?topic=134179.msg1502196#msg1502196\";\n+        const string strTimestamp = \"https://bitcointalk.org/index.php?topic=134179.msg1502196#msg1502196\";\n         CTransaction txNew;\n         txNew.nTime = 1360105017;\n         txNew.vin.resize(1);\n         txNew.vout.resize(1);\n-        txNew.vin[0].scriptSig = CScript() << 486604799 << CBigNum(9999) << vector<unsigned char>((const unsigned char*)pszTimestamp, (const unsigned char*)pszTimestamp + strlen(pszTimestamp));\n+        txNew.vin[0].scriptSig = CScript() << 486604799 << CBigNum(9999) << vector<unsigned char>(strTimestamp.begin(), strTimestamp.end());\n         txNew.vout[0].SetEmpty();\n         CBlock block;\n         block.vtx.push_back(txNew);"
      }
    ]
  },
  {
    "sha": "7312b1bf5b1677aac2f2200a722f435edac05e28",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3MzEyYjFiZjViMTY3N2FhYzJmMjIwMGE3MjJmNDM1ZWRhYzA1ZTI4",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-04-02T19:49:54Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-04-02T19:49:54Z"
      },
      "message": "Our internal state doesn't matter.",
      "tree": {
        "sha": "9cd24029718560ebc66a15d3b7249186f3a737f1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9cd24029718560ebc66a15d3b7249186f3a737f1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7312b1bf5b1677aac2f2200a722f435edac05e28",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7312b1bf5b1677aac2f2200a722f435edac05e28",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7312b1bf5b1677aac2f2200a722f435edac05e28",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7312b1bf5b1677aac2f2200a722f435edac05e28/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2889514fe2fccc630713627d992bfe784db50d8e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2889514fe2fccc630713627d992bfe784db50d8e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2889514fe2fccc630713627d992bfe784db50d8e"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "1adeab216a4c7960357d782c9f94010ace430b1d",
        "filename": "src/key.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7312b1bf5b1677aac2f2200a722f435edac05e28/src/key.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7312b1bf5b1677aac2f2200a722f435edac05e28/src/key.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.cpp?ref=7312b1bf5b1677aac2f2200a722f435edac05e28",
        "patch": "@@ -311,7 +311,7 @@ bool CKey::SetSecret(const CSecret& vchSecret, bool fCompressed)\n     }\n     BN_clear_free(bn);\n     fSet = true;\n-    if (fCompressed || fCompressedPubKey)\n+    if (fCompressed)\n         SetCompressedPubKey();\n     return true;\n }"
      }
    ]
  },
  {
    "sha": "fca2d829296585f96d4255c877f1dfbfb0f5ac90",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmY2EyZDgyOTI5NjU4NWY5NmQ0MjU1Yzg3N2YxZGZiZmIwZjVhYzkw",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-04-02T20:55:12Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-04-02T20:55:12Z"
      },
      "message": "Preserve key compression attribute while initializing a new instance of CKey.\n\nTHis bug was originally reported by Alex AXe: https://bitcointalk.org/index.php?topic=704756.msg14401298#msg14401298",
      "tree": {
        "sha": "27baa823200e053e0d142b135d4c60bd398de48f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/27baa823200e053e0d142b135d4c60bd398de48f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fca2d829296585f96d4255c877f1dfbfb0f5ac90",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fca2d829296585f96d4255c877f1dfbfb0f5ac90",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fca2d829296585f96d4255c877f1dfbfb0f5ac90",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fca2d829296585f96d4255c877f1dfbfb0f5ac90/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7312b1bf5b1677aac2f2200a722f435edac05e28",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7312b1bf5b1677aac2f2200a722f435edac05e28",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7312b1bf5b1677aac2f2200a722f435edac05e28"
      }
    ],
    "stats": {
      "total": 36,
      "additions": 13,
      "deletions": 23
    },
    "files": [
      {
        "sha": "d5caca9a7501a5598db1c56cb618bf3ba5ed9142",
        "filename": "src/key.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 9,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fca2d829296585f96d4255c877f1dfbfb0f5ac90/src/key.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fca2d829296585f96d4255c877f1dfbfb0f5ac90/src/key.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.cpp?ref=fca2d829296585f96d4255c877f1dfbfb0f5ac90",
        "patch": "@@ -165,10 +165,10 @@ const unsigned char vchMaxModHalfOrder[32] = {\n \n const unsigned char *vchZero = NULL;\n \n-void CKey::SetCompressedPubKey()\n+void CKey::SetCompressedPubKey(bool fCompressed)\n {\n-    EC_KEY_set_conv_form(pkey, POINT_CONVERSION_COMPRESSED);\n-    fCompressedPubKey = true;\n+    EC_KEY_set_conv_form(pkey, fCompressed ? POINT_CONVERSION_COMPRESSED : POINT_CONVERSION_UNCOMPRESSED);\n+    fCompressedPubKey = fCompressed;\n }\n \n void CKey::Reset()\n@@ -264,8 +264,7 @@ void CKey::MakeNewKey(bool fCompressed)\n {\n     if (!EC_KEY_generate_key(pkey))\n         throw key_error(\"CKey::MakeNewKey() : EC_KEY_generate_key failed\");\n-    if (fCompressed)\n-        SetCompressedPubKey();\n+    SetCompressedPubKey(fCompressed);\n     fSet = true;\n }\n \n@@ -311,8 +310,7 @@ bool CKey::SetSecret(const CSecret& vchSecret, bool fCompressed)\n     }\n     BN_clear_free(bn);\n     fSet = true;\n-    if (fCompressed)\n-        SetCompressedPubKey();\n+    SetCompressedPubKey(fCompressed);\n     return true;\n }\n \n@@ -429,8 +427,7 @@ bool CKey::SignCompact(uint256 hash, std::vector<unsigned char>& vchSig)\n         {\n             CKey keyRec;\n             keyRec.fSet = true;\n-            if (fCompressedPubKey)\n-                keyRec.SetCompressedPubKey();\n+            keyRec.SetCompressedPubKey(fCompressedPubKey);\n             if (ECDSA_SIG_recover_key_GFp(keyRec.pkey, sig, (unsigned char*)&hash, sizeof(hash), i, 1) == 1)\n                 if (keyRec.GetPubKey() == this->GetPubKey())\n                 {"
      },
      {
        "sha": "45ce39bd4dc78015688ba3d343d260a607a5dff5",
        "filename": "src/key.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fca2d829296585f96d4255c877f1dfbfb0f5ac90/src/key.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fca2d829296585f96d4255c877f1dfbfb0f5ac90/src/key.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.h?ref=fca2d829296585f96d4255c877f1dfbfb0f5ac90",
        "patch": "@@ -240,10 +240,10 @@ class CKey\n     bool IsNull() const;\n     bool IsCompressed() const;\n \n-    void SetCompressedPubKey();\n+    void SetCompressedPubKey(bool fCompressed=true);\n     void MakeNewKey(bool fCompressed=true);\n     bool SetPrivKey(const CPrivKey& vchPrivKey);\n-    bool SetSecret(const CSecret& vchSecret, bool fCompressed = true);\n+    bool SetSecret(const CSecret& vchSecret, bool fCompressed = false);\n     CSecret GetSecret(bool &fCompressed) const;\n     CSecret GetSecret() const;\n     CPrivKey GetPrivKey() const;"
      },
      {
        "sha": "0aca325fd3bcfd9be91e0645268c68a18ffe5913",
        "filename": "src/keystore.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 6,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fca2d829296585f96d4255c877f1dfbfb0f5ac90/src/keystore.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fca2d829296585f96d4255c877f1dfbfb0f5ac90/src/keystore.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/keystore.cpp?ref=fca2d829296585f96d4255c877f1dfbfb0f5ac90",
        "patch": "@@ -158,8 +158,7 @@ bool CCryptoKeyStore::Unlock(const CKeyingMaterial& vMasterKeyIn)\n                 return false;\n             CKey key;\n             key.SetSecret(vchSecret);\n-            if (vchPubKey.size() == 33)\n-                key.SetCompressedPubKey();\n+            key.SetCompressedPubKey(vchPubKey.IsCompressed());\n             if (key.GetPubKey() == vchPubKey)\n                 break;\n             return false;\n@@ -318,8 +317,7 @@ bool CCryptoKeyStore::GetKey(const CKeyID &address, CKey& keyOut) const\n             if (vchSecret.size() != 32)\n                 return false;\n             keyOut.SetSecret(vchSecret);\n-            if (vchPubKey.size() == 33)\n-                keyOut.SetCompressedPubKey();\n+            keyOut.SetCompressedPubKey(vchPubKey.IsCompressed());\n             return true;\n         }\n     }\n@@ -399,8 +397,7 @@ bool CCryptoKeyStore::DecryptKeys(const CKeyingMaterial& vMasterKeyIn)\n                 return false;\n             CKey key;\n             key.SetSecret(vchSecret);\n-            if (vchPubKey.size() == 33)\n-                key.SetCompressedPubKey();\n+            key.SetCompressedPubKey(vchPubKey.IsCompressed());\n             if (!CBasicKeyStore::AddKey(key))\n                 return false;\n         }"
      },
      {
        "sha": "0f39cdf3fbafafab1b174a5e1c5132608d88e41d",
        "filename": "src/walletdb.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 6,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fca2d829296585f96d4255c877f1dfbfb0f5ac90/src/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fca2d829296585f96d4255c877f1dfbfb0f5ac90/src/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/walletdb.cpp?ref=fca2d829296585f96d4255c877f1dfbfb0f5ac90",
        "patch": "@@ -352,9 +352,7 @@ ReadKeyValue(CWallet* pwallet, CDataStream& ssKey, CDataStream& ssValue,\n                     strErr = \"Error reading wallet database: CPrivKey pubkey inconsistency\";\n                     return false;\n                 }\n-                if (vchPubKey.size() == 33) {\n-                    key.SetCompressedPubKey();\n-                }\n+                key.SetCompressedPubKey(vchPubKey.IsCompressed());\n                 if (!key.IsValid())\n                 {\n                     strErr = \"Error reading wallet database: invalid CPrivKey\";\n@@ -375,9 +373,7 @@ ReadKeyValue(CWallet* pwallet, CDataStream& ssKey, CDataStream& ssValue,\n                     strErr = \"Error reading wallet database: CWalletKey pubkey inconsistency\";\n                     return false;\n                 }\n-                if (vchPubKey.size() == 33) {\n-                    key.SetCompressedPubKey();\n-                }\n+                key.SetCompressedPubKey(vchPubKey.IsCompressed());\n                 if (!key.IsValid())\n                 {\n                     strErr = \"Error reading wallet database: invalid CWalletKey\";"
      }
    ]
  },
  {
    "sha": "66a1164b7c96dc231b6ac6668f997be1591fe4a9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2NmExMTY0YjdjOTZkYzIzMWI2YWM2NjY4Zjk5N2JlMTU5MWZlNGE5",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-04-02T22:31:18Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-04-02T22:31:18Z"
      },
      "message": "Get rid of fCompressedPubKey attribute.",
      "tree": {
        "sha": "0a67121ebc07e5066a6866256845a73e8474b230",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0a67121ebc07e5066a6866256845a73e8474b230"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/66a1164b7c96dc231b6ac6668f997be1591fe4a9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/66a1164b7c96dc231b6ac6668f997be1591fe4a9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/66a1164b7c96dc231b6ac6668f997be1591fe4a9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/66a1164b7c96dc231b6ac6668f997be1591fe4a9/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fca2d829296585f96d4255c877f1dfbfb0f5ac90",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fca2d829296585f96d4255c877f1dfbfb0f5ac90",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fca2d829296585f96d4255c877f1dfbfb0f5ac90"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 5,
      "deletions": 8
    },
    "files": [
      {
        "sha": "6657ffd70b328e6f47edd79722a99bedbf5ad7b6",
        "filename": "src/key.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 6,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/66a1164b7c96dc231b6ac6668f997be1591fe4a9/src/key.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/66a1164b7c96dc231b6ac6668f997be1591fe4a9/src/key.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.cpp?ref=66a1164b7c96dc231b6ac6668f997be1591fe4a9",
        "patch": "@@ -168,12 +168,11 @@ const unsigned char *vchZero = NULL;\n void CKey::SetCompressedPubKey(bool fCompressed)\n {\n     EC_KEY_set_conv_form(pkey, fCompressed ? POINT_CONVERSION_COMPRESSED : POINT_CONVERSION_UNCOMPRESSED);\n-    fCompressedPubKey = fCompressed;\n }\n \n void CKey::Reset()\n {\n-    fCompressedPubKey = fSet = false;\n+    fSet = false;\n     if (pkey != NULL)\n         EC_KEY_free(pkey);\n     pkey = EC_KEY_new_by_curve_name(NID_secp256k1);\n@@ -193,7 +192,6 @@ CKey::CKey(const CKey& b)\n     if (pkey == NULL)\n         throw key_error(\"CKey::CKey(const CKey&) : EC_KEY_dup failed\");\n     fSet = b.fSet;\n-    fCompressedPubKey = b.fCompressedPubKey;\n }\n \n CKey::CKey(const CSecret& b, bool fCompressed)\n@@ -209,7 +207,6 @@ CKey& CKey::operator=(const CKey& b)\n     if (!EC_KEY_copy(pkey, b.pkey))\n         throw key_error(\"CKey::operator=(const CKey&) : EC_KEY_copy failed\");\n     fSet = b.fSet;\n-    fCompressedPubKey = b.fCompressedPubKey;\n     return (*this);\n }\n \n@@ -226,7 +223,7 @@ bool CKey::IsNull() const\n \n bool CKey::IsCompressed() const\n {\n-    return fCompressedPubKey;\n+    return (EC_KEY_get_conv_form(pkey) == POINT_CONVERSION_COMPRESSED);\n }\n \n bool CKey::CheckSignatureElement(const unsigned char *vch, int len, bool half) {\n@@ -325,7 +322,7 @@ CSecret CKey::GetSecret(bool &fCompressed) const\n     int n=BN_bn2bin(bn,&vchRet[32 - nBytes]);\n     if (n != nBytes)\n         throw key_error(\"CKey::GetSecret(): BN_bn2bin failed\");\n-    fCompressed = fCompressedPubKey;\n+    fCompressed = IsCompressed();\n     return vchRet;\n }\n \n@@ -420,6 +417,7 @@ bool CKey::SignCompact(uint256 hash, std::vector<unsigned char>& vchSig)\n     vchSig.resize(65,0);\n     int nBitsR = BN_num_bits(sig->r);\n     int nBitsS = BN_num_bits(sig->s);\n+    bool fCompressedPubKey = IsCompressed();\n     if (nBitsR <= 256 && nBitsS <= 256)\n     {\n         int8_t nRecId = -1;"
      },
      {
        "sha": "cb5a7122c27aaba0ed30d44366c5bfeacc2ddc38",
        "filename": "src/key.h",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/66a1164b7c96dc231b6ac6668f997be1591fe4a9/src/key.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/66a1164b7c96dc231b6ac6668f997be1591fe4a9/src/key.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.h?ref=66a1164b7c96dc231b6ac6668f997be1591fe4a9",
        "patch": "@@ -223,7 +223,6 @@ class CKey\n protected:\n     EC_KEY* pkey;\n     bool fSet;\n-    bool fCompressedPubKey;\n \n public:\n \n@@ -243,7 +242,7 @@ class CKey\n     void SetCompressedPubKey(bool fCompressed=true);\n     void MakeNewKey(bool fCompressed=true);\n     bool SetPrivKey(const CPrivKey& vchPrivKey);\n-    bool SetSecret(const CSecret& vchSecret, bool fCompressed = false);\n+    bool SetSecret(const CSecret& vchSecret, bool fCompressed = true);\n     CSecret GetSecret(bool &fCompressed) const;\n     CSecret GetSecret() const;\n     CPrivKey GetPrivKey() const;"
      }
    ]
  },
  {
    "sha": "d1bec999dd56fa20e745ea0db99a0f034ab65505",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkMWJlYzk5OWRkNTZmYTIwZTc0NWVhMGRiOTlhMGYwMzRhYjY1NTA1",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar.ad@gmail.com",
        "date": "2016-04-03T19:46:34Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar.ad@gmail.com",
        "date": "2016-04-03T19:46:34Z"
      },
      "message": "Bump version to 0.5.8\n\nUncompressed public keys issue has been fixed.",
      "tree": {
        "sha": "eb8eeba840af6114c36afbf3e4a8a495793547b9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/eb8eeba840af6114c36afbf3e4a8a495793547b9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d1bec999dd56fa20e745ea0db99a0f034ab65505",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d1bec999dd56fa20e745ea0db99a0f034ab65505",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d1bec999dd56fa20e745ea0db99a0f034ab65505",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d1bec999dd56fa20e745ea0db99a0f034ab65505/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "66a1164b7c96dc231b6ac6668f997be1591fe4a9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/66a1164b7c96dc231b6ac6668f997be1591fe4a9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/66a1164b7c96dc231b6ac6668f997be1591fe4a9"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "c86ac7c3052fdc80e32bf5637c1905bcb998b193",
        "filename": "src/clientversion.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d1bec999dd56fa20e745ea0db99a0f034ab65505/src/clientversion.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d1bec999dd56fa20e745ea0db99a0f034ab65505/src/clientversion.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/clientversion.h?ref=d1bec999dd56fa20e745ea0db99a0f034ab65505",
        "patch": "@@ -9,7 +9,7 @@\n #define CLIENT_VERSION_MAJOR       0\n #define CLIENT_VERSION_MINOR       7\n #define CLIENT_VERSION_REVISION    6\n-#define CLIENT_VERSION_BUILD       7\n+#define CLIENT_VERSION_BUILD       8\n \n // Converts the parameter X to a string after macro replacement on X has been performed.\n // Don't merge these into one macro!"
      },
      {
        "sha": "f1826918379ec0f02c4b860a8f332f4da66cb193",
        "filename": "src/version.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d1bec999dd56fa20e745ea0db99a0f034ab65505/src/version.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d1bec999dd56fa20e745ea0db99a0f034ab65505/src/version.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/version.h?ref=d1bec999dd56fa20e745ea0db99a0f034ab65505",
        "patch": "@@ -30,7 +30,7 @@ static const int DATABASE_VERSION = 70507;\n // network protocol versioning\n //\n \n-static const int PROTOCOL_VERSION = 60017;\n+static const int PROTOCOL_VERSION = 60018;\n \n // earlier versions not supported as of Feb 2012, and are disconnected\n static const int MIN_PROTO_VERSION = 209;\n@@ -45,6 +45,6 @@ static const int NOBLKS_VERSION_END = 60006;\n \n #define DISPLAY_VERSION_MAJOR       0\n #define DISPLAY_VERSION_MINOR       5\n-#define DISPLAY_VERSION_REVISION    7\n+#define DISPLAY_VERSION_REVISION    8\n \n #endif"
      }
    ]
  },
  {
    "sha": "7f2362e25716721184d6f3e8e284447f347ce327",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3ZjIzNjJlMjU3MTY3MjExODRkNmYzZThlMjg0NDQ3ZjM0N2NlMzI3",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-04-03T23:26:33Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-04-03T23:26:33Z"
      },
      "message": "Fix importprivkey issues.\n\n1) Handle parameters correctly;\n2) Create label entry for a newly imported private key.",
      "tree": {
        "sha": "b9090575bc94c9e4c8fdc0b9d705cd5a7007279f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b9090575bc94c9e4c8fdc0b9d705cd5a7007279f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7f2362e25716721184d6f3e8e284447f347ce327",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7f2362e25716721184d6f3e8e284447f347ce327",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7f2362e25716721184d6f3e8e284447f347ce327",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7f2362e25716721184d6f3e8e284447f347ce327/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "66a1164b7c96dc231b6ac6668f997be1591fe4a9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/66a1164b7c96dc231b6ac6668f997be1591fe4a9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/66a1164b7c96dc231b6ac6668f997be1591fe4a9"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 7,
      "deletions": 7
    },
    "files": [
      {
        "sha": "b32b86eb3ddbbf16c217eff0e7e6e891dd480ac6",
        "filename": "src/bitcoinrpc.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7f2362e25716721184d6f3e8e284447f347ce327/src/bitcoinrpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7f2362e25716721184d6f3e8e284447f347ce327/src/bitcoinrpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoinrpc.cpp?ref=7f2362e25716721184d6f3e8e284447f347ce327",
        "patch": "@@ -1256,6 +1256,7 @@ Array RPCConvertValues(const std::string &strMethod, const std::vector<std::stri\n     if (strMethod == \"keypoolrefill\"          && n > 0) ConvertTo<int64_t>(params[0]);\n     if (strMethod == \"keypoolreset\"           && n > 0) ConvertTo<int64_t>(params[0]);\n     if (strMethod == \"importaddress\"          && n > 2) ConvertTo<bool>(params[2]);\n+    if (strMethod == \"importprivkey\"          && n > 2) ConvertTo<bool>(params[2]);\n \n     return params;\n }"
      },
      {
        "sha": "756863c9c8f19d04be4703e0698e7724e3d110d2",
        "filename": "src/rpcdump.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 7,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7f2362e25716721184d6f3e8e284447f347ce327/src/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7f2362e25716721184d6f3e8e284447f347ce327/src/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcdump.cpp?ref=7f2362e25716721184d6f3e8e284447f347ce327",
        "patch": "@@ -67,23 +67,22 @@ Value importprivkey(const Array& params, bool fHelp)\n     {\n         LOCK2(cs_main, pwalletMain->cs_wallet);\n \n-        pwalletMain->MarkDirty();\n-        pwalletMain->SetAddressBookName(addr, strLabel);\n-\n         // Don't throw error in case a key is already there\n         if (pwalletMain->HaveKey(keyid))\n             return Value::null;\n \n         pwalletMain->mapKeyMetadata[addr].nCreateTime = 1;\n-\n         if (!pwalletMain->AddKey(key))\n             throw JSONRPCError(RPC_WALLET_ERROR, \"Error adding key to wallet\");\n \n-        // whenever a key is imported, we need to scan the whole chain\n-        pwalletMain->nTimeFirstKey = 1; // 0 would be considered 'no value'\n+        pwalletMain->MarkDirty();\n+        pwalletMain->SetAddressBookName(addr, strLabel);\n \n-        if (fRescan) \n+        if (fRescan)\n         {\n+            // whenever a key is imported, we need to scan the whole chain\n+            pwalletMain->nTimeFirstKey = 1; // 0 would be considered 'no value'\n+\n             pwalletMain->ScanForWalletTransactions(pindexGenesisBlock, true);\n             pwalletMain->ReacceptWalletTransactions();\n         }"
      }
    ]
  },
  {
    "sha": "8d035aaa5cc5d8543515b49d33ac0f335ef147a1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4ZDAzNWFhYTVjYzVkODU0MzUxNWI0OWQzM2FjMGYzMzVlZjE0N2Ex",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-04-03T23:27:59Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-04-03T23:27:59Z"
      },
      "message": "Merge branch 'master' of github.com:novacoin-project/novacoin",
      "tree": {
        "sha": "c07269041271c5d493fae5587c689d767134bec9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c07269041271c5d493fae5587c689d767134bec9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8d035aaa5cc5d8543515b49d33ac0f335ef147a1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8d035aaa5cc5d8543515b49d33ac0f335ef147a1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8d035aaa5cc5d8543515b49d33ac0f335ef147a1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8d035aaa5cc5d8543515b49d33ac0f335ef147a1/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7f2362e25716721184d6f3e8e284447f347ce327",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7f2362e25716721184d6f3e8e284447f347ce327",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7f2362e25716721184d6f3e8e284447f347ce327"
      },
      {
        "sha": "d1bec999dd56fa20e745ea0db99a0f034ab65505",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d1bec999dd56fa20e745ea0db99a0f034ab65505",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d1bec999dd56fa20e745ea0db99a0f034ab65505"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "c86ac7c3052fdc80e32bf5637c1905bcb998b193",
        "filename": "src/clientversion.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8d035aaa5cc5d8543515b49d33ac0f335ef147a1/src/clientversion.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8d035aaa5cc5d8543515b49d33ac0f335ef147a1/src/clientversion.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/clientversion.h?ref=8d035aaa5cc5d8543515b49d33ac0f335ef147a1",
        "patch": "@@ -9,7 +9,7 @@\n #define CLIENT_VERSION_MAJOR       0\n #define CLIENT_VERSION_MINOR       7\n #define CLIENT_VERSION_REVISION    6\n-#define CLIENT_VERSION_BUILD       7\n+#define CLIENT_VERSION_BUILD       8\n \n // Converts the parameter X to a string after macro replacement on X has been performed.\n // Don't merge these into one macro!"
      },
      {
        "sha": "f1826918379ec0f02c4b860a8f332f4da66cb193",
        "filename": "src/version.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8d035aaa5cc5d8543515b49d33ac0f335ef147a1/src/version.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8d035aaa5cc5d8543515b49d33ac0f335ef147a1/src/version.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/version.h?ref=8d035aaa5cc5d8543515b49d33ac0f335ef147a1",
        "patch": "@@ -30,7 +30,7 @@ static const int DATABASE_VERSION = 70507;\n // network protocol versioning\n //\n \n-static const int PROTOCOL_VERSION = 60017;\n+static const int PROTOCOL_VERSION = 60018;\n \n // earlier versions not supported as of Feb 2012, and are disconnected\n static const int MIN_PROTO_VERSION = 209;\n@@ -45,6 +45,6 @@ static const int NOBLKS_VERSION_END = 60006;\n \n #define DISPLAY_VERSION_MAJOR       0\n #define DISPLAY_VERSION_MINOR       5\n-#define DISPLAY_VERSION_REVISION    7\n+#define DISPLAY_VERSION_REVISION    8\n \n #endif"
      }
    ]
  },
  {
    "sha": "b30efd5b1a048a45c2948d695691811c96e23ddc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMzBlZmQ1YjFhMDQ4YTQ1YzI5NDhkNjk1NjkxODExYzk2ZTIzZGRj",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-04-03T23:42:25Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-04-03T23:42:25Z"
      },
      "message": "RPC: now decryptdata/decryptmessage methods are able to understand WIF formatted private key.",
      "tree": {
        "sha": "962e81a1ae4c7a427b1236255f37e00fb04bdae9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/962e81a1ae4c7a427b1236255f37e00fb04bdae9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b30efd5b1a048a45c2948d695691811c96e23ddc",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b30efd5b1a048a45c2948d695691811c96e23ddc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b30efd5b1a048a45c2948d695691811c96e23ddc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b30efd5b1a048a45c2948d695691811c96e23ddc/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8d035aaa5cc5d8543515b49d33ac0f335ef147a1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8d035aaa5cc5d8543515b49d33ac0f335ef147a1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8d035aaa5cc5d8543515b49d33ac0f335ef147a1"
      }
    ],
    "stats": {
      "total": 45,
      "additions": 32,
      "deletions": 13
    },
    "files": [
      {
        "sha": "91f03026b296d532296ea8c524e6f5f1a5eda1e9",
        "filename": "src/rpccrypt.cpp",
        "status": "modified",
        "additions": 32,
        "deletions": 13,
        "changes": 45,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b30efd5b1a048a45c2948d695691811c96e23ddc/src/rpccrypt.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b30efd5b1a048a45c2948d695691811c96e23ddc/src/rpccrypt.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpccrypt.cpp?ref=b30efd5b1a048a45c2948d695691811c96e23ddc",
        "patch": "@@ -30,17 +30,26 @@ Value decryptdata(const Array& params, bool fHelp)\n {\n     if (fHelp || params.size() != 2)\n         throw runtime_error(\n-            \"decryptdata <novacoin address> <encrypted stream>\\n\"\n+            \"decryptdata <novacoin address or private key> <encrypted stream>\\n\"\n             \"Decrypt octet stream.\\n\");\n \n     EnsureWalletIsUnlocked();\n-    CBitcoinAddress addr(params[0].get_str());\n-\n-    CKeyID keyID;\n-    addr.GetKeyID(keyID);\n-\n     CKey key;\n-    pwalletMain->GetKey(keyID, key);\n+    CBitcoinAddress addr(params[0].get_str());\n+    if (addr.IsValid()) {\n+        CKeyID keyID;\n+        addr.GetKeyID(keyID);\n+        if (!pwalletMain->GetKey(keyID, key))\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"We have no private key for this address\");\n+    }\n+    else {\n+        CBitcoinSecret vchSecret;\n+        if (!vchSecret.SetString(params[0].get_str()))\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Provided private key is inconsistent.\");\n+        bool fCompressed;\n+        CSecret secret = vchSecret.GetSecret(fCompressed);\n+        key.SetSecret(secret, fCompressed);\n+    }\n \n     vector<unsigned char> vchDecrypted;\n     key.DecryptData(ParseHex(params[1].get_str()), vchDecrypted);\n@@ -68,17 +77,27 @@ Value decryptmessage(const Array& params, bool fHelp)\n {\n     if (fHelp || params.size() != 2)\n         throw runtime_error(\n-            \"decryptmessage <novacoin address> <encrypted message>\\n\"\n+            \"decryptmessage <novacoin address or private key> <encrypted message>\\n\"\n             \"Decrypt message string.\\n\");\n \n     EnsureWalletIsUnlocked();\n-    CBitcoinAddress addr(params[0].get_str());\n-\n-    CKeyID keyID;\n-    addr.GetKeyID(keyID);\n \n     CKey key;\n-    pwalletMain->GetKey(keyID, key);\n+    CBitcoinAddress addr(params[0].get_str());\n+    if (addr.IsValid()) {\n+        CKeyID keyID;\n+        addr.GetKeyID(keyID);\n+        if (!pwalletMain->GetKey(keyID, key))\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"We have no private key for this address\");\n+    }\n+    else {\n+        CBitcoinSecret vchSecret;\n+        if (!vchSecret.SetString(params[0].get_str()))\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Provided private key is inconsistent.\");\n+        bool fCompressed;\n+        CSecret secret = vchSecret.GetSecret(fCompressed);\n+        key.SetSecret(secret, fCompressed);\n+    }\n \n     vector<unsigned char> vchEncrypted;\n     if (!DecodeBase58Check(params[1].get_str(), vchEncrypted))"
      }
    ]
  },
  {
    "sha": "e0cafea1f968b8924075fe64d9e879d441565cb6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplMGNhZmVhMWY5NjhiODkyNDA3NWZlNjRkOWU4NzlkNDQxNTY1Y2I2",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-04-04T01:46:22Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-04-04T01:46:22Z"
      },
      "message": "Revert \"Split CMerkleTx::SetMerkleBranch\"\n\nThis reverts commit 40530c08006088e6f610063f1c49428aa0b272f6.",
      "tree": {
        "sha": "df2d272de291d046c7f7b6a5615de0a423595cf5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/df2d272de291d046c7f7b6a5615de0a423595cf5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e0cafea1f968b8924075fe64d9e879d441565cb6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e0cafea1f968b8924075fe64d9e879d441565cb6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e0cafea1f968b8924075fe64d9e879d441565cb6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e0cafea1f968b8924075fe64d9e879d441565cb6/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b30efd5b1a048a45c2948d695691811c96e23ddc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b30efd5b1a048a45c2948d695691811c96e23ddc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b30efd5b1a048a45c2948d695691811c96e23ddc"
      }
    ],
    "stats": {
      "total": 68,
      "additions": 39,
      "deletions": 29
    },
    "files": [
      {
        "sha": "613de6b17433f441ca16fa8e4bb92a75ab1e3b4d",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 36,
        "deletions": 25,
        "changes": 61,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e0cafea1f968b8924075fe64d9e879d441565cb6/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e0cafea1f968b8924075fe64d9e879d441565cb6/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=e0cafea1f968b8924075fe64d9e879d441565cb6",
        "patch": "@@ -435,40 +435,51 @@ CTransaction::GetLegacySigOpCount() const\n     return nSigOps;\n }\n \n-int CMerkleTx::SetMerkleBranch()\n+int CMerkleTx::SetMerkleBranch(const CBlock* pblock)\n {\n-    // Load the block this tx is in\n-    CTxIndex txindex;\n-    if (!CTxDB(\"r\").ReadTxIndex(GetHash(), txindex))\n-        return 0;\n-    CBlock blockTmp;\n-    if (!blockTmp.ReadFromDisk(txindex.pos.nFile, txindex.pos.nBlockPos))\n-        return 0;\n-    return SetMerkleBranch(blockTmp);\n-}\n+    if (fClient)\n+    {\n+        if (hashBlock == 0)\n+            return 0;\n+    }\n+    else\n+    {\n+        CBlock blockTmp;\n \n-int CMerkleTx::SetMerkleBranch(const CBlock& block)\n-{\n-    // Update the tx's hashBlock\n-    hashBlock = block.GetHash();\n+        if (pblock == NULL)\n+        {\n+            // Load the block this tx is in\n+            CTxIndex txindex;\n+            if (!CTxDB(\"r\").ReadTxIndex(GetHash(), txindex))\n+                return 0;\n+            if (!blockTmp.ReadFromDisk(txindex.pos.nFile, txindex.pos.nBlockPos))\n+                return 0;\n+            pblock = &blockTmp;\n+        }\n \n-    // Locate the transaction\n-    for (nIndex = 0; nIndex < (int)block.vtx.size(); nIndex++)\n-        if (block.vtx[nIndex] == *(CTransaction*)this)\n-            break;\n-    if (nIndex == (int)block.vtx.size())\n-    {\n-        vMerkleBranch.clear();\n-        nIndex = -1;\n-        printf(\"ERROR: SetMerkleBranch() : couldn't find tx in block\\n\");\n-        return 0;\n+        // Update the tx's hashBlock\n+        hashBlock = pblock->GetHash();\n+\n+        // Locate the transaction\n+        for (nIndex = 0; nIndex < (int)pblock->vtx.size(); nIndex++)\n+            if (pblock->vtx[nIndex] == *(CTransaction*)this)\n+                break;\n+        if (nIndex == (int)pblock->vtx.size())\n+        {\n+            vMerkleBranch.clear();\n+            nIndex = -1;\n+            printf(\"ERROR: SetMerkleBranch() : couldn't find tx in block\\n\");\n+            return 0;\n+        }\n+\n+        // Fill in merkle branch\n+        vMerkleBranch = pblock->GetMerkleBranch(nIndex);\n     }\n \n     // Is the tx in a block that's in the main chain\n     map<uint256, CBlockIndex*>::iterator mi = mapBlockIndex.find(hashBlock);\n     if (mi == mapBlockIndex.end())\n         return 0;\n-\n     const CBlockIndex* pindex = (*mi).second;\n     if (!pindex || !pindex->IsInMainChain())\n         return 0;"
      },
      {
        "sha": "382ef1a33bd04b5caf015727182f24eda8058298",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e0cafea1f968b8924075fe64d9e879d441565cb6/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e0cafea1f968b8924075fe64d9e879d441565cb6/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=e0cafea1f968b8924075fe64d9e879d441565cb6",
        "patch": "@@ -794,8 +794,7 @@ class CMerkleTx : public CTransaction\n     )\n \n \n-    int SetMerkleBranch();\n-    int SetMerkleBranch(const CBlock &block);\n+    int SetMerkleBranch(const CBlock* pblock=NULL);\n     int GetDepthInMainChain(CBlockIndex* &pindexRet) const;\n     int GetDepthInMainChain() const { CBlockIndex *pindexRet; return GetDepthInMainChain(pindexRet); }\n     bool IsInMainChain() const { return GetDepthInMainChain() > 0; }"
      },
      {
        "sha": "054dca27d5cfaf368b5d01342c2d610b1639fbc5",
        "filename": "src/rpcblockchain.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e0cafea1f968b8924075fe64d9e879d441565cb6/src/rpcblockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e0cafea1f968b8924075fe64d9e879d441565cb6/src/rpcblockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcblockchain.cpp?ref=e0cafea1f968b8924075fe64d9e879d441565cb6",
        "patch": "@@ -104,7 +104,7 @@ Object blockToJSON(const CBlock& block, const CBlockIndex* blockindex, bool fPri\n     Object result;\n     result.push_back(Pair(\"hash\", block.GetHash().GetHex()));\n     CMerkleTx txGen(block.vtx[0]);\n-    txGen.SetMerkleBranch(block);\n+    txGen.SetMerkleBranch(&block);\n     result.push_back(Pair(\"confirmations\", (int)txGen.GetDepthInMainChain()));\n     result.push_back(Pair(\"size\", (int)::GetSerializeSize(block, SER_NETWORK, PROTOCOL_VERSION)));\n     result.push_back(Pair(\"height\", blockindex->nHeight));"
      },
      {
        "sha": "e72c13874e991689acfbeb301d187fb38d489007",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e0cafea1f968b8924075fe64d9e879d441565cb6/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e0cafea1f968b8924075fe64d9e879d441565cb6/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=e0cafea1f968b8924075fe64d9e879d441565cb6",
        "patch": "@@ -773,7 +773,7 @@ bool CWallet::AddToWalletIfInvolvingMe(const CTransaction& tx, const CBlock* pbl\n             CWalletTx wtx(this,tx);\n             // Get merkle branch if transaction was found in a block\n             if (pblock)\n-                wtx.SetMerkleBranch(*pblock);\n+                wtx.SetMerkleBranch(pblock);\n             return AddToWallet(wtx);\n         }\n         else"
      }
    ]
  },
  {
    "sha": "5e071d911af4b7923cdd83fd87bbd442070c2d70",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ZTA3MWQ5MTFhZjRiNzkyM2NkZDgzZmQ4N2JiZDQ0MjA3MGMyZDcw",
    "commit": {
      "author": {
        "name": "svost",
        "email": "ya.nowa@yandex.ru",
        "date": "2016-04-06T10:15:58Z"
      },
      "committer": {
        "name": "svost",
        "email": "ya.nowa@yandex.ru",
        "date": "2016-04-06T10:15:58Z"
      },
      "message": "From boost(std)::thread::hardware_concurrency description: if this value is not computable or well defined, the function returns 0.",
      "tree": {
        "sha": "711cab5692aa16dcc20e2f717118755f9a95ac4f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/711cab5692aa16dcc20e2f717118755f9a95ac4f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5e071d911af4b7923cdd83fd87bbd442070c2d70",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5e071d911af4b7923cdd83fd87bbd442070c2d70",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5e071d911af4b7923cdd83fd87bbd442070c2d70",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5e071d911af4b7923cdd83fd87bbd442070c2d70/comments",
    "author": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e0cafea1f968b8924075fe64d9e879d441565cb6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e0cafea1f968b8924075fe64d9e879d441565cb6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e0cafea1f968b8924075fe64d9e879d441565cb6"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 5,
      "deletions": 1
    },
    "files": [
      {
        "sha": "b18ae2b7c180f836f687b46f019c134ba17cd513",
        "filename": "src/kernel.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5e071d911af4b7923cdd83fd87bbd442070c2d70/src/kernel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5e071d911af4b7923cdd83fd87bbd442070c2d70/src/kernel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/kernel.cpp?ref=5e071d911af4b7923cdd83fd87bbd442070c2d70",
        "patch": "@@ -435,9 +435,13 @@ bool ScanKernelForward(unsigned char *kernel, uint32_t nBits, uint32_t nInputTxT\n     // TODO: custom threads amount\n \n     uint32_t nThreads = boost::thread::hardware_concurrency();\n+    if (nThreads == 0)\n+    {\n+       nThreads = 1;\n+       printf(\"Warning: hardware_concurrency() failed in %s:%d\\n\", __FILE__, __LINE__);\n+    }\n     uint32_t nPart = (SearchInterval.second - SearchInterval.first) / nThreads;\n \n-\n     KernelWorker *workers = new KernelWorker[nThreads];\n \n     boost::thread_group group;"
      }
    ]
  },
  {
    "sha": "ff580cdadc4691daa19aeafda08c12eba5ece7f6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmZjU4MGNkYWRjNDY5MWRhYTE5YWVhZmRhMDhjMTJlYmE1ZWNlN2Y2",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "CryptoManiac@users.noreply.github.com",
        "date": "2016-04-06T20:30:17Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "CryptoManiac@users.noreply.github.com",
        "date": "2016-04-06T20:30:17Z"
      },
      "message": "Merge pull request #300 from svost/patch\n\nMinor fix",
      "tree": {
        "sha": "711cab5692aa16dcc20e2f717118755f9a95ac4f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/711cab5692aa16dcc20e2f717118755f9a95ac4f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ff580cdadc4691daa19aeafda08c12eba5ece7f6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ff580cdadc4691daa19aeafda08c12eba5ece7f6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ff580cdadc4691daa19aeafda08c12eba5ece7f6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ff580cdadc4691daa19aeafda08c12eba5ece7f6/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e0cafea1f968b8924075fe64d9e879d441565cb6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e0cafea1f968b8924075fe64d9e879d441565cb6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e0cafea1f968b8924075fe64d9e879d441565cb6"
      },
      {
        "sha": "5e071d911af4b7923cdd83fd87bbd442070c2d70",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5e071d911af4b7923cdd83fd87bbd442070c2d70",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5e071d911af4b7923cdd83fd87bbd442070c2d70"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 5,
      "deletions": 1
    },
    "files": [
      {
        "sha": "b18ae2b7c180f836f687b46f019c134ba17cd513",
        "filename": "src/kernel.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ff580cdadc4691daa19aeafda08c12eba5ece7f6/src/kernel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ff580cdadc4691daa19aeafda08c12eba5ece7f6/src/kernel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/kernel.cpp?ref=ff580cdadc4691daa19aeafda08c12eba5ece7f6",
        "patch": "@@ -435,9 +435,13 @@ bool ScanKernelForward(unsigned char *kernel, uint32_t nBits, uint32_t nInputTxT\n     // TODO: custom threads amount\n \n     uint32_t nThreads = boost::thread::hardware_concurrency();\n+    if (nThreads == 0)\n+    {\n+       nThreads = 1;\n+       printf(\"Warning: hardware_concurrency() failed in %s:%d\\n\", __FILE__, __LINE__);\n+    }\n     uint32_t nPart = (SearchInterval.second - SearchInterval.first) / nThreads;\n \n-\n     KernelWorker *workers = new KernelWorker[nThreads];\n \n     boost::thread_group group;"
      }
    ]
  },
  {
    "sha": "1037656018bbe62d79220868f02c89d1978c026c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxMDM3NjU2MDE4YmJlNjJkNzkyMjA4NjhmMDJjODlkMTk3OGMwMjZj",
    "commit": {
      "author": {
        "name": "svost",
        "email": "ya.nowa@yandex.ru",
        "date": "2016-04-07T07:33:19Z"
      },
      "committer": {
        "name": "svost",
        "email": "ya.nowa@yandex.ru",
        "date": "2016-04-07T07:33:19Z"
      },
      "message": "Get rid of boost::counting_iterator",
      "tree": {
        "sha": "9756f7cc964aadace7248b746194e261f0d77529",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9756f7cc964aadace7248b746194e261f0d77529"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1037656018bbe62d79220868f02c89d1978c026c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1037656018bbe62d79220868f02c89d1978c026c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1037656018bbe62d79220868f02c89d1978c026c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1037656018bbe62d79220868f02c89d1978c026c/comments",
    "author": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ff580cdadc4691daa19aeafda08c12eba5ece7f6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ff580cdadc4691daa19aeafda08c12eba5ece7f6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ff580cdadc4691daa19aeafda08c12eba5ece7f6"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 1,
      "deletions": 2
    },
    "files": [
      {
        "sha": "62d8837d4e174bc7e4ebad6db83512e4ae7ad28e",
        "filename": "src/rpcmining.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1037656018bbe62d79220868f02c89d1978c026c/src/rpcmining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1037656018bbe62d79220868f02c89d1978c026c/src/rpcmining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcmining.cpp?ref=1037656018bbe62d79220868f02c89d1978c026c",
        "patch": "@@ -13,7 +13,6 @@\n \n #include <boost/format.hpp>\n #include <boost/assign/list_of.hpp>\n-#include <boost/iterator/counting_iterator.hpp>\n \n using namespace json_spirit;\n using namespace std;\n@@ -161,7 +160,7 @@ Value scaninput(const Array& params, bool fHelp)\n         }\n         else\n         {\n-            vInputs = vector<int>(boost::counting_iterator<int>( 0 ), boost::counting_iterator<int>( tx.vout.size() ));\n+            for (size_t i = 0; i != tx.vout.size(); ++i) vInputs.push_back(i);\n         }\n \n         CTxDB txdb(\"r\");"
      }
    ]
  },
  {
    "sha": "bbc17a7101bfd5744a96559ea50ab8b6febec92f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiYmMxN2E3MTAxYmZkNTc0NGE5NjU1OWVhNTBhYjhiNmZlYmVjOTJm",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "CryptoManiac@users.noreply.github.com",
        "date": "2016-04-07T17:10:10Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "CryptoManiac@users.noreply.github.com",
        "date": "2016-04-07T17:10:10Z"
      },
      "message": "Merge pull request #302 from svost/patch\n\nMinor fix",
      "tree": {
        "sha": "9756f7cc964aadace7248b746194e261f0d77529",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9756f7cc964aadace7248b746194e261f0d77529"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bbc17a7101bfd5744a96559ea50ab8b6febec92f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bbc17a7101bfd5744a96559ea50ab8b6febec92f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bbc17a7101bfd5744a96559ea50ab8b6febec92f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bbc17a7101bfd5744a96559ea50ab8b6febec92f/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ff580cdadc4691daa19aeafda08c12eba5ece7f6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ff580cdadc4691daa19aeafda08c12eba5ece7f6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ff580cdadc4691daa19aeafda08c12eba5ece7f6"
      },
      {
        "sha": "1037656018bbe62d79220868f02c89d1978c026c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1037656018bbe62d79220868f02c89d1978c026c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1037656018bbe62d79220868f02c89d1978c026c"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 1,
      "deletions": 2
    },
    "files": [
      {
        "sha": "62d8837d4e174bc7e4ebad6db83512e4ae7ad28e",
        "filename": "src/rpcmining.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bbc17a7101bfd5744a96559ea50ab8b6febec92f/src/rpcmining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bbc17a7101bfd5744a96559ea50ab8b6febec92f/src/rpcmining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcmining.cpp?ref=bbc17a7101bfd5744a96559ea50ab8b6febec92f",
        "patch": "@@ -13,7 +13,6 @@\n \n #include <boost/format.hpp>\n #include <boost/assign/list_of.hpp>\n-#include <boost/iterator/counting_iterator.hpp>\n \n using namespace json_spirit;\n using namespace std;\n@@ -161,7 +160,7 @@ Value scaninput(const Array& params, bool fHelp)\n         }\n         else\n         {\n-            vInputs = vector<int>(boost::counting_iterator<int>( 0 ), boost::counting_iterator<int>( tx.vout.size() ));\n+            for (size_t i = 0; i != tx.vout.size(); ++i) vInputs.push_back(i);\n         }\n \n         CTxDB txdb(\"r\");"
      }
    ]
  },
  {
    "sha": "c052a8c99fc6327c5fe8ffbceebf7ebd818826da",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjMDUyYThjOTlmYzYzMjdjNWZlOGZmYmNlZWJmN2ViZDgxODgyNmRh",
    "commit": {
      "author": {
        "name": "svost",
        "email": "ya.nowa@yandex.ru",
        "date": "2016-04-10T20:25:12Z"
      },
      "committer": {
        "name": "svost",
        "email": "ya.nowa@yandex.ru",
        "date": "2016-04-10T20:25:12Z"
      },
      "message": "DNSNode: fix source name",
      "tree": {
        "sha": "39de90aa25a60a5bad3add51b3d6006cb3cac64e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/39de90aa25a60a5bad3add51b3d6006cb3cac64e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c052a8c99fc6327c5fe8ffbceebf7ebd818826da",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c052a8c99fc6327c5fe8ffbceebf7ebd818826da",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c052a8c99fc6327c5fe8ffbceebf7ebd818826da",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c052a8c99fc6327c5fe8ffbceebf7ebd818826da/comments",
    "author": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bbc17a7101bfd5744a96559ea50ab8b6febec92f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bbc17a7101bfd5744a96559ea50ab8b6febec92f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bbc17a7101bfd5744a96559ea50ab8b6febec92f"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "b5249ba51af7012bc25d37e890837f9534563be7",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c052a8c99fc6327c5fe8ffbceebf7ebd818826da/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c052a8c99fc6327c5fe8ffbceebf7ebd818826da/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=c052a8c99fc6327c5fe8ffbceebf7ebd818826da",
        "patch": "@@ -974,7 +974,7 @@ void ThreadSocketHandler2(void* parg)\n // The first name is used as information source for addrman.\n // The second name should resolve to a list of seed addresses.\n static const char *strDNSSeed[][2] = {\n-    {\"novacoin.karelia.pro\", \"dnsseed.novacoin.karelia.pro\"},\n+    {\"node.novacoin.karelia.pro\", \"dnsseed.novacoin.karelia.pro\"},\n     {\"novacoin.ru\", \"dnsseed.novacoin.ru\"},\n     {\"novacoin.ru\", \"testseed.novacoin.ru\"},\n     {\"novaco.in\", \"dnsseed.novaco.in\"},"
      }
    ]
  },
  {
    "sha": "2a20c10c819a15f1b39b4bbb4e96e37becd77b35",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyYTIwYzEwYzgxOWExNWYxYjM5YjRiYmI0ZTk2ZTM3YmVjZDc3YjM1",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "CryptoManiac@users.noreply.github.com",
        "date": "2016-04-10T20:33:05Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "CryptoManiac@users.noreply.github.com",
        "date": "2016-04-10T20:33:05Z"
      },
      "message": "Update seed nodes array.",
      "tree": {
        "sha": "1941e89ea97d0df74b8e56a280ff9de074017f66",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1941e89ea97d0df74b8e56a280ff9de074017f66"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2a20c10c819a15f1b39b4bbb4e96e37becd77b35",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2a20c10c819a15f1b39b4bbb4e96e37becd77b35",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2a20c10c819a15f1b39b4bbb4e96e37becd77b35",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2a20c10c819a15f1b39b4bbb4e96e37becd77b35/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bbc17a7101bfd5744a96559ea50ab8b6febec92f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bbc17a7101bfd5744a96559ea50ab8b6febec92f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bbc17a7101bfd5744a96559ea50ab8b6febec92f"
      }
    ],
    "stats": {
      "total": 43,
      "additions": 26,
      "deletions": 17
    },
    "files": [
      {
        "sha": "4cd80712d382e4125d8bfd43dacc89c2f07bae0b",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 26,
        "deletions": 17,
        "changes": 43,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2a20c10c819a15f1b39b4bbb4e96e37becd77b35/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2a20c10c819a15f1b39b4bbb4e96e37becd77b35/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=2a20c10c819a15f1b39b4bbb4e96e37becd77b35",
        "patch": "@@ -1047,23 +1047,32 @@ void ThreadDNSAddressSeed2(void* parg)\n \n uint32_t pnSeed[] =\n {\n-    0xa52bf0da, 0x30aa43d8, 0x614488d5, 0x517b6fd5, 0xd4bf62d4, 0xb7d638d4, 0xbc12bcd1, 0xa2501bc6,\n-    0xfde617c6, 0x3337b1c6, 0x1dcd71c3, 0x2c1544c1, 0xe05f6ac1, 0x852f63c0, 0x3e2363c0, 0x15f563c0,\n-    0x430d63c0, 0x50d6a9c0, 0xf0a679c0, 0xefdeedbf, 0x7aaee8bc, 0x3a3dbbbc, 0xef218abc, 0x0bef78bc,\n-    0x8baa3eb2, 0x2bf913b2, 0x24ed9fb2, 0xb42289b2, 0x718a09b0, 0xe9433eb0, 0x559425b0, 0xc97e1fb0,\n-    0x18e1d4b0, 0x8f6cc1b0, 0xac3838ae, 0x86c0ffad, 0x6b0272a7, 0xa463f8a2, 0x6f17f3a2, 0xb3d6f3a2,\n-    0x9cd8f997, 0xd513fb94, 0x39e64880, 0x3859dd6f, 0x0b08fe6d, 0xe601fe6d, 0xeb44a26d, 0xfe53186c,\n-    0x203c2e68, 0x1c542868, 0x0caa8368, 0xb8748368, 0xccca4762, 0xc637555f, 0x638a545f, 0x59b2205f,\n-    0x52568c5f, 0xba568c5f, 0x8a568c5f, 0x31b0f45e, 0x54a0f45e, 0x37d6f15e, 0xc520175e, 0x7620175e,\n-    0xc310175e, 0x8e33b45e, 0x7abb5f5d, 0xd3014c5d, 0xa1e1485d, 0x9947645d, 0xfab8ff5c, 0xa979e65b,\n-    0xa879e65b, 0x9f79e65b, 0x9fa3d25b, 0x112a925b, 0x7b92905b, 0x60647a5b, 0x1e389d5a, 0x851afa59,\n-    0x0185ef59, 0x26549b59, 0x1c9efe57, 0xc54c1256, 0x1ad51955, 0x19d21955, 0x73c41955, 0x3f74ee55,\n-    0x633eea55, 0x6883d655, 0xfb72c655, 0x5360a653, 0x17c1ea52, 0xc661c852, 0x1ecdc852, 0x006a9752,\n-    0xf72d9252, 0x82650551, 0x36f1c851, 0x33f1c851, 0xd5c1864f, 0xb6bf1b4e, 0x96da184e, 0x40d0234d,\n-    0x9a96ab4c, 0x8fc2a84c, 0xb5dbd048, 0xf4644447, 0x2d51af47, 0xa9625445, 0x83f05243, 0x89672941,\n-    0x3a8bad3e, 0xf0a05436, 0x6ab7c936, 0x49971d32, 0xadd4482e, 0xcffd212e, 0x6730bc2e, 0x839aa12e,\n-    0x68d9692e, 0xc7183b25, 0x6c47bb25, 0x2490bb25, 0xad651c1f, 0x048a861f, 0x6937811f, 0x064b2d05,\n-    0x4d226805,\n+    0x1c542868, 0x3859dd6f, 0x203c2e68, 0xf145a6bc, 0x638a545f, 0x325da346, 0x385da346, 0xfb2b8d5f,\n+    0x52568c5f, 0xa979e65b, 0x8de6485d, 0x9f79e65b, 0x048a861f, 0x3388b55f, 0x6ff0b45e, 0x17e81f5f,\n+    0x6c47bb25, 0x1ecdc852, 0x28263db9, 0x47824e5d, 0x36f1c851, 0x2bf913b2, 0x95923cb3, 0x84e63eb2,\n+    0xefdeedbf, 0x65200092, 0xf36f6805, 0x42692d05, 0x772c1955, 0xb6bf1b4e, 0x7abb5f5d, 0xdb2fa6bc,\n+    0x90e911bf, 0x82de565f, 0x694416b2, 0x0ab600bc, 0xfcecbe6d, 0x24ed9fb2, 0x1bb618c2, 0xc64765bb,\n+    0x4e3d62c3, 0xdba24baa, 0x4b7109b0, 0x12a12cc2, 0xfc01864f, 0x0b69e85b, 0x33922c1f, 0xac611bc6,\n+    0x2a257155, 0x991d5fc0, 0xbfdabcb1, 0x9b73ee55, 0x5bc2b95d, 0xdef0762e, 0x6ab7c936, 0x9c4416b2,\n+    0xd60d864f, 0x03671f1f, 0x3b5da346, 0xc6f5c851, 0x5411b2d4, 0xe7c25702, 0x63474fb0, 0x7e11c854,\n+    0x52381d5f, 0x72fdfe59, 0x51599a05, 0xfb12b2d4, 0xaee4f15e, 0xd0e3f15e, 0x2aa2805f, 0xa1caf15e,\n+    0x34fe425e, 0x46e1f15e, 0xd7c71955, 0xaeeff15e, 0x47c2af55, 0x563d89b2, 0x67980fd9, 0xc9def15e,\n+    0x9cc51eb9, 0xdaa7aa6b, 0x78e6871f, 0x0d5d2cb2, 0x7aedf15e, 0x9bcaf15e, 0xe5f7f15e, 0x501c1759,\n+    0xdfbc4980, 0xa7397f2e, 0x31ea1a02, 0x3a27655e, 0xaa86f05c, 0xdcddf15e, 0x64689cb2, 0xd4bf62d4,\n+    0xf093eab2, 0x98def15e, 0xb6c5f15e, 0x81e8f15e, 0xe5d2fe59, 0xa312786d, 0x4cf9fe59, 0x8a922c1f,\n+    0x00c7fe59, 0x1ade565f, 0x9e4116b2, 0x2c36983e, 0x68f8f15e, 0x51b7eab2, 0x76c51eb9, 0x9edd4980,\n+    0x90ef565f, 0x0dd80857, 0xd513fb94, 0xf5bdeab2, 0xa95277b0, 0x2cf2f15e, 0x1897eab2, 0x924416b2,\n+    0x985c9b59, 0x30aa43d8, 0xf9c6745f, 0xaf862e5f, 0xe0ceeab2, 0xb9b3eab2, 0x6da4eab2, 0xa4fdeab2,\n+    0x0fa6c125, 0xe38bbd05, 0x5d922c1f, 0x9bd0eab2, 0x73025e02, 0xc4fd794d, 0x8435b35f, 0x2d01bc2e,\n+    0xaa2a14d4, 0xa22b07cb, 0xebda6f4f, 0xddc6514e, 0xf23feab2, 0xea1e5256, 0x6147b45e, 0x47d21e4f,\n+    0x67c41c1f, 0x53ec1a02, 0x352e786d, 0x6bec1a02, 0x78fb4abe, 0xd3014c5d, 0x9fbbeab2, 0x1fc51eb9,\n+    0x720eeab2, 0x2db5eab2, 0xe8baf65c, 0x521b459e, 0x65c4955f, 0x0e7b915f, 0xa8f37e6d, 0x6d0b465f,\n+    0xfab8ff5c, 0xf7c27e6d, 0x7345a846, 0x4fd1a7d5, 0xdfc97e6d, 0x26c27e6d, 0xa9de36b2, 0xc615344d,\n+    0x28ceb95d, 0xa52d895e, 0x18c17e6d, 0x13ec1a02, 0x0ba37125, 0x6c3d344d, 0xb3922c1f, 0x506bbeb0,\n+    0x4d04994e, 0xa1bbe56d, 0xf62c344d, 0x0847d048, 0x4bdc6451, 0xc95b9a05, 0xbcd3a7d5, 0x29b57125,\n+    0x0c4d2cb2, 0xf2b8eab2, 0xc2d5b95d, 0x0185ef59, 0x30adeab2, 0xcaf0e92e, 0x756c344d, 0xfd9e252e,\n+    0xbe5ef3bc, 0x4689344d, 0xb223895e, 0xfcebeaad, 0xb7c0e92e, 0x993c1760, 0xe1e171b0, 0xb857e75b,\n+    0xbf10002e, 0xb55b2cb2, 0xa90e2cb2, 0x13d6f15e, 0xf8be9225, 0x14ddf15e, 0x06e90305, 0x82472cb2,\n };\n \n const char* pchTorSeed[] = "
      }
    ]
  },
  {
    "sha": "4a26859c4f57f50122578d5ffd60f81e4e1f8b27",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0YTI2ODU5YzRmNTdmNTAxMjI1NzhkNWZmZDYwZjgxZTRlMWY4YjI3",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "CryptoManiac@users.noreply.github.com",
        "date": "2016-04-10T20:36:12Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "CryptoManiac@users.noreply.github.com",
        "date": "2016-04-10T20:36:12Z"
      },
      "message": "Merge pull request #310 from svost/master\n\nAddress fix",
      "tree": {
        "sha": "eb72d3cc3ca6092ca1b2469173c088e49fcedc8c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/eb72d3cc3ca6092ca1b2469173c088e49fcedc8c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4a26859c4f57f50122578d5ffd60f81e4e1f8b27",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4a26859c4f57f50122578d5ffd60f81e4e1f8b27",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4a26859c4f57f50122578d5ffd60f81e4e1f8b27",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4a26859c4f57f50122578d5ffd60f81e4e1f8b27/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2a20c10c819a15f1b39b4bbb4e96e37becd77b35",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2a20c10c819a15f1b39b4bbb4e96e37becd77b35",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2a20c10c819a15f1b39b4bbb4e96e37becd77b35"
      },
      {
        "sha": "c052a8c99fc6327c5fe8ffbceebf7ebd818826da",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c052a8c99fc6327c5fe8ffbceebf7ebd818826da",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c052a8c99fc6327c5fe8ffbceebf7ebd818826da"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "a47f2fd3ba4cab2841ad3376c8f0a2945bbe6e14",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4a26859c4f57f50122578d5ffd60f81e4e1f8b27/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4a26859c4f57f50122578d5ffd60f81e4e1f8b27/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=4a26859c4f57f50122578d5ffd60f81e4e1f8b27",
        "patch": "@@ -974,7 +974,7 @@ void ThreadSocketHandler2(void* parg)\n // The first name is used as information source for addrman.\n // The second name should resolve to a list of seed addresses.\n static const char *strDNSSeed[][2] = {\n-    {\"novacoin.karelia.pro\", \"dnsseed.novacoin.karelia.pro\"},\n+    {\"node.novacoin.karelia.pro\", \"dnsseed.novacoin.karelia.pro\"},\n     {\"novacoin.ru\", \"dnsseed.novacoin.ru\"},\n     {\"novacoin.ru\", \"testseed.novacoin.ru\"},\n     {\"novaco.in\", \"dnsseed.novaco.in\"},"
      }
    ]
  },
  {
    "sha": "fee71e11ac2d5ba9b128ad40037ac07dd3b53915",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmZWU3MWUxMWFjMmQ1YmE5YjEyOGFkNDAwMzdhYzA3ZGQzYjUzOTE1",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar.ad@gmail.com",
        "date": "2016-04-08T17:40:22Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar.ad@gmail.com",
        "date": "2016-04-12T18:12:28Z"
      },
      "message": "Fix memory leak.",
      "tree": {
        "sha": "a0c6c1d22730d6d4271c1e7f90937d7f043b5d8a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a0c6c1d22730d6d4271c1e7f90937d7f043b5d8a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fee71e11ac2d5ba9b128ad40037ac07dd3b53915",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fee71e11ac2d5ba9b128ad40037ac07dd3b53915",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fee71e11ac2d5ba9b128ad40037ac07dd3b53915",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fee71e11ac2d5ba9b128ad40037ac07dd3b53915/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4a26859c4f57f50122578d5ffd60f81e4e1f8b27",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4a26859c4f57f50122578d5ffd60f81e4e1f8b27",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4a26859c4f57f50122578d5ffd60f81e4e1f8b27"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 6,
      "deletions": 8
    },
    "files": [
      {
        "sha": "2c3a8498f510f610989085b611a4c2a33c472cf1",
        "filename": "src/key.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 8,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fee71e11ac2d5ba9b128ad40037ac07dd3b53915/src/key.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fee71e11ac2d5ba9b128ad40037ac07dd3b53915/src/key.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.cpp?ref=fee71e11ac2d5ba9b128ad40037ac07dd3b53915",
        "patch": "@@ -463,20 +463,17 @@ bool CPubKey::SetCompactSignature(uint256 hash, const std::vector<unsigned char>\n     ECDSA_SIG *sig = ECDSA_SIG_new();\n     BN_bin2bn(&vchSig[1],32,sig->r);\n     BN_bin2bn(&vchSig[33],32,sig->s);\n-\n+    bool fSuccessful = false;\n     EC_KEY* pkey = EC_KEY_new_by_curve_name(NID_secp256k1);\n     if (nV >= 31)\n     {\n         nV -= 4;\n         EC_KEY_set_conv_form(pkey, POINT_CONVERSION_COMPRESSED);\n     }\n-\n     do\n     {\n         if (ECDSA_SIG_recover_key_GFp(pkey, sig, (unsigned char*)&hash, sizeof(hash), nV - 27, 0) != 1)\n             break;\n-        ECDSA_SIG_free(sig);\n-\n         int nSize = i2o_ECPublicKey(pkey, NULL);\n         if (!nSize)\n             break;\n@@ -485,13 +482,14 @@ bool CPubKey::SetCompactSignature(uint256 hash, const std::vector<unsigned char>\n         if (i2o_ECPublicKey(pkey, &pbegin) != nSize)\n             break;\n         Set(vchPubKey.begin(), vchPubKey.end());\n-        return IsValid();\n+        fSuccessful = IsValid();\n \n     } while (false);\n-\n     ECDSA_SIG_free(sig);\n-    Invalidate();\n-    return false;\n+    EC_KEY_free(pkey);\n+    if (!fSuccessful)\n+        Invalidate();\n+    return fSuccessful;\n }\n \n bool CPubKey::Verify(const uint256 &hash, const std::vector<unsigned char>& vchSig) const"
      }
    ]
  },
  {
    "sha": "2bd96badf25219a5c20da88cec323a707561091f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyYmQ5NmJhZGYyNTIxOWE1YzIwZGE4OGNlYzMyM2E3MDc1NjEwOTFm",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar@yandex.ru",
        "date": "2016-04-12T18:07:12Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar.ad@gmail.com",
        "date": "2016-04-12T18:12:44Z"
      },
      "message": "CPubKey::Verify() : Fix memory leak.",
      "tree": {
        "sha": "074d0c0aed2f03a06a62bb01aa1a030675d25568",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/074d0c0aed2f03a06a62bb01aa1a030675d25568"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2bd96badf25219a5c20da88cec323a707561091f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2bd96badf25219a5c20da88cec323a707561091f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2bd96badf25219a5c20da88cec323a707561091f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2bd96badf25219a5c20da88cec323a707561091f/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fee71e11ac2d5ba9b128ad40037ac07dd3b53915",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fee71e11ac2d5ba9b128ad40037ac07dd3b53915",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fee71e11ac2d5ba9b128ad40037ac07dd3b53915"
      }
    ],
    "stats": {
      "total": 48,
      "additions": 25,
      "deletions": 23
    },
    "files": [
      {
        "sha": "c68fcda5fd748d1666560cd7eabffc97feb49a85",
        "filename": "src/key.cpp",
        "status": "modified",
        "additions": 25,
        "deletions": 23,
        "changes": 48,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2bd96badf25219a5c20da88cec323a707561091f/src/key.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2bd96badf25219a5c20da88cec323a707561091f/src/key.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.cpp?ref=2bd96badf25219a5c20da88cec323a707561091f",
        "patch": "@@ -497,35 +497,37 @@ bool CPubKey::Verify(const uint256 &hash, const std::vector<unsigned char>& vchS\n     if (vchSig.empty() || !IsValid())\n         return false;\n \n-    const unsigned char* pbegin = &vbytes[0];\n     EC_KEY *pkey = EC_KEY_new_by_curve_name(NID_secp256k1);\n-    if (!o2i_ECPublicKey(&pkey, &pbegin, size()))\n-        return false; // Unable to parse public key\n-\n-    // New versions of OpenSSL will reject non-canonical DER signatures. de/re-serialize first.\n-    unsigned char *norm_der = NULL;\n     ECDSA_SIG *norm_sig = ECDSA_SIG_new();\n-    const unsigned char* sigptr = &vchSig[0];\n+\n     assert(norm_sig);\n-    if (d2i_ECDSA_SIG(&norm_sig, &sigptr, vchSig.size()) == NULL)\n+    assert(pkey);\n+\n+    bool ret = false;\n+    do\n     {\n-        /* As of OpenSSL 1.0.0p d2i_ECDSA_SIG frees and nulls the pointer on\n-        * error. But OpenSSL's own use of this function redundantly frees the\n-        * result. As ECDSA_SIG_free(NULL) is a no-op, and in the absence of a\n-        * clear contract for the function behaving the same way is more\n-        * conservative.\n-        */\n-        ECDSA_SIG_free(norm_sig);\n-        return false;\n-    }\n-    int derlen = i2d_ECDSA_SIG(norm_sig, &norm_der);\n+        int derlen;\n+        uint8_t *norm_der = NULL;\n+        const uint8_t* pbegin = &vbytes[0];\n+        const uint8_t* sigptr = &vchSig[0];\n+\n+        // Trying to parse public key\n+        if (!o2i_ECPublicKey(&pkey, &pbegin, size()))\n+            break;\n+        // New versions of OpenSSL are rejecting a non-canonical DER signatures, de/re-serialize first.\n+        if (d2i_ECDSA_SIG(&norm_sig, &sigptr, vchSig.size()) == NULL)\n+            break;\n+        if ((derlen = i2d_ECDSA_SIG(norm_sig, &norm_der)) <= 0)\n+            break;\n+\n+        // -1 = error, 0 = bad sig, 1 = good\n+        ret = ECDSA_verify(0, hash.begin(), hash.size(), norm_der, derlen, pkey) == 1;\n+        OPENSSL_free(norm_der);\n+    } while(false);\n+\n     ECDSA_SIG_free(norm_sig);\n-    if (derlen <= 0)\n-        return false;\n+    EC_KEY_free(pkey);\n \n-    // -1 = error, 0 = bad sig, 1 = good\n-    bool ret = ECDSA_verify(0, (unsigned char*)&hash, sizeof(hash), norm_der, derlen, pkey) == 1;\n-    OPENSSL_free(norm_der);\n     return ret;\n }\n "
      }
    ]
  },
  {
    "sha": "405d62b3581a46ba64cc91de9b9fcf4a486ee173",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0MDVkNjJiMzU4MWE0NmJhNjRjYzkxZGU5YjlmY2Y0YTQ4NmVlMTcz",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "balthazar.ad@gmail.com",
        "date": "2016-04-12T18:26:38Z"
      },
      "committer": {
        "name": "CryptoManiac",
        "email": "balthazar.ad@gmail.com",
        "date": "2016-04-12T18:26:38Z"
      },
      "message": "We have not yet implemented begin() and size() methods in the master branch.",
      "tree": {
        "sha": "ac2cff8f9862424ea5b3c42726bde4da2f279c67",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ac2cff8f9862424ea5b3c42726bde4da2f279c67"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/405d62b3581a46ba64cc91de9b9fcf4a486ee173",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/405d62b3581a46ba64cc91de9b9fcf4a486ee173",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/405d62b3581a46ba64cc91de9b9fcf4a486ee173",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/405d62b3581a46ba64cc91de9b9fcf4a486ee173/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2bd96badf25219a5c20da88cec323a707561091f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2bd96badf25219a5c20da88cec323a707561091f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2bd96badf25219a5c20da88cec323a707561091f"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "1ed4e25087db9e8786db0a40170f5aef19efe1ae",
        "filename": "src/key.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/405d62b3581a46ba64cc91de9b9fcf4a486ee173/src/key.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/405d62b3581a46ba64cc91de9b9fcf4a486ee173/src/key.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.cpp?ref=405d62b3581a46ba64cc91de9b9fcf4a486ee173",
        "patch": "@@ -521,7 +521,7 @@ bool CPubKey::Verify(const uint256 &hash, const std::vector<unsigned char>& vchS\n             break;\n \n         // -1 = error, 0 = bad sig, 1 = good\n-        ret = ECDSA_verify(0, hash.begin(), hash.size(), norm_der, derlen, pkey) == 1;\n+        ret = ECDSA_verify(0, (const unsigned char*)&hash, sizeof(hash), norm_der, derlen, pkey) == 1;\n         OPENSSL_free(norm_der);\n     } while(false);\n "
      }
    ]
  },
  {
    "sha": "184b75381d5bf27408c8277d56d46b08101350e5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxODRiNzUzODFkNWJmMjc0MDhjODI3N2Q1NmQ0NmIwODEwMTM1MGU1",
    "commit": {
      "author": {
        "name": "svost",
        "email": "ya.nowa@yandex.ru",
        "date": "2016-09-23T10:33:27Z"
      },
      "committer": {
        "name": "svost",
        "email": "ya.nowa@yandex.ru",
        "date": "2016-09-23T10:33:27Z"
      },
      "message": "Fix listaddressgroupings comand",
      "tree": {
        "sha": "309b147d4ae99939652771e6a41924d974461ddf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/309b147d4ae99939652771e6a41924d974461ddf"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/184b75381d5bf27408c8277d56d46b08101350e5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/184b75381d5bf27408c8277d56d46b08101350e5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/184b75381d5bf27408c8277d56d46b08101350e5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/184b75381d5bf27408c8277d56d46b08101350e5/comments",
    "author": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "405d62b3581a46ba64cc91de9b9fcf4a486ee173",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/405d62b3581a46ba64cc91de9b9fcf4a486ee173",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/405d62b3581a46ba64cc91de9b9fcf4a486ee173"
      }
    ],
    "stats": {
      "total": 21,
      "additions": 15,
      "deletions": 6
    },
    "files": [
      {
        "sha": "044f3e2b666aa66704a1676e23a025de4d624c3d",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 6,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/184b75381d5bf27408c8277d56d46b08101350e5/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/184b75381d5bf27408c8277d56d46b08101350e5/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=184b75381d5bf27408c8277d56d46b08101350e5",
        "patch": "@@ -2885,29 +2885,38 @@ set< set<CBitcoinAddress> > CWallet::GetAddressGroupings()\n     {\n         CWalletTx *pcoin = &walletEntry.second;\n \n-        if (pcoin->vin.size() > 0 && IsMine(pcoin->vin[0]))\n+        if (pcoin->vin.size() > 0)\n         {\n+            bool any_mine = false;\n             // group all input addresses with each other\n             BOOST_FOREACH(CTxIn txin, pcoin->vin)\n             {\n                 CBitcoinAddress address;\n+                if(!IsMine(txin)) // If this input isn't mine, ignore it\n+                    continue;\n                 if(!ExtractAddress(*this, mapWallet[txin.prevout.hash].vout[txin.prevout.n].scriptPubKey, address))\n                     continue;\n                 grouping.insert(address);\n+                any_mine = true;\n             }\n \n             // group change with input addresses\n-            BOOST_FOREACH(CTxOut txout, pcoin->vout)\n+            if (any_mine)\n+            {\n+                BOOST_FOREACH(CTxOut txout, pcoin->vout)\n                 if (IsChange(txout))\n                 {\n-                    CWalletTx tx = mapWallet[pcoin->vin[0].prevout.hash];\n                     CBitcoinAddress txoutAddr;\n                     if(!ExtractAddress(*this, txout.scriptPubKey, txoutAddr))\n                         continue;\n-                    grouping.insert(txoutAddr);\n+                        grouping.insert(txoutAddr);\n                 }\n-            groupings.insert(grouping);\n-            grouping.clear();\n+            }\n+            if (!grouping.empty())\n+            {\n+                groupings.insert(grouping);\n+                grouping.clear();\n+            }\n         }\n \n         // group lone addrs by themselves"
      }
    ]
  },
  {
    "sha": "b6f4727f602d4f1f45f6a007b7cec016a60529d0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiNmY0NzI3ZjYwMmQ0ZjFmNDVmNmEwMDdiN2NlYzAxNmE2MDUyOWQw",
    "commit": {
      "author": {
        "name": "CryptoManiac",
        "email": "CryptoManiac@users.noreply.github.com",
        "date": "2016-09-24T10:16:50Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2016-09-24T10:16:50Z"
      },
      "message": "Merge pull request #351 from svost/patch\n\nFix listaddressgroupings comand",
      "tree": {
        "sha": "309b147d4ae99939652771e6a41924d974461ddf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/309b147d4ae99939652771e6a41924d974461ddf"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b6f4727f602d4f1f45f6a007b7cec016a60529d0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b6f4727f602d4f1f45f6a007b7cec016a60529d0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b6f4727f602d4f1f45f6a007b7cec016a60529d0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b6f4727f602d4f1f45f6a007b7cec016a60529d0/comments",
    "author": {
      "login": "CryptoManiac",
      "id": 1429531,
      "node_id": "MDQ6VXNlcjE0Mjk1MzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1429531?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CryptoManiac",
      "html_url": "https://github.com/CryptoManiac",
      "followers_url": "https://api.github.com/users/CryptoManiac/followers",
      "following_url": "https://api.github.com/users/CryptoManiac/following{/other_user}",
      "gists_url": "https://api.github.com/users/CryptoManiac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CryptoManiac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CryptoManiac/subscriptions",
      "organizations_url": "https://api.github.com/users/CryptoManiac/orgs",
      "repos_url": "https://api.github.com/users/CryptoManiac/repos",
      "events_url": "https://api.github.com/users/CryptoManiac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CryptoManiac/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "405d62b3581a46ba64cc91de9b9fcf4a486ee173",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/405d62b3581a46ba64cc91de9b9fcf4a486ee173",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/405d62b3581a46ba64cc91de9b9fcf4a486ee173"
      },
      {
        "sha": "184b75381d5bf27408c8277d56d46b08101350e5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/184b75381d5bf27408c8277d56d46b08101350e5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/184b75381d5bf27408c8277d56d46b08101350e5"
      }
    ],
    "stats": {
      "total": 21,
      "additions": 15,
      "deletions": 6
    },
    "files": [
      {
        "sha": "044f3e2b666aa66704a1676e23a025de4d624c3d",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 6,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b6f4727f602d4f1f45f6a007b7cec016a60529d0/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b6f4727f602d4f1f45f6a007b7cec016a60529d0/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=b6f4727f602d4f1f45f6a007b7cec016a60529d0",
        "patch": "@@ -2885,29 +2885,38 @@ set< set<CBitcoinAddress> > CWallet::GetAddressGroupings()\n     {\n         CWalletTx *pcoin = &walletEntry.second;\n \n-        if (pcoin->vin.size() > 0 && IsMine(pcoin->vin[0]))\n+        if (pcoin->vin.size() > 0)\n         {\n+            bool any_mine = false;\n             // group all input addresses with each other\n             BOOST_FOREACH(CTxIn txin, pcoin->vin)\n             {\n                 CBitcoinAddress address;\n+                if(!IsMine(txin)) // If this input isn't mine, ignore it\n+                    continue;\n                 if(!ExtractAddress(*this, mapWallet[txin.prevout.hash].vout[txin.prevout.n].scriptPubKey, address))\n                     continue;\n                 grouping.insert(address);\n+                any_mine = true;\n             }\n \n             // group change with input addresses\n-            BOOST_FOREACH(CTxOut txout, pcoin->vout)\n+            if (any_mine)\n+            {\n+                BOOST_FOREACH(CTxOut txout, pcoin->vout)\n                 if (IsChange(txout))\n                 {\n-                    CWalletTx tx = mapWallet[pcoin->vin[0].prevout.hash];\n                     CBitcoinAddress txoutAddr;\n                     if(!ExtractAddress(*this, txout.scriptPubKey, txoutAddr))\n                         continue;\n-                    grouping.insert(txoutAddr);\n+                        grouping.insert(txoutAddr);\n                 }\n-            groupings.insert(grouping);\n-            grouping.clear();\n+            }\n+            if (!grouping.empty())\n+            {\n+                groupings.insert(grouping);\n+                grouping.clear();\n+            }\n         }\n \n         // group lone addrs by themselves"
      }
    ]
  },
  {
    "sha": "4dd28f80df1e355098f2c25006fe2a32091a63da",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0ZGQyOGY4MGRmMWUzNTUwOThmMmMyNTAwNmZlMmEzMjA5MWE2M2Rh",
    "commit": {
      "author": {
        "name": "Laser9un",
        "email": "laser9un@gmail.com",
        "date": "2016-11-18T19:42:07Z"
      },
      "committer": {
        "name": "Laser9un",
        "email": "laser9un@gmail.com",
        "date": "2016-11-18T19:42:07Z"
      },
      "message": "42-coin \"New Chain\" Release\n\nThe Answer to Life, the Universe, and Everything...",
      "tree": {
        "sha": "7ecf359bd6251c8fba475d7a274a5a0446993718",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7ecf359bd6251c8fba475d7a274a5a0446993718"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4dd28f80df1e355098f2c25006fe2a32091a63da",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4dd28f80df1e355098f2c25006fe2a32091a63da",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4dd28f80df1e355098f2c25006fe2a32091a63da",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4dd28f80df1e355098f2c25006fe2a32091a63da/comments",
    "author": {
      "login": "Laser9un",
      "id": 16782409,
      "node_id": "MDQ6VXNlcjE2NzgyNDA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16782409?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Laser9un",
      "html_url": "https://github.com/Laser9un",
      "followers_url": "https://api.github.com/users/Laser9un/followers",
      "following_url": "https://api.github.com/users/Laser9un/following{/other_user}",
      "gists_url": "https://api.github.com/users/Laser9un/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Laser9un/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Laser9un/subscriptions",
      "organizations_url": "https://api.github.com/users/Laser9un/orgs",
      "repos_url": "https://api.github.com/users/Laser9un/repos",
      "events_url": "https://api.github.com/users/Laser9un/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Laser9un/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Laser9un",
      "id": 16782409,
      "node_id": "MDQ6VXNlcjE2NzgyNDA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16782409?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Laser9un",
      "html_url": "https://github.com/Laser9un",
      "followers_url": "https://api.github.com/users/Laser9un/followers",
      "following_url": "https://api.github.com/users/Laser9un/following{/other_user}",
      "gists_url": "https://api.github.com/users/Laser9un/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Laser9un/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Laser9un/subscriptions",
      "organizations_url": "https://api.github.com/users/Laser9un/orgs",
      "repos_url": "https://api.github.com/users/Laser9un/repos",
      "events_url": "https://api.github.com/users/Laser9un/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Laser9un/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b6f4727f602d4f1f45f6a007b7cec016a60529d0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b6f4727f602d4f1f45f6a007b7cec016a60529d0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b6f4727f602d4f1f45f6a007b7cec016a60529d0"
      }
    ],
    "stats": {
      "total": 4040,
      "additions": 2184,
      "deletions": 1856
    },
    "files": [
      {
        "sha": "6303f18620f8981070fe518969e9e8d3b781896c",
        "filename": ".gitignore",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.gitignore?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -1,5 +1,5 @@\n src/*.exe\n-src/novacoind\n+src/42d\n src/build.h\n .*.swp\n *.*~*\n@@ -8,11 +8,11 @@ src/build.h\n *.orig\n *.o\n *.patch\n-.novacoin\n+.42\n #compilation and Qt preprocessor part\n *.qm\n Makefile\n-novacoin-qt\n+42-qt\n #resources cpp\n qrc_*.cpp\n #qt creator"
      },
      {
        "sha": "b56ebdf454589acf8044841e19ee4965bc189dde",
        "filename": "42-qt.pro",
        "status": "renamed",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/42-qt.pro",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/42-qt.pro",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/42-qt.pro?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -1,5 +1,5 @@\n TEMPLATE = app\n-TARGET = novacoin-qt\n+TARGET = 42-qt\n VERSION = 0.7.5\n INCLUDEPATH += src src/json src/qt\n QT += core gui network\n@@ -479,7 +479,7 @@ macx:OBJECTIVE_SOURCES += src/qt/macdockiconhandler.mm \\\n macx:LIBS += -framework Foundation -framework ApplicationServices -framework AppKit\n macx:DEFINES += MAC_OSX MSG_NOSIGNAL=0\n macx:ICON = src/qt/res/icons/bitcoin.icns\n-macx:TARGET = \"NovaCoin-Qt\"\n+macx:TARGET = \"42-Qt\"\n macx:QMAKE_CFLAGS_THREAD += -pthread\n macx:QMAKE_LFLAGS_THREAD += -pthread\n macx:QMAKE_CXXFLAGS_THREAD += -pthread",
        "previous_filename": "novacoin-qt.pro"
      },
      {
        "sha": "78d070f7076167f7d51b94109aaf7dd6430012b4",
        "filename": "COPYING",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/COPYING",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/COPYING",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/COPYING?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -3,6 +3,7 @@ Copyright \u00a9 2011-2012 The PPCoin Developers\n Copyright \u00a9 2014 The Peerunity Developers\n Copyright \u00a9 2014 The EmerCoin Developers\n Copyright \u00a9 2012-2016 The NovaCoin developers\n+Copyright \u00a9 2016 The 42 developers\n \n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal"
      },
      {
        "sha": "a2c75434e0eb88fef944e988819c111f4ee214d3",
        "filename": "INSTALL",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/INSTALL",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/INSTALL",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/INSTALL?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -1,9 +1,9 @@\n-Building NovaCoin\n+Building 42\n \n-See doc/readme-qt.rst for instructions on building NovaCoin Qt,\n+See doc/readme-qt.rst for instructions on building 42 Qt,\n the intended-for-end-users, nice-graphical-interface, reference\n-implementation of NovaCoin.\n+implementation of 42.\n \n-See doc/build-*.txt for instructions on building novacoind,\n+See doc/build-*.txt for instructions on building 42d,\n the intended-for-services, no-graphical-interface, reference\n-implementation of NovaCoin.\n+implementation of 42."
      },
      {
        "sha": "59d8b946da25b1547310c02706c77969ae1ae8de",
        "filename": "MSVC/42Solution.sln",
        "status": "renamed",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/MSVC/42Solution.sln",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/MSVC/42Solution.sln",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/MSVC/42Solution.sln?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -1,10 +1,10 @@\n Microsoft Visual Studio Solution File, Format Version 12.00\n # Visual Studio Express 2012 for Windows Desktop\n-Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"NovacoinD\", \"mynovacoin\\mynovacoin.vcxproj\", \"{00225DF0-9DDB-41A2-972B-56DC24E2C995}\"\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"42D\", \"my42\\my42.vcxproj\", \"{00225DF0-9DDB-41A2-972B-56DC24E2C995}\"\n EndProject\n Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"leveldb\", \"leveldb\\leveldb.vcxproj\", \"{002CC16A-B4EF-4737-B751-DAD3A8D14133}\"\n EndProject\n-Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"NovacoinQT\", \"mynovacoinqt\\mynovacoinqt.vcxproj\", \"{9191918D-7DE3-4BE1-8A32-2F2CF4EE6840}\"\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"42QT\", \"my42qt\\my42qt.vcxproj\", \"{9191918D-7DE3-4BE1-8A32-2F2CF4EE6840}\"\n \tProjectSection(ProjectDependencies) = postProject\n \t\t{3703B138-B8DA-460E-9DD1-41BDC7588E80} = {3703B138-B8DA-460E-9DD1-41BDC7588E80}\n \t\t{002CC16A-B4EF-4737-B751-DAD3A8D14133} = {002CC16A-B4EF-4737-B751-DAD3A8D14133}",
        "previous_filename": "MSVC/NovacoinSolution.sln"
      },
      {
        "sha": "4ed56e12c78f308bc7af8a10536c22158ed18453",
        "filename": "MSVC/42Solution.v11.suo",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/MSVC/42Solution.v11.suo",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/MSVC/42Solution.v11.suo",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/MSVC/42Solution.v11.suo?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "previous_filename": "MSVC/NovacoinSolution.v11.suo"
      },
      {
        "sha": "39e17eb77da842cd277a16a5c3191f0bc2f12267",
        "filename": "MSVC/my42/my42.vcxproj",
        "status": "renamed",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/MSVC/my42/my42.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/MSVC/my42/my42.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/MSVC/my42/my42.vcxproj?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -20,7 +20,7 @@\n   </ItemGroup>\n   <PropertyGroup Label=\"Globals\">\n     <ProjectGuid>{00225DF0-9DDB-41A2-972B-56DC24E2C995}</ProjectGuid>\n-    <ProjectName>NovacoinD</ProjectName>\n+    <ProjectName>42D</ProjectName>\n     <SccProjectName>SAK</SccProjectName>\n     <SccAuxPath>SAK</SccAuxPath>\n     <SccLocalPath>SAK</SccLocalPath>",
        "previous_filename": "MSVC/mynovacoin/mynovacoin.vcxproj"
      },
      {
        "sha": "a6f552c7a2e82d2ffa937c0eec3dfbf40e2b47f2",
        "filename": "MSVC/my42/my42.vcxproj.filters",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/MSVC/my42/my42.vcxproj.filters",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/MSVC/my42/my42.vcxproj.filters",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/MSVC/my42/my42.vcxproj.filters?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "previous_filename": "MSVC/mynovacoin/mynovacoin.vcxproj.filters"
      },
      {
        "sha": "a375ae35270b9e7049abfd799ff08be32da2d880",
        "filename": "MSVC/my42/my42.vcxproj.user",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/MSVC/my42/my42.vcxproj.user",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/MSVC/my42/my42.vcxproj.user",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/MSVC/my42/my42.vcxproj.user?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "previous_filename": "MSVC/mynovacoin/mynovacoin.vcxproj.user"
      },
      {
        "sha": "b6d32892fd64efa5f7d8ae7952ce1bf821c47b6e",
        "filename": "MSVC/my42/my42.vcxproj.vspscc",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/MSVC/my42/my42.vcxproj.vspscc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/MSVC/my42/my42.vcxproj.vspscc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/MSVC/my42/my42.vcxproj.vspscc?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "previous_filename": "MSVC/mynovacoin/mynovacoin.vcxproj.vspscc"
      },
      {
        "sha": "b09d2ee5232f0e5cb9e411309f0182283cc41591",
        "filename": "MSVC/my42qt/42.ico",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/MSVC/my42qt/42.ico",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/MSVC/my42qt/42.ico",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/MSVC/my42qt/42.ico?ref=4dd28f80df1e355098f2c25006fe2a32091a63da"
      },
      {
        "sha": "009f306acac6a4df6ca6cfd54a112f515b0c09d0",
        "filename": "MSVC/my42qt/icon.rc",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/MSVC/my42qt/icon.rc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/MSVC/my42qt/icon.rc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/MSVC/my42qt/icon.rc?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -0,0 +1 @@\n+IDI_ICON1 ICON \"42.ico\"\n\\ No newline at end of file"
      },
      {
        "sha": "c8563a53954ef6161033058a3fa7eafd19d40497",
        "filename": "MSVC/my42qt/my42_resource.rc",
        "status": "renamed",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/MSVC/my42qt/my42_resource.rc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/MSVC/my42qt/my42_resource.rc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/MSVC/my42qt/my42_resource.rc?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -5,7 +5,7 @@\n # endif\n #include \"../../src/clientversion.h\" // holds the needed client version information\n \n-mynovacoinqt_resource.rc += icon.rc\n+my42qt_resource.rc += icon.rc\n \n #define VER_PRODUCTVERSION     CLIENT_VERSION_MAJOR,CLIENT_VERSION_MINOR,CLIENT_VERSION_REVISION,CLIENT_VERSION_BUILD\n #define VER_PRODUCTVERSION_STR STRINGIZE(CLIENT_VERSION_MAJOR) \".\" STRINGIZE(CLIENT_VERSION_MINOR) \".\" STRINGIZE(CLIENT_VERSION_REVISION) \".\" STRINGIZE(CLIENT_VERSION_BUILD)\n@@ -22,14 +22,14 @@ BEGIN\n     BEGIN\n         BLOCK \"040904E4\" // U.S. English - multilingual (hex)\n         BEGIN\n-            VALUE \"CompanyName\",        \"NovaCoin\"\n-            VALUE \"FileDescription\",    \"NovaCoin-Qt (OSS GUI client for NovaCoin)\"\n+            VALUE \"CompanyName\",        \"42\"\n+            VALUE \"FileDescription\",    \"42-Qt (OSS GUI client for 42)\"\n             VALUE \"FileVersion\",        VER_FILEVERSION_STR\n-            VALUE \"InternalName\",       \"novacoin-qt\"\n-            VALUE \"LegalCopyright\",     \"2009-2012 The Bitcoin developers, 2012-2014 The NovaCoin & PPCoin developers\"\n+            VALUE \"InternalName\",       \"42-qt\"\n+            VALUE \"LegalCopyright\",     \"2009-2012 The Bitcoin developers, 2012-2014 The 42 & PPCoin developers\"\n             VALUE \"LegalTrademarks1\",   \"Distributed under the MIT/X11 software license, see the accompanying file COPYING or http://www.opensource.org/licenses/mit-license.php.\"\n-            VALUE \"OriginalFilename\",   \"novacoin-qt.exe\"\n-            VALUE \"ProductName\",        \"NovaCoin-Qt\"\n+            VALUE \"OriginalFilename\",   \"42-qt.exe\"\n+            VALUE \"ProductName\",        \"42-Qt\"\n             VALUE \"ProductVersion\",     VER_PRODUCTVERSION_STR\n         END\n     END",
        "previous_filename": "MSVC/mynovacoinqt/mynovacoinqt_resource.rc"
      },
      {
        "sha": "1021f29a94108dd6eda0d10e35f42c0e67ca1db8",
        "filename": "MSVC/my42qt/my42qt.vcxproj",
        "status": "renamed",
        "additions": 205,
        "deletions": 205,
        "changes": 410,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/MSVC/my42qt/my42qt.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/MSVC/my42qt/my42qt.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/MSVC/my42qt/my42qt.vcxproj?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "previous_filename": "MSVC/mynovacoinqt/mynovacoinqt.vcxproj"
      },
      {
        "sha": "c4f7c8a7b6f6efbe88165d1277a9f13126fae5d7",
        "filename": "MSVC/my42qt/my42qt.vcxproj.filters",
        "status": "renamed",
        "additions": 11,
        "deletions": 11,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/MSVC/my42qt/my42qt.vcxproj.filters",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/MSVC/my42qt/my42qt.vcxproj.filters",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/MSVC/my42qt/my42qt.vcxproj.filters?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -114,7 +114,7 @@\n     <ClCompile Include=\"..\\..\\src\\qt\\monitoreddatamapper.cpp\">\n       <Filter>Source Files</Filter>\n     </ClCompile>\n-    <ClCompile Include=\"mynovacoinqt_plugin_import.cpp\">\n+    <ClCompile Include=\"my42qt_plugin_import.cpp\">\n       <Filter>Source Files</Filter>\n     </ClCompile>\n     <ClCompile Include=\"..\\..\\src\\qt\\notificator.cpp\">\n@@ -657,10 +657,10 @@\n     </ClInclude>\n   </ItemGroup>\n   <ItemGroup>\n-    <None Include=\"C:\\MyProjects\\Novacoin\\src\\qt\\locale\\bitcoin_en.ts\">\n+    <None Include=\"C:\\MyProjects\\42\\src\\qt\\locale\\bitcoin_en.ts\">\n       <Filter>Translation Files</Filter>\n     </None>\n-    <None Include=\"C:\\MyProjects\\Novacoin\\src\\qt\\locale\\bitcoin_ru.ts\">\n+    <None Include=\"C:\\MyProjects\\42\\src\\qt\\locale\\bitcoin_ru.ts\">\n       <Filter>Translation Files</Filter>\n     </None>\n     <None Include=\"..\\..\\src\\qt\\res\\icons\\bitcoin.icns\">\n@@ -802,10 +802,10 @@\n     <None Include=\"..\\..\\src\\qt\\res\\icons\\mining_inactive.png\">\n       <Filter>Resource Files</Filter>\n     </None>\n-    <None Include=\"..\\..\\src\\qt\\res\\icons\\novacoin-128.png\">\n+    <None Include=\"..\\..\\src\\qt\\res\\icons\\42-128.png\">\n       <Filter>Resource Files</Filter>\n     </None>\n-    <None Include=\"..\\..\\src\\qt\\res\\icons\\novacoin-16.png\">\n+    <None Include=\"..\\..\\src\\qt\\res\\icons\\42-16.png\">\n       <Filter>Resource Files</Filter>\n     </None>\n     <None Include=\"..\\..\\src\\qt\\res\\icons\\overview.png\">\n@@ -855,7 +855,7 @@\n     </None>\n   </ItemGroup>\n   <ItemGroup>\n-    <ResourceCompile Include=\"C:\\MyProjects\\Novacoin\\MSVC\\mynovacoinqt\\mynovacoinqt_resource.rc\" />\n+    <ResourceCompile Include=\"C:\\MyProjects\\42\\MSVC\\my42qt\\my42qt_resource.rc\" />\n     <ResourceCompile Include=\"icon.rc\">\n       <Filter>Resource Files</Filter>\n     </ResourceCompile>\n@@ -867,19 +867,19 @@\n     <Image Include=\"..\\..\\src\\qt\\res\\icons\\notsynced.png\">\n       <Filter>Resource Files</Filter>\n     </Image>\n-    <Image Include=\"..\\..\\src\\qt\\res\\icons\\novacoin.ico\">\n+    <Image Include=\"..\\..\\src\\qt\\res\\icons\\42.ico\">\n       <Filter>Resource Files</Filter>\n     </Image>\n-    <Image Include=\"..\\..\\src\\qt\\res\\icons\\novacoin.png\">\n+    <Image Include=\"..\\..\\src\\qt\\res\\icons\\42.png\">\n       <Filter>Resource Files</Filter>\n     </Image>\n-    <Image Include=\"..\\..\\src\\qt\\res\\icons\\novacoin-32.png\">\n+    <Image Include=\"..\\..\\src\\qt\\res\\icons\\42-32.png\">\n       <Filter>Resource Files</Filter>\n     </Image>\n-    <Image Include=\"..\\..\\src\\qt\\res\\icons\\novacoin-48.png\">\n+    <Image Include=\"..\\..\\src\\qt\\res\\icons\\42-48.png\">\n       <Filter>Resource Files</Filter>\n     </Image>\n-    <Image Include=\"..\\..\\src\\qt\\res\\icons\\novacoin-80.png\">\n+    <Image Include=\"..\\..\\src\\qt\\res\\icons\\42-80.png\">\n       <Filter>Resource Files</Filter>\n     </Image>\n   </ItemGroup>",
        "previous_filename": "MSVC/mynovacoinqt/mynovacoinqt.vcxproj.filters"
      },
      {
        "sha": "0b63273951c0fecc0a680768b3bc8e1da01cb95f",
        "filename": "MSVC/my42qt/my42qt.vcxproj.user",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/MSVC/my42qt/my42qt.vcxproj.user",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/MSVC/my42qt/my42qt.vcxproj.user",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/MSVC/my42qt/my42qt.vcxproj.user?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "previous_filename": "MSVC/mynovacoinqt/mynovacoinqt.vcxproj.user"
      },
      {
        "sha": "d88e1c167e26e81d7fa88e8ac1cc353ad72ae78e",
        "filename": "MSVC/my42qt/my42qt_plugin_import.cpp",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/MSVC/my42qt/my42qt_plugin_import.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/MSVC/my42qt/my42qt_plugin_import.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/MSVC/my42qt/my42qt_plugin_import.cpp?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "previous_filename": "MSVC/mynovacoinqt/mynovacoinqt_plugin_import.cpp"
      },
      {
        "sha": "1b41387869f84ef1137ee1e959312b69714222d6",
        "filename": "MSVC/mynovacoinqt/build/placeholder",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b6f4727f602d4f1f45f6a007b7cec016a60529d0/MSVC/mynovacoinqt/build/placeholder",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b6f4727f602d4f1f45f6a007b7cec016a60529d0/MSVC/mynovacoinqt/build/placeholder",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/MSVC/mynovacoinqt/build/placeholder?ref=b6f4727f602d4f1f45f6a007b7cec016a60529d0",
        "patch": "@@ -1 +0,0 @@\n-Don't touch me"
      },
      {
        "sha": "b4150492bde3f6a3ea9abecf40713b9f642925ab",
        "filename": "MSVC/mynovacoinqt/icon.rc",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b6f4727f602d4f1f45f6a007b7cec016a60529d0/MSVC/mynovacoinqt/icon.rc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b6f4727f602d4f1f45f6a007b7cec016a60529d0/MSVC/mynovacoinqt/icon.rc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/MSVC/mynovacoinqt/icon.rc?ref=b6f4727f602d4f1f45f6a007b7cec016a60529d0",
        "patch": "@@ -1 +0,0 @@\n-IDI_ICON1 ICON \"novacoin.ico\"\n\\ No newline at end of file"
      },
      {
        "sha": "ee62b47e7e7ec146ecc0fd773c487b6f960e507c",
        "filename": "MSVC/mynovacoinqt/novacoin.ico",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b6f4727f602d4f1f45f6a007b7cec016a60529d0/MSVC/mynovacoinqt/novacoin.ico",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b6f4727f602d4f1f45f6a007b7cec016a60529d0/MSVC/mynovacoinqt/novacoin.ico",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/MSVC/mynovacoinqt/novacoin.ico?ref=b6f4727f602d4f1f45f6a007b7cec016a60529d0"
      },
      {
        "sha": "04d5d9839ea51f2852f4c5721a3e0b9adc79b1e3",
        "filename": "README.md",
        "status": "modified",
        "additions": 23,
        "deletions": 13,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/README.md?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -1,16 +1,26 @@\n+[![42orig256.png](https://s13.postimg.org/u4nl71wxj/42orig256.png/)](https://tr.im/42coin)\n+\n+\n+42-coin - a PoS/PoW based cryptocurrency.\n+\t\t\n+Specifications\n+--------------\n+\n+- Max money: 42 coins\n+- Transaction confirmation method: PoS+PoW\n+- Transaction type: public & anonymous\n+- Number of transaction confirmation: 7\n+- Number of block confirmation: 42\n+- PoS reward: 0 coin\n+- Min stake age: 42 hours\n+- Max stake age: 420 days\n+- PoS target spacing: 7 minutes\n+- PoW algo type: Scrypt\n+- PoW reward: 0 coin + tx fees\n+- PoW target spacing: 21 minutes\n+- Default Listen Port: 4242 (42420 for testnet)\n+- JSON-RPC Port: 2121 (21210 for testnet)\n \n-NovaCoin official development tree\n-\n-NovaCoin - a hybrid scrypt PoW + PoS based cryptocurrency.\n-\n-* 10 minutes stake spacing\n-* 30 minutes PoW spacing\n-* Balanced PoW blocks and stakes weighting\n-* The PoW subsidy halves every x64 multiply of PoW difficulty\n-* The PoS interest halves every x64 multiply of PoS difficulty\n-* Maximum PoW reward is 100 coins\n-* Maximum PoS reward is 10 coins\n-* No deterministic limit of the supply, currently ~ 1411259 coins mined\n \n Development process\n ===========================\n@@ -25,7 +35,7 @@ or are controversial.\n \n The master branch is regularly built and tested, but is not guaranteed\n to be completely stable. Tags are regularly created to indicate new\n-official, stable release versions of NovaCoin.\n+official, stable release versions of 42.\n \n Feature branches are created when there are major new features being\n worked on by several people."
      },
      {
        "sha": "0a18a142bf1de4f2f95b3586fe00c16d0b57de86",
        "filename": "contrib/debian/42-qt.desktop",
        "status": "added",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/contrib/debian/42-qt.desktop",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/contrib/debian/42-qt.desktop",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/42-qt.desktop?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -0,0 +1,13 @@\n+[Desktop Entry]\n+Encoding=UTF-8\n+Name=42\n+Comment=42 P2P Cryptocurrency\n+Comment[ru]=42, P2P \u043a\u0440\u0438\u043f\u0442\u043e\u0432\u0430\u043b\u044e\u0442\u0430\n+Comment[fr]=42, monnaie virtuelle cryptographique pair \u00e0 pair\n+Comment[tr]=42, e\u015ften e\u015fe kriptografik sanal para birimi\n+Exec=/usr/bin/42-qt\n+Terminal=false\n+Type=Application\n+Icon=/usr/share/pixmaps/4280.xpm\n+MimeType=x-scheme-handler/42;\n+Categories=Office;"
      },
      {
        "sha": "b2c51849c071f903f61e348b1ede8c65f4cf55e5",
        "filename": "contrib/debian/42-qt.install",
        "status": "added",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/contrib/debian/42-qt.install",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/contrib/debian/42-qt.install",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/42-qt.install?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -0,0 +1,5 @@\n+42-qt usr/bin\n+share/pixmaps/4232.xpm usr/share/pixmaps\n+share/pixmaps/4280.xpm usr/share/pixmaps\n+debian/42-qt.desktop usr/share/applications\n+debian/42-qt.protocol usr/share/kde4/services/"
      },
      {
        "sha": "a780243054bca60faeb35b40cc5d1d1f3ad9f7d5",
        "filename": "contrib/debian/42-qt.lintian-overrides",
        "status": "renamed",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/contrib/debian/42-qt.lintian-overrides",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/contrib/debian/42-qt.lintian-overrides",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/42-qt.lintian-overrides?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -1,2 +1,2 @@\n # Linked code is Expat - only Debian packaging is GPL-2+\n-novacoind: possible-gpl-code-linked-with-openssl\n+42-qt: possible-gpl-code-linked-with-openssl",
        "previous_filename": "contrib/debian/novacoind.lintian-overrides"
      },
      {
        "sha": "27bbc70ca893a250c73669c1dd2c27ea7f6ad142",
        "filename": "contrib/debian/42-qt.protocol",
        "status": "renamed",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/contrib/debian/42-qt.protocol",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/contrib/debian/42-qt.protocol",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/42-qt.protocol?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -1,6 +1,6 @@\n [Protocol]\n-exec=novacoin-qt '%u'\n-protocol=novacoin\n+exec=42-qt '%u'\n+protocol=42\n input=none\n output=none\n helper=true",
        "previous_filename": "contrib/debian/novacoin-qt.protocol"
      },
      {
        "sha": "69541482d5ef55deb3d93a0483a2187b7d40d5c5",
        "filename": "contrib/debian/42d.examples",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/contrib/debian/42d.examples",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/contrib/debian/42d.examples",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/42d.examples?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -0,0 +1 @@\n+debian/examples/42.conf"
      },
      {
        "sha": "36cb12703b34e37e28b54079f7f9b03f600cb85c",
        "filename": "contrib/debian/42d.install",
        "status": "added",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/contrib/debian/42d.install",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/contrib/debian/42d.install",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/42d.install?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -0,0 +1,2 @@\n+debian/bin/42d usr/bin\n+src/42d usr/lib/42"
      },
      {
        "sha": "82690d20f8063d86d1665948ff166337bc915657",
        "filename": "contrib/debian/42d.lintian-overrides",
        "status": "renamed",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/contrib/debian/42d.lintian-overrides",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/contrib/debian/42d.lintian-overrides",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/42d.lintian-overrides?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -1,2 +1,2 @@\n # Linked code is Expat - only Debian packaging is GPL-2+\n-novacoin-qt: possible-gpl-code-linked-with-openssl\n+42d: possible-gpl-code-linked-with-openssl",
        "previous_filename": "contrib/debian/novacoin-qt.lintian-overrides"
      },
      {
        "sha": "c8c1a4765875bc9bea695ae3ffe52b3fee60259d",
        "filename": "contrib/debian/42d.manpages",
        "status": "added",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/contrib/debian/42d.manpages",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/contrib/debian/42d.manpages",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/42d.manpages?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -0,0 +1,2 @@\n+debian/manpages/42d.1\n+debian/manpages/42.conf.5"
      },
      {
        "sha": "86c815d25acd91a26a9192403a9d491d8bf90971",
        "filename": "contrib/debian/bin/42d",
        "status": "renamed",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/contrib/debian/bin/42d",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/contrib/debian/bin/42d",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bin/42d?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -4,11 +4,11 @@ set -e\n \n umask 077\n \n-basedir=~/.novacoin\n-cfgfile=\"$basedir/novacoin.conf\"\n+basedir=~/.42\n+cfgfile=\"$basedir/42.conf\"\n \n [ -e \"$basedir\" ] || mkdir \"$basedir\"\n \n [ -e \"$cfgfile\" ] || perl -le 'print\"rpcpassword=\",map{(a..z,A..Z,0..9)[rand 62]}0..9' > \"$cfgfile\"\n \n-exec /usr/lib/novacoin/novacoind \"$@\"\n+exec /usr/lib/42/42d \"$@\"",
        "previous_filename": "contrib/debian/bin/novacoind"
      },
      {
        "sha": "b3bc973501f09844a64f2988e8ee8a776eefe581",
        "filename": "contrib/debian/bin/novacoin-qt",
        "status": "removed",
        "additions": 0,
        "deletions": 16,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b6f4727f602d4f1f45f6a007b7cec016a60529d0/contrib/debian/bin/novacoin-qt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b6f4727f602d4f1f45f6a007b7cec016a60529d0/contrib/debian/bin/novacoin-qt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bin/novacoin-qt?ref=b6f4727f602d4f1f45f6a007b7cec016a60529d0",
        "patch": "@@ -1,16 +0,0 @@\n-#!/bin/sh\n-\n-set -e\n-\n-umask 077\n-\n-basedir=~/.novacoin\n-dbfile=\"$basedir/DB_CONFIG\"\n-cfgfile=\"$basedir/novacoin.conf\"\n-\n-[ -e \"$basedir\" ] || mkdir \"$basedir\"\n-\n-# Novacoin does not clean up DB log files by default\n-[ -e \"$dbfile\" ] || echo 'set_flags DB_LOG_AUTOREMOVE' > \"$dbfile\"\n-\n-exec /usr/lib/novacoin/novacoin-qt \"$@\""
      },
      {
        "sha": "21afe5584172ac7645ddf73c7312d57b912c7541",
        "filename": "contrib/debian/changelog",
        "status": "modified",
        "additions": 1,
        "deletions": 6,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/contrib/debian/changelog",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/contrib/debian/changelog",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/changelog?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -1,6 +1 @@\n-novacoin (0.4.0~dfsg-1) unstable; urgency=low\n-\n-  [ Balthazar ]\n-  * Initial release.\n-\n- -- Balthazar <balthazar@yandex.ru>  Mon, 15 Apr 2013 22:15:22 +0100\n+42 (0.0.7-g891b422) unstable; urgency=low"
      },
      {
        "sha": "fa06d8fa8e290e77a12e02a95f637a0a3e52c018",
        "filename": "contrib/debian/control",
        "status": "modified",
        "additions": 11,
        "deletions": 12,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/contrib/debian/control",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/contrib/debian/control",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/control?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -1,8 +1,8 @@\n-Source: novacoin\n+Source: 42\n Section: utils\n Priority: optional\n-Maintainer: Alex D. <balthazar.ad@gmail.com>\n-Uploaders: Alex D. <balthazar.ad@gmail.com>\n+Maintainer: Jonas Smedegaard <dr@jones.dk>\n+Uploaders: Micah Anderson <micah@debian.org>\n Build-Depends: debhelper,\n  devscripts,\n  bash-completion,\n@@ -17,15 +17,14 @@ Build-Depends: debhelper,\n  libqt4-dev,\n  libqrencode-dev\n Standards-Version: 3.9.2\n-Homepage: http://www.novaco.in/\n-Vcs-Git: git://github.com/novacoin-project/novacoin.git\n-Vcs-Browser: http://github.com/novacoin-project/novacoin\n+Vcs-Git: git://github.com/42-coin/42.git\n+Vcs-Browser: http://github.com/42-coin/42\n \n-Package: novacoind\n+Package: 42d\n Architecture: any\n Depends: ${shlibs:Depends}, ${misc:Depends}\n Description: peer-to-peer network based digital currency - daemon\n- Novacoin is a free open source peer-to-peer electronic cash system that\n+ 42 is a free open source peer-to-peer electronic cash system that\n  is completely decentralized, without the need for a central server or\n  trusted parties.  Users hold the crypto keys to their own money and\n  transact directly with each other, with the help of a P2P network to\n@@ -36,14 +35,14 @@ Description: peer-to-peer network based digital currency - daemon\n  Full transaction history is stored locally at each client.  This\n  requires 150+ MiB of space, slowly growing.\n  .\n- This package provides novacoind, a combined daemon and CLI tool to\n+ This package provides 42d, a combined daemon and CLI tool to\n  interact with the daemon.\n \n-Package: novacoin-qt\n+Package: 42-qt\n Architecture: any\n Depends: ${shlibs:Depends}, ${misc:Depends}\n Description: peer-to-peer network based digital currency - Qt GUI\n- Novacoin is a free open source peer-to-peer electronic cash system that\n+ 42 is a free open source peer-to-peer electronic cash system that\n  is completely decentralized, without the need for a central server or\n  trusted parties.  Users hold the crypto keys to their own money and\n  transact directly with each other, with the help of a P2P network to\n@@ -54,4 +53,4 @@ Description: peer-to-peer network based digital currency - Qt GUI\n  Full transaction history is stored locally at each client.  This\n  requires 150+ MiB of space, slowly growing.\n  .\n- This package provides Novacoin-Qt, a GUI for Novacoin based on Qt.\n+ This package provides 42-Qt, a GUI for 42 based on Qt."
      },
      {
        "sha": "fe1fb2e0d7414807ddaca0fd2dd77066411980fe",
        "filename": "contrib/debian/copyright",
        "status": "modified",
        "additions": 6,
        "deletions": 4,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/contrib/debian/copyright",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/contrib/debian/copyright",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/copyright?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -1,8 +1,10 @@\n Format: http://svn.debian.org/wsvn/dep/web/deps/dep5.mdwn?rev=174\n-Upstream-Name: Novacoin\n-Upstream-Contact: Alex D. <balthazar.ad@gmail.com>\n-Source: http://sourceforge.net/projects/novacoin/files/\n- https://github.com/novacoin-project/novacoin\n+Upstream-Name: 42\n+Upstream-Source: https://github.com/42-coin/42\n+\n+Files: *\n+Copyright: 2016, 42 Developers\n+License: Expat\n \n Files: *\n Copyright: 2012-2015, Novacoin Developers"
      },
      {
        "sha": "6fce050c4de5f82ab06bec7ce36a37423491d593",
        "filename": "contrib/debian/examples/42.conf",
        "status": "renamed",
        "additions": 12,
        "deletions": 12,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/contrib/debian/examples/42.conf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/contrib/debian/examples/42.conf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/examples/42.conf?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -1,22 +1,22 @@\n-# novacoin.conf configuration file. Lines beginning with # are comments.\n+# 42.conf configuration file. Lines beginning with # are comments.\n \n \n # Network-related settings:\n \n-# Run on the test network instead of the real novacoin network.\n+# Run on the test network instead of the real 42 network.\n #testnet=1\n \n # Connect via a socks4 proxy\n #proxy=127.0.0.1:9050\n \n # Use as many addnode= settings as you like to connect to specific peers\n-#addnode=81.200.241.54\n+#addnode=93.76.1.154\n \n # ... or use as many connect= settings as you like to connect ONLY\n # to specific peers:\n-#connect=81.200.241.54\n+#connect=93.76.1.154\n \n-# Do not use Internet Relay Chat (irc.lfnet.org #novacoin channel) to\n+# Do not use Internet Relay Chat (irc.lfnet.org #42 channel) to\n # find other peers.\n #noirc=1\n \n@@ -26,7 +26,7 @@\n \n # JSON-RPC options (for controlling a running process)\n \n-# server=1 tells NovaCoin to accept JSON-RPC commands.\n+# server=1 tells 42 to accept JSON-RPC commands.\n #server=1\n \n # You must set rpcuser and rpcpassword to secure the JSON-RPC api\n@@ -41,14 +41,14 @@\n #rpcallowip=192.168.1.*\n \n # Listen for RPC connections on this TCP port:\n-rpcport=8344\n+rpcport=2121\n \n-# You can use NovaCoin or novacoind to send commands to NovaCoin/novacoind\n+# You can use 42 or 42d to send commands to 42/42d\n # running on another host using this option:\n rpcconnect=127.0.0.1\n \n # Use Secure Sockets Layer (also known as TLS or HTTPS) to communicate\n-# with NovaCoin -server or novacoind\n+# with 42 -server or 42d\n #rpcssl=1\n \n # OpenSSL settings used when rpcssl=1\n@@ -63,12 +63,12 @@ rpcsslprivatekeyfile=server.pem\n # both prior transactions and several dozen future transactions.\n keypool=100\n \n-# Pay an optional transaction fee every time you send novacoins.  \n-paytxfee=0.01\n+# Pay an optional transaction fee every time you send 42s.  \n+paytxfee=0.00000001\n \n # User interface options\n \n-# Start NovaCoin minimized\n+# Start 42 minimized\n #min=1\n \n # Minimize to the system tray",
        "previous_filename": "contrib/debian/examples/novacoin.conf"
      },
      {
        "sha": "8f1c1d596f1fb955aedbe50724852354a95d7479",
        "filename": "contrib/debian/manpages/42.conf.5",
        "status": "renamed",
        "additions": 15,
        "deletions": 15,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/contrib/debian/manpages/42.conf.5",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/contrib/debian/manpages/42.conf.5",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/manpages/42.conf.5?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -1,19 +1,19 @@\n-.TH NOVACOIN.CONF \"8\" \"April 2013\" \"novacoin.conf 3.19\"\n+.TH 42.CONF \"12\" \"November 2016\" \"42.conf 3.19\"\n .SH NAME\n-novacoin.conf \\- novacoin configuration file\n+42.conf \\- 42 configuration file\n .SH SYNOPSIS\n All command-line options (except for '-datadir' and '-conf') may be specified in a configuration file, and all configuration file options may also be specified on the command line. Command-line options override values set in the configuration file.\n .TP\n The configuration file is a list of 'setting=value' pairs, one per line, with optional comments starting with the '#' character.\n .TP\n-The configuration file is not automatically created; you can create it using your favorite plain-text editor. By default, novacoind(1) will look for a file named novacoin.conf(5) in the novacoin data directory, but both the data directory and the configuration file path may be changed using the '-datadir' and '-conf' command-line arguments.\n+The configuration file is not automatically created; you can create it using your favorite plain-text editor. By default, 42d(1) will look for a file named 42.conf(5) in the 42 data directory, but both the data directory and the configuration file path may be changed using the '-datadir' and '-conf' command-line arguments.\n .SH LOCATION\n-novacoin.conf should be located in $HOME/.novacoin\n+42.conf should be located in $HOME/.42\n .SH NETWORK-RELATED SETTINGS\n .TP\n .TP\n \\fBtestnet=\\fR[\\fI'1'\\fR|\\fI'0'\\fR]\n-Enable or disable run on the test network instead of the real *novacoin* network.\n+Enable or disable run on the test network instead of the real *42* network.\n .TP\n \\fBproxy=\\fR\\fI'127.0.0.1:9050'\\fR\n Connect via a socks4 proxy.\n@@ -25,14 +25,14 @@ Use as many *addnode=* settings as you like to connect to specific peers.\n Use as many *connect=* settings as you like to connect ONLY to specific peers.\n .TP\n \\fBnoirc=\\fR[\\fI'1'\\fR|\\fI'0'\\fR]\n-Use or Do not use Internet Relay Chat (irc.lfnet.org #novacoin channel) to find other peers.\n+Use or Do not use Internet Relay Chat (irc.lfnet.org #42 channel) to find other peers.\n .TP\n \\fRmaxconnections=\\fR\\fI'value'\\fR\n Maximum number of inbound+outbound connections.\n .SH JSON-RPC OPTIONS\n .TP\n \\fBserver=\\fR[\\fI'1'\\fR|\\fI'0'\\fR]\n-Tells *novacoin* to accept or not accept JSON-RPC commands.\n+Tells *42* to accept or not accept JSON-RPC commands.\n .TP\n \\fBrpcuser=\\fR\\fI'username'\\fR\n You must set *rpcuser* to secure the JSON-RPC api.\n@@ -41,7 +41,7 @@ You must set *rpcuser* to secure the JSON-RPC api.\n You must set *rpcpassword* to secure the JSON-RPC api.\n .TP\n \\fBrpctimeout=\\fR\\fI'30'\\fR\n-How many seconds *novacoin* will wait for a complete RPC HTTP request, after the HTTP connection is established.\n+How many seconds *42* will wait for a complete RPC HTTP request, after the HTTP connection is established.\n .TP\n \\fBrpcallowip=\\fR\\fI'192.168.1.*'\\fR\n By default, only RPC connections from localhost are allowed. Specify as many *rpcallowip=* settings as you like to allow connections from other hosts (and you may use * as a wildcard character).\n@@ -50,10 +50,10 @@ By default, only RPC connections from localhost are allowed. Specify as many *rp\n Listen for RPC connections on this TCP port.\n .TP\n \\fBrpcconnect=\\fR\\fI'127.0.0.1'\\fR\n-You can use *novacoin* or *novacoind(1)* to send commands to *novacoin*/*novacoind(1)* running on another host using this option.\n+You can use *42* or *42d(1)* to send commands to *42*/*42d(1)* running on another host using this option.\n .TP\n \\fBrpcssl=\\fR\\fI'1'\\fR\n-Use Secure Sockets Layer (also known as TLS or HTTPS) to communicate with *novacoin* '-server' or *novacoind(1)*. Example of OpenSSL settings used when *rpcssl*='1':\n+Use Secure Sockets Layer (also known as TLS or HTTPS) to communicate with *42* '-server' or *42d(1)*. Example of OpenSSL settings used when *rpcssl*='1':\n .TP\n \\fBrpcsslciphers=\\fR\\fI'TLSv1+HIGH:!SSLv2:!aNULL:!eNULL:!AH:!3DES:@STRENGTH'\\fR\n .TP\n@@ -64,26 +64,26 @@ Use Secure Sockets Layer (also known as TLS or HTTPS) to communicate with *novac\n .SH MISCELLANEOUS OPTIONS\n .TP\n \\fBgen=\\fR[\\fI'0'\\fR|\\fI'1'\\fR]\n-Enable or disable attempt to generate novacoins.\n+Enable or disable attempt to generate 42s.\n .TP\n \\fBkeypool=\\fR\\fI'100'\\fR\n Pre-generate this many public/private key pairs, so wallet backups will be valid for both prior transactions and several dozen future transactions.\n .TP\n-\\fBpaytxfee=\\fR\\fI'0.00'\\fR\n-Pay an optional transaction fee every time you send novacoins. Transactions with fees are more likely than free transactions to be included in generated blocks, so may be validated sooner.\n+\\fBpaytxfee=\\fR\\fI'0.0000000'\\fR\n+Pay an optional transaction fee every time you send 42s. Transactions with fees are more likely than free transactions to be included in generated blocks, so may be validated sooner.\n .TP\n \\fBallowreceivebyip=\\fR\\fI'1'\\fR\n Allow direct connections for the 'pay via IP address' feature.\n .TP\n .SH USER INTERFACE OPTIONS\n .TP\n \\fBmin=\\fR[\\fI'0'\\fR|\\fI'1'\\fR]\n-Enable or disable start novacoind minimized.\n+Enable or disable start 42d minimized.\n .TP\n \\fBminimizetotray=\\fR[\\fI'0'\\fR|\\fI'1'\\fR]\n Enable or disable minimize to the system tray.\n .SH \"SEE ALSO\"\n-novacoind(1)\n+42d(1)\n .SH AUTHOR\n This manual page was written by Micah Anderson <micah@debian.org> for the Debian system (but may be used by others). Permission is granted to copy, distribute and/or modify this document under the terms of the GNU General Public License, Version 3 or any later version published by the Free Software Foundation.\n ",
        "previous_filename": "contrib/debian/manpages/novacoin.conf.5"
      },
      {
        "sha": "71260be58f1ae178aac54f60164e42f83fb08066",
        "filename": "contrib/debian/manpages/42d.1",
        "status": "renamed",
        "additions": 23,
        "deletions": 23,
        "changes": 46,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/contrib/debian/manpages/42d.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/contrib/debian/manpages/42d.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/manpages/42d.1?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -1,19 +1,19 @@\n-.TH NOVACOIND \"7\" \"April 2013\" \"novacoind 3.19\" \n+.TH 42D \"22\" \"November 2016\" \"42d 0.0.7\" \n .SH NAME\n-novacoind \\- peer-to-peer network based digital currency\n+42d \\- peer-to-peer network based digital currency\n .SH SYNOPSIS\n-novacoin [options] <command> [params]  \n+42 [options] <command> [params]  \n .TP\n-novacoin [options] help <command> - Get help for a command\n+42 [options] help <command> - Get help for a command\n .SH DESCRIPTION\n-This  manual page documents the novacoind program. Novacoin is a peer-to-peer digital currency. Peer-to-peer (P2P) means that there is no central authority to issue new money or keep track of transactions. Instead, these tasks are managed collectively by the nodes of the network. Advantages:\n+This  manual page documents the 42d program. 42 is a peer-to-peer digital currency. Peer-to-peer (P2P) means that there is no central authority to issue new money or keep track of transactions. Instead, these tasks are managed collectively by the nodes of the network. Advantages:\n \n-Novacoins can be sent easily through the Internet, without having to trust middlemen. Transactions are designed to be irreversible. Be safe from instability caused by fractional reserve banking and central banks. The limited inflation of the Novacoin system\u2019s money supply is distributed evenly (by CPU power) throughout the network, not monopolized by banks.\n+42s can be sent easily through the Internet, without having to trust middlemen. Transactions are designed to be irreversible. Be safe from instability caused by fractional reserve banking and central banks. The limited inflation of the 42 system\u2019s money supply is distributed evenly (by CPU power) throughout the network, not monopolized by banks.\n \n .SH OPTIONS\n .TP\n \\fB\\-conf=\\fR<file>\n-Specify configuration file (default: novacoin.conf)\n+Specify configuration file (default: 42.conf)\n .TP\n \\fB\\-gen\\fR\n Generate coins\n@@ -84,14 +84,14 @@ This help message\n \\fBbackupwallet 'destination'\\fR\n Safely copies *wallet.dat* to 'destination', which can be a directory or a path with filename.\n .TP\n-\\fBgetaccount 'novacoinaddress'\\fR\n+\\fBgetaccount '42address'\\fR\n Returns the account associated with the given address.\n .TP\n-\\fBsetaccount 'novacoinaddress' ['account']\\fR\n+\\fBsetaccount '42address' ['account']\\fR\n Sets the ['account'] associated with the given address. ['account'] may be omitted to remove an address from ['account'].\n .TP\n \\fBgetaccountaddress 'account'\\fR\n-Returns a new novacoin address for 'account'.\n+Returns a new 42 address for 'account'.\n .TP\n \\fBgetaddressesbyaccount 'account'\\fR\n Returns the list of addresses associated with the given 'account'.\n@@ -112,7 +112,7 @@ Returns the number of connections to other nodes.\n Returns the proof-of-work difficulty as a multiple of the minimum difficulty.\n .TP\n \\fBgetgenerate\\fR\n-Returns boolean true if server is trying to generate novacoins, false otherwise.\n+Returns boolean true if server is trying to generate 42s, false otherwise.\n .TP\n \\fBsetgenerate 'generate' ['genproclimit']\\fR\n Generation is limited to ['genproclimit'] processors, -1 is unlimited.\n@@ -124,13 +124,13 @@ Returns a recent hashes per second performance measurement while generating.\n Returns an object containing server information.\n .TP\n \\fBgetnewaddress 'account'\\fR\n-Returns a new novacoin address for receiving payments. If 'account' is specified (recommended), it is added to the address book so payments received with the address will be credited to 'account'.\n+Returns a new 42 address for receiving payments. If 'account' is specified (recommended), it is added to the address book so payments received with the address will be credited to 'account'.\n .TP\n \\fBgetreceivedbyaccount 'account' ['minconf=1']\\fR\n Returns the total amount received by addresses associated with 'account' in transactions with at least ['minconf'] confirmations.\n .TP\n-\\fBgetreceivedbyaddress 'novacoinaddress' ['minconf=1']\\fR\n-Returns the total amount received by 'novacoinaddress' in transactions with at least ['minconf'] confirmations.\n+\\fBgetreceivedbyaddress '42address' ['minconf=1']\\fR\n+Returns the total amount received by '42address' in transactions with at least ['minconf'] confirmations.\n .TP\n \\fBgettransaction 'txid'\\fR\n Returns information about a specific transaction, given hexadecimal transaction ID.\n@@ -179,26 +179,26 @@ Returns a list of the last ['count'] transactions for 'account' - for all accoun\n \\fBmove <'fromaccount'> <'toaccount'> <'amount'> ['minconf=1'] ['comment']\\fR\n Moves funds between accounts.\n .TP\n-\\fBsendfrom* <'account'> <'novacoinaddress'> <'amount'> ['minconf=1'] ['comment'] ['comment-to']\\fR\n-Sends amount from account's balance to 'novacoinaddress'. This method will fail if there is less than amount novacoins with ['minconf'] confirmations in the account's balance (unless account is the empty-string-named default account; it behaves like the *sendtoaddress* method). Returns transaction ID on success.\n+\\fBsendfrom* <'account'> <'42address'> <'amount'> ['minconf=1'] ['comment'] ['comment-to']\\fR\n+Sends amount from account's balance to '42address'. This method will fail if there is less than amount 42s with ['minconf'] confirmations in the account's balance (unless account is the empty-string-named default account; it behaves like the *sendtoaddress* method). Returns transaction ID on success.\n .TP     \n-\\fBsendtoaddress 'novacoinaddress' 'amount' ['comment'] ['comment-to']\\fR\n-Sends amount from the server's available balance to 'novacoinaddress'. amount is a real and is rounded to the nearest 0.01. Returns transaction id on success.\n+\\fBsendtoaddress '42address' 'amount' ['comment'] ['comment-to']\\fR\n+Sends amount from the server's available balance to '42address'. amount is a real and is rounded to the nearest 0.01. Returns transaction id on success.\n .TP    \n \\fBstop\\fR\n-Stops the novacoin server.\n+Stops the 42 server.\n .TP    \n-\\fBvalidateaddress 'novacoinaddress'\\fR\n-Checks that 'novacoinaddress' looks like a proper novacoin address. Returns an object containing:\n+\\fBvalidateaddress '42address'\\fR\n+Checks that '42address' looks like a proper 42 address. Returns an object containing:\n \n     \"isvalid\" : true or false.\n     \"ismine\"  : true if the address is in the server's wallet.\n-    \"address\" : novacoinaddress.\n+    \"address\" : 42address.\n \n     *note: ismine and address are only returned if the address is valid.\n \n .SH \"SEE ALSO\"\n-novacoin.conf(5)\n+42.conf(5)\n .SH AUTHOR\n This manual page was written by Micah Anderson <micah@debian.org> for the Debian system (but may be used by others). Permission is granted to copy, distribute and/or modify this document under the terms of the GNU General Public License, Version 3 or any later version published by the Free Software Foundation.\n ",
        "previous_filename": "contrib/debian/manpages/novacoind.1"
      },
      {
        "sha": "77b795a3330925f4ac4a03ddf5bd3d54b3dae75b",
        "filename": "contrib/debian/novacoin-qt.desktop",
        "status": "removed",
        "additions": 0,
        "deletions": 13,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b6f4727f602d4f1f45f6a007b7cec016a60529d0/contrib/debian/novacoin-qt.desktop",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b6f4727f602d4f1f45f6a007b7cec016a60529d0/contrib/debian/novacoin-qt.desktop",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/novacoin-qt.desktop?ref=b6f4727f602d4f1f45f6a007b7cec016a60529d0",
        "patch": "@@ -1,13 +0,0 @@\n-[Desktop Entry]\n-Encoding=UTF-8\n-Name=NovaCoin\n-Comment=NovaCoin P2P Cryptocurrency\n-Comment[ru]=NovaCoin, P2P \u043a\u0440\u0438\u043f\u0442\u043e\u0432\u0430\u043b\u044e\u0442\u0430\n-Comment[fr]=NovaCoin, monnaie virtuelle cryptographique pair \u00e0 pair\n-Comment[tr]=NovaCoin, e\u015ften e\u015fe kriptografik sanal para birimi\n-Exec=/usr/bin/novacoin-qt\n-Terminal=false\n-Type=Application\n-Icon=/usr/share/pixmaps/novacoin80.xpm\n-MimeType=x-scheme-handler/novacoin;\n-Categories=Office;"
      },
      {
        "sha": "816627367e2438ac0d18ea08761eec7ddecae19a",
        "filename": "contrib/debian/novacoin-qt.install",
        "status": "removed",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b6f4727f602d4f1f45f6a007b7cec016a60529d0/contrib/debian/novacoin-qt.install",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b6f4727f602d4f1f45f6a007b7cec016a60529d0/contrib/debian/novacoin-qt.install",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/novacoin-qt.install?ref=b6f4727f602d4f1f45f6a007b7cec016a60529d0",
        "patch": "@@ -1,5 +0,0 @@\n-novacoin-qt usr/bin\n-share/pixmaps/novacoin32.xpm usr/share/pixmaps\n-share/pixmaps/novacoin80.xpm usr/share/pixmaps\n-debian/novacoin-qt.desktop usr/share/applications\n-debian/novacoin-qt.protocol usr/share/kde4/services/"
      },
      {
        "sha": "3728af9dd7af76b51d4fb9bad487b2a2f7f20772",
        "filename": "contrib/debian/novacoind.examples",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b6f4727f602d4f1f45f6a007b7cec016a60529d0/contrib/debian/novacoind.examples",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b6f4727f602d4f1f45f6a007b7cec016a60529d0/contrib/debian/novacoind.examples",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/novacoind.examples?ref=b6f4727f602d4f1f45f6a007b7cec016a60529d0",
        "patch": "@@ -1 +0,0 @@\n-debian/examples/novacoin.conf"
      },
      {
        "sha": "b44acca382276c2e3d7d16f9bb8be53a523a36ee",
        "filename": "contrib/debian/novacoind.install",
        "status": "removed",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b6f4727f602d4f1f45f6a007b7cec016a60529d0/contrib/debian/novacoind.install",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b6f4727f602d4f1f45f6a007b7cec016a60529d0/contrib/debian/novacoind.install",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/novacoind.install?ref=b6f4727f602d4f1f45f6a007b7cec016a60529d0",
        "patch": "@@ -1,2 +0,0 @@\n-debian/bin/novacoind usr/bin\n-src/novacoind usr/lib/novacoin"
      },
      {
        "sha": "15116c8db664397df5da16a94aeb8cc7102db9a5",
        "filename": "contrib/debian/novacoind.manpages",
        "status": "removed",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b6f4727f602d4f1f45f6a007b7cec016a60529d0/contrib/debian/novacoind.manpages",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b6f4727f602d4f1f45f6a007b7cec016a60529d0/contrib/debian/novacoind.manpages",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/novacoind.manpages?ref=b6f4727f602d4f1f45f6a007b7cec016a60529d0",
        "patch": "@@ -1,2 +0,0 @@\n-debian/manpages/novacoind.1\n-debian/manpages/novacoin.conf.5"
      },
      {
        "sha": "c25f48a8e4a6bcabd5acedb5ea004ba8878ffba7",
        "filename": "contrib/debian/rules",
        "status": "modified",
        "additions": 9,
        "deletions": 9,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/contrib/debian/rules",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/contrib/debian/rules",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/rules?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -1,25 +1,25 @@\n #!/usr/bin/make -f\n # -*- mode: makefile; coding: utf-8 -*-\n \n-DEB_INSTALL_EXAMPLES_novacoind += debian/examples/*\n-DEB_INSTALL_MANPAGES_novacoind += debian/manpages/*\n+DEB_INSTALL_EXAMPLES_42d += debian/examples/*\n+DEB_INSTALL_MANPAGES_42d += debian/manpages/*\n \n %:\n \tdh --with bash-completion $@\n \n override_dh_auto_build:\n-\tcd src; $(MAKE) -f makefile.unix novacoind USE_ASM=1 USE_LEVELDB=1\n+\tcd src; $(MAKE) -f makefile.unix 42d USE_ASM=1 USE_LEVELDB=1\n \t$(MAKE)\n \n override_dh_auto_clean:\n-\tif [ -f Makefile ]; then $(MAKE) clean; else rm -rf build/; rm -f novacoin-qt; fi\n+\tif [ -f Makefile ]; then $(MAKE) clean; else rm -rf build/; rm -f 42-qt; fi\n \tcd src; $(MAKE) -f makefile.unix clean\n \n override_dh_auto_configure:\n-\tqmake novacoin-qt.pro USE_ASM=1 USE_LEVELDB=1\n+\tqmake 42-qt.pro USE_ASM=1 USE_LEVELDB=1\n \n # Ensure wrapper is set executable\n-binary-post-install/novacoind:\n-\tchmod +x $(cdbs_curdestdir)usr/bin/novacoind\n-binary-post-install/novacoin-qt:\n-\tchmod +x $(cdbs_curdestdir)usr/bin/novacoin-qt\n+binary-post-install/42d:\n+\tchmod +x $(cdbs_curdestdir)usr/bin/42d\n+binary-post-install/42-qt:\n+\tchmod +x $(cdbs_curdestdir)usr/bin/42-qt"
      },
      {
        "sha": "fbba4a2cb3279aa6e151392605134ebee03192f8",
        "filename": "contrib/debian/watch",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/contrib/debian/watch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/contrib/debian/watch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/watch?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -1,4 +1,4 @@\n # Run the \"uscan\" command to check for upstream updates and more.\n version=4\n opts=uversionmangle=s/(\\d)(alpha|beta|rc)/$1~$2/,dversionmangle=s/~dfsg\\d*// \\\n- http://githubredir.debian.net/github/CryptoManiac/novacoin v(.*).tar.gz\n+ http://githubredir.debian.net/github/42-coin/42 v(.*).tar.gz"
      },
      {
        "sha": "0df211d5ed0a4a48113791a63c525a6ddf5dc6a6",
        "filename": "contrib/docker_builder/README.md",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/contrib/docker_builder/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/contrib/docker_builder/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/docker_builder/README.md?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -1,6 +1,6 @@\n-# Dockerfile for building novacoin binaries.\n+# Dockerfile for building 42 binaries.\n \n-Now, you can build your own novacoin files on all systems with docker and do it easy without installing depends on your system.\n+Now, you can build your own 42 files on all systems with docker and do it easy without installing depends on your system.\n \n ## How:\n \n@@ -17,13 +17,13 @@ Example:\n Successfully built 9bbff825d50f\n \n ```\n-sudo docker run -it -v ~/path/to/novacoin/folder:/novacoin 9bbff825d50f\n+sudo docker run -it -v ~/path/to/42/folder:/42 9bbff825d50f\n ```\n \n If your system uses SELINUX you may use --privileged=true key\n \n ```\n-sudo docker run --privileged=true -it -v ~/development/novacoin:/novacoin 9bbff825d50f\n+sudo docker run --privileged=true -it -v ~/development/42:/42 9bbff825d50f\n ```\n \n-See novacoin-qt file in used novacoin folder and novacoind file in src subfolder.\n\\ No newline at end of file\n+See 42-qt file in used 42 folder and 42d file in src subfolder.\n\\ No newline at end of file"
      },
      {
        "sha": "f8817bd344a98287122964c4494ee6981c9075f5",
        "filename": "contrib/docker_builder/dockerfile",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/contrib/docker_builder/dockerfile",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/contrib/docker_builder/dockerfile",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/docker_builder/dockerfile?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -25,14 +25,14 @@ RUN ./configure --enable-static; \\\n   make; \\\n   make install\n \n-VOLUME /novacoin\n+VOLUME /42\n \n-WORKDIR /novacoin\n+WORKDIR /42\n \n ENTRYPOINT qmake USE_O3=1 USE_ASM=1 RELEASE=1 && \\\n  make && \\\n  cd src && \\\n  make -f makefile.unix USE_O3=1 USE_ASM=1 STATIC=1 && \\\n- strip novacoind\n+ strip 42d\n \n  "
      },
      {
        "sha": "b262ec195ec06a9d52ae217be88c7aba3ca07fca",
        "filename": "contrib/gentoo/42-0.5.0.ebuild",
        "status": "added",
        "additions": 106,
        "deletions": 0,
        "changes": 106,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/contrib/gentoo/42-0.5.0.ebuild",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/contrib/gentoo/42-0.5.0.ebuild",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gentoo/42-0.5.0.ebuild?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -0,0 +1,106 @@\n+\ufeff# Distributed under the terms of the GNU General Public License v2\n+EAPI=5\n+LANGS=\"en ru\"\n+\n+inherit db-use eutils fdo-mime gnome2-utils kde4-functions qt4-r2\n+\n+DB_VER=\"4.8\"\n+\n+DESCRIPTION=\"42 - a hybrid PoW+PoS energy efficient p2p-cryptocurrency and electronic payment system.\"\n+SRC_URI=\"https://github.com/${PN}-coin/${PN}/archive/42-v${PV}.tar.gz -> ${PN}-${PV}.tar.gz\"\n+\n+LICENSE=\"MIT\"\n+SLOT=\"0\"\n+KEYWORDS=\"~amd64 ~x86\"\n+IUSE=\"+dbus -ipv6 kde +qrcode\"\n+\n+RDEPEND=\"\n+\tdev-libs/boost[threads(+)]\n+\tdev-libs/openssl:0[-bindist]\n+\tqrcode? (\n+\t\tmedia-gfx/qrencode\n+\t)\n+\tsys-libs/db:$(db_ver_to_slot \"${DB_VER}\")[cxx]\n+\tdev-qt/qtgui:4\n+\tdbus? (\n+\t\tdev-qt/qtdbus:4\n+\t)\n+\"\n+DEPEND=\"${RDEPEND}\n+\t>=app-shells/bash-4.1\n+\t>sys-devel/gcc-4.3.3\n+\t>=dev-libs/openssl-0.9.8g\n+\t>=sys-libs/db-4.8.30\n+\t>=dev-libs/boost-1.37\n+\"\n+\n+DOCS=\"doc/translation_process.md\"\n+\n+S=\"${WORKDIR}/${PN}-42-v${PV}\"\n+\n+src_prepare() {\n+\tcd src || die\n+\n+\tlocal filt= yeslang= nolang=\n+\n+\tfor ts in $(ls qt/locale/*.ts)\n+\tdo\n+\t\tx=\"${ts/*bitcoin_/}\"\n+\t\tx=\"${x/.ts/}\"\n+\t\tif ! use \"linguas_$x\"; then\n+\t\t\tnolang=\"$nolang $x\"\n+\t\t\trm \"$ts\"\n+\t\t\tfilt=\"$filt\\\\|$x\"\n+\t\telse\n+\t\t\tyeslang=\"$yeslang $x\"\n+\t\tfi\n+\tdone\n+\n+\tfilt=\"bitcoin_\\\\(${filt:2}\\\\)\\\\.\\(qm\\|ts\\)\"\n+\tsed \"/${filt}/d\" -i 'qt/bitcoin.qrc'\n+\teinfo \"Languages -- Enabled:$yeslang -- Disabled:$nolang\"\n+}\n+\n+src_configure() {\n+\tOPTS=()\n+\n+\tuse dbus && OPTS+=(\"USE_DBUS=1\")\n+\tuse ipv6 || OPTS+=(\"USE_IPV6=-\")\n+\n+\tOPTS+=(\"BDB_INCLUDE_PATH=$(db_includedir \"${DB_VER}\")\")\n+\tOPTS+=(\"BDB_LIB_SUFFIX=-${DB_VER}\")\n+\n+\tif has_version '>=dev-libs/boost-1.52'; then\n+\t\tOPTS+=(\"LIBS+=-lboost_chrono\\$\\$BOOST_LIB_SUFFIX\")\n+\tfi\n+\n+\teqmake4 ${PN}-qt.pro \"${OPTS[@]}\"\n+}\n+\n+src_install() {\n+\tdobin ${PN}-qt\n+\n+\tinsinto /usr/share/pixmaps\n+\tnewins \"src/qt/res/icons/42-128.png\" \"${PN}.png\"\n+\n+\tmake_desktop_entry \"${PN}-qt\" \"42\" \"/usr/share/pixmaps/${PN}.png\" \"Network;P2P;Finance;\"\n+\n+\tif use kde; then\n+\t\tinsinto /usr/share/kde4/services\n+\t\tnewins contrib/debian/42-qt.protocol ${PN}.protocol\n+\tfi\n+}\n+\n+update_caches() {\n+\tgnome2_icon_cache_update\n+\tfdo-mime_desktop_database_update\n+\tbuildsycoca\n+}\n+\n+pkg_postinst() {\n+\tupdate_caches\n+}\n+\n+pkg_postrm() {\n+\tupdate_caches\n+}\n\\ No newline at end of file"
      },
      {
        "sha": "4047edac2af5cd6da4066ee75b7d625f6c2a4456",
        "filename": "contrib/initscripts/bsd/42",
        "status": "added",
        "additions": 68,
        "deletions": 0,
        "changes": 68,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/contrib/initscripts/bsd/42",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/contrib/initscripts/bsd/42",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/initscripts/bsd/42?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -0,0 +1,68 @@\n+#!/bin/sh\n+\n+# PROVIDE: 42\n+# REQUIRE: LOGIN\n+# KEYWORD: shutdown\n+\n+#\n+# Add the following lines to /etc/rc.conf.local or /etc/rc.conf\n+# to enable this service:\n+#\n+# 42_enable (bool): Set to NO by default. Set this variable to YES if you want to enable 42 service.\n+# 42_config (path): Set to /usr/local/etc/42.conf by default.\n+# 42_user:  The user account 42 daemon runs as. It uses 'root' user by default.\n+# 42_group: The group account 42 daemon runs as. It uses 'wheel' group by default.\n+# 42_datadir (str): Default to \"/var/db/42\". Base data directory.\n+\n+. /etc/rc.subr\n+\n+name=42\n+rcvar=42_enable\n+\n+: ${42_enable:=NO}\n+: ${42_config=/usr/local/etc/42.conf}\n+: ${42_datadir=/var/db/42}\n+: ${42_user=\"root\"}\n+: ${42_group=\"wheel\"}\n+\n+required_files=${42_config}\n+command=/usr/local/bin/42d\n+42_chdir=${42_datadir}\n+pidfile=\"${42_datadir}/42d.pid\"\n+stop_cmd=42_stop\n+command_args=\"-conf=${42_config} -datadir=${42_datadir} -daemon -pid=${pidfile}\"\n+start_precmd=\"${name}_prestart\"\n+\n+42_create_datadir()\n+{\n+\techo \"Creating data directory\"\n+\teval mkdir -p ${42_datadir}\n+\t[ $? -eq 0 ] && chown -R ${42_user}:${42_group} ${42_datadir}\n+}\n+\n+42_prestart()\n+{\n+\tif [ ! -d \"${42_datadir}/.\" ]; then\n+\t\t42_create_datadir || return 1\n+\tfi\n+}\n+\n+42_requirepidfile()\n+{\n+\tif [ ! \"0`check_pidfile ${pidfile} ${command}`\" -gt 1 ]; then\n+\t\techo \"${name} not running? (check $pidfile).\"\n+\t\texit 1\n+\tfi\n+}\n+\n+42_stop()\n+{\n+    42_requirepidfile\n+\n+\techo \"Stopping ${name}.\"\n+\teval ${command} -conf=${42_config} -datadir=${42_datadir} stop\n+\twait_for_pids ${rc_pid}\n+}\n+\n+load_rc_config $name\n+run_rc_command \"$1\""
      },
      {
        "sha": "81dfce561b536faa028ddbabdc63e91198867f88",
        "filename": "contrib/initscripts/bsd/novacoin",
        "status": "removed",
        "additions": 0,
        "deletions": 68,
        "changes": 68,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b6f4727f602d4f1f45f6a007b7cec016a60529d0/contrib/initscripts/bsd/novacoin",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b6f4727f602d4f1f45f6a007b7cec016a60529d0/contrib/initscripts/bsd/novacoin",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/initscripts/bsd/novacoin?ref=b6f4727f602d4f1f45f6a007b7cec016a60529d0",
        "patch": "@@ -1,68 +0,0 @@\n-#!/bin/sh\n-\n-# PROVIDE: novacoin\n-# REQUIRE: LOGIN\n-# KEYWORD: shutdown\n-\n-#\n-# Add the following lines to /etc/rc.conf.local or /etc/rc.conf\n-# to enable this service:\n-#\n-# novacoin_enable (bool): Set to NO by default. Set this variable to YES if you want to enable novacoin service.\n-# novacoin_config (path): Set to /usr/local/etc/novacoin.conf by default.\n-# novacoin_user:  The user account novacoin daemon runs as. It uses 'root' user by default.\n-# novacoin_group: The group account novacoin daemon runs as. It uses 'wheel' group by default.\n-# novacoin_datadir (str): Default to \"/var/db/novacoin\". Base data directory.\n-\n-. /etc/rc.subr\n-\n-name=novacoin\n-rcvar=novacoin_enable\n-\n-: ${novacoin_enable:=NO}\n-: ${novacoin_config=/usr/local/etc/novacoin.conf}\n-: ${novacoin_datadir=/var/db/novacoin}\n-: ${novacoin_user=\"root\"}\n-: ${novacoin_group=\"wheel\"}\n-\n-required_files=${novacoin_config}\n-command=/usr/local/bin/novacoind\n-novacoin_chdir=${novacoin_datadir}\n-pidfile=\"${novacoin_datadir}/novacoind.pid\"\n-stop_cmd=novacoin_stop\n-command_args=\"-conf=${novacoin_config} -datadir=${novacoin_datadir} -daemon -pid=${pidfile}\"\n-start_precmd=\"${name}_prestart\"\n-\n-novacoin_create_datadir()\n-{\n-\techo \"Creating data directory\"\n-\teval mkdir -p ${novacoin_datadir}\n-\t[ $? -eq 0 ] && chown -R ${novacoin_user}:${novacoin_group} ${novacoin_datadir}\n-}\n-\n-novacoin_prestart()\n-{\n-\tif [ ! -d \"${novacoin_datadir}/.\" ]; then\n-\t\tnovacoin_create_datadir || return 1\n-\tfi\n-}\n-\n-novacoin_requirepidfile()\n-{\n-\tif [ ! \"0`check_pidfile ${pidfile} ${command}`\" -gt 1 ]; then\n-\t\techo \"${name} not running? (check $pidfile).\"\n-\t\texit 1\n-\tfi\n-}\n-\n-novacoin_stop()\n-{\n-    novacoin_requirepidfile\n-\n-\techo \"Stopping ${name}.\"\n-\teval ${command} -conf=${novacoin_config} -datadir=${novacoin_datadir} stop\n-\twait_for_pids ${rc_pid}\n-}\n-\n-load_rc_config $name\n-run_rc_command \"$1\""
      },
      {
        "sha": "0ef0cf4e8132879d73b4932cf1c0d23f48998e01",
        "filename": "contrib/initscripts/lsb/42",
        "status": "renamed",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/contrib/initscripts/lsb/42",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/contrib/initscripts/lsb/42",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/initscripts/lsb/42?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -1,24 +1,24 @@\n #!/bin/sh\n ### BEGIN INIT INFO\n-# Provides:          novacoind\n+# Provides:          42d\n # Required-Start:    $network\n # Required-Stop:     $network\n # Default-Start:     2 3 4 5\n # Default-Stop:      0 1 6\n-# Short-Description: novacoind daemon startup script\n-# Description:       novacoind daemon startup script\n+# Short-Description: 42d daemon startup script\n+# Description:       42d daemon startup script\n ### END INIT INFO\n \n # Do NOT \"set -e\"\n \n # PATH should only include /usr/* if it runs after the mountnfs.sh script\n PATH=/sbin:/usr/sbin:/bin:/usr/bin\n-DESC=\"NovaCoin Daemon\"\n-NAME=novacoind\n-DAEMON=/opt/novacoin/$NAME\n+DESC=\"42 Daemon\"\n+NAME=42d\n+DAEMON=/opt/42/$NAME\n PIDFILE=/var/run/$NAME.pid\n SCRIPTNAME=/etc/init.d/$NAME\n-CHUID=novacoin:novacoin\n+CHUID=42:42\n DAEMON_ARGS=\"-daemon -pid=$PIDFILE\"\n \n # Exit if the package is not installed",
        "previous_filename": "contrib/initscripts/lsb/novacoind"
      },
      {
        "sha": "d388e86b0d2f38cc23c4e1ac95c9e8c0203af6e0",
        "filename": "contrib/initscripts/systemd/42d.service",
        "status": "renamed",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/contrib/initscripts/systemd/42d.service",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/contrib/initscripts/systemd/42d.service",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/initscripts/systemd/42d.service?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -1,11 +1,11 @@\n [Unit]\n-Description=Novacoin daemon serivce\n+Description=42 daemon serivce\n After=network.target\n \n [Service]\n Type=simple\n-User=novacoin\n-ExecStart=/opt/novacoin/novacoind\n+User=42\n+ExecStart=/opt/42/42d\n \n [Install]\n WantedBy=multi-user.target",
        "previous_filename": "contrib/initscripts/systemd/novacoind.service"
      },
      {
        "sha": "a50a0ba607a1180dded7b5fceb3348ab55a16e5c",
        "filename": "contrib/macdeploy/background.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/contrib/macdeploy/background.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/contrib/macdeploy/background.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/background.png?ref=4dd28f80df1e355098f2c25006fe2a32091a63da"
      },
      {
        "sha": "e921547abc700494ceb1649595fb667844bee0a8",
        "filename": "contrib/macdeploy/fancy.plist",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/contrib/macdeploy/fancy.plist",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/contrib/macdeploy/fancy.plist",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/fancy.plist?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -22,7 +22,7 @@\n \t\t\t<integer>370</integer>\n \t\t\t<integer>156</integer>\n \t\t</array>\n-\t\t<key>NovaCoin-Qt.app</key>\n+\t\t<key>42-Qt.app</key>\n \t\t<array>\n \t\t\t<integer>128</integer>\n \t\t\t<integer>156</integer>"
      },
      {
        "sha": "3faf7c91512db78c3e5505e54e06438a5c7792a8",
        "filename": "contrib/macdeploy/macdeployqtplus",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/contrib/macdeploy/macdeployqtplus",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/contrib/macdeploy/macdeployqtplus",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/macdeployqtplus?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -763,7 +763,7 @@ if config.dmg is not None:\n                 items_positions.append(itemscript.substitute(params))\n \n         params = {\n-            \"disk\" : \"NovaCoin-Qt\",\n+            \"disk\" : \"42-Qt\",\n             \"window_bounds\" : \"300,300,800,620\",\n             \"icon_size\" : \"96\",\n             \"background_commands\" : \"\","
      },
      {
        "sha": "8cec959b3de06238cb5e9efebc315922c3fd145f",
        "filename": "contrib/macdeploy/notes.txt",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/contrib/macdeploy/notes.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/contrib/macdeploy/notes.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/notes.txt?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -6,7 +6,7 @@ You will need the appscript package for the fancy disk image creation to work.\n Install it by invoking \"sudo easy_install appscript\".\n \n Ths script should be invoked in the target directory like this:\n-$source_dir/contrib/macdeploy/macdeployqtplus NovaCoin-Qt.app -add-qt-tr da,de,es,hu,ru,uk,zh_CN,zh_TW -dmg -fancy $source_dir/contrib/macdeploy/fancy.plist -verbose 2\n+$source_dir/contrib/macdeploy/macdeployqtplus 42-Qt.app -add-qt-tr da,de,es,hu,ru,uk,zh_CN,zh_TW -dmg -fancy $source_dir/contrib/macdeploy/fancy.plist -verbose 2\n \n During the process, the disk image window will pop up briefly where the fancy\n settings are applied. This is normal, please do not interfere.\n@@ -19,8 +19,8 @@ Fill in the following.\n Enable custom process step: [x]\n Command: %{sourceDir}/contrib/macdeploy/macdeployqtplus\n Working directory: %{buildDir}\n-Command arguments: NovaCoin-Qt.app -add-qt-tr da,de,es,hu,ru,uk,zh_CN,zh_TW -dmg -fancy %{sourceDir}/contrib/macdeploy/fancy.plist -verbose 2\n+Command arguments: 42-Qt.app -add-qt-tr da,de,es,hu,ru,uk,zh_CN,zh_TW -dmg -fancy %{sourceDir}/contrib/macdeploy/fancy.plist -verbose 2\n \n After that you can start the deployment process through the menu with\n-Build -> Deploy Project \"novacoin-qt\"\n+Build -> Deploy Project \"42-qt\"\n "
      },
      {
        "sha": "0ce27304798d786bab03dacb16aa38b7791bab46",
        "filename": "contrib/seeds/getseeds/getseeds.py",
        "status": "modified",
        "additions": 9,
        "deletions": 9,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/contrib/seeds/getseeds/getseeds.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/contrib/seeds/getseeds/getseeds.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/getseeds/getseeds.py?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -14,7 +14,7 @@\n import platform\n import urllib.request\n \n-sources = ['http://dalexhz1.cloudapp.net', 'http://dalexhz2.cloudapp.net', 'http://dalexhz4.cloudapp.net', 'http://dalexhz5.cloudapp.net']\n+sources = ['']\n data = urllib.request.urlopen(random.choice(sources)).readall();\n \n if 'norpc' in sys.argv:\n@@ -32,25 +32,25 @@\n def confFile():\n     folder = ''\n     if platform.system() == 'Windows':\n-        folder = os.path.join(os.path.join(os.environ['APPDATA'], 'NovaCoin'))\n+        folder = os.path.join(os.path.join(os.environ['APPDATA'], '42'))\n     else:\n         if platform.system() == 'Darwin':\n-            folder = os.path.expanduser('~/Library/Application Support/NovaCoin/')\n+            folder = os.path.expanduser('~/Library/Application Support/42/')\n         else:\n-            folder = os.path.expanduser('~/.novacoin')\n+            folder = os.path.expanduser('~/.42')\n \n-    return os.path.join(folder, 'novacoin.conf')\n+    return os.path.join(folder, '42.conf')\n \n conf_path = confFile()\n if not os.path.exists(conf_path):\n-    parser.error('''Novacoin configuration file not found. Manually enter your RPC password.\\r\\n'''\n+    parser.error('''42 configuration file not found. Manually enter your RPC password.\\r\\n'''\n         '''If you actually haven't created a configuration file, you should create one at %s with the text like this:\\r\\n'''\n         '''\\r\\n'''\n         '''server=1\\r\\n'''\n         '''rpcuser=yourname\\r\\n'''\n         '''rpcpassword=%x\\r\\n'''\n         '''\\r\\n'''\n-        '''Keep that password secret! After creating the file, restart Novacoin.''' % (conf_path, random.randrange(2**128)))\n+        '''Keep that password secret! After creating the file, restart 42.''' % (conf_path, random.randrange(2**128)))\n \n conf = open(conf_path, 'rb').read()\n contents = {}\n@@ -73,7 +73,7 @@ def confFile():\n \n rpcuser = contents[b'rpcuser'].decode()\n rpcpassword = contents[b'rpcpassword'].decode()\n-rpcport = 8344\n+rpcport = 2121\n rpclisten = '127.0.0.1'\n \n if b'rpcport' in contents.keys():\n@@ -89,7 +89,7 @@ def confFile():\n         access.addnode(node, 'add')\n     except socket_error as e:\n         if e.errno == errno.ECONNREFUSED:\n-            print ('Unable to communicate with Novacoin RPC')\n+            print ('Unable to communicate with 42 RPC')\n         break\n     except JSONRPCException as e:\n         if e.code == -23:"
      },
      {
        "sha": "a6df74f3c246481ffb0a39bc61f9a3f815b890c8",
        "filename": "contrib/seeds/makeseeds.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/contrib/seeds/makeseeds.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/contrib/seeds/makeseeds.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/makeseeds.py?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -10,7 +10,7 @@ def main():\n     lines = sys.stdin.readlines()\n \n     ips = []\n-    pattern = re.compile(r\"^(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3}):7777\")\n+    pattern = re.compile(r\"^(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3}):4242\")\n     for line in lines:\n         m = pattern.match(line)\n         if m is None:"
      },
      {
        "sha": "379b5a638bee6fdcfd6c4162b1ae461f4f714552",
        "filename": "contrib/wallettools/walletchangepass.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/contrib/wallettools/walletchangepass.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/contrib/wallettools/walletchangepass.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/wallettools/walletchangepass.py?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -1,5 +1,5 @@\n from jsonrpc import ServiceProxy\n-access = ServiceProxy(\"http://127.0.0.1:8344\")\n+access = ServiceProxy(\"http://127.0.0.1:4242\")\n pwd = raw_input(\"Enter old wallet passphrase: \")\n pwd2 = raw_input(\"Enter new wallet passphrase: \")\n access.walletpassphrasechange(pwd, pwd2)\n\\ No newline at end of file"
      },
      {
        "sha": "4e0bac68a9d3aa570c712057c13bdf9e1d8eeaf2",
        "filename": "contrib/wallettools/walletdefrag.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/contrib/wallettools/walletdefrag.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/contrib/wallettools/walletdefrag.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/wallettools/walletdefrag.py?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -4,7 +4,7 @@\n MaxOutputSum = 500       # Maximum transaction value\n MinInputSum = 50         # Minimum input value, inputs with lower size will be ignored\n \n-access = ServiceProxy(\"http://alexd:123456789@127.0.0.1:8344\")   # http://username:password@host:port/\n+access = ServiceProxy(\"http://alexd:123456789@127.0.0.1:4242\")   # http://username:password@host:port/\n \n try:\n     balance = access.getbalance()"
      },
      {
        "sha": "cc3a665954d5045f15f0923603055ea7ff7998cb",
        "filename": "contrib/wallettools/walletunlock.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/contrib/wallettools/walletunlock.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/contrib/wallettools/walletunlock.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/wallettools/walletunlock.py?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -1,5 +1,5 @@\n from jsonrpc import ServiceProxy\n-access = ServiceProxy(\"http://127.0.0.1:8344\")\n+access = ServiceProxy(\"http://127.0.0.1:4242\")\n pwd = raw_input(\"Enter wallet passphrase: \")\n access.walletpassphrase(pwd, 60)\n "
      },
      {
        "sha": "2f805d180982c984b647d87b452d270f79f8b14f",
        "filename": "doc/Doxyfile",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/doc/Doxyfile",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/doc/Doxyfile",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/Doxyfile?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -28,7 +28,7 @@ DOXYFILE_ENCODING      = UTF-8\n # The PROJECT_NAME tag is a single word (or a sequence of words surrounded \n # by quotes) that should identify the project.\n \n-PROJECT_NAME           = Novacoin\n+PROJECT_NAME           = 42\n \n # The PROJECT_NUMBER tag can be used to enter a project or revision number. \n # This could be handy for archiving the generated documentation or \n@@ -47,7 +47,7 @@ PROJECT_BRIEF          = \"P2P Digital Currency\"\n # exceed 55 pixels and the maximum width should not exceed 200 pixels. \n # Doxygen will copy the logo to the output directory.\n \n-PROJECT_LOGO           = doc/novacoin_logo_doxygen.png\n+PROJECT_LOGO           = doc/42_logo_doxygen.png\n \n # The OUTPUT_DIRECTORY tag is used to specify the (relative or absolute) \n # base path where the generated documentation will be put. "
      },
      {
        "sha": "afb7a9040677bdf42f077aac7faf358c869aa82b",
        "filename": "doc/EncryptRPC.txt",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/doc/EncryptRPC.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/doc/EncryptRPC.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/EncryptRPC.txt?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -2,7 +2,7 @@ Encryption RPC api allows you to encrypt an arbitrary data bytes with some publi\n \n Example\n \n-1. Let's generate new novacoin address first.\n+1. Let's generate new 42 address first.\n \n > getnewaddress\n 4NZFZZS9b8iawVA8sYtHsqNbpq57envuBz"
      },
      {
        "sha": "571f52d6abcc2c3e0aad79dbc4bdce67ace00b71",
        "filename": "doc/README",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/doc/README",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/doc/README",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -1,5 +1,6 @@\n-NovaCoin 0.5.0 BETA\n+42 0.5.0 BETA\n \n+Copyright (c) 2016 42 Developers\n Copyright (c) 2013 NovaCoin Developers\n Copyright (c) 2011-2012 PPCoin Developers\n Distributed under the MIT/X11 software license, see the accompanying\n@@ -11,7 +12,7 @@ cryptographic software written by Eric Young (eay@cryptsoft.com).\n \n Intro\n -----\n-NovaCoin is a free open source project derived from Bitcoin, with\n+42 is a free open source project derived from Bitcoin, with\n the goal of providing a long-term energy-efficient scrypt-based crypto-currency.\n Built on the foundation of Bitcoin and PPCoin, innovations such as proof-of-stake\n help further advance the field of crypto-currency."
      },
      {
        "sha": "d9ac9e934840c2358894ba3c83e54c9619529b6a",
        "filename": "doc/README_windows.txt",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/doc/README_windows.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/doc/README_windows.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README_windows.txt?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -1,5 +1,6 @@\n-NovaCoin 0.4.4 BETA\r\n+42 0.4.4 BETA\r\n \r\n+Copyright (c) 2016 42 Developers\r\n Copyright (c) 2013 NovaCoin Developers\r\n Copyright (c) 2011-2013 PPCoin Developers\r\n Distributed under the MIT/X11 software license, see the accompanying\r\n@@ -11,7 +12,7 @@ cryptographic software written by Eric Young (eay@cryptsoft.com).\n \r\n Intro\r\n -----\r\n-NovaCoin is a free open source project derived from Bitcoin, with\r\n+42 is a free open source project derived from Bitcoin, with\r\n the goal of providing a long-term energy-efficient scrypt-based crypto-currency.\r\n Built on the foundation of Bitcoin and PPCoin, innovations such as proof-of-stake and scrypt\r\n help further advance the field of crypto-currency.\r"
      },
      {
        "sha": "716a80ff12664068aec694c3d26348e37e114f69",
        "filename": "doc/build-msw.txt",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/doc/build-msw.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/doc/build-msw.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-msw.txt?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -1,13 +1,14 @@\n Copyright (c) 2009-2012 Bitcoin Developers\n Copyright (c) 2013 NovaCoin Developers\n+Copyright (c) 2016 42 Developers\n Distributed under the MIT/X11 software license, see the accompanying\n file license.txt or http://www.opensource.org/licenses/mit-license.php.\n This product includes software developed by the OpenSSL Project for use in\n the OpenSSL Toolkit (http://www.openssl.org/).  This product includes\n cryptographic software written by Eric Young (eay@cryptsoft.com).\n \n \n-See readme-qt.rst for instructions on building NovaCoin QT, the\n+See readme-qt.rst for instructions on building 42 QT, the\n graphical user interface.\n \n WINDOWS BUILD NOTES\n@@ -63,9 +64,9 @@ downloaded boost jam 3.1.18\n cd \\boost-1.57.0-mgw\n bjam toolset=gcc --build-type=complete stage\n \n-NovaCoin\n+42\n -------\n DOS prompt:\n-cd \\novacoin\\src\n+cd \\42\\src\n mingw32-make -f makefile.mingw\n-strip novacoind.exe\n+strip 42d.exe"
      },
      {
        "sha": "1aace4fbb326b373a01b84d9be1526bb6c57a27d",
        "filename": "doc/build-osx.txt",
        "status": "modified",
        "additions": 20,
        "deletions": 20,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/doc/build-osx.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/doc/build-osx.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-osx.txt?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -1,6 +1,6 @@\n Mac OS X Build Instructions and Notes\n ====================================\n-This guide will show you how to build novacoind(headless client) for OSX.\n+This guide will show you how to build 42d(headless client) for OSX.\n \n Notes\n -----\n@@ -58,25 +58,25 @@ The rest of these commands are run inside brew interactive mode:\n /private/tmp/berkeley-db4-UGpd0O $ exit\n ```\n \n-After exiting, you'll get a warning that the install is keg-only, which means it wasn't symlinked to `/usr/local`.  You don't need it to link it to build novacoin, but if you want to, here's how:\n+After exiting, you'll get a warning that the install is keg-only, which means it wasn't symlinked to `/usr/local`.  You don't need it to link it to build 42, but if you want to, here's how:\n \n     $ brew link --force berkeley-db4\n \n \n-### Building `novacoind`\n+### Building `42d`\n \n 1. Clone the github tree to get the source code and go into the directory.\n \n-        git clone https://github.com/novacoin-project/novacoin.git\n-        cd novacoin\n+        git clone https://github.com/42-coin/42.git\n+        cd 42\n \n-2. Build NovaCoin-Qt application:\n+2. Build 42-Qt application:\n         qmake\n         make\n \n 3. Build bitcoind:\n         cd src\n-        make -f makefile.osx novacoind\n+        make -f makefile.osx 42d\n \n Use Qt Creator as IDE\n ------------------------\n@@ -85,19 +85,19 @@ Download Qt Creator from http://www.qt.io/download/. Download the \"community edi\n \n 1. Make sure you installed everything through homebrew mentioned above \n 2. In Qt Creator do \"File\" -> \"Open Project\"\n-3. Select novacoin-qt.pro as project file.\n+3. Select 42-qt.pro as project file.\n 4. In the \"Projects\" tab select \"Manage Kits...\"\n 5. Select the default \"Desktop\" kit and select \"Clang (x86 64bit in /usr/bin)\" as compiler\n 6. Select LLDB as debugger (you might need to set the path to your installtion)\n 7. Start debugging with Qt Creator\n \n Creating a release build\n ------------------------\n-You can ignore this section if you are building `novacoind` for your own use.\n+You can ignore this section if you are building `42d` for your own use.\n \n-novacoind binary isn't included in the NovaCoin-Qt.app bundle.\n+42d binary isn't included in the 42-Qt.app bundle.\n \n-If you are building `novacoind` or `NovaCoin-Qt` for others, your build machine should be set up\n+If you are building `42d` or `42-Qt` for others, your build machine should be set up\n as follows for maximum compatibility:\n \n All dependencies should be compiled with these flags:\n@@ -108,29 +108,29 @@ All dependencies should be compiled with these flags:\n \n Once dependencies are compiled, you can create the .dmg disk image:\n \n-./contrib/macdeploy/macdeployqtplus NovaCoin-Qt.app -dmg -fancy ./contrib/macdeploy/fancy.plist\n+./contrib/macdeploy/macdeployqtplus 42-Qt.app -dmg -fancy ./contrib/macdeploy/fancy.plist\n \n Running\n -------\n \n-It's now available at `./novacoind`, provided that you are still in the `src`\n+It's now available at `./42d`, provided that you are still in the `src`\n directory. We have to first create the RPC configuration file, though.\n \n-Run `./novacoind` to get the filename where it should be put, or just try these\n+Run `./42d` to get the filename where it should be put, or just try these\n commands:\n \n-    echo -e \"rpcuser=novacoinrpc\\nrpcpassword=$(xxd -l 16 -p /dev/urandom)\" > \"/Users/${USER}/Library/Application Support/NovaCoin/novacoin.conf\"\n-    chmod 600 \"/Users/${USER}/Library/Application Support/NovaCoin/novacoin.conf\"\n+    echo -e \"rpcuser=42rpc\\nrpcpassword=$(xxd -l 16 -p /dev/urandom)\" > \"/Users/${USER}/Library/Application Support/42/42.conf\"\n+    chmod 600 \"/Users/${USER}/Library/Application Support/42/42.conf\"\n \n The next time you run it, it will start downloading the blockchain, but it won't\n output anything while it's doing this. This process may take several hours;\n you can monitor its process by looking at the debug.log file, like this:\n \n-    tail -f $HOME/Library/Application\\ Support/NovaCoin/debug.log\n+    tail -f $HOME/Library/Application\\ Support/42/debug.log\n \n Other commands:\n -------\n \n-    ./novacoind -daemon # to start the bitcoin daemon.\n-    ./novacoind --help  # for a list of command-line options.\n-    ./novacoind help    # When the daemon is running, to get a list of RPC commands\n+    ./42d -daemon # to start the bitcoin daemon.\n+    ./42d --help  # for a list of command-line options.\n+    ./42d help    # When the daemon is running, to get a list of RPC commands"
      },
      {
        "sha": "5aee732da8e98f592b4736d901ca6c887e20d931",
        "filename": "doc/build-unix.txt",
        "status": "modified",
        "additions": 13,
        "deletions": 12,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/doc/build-unix.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/doc/build-unix.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-unix.txt?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -1,5 +1,6 @@\n Copyright (c) 2009-2012 Bitcoin Developers\n Copyright (c) 2013 NovaCoin Developers\n+Copyright (c) 2016 42 Developers\n Distributed under the MIT/X11 software license, see the accompanying\n file license.txt or http://www.opensource.org/licenses/mit-license.php.\n This product includes software developed by the OpenSSL Project for use in\n@@ -14,10 +15,10 @@ To Build\n --------\n \n cd src/\n-make -f makefile.unix            # Headless novacoin\n+make -f makefile.unix            # Headless 42\n \n-See readme-qt.rst for instructions on building NovaCoin QT,\n-the graphical novacoin.\n+See readme-qt.rst for instructions on building 42 QT,\n+the graphical 42.\n \n Dependencies\n ------------\n@@ -63,21 +64,21 @@ If using Boost 1.37, append -mt to the boost libraries in the makefile.\n Dependency Build Instructions: Gentoo\n -------------------------------------\n \n-Note: If you just want to install novacoind on Gentoo, you can add the Novacoin\n+Note: If you just want to install 42d on Gentoo, you can add the 42\n       overlay and use your package manager:\n-          layman -a novacoin && emerge novacoind\n+          layman -a 42 && emerge 42d\n \n emerge -av1 --noreplace boost glib openssl sys-libs/db:4.8\n \n Take the following steps to build:\n- cd ${NOVACOIN_DIR}/src\n+ cd ${42_DIR}/src\n  make -f makefile.unix BDB_INCLUDE_PATH='/usr/include/db4.8'\n- strip novacoind\n+ strip 42d\n \n \n Notes\n -----\n-The release is built with GCC and then \"strip novacoind\" to strip the debug\n+The release is built with GCC and then \"strip 42d\" to strip the debug\n symbols, which reduces the executable size by about 90%.\n \n Berkeley DB\n@@ -97,7 +98,7 @@ sudo su\n \n Security\n --------\n-To help make your novacoin installation more secure by making certain attacks impossible to\n+To help make your 42 installation more secure by making certain attacks impossible to\n exploit even if a vulnerability is found, you can take the following measures:\n \n * Position Independent Executable\n@@ -114,21 +115,21 @@ exploit even if a vulnerability is found, you can take the following measures:\n     make -f makefile.unix ... -e PIE=1\n \n     To test that you have built PIE executable, install scanelf, part of paxutils, and use:\n-    scanelf -e ./novacoin\n+    scanelf -e ./42\n \n     The output should contain:\n      TYPE\n     ET_DYN\n \n * Non-executable Stack\n     If the stack is executable then trivial stack based buffer overflow exploits are possible if\n-    vulnerable buffers are found. By default, novacoin should be built with a non-executable stack\n+    vulnerable buffers are found. By default, 42 should be built with a non-executable stack\n     but if one of the libraries it uses asks for an executable stack or someone makes a mistake\n     and uses a compiler extension which requires an executable stack, it will silently build an\n     executable without the non-executable stack protection.\n \n     To verify that the stack is non-executable after compiling use:\n-    scanelf -e ./novacoin\n+    scanelf -e ./42\n \n     the output should contain:\n     STK/REL/PTL"
      },
      {
        "sha": "50b9ce23d3fa4da80d1d195dafcf3ef319852ca0",
        "filename": "doc/building 42-qt for android under Windows.txt",
        "status": "renamed",
        "additions": 9,
        "deletions": 9,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/doc/building%2042-qt%20for%20android%20under%20Windows.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/doc/building%2042-qt%20for%20android%20under%20Windows.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/building%2042-qt%20for%20android%20under%20Windows.txt?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -130,23 +130,23 @@ libboost_system-gcc-mt-s-1_57.a\n libboost_thread_pthread-gcc-mt-s-1_57.a\n \n 2.4 LevelDB\n--\u0417\u0430\u0439\u0434\u0438\u0442\u0435 \u043d\u0430 \u0441\u0430\u0439\u0442 https://github.com/novacoin-project/novacoin \n+-\u0417\u0430\u0439\u0434\u0438\u0442\u0435 \u043d\u0430 \u0441\u0430\u0439\u0442 https://github.com/42-coin/42 \n -\u041d\u0430\u0436\u043c\u0438\u0442\u0435 Download ZIP\n--\u0420\u0430\u0441\u043f\u0430\u043a\u0443\u0439\u0442\u0435 novacoin-master.zip \u0432 C:\\Android\n+-\u0420\u0430\u0441\u043f\u0430\u043a\u0443\u0439\u0442\u0435 42-master.zip \u0432 C:\\Android\n -\u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 MinGW shell (C:\\MinGW\\msys\\1.0\\msys.bat) \u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u0435 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u043a\u043e\u0434:\n \n-cd /c/android/novacoin-master/src/leveldb\n+cd /c/android/42-master/src/leveldb\n TARGET_OS=OS_ANDROID_CROSSCOMPILE make libleveldb.a libmemenv.a\n \n 2.5 ifaddrs\n -\u0417\u0430\u0439\u0434\u0438\u0442\u0435 \u043d\u0430 \u0441\u0430\u0439\u0442 https://github.com/kmackay/android-ifaddrs\n -\u041d\u0430\u0436\u043c\u0438\u0442\u0435 Download ZIP\n--\u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 \u0430\u0440\u0445\u0438\u0432 android-ifaddrs-master.zip , \u0432\u044b\u0431\u0435\u0440\u0438\u0442\u0435 \u0444\u0430\u0439\u043b\u044b ifaddrs.c \u0438 ifaddrs.h \u0438 \u0438\u0437\u0432\u043b\u0435\u043a\u0438\u0442\u0435 \u0438\u0445 \u0432 C:\\Android\\novacoin-master\\src\n+-\u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 \u0430\u0440\u0445\u0438\u0432 android-ifaddrs-master.zip , \u0432\u044b\u0431\u0435\u0440\u0438\u0442\u0435 \u0444\u0430\u0439\u043b\u044b ifaddrs.c \u0438 ifaddrs.h \u0438 \u0438\u0437\u0432\u043b\u0435\u043a\u0438\u0442\u0435 \u0438\u0445 \u0432 C:\\Android\\42-master\\src\n \n 3. \u041a\u043e\u043c\u043f\u0438\u043b\u044f\u0446\u0438\u044f\n-3.1 \u0421\u043e\u0431\u0438\u0440\u0430\u0435\u043c Novacoin QT\n+3.1 \u0421\u043e\u0431\u0438\u0440\u0430\u0435\u043c 42 QT\n \n-\u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 \u0444\u0430\u0439\u043b novacoin-qt.pro\n+\u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 \u0444\u0430\u0439\u043b 42-qt.pro\n \u0412\u043c\u0435\u0441\u0442\u043e \n \n #BOOST_LIB_SUFFIX=-mgw49-mt-s-1_55\n@@ -223,12 +223,12 @@ LIBS += -lboost_system$$BOOST_LIB_SUFFIX -lboost_filesystem$$BOOST_LIB_SUFFIX -l\n -\u0412\u0441\u0442\u0430\u0432\u044c\u0442\u0435 \u0432 \u0441\u0442\u0440\u043e\u043a\u0443 \"\u041f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 Ant\" C:\\Android\\apache-ant-1.9.4\\bin\\ant.bat\n -\u041d\u0430\u0436\u043c\u0438\u0442\u0435 \"OK\"\n -\u041d\u0430\u0436\u043c\u0438\u0442\u0435 \"\u0424\u0430\u0439\u043b\"->\"\u041e\u0442\u043a\u0440\u044b\u0442\u044c \u0444\u0430\u0439\u043b \u0438\u043b\u0438 \u043f\u0440\u043e\u0435\u043a\u0442...\"\n--\u041d\u0430\u0439\u0434\u0438\u0442\u0435 \"novacoin-qt.pro\" \u0438 \u043d\u0430\u0436\u043c\u0438\u0442\u0435 \"\u043e\u0442\u043a\u0440\u044b\u0442\u044c\"\n+-\u041d\u0430\u0439\u0434\u0438\u0442\u0435 \"42-qt.pro\" \u0438 \u043d\u0430\u0436\u043c\u0438\u0442\u0435 \"\u043e\u0442\u043a\u0440\u044b\u0442\u044c\"\n -\u041f\u043e\u0441\u0442\u0430\u0432\u044c\u0442\u0435 \u0433\u0430\u043b\u043e\u0447\u043a\u0443 \u043d\u0430\u043f\u0440\u043e\u0442\u0438\u0432 Android \u0434\u043b\u044f armeabi-v7a(GCC 4.9, Qt 5.4.0), \u043e\u0441\u0442\u0430\u043b\u044c\u043d\u044b\u0435 \u0433\u0430\u043b\u043e\u0447\u043a\u0438 \u0443\u0431\u0435\u0440\u0438\u0442\u0435\n -\u041d\u0430\u0436\u043c\u0438\u0442\u0435 \"\u041d\u0430\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u043f\u0440\u043e\u0435\u043a\u0442\"\n -\u041d\u0430\u0436\u043c\u0438\u0442\u0435 \"\u041f\u0440\u043e\u0435\u043a\u0442\u044b\"->\"\u0421\u0431\u043e\u0440\u043a\u0430\"->\"\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u0448\u0430\u0431\u043b\u043e\u043d\u044b\"(\u043a\u0430\u0440\u0442\u0438\u043d\u043a\u0430 \u0447\u0442\u043e\u0431\u044b \u043b\u0443\u0447\u0448\u0435 \u043f\u043e\u043d\u044f\u0442\u044c https://yadi.sk/i/M8mhG2tce4cEy)\n -\u041d\u0430\u0436\u043c\u0438\u0442\u0435 \"\u0417\u0430\u0432\u0435\u0440\u0448\u0438\u0442\u044c\"\n--\u0412 \u043f\u0440\u043e\u0435\u043a\u0442\u0435 novacoin-qt \u0432\u044b\u0431\u0435\u0440\u0435\u0442\u0435 \u0414\u0440\u0443\u0433\u0438\u0435 \u0444\u0430\u0439\u043b\u044b->android->AndroidManifest.xml \u0438 \u0437\u0430\u0434\u0430\u0439\u0442\u0435 \u0438\u043c\u044f \u043f\u0430\u043a\u0435\u0442\u0430, \u0438\u043c\u044f \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f, \u0438\u043a\u043e\u043d\u043a\u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f(\u0418\u043a\u043e\u043d\u043a\u0438 \u043d\u0430\u0445\u043e\u0434\u044f\u0442\u0441\u044f \u0432 \u043f\u0430\u043f\u043a\u0435 C:\\Android\\novacoin-master\\src\\qt\\res\\icons) (\u0414\u043b\u044f Google Play Market \u0438\u043a\u043e\u043d\u043a\u0430 \u0434\u043e\u043b\u0436\u043d\u0430 \u0431\u044b\u0442\u044c \u043d\u0435 \u043c\u0435\u043d\u0435\u0435 512x512)(https://yadi.sk/i/oY-OmnrWe4cTY)\n+-\u0412 \u043f\u0440\u043e\u0435\u043a\u0442\u0435 42-qt \u0432\u044b\u0431\u0435\u0440\u0435\u0442\u0435 \u0414\u0440\u0443\u0433\u0438\u0435 \u0444\u0430\u0439\u043b\u044b->android->AndroidManifest.xml \u0438 \u0437\u0430\u0434\u0430\u0439\u0442\u0435 \u0438\u043c\u044f \u043f\u0430\u043a\u0435\u0442\u0430, \u0438\u043c\u044f \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f, \u0438\u043a\u043e\u043d\u043a\u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f(\u0418\u043a\u043e\u043d\u043a\u0438 \u043d\u0430\u0445\u043e\u0434\u044f\u0442\u0441\u044f \u0432 \u043f\u0430\u043f\u043a\u0435 C:\\Android\\42-master\\src\\qt\\res\\icons) (\u0414\u043b\u044f Google Play Market \u0438\u043a\u043e\u043d\u043a\u0430 \u0434\u043e\u043b\u0436\u043d\u0430 \u0431\u044b\u0442\u044c \u043d\u0435 \u043c\u0435\u043d\u0435\u0435 512x512)(https://yadi.sk/i/oY-OmnrWe4cTY)\n -\u0412\u043e\u0437\u044c\u043c\u0438\u0442\u0435 \u0432\u0430\u0448 Android \u0442\u0435\u043b\u0435\u0444\u043e\u043d/\u043f\u043b\u0430\u043d\u0448\u0435\u0442(\u0432\u0435\u0440\u0441\u0438\u044f \u0434\u043e\u043b\u0436\u043d\u0430 \u0431\u044b\u0442\u044c \u043e\u0442 2.3 \u0438 \u0432\u044b\u0448\u0435)\n -\u041f\u0435\u0440\u0435\u0439\u0434\u0438\u0442\u0435 \u0432 \"\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438\"->\"\u041f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f\".\n -\u041f\u043e\u0441\u0442\u0430\u0432\u044c\u0442\u0435 \u0433\u0430\u043b\u043e\u0447\u043a\u0443 \u043d\u0430\u043f\u0440\u043e\u0442\u0438\u0432 \"\u041d\u0435\u0438\u0437\u0432\u0435\u0441\u0442\u043d\u044b\u0435 \u0438\u0441\u0442\u043e\u0447\u043d\u0438\u043a\u0438\"\n@@ -240,7 +240,7 @@ LIBS += -lboost_system$$BOOST_LIB_SUFFIX -lboost_filesystem$$BOOST_LIB_SUFFIX -l\n -\u0412 QtCreator'\u0435 \u043d\u0430\u0436\u043c\u0438\u0442\u0435 \u043d\u0430 \u0437\u0435\u043b\u0435\u043d\u043e\u0433\u043e \u0440\u043e\u0431\u043e\u0442\u0430 \u0438 \u0432\u044b\u0431\u0435\u0440\u0438\u0442\u0435 \u0421\u0431\u043e\u0440\u043a\u0430: \u0412\u044b\u043f\u0443\u0441\u043a\n -\u041d\u0430\u0436\u043c\u0438\u0442\u0435 \u0437\u0435\u043b\u0435\u043d\u0443\u044e \u0441\u0442\u0440\u0435\u043b\u043a\u0443(\u0417\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c)(https://yadi.sk/i/hKHKL_Phe4EFL)\n -\u0412\u044b\u0431\u0435\u0440\u0438\u0442\u0435 \u0441\u0432\u043e\u0439 \u0442\u0435\u043b\u0435\u0444\u043e\u043d/\u043f\u043b\u0430\u043d\u0448\u0435\u0442, \u043d\u0430\u0436\u043c\u0438\u0442\u0435 OK \u0438 \u0436\u0434\u0438\u0442\u0435 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f \u043a\u043e\u043c\u043f\u0438\u043b\u044f\u0446\u0438\u0438.\n--\u041f\u043e\u0441\u043b\u0435 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f \u043a\u043e\u043c\u043f\u0438\u043b\u044f\u0446\u0438\u0438 Novacoin-Qt \u0431\u0443\u0434\u0435\u0442 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d \u043d\u0430 \u0432\u0430\u0448 \u0442\u0435\u043b\u0435\u0444\u043e\u043d/\u043f\u043b\u0430\u043d\u0448\u0435\u0442 \u0438 \u0437\u0430\u043f\u0443\u0449\u0435\u043d. \u0410 \u0432 \u043f\u0430\u043f\u043a\u0435 C:\\Android\\build-novacoin-qt-Android_armeabi_v7a_GCC_4_9_Qt_5_4_0-Release\\android-build\\bin \u0431\u0443\u0434\u0435\u0442 \u0444\u0430\u0439\u043b QtApp-debug.apk. \u041f\u0435\u0440\u0435\u0438\u043c\u0435\u043d\u0443\u0439\u0442\u0435 \u0435\u0433\u043e \u0432 Novacoin-Qt-0.5.1-debug.apk \u0438 \u043c\u043e\u0436\u043d\u043e \u0440\u0430\u0441\u043f\u0440\u043e\u0441\u0442\u0440\u043e\u043d\u044f\u0442\u044c :)\n+-\u041f\u043e\u0441\u043b\u0435 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f \u043a\u043e\u043c\u043f\u0438\u043b\u044f\u0446\u0438\u0438 42-Qt \u0431\u0443\u0434\u0435\u0442 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d \u043d\u0430 \u0432\u0430\u0448 \u0442\u0435\u043b\u0435\u0444\u043e\u043d/\u043f\u043b\u0430\u043d\u0448\u0435\u0442 \u0438 \u0437\u0430\u043f\u0443\u0449\u0435\u043d. \u0410 \u0432 \u043f\u0430\u043f\u043a\u0435 C:\\Android\\build-42-qt-Android_armeabi_v7a_GCC_4_9_Qt_5_4_0-Release\\android-build\\bin \u0431\u0443\u0434\u0435\u0442 \u0444\u0430\u0439\u043b QtApp-debug.apk. \u041f\u0435\u0440\u0435\u0438\u043c\u0435\u043d\u0443\u0439\u0442\u0435 \u0435\u0433\u043e \u0432 42-Qt-0.5.1-debug.apk \u0438 \u043c\u043e\u0436\u043d\u043e \u0440\u0430\u0441\u043f\u0440\u043e\u0441\u0442\u0440\u043e\u043d\u044f\u0442\u044c :)\n \n \u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0434\u043b\u044f Android X86\n 1. \u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043f\u0443\u0442\u044c C:\\Android\\android-ndk-r10d\\toolchains\\x86-4.9\\prebuilt\\windows-x86_64\\bin \u0432 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e PATH",
        "previous_filename": "doc/building novacoin-qt for android under Windows.txt"
      },
      {
        "sha": "a0755290205b24ac846ef5796409765f29edbac0",
        "filename": "doc/building 42d and 42-qt under Linux.txt",
        "status": "renamed",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/doc/building%2042d%20and%2042-qt%20under%20Linux.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/doc/building%2042d%20and%2042-qt%20under%20Linux.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/building%2042d%20and%2042-qt%20under%20Linux.txt?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -20,18 +20,18 @@ sudo apt-get install  libglew-dev libcheese7 libcheese-gtk23 libclutter-gst-2.0-\n openSUSE(\u043f\u0440\u043e\u0432\u0435\u0440\u0435\u043d\u043e \u043d\u0430 \u0432\u0435\u0440\u0441\u0438\u0438 13.2):\n  sudo zypper install git gcc gcc-c++ libqt4-devel boost-devel libopenssl-devel libdb-4_8-devel libqrencode3\n \n-\u041f\u043e\u0441\u043b\u0435 \u0442\u043e\u0433\u043e, \u043a\u0430\u043a \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u0437\u0430\u0432\u0435\u0440\u0448\u0430\u043b\u0430\u0441\u044c, \u043c\u043e\u0436\u043d\u043e \u043a\u043b\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u0442\u044c Novacoin \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u0430\u0440\u0438\u0439\n+\u041f\u043e\u0441\u043b\u0435 \u0442\u043e\u0433\u043e, \u043a\u0430\u043a \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u0437\u0430\u0432\u0435\u0440\u0448\u0430\u043b\u0430\u0441\u044c, \u043c\u043e\u0436\u043d\u043e \u043a\u043b\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u0442\u044c 42 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u0430\u0440\u0438\u0439\n \n- git clone https://github.com/novacoin-project/novacoin.git\n+ git clone https://github.com/42-coin/42.git\n \n \u0438 \u043d\u0430\u043a\u043e\u043d\u0435\u0446, \u0441\u043a\u043e\u043c\u043f\u0438\u043b\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0441\u0432\u043e\u0439 \u043a\u043b\u0438\u0435\u043d\u0442\n \n- cd novacoin\n+ cd 42\n  qmake USE_O3=1 USE_ASM=1 (\u0435\u0441\u043b\u0438 \u0445\u043e\u0442\u0438\u0442\u0435 LevelDB, \u0442\u043e USE_LEVELDB=1)  \n  make\n  cd src\n  make -f makefile.unix USE_O3=1 USE_ASM=1 (\u0435\u0441\u043b\u0438 \u0445\u043e\u0442\u0438\u0442\u0435 LevelDB, \u0442\u043e USE_LEVELDB=1) \n- strip novacoind      \n+ strip 42d      \n \n \u041a\u043e\u043c\u0430\u043d\u0434\u044b \u0432\u044b\u0448\u0435 \u043a\u043e\u043c\u043f\u0438\u043b\u0438\u0440\u0443\u044e\u0442 \u0431\u0438\u043d\u0430\u0440\u043d\u044b\u0435 \u0444\u0430\u0439\u043b\u044b \u0441 \u0434\u0438\u043d\u0430\u043c\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u043b\u0438\u043d\u043a\u043e\u0432\u043a\u043e\u0439, \u0435\u0441\u043b\u0438 \u0432\u044b \u0445\u043e\u0442\u0438\u0442\u0435 \u0441\u043e \u0441\u0442\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u043b\u0438\u043d\u043a\u043e\u0432\u043a\u043e\u0439 \u0438 \u0432\u0430\u0448 \u0434\u0438\u0441\u0442\u0440\u0438\u0431\u0443\u0442\u0438\u0432 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0441\u0442\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438(.a , \u0430 \u043d\u0435 .so), \u0442\u043e \u0434\u043e\u0431\u0430\u0432\u044c\u0442\u0435:\n -\u0432 \u043a\u043e\u043c\u0430\u043d\u0434\u0443 qmake: \n@@ -42,10 +42,10 @@ openSUSE(\u043f\u0440\u043e\u0432\u0435\u0440\u0435\u043d\u043e \u043d\u0430 \u0432\u0435\u0440\u0441\u0438\u0438 13.2):\n \u0415\u0441\u043b\u0438 \u0432\u044b \u0445\u043e\u0442\u0438\u0442\u0435 \u0443\u043c\u0435\u043d\u044c\u0448\u0438\u0442\u044c \u0440\u0430\u0437\u043c\u0435\u0440 \u0431\u0438\u043d\u0430\u0440\u043d\u044b\u0445 \u0444\u0430\u0439\u043b\u043e\u0432, \u0442\u043e\n 1) \u041f\u0435\u0440\u0435\u0439\u0434\u0438\u0442\u0435 \u043d\u0430 \u0441\u0430\u0439\u0442 http://upx.sourceforge.net/#downloadupx\n 2) \u0421\u043a\u0430\u0447\u0430\u0439\u0442\u0435 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0443 \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0432\u0438\u0438 \u0441 \u0432\u0430\u0448\u0435\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u043e\u0439\n-3) \u0420\u0430\u0441\u043f\u0430\u043a\u0443\u0439\u0442\u0435 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0443 \u0432 \u043f\u0430\u043f\u043a\u0443 \u0441 \u0431\u0438\u043d\u0430\u0440\u043d\u044b\u043c\u0438 Novacoin \u0444\u0430\u0439\u043b\u0430\u043c\u0438.\n+3) \u0420\u0430\u0441\u043f\u0430\u043a\u0443\u0439\u0442\u0435 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0443 \u0432 \u043f\u0430\u043f\u043a\u0443 \u0441 \u0431\u0438\u043d\u0430\u0440\u043d\u044b\u043c\u0438 42 \u0444\u0430\u0439\u043b\u0430\u043c\u0438.\n 4) \u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0432 \u0442\u0435\u0440\u043c\u0438\u043d\u0430\u043b\u0435\n-./upx -9 novacoind\n+./upx -9 42d\n \u0437\u0430\u0442\u0435\u043c\n-./upx -9 novacoin-qt\n+./upx -9 42-qt\n \n-\u0418 \u0432\u0430\u0448\u0438 novacoind \u0438 novacoin-qt \u0441\u0442\u0430\u043d\u0443\u0442 \u043c\u0435\u043d\u044c\u0448\u0435 ~ \u0432 3 \u0440\u0430\u0437\u0430.\n+\u0418 \u0432\u0430\u0448\u0438 42d \u0438 42-qt \u0441\u0442\u0430\u043d\u0443\u0442 \u043c\u0435\u043d\u044c\u0448\u0435 ~ \u0432 3 \u0440\u0430\u0437\u0430.",
        "previous_filename": "doc/building novacoind and novacoinqt under Linux.txt"
      },
      {
        "sha": "197a8556d58f81b516680eb0f87e1441a58887ff",
        "filename": "doc/building 42d and 42-qt under Windows with MSVC.txt",
        "status": "renamed",
        "additions": 11,
        "deletions": 11,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/doc/building%2042d%20and%2042-qt%20under%20Windows%20with%20MSVC.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/doc/building%2042d%20and%2042-qt%20under%20Windows%20with%20MSVC.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/building%2042d%20and%2042-qt%20under%20Windows%20with%20MSVC.txt?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -95,31 +95,31 @@ buildqt64.bat\n (\u0415\u0441\u043b\u0438 \u0443 \u0432\u0430\u0441 \u0430\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0430\u044f \u0432\u0435\u0440\u0441\u0438\u044f, \u0442\u043e \u044d\u0442\u043e \u0432\u044b\u0433\u043b\u044f\u0434\u0438\u0442 \u0442\u0430\u043a: Tools->Options->Text Editor->All Languages->Tabs \u0438 \u043f\u043e\u0441\u0442\u0430\u0432\u044c\u0442\u0435 \u0444\u043b\u0430\u0436\u043e\u043a \"Insert Spaces\" \u0432\u043c\u0435\u0441\u0442\u043e \"Keep Tabs\".)\n \n 3.1 \u0421\u043a\u0430\u0447\u0438\u0432\u0430\u0435\u043c \u0438\u0441\u0445\u043e\u0434\u043d\u0438\u043a\u0438\n--\u0417\u0430\u0439\u0434\u0438\u0442\u0435 \u043d\u0430 \u0441\u0430\u0439\u0442 https://github.com/novacoin-project/novacoin \n+-\u0417\u0430\u0439\u0434\u0438\u0442\u0435 \u043d\u0430 \u0441\u0430\u0439\u0442 https://github.com/42-coin/42 \n -\u041d\u0430\u0436\u043c\u0438\u0442\u0435 Download ZIP\n--\u0420\u0430\u0441\u043f\u0430\u043a\u0443\u0439\u0442\u0435 novacoin-master.zip \u0432 C:\\MyProjects\n--\u043f\u0435\u0440\u0435\u0438\u043c\u0435\u043d\u0443\u0439\u0442\u0435 novacoin-master \u0432 Novacoin\n+-\u0420\u0430\u0441\u043f\u0430\u043a\u0443\u0439\u0442\u0435 42-master.zip \u0432 C:\\MyProjects\n+-\u043f\u0435\u0440\u0435\u0438\u043c\u0435\u043d\u0443\u0439\u0442\u0435 42-master \u0432 42\n \n 3.2 \u041a\u043e\u043c\u043f\u0438\u043b\u044f\u0446\u0438\u044f\n -\u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 Microsoft Visual Studio 2012\n--\u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 \u0444\u0430\u0439\u043b C:\\MyProjects\\Novacoin\\MSVC\\NovacoinSolution.sln\n--\u041c\u043e\u0436\u0435\u0442\u0435 \u043a\u043e\u043c\u043f\u0438\u043b\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0438 NovacoinD \u0438 NovacoinQT \n+-\u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 \u0444\u0430\u0439\u043b C:\\MyProjects\\42\\MSVC\\42Solution.sln\n+-\u041c\u043e\u0436\u0435\u0442\u0435 \u043a\u043e\u043c\u043f\u0438\u043b\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0438 42D \u0438 42QT \n (\u043f\u043e-\u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0432\u044b\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0430 \u043a\u043e\u043c\u043f\u0438\u043b\u044f\u0446\u0438\u044f \u0441 LevelDB, \u0435\u0441\u043b\u0438 \u0432\u044b \u0445\u043e\u0442\u0438\u0442\u0435 \u043a\u043e\u043c\u043f\u0438\u043b\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0441 BerkleyDB, \u0442\u043e\n -\u0412\u044b\u0431\u0435\u0440\u0435\u0442\u0435 \u043f\u0440\u043e\u0435\u043a\u0442 libcommon, \u043f\u0435\u0440\u0435\u0439\u0434\u0438\u0442\u0435 \u0432 \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0430 -> \u0421\\\u0421++ -> \u041f\u0440\u0435\u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0440, \u0443\u0434\u0430\u043b\u0438\u0442\u0435 USE_LEVELDB\n -\u0423\u0434\u0430\u043b\u0438\u0442\u0435 \u0438\u0437 \u043f\u0440\u043e\u0435\u043a\u0442\u0430 libcommon libcommon -> Source Files -> txdb-leveldb.cpp \u0438 \u0434\u043e\u0431\u0430\u0432\u044c\u0442\u0435 \u0432 \u043f\u0440\u043e\u0435\u043a\u0442\n txdb-bdb.cpp\n -\u0423\u0434\u0430\u043b\u0438\u0442\u0435 \u0438\u0437 \u043f\u0440\u043e\u0435\u043a\u0442\u0430 libcommon libcommon -> Header Files -> txdb-leveldb.h \u0438 \u0434\u043e\u0431\u0430\u0432\u044c\u0442\u0435 \u0432 \u043f\u0440\u043e\u0435\u043a\u0442\n txdb-bdb.h\n--\u0412\u044b\u0431\u0435\u0440\u0435\u0442\u0435 \u043f\u0440\u043e\u0435\u043a\u0442 NovacoinD, \u043f\u0435\u0440\u0435\u0439\u0434\u0438\u0442\u0435 \u0432 \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0430 -> \u0421\\\u0421++ -> \u041f\u0440\u0435\u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0440, \u0443\u0434\u0430\u043b\u0438\u0442\u0435 USE_LEVELDB\n--\u0412\u044b\u0431\u0435\u0440\u0435\u0442\u0435 \u043f\u0440\u043e\u0435\u043a\u0442 NovacoinQT, \u043f\u0435\u0440\u0435\u0439\u0434\u0438\u0442\u0435 \u0432 \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0430 -> \u0421\\\u0421++ -> \u041f\u0440\u0435\u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0440, \u0443\u0434\u0430\u043b\u0438\u0442\u0435 USE_LEVELDB\n+-\u0412\u044b\u0431\u0435\u0440\u0435\u0442\u0435 \u043f\u0440\u043e\u0435\u043a\u0442 42D, \u043f\u0435\u0440\u0435\u0439\u0434\u0438\u0442\u0435 \u0432 \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0430 -> \u0421\\\u0421++ -> \u041f\u0440\u0435\u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0440, \u0443\u0434\u0430\u043b\u0438\u0442\u0435 USE_LEVELDB\n+-\u0412\u044b\u0431\u0435\u0440\u0435\u0442\u0435 \u043f\u0440\u043e\u0435\u043a\u0442 42QT, \u043f\u0435\u0440\u0435\u0439\u0434\u0438\u0442\u0435 \u0432 \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0430 -> \u0421\\\u0421++ -> \u041f\u0440\u0435\u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0440, \u0443\u0434\u0430\u043b\u0438\u0442\u0435 USE_LEVELDB\n \n \u0415\u0441\u043b\u0438 \u0432\u044b \u0445\u043e\u0442\u0438\u0442\u0435 \u0443\u043c\u0435\u043d\u044c\u0448\u0438\u0442\u044c \u0440\u0430\u0437\u043c\u0435\u0440 \u0431\u0438\u043d\u0430\u0440\u043d\u044b\u0445 \u0444\u0430\u0439\u043b\u043e\u0432, \u0442\u043e\n 1) \u041f\u0435\u0440\u0435\u0439\u0434\u0438\u0442\u0435 \u043d\u0430 \u0441\u0430\u0439\u0442 http://upx.sourceforge.net/#downloadupx\n 2) \u0421\u043a\u0430\u0447\u0430\u0439\u0442\u0435 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0443 \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0432\u0438\u0438 \u0441 \u0432\u0430\u0448\u0435\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u043e\u0439\n-3) \u0420\u0430\u0441\u043f\u0430\u043a\u0443\u0439\u0442\u0435 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0443 \u0432 \u043f\u0430\u043f\u043a\u0443 \u0441 \u0431\u0438\u043d\u0430\u0440\u043d\u044b\u043c\u0438 Novacoin \u0444\u0430\u0439\u043b\u0430\u043c\u0438.\n+3) \u0420\u0430\u0441\u043f\u0430\u043a\u0443\u0439\u0442\u0435 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0443 \u0432 \u043f\u0430\u043f\u043a\u0443 \u0441 \u0431\u0438\u043d\u0430\u0440\u043d\u044b\u043c\u0438 42 \u0444\u0430\u0439\u043b\u0430\u043c\u0438.\n 4) \u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u0438\n-upx -9 NovacoinD.exe\n+upx -9 42D.exe\n \u0437\u0430\u0442\u0435\u043c\n-upx -9 NovacoinQT.exe\n+upx -9 42QT.exe\n \n-\u0418 \u0432\u0430\u0448\u0438 NovacoinD \u0438 NovacoinQT \u0441\u0442\u0430\u043d\u0443\u0442 \u043c\u0435\u043d\u044c\u0448\u0435 ~ \u0432 3 \u0440\u0430\u0437\u0430.\n+\u0418 \u0432\u0430\u0448\u0438 42D \u0438 42QT \u0441\u0442\u0430\u043d\u0443\u0442 \u043c\u0435\u043d\u044c\u0448\u0435 ~ \u0432 3 \u0440\u0430\u0437\u0430.",
        "previous_filename": "doc/building novacoind and novacoinqt under Windows with MSVC.txt"
      },
      {
        "sha": "6ca9ebdfe90bafd883dea016cb19dc74a56cfc7a",
        "filename": "doc/building 42d and 42-qt under Windows with MinGW.txt",
        "status": "renamed",
        "additions": 61,
        "deletions": 107,
        "changes": 168,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/doc/building%2042d%20and%2042-qt%20under%20Windows%20with%20MinGW.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/doc/building%2042d%20and%2042-qt%20under%20Windows%20with%20MinGW.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/building%2042d%20and%2042-qt%20under%20Windows%20with%20MinGW.txt?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -25,8 +25,7 @@ msys-libtool-bin\n \u0438 \u0440\u0430\u0441\u043f\u0430\u043a\u0443\u0439\u0442\u0435 \u043d\u0430 C:\\\n \n 1.4 \u0414\u043e\u0431\u0430\u0432\u044c\u0442\u0435 \u0432 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e PATH \u043f\u0443\u0442\u044c C:\\mingw32\\bin;\n-\u041f\u043e\u0434\u0440\u043e\u0431\u043d\u043e\u0435 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043a\u0430\u043a \u044d\u0442\u043e \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u043d\u0430 Windows 8, Windows 7, Windows XP \u0438 Windows Vista\n-https://www.java.com/ru/download/help/path.xml\n+\u041f\u043e\u0434\u0440\u043e\u0431\u043d\u043e\u0435 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043a\u0430\u043a \u044d\u0442\u043e \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0432 Windows: https://www.java.com/ru/download/help/path.xml\n (\u0442\u043e\u043b\u044c\u043a\u043e \u043d\u0435 \u043d\u0443\u0436\u043d\u043e \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0442\u044c \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0439 \u043f\u0443\u043d\u043a\u0442 \u0438\u0437 \u044d\u0442\u043e\u0439 \u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438 \"\u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 \u0437\u0430\u043d\u043e\u0432\u043e \u043e\u043a\u043d\u043e \u043a\u043e\u043c\u0430\u043d\u0434\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438 \u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u0435 \u043a\u043e\u0434 java.\" )\n \n \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0447\u0442\u043e \u0432\u044b \u0432\u0441\u0451 \u0441\u0434\u0435\u043b\u0430\u043b\u0438 \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e:\n@@ -143,91 +142,46 @@ mingw32-make\n \u0411\u0443\u0434\u0435\u043c \u0445\u0440\u0430\u043d\u0438\u0442\u044c \u0438\u0441\u0445\u043e\u0434\u043d\u0438\u043a\u0438 \u0432 \u043f\u0430\u043f\u043a\u0435 C:\\MyProjects\n \n 3.1 \u0421\u043a\u0430\u0447\u0438\u0432\u0430\u0435\u043c \u0438\u0441\u0445\u043e\u0434\u043d\u0438\u043a\u0438\n--\u0417\u0430\u0439\u0434\u0438\u0442\u0435 \u043d\u0430 \u0441\u0430\u0439\u0442 https://github.com/novacoin-project/novacoin \n+-\u0417\u0430\u0439\u0434\u0438\u0442\u0435 \u043d\u0430 \u0441\u0430\u0439\u0442 https://github.com/42-coin/42 \n -\u041d\u0430\u0436\u043c\u0438\u0442\u0435 Download ZIP\n--\u0420\u0430\u0441\u043f\u0430\u043a\u0443\u0439\u0442\u0435 novacoin-master.zip \u0432 C:\\MyProjects\n+-\u0420\u0430\u0441\u043f\u0430\u043a\u0443\u0439\u0442\u0435 42-master.zip \u0432 C:\\MyProjects\n \n-3.2 \u0421\u043e\u0431\u0438\u0440\u0430\u0435\u043c novacoind \n--\u041f\u0435\u0440\u0435\u0439\u0434\u0438\u0442\u0435 \u0432 \u043f\u0430\u043f\u043a\u0443 C:\\MyProjects\\novacoin-master\\src\n+3.2 \u0421\u043e\u0431\u0438\u0440\u0430\u0435\u043c 42d \n+-\u041f\u0435\u0440\u0435\u0439\u0434\u0438\u0442\u0435 \u0432 \u043f\u0430\u043f\u043a\u0443 C:\\MyProjects\\42-master\\src\n -\u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 \u0444\u0430\u0439\u043b makefile.mingw \u0432 \u0442\u0435\u043a\u0441\u0442\u043e\u0432\u043e\u043c \u0440\u0435\u0434\u0430\u043a\u0442\u043e\u0440\u0435.(\u041f\u0440\u0438 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0438 \u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043b\u0441\u044f WordPad)\n -\u0414\u043e\u0431\u0430\u0432\u044c\u0442\u0435  \u0441\u0442\u0440\u043e\u0447\u043a\u0443 USE_ASM:=1\n--\u041f\u043e\u043c\u0435\u043d\u044f\u0439\u0442\u0435 \u0442\u0435\u043a\u0443\u0449\u0438\u0435 INCLUDEPATHS, LIBPATHS, LIBS \u043d\u0430:\n-\n-BOOST_SUFFIX?=-mgw49-mt-s-1_57\n-\n-INCLUDEPATHS= \\\n- -I\"$(CURDIR)\" \\\n- -I\"/c/deps/boost_1_57_0\" \\\n- -I\"/c/deps\" \\\n- -I\"/c/deps/db-6.0.20/build_unix\" \\\n- -I\"/c/deps/openssl-1.0.2/include\"\n- \n-LIBPATHS= \\\n- -L\"$(CURDIR)/leveldb\" \\\n- -L\"/c/deps/boost_1_57_0/stage/lib\" \\\n- -L\"/c/deps/db-6.0.20/build_unix\" \\\n- -L\"/c/deps/openssl-1.0.2\"\n-\n-LIBS= \\\n-  -l leveldb \\\n-  -l memenv \\\n-  -l boost_system$(BOOST_SUFFIX) \\\n-  -l boost_filesystem$(BOOST_SUFFIX) \\\n-  -l boost_program_options$(BOOST_SUFFIX) \\\n-  -l boost_thread$(BOOST_SUFFIX) \\\n-  -l boost_chrono$(BOOST_SUFFIX) \\\n-  -l db_cxx \\\n-  -l ssl \\\n-  -l crypto\n-\n--\u041f\u043e\u043c\u0435\u043d\u044f\u0439\u0442\u0435 LDFLAGS=-Wl,--dynamicbase -Wl,--nxcompat \u043d\u0430 \n-LDFLAGS=-Wl,--dynamicbase -Wl,--nxcompat -Wl,--large-address-aware -static\n-\n -\u0415\u0441\u043b\u0438 \u0432\u044b \u0445\u043e\u0442\u0438\u0442\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c LevelDB \u043a\u0430\u043a \u0431\u0430\u0437\u0443 \u0431\u043b\u043e\u043a\u043e\u0432 \u0442\u043e \u0438\u0437\u043c\u0435\u043d\u0438\u0442\u0435:\n USE_LEVELDB:=0 \n \u043d\u0430\n USE_LEVELDB:=1\n (\u0432\u044b\u0448\u0435 USE_IPV6:=1)\n-\u0422\u0430\u043a \u0436\u0435 \u0438\u0437\u043c\u0435\u043d\u0438\u0442\u0435 \n-cd leveldb; make; cd ..\n-\u043d\u0430 \n-cd leveldb; TARGET_OS=NATIVE_WINDOWS make libleveldb.a libmemenv.a; cd ..\n-\n-\u0415\u0449\u0451 \u0438\u0437\u043c\u0435\u043d\u0438\u0442\u0435\n-obj/txdb-leveldb.o: leveldb/libleveldb.lib\n-\u043d\u0430\n-obj/txdb-leveldb.o: leveldb/libleveldb.a\n-\n-\n-\n-\u0415\u0441\u043b\u0438 \u0432\u044b \u0445\u043e\u0442\u0438\u0442\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c BerkeleyDB \u043a\u0430\u043a \u0431\u0430\u0437\u0443 \u0431\u043b\u043e\u043a\u043e\u0432, \u0442\u043e \u043f\u0440\u043e\u0441\u0442\u043e \u0443\u0434\u0430\u043b\u0438\u0442\u0435 \u0441\u0442\u0440\u043e\u0447\u043a\u0443 USE_LEVELDB:=1\n \n -\u0421\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u0435 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u043d\u044b\u0439 \u0444\u0430\u0439\u043b makefile.mingw\n \n -\u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 MinGW shell (C:\\MinGW\\msys\\1.0\\msys.bat) \u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u0435 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u043a\u043e\u0434:\n \n-cd /c/MyProjects/novacoin-master/src\n+cd /c/MyProjects/42-master/src\n make -f makefile.mingw\n-strip novacoind.exe\n+strip 42d.exe\n \n \u0415\u0441\u043b\u0438 \u0443 \u0432\u0430\u0441 \u0432\u043e\u0437\u043d\u0438\u043a\u0430\u0435\u0442 \u043e\u0448\u0438\u0431\u043a\u0430 \"make: cc: Command not found\", \u0442\u043e \u043f\u043e\u043c\u0435\u043d\u044f\u0439\u0442\u0435 \u0432 \u0444\u0430\u0439\u043b\u0435 makefile.mingw\n \n  $(CC) -c $(xCXXFLAGS) -MMD -o $@ $<\n \u043d\u0430\n  gcc -c $(xCXXFLAGS) -MMD -o $@ $<\n \n-\u0415\u0441\u043b\u0438 \u0432\u0441\u0451 \u0441\u0434\u0435\u043b\u0430\u043d\u043e \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e, \u0442\u043e \u0444\u0430\u0439\u043b novacoind.exe \u0431\u0443\u0434\u0435\u0442 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u0432 \u043f\u0430\u043f\u043a\u0435 C:\\MyProjects\\novacoin-master\\src \n+\u0415\u0441\u043b\u0438 \u0432\u0441\u0451 \u0441\u0434\u0435\u043b\u0430\u043d\u043e \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e, \u0442\u043e \u0444\u0430\u0439\u043b 42d.exe \u0431\u0443\u0434\u0435\u0442 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u0432 \u043f\u0430\u043f\u043a\u0435 C:\\MyProjects\\42-master\\src \n \n \n-3.3 \u0421\u043e\u0431\u0438\u0440\u0430\u0435\u043c Novacoin QT\n+3.3 \u0421\u043e\u0431\u0438\u0440\u0430\u0435\u043c 42 QT\n \n-\u0412\u043d\u0438\u043c\u0430\u043d\u0438\u0435: \u0415\u0441\u043b\u0438 \u0432\u044b \u0445\u043e\u0442\u0438\u0442\u0435 \u0441\u043e\u0431\u0438\u0440\u0430\u0442\u044c Novacoin Qt \u0441 LevelDB, \u043d\u043e \u043f\u0440\u043e\u043f\u0443\u0441\u0442\u0438\u043b\u0438 \u0448\u0430\u0433 \u0441\u043e \u0441\u0431\u043e\u0440\u043a\u043e\u0439 novacoind.exe, \u0442\u043e \n+\u0412\u043d\u0438\u043c\u0430\u043d\u0438\u0435: \u0415\u0441\u043b\u0438 \u0432\u044b \u0445\u043e\u0442\u0438\u0442\u0435 \u0441\u043e\u0431\u0438\u0440\u0430\u0442\u044c 42 Qt \u0441 LevelDB, \u043d\u043e \u043f\u0440\u043e\u043f\u0443\u0441\u0442\u0438\u043b\u0438 \u0448\u0430\u0433 \u0441\u043e \u0441\u0431\u043e\u0440\u043a\u043e\u0439 42d.exe, \u0442\u043e \n -\u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 MinGW shell (C:\\MinGW\\msys\\1.0\\msys.bat) \u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u0435 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u043a\u043e\u0434:\n \n-cd /c/myprojects/novacoin-master/src/leveldb\n+cd /c/myprojects/42-master/src/leveldb\n TARGET_OS=NATIVE_WINDOWS make libleveldb.a libmemenv.a\n \n--\u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 \u0444\u0430\u0439\u043b C:\\MyProjects\\novacoin-master\\novacoin-qt.pro \u0432 \u0442\u0435\u043a\u0441\u0442\u043e\u0432\u043e\u043c \u0440\u0435\u0434\u0430\u043a\u0442\u043e\u0440\u0435(\u043f\u0440\u0438 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0438 \u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043b\u0441\u044f WordPad)\n+-\u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 \u0444\u0430\u0439\u043b C:\\MyProjects\\42-master\\42-qt.pro \u0432 \u0442\u0435\u043a\u0441\u0442\u043e\u0432\u043e\u043c \u0440\u0435\u0434\u0430\u043a\u0442\u043e\u0440\u0435(\u043f\u0440\u0438 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0438 \u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043b\u0441\u044f WordPad)\n -\u041d\u0438\u0436\u0435 \n # Dependency library locations can be customized with:\n #    BOOST_INCLUDE_PATH, BOOST_LIB_PATH, BDB_INCLUDE_PATH,\n@@ -265,52 +219,52 @@ windows:LIBS += -lboost_chrono$$BOOST_LIB_SUFFIX -Wl,-Bstatic -lpthread -Wl,-Bdy\n \u043d\u0430\n windows:LIBS += -lboost_chrono$$BOOST_LIB_SUFFIX\n \n--\u0421\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u0435 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u043d\u044b\u0439 \u0444\u0430\u0439\u043b novacoin-qt.pro\n+-\u0421\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u0435 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u043d\u044b\u0439 \u0444\u0430\u0439\u043b 42-qt.pro\n -\u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u043d\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443 Windows \u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u0435 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u043a\u043e\u0434:\n \n Qt5 + \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u043e\u043d\u043d\u044b\u0439 \u0438\u043d\u0434\u0435\u043a\u0441 BDB \n \n set PATH=%PATH%;C:\\Qt\\5.4.0\\bin\n-cd C:\\MyProjects\\novacoin-master\n-qmake \"USE_IPV6=1\" \"USE_ASM=1\" novacoin-qt.pro\n+cd C:\\MyProjects\\42-master\n+qmake \"USE_IPV6=1\" \"USE_ASM=1\" 42-qt.pro\n mingw32-make -f Makefile.Release\n \n \n Qt5 + \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u043e\u043d\u043d\u044b\u0439 \u0438\u043d\u0434\u0435\u043a\u0441 LevelDB\n \n set PATH=%PATH%;C:\\Qt\\5.4.0\\bin\n-cd C:\\MyProjects\\novacoin-master\n-qmake \"USE_IPV6=1\" \"USE_LEVELDB=1\" \"USE_ASM=1\" novacoin-qt.pro\n+cd C:\\MyProjects\\42-master\n+qmake \"USE_IPV6=1\" \"USE_LEVELDB=1\" \"USE_ASM=1\" 42-qt.pro\n mingw32-make -f Makefile.Release\n \n Qt4 + \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u043e\u043d\u043d\u044b\u0439 \u0438\u043d\u0434\u0435\u043a\u0441 BDB\n \n set PATH=%PATH%;C:\\Qt\\4.8.6\\bin\n-cd C:\\MyProjects\\novacoin-master\n-qmake \"USE_IPV6=1\" \"USE_ASM=1\" novacoin-qt.pro\n+cd C:\\MyProjects\\42-master\n+qmake \"USE_IPV6=1\" \"USE_ASM=1\" 42-qt.pro\n mingw32-make -f Makefile.Release\n \n Qt4 + \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u043e\u043d\u043d\u044b\u0439 \u0438\u043d\u0434\u0435\u043a\u0441 LevelDB\n \n set PATH=%PATH%;C:\\Qt\\4.8.6\\bin\n-cd C:\\MyProjects\\novacoin-master\n-qmake \"USE_IPV6=1\" \"USE_LEVELDB=1\" \"USE_ASM=1\" novacoin-qt.pro\n+cd C:\\MyProjects\\42-master\n+qmake \"USE_IPV6=1\" \"USE_LEVELDB=1\" \"USE_ASM=1\" 42-qt.pro\n mingw32-make -f Makefile.Release\n \n \n \n-\u0415\u0441\u043b\u0438 \u0432\u0441\u0451 \u0441\u0434\u0435\u043b\u0430\u043d\u043e \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e, \u0442\u043e \u0444\u0430\u0439\u043b novacoin-qt.exe \u0431\u0443\u0434\u0435\u0442 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u0432 \u043f\u0430\u043f\u043a\u0435 C:\\MyProjects\\novacoin-master\\release\n+\u0415\u0441\u043b\u0438 \u0432\u0441\u0451 \u0441\u0434\u0435\u043b\u0430\u043d\u043e \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e, \u0442\u043e \u0444\u0430\u0439\u043b 42-qt.exe \u0431\u0443\u0434\u0435\u0442 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u0432 \u043f\u0430\u043f\u043a\u0435 C:\\MyProjects\\42-master\\release\n \n \u0415\u0441\u043b\u0438 \u0432\u044b \u0445\u043e\u0442\u0438\u0442\u0435 \u0443\u043c\u0435\u043d\u044c\u0448\u0438\u0442\u044c \u0440\u0430\u0437\u043c\u0435\u0440 \u0431\u0438\u043d\u0430\u0440\u043d\u044b\u0445 \u0444\u0430\u0439\u043b\u043e\u0432, \u0442\u043e\n 1) \u041f\u0435\u0440\u0435\u0439\u0434\u0438\u0442\u0435 \u043d\u0430 \u0441\u0430\u0439\u0442 http://upx.sourceforge.net/#downloadupx\n 2) \u0421\u043a\u0430\u0447\u0430\u0439\u0442\u0435 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0443 \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0432\u0438\u0438 \u0441 \u0432\u0430\u0448\u0435\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u043e\u0439\n-3) \u0420\u0430\u0441\u043f\u0430\u043a\u0443\u0439\u0442\u0435 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0443 \u0432 \u043f\u0430\u043f\u043a\u0443 \u0441 \u0431\u0438\u043d\u0430\u0440\u043d\u044b\u043c\u0438 Novacoin \u0444\u0430\u0439\u043b\u0430\u043c\u0438.\n+3) \u0420\u0430\u0441\u043f\u0430\u043a\u0443\u0439\u0442\u0435 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0443 \u0432 \u043f\u0430\u043f\u043a\u0443 \u0441 \u0431\u0438\u043d\u0430\u0440\u043d\u044b\u043c\u0438 42 \u0444\u0430\u0439\u043b\u0430\u043c\u0438.\n 4) \u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u0438\n-upx -9 novacoind.exe\n+upx -9 42d.exe\n \u0437\u0430\u0442\u0435\u043c\n-upx -9 novacoin-qt.exe\n+upx -9 42-qt.exe\n \n-\u0418 \u0432\u0430\u0448\u0438 novacoind \u0438 novacoin-qt \u0441\u0442\u0430\u043d\u0443\u0442 \u043c\u0435\u043d\u044c\u0448\u0435 ~ \u0432 3 \u0440\u0430\u0437\u0430.\n+\u0418 \u0432\u0430\u0448\u0438 42d \u0438 42-qt \u0441\u0442\u0430\u043d\u0443\u0442 \u043c\u0435\u043d\u044c\u0448\u0435 ~ \u0432 3 \u0440\u0430\u0437\u0430.\n \n \n \n@@ -414,47 +368,47 @@ mingw32-make\n \n 3.1 \u0422\u0430\u043a \u0436\u0435 \u043a\u0430\u043a 32 bit\n \n-3.2 \u0421\u043e\u0431\u0438\u0440\u0430\u0435\u043c novacoind \n+3.2 \u0421\u043e\u0431\u0438\u0440\u0430\u0435\u043c 42d \n -\u0418\u0437\u043c\u0435\u043d\u0438\u0442\u0435 makefile.mingw \u0442\u0430\u043a \u0436\u0435 \u043a\u0430\u043a \u0432 32 bit\n -\u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 \u0444\u0430\u0439\u043b makefile.mingw \u0432 \u0442\u0435\u043a\u0441\u0442\u043e\u0432\u043e\u043c \u0440\u0435\u0434\u0430\u043a\u0442\u043e\u0440\u0435 \u0438 \u0441\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u0435 \u0435\u0433\u043e \u043a\u0430\u043a makefile.ming64\n -\u0418\u0437\u043c\u0435\u043d\u0438\u0442\u0435 \u0432 INCLUDEPATHS \u0438 LIBPATHS /c/deps/ \u043d\u0430 /c/deps/x64/\n -\u0418\u0437\u043c\u0435\u043d\u0438\u0442\u0435 \n LDFLAGS=-Wl,--dynamicbase -Wl,--nxcompat -Wl,--large-address-aware -static \n \u043d\u0430 \n LDFLAGS=-Wl,--dynamicbase -Wl,--nxcompat -Wl,-static, -static-libgcc\n--\u0423\u0434\u0430\u043b\u0438\u0442\u0435 (\u0435\u0441\u043b\u0438 \u043e\u043d\u0438 \u0435\u0441\u0442\u044c)obj(.o) \u0444\u0430\u0439\u043b\u044b \u0438\u0437 C:\\MyProjects\\novacoin-master\\src\\obj , \u0435\u0441\u043b\u0438 \u043e\u0441\u0442\u0430\u043b\u0438\u0441\u044c \u043f\u043e\u0441\u043b\u0435 32 bit\n--\u0423\u0434\u0430\u043b\u0438\u0442\u0435 (\u0435\u0441\u043b\u0438 \u043e\u043d\u0438 \u0435\u0441\u0442\u044c)libleveldb.a \u0438 libmemenv.a \u0432 \u043f\u0430\u043f\u043a\u0435 C:\\MyProjects\\novacoin-master\\src\\leveldb\n+-\u0423\u0434\u0430\u043b\u0438\u0442\u0435 (\u0435\u0441\u043b\u0438 \u043e\u043d\u0438 \u0435\u0441\u0442\u044c)obj(.o) \u0444\u0430\u0439\u043b\u044b \u0438\u0437 C:\\MyProjects\\42-master\\src\\obj , \u0435\u0441\u043b\u0438 \u043e\u0441\u0442\u0430\u043b\u0438\u0441\u044c \u043f\u043e\u0441\u043b\u0435 32 bit\n+-\u0423\u0434\u0430\u043b\u0438\u0442\u0435 (\u0435\u0441\u043b\u0438 \u043e\u043d\u0438 \u0435\u0441\u0442\u044c)libleveldb.a \u0438 libmemenv.a \u0432 \u043f\u0430\u043f\u043a\u0435 C:\\MyProjects\\42-master\\src\\leveldb\n -\u0423\u0434\u0430\u043b\u0438\u0442\u0435 (\u0435\u0441\u043b\u0438 \u043e\u043d\u0438 \u0435\u0441\u0442\u044c)obj(.o) \u0444\u0430\u0439\u043b\u044b \u0438\u0437 \n-C:\\MyProjects\\novacoin-master\\src\\leveldb\\db \n-C:\\MyProjects\\novacoin-master\\src\\leveldb\\helpers\\memenv\n-C:\\MyProjects\\novacoin-master\\src\\leveldb\\port\n-C:\\MyProjects\\novacoin-master\\src\\leveldb\\table\n-C:\\MyProjects\\novacoin-master\\src\\leveldb\\util\n+C:\\MyProjects\\42-master\\src\\leveldb\\db \n+C:\\MyProjects\\42-master\\src\\leveldb\\helpers\\memenv\n+C:\\MyProjects\\42-master\\src\\leveldb\\port\n+C:\\MyProjects\\42-master\\src\\leveldb\\table\n+C:\\MyProjects\\42-master\\src\\leveldb\\util\n -\u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 MinGW shell (C:\\MinGW\\msys\\1.0\\msys.bat) \u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u0435 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u043a\u043e\u0434:\n \n-cd /c/MyProjects/novacoin-master/src\n+cd /c/MyProjects/42-master/src\n make -f makefile.mingw64\n-strip novacoind.exe\n+strip 42d.exe\n \n-\u0415\u0441\u043b\u0438 \u0432\u0441\u0451 \u0441\u0434\u0435\u043b\u0430\u043d\u043e \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e, \u0442\u043e \u0444\u0430\u0439\u043b novacoind.exe \u0431\u0443\u0434\u0435\u0442 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u0432 \u043f\u0430\u043f\u043a\u0435 C:\\MyProjects\\novacoin-master\\src \n+\u0415\u0441\u043b\u0438 \u0432\u0441\u0451 \u0441\u0434\u0435\u043b\u0430\u043d\u043e \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e, \u0442\u043e \u0444\u0430\u0439\u043b 42d.exe \u0431\u0443\u0434\u0435\u0442 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u0432 \u043f\u0430\u043f\u043a\u0435 C:\\MyProjects\\42-master\\src \n \n \n-3.3 \u0421\u043e\u0431\u0438\u0440\u0430\u0435\u043c Novacoin QT\n-\u0412\u043d\u0438\u043c\u0430\u043d\u0438\u0435: \u0415\u0441\u043b\u0438 \u0432\u044b \u0445\u043e\u0442\u0438\u0442\u0435 \u0441\u043e\u0431\u0438\u0440\u0430\u0442\u044c Novacoin Qt \u0441 LevelDB, \u043d\u043e \u043f\u0440\u043e\u043f\u0443\u0441\u0442\u0438\u043b\u0438 \u0448\u0430\u0433 \u0441\u043e \u0441\u0431\u043e\u0440\u043a\u043e\u0439 novacoind.exe, \u0442\u043e \n--\u0423\u0434\u0430\u043b\u0438\u0442\u0435 (\u0435\u0441\u043b\u0438 \u043e\u043d\u0438 \u0435\u0441\u0442\u044c)libleveldb.a \u0438 libmemenv.a \u0432 \u043f\u0430\u043f\u043a\u0435 C:\\MyProjects\\novacoin-master\\src\\leveldb\n+3.3 \u0421\u043e\u0431\u0438\u0440\u0430\u0435\u043c 42 QT\n+\u0412\u043d\u0438\u043c\u0430\u043d\u0438\u0435: \u0415\u0441\u043b\u0438 \u0432\u044b \u0445\u043e\u0442\u0438\u0442\u0435 \u0441\u043e\u0431\u0438\u0440\u0430\u0442\u044c 42 Qt \u0441 LevelDB, \u043d\u043e \u043f\u0440\u043e\u043f\u0443\u0441\u0442\u0438\u043b\u0438 \u0448\u0430\u0433 \u0441\u043e \u0441\u0431\u043e\u0440\u043a\u043e\u0439 42d.exe, \u0442\u043e \n+-\u0423\u0434\u0430\u043b\u0438\u0442\u0435 (\u0435\u0441\u043b\u0438 \u043e\u043d\u0438 \u0435\u0441\u0442\u044c)libleveldb.a \u0438 libmemenv.a \u0432 \u043f\u0430\u043f\u043a\u0435 C:\\MyProjects\\42-master\\src\\leveldb\n -\u0423\u0434\u0430\u043b\u0438\u0442\u0435 (\u0435\u0441\u043b\u0438 \u043e\u043d\u0438 \u0435\u0441\u0442\u044c)obj(.o) \u0444\u0430\u0439\u043b\u044b \u0438\u0437 \n-C:\\MyProjects\\novacoin-master\\src\\leveldb\\db \n-C:\\MyProjects\\novacoin-master\\src\\leveldb\\helpers\\memenv\n-C:\\MyProjects\\novacoin-master\\src\\leveldb\\port\n-C:\\MyProjects\\novacoin-master\\src\\leveldb\\table\n-C:\\MyProjects\\novacoin-master\\src\\leveldb\\util\n+C:\\MyProjects\\42-master\\src\\leveldb\\db \n+C:\\MyProjects\\42-master\\src\\leveldb\\helpers\\memenv\n+C:\\MyProjects\\42-master\\src\\leveldb\\port\n+C:\\MyProjects\\42-master\\src\\leveldb\\table\n+C:\\MyProjects\\42-master\\src\\leveldb\\util\n -\u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 MinGW shell (C:\\MinGW\\msys\\1.0\\msys.bat) \u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u0435 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u043a\u043e\u0434:\n \n-cd /c/myprojects/novacoin-master/src/leveldb\n+cd /c/myprojects/42-master/src/leveldb\n TARGET_OS=NATIVE_WINDOWS make libleveldb.a libmemenv.a\n \n--\u0418\u0437\u043c\u0435\u043d\u0438\u0442\u0435 \u0444\u0430\u0439\u043b novacoin-qt.pro \u0442\u0430\u043a \u0436\u0435 \u043a\u0430\u043a \u0432 32 bit\n--\u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 \u0444\u0430\u0439\u043b novacoin-qt.pro \u0432 \u0442\u0435\u043a\u0441\u0442\u043e\u0432\u043e\u043c \u0440\u0435\u0434\u0430\u043a\u0442\u043e\u0440\u0435 \u0438 \u0441\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u0435 \u0435\u0433\u043e \u043a\u0430\u043a novacoin-qt64.pro\n+-\u0418\u0437\u043c\u0435\u043d\u0438\u0442\u0435 \u0444\u0430\u0439\u043b 42-qt.pro \u0442\u0430\u043a \u0436\u0435 \u043a\u0430\u043a \u0432 32 bit\n+-\u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 \u0444\u0430\u0439\u043b 42-qt.pro \u0432 \u0442\u0435\u043a\u0441\u0442\u043e\u0432\u043e\u043c \u0440\u0435\u0434\u0430\u043a\u0442\u043e\u0440\u0435 \u0438 \u0441\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u0435 \u0435\u0433\u043e \u043a\u0430\u043a 42-qt64.pro\n -\u0417\u0430\u043c\u0435\u043d\u0438\u0442\u0435 \u0432 INCLUDE \u0438 LIB \u043f\u0443\u0442\u044f\u0445 \u0442\u0435\u043a\u0441\u0442 C:/deps \u043d\u0430 \u0442\u0435\u043a\u0441\u0442 C:/deps/x64 (\u0442\u043e \u0435\u0441\u0442\u044c \u0432\u043c\u0435\u0441\u0442\u043e C:/deps/boost_1_57_0 \u043d\u0443\u0436\u043d\u043e C:/deps/x64/boost_1_57_0 \u0438 \u0442.\u0434.)\n -\u0417\u0430\u043c\u0435\u043d\u0438\u0442\u0435 \n win32:QMAKE_LFLAGS *= -Wl,--large-address-aware -static \n@@ -466,41 +420,41 @@ win32:QMAKE_LFLAGS *= -Wl,-static\n Qt5 + \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u043e\u043d\u043d\u044b\u0439 \u0438\u043d\u0434\u0435\u043a\u0441 BDB \n \n set PATH=%PATH%;C:\\Qt\\5.4.0-x64\\bin\n-cd C:\\MyProjects\\novacoin-master\n-qmake \"USE_IPV6=1\" \"USE_ASM=1\" novacoin-qt64.pro\n+cd C:\\MyProjects\\42-master\n+qmake \"USE_IPV6=1\" \"USE_ASM=1\" 42-qt64.pro\n mingw32-make -f Makefile.Release\n \n \n Qt5 + \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u043e\u043d\u043d\u044b\u0439 \u0438\u043d\u0434\u0435\u043a\u0441 LevelDB\n \n set PATH=%PATH%;C:\\Qt\\5.4.0-x64\\bin\n-cd C:\\MyProjects\\novacoin-master\n-qmake \"USE_IPV6=1\" \"USE_LEVELDB=1\" \"USE_ASM=1\" novacoin-qt64.pro\n+cd C:\\MyProjects\\42-master\n+qmake \"USE_IPV6=1\" \"USE_LEVELDB=1\" \"USE_ASM=1\" 42-qt64.pro\n mingw32-make -f Makefile.Release\n \n Qt4 + \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u043e\u043d\u043d\u044b\u0439 \u0438\u043d\u0434\u0435\u043a\u0441 BDB\n \n set PATH=%PATH%;C:\\Qt\\4.8.6-x64\\bin\n-cd C:\\MyProjects\\novacoin-master\n-qmake \"USE_IPV6=1\" \"USE_ASM=1\" novacoin-qt64.pro\n+cd C:\\MyProjects\\42-master\n+qmake \"USE_IPV6=1\" \"USE_ASM=1\" 42-qt64.pro\n mingw32-make -f Makefile.Release\n \n Qt4 + \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u043e\u043d\u043d\u044b\u0439 \u0438\u043d\u0434\u0435\u043a\u0441 LevelDB\n \n set PATH=%PATH%;C:\\Qt\\4.8.6-x64\\bin\n-cd C:\\MyProjects\\novacoin-master\n-qmake \"USE_IPV6=1\" \"USE_LEVELDB=1\" \"USE_ASM=1\" novacoin-qt64.pro\n+cd C:\\MyProjects\\42-master\n+qmake \"USE_IPV6=1\" \"USE_LEVELDB=1\" \"USE_ASM=1\" 42-qt64.pro\n mingw32-make -f Makefile.Release\n \n-\u0415\u0441\u043b\u0438 \u0432\u0441\u0451 \u0441\u0434\u0435\u043b\u0430\u043d\u043e \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e, \u0442\u043e \u0444\u0430\u0439\u043b novacoin-qt.exe \u0431\u0443\u0434\u0435\u0442 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u0432 \u043f\u0430\u043f\u043a\u0435 C:\\MyProjects\\novacoin-master\\release\n+\u0415\u0441\u043b\u0438 \u0432\u0441\u0451 \u0441\u0434\u0435\u043b\u0430\u043d\u043e \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e, \u0442\u043e \u0444\u0430\u0439\u043b 42-qt.exe \u0431\u0443\u0434\u0435\u0442 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u0432 \u043f\u0430\u043f\u043a\u0435 C:\\MyProjects\\42-master\\release\n \n \u0415\u0441\u043b\u0438 \u0432\u044b \u0445\u043e\u0442\u0438\u0442\u0435 \u0443\u043c\u0435\u043d\u044c\u0448\u0438\u0442\u044c \u0440\u0430\u0437\u043c\u0435\u0440 \u0431\u0438\u043d\u0430\u0440\u043d\u044b\u0445 \u0444\u0430\u0439\u043b\u043e\u0432, \u0442\u043e\n 1) \u041f\u0435\u0440\u0435\u0439\u0434\u0438\u0442\u0435 \u043d\u0430 \u0441\u0430\u0439\u0442 http://upx.sourceforge.net/#downloadupx\n 2) \u0421\u043a\u0430\u0447\u0430\u0439\u0442\u0435 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0443 \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0432\u0438\u0438 \u0441 \u0432\u0430\u0448\u0435\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u043e\u0439\n-3) \u0420\u0430\u0441\u043f\u0430\u043a\u0443\u0439\u0442\u0435 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0443 \u0432 \u043f\u0430\u043f\u043a\u0443 \u0441 \u0431\u0438\u043d\u0430\u0440\u043d\u044b\u043c\u0438 Novacoin \u0444\u0430\u0439\u043b\u0430\u043c\u0438.\n+3) \u0420\u0430\u0441\u043f\u0430\u043a\u0443\u0439\u0442\u0435 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0443 \u0432 \u043f\u0430\u043f\u043a\u0443 \u0441 \u0431\u0438\u043d\u0430\u0440\u043d\u044b\u043c\u0438 42 \u0444\u0430\u0439\u043b\u0430\u043c\u0438.\n 4) \u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u0438\n-upx -9 novacoind.exe\n+upx -9 42d.exe\n \u0437\u0430\u0442\u0435\u043c\n-upx -9 novacoin-qt.exe\n+upx -9 42-qt.exe\n \n-\u0418 \u0432\u0430\u0448\u0438 novacoind \u0438 novacoin-qt \u0441\u0442\u0430\u043d\u0443\u0442 \u043c\u0435\u043d\u044c\u0448\u0435 ~ \u0432 3 \u0440\u0430\u0437\u0430.\n+\u0418 \u0432\u0430\u0448\u0438 42d \u0438 42-qt \u0441\u0442\u0430\u043d\u0443\u0442 \u043c\u0435\u043d\u044c\u0448\u0435 ~ \u0432 3 \u0440\u0430\u0437\u0430.",
        "previous_filename": "doc/building novacoind and novacoinqt under Windows with MinGW.txt"
      },
      {
        "sha": "0751d158b3ba87878aa20eb6e96a5dd3def123ce",
        "filename": "doc/crosscompiling_building Windows binary under Unix.txt",
        "status": "modified",
        "additions": 25,
        "deletions": 25,
        "changes": 50,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/doc/crosscompiling_building%20Windows%20binary%20under%20Unix.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/doc/crosscompiling_building%20Windows%20binary%20under%20Unix.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/crosscompiling_building%20Windows%20binary%20under%20Unix.txt?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -122,9 +122,9 @@ Using Qt version 5.5.1 in /home/<\u0432\u0430\u0448\u0435 \u0438\u043c\u044f>/mxe/usr/i686-w64-mingw32.stati\n -\u041f\u0435\u0440\u0435\u0439\u0434\u0438\u0442\u0435 \u0432 \u0434\u043e\u043c\u0430\u0448\u043d\u044e\u044e \u043f\u0430\u043f\u043a\u0443\n -\u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 \u0442\u0435\u0440\u043c\u0438\u043d\u0430\u043b\n \n- git clone https://github.com/novacoin-project/novacoin.git\n+ git clone https://github.com/42-coin/42.git\n \n-3.2 \u0421\u043e\u0431\u0438\u0440\u0430\u0435\u043c novacoind \n+3.2 \u0421\u043e\u0431\u0438\u0440\u0430\u0435\u043c 42d \n -\u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 \u0444\u0430\u0439\u043b makefile.mingw \u0432 \u0442\u0435\u043a\u0441\u0442\u043e\u0432\u043e\u043c \u0440\u0435\u0434\u0430\u043a\u0442\u043e\u0440\u0435.(\u041f\u0440\u0438 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0438 \u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043b\u0441\u044f Pluma 1.8.1)\n -\u0412\u0441\u0442\u0430\u0432\u044c\u0442\u0435 \n CC=$(CROSS)gcc\n@@ -171,7 +171,7 @@ USE_LEVELDB:=0\n \u043d\u0430\n USE_LEVELDB:=1\n (\u0432\u044b\u0448\u0435 USE_IPV6:=1)\n-\u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 \u0444\u0430\u0439\u043b /home/<\u0432\u0430\u0448\u0435 \u0438\u043c\u044f>/novacoin/src/leveldb/Makefile\n+\u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 \u0444\u0430\u0439\u043b /home/<\u0432\u0430\u0448\u0435 \u0438\u043c\u044f>/42/src/leveldb/Makefile\n \u0412\u0441\u0442\u0430\u0432\u044c\u0442\u0435 \u043d\u0438\u0436\u0435 \u0441\u0442\u0440\u043e\u0447\u043a\u0438 CXXFLAGS += -I. -I./include $(PLATFORM_CXXFLAGS) $(OPT) \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0441\u0442\u0440\u043e\u043a\u0438:\n \n CC=$(CROSS)gcc\n@@ -187,41 +187,41 @@ cd leveldb; TARGET_OS=NATIVE_WINDOWS make CROSS=i686-w64-mingw32.static- libleve\n \n \u0418\u0437\u043c\u0435\u043d\u0438\u0442\u0435\n clean:\n-\t-del /Q novacoind.exe\n+\t-del /Q 42d.exe\n \t-del /Q obj\\*\n \t-del /Q crypto\\scrypt\\asm\\obj\\*\n \n \u043d\u0430\n \n clean:\n-\t-rm novacoind.exe\n+\t-rm 42d.exe\n \t-rm obj/*\n \t-rm crypto/scrypt/asm/obj/*\n \n -\u0421\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u0435 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u043d\u044b\u0439 \u0444\u0430\u0439\u043b makefile.mingw\n \n -\u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 \u0442\u0435\u0440\u043c\u0438\u043d\u0430\u043b\n-cd /home/<\u0432\u0430\u0448\u0435 \u0438\u043c\u044f>/novacoin/src\n+cd /home/<\u0432\u0430\u0448\u0435 \u0438\u043c\u044f>/42/src\n export PATH=/home/<\u0432\u0430\u0448\u0435 \u0438\u043c\u044f>/mxe/usr/bin:$PATH\n make -j n CROSS=i686-w64-mingw32.static- -f makefile.mingw (\u0432\u043c\u0435\u0441\u0442\u043e n \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u044f\u0434\u0435\u0440 \u0432\u0430\u0448\u0435\u0433\u043e \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0440\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432\u044b \u0445\u043e\u0442\u0438\u0442\u0435 \u0432\u044b\u0434\u0435\u043b\u0438\u0442\u044c \u043f\u043e\u0434 \u0441\u0431\u043e\u0440\u043a\u0443)\n-strip novacoind.exe\n+strip 42d.exe\n \n \n \u0412\u043e \u0432\u0440\u0435\u043c\u044f \u043b\u0438\u043d\u043a\u043e\u0432\u043a\u0438 \u0431\u0443\u0434\u0443\u0442 \u0432\u044b\u0434\u0430\u0432\u0430\u0442\u044c\u0441\u044f \u043f\u043e\u0434\u043e\u0431\u043d\u044b\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f:\n libboost_thread_win32-mt.a(thread.o): duplicate section `.rdata$_ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEEE[__ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEEE]' has different size\n \u0418\u0433\u043d\u043e\u0440\u0438\u0440\u0443\u0439\u0442\u0435 \u0438\u0445. \u041d\u0430 \u0440\u0430\u0431\u043e\u0442\u043e\u0441\u043f\u043e\u0441\u043e\u0431\u043d\u043e\u0441\u0442\u044c \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b \u044d\u0442\u043e \u043d\u0438\u043a\u0430\u043a \u043d\u0435 \u0432\u043b\u0438\u044f\u0435\u0442\n \n \n-3.3 \u0421\u043e\u0431\u0438\u0440\u0430\u0435\u043c Novacoin QT\n+3.3 \u0421\u043e\u0431\u0438\u0440\u0430\u0435\u043c 42 QT\n \n-\u0412\u043d\u0438\u043c\u0430\u043d\u0438\u0435: \u0415\u0441\u043b\u0438 \u0432\u044b \u0445\u043e\u0442\u0438\u0442\u0435 \u0441\u043e\u0431\u0438\u0440\u0430\u0442\u044c Novacoin Qt \u0441 LevelDB, \u043d\u043e \u043f\u0440\u043e\u043f\u0443\u0441\u0442\u0438\u043b\u0438 \u0448\u0430\u0433 \u0441\u043e \u0441\u0431\u043e\u0440\u043a\u043e\u0439 novacoind.exe, \u0442\u043e \n+\u0412\u043d\u0438\u043c\u0430\u043d\u0438\u0435: \u0415\u0441\u043b\u0438 \u0432\u044b \u0445\u043e\u0442\u0438\u0442\u0435 \u0441\u043e\u0431\u0438\u0440\u0430\u0442\u044c 42 Qt \u0441 LevelDB, \u043d\u043e \u043f\u0440\u043e\u043f\u0443\u0441\u0442\u0438\u043b\u0438 \u0448\u0430\u0433 \u0441\u043e \u0441\u0431\u043e\u0440\u043a\u043e\u0439 42d.exe, \u0442\u043e \n -\u0418\u0437\u043c\u0435\u043d\u0438\u0442\u0435 Makefile \u0432 \u043f\u0430\u043f\u043a\u0435 leveldb \u0442\u0430\u043a\u0436\u0435 \u043a\u0430\u043a \u0432 \u043f\u0443\u043d\u043a\u0442\u0435 3.2\n -\u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 \u0442\u0435\u0440\u043c\u0438\u043d\u0430\u043b \u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u0435 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b:\n export PATH=/home/<\u0432\u0430\u0448\u0435 \u0438\u043c\u044f>/mxe/usr/bin:$PATH\n-cd /home/<\u0432\u0430\u0448\u0435 \u0438\u043c\u044f>/novacoin/src/leveldb\n+cd /home/<\u0432\u0430\u0448\u0435 \u0438\u043c\u044f>/42/src/leveldb\n TARGET_OS=NATIVE_WINDOWS make CROSS=i686-w64-mingw32.static- libleveldb.a libmemenv.a\n \n--\u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 \u0444\u0430\u0439\u043b /home/<\u0432\u0430\u0448\u0435 \u0438\u043c\u044f>/novacoin/novacoin-qt.pro \u0432 \u0442\u0435\u043a\u0441\u0442\u043e\u0432\u043e\u043c \u0440\u0435\u0434\u0430\u043a\u0442\u043e\u0440\u0435(\u043f\u0440\u0438 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0438 \u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043b\u0441\u044f Pluma 1.8.1)\n+-\u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 \u0444\u0430\u0439\u043b /home/<\u0432\u0430\u0448\u0435 \u0438\u043c\u044f>/42/42-qt.pro \u0432 \u0442\u0435\u043a\u0441\u0442\u043e\u0432\u043e\u043c \u0440\u0435\u0434\u0430\u043a\u0442\u043e\u0440\u0435(\u043f\u0440\u0438 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0438 \u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043b\u0441\u044f Pluma 1.8.1)\n -\u041d\u0438\u0436\u0435 \n # Dependency library locations can be customized with:\n #    BOOST_INCLUDE_PATH, BOOST_LIB_PATH, BDB_INCLUDE_PATH,\n@@ -256,50 +256,50 @@ win32:QMAKE_LRELEASE = $$[QT_INSTALL_BINS]\\\\lrelease.exe\n \u043d\u0430\n win32:QMAKE_LRELEASE = $$[QT_INSTALL_BINS]/lrelease\n \n--\u0421\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u0435 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u043d\u044b\u0439 \u0444\u0430\u0439\u043b novacoin-qt.pro\n+-\u0421\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u0435 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u043d\u044b\u0439 \u0444\u0430\u0439\u043b 42-qt.pro\n -\u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 \u0442\u0435\u0440\u043c\u0438\u043d\u0430\u043b \u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u0435 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b\n \n Qt4 + \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u043e\u043d\u043d\u044b\u0439 \u0438\u043d\u0434\u0435\u043a\u0441 LevelDB\n \n export PATH=/home/<\u0432\u0430\u0448\u0435 \u0438\u043c\u044f>/mxe/usr/bin:$PATH\n-cd /home/<\u0432\u0430\u0448\u0435 \u0438\u043c\u044f>/novacoin\n-i686-w64-mingw32.static-qmake-qt4 \"USE_IPV6=1\" \"USE_LEVELDB=1\" \"USE_ASM=1\" novacoin-qt.pro\n+cd /home/<\u0432\u0430\u0448\u0435 \u0438\u043c\u044f>/42\n+i686-w64-mingw32.static-qmake-qt4 \"USE_IPV6=1\" \"USE_LEVELDB=1\" \"USE_ASM=1\" 42-qt.pro\n make -j n -f Makefile.Release  (\u0432\u043c\u0435\u0441\u0442\u043e n \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u044f\u0434\u0435\u0440 \u0432\u0430\u0448\u0435\u0433\u043e \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0440\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432\u044b \u0445\u043e\u0442\u0438\u0442\u0435 \u0432\u044b\u0434\u0435\u043b\u0438\u0442\u044c \u043f\u043e\u0434 \u0441\u0431\u043e\u0440\u043a\u0443)\n \n Qt4 + \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u043e\u043d\u043d\u044b\u0439 \u0438\u043d\u0434\u0435\u043a\u0441 BDB\n \n export PATH=/home/<\u0432\u0430\u0448\u0435 \u0438\u043c\u044f>/mxe/usr/bin:$PATH\n-cd /home/<\u0432\u0430\u0448\u0435 \u0438\u043c\u044f>/novacoin\n-i686-w64-mingw32.static-qmake-qt4 \"USE_IPV6=1\" \"USE_ASM=1\" novacoin-qt.pro\n+cd /home/<\u0432\u0430\u0448\u0435 \u0438\u043c\u044f>/42\n+i686-w64-mingw32.static-qmake-qt4 \"USE_IPV6=1\" \"USE_ASM=1\" 42-qt.pro\n make -j n -f Makefile.Release  (\u0432\u043c\u0435\u0441\u0442\u043e n \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u044f\u0434\u0435\u0440 \u0432\u0430\u0448\u0435\u0433\u043e \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0440\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432\u044b \u0445\u043e\u0442\u0438\u0442\u0435 \u0432\u044b\u0434\u0435\u043b\u0438\u0442\u044c \u043f\u043e\u0434 \u0441\u0431\u043e\u0440\u043a\u0443)\n \n Qt5 + \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u043e\u043d\u043d\u044b\u0439 \u0438\u043d\u0434\u0435\u043a\u0441 LevelDB\n \n export PATH=/home/<\u0432\u0430\u0448\u0435 \u0438\u043c\u044f>/mxe/usr/bin:$PATH\n-cd /home/<\u0432\u0430\u0448\u0435 \u0438\u043c\u044f>/novacoin\n-i686-w64-mingw32.static-qmake-qt5 \"USE_IPV6=1\" \"USE_LEVELDB=1\" \"USE_ASM=1\" novacoin-qt.pro\n+cd /home/<\u0432\u0430\u0448\u0435 \u0438\u043c\u044f>/42\n+i686-w64-mingw32.static-qmake-qt5 \"USE_IPV6=1\" \"USE_LEVELDB=1\" \"USE_ASM=1\" 42-qt.pro\n make -j n -f Makefile.Release  (\u0432\u043c\u0435\u0441\u0442\u043e n \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u044f\u0434\u0435\u0440 \u0432\u0430\u0448\u0435\u0433\u043e \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0440\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432\u044b \u0445\u043e\u0442\u0438\u0442\u0435 \u0432\u044b\u0434\u0435\u043b\u0438\u0442\u044c \u043f\u043e\u0434 \u0441\u0431\u043e\u0440\u043a\u0443)\n \n Qt5 + \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u043e\u043d\u043d\u044b\u0439 \u0438\u043d\u0434\u0435\u043a\u0441 BDB\n \n export PATH=/home/<\u0432\u0430\u0448\u0435 \u0438\u043c\u044f>/mxe/usr/bin:$PATH\n-cd /home/<\u0432\u0430\u0448\u0435 \u0438\u043c\u044f>/novacoin\n-i686-w64-mingw32.static-qmake-qt5 \"USE_IPV6=1\" \"USE_ASM=1\" novacoin-qt.pro\n+cd /home/<\u0432\u0430\u0448\u0435 \u0438\u043c\u044f>/42\n+i686-w64-mingw32.static-qmake-qt5 \"USE_IPV6=1\" \"USE_ASM=1\" 42-qt.pro\n make -j n -f Makefile.Release  (\u0432\u043c\u0435\u0441\u0442\u043e n \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u044f\u0434\u0435\u0440 \u0432\u0430\u0448\u0435\u0433\u043e \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0440\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432\u044b \u0445\u043e\u0442\u0438\u0442\u0435 \u0432\u044b\u0434\u0435\u043b\u0438\u0442\u044c \u043f\u043e\u0434 \u0441\u0431\u043e\u0440\u043a\u0443)\n \n \n-\u0415\u0441\u043b\u0438 \u0432\u0441\u0451 \u0441\u0434\u0435\u043b\u0430\u043d\u043e \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e, \u0442\u043e \u0444\u0430\u0439\u043b novacoin-qt.exe \u0431\u0443\u0434\u0435\u0442 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u0432 \u043f\u0430\u043f\u043a\u0435 /home/<\u0432\u0430\u0448\u0435 \u0438\u043c\u044f>/novacoin/release\n+\u0415\u0441\u043b\u0438 \u0432\u0441\u0451 \u0441\u0434\u0435\u043b\u0430\u043d\u043e \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e, \u0442\u043e \u0444\u0430\u0439\u043b 42-qt.exe \u0431\u0443\u0434\u0435\u0442 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u0432 \u043f\u0430\u043f\u043a\u0435 /home/<\u0432\u0430\u0448\u0435 \u0438\u043c\u044f>/42/release\n \u0412\u043e \u0432\u0440\u0435\u043c\u044f \u043b\u0438\u043d\u043a\u043e\u0432\u043a\u0438 \u0431\u0443\u0434\u0443\u0442 \u0432\u044b\u0434\u0430\u0432\u0430\u0442\u044c\u0441\u044f \u043f\u043e\u0434\u043e\u0431\u043d\u044b\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f:\n libboost_thread_win32-mt.a(thread.o): duplicate section `.rdata$_ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEEE[__ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEEE]' has different size\n \u0418\u0433\u043d\u043e\u0440\u0438\u0440\u0443\u0439\u0442\u0435 \u0438\u0445. \u041d\u0430 \u0440\u0430\u0431\u043e\u0442\u043e\u0441\u043f\u043e\u0441\u043e\u0431\u043d\u043e\u0441\u0442\u044c \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b \u044d\u0442\u043e \u043d\u0438\u043a\u0430\u043a \u043d\u0435 \u0432\u043b\u0438\u044f\u0435\u0442 \n \n \u0415\u0441\u043b\u0438 \u0432\u044b \u0445\u043e\u0442\u0438\u0442\u0435 \u0443\u043c\u0435\u043d\u044c\u0448\u0438\u0442\u044c \u0440\u0430\u0437\u043c\u0435\u0440 \u0431\u0438\u043d\u0430\u0440\u043d\u044b\u0445 \u0444\u0430\u0439\u043b\u043e\u0432, \u0442\u043e\n 1) \u041f\u0435\u0440\u0435\u0439\u0434\u0438\u0442\u0435 \u043d\u0430 \u0441\u0430\u0439\u0442 http://upx.sourceforge.net/#downloadupx\n 2) \u0421\u043a\u0430\u0447\u0430\u0439\u0442\u0435 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0443 \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0432\u0438\u0438 \u0441 \u0432\u0430\u0448\u0435\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u043e\u0439\n-3) \u0420\u0430\u0441\u043f\u0430\u043a\u0443\u0439\u0442\u0435 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0443 \u0432 \u043f\u0430\u043f\u043a\u0443 \u0441 \u0431\u0438\u043d\u0430\u0440\u043d\u044b\u043c\u0438 Novacoin \u0444\u0430\u0439\u043b\u0430\u043c\u0438.\n+3) \u0420\u0430\u0441\u043f\u0430\u043a\u0443\u0439\u0442\u0435 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0443 \u0432 \u043f\u0430\u043f\u043a\u0443 \u0441 \u0431\u0438\u043d\u0430\u0440\u043d\u044b\u043c\u0438 42 \u0444\u0430\u0439\u043b\u0430\u043c\u0438.\n 4) \u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0432 \u0442\u0435\u0440\u043c\u0438\u043d\u0430\u043b\u0435\n-./upx -9 novacoind.exe\n+./upx -9 42d.exe\n \u0437\u0430\u0442\u0435\u043c\n-./upx -9 novacoin-qt.exe\n+./upx -9 42-qt.exe\n \n-\u0418 \u0432\u0430\u0448\u0438 novacoind \u0438 novacoin-qt \u0441\u0442\u0430\u043d\u0443\u0442 \u043c\u0435\u043d\u044c\u0448\u0435 ~ \u0432 3 \u0440\u0430\u0437\u0430.\n+\u0418 \u0432\u0430\u0448\u0438 42d \u0438 42-qt \u0441\u0442\u0430\u043d\u0443\u0442 \u043c\u0435\u043d\u044c\u0448\u0435 ~ \u0432 3 \u0440\u0430\u0437\u0430."
      },
      {
        "sha": "5f0fd394adb1af285d8968eab7f6dfe8b0958bbd",
        "filename": "doc/readme-qt.rst",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/doc/readme-qt.rst",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/doc/readme-qt.rst",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/readme-qt.rst?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -1,4 +1,4 @@\n-Novacoin-qt: Qt4 GUI for Novacoin\n+42-qt: Qt4 GUI for 42\n ===============================\n \n Build instructions\n@@ -35,9 +35,9 @@ then execute the following:\n     qmake\n     make\n \n-Alternatively, install Qt Creator and open the `novacoin-qt.pro` file.\n+Alternatively, install Qt Creator and open the `42-qt.pro` file.\n \n-An executable named `novacoin-qt` will be built.\n+An executable named `42-qt` will be built.\n \n \n Windows\n@@ -137,9 +137,9 @@ It can be downloaded from http://fukuchi.org/works/qrencode/index.html.en, or in\n Berkely DB version warning\n ==========================\n \n-A warning for people using the *static binary* version of Novacoin on a Linux/UNIX-ish system (tl;dr: **Berkely DB databases are not forward compatible**).\n+A warning for people using the *static binary* version of 42 on a Linux/UNIX-ish system (tl;dr: **Berkely DB databases are not forward compatible**).\n \n-The static binary version of Novacoin is linked against libdb5.3.\n+The static binary version of 42 is linked against libdb5.3.\n \n If the globally installed development package of Berkely DB installed on your system is 5.X, for example, any source you\n build yourself will be linked against that. The first time you run with a 5.X version the database will be upgraded,\n@@ -150,7 +150,7 @@ Ubuntu 11.10 warning\n ====================\n \n Ubuntu 11.10 has a package called 'qt-at-spi' installed by default.  At the time of writing, having that package\n-installed causes novacoin-qt to crash intermittently.  The issue has been reported as `launchpad bug 857790`_, but\n+installed causes 42-qt to crash intermittently.  The issue has been reported as `launchpad bug 857790`_, but\n isn't yet fixed.\n \n Until the bug is fixed, you can remove the qt-at-spi package to work around the problem, though this will presumably"
      },
      {
        "sha": "73cd70e135410b8e57a352f61b3a09002faa8f6b",
        "filename": "doc/tor.md",
        "status": "modified",
        "additions": 16,
        "deletions": 31,
        "changes": 47,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/doc/tor.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/doc/tor.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/tor.md?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -1,16 +1,16 @@\n-TOR SUPPORT IN NOVACOIN\n+TOR SUPPORT IN 42\n ======================\n \n-It is possible to run Novacoin as a Tor hidden service, and connect to such services.\n+It is possible to run 42 as a Tor hidden service, and connect to such services.\n \n The following directions assume you have a Tor proxy running on port 9050. Many distributions default to having a SOCKS proxy listening on port 9050, but others may not. In particular, the Tor Browser Bundle defaults to listening on a random port. See [Tor Project FAQ:TBBSocksPort](https://www.torproject.org/docs/faq.html.en#TBBSocksPort) for how to properly\n configure Tor.\n \n \n-1. Run novacoin behind a Tor proxy\n+1. Run 42 behind a Tor proxy\n ---------------------------------\n \n-The first step is running Novacoin behind a Tor proxy. This will already make all\n+The first step is running 42 behind a Tor proxy. This will already make all\n outgoing connections be anonymized, but more is possible.\n \n \t-proxy=ip:port  Set the proxy server. If SOCKS5 is selected (default), this proxy\n@@ -31,27 +31,27 @@ outgoing connections be anonymized, but more is possible.\n \n In a typical situation, this suffices to run behind a Tor proxy:\n \n-\t./novacoin -proxy=127.0.0.1:9050\n+\t./42 -proxy=127.0.0.1:9050\n \n \n-2. Run a novacoin hidden server\n+2. Run a 42 hidden server\n ------------------------------\n \n If you configure your Tor system accordingly, it is possible to make your node also\n reachable from the Tor network. Add these lines to your /etc/tor/torrc (or equivalent\n config file):\n \n-\tHiddenServiceDir /var/lib/tor/novacoin-service/\n-\tHiddenServicePort 7777 127.0.0.1:7777\n-\tHiddenServicePort 17777 127.0.0.1:17777\n+\tHiddenServiceDir /var/lib/tor/42-service/\n+\tHiddenServicePort 4242 127.0.0.1:4242\n+\tHiddenServicePort 42420 127.0.0.1:42420\n \n The directory can be different of course, but (both) port numbers should be equal to\n-your novacoind's P2P listen port (7777 by default, 17777 by default for testnet).\n+your 42d's P2P listen port (4242 by default, 42420 by default for testnet).\n \n-\t-externalip=X   You can tell novacoin about its publicly reachable address using\n+\t-externalip=X   You can tell 42 about its publicly reachable address using\n \t                this option, and this can be a .onion address. Given the above\n \t                configuration, you can find your onion address in\n-\t                /var/lib/tor/novacoin-service/hostname. Onion addresses are given\n+\t                /var/lib/tor/42-service/hostname. Onion addresses are given\n \t                preference for your node to advertize itself with, for connections\n \t                coming from unroutable addresses (such as 127.0.0.1, where the\n \t                Tor proxy typically runs).\n@@ -68,32 +68,17 @@ your novacoind's P2P listen port (7777 by default, 17777 by default for testnet)\n \n In a typical situation, where you're only reachable via Tor, this should suffice:\n \n-\t./novacoind -proxy=127.0.0.1:9050 -externalip=youraddress.onion -listen\n+\t./42d -proxy=127.0.0.1:9050 -externalip=youraddress.onion -listen\n \n (obviously, replace the Onion address with your own). If you don't care too much\n about hiding your node, and want to be reachable on IPv4 as well, additionally\n specify:\n \n-\t./novacoind ... -discover\n+\t./42d ... -discover\n \n-and open port 7777 on your firewall.\n+and open port 4242 on your firewall.\n \n If you only want to use Tor to reach onion addresses, but not use it as a proxy\n for normal IPv4/IPv6 communication, use:\n \n-\t./novacoin -onion=127.0.0.1:9050 -externalip=youraddress.onion -discover\n-\n-Known addresses of novacoin nodes\n-\n-\tseedp4knqnoei57u.onion\n-\tseedr3hhlepyi7fd.onion\n-\tseed3uuomkclbiz4.onion\n-\tseedeh7qck3ouff5.onion\n-\tseedt3sraf53ajiy.onion\n-\tseedg4qyccsg42oq.onion\n-\tnovaqrtoywpg7jly.onion\n-\tseed3d5wolqbgrcb.onion\n-\tseed24u5dwph3qw4.onion\n-\tmj26ulzbs2oskgym.onion\n-\teqon4usunavt76m7.onion\n-\t5rg3vq4jagckeckf.onion\n+\t./42 -onion=127.0.0.1:9050 -externalip=youraddress.onion -discover"
      },
      {
        "sha": "9d08f93fae7a15abc9709f5fd35ffd93ea52fb0b",
        "filename": "share/qt/make_windows_icon.sh",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/share/qt/make_windows_icon.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/share/qt/make_windows_icon.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/qt/make_windows_icon.sh?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -1,5 +1,5 @@\n #!/bin/bash\n # create multiresolution windows icon\n-ICON_DST=../../src/qt/res/icons/novacoin.ico\n+ICON_DST=../../src/qt/res/icons/42.ico\n \n-convert ../../src/qt/res/icons/novacoin-16.png ../../src/qt/res/icons/novacoin-32.png ../../src/qt/res/icons/novacoin-48.png ${ICON_DST}\n+convert ../../src/qt/res/icons/42-16.png ../../src/qt/res/icons/42-32.png ../../src/qt/res/icons/42-48.png ${ICON_DST}"
      },
      {
        "sha": "50dce4c1dbed38d27f93b081dae32c5ac5188905",
        "filename": "share/setup.nsi",
        "status": "modified",
        "additions": 23,
        "deletions": 24,
        "changes": 47,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/share/setup.nsi",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/share/setup.nsi",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/setup.nsi?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -1,16 +1,15 @@\n-Name NovaCoin\r\n+Name 42\r\n \r\n RequestExecutionLevel highest\r\n SetCompressor /SOLID lzma\r\n \r\n # General Symbol Definitions\r\n !define REGKEY \"SOFTWARE\\$(^Name)\"\r\n !define VERSION 0.3.0\r\n-!define COMPANY \"NovaCoin project\"\r\n-!define URL http://www.novacoin.ru/\r\n+!define COMPANY \"42-coin\"\r\n \r\n # MUI Symbol Definitions\r\n-!define MUI_ICON \"../share/pixmaps/novacoin.ico\"\r\n+!define MUI_ICON \"../share/pixmaps/42.ico\"\r\n !define MUI_WELCOMEFINISHPAGE_BITMAP \"../share/pixmaps/nsis-wizard.bmp\"\r\n !define MUI_HEADERIMAGE\r\n !define MUI_HEADERIMAGE_RIGHT\r\n@@ -19,8 +18,8 @@ SetCompressor /SOLID lzma\n !define MUI_STARTMENUPAGE_REGISTRY_ROOT HKLM\r\n !define MUI_STARTMENUPAGE_REGISTRY_KEY ${REGKEY}\r\n !define MUI_STARTMENUPAGE_REGISTRY_VALUENAME StartMenuGroup\r\n-!define MUI_STARTMENUPAGE_DEFAULTFOLDER NovaCoin\r\n-#!define MUI_FINISHPAGE_RUN $INSTDIR\\novacoin-qt.exe\r\n+!define MUI_STARTMENUPAGE_DEFAULTFOLDER 42\r\n+#!define MUI_FINISHPAGE_RUN $INSTDIR\\42-qt.exe\r\n !define MUI_UNICON \"${NSISDIR}\\Contrib\\Graphics\\Icons\\modern-uninstall.ico\"\r\n !define MUI_UNWELCOMEFINISHPAGE_BITMAP \"../share/pixmaps/nsis-wizard.bmp\"\r\n !define MUI_UNFINISHPAGE_NOAUTOCLOSE\r\n@@ -45,14 +44,14 @@ Var StartMenuGroup\n !insertmacro MUI_LANGUAGE English\r\n \r\n # Installer attributes\r\n-OutFile novacoin-0.3.0-win32-setup.exe\r\n-InstallDir $PROGRAMFILES\\NovaCoin\r\n+OutFile 42-0.3.0-win32-setup.exe\r\n+InstallDir $PROGRAMFILES\\42\r\n CRCCheck on\r\n XPStyle on\r\n BrandingText \" \"\r\n ShowInstDetails show\r\n VIProductVersion 0.3.0.0\r\n-VIAddVersionKey ProductName NovaCoin\r\n+VIAddVersionKey ProductName 42\r\n VIAddVersionKey ProductVersion \"${VERSION}\"\r\n VIAddVersionKey CompanyName \"${COMPANY}\"\r\n VIAddVersionKey CompanyWebsite \"${URL}\"\r\n@@ -66,18 +65,18 @@ ShowUninstDetails show\n Section -Main SEC0000\r\n     SetOutPath $INSTDIR\r\n     SetOverwrite on\r\n-    #File ../release/novacoin-qt.exe\r\n+    #File ../release/42-qt.exe\r\n     File /oname=license.txt ../COPYING\r\n     File /oname=readme.txt ../doc/README_windows.txt\r\n     SetOutPath $INSTDIR\\daemon\r\n-    File ../src/novacoind.exe\r\n+    File ../src/42d.exe\r\n     SetOutPath $INSTDIR\\src\r\n     File /r /x *.exe /x *.o ../src\\*.*\r\n     SetOutPath $INSTDIR\r\n     WriteRegStr HKCU \"${REGKEY}\\Components\" Main 1\r\n \r\n-    # Remove old wxwidgets-based-novacoin executable and locales:\r\n-    #Delete /REBOOTOK $INSTDIR\\novacoin.exe\r\n+    # Remove old wxwidgets-based-42 executable and locales:\r\n+    #Delete /REBOOTOK $INSTDIR\\42.exe\r\n     #RMDir /r /REBOOTOK $INSTDIR\\locale\r\n SectionEnd\r\n \r\n@@ -87,7 +86,7 @@ Section -post SEC0001\n     WriteUninstaller $INSTDIR\\uninstall.exe\r\n     !insertmacro MUI_STARTMENU_WRITE_BEGIN Application\r\n     CreateDirectory $SMPROGRAMS\\$StartMenuGroup\r\n-    CreateShortcut \"$SMPROGRAMS\\$StartMenuGroup\\Uninstall NovaCoin.lnk\" $INSTDIR\\uninstall.exe\r\n+    CreateShortcut \"$SMPROGRAMS\\$StartMenuGroup\\Uninstall 42.lnk\" $INSTDIR\\uninstall.exe\r\n     !insertmacro MUI_STARTMENU_WRITE_END\r\n     WriteRegStr HKCU \"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\$(^Name)\" DisplayName \"$(^Name)\"\r\n     WriteRegStr HKCU \"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\$(^Name)\" DisplayVersion \"${VERSION}\"\r\n@@ -98,11 +97,11 @@ Section -post SEC0001\n     WriteRegDWORD HKCU \"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\$(^Name)\" NoModify 1\r\n     WriteRegDWORD HKCU \"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\$(^Name)\" NoRepair 1\r\n \r\n-    # novacoin: URI handling disabled for 0.6.0\r\n-    #    WriteRegStr HKCR \"novacoin\" \"URL Protocol\" \"\"\r\n-    #    WriteRegStr HKCR \"novacoin\" \"\" \"URL:Novacoin\"\r\n-    #    WriteRegStr HKCR \"novacoin\\DefaultIcon\" \"\" $INSTDIR\\novacoin-qt.exe\r\n-    #    WriteRegStr HKCR \"novacoin\\shell\\open\\command\" \"\" '\"$INSTDIR\\novacoin-qt.exe\" \"$$1\"'\r\n+    # 42: URI handling disabled for 0.6.0\r\n+    #    WriteRegStr HKCR \"42\" \"URL Protocol\" \"\"\r\n+    #    WriteRegStr HKCR \"42\" \"\" \"URL:42\"\r\n+    #    WriteRegStr HKCR \"42\\DefaultIcon\" \"\" $INSTDIR\\42-qt.exe\r\n+    #    WriteRegStr HKCR \"42\\shell\\open\\command\" \"\" '\"$INSTDIR\\42-qt.exe\" \"$$1\"'\r\n SectionEnd\r\n \r\n # Macro for selecting uninstaller sections\r\n@@ -120,7 +119,7 @@ done${UNSECTION_ID}:\n \r\n # Uninstaller sections\r\n Section /o -un.Main UNSEC0000\r\n-    #Delete /REBOOTOK $INSTDIR\\novacoin-qt.exe\r\n+    #Delete /REBOOTOK $INSTDIR\\42-qt.exe\r\n     Delete /REBOOTOK $INSTDIR\\license.txt\r\n     Delete /REBOOTOK $INSTDIR\\readme.txt\r\n     RMDir /r /REBOOTOK $INSTDIR\\daemon\r\n@@ -130,17 +129,17 @@ SectionEnd\n \r\n Section -un.post UNSEC0001\r\n     DeleteRegKey HKCU \"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\$(^Name)\"\r\n-    Delete /REBOOTOK \"$SMPROGRAMS\\$StartMenuGroup\\Uninstall NovaCoin.lnk\"\r\n-    #Delete /REBOOTOK \"$SMPROGRAMS\\$StartMenuGroup\\Novacoin.lnk\"\r\n-    #Delete /REBOOTOK \"$SMSTARTUP\\Novacoin.lnk\"\r\n+    Delete /REBOOTOK \"$SMPROGRAMS\\$StartMenuGroup\\Uninstall 42.lnk\"\r\n+    #Delete /REBOOTOK \"$SMPROGRAMS\\$StartMenuGroup\\42.lnk\"\r\n+    #Delete /REBOOTOK \"$SMSTARTUP\\42.lnk\"\r\n     Delete /REBOOTOK $INSTDIR\\uninstall.exe\r\n     Delete /REBOOTOK $INSTDIR\\debug.log\r\n     Delete /REBOOTOK $INSTDIR\\db.log\r\n     DeleteRegValue HKCU \"${REGKEY}\" StartMenuGroup\r\n     DeleteRegValue HKCU \"${REGKEY}\" Path\r\n     DeleteRegKey /IfEmpty HKCU \"${REGKEY}\\Components\"\r\n     DeleteRegKey /IfEmpty HKCU \"${REGKEY}\"\r\n-    DeleteRegKey HKCR \"novacoin\"\r\n+    DeleteRegKey HKCR \"42\"\r\n     RmDir /REBOOTOK $SMPROGRAMS\\$StartMenuGroup\r\n     RmDir /REBOOTOK $INSTDIR\r\n     Push $R0\r"
      },
      {
        "sha": "cce9794b3ca346bb2a01eca25847123cb387c91a",
        "filename": "share/ui.rc",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/share/ui.rc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/share/ui.rc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/ui.rc?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -1,4 +1,4 @@\n-novacoin               ICON    \"pixmaps/novacoin.ico\"\r\n+42               ICON    \"pixmaps/42.ico\"\r\n \r\n #include \"wx/msw/wx.rc\"\r\n \r"
      },
      {
        "sha": "a9c9ed708c7f3648fbb8280732d8893636a3a9b9",
        "filename": "src/alert.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/src/alert.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/src/alert.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/alert.cpp?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -16,10 +16,10 @@ using namespace std;\n map<uint256, CAlert> mapAlerts;\n CCriticalSection cs_mapAlerts;\n \n-static const char* pszMainKey = \"043fa441fd4203d03f5df2b75ea14e36f20d39f43e7a61aa7552ab9bcd7ecb0e77a3be4585b13fcdaa22ef6e51f1ff6f2929bec2494385b086fb86610e33193195\";\n+static const char* pszMainKey = \"04c97d0030cd9054e9823ed911c26b94c1633f03bf3c46f277cb5cc49d717e71d46fa33d8202c95e900f1861532a01384504432edeeb5296f9558f06c08bebab41\";\n \n // TestNet alerts pubKey\n-static const char* pszTestKey = \"0471dc165db490094d35cde15b1f5d755fa6ad6f2b5ed0f340e3f17f57389c3c2af113a8cbcc885bde73305a553b5640c83021128008ddf882e856336269080496\";\n+static const char* pszTestKey = \"0478e8527f136beb39e4398d0e71feb76720709988cebcf070a6fd21b3dd4511e3ccd2510d7ea2a19d281f2bda8d7856e4b8092b25e65c22a7bcfd98e32c216a8c\";\n \n // TestNet alerts private key\n // \"308201130201010420b665cff1884e53da26376fd1b433812c9a5a8a4d5221533b15b9629789bb7e42a081a53081a2020101302c06072a8648ce3d0101022100fffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f300604010004010704410479be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8022100fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141020101a1440342000471dc165db490094d35cde15b1f5d755fa6ad6f2b5ed0f340e3f17f57389c3c2af113a8cbcc885bde73305a553b5640c83021128008ddf882e856336269080496\""
      },
      {
        "sha": "1f7f87643c73df781baeb805b5dc8973f92d1ce8",
        "filename": "src/bitcoinrpc.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 10,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/src/bitcoinrpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/src/bitcoinrpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoinrpc.cpp?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -43,7 +43,7 @@ void ThreadRPCServer3(void* parg);\n \n static inline unsigned short GetDefaultRPCPort()\n {\n-    return GetBoolArg(\"-testnet\", false) ? 18344 : 8344;\n+    return GetBoolArg(\"-testnet\", false) ? 21210 : 2121;\n }\n \n Object JSONRPCError(int code, const string& message)\n@@ -219,12 +219,12 @@ Value stop(const Array& params, bool fHelp)\n         throw runtime_error(\n             \"stop <detach>\\n\"\n             \"<detach> is true or false to detach the database or not for this stop only\\n\"\n-            \"Stop NovaCoin server (and possibly override the detachdb config value).\");\n+            \"Stop 42 server (and possibly override the detachdb config value).\");\n     // Shutdown will take long enough that the response should get back\n     if (params.size() > 0)\n         bitdb.SetDetach(params[0].get_bool());\n     StartShutdown();\n-    return \"NovaCoin server stopping\";\n+    return \"42 server stopping\";\n }\n \n \n@@ -361,7 +361,7 @@ string HTTPPost(const string& strMsg, const map<string,string>& mapRequestHeader\n {\n     ostringstream s;\n     s << \"POST / HTTP/1.1\\r\\n\"\n-      << \"User-Agent: novacoin-json-rpc/\" << FormatFullVersion() << \"\\r\\n\"\n+      << \"User-Agent: 42-json-rpc/\" << FormatFullVersion() << \"\\r\\n\"\n       << \"Host: 127.0.0.1\\r\\n\"\n       << \"Content-Type: application/json\\r\\n\"\n       << \"Content-Length: \" << strMsg.size() << \"\\r\\n\"\n@@ -384,7 +384,7 @@ static string HTTPReply(int nStatus, const string& strMsg, bool keepalive)\n     if (nStatus == HTTP_UNAUTHORIZED)\n         return strprintf(\"HTTP/1.0 401 Authorization Required\\r\\n\"\n             \"Date: %s\\r\\n\"\n-            \"Server: novacoin-json-rpc/%s\\r\\n\"\n+            \"Server: 42-json-rpc/%s\\r\\n\"\n             \"WWW-Authenticate: Basic realm=\\\"jsonrpc\\\"\\r\\n\"\n             \"Content-Type: text/html\\r\\n\"\n             \"Content-Length: 296\\r\\n\"\n@@ -411,7 +411,7 @@ static string HTTPReply(int nStatus, const string& strMsg, bool keepalive)\n             \"Connection: %s\\r\\n\"\n             \"Content-Length: %\" PRIszu \"\\r\\n\"\n             \"Content-Type: application/json\\r\\n\"\n-            \"Server: novacoin-json-rpc/%s\\r\\n\"\n+            \"Server: 42-json-rpc/%s\\r\\n\"\n             \"\\r\\n\"\n             \"%s\",\n         nStatus,\n@@ -684,7 +684,7 @@ class AcceptedConnectionImpl : public AcceptedConnection\n void ThreadRPCServer(void* parg)\n {\n     // Make this thread recognisable as the RPC listener\n-    RenameThread(\"novacoin-rpclist\");\n+    RenameThread(\"42-rpclist\");\n \n     try\n     {\n@@ -787,15 +787,15 @@ void ThreadRPCServer2(void* parg)\n     {\n         unsigned char rand_pwd[32];\n         RAND_bytes(rand_pwd, 32);\n-        string strWhatAmI = \"To use novacoind\";\n+        string strWhatAmI = \"To use 42d\";\n         if (mapArgs.count(\"-server\"))\n             strWhatAmI = strprintf(_(\"To use the %s option\"), \"\\\"-server\\\"\");\n         else if (mapArgs.count(\"-daemon\"))\n             strWhatAmI = strprintf(_(\"To use the %s option\"), \"\\\"-daemon\\\"\");\n         uiInterface.ThreadSafeMessageBox(strprintf(\n             _(\"%s, you must set a rpcpassword in the configuration file:\\n %s\\n\"\n               \"It is recommended you use the following random password:\\n\"\n-              \"rpcuser=novacoinrpc\\n\"\n+              \"rpcuser=42rpc\\n\"\n               \"rpcpassword=%s\\n\"\n               \"(you do not need to remember this password)\\n\"\n               \"If the file does not exist, create it with owner-readable-only file permissions.\\n\"),\n@@ -984,7 +984,7 @@ static CCriticalSection cs_THREAD_RPCHANDLER;\n void ThreadRPCServer3(void* parg)\n {\n     // Make this thread recognisable as the RPC handler\n-    RenameThread(\"novacoin-rpchand\");\n+    RenameThread(\"42-rpchand\");\n \n     {\n         LOCK(cs_THREAD_RPCHANDLER);"
      },
      {
        "sha": "103529de263ce078eb6e8f77a4dca8964da1639d",
        "filename": "src/checkpoints.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 12,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/src/checkpoints.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/src/checkpoints.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/checkpoints.cpp?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -26,27 +26,21 @@ namespace Checkpoints\n     //\n     static MapCheckpoints mapCheckpoints =\n         boost::assign::map_list_of\n-        ( 0,     std::make_pair(hashGenesisBlock, 1360105017) )\n-        ( 13560, std::make_pair(uint256(\"0xa1591a0fcbf11f282d671581edb9f0aadcd06fee69761081e0a3245914c13729\"), 1364674052) )\n-        ( 143990, std::make_pair(uint256(\"0x00000000001ff5c3940a9f73ad4a990f64955179bde0f743c76dbf0031429efc\"), 1418953493) )\n-        ( 149000, std::make_pair(uint256(\"0x7a24acfcadcf43054e7f7d9f273522c0dfc5791ba4006e0273e7521a8d36c525\"), 1420872125) )\n-        ( 160000, std::make_pair(uint256(\"0x000000000001cb1133043d38d077c0e93f66c8b2566779f10f182137d1e34a68\"), 1425150237) )\n-        ( 200000, std::make_pair(uint256(\"0x0000000000029f8bbf66e6ea6f3e5db55009404aae0fe395a53dd33142b2bff2\"), 1441127233) )\n-        ( 221047, std::make_pair(uint256(\"0xa28aef712e7aa0c285bfe29351ca21ed416689139e3063ef770fc826a8b9e9da\"), 1449431646) )\n-        ( 243100, std::make_pair(uint256(\"0x000000000006522d1ebc0734cb0e6b83f5d4da0c3cbc72bd91b82016f611c4f0\"), 1458215793) )\n+        ( 0,     std::make_pair(hashGenesisBlock, 1478980800) )\n+\t\t( 420,   std::make_pair(uint256(\"0x00000bc4728eba8caf6ac81c81ce2a95ea69e81fde5e75dbc260690caa6d99af\"), 1479273521) )\n     ;\n \n     static ListBannedBlocks listBanned =\n         boost::assign::list_of\n-        // Invalid block #221047 with future timestamp of 2016/02/23 09:24:17 UTC\n-        ( uint256(\"0x46223e5432ceffe650d5729b4bb8479dcdf0ca1e534fa8e69382dc87b42ea94b\") )\n+        // Invalid block #... with future timestamp of ...\n+        ( uint256(\"\") )      \n     ;\n \n     // TestNet has no checkpoints\n     static MapCheckpoints mapCheckpointsTestnet =\n         boost::assign::map_list_of\n-        ( 0, std::make_pair(hashGenesisBlockTestNet, 1360105017) )\n-        ;\n+        ( 0, std::make_pair(hashGenesisBlockTestNet, 1478980800) )\n+\t;\n \n     bool CheckHardened(int nHeight, const uint256& hash)\n     {"
      },
      {
        "sha": "4e4dd68841bc440b86ec9e80c593ae728a0ca848",
        "filename": "src/db.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/src/db.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/src/db.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/db.cpp?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -122,9 +122,9 @@ bool CDBEnv::Open(boost::filesystem::path pathEnv_)\n         if (nDeepReorg < 3)\n         {\n             if (nBlocks < 1)\n-                strMessage = strprintf(_(\"Warning: DB_CONFIG has set_lk_max_locks %u, which may be too low for a single block. If this limit is reached, NovaCoin may stop working.\"), nMaxLocks);\n+                strMessage = strprintf(_(\"Warning: DB_CONFIG has set_lk_max_locks %u, which may be too low for a single block. If this limit is reached, 42 may stop working.\"), nMaxLocks);\n             else\n-                strMessage = strprintf(_(\"Warning: DB_CONFIG has set_lk_max_locks %u, which may be too low for a common blockchain reorganization. If this limit is reached, NovaCoin may stop working.\"), nMaxLocks);\n+                strMessage = strprintf(_(\"Warning: DB_CONFIG has set_lk_max_locks %u, which may be too low for a common blockchain reorganization. If this limit is reached, 42 may stop working.\"), nMaxLocks);\n \n             strMiscWarning = strMessage;\n             printf(\"*** %s\\n\", strMessage.c_str());"
      },
      {
        "sha": "0b25fd4dbb833d2d117069e3101807899949dc0b",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 22,
        "deletions": 22,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -70,7 +70,7 @@ void Shutdown(void* parg)\n     static bool fTaken;\n \n     // Make this thread recognisable as the shutdown thread\n-    RenameThread(\"novacoin-shutoff\");\n+    RenameThread(\"42-shutoff\");\n \n     bool fFirstThread = false;\n     {\n@@ -96,7 +96,7 @@ void Shutdown(void* parg)\n         delete pwalletMain;\n         NewThread(ExitTimeout, NULL);\n         Sleep(50);\n-        printf(\"NovaCoin exited\\n\\n\");\n+        printf(\"42 exited\\n\\n\");\n         fExit = true;\n #ifndef QT_GUI\n         // ensure non-UI client gets exited here, but let Bitcoin-Qt reach 'return 0;' in bitcoin.cpp\n@@ -151,12 +151,12 @@ bool AppInit(int argc, char* argv[])\n         if (mapArgs.count(\"-?\") || mapArgs.count(\"--help\"))\n         {\n             // First part of help message is specific to bitcoind / RPC client\n-            std::string strUsage = _(\"NovaCoin version\") + \" \" + FormatFullVersion() + \"\\n\\n\" +\n+            std::string strUsage = _(\"42 version\") + \" \" + FormatFullVersion() + \"\\n\\n\" +\n                 _(\"Usage:\") + \"\\n\" +\n-                  \"  novacoind [options]                     \" + \"\\n\" +\n-                  \"  novacoind [options] <command> [params]  \" + _(\"Send command to -server or novacoind\") + \"\\n\" +\n-                  \"  novacoind [options] help                \" + _(\"List commands\") + \"\\n\" +\n-                  \"  novacoind [options] help <command>      \" + _(\"Get help for a command\") + \"\\n\";\n+                  \"  42d [options]                     \" + \"\\n\" +\n+                  \"  42d [options] <command> [params]  \" + _(\"Send command to -server or 42d\") + \"\\n\" +\n+                  \"  42d [options] help                \" + _(\"List commands\") + \"\\n\" +\n+                  \"  42d [options] help <command>      \" + _(\"Get help for a command\") + \"\\n\";\n \n             strUsage += \"\\n\" + HelpMessage();\n \n@@ -166,7 +166,7 @@ bool AppInit(int argc, char* argv[])\n \n         // Command-line RPC\n         for (int i = 1; i < argc; i++)\n-            if (!IsSwitchChar(argv[i][0]) && !boost::algorithm::istarts_with(argv[i], \"novacoin:\"))\n+            if (!IsSwitchChar(argv[i][0]) && !boost::algorithm::istarts_with(argv[i], \"42:\"))\n                 fCommandLine = true;\n \n         if (fCommandLine)\n@@ -205,13 +205,13 @@ int main(int argc, char* argv[])\n \n bool static InitError(const std::string &str)\n {\n-    uiInterface.ThreadSafeMessageBox(str, _(\"NovaCoin\"), CClientUIInterface::OK | CClientUIInterface::MODAL);\n+    uiInterface.ThreadSafeMessageBox(str, _(\"42\"), CClientUIInterface::OK | CClientUIInterface::MODAL);\n     return false;\n }\n \n bool static InitWarning(const std::string &str)\n {\n-    uiInterface.ThreadSafeMessageBox(str, _(\"NovaCoin\"), CClientUIInterface::OK | CClientUIInterface::ICON_EXCLAMATION | CClientUIInterface::MODAL);\n+    uiInterface.ThreadSafeMessageBox(str, _(\"42\"), CClientUIInterface::OK | CClientUIInterface::ICON_EXCLAMATION | CClientUIInterface::MODAL);\n     return true;\n }\n \n@@ -233,8 +233,8 @@ std::string HelpMessage()\n {\n     string strUsage = _(\"Options:\") + \"\\n\" +\n         \"  -?                     \" + _(\"This help message\") + \"\\n\" +\n-        \"  -conf=<file>           \" + _(\"Specify configuration file (default: novacoin.conf)\") + \"\\n\" +\n-        \"  -pid=<file>            \" + _(\"Specify pid file (default: novacoind.pid)\") + \"\\n\" +\n+        \"  -conf=<file>           \" + _(\"Specify configuration file (default: 42.conf)\") + \"\\n\" +\n+        \"  -pid=<file>            \" + _(\"Specify pid file (default: 42d.pid)\") + \"\\n\" +\n         \"  -datadir=<dir>         \" + _(\"Specify data directory\") + \"\\n\" +\n         \"  -wallet=<file>         \" + _(\"Specify wallet file (within data directory)\") + \"\\n\" +\n         \"  -dbcache=<n>           \" + _(\"Set database cache size in megabytes (default: 25)\") + \"\\n\" +\n@@ -245,7 +245,7 @@ std::string HelpMessage()\n         \"  -tor=<ip:port>         \" + _(\"Use proxy to reach tor hidden services (default: same as -proxy)\") + \"\\n\"\n         \"  -torname=<host.onion>  \" + _(\"Send the specified hidden service name when connecting to Tor nodes (default: none)\") + \"\\n\"\n         \"  -dns                   \" + _(\"Allow DNS lookups for -addnode, -seednode and -connect\") + \"\\n\" +\n-        \"  -port=<port>           \" + _(\"Listen for connections on <port> (default: 7777 or testnet: 17777)\") + \"\\n\" +\n+        \"  -port=<port>           \" + _(\"Listen for connections on <port> (default: 4242 or testnet: 42420)\") + \"\\n\" +\n         \"  -maxconnections=<n>    \" + _(\"Maintain at most <n> connections to peers (default: 125)\") + \"\\n\" +\n         \"  -addnode=<ip>          \" + _(\"Add a node to connect to and attempt to keep the connection open\") + \"\\n\" +\n         \"  -connect=<ip>          \" + _(\"Connect only to the specified node(s)\") + \"\\n\" +\n@@ -287,7 +287,7 @@ std::string HelpMessage()\n #endif\n         \"  -rpcuser=<user>        \" + _(\"Username for JSON-RPC connections\") + \"\\n\" +\n         \"  -rpcpassword=<pw>      \" + _(\"Password for JSON-RPC connections\") + \"\\n\" +\n-        \"  -rpcport=<port>        \" + _(\"Listen for JSON-RPC connections on <port> (default: 8344 or testnet: 18344)\") + \"\\n\" +\n+        \"  -rpcport=<port>        \" + _(\"Listen for JSON-RPC connections on <port> (default: 2121 or testnet: 21210)\") + \"\\n\" +\n         \"  -rpcallowip=<ip>       \" + _(\"Allow JSON-RPC connections from specified IP address\") + \"\\n\" +\n         \"  -rpcconnect=<ip>       \" + _(\"Send commands to node running on <ip> (default: 127.0.0.1)\") + \"\\n\" +\n         \"  -blocknotify=<cmd>     \" + _(\"Execute command when the best block changes (%s in cmd is replaced by block hash)\") + \"\\n\" +\n@@ -494,7 +494,7 @@ bool AppInit2()\n     {\n         if (!ParseMoney(mapArgs[\"-paytxfee\"], nTransactionFee))\n             return InitError(strprintf(_(\"Invalid amount for -paytxfee=<amount>: '%s'\"), mapArgs[\"-paytxfee\"].c_str()));\n-        if (nTransactionFee > 0.25 * COIN)\n+        if (nTransactionFee > 0.1 * CENT)\n             InitWarning(_(\"Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.\"));\n     }\n \n@@ -521,7 +521,7 @@ bool AppInit2()\n     if (file) fclose(file);\n     static boost::interprocess::file_lock lock(pathLockFile.string().c_str());\n     if (!lock.try_lock())\n-        return InitError(strprintf(_(\"Cannot obtain a lock on data directory %s.  NovaCoin is probably already running.\"), strDataDir.c_str()));\n+        return InitError(strprintf(_(\"Cannot obtain a lock on data directory %s.  42 is probably already running.\"), strDataDir.c_str()));\n \n #if !defined(WIN32) && !defined(QT_GUI)\n     if (fDaemon)\n@@ -548,7 +548,7 @@ bool AppInit2()\n     if (GetBoolArg(\"-shrinkdebugfile\", !fDebug))\n         ShrinkDebugFile();\n     printf(\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\");\n-    printf(\"NovaCoin version %s (%s)\\n\", FormatFullVersion().c_str(), CLIENT_DATE.c_str());\n+    printf(\"42 version %s (%s)\\n\", FormatFullVersion().c_str(), CLIENT_DATE.c_str());\n     printf(\"Using OpenSSL version %s\\n\", SSLeay_version(SSLEAY_VERSION));\n     if (!fLogTimestamps)\n         printf(\"Startup time: %s\\n\", DateTimeStrFormat(\"%x %H:%M:%S\", GetTime()).c_str());\n@@ -557,7 +557,7 @@ bool AppInit2()\n     std::ostringstream strErrors;\n \n     if (fDaemon)\n-        fprintf(stdout, \"NovaCoin server starting\\n\");\n+        fprintf(stdout, \"42 server starting\\n\");\n \n     if (nScriptCheckThreads) {\n         printf(\"Using %u threads for script verification\\n\", nScriptCheckThreads);\n@@ -595,7 +595,7 @@ bool AppInit2()\n                                      \" Original wallet.dat saved as wallet.{timestamp}.bak in %s; if\"\n                                      \" your balance or transactions are incorrect you should\"\n                                      \" restore from a backup.\"), strDataDir.c_str());\n-            uiInterface.ThreadSafeMessageBox(msg, _(\"NovaCoin\"), CClientUIInterface::OK | CClientUIInterface::ICON_EXCLAMATION | CClientUIInterface::MODAL);\n+            uiInterface.ThreadSafeMessageBox(msg, _(\"42\"), CClientUIInterface::OK | CClientUIInterface::ICON_EXCLAMATION | CClientUIInterface::MODAL);\n         }\n         if (r == CDBEnv::RECOVER_FAIL)\n             return InitError(_(\"wallet.dat corrupt, salvage failed\"));\n@@ -860,13 +860,13 @@ bool AppInit2()\n         {\n             string msg(_(\"Warning: error reading wallet.dat! All keys read correctly, but transaction data\"\n                          \" or address book entries might be missing or incorrect.\"));\n-            uiInterface.ThreadSafeMessageBox(msg, _(\"NovaCoin\"), CClientUIInterface::OK | CClientUIInterface::ICON_EXCLAMATION | CClientUIInterface::MODAL);\n+            uiInterface.ThreadSafeMessageBox(msg, _(\"42\"), CClientUIInterface::OK | CClientUIInterface::ICON_EXCLAMATION | CClientUIInterface::MODAL);\n         }\n         else if (nLoadWalletRet == DB_TOO_NEW)\n-            strErrors << _(\"Error loading wallet.dat: Wallet requires newer version of NovaCoin\") << \"\\n\";\n+            strErrors << _(\"Error loading wallet.dat: Wallet requires newer version of 42\") << \"\\n\";\n         else if (nLoadWalletRet == DB_NEED_REWRITE)\n         {\n-            strErrors << _(\"Wallet needed to be rewritten: restart NovaCoin to complete\") << \"\\n\";\n+            strErrors << _(\"Wallet needed to be rewritten: restart 42 to complete\") << \"\\n\";\n             printf(\"%s\", strErrors.str().c_str());\n             return InitError(strErrors.str());\n         }"
      },
      {
        "sha": "1c0b2f256e376636399e685d8691144ffa6f40af",
        "filename": "src/irc.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/src/irc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/src/irc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/irc.cpp?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -187,7 +187,7 @@ bool GetIPFromIRC(SOCKET hSocket, string strMyName, CNetAddr& ipRet)\n void ThreadIRCSeed(void* parg)\n {\n     // Make this thread recognisable as the IRC seeding thread\n-    RenameThread(\"novacoin-ircseed\");\n+    RenameThread(\"42-ircseed\");\n \n     printf(\"ThreadIRCSeed started\\n\");\n \n@@ -302,16 +302,16 @@ void ThreadIRCSeed2(void* parg)\n         }\n \n         if (fTestNet) {\n-            Send(hSocket, \"JOIN #novacoinTEST2\\r\");\n-            Send(hSocket, \"WHO #novacoinTEST2\\r\");\n+            Send(hSocket, \"JOIN #42TEST2\\r\");\n+            Send(hSocket, \"WHO #42TEST2\\r\");\n         } else {\n-            // randomly join #novacoin00-#novacoin05\n+            // randomly join #4200-#4205\n             // int channel_number = GetRandInt(5);\n \n             // Channel number is always 0 for initial release\n             int channel_number = 0;\n-            Send(hSocket, strprintf(\"JOIN #novacoin%02d\\r\", channel_number).c_str());\n-            Send(hSocket, strprintf(\"WHO #novacoin%02d\\r\", channel_number).c_str());\n+            Send(hSocket, strprintf(\"JOIN #42%02d\\r\", channel_number).c_str());\n+            Send(hSocket, strprintf(\"WHO #42%02d\\r\", channel_number).c_str());\n         }\n \n         int64_t nStart = GetTime();"
      },
      {
        "sha": "c5793d815b533bb569bdd8704b379eca853143c8",
        "filename": "src/kernel.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 60,
        "changes": 66,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/src/kernel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/src/kernel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/kernel.cpp?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -18,8 +18,8 @@ using namespace std;\n \n \n // Protocol switch time for fixed kernel modifier interval\n-unsigned int nModifierSwitchTime  = 1413763200;    // Mon, 20 Oct 2014 00:00:00 GMT\n-unsigned int nModifierTestSwitchTime = 1397520000; // Tue, 15 Apr 2014 00:00:00 GMT\n+unsigned int nModifierSwitchTime  = 1481068800;    // Wed, 7 Dec 2016 00:00:00 GMT\n+unsigned int nModifierTestSwitchTime = 1481068800; // Wed, 7 Dec 2016 00:00:00 GMT\n \n // Note: user must upgrade before the protocol switch deadline, otherwise it's required to\n //   re-download the blockchain. The timestamp of upgrade is recorded in the blockchain \n@@ -31,69 +31,15 @@ typedef std::map<int, unsigned int> MapModifierCheckpoints;\n // Hard checkpoints of stake modifiers to ensure they are deterministic\n static std::map<int, unsigned int> mapStakeModifierCheckpoints =\n     boost::assign::map_list_of\n-        ( 0, 0x0e00670bu )\n-        ( 12661, 0x5d84115du )\n-        (143990, 0x9c592c78u )\n-        (149000, 0x48f2bdc4u )\n-        (160000, 0x789df0f0u )\n-        (200000, 0x01ec1503u )\n-        (221047, 0x0b39ef50u )\n-        (243100, 0xe928d83au )\n+        ( 0,   0xfd11f4e7 )\n+\t\t( 420, 0x9ccdddaf )\n     ;\n \n // Hard checkpoints of stake modifiers to ensure they are deterministic (testNet)\n static std::map<int, unsigned int> mapStakeModifierCheckpointsTestNet =\n     boost::assign::map_list_of\n-        ( 0, 0x0e00670bu )\n-    ;\n-\n-// Pregenerated entropy bits table (from genesis to #9689)\n-//\n-// Bits are packed into array of 256 bit integers:\n-//\n-// * array index calculated as nHeight / 256\n-// * position of bit is calculated as nHeight & 0xFF.\n-//\n-const uint256 entropyStore[] = {\n-    uint256(\"0x4555b4dcc1d690ddd9b810c90c66e82b18bf4f43cc887246c418383ec120a5ab\"),\n-    uint256(\"0xaa6d1198412fa77608addf6549c9198a22155e8afd7a9ded6179f6b7cfc66b0c\"),\n-    uint256(\"0x9442fabfa4116fb14a9769c2eea003845a1f5c3a0260f36b497d68f3a3cd4078\"),\n-    uint256(\"0x0e769042a9a98e42388195d699574b822d06515f7053ad884c53d7ee059f05b1\"),\n-    uint256(\"0x7005aac20baf70251aebfe3f1b95987d83ef1e3e6963de8fed601d4dd07bf7cf\"),\n-    uint256(\"0x58952c5c3de188f2e33c38d3f53d7bf44f9bc545a4289d266696273fa821be66\"),\n-    uint256(\"0x50b6c2ed780c08aaec3f7665b1b6004206243e3866456fc910b83b52d07eeb63\"),\n-    uint256(\"0x563841eefca85ba3384986c58100408ae3f1ba2ac727e1ac910ce154a06c702f\"),\n-    uint256(\"0x79275b03938b3e27a9b01a7f7953c6c487c58355f5d4169accfbb800213ffd13\"),\n-    uint256(\"0xd783f2538b3ed18f135af90adc687c5646d93aeaeaabc6667be94f7aa0a2d366\"),\n-    uint256(\"0xb441d0c175c40c8e88b09d88ea008af79cbed2d28219427d2e72fda682974db8\"),\n-    uint256(\"0x3204c43bd41f2e19628af3b0c9aca3db15bca4c8705d51056e7b17a319c04715\"),\n-    uint256(\"0x7e80e6ab7857d8f2f261a0a49c783bd800b365b8c9b85cc0e13f73904b0dcaa9\"),\n-    uint256(\"0xefaaee60ed82d2ad145c0e347941fdb131eb8fd289a45eef07121a93f283c5f1\"),\n-    uint256(\"0x3efc86e4334da332c1fd4c12513c40cff689f3efdc7f9913230822adacdda4f9\"),\n-    uint256(\"0xf0d6b8f38599a017fa35d1fbbf9ef51eca5ebc5b286aadba40c4c3e1d9bace0c\"),\n-    uint256(\"0x286a67f27323486036a0a92d35382fc8963c0c00bad331723318b4b9fdb2b56e\"),\n-    uint256(\"0xecbfaaa6567c54f08c4d5bd0118a2d7b58740f42cbfc73aa1536c1f5f76de87c\"),\n-    uint256(\"0xf9a4de1c5c46520de5aaf10d3796cf0e27ddce98b3398357f5726a949664e308\"),\n-    uint256(\"0xd75e6c4dc4be08401e3478d2467d9ab96a62af4f255c04a82c41af0de0a487bb\"),\n-    uint256(\"0x1a82c3bc6ad6047294c16571b5e2b7316c97bf8813e7da15798b9820d67e39f2\"),\n-    uint256(\"0xb49be0080de564e01829ded7e7971979565a741c5975dc9978dcc020192d396c\"),\n-    uint256(\"0x0d8eed113be67663b5a15a0625a9b49792b5ea59c005c4f405914877acab7000\"),\n-    uint256(\"0x8f9d46e2bc05a218ffa942965b747056197d393b097085523640cd59e07fe7c7\"),\n-    uint256(\"0x7a63ab40bc7f40ac2ebe9ede438d97b45fa6ed6f8419016da8d5f7a670111dda\"),\n-    uint256(\"0x63fbcc080448c43d6cf915c958314feff7a95a52ba43a68c05fc281d3a522d25\"),\n-    uint256(\"0xf834cf824c326d3ea861ea1e85dc3289265e37045981e28208e7344a7f8081d7\"),\n-    uint256(\"0xb4edc22ec98cc49b2f5af5bae3f52f5e6058280f74f2c432c2dd89ae49acceb8\"),\n-    uint256(\"0x0fe596037dcf81bf5c64f39755261c404ed088af5c8c31dd7549b6657ee92365\"),\n-    uint256(\"0xbbad51a0aeba254b01d18c328de9e932b9b859b61e622c325d64e2211b5e413d\"),\n-    uint256(\"0xabf0194cc787be938bc51c7fdf1cae4ec79e65ebab8fa8b8f40541c44ef384b0\"),\n-    uint256(\"0x83bc12d6fdbd3e854cb91c4ca7dfba3c38e8714121af88c8a8abdb33e5002438\"),\n-    uint256(\"0x71a2513026cabaedcbe55aeb6dc8049e5b763a3f54f10c33dd333624f764b38c\"),\n-    uint256(\"0xee6725632ff5c025dff6a18cd059875dcae20f399b03bccba13d9d5fcf6d9d9a\"),\n-    uint256(\"0xa168a2741d1e7e50cc74b79f695c25ffd3576e6bd61353c2a20e569fd63b2dac\"),\n-    uint256(\"0x6e462d2a87bfde9398b6747f94a8ed6a01e4d96c5b4372df5c910c106c48bd13\"),\n-    uint256(\"0x8eeb696181957c4b22434028990f49cb30006827c73860e77e2eecf5c38be99d\"),\n-    uint256(\"0x3188aaa65877b166f05cdc48f55b1f77a7d6fb221c395596d990ae5647e9ba96\")\n-};\n+        ( 0, 0xfd11f4e7 )\n+\t;\n \n // Whether the given block is subject to new modifier protocol\n bool IsFixedModifierInterval(unsigned int nTimeBlock)"
      },
      {
        "sha": "70ca24d62885914daa9e39652f5e679fdf7ec505",
        "filename": "src/kernelrecord.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/src/kernelrecord.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/src/kernelrecord.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/kernelrecord.cpp?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -84,14 +84,14 @@ uint64_t KernelRecord::getCoinDay() const\n     return coinAge;\n }\n \n-int64_t KernelRecord::getPoSReward(int nBits, int minutes)\n+int64_t KernelRecord::getPoSReward(int minutes)\n {\n     int64_t PoSReward;\n     int64_t nWeight = GetAdjustedTime() - nTime + minutes * 60;\n     if( nWeight <  nStakeMinAge)\n         return 0;\n     uint64_t coinAge = (nValue * nWeight ) / (COIN * nOneDay);\n-    PoSReward = GetProofOfStakeReward(coinAge, nBits, GetAdjustedTime() + minutes * 60);\n+    PoSReward = GetProofOfStakeReward(coinAge);\n     return PoSReward;\n }\n "
      },
      {
        "sha": "3bd74e7f5d681c0eda404201067e57e060fadc30",
        "filename": "src/kernelrecord.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/src/kernelrecord.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/src/kernelrecord.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/kernelrecord.h?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -44,7 +44,7 @@ class KernelRecord\n     uint64_t getCoinDay() const;\n     double getProbToMintStake(double difficulty, int timeOffset = 0) const;\n     double getProbToMintWithinNMinutes(double difficulty, int minutes);\n-    int64_t getPoSReward(int nBits, int timeOffset);\n+    int64_t getPoSReward(int timeOffset);\n protected:\n     int prevMinutes;\n     double prevDifficulty;"
      },
      {
        "sha": "3239eab6ea807be9347f9d5bd455c51a894fa582",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 52,
        "deletions": 162,
        "changes": 214,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -34,19 +34,16 @@ map<uint256, CBlockIndex*> mapBlockIndex;\n set<pair<COutPoint, unsigned int> > setStakeSeen;\n \n CBigNum bnProofOfWorkLimit(~uint256(0) >> 20); // \"standard\" scrypt target limit for proof of work, results with 0,000244140625 proof-of-work difficulty\n-CBigNum bnProofOfStakeLegacyLimit(~uint256(0) >> 24); // proof of stake target limit from block #15000 and until 20 June 2013, results with 0,00390625 proof of stake difficulty\n-CBigNum bnProofOfStakeLimit(~uint256(0) >> 27); // proof of stake target limit since 20 June 2013, equal to 0.03125  proof of stake difficulty\n-CBigNum bnProofOfStakeHardLimit(~uint256(0) >> 30); // disabled temporarily, will be used in the future to fix minimal proof of stake difficulty at 0.25\n+CBigNum bnProofOfStakeLimit(~uint256(0) >> 20); // proof of stake target limit\n uint256 nPoWBase = uint256(\"0x00000000ffff0000000000000000000000000000000000000000000000000000\"); // difficulty-1 target\n \n CBigNum bnProofOfWorkLimitTestNet(~uint256(0) >> 16);\n \n-unsigned int nStakeMinAge = 30 * nOneDay; // 30 days as zero time weight\n-unsigned int nStakeMaxAge = 90 * nOneDay; // 90 days as full weight\n-unsigned int nStakeTargetSpacing = 10 * 60; // 10-minute stakes spacing\n-unsigned int nModifierInterval = 6 * nOneHour; // time to elapse before new modifier is computed\n-\n-int nCoinbaseMaturity = 500;\n+unsigned int nStakeMinAge = 42 * nOneHour; // 42 hours as zero time weight\n+unsigned int nStakeMaxAge = 420 * nOneDay; // 420 days as full weight\n+unsigned int nStakeTargetSpacing = 7 * 60; // 7-minutes stakes spacing\n+unsigned int nModifierInterval = 7 * 60; // time to elapse before new modifier is computed\n+int nCoinbaseMaturity = 22;\n \n CBlockIndex* pindexGenesisBlock = NULL;\n int nBestHeight = -1;\n@@ -72,11 +69,11 @@ map<uint256, set<uint256> > mapOrphanTransactionsByPrev;\n // Constant stuff for coinbase transactions we create:\n CScript COINBASE_FLAGS;\n \n-const string strMessageMagic = \"NovaCoin Signed Message:\\n\";\n+const string strMessageMagic = \"42 Signed Message:\\n\";\n \n // Settings\n int64_t nTransactionFee = MIN_TX_FEE;\n-int64_t nMinimumInputValue = MIN_TXOUT_AMOUNT;\n+int64_t nMinimumInputValue = 0;\n \n // Ping and address broadcast intervals\n int64_t nPingInterval = 30 * 60;\n@@ -445,7 +442,6 @@ int CMerkleTx::SetMerkleBranch(const CBlock* pblock)\n     else\n     {\n         CBlock blockTmp;\n-\n         if (pblock == NULL)\n         {\n             // Load the block this tx is in\n@@ -545,9 +541,9 @@ int64_t CTransaction::GetMinFee(unsigned int nBlockSize, bool fAllowFree, enum G\n \n     if(IsCoinStake())\n     {\n-        // Enforce 0.01 as minimum fee for coinstake\n-        nMinTxFee = CENT;\n-        nMinRelayTxFee = CENT;\n+        // Enforce 0.00000001 as minimum fee for coinstake\n+        nMinTxFee = 1;\n+        nMinRelayTxFee = 1;\n     }\n \n     // Base fee is either nMinTxFee or nMinRelayTxFee\n@@ -997,132 +993,44 @@ uint256 WantedByOrphan(const CBlock* pblockOrphan)\n // select stake target limit according to hard-coded conditions\n CBigNum inline GetProofOfStakeLimit(int nHeight, unsigned int nTime)\n {\n-    if(fTestNet) // separate proof of stake target limit for testnet\n-        return bnProofOfStakeLimit;\n-    if(nTime > TARGETS_SWITCH_TIME) // 27 bits since 20 July 2013\n-        return bnProofOfStakeLimit;\n-    if(nHeight + 1 > 15000) // 24 bits since block 15000\n-        return bnProofOfStakeLegacyLimit;\n-    if(nHeight + 1 > 14060) // 31 bits since block 14060 until 15000\n-        return bnProofOfStakeHardLimit;\n-\n+    return bnProofOfStakeLimit;\n     return bnProofOfWorkLimit; // return bnProofOfWorkLimit of none matched\n }\n \n-// miner's coin base reward based on nBits\n-int64_t GetProofOfWorkReward(unsigned int nBits, int64_t nFees)\n+// miner's coin base reward\n+int64_t GetProofOfWorkReward(int64_t nFees)\n {\n-    CBigNum bnSubsidyLimit = MAX_MINT_PROOF_OF_WORK;\n-\n-    CBigNum bnTarget;\n-    bnTarget.SetCompact(nBits);\n-    CBigNum bnTargetLimit = bnProofOfWorkLimit;\n-    bnTargetLimit.SetCompact(bnTargetLimit.GetCompact());\n-\n-    // NovaCoin: subsidy is cut in half every 64x multiply of PoW difficulty\n-    // A reasonably continuous curve is used to avoid shock to market\n-    // (nSubsidyLimit / nSubsidy) ** 6 == bnProofOfWorkLimit / bnTarget\n-    //\n-    // Human readable form:\n-    //\n-    // nSubsidy = 100 / (diff ^ 1/6)\n-    //\n-    // Please note that we're using bisection to find an approximate solutuion\n-    CBigNum bnLowerBound = CENT;\n-    CBigNum bnUpperBound = bnSubsidyLimit;\n-    while (bnLowerBound + CENT <= bnUpperBound)\n-    {\n-        CBigNum bnMidValue = (bnLowerBound + bnUpperBound) / 2;\n-        if (bnMidValue * bnMidValue * bnMidValue * bnMidValue * bnMidValue * bnMidValue * bnTargetLimit > bnSubsidyLimit * bnSubsidyLimit * bnSubsidyLimit * bnSubsidyLimit * bnSubsidyLimit * bnSubsidyLimit * bnTarget)\n-            bnUpperBound = bnMidValue;\n-        else\n-            bnLowerBound = bnMidValue;\n-    }\n+    int64_t nSubsidy = 0;\n \n-    int64_t nSubsidy = bnUpperBound.getuint64();\n-\n-    nSubsidy = (nSubsidy / CENT) * CENT;\n-    if (fDebug && GetBoolArg(\"-printcreation\"))\n-        printf(\"GetProofOfWorkReward() : create=%s nBits=0x%08x nSubsidy=%\" PRId64 \"\\n\", FormatMoney(nSubsidy).c_str(), nBits, nSubsidy);\n-\n-    return min(nSubsidy, MAX_MINT_PROOF_OF_WORK) + nFees;\n+    if(pindexBest->nHeight <= 419)\n+        nSubsidy = 10 * CENT;\n+\t\n+    else if (pindexBest->nHeight >= 420)\n+        nSubsidy = 0 * COIN;\n+\t\n+\tif (fDebug && GetBoolArg(\"-printcreation\"))\n+        printf(\"GetProofOfWorkReward() : create=%s nSubsidy=%\"PRId64 \"\\n\", FormatMoney(nSubsidy).c_str(), nSubsidy);\n+\t\n+    return nSubsidy + nFees;\n }\n \n-// miner's coin stake reward based on nBits and coin age spent (coin-days)\n-int64_t GetProofOfStakeReward(int64_t nCoinAge, unsigned int nBits, int64_t nTime, bool bCoinYearOnly)\n+// miner's coin stake reward based on coin age spent (coin-days)\n+int64_t GetProofOfStakeReward(int64_t nCoinAge)\n {\n-    int64_t nRewardCoinYear, nSubsidy, nSubsidyLimit = 10 * COIN;\n-\n-    // Stage 2 of emission process is mostly PoS-based.\n-\n-    CBigNum bnRewardCoinYearLimit = MAX_MINT_PROOF_OF_STAKE; // Base stake mint rate, 100% year interest\n-    CBigNum bnTarget;\n-    bnTarget.SetCompact(nBits);\n-    CBigNum bnTargetLimit = GetProofOfStakeLimit(0, nTime);\n-    bnTargetLimit.SetCompact(bnTargetLimit.GetCompact());\n-\n-    // A reasonably continuous curve is used to avoid shock to market\n-\n-    CBigNum bnLowerBound = 1 * CENT, // Lower interest bound is 1% per year\n-        bnUpperBound = bnRewardCoinYearLimit, // Upper interest bound is 100% per year\n-        bnMidPart, bnRewardPart;\n-\n-    while (bnLowerBound + CENT <= bnUpperBound)\n-    {\n-        CBigNum bnMidValue = (bnLowerBound + bnUpperBound) / 2;\n-\n-        //\n-        // Reward for coin-year is cut in half every 8x multiply of PoS difficulty\n-        //\n-        // (nRewardCoinYearLimit / nRewardCoinYear) ** 3 == bnProofOfStakeLimit / bnTarget\n-        //\n-        // Human readable form: nRewardCoinYear = 1 / (posdiff ^ 1/3)\n-        //\n-\n-        bnMidPart = bnMidValue * bnMidValue * bnMidValue;\n-        bnRewardPart = bnRewardCoinYearLimit * bnRewardCoinYearLimit * bnRewardCoinYearLimit;\n-\n-        if (bnMidPart * bnTargetLimit > bnRewardPart * bnTarget)\n-            bnUpperBound = bnMidValue;\n-        else\n-            bnLowerBound = bnMidValue;\n-    }\n-\n-    nRewardCoinYear = bnUpperBound.getuint64();\n-    nRewardCoinYear = min((nRewardCoinYear / CENT) * CENT, MAX_MINT_PROOF_OF_STAKE);\n-\n-    if(bCoinYearOnly)\n-        return nRewardCoinYear;\n-\n-    nSubsidy = nCoinAge * nRewardCoinYear * 33 / (365 * 33 + 8);\n-\n-    // Set reasonable reward limit for large inputs\n-    //\n-    // This will stimulate large holders to use smaller inputs, that's good for the network protection\n-\n-    if (fDebug && GetBoolArg(\"-printcreation\") && nSubsidyLimit < nSubsidy)\n-        printf(\"GetProofOfStakeReward(): %s is greater than %s, coinstake reward will be truncated\\n\", FormatMoney(nSubsidy).c_str(), FormatMoney(nSubsidyLimit).c_str());\n-\n-    nSubsidy = min(nSubsidy, nSubsidyLimit);\n-\n+    int64_t nSubsidy = nCoinAge * COIN_YEAR_REWARD * 33 / (365 * 33 + 8);\n+\t\n     if (fDebug && GetBoolArg(\"-printcreation\"))\n-        printf(\"GetProofOfStakeReward(): create=%s nCoinAge=%\" PRId64 \" nBits=%d\\n\", FormatMoney(nSubsidy).c_str(), nCoinAge, nBits);\n+        printf(\"GetProofOfStakeReward(): create=%s nCoinAge=%\"PRId64 \"\\n\", FormatMoney(nSubsidy).c_str(), nCoinAge);\n \n     return nSubsidy;\n }\n \n-static const int64_t nTargetTimespan = 7 * nOneDay;  // one week\n+static const int64_t nTargetTimespan = 42 * 60;  // 42 minutes\n \n // get proof of work blocks max spacing according to hard-coded conditions\n int64_t inline GetTargetSpacingWorkMax(int nHeight, unsigned int nTime)\n {\n-    if(nTime > TARGETS_SWITCH_TIME)\n-        return 3 * nStakeTargetSpacing; // 30 minutes on mainNet since 20 Jul 2013 00:00:00\n-\n-    if(fTestNet)\n-        return 3 * nStakeTargetSpacing; // 15 minutes on testNet\n-\n-    return 12 * nStakeTargetSpacing; // 2 hours otherwise\n+     return 3 * nStakeTargetSpacing; \n }\n \n //\n@@ -1549,7 +1457,7 @@ bool CTransaction::ConnectInputs(CTxDB& txdb, MapPrevTx inputs, map<uint256, CTx\n                     return error(\"ConnectInputs() : %s unable to get coin age for coinstake\", GetHash().ToString().substr(0,10).c_str());\n \n                 int64_t nReward = GetValueOut() - nValueIn;\n-                int64_t nCalculatedReward = GetProofOfStakeReward(nCoinAge, pindexBlock->nBits, nTime) - GetMinFee(1, false, GMF_BLOCK, nTxSize) + CENT;\n+                int64_t nCalculatedReward = GetProofOfStakeReward(nCoinAge) - GetMinFee() + MIN_TX_FEE;\n \n                 if (nReward > nCalculatedReward)\n                     return DoS(100, error(\"ConnectInputs() : coinstake pays too much(actual=%\" PRId64 \" vs calculated=%\" PRId64 \")\", nReward, nCalculatedReward));\n@@ -1652,7 +1560,7 @@ static CCheckQueue<CScriptCheck> scriptcheckqueue(128);\n \n void ThreadScriptCheck(void*) {\n     vnThreadsRunning[THREAD_SCRIPTCHECK]++;\n-    RenameThread(\"novacoin-scriptch\");\n+    RenameThread(\"42-scriptch\");\n     scriptcheckqueue.Thread();\n     vnThreadsRunning[THREAD_SCRIPTCHECK]--;\n }\n@@ -1679,7 +1587,7 @@ bool CBlock::ConnectBlock(CTxDB& txdb, CBlockIndex* pindex, bool fJustCheck)\n     // Now that the whole chain is irreversibly beyond that time it is applied to all blocks except the\n     // two in the chain that violate it. This prevents exploiting the issue against nodes in their\n     // initial block download.\n-    bool fEnforceBIP30 = true; // Always active in NovaCoin\n+    bool fEnforceBIP30 = true; // Always active in 42\n     bool fScriptChecks = pindex->nHeight >= Checkpoints::GetTotalBlocksEstimate();\n \n     //// issue here: it doesn't know the version\n@@ -1764,7 +1672,7 @@ bool CBlock::ConnectBlock(CTxDB& txdb, CBlockIndex* pindex, bool fJustCheck)\n \n     if (IsProofOfWork())\n     {\n-        int64_t nBlockReward = GetProofOfWorkReward(nBits, nFees);\n+        int64_t nBlockReward = GetProofOfWorkReward(nFees);\n \n         // Check coinbase reward\n         if (vtx[0].GetValueOut() > nBlockReward)\n@@ -2162,8 +2070,8 @@ bool CBlock::AddToBlockIndex(unsigned int nFile, unsigned int nBlockPos)\n         return error(\"AddToBlockIndex() : ComputeNextStakeModifier() failed\");\n     pindexNew->SetStakeModifier(nStakeModifier, fGeneratedStakeModifier);\n     pindexNew->nStakeModifierChecksum = GetStakeModifierChecksum(pindexNew);\n-    if (!CheckStakeModifierCheckpoints(pindexNew->nHeight, pindexNew->nStakeModifierChecksum))\n-        return error(\"AddToBlockIndex() : Rejected by stake modifier checkpoint height=%d, modifier=0x%016\" PRIx64, pindexNew->nHeight, nStakeModifier);\n+\tif (!CheckStakeModifierCheckpoints(pindexNew->nHeight, pindexNew->nStakeModifierChecksum))\n+        return error(\"AddToBlockIndex() : Rejected by stake modifier checkpoint height=%d, modifier=0x%016\"PRIx64, pindexNew->nHeight, nStakeModifier);\n \n     // Add to mapBlockIndex\n     map<uint256, CBlockIndex*>::iterator mi = mapBlockIndex.insert(make_pair(hash, pindexNew)).first;\n@@ -2242,7 +2150,7 @@ bool CBlock::CheckBlock(bool fCheckPOW, bool fCheckMerkleRoot, bool fCheckSig) c\n         if (GetBlockTime() != (int64_t)vtx[1].nTime)\n             return DoS(50, error(\"CheckBlock() : coinstake timestamp violation nTimeBlock=%\" PRId64 \" nTimeTx=%u\", GetBlockTime(), vtx[1].nTime));\n \n-        // NovaCoin: check proof-of-stake block signature\n+        // 42: check proof-of-stake block signature\n         if (fCheckSig && !CheckBlockSignature())\n             return DoS(100, error(\"CheckBlock() : bad proof-of-stake block signature\"));\n \n@@ -2333,7 +2241,7 @@ bool CBlock::AcceptBlock()\n     int64_t nMedianTimePast = pindexPrev->GetMedianTimePast();\n     int nMaxOffset = 12 * nOneHour; // 12 hours\n     if (fTestNet || pindexPrev->nTime < 1450569600)\n-        nMaxOffset = 7 * nOneWeek; // One week (permanently on testNet or until 20 Dec, 2015 on mainNet)\n+        nMaxOffset = 7 * nOneWeek; // One week\n \n     // Check timestamp against prev\n     if (GetBlockTime() <= nMedianTimePast || FutureDrift(GetBlockTime()) < pindexPrev->GetBlockTime())\n@@ -2671,7 +2579,7 @@ bool CheckDiskSpace(uint64_t nAdditionalBytes)\n         string strMessage = _(\"Warning: Disk space is low!\");\n         strMiscWarning = strMessage;\n         printf(\"*** %s\\n\", strMessage.c_str());\n-        uiInterface.ThreadSafeMessageBox(strMessage, \"NovaCoin\", CClientUIInterface::OK | CClientUIInterface::ICON_EXCLAMATION | CClientUIInterface::MODAL);\n+        uiInterface.ThreadSafeMessageBox(strMessage, \"42\", CClientUIInterface::OK | CClientUIInterface::ICON_EXCLAMATION | CClientUIInterface::MODAL);\n         StartShutdown();\n         return false;\n     }\n@@ -2747,10 +2655,10 @@ bool LoadBlockIndex(bool fAllowNew)\n         pchMessageStart[3] = 0xef;\n \n         bnProofOfWorkLimit = bnProofOfWorkLimitTestNet; // 16 bits PoW target limit for testnet\n-        nStakeMinAge = 2 * nOneHour; // test net min age is 2 hours\n-        nModifierInterval = 20 * 60; // test modifier interval is 20 minutes\n-        nCoinbaseMaturity = 10; // test maturity is 10 blocks\n-        nStakeTargetSpacing = 5 * 60; // test block spacing is 5 minutes\n+        nStakeMinAge = 1 * 60; // test net min age is 1 minute\n+        nModifierInterval = 42; // test modifier interval is 42 seconds\n+        nCoinbaseMaturity = 1; // test maturity is 1(21) block\n+        nStakeTargetSpacing = 42; // test block spacing is 42 seconds\n     }\n \n     //\n@@ -2768,42 +2676,24 @@ bool LoadBlockIndex(bool fAllowNew)\n         if (!fAllowNew)\n             return false;\n \n-        // Genesis block\n-\n-        // MainNet:\n-\n-        //CBlock(hash=00000a060336cbb72fe969666d337b87198b1add2abaa59cca226820b32933a4, ver=1, hashPrevBlock=0000000000000000000000000000000000000000000000000000000000000000, hashMerkleRoot=4cb33b3b6a861dcbc685d3e614a9cafb945738d6833f182855679f2fad02057b, nTime=1360105017, nBits=1e0fffff, nNonce=1575379, vtx=1, vchBlockSig=)\n-        //  Coinbase(hash=4cb33b3b6a, nTime=1360105017, ver=1, vin.size=1, vout.size=1, nLockTime=0)\n-        //    CTxIn(COutPoint(0000000000, 4294967295), coinbase 04ffff001d020f274468747470733a2f2f626974636f696e74616c6b2e6f72672f696e6465782e7068703f746f7069633d3133343137392e6d736731353032313936236d736731353032313936)\n-        //    CTxOut(empty)\n-        //  vMerkleTree: 4cb33b3b6a\n-\n-        // TestNet:\n-\n-        //CBlock(hash=0000c763e402f2436da9ed36c7286f62c3f6e5dbafce9ff289bd43d7459327eb, ver=1, hashPrevBlock=0000000000000000000000000000000000000000000000000000000000000000, hashMerkleRoot=4cb33b3b6a861dcbc685d3e614a9cafb945738d6833f182855679f2fad02057b, nTime=1360105017, nBits=1f00ffff, nNonce=46534, vtx=1, vchBlockSig=)\n-        //  Coinbase(hash=4cb33b3b6a, nTime=1360105017, ver=1, vin.size=1, vout.size=1, nLockTime=0)\n-        //    CTxIn(COutPoint(0000000000, 4294967295), coinbase 04ffff001d020f274468747470733a2f2f626974636f696e74616c6b2e6f72672f696e6465782e7068703f746f7069633d3133343137392e6d736731353032313936236d736731353032313936)\n-        //    CTxOut(empty)\n-        //  vMerkleTree: 4cb33b3b6a\n-\n-        const string strTimestamp = \"https://bitcointalk.org/index.php?topic=134179.msg1502196#msg1502196\";\n+        const string strTimestamp = \"CNN 12/Nov/2016 More than 900 migrants rescued at sea within hours\";\n         CTransaction txNew;\n-        txNew.nTime = 1360105017;\n+        txNew.nTime = 1478980800;\n         txNew.vin.resize(1);\n         txNew.vout.resize(1);\n-        txNew.vin[0].scriptSig = CScript() << 486604799 << CBigNum(9999) << vector<unsigned char>(strTimestamp.begin(), strTimestamp.end());\n+        txNew.vin[0].scriptSig = CScript() << 42 << CBigNum(42) << vector<unsigned char>(strTimestamp.begin(), strTimestamp.end());\n         txNew.vout[0].SetEmpty();\n         CBlock block;\n         block.vtx.push_back(txNew);\n         block.hashPrevBlock = 0;\n         block.hashMerkleRoot = block.BuildMerkleTree();\n         block.nVersion = 1;\n-        block.nTime    = 1360105017;\n+        block.nTime    = 1478980800;\n         block.nBits    = bnProofOfWorkLimit.GetCompact();\n-        block.nNonce   = !fTestNet ? 1575379 : 46534;\n+        block.nNonce   = !fTestNet ? 1031066 : 60656;\n \n         //// debug print\n-        assert(block.hashMerkleRoot == uint256(\"0x4cb33b3b6a861dcbc685d3e614a9cafb945738d6833f182855679f2fad02057b\"));\n+        assert(block.hashMerkleRoot == uint256(\"0x8595bda86b1eb5c8b1830bf4c391c6d2b66adc688caf00795fbb8a5bbb0f94ce\"));\n         block.print();\n         assert(block.GetHash() == (!fTestNet ? hashGenesisBlock : hashGenesisBlockTestNet));\n         assert(block.CheckBlock());\n@@ -3109,7 +2999,7 @@ bool static AlreadyHave(CTxDB& txdb, const CInv& inv)\n // The message start string is designed to be unlikely to occur in normal data.\n // The characters are rarely used upper ASCII, not valid as UTF-8, and produce\n // a large 4-byte int at any alignment.\n-unsigned char pchMessageStart[4] = { 0xe4, 0xe8, 0xe9, 0xe5 };\n+unsigned char pchMessageStart[4] = { 0x1d, 0x05, 0x14, 0x0b };\n \n bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n {"
      },
      {
        "sha": "4641969ecd7f464be728be3a28fa2a5e56e3aadf",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 12,
        "deletions": 27,
        "changes": 39,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -40,13 +40,12 @@ static const unsigned int MAX_BLOCK_SIGOPS = MAX_BLOCK_SIZE/50;\n static const unsigned int MAX_ORPHAN_TRANSACTIONS = MAX_BLOCK_SIZE/100;\n static const unsigned int MAX_INV_SZ = 50000;\n \n-static const int64_t MIN_TX_FEE = CENT/10;\n-static const int64_t MIN_RELAY_TX_FEE = CENT/50;\n+static const int64_t MIN_TX_FEE = 1;\n+static const int64_t MIN_RELAY_TX_FEE = MIN_TX_FEE;\n \n-static const int64_t MAX_MONEY = std::numeric_limits<int64_t>::max();\n-static const int64_t MAX_MINT_PROOF_OF_WORK = 100 * COIN;\n-static const int64_t MAX_MINT_PROOF_OF_STAKE = 1 * COIN;\n-static const int64_t MIN_TXOUT_AMOUNT = CENT/100;\n+static const int64_t MAX_MONEY = 42 * COIN;\n+static const int64_t COIN_YEAR_REWARD = 0 * COIN; // 0% per year\n+static const int64_t MIN_TXOUT_AMOUNT = MIN_TX_FEE;\n \n \n inline bool MoneyRange(int64_t nValue) { return (nValue >= 0 && nValue <= MAX_MONEY); }\n@@ -55,8 +54,8 @@ static const unsigned int LOCKTIME_THRESHOLD = 500000000; // Tue Nov  5 00:53:20\n // Maximum number of script-checking threads allowed\n static const int MAX_SCRIPTCHECK_THREADS = 16;\n \n-static const uint256 hashGenesisBlock(\"0x00000a060336cbb72fe969666d337b87198b1add2abaa59cca226820b32933a4\");\n-static const uint256 hashGenesisBlockTestNet(\"0x000c763e402f2436da9ed36c7286f62c3f6e5dbafce9ff289bd43d7459327eb\");\n+static const uint256 hashGenesisBlock(\"0x000004cf6cc5eec2d2d564fa45c26278ed72014822a601c1ff02cd84d0ef63be\");\n+static const uint256 hashGenesisBlockTestNet(\"0x00000bc79a2049b1430c77d81fad3373070e65668b21792d298ae5dde3e7abb8\");\n \n inline int64_t PastDrift(int64_t nTime)   { return nTime - 2 * nOneHour; } // up to 2 hours from the past\n inline int64_t FutureDrift(int64_t nTime) { return nTime + 2 * nOneHour; } // up to 2 hours from the future\n@@ -90,7 +89,6 @@ extern int64_t nTransactionFee;\n extern int64_t nMinimumInputValue;\n extern bool fUseFastIndex;\n extern int nScriptCheckThreads;\n-extern const uint256 entropyStore[38];\n \n // Minimum disk space required - used in CheckDiskSpace()\n static const uint64_t nMinDiskSpace = 52428800;\n@@ -123,8 +121,8 @@ void ThreadScriptCheckQuit();\n \n bool CheckProofOfWork(uint256 hash, unsigned int nBits);\n unsigned int GetNextTargetRequired(const CBlockIndex* pindexLast, bool fProofOfStake);\n-int64_t GetProofOfWorkReward(unsigned int nBits, int64_t nFees=0);\n-int64_t GetProofOfStakeReward(int64_t nCoinAge, unsigned int nBits, int64_t nTime, bool bCoinYearOnly=false);\n+int64_t GetProofOfWorkReward(int64_t nFees);\n+int64_t GetProofOfStakeReward(int64_t nCoinAge);\n unsigned int ComputeMinWork(unsigned int nBase, int64_t nTime);\n unsigned int ComputeMinStake(unsigned int nBase, int64_t nTime, unsigned int nBlockTime);\n int GetNumBlocksOfPeers();\n@@ -958,23 +956,10 @@ class CBlock\n     // ppcoin: entropy bit for stake modifier if chosen by modifier\n     unsigned int GetStakeEntropyBit(unsigned int nHeight) const\n     {\n-        // Protocol switch to support p2pool at novacoin block #9689\n-        if (nHeight >= 9689 || fTestNet)\n-        {\n-            // Take last bit of block hash as entropy bit\n-            unsigned int nEntropyBit = (GetHash().Get64()) & (uint64_t)1;\n-            if (fDebug && GetBoolArg(\"-printstakemodifier\"))\n-                printf(\"GetStakeEntropyBit: nTime=%u hashBlock=%s nEntropyBit=%u\\n\", nTime, GetHash().ToString().c_str(), nEntropyBit);\n-            return nEntropyBit;\n-        }\n-\n-        // Before novacoin block #9689 - get from pregenerated table\n-        int nBitNum = nHeight & 0xFF;\n-        int nItemNum = nHeight / 0xFF;\n-\n-        unsigned int nEntropyBit = (unsigned int) ((entropyStore[nItemNum] & (uint256(1) << nBitNum)) >> nBitNum).Get64();\n+        // Take last bit of block hash as entropy bit\n+        unsigned int nEntropyBit = ((GetHash().Get64()) & 1ULL);\n         if (fDebug && GetBoolArg(\"-printstakemodifier\"))\n-            printf(\"GetStakeEntropyBit: from pregenerated table, nHeight=%d nEntropyBit=%u\\n\", nHeight, nEntropyBit);\n+            printf(\"GetStakeEntropyBit: nTime=%u hashBlock=%s nEntropyBit=%u\\n\", nTime, GetHash().ToString().c_str(), nEntropyBit);\n         return nEntropyBit;\n     }\n "
      },
      {
        "sha": "08bf4ffcb528e7ac1e4162e66aa74e67d17d0dcd",
        "filename": "src/makefile.bsd",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/src/makefile.bsd",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/src/makefile.bsd",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/makefile.bsd?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -140,7 +140,7 @@ OBJS= \\\n     obj/cryptogram.o \\\n     obj/ipcollector.o\n \n-all: novacoind\n+all: 42d\n \n #\n # LevelDB support\n@@ -209,11 +209,11 @@ obj/%.o: %.cpp\n \t      -e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \\\n \t  rm -f $(@:%.o=%.d)\n \n-novacoind: $(OBJS:obj/%=obj/%)\n+42d: $(OBJS:obj/%=obj/%)\n \t$(LINK) $(xCXXFLAGS) -o $@ $^ $(xLDFLAGS) $(LIBS)\n \n clean:\n-\t-rm -f novacoind\n+\t-rm -f 42d\n \t-rm -f obj/*.o\n \t-rm -f obj/*.P\n \t-rm -f obj/*.d"
      },
      {
        "sha": "a3e055d5bd87ef895b87cb132c4eef55ce9608e0",
        "filename": "src/makefile.linux-mingw",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/src/makefile.linux-mingw",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/src/makefile.linux-mingw",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/makefile.linux-mingw?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -104,7 +104,7 @@ OBJS= \\\n     obj/cryptogram.o \\\n     obj/ipcollector.o\n \n-all: novacoind.exe\n+all: 42d.exe\n \n #\n # LevelDB support\n@@ -167,12 +167,12 @@ DEFS += -DHAVE_BUILD_INFO\n obj/%.o: %.cpp $(HEADERS)\n \t$(CXX) -c $(CFLAGS) -o $@ $<\n \n-novacoind.exe: $(OBJS:obj/%=obj/%)\n+42d.exe: $(OBJS:obj/%=obj/%)\n \t$(CXX) $(CFLAGS) $(LDFLAGS) -o $@ $(LIBPATHS) $^ $(LIBS) -lshlwapi\n-\t$(STRIP) novacoind.exe\n+\t$(STRIP) 42d.exe\n \n clean:\n-\t-rm -f novacoind.exe\n+\t-rm -f 42d.exe\n \t-rm -f obj/*.o\n \t-rm -f obj/*.P\n \t-rm -f obj/*.d"
      },
      {
        "sha": "1f5ab23be197dc16392c8af5226f142b17cc73e1",
        "filename": "src/makefile.mingw",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/src/makefile.mingw",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/src/makefile.mingw",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/makefile.mingw?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -94,7 +94,7 @@ OBJS= \\\n     obj/cryptogram.o \\\n     obj/ipcollector.o\n \n-all: novacoind.exe\n+all: 42d.exe\n \n #\n # LevelDB support\n@@ -105,7 +105,7 @@ DEFS += $(addprefix -I,$(CURDIR)/leveldb/include) -DUSE_LEVELDB\n DEFS += $(addprefix -I,$(CURDIR)/leveldb/helpers)\n OBJS += obj/txdb-leveldb.o\n leveldb/libleveldb.a:\n-\tcd leveldb;TARGET_OS=NATIVE_WINDOWS make libleveldb.a libmemenv.a;; cd ..\n+\tcd leveldb;TARGET_OS=NATIVE_WINDOWS make libleveldb.a libmemenv.a; cd ..\n obj/txdb-leveldb.o: leveldb/libleveldb.a\n else\n OBJS += obj/txdb-bdb.o\n@@ -150,11 +150,11 @@ endif\n obj/%.o: %.cpp $(HEADERS)\n \tg++ -c $(CFLAGS) -o $@ $<\n \n-novacoind.exe: $(OBJS:obj/%=obj/%)\n+42d.exe: $(OBJS:obj/%=obj/%)\n \tg++ $(CFLAGS) $(LDFLAGS) -o $@ $(LIBPATHS) $^ $(LIBS)\n \n clean:\n-\t-del /Q novacoind.exe\n+\t-del /Q 42d.exe\n \t-del /Q obj\\*\n \t-del /Q crypto\\scrypt\\asm\\obj\\*\n "
      },
      {
        "sha": "d4c8628756d5b7682e9638c059cf1e00d7ccf91b",
        "filename": "src/makefile.osx",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/src/makefile.osx",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/src/makefile.osx",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/makefile.osx?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -106,7 +106,7 @@ ifneq (${USE_IPV6}, -)\n \tDEFS += -DUSE_IPV6=$(USE_IPV6)\n endif\n \n-all: novacoind\n+all: 42d\n \n #\n # LevelDB support\n@@ -171,11 +171,11 @@ obj/%.o: %.cpp\n \t      -e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \\\n \t  rm -f $(@:%.o=%.d)\n \n-novacoind: $(OBJS:obj/%=obj/%)\n+42d: $(OBJS:obj/%=obj/%)\n \t$(CXX) $(CFLAGS) -o $@ $(LIBPATHS) $^ $(LIBS)\n \n clean:\n-\t-rm -f novacoind\n+\t-rm -f 42d\n \t-rm -f obj/*.o\n \t-rm -f obj/*.P\n \t-rm -f obj/*.d"
      },
      {
        "sha": "14ce3969440a8996a89e8f067637ad3d239f9b5f",
        "filename": "src/makefile.unix",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/src/makefile.unix",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/src/makefile.unix",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/makefile.unix?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -141,7 +141,7 @@ OBJS= \\\n     obj/cryptogram.o \\\n     obj/ipcollector.o\n \n-all: novacoind\n+all: 42d\n \n #\n # LevelDB support\n@@ -211,11 +211,11 @@ obj/%.o: %.cpp\n \t      -e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \\\n \t  rm -f $(@:%.o=%.d)\n \n-novacoind: $(OBJS:obj/%=obj/%)\n+42d: $(OBJS:obj/%=obj/%)\n \t$(LINK) $(xCXXFLAGS) -o $@ $^ $(xLDFLAGS) $(LIBS)\n \n clean:\n-\t-rm -f novacoind\n+\t-rm -f 42d\n \t-rm -f obj/*.o\n \t-rm -f obj/*.P\n \t-rm -f obj/*.d"
      },
      {
        "sha": "cbc128b27465c85c013149fb506e1b3d298a7a80",
        "filename": "src/miner.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/src/miner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/src/miner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.cpp?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -1,6 +1,7 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n // Copyright (c) 2009-2012 The Bitcoin developers\n-// Copyright (c) 2013 The NovaCoin developers\n+// Copyright (c) 2013-2016 The NovaCoin developers\n+// Copyright (c) 2016 The 42 developers\n // Distributed under the MIT/X11 software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -357,8 +358,8 @@ CBlock* CreateNewBlock(CWallet* pwallet, CTransaction *txCoinStake)\n \n         if (!fProofOfStake)\n         {\n-            pblock->vtx[0].vout[0].nValue = GetProofOfWorkReward(pblock->nBits, nFees);\n-\n+            pblock->vtx[0].vout[0].nValue = GetProofOfWorkReward(nFees);\n+\t\t\t\n             if (fDebug)\n                 printf(\"CreateNewBlock(): PoW reward %\" PRIu64 \"\\n\", pblock->vtx[0].vout[0].nValue);\n         }\n@@ -650,7 +651,7 @@ void ThreadStakeMiner(void* parg)\n     SetThreadPriority(THREAD_PRIORITY_LOWEST);\n \n     // Make this thread recognisable as the mining thread\n-    RenameThread(\"novacoin-miner\");\n+    RenameThread(\"42-miner\");\n     CWallet* pwallet = (CWallet*)parg;\n \n     MidstateMap inputsMap;"
      },
      {
        "sha": "c794e0b707622c572578a7ed028b41874ec510cc",
        "filename": "src/miner.h",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/src/miner.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/src/miner.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.h?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -1,10 +1,11 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n // Copyright (c) 2009-2012 The Bitcoin developers\n-// Copyright (c) 2013 The NovaCoin developers\n+// Copyright (c) 2013-2016 The NovaCoin developers\n+// Copyright (c) 2016 The 42 developers\n // Distributed under the MIT/X11 software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-#ifndef NOVACOIN_MINER_H\n-#define NOVACOIN_MINER_H\n+#ifndef MINER_H\n+#define MINER_H\n \n #include \"main.h\"\n #include \"wallet.h\"\n@@ -30,4 +31,4 @@ void SHA256Transform(void* pstate, void* pinput, const void* pinit);\n /** Stake miner thread */\n void ThreadStakeMiner(void* parg);\n \n-#endif // NOVACOIN_MINER_H\n+#endif // MINER_H"
      },
      {
        "sha": "bf35594dfa4bd3f65986593046a6e5eb56663f1b",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 63,
        "changes": 73,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -361,7 +361,7 @@ bool GetMyExternalIP(CNetAddr& ipRet)\n void ThreadGetMyExternalIP(void* parg)\n {\n     // Make this thread recognisable as the external IP detection thread\n-    RenameThread(\"novacoin-ext-ip\");\n+    RenameThread(\"42-ext-ip\");\n \n     CNetAddr addrLocalHost;\n     if (GetMyExternalIP(addrLocalHost))\n@@ -619,7 +619,7 @@ void Release(CNode* node) {\n void ThreadSocketHandler(void* parg)\n {\n     // Make this thread recognisable as the networking thread\n-    RenameThread(\"novacoin-net\");\n+    RenameThread(\"42-net\");\n \n     try\n     {\n@@ -974,16 +974,12 @@ void ThreadSocketHandler2(void* parg)\n // The first name is used as information source for addrman.\n // The second name should resolve to a list of seed addresses.\n static const char *strDNSSeed[][2] = {\n-    {\"node.novacoin.karelia.pro\", \"dnsseed.novacoin.karelia.pro\"},\n-    {\"novacoin.ru\", \"dnsseed.novacoin.ru\"},\n-    {\"novacoin.ru\", \"testseed.novacoin.ru\"},\n-    {\"novaco.in\", \"dnsseed.novaco.in\"},\n };\n \n void ThreadDNSAddressSeed(void* parg)\n {\n     // Make this thread recognisable as the DNS seeding thread\n-    RenameThread(\"novacoin-dnsseed\");\n+    RenameThread(\"42-dnsseed\");\n \n     try\n     {\n@@ -1034,62 +1030,13 @@ void ThreadDNSAddressSeed2(void* parg)\n     printf(\"%d addresses found from DNS seeds\\n\", found);\n }\n \n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n uint32_t pnSeed[] =\n {\n-    0x1c542868, 0x3859dd6f, 0x203c2e68, 0xf145a6bc, 0x638a545f, 0x325da346, 0x385da346, 0xfb2b8d5f,\n-    0x52568c5f, 0xa979e65b, 0x8de6485d, 0x9f79e65b, 0x048a861f, 0x3388b55f, 0x6ff0b45e, 0x17e81f5f,\n-    0x6c47bb25, 0x1ecdc852, 0x28263db9, 0x47824e5d, 0x36f1c851, 0x2bf913b2, 0x95923cb3, 0x84e63eb2,\n-    0xefdeedbf, 0x65200092, 0xf36f6805, 0x42692d05, 0x772c1955, 0xb6bf1b4e, 0x7abb5f5d, 0xdb2fa6bc,\n-    0x90e911bf, 0x82de565f, 0x694416b2, 0x0ab600bc, 0xfcecbe6d, 0x24ed9fb2, 0x1bb618c2, 0xc64765bb,\n-    0x4e3d62c3, 0xdba24baa, 0x4b7109b0, 0x12a12cc2, 0xfc01864f, 0x0b69e85b, 0x33922c1f, 0xac611bc6,\n-    0x2a257155, 0x991d5fc0, 0xbfdabcb1, 0x9b73ee55, 0x5bc2b95d, 0xdef0762e, 0x6ab7c936, 0x9c4416b2,\n-    0xd60d864f, 0x03671f1f, 0x3b5da346, 0xc6f5c851, 0x5411b2d4, 0xe7c25702, 0x63474fb0, 0x7e11c854,\n-    0x52381d5f, 0x72fdfe59, 0x51599a05, 0xfb12b2d4, 0xaee4f15e, 0xd0e3f15e, 0x2aa2805f, 0xa1caf15e,\n-    0x34fe425e, 0x46e1f15e, 0xd7c71955, 0xaeeff15e, 0x47c2af55, 0x563d89b2, 0x67980fd9, 0xc9def15e,\n-    0x9cc51eb9, 0xdaa7aa6b, 0x78e6871f, 0x0d5d2cb2, 0x7aedf15e, 0x9bcaf15e, 0xe5f7f15e, 0x501c1759,\n-    0xdfbc4980, 0xa7397f2e, 0x31ea1a02, 0x3a27655e, 0xaa86f05c, 0xdcddf15e, 0x64689cb2, 0xd4bf62d4,\n-    0xf093eab2, 0x98def15e, 0xb6c5f15e, 0x81e8f15e, 0xe5d2fe59, 0xa312786d, 0x4cf9fe59, 0x8a922c1f,\n-    0x00c7fe59, 0x1ade565f, 0x9e4116b2, 0x2c36983e, 0x68f8f15e, 0x51b7eab2, 0x76c51eb9, 0x9edd4980,\n-    0x90ef565f, 0x0dd80857, 0xd513fb94, 0xf5bdeab2, 0xa95277b0, 0x2cf2f15e, 0x1897eab2, 0x924416b2,\n-    0x985c9b59, 0x30aa43d8, 0xf9c6745f, 0xaf862e5f, 0xe0ceeab2, 0xb9b3eab2, 0x6da4eab2, 0xa4fdeab2,\n-    0x0fa6c125, 0xe38bbd05, 0x5d922c1f, 0x9bd0eab2, 0x73025e02, 0xc4fd794d, 0x8435b35f, 0x2d01bc2e,\n-    0xaa2a14d4, 0xa22b07cb, 0xebda6f4f, 0xddc6514e, 0xf23feab2, 0xea1e5256, 0x6147b45e, 0x47d21e4f,\n-    0x67c41c1f, 0x53ec1a02, 0x352e786d, 0x6bec1a02, 0x78fb4abe, 0xd3014c5d, 0x9fbbeab2, 0x1fc51eb9,\n-    0x720eeab2, 0x2db5eab2, 0xe8baf65c, 0x521b459e, 0x65c4955f, 0x0e7b915f, 0xa8f37e6d, 0x6d0b465f,\n-    0xfab8ff5c, 0xf7c27e6d, 0x7345a846, 0x4fd1a7d5, 0xdfc97e6d, 0x26c27e6d, 0xa9de36b2, 0xc615344d,\n-    0x28ceb95d, 0xa52d895e, 0x18c17e6d, 0x13ec1a02, 0x0ba37125, 0x6c3d344d, 0xb3922c1f, 0x506bbeb0,\n-    0x4d04994e, 0xa1bbe56d, 0xf62c344d, 0x0847d048, 0x4bdc6451, 0xc95b9a05, 0xbcd3a7d5, 0x29b57125,\n-    0x0c4d2cb2, 0xf2b8eab2, 0xc2d5b95d, 0x0185ef59, 0x30adeab2, 0xcaf0e92e, 0x756c344d, 0xfd9e252e,\n-    0xbe5ef3bc, 0x4689344d, 0xb223895e, 0xfcebeaad, 0xb7c0e92e, 0x993c1760, 0xe1e171b0, 0xb857e75b,\n-    0xbf10002e, 0xb55b2cb2, 0xa90e2cb2, 0x13d6f15e, 0xf8be9225, 0x14ddf15e, 0x06e90305, 0x82472cb2,\n };\n \n const char* pchTorSeed[] = \n {\n-    \"seedp4knqnoei57u.onion\",\n-    \"seedr3hhlepyi7fd.onion\",\n-    \"seed3uuomkclbiz4.onion\",\n-    \"seedeh7qck3ouff5.onion\",\n-    \"5rg3vq4jagckeckf.onion\",\n-    \"seedt3sraf53ajiy.onion\",\n-    \"seedg4qyccsg42oq.onion\",\n-    \"novaqrtoywpg7jly.onion\",\n-    \"seed3d5wolqbgrcb.onion\",\n-    \"seed24u5dwph3qw4.onion\",\n-    \"mj26ulzbs2oskgym.onion\",\n-    \"eqon4usunavt76m7.onion\",\n-    \"seedd3aldwpslzl3.onion\"\n+\t\"\",\n };\n \n void DumpAddresses()\n@@ -1121,7 +1068,7 @@ void ThreadDumpAddress2(void* parg)\n void ThreadDumpAddress(void* parg)\n {\n     // Make this thread recognisable as the address dumping thread\n-    RenameThread(\"novacoin-adrdump\");\n+    RenameThread(\"42-adrdump\");\n \n     try\n     {\n@@ -1136,7 +1083,7 @@ void ThreadDumpAddress(void* parg)\n void ThreadOpenConnections(void* parg)\n {\n     // Make this thread recognisable as the connection opening thread\n-    RenameThread(\"novacoin-opencon\");\n+    RenameThread(\"42-opencon\");\n \n     try\n     {\n@@ -1309,7 +1256,7 @@ void ThreadOpenConnections2(void* parg)\n void ThreadOpenAddedConnections(void* parg)\n {\n     // Make this thread recognisable as the connection opening thread\n-    RenameThread(\"novacoin-opencon\");\n+    RenameThread(\"42-opencon\");\n \n     try\n     {\n@@ -1486,7 +1433,7 @@ void static StartSync(const vector<CNode*> &vNodes) {\n void ThreadMessageHandler(void* parg)\n {\n     // Make this thread recognisable as the message handling thread\n-    RenameThread(\"novacoin-msghand\");\n+    RenameThread(\"42-msghand\");\n \n     try\n     {\n@@ -1641,7 +1588,7 @@ bool BindListenPort(const CService &addrBind, string& strError)\n     {\n         int nErr = WSAGetLastError();\n         if (nErr == WSAEADDRINUSE)\n-            strError = strprintf(_(\"Unable to bind to %s on this computer. NovaCoin is probably already running.\"), addrBind.ToString().c_str());\n+            strError = strprintf(_(\"Unable to bind to %s on this computer. 42 is probably already running.\"), addrBind.ToString().c_str());\n         else\n             strError = strprintf(_(\"Unable to bind to %s on this computer (bind returned error %d, %s)\"), addrBind.ToString().c_str(), nErr, strerror(nErr));\n         printf(\"%s\\n\", strError.c_str());\n@@ -1726,7 +1673,7 @@ void static Discover()\n void StartNode(void* parg)\n {\n     // Make this thread recognisable as the startup thread\n-    RenameThread(\"novacoin-start\");\n+    RenameThread(\"42-start\");\n \n     if (semOutbound == NULL) {\n         // initialize semaphore"
      },
      {
        "sha": "5baba08bb862b2ca804748848c56f5ebff7a8bb4",
        "filename": "src/protocol.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/src/protocol.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/src/protocol.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/protocol.h?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -19,7 +19,7 @@\n extern bool fTestNet;\n inline unsigned short GetDefaultPort()\n {\n-    return static_cast<unsigned short>(fTestNet ? 17777 : 7777);\n+    return static_cast<unsigned short>(fTestNet ? 42420 : 4242);\n }\n \n "
      },
      {
        "sha": "09bd9b5420d383ad4933928671f9219b7f77eca8",
        "filename": "src/qt/askpassphrasedialog.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/askpassphrasedialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/askpassphrasedialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/askpassphrasedialog.cpp?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -113,7 +113,7 @@ void AskPassphraseDialog::accept()\n                 {\n                     QMessageBox::warning(this, tr(\"Wallet encrypted\"),\n                                          \"<qt>\" + \n-                                         tr(\"NovaCoin will close now to finish the encryption process. \"\n+                                         tr(\"42 will close now to finish the encryption process. \"\n                                          \"Remember that encrypting your wallet cannot fully protect \"\n                                          \"your coins from being stolen by malware infecting your computer.\") + \n                                          \"<br><br><b>\" + \n@@ -175,7 +175,7 @@ void AskPassphraseDialog::accept()\n         {\n             QMessageBox::warning(this, tr(\"Wallet decrypted\"),\n                                      \"<qt>\" + \n-                                     tr(\"NovaCoin will close now to finish the decryption process. \") +\n+                                     tr(\"42 will close now to finish the decryption process. \") +\n                                      \"</b></qt>\");\n             QApplication::quit();\n         }"
      },
      {
        "sha": "0ecc84a8ebc2c0ee66f22027c7d25cbc6564097a",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -143,7 +143,7 @@ static std::string Translate(const char* psz)\n static void handleRunawayException(std::exception *e)\n {\n     PrintExceptionContinue(e, \"Runaway exception\");\n-    QMessageBox::critical(0, \"Runaway exception\", BitcoinGUI::tr(\"A fatal error occurred. NovaCoin can no longer continue safely and will quit.\") + QString(\"\\n\\n\") + QString::fromStdString(strMiscWarning));\n+    QMessageBox::critical(0, \"Runaway exception\", BitcoinGUI::tr(\"A fatal error occurred. 42 can no longer continue safely and will quit.\") + QString(\"\\n\\n\") + QString::fromStdString(strMiscWarning));\n     exit(1);\n }\n \n@@ -162,12 +162,12 @@ int main(int argc, char *argv[])\n \n     // Application identification (must be set before OptionsModel is initialized,\n     // as it is used to locate QSettings)\n-    app.setOrganizationName(\"NovaCoin\");\n-    app.setOrganizationDomain(\"novacoin.su\");\n+    app.setOrganizationName(\"42\");\n+    app.setOrganizationDomain(\"42-coin.org\");\n     if(GetBoolArg(\"-testnet\")) // Separate UI settings for testnet\n-        app.setApplicationName(\"NovaCoin-Qt-testnet\");\n+        app.setApplicationName(\"42-Qt-testnet\");\n     else\n-        app.setApplicationName(\"NovaCoin-Qt\");\n+        app.setApplicationName(\"42-Qt\");\n     // Now that QSettings are accessible, initialize translations\n     QTranslator qtTranslatorBase, qtTranslator, translatorBase, translator;\n     initTranslations(qtTranslatorBase, qtTranslator, translatorBase, translator);\n@@ -184,7 +184,7 @@ int main(int argc, char *argv[])\n     // ... then bitcoin.conf:\n     if (!boost::filesystem::is_directory(GetDataDir(false)))\n     {\n-        QMessageBox::critical(0, \"NovaCoin\",\n+        QMessageBox::critical(0, \"42\",\n                               QObject::tr(\"Error: Specified data directory \\\"%1\\\" does not exist.\").arg(QString::fromStdString(mapArgs[\"-datadir\"])));\n         return 1;\n     }"
      },
      {
        "sha": "38a69d7e68246f4c254ef320fa217914f2bfd273",
        "filename": "src/qt/bitcoin.qrc",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/bitcoin.qrc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/bitcoin.qrc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.qrc?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -1,10 +1,10 @@\n <RCC>\n     <qresource prefix=\"/icons\">\n-        <file alias=\"bitcoin\">res/icons/novacoin-128.png</file>\n+        <file alias=\"bitcoin\">res/icons/42-128.png</file>\n         <file alias=\"address-book\">res/icons/address-book.png</file>\n         <file alias=\"quit\">res/icons/quit.png</file>\n         <file alias=\"send\">res/icons/send.png</file>\n-        <file alias=\"toolbar\">res/icons/novacoin-16.png</file>\n+        <file alias=\"toolbar\">res/icons/42-16.png</file>\n         <file alias=\"connect_0\">res/icons/connect0_16.png</file>\n         <file alias=\"connect_1\">res/icons/connect1_16.png</file>\n         <file alias=\"connect_2\">res/icons/connect2_16.png</file>\n@@ -24,8 +24,8 @@\n         <file alias=\"editpaste\">res/icons/editpaste.png</file>\n         <file alias=\"editcopy\">res/icons/editcopy.png</file>\n         <file alias=\"add\">res/icons/add.png</file>\n-        <file alias=\"bitcoin_testnet\">res/icons/novacoin-128.png</file>\n-        <file alias=\"toolbar_testnet\">res/icons/novacoin-16.png</file>\n+        <file alias=\"bitcoin_testnet\">res/icons/42-128.png</file>\n+        <file alias=\"toolbar_testnet\">res/icons/42-16.png</file>\n         <file alias=\"edit\">res/icons/edit.png</file>\n         <file alias=\"history\">res/icons/history.png</file>\n         <file alias=\"overview\">res/icons/overview.png</file>"
      },
      {
        "sha": "8427cd4e106cec2a8ca87800cdbeeadf27797d6a",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 14,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -93,7 +93,7 @@ BitcoinGUI::BitcoinGUI(QWidget *parent):\n     optionsDialog(0)\n {\n     resize(850, 550);\n-    setWindowTitle(tr(\"NovaCoin\") + \" - \" + tr(\"Wallet\"));\n+    setWindowTitle(tr(\"42\") + \" - \" + tr(\"Wallet\"));\n #ifndef Q_OS_MAC\n     qApp->setWindowIcon(QIcon(\":icons/bitcoin\"));\n     setWindowIcon(QIcon(\":icons/bitcoin\"));\n@@ -248,7 +248,7 @@ void BitcoinGUI::createActions()\n     tabGroup->addAction(overviewAction);\n \n     sendCoinsAction = new QAction(QIcon(\":/icons/send\"), tr(\"&Send coins\"), this);\n-    sendCoinsAction->setToolTip(tr(\"Send coins to a NovaCoin address\"));\n+    sendCoinsAction->setToolTip(tr(\"Send coins to a 42 address\"));\n     sendCoinsAction->setCheckable(true);\n     sendCoinsAction->setShortcut(QKeySequence(Qt::ALT + Qt::Key_2));\n     tabGroup->addAction(sendCoinsAction);\n@@ -300,8 +300,8 @@ void BitcoinGUI::createActions()\n     quitAction->setStatusTip(tr(\"Quit application\"));\n     quitAction->setShortcut(QKeySequence(Qt::CTRL + Qt::Key_Q));\n     quitAction->setMenuRole(QAction::QuitRole);\n-    aboutAction = new QAction(QIcon(\":/icons/bitcoin\"), tr(\"&About NovaCoin\"), this);\n-    aboutAction->setStatusTip(tr(\"Show information about NovaCoin\"));\n+    aboutAction = new QAction(QIcon(\":/icons/bitcoin\"), tr(\"&About 42\"), this);\n+    aboutAction->setStatusTip(tr(\"Show information about 42\"));\n     aboutAction->setMenuRole(QAction::AboutRole);\n #if QT_VERSION < 0x050000\n     aboutQtAction = new QAction(QIcon(\":/trolltech/qmessagebox/images/qtlogo-64.png\"), tr(\"About &Qt\"), this);\n@@ -311,7 +311,7 @@ void BitcoinGUI::createActions()\n     aboutQtAction->setStatusTip(tr(\"Show information about Qt\"));\n     aboutQtAction->setMenuRole(QAction::AboutQtRole);\n     optionsAction = new QAction(QIcon(\":/icons/options\"), tr(\"&Options...\"), this);\n-    optionsAction->setStatusTip(tr(\"Modify configuration options for NovaCoin\"));\n+    optionsAction->setStatusTip(tr(\"Modify configuration options for 42\"));\n     optionsAction->setMenuRole(QAction::PreferencesRole);\n     toggleHideAction = new QAction(QIcon(\":/icons/bitcoin\"), tr(\"&Show / Hide\"), this);\n     encryptWalletAction = new QAction(QIcon(\":/icons/lock_closed\"), tr(\"&Encrypt Wallet...\"), this);\n@@ -326,11 +326,11 @@ void BitcoinGUI::createActions()\n     changePassphraseAction = new QAction(QIcon(\":/icons/key\"), tr(\"&Change Passphrase...\"), this);\n     changePassphraseAction->setStatusTip(tr(\"Change the passphrase used for wallet encryption\"));\n     signMessageAction = new QAction(QIcon(\":/icons/edit\"), tr(\"Sign &message...\"), this);\n-    signMessageAction->setStatusTip(tr(\"Sign messages with your Novacoin addresses to prove you own them\"));\n+    signMessageAction->setStatusTip(tr(\"Sign messages with your 42 addresses to prove you own them\"));\n     verifyMessageAction = new QAction(QIcon(\":/icons/transaction_0\"), tr(\"&Verify message...\"), this);\n-    verifyMessageAction->setStatusTip(tr(\"Verify messages to ensure they were signed with specified Novacoin addresses\"));\n+    verifyMessageAction->setStatusTip(tr(\"Verify messages to ensure they were signed with specified 42 addresses\"));\n     secondAuthAction = new QAction(QIcon(\":/icons/key\"), tr(\"Second &auth...\"), this);\n-    secondAuthAction->setStatusTip(tr(\"Second auth with your Novacoin addresses\"));\n+    secondAuthAction->setStatusTip(tr(\"Second auth with your 42 addresses\"));\n \n     lockWalletAction = new QAction(QIcon(\":/icons/lock_closed\"), tr(\"&Lock wallet\"), this);\n     lockWalletAction->setStatusTip(tr(\"Lock wallet\"));\n@@ -442,7 +442,7 @@ void BitcoinGUI::setClientModel(ClientModel *clientModel)\n #endif\n             if(trayIcon)\n             {\n-                trayIcon->setToolTip(tr(\"NovaCoin client\") + QString(\" \") + tr(\"[testnet]\"));\n+                trayIcon->setToolTip(tr(\"42 client\") + QString(\" \") + tr(\"[testnet]\"));\n                 trayIcon->setIcon(QIcon(\":/icons/toolbar_testnet\"));\n                 toggleHideAction->setIcon(QIcon(\":/icons/toolbar_testnet\"));\n             }\n@@ -510,7 +510,7 @@ void BitcoinGUI::createTrayIcon()\n     trayIcon = new QSystemTrayIcon(this);\n     trayIconMenu = new QMenu(this);\n     trayIcon->setContextMenu(trayIconMenu);\n-    trayIcon->setToolTip(tr(\"NovaCoin client\"));\n+    trayIcon->setToolTip(tr(\"42 client\"));\n     trayIcon->setIcon(QIcon(\":/icons/toolbar\"));\n     connect(trayIcon, SIGNAL(activated(QSystemTrayIcon::ActivationReason)),\n             this, SLOT(trayIconActivated(QSystemTrayIcon::ActivationReason)));\n@@ -583,7 +583,7 @@ void BitcoinGUI::setNumConnections(int count)\n     default: icon = \":/icons/connect_4\"; break;\n     }\n     labelConnectionsIcon->setPixmap(QIcon(icon).pixmap(STATUSBAR_ICONSIZE,STATUSBAR_ICONSIZE));\n-    labelConnectionsIcon->setToolTip(tr(\"%n active connection(s) to NovaCoin network\", \"\", count));\n+    labelConnectionsIcon->setToolTip(tr(\"%n active connection(s) to 42 network\", \"\", count));\n }\n \n void BitcoinGUI::setNumBlocks(int count, int nTotalBlocks)\n@@ -733,7 +733,7 @@ void BitcoinGUI::updateMining()\n \n void BitcoinGUI::message(const QString &title, const QString &message, unsigned int style, const QString &detail)\n {\n-    QString strTitle = tr(\"NovaCoin\") + \" - \";\n+    QString strTitle = tr(\"42\") + \" - \";\n     // Default to information icon\n     int nMBoxIcon = QMessageBox::Information;\n     int nNotifyIcon = Notificator::Information;\n@@ -979,7 +979,7 @@ void BitcoinGUI::dropEvent(QDropEvent *event)\n         if (nValidUrisFound)\n             gotoSendCoinsPage();\n         else\n-            notificator->notify(Notificator::Warning, tr(\"URI handling\"), tr(\"URI can not be parsed! This can be caused by an invalid NovaCoin address or malformed URI parameters.\"));\n+            notificator->notify(Notificator::Warning, tr(\"URI handling\"), tr(\"URI can not be parsed! This can be caused by an invalid 42 address or malformed URI parameters.\"));\n     }\n \n     event->acceptProposedAction();\n@@ -994,7 +994,7 @@ void BitcoinGUI::handleURI(QString strURI)\n         gotoSendCoinsPage();\n     }\n     else\n-        notificator->notify(Notificator::Warning, tr(\"URI handling\"), tr(\"URI can not be parsed! This can be caused by an invalid NovaCoin address or malformed URI parameters.\"));\n+        notificator->notify(Notificator::Warning, tr(\"URI handling\"), tr(\"URI can not be parsed! This can be caused by an invalid 42 address or malformed URI parameters.\"));\n }\n \n void BitcoinGUI::setEncryptionStatus(int status)"
      },
      {
        "sha": "1b4c3820dbfbd591dd5d06cb337d7b05688efe89",
        "filename": "src/qt/bitcoinstrings.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 13,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/bitcoinstrings.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/bitcoinstrings.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoinstrings.cpp?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -10,7 +10,7 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"%s, you must set a rpcpassword in the configuration file:\\n\"\n \" %s\\n\"\n \"It is recommended you use the following random password:\\n\"\n-\"rpcuser=novacoinrpc\\n\"\n+\"rpcuser=42rpc\\n\"\n \"rpcpassword=%s\\n\"\n \"(you do not need to remember this password)\\n\"\n \"If the file does not exist, create it with owner-readable-only file \"\n@@ -24,7 +24,7 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"An error occurred while setting up the RPC port %u for listening on IPv6, \"\n \"falling back to IPv4: %s\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n-\"Cannot obtain a lock on data directory %s.  NovaCoin is probably already \"\n+\"Cannot obtain a lock on data directory %s.  42 is probably already \"\n \"running.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Detach block and address databases. Increases shutdown time (default: 0)\"),\n@@ -44,21 +44,21 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Execute command when the best block changes (%s in cmd is replaced by block \"\n \"hash)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n-\"Listen for JSON-RPC connections on <port> (default: 8344 or testnet: 18344)\"),\n+\"Listen for JSON-RPC connections on <port> (default: 2121 or testnet: 21210)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Number of seconds to keep misbehaving peers from reconnecting (default: \"\n \"86400)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Set maximum size of high-priority/low-fee transactions in bytes (default: \"\n \"27000)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n-\"Unable to bind to %s on this computer. NovaCoin is probably already running.\"),\n+\"Unable to bind to %s on this computer. 42 is probably already running.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Warning: -paytxfee is set very high! This is the transaction fee you will \"\n \"pay if you send a transaction.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Warning: Please check that your computer's date and time are correct! If \"\n-\"your clock is wrong NovaCoin will not work properly.\"),\n+\"your clock is wrong 42 will not work properly.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Warning: error reading wallet.dat! All keys read correctly, but transaction \"\n \"data or address book entries might be missing or incorrect.\"),\n@@ -92,7 +92,7 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Done loading\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Error loading blkindex.dat\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Error loading wallet.dat\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Error loading wallet.dat: Wallet corrupted\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Error loading wallet.dat: Wallet requires newer version of NovaCoin\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Error loading wallet.dat: Wallet requires newer version of 42\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Error\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Error: Transaction creation failed  \"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Error: Wallet locked, unable to create transaction  \"),\n@@ -114,15 +114,15 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Invalid amount for -paytxfee=<amount>: '%s'\")\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Invalid amount for -reservebalance=<amount>\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Invalid amount\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"List commands\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Listen for connections on <port> (default: 7777 or testnet: 17777)\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Listen for connections on <port> (default: 4242 or testnet: 42420)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Loading addresses...\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Loading block index...\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Loading wallet...\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Maintain at most <n> connections to peers (default: 125)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Maximum per-connection receive buffer, <n>*1000 bytes (default: 5000)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Maximum per-connection send buffer, <n>*1000 bytes (default: 1000)\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"NovaCoin version\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"NovaCoin\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"42 version\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"42\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Only connect to nodes in network <net> (IPv4, IPv6 or Tor)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Options:\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Output extra debugging information. Implies all other -debug* options\"),\n@@ -134,7 +134,7 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Rescanning...\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Run in the background as a daemon and accept commands\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"SSL options: (see the Bitcoin Wiki for SSL setup instructions)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Select the version of socks proxy to use (4-5, default: 5)\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Send command to -server or novacoind\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Send command to -server or 42d\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Send commands to node running on <ip> (default: 127.0.0.1)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Send trace/debug info to console instead of debug.log file\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Send trace/debug info to debugger\"),\n@@ -147,10 +147,10 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Set key pool size to <n> (default: 100)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Set maximum block size in bytes (default: 250000)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Set minimum block size in bytes (default: 0)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Shrink debug.log file on client startup (default: 1 when no -debug)\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Specify configuration file (default: novacoin.conf)\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Specify configuration file (default: 42.conf)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Specify connection timeout in milliseconds (default: 5000)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Specify data directory\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Specify pid file (default: novacoind.pid)\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Specify pid file (default: 42d.pid)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Specify your own public address\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"This help message\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Threshold for disconnecting misbehaving peers (default: 100)\"),\n@@ -166,7 +166,7 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Use proxy to reach tor hidden services (defau\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Use the test network\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Username for JSON-RPC connections\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Verifying database integrity...\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Wallet needed to be rewritten: restart NovaCoin to complete\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Wallet needed to be rewritten: restart 42 to complete\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Warning: Disk space is low!\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Warning: This version is obsolete, upgrade required!\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"wallet.dat corrupt, salvage failed\"),"
      },
      {
        "sha": "c26c45669ea502e8381ec89b8e9549c99e00abb9",
        "filename": "src/qt/bitcoinunits.cpp",
        "status": "modified",
        "additions": 24,
        "deletions": 17,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/bitcoinunits.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/bitcoinunits.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoinunits.cpp?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -14,6 +14,7 @@ QList<BitcoinUnits::Unit> BitcoinUnits::availableUnits()\n     unitlist.append(BTC);\n     unitlist.append(mBTC);\n     unitlist.append(uBTC);\n+    unitlist.append(Dents);\n     return unitlist;\n }\n \n@@ -24,6 +25,7 @@ bool BitcoinUnits::valid(int unit)\n     case BTC:\n     case mBTC:\n     case uBTC:\n+    case Dents:\n         return true;\n     default:\n         return false;\n@@ -34,9 +36,10 @@ QString BitcoinUnits::name(int unit)\n {\n     switch(unit)\n     {\n-    case BTC: return QString(\"NVC\");\n-    case mBTC: return QString(\"mNVC\");\n-    case uBTC: return QString::fromUtf8(\"\u03bcNVC\");\n+    case BTC: return QString(\"42\");\n+    case mBTC: return QString(\"m42\");\n+    case uBTC: return QString::fromUtf8(\"\u03bc42\");\n+    case Dents: return QString(\"Dents\");\n     default: return QString(\"???\");\n     }\n }\n@@ -45,9 +48,10 @@ QString BitcoinUnits::description(int unit)\n {\n     switch(unit)\n     {\n-    case BTC: return QString(QObject::tr(\"NovaCoins\"));\n-    case mBTC: return QString(QObject::tr(\"Milli-NovaCoins (1 / 1,000)\"));\n-    case uBTC: return QString(QObject::tr(\"Micro-NovaCoins (1 / 1,000,000)\"));\n+    case BTC: return QString(\"42\");\n+    case mBTC: return QString(\"Milli-42 (1 / 1,000)\");\n+    case uBTC: return QString(\"Micro-42 (1 / 1,000,000)\");\n+    case Dents: return QString(\"Dents (1 / 100,000,000)\");\n     default: return QString(\"???\");\n     }\n }\n@@ -56,10 +60,11 @@ qint64 BitcoinUnits::factor(int unit)\n {\n     switch(unit)\n     {\n-    case BTC:  return 1000000;\n-    case mBTC: return 1000;\n-    case uBTC: return 1;\n-    default:   return 1000000;\n+    case BTC:  return 100000000;\n+    case mBTC: return 100000;\n+    case uBTC: return 100;\n+    case Dents: return 1;\n+    default:   return 100000000;\n     }\n }\n \n@@ -70,6 +75,7 @@ int BitcoinUnits::amountDigits(int unit)\n     case BTC: return 8; // 21,000,000 (# digits, without commas)\n     case mBTC: return 11; // 21,000,000,000\n     case uBTC: return 14; // 21,000,000,000,000\n+    case Dents: return 16; // 2,100,000,000,000,000\n     default: return 0;\n     }\n }\n@@ -78,14 +84,15 @@ int BitcoinUnits::decimals(int unit)\n {\n     switch(unit)\n     {\n-    case BTC: return 6;\n-    case mBTC: return 3;\n-    case uBTC: return 0;\n+    case BTC: return 8;\n+    case mBTC: return 5;\n+    case uBTC: return 2;\n+    case Dents: return 0;\n     default: return 0;\n     }\n }\n \n-QString BitcoinUnits::format(int unit, qint64 n, bool fPlus, uint8_t nNumberOfZeros)\n+QString BitcoinUnits::format(int unit, qint64 n, bool fPlus)\n {\n     // Note: not using straight sprintf here because we do NOT want\n     // localized number formatting.\n@@ -101,7 +108,7 @@ QString BitcoinUnits::format(int unit, qint64 n, bool fPlus, uint8_t nNumberOfZe\n \n     // Right-trim excess zeros after the decimal point\n     int nTrim = 0;\n-    for (int i = remainder_str.size()-1; i>=nNumberOfZeros && (remainder_str.at(i) == '0'); --i)\n+    for (int i = remainder_str.size()-1; i>=2 && (remainder_str.at(i) == '0'); --i)\n         ++nTrim;\n     remainder_str.chop(nTrim);\n \n@@ -112,9 +119,9 @@ QString BitcoinUnits::format(int unit, qint64 n, bool fPlus, uint8_t nNumberOfZe\n     return quotient_str + QString(\".\") + remainder_str;\n }\n \n-QString BitcoinUnits::formatWithUnit(int unit, qint64 amount, bool plussign, uint8_t nNumberOfZeros)\n+QString BitcoinUnits::formatWithUnit(int unit, qint64 amount, bool plussign)\n {\n-    return format(unit, amount, plussign, nNumberOfZeros) + QString(\" \") + name(unit);\n+    return format(unit, amount, plussign) + QString(\" \") + name(unit);\n }\n \n bool BitcoinUnits::parse(int unit, const QString &value, qint64 *val_out)"
      },
      {
        "sha": "259b436fd7c9d8c56b8f289ecc3060b66a04e3fc",
        "filename": "src/qt/bitcoinunits.h",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/bitcoinunits.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/bitcoinunits.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoinunits.h?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -20,7 +20,8 @@ class BitcoinUnits: public QAbstractListModel\n     {\n         BTC,\n         mBTC,\n-        uBTC\n+        uBTC,\n+\t\tDents\n     };\n \n     //! @name Static API\n@@ -42,9 +43,9 @@ class BitcoinUnits: public QAbstractListModel\n     //! Number of decimals left\n     static int decimals(int unit);\n     //! Format as string\n-    static QString format(int unit, qint64 amount, bool plussign=false, uint8_t nNumberOfZeros=2);\n+    static QString format(int unit, qint64 amount, bool plussign=false);\n     //! Format as string (with unit)\n-    static QString formatWithUnit(int unit, qint64 amount, bool plussign=false, uint8_t nNumberOfZeros=2);\n+    static QString formatWithUnit(int unit, qint64 amount, bool plussign=false);\n     //! Parse string to coin amount\n     static bool parse(int unit, const QString &value, qint64 *val_out);\n     //! Gets title for amount column including current display unit if optionsModel reference available */"
      },
      {
        "sha": "d14b522c9c35e68e7a7b49456359ca8743a80821",
        "filename": "src/qt/clientmodel.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/clientmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/clientmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.cpp?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -88,7 +88,7 @@ QDateTime ClientModel::getLastBlockDate() const\n     if (pindexBest)\n         return QDateTime::fromTime_t(pindexBest->GetBlockTime());\n     else\n-        return QDateTime::fromTime_t(1360105017); // Genesis block's time\n+        return QDateTime::fromTime_t(1478980800); // Genesis block's time\n }\n \n void ClientModel::updateTimer()"
      },
      {
        "sha": "584f8e347588830858340539a4596d52c82e8d7f",
        "filename": "src/qt/coincontroldialog.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/coincontroldialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/coincontroldialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/coincontroldialog.cpp?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -542,7 +542,7 @@ void CoinControlDialog::updateLabels(WalletModel *model, QWidget* dialog)\n     // stats\n     l1->setText(QString::number(nQuantity));                                     // Quantity\n     l2->setText(BitcoinUnits::formatWithUnit(nDisplayUnit, nAmount));            // Amount\n-    l3->setText(BitcoinUnits::formatWithUnit(nDisplayUnit, nPayFee, false, 3));  // Fee\n+    l3->setText(BitcoinUnits::formatWithUnit(nDisplayUnit, nPayFee));            // Fee\n     l4->setText(BitcoinUnits::formatWithUnit(nDisplayUnit, nAfterFee));          // After Fee\n     l5->setText(((nBytes > 0) ? ASYMP_UTF8 : \"\") + QString::number(nBytes));     // Bytes\n     l6->setText(sPriorityLabel);                                                 // Priority"
      },
      {
        "sha": "ffc8feedc4218bb3becee8fa49d7d1a19c300aa3",
        "filename": "src/qt/editaddressdialog.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/editaddressdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/editaddressdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/editaddressdialog.cpp?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -100,7 +100,7 @@ void EditAddressDialog::accept()\n             break;\n         case AddressTableModel::INVALID_ADDRESS:\n             QMessageBox::warning(this, windowTitle(),\n-                tr(\"The entered address \\\"%1\\\" is not a valid NovaCoin address.\").arg(ui->addressEdit->text()),\n+                tr(\"The entered address \\\"%1\\\" is not a valid 42 address.\").arg(ui->addressEdit->text()),\n                 QMessageBox::Ok, QMessageBox::Ok);\n             break;\n         case AddressTableModel::DUPLICATE_ADDRESS:"
      },
      {
        "sha": "807b220ee624c9c2943e32f2a4b18434bdb26c32",
        "filename": "src/qt/forms/aboutdialog.ui",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/forms/aboutdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/forms/aboutdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/aboutdialog.ui?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -11,7 +11,7 @@\n    </rect>\n   </property>\n   <property name=\"windowTitle\">\n-   <string>About NovaCoin</string>\n+   <string>About 42</string>\n   </property>\n   <layout class=\"QHBoxLayout\" name=\"horizontalLayout_2\">\n    <item>\n@@ -53,7 +53,7 @@\n           <cursorShape>IBeamCursor</cursorShape>\n          </property>\n          <property name=\"text\">\n-          <string>&lt;b&gt;NovaCoin&lt;/b&gt; version</string>\n+          <string>&lt;b&gt;42&lt;/b&gt; version</string>\n          </property>\n          <property name=\"textInteractionFlags\">\n           <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n@@ -98,7 +98,8 @@\n Copyright \u00a9 2011-2012 The PPCoin Developers\n Copyright \u00a9 2014 The Peerunity Developers\n Copyright \u00a9 2014 The EmerCoin Developers\n-Copyright \u00a9 2012-2016 The NovaCoin developers</string>\n+Copyright \u00a9 2012-2016 The NovaCoin developers\n+Copyright \u00a9 2016 The 42 developers</string>\n        </property>\n        <property name=\"textInteractionFlags\">\n         <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>"
      },
      {
        "sha": "a48158560922a8807e4c3c6414783173175d9f1f",
        "filename": "src/qt/forms/addressbookpage.ui",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/forms/addressbookpage.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/forms/addressbookpage.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/addressbookpage.ui?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -17,7 +17,7 @@\n    <item>\n     <widget class=\"QLabel\" name=\"labelExplanation\">\n      <property name=\"text\">\n-      <string>These are your NovaCoin addresses for receiving payments. You may want to give a different one to each sender so you can keep track of who is paying you.</string>\n+      <string>These are your 42 addresses for receiving payments. You may want to give a different one to each sender so you can keep track of who is paying you.</string>\n      </property>\n      <property name=\"textFormat\">\n       <enum>Qt::PlainText</enum>\n@@ -88,7 +88,7 @@\n      <item>\n       <widget class=\"QPushButton\" name=\"signMessage\">\n        <property name=\"toolTip\">\n-        <string>Sign a message to prove you own a NovaCoin address</string>\n+        <string>Sign a message to prove you own a 42 address</string>\n        </property>\n        <property name=\"text\">\n         <string>Sign &amp;Message</string>\n@@ -102,7 +102,7 @@\n      <item>\n       <widget class=\"QPushButton\" name=\"verifyMessage\">\n        <property name=\"toolTip\">\n-        <string>Verify a message to ensure it was signed with a specified NovaCoin address</string>\n+        <string>Verify a message to ensure it was signed with a specified 42 address</string>\n        </property>\n        <property name=\"text\">\n         <string>&amp;Verify Message</string>"
      },
      {
        "sha": "da4b82a3a9121c0fa0486979597053056371416f",
        "filename": "src/qt/forms/coincontroldialog.ui",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/forms/coincontroldialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/forms/coincontroldialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/coincontroldialog.ui?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -141,7 +141,7 @@\n           <enum>Qt::ActionsContextMenu</enum>\n          </property>\n          <property name=\"text\">\n-          <string notr=\"true\">0.00 NVC</string>\n+          <string notr=\"true\">0.00000000 42</string>\n          </property>\n          <property name=\"textInteractionFlags\">\n           <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n@@ -221,7 +221,7 @@\n           <enum>Qt::ActionsContextMenu</enum>\n          </property>\n          <property name=\"text\">\n-          <string notr=\"true\">0.00 NVC</string>\n+          <string notr=\"true\">0.00000000 42</string>\n          </property>\n          <property name=\"textInteractionFlags\">\n           <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n@@ -307,7 +307,7 @@\n           <enum>Qt::ActionsContextMenu</enum>\n          </property>\n          <property name=\"text\">\n-          <string notr=\"true\">0.00 NVC</string>\n+          <string notr=\"true\">0.00000000 42</string>\n          </property>\n          <property name=\"textInteractionFlags\">\n           <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n@@ -345,7 +345,7 @@\n           <enum>Qt::ActionsContextMenu</enum>\n          </property>\n          <property name=\"text\">\n-          <string notr=\"true\">0.00 NVC</string>\n+          <string notr=\"true\">0.00000000 42</string>\n          </property>\n          <property name=\"textInteractionFlags\">\n           <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>"
      },
      {
        "sha": "1e104ee6968407939ed8f1c9011e855754503fd7",
        "filename": "src/qt/forms/guiutil.cpp",
        "status": "added",
        "additions": 539,
        "deletions": 0,
        "changes": 539,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/forms/guiutil.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/forms/guiutil.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/guiutil.cpp?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -0,0 +1,539 @@\n+#include \"guiutil.h\"\n+#include \"bitcoinaddressvalidator.h\"\n+#include \"walletmodel.h\"\n+#include \"bitcoinunits.h\"\n+#include \"util.h\"\n+#include \"init.h\"\n+\n+#include <QString>\n+#include <QDateTime>\n+#include <QDoubleValidator>\n+#include <QFont>\n+#include <QLineEdit>\n+#if QT_VERSION >= 0x050000\n+#include <QUrlQuery>\n+#else\n+#include <QUrl>\n+#endif\n+#include <QTextDocument> // For Qt::mightBeRichText\n+#include <QAbstractItemView>\n+#include <QApplication>\n+#include <QClipboard>\n+#include <QFileDialog>\n+#include <QDesktopServices>\n+#include <QThread>\n+\n+#ifndef Q_MOC_RUN\n+#include <boost/filesystem.hpp>\n+#include <boost/filesystem/fstream.hpp>\n+#if BOOST_FILESYSTEM_VERSION >= 3\n+#include <boost/filesystem/detail/utf8_codecvt_facet.hpp>\n+#endif\n+#endif\n+\n+#ifdef WIN32\n+#ifdef _WIN32_WINNT\n+#undef _WIN32_WINNT\n+#endif\n+#define _WIN32_WINNT 0x0501\n+#ifdef _WIN32_IE\n+#undef _WIN32_IE\n+#endif\n+#define _WIN32_IE 0x0501\n+#define WIN32_LEAN_AND_MEAN 1\n+#ifndef NOMINMAX\n+#define NOMINMAX\n+#endif\n+#include \"shlwapi.h\"\n+#include \"shlobj.h\"\n+#include \"shellapi.h\"\n+#endif\n+\n+#if BOOST_FILESYSTEM_VERSION >= 3\n+static boost::filesystem::detail::utf8_codecvt_facet utf8;\n+#endif\n+\n+namespace GUIUtil {\n+\n+#if BOOST_FILESYSTEM_VERSION >= 3\n+boost::filesystem::path qstringToBoostPath(const QString &path)\n+{\n+    return boost::filesystem::path(path.toStdString(), utf8);\n+}\n+QString boostPathToQString(const boost::filesystem::path &path)\n+{\n+    return QString::fromStdString(path.string(utf8));\n+}\n+#else\n+#warning Conversion between boost path and QString can use invalid character encoding with boost_filesystem v2 and older\n+boost::filesystem::path qstringToBoostPath(const QString &path)\n+{\n+    return boost::filesystem::path(path.toStdString());\n+}\n+QString boostPathToQString(const boost::filesystem::path &path)\n+{\n+    return QString::fromStdString(path.string());\n+}\n+#endif\n+\n+QString dateTimeStr(const QDateTime &date)\n+{\n+    return date.date().toString(Qt::SystemLocaleShortDate) + QString(\" \") + date.toString(\"hh:mm\");\n+}\n+\n+QString dateTimeStr(qint64 nTime)\n+{\n+    return dateTimeStr(QDateTime::fromTime_t((qint32)nTime));\n+}\n+\n+QFont bitcoinAddressFont()\n+{\n+    QFont font(\"Monospace\");\n+    font.setStyleHint(QFont::TypeWriter);\n+    return font;\n+}\n+\n+void setupAddressWidget(QLineEdit *widget, QWidget *parent)\n+{\n+    widget->setMaxLength(BitcoinAddressValidator::MaxAddressLength);\n+    widget->setValidator(new BitcoinAddressValidator(parent));\n+    widget->setFont(bitcoinAddressFont());\n+}\n+\n+void setupAmountWidget(QLineEdit *widget, QWidget *parent)\n+{\n+    QDoubleValidator *amountValidator = new QDoubleValidator(parent);\n+    amountValidator->setDecimals(8);\n+    amountValidator->setBottom(0.0);\n+    widget->setValidator(amountValidator);\n+    widget->setAlignment(Qt::AlignRight|Qt::AlignVCenter);\n+}\n+\n+bool parseBitcoinURI(const QUrl &uri, SendCoinsRecipient *out)\n+{\n+    // 42: check prefix\n+    if(uri.scheme() != QString(\"42\"))\n+        return false;\n+\n+    SendCoinsRecipient rv;\n+    rv.address = uri.path();\n+    rv.amount = 0;\n+#if QT_VERSION < 0x050000\n+    QList<QPair<QString, QString> > items = uri.queryItems();\n+#else\n+    QUrlQuery uriQuery(uri);\n+    QList<QPair<QString, QString> > items = uriQuery.queryItems();\n+#endif\n+    for (QList<QPair<QString, QString> >::iterator i = items.begin(); i != items.end(); i++)\n+    {\n+        bool fShouldReturnFalse = false;\n+        if (i->first.startsWith(\"req-\"))\n+        {\n+            i->first.remove(0, 4);\n+            fShouldReturnFalse = true;\n+        }\n+\n+        if (i->first == \"label\")\n+        {\n+            rv.label = i->second;\n+            fShouldReturnFalse = false;\n+        }\n+        else if (i->first == \"amount\")\n+        {\n+            if(!i->second.isEmpty())\n+            {\n+                if(!BitcoinUnits::parse(BitcoinUnits::BTC, i->second, &rv.amount))\n+                {\n+                    return false;\n+                }\n+            }\n+            fShouldReturnFalse = false;\n+        }\n+\n+        if (fShouldReturnFalse)\n+            return false;\n+    }\n+    if(out)\n+    {\n+        *out = rv;\n+    }\n+    return true;\n+}\n+\n+bool parseBitcoinURI(QString uri, SendCoinsRecipient *out)\n+{\n+    // Convert 42:// to 42:\n+    //\n+    //    Cannot handle this later, because bitcoin:// will cause Qt to see the part after // as host,\n+    //    which will lower-case it (and thus invalidate the address).\n+    if(uri.startsWith(\"42://\"))\n+    {\n+        uri.replace(0, 10, \"42:\");\n+    }\n+    QUrl uriInstance(uri);\n+    return parseBitcoinURI(uriInstance, out);\n+}\n+\n+QString HtmlEscape(const QString& str, bool fMultiLine)\n+{\n+#if QT_VERSION < 0x050000\n+    QString escaped = Qt::escape(str);\n+#else\n+    QString escaped = str.toHtmlEscaped();\n+#endif\n+    if(fMultiLine)\n+    {\n+        escaped = escaped.replace(\"\\n\", \"<br>\\n\");\n+    }\n+    return escaped;\n+}\n+\n+QString HtmlEscape(const std::string& str, bool fMultiLine)\n+{\n+    return HtmlEscape(QString::fromStdString(str), fMultiLine);\n+}\n+\n+void copyEntryData(QAbstractItemView *view, int column, int role)\n+{\n+    if(!view || !view->selectionModel())\n+        return;\n+    QModelIndexList selection = view->selectionModel()->selectedRows(column);\n+\n+    if(!selection.isEmpty())\n+    {\n+        // Copy first item\n+        QApplication::clipboard()->setText(selection.at(0).data(role).toString());\n+    }\n+}\n+\n+QString getSaveFileName(QWidget *parent, const QString &caption,\n+                                 const QString &dir,\n+                                 const QString &filter,\n+                                 QString *selectedSuffixOut)\n+{\n+    QString selectedFilter;\n+    QString myDir;\n+    if(dir.isEmpty()) // Default to user documents location\n+    {\n+#if QT_VERSION < 0x050000\n+        myDir = QDesktopServices::storageLocation(QDesktopServices::DocumentsLocation);\n+#else\n+        myDir = QStandardPaths::writableLocation(QStandardPaths::DocumentsLocation);\n+#endif\n+    }\n+    else\n+    {\n+        myDir = dir;\n+    }\n+    QString result = QFileDialog::getSaveFileName(parent, caption, myDir, filter, &selectedFilter);\n+\n+    /* Extract first suffix from filter pattern \"Description (*.foo)\" or \"Description (*.foo *.bar ...) */\n+    QRegExp filter_re(\".* \\\\(\\\\*\\\\.(.*)[ \\\\)]\");\n+    QString selectedSuffix;\n+    if(filter_re.exactMatch(selectedFilter))\n+    {\n+        selectedSuffix = filter_re.cap(1);\n+    }\n+\n+    /* Add suffix if needed */\n+    QFileInfo info(result);\n+    if(!result.isEmpty())\n+    {\n+        if(info.suffix().isEmpty() && !selectedSuffix.isEmpty())\n+        {\n+            /* No suffix specified, add selected suffix */\n+            if(!result.endsWith(\".\"))\n+                result.append(\".\");\n+            result.append(selectedSuffix);\n+        }\n+    }\n+\n+    /* Return selected suffix if asked to */\n+    if(selectedSuffixOut)\n+    {\n+        *selectedSuffixOut = selectedSuffix;\n+    }\n+    return result;\n+}\n+\n+Qt::ConnectionType blockingGUIThreadConnection()\n+{\n+    if(QThread::currentThread() != QCoreApplication::instance()->thread())\n+    {\n+        return Qt::BlockingQueuedConnection;\n+    }\n+    else\n+    {\n+        return Qt::DirectConnection;\n+    }\n+}\n+\n+bool checkPoint(const QPoint &p, const QWidget *w)\n+{\n+    QWidget *atW = qApp->widgetAt(w->mapToGlobal(p));\n+    if (!atW) return false;\n+    return atW->topLevelWidget() == w;\n+}\n+\n+bool isObscured(QWidget *w)\n+{\n+    return !(checkPoint(QPoint(0, 0), w)\n+        && checkPoint(QPoint(w->width() - 1, 0), w)\n+        && checkPoint(QPoint(0, w->height() - 1), w)\n+        && checkPoint(QPoint(w->width() - 1, w->height() - 1), w)\n+        && checkPoint(QPoint(w->width() / 2, w->height() / 2), w));\n+}\n+\n+void openDebugLogfile()\n+{\n+    boost::filesystem::path pathDebug = GetDataDir() / \"debug.log\";\n+\n+    /* Open debug.log with the associated application */\n+    if (boost::filesystem::exists(pathDebug))\n+        QDesktopServices::openUrl(QUrl::fromLocalFile(QString::fromStdString(pathDebug.string())));\n+}\n+\n+void openConfigfile()\n+{\n+    boost::filesystem::path pathConfig = GetConfigFile();\n+\n+    /* Open 42.conf with the associated application */\n+    if (boost::filesystem::exists(pathConfig))\n+        QDesktopServices::openUrl(QUrl::fromLocalFile(QString::fromStdString(pathConfig.string())));\n+}\n+\n+ToolTipToRichTextFilter::ToolTipToRichTextFilter(int size_threshold, QObject *parent) :\n+    QObject(parent), size_threshold(size_threshold)\n+{\n+\n+}\n+\n+bool ToolTipToRichTextFilter::eventFilter(QObject *obj, QEvent *evt)\n+{\n+    if(evt->type() == QEvent::ToolTipChange)\n+    {\n+        QWidget *widget = static_cast<QWidget*>(obj);\n+        QString tooltip = widget->toolTip();\n+        if(tooltip.size() > size_threshold && !tooltip.startsWith(\"<qt>\") && !Qt::mightBeRichText(tooltip))\n+        {\n+            // Prefix <qt/> to make sure Qt detects this as rich text\n+            // Escape the current message as HTML and replace \\n by <br>\n+            tooltip = \"<qt>\" + HtmlEscape(tooltip, true) + \"<qt/>\";\n+            widget->setToolTip(tooltip);\n+            return true;\n+        }\n+    }\n+    return QObject::eventFilter(obj, evt);\n+}\n+\n+#ifdef WIN32\n+boost::filesystem::path static StartupShortcutPath()\n+{\n+    return GetSpecialFolderPath(CSIDL_STARTUP) / \"42.lnk\";\n+}\n+\n+bool GetStartOnSystemStartup()\n+{\n+    // check for Bitcoin.lnk\n+    return boost::filesystem::exists(StartupShortcutPath());\n+}\n+\n+bool SetStartOnSystemStartup(bool fAutoStart)\n+{\n+    // If the shortcut exists already, remove it for updating\n+    boost::filesystem::remove(StartupShortcutPath());\n+\n+    if (fAutoStart)\n+    {\n+        CoInitialize(NULL);\n+\n+        // Get a pointer to the IShellLink interface.\n+        IShellLink* psl = NULL;\n+        HRESULT hres = CoCreateInstance(CLSID_ShellLink, NULL,\n+                                CLSCTX_INPROC_SERVER, IID_IShellLink,\n+                                reinterpret_cast<void**>(&psl));\n+\n+        if (SUCCEEDED(hres))\n+        {\n+            // Get the current executable path\n+            TCHAR pszExePath[MAX_PATH];\n+            GetModuleFileName(NULL, pszExePath, sizeof(pszExePath));\n+\n+            TCHAR pszArgs[5] = TEXT(\"-min\");\n+\n+            // Set the path to the shortcut target\n+            psl->SetPath(pszExePath);\n+            PathRemoveFileSpec(pszExePath);\n+            psl->SetWorkingDirectory(pszExePath);\n+            psl->SetShowCmd(SW_SHOWMINNOACTIVE);\n+            psl->SetArguments(pszArgs);\n+\n+            // Query IShellLink for the IPersistFile interface for\n+            // saving the shortcut in persistent storage.\n+            IPersistFile* ppf = NULL;\n+            hres = psl->QueryInterface(IID_IPersistFile,\n+                                       reinterpret_cast<void**>(&ppf));\n+            if (SUCCEEDED(hres))\n+            {\n+                WCHAR pwsz[MAX_PATH];\n+                // Ensure that the string is ANSI.\n+                MultiByteToWideChar(CP_ACP, 0, StartupShortcutPath().string().c_str(), -1, pwsz, MAX_PATH);\n+                // Save the link by calling IPersistFile::Save.\n+                hres = ppf->Save(pwsz, TRUE);\n+                ppf->Release();\n+                psl->Release();\n+                CoUninitialize();\n+                return true;\n+            }\n+            psl->Release();\n+        }\n+        CoUninitialize();\n+        return false;\n+    }\n+    return true;\n+}\n+\n+#elif defined(LINUX)\n+\n+// Follow the Desktop Application Autostart Spec:\n+//  http://standards.freedesktop.org/autostart-spec/autostart-spec-latest.html\n+\n+boost::filesystem::path static GetAutostartDir()\n+{\n+    namespace fs = boost::filesystem;\n+\n+    char* pszConfigHome = getenv(\"XDG_CONFIG_HOME\");\n+    if (pszConfigHome) return fs::path(pszConfigHome) / \"autostart\";\n+    char* pszHome = getenv(\"HOME\");\n+    if (pszHome) return fs::path(pszHome) / \".config\" / \"autostart\";\n+    return fs::path();\n+}\n+\n+boost::filesystem::path static GetAutostartFilePath()\n+{\n+    return GetAutostartDir() / \"42.desktop\";\n+}\n+\n+bool GetStartOnSystemStartup()\n+{\n+    boost::filesystem::ifstream optionFile(GetAutostartFilePath());\n+    if (!optionFile.good())\n+        return false;\n+    // Scan through file for \"Hidden=true\":\n+    std::string line;\n+    while (!optionFile.eof())\n+    {\n+        getline(optionFile, line);\n+        if (line.find(\"Hidden\") != std::string::npos &&\n+            line.find(\"true\") != std::string::npos)\n+            return false;\n+    }\n+    optionFile.close();\n+\n+    return true;\n+}\n+\n+bool SetStartOnSystemStartup(bool fAutoStart)\n+{\n+    if (!fAutoStart)\n+        boost::filesystem::remove(GetAutostartFilePath());\n+    else\n+    {\n+        char pszExePath[MAX_PATH+1];\n+        memset(pszExePath, 0, sizeof(pszExePath));\n+        if (readlink(\"/proc/self/exe\", pszExePath, sizeof(pszExePath)-1) == -1)\n+            return false;\n+\n+        boost::filesystem::create_directories(GetAutostartDir());\n+\n+        boost::filesystem::ofstream optionFile(GetAutostartFilePath(), std::ios_base::out|std::ios_base::trunc);\n+        if (!optionFile.good())\n+            return false;\n+        // Write a bitcoin.desktop file to the autostart directory:\n+        optionFile << \"[Desktop Entry]\\n\";\n+        optionFile << \"Type=Application\\n\";\n+        optionFile << \"Name=42\\n\";\n+        optionFile << \"Exec=\" << pszExePath << \" -min\\n\";\n+        optionFile << \"Terminal=false\\n\";\n+        optionFile << \"Hidden=false\\n\";\n+        optionFile.close();\n+    }\n+    return true;\n+}\n+#else\n+\n+// TODO: OSX startup stuff; see:\n+// https://developer.apple.com/library/mac/#documentation/MacOSX/Conceptual/BPSystemStartup/Articles/CustomLogin.html\n+\n+bool GetStartOnSystemStartup() { return false; }\n+bool SetStartOnSystemStartup(bool fAutoStart) { return false; }\n+\n+#endif\n+\n+HelpMessageBox::HelpMessageBox(QWidget *parent) :\n+    QMessageBox(parent)\n+{\n+    header = tr(\"42-Qt\") + \" \" + tr(\"version\") + \" \" +\n+        QString::fromStdString(FormatFullVersion()) + \"\\n\\n\" +\n+        tr(\"Usage:\") + \"\\n\" +\n+        \"  42-qt [\" + tr(\"command-line options\") + \"]                     \" + \"\\n\";\n+\n+    coreOptions = QString::fromStdString(HelpMessage());\n+\n+    uiOptions = tr(\"UI options\") + \":\\n\" +\n+        \"  -lang=<lang>           \" + tr(\"Set language, for example \\\"de_DE\\\" (default: system locale)\") + \"\\n\" +\n+        \"  -min                   \" + tr(\"Start minimized\") + \"\\n\" +\n+        \"  -splash                \" + tr(\"Show splash screen on startup (default: 1)\") + \"\\n\";\n+\n+    setWindowTitle(tr(\"42-Qt\"));\n+    setFont(bitcoinAddressFont());\n+    setTextFormat(Qt::PlainText);\n+    // setMinimumWidth is ignored for QMessageBox so put in non-breaking spaces to make it wider.\n+    setText(header + QString(QChar(0x2003)).repeated(50));\n+    setDetailedText(coreOptions + \"\\n\" + uiOptions);\n+    addButton(\"OK\", QMessageBox::RejectRole);   //\u043a\u043d\u043e\u043f\u043a\u0430 OK \u0431\u0443\u0434\u0435\u0442 \u0441\u043f\u0440\u0430\u0432\u0430 \u043e\u0442 \u043a\u043d\u043e\u043f\u043a\u0438 \"\u0421\u043a\u0440\u044b\u0442\u044c \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u043e\u0441\u0442\u0438\"\n+    //addButton(\"OK\", QMessageBox::NoRole);     //\u043a\u043d\u043e\u043f\u043a\u0430 OK \u0431\u0443\u0434\u0435\u0442 \u0441\u043b\u0435\u0432\u0430 \u043e\u0442 \u043a\u043d\u043e\u043f\u043a\u0438 \"\u0421\u043a\u0440\u044b\u0442\u044c \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u043e\u0441\u0442\u0438\"\n+    setMouseTracking(true);\n+    setSizeGripEnabled(true);   \n+}\n+\n+void HelpMessageBox::printToConsole()\n+{\n+    // On other operating systems, the expected action is to print the message to the console.\n+    QString strUsage = header + \"\\n\" + coreOptions + \"\\n\" + uiOptions;\n+    fprintf(stdout, \"%s\", strUsage.toStdString().c_str());\n+}\n+\n+void HelpMessageBox::showOrPrint()\n+{\n+#if defined(WIN32)\n+        // On Windows, show a message box, as there is no stderr/stdout in windowed applications\n+        exec();\n+#else\n+        // On other operating systems, print help text to console\n+        printToConsole();\n+#endif\n+}\n+\n+QString formatDurationStr(int secs)\n+{\n+    QStringList strList;\n+    int days = secs / 86400;\n+    int hours = (secs % 86400) / 3600;\n+    int mins = (secs % 3600) / 60;\n+    int seconds = secs % 60;\n+\n+    if (days)\n+        strList.append(QString(QObject::tr(\"%1 d\")).arg(days));\n+    if (hours)\n+        strList.append(QString(QObject::tr(\"%1 h\")).arg(hours));\n+    if (mins)\n+        strList.append(QString(QObject::tr(\"%1 m\")).arg(mins));\n+    if (seconds || (!days && !hours && !mins))\n+        strList.append(QString(QObject::tr(\"%1 s\")).arg(seconds));\n+\n+    return strList.join(\" \");\n+}\n+\n+} // namespace GUIUtil\n+"
      },
      {
        "sha": "c531600b207c78c6141968366301e4b1fb9967b4",
        "filename": "src/qt/forms/intro.ui",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/forms/intro.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/forms/intro.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/intro.ui?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -20,7 +20,7 @@\n       <string notr=\"true\">QLabel { font-style:italic; }</string>\n      </property>\n      <property name=\"text\">\n-      <string>Welcome to novacoin-qt.</string>\n+      <string>Welcome to 42-qt.</string>\n      </property>\n      <property name=\"wordWrap\">\n       <bool>true</bool>\n@@ -46,7 +46,7 @@\n    <item>\n     <widget class=\"QLabel\" name=\"label_4\">\n      <property name=\"text\">\n-      <string>As this is the first time the program is launched, you can choose where novacoin-qt will store its data.</string>\n+      <string>As this is the first time the program is launched, you can choose where 42-qt will store its data.</string>\n      </property>\n      <property name=\"wordWrap\">\n       <bool>true</bool>\n@@ -56,7 +56,7 @@\n    <item>\n     <widget class=\"QLabel\" name=\"sizeWarningLabel\">\n      <property name=\"text\">\n-      <string>novacoin-qt will download and store a copy of the Novacoin block chain. At least %1GB of data will be stored in this directory, and it will grow over time. The wallet will also be stored in this directory.</string>\n+      <string>42-qt will download and store a copy of the 42 block chain. At least %1GB of data will be stored in this directory, and it will grow over time. The wallet will also be stored in this directory.</string>\n      </property>\n      <property name=\"wordWrap\">\n       <bool>true</bool>"
      },
      {
        "sha": "3e2cfcbd94fdf2569f018c7c16b3ccaab85f9f61",
        "filename": "src/qt/forms/multisigdialog.ui",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/forms/multisigdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/forms/multisigdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/multisigdialog.ui?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -399,7 +399,7 @@\n                 <item>\n                  <widget class=\"QLabel\" name=\"label\">\n                   <property name=\"text\">\n-                   <string notr=\"true\">NVC</string>\n+                   <string notr=\"true\">42</string>\n                   </property>\n                  </widget>\n                 </item>\n@@ -518,7 +518,7 @@\n                 <item>\n                  <widget class=\"QLabel\" name=\"label_2\">\n                   <property name=\"text\">\n-                   <string notr=\"true\">NVC</string>\n+                   <string notr=\"true\">42</string>\n                   </property>\n                  </widget>\n                 </item>\n@@ -556,7 +556,7 @@\n                 <item>\n                  <widget class=\"QLabel\" name=\"label_3\">\n                   <property name=\"text\">\n-                   <string notr=\"true\">NVC</string>\n+                   <string notr=\"true\">42</string>\n                   </property>\n                  </widget>\n                 </item>"
      },
      {
        "sha": "8f643e1825ef1c507307642719edd26ae2531376",
        "filename": "src/qt/forms/optionsdialog.ui",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/forms/optionsdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/forms/optionsdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/optionsdialog.ui?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -30,7 +30,7 @@\n        <item>\n         <widget class=\"QLabel\" name=\"transactionFeeInfoLabel\">\n          <property name=\"text\">\n-          <string>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.001 recommended.</string>\n+          <string>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.00000001 recommended.</string>\n          </property>\n          <property name=\"textFormat\">\n           <enum>Qt::PlainText</enum>\n@@ -83,10 +83,10 @@\n        <item>\n         <widget class=\"QCheckBox\" name=\"bitcoinAtStartup\">\n          <property name=\"toolTip\">\n-          <string>Automatically start NovaCoin after logging in to the system.</string>\n+          <string>Automatically start 42 after logging in to the system.</string>\n          </property>\n          <property name=\"text\">\n-          <string>&amp;Start NovaCoin on system login</string>\n+          <string>&amp;Start 42 on system login</string>\n          </property>\n         </widget>\n        </item>\n@@ -123,7 +123,7 @@\n        <item>\n         <widget class=\"QCheckBox\" name=\"connectSocks\">\n          <property name=\"toolTip\">\n-          <string>Connect to the NovaCoin network through a SOCKS proxy (e.g. when connecting through Tor).</string>\n+          <string>Connect to the 42 network through a SOCKS proxy (e.g. when connecting through Tor).</string>\n          </property>\n          <property name=\"text\">\n           <string>&amp;Connect through SOCKS proxy:</string>\n@@ -422,7 +422,7 @@\n          <item>\n           <widget class=\"QValueComboBox\" name=\"lang\">\n            <property name=\"toolTip\">\n-            <string>The user interface language can be set here. This setting will take effect after restarting NovaCoin.</string>\n+            <string>The user interface language can be set here. This setting will take effect after restarting 42.</string>\n            </property>\n           </widget>\n          </item>\n@@ -455,7 +455,7 @@\n        <item>\n         <widget class=\"QCheckBox\" name=\"displayAddresses\">\n          <property name=\"toolTip\">\n-          <string>Whether to show NovaCoin addresses in the transaction list or not.</string>\n+          <string>Whether to show 42 addresses in the transaction list or not.</string>\n          </property>\n          <property name=\"text\">\n           <string>&amp;Display addresses in transaction list</string>\n@@ -477,7 +477,7 @@\n          <item>\n           <widget class=\"QLabel\" name=\"thirdPartyTxUrlsLabel\">\n            <property name=\"toolTip\">\n-            <string>Third party URLs (e.g. explorer.novaco.in) that appear in the transactions tab as context menu items. %s in the URL is replaced by transaction hash. Multiple URLs are separated by vertical bar |.</string>\n+            <string>Third party URLs that appear in the transactions tab as context menu items. %s in the URL is replaced by transaction hash. Multiple URLs are separated by vertical bar |.</string>\n            </property>\n            <property name=\"text\">\n             <string>Third party transaction URLs</string>\n@@ -490,7 +490,7 @@\n          <item>\n           <widget class=\"QLineEdit\" name=\"thirdPartyTxUrls\">\n            <property name=\"toolTip\">\n-            <string>Third party URLs (e.g. explorer.novaco.in) that appear in the transactions tab as context menu items. %s in the URL is replaced by transaction hash. Multiple URLs are separated by vertical bar |.</string>\n+            <string>Third party URLs that appear in the transactions tab as context menu items. %s in the URL is replaced by transaction hash. Multiple URLs are separated by vertical bar |.</string>\n            </property>\n           </widget>\n          </item>"
      },
      {
        "sha": "e598a16c8edb1cc2821f1f4ee775557a19c1a2e7",
        "filename": "src/qt/forms/overviewpage.ui",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/forms/overviewpage.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/forms/overviewpage.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/overviewpage.ui?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -43,7 +43,7 @@\n           <item>\n            <widget class=\"QLabel\" name=\"labelWalletStatus\">\n             <property name=\"toolTip\">\n-             <string>The displayed information may be out of date. Your wallet automatically synchronizes with the NovaCoin network after a connection is established, but this process has not completed yet.</string>\n+             <string>The displayed information may be out of date. Your wallet automatically synchronizes with the 42 network after a connection is established, but this process has not completed yet.</string>\n             </property>\n             <property name=\"styleSheet\">\n              <string notr=\"true\">QLabel { color: red; }</string>\n@@ -107,7 +107,7 @@\n              <string>Your current available balance</string>\n             </property>\n             <property name=\"text\">\n-             <string notr=\"true\">0 NVC</string>\n+             <string notr=\"true\">0 42</string>\n             </property>\n             <property name=\"alignment\">\n              <set>Qt::AlignLeading|Qt::AlignLeft|Qt::AlignVCenter</set>\n@@ -142,7 +142,7 @@\n              <string>Total of coins that was staked, and do not yet count toward the current balance</string>\n             </property>\n             <property name=\"text\">\n-             <string notr=\"true\">0 NVC</string>\n+             <string notr=\"true\">0 42</string>\n             </property>\n             <property name=\"alignment\">\n              <set>Qt::AlignLeading|Qt::AlignLeft|Qt::AlignVCenter</set>\n@@ -177,7 +177,7 @@\n              <string>Total of transactions that have yet to be confirmed, and do not yet count toward the current balance</string>\n             </property>\n             <property name=\"text\">\n-             <string notr=\"true\">0 NVC</string>\n+             <string notr=\"true\">0 42</string>\n             </property>\n             <property name=\"alignment\">\n              <set>Qt::AlignLeading|Qt::AlignLeft|Qt::AlignVCenter</set>\n@@ -209,7 +209,7 @@\n              <string>Mined balance that has not yet matured</string>\n             </property>\n             <property name=\"text\">\n-             <string notr=\"true\">0 NVC</string>\n+             <string notr=\"true\">0 42</string>\n             </property>\n             <property name=\"alignment\">\n              <set>Qt::AlignLeading|Qt::AlignLeft|Qt::AlignVCenter</set>\n@@ -244,7 +244,7 @@\n              <string>Your unspendable balance</string>\n             </property>\n             <property name=\"text\">\n-             <string notr=\"true\">0 NVC</string>\n+             <string notr=\"true\">0 42</string>\n             </property>\n             <property name=\"alignment\">\n              <set>Qt::AlignLeading|Qt::AlignLeft|Qt::AlignVCenter</set>\n@@ -289,7 +289,7 @@\n              <string>Your current total balance</string>\n             </property>\n             <property name=\"text\">\n-             <string notr=\"true\">0 NVC</string>\n+             <string notr=\"true\">0 42</string>\n             </property>\n             <property name=\"alignment\">\n              <set>Qt::AlignLeading|Qt::AlignLeft|Qt::AlignVCenter</set>\n@@ -362,7 +362,7 @@\n           <item>\n            <widget class=\"QLabel\" name=\"labelTransactionsStatus\">\n             <property name=\"toolTip\">\n-             <string>The displayed information may be out of date. Your wallet automatically synchronizes with the NovaCoin network after a connection is established, but this process has not completed yet.</string>\n+             <string>The displayed information may be out of date. Your wallet automatically synchronizes with the 42 network after a connection is established, but this process has not completed yet.</string>\n             </property>\n             <property name=\"styleSheet\">\n              <string notr=\"true\">QLabel { color: red; }</string>"
      },
      {
        "sha": "110e624ea4ae09d768ac241b2a95b22923af5f5b",
        "filename": "src/qt/forms/rpcconsole.ui",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/forms/rpcconsole.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/forms/rpcconsole.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/rpcconsole.ui?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -11,7 +11,7 @@\n    </rect>\n   </property>\n   <property name=\"windowTitle\">\n-   <string>NovaCoin - Debug window</string>\n+   <string>42 - Debug window</string>\n   </property>\n   <layout class=\"QVBoxLayout\" name=\"verticalLayout_2\">\n    <item>\n@@ -92,7 +92,7 @@\n        <item row=\"16\" column=\"0\">\n         <widget class=\"QPushButton\" name=\"openDebugLogfileButton\">\n          <property name=\"toolTip\">\n-          <string>Open the NovaCoin debug log file from the current data directory. This can take a few seconds for large log files.</string>\n+          <string>Open the 42 debug log file from the current data directory. This can take a few seconds for large log files.</string>\n          </property>\n          <property name=\"text\">\n           <string>&amp;Open</string>\n@@ -144,7 +144,7 @@\n        <item row=\"18\" column=\"0\">\n         <widget class=\"QPushButton\" name=\"showCLOptionsButton\">\n          <property name=\"toolTip\">\n-          <string>Show the NovaCoin-Qt help message to get a list with possible NovaCoin command-line options.</string>\n+          <string>Show the 42-Qt help message to get a list with possible 42 command-line options.</string>\n          </property>\n          <property name=\"text\">\n           <string>&amp;Show</string>\n@@ -380,7 +380,7 @@\n           </font>\n          </property>\n          <property name=\"text\">\n-          <string>NovaCoin Core</string>\n+          <string>42 Core</string>\n          </property>\n         </widget>\n        </item>\n@@ -423,7 +423,7 @@\n        <item row=\"16\" column=\"2\">\n         <widget class=\"QPushButton\" name=\"openConfigurationfileButton\">\n          <property name=\"toolTip\">\n-          <string>Open the NovaCoin configuration file from the current data directory.</string>\n+          <string>Open the 42 configuration file from the current data directory.</string>\n          </property>\n          <property name=\"text\">\n           <string>O&amp;pen</string>"
      },
      {
        "sha": "16fe6c97da9eb1d5a95b7a96e4056914491b1eb1",
        "filename": "src/qt/forms/sendcoinsdialog.ui",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/forms/sendcoinsdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/forms/sendcoinsdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/sendcoinsdialog.ui?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -321,7 +321,7 @@\n                   <enum>Qt::ActionsContextMenu</enum>\n                  </property>\n                  <property name=\"text\">\n-                  <string notr=\"true\">0.00 NVC</string>\n+                  <string notr=\"true\">0.00000000 42</string>\n                  </property>\n                  <property name=\"textInteractionFlags\">\n                   <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n@@ -407,7 +407,7 @@\n                   <enum>Qt::ActionsContextMenu</enum>\n                  </property>\n                  <property name=\"text\">\n-                  <string notr=\"true\">0.00 NVC</string>\n+                  <string notr=\"true\">0.00000000 42</string>\n                  </property>\n                  <property name=\"textInteractionFlags\">\n                   <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n@@ -493,7 +493,7 @@\n                   <enum>Qt::ActionsContextMenu</enum>\n                  </property>\n                  <property name=\"text\">\n-                  <string notr=\"true\">0.00 NVC</string>\n+                  <string notr=\"true\">0.00000000 42</string>\n                  </property>\n                  <property name=\"textInteractionFlags\">\n                   <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n@@ -525,7 +525,7 @@\n                   <enum>Qt::ActionsContextMenu</enum>\n                  </property>\n                  <property name=\"text\">\n-                  <string notr=\"true\">0.00 NVC</string>\n+                  <string notr=\"true\">0.00000000 42</string>\n                  </property>\n                  <property name=\"textInteractionFlags\">\n                   <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n@@ -738,7 +738,7 @@\n           <cursorShape>IBeamCursor</cursorShape>\n          </property>\n          <property name=\"text\">\n-          <string notr=\"true\">123.456 NVC</string>\n+          <string notr=\"true\">123.456 42</string>\n          </property>\n          <property name=\"textInteractionFlags\">\n           <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>"
      },
      {
        "sha": "ec7e068b271c6e863ab7974f3f6a1e0d7edb9453",
        "filename": "src/qt/forms/sendcoinsentry.ui",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/forms/sendcoinsentry.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/forms/sendcoinsentry.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/sendcoinsentry.ui?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -90,7 +90,7 @@\n      <item>\n       <widget class=\"QValidatedLineEdit\" name=\"payTo\" native=\"true\">\n        <property name=\"toolTip\">\n-        <string>The address to send the payment to  (e.g. 4Zo1ga6xuKuQ7JV7M9rGDoxdbYwV5zgQJ5)</string>\n+        <string>The address to send the payment to  (e.g. 4VsEs7wqRpoiTpmqViWRtse1P3CNgvBw4g)</string>\n        </property>\n        <property name=\"maxLength\" stdset=\"0\">\n         <number>100</number>"
      },
      {
        "sha": "349d08985ee3f443c7192ba20ebea4ad08d9b09c",
        "filename": "src/qt/forms/signverifymessagedialog.ui",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/forms/signverifymessagedialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/forms/signverifymessagedialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/signverifymessagedialog.ui?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -48,7 +48,7 @@\n          <item>\n           <widget class=\"QValidatedLineEdit\" name=\"addressIn_SM\">\n            <property name=\"toolTip\">\n-            <string>The address to sign the message with (e.g. 4Zo1ga6xuKuQ7JV7M9rGDoxdbYwV5zgQJ5)</string>\n+            <string>The address to sign the message with (e.g. 4VsEs7wqRpoiTpmqViWRtse1P3CNgvBw4g)</string>\n            </property>\n            <property name=\"maxLength\">\n             <number>34</number>\n@@ -145,7 +145,7 @@\n          <item>\n           <widget class=\"QPushButton\" name=\"signMessageButton_SM\">\n            <property name=\"toolTip\">\n-            <string>Sign the message to prove you own this NovaCoin address</string>\n+            <string>Sign the message to prove you own this 42 address</string>\n            </property>\n            <property name=\"text\">\n             <string>&amp;Sign Message</string>\n@@ -251,7 +251,7 @@\n          <item>\n           <widget class=\"QValidatedLineEdit\" name=\"addressIn_VM\">\n            <property name=\"toolTip\">\n-            <string>The address the message was signed with (e.g. 4Zo1ga6xuKuQ7JV7M9rGDoxdbYwV5zgQJ5)</string>\n+            <string>The address the message was signed with (e.g. 4VsEs7wqRpoiTpmqViWRtse1P3CNgvBw4g)</string>\n            </property>\n            <property name=\"maxLength\">\n             <number>34</number>\n@@ -291,7 +291,7 @@\n          <item>\n           <widget class=\"QPushButton\" name=\"verifyMessageButton_VM\">\n            <property name=\"toolTip\">\n-            <string>Verify the message to ensure it was signed with the specified NovaCoin address</string>\n+            <string>Verify the message to ensure it was signed with the specified 42 address</string>\n            </property>\n            <property name=\"text\">\n             <string>&amp;Verify Message</string>"
      },
      {
        "sha": "1e104ee6968407939ed8f1c9011e855754503fd7",
        "filename": "src/qt/guiutil.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 12,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/guiutil.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/guiutil.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.cpp?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -111,8 +111,8 @@ void setupAmountWidget(QLineEdit *widget, QWidget *parent)\n \n bool parseBitcoinURI(const QUrl &uri, SendCoinsRecipient *out)\n {\n-    // NovaCoin: check prefix\n-    if(uri.scheme() != QString(\"novacoin\"))\n+    // 42: check prefix\n+    if(uri.scheme() != QString(\"42\"))\n         return false;\n \n     SendCoinsRecipient rv;\n@@ -162,13 +162,13 @@ bool parseBitcoinURI(const QUrl &uri, SendCoinsRecipient *out)\n \n bool parseBitcoinURI(QString uri, SendCoinsRecipient *out)\n {\n-    // Convert novacoin:// to novacoin:\n+    // Convert 42:// to 42:\n     //\n     //    Cannot handle this later, because bitcoin:// will cause Qt to see the part after // as host,\n     //    which will lower-case it (and thus invalidate the address).\n-    if(uri.startsWith(\"novacoin://\"))\n+    if(uri.startsWith(\"42://\"))\n     {\n-        uri.replace(0, 10, \"novacoin:\");\n+        uri.replace(0, 10, \"42:\");\n     }\n     QUrl uriInstance(uri);\n     return parseBitcoinURI(uriInstance, out);\n@@ -297,7 +297,7 @@ void openConfigfile()\n {\n     boost::filesystem::path pathConfig = GetConfigFile();\n \n-    /* Open novacoin.conf with the associated application */\n+    /* Open 42.conf with the associated application */\n     if (boost::filesystem::exists(pathConfig))\n         QDesktopServices::openUrl(QUrl::fromLocalFile(QString::fromStdString(pathConfig.string())));\n }\n@@ -329,7 +329,7 @@ bool ToolTipToRichTextFilter::eventFilter(QObject *obj, QEvent *evt)\n #ifdef WIN32\n boost::filesystem::path static StartupShortcutPath()\n {\n-    return GetSpecialFolderPath(CSIDL_STARTUP) / \"NovaCoin.lnk\";\n+    return GetSpecialFolderPath(CSIDL_STARTUP) / \"42.lnk\";\n }\n \n bool GetStartOnSystemStartup()\n@@ -411,7 +411,7 @@ boost::filesystem::path static GetAutostartDir()\n \n boost::filesystem::path static GetAutostartFilePath()\n {\n-    return GetAutostartDir() / \"novacoin.desktop\";\n+    return GetAutostartDir() / \"42.desktop\";\n }\n \n bool GetStartOnSystemStartup()\n@@ -452,7 +452,7 @@ bool SetStartOnSystemStartup(bool fAutoStart)\n         // Write a bitcoin.desktop file to the autostart directory:\n         optionFile << \"[Desktop Entry]\\n\";\n         optionFile << \"Type=Application\\n\";\n-        optionFile << \"Name=NovaCoin\\n\";\n+        optionFile << \"Name=42\\n\";\n         optionFile << \"Exec=\" << pszExePath << \" -min\\n\";\n         optionFile << \"Terminal=false\\n\";\n         optionFile << \"Hidden=false\\n\";\n@@ -473,10 +473,10 @@ bool SetStartOnSystemStartup(bool fAutoStart) { return false; }\n HelpMessageBox::HelpMessageBox(QWidget *parent) :\n     QMessageBox(parent)\n {\n-    header = tr(\"NovaCoin-Qt\") + \" \" + tr(\"version\") + \" \" +\n+    header = tr(\"42-Qt\") + \" \" + tr(\"version\") + \" \" +\n         QString::fromStdString(FormatFullVersion()) + \"\\n\\n\" +\n         tr(\"Usage:\") + \"\\n\" +\n-        \"  novacoin-qt [\" + tr(\"command-line options\") + \"]                     \" + \"\\n\";\n+        \"  42-qt [\" + tr(\"command-line options\") + \"]                     \" + \"\\n\";\n \n     coreOptions = QString::fromStdString(HelpMessage());\n \n@@ -485,7 +485,7 @@ HelpMessageBox::HelpMessageBox(QWidget *parent) :\n         \"  -min                   \" + tr(\"Start minimized\") + \"\\n\" +\n         \"  -splash                \" + tr(\"Show splash screen on startup (default: 1)\") + \"\\n\";\n \n-    setWindowTitle(tr(\"NovaCoin-Qt\"));\n+    setWindowTitle(tr(\"42-Qt\"));\n     setFont(bitcoinAddressFont());\n     setTextFormat(Qt::PlainText);\n     // setMinimumWidth is ignored for QMessageBox so put in non-breaking spaces to make it wider."
      },
      {
        "sha": "04509c2e6b5739d1b1dbf42ccd82e5a765931731",
        "filename": "src/qt/guiutil.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/guiutil.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/guiutil.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.h?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -40,7 +40,7 @@ namespace GUIUtil\n     void setupAddressWidget(QLineEdit *widget, QWidget *parent);\n     void setupAmountWidget(QLineEdit *widget, QWidget *parent);\n \n-    // Parse \"novacoin:\" URI into recipient object, return true on successful parsing\n+    // Parse \"42:\" URI into recipient object, return true on successful parsing\n     // See Bitcoin URI definition discussion here: https://bitcointalk.org/index.php?topic=33490.0\n     bool parseBitcoinURI(const QUrl &uri, SendCoinsRecipient *out);\n     bool parseBitcoinURI(QString uri, SendCoinsRecipient *out);\n@@ -83,7 +83,7 @@ namespace GUIUtil\n \n     // Open debug.log\n     void openDebugLogfile();\n-    // Open novacoin.conf\n+    // Open 42.conf\n     void openConfigfile();\n     /** Qt event filter that intercepts ToolTipChange events, and replaces the tooltip with a rich text\n       representation if needed. This assures that Qt can word-wrap long tooltip messages."
      },
      {
        "sha": "bca1bc8a7b5b4a98bb176463de1ffb667bf4ce1a",
        "filename": "src/qt/locale/bitcoin_en.ts",
        "status": "modified",
        "additions": 151,
        "deletions": 154,
        "changes": 305,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/locale/bitcoin_en.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/locale/bitcoin_en.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_en.ts?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -6,26 +6,28 @@\n     <name>AboutDialog</name>\n     <message>\n         <location filename=\"../forms/aboutdialog.ui\" line=\"14\"/>\n-        <source>About NovaCoin</source>\n-        <translation>About NovaCoin</translation>\n+        <source>About 42</source>\n+        <translation>About 42</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/aboutdialog.ui\" line=\"56\"/>\n-        <source>&lt;b&gt;NovaCoin&lt;/b&gt; version</source>\n-        <translation>&lt;b&gt;NovaCoin&lt;/b&gt; version</translation>\n+        <source>&lt;b&gt;42&lt;/b&gt; version</source>\n+        <translation>&lt;b&gt;42&lt;/b&gt; version</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/aboutdialog.ui\" line=\"97\"/>\n         <source>Copyright \u00a9 2009-2016 The Bitcoin developers\n Copyright \u00a9 2011-2012 The PPCoin Developers\n Copyright \u00a9 2014 The Peerunity Developers\n Copyright \u00a9 2014 The EmerCoin Developers\n-Copyright \u00a9 2012-2016 The NovaCoin developers</source>\n+Copyright \u00a9 2012-2016 The NovaCoin developers\n+Copyright \u00a9 2016 The 42 developers</source>\n         <translation>Copyright \u00a9 2009-2016 The Bitcoin developers\n Copyright \u00a9 2011-2012 The PPCoin Developers\n Copyright \u00a9 2014 The Peerunity Developers\n Copyright \u00a9 2014 The EmerCoin Developers\n-Copyright \u00a9 2012-2016 The NovaCoin developers</translation>\n+Copyright \u00a9 2012-2016 The NovaCoin developers\n+Copyright \u00a9 2016 The 42 developers</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/aboutdialog.ui\" line=\"114\"/>\n@@ -46,8 +48,8 @@ Copyright \u00a9 2012-2016 The NovaCoin developers</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/addressbookpage.ui\" line=\"20\"/>\n-        <source>These are your NovaCoin addresses for receiving payments. You may want to give a different one to each sender so you can keep track of who is paying you.</source>\n-        <translation>These are your NovaCoin addresses for receiving payments. You may want to give a different one to each sender so you can keep track of who is paying you.</translation>\n+        <source>These are your 42 addresses for receiving payments. You may want to give a different one to each sender so you can keep track of who is paying you.</source>\n+        <translation>These are your 42 addresses for receiving payments. You may want to give a different one to each sender so you can keep track of who is paying you.</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/addressbookpage.ui\" line=\"36\"/>\n@@ -81,8 +83,8 @@ Copyright \u00a9 2012-2016 The NovaCoin developers</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/addressbookpage.ui\" line=\"102\"/>\n-        <source>Sign a message to prove you own a NovaCoin address</source>\n-        <translation>Sign a message to prove you own a NovaCoin address</translation>\n+        <source>Sign a message to prove you own a 42 address</source>\n+        <translation>Sign a message to prove you own a 42 address</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/addressbookpage.ui\" line=\"105\"/>\n@@ -91,8 +93,8 @@ Copyright \u00a9 2012-2016 The NovaCoin developers</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/addressbookpage.ui\" line=\"116\"/>\n-        <source>Verify a message to ensure it was signed with a specified NovaCoin address</source>\n-        <translation>Verify a message to ensure it was signed with a specified NovaCoin address</translation>\n+        <source>Verify a message to ensure it was signed with a specified 42 address</source>\n+        <translation>Verify a message to ensure it was signed with a specified 42 address</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/addressbookpage.ui\" line=\"119\"/>\n@@ -243,8 +245,8 @@ Copyright \u00a9 2012-2016 The NovaCoin developers</translation>\n     </message>\n     <message>\n         <location filename=\"../askpassphrasedialog.cpp\" line=\"116\"/>\n-        <source>NovaCoin will close now to finish the encryption process. Remember that encrypting your wallet cannot fully protect your coins from being stolen by malware infecting your computer.</source>\n-        <translation>NovaCoin will close now to finish the encryption process. Remember that encrypting your wallet cannot fully protect your coins from being stolen by malware infecting your computer.</translation>\n+        <source>42 will close now to finish the encryption process. Remember that encrypting your wallet cannot fully protect your coins from being stolen by malware infecting your computer.</source>\n+        <translation>42 will close now to finish the encryption process. Remember that encrypting your wallet cannot fully protect your coins from being stolen by malware infecting your computer.</translation>\n     </message>\n     <message>\n         <location filename=\"../askpassphrasedialog.cpp\" line=\"120\"/>\n@@ -296,8 +298,8 @@ Copyright \u00a9 2012-2016 The NovaCoin developers</translation>\n     </message>\n     <message>\n         <location filename=\"../askpassphrasedialog.cpp\" line=\"178\"/>\n-        <source>NovaCoin will close now to finish the decryption process. </source>\n-        <translation>NovaCoin will close now to finish the decryption process. </translation>\n+        <source>42 will close now to finish the decryption process. </source>\n+        <translation>42 will close now to finish the decryption process. </translation>\n     </message>\n     <message>\n         <location filename=\"../askpassphrasedialog.cpp\" line=\"189\"/>\n@@ -315,14 +317,14 @@ Copyright \u00a9 2012-2016 The NovaCoin developers</translation>\n     <name>BitcoinGUI</name>\n     <message>\n         <location filename=\"../bitcoin.cpp\" line=\"146\"/>\n-        <source>A fatal error occurred. NovaCoin can no longer continue safely and will quit.</source>\n-        <translation>A fatal error occurred. NovaCoin can no longer continue safely and will quit.</translation>\n+        <source>A fatal error occurred. 42 can no longer continue safely and will quit.</source>\n+        <translation>A fatal error occurred. 42 can no longer continue safely and will quit.</translation>\n     </message>\n     <message>\n         <location filename=\"../bitcoingui.cpp\" line=\"96\"/>\n         <location filename=\"../bitcoingui.cpp\" line=\"736\"/>\n-        <source>NovaCoin</source>\n-        <translation>NovaCoin</translation>\n+        <source>42</source>\n+        <translation>42</translation>\n     </message>\n     <message>\n         <location filename=\"../bitcoingui.cpp\" line=\"96\"/>\n@@ -346,8 +348,8 @@ Copyright \u00a9 2012-2016 The NovaCoin developers</translation>\n     </message>\n     <message>\n         <location filename=\"../bitcoingui.cpp\" line=\"251\"/>\n-        <source>Send coins to a NovaCoin address</source>\n-        <translation>Send coins to a NovaCoin address</translation>\n+        <source>Send coins to a 42 address</source>\n+        <translation>Send coins to a 42 address</translation>\n     </message>\n     <message>\n         <location filename=\"../bitcoingui.cpp\" line=\"256\"/>\n@@ -411,13 +413,13 @@ Copyright \u00a9 2012-2016 The NovaCoin developers</translation>\n     </message>\n     <message>\n         <location filename=\"../bitcoingui.cpp\" line=\"303\"/>\n-        <source>&amp;About NovaCoin</source>\n-        <translation>&amp;About NovaCoin</translation>\n+        <source>&amp;About 42</source>\n+        <translation>&amp;About 42</translation>\n     </message>\n     <message>\n         <location filename=\"../bitcoingui.cpp\" line=\"304\"/>\n-        <source>Show information about NovaCoin</source>\n-        <translation>Show information about NovaCoin</translation>\n+        <source>Show information about 42</source>\n+        <translation>Show information about 42</translation>\n     </message>\n     <message>\n         <location filename=\"../bitcoingui.cpp\" line=\"307\"/>\n@@ -437,8 +439,8 @@ Copyright \u00a9 2012-2016 The NovaCoin developers</translation>\n     </message>\n     <message>\n         <location filename=\"../bitcoingui.cpp\" line=\"314\"/>\n-        <source>Modify configuration options for NovaCoin</source>\n-        <translation>Modify configuration options for NovaCoin</translation>\n+        <source>Modify configuration options for 42</source>\n+        <translation>Modify configuration options for 42</translation>\n     </message>\n     <message>\n         <location filename=\"../bitcoingui.cpp\" line=\"316\"/>\n@@ -502,8 +504,8 @@ Copyright \u00a9 2012-2016 The NovaCoin developers</translation>\n     </message>\n     <message>\n         <location filename=\"../bitcoingui.cpp\" line=\"329\"/>\n-        <source>Sign messages with your Novacoin addresses to prove you own them</source>\n-        <translation>Sign messages with your Novacoin addresses to prove you own them</translation>\n+        <source>Sign messages with your 42 addresses to prove you own them</source>\n+        <translation>Sign messages with your 42 addresses to prove you own them</translation>\n     </message>\n     <message>\n         <location filename=\"../bitcoingui.cpp\" line=\"330\"/>\n@@ -512,8 +514,8 @@ Copyright \u00a9 2012-2016 The NovaCoin developers</translation>\n     </message>\n     <message>\n         <location filename=\"../bitcoingui.cpp\" line=\"331\"/>\n-        <source>Verify messages to ensure they were signed with specified Novacoin addresses</source>\n-        <translation>Verify messages to ensure they were signed with specified Novacoin addresses</translation>\n+        <source>Verify messages to ensure they were signed with specified 42 addresses</source>\n+        <translation>Verify messages to ensure they were signed with specified 42 addresses</translation>\n     </message>\n     <message>\n         <location filename=\"../bitcoingui.cpp\" line=\"332\"/>\n@@ -522,7 +524,7 @@ Copyright \u00a9 2012-2016 The NovaCoin developers</translation>\n     </message>\n     <message>\n         <location filename=\"../bitcoingui.cpp\" line=\"333\"/>\n-        <source>Second auth with your Novacoin addresses</source>\n+        <source>Second auth with your 42 addresses</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n@@ -614,15 +616,15 @@ Copyright \u00a9 2012-2016 The NovaCoin developers</translation>\n     <message>\n         <location filename=\"../bitcoingui.cpp\" line=\"445\"/>\n         <location filename=\"../bitcoingui.cpp\" line=\"513\"/>\n-        <source>NovaCoin client</source>\n-        <translation>NovaCoin client</translation>\n+        <source>42 client</source>\n+        <translation>42 client</translation>\n     </message>\n     <message numerus=\"yes\">\n         <location filename=\"../bitcoingui.cpp\" line=\"586\"/>\n-        <source>%n active connection(s) to NovaCoin network</source>\n+        <source>%n active connection(s) to 42 network</source>\n         <translation>\n-            <numerusform>%n active connection to NovaCoin network</numerusform>\n-            <numerusform>%n active connections to NovaCoin network</numerusform>\n+            <numerusform>%n active connection to 42 network</numerusform>\n+            <numerusform>%n active connections to 42 network</numerusform>\n         </translation>\n     </message>\n     <message>\n@@ -791,8 +793,8 @@ Address: %4\n     <message>\n         <location filename=\"../bitcoingui.cpp\" line=\"982\"/>\n         <location filename=\"../bitcoingui.cpp\" line=\"997\"/>\n-        <source>URI can not be parsed! This can be caused by an invalid NovaCoin address or malformed URI parameters.</source>\n-        <translation>URI can not be parsed! This can be caused by an invalid NovaCoin address or malformed URI parameters.</translation>\n+        <source>URI can not be parsed! This can be caused by an invalid 42 address or malformed URI parameters.</source>\n+        <translation>URI can not be parsed! This can be caused by an invalid 42 address or malformed URI parameters.</translation>\n     </message>\n     <message>\n         <location filename=\"../bitcoingui.cpp\" line=\"1016\"/>\n@@ -930,8 +932,8 @@ Some or all keys from:\n         <translation>Amount:</translation>\n     </message>\n     <message>\n-        <source>0.00 NVC</source>\n-        <translation type=\"obsolete\">0.00 NVC</translation>\n+        <source>0.00000000 42</source>\n+        <translation type=\"obsolete\">0.00000000 42</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/coincontroldialog.ui\" line=\"157\"/>\n@@ -1234,8 +1236,8 @@ This label turns red, if the priority is smaller than &quot;medium&quot;.\n     </message>\n     <message>\n         <location filename=\"../editaddressdialog.cpp\" line=\"103\"/>\n-        <source>The entered address &quot;%1&quot; is not a valid NovaCoin address.</source>\n-        <translation>The entered address &quot;%1&quot; is not a valid NovaCoin address.</translation>\n+        <source>The entered address &quot;%1&quot; is not a valid 42 address.</source>\n+        <translation>The entered address &quot;%1&quot; is not a valid 42 address.</translation>\n     </message>\n     <message>\n         <location filename=\"../editaddressdialog.cpp\" line=\"108\"/>\n@@ -1286,8 +1288,8 @@ This label turns red, if the priority is smaller than &quot;medium&quot;.\n     <message>\n         <location filename=\"../guiutil.cpp\" line=\"476\"/>\n         <location filename=\"../guiutil.cpp\" line=\"488\"/>\n-        <source>NovaCoin-Qt</source>\n-        <translation>NovaCoin-Qt</translation>\n+        <source>42-Qt</source>\n+        <translation>42-Qt</translation>\n     </message>\n     <message>\n         <location filename=\"../guiutil.cpp\" line=\"476\"/>\n@@ -1334,17 +1336,17 @@ This label turns red, if the priority is smaller than &quot;medium&quot;.\n     </message>\n     <message>\n         <location filename=\"../forms/intro.ui\" line=\"23\"/>\n-        <source>Welcome to novacoin-qt.</source>\n+        <source>Welcome to 42-qt.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n         <location filename=\"../forms/intro.ui\" line=\"49\"/>\n-        <source>As this is the first time the program is launched, you can choose where novacoin-qt will store its data.</source>\n+        <source>As this is the first time the program is launched, you can choose where 42-qt will store its data.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n         <location filename=\"../forms/intro.ui\" line=\"59\"/>\n-        <source>novacoin-qt will download and store a copy of the Novacoin block chain. At least %1GB of data will be stored in this directory, and it will grow over time. The wallet will also be stored in this directory.</source>\n+        <source>42-qt will download and store a copy of the 42 block chain. At least %1GB of data will be stored in this directory, and it will grow over time. The wallet will also be stored in this directory.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n@@ -1359,7 +1361,7 @@ This label turns red, if the priority is smaller than &quot;medium&quot;.\n     </message>\n     <message>\n         <location filename=\"../intro.cpp\" line=\"184\"/>\n-        <source>Novacoin-qt</source>\n+        <source>42-qt</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n@@ -1421,11 +1423,6 @@ This label turns red, if the priority is smaller than &quot;medium&quot;.\n         <source>MintProbability</source>\n         <translation>MintProbability</translation>\n     </message>\n-    <message>\n-        <location filename=\"../mintingtablemodel.cpp\" line=\"228\"/>\n-        <source>MintReward</source>\n-        <translation>MintReward</translation>\n-    </message>\n     <message>\n         <location filename=\"../mintingtablemodel.cpp\" line=\"327\"/>\n         <source>minutes</source>\n@@ -1789,8 +1786,8 @@ This label turns red, if the priority is smaller than &quot;medium&quot;.\n         <translation type=\"obsolete\">123.456</translation>\n     </message>\n     <message>\n-        <source>NVC</source>\n-        <translation type=\"obsolete\">NVC</translation>\n+        <source>42</source>\n+        <translation type=\"obsolete\">42</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/multisigdialog.ui\" line=\"413\"/>\n@@ -1899,13 +1896,13 @@ Reduce the number of addresses involved in the address creation.</translation>\n     </message>\n     <message>\n         <location filename=\"../multisigdialog.cpp\" line=\"522\"/>\n-        <source>The fee of the transaction (%1 NVC) is smaller than the expected fee (%2 NVC). Do you want to send the transaction anyway?</source>\n-        <translation>The fee of the transaction (%1 NVC) is smaller than the expected fee (%2 NVC). Do you want to send the transaction anyway?</translation>\n+        <source>The fee of the transaction (%1 42) is smaller than the expected fee (%2 42). Do you want to send the transaction anyway?</source>\n+        <translation>The fee of the transaction (%1 42) is smaller than the expected fee (%2 42). Do you want to send the transaction anyway?</translation>\n     </message>\n     <message>\n         <location filename=\"../multisigdialog.cpp\" line=\"528\"/>\n-        <source>The fee of the transaction (%1 NVC) is bigger than the expected fee (%2 NVC). Do you want to send the transaction anyway?</source>\n-        <translation>The fee of the transaction (%1 NVC) is bigger than the expected fee (%2 NVC). Do you want to send the transaction anyway?</translation>\n+        <source>The fee of the transaction (%1 42) is bigger than the expected fee (%2 42). Do you want to send the transaction anyway?</source>\n+        <translation>The fee of the transaction (%1 42) is bigger than the expected fee (%2 42). Do you want to send the transaction anyway?</translation>\n     </message>\n </context>\n <context>\n@@ -1965,8 +1962,8 @@ Reduce the number of addresses involved in the address creation.</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/optionsdialog.ui\" line=\"33\"/>\n-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.001 recommended.</source>\n-        <translation>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.001 recommended.</translation>\n+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.00000001 recommended.</source>\n+        <translation>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.00000001 recommended.</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/optionsdialog.ui\" line=\"48\"/>\n@@ -1980,13 +1977,13 @@ Reduce the number of addresses involved in the address creation.</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/optionsdialog.ui\" line=\"86\"/>\n-        <source>Automatically start NovaCoin after logging in to the system.</source>\n-        <translation>Automatically start NovaCoin after logging in to the system.</translation>\n+        <source>Automatically start 42 after logging in to the system.</source>\n+        <translation>Automatically start 42 after logging in to the system.</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/optionsdialog.ui\" line=\"89\"/>\n-        <source>&amp;Start NovaCoin on system login</source>\n-        <translation>&amp;Start NovaCoin on system login</translation>\n+        <source>&amp;Start 42 on system login</source>\n+        <translation>&amp;Start 42 on system login</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/optionsdialog.ui\" line=\"96\"/>\n@@ -2005,8 +2002,8 @@ Reduce the number of addresses involved in the address creation.</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/optionsdialog.ui\" line=\"126\"/>\n-        <source>Connect to the NovaCoin network through a SOCKS proxy (e.g. when connecting through Tor).</source>\n-        <translation>Connect to the NovaCoin network through a SOCKS proxy (e.g. when connecting through Tor).</translation>\n+        <source>Connect to the 42 network through a SOCKS proxy (e.g. when connecting through Tor).</source>\n+        <translation>Connect to the 42 network through a SOCKS proxy (e.g. when connecting through Tor).</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/optionsdialog.ui\" line=\"129\"/>\n@@ -2115,8 +2112,8 @@ Reduce the number of addresses involved in the address creation.</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/optionsdialog.ui\" line=\"425\"/>\n-        <source>The user interface language can be set here. This setting will take effect after restarting NovaCoin.</source>\n-        <translation>The user interface language can be set here. This setting will take effect after restarting NovaCoin.</translation>\n+        <source>The user interface language can be set here. This setting will take effect after restarting 42.</source>\n+        <translation>The user interface language can be set here. This setting will take effect after restarting 42.</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/optionsdialog.ui\" line=\"436\"/>\n@@ -2130,8 +2127,8 @@ Reduce the number of addresses involved in the address creation.</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/optionsdialog.ui\" line=\"458\"/>\n-        <source>Whether to show NovaCoin addresses in the transaction list or not.</source>\n-        <translation>Whether to show NovaCoin addresses in the transaction list or not.</translation>\n+        <source>Whether to show 42 addresses in the transaction list or not.</source>\n+        <translation>Whether to show 42 addresses in the transaction list or not.</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/optionsdialog.ui\" line=\"461\"/>\n@@ -2151,8 +2148,8 @@ Reduce the number of addresses involved in the address creation.</translation>\n     <message>\n         <location filename=\"../forms/optionsdialog.ui\" line=\"480\"/>\n         <location filename=\"../forms/optionsdialog.ui\" line=\"493\"/>\n-        <source>Third party URLs (e.g. explorer.novaco.in) that appear in the transactions tab as context menu items. %s in the URL is replaced by transaction hash. Multiple URLs are separated by vertical bar |.</source>\n-        <translation>Third party URLs (e.g. explorer.novaco.in) that appear in the transactions tab as context menu items. %s in the URL is replaced by transaction hash. Multiple URLs are separated by vertical bar |.</translation>\n+        <source>Third party URLs that appear in the transactions tab as context menu items. %s in the URL is replaced by transaction hash. Multiple URLs are separated by vertical bar |.</source>\n+        <translation>Third party URLs that appear in the transactions tab as context menu items. %s in the URL is replaced by transaction hash. Multiple URLs are separated by vertical bar |.</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/optionsdialog.ui\" line=\"483\"/>\n@@ -2192,8 +2189,8 @@ Reduce the number of addresses involved in the address creation.</translation>\n         <location filename=\"../optionsdialog.cpp\" line=\"251\"/>\n         <location filename=\"../optionsdialog.cpp\" line=\"260\"/>\n         <location filename=\"../optionsdialog.cpp\" line=\"269\"/>\n-        <source>This setting will take effect after restarting NovaCoin.</source>\n-        <translation>This setting will take effect after restarting NovaCoin.</translation>\n+        <source>This setting will take effect after restarting 42.</source>\n+        <translation>This setting will take effect after restarting 42.</translation>\n     </message>\n     <message>\n         <location filename=\"../optionsdialog.cpp\" line=\"299\"/>\n@@ -2226,8 +2223,8 @@ Reduce the number of addresses involved in the address creation.</translation>\n     <message>\n         <location filename=\"../forms/overviewpage.ui\" line=\"46\"/>\n         <location filename=\"../forms/overviewpage.ui\" line=\"365\"/>\n-        <source>The displayed information may be out of date. Your wallet automatically synchronizes with the NovaCoin network after a connection is established, but this process has not completed yet.</source>\n-        <translation>The displayed information may be out of date. Your wallet automatically synchronizes with the NovaCoin network after a connection is established, but this process has not completed yet.</translation>\n+        <source>The displayed information may be out of date. Your wallet automatically synchronizes with the 42 network after a connection is established, but this process has not completed yet.</source>\n+        <translation>The displayed information may be out of date. Your wallet automatically synchronizes with the 42 network after a connection is established, but this process has not completed yet.</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/overviewpage.ui\" line=\"225\"/>\n@@ -2327,18 +2324,18 @@ Reduce the number of addresses involved in the address creation.</translation>\n     <name>QObject</name>\n     <message>\n         <location filename=\"../bitcoinunits.cpp\" line=\"48\"/>\n-        <source>NovaCoins</source>\n-        <translation>NovaCoins</translation>\n+        <source>42s</source>\n+        <translation>42s</translation>\n     </message>\n     <message>\n         <location filename=\"../bitcoinunits.cpp\" line=\"49\"/>\n-        <source>Milli-NovaCoins (1 / 1,000)</source>\n-        <translation>Milli-NovaCoins (1 / 1,000)</translation>\n+        <source>Milli-42s (1 / 1,000)</source>\n+        <translation>Milli-42s (1 / 1,000)</translation>\n     </message>\n     <message>\n         <location filename=\"../bitcoinunits.cpp\" line=\"50\"/>\n-        <source>Micro-NovaCoins (1 / 1,000,000)</source>\n-        <translation>Micro-NovaCoins (1 / 1,000,000)</translation>\n+        <source>Micro-42s (1 / 1,000,000)</source>\n+        <translation>Micro-42s (1 / 1,000,000)</translation>\n     </message>\n     <message>\n         <location filename=\"../bitcoinunits.cpp\" line=\"185\"/>\n@@ -2438,8 +2435,8 @@ Reduce the number of addresses involved in the address creation.</translation>\n     <name>RPCConsole</name>\n     <message>\n         <location filename=\"../forms/rpcconsole.ui\" line=\"14\"/>\n-        <source>NovaCoin - Debug window</source>\n-        <translation>NovaCoin - Debug window</translation>\n+        <source>42 - Debug window</source>\n+        <translation>42 - Debug window</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/rpcconsole.ui\" line=\"24\"/>\n@@ -2478,8 +2475,8 @@ Reduce the number of addresses involved in the address creation.</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/rpcconsole.ui\" line=\"95\"/>\n-        <source>Open the NovaCoin debug log file from the current data directory. This can take a few seconds for large log files.</source>\n-        <translation>Open the NovaCoin debug log file from the current data directory. This can take a few seconds for large log files.</translation>\n+        <source>Open the 42 debug log file from the current data directory. This can take a few seconds for large log files.</source>\n+        <translation>Open the 42 debug log file from the current data directory. This can take a few seconds for large log files.</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/rpcconsole.ui\" line=\"98\"/>\n@@ -2493,8 +2490,8 @@ Reduce the number of addresses involved in the address creation.</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/rpcconsole.ui\" line=\"147\"/>\n-        <source>Show the NovaCoin-Qt help message to get a list with possible NovaCoin command-line options.</source>\n-        <translation>Show the NovaCoin-Qt help message to get a list with possible NovaCoin command-line options.</translation>\n+        <source>Show the 42-Qt help message to get a list with possible 42 command-line options.</source>\n+        <translation>Show the 42-Qt help message to get a list with possible 42 command-line options.</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/rpcconsole.ui\" line=\"150\"/>\n@@ -2558,8 +2555,8 @@ Reduce the number of addresses involved in the address creation.</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/rpcconsole.ui\" line=\"383\"/>\n-        <source>NovaCoin Core</source>\n-        <translation>NovaCoin Core</translation>\n+        <source>42 Core</source>\n+        <translation>42 Core</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/rpcconsole.ui\" line=\"406\"/>\n@@ -2568,8 +2565,8 @@ Reduce the number of addresses involved in the address creation.</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/rpcconsole.ui\" line=\"426\"/>\n-        <source>Open the NovaCoin configuration file from the current data directory.</source>\n-        <translation>Open the NovaCoin configuration file from the current data directory.</translation>\n+        <source>Open the 42 configuration file from the current data directory.</source>\n+        <translation>Open the 42 configuration file from the current data directory.</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/rpcconsole.ui\" line=\"429\"/>\n@@ -2613,8 +2610,8 @@ Reduce the number of addresses involved in the address creation.</translation>\n     </message>\n     <message>\n         <location filename=\"../rpcconsole.cpp\" line=\"325\"/>\n-        <source>Welcome to the NovaCoin RPC console.</source>\n-        <translation>Welcome to the NovaCoin RPC console.</translation>\n+        <source>Welcome to the 42 RPC console.</source>\n+        <translation>Welcome to the 42 RPC console.</translation>\n     </message>\n     <message>\n         <location filename=\"../rpcconsole.cpp\" line=\"326\"/>\n@@ -2664,8 +2661,8 @@ Reduce the number of addresses involved in the address creation.</translation>\n         <translation type=\"obsolete\">Signatures - Sign / Verify a Message</translation>\n     </message>\n     <message>\n-        <source>The address to sign the message with (e.g. 4Zo1ga6xuKuQ7JV7M9rGDoxdbYwV5zgQJ5)</source>\n-        <translation type=\"obsolete\">The address to sign the message with (e.g. 4Zo1ga6xuKuQ7JV7M9rGDoxdbYwV5zgQJ5)</translation>\n+        <source>The address to sign the message with (e.g. 4VsEs7wqRpoiTpmqViWRtse1P3CNgvBw4g)</source>\n+        <translation type=\"obsolete\">The address to sign the message with (e.g. 4VsEs7wqRpoiTpmqViWRtse1P3CNgvBw4g)</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/secondauthdialog.ui\" line=\"48\"/>\n@@ -2693,7 +2690,7 @@ Reduce the number of addresses involved in the address creation.</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/secondauthdialog.ui\" line=\"38\"/>\n-        <source>The address for authentification (e.g. 4Zo1ga6xuKuQ7JV7M9rGDoxdbYwV5zgQJ5)</source>\n+        <source>The address for authentification (e.g. 4VsEs7wqRpoiTpmqViWRtse1P3CNgvBw4g)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n@@ -2722,8 +2719,8 @@ Reduce the number of addresses involved in the address creation.</translation>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <source>Sign the message to prove you own this NovaCoin address</source>\n-        <translation type=\"obsolete\">Sign the message to prove you own this NovaCoin address</translation>\n+        <source>Sign the message to prove you own this 42 address</source>\n+        <translation type=\"obsolete\">Sign the message to prove you own this 42 address</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/secondauthdialog.ui\" line=\"145\"/>\n@@ -2742,8 +2739,8 @@ Reduce the number of addresses involved in the address creation.</translation>\n     </message>\n     <message>\n         <location filename=\"../secondauthdialog.cpp\" line=\"29\"/>\n-        <source>Enter a NovaCoin address (e.g. 4Zo1ga6xuKuQ7JV7M9rGDoxdbYwV5zgQJ5)</source>\n-        <translation type=\"unfinished\">Enter a NovaCoin address (e.g. 4Zo1ga6xuKuQ7JV7M9rGDoxdbYwV5zgQJ5)</translation>\n+        <source>Enter a 42 address (e.g. 4VsEs7wqRpoiTpmqViWRtse1P3CNgvBw4g)</source>\n+        <translation type=\"unfinished\">Enter a 42 address (e.g. 4VsEs7wqRpoiTpmqViWRtse1P3CNgvBw4g)</translation>\n     </message>\n     <message>\n         <location filename=\"../secondauthdialog.cpp\" line=\"30\"/>\n@@ -2846,8 +2843,8 @@ Reduce the number of addresses involved in the address creation.</translation>\n         <translation>Amount:</translation>\n     </message>\n     <message>\n-        <source>0.00 NVC</source>\n-        <translation type=\"obsolete\">0.00 NVC</translation>\n+        <source>0.00000000 42</source>\n+        <translation type=\"obsolete\">0.00000000 42</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/sendcoinsdialog.ui\" line=\"337\"/>\n@@ -2935,8 +2932,8 @@ Reduce the number of addresses involved in the address creation.</translation>\n         <translation>Balance:</translation>\n     </message>\n     <message>\n-        <source>123.456 NVC</source>\n-        <translation type=\"obsolete\">123.456 NVC</translation>\n+        <source>123.456 42</source>\n+        <translation type=\"obsolete\">123.456 42</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/sendcoinsdialog.ui\" line=\"772\"/>\n@@ -2950,8 +2947,8 @@ Reduce the number of addresses involved in the address creation.</translation>\n     </message>\n     <message>\n         <location filename=\"../sendcoinsdialog.cpp\" line=\"43\"/>\n-        <source>Enter a NovaCoin address (e.g. 4Zo1ga6xuKuQ7JV7M9rGDoxdbYwV5zgQJ5)</source>\n-        <translation>Enter a NovaCoin address (e.g. 4Zo1ga6xuKuQ7JV7M9rGDoxdbYwV5zgQJ5)</translation>\n+        <source>Enter a 42 address (e.g. 4VsEs7wqRpoiTpmqViWRtse1P3CNgvBw4g)</source>\n+        <translation>Enter a 42 address (e.g. 4VsEs7wqRpoiTpmqViWRtse1P3CNgvBw4g)</translation>\n     </message>\n     <message>\n         <location filename=\"../sendcoinsdialog.cpp\" line=\"57\"/>\n@@ -3080,8 +3077,8 @@ Reduce the number of addresses involved in the address creation.</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/sendcoinsentry.ui\" line=\"93\"/>\n-        <source>The address to send the payment to  (e.g. 4Zo1ga6xuKuQ7JV7M9rGDoxdbYwV5zgQJ5)</source>\n-        <translation>The address to send the payment to  (e.g. 4Zo1ga6xuKuQ7JV7M9rGDoxdbYwV5zgQJ5)</translation>\n+        <source>The address to send the payment to  (e.g. 4VsEs7wqRpoiTpmqViWRtse1P3CNgvBw4g)</source>\n+        <translation>The address to send the payment to  (e.g. 4VsEs7wqRpoiTpmqViWRtse1P3CNgvBw4g)</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/sendcoinsentry.ui\" line=\"103\"/>\n@@ -3110,8 +3107,8 @@ Reduce the number of addresses involved in the address creation.</translation>\n     </message>\n     <message>\n         <location filename=\"../sendcoinsentry.cpp\" line=\"26\"/>\n-        <source>Enter a NovaCoin address (e.g. 4Zo1ga6xuKuQ7JV7M9rGDoxdbYwV5zgQJ5)</source>\n-        <translation>Enter a NovaCoin address (e.g. 4Zo1ga6xuKuQ7JV7M9rGDoxdbYwV5zgQJ5)</translation>\n+        <source>Enter a 42 address (e.g. 4VsEs7wqRpoiTpmqViWRtse1P3CNgvBw4g)</source>\n+        <translation>Enter a 42 address (e.g. 4VsEs7wqRpoiTpmqViWRtse1P3CNgvBw4g)</translation>\n     </message>\n </context>\n <context>\n@@ -3134,8 +3131,8 @@ Reduce the number of addresses involved in the address creation.</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/signverifymessagedialog.ui\" line=\"51\"/>\n-        <source>The address to sign the message with (e.g. 4Zo1ga6xuKuQ7JV7M9rGDoxdbYwV5zgQJ5)</source>\n-        <translation>The address to sign the message with (e.g. 4Zo1ga6xuKuQ7JV7M9rGDoxdbYwV5zgQJ5)</translation>\n+        <source>The address to sign the message with (e.g. 4VsEs7wqRpoiTpmqViWRtse1P3CNgvBw4g)</source>\n+        <translation>The address to sign the message with (e.g. 4VsEs7wqRpoiTpmqViWRtse1P3CNgvBw4g)</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/signverifymessagedialog.ui\" line=\"61\"/>\n@@ -3171,8 +3168,8 @@ Reduce the number of addresses involved in the address creation.</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/signverifymessagedialog.ui\" line=\"148\"/>\n-        <source>Sign the message to prove you own this NovaCoin address</source>\n-        <translation>Sign the message to prove you own this NovaCoin address</translation>\n+        <source>Sign the message to prove you own this 42 address</source>\n+        <translation>Sign the message to prove you own this 42 address</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/signverifymessagedialog.ui\" line=\"165\"/>\n@@ -3198,13 +3195,13 @@ Reduce the number of addresses involved in the address creation.</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/signverifymessagedialog.ui\" line=\"254\"/>\n-        <source>The address the message was signed with (e.g. 4Zo1ga6xuKuQ7JV7M9rGDoxdbYwV5zgQJ5)</source>\n-        <translation>The address the message was signed with (e.g. 4Zo1ga6xuKuQ7JV7M9rGDoxdbYwV5zgQJ5)</translation>\n+        <source>The address the message was signed with (e.g. 4VsEs7wqRpoiTpmqViWRtse1P3CNgvBw4g)</source>\n+        <translation>The address the message was signed with (e.g. 4VsEs7wqRpoiTpmqViWRtse1P3CNgvBw4g)</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/signverifymessagedialog.ui\" line=\"294\"/>\n-        <source>Verify the message to ensure it was signed with the specified NovaCoin address</source>\n-        <translation>Verify the message to ensure it was signed with the specified NovaCoin address</translation>\n+        <source>Verify the message to ensure it was signed with the specified 42 address</source>\n+        <translation>Verify the message to ensure it was signed with the specified 42 address</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/signverifymessagedialog.ui\" line=\"311\"/>\n@@ -3214,8 +3211,8 @@ Reduce the number of addresses involved in the address creation.</translation>\n     <message>\n         <location filename=\"../signverifymessagedialog.cpp\" line=\"29\"/>\n         <location filename=\"../signverifymessagedialog.cpp\" line=\"32\"/>\n-        <source>Enter a NovaCoin address (e.g. 4Zo1ga6xuKuQ7JV7M9rGDoxdbYwV5zgQJ5)</source>\n-        <translation>Enter a NovaCoin address (e.g. 4Zo1ga6xuKuQ7JV7M9rGDoxdbYwV5zgQJ5)</translation>\n+        <source>Enter a 42 address (e.g. 4VsEs7wqRpoiTpmqViWRtse1P3CNgvBw4g)</source>\n+        <translation>Enter a 42 address (e.g. 4VsEs7wqRpoiTpmqViWRtse1P3CNgvBw4g)</translation>\n     </message>\n     <message>\n         <location filename=\"../signverifymessagedialog.cpp\" line=\"30\"/>\n@@ -3224,8 +3221,8 @@ Reduce the number of addresses involved in the address creation.</translation>\n     </message>\n     <message>\n         <location filename=\"../signverifymessagedialog.cpp\" line=\"33\"/>\n-        <source>Enter NovaCoin signature</source>\n-        <translation>Enter NovaCoin signature</translation>\n+        <source>Enter 42 signature</source>\n+        <translation>Enter 42 signature</translation>\n     </message>\n     <message>\n         <location filename=\"../signverifymessagedialog.cpp\" line=\"115\"/>\n@@ -3455,8 +3452,8 @@ Reduce the number of addresses involved in the address creation.</translation>\n     </message>\n     <message>\n         <location filename=\"../transactiondesc.cpp\" line=\"253\"/>\n-        <source>Generated coins must mature 520 blocks before they can be spent. When you generated this block, it was broadcast to the network to be added to the block chain. If it fails to get into the chain, its state will change to &quot;not accepted&quot; and it won&apos;t be spendable. This may occasionally happen if another node generates a block within a few seconds of yours.</source>\n-        <translation>Generated coins must mature 520 blocks before they can be spent. When you generated this block, it was broadcast to the network to be added to the block chain. If it fails to get into the chain, its state will change to &quot;not accepted&quot; and it won&apos;t be spendable. This may occasionally happen if another node generates a block within a few seconds of yours.</translation>\n+        <source>Generated coins must mature 42 blocks before they can be spent. When you generated this block, it was broadcast to the network to be added to the block chain. If it fails to get into the chain, its state will change to &quot;not accepted&quot; and it won&apos;t be spendable. This may occasionally happen if another node generates a block within a few seconds of yours.</source>\n+        <translation>Generated coins must mature 42 blocks before they can be spent. When you generated this block, it was broadcast to the network to be added to the block chain. If it fails to get into the chain, its state will change to &quot;not accepted&quot; and it won&apos;t be spendable. This may occasionally happen if another node generates a block within a few seconds of yours.</translation>\n     </message>\n     <message>\n         <location filename=\"../transactiondesc.cpp\" line=\"260\"/>\n@@ -3810,15 +3807,15 @@ Reduce the number of addresses involved in the address creation.</translation>\n         <source>%s, you must set a rpcpassword in the configuration file:\n  %s\n It is recommended you use the following random password:\n-rpcuser=novacoinrpc\n+rpcuser=42rpc\n rpcpassword=%s\n (you do not need to remember this password)\n If the file does not exist, create it with owner-readable-only file permissions.\n </source>\n         <translation>%s, you must set a rpcpassword in the configuration file:\n  %s\n It is recommended you use the following random password:\n-rpcuser=novacoinrpc\n+rpcuser=42rpc\n rpcpassword=%s\n (you do not need to remember this password)\n If the file does not exist, create it with owner-readable-only file permissions.</translation>\n@@ -3840,8 +3837,8 @@ If the file does not exist, create it with owner-readable-only file permissions.\n     </message>\n     <message>\n         <location filename=\"../bitcoinstrings.cpp\" line=\"26\"/>\n-        <source>Cannot obtain a lock on data directory %s.  NovaCoin is probably already running.</source>\n-        <translation>Cannot obtain a lock on data directory %s.  NovaCoin is probably already running.</translation>\n+        <source>Cannot obtain a lock on data directory %s.  42 is probably already running.</source>\n+        <translation>Cannot obtain a lock on data directory %s.  42 is probably already running.</translation>\n     </message>\n     <message>\n         <location filename=\"../bitcoinstrings.cpp\" line=\"29\"/>\n@@ -3875,8 +3872,8 @@ If the file does not exist, create it with owner-readable-only file permissions.\n     </message>\n     <message>\n         <location filename=\"../bitcoinstrings.cpp\" line=\"46\"/>\n-        <source>Listen for JSON-RPC connections on &lt;port&gt; (default: 8344 or testnet: 18344)</source>\n-        <translation>Listen for JSON-RPC connections on &lt;port&gt; (default: 8344 or testnet: 18344)</translation>\n+        <source>Listen for JSON-RPC connections on &lt;port&gt; (default: 2121 or testnet: 21210)</source>\n+        <translation>Listen for JSON-RPC connections on &lt;port&gt; (default: 2121 or testnet: 21210)</translation>\n     </message>\n     <message>\n         <location filename=\"../bitcoinstrings.cpp\" line=\"48\"/>\n@@ -3890,8 +3887,8 @@ If the file does not exist, create it with owner-readable-only file permissions.\n     </message>\n     <message>\n         <location filename=\"../bitcoinstrings.cpp\" line=\"54\"/>\n-        <source>Unable to bind to %s on this computer. NovaCoin is probably already running.</source>\n-        <translation>Unable to bind to %s on this computer. NovaCoin is probably already running.</translation>\n+        <source>Unable to bind to %s on this computer. 42 is probably already running.</source>\n+        <translation>Unable to bind to %s on this computer. 42 is probably already running.</translation>\n     </message>\n     <message>\n         <location filename=\"../bitcoinstrings.cpp\" line=\"56\"/>\n@@ -3900,8 +3897,8 @@ If the file does not exist, create it with owner-readable-only file permissions.\n     </message>\n     <message>\n         <location filename=\"../bitcoinstrings.cpp\" line=\"59\"/>\n-        <source>Warning: Please check that your computer&apos;s date and time are correct! If your clock is wrong NovaCoin will not work properly.</source>\n-        <translation>Warning: Please check that your computer&apos;s date and time are correct! If your clock is wrong NovaCoin will not work properly.</translation>\n+        <source>Warning: Please check that your computer&apos;s date and time are correct! If your clock is wrong 42 will not work properly.</source>\n+        <translation>Warning: Please check that your computer&apos;s date and time are correct! If your clock is wrong 42 will not work properly.</translation>\n     </message>\n     <message>\n         <location filename=\"../bitcoinstrings.cpp\" line=\"62\"/>\n@@ -4029,8 +4026,8 @@ If the file does not exist, create it with owner-readable-only file permissions.\n     </message>\n     <message>\n         <location filename=\"../bitcoinstrings.cpp\" line=\"95\"/>\n-        <source>Error loading wallet.dat: Wallet requires newer version of NovaCoin</source>\n-        <translation>Error loading wallet.dat: Wallet requires newer version of NovaCoin</translation>\n+        <source>Error loading wallet.dat: Wallet requires newer version of 42</source>\n+        <translation>Error loading wallet.dat: Wallet requires newer version of 42</translation>\n     </message>\n     <message>\n         <location filename=\"../bitcoinstrings.cpp\" line=\"96\"/>\n@@ -4139,8 +4136,8 @@ If the file does not exist, create it with owner-readable-only file permissions.\n     </message>\n     <message>\n         <location filename=\"../bitcoinstrings.cpp\" line=\"117\"/>\n-        <source>Listen for connections on &lt;port&gt; (default: 7777 or testnet: 17777)</source>\n-        <translation>Listen for connections on &lt;port&gt; (default: 7777 or testnet: 17777)</translation>\n+        <source>Listen for connections on &lt;port&gt; (default: 4242 or testnet: 42420)</source>\n+        <translation>Listen for connections on &lt;port&gt; (default: 4242 or testnet: 42420)</translation>\n     </message>\n     <message>\n         <location filename=\"../bitcoinstrings.cpp\" line=\"118\"/>\n@@ -4174,13 +4171,13 @@ If the file does not exist, create it with owner-readable-only file permissions.\n     </message>\n     <message>\n         <location filename=\"../bitcoinstrings.cpp\" line=\"124\"/>\n-        <source>NovaCoin version</source>\n-        <translation>NovaCoin version</translation>\n+        <source>42 version</source>\n+        <translation>42 version</translation>\n     </message>\n     <message>\n         <location filename=\"../bitcoinstrings.cpp\" line=\"125\"/>\n-        <source>NovaCoin</source>\n-        <translation>NovaCoin</translation>\n+        <source>42</source>\n+        <translation>42</translation>\n     </message>\n     <message>\n         <location filename=\"../bitcoinstrings.cpp\" line=\"126\"/>\n@@ -4239,8 +4236,8 @@ If the file does not exist, create it with owner-readable-only file permissions.\n     </message>\n     <message>\n         <location filename=\"../bitcoinstrings.cpp\" line=\"137\"/>\n-        <source>Send command to -server or novacoind</source>\n-        <translation>Send command to -server or novacoind</translation>\n+        <source>Send command to -server or 42d</source>\n+        <translation>Send command to -server or 42d</translation>\n     </message>\n     <message>\n         <location filename=\"../bitcoinstrings.cpp\" line=\"138\"/>\n@@ -4304,8 +4301,8 @@ If the file does not exist, create it with owner-readable-only file permissions.\n     </message>\n     <message>\n         <location filename=\"../bitcoinstrings.cpp\" line=\"150\"/>\n-        <source>Specify configuration file (default: novacoin.conf)</source>\n-        <translation>Specify configuration file (default: novacoin.conf)</translation>\n+        <source>Specify configuration file (default: 42.conf)</source>\n+        <translation>Specify configuration file (default: 42.conf)</translation>\n     </message>\n     <message>\n         <location filename=\"../bitcoinstrings.cpp\" line=\"151\"/>\n@@ -4319,8 +4316,8 @@ If the file does not exist, create it with owner-readable-only file permissions.\n     </message>\n     <message>\n         <location filename=\"../bitcoinstrings.cpp\" line=\"153\"/>\n-        <source>Specify pid file (default: novacoind.pid)</source>\n-        <translation>Specify pid file (default: novacoind.pid)</translation>\n+        <source>Specify pid file (default: 42d.pid)</source>\n+        <translation>Specify pid file (default: 42d.pid)</translation>\n     </message>\n     <message>\n         <location filename=\"../bitcoinstrings.cpp\" line=\"154\"/>\n@@ -4401,8 +4398,8 @@ If the file does not exist, create it with owner-readable-only file permissions.\n     </message>\n     <message>\n         <location filename=\"../bitcoinstrings.cpp\" line=\"169\"/>\n-        <source>Wallet needed to be rewritten: restart NovaCoin to complete</source>\n-        <translation>Wallet needed to be rewritten: restart NovaCoin to complete</translation>\n+        <source>Wallet needed to be rewritten: restart 42 to complete</source>\n+        <translation>Wallet needed to be rewritten: restart 42 to complete</translation>\n     </message>\n     <message>\n         <location filename=\"../bitcoinstrings.cpp\" line=\"170\"/>"
      },
      {
        "sha": "ce49e566099d7e473ae5a6c15d91c4e86c09c192",
        "filename": "src/qt/locale/bitcoin_ru.ts",
        "status": "modified",
        "additions": 144,
        "deletions": 147,
        "changes": 291,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/locale/bitcoin_ru.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/locale/bitcoin_ru.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ru.ts?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -6,26 +6,28 @@\n     <name>AboutDialog</name>\n     <message>\n         <location filename=\"../forms/aboutdialog.ui\" line=\"14\"/>\n-        <source>About NovaCoin</source>\n-        <translation>\u041e NovaCoin</translation>\n+        <source>About 42</source>\n+        <translation>\u041e 42</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/aboutdialog.ui\" line=\"56\"/>\n-        <source>&lt;b&gt;NovaCoin&lt;/b&gt; version</source>\n-        <translation>&lt;b&gt;NovaCoin&lt;/b&gt; \u0432\u0435\u0440\u0441\u0438\u044f</translation>\n+        <source>&lt;b&gt;42&lt;/b&gt; version</source>\n+        <translation>&lt;b&gt;42&lt;/b&gt; \u0432\u0435\u0440\u0441\u0438\u044f</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/aboutdialog.ui\" line=\"97\"/>\n         <source>Copyright \u00a9 2009-2016 The Bitcoin developers\n Copyright \u00a9 2011-2012 The PPCoin Developers\n Copyright \u00a9 2014 The Peerunity Developers\n Copyright \u00a9 2014 The EmerCoin Developers\n-Copyright \u00a9 2012-2016 The NovaCoin developers</source>\n+Copyright \u00a9 2012-2016 The NovaCoin developers\n+Copyright \u00a9 2016 The 42 developers</source>\n         <translation>\u0412\u0441\u0435 \u043f\u0440\u0430\u0432\u0430 \u0437\u0430\u0449\u0438\u0449\u0435\u043d\u044b \u00a9 2009-2016 \u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0438 Bitcoin\n \u0412\u0441\u0435 \u043f\u0440\u0430\u0432\u0430 \u0437\u0430\u0449\u0438\u0449\u0435\u043d\u044b \u00a9 2011-2012 \u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0438 PPCoin\n \u0412\u0441\u0435 \u043f\u0440\u0430\u0432\u0430 \u0437\u0430\u0449\u0438\u0449\u0435\u043d\u044b \u00a9 2014 \u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0438 Peerunity\n \u0412\u0441\u0435 \u043f\u0440\u0430\u0432\u0430 \u0437\u0430\u0449\u0438\u0449\u0435\u043d\u044b \u00a9 2014 \u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0438 EmerCoin\n-\u0412\u0441\u0435 \u043f\u0440\u0430\u0432\u0430 \u0437\u0430\u0449\u0438\u0449\u0435\u043d\u044b \u00a9 2012-2016 \u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0438 NovaCoin</translation>\n+\u0412\u0441\u0435 \u043f\u0440\u0430\u0432\u0430 \u0437\u0430\u0449\u0438\u0449\u0435\u043d\u044b \u00a9 2012-2016 \u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0438 NovaCoin\n+\u0412\u0441\u0435 \u043f\u0440\u0430\u0432\u0430 \u0437\u0430\u0449\u0438\u0449\u0435\u043d\u044b \u00a9 2016 \u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0438 42</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/aboutdialog.ui\" line=\"114\"/>\n@@ -42,7 +44,7 @@ Copyright \u00a9 2012-2016 The NovaCoin developers</source>\n     </message>\n     <message>\n         <location filename=\"../forms/addressbookpage.ui\" line=\"20\"/>\n-        <source>These are your NovaCoin addresses for receiving payments. You may want to give a different one to each sender so you can keep track of who is paying you.</source>\n+        <source>These are your 42 addresses for receiving payments. You may want to give a different one to each sender so you can keep track of who is paying you.</source>\n         <translation>\u042d\u0442\u043e \u0412\u0430\u0448\u0438 \u0430\u0434\u0440\u0435\u0441\u0430 \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u043f\u043b\u0430\u0442\u0435\u0436\u0435\u0439. \u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0434\u0430\u0442\u044c \u0440\u0430\u0437\u043d\u044b\u0435 \u0430\u0434\u0440\u0435\u0441\u0430 \u043e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u0435\u043b\u044f\u043c, \u0447\u0442\u043e\u0431\u044b \u043e\u0442\u0441\u043b\u0435\u0436\u0438\u0432\u0430\u0442\u044c, \u043a\u0442\u043e \u0438\u043c\u0435\u043d\u043d\u043e \u0432\u0430\u043c \u043f\u043b\u0430\u0442\u0438\u0442.</translation>\n     </message>\n     <message>\n@@ -77,8 +79,8 @@ Copyright \u00a9 2012-2016 The NovaCoin developers</source>\n     </message>\n     <message>\n         <location filename=\"../forms/addressbookpage.ui\" line=\"102\"/>\n-        <source>Sign a message to prove you own a NovaCoin address</source>\n-        <translation>\u041f\u043e\u0434\u043f\u0438\u0441\u0430\u0442\u044c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435, \u0447\u0442\u043e\u0431\u044b \u0434\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u0435 \u0430\u0434\u0440\u0435\u0441\u043e\u043c NovaCoin</translation>\n+        <source>Sign a message to prove you own a 42 address</source>\n+        <translation>\u041f\u043e\u0434\u043f\u0438\u0441\u0430\u0442\u044c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435, \u0447\u0442\u043e\u0431\u044b \u0434\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u0435 \u0430\u0434\u0440\u0435\u0441\u043e\u043c 42</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/addressbookpage.ui\" line=\"105\"/>\n@@ -87,8 +89,8 @@ Copyright \u00a9 2012-2016 The NovaCoin developers</source>\n     </message>\n     <message>\n         <location filename=\"../forms/addressbookpage.ui\" line=\"116\"/>\n-        <source>Verify a message to ensure it was signed with a specified NovaCoin address</source>\n-        <translation>\u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435, \u0447\u0442\u043e\u0431\u044b \u0443\u0431\u0435\u0434\u0438\u0442\u044c\u0441\u044f, \u0447\u0442\u043e \u043e\u043d\u043e \u0431\u044b\u043b\u043e \u043f\u043e\u0434\u043f\u0438\u0441\u0430\u043d\u043e \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u043c \u0430\u0434\u0440\u0435\u0441\u043e\u043c NovaCoin</translation>\n+        <source>Verify a message to ensure it was signed with a specified 42 address</source>\n+        <translation>\u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435, \u0447\u0442\u043e\u0431\u044b \u0443\u0431\u0435\u0434\u0438\u0442\u044c\u0441\u044f, \u0447\u0442\u043e \u043e\u043d\u043e \u0431\u044b\u043b\u043e \u043f\u043e\u0434\u043f\u0438\u0441\u0430\u043d\u043e \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u043c \u0430\u0434\u0440\u0435\u0441\u043e\u043c 42</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/addressbookpage.ui\" line=\"119\"/>\n@@ -239,7 +241,7 @@ Copyright \u00a9 2012-2016 The NovaCoin developers</source>\n     </message>\n     <message>\n         <location filename=\"../askpassphrasedialog.cpp\" line=\"116\"/>\n-        <source>NovaCoin will close now to finish the encryption process. Remember that encrypting your wallet cannot fully protect your coins from being stolen by malware infecting your computer.</source>\n+        <source>42 will close now to finish the encryption process. Remember that encrypting your wallet cannot fully protect your coins from being stolen by malware infecting your computer.</source>\n         <translation>\u0421\u0435\u0439\u0447\u0430\u0441 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u0437\u0430\u043a\u0440\u043e\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0430 \u0448\u0438\u0444\u0440\u043e\u0432\u0430\u043d\u0438\u044f. \u041f\u043e\u043c\u043d\u0438\u0442\u0435, \u0447\u0442\u043e \u0448\u0438\u0444\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0432\u0430\u0448\u0435\u0433\u043e \u0431\u0443\u043c\u0430\u0436\u043d\u0438\u043a\u0430 \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u043f\u043e\u043b\u043d\u043e\u0441\u0442\u044c\u044e \u0437\u0430\u0449\u0438\u0442\u0438\u0442\u044c \u0432\u0430\u0448\u0438 \u043c\u043e\u043d\u0435\u0442\u044b \u043e\u0442 \u043a\u0440\u0430\u0436\u0438 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0438\u043d\u0444\u0438\u0446\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0432\u0430\u0448\u0435\u0433\u043e \u043a\u043e\u043c\u043f\u044c\u044e\u0442\u0435\u0440\u0430 \u0432\u0440\u0435\u0434\u043e\u043d\u043e\u0441\u043d\u044b\u043c \u041f\u041e.</translation>\n     </message>\n     <message>\n@@ -292,7 +294,7 @@ Copyright \u00a9 2012-2016 The NovaCoin developers</source>\n     </message>\n     <message>\n         <location filename=\"../askpassphrasedialog.cpp\" line=\"178\"/>\n-        <source>NovaCoin will close now to finish the decryption process. </source>\n+        <source>42 will close now to finish the decryption process. </source>\n         <translation>\u0421\u0435\u0439\u0447\u0430\u0441 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u0437\u0430\u043a\u0440\u043e\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0430 \u0440\u0430\u0441\u0448\u0438\u0444\u0440\u043e\u0432\u043a\u0438.</translation>\n     </message>\n     <message>\n@@ -311,14 +313,14 @@ Copyright \u00a9 2012-2016 The NovaCoin developers</source>\n     <name>BitcoinGUI</name>\n     <message>\n         <location filename=\"../bitcoin.cpp\" line=\"146\"/>\n-        <source>A fatal error occurred. NovaCoin can no longer continue safely and will quit.</source>\n-        <translation>\u041f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043d\u0435\u0438\u0441\u043f\u0440\u0430\u0432\u0438\u043c\u0430\u044f \u043e\u0448\u0438\u0431\u043a\u0430. NovaCoin \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e \u043f\u0440\u043e\u0434\u043e\u043b\u0436\u0430\u0442\u044c \u0440\u0430\u0431\u043e\u0442\u0443 \u0438 \u0431\u0443\u0434\u0435\u0442 \u0437\u0430\u043a\u0440\u044b\u0442.</translation>\n+        <source>A fatal error occurred. 42 can no longer continue safely and will quit.</source>\n+        <translation>\u041f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043d\u0435\u0438\u0441\u043f\u0440\u0430\u0432\u0438\u043c\u0430\u044f \u043e\u0448\u0438\u0431\u043a\u0430. 42 \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e \u043f\u0440\u043e\u0434\u043e\u043b\u0436\u0430\u0442\u044c \u0440\u0430\u0431\u043e\u0442\u0443 \u0438 \u0431\u0443\u0434\u0435\u0442 \u0437\u0430\u043a\u0440\u044b\u0442.</translation>\n     </message>\n     <message>\n         <location filename=\"../bitcoingui.cpp\" line=\"96\"/>\n         <location filename=\"../bitcoingui.cpp\" line=\"736\"/>\n-        <source>NovaCoin</source>\n-        <translation>NovaCoin</translation>\n+        <source>42</source>\n+        <translation>42</translation>\n     </message>\n     <message>\n         <location filename=\"../bitcoingui.cpp\" line=\"96\"/>\n@@ -342,8 +344,8 @@ Copyright \u00a9 2012-2016 The NovaCoin developers</source>\n     </message>\n     <message>\n         <location filename=\"../bitcoingui.cpp\" line=\"251\"/>\n-        <source>Send coins to a NovaCoin address</source>\n-        <translation>\u041e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u044c \u043c\u043e\u043d\u0435\u0442\u044b \u043d\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u0430\u0434\u0440\u0435\u0441 NovaCoin</translation>\n+        <source>Send coins to a 42 address</source>\n+        <translation>\u041e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u044c \u043c\u043e\u043d\u0435\u0442\u044b \u043d\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u0430\u0434\u0440\u0435\u0441 42</translation>\n     </message>\n     <message>\n         <location filename=\"../bitcoingui.cpp\" line=\"256\"/>\n@@ -407,13 +409,13 @@ Copyright \u00a9 2012-2016 The NovaCoin developers</source>\n     </message>\n     <message>\n         <location filename=\"../bitcoingui.cpp\" line=\"303\"/>\n-        <source>&amp;About NovaCoin</source>\n-        <translation>&amp;\u041e NovaCoin</translation>\n+        <source>&amp;About 42</source>\n+        <translation>&amp;\u041e 42</translation>\n     </message>\n     <message>\n         <location filename=\"../bitcoingui.cpp\" line=\"304\"/>\n-        <source>Show information about NovaCoin</source>\n-        <translation>\u041f\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e NovaCoin&apos;\u0435</translation>\n+        <source>Show information about 42</source>\n+        <translation>\u041f\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e 42&apos;\u0435</translation>\n     </message>\n     <message>\n         <location filename=\"../bitcoingui.cpp\" line=\"307\"/>\n@@ -433,8 +435,8 @@ Copyright \u00a9 2012-2016 The NovaCoin developers</source>\n     </message>\n     <message>\n         <location filename=\"../bitcoingui.cpp\" line=\"314\"/>\n-        <source>Modify configuration options for NovaCoin</source>\n-        <translation>\u0418\u0437\u043c\u0435\u043d\u0438\u0442\u044c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438 NovaCoin</translation>\n+        <source>Modify configuration options for 42</source>\n+        <translation>\u0418\u0437\u043c\u0435\u043d\u0438\u0442\u044c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438 42</translation>\n     </message>\n     <message>\n         <location filename=\"../bitcoingui.cpp\" line=\"316\"/>\n@@ -498,8 +500,8 @@ Copyright \u00a9 2012-2016 The NovaCoin developers</source>\n     </message>\n     <message>\n         <location filename=\"../bitcoingui.cpp\" line=\"329\"/>\n-        <source>Sign messages with your Novacoin addresses to prove you own them</source>\n-        <translation>\u041f\u043e\u0434\u043f\u0438\u0441\u0430\u0442\u044c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u0432\u0430\u0448\u0438\u043c Novacoin \u0430\u0434\u0440\u0435\u0441\u043e\u043c, \u0447\u0442\u043e\u0431\u044b \u0434\u043e\u043a\u0430\u0437\u0430\u0442\u044c, \u0447\u0442\u043e \u0432\u044b \u0438\u043c \u0432\u043b\u0430\u0434\u0435\u0435\u0442\u0435</translation>\n+        <source>Sign messages with your 42 addresses to prove you own them</source>\n+        <translation>\u041f\u043e\u0434\u043f\u0438\u0441\u0430\u0442\u044c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u0432\u0430\u0448\u0438\u043c 42 \u0430\u0434\u0440\u0435\u0441\u043e\u043c, \u0447\u0442\u043e\u0431\u044b \u0434\u043e\u043a\u0430\u0437\u0430\u0442\u044c, \u0447\u0442\u043e \u0432\u044b \u0438\u043c \u0432\u043b\u0430\u0434\u0435\u0435\u0442\u0435</translation>\n     </message>\n     <message>\n         <location filename=\"../bitcoingui.cpp\" line=\"330\"/>\n@@ -508,8 +510,8 @@ Copyright \u00a9 2012-2016 The NovaCoin developers</source>\n     </message>\n     <message>\n         <location filename=\"../bitcoingui.cpp\" line=\"331\"/>\n-        <source>Verify messages to ensure they were signed with specified Novacoin addresses</source>\n-        <translation>\u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f, \u0447\u0442\u043e\u0431\u044b \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0438\u0442\u044c\u0441\u044f, \u0447\u0442\u043e \u043e\u043d\u0438 \u043f\u043e\u0434\u043f\u0438\u0441\u0430\u043d\u044b \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u043c Novacoin \u0430\u0434\u0440\u0435\u0441\u043e\u043c</translation>\n+        <source>Verify messages to ensure they were signed with specified 42 addresses</source>\n+        <translation>\u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f, \u0447\u0442\u043e\u0431\u044b \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0438\u0442\u044c\u0441\u044f, \u0447\u0442\u043e \u043e\u043d\u0438 \u043f\u043e\u0434\u043f\u0438\u0441\u0430\u043d\u044b \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u043c 42 \u0430\u0434\u0440\u0435\u0441\u043e\u043c</translation>\n     </message>\n     <message>\n         <location filename=\"../bitcoingui.cpp\" line=\"332\"/>\n@@ -518,7 +520,7 @@ Copyright \u00a9 2012-2016 The NovaCoin developers</source>\n     </message>\n     <message>\n         <location filename=\"../bitcoingui.cpp\" line=\"333\"/>\n-        <source>Second auth with your Novacoin addresses</source>\n+        <source>Second auth with your 42 addresses</source>\n         <translation>\u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u0430\u044f \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u044f \u043f\u043e \u0412\u0430\u0448\u0438\u043c \u0430\u0434\u0440\u0435\u0441\u0430\u043c</translation>\n     </message>\n     <message>\n@@ -610,12 +612,12 @@ Copyright \u00a9 2012-2016 The NovaCoin developers</source>\n     <message>\n         <location filename=\"../bitcoingui.cpp\" line=\"445\"/>\n         <location filename=\"../bitcoingui.cpp\" line=\"513\"/>\n-        <source>NovaCoin client</source>\n-        <translation>NovaCoin \u043a\u043b\u0438\u0435\u043d\u0442</translation>\n+        <source>42 client</source>\n+        <translation>42 \u043a\u043b\u0438\u0435\u043d\u0442</translation>\n     </message>\n     <message numerus=\"yes\">\n         <location filename=\"../bitcoingui.cpp\" line=\"586\"/>\n-        <source>%n active connection(s) to NovaCoin network</source>\n+        <source>%n active connection(s) to 42 network</source>\n         <translation>\n             <numerusform>%n \u0430\u043a\u0442\u0438\u0432\u043d\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0441 \u0441\u0435\u0442\u044c\u044e</numerusform>\n             <numerusform>%n \u0430\u043a\u0442\u0438\u0432\u043d\u044b\u0445 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0439 \u0441 \u0441\u0435\u0442\u044c\u044e</numerusform>\n@@ -793,8 +795,8 @@ Address: %4\n     <message>\n         <location filename=\"../bitcoingui.cpp\" line=\"982\"/>\n         <location filename=\"../bitcoingui.cpp\" line=\"997\"/>\n-        <source>URI can not be parsed! This can be caused by an invalid NovaCoin address or malformed URI parameters.</source>\n-        <translation>\u041d\u0435 \u0443\u0434\u0430\u043b\u043e\u0441\u044c \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c URI! \u042d\u0442\u043e \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0441\u0432\u044f\u0437\u0430\u043d\u043e \u0441 \u043d\u0435\u0432\u0435\u0440\u043d\u044b\u043c \u0430\u0434\u0440\u0435\u0441\u043e\u043c NovaCoin \u0438\u043b\u0438 \u043d\u0435\u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u044b\u043c\u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043c\u0438 URI.</translation>\n+        <source>URI can not be parsed! This can be caused by an invalid 42 address or malformed URI parameters.</source>\n+        <translation>\u041d\u0435 \u0443\u0434\u0430\u043b\u043e\u0441\u044c \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c URI! \u042d\u0442\u043e \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0441\u0432\u044f\u0437\u0430\u043d\u043e \u0441 \u043d\u0435\u0432\u0435\u0440\u043d\u044b\u043c \u0430\u0434\u0440\u0435\u0441\u043e\u043c 42 \u0438\u043b\u0438 \u043d\u0435\u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u044b\u043c\u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043c\u0438 URI.</translation>\n     </message>\n     <message>\n         <location filename=\"../bitcoingui.cpp\" line=\"1016\"/>\n@@ -932,8 +934,8 @@ Some or all keys from:\n         <translation>\u0421\u0443\u043c\u043c\u0430:</translation>\n     </message>\n     <message>\n-        <source>0.00 NVC</source>\n-        <translation type=\"obsolete\">0.00 NVC</translation>\n+        <source>0.00000000 42</source>\n+        <translation type=\"obsolete\">0.00000000 42</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/coincontroldialog.ui\" line=\"157\"/>\n@@ -1234,8 +1236,8 @@ This label turns red, if the priority is smaller than &quot;medium&quot;.\n     </message>\n     <message>\n         <location filename=\"../editaddressdialog.cpp\" line=\"103\"/>\n-        <source>The entered address &quot;%1&quot; is not a valid NovaCoin address.</source>\n-        <translation>\u0412\u0432\u0435\u0434\u0451\u043d\u043d\u044b\u0439 \u0430\u0434\u0440\u0435\u0441 &quot;%1&quot; \u043d\u0435 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u044b\u043c NovaCoin-\u0430\u0434\u0440\u0435\u0441\u043e\u043c.</translation>\n+        <source>The entered address &quot;%1&quot; is not a valid 42 address.</source>\n+        <translation>\u0412\u0432\u0435\u0434\u0451\u043d\u043d\u044b\u0439 \u0430\u0434\u0440\u0435\u0441 &quot;%1&quot; \u043d\u0435 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u044b\u043c 42-\u0430\u0434\u0440\u0435\u0441\u043e\u043c.</translation>\n     </message>\n     <message>\n         <location filename=\"../editaddressdialog.cpp\" line=\"108\"/>\n@@ -1286,8 +1288,8 @@ This label turns red, if the priority is smaller than &quot;medium&quot;.\n     <message>\n         <location filename=\"../guiutil.cpp\" line=\"476\"/>\n         <location filename=\"../guiutil.cpp\" line=\"488\"/>\n-        <source>NovaCoin-Qt</source>\n-        <translation>NovaCoin-Qt</translation>\n+        <source>42-Qt</source>\n+        <translation>42-Qt</translation>\n     </message>\n     <message>\n         <location filename=\"../guiutil.cpp\" line=\"476\"/>\n@@ -1334,17 +1336,17 @@ This label turns red, if the priority is smaller than &quot;medium&quot;.\n     </message>\n     <message>\n         <location filename=\"../forms/intro.ui\" line=\"23\"/>\n-        <source>Welcome to novacoin-qt.</source>\n+        <source>Welcome to 42-qt.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n         <location filename=\"../forms/intro.ui\" line=\"49\"/>\n-        <source>As this is the first time the program is launched, you can choose where novacoin-qt will store its data.</source>\n+        <source>As this is the first time the program is launched, you can choose where 42-qt will store its data.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n         <location filename=\"../forms/intro.ui\" line=\"59\"/>\n-        <source>novacoin-qt will download and store a copy of the Novacoin block chain. At least %1GB of data will be stored in this directory, and it will grow over time. The wallet will also be stored in this directory.</source>\n+        <source>42-qt will download and store a copy of the 42 block chain. At least %1GB of data will be stored in this directory, and it will grow over time. The wallet will also be stored in this directory.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n@@ -1359,7 +1361,7 @@ This label turns red, if the priority is smaller than &quot;medium&quot;.\n     </message>\n     <message>\n         <location filename=\"../intro.cpp\" line=\"184\"/>\n-        <source>Novacoin-qt</source>\n+        <source>42-qt</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n@@ -1423,11 +1425,6 @@ This label turns red, if the priority is smaller than &quot;medium&quot;.\n         <source>MintProbability</source>\n         <translation>\u0412\u0435\u0440\u043e\u044f\u0442\u043d\u043e\u0441\u0442\u044c PoS</translation>\n     </message>\n-    <message>\n-        <location filename=\"../mintingtablemodel.cpp\" line=\"228\"/>\n-        <source>MintReward</source>\n-        <translation>\u041d\u0430\u0433\u0440\u0430\u0434\u0430 PoS</translation>\n-    </message>\n     <message>\n         <location filename=\"../mintingtablemodel.cpp\" line=\"327\"/>\n         <source>minutes</source>\n@@ -1791,8 +1788,8 @@ This label turns red, if the priority is smaller than &quot;medium&quot;.\n         <translation type=\"obsolete\">123.456</translation>\n     </message>\n     <message>\n-        <source>NVC</source>\n-        <translation type=\"obsolete\">NVC</translation>\n+        <source>42</source>\n+        <translation type=\"obsolete\">42</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/multisigdialog.ui\" line=\"413\"/>\n@@ -1901,13 +1898,13 @@ Reduce the number of addresses involved in the address creation.</source>\n     </message>\n     <message>\n         <location filename=\"../multisigdialog.cpp\" line=\"522\"/>\n-        <source>The fee of the transaction (%1 NVC) is smaller than the expected fee (%2 NVC). Do you want to send the transaction anyway?</source>\n-        <translation>\u041a\u043e\u043c\u0438\u0441\u0441\u0438\u044f (%1 NVC) \u043c\u0435\u043d\u044c\u0448\u0435 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u0439 (%2 NVC). \u0412\u044b \u0445\u043e\u0442\u0438\u0442\u0435 \u043e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u044c \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u044e \u0431\u0435\u0437 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0439?</translation>\n+        <source>The fee of the transaction (%1 42) is smaller than the expected fee (%2 42). Do you want to send the transaction anyway?</source>\n+        <translation>\u041a\u043e\u043c\u0438\u0441\u0441\u0438\u044f (%1 42) \u043c\u0435\u043d\u044c\u0448\u0435 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u0439 (%2 42). \u0412\u044b \u0445\u043e\u0442\u0438\u0442\u0435 \u043e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u044c \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u044e \u0431\u0435\u0437 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0439?</translation>\n     </message>\n     <message>\n         <location filename=\"../multisigdialog.cpp\" line=\"528\"/>\n-        <source>The fee of the transaction (%1 NVC) is bigger than the expected fee (%2 NVC). Do you want to send the transaction anyway?</source>\n-        <translation>\u041a\u043e\u043c\u0438\u0441\u0441\u0438\u044f (%1 NVC) \u0431\u043e\u043b\u044c\u0448\u0435 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u0439 (%2 NVC). \u0412\u044b \u0445\u043e\u0442\u0438\u0442\u0435 \u043e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u044c \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u044e \u0431\u0435\u0437 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0439?</translation>\n+        <source>The fee of the transaction (%1 42) is bigger than the expected fee (%2 42). Do you want to send the transaction anyway?</source>\n+        <translation>\u041a\u043e\u043c\u0438\u0441\u0441\u0438\u044f (%1 42) \u0431\u043e\u043b\u044c\u0448\u0435 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u0439 (%2 42). \u0412\u044b \u0445\u043e\u0442\u0438\u0442\u0435 \u043e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u044c \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u044e \u0431\u0435\u0437 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0439?</translation>\n     </message>\n </context>\n <context>\n@@ -1967,8 +1964,8 @@ Reduce the number of addresses involved in the address creation.</source>\n     </message>\n     <message>\n         <location filename=\"../forms/optionsdialog.ui\" line=\"33\"/>\n-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.001 recommended.</source>\n-        <translation>\u041e\u043f\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u0430\u044f \u043a\u043e\u043c\u0438\u0441\u0441\u0438\u044f \u0437\u0430 \u043a\u0430\u0436\u0434\u044b\u0439 \u041a\u0411 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0438, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0431\u044b\u0442\u044c \u0443\u0432\u0435\u0440\u0435\u043d\u043d\u044b\u043c, \u0447\u0442\u043e \u0412\u0430\u0448\u0430 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u044f \u0431\u0443\u0434\u0435\u0442 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d\u0430 \u0431\u044b\u0441\u0442\u0440\u043e.  \u0411\u043e\u043b\u044c\u0448\u0438\u043d\u0441\u0442\u0432\u043e \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0439 \u0437\u0430\u043d\u0438\u043c\u0430\u044e\u0442 1\u041a\u0411.  \u0420\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u0442\u0441\u044f \u043a\u043e\u043c\u0438\u0441\u0441\u0438\u044f 0.001.</translation>\n+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.00000001 recommended.</source>\n+        <translation>\u041e\u043f\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u0430\u044f \u043a\u043e\u043c\u0438\u0441\u0441\u0438\u044f \u0437\u0430 \u043a\u0430\u0436\u0434\u044b\u0439 \u041a\u0411 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0438, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0431\u044b\u0442\u044c \u0443\u0432\u0435\u0440\u0435\u043d\u043d\u044b\u043c, \u0447\u0442\u043e \u0412\u0430\u0448\u0430 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u044f \u0431\u0443\u0434\u0435\u0442 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d\u0430 \u0431\u044b\u0441\u0442\u0440\u043e.  \u0411\u043e\u043b\u044c\u0448\u0438\u043d\u0441\u0442\u0432\u043e \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0439 \u0437\u0430\u043d\u0438\u043c\u0430\u044e\u0442 1\u041a\u0411.  \u0420\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u0442\u0441\u044f \u043a\u043e\u043c\u0438\u0441\u0441\u0438\u044f 0.00000001.</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/optionsdialog.ui\" line=\"48\"/>\n@@ -1982,13 +1979,13 @@ Reduce the number of addresses involved in the address creation.</source>\n     </message>\n     <message>\n         <location filename=\"../forms/optionsdialog.ui\" line=\"86\"/>\n-        <source>Automatically start NovaCoin after logging in to the system.</source>\n-        <translation>\u0410\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0442\u044c NovaCoin \u043f\u043e\u0441\u043b\u0435 \u0432\u0445\u043e\u0434\u0430 \u0432 \u0441\u0438\u0441\u0442\u0435\u043c\u0443</translation>\n+        <source>Automatically start 42 after logging in to the system.</source>\n+        <translation>\u0410\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0442\u044c 42 \u043f\u043e\u0441\u043b\u0435 \u0432\u0445\u043e\u0434\u0430 \u0432 \u0441\u0438\u0441\u0442\u0435\u043c\u0443</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/optionsdialog.ui\" line=\"89\"/>\n-        <source>&amp;Start NovaCoin on system login</source>\n-        <translation>&amp;\u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0442\u044c NovaCoin \u043f\u0440\u0438 \u0432\u0445\u043e\u0434\u0435 \u0432 \u0441\u0438\u0441\u0442\u0435\u043c\u0443</translation>\n+        <source>&amp;Start 42 on system login</source>\n+        <translation>&amp;\u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0442\u044c 42 \u043f\u0440\u0438 \u0432\u0445\u043e\u0434\u0435 \u0432 \u0441\u0438\u0441\u0442\u0435\u043c\u0443</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/optionsdialog.ui\" line=\"96\"/>\n@@ -2007,8 +2004,8 @@ Reduce the number of addresses involved in the address creation.</source>\n     </message>\n     <message>\n         <location filename=\"../forms/optionsdialog.ui\" line=\"126\"/>\n-        <source>Connect to the NovaCoin network through a SOCKS proxy (e.g. when connecting through Tor).</source>\n-        <translation>\u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0442\u044c\u0441\u044f \u043a \u0441\u0435\u0442\u0438 NovaCoin \u0447\u0435\u0440\u0435\u0437 \u043f\u0440\u043e\u043a\u0441\u0438 SOCKS (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u043f\u0440\u0438 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0438 \u0447\u0435\u0440\u0435\u0437 Tor).</translation>\n+        <source>Connect to the 42 network through a SOCKS proxy (e.g. when connecting through Tor).</source>\n+        <translation>\u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0442\u044c\u0441\u044f \u043a \u0441\u0435\u0442\u0438 42 \u0447\u0435\u0440\u0435\u0437 \u043f\u0440\u043e\u043a\u0441\u0438 SOCKS (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u043f\u0440\u0438 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0438 \u0447\u0435\u0440\u0435\u0437 Tor).</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/optionsdialog.ui\" line=\"129\"/>\n@@ -2117,8 +2114,8 @@ Reduce the number of addresses involved in the address creation.</source>\n     </message>\n     <message>\n         <location filename=\"../forms/optionsdialog.ui\" line=\"425\"/>\n-        <source>The user interface language can be set here. This setting will take effect after restarting NovaCoin.</source>\n-        <translation>\u0417\u0434\u0435\u0441\u044c \u043c\u043e\u0436\u043d\u043e \u0432\u044b\u0431\u0440\u0430\u0442\u044c \u044f\u0437\u044b\u043a \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430. \u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u0432\u0441\u0442\u0443\u043f\u044f\u0442 \u0432 \u0441\u0438\u043b\u0443 \u043f\u043e\u0441\u043b\u0435 \u043f\u0435\u0440\u0435\u0437\u0430\u043f\u0443\u0441\u043a\u0430 NovaCoin.</translation>\n+        <source>The user interface language can be set here. This setting will take effect after restarting 42.</source>\n+        <translation>\u0417\u0434\u0435\u0441\u044c \u043c\u043e\u0436\u043d\u043e \u0432\u044b\u0431\u0440\u0430\u0442\u044c \u044f\u0437\u044b\u043a \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430. \u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u0432\u0441\u0442\u0443\u043f\u044f\u0442 \u0432 \u0441\u0438\u043b\u0443 \u043f\u043e\u0441\u043b\u0435 \u043f\u0435\u0440\u0435\u0437\u0430\u043f\u0443\u0441\u043a\u0430 42.</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/optionsdialog.ui\" line=\"436\"/>\n@@ -2132,8 +2129,8 @@ Reduce the number of addresses involved in the address creation.</source>\n     </message>\n     <message>\n         <location filename=\"../forms/optionsdialog.ui\" line=\"458\"/>\n-        <source>Whether to show NovaCoin addresses in the transaction list or not.</source>\n-        <translation>\u041f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0442\u044c \u043b\u0438 \u0430\u0434\u0440\u0435\u0441\u0430 NovaCoin \u0432 \u0441\u043f\u0438\u0441\u043a\u0435 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0439.</translation>\n+        <source>Whether to show 42 addresses in the transaction list or not.</source>\n+        <translation>\u041f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0442\u044c \u043b\u0438 \u0430\u0434\u0440\u0435\u0441\u0430 42 \u0432 \u0441\u043f\u0438\u0441\u043a\u0435 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0439.</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/optionsdialog.ui\" line=\"461\"/>\n@@ -2153,8 +2150,8 @@ Reduce the number of addresses involved in the address creation.</source>\n     <message>\n         <location filename=\"../forms/optionsdialog.ui\" line=\"480\"/>\n         <location filename=\"../forms/optionsdialog.ui\" line=\"493\"/>\n-        <source>Third party URLs (e.g. explorer.novaco.in) that appear in the transactions tab as context menu items. %s in the URL is replaced by transaction hash. Multiple URLs are separated by vertical bar |.</source>\n-        <translation>\u0421\u0442\u043e\u0440\u043e\u043d\u043d\u0438\u0435 URL (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440 explorer.novaco.in), \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u044e\u0442\u0441\u044f \u043d\u0430 \u0432\u043a\u043b\u0430\u0434\u043a\u0435 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0439 \u043a\u0430\u043a \u043f\u0443\u043d\u043a\u0442\u044b \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u043d\u043e\u0433\u043e \u043c\u0435\u043d\u044e. %s \u0432 URL \u0437\u0430\u043c\u0435\u043d\u044f\u0435\u0442\u0441\u044f \u0445\u0435\u0448\u0435\u043c \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0438. URL \u043e\u0442\u0434\u0435\u043b\u044f\u044e\u0442\u0441\u044f \u0434\u0440\u0443\u0433 \u043e\u0442 \u0434\u0440\u0443\u0433\u0430 \u0432\u0435\u0440\u0442\u0438\u043a\u0430\u043b\u044c\u043d\u043e\u0439 \u0447\u0435\u0440\u0442\u043e\u0439 |.</translation>\n+        <source>Third party URLs that appear in the transactions tab as context menu items. %s in the URL is replaced by transaction hash. Multiple URLs are separated by vertical bar |.</source>\n+        <translation>\u0421\u0442\u043e\u0440\u043e\u043d\u043d\u0438\u0435 URL, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u044e\u0442\u0441\u044f \u043d\u0430 \u0432\u043a\u043b\u0430\u0434\u043a\u0435 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0439 \u043a\u0430\u043a \u043f\u0443\u043d\u043a\u0442\u044b \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u043d\u043e\u0433\u043e \u043c\u0435\u043d\u044e. %s \u0432 URL \u0437\u0430\u043c\u0435\u043d\u044f\u0435\u0442\u0441\u044f \u0445\u0435\u0448\u0435\u043c \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0438. URL \u043e\u0442\u0434\u0435\u043b\u044f\u044e\u0442\u0441\u044f \u0434\u0440\u0443\u0433 \u043e\u0442 \u0434\u0440\u0443\u0433\u0430 \u0432\u0435\u0440\u0442\u0438\u043a\u0430\u043b\u044c\u043d\u043e\u0439 \u0447\u0435\u0440\u0442\u043e\u0439 |.</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/optionsdialog.ui\" line=\"483\"/>\n@@ -2194,8 +2191,8 @@ Reduce the number of addresses involved in the address creation.</source>\n         <location filename=\"../optionsdialog.cpp\" line=\"251\"/>\n         <location filename=\"../optionsdialog.cpp\" line=\"260\"/>\n         <location filename=\"../optionsdialog.cpp\" line=\"269\"/>\n-        <source>This setting will take effect after restarting NovaCoin.</source>\n-        <translation>\u042d\u0442\u0430 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u0432\u0441\u0442\u0443\u043f\u0438\u0442 \u0432 \u0441\u0438\u043b\u0443 \u043f\u043e\u0441\u043b\u0435 \u043f\u0435\u0440\u0435\u0437\u0430\u043f\u0443\u0441\u043a\u0430 NovaCoin</translation>\n+        <source>This setting will take effect after restarting 42.</source>\n+        <translation>\u042d\u0442\u0430 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u0432\u0441\u0442\u0443\u043f\u0438\u0442 \u0432 \u0441\u0438\u043b\u0443 \u043f\u043e\u0441\u043b\u0435 \u043f\u0435\u0440\u0435\u0437\u0430\u043f\u0443\u0441\u043a\u0430 42</translation>\n     </message>\n     <message>\n         <location filename=\"../optionsdialog.cpp\" line=\"299\"/>\n@@ -2228,8 +2225,8 @@ Reduce the number of addresses involved in the address creation.</source>\n     <message>\n         <location filename=\"../forms/overviewpage.ui\" line=\"46\"/>\n         <location filename=\"../forms/overviewpage.ui\" line=\"365\"/>\n-        <source>The displayed information may be out of date. Your wallet automatically synchronizes with the NovaCoin network after a connection is established, but this process has not completed yet.</source>\n-        <translation>\u041e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u043c\u0430\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0443\u0441\u0442\u0430\u0440\u0435\u0432\u0448\u0435\u0439. \u0412\u0430\u0448 \u0431\u0443\u043c\u0430\u0436\u043d\u0438\u043a \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0441\u0438\u043d\u0445\u0440\u043e\u043d\u0438\u0437\u0438\u0440\u0443\u0435\u0442\u0441\u044f \u0441 \u0441\u0435\u0442\u044c\u044e NovaCoin \u043f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f, \u043d\u043e \u044d\u0442\u043e\u0442 \u043f\u0440\u043e\u0446\u0435\u0441\u0441 \u043f\u043e\u043a\u0430 \u043d\u0435 \u0437\u0430\u0432\u0435\u0440\u0448\u0451\u043d.</translation>\n+        <source>The displayed information may be out of date. Your wallet automatically synchronizes with the 42 network after a connection is established, but this process has not completed yet.</source>\n+        <translation>\u041e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u043c\u0430\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0443\u0441\u0442\u0430\u0440\u0435\u0432\u0448\u0435\u0439. \u0412\u0430\u0448 \u0431\u0443\u043c\u0430\u0436\u043d\u0438\u043a \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0441\u0438\u043d\u0445\u0440\u043e\u043d\u0438\u0437\u0438\u0440\u0443\u0435\u0442\u0441\u044f \u0441 \u0441\u0435\u0442\u044c\u044e 42 \u043f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f, \u043d\u043e \u044d\u0442\u043e\u0442 \u043f\u0440\u043e\u0446\u0435\u0441\u0441 \u043f\u043e\u043a\u0430 \u043d\u0435 \u0437\u0430\u0432\u0435\u0440\u0448\u0451\u043d.</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/overviewpage.ui\" line=\"225\"/>\n@@ -2329,18 +2326,18 @@ Reduce the number of addresses involved in the address creation.</source>\n     <name>QObject</name>\n     <message>\n         <location filename=\"../bitcoinunits.cpp\" line=\"48\"/>\n-        <source>NovaCoins</source>\n-        <translation>NovaCoins</translation>\n+        <source>42s</source>\n+        <translation>42s</translation>\n     </message>\n     <message>\n         <location filename=\"../bitcoinunits.cpp\" line=\"49\"/>\n-        <source>Milli-NovaCoins (1 / 1,000)</source>\n-        <translation>\u041c\u0438\u043b\u043b\u0438-NovaCoins (1 / 1000)</translation>\n+        <source>Milli-42s (1 / 1,000)</source>\n+        <translation>\u041c\u0438\u043b\u043b\u0438-42s (1 / 1000)</translation>\n     </message>\n     <message>\n         <location filename=\"../bitcoinunits.cpp\" line=\"50\"/>\n-        <source>Micro-NovaCoins (1 / 1,000,000)</source>\n-        <translation>\u041c\u0438\u043a\u0440\u043e-NovaCoins (1 / 1000000)</translation>\n+        <source>Micro-42s (1 / 1,000,000)</source>\n+        <translation>\u041c\u0438\u043a\u0440\u043e-42s (1 / 1000000)</translation>\n     </message>\n     <message>\n         <location filename=\"../bitcoinunits.cpp\" line=\"185\"/>\n@@ -2440,8 +2437,8 @@ Reduce the number of addresses involved in the address creation.</source>\n     <name>RPCConsole</name>\n     <message>\n         <location filename=\"../forms/rpcconsole.ui\" line=\"14\"/>\n-        <source>NovaCoin - Debug window</source>\n-        <translation>NovaCoin - \u041e\u043a\u043d\u043e \u043e\u0442\u043b\u0430\u0434\u043a\u0438</translation>\n+        <source>42 - Debug window</source>\n+        <translation>42 - \u041e\u043a\u043d\u043e \u043e\u0442\u043b\u0430\u0434\u043a\u0438</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/rpcconsole.ui\" line=\"24\"/>\n@@ -2480,8 +2477,8 @@ Reduce the number of addresses involved in the address creation.</source>\n     </message>\n     <message>\n         <location filename=\"../forms/rpcconsole.ui\" line=\"95\"/>\n-        <source>Open the NovaCoin debug log file from the current data directory. This can take a few seconds for large log files.</source>\n-        <translation>\u041e\u0442\u043a\u0440\u044b\u0442\u044c \u043e\u0442\u043b\u0430\u0434\u043e\u0447\u043d\u044b\u0439 \u043b\u043e\u0433-\u0444\u0430\u0439\u043b NovaCoin \u0438\u0437 \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u043a\u0430\u0442\u0430\u043b\u043e\u0433\u0430 \u0434\u0430\u043d\u043d\u044b\u0445. \u042d\u0442\u043e \u043c\u043e\u0436\u0435\u0442 \u0437\u0430\u043d\u044f\u0442\u044c \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0441\u0435\u043a\u0443\u043d\u0434 \u0434\u043b\u044f \u0431\u043e\u043b\u044c\u0448\u0438\u0445 \u043b\u043e\u0433-\u0444\u0430\u0439\u043b\u043e\u0432.</translation>\n+        <source>Open the 42 debug log file from the current data directory. This can take a few seconds for large log files.</source>\n+        <translation>\u041e\u0442\u043a\u0440\u044b\u0442\u044c \u043e\u0442\u043b\u0430\u0434\u043e\u0447\u043d\u044b\u0439 \u043b\u043e\u0433-\u0444\u0430\u0439\u043b 42 \u0438\u0437 \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u043a\u0430\u0442\u0430\u043b\u043e\u0433\u0430 \u0434\u0430\u043d\u043d\u044b\u0445. \u042d\u0442\u043e \u043c\u043e\u0436\u0435\u0442 \u0437\u0430\u043d\u044f\u0442\u044c \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0441\u0435\u043a\u0443\u043d\u0434 \u0434\u043b\u044f \u0431\u043e\u043b\u044c\u0448\u0438\u0445 \u043b\u043e\u0433-\u0444\u0430\u0439\u043b\u043e\u0432.</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/rpcconsole.ui\" line=\"98\"/>\n@@ -2495,8 +2492,8 @@ Reduce the number of addresses involved in the address creation.</source>\n     </message>\n     <message>\n         <location filename=\"../forms/rpcconsole.ui\" line=\"147\"/>\n-        <source>Show the NovaCoin-Qt help message to get a list with possible NovaCoin command-line options.</source>\n-        <translation>\u041f\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u043f\u043e\u043c\u043e\u0449\u044c \u043f\u043e NovaCoin-Qt, \u0447\u0442\u043e\u0431\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0445 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432 \u043a\u043e\u043c\u0430\u043d\u0434\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438.</translation>\n+        <source>Show the 42-Qt help message to get a list with possible 42 command-line options.</source>\n+        <translation>\u041f\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u043f\u043e\u043c\u043e\u0449\u044c \u043f\u043e 42-Qt, \u0447\u0442\u043e\u0431\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0445 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432 \u043a\u043e\u043c\u0430\u043d\u0434\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438.</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/rpcconsole.ui\" line=\"150\"/>\n@@ -2560,8 +2557,8 @@ Reduce the number of addresses involved in the address creation.</source>\n     </message>\n     <message>\n         <location filename=\"../forms/rpcconsole.ui\" line=\"383\"/>\n-        <source>NovaCoin Core</source>\n-        <translation>\u042f\u0434\u0440\u043e NovaCoin</translation>\n+        <source>42 Core</source>\n+        <translation>\u042f\u0434\u0440\u043e 42</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/rpcconsole.ui\" line=\"406\"/>\n@@ -2570,8 +2567,8 @@ Reduce the number of addresses involved in the address creation.</source>\n     </message>\n     <message>\n         <location filename=\"../forms/rpcconsole.ui\" line=\"426\"/>\n-        <source>Open the NovaCoin configuration file from the current data directory.</source>\n-        <translation>\u041e\u0442\u043a\u0440\u044b\u0442\u044c \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u043e\u043d\u043d\u044b\u0439 \u0444\u0430\u0439\u043b NovaCoin \u0438\u0437 \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u043a\u0430\u0442\u0430\u043b\u043e\u0433\u0430 \u0434\u0430\u043d\u043d\u044b\u0445.</translation>\n+        <source>Open the 42 configuration file from the current data directory.</source>\n+        <translation>\u041e\u0442\u043a\u0440\u044b\u0442\u044c \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u043e\u043d\u043d\u044b\u0439 \u0444\u0430\u0439\u043b 42 \u0438\u0437 \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u043a\u0430\u0442\u0430\u043b\u043e\u0433\u0430 \u0434\u0430\u043d\u043d\u044b\u0445.</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/rpcconsole.ui\" line=\"429\"/>\n@@ -2615,8 +2612,8 @@ Reduce the number of addresses involved in the address creation.</source>\n     </message>\n     <message>\n         <location filename=\"../rpcconsole.cpp\" line=\"325\"/>\n-        <source>Welcome to the NovaCoin RPC console.</source>\n-        <translation>\u0414\u043e\u0431\u0440\u043e \u043f\u043e\u0436\u0430\u043b\u043e\u0432\u0430\u0442\u044c \u0432 RPC-\u043a\u043e\u043d\u0441\u043e\u043b\u044c NovaCoin.</translation>\n+        <source>Welcome to the 42 RPC console.</source>\n+        <translation>\u0414\u043e\u0431\u0440\u043e \u043f\u043e\u0436\u0430\u043b\u043e\u0432\u0430\u0442\u044c \u0432 RPC-\u043a\u043e\u043d\u0441\u043e\u043b\u044c 42.</translation>\n     </message>\n     <message>\n         <location filename=\"../rpcconsole.cpp\" line=\"326\"/>\n@@ -2666,8 +2663,8 @@ Reduce the number of addresses involved in the address creation.</source>\n         <translation type=\"obsolete\">\u041f\u043e\u0434\u043f\u0438\u0441\u0438 - \u043f\u043e\u0434\u043f\u0438\u0441\u0430\u0442\u044c/\u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435</translation>\n     </message>\n     <message>\n-        <source>The address to sign the message with (e.g. 4Zo1ga6xuKuQ7JV7M9rGDoxdbYwV5zgQJ5)</source>\n-        <translation type=\"obsolete\">\u0410\u0434\u0440\u0435\u0441, \u043a\u043e\u0442\u043e\u0440\u044b\u043c \u0432\u044b \u0445\u043e\u0442\u0438\u0442\u0435 \u043f\u043e\u0434\u043f\u0438\u0441\u0430\u0442\u044c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435  (\u043d\u0430\u043f\u0440. 4Zo1ga6xuKuQ7JV7M9rGDoxdbYwV5zgQJ5)</translation>\n+        <source>The address to sign the message with (e.g. 4VsEs7wqRpoiTpmqViWRtse1P3CNgvBw4g)</source>\n+        <translation type=\"obsolete\">\u0410\u0434\u0440\u0435\u0441, \u043a\u043e\u0442\u043e\u0440\u044b\u043c \u0432\u044b \u0445\u043e\u0442\u0438\u0442\u0435 \u043f\u043e\u0434\u043f\u0438\u0441\u0430\u0442\u044c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435  (\u043d\u0430\u043f\u0440. 4VsEs7wqRpoiTpmqViWRtse1P3CNgvBw4g)</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/secondauthdialog.ui\" line=\"48\"/>\n@@ -2711,8 +2708,8 @@ Reduce the number of addresses involved in the address creation.</source>\n     </message>\n     <message>\n         <location filename=\"../secondauthdialog.cpp\" line=\"29\"/>\n-        <source>Enter a NovaCoin address (e.g. 4Zo1ga6xuKuQ7JV7M9rGDoxdbYwV5zgQJ5)</source>\n-        <translation>\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0430\u0434\u0440\u0435\u0441 NovaCoin (\u043d\u0430\u043f\u0440. 4Zo1ga6xuKuQ7JV7M9rGDoxdbYwV5zgQJ5)</translation>\n+        <source>Enter a 42 address (e.g. 4VsEs7wqRpoiTpmqViWRtse1P3CNgvBw4g)</source>\n+        <translation>\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0430\u0434\u0440\u0435\u0441 42 (\u043d\u0430\u043f\u0440. 4VsEs7wqRpoiTpmqViWRtse1P3CNgvBw4g)</translation>\n     </message>\n     <message>\n         <location filename=\"../secondauthdialog.cpp\" line=\"80\"/>\n@@ -2767,8 +2764,8 @@ Reduce the number of addresses involved in the address creation.</source>\n     </message>\n     <message>\n         <location filename=\"../forms/secondauthdialog.ui\" line=\"38\"/>\n-        <source>The address for authentification (e.g. 4Zo1ga6xuKuQ7JV7M9rGDoxdbYwV5zgQJ5)</source>\n-        <translation>\u0410\u0434\u0440\u0435\u0441, \u043f\u043e \u043a\u043e\u0442\u043e\u0440\u043e\u043c\u0443 \u0432\u044b \u043f\u0440\u043e\u0445\u043e\u0434\u0438\u0442\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u044e (\u043d\u0430\u043f\u0440. 4Zo1ga6xuKuQ7JV7M9rGDoxdbYwV5zgQJ5)</translation>\n+        <source>The address for authentification (e.g. 4VsEs7wqRpoiTpmqViWRtse1P3CNgvBw4g)</source>\n+        <translation>\u0410\u0434\u0440\u0435\u0441, \u043f\u043e \u043a\u043e\u0442\u043e\u0440\u043e\u043c\u0443 \u0432\u044b \u043f\u0440\u043e\u0445\u043e\u0434\u0438\u0442\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u044e (\u043d\u0430\u043f\u0440. 4VsEs7wqRpoiTpmqViWRtse1P3CNgvBw4g)</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/secondauthdialog.ui\" line=\"79\"/>\n@@ -2844,8 +2841,8 @@ Reduce the number of addresses involved in the address creation.</source>\n         <translation>\u0421\u0443\u043c\u043c\u0430:</translation>\n     </message>\n     <message>\n-        <source>0.00 NVC</source>\n-        <translation type=\"obsolete\">0.00 NVC</translation>\n+        <source>0.00000000 42</source>\n+        <translation type=\"obsolete\">0.00000000 42</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/sendcoinsdialog.ui\" line=\"337\"/>\n@@ -2933,8 +2930,8 @@ Reduce the number of addresses involved in the address creation.</source>\n         <translation>\u0411\u0430\u043b\u0430\u043d\u0441:</translation>\n     </message>\n     <message>\n-        <source>123.456 NVC</source>\n-        <translation type=\"obsolete\">123.456 NVC</translation>\n+        <source>123.456 42</source>\n+        <translation type=\"obsolete\">123.456 42</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/sendcoinsdialog.ui\" line=\"772\"/>\n@@ -2948,8 +2945,8 @@ Reduce the number of addresses involved in the address creation.</source>\n     </message>\n     <message>\n         <location filename=\"../sendcoinsdialog.cpp\" line=\"43\"/>\n-        <source>Enter a NovaCoin address (e.g. 4Zo1ga6xuKuQ7JV7M9rGDoxdbYwV5zgQJ5)</source>\n-        <translation>\u0412\u0432\u0435\u0434\u0438\u0442\u0435 NovaCoin-\u0430\u0434\u0440\u0435\u0441 (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440 4Zo1ga6xuKuQ7JV7M9rGDoxdbYwV5zgQJ5)</translation>\n+        <source>Enter a 42 address (e.g. 4VsEs7wqRpoiTpmqViWRtse1P3CNgvBw4g)</source>\n+        <translation>\u0412\u0432\u0435\u0434\u0438\u0442\u0435 42-\u0430\u0434\u0440\u0435\u0441 (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440 4VsEs7wqRpoiTpmqViWRtse1P3CNgvBw4g)</translation>\n     </message>\n     <message>\n         <location filename=\"../sendcoinsdialog.cpp\" line=\"57\"/>\n@@ -3078,8 +3075,8 @@ Reduce the number of addresses involved in the address creation.</source>\n     </message>\n     <message>\n         <location filename=\"../forms/sendcoinsentry.ui\" line=\"93\"/>\n-        <source>The address to send the payment to  (e.g. 4Zo1ga6xuKuQ7JV7M9rGDoxdbYwV5zgQJ5)</source>\n-        <translation>\u0410\u0434\u0440\u0435\u0441 \u043f\u043e\u043b\u0443\u0447\u0430\u0442\u0435\u043b\u044f \u043f\u043b\u0430\u0442\u0435\u0436\u0430 (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440 4Zo1ga6xuKuQ7JV7M9rGDoxdbYwV5zgQJ5)</translation>\n+        <source>The address to send the payment to  (e.g. 4VsEs7wqRpoiTpmqViWRtse1P3CNgvBw4g)</source>\n+        <translation>\u0410\u0434\u0440\u0435\u0441 \u043f\u043e\u043b\u0443\u0447\u0430\u0442\u0435\u043b\u044f \u043f\u043b\u0430\u0442\u0435\u0436\u0430 (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440 4VsEs7wqRpoiTpmqViWRtse1P3CNgvBw4g)</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/sendcoinsentry.ui\" line=\"103\"/>\n@@ -3108,8 +3105,8 @@ Reduce the number of addresses involved in the address creation.</source>\n     </message>\n     <message>\n         <location filename=\"../sendcoinsentry.cpp\" line=\"26\"/>\n-        <source>Enter a NovaCoin address (e.g. 4Zo1ga6xuKuQ7JV7M9rGDoxdbYwV5zgQJ5)</source>\n-        <translation>\u0412\u0432\u0435\u0434\u0438\u0442\u0435 NovaCoin-\u0430\u0434\u0440\u0435\u0441 (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440 4Zo1ga6xuKuQ7JV7M9rGDoxdbYwV5zgQJ5)</translation>\n+        <source>Enter a 42 address (e.g. 4VsEs7wqRpoiTpmqViWRtse1P3CNgvBw4g)</source>\n+        <translation>\u0412\u0432\u0435\u0434\u0438\u0442\u0435 42-\u0430\u0434\u0440\u0435\u0441 (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440 4VsEs7wqRpoiTpmqViWRtse1P3CNgvBw4g)</translation>\n     </message>\n </context>\n <context>\n@@ -3132,8 +3129,8 @@ Reduce the number of addresses involved in the address creation.</source>\n     </message>\n     <message>\n         <location filename=\"../forms/signverifymessagedialog.ui\" line=\"51\"/>\n-        <source>The address to sign the message with (e.g. 4Zo1ga6xuKuQ7JV7M9rGDoxdbYwV5zgQJ5)</source>\n-        <translation>\u0410\u0434\u0440\u0435\u0441, \u043a\u043e\u0442\u043e\u0440\u044b\u043c \u0432\u044b \u0445\u043e\u0442\u0438\u0442\u0435 \u043f\u043e\u0434\u043f\u0438\u0441\u0430\u0442\u044c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435  (\u043d\u0430\u043f\u0440. 4Zo1ga6xuKuQ7JV7M9rGDoxdbYwV5zgQJ5)</translation>\n+        <source>The address to sign the message with (e.g. 4VsEs7wqRpoiTpmqViWRtse1P3CNgvBw4g)</source>\n+        <translation>\u0410\u0434\u0440\u0435\u0441, \u043a\u043e\u0442\u043e\u0440\u044b\u043c \u0432\u044b \u0445\u043e\u0442\u0438\u0442\u0435 \u043f\u043e\u0434\u043f\u0438\u0441\u0430\u0442\u044c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435  (\u043d\u0430\u043f\u0440. 4VsEs7wqRpoiTpmqViWRtse1P3CNgvBw4g)</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/signverifymessagedialog.ui\" line=\"61\"/>\n@@ -3169,8 +3166,8 @@ Reduce the number of addresses involved in the address creation.</source>\n     </message>\n     <message>\n         <location filename=\"../forms/signverifymessagedialog.ui\" line=\"148\"/>\n-        <source>Sign the message to prove you own this NovaCoin address</source>\n-        <translation>\u041f\u043e\u0434\u043f\u0438\u0441\u0430\u0442\u044c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435, \u0447\u0442\u043e\u0431\u044b \u0434\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u0435 \u0430\u0434\u0440\u0435\u0441\u043e\u043c NovaCoin</translation>\n+        <source>Sign the message to prove you own this 42 address</source>\n+        <translation>\u041f\u043e\u0434\u043f\u0438\u0441\u0430\u0442\u044c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435, \u0447\u0442\u043e\u0431\u044b \u0434\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u0435 \u0430\u0434\u0440\u0435\u0441\u043e\u043c 42</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/signverifymessagedialog.ui\" line=\"165\"/>\n@@ -3196,13 +3193,13 @@ Reduce the number of addresses involved in the address creation.</source>\n     </message>\n     <message>\n         <location filename=\"../forms/signverifymessagedialog.ui\" line=\"254\"/>\n-        <source>The address the message was signed with (e.g. 4Zo1ga6xuKuQ7JV7M9rGDoxdbYwV5zgQJ5)</source>\n-        <translation>\u0410\u0434\u0440\u0435\u0441, \u043a\u043e\u0442\u043e\u0440\u044b\u043c \u0431\u044b\u043b\u043e \u043f\u043e\u0434\u043f\u0438\u0441\u0430\u043d\u043e \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 (\u043d\u0430\u043f\u0440. 4Zo1ga6xuKuQ7JV7M9rGDoxdbYwV5zgQJ5)</translation>\n+        <source>The address the message was signed with (e.g. 4VsEs7wqRpoiTpmqViWRtse1P3CNgvBw4g)</source>\n+        <translation>\u0410\u0434\u0440\u0435\u0441, \u043a\u043e\u0442\u043e\u0440\u044b\u043c \u0431\u044b\u043b\u043e \u043f\u043e\u0434\u043f\u0438\u0441\u0430\u043d\u043e \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 (\u043d\u0430\u043f\u0440. 4VsEs7wqRpoiTpmqViWRtse1P3CNgvBw4g)</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/signverifymessagedialog.ui\" line=\"294\"/>\n-        <source>Verify the message to ensure it was signed with the specified NovaCoin address</source>\n-        <translation>\u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435, \u0447\u0442\u043e\u0431\u044b \u0443\u0431\u0435\u0434\u0438\u0442\u044c\u0441\u044f, \u0447\u0442\u043e \u043e\u043d\u043e \u0431\u044b\u043b\u043e \u043f\u043e\u0434\u043f\u0438\u0441\u0430\u043d\u043e \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u043c \u0430\u0434\u0440\u0435\u0441\u043e\u043c NovaCoin</translation>\n+        <source>Verify the message to ensure it was signed with the specified 42 address</source>\n+        <translation>\u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435, \u0447\u0442\u043e\u0431\u044b \u0443\u0431\u0435\u0434\u0438\u0442\u044c\u0441\u044f, \u0447\u0442\u043e \u043e\u043d\u043e \u0431\u044b\u043b\u043e \u043f\u043e\u0434\u043f\u0438\u0441\u0430\u043d\u043e \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u043c \u0430\u0434\u0440\u0435\u0441\u043e\u043c 42</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/signverifymessagedialog.ui\" line=\"311\"/>\n@@ -3212,8 +3209,8 @@ Reduce the number of addresses involved in the address creation.</source>\n     <message>\n         <location filename=\"../signverifymessagedialog.cpp\" line=\"29\"/>\n         <location filename=\"../signverifymessagedialog.cpp\" line=\"32\"/>\n-        <source>Enter a NovaCoin address (e.g. 4Zo1ga6xuKuQ7JV7M9rGDoxdbYwV5zgQJ5)</source>\n-        <translation>\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0430\u0434\u0440\u0435\u0441 NovaCoin (\u043d\u0430\u043f\u0440. 4Zo1ga6xuKuQ7JV7M9rGDoxdbYwV5zgQJ5)</translation>\n+        <source>Enter a 42 address (e.g. 4VsEs7wqRpoiTpmqViWRtse1P3CNgvBw4g)</source>\n+        <translation>\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0430\u0434\u0440\u0435\u0441 42 (\u043d\u0430\u043f\u0440. 4VsEs7wqRpoiTpmqViWRtse1P3CNgvBw4g)</translation>\n     </message>\n     <message>\n         <location filename=\"../signverifymessagedialog.cpp\" line=\"30\"/>\n@@ -3222,8 +3219,8 @@ Reduce the number of addresses involved in the address creation.</source>\n     </message>\n     <message>\n         <location filename=\"../signverifymessagedialog.cpp\" line=\"33\"/>\n-        <source>Enter NovaCoin signature</source>\n-        <translation>\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043f\u043e\u0434\u043f\u0438\u0441\u044c NovaCoin</translation>\n+        <source>Enter 42 signature</source>\n+        <translation>\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043f\u043e\u0434\u043f\u0438\u0441\u044c 42</translation>\n     </message>\n     <message>\n         <location filename=\"../signverifymessagedialog.cpp\" line=\"115\"/>\n@@ -3456,8 +3453,8 @@ Reduce the number of addresses involved in the address creation.</source>\n     </message>\n     <message>\n         <location filename=\"../transactiondesc.cpp\" line=\"253\"/>\n-        <source>Generated coins must mature 520 blocks before they can be spent. When you generated this block, it was broadcast to the network to be added to the block chain. If it fails to get into the chain, its state will change to &quot;not accepted&quot; and it won&apos;t be spendable. This may occasionally happen if another node generates a block within a few seconds of yours.</source>\n-        <translation>\u0421\u0433\u0435\u043d\u0435\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u043c\u043e\u043d\u0435\u0442\u044b \u0434\u043e\u043b\u0436\u043d\u044b \u043f\u043e\u0434\u043e\u0436\u0434\u0430\u0442\u044c 520 \u0431\u043b\u043e\u043a\u043e\u0432, \u043f\u0440\u0435\u0436\u0434\u0435 \u0447\u0435\u043c \u043e\u043d\u0438 \u043c\u043e\u0433\u0443\u0442 \u0431\u044b\u0442\u044c \u043f\u043e\u0442\u0440\u0430\u0447\u0435\u043d\u044b. \u041a\u043e\u0433\u0434\u0430 \u0412\u044b \u0441\u0433\u0435\u043d\u0435\u0440\u0438\u0440\u043e\u0432\u0430\u043b\u0438 \u044d\u0442\u043e\u0442 \u0431\u043b\u043e\u043a, \u043e\u043d \u0431\u044b\u043b \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u0435\u043d \u0432 \u0441\u0435\u0442\u044c \u0434\u043b\u044f \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0432 \u0446\u0435\u043f\u043e\u0447\u043a\u0443 \u0431\u043b\u043e\u043a\u043e\u0432. \u0415\u0441\u043b\u0438 \u0434\u0430\u043d\u043d\u0430\u044f \u043f\u0440\u043e\u0446\u0435\u0434\u0443\u0440\u0430 \u043d\u0435 \u0443\u0434\u0430\u0441\u0442\u0441\u044f, \u0441\u0442\u0430\u0442\u0443\u0441 \u0438\u0437\u043c\u0435\u043d\u0438\u0442\u0441\u044f \u043d\u0430 \u00ab\u043d\u0435 \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u043e\u00bb, \u0438 \u043c\u043e\u043d\u0435\u0442\u044b \u0431\u0443\u0434\u0443\u0442 \u043d\u0435\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u044b. \u042d\u0442\u043e \u0438\u043d\u043e\u0433\u0434\u0430 \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442 \u0432 \u0441\u043b\u0443\u0447\u0430\u0435, \u0435\u0441\u043b\u0438 \u0434\u0440\u0443\u0433\u043e\u0439 \u0443\u0437\u0435\u043b \u0441\u0433\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u0442 \u0431\u043b\u043e\u043a \u043d\u0430 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0441\u0435\u043a\u0443\u043d\u0434 \u0440\u0430\u043d\u044c\u0448\u0435 \u0432\u0430\u0441.</translation>\n+        <source>Generated coins must mature 42 blocks before they can be spent. When you generated this block, it was broadcast to the network to be added to the block chain. If it fails to get into the chain, its state will change to &quot;not accepted&quot; and it won&apos;t be spendable. This may occasionally happen if another node generates a block within a few seconds of yours.</source>\n+        <translation>\u0421\u0433\u0435\u043d\u0435\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u043c\u043e\u043d\u0435\u0442\u044b \u0434\u043e\u043b\u0436\u043d\u044b \u043f\u043e\u0434\u043e\u0436\u0434\u0430\u0442\u044c 42 \u0431\u043b\u043e\u043a\u0430, \u043f\u0440\u0435\u0436\u0434\u0435 \u0447\u0435\u043c \u043e\u043d\u0438 \u043c\u043e\u0433\u0443\u0442 \u0431\u044b\u0442\u044c \u043f\u043e\u0442\u0440\u0430\u0447\u0435\u043d\u044b. \u041a\u043e\u0433\u0434\u0430 \u0412\u044b \u0441\u0433\u0435\u043d\u0435\u0440\u0438\u0440\u043e\u0432\u0430\u043b\u0438 \u044d\u0442\u043e\u0442 \u0431\u043b\u043e\u043a, \u043e\u043d \u0431\u044b\u043b \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u0435\u043d \u0432 \u0441\u0435\u0442\u044c \u0434\u043b\u044f \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0432 \u0446\u0435\u043f\u043e\u0447\u043a\u0443 \u0431\u043b\u043e\u043a\u043e\u0432. \u0415\u0441\u043b\u0438 \u0434\u0430\u043d\u043d\u0430\u044f \u043f\u0440\u043e\u0446\u0435\u0434\u0443\u0440\u0430 \u043d\u0435 \u0443\u0434\u0430\u0441\u0442\u0441\u044f, \u0441\u0442\u0430\u0442\u0443\u0441 \u0438\u0437\u043c\u0435\u043d\u0438\u0442\u0441\u044f \u043d\u0430 \u00ab\u043d\u0435 \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u043e\u00bb, \u0438 \u043c\u043e\u043d\u0435\u0442\u044b \u0431\u0443\u0434\u0443\u0442 \u043d\u0435\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u044b. \u042d\u0442\u043e \u0438\u043d\u043e\u0433\u0434\u0430 \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442 \u0432 \u0441\u043b\u0443\u0447\u0430\u0435, \u0435\u0441\u043b\u0438 \u0434\u0440\u0443\u0433\u043e\u0439 \u0443\u0437\u0435\u043b \u0441\u0433\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u0442 \u0431\u043b\u043e\u043a \u043d\u0430 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0441\u0435\u043a\u0443\u043d\u0434 \u0440\u0430\u043d\u044c\u0448\u0435 \u0432\u0430\u0441.</translation>\n     </message>\n     <message>\n         <location filename=\"../transactiondesc.cpp\" line=\"260\"/>\n@@ -3813,15 +3810,15 @@ Reduce the number of addresses involved in the address creation.</source>\n         <source>%s, you must set a rpcpassword in the configuration file:\n  %s\n It is recommended you use the following random password:\n-rpcuser=novacoinrpc\n+rpcuser=42rpc\n rpcpassword=%s\n (you do not need to remember this password)\n If the file does not exist, create it with owner-readable-only file permissions.\n </source>\n         <translation>%s, \u0432\u044b \u0434\u043e\u043b\u0436\u043d\u044b \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u043e\u043f\u0446\u0438\u044e rpcpassword \u0432 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u043e\u043d\u043d\u043e\u043c \u0444\u0430\u0439\u043b\u0435:\n  %s\n \u0420\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u0442\u0441\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u044b\u0439 \u043f\u0430\u0440\u043e\u043b\u044c:\n-rpcuser=novacoinrpc\n+rpcuser=42rpc\n rpcpassword=%s\n (\u0432\u0430\u043c \u043d\u0435 \u043d\u0443\u0436\u043d\u043e \u0437\u0430\u043f\u043e\u043c\u0438\u043d\u0430\u0442\u044c \u044d\u0442\u043e\u0442 \u043f\u0430\u0440\u043e\u043b\u044c)\n \u0415\u0441\u043b\u0438 \u0444\u0430\u0439\u043b \u043d\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442, \u0441\u043e\u0437\u0434\u0430\u0439\u0442\u0435 \u0435\u0433\u043e \u0438 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u0435 \u043f\u0440\u0430\u0432\u0430 \u0434\u043e\u0441\u0442\u0443\u043f\u0430 \u0442\u043e\u043b\u044c\u043a\u043e \u0434\u043b\u044f \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0430.\n@@ -3844,8 +3841,8 @@ rpcpassword=%s\n     </message>\n     <message>\n         <location filename=\"../bitcoinstrings.cpp\" line=\"26\"/>\n-        <source>Cannot obtain a lock on data directory %s.  NovaCoin is probably already running.</source>\n-        <translation>\u041d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0431\u043b\u043e\u043a\u0438\u0440\u043e\u0432\u043a\u0443 \u043d\u0430 \u0440\u0430\u0431\u043e\u0447\u0443\u044e \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044e %s.  \u0412\u043e\u0437\u043c\u043e\u0436\u043d\u043e, NovaCoin \u0443\u0436\u0435 \u0437\u0430\u043f\u0443\u0449\u0435\u043d.</translation>\n+        <source>Cannot obtain a lock on data directory %s.  42 is probably already running.</source>\n+        <translation>\u041d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0431\u043b\u043e\u043a\u0438\u0440\u043e\u0432\u043a\u0443 \u043d\u0430 \u0440\u0430\u0431\u043e\u0447\u0443\u044e \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044e %s.  \u0412\u043e\u0437\u043c\u043e\u0436\u043d\u043e, 42 \u0443\u0436\u0435 \u0437\u0430\u043f\u0443\u0449\u0435\u043d.</translation>\n     </message>\n     <message>\n         <location filename=\"../bitcoinstrings.cpp\" line=\"29\"/>\n@@ -3879,8 +3876,8 @@ rpcpassword=%s\n     </message>\n     <message>\n         <location filename=\"../bitcoinstrings.cpp\" line=\"46\"/>\n-        <source>Listen for JSON-RPC connections on &lt;port&gt; (default: 8344 or testnet: 18344)</source>\n-        <translation>\u041f\u0440\u043e\u0441\u043b\u0443\u0448\u0438\u0432\u0430\u0442\u044c \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f JSON-RPC \u043d\u0430 &lt;\u043f\u043e\u0440\u0442\u0443&gt; (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: 8344 \u0438\u043b\u0438 \u0434\u043b\u044f testnet: 18344)</translation>\n+        <source>Listen for JSON-RPC connections on &lt;port&gt; (default: 2121 or testnet: 21210)</source>\n+        <translation>\u041f\u0440\u043e\u0441\u043b\u0443\u0448\u0438\u0432\u0430\u0442\u044c \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f JSON-RPC \u043d\u0430 &lt;\u043f\u043e\u0440\u0442\u0443&gt; (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: 2121 \u0438\u043b\u0438 \u0434\u043b\u044f testnet: 21210)</translation>\n     </message>\n     <message>\n         <location filename=\"../bitcoinstrings.cpp\" line=\"48\"/>\n@@ -3894,8 +3891,8 @@ rpcpassword=%s\n     </message>\n     <message>\n         <location filename=\"../bitcoinstrings.cpp\" line=\"54\"/>\n-        <source>Unable to bind to %s on this computer. NovaCoin is probably already running.</source>\n-        <translation>\u041d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u043f\u0440\u0438\u0432\u044f\u0437\u0430\u0442\u044c\u0441\u044f \u043a %s \u043d\u0430 \u044d\u0442\u043e\u043c \u043a\u043e\u043c\u043f\u044c\u044e\u0442\u0435\u0440\u0435.  \u0412\u043e\u0437\u043c\u043e\u0436\u043d\u043e, NovaCoin \u0443\u0436\u0435 \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442.</translation>\n+        <source>Unable to bind to %s on this computer. 42 is probably already running.</source>\n+        <translation>\u041d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u043f\u0440\u0438\u0432\u044f\u0437\u0430\u0442\u044c\u0441\u044f \u043a %s \u043d\u0430 \u044d\u0442\u043e\u043c \u043a\u043e\u043c\u043f\u044c\u044e\u0442\u0435\u0440\u0435.  \u0412\u043e\u0437\u043c\u043e\u0436\u043d\u043e, 42 \u0443\u0436\u0435 \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442.</translation>\n     </message>\n     <message>\n         <location filename=\"../bitcoinstrings.cpp\" line=\"56\"/>\n@@ -3904,8 +3901,8 @@ rpcpassword=%s\n     </message>\n     <message>\n         <location filename=\"../bitcoinstrings.cpp\" line=\"59\"/>\n-        <source>Warning: Please check that your computer&apos;s date and time are correct! If your clock is wrong NovaCoin will not work properly.</source>\n-        <translation>\u0412\u043d\u0438\u043c\u0430\u043d\u0438\u0435: \u0443\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044c, \u0447\u0442\u043e \u0434\u0430\u0442\u0430 \u0438 \u0432\u0440\u0435\u043c\u044f \u043d\u0430 \u0412\u0430\u0448\u0435\u043c \u043a\u043e\u043c\u043f\u044c\u044e\u0442\u0435\u0440\u0435 \u0432\u044b\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u044b \u0432\u0435\u0440\u043d\u043e. \u0415\u0441\u043b\u0438 \u0412\u0430\u0448\u0438 \u0447\u0430\u0441\u044b \u0438\u0434\u0443\u0442 \u043d\u0435\u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e, NovaCoin \u0431\u0443\u0434\u0435\u0442 \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u043d\u0435\u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e.</translation>\n+        <source>Warning: Please check that your computer&apos;s date and time are correct! If your clock is wrong 42 will not work properly.</source>\n+        <translation>\u0412\u043d\u0438\u043c\u0430\u043d\u0438\u0435: \u0443\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044c, \u0447\u0442\u043e \u0434\u0430\u0442\u0430 \u0438 \u0432\u0440\u0435\u043c\u044f \u043d\u0430 \u0412\u0430\u0448\u0435\u043c \u043a\u043e\u043c\u043f\u044c\u044e\u0442\u0435\u0440\u0435 \u0432\u044b\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u044b \u0432\u0435\u0440\u043d\u043e. \u0415\u0441\u043b\u0438 \u0412\u0430\u0448\u0438 \u0447\u0430\u0441\u044b \u0438\u0434\u0443\u0442 \u043d\u0435\u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e, 42 \u0431\u0443\u0434\u0435\u0442 \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u043d\u0435\u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e.</translation>\n     </message>\n     <message>\n         <location filename=\"../bitcoinstrings.cpp\" line=\"62\"/>\n@@ -4033,8 +4030,8 @@ If the file does not exist, create it with owner-readable-only file permissions.\n     </message>\n     <message>\n         <location filename=\"../bitcoinstrings.cpp\" line=\"95\"/>\n-        <source>Error loading wallet.dat: Wallet requires newer version of NovaCoin</source>\n-        <translation>\u041e\u0448\u0438\u0431\u043a\u0430 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0438 wallet.dat: \u0431\u0443\u043c\u0430\u0436\u043d\u0438\u043a \u0442\u0440\u0435\u0431\u0443\u0435\u0442 \u0431\u043e\u043b\u0435\u0435 \u043d\u043e\u0432\u0443\u044e \u0432\u0435\u0440\u0441\u0438\u044e NovaCoin</translation>\n+        <source>Error loading wallet.dat: Wallet requires newer version of 42</source>\n+        <translation>\u041e\u0448\u0438\u0431\u043a\u0430 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0438 wallet.dat: \u0431\u0443\u043c\u0430\u0436\u043d\u0438\u043a \u0442\u0440\u0435\u0431\u0443\u0435\u0442 \u0431\u043e\u043b\u0435\u0435 \u043d\u043e\u0432\u0443\u044e \u0432\u0435\u0440\u0441\u0438\u044e 42</translation>\n     </message>\n     <message>\n         <location filename=\"../bitcoinstrings.cpp\" line=\"96\"/>\n@@ -4144,8 +4141,8 @@ If the file does not exist, create it with owner-readable-only file permissions.\n     </message>\n     <message>\n         <location filename=\"../bitcoinstrings.cpp\" line=\"117\"/>\n-        <source>Listen for connections on &lt;port&gt; (default: 7777 or testnet: 17777)</source>\n-        <translation>\u041f\u0440\u0438\u043d\u0438\u043c\u0430\u0442\u044c \u0432\u0445\u043e\u0434\u044f\u0449\u0438\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u043d\u0430 &lt;port&gt; (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: 7777 \u0438\u043b\u0438 17777 \u0432 \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0439 \u0441\u0435\u0442\u0438)</translation>\n+        <source>Listen for connections on &lt;port&gt; (default: 4242 or testnet: 42420)</source>\n+        <translation>\u041f\u0440\u0438\u043d\u0438\u043c\u0430\u0442\u044c \u0432\u0445\u043e\u0434\u044f\u0449\u0438\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u043d\u0430 &lt;port&gt; (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: 4242 \u0438\u043b\u0438 42420 \u0432 \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0439 \u0441\u0435\u0442\u0438)</translation>\n     </message>\n     <message>\n         <location filename=\"../bitcoinstrings.cpp\" line=\"118\"/>\n@@ -4179,13 +4176,13 @@ If the file does not exist, create it with owner-readable-only file permissions.\n     </message>\n     <message>\n         <location filename=\"../bitcoinstrings.cpp\" line=\"124\"/>\n-        <source>NovaCoin version</source>\n+        <source>42 version</source>\n         <translation>\u0412\u0435\u0440\u0441\u0438\u044f</translation>\n     </message>\n     <message>\n         <location filename=\"../bitcoinstrings.cpp\" line=\"125\"/>\n-        <source>NovaCoin</source>\n-        <translation>NovaCoin</translation>\n+        <source>42</source>\n+        <translation>42</translation>\n     </message>\n     <message>\n         <location filename=\"../bitcoinstrings.cpp\" line=\"126\"/>\n@@ -4245,8 +4242,8 @@ If the file does not exist, create it with owner-readable-only file permissions.\n     </message>\n     <message>\n         <location filename=\"../bitcoinstrings.cpp\" line=\"137\"/>\n-        <source>Send command to -server or novacoind</source>\n-        <translation>\u041e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u044c \u043a\u043e\u043c\u0430\u043d\u0434\u0443 \u043d\u0430 -server \u0438\u043b\u0438 novacoind</translation>\n+        <source>Send command to -server or 42d</source>\n+        <translation>\u041e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u044c \u043a\u043e\u043c\u0430\u043d\u0434\u0443 \u043d\u0430 -server \u0438\u043b\u0438 42d</translation>\n     </message>\n     <message>\n         <location filename=\"../bitcoinstrings.cpp\" line=\"138\"/>\n@@ -4310,8 +4307,8 @@ If the file does not exist, create it with owner-readable-only file permissions.\n     </message>\n     <message>\n         <location filename=\"../bitcoinstrings.cpp\" line=\"150\"/>\n-        <source>Specify configuration file (default: novacoin.conf)</source>\n-        <translation>\u0423\u043a\u0430\u0437\u0430\u0442\u044c \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u043e\u043d\u043d\u044b\u0439 \u0444\u0430\u0439\u043b (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: novacoin.conf)</translation>\n+        <source>Specify configuration file (default: 42.conf)</source>\n+        <translation>\u0423\u043a\u0430\u0437\u0430\u0442\u044c \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u043e\u043d\u043d\u044b\u0439 \u0444\u0430\u0439\u043b (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: 42.conf)</translation>\n     </message>\n     <message>\n         <location filename=\"../bitcoinstrings.cpp\" line=\"151\"/>\n@@ -4325,8 +4322,8 @@ If the file does not exist, create it with owner-readable-only file permissions.\n     </message>\n     <message>\n         <location filename=\"../bitcoinstrings.cpp\" line=\"153\"/>\n-        <source>Specify pid file (default: novacoind.pid)</source>\n-        <translation>\u0423\u043a\u0430\u0437\u0430\u0442\u044c pid-\u0444\u0430\u0439\u043b (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: novacoin.pid)</translation>\n+        <source>Specify pid file (default: 42d.pid)</source>\n+        <translation>\u0423\u043a\u0430\u0437\u0430\u0442\u044c pid-\u0444\u0430\u0439\u043b (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: 42.pid)</translation>\n     </message>\n     <message>\n         <location filename=\"../bitcoinstrings.cpp\" line=\"154\"/>\n@@ -4407,8 +4404,8 @@ If the file does not exist, create it with owner-readable-only file permissions.\n     </message>\n     <message>\n         <location filename=\"../bitcoinstrings.cpp\" line=\"169\"/>\n-        <source>Wallet needed to be rewritten: restart NovaCoin to complete</source>\n-        <translation>\u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043f\u0435\u0440\u0435\u0437\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u0431\u0443\u043c\u0430\u0436\u043d\u0438\u043a, \u043f\u0435\u0440\u0435\u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u0435 NovaCoin \u0434\u043b\u044f \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438.</translation>\n+        <source>Wallet needed to be rewritten: restart 42 to complete</source>\n+        <translation>\u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043f\u0435\u0440\u0435\u0437\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u0431\u0443\u043c\u0430\u0436\u043d\u0438\u043a, \u043f\u0435\u0440\u0435\u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u0435 42 \u0434\u043b\u044f \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438.</translation>\n     </message>\n     <message>\n         <location filename=\"../bitcoinstrings.cpp\" line=\"170\"/>"
      },
      {
        "sha": "1e6183aac15442470d5a83a0166beab81141dfb9",
        "filename": "src/qt/locale/bitcoin_uk.ts",
        "status": "modified",
        "additions": 142,
        "deletions": 145,
        "changes": 287,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/locale/bitcoin_uk.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/locale/bitcoin_uk.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_uk.ts?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -6,26 +6,28 @@\n     <name>AboutDialog</name>\n     <message>\n         <location filename=\"../forms/aboutdialog.ui\" line=\"14\"/>\n-        <source>About NovaCoin</source>\n-        <translation>\u041f\u0440\u043e Novacoin</translation>\n+        <source>About 42</source>\n+        <translation>\u041f\u0440\u043e 42</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/aboutdialog.ui\" line=\"56\"/>\n-        <source>&lt;b&gt;NovaCoin&lt;/b&gt; version</source>\n-        <translation>&lt;b&gt;NovaCoin&lt;/b&gt; \u0432\u0435\u0440\u0441\u0456\u0457</translation>\n+        <source>&lt;b&gt;42&lt;/b&gt; version</source>\n+        <translation>&lt;b&gt;42&lt;/b&gt; \u0432\u0435\u0440\u0441\u0456\u0457</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/aboutdialog.ui\" line=\"97\"/>\n         <source>Copyright \u00a9 2009-2016 The Bitcoin developers\n Copyright \u00a9 2011-2012 The PPCoin Developers\n Copyright \u00a9 2014 The Peerunity Developers\n Copyright \u00a9 2014 The EmerCoin Developers\n-Copyright \u00a9 2012-2016 The NovaCoin developers</source>\n+Copyright \u00a9 2012-2016 The NovaCoin Developers\n+Copyright \u00a9 2016 The 42 Developers</source>\n         <translation>\u00a9 2009-2016 \u0420\u043e\u0437\u0440\u043e\u0431\u043d\u0438\u043a\u0438 Bitcoin\n \u00a9 2011-2012 \u0420\u043e\u0437\u0440\u043e\u0431\u043d\u0438\u043a\u0438 PPCoin\n \u00a9 2014 \u0420\u043e\u0437\u0440\u043e\u0431\u043d\u0438\u043a\u0438 Peerunity\n \u00a9 2014 \u0420\u043e\u0437\u0440\u043e\u0431\u043d\u0438\u043a\u0438 EmerCoin\n-\u00a9 2012-2016 \u0420\u043e\u0437\u0440\u043e\u0431\u043d\u0438\u043a\u0438 NovaCoin</translation>\n+\u00a9 2012-2016 \u0420\u043e\u0437\u0440\u043e\u0431\u043d\u0438\u043a\u0438 NovaCoin\n+\u00a9 2016 \u0420\u043e\u0437\u0440\u043e\u0431\u043d\u0438\u043a\u0438 42</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/aboutdialog.ui\" line=\"114\"/>\n@@ -42,7 +44,7 @@ Copyright \u00a9 2012-2016 The NovaCoin developers</source>\n     </message>\n     <message>\n         <location filename=\"../forms/addressbookpage.ui\" line=\"20\"/>\n-        <source>These are your NovaCoin addresses for receiving payments. You may want to give a different one to each sender so you can keep track of who is paying you.</source>\n+        <source>These are your 42 addresses for receiving payments. You may want to give a different one to each sender so you can keep track of who is paying you.</source>\n         <translation>\u0426\u0435 \u0432\u0430\u0448\u0456 \u0430\u0434\u0440\u0435\u0441\u0438 \u0434\u043b\u044f \u043e\u0442\u0440\u0438\u043c\u0430\u043d\u043d\u044f \u043f\u043b\u0430\u0442\u0435\u0436\u0456\u0432. \u0412\u0438 \u043c\u043e\u0436\u0435\u0442\u0435 \u0434\u0430\u0432\u0430\u0442\u0438 \u0440\u0456\u0437\u043d\u0456 \u0430\u0434\u0440\u0435\u0441\u0438 \u0440\u0456\u0437\u043d\u0438\u043c \u043b\u044e\u0434\u044f\u043c, \u0442\u0430\u043a\u0438\u043c \u0447\u0438\u043d\u043e\u043c \u043c\u0430\u044e\u0447\u0438 \u043c\u043e\u0436\u043b\u0438\u0432\u0456\u0441\u0442\u044c \u0432\u0456\u0434\u0441\u043b\u0456\u0434\u043a\u0443\u0432\u0430\u0442\u0438 \u0445\u0442\u043e \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e \u0456 \u0441\u043a\u0456\u043b\u044c\u043a\u0438 \u0432\u0430\u043c \u0437\u0430\u043f\u043b\u0430\u0442\u0438\u0432.</translation>\n     </message>\n     <message>\n@@ -77,7 +79,7 @@ Copyright \u00a9 2012-2016 The NovaCoin developers</source>\n     </message>\n     <message>\n         <location filename=\"../forms/addressbookpage.ui\" line=\"102\"/>\n-        <source>Sign a message to prove you own a NovaCoin address</source>\n+        <source>Sign a message to prove you own a 42 address</source>\n         <translation>\u041f\u0456\u0434\u043f\u0438\u0448\u0456\u0442\u044c \u043f\u043e\u0432\u0456\u0434\u043e\u043c\u043b\u0435\u043d\u043d\u044f \u0449\u043e\u0431 \u0434\u043e\u0432\u0435\u0441\u0442\u0438, \u0449\u043e \u0432\u0438 \u0454 \u0432\u043b\u0430\u0441\u043d\u0438\u043a\u043e\u043c \u0446\u0456\u0454\u0457 \u0430\u0434\u0440\u0435\u0441\u0438</translation>\n     </message>\n     <message>\n@@ -87,8 +89,8 @@ Copyright \u00a9 2012-2016 The NovaCoin developers</source>\n     </message>\n     <message>\n         <location filename=\"../forms/addressbookpage.ui\" line=\"116\"/>\n-        <source>Verify a message to ensure it was signed with a specified NovaCoin address</source>\n-        <translation>\u041f\u0435\u0440\u0435\u0432\u0456\u0440\u0438\u0442\u0438 \u043f\u043e\u0432\u0456\u0434\u043e\u043c\u043b\u0435\u043d\u043d\u044f, \u0449\u043e\u0431 \u043f\u0435\u0440\u0435\u043a\u043e\u043d\u0430\u0442\u0438\u0441\u044f, \u0449\u043e \u0432\u043e\u043d\u043e \u0431\u0443\u043b\u043e \u043f\u0456\u0434\u043f\u0438\u0441\u0430\u043d\u0435 \u0432\u043a\u0430\u0437\u0430\u043d\u0438\u043c \u0430\u0434\u0440\u0435\u0441\u043e\u044e NovaCoin</translation>\n+        <source>Verify a message to ensure it was signed with a specified 42 address</source>\n+        <translation>\u041f\u0435\u0440\u0435\u0432\u0456\u0440\u0438\u0442\u0438 \u043f\u043e\u0432\u0456\u0434\u043e\u043c\u043b\u0435\u043d\u043d\u044f, \u0449\u043e\u0431 \u043f\u0435\u0440\u0435\u043a\u043e\u043d\u0430\u0442\u0438\u0441\u044f, \u0449\u043e \u0432\u043e\u043d\u043e \u0431\u0443\u043b\u043e \u043f\u0456\u0434\u043f\u0438\u0441\u0430\u043d\u0435 \u0432\u043a\u0430\u0437\u0430\u043d\u0438\u043c \u0430\u0434\u0440\u0435\u0441\u043e\u044e 42</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/addressbookpage.ui\" line=\"119\"/>\n@@ -240,7 +242,7 @@ Copyright \u00a9 2012-2016 The NovaCoin developers</source>\n     </message>\n     <message>\n         <location filename=\"../askpassphrasedialog.cpp\" line=\"116\"/>\n-        <source>NovaCoin will close now to finish the encryption process. Remember that encrypting your wallet cannot fully protect your coins from being stolen by malware infecting your computer.</source>\n+        <source>42 will close now to finish the encryption process. Remember that encrypting your wallet cannot fully protect your coins from being stolen by malware infecting your computer.</source>\n         <translation>\u041d\u043e\u0432\u0430\u043a\u043e\u0456\u043d-\u043a\u043b\u0456\u0454\u043d\u0442 \u0431\u0443\u0434\u0435 \u0437\u0430\u043a\u0440\u0438\u0442\u043e \u0434\u043b\u044f \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u043d\u044f \u043f\u0440\u043e\u0446\u0435\u0441\u0443 \u0448\u0438\u0444\u0440\u0443\u0432\u0430\u043d\u043d\u044f. \u041f\u0430\u043c\u2019\u044f\u0442\u0430\u0439\u0442\u0435, \u0449\u043e \u0448\u0438\u0444\u0440\u0443\u0432\u0430\u043d\u043d\u044f \u0433\u0430\u043c\u0430\u043d\u0446\u044f \u043d\u0435 \u043c\u043e\u0436\u0435 \u043f\u043e\u0432\u043d\u0456\u0441\u0442\u044e \u0437\u0430\u0445\u0438\u0441\u0442\u0438\u0442\u0438 \u0432\u0430\u0448\u0456 \u043d\u043e\u0432\u0430\u043a\u043e\u0456\u043d\u0438 \u0432\u0456\u0434 \u043a\u0440\u0430\u0436\u0456, \u0443 \u0432\u0438\u043f\u0430\u0434\u043a\u0443 \u044f\u043a\u0449\u043e \u0432\u0430\u0448 \u043a\u043e\u043c\u043f\u2019\u044e\u0442\u0435\u0440 \u0431\u0443\u0434\u0435 \u0456\u043d\u0444\u0456\u043a\u043e\u0432\u0430\u043d\u043e \u0448\u043a\u0456\u0434\u043b\u0438\u0432\u0438\u043c\u0438 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u0430\u043c\u0438.</translation>\n     </message>\n     <message>\n@@ -293,8 +295,8 @@ Copyright \u00a9 2012-2016 The NovaCoin developers</source>\n     </message>\n     <message>\n         <location filename=\"../askpassphrasedialog.cpp\" line=\"178\"/>\n-        <source>NovaCoin will close now to finish the decryption process. </source>\n-        <translation>\u0417\u0430\u0440\u0430\u0437 NovaCoin \u043a\u043b\u0456\u0454\u043d\u0442 \u0431\u0443\u0434\u0435 \u0437\u0430\u043a\u0440\u0438\u0442\u043e \u0449\u043e\u0431 \u0437\u0430\u0432\u0435\u0440\u0448\u0438\u0442\u0438 \u043f\u0440\u043e\u0446\u0435\u0441 \u0440\u043e\u0437\u0448\u0438\u0444\u0440\u043e\u0432\u043a\u0438.</translation>\n+        <source>42 will close now to finish the decryption process. </source>\n+        <translation>\u0417\u0430\u0440\u0430\u0437 42 \u043a\u043b\u0456\u0454\u043d\u0442 \u0431\u0443\u0434\u0435 \u0437\u0430\u043a\u0440\u0438\u0442\u043e \u0449\u043e\u0431 \u0437\u0430\u0432\u0435\u0440\u0448\u0438\u0442\u0438 \u043f\u0440\u043e\u0446\u0435\u0441 \u0440\u043e\u0437\u0448\u0438\u0444\u0440\u043e\u0432\u043a\u0438.</translation>\n     </message>\n     <message>\n         <location filename=\"../askpassphrasedialog.cpp\" line=\"189\"/>\n@@ -312,14 +314,14 @@ Copyright \u00a9 2012-2016 The NovaCoin developers</source>\n     <name>BitcoinGUI</name>\n     <message>\n         <location filename=\"../bitcoin.cpp\" line=\"146\"/>\n-        <source>A fatal error occurred. NovaCoin can no longer continue safely and will quit.</source>\n-        <translation>\u0421\u0442\u0430\u043b\u0430\u0441\u044f \u0444\u0430\u0442\u0430\u043b\u044c\u043d\u0430 \u043f\u043e\u043c\u0438\u043b\u043a\u0430. \u041f\u0440\u043e\u0433\u0440\u0430\u043c\u0430 \u0437\u0430\u0440\u0430\u0437 \u0437\u0430\u043a\u0440\u0438\u0454\u0442\u044c\u0441\u044f, \u043e\u0441\u043a\u0456\u043b\u044c\u043a\u0438 NovaCoin \u043d\u0435 \u043c\u043e\u0436\u0435 \u043f\u0440\u043e\u0434\u043e\u0432\u0436\u0443\u0432\u0430\u0442\u0438 \u0440\u043e\u0431\u043e\u0442\u0443 \u0431\u0435\u0437\u043f\u0435\u0447\u043d\u043e.</translation>\n+        <source>A fatal error occurred. 42 can no longer continue safely and will quit.</source>\n+        <translation>\u0421\u0442\u0430\u043b\u0430\u0441\u044f \u0444\u0430\u0442\u0430\u043b\u044c\u043d\u0430 \u043f\u043e\u043c\u0438\u043b\u043a\u0430. \u041f\u0440\u043e\u0433\u0440\u0430\u043c\u0430 \u0437\u0430\u0440\u0430\u0437 \u0437\u0430\u043a\u0440\u0438\u0454\u0442\u044c\u0441\u044f, \u043e\u0441\u043a\u0456\u043b\u044c\u043a\u0438 42 \u043d\u0435 \u043c\u043e\u0436\u0435 \u043f\u0440\u043e\u0434\u043e\u0432\u0436\u0443\u0432\u0430\u0442\u0438 \u0440\u043e\u0431\u043e\u0442\u0443 \u0431\u0435\u0437\u043f\u0435\u0447\u043d\u043e.</translation>\n     </message>\n     <message>\n         <location filename=\"../bitcoingui.cpp\" line=\"96\"/>\n         <location filename=\"../bitcoingui.cpp\" line=\"736\"/>\n-        <source>NovaCoin</source>\n-        <translation>NovaCoin</translation>\n+        <source>42</source>\n+        <translation>42</translation>\n     </message>\n     <message>\n         <location filename=\"../bitcoingui.cpp\" line=\"96\"/>\n@@ -343,7 +345,7 @@ Copyright \u00a9 2012-2016 The NovaCoin developers</source>\n     </message>\n     <message>\n         <location filename=\"../bitcoingui.cpp\" line=\"251\"/>\n-        <source>Send coins to a NovaCoin address</source>\n+        <source>Send coins to a 42 address</source>\n         <translation>\u0412\u0456\u0434\u043f\u0440\u0430\u0432\u0438\u0442\u0438 \u043c\u043e\u043d\u0435\u0442\u0438 \u043d\u0430 \u0432\u043a\u0430\u0437\u0430\u043d\u0443 \u0430\u0434\u0440\u0435\u0441\u0443</translation>\n     </message>\n     <message>\n@@ -408,13 +410,13 @@ Copyright \u00a9 2012-2016 The NovaCoin developers</source>\n     </message>\n     <message>\n         <location filename=\"../bitcoingui.cpp\" line=\"303\"/>\n-        <source>&amp;About NovaCoin</source>\n-        <translation>\u041f&amp;\u0440\u043e NovaCoin</translation>\n+        <source>&amp;About 42</source>\n+        <translation>\u041f&amp;\u0440\u043e 42</translation>\n     </message>\n     <message>\n         <location filename=\"../bitcoingui.cpp\" line=\"304\"/>\n-        <source>Show information about NovaCoin</source>\n-        <translation>\u041f\u043e\u043a\u0430\u0437\u0430\u0442\u0438 \u0456\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0456\u044e \u043f\u0440\u043e NovaCoin</translation>\n+        <source>Show information about 42</source>\n+        <translation>\u041f\u043e\u043a\u0430\u0437\u0430\u0442\u0438 \u0456\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0456\u044e \u043f\u0440\u043e 42</translation>\n     </message>\n     <message>\n         <location filename=\"../bitcoingui.cpp\" line=\"307\"/>\n@@ -434,8 +436,8 @@ Copyright \u00a9 2012-2016 The NovaCoin developers</source>\n     </message>\n     <message>\n         <location filename=\"../bitcoingui.cpp\" line=\"314\"/>\n-        <source>Modify configuration options for NovaCoin</source>\n-        <translation>\u0420\u0435\u0434\u0430\u0433\u0443\u0432\u0430\u0442\u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0438 NovaCoin</translation>\n+        <source>Modify configuration options for 42</source>\n+        <translation>\u0420\u0435\u0434\u0430\u0433\u0443\u0432\u0430\u0442\u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0438 42</translation>\n     </message>\n     <message>\n         <location filename=\"../bitcoingui.cpp\" line=\"316\"/>\n@@ -499,8 +501,8 @@ Copyright \u00a9 2012-2016 The NovaCoin developers</source>\n     </message>\n     <message>\n         <location filename=\"../bitcoingui.cpp\" line=\"329\"/>\n-        <source>Sign messages with your Novacoin addresses to prove you own them</source>\n-        <translation>\u041f\u0456\u0434\u0442\u0432\u0435\u0440\u0434\u0456\u0442\u044c, \u0449\u043e \u0412\u0438 \u0454 \u0432\u043b\u0430\u0441\u043d\u0438\u043a\u043e\u043c \u043f\u043e\u0432\u0456\u0434\u043e\u043c\u043b\u0435\u043d\u043d\u044f \u043f\u0456\u0434\u043f\u0438\u0441\u0430\u0432\u0448\u0438 \u0439\u043e\u0433\u043e \u0412\u0430\u0448\u043e\u044e Novacoin-\u0430\u0434\u0440\u0435\u0441\u043e\u044e</translation>\n+        <source>Sign messages with your 42 addresses to prove you own them</source>\n+        <translation>\u041f\u0456\u0434\u0442\u0432\u0435\u0440\u0434\u0456\u0442\u044c, \u0449\u043e \u0412\u0438 \u0454 \u0432\u043b\u0430\u0441\u043d\u0438\u043a\u043e\u043c \u043f\u043e\u0432\u0456\u0434\u043e\u043c\u043b\u0435\u043d\u043d\u044f \u043f\u0456\u0434\u043f\u0438\u0441\u0430\u0432\u0448\u0438 \u0439\u043e\u0433\u043e \u0412\u0430\u0448\u043e\u044e 42-\u0430\u0434\u0440\u0435\u0441\u043e\u044e</translation>\n     </message>\n     <message>\n         <location filename=\"../bitcoingui.cpp\" line=\"330\"/>\n@@ -509,8 +511,8 @@ Copyright \u00a9 2012-2016 The NovaCoin developers</source>\n     </message>\n     <message>\n         <location filename=\"../bitcoingui.cpp\" line=\"331\"/>\n-        <source>Verify messages to ensure they were signed with specified Novacoin addresses</source>\n-        <translation>\u041f\u0435\u0440\u0435\u0432\u0456\u0440\u0442\u0435 \u043f\u043e\u0432\u0456\u0434\u043e\u043c\u043b\u0435\u043d\u043d\u044f \u0434\u043b\u044f \u0432\u043f\u0435\u0432\u043d\u0435\u043d\u043e\u0441\u0442\u0456, \u0449\u043e \u0432\u043e\u043d\u043e \u043f\u0456\u0434\u043f\u0438\u0441\u0430\u043d\u043e \u0432\u043a\u0430\u0437\u0430\u043d\u043e\u044e Novacoin-\u0430\u0434\u0440\u0435\u0441\u043e\u044e</translation>\n+        <source>Verify messages to ensure they were signed with specified 42 addresses</source>\n+        <translation>\u041f\u0435\u0440\u0435\u0432\u0456\u0440\u0442\u0435 \u043f\u043e\u0432\u0456\u0434\u043e\u043c\u043b\u0435\u043d\u043d\u044f \u0434\u043b\u044f \u0432\u043f\u0435\u0432\u043d\u0435\u043d\u043e\u0441\u0442\u0456, \u0449\u043e \u0432\u043e\u043d\u043e \u043f\u0456\u0434\u043f\u0438\u0441\u0430\u043d\u043e \u0432\u043a\u0430\u0437\u0430\u043d\u043e\u044e 42-\u0430\u0434\u0440\u0435\u0441\u043e\u044e</translation>\n     </message>\n     <message>\n         <location filename=\"../bitcoingui.cpp\" line=\"332\"/>\n@@ -519,7 +521,7 @@ Copyright \u00a9 2012-2016 The NovaCoin developers</source>\n     </message>\n     <message>\n         <location filename=\"../bitcoingui.cpp\" line=\"333\"/>\n-        <source>Second auth with your Novacoin addresses</source>\n+        <source>Second auth with your 42 addresses</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n@@ -611,16 +613,16 @@ Copyright \u00a9 2012-2016 The NovaCoin developers</source>\n     <message>\n         <location filename=\"../bitcoingui.cpp\" line=\"445\"/>\n         <location filename=\"../bitcoingui.cpp\" line=\"513\"/>\n-        <source>NovaCoin client</source>\n-        <translation>NovaCoin \u043a\u043b\u0456\u0454\u043d\u0442</translation>\n+        <source>42 client</source>\n+        <translation>42 \u043a\u043b\u0456\u0454\u043d\u0442</translation>\n     </message>\n     <message numerus=\"yes\">\n         <location filename=\"../bitcoingui.cpp\" line=\"586\"/>\n-        <source>%n active connection(s) to NovaCoin network</source>\n+        <source>%n active connection(s) to 42 network</source>\n         <translation>\n-            <numerusform>%n \u0430\u043a\u0442\u0438\u0432\u043d\u0435 \u0437&apos;\u0454\u0434\u043d\u0430\u043d\u043d\u044f \u0437 \u043c\u0435\u0440\u0435\u0436\u0435\u044e NovaCoin</numerusform>\n-            <numerusform>%n \u0430\u043a\u0442\u0438\u0432\u043d\u0438\u0445 \u0437&apos;\u0454\u0434\u043d\u0430\u043d\u044c \u0437 \u043c\u0435\u0440\u0435\u0436\u0435\u044e NovaCoin</numerusform>\n-            <numerusform>%n \u0430\u043a\u0442\u0438\u0432\u043d\u0438\u0445 \u0437&apos;\u0454\u0434\u043d\u0430\u043d\u044c \u0437 \u043c\u0435\u0440\u0435\u0436\u0435\u044e NovaCoin</numerusform>\n+            <numerusform>%n \u0430\u043a\u0442\u0438\u0432\u043d\u0435 \u0437&apos;\u0454\u0434\u043d\u0430\u043d\u043d\u044f \u0437 \u043c\u0435\u0440\u0435\u0436\u0435\u044e 42</numerusform>\n+            <numerusform>%n \u0430\u043a\u0442\u0438\u0432\u043d\u0438\u0445 \u0437&apos;\u0454\u0434\u043d\u0430\u043d\u044c \u0437 \u043c\u0435\u0440\u0435\u0436\u0435\u044e 42</numerusform>\n+            <numerusform>%n \u0430\u043a\u0442\u0438\u0432\u043d\u0438\u0445 \u0437&apos;\u0454\u0434\u043d\u0430\u043d\u044c \u0437 \u043c\u0435\u0440\u0435\u0436\u0435\u044e 42</numerusform>\n         </translation>\n     </message>\n     <message>\n@@ -794,8 +796,8 @@ Address: %4\n     <message>\n         <location filename=\"../bitcoingui.cpp\" line=\"982\"/>\n         <location filename=\"../bitcoingui.cpp\" line=\"997\"/>\n-        <source>URI can not be parsed! This can be caused by an invalid NovaCoin address or malformed URI parameters.</source>\n-        <translation>\u041d\u0435\u043c\u043e\u0436\u043b\u0438\u0432\u043e \u043e\u0431\u0440\u043e\u0431\u0438\u0442\u0438 URI! \u0426\u0435 \u043c\u043e\u0436\u0435 \u0431\u0443\u0442\u0438 \u0432\u0438\u043a\u043b\u0438\u043a\u0430\u043d\u043e \u043d\u0435\u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e\u044e NovaCoin-\u0430\u0434\u0440\u0435\u0441\u043e\u044e, \u0447\u0438 \u043d\u0435\u0432\u0456\u0440\u043d\u0438\u043c\u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043c\u0438 URI.</translation>\n+        <source>URI can not be parsed! This can be caused by an invalid 42 address or malformed URI parameters.</source>\n+        <translation>\u041d\u0435\u043c\u043e\u0436\u043b\u0438\u0432\u043e \u043e\u0431\u0440\u043e\u0431\u0438\u0442\u0438 URI! \u0426\u0435 \u043c\u043e\u0436\u0435 \u0431\u0443\u0442\u0438 \u0432\u0438\u043a\u043b\u0438\u043a\u0430\u043d\u043e \u043d\u0435\u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e\u044e 42-\u0430\u0434\u0440\u0435\u0441\u043e\u044e, \u0447\u0438 \u043d\u0435\u0432\u0456\u0440\u043d\u0438\u043c\u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043c\u0438 URI.</translation>\n     </message>\n     <message>\n         <location filename=\"../bitcoingui.cpp\" line=\"1016\"/>\n@@ -933,8 +935,8 @@ Some or all keys from:\n         <translation>\u0421\u0443\u043c\u0430:</translation>\n     </message>\n     <message>\n-        <source>0.00 NVC</source>\n-        <translation type=\"obsolete\">0.00 NVC</translation>\n+        <source>0.00000000 42</source>\n+        <translation type=\"obsolete\">0.00000000 42</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/coincontroldialog.ui\" line=\"157\"/>\n@@ -1237,8 +1239,8 @@ This label turns red, if the priority is smaller than &quot;medium&quot;.\n     </message>\n     <message>\n         <location filename=\"../editaddressdialog.cpp\" line=\"103\"/>\n-        <source>The entered address &quot;%1&quot; is not a valid NovaCoin address.</source>\n-        <translation>\u0412\u0432\u0435\u0434\u0435\u043d\u0430 \u0430\u0434\u0440\u0435\u0441\u0430 \u00ab%1\u00bb \u043d\u0435 \u0454 \u043a\u043e\u0440\u0435\u043a\u0442\u043d\u043e\u044e \u0430\u0434\u0440\u0435\u0441\u043e\u044e \u0432 \u043c\u0435\u0440\u0435\u0436\u0456 NovaCoin</translation>\n+        <source>The entered address &quot;%1&quot; is not a valid 42 address.</source>\n+        <translation>\u0412\u0432\u0435\u0434\u0435\u043d\u0430 \u0430\u0434\u0440\u0435\u0441\u0430 \u00ab%1\u00bb \u043d\u0435 \u0454 \u043a\u043e\u0440\u0435\u043a\u0442\u043d\u043e\u044e \u0430\u0434\u0440\u0435\u0441\u043e\u044e \u0432 \u043c\u0435\u0440\u0435\u0436\u0456 42</translation>\n     </message>\n     <message>\n         <location filename=\"../editaddressdialog.cpp\" line=\"108\"/>\n@@ -1289,8 +1291,8 @@ This label turns red, if the priority is smaller than &quot;medium&quot;.\n     <message>\n         <location filename=\"../guiutil.cpp\" line=\"476\"/>\n         <location filename=\"../guiutil.cpp\" line=\"488\"/>\n-        <source>NovaCoin-Qt</source>\n-        <translation>NovaCoin-Qt</translation>\n+        <source>42-Qt</source>\n+        <translation>42-Qt</translation>\n     </message>\n     <message>\n         <location filename=\"../guiutil.cpp\" line=\"476\"/>\n@@ -1337,17 +1339,17 @@ This label turns red, if the priority is smaller than &quot;medium&quot;.\n     </message>\n     <message>\n         <location filename=\"../forms/intro.ui\" line=\"23\"/>\n-        <source>Welcome to novacoin-qt.</source>\n+        <source>Welcome to 42-qt.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n         <location filename=\"../forms/intro.ui\" line=\"49\"/>\n-        <source>As this is the first time the program is launched, you can choose where novacoin-qt will store its data.</source>\n+        <source>As this is the first time the program is launched, you can choose where 42-qt will store its data.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n         <location filename=\"../forms/intro.ui\" line=\"59\"/>\n-        <source>novacoin-qt will download and store a copy of the Novacoin block chain. At least %1GB of data will be stored in this directory, and it will grow over time. The wallet will also be stored in this directory.</source>\n+        <source>42-qt will download and store a copy of the 42 block chain. At least %1GB of data will be stored in this directory, and it will grow over time. The wallet will also be stored in this directory.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n@@ -1362,7 +1364,7 @@ This label turns red, if the priority is smaller than &quot;medium&quot;.\n     </message>\n     <message>\n         <location filename=\"../intro.cpp\" line=\"184\"/>\n-        <source>Novacoin-qt</source>\n+        <source>42-qt</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n@@ -1426,11 +1428,6 @@ This label turns red, if the priority is smaller than &quot;medium&quot;.\n         <source>MintProbability</source>\n         <translation>PoS-\u0439\u043c\u043e\u0432\u0456\u0440\u043d\u0456\u0441\u0442\u044c</translation>\n     </message>\n-    <message>\n-        <location filename=\"../mintingtablemodel.cpp\" line=\"228\"/>\n-        <source>MintReward</source>\n-        <translation>Pos \u043d\u0430\u0433\u043e\u0440\u043e\u0434\u0430</translation>\n-    </message>\n     <message>\n         <location filename=\"../mintingtablemodel.cpp\" line=\"327\"/>\n         <source>minutes</source>\n@@ -1794,8 +1791,8 @@ This label turns red, if the priority is smaller than &quot;medium&quot;.\n         <translation type=\"obsolete\">123.456</translation>\n     </message>\n     <message>\n-        <source>NVC</source>\n-        <translation type=\"obsolete\">NVC</translation>\n+        <source>42</source>\n+        <translation type=\"obsolete\">42</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/multisigdialog.ui\" line=\"413\"/>\n@@ -1904,13 +1901,13 @@ Reduce the number of addresses involved in the address creation.</source>\n     </message>\n     <message>\n         <location filename=\"../multisigdialog.cpp\" line=\"522\"/>\n-        <source>The fee of the transaction (%1 NVC) is smaller than the expected fee (%2 NVC). Do you want to send the transaction anyway?</source>\n-        <translation>\u041a\u043e\u043c\u0456\u0441\u0456\u044f \u0437\u0430 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u044e (%1 NVC) \u043c\u0435\u043d\u0448\u0435, \u043d\u0456\u0436 \u043e\u0447\u0456\u043a\u0443\u0432\u0430\u043d\u0430 \u043a\u043e\u043c\u0456\u0441\u0456\u044f (%2 NVC). \u0427\u0438 \u0431\u0430\u0436\u0430\u0454\u0442\u0435 \u0432\u0438 \u0437\u0434\u0456\u0439\u0441\u043d\u0438\u0442\u0438 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u044e \u0432 \u0431\u0443\u0434\u044c-\u044f\u043a\u043e\u043c\u0443 \u0432\u0438\u043f\u0430\u0434\u043a\u0443?</translation>\n+        <source>The fee of the transaction (%1 42) is smaller than the expected fee (%2 42). Do you want to send the transaction anyway?</source>\n+        <translation>\u041a\u043e\u043c\u0456\u0441\u0456\u044f \u0437\u0430 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u044e (%1 42) \u043c\u0435\u043d\u0448\u0435, \u043d\u0456\u0436 \u043e\u0447\u0456\u043a\u0443\u0432\u0430\u043d\u0430 \u043a\u043e\u043c\u0456\u0441\u0456\u044f (%2 42). \u0427\u0438 \u0431\u0430\u0436\u0430\u0454\u0442\u0435 \u0432\u0438 \u0437\u0434\u0456\u0439\u0441\u043d\u0438\u0442\u0438 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u044e \u0432 \u0431\u0443\u0434\u044c-\u044f\u043a\u043e\u043c\u0443 \u0432\u0438\u043f\u0430\u0434\u043a\u0443?</translation>\n     </message>\n     <message>\n         <location filename=\"../multisigdialog.cpp\" line=\"528\"/>\n-        <source>The fee of the transaction (%1 NVC) is bigger than the expected fee (%2 NVC). Do you want to send the transaction anyway?</source>\n-        <translation>\u041a\u043e\u043c\u0456\u0441\u0456\u044f \u0437\u0430 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u044e (%1 NVC) \u0431\u0456\u043b\u044c\u0448\u0430, \u043d\u0456\u0436 \u043e\u0447\u0456\u043a\u0443\u0432\u0430\u043d\u0430 \u043a\u043e\u043c\u0456\u0441\u0456\u044f (%2 NVC). \u0427\u0438 \u0431\u0430\u0436\u0430\u0454\u0442\u0435 \u0432\u0438 \u0437\u0434\u0456\u0439\u0441\u043d\u0438\u0442\u0438 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u044e \u0432 \u0431\u0443\u0434\u044c-\u044f\u043a\u043e\u043c\u0443 \u0432\u0438\u043f\u0430\u0434\u043a\u0443?</translation>\n+        <source>The fee of the transaction (%1 42) is bigger than the expected fee (%2 42). Do you want to send the transaction anyway?</source>\n+        <translation>\u041a\u043e\u043c\u0456\u0441\u0456\u044f \u0437\u0430 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u044e (%1 42) \u0431\u0456\u043b\u044c\u0448\u0430, \u043d\u0456\u0436 \u043e\u0447\u0456\u043a\u0443\u0432\u0430\u043d\u0430 \u043a\u043e\u043c\u0456\u0441\u0456\u044f (%2 42). \u0427\u0438 \u0431\u0430\u0436\u0430\u0454\u0442\u0435 \u0432\u0438 \u0437\u0434\u0456\u0439\u0441\u043d\u0438\u0442\u0438 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u044e \u0432 \u0431\u0443\u0434\u044c-\u044f\u043a\u043e\u043c\u0443 \u0432\u0438\u043f\u0430\u0434\u043a\u0443?</translation>\n     </message>\n </context>\n <context>\n@@ -1970,8 +1967,8 @@ Reduce the number of addresses involved in the address creation.</source>\n     </message>\n     <message>\n         <location filename=\"../forms/optionsdialog.ui\" line=\"33\"/>\n-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.001 recommended.</source>\n-        <translation>\u041d\u0435\u043e\u0431\u043e\u0432&apos;\u044f\u0437\u043a\u043e\u0432\u0430 \u043a\u043e\u043c\u0456\u0441\u0456\u044f \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u0457 \u0437\u0430 \u043a\u0411 \u0449\u043e \u0441\u043f\u0440\u0438\u044f\u0442\u0435\u043c\u0435 \u0457\u0457 \u0448\u0432\u0438\u0434\u043a\u043e\u043c\u0443 \u043e\u0431\u0440\u043e\u0431\u043b\u0435\u043d\u043d\u044e. \u0411\u0456\u043b\u044c\u0448\u0456\u0441\u0442\u044c \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u0439 1\u043a\u0411. \u0420\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0454\u0442\u044c\u0441\u044f \u043a\u043e\u043c\u0456\u0441\u044f 0,001.</translation>\n+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.00000001 recommended.</source>\n+        <translation>\u041d\u0435\u043e\u0431\u043e\u0432&apos;\u044f\u0437\u043a\u043e\u0432\u0430 \u043a\u043e\u043c\u0456\u0441\u0456\u044f \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u0457 \u0437\u0430 \u043a\u0411 \u0449\u043e \u0441\u043f\u0440\u0438\u044f\u0442\u0435\u043c\u0435 \u0457\u0457 \u0448\u0432\u0438\u0434\u043a\u043e\u043c\u0443 \u043e\u0431\u0440\u043e\u0431\u043b\u0435\u043d\u043d\u044e. \u0411\u0456\u043b\u044c\u0448\u0456\u0441\u0442\u044c \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u0439 1\u043a\u0411. \u0420\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0454\u0442\u044c\u0441\u044f \u043a\u043e\u043c\u0456\u0441\u044f 0,00000001.</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/optionsdialog.ui\" line=\"48\"/>\n@@ -1985,12 +1982,12 @@ Reduce the number of addresses involved in the address creation.</source>\n     </message>\n     <message>\n         <location filename=\"../forms/optionsdialog.ui\" line=\"86\"/>\n-        <source>Automatically start NovaCoin after logging in to the system.</source>\n+        <source>Automatically start 42 after logging in to the system.</source>\n         <translation>\u0410\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u043d\u043e \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0442\u0438 \u0433\u0430\u043c\u0430\u043d\u0435\u0446\u044c \u043f\u0440\u0438 \u0432\u0445\u043e\u0434\u0456 \u0434\u043e \u0441\u0438\u0441\u0442\u0435\u043c\u0438.</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/optionsdialog.ui\" line=\"89\"/>\n-        <source>&amp;Start NovaCoin on system login</source>\n+        <source>&amp;Start 42 on system login</source>\n         <translation>&amp;\u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0442\u0438 \u0433\u0430\u043c\u0430\u043d\u0435\u0446\u044c \u043f\u0440\u0438 \u0432\u0445\u043e\u0434\u0456 \u0432 \u0441\u0438\u0441\u0442\u0435\u043c\u0443</translation>\n     </message>\n     <message>\n@@ -2010,7 +2007,7 @@ Reduce the number of addresses involved in the address creation.</source>\n     </message>\n     <message>\n         <location filename=\"../forms/optionsdialog.ui\" line=\"126\"/>\n-        <source>Connect to the NovaCoin network through a SOCKS proxy (e.g. when connecting through Tor).</source>\n+        <source>Connect to the 42 network through a SOCKS proxy (e.g. when connecting through Tor).</source>\n         <translation>\u041f\u0456\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u043d\u044f \u0434\u043e \u043c\u0435\u0440\u0435\u0436\u0456 \u0447\u0435\u0440\u0435\u0437 SOCKS5 \u043f\u0440\u043e\u043a\u0441\u0456 (\u043d\u0430\u043f\u0440. \u043f\u0440\u0438 \u043f\u0456\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u043d\u0456 \u0447\u0435\u0440\u0435\u0437 Tor).</translation>\n     </message>\n     <message>\n@@ -2120,8 +2117,8 @@ Reduce the number of addresses involved in the address creation.</source>\n     </message>\n     <message>\n         <location filename=\"../forms/optionsdialog.ui\" line=\"425\"/>\n-        <source>The user interface language can be set here. This setting will take effect after restarting NovaCoin.</source>\n-        <translation>\u0412\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u044e\u0454 \u043c\u043e\u0432\u0443 \u0456\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0443. \u0417\u043c\u0456\u043d\u0438 \u043d\u0430\u0431\u0443\u0434\u0443\u0442\u044c \u0447\u0438\u043d\u043d\u043e\u0441\u0442\u0456 \u043f\u0456\u0441\u043b\u044f \u043f\u0435\u0440\u0435\u0437\u0430\u043f\u0443\u0441\u043a\u0443 NovaCoin.</translation>\n+        <source>The user interface language can be set here. This setting will take effect after restarting 42.</source>\n+        <translation>\u0412\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u044e\u0454 \u043c\u043e\u0432\u0443 \u0456\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0443. \u0417\u043c\u0456\u043d\u0438 \u043d\u0430\u0431\u0443\u0434\u0443\u0442\u044c \u0447\u0438\u043d\u043d\u043e\u0441\u0442\u0456 \u043f\u0456\u0441\u043b\u044f \u043f\u0435\u0440\u0435\u0437\u0430\u043f\u0443\u0441\u043a\u0443 42.</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/optionsdialog.ui\" line=\"436\"/>\n@@ -2135,8 +2132,8 @@ Reduce the number of addresses involved in the address creation.</source>\n     </message>\n     <message>\n         <location filename=\"../forms/optionsdialog.ui\" line=\"458\"/>\n-        <source>Whether to show NovaCoin addresses in the transaction list or not.</source>\n-        <translation>\u0412\u0456\u0434\u043e\u0431\u0440\u0430\u0436\u0430\u0442\u0438 \u0430\u0434\u0440\u0435\u0441\u0438 NovaCoin \u0443 \u0441\u043f\u0438\u0441\u043a\u0443 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u0439 \u0447\u0438 \u043d\u0456.</translation>\n+        <source>Whether to show 42 addresses in the transaction list or not.</source>\n+        <translation>\u0412\u0456\u0434\u043e\u0431\u0440\u0430\u0436\u0430\u0442\u0438 \u0430\u0434\u0440\u0435\u0441\u0438 42 \u0443 \u0441\u043f\u0438\u0441\u043a\u0443 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u0439 \u0447\u0438 \u043d\u0456.</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/optionsdialog.ui\" line=\"461\"/>\n@@ -2156,8 +2153,8 @@ Reduce the number of addresses involved in the address creation.</source>\n     <message>\n         <location filename=\"../forms/optionsdialog.ui\" line=\"480\"/>\n         <location filename=\"../forms/optionsdialog.ui\" line=\"493\"/>\n-        <source>Third party URLs (e.g. explorer.novaco.in) that appear in the transactions tab as context menu items. %s in the URL is replaced by transaction hash. Multiple URLs are separated by vertical bar |.</source>\n-        <translation>\u0421\u0442\u043e\u0440\u043e\u043d\u043d\u0456 URL (\u043d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434 explorer.novaco.in), \u044f\u043a\u0456 \u0432\u0456\u0434\u043e\u0431\u0440\u0430\u0436\u0430\u044e\u0442\u044c\u0441\u044f \u043d\u0430 \u0432\u043a\u043b\u0430\u0434\u0446\u0456 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u0439 \u044f\u043a \u043f\u0443\u043d\u043a\u0442\u0438 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u043d\u043e\u0433\u043e \u043c\u0435\u043d\u044e. %s \u0432 URL \u0437\u0430\u043c\u0456\u043d\u044e\u0454\u0442\u044c\u0441\u044f \u0445\u0435\u0448\u0435\u043c \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u0457. URL \u0432\u0456\u0434\u043e\u043a\u0440\u0435\u043c\u043b\u044e\u044e\u0442\u044c\u0441\u044f \u043e\u0434\u0438\u043d \u0432\u0456\u0434 \u043e\u0434\u043d\u043e\u0433\u043e \u0432\u0435\u0440\u0442\u0438\u043a\u0430\u043b\u044c\u043d\u043e\u044e \u0440\u0438\u0441\u043a\u043e\u044e |.</translation>\n+        <source>Third party URLs that appear in the transactions tab as context menu items. %s in the URL is replaced by transaction hash. Multiple URLs are separated by vertical bar |.</source>\n+        <translation>\u0421\u0442\u043e\u0440\u043e\u043d\u043d\u0456 URL, \u044f\u043a\u0456 \u0432\u0456\u0434\u043e\u0431\u0440\u0430\u0436\u0430\u044e\u0442\u044c\u0441\u044f \u043d\u0430 \u0432\u043a\u043b\u0430\u0434\u0446\u0456 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u0439 \u044f\u043a \u043f\u0443\u043d\u043a\u0442\u0438 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u043d\u043e\u0433\u043e \u043c\u0435\u043d\u044e. %s \u0432 URL \u0437\u0430\u043c\u0456\u043d\u044e\u0454\u0442\u044c\u0441\u044f \u0445\u0435\u0448\u0435\u043c \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0456\u0457. URL \u0432\u0456\u0434\u043e\u043a\u0440\u0435\u043c\u043b\u044e\u044e\u0442\u044c\u0441\u044f \u043e\u0434\u0438\u043d \u0432\u0456\u0434 \u043e\u0434\u043d\u043e\u0433\u043e \u0432\u0435\u0440\u0442\u0438\u043a\u0430\u043b\u044c\u043d\u043e\u044e \u0440\u0438\u0441\u043a\u043e\u044e |.</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/optionsdialog.ui\" line=\"483\"/>\n@@ -2197,8 +2194,8 @@ Reduce the number of addresses involved in the address creation.</source>\n         <location filename=\"../optionsdialog.cpp\" line=\"251\"/>\n         <location filename=\"../optionsdialog.cpp\" line=\"260\"/>\n         <location filename=\"../optionsdialog.cpp\" line=\"269\"/>\n-        <source>This setting will take effect after restarting NovaCoin.</source>\n-        <translation>\u0426\u0435\u0439 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 \u043d\u0430\u0431\u0443\u0434\u0435 \u0447\u0438\u043d\u043d\u043e\u0441\u0442\u0456 \u043f\u0456\u0441\u043b\u044f \u043f\u0435\u0440\u0435\u0437\u0430\u0432\u0430\u043d\u0442\u0430\u0436\u0435\u043d\u043d\u044f NovaCoin.</translation>\n+        <source>This setting will take effect after restarting 42.</source>\n+        <translation>\u0426\u0435\u0439 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 \u043d\u0430\u0431\u0443\u0434\u0435 \u0447\u0438\u043d\u043d\u043e\u0441\u0442\u0456 \u043f\u0456\u0441\u043b\u044f \u043f\u0435\u0440\u0435\u0437\u0430\u0432\u0430\u043d\u0442\u0430\u0436\u0435\u043d\u043d\u044f 42.</translation>\n     </message>\n     <message>\n         <location filename=\"../optionsdialog.cpp\" line=\"299\"/>\n@@ -2231,8 +2228,8 @@ Reduce the number of addresses involved in the address creation.</source>\n     <message>\n         <location filename=\"../forms/overviewpage.ui\" line=\"46\"/>\n         <location filename=\"../forms/overviewpage.ui\" line=\"365\"/>\n-        <source>The displayed information may be out of date. Your wallet automatically synchronizes with the NovaCoin network after a connection is established, but this process has not completed yet.</source>\n-        <translation>\u0406\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0456\u044f, \u0449\u043e \u0432\u0456\u0434\u043e\u0431\u0440\u0430\u0436\u0430\u0454\u0442\u044c\u0441\u044f \u043c\u043e\u0436\u0435 \u0431\u0443\u0442\u0438 \u0437\u0430\u0441\u0442\u0430\u0440\u0456\u043b\u043e\u044e. \u0412\u0430\u0448 \u0433\u0430\u043c\u0430\u043d\u0435\u0446\u044c \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u043d\u043e \u0441\u0438\u043d\u0445\u0440\u043e\u043d\u0456\u0437\u0443\u0454\u0442\u044c\u0441\u044f \u0437 \u043c\u0435\u0440\u0435\u0436\u0435\u044e NovaCoin \u043f\u0456\u0441\u043b\u044f \u0432\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043d\u044f \u0437&apos;\u0454\u0434\u043d\u0430\u043d\u043d\u044f, \u0430\u043b\u0435 \u0446\u0435\u0439 \u043f\u0440\u043e\u0446\u0435\u0441 \u0449\u0435 \u043d\u0435 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u0439.</translation>\n+        <source>The displayed information may be out of date. Your wallet automatically synchronizes with the 42 network after a connection is established, but this process has not completed yet.</source>\n+        <translation>\u0406\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0456\u044f, \u0449\u043e \u0432\u0456\u0434\u043e\u0431\u0440\u0430\u0436\u0430\u0454\u0442\u044c\u0441\u044f \u043c\u043e\u0436\u0435 \u0431\u0443\u0442\u0438 \u0437\u0430\u0441\u0442\u0430\u0440\u0456\u043b\u043e\u044e. \u0412\u0430\u0448 \u0433\u0430\u043c\u0430\u043d\u0435\u0446\u044c \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u043d\u043e \u0441\u0438\u043d\u0445\u0440\u043e\u043d\u0456\u0437\u0443\u0454\u0442\u044c\u0441\u044f \u0437 \u043c\u0435\u0440\u0435\u0436\u0435\u044e 42 \u043f\u0456\u0441\u043b\u044f \u0432\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043d\u044f \u0437&apos;\u0454\u0434\u043d\u0430\u043d\u043d\u044f, \u0430\u043b\u0435 \u0446\u0435\u0439 \u043f\u0440\u043e\u0446\u0435\u0441 \u0449\u0435 \u043d\u0435 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u0439.</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/overviewpage.ui\" line=\"225\"/>\n@@ -2332,18 +2329,18 @@ Reduce the number of addresses involved in the address creation.</source>\n     <name>QObject</name>\n     <message>\n         <location filename=\"../bitcoinunits.cpp\" line=\"48\"/>\n-        <source>NovaCoins</source>\n-        <translation>NovaCoins</translation>\n+        <source>42s</source>\n+        <translation>42s</translation>\n     </message>\n     <message>\n         <location filename=\"../bitcoinunits.cpp\" line=\"49\"/>\n-        <source>Milli-NovaCoins (1 / 1,000)</source>\n-        <translation>Milli-NovaCoins (1 / 1,000)</translation>\n+        <source>Milli-42s (1 / 1,000)</source>\n+        <translation>Milli-42s (1 / 1,000)</translation>\n     </message>\n     <message>\n         <location filename=\"../bitcoinunits.cpp\" line=\"50\"/>\n-        <source>Micro-NovaCoins (1 / 1,000,000)</source>\n-        <translation>Micro-NovaCoins (1 / 1,000,000)</translation>\n+        <source>Micro-42s (1 / 1,000,000)</source>\n+        <translation>Micro-42s (1 / 1,000,000)</translation>\n     </message>\n     <message>\n         <location filename=\"../bitcoinunits.cpp\" line=\"185\"/>\n@@ -2443,8 +2440,8 @@ Reduce the number of addresses involved in the address creation.</source>\n     <name>RPCConsole</name>\n     <message>\n         <location filename=\"../forms/rpcconsole.ui\" line=\"14\"/>\n-        <source>NovaCoin - Debug window</source>\n-        <translation>NovaCoin - \u0412\u0456\u043a\u043d\u043e \u0432\u0456\u0434\u043b\u0430\u0434\u043a\u0438</translation>\n+        <source>42 - Debug window</source>\n+        <translation>42 - \u0412\u0456\u043a\u043d\u043e \u0432\u0456\u0434\u043b\u0430\u0434\u043a\u0438</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/rpcconsole.ui\" line=\"24\"/>\n@@ -2483,8 +2480,8 @@ Reduce the number of addresses involved in the address creation.</source>\n     </message>\n     <message>\n         <location filename=\"../forms/rpcconsole.ui\" line=\"95\"/>\n-        <source>Open the NovaCoin debug log file from the current data directory. This can take a few seconds for large log files.</source>\n-        <translation>\u0412\u0456\u0434\u043a\u0440\u0438\u0439\u0442\u0435 \u0444\u0430\u0439\u043b \u0436\u0443\u0440\u043d\u0430\u043b\u0443 \u0432\u0456\u0434\u043b\u0430\u0434\u043a\u0438 NovaCoin \u0437 \u043f\u043e\u0442\u043e\u0447\u043d\u043e\u0433\u043e \u043a\u0430\u0442\u0430\u043b\u043e\u0433\u0443 \u0434\u0430\u043d\u0438\u0445. \u0426\u0435 \u043c\u043e\u0436\u0435 \u0437\u0430\u0439\u043d\u044f\u0442\u0438 \u043a\u0456\u043b\u044c\u043a\u0430 \u0441\u0435\u043a\u0443\u043d\u0434 \u0434\u043b\u044f \u0432\u0435\u043b\u0438\u043a\u0438\u0445 \u0444\u0430\u0439\u043b\u0456\u0432 \u0436\u0443\u0440\u043d\u0430\u043b\u0456\u0432.</translation>\n+        <source>Open the 42 debug log file from the current data directory. This can take a few seconds for large log files.</source>\n+        <translation>\u0412\u0456\u0434\u043a\u0440\u0438\u0439\u0442\u0435 \u0444\u0430\u0439\u043b \u0436\u0443\u0440\u043d\u0430\u043b\u0443 \u0432\u0456\u0434\u043b\u0430\u0434\u043a\u0438 42 \u0437 \u043f\u043e\u0442\u043e\u0447\u043d\u043e\u0433\u043e \u043a\u0430\u0442\u0430\u043b\u043e\u0433\u0443 \u0434\u0430\u043d\u0438\u0445. \u0426\u0435 \u043c\u043e\u0436\u0435 \u0437\u0430\u0439\u043d\u044f\u0442\u0438 \u043a\u0456\u043b\u044c\u043a\u0430 \u0441\u0435\u043a\u0443\u043d\u0434 \u0434\u043b\u044f \u0432\u0435\u043b\u0438\u043a\u0438\u0445 \u0444\u0430\u0439\u043b\u0456\u0432 \u0436\u0443\u0440\u043d\u0430\u043b\u0456\u0432.</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/rpcconsole.ui\" line=\"98\"/>\n@@ -2498,8 +2495,8 @@ Reduce the number of addresses involved in the address creation.</source>\n     </message>\n     <message>\n         <location filename=\"../forms/rpcconsole.ui\" line=\"147\"/>\n-        <source>Show the NovaCoin-Qt help message to get a list with possible NovaCoin command-line options.</source>\n-        <translation>\u041f\u043e\u043a\u0430\u0437\u0430\u0442\u0438 \u0434\u043e\u0432\u0456\u0434\u043a\u0443 Novacoin-Qt \u0434\u043b\u044f \u043e\u0442\u0440\u0438\u043c\u0430\u043d\u043d\u044f \u043f\u0435\u0440\u0435\u043b\u0456\u043a\u0443 \u043c\u043e\u0436\u043b\u0438\u0432\u0438\u0445 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0456\u0432 \u043a\u043e\u043c\u0430\u043d\u0434\u043d\u043e\u0433\u043e \u0440\u044f\u0434\u043a\u0430.</translation>\n+        <source>Show the 42-Qt help message to get a list with possible 42 command-line options.</source>\n+        <translation>\u041f\u043e\u043a\u0430\u0437\u0430\u0442\u0438 \u0434\u043e\u0432\u0456\u0434\u043a\u0443 42-Qt \u0434\u043b\u044f \u043e\u0442\u0440\u0438\u043c\u0430\u043d\u043d\u044f \u043f\u0435\u0440\u0435\u043b\u0456\u043a\u0443 \u043c\u043e\u0436\u043b\u0438\u0432\u0438\u0445 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0456\u0432 \u043a\u043e\u043c\u0430\u043d\u0434\u043d\u043e\u0433\u043e \u0440\u044f\u0434\u043a\u0430.</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/rpcconsole.ui\" line=\"150\"/>\n@@ -2563,8 +2560,8 @@ Reduce the number of addresses involved in the address creation.</source>\n     </message>\n     <message>\n         <location filename=\"../forms/rpcconsole.ui\" line=\"383\"/>\n-        <source>NovaCoin Core</source>\n-        <translation>\u042f\u0434\u0440\u043e NovaCoin</translation>\n+        <source>42 Core</source>\n+        <translation>\u042f\u0434\u0440\u043e 42</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/rpcconsole.ui\" line=\"406\"/>\n@@ -2573,8 +2570,8 @@ Reduce the number of addresses involved in the address creation.</source>\n     </message>\n     <message>\n         <location filename=\"../forms/rpcconsole.ui\" line=\"426\"/>\n-        <source>Open the NovaCoin configuration file from the current data directory.</source>\n-        <translation>\u0412\u0456\u0434\u043a\u0440\u0438\u0439\u0442\u0435 \u0444\u0430\u0439\u043b \u043a\u043e\u043d\u0444\u0456\u0433\u0443\u0440\u0430\u0446\u0456\u0457 NovaCoin \u0437 \u043f\u043e\u0442\u043e\u0447\u043d\u043e\u0433\u043e \u043a\u0430\u0442\u0430\u043b\u043e\u0433\u0443 \u0434\u0430\u043d\u0438\u0445.</translation>\n+        <source>Open the 42 configuration file from the current data directory.</source>\n+        <translation>\u0412\u0456\u0434\u043a\u0440\u0438\u0439\u0442\u0435 \u0444\u0430\u0439\u043b \u043a\u043e\u043d\u0444\u0456\u0433\u0443\u0440\u0430\u0446\u0456\u0457 42 \u0437 \u043f\u043e\u0442\u043e\u0447\u043d\u043e\u0433\u043e \u043a\u0430\u0442\u0430\u043b\u043e\u0433\u0443 \u0434\u0430\u043d\u0438\u0445.</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/rpcconsole.ui\" line=\"429\"/>\n@@ -2618,8 +2615,8 @@ Reduce the number of addresses involved in the address creation.</source>\n     </message>\n     <message>\n         <location filename=\"../rpcconsole.cpp\" line=\"325\"/>\n-        <source>Welcome to the NovaCoin RPC console.</source>\n-        <translation>\u0412\u0456\u0442\u0430\u0454\u043c\u043e \u0443 \u043a\u043e\u043d\u0441\u043e\u043b\u0456 NovaCoin RPC.</translation>\n+        <source>Welcome to the 42 RPC console.</source>\n+        <translation>\u0412\u0456\u0442\u0430\u0454\u043c\u043e \u0443 \u043a\u043e\u043d\u0441\u043e\u043b\u0456 42 RPC.</translation>\n     </message>\n     <message>\n         <location filename=\"../rpcconsole.cpp\" line=\"326\"/>\n@@ -2669,8 +2666,8 @@ Reduce the number of addresses involved in the address creation.</source>\n         <translation type=\"obsolete\">\u041f\u0456\u0434\u043f\u0438\u0441\u0438 - \u041f\u0456\u0434\u043f\u0438\u0441 / \u041f\u0435\u0440\u0435\u0432\u0456\u0440\u043a\u0430 \u043f\u043e\u0432\u0456\u0434\u043e\u043c\u043b\u0435\u043d\u043d\u044f</translation>\n     </message>\n     <message>\n-        <source>The address to sign the message with (e.g. 4Zo1ga6xuKuQ7JV7M9rGDoxdbYwV5zgQJ5)</source>\n-        <translation type=\"obsolete\">\u0412\u0438\u0431\u0435\u0440\u0456\u0442\u044c \u0430\u0434\u0440\u0435\u0441\u0443, \u044f\u043a\u0438\u0439 \u0431\u0443\u0434\u0435 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u0430\u043d\u0438\u0439 \u0434\u043b\u044f \u043f\u0456\u0434\u043f\u0438\u0441\u0430\u043d\u043d\u044f \u043f\u043e\u0432\u0456\u0434\u043e\u043c\u043b\u0435\u043d\u043d\u044f (\u043d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434 4Zo1ga6xuKuQ7JV7M9rGDoxdbYwV5zgQJ5)</translation>\n+        <source>The address to sign the message with (e.g. 4VsEs7wqRpoiTpmqViWRtse1P3CNgvBw4g)</source>\n+        <translation type=\"obsolete\">\u0412\u0438\u0431\u0435\u0440\u0456\u0442\u044c \u0430\u0434\u0440\u0435\u0441\u0443, \u044f\u043a\u0438\u0439 \u0431\u0443\u0434\u0435 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u0430\u043d\u0438\u0439 \u0434\u043b\u044f \u043f\u0456\u0434\u043f\u0438\u0441\u0430\u043d\u043d\u044f \u043f\u043e\u0432\u0456\u0434\u043e\u043c\u043b\u0435\u043d\u043d\u044f (\u043d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434 4VsEs7wqRpoiTpmqViWRtse1P3CNgvBw4g)</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/secondauthdialog.ui\" line=\"48\"/>\n@@ -2694,7 +2691,7 @@ Reduce the number of addresses involved in the address creation.</source>\n     </message>\n     <message>\n         <location filename=\"../forms/secondauthdialog.ui\" line=\"38\"/>\n-        <source>The address for authentification (e.g. 4Zo1ga6xuKuQ7JV7M9rGDoxdbYwV5zgQJ5)</source>\n+        <source>The address for authentification (e.g. 4VsEs7wqRpoiTpmqViWRtse1P3CNgvBw4g)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n@@ -2723,7 +2720,7 @@ Reduce the number of addresses involved in the address creation.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <source>Sign the message to prove you own this NovaCoin address</source>\n+        <source>Sign the message to prove you own this 42 address</source>\n         <translation type=\"obsolete\">\u041f\u0456\u0434\u043f\u0438\u0448\u0456\u0442\u044c \u043f\u043e\u0432\u0456\u0434\u043e\u043c\u043b\u0435\u043d\u043d\u044f \u0449\u043e\u0431 \u0434\u043e\u0432\u0435\u0441\u0442\u0438, \u0449\u043e \u0432\u0438 \u0454 \u0432\u043b\u0430\u0441\u043d\u0438\u043a\u043e\u043c \u0446\u0456\u0454\u0457 \u0430\u0434\u0440\u0435\u0441\u0438</translation>\n     </message>\n     <message>\n@@ -2743,8 +2740,8 @@ Reduce the number of addresses involved in the address creation.</source>\n     </message>\n     <message>\n         <location filename=\"../secondauthdialog.cpp\" line=\"29\"/>\n-        <source>Enter a NovaCoin address (e.g. 4Zo1ga6xuKuQ7JV7M9rGDoxdbYwV5zgQJ5)</source>\n-        <translation type=\"unfinished\">\u0412\u0432\u0435\u0434\u0456\u0442\u044c \u0430\u0434\u0440\u0435\u0441\u0443 NovaCoin (\u043d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434 4Zo1ga6xuKuQ7JV7M9rGDoxdbYwV5zgQJ5)</translation>\n+        <source>Enter a 42 address (e.g. 4VsEs7wqRpoiTpmqViWRtse1P3CNgvBw4g)</source>\n+        <translation type=\"unfinished\">\u0412\u0432\u0435\u0434\u0456\u0442\u044c \u0430\u0434\u0440\u0435\u0441\u0443 42 (\u043d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434 4VsEs7wqRpoiTpmqViWRtse1P3CNgvBw4g)</translation>\n     </message>\n     <message>\n         <location filename=\"../secondauthdialog.cpp\" line=\"30\"/>\n@@ -2847,8 +2844,8 @@ Reduce the number of addresses involved in the address creation.</source>\n         <translation>\u0421\u0443\u043c\u0430:</translation>\n     </message>\n     <message>\n-        <source>0.00 NVC</source>\n-        <translation type=\"obsolete\">0.00 NVC</translation>\n+        <source>0.00000000 42</source>\n+        <translation type=\"obsolete\">0.00000000 42</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/sendcoinsdialog.ui\" line=\"337\"/>\n@@ -2936,8 +2933,8 @@ Reduce the number of addresses involved in the address creation.</source>\n         <translation>\u0411\u0430\u043b\u0430\u043d\u0441:</translation>\n     </message>\n     <message>\n-        <source>123.456 NVC</source>\n-        <translation type=\"obsolete\">123.456 NVC</translation>\n+        <source>123.456 42</source>\n+        <translation type=\"obsolete\">123.456 42</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/sendcoinsdialog.ui\" line=\"772\"/>\n@@ -2951,8 +2948,8 @@ Reduce the number of addresses involved in the address creation.</source>\n     </message>\n     <message>\n         <location filename=\"../sendcoinsdialog.cpp\" line=\"43\"/>\n-        <source>Enter a NovaCoin address (e.g. 4Zo1ga6xuKuQ7JV7M9rGDoxdbYwV5zgQJ5)</source>\n-        <translation>\u0412\u0432\u0435\u0434\u0456\u0442\u044c \u0430\u0434\u0440\u0435\u0441\u0443 NovaCoin (\u043d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434 4Zo1ga6xuKuQ7JV7M9rGDoxdbYwV5zgQJ5)</translation>\n+        <source>Enter a 42 address (e.g. 4VsEs7wqRpoiTpmqViWRtse1P3CNgvBw4g)</source>\n+        <translation>\u0412\u0432\u0435\u0434\u0456\u0442\u044c \u0430\u0434\u0440\u0435\u0441\u0443 42 (\u043d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434 4VsEs7wqRpoiTpmqViWRtse1P3CNgvBw4g)</translation>\n     </message>\n     <message>\n         <location filename=\"../sendcoinsdialog.cpp\" line=\"57\"/>\n@@ -3081,8 +3078,8 @@ Reduce the number of addresses involved in the address creation.</source>\n     </message>\n     <message>\n         <location filename=\"../forms/sendcoinsentry.ui\" line=\"93\"/>\n-        <source>The address to send the payment to  (e.g. 4Zo1ga6xuKuQ7JV7M9rGDoxdbYwV5zgQJ5)</source>\n-        <translation>\u0412\u0438\u0431\u0435\u0440\u0456\u0442\u044c \u0430\u0434\u0440\u0435\u0441\u0443 \u0434\u043b\u044f \u0432\u0456\u0434\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u043d\u044f \u043c\u043e\u043d\u0435\u0442 (\u043d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434 4Zo1ga6xuKuQ7JV7M9rGDoxdbYwV5zgQJ5)</translation>\n+        <source>The address to send the payment to  (e.g. 4VsEs7wqRpoiTpmqViWRtse1P3CNgvBw4g)</source>\n+        <translation>\u0412\u0438\u0431\u0435\u0440\u0456\u0442\u044c \u0430\u0434\u0440\u0435\u0441\u0443 \u0434\u043b\u044f \u0432\u0456\u0434\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u043d\u044f \u043c\u043e\u043d\u0435\u0442 (\u043d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434 4VsEs7wqRpoiTpmqViWRtse1P3CNgvBw4g)</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/sendcoinsentry.ui\" line=\"103\"/>\n@@ -3111,8 +3108,8 @@ Reduce the number of addresses involved in the address creation.</source>\n     </message>\n     <message>\n         <location filename=\"../sendcoinsentry.cpp\" line=\"26\"/>\n-        <source>Enter a NovaCoin address (e.g. 4Zo1ga6xuKuQ7JV7M9rGDoxdbYwV5zgQJ5)</source>\n-        <translation>\u0412\u0432\u0435\u0434\u0456\u0442\u044c \u0430\u0434\u0440\u0435\u0441\u0443 NovaCoin (\u043d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434 4Zo1ga6xuKuQ7JV7M9rGDoxdbYwV5zgQJ5)</translation>\n+        <source>Enter a 42 address (e.g. 4VsEs7wqRpoiTpmqViWRtse1P3CNgvBw4g)</source>\n+        <translation>\u0412\u0432\u0435\u0434\u0456\u0442\u044c \u0430\u0434\u0440\u0435\u0441\u0443 42 (\u043d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434 4VsEs7wqRpoiTpmqViWRtse1P3CNgvBw4g)</translation>\n     </message>\n </context>\n <context>\n@@ -3135,8 +3132,8 @@ Reduce the number of addresses involved in the address creation.</source>\n     </message>\n     <message>\n         <location filename=\"../forms/signverifymessagedialog.ui\" line=\"51\"/>\n-        <source>The address to sign the message with (e.g. 4Zo1ga6xuKuQ7JV7M9rGDoxdbYwV5zgQJ5)</source>\n-        <translation>\u0412\u0438\u0431\u0435\u0440\u0456\u0442\u044c \u0430\u0434\u0440\u0435\u0441\u0443, \u044f\u043a\u0438\u0439 \u0431\u0443\u0434\u0435 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u0430\u043d\u0438\u0439 \u0434\u043b\u044f \u043f\u0456\u0434\u043f\u0438\u0441\u0430\u043d\u043d\u044f \u043f\u043e\u0432\u0456\u0434\u043e\u043c\u043b\u0435\u043d\u043d\u044f (\u043d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434 4Zo1ga6xuKuQ7JV7M9rGDoxdbYwV5zgQJ5)</translation>\n+        <source>The address to sign the message with (e.g. 4VsEs7wqRpoiTpmqViWRtse1P3CNgvBw4g)</source>\n+        <translation>\u0412\u0438\u0431\u0435\u0440\u0456\u0442\u044c \u0430\u0434\u0440\u0435\u0441\u0443, \u044f\u043a\u0438\u0439 \u0431\u0443\u0434\u0435 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u0430\u043d\u0438\u0439 \u0434\u043b\u044f \u043f\u0456\u0434\u043f\u0438\u0441\u0430\u043d\u043d\u044f \u043f\u043e\u0432\u0456\u0434\u043e\u043c\u043b\u0435\u043d\u043d\u044f (\u043d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434 4VsEs7wqRpoiTpmqViWRtse1P3CNgvBw4g)</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/signverifymessagedialog.ui\" line=\"61\"/>\n@@ -3172,7 +3169,7 @@ Reduce the number of addresses involved in the address creation.</source>\n     </message>\n     <message>\n         <location filename=\"../forms/signverifymessagedialog.ui\" line=\"148\"/>\n-        <source>Sign the message to prove you own this NovaCoin address</source>\n+        <source>Sign the message to prove you own this 42 address</source>\n         <translation>\u041f\u0456\u0434\u043f\u0438\u0448\u0456\u0442\u044c \u043f\u043e\u0432\u0456\u0434\u043e\u043c\u043b\u0435\u043d\u043d\u044f \u0449\u043e\u0431 \u0434\u043e\u0432\u0435\u0441\u0442\u0438, \u0449\u043e \u0432\u0438 \u0454 \u0432\u043b\u0430\u0441\u043d\u0438\u043a\u043e\u043c \u0446\u0456\u0454\u0457 \u0430\u0434\u0440\u0435\u0441\u0438</translation>\n     </message>\n     <message>\n@@ -3199,13 +3196,13 @@ Reduce the number of addresses involved in the address creation.</source>\n     </message>\n     <message>\n         <location filename=\"../forms/signverifymessagedialog.ui\" line=\"254\"/>\n-        <source>The address the message was signed with (e.g. 4Zo1ga6xuKuQ7JV7M9rGDoxdbYwV5zgQJ5)</source>\n-        <translation>\u0412\u0432\u0435\u0434\u0456\u0442\u044c \u0430\u0434\u0440\u0435\u0441\u0443 (\u043d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434 4Zo1ga6xuKuQ7JV7M9rGDoxdbYwV5zgQJ5)</translation>\n+        <source>The address the message was signed with (e.g. 4VsEs7wqRpoiTpmqViWRtse1P3CNgvBw4g)</source>\n+        <translation>\u0412\u0432\u0435\u0434\u0456\u0442\u044c \u0430\u0434\u0440\u0435\u0441\u0443 (\u043d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434 4VsEs7wqRpoiTpmqViWRtse1P3CNgvBw4g)</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/signverifymessagedialog.ui\" line=\"294\"/>\n-        <source>Verify the message to ensure it was signed with the specified NovaCoin address</source>\n-        <translation>\u041f\u0435\u0440\u0435\u0432\u0456\u0440\u0442\u0435 \u043f\u043e\u0432\u0456\u0434\u043e\u043c\u043b\u0435\u043d\u043d\u044f \u0434\u043b\u044f \u0432\u043f\u0435\u0432\u043d\u0435\u043d\u043e\u0441\u0442\u0456, \u0449\u043e \u0432\u043e\u043d\u043e \u043f\u0456\u0434\u043f\u0438\u0441\u0430\u043d\u043e \u0432\u043a\u0430\u0437\u0430\u043d\u043e\u044e NovaCoin-\u0430\u0434\u0440\u0435\u0441\u043e\u044e</translation>\n+        <source>Verify the message to ensure it was signed with the specified 42 address</source>\n+        <translation>\u041f\u0435\u0440\u0435\u0432\u0456\u0440\u0442\u0435 \u043f\u043e\u0432\u0456\u0434\u043e\u043c\u043b\u0435\u043d\u043d\u044f \u0434\u043b\u044f \u0432\u043f\u0435\u0432\u043d\u0435\u043d\u043e\u0441\u0442\u0456, \u0449\u043e \u0432\u043e\u043d\u043e \u043f\u0456\u0434\u043f\u0438\u0441\u0430\u043d\u043e \u0432\u043a\u0430\u0437\u0430\u043d\u043e\u044e 42-\u0430\u0434\u0440\u0435\u0441\u043e\u044e</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/signverifymessagedialog.ui\" line=\"311\"/>\n@@ -3215,8 +3212,8 @@ Reduce the number of addresses involved in the address creation.</source>\n     <message>\n         <location filename=\"../signverifymessagedialog.cpp\" line=\"29\"/>\n         <location filename=\"../signverifymessagedialog.cpp\" line=\"32\"/>\n-        <source>Enter a NovaCoin address (e.g. 4Zo1ga6xuKuQ7JV7M9rGDoxdbYwV5zgQJ5)</source>\n-        <translation>\u0412\u0432\u0435\u0434\u0456\u0442\u044c \u0430\u0434\u0440\u0435\u0441\u0443 NovaCoin (\u043d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434 4Zo1ga6xuKuQ7JV7M9rGDoxdbYwV5zgQJ5)</translation>\n+        <source>Enter a 42 address (e.g. 4VsEs7wqRpoiTpmqViWRtse1P3CNgvBw4g)</source>\n+        <translation>\u0412\u0432\u0435\u0434\u0456\u0442\u044c \u0430\u0434\u0440\u0435\u0441\u0443 42 (\u043d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434 4VsEs7wqRpoiTpmqViWRtse1P3CNgvBw4g)</translation>\n     </message>\n     <message>\n         <location filename=\"../signverifymessagedialog.cpp\" line=\"30\"/>\n@@ -3225,8 +3222,8 @@ Reduce the number of addresses involved in the address creation.</source>\n     </message>\n     <message>\n         <location filename=\"../signverifymessagedialog.cpp\" line=\"33\"/>\n-        <source>Enter NovaCoin signature</source>\n-        <translation>\u0412\u0432\u0435\u0434\u0456\u0442\u044c \u043f\u0456\u0434\u043f\u0438\u0441 NovaCoin</translation>\n+        <source>Enter 42 signature</source>\n+        <translation>\u0412\u0432\u0435\u0434\u0456\u0442\u044c \u043f\u0456\u0434\u043f\u0438\u0441 42</translation>\n     </message>\n     <message>\n         <location filename=\"../signverifymessagedialog.cpp\" line=\"115\"/>\n@@ -3459,8 +3456,8 @@ Reduce the number of addresses involved in the address creation.</source>\n     </message>\n     <message>\n         <location filename=\"../transactiondesc.cpp\" line=\"253\"/>\n-        <source>Generated coins must mature 520 blocks before they can be spent. When you generated this block, it was broadcast to the network to be added to the block chain. If it fails to get into the chain, its state will change to &quot;not accepted&quot; and it won&apos;t be spendable. This may occasionally happen if another node generates a block within a few seconds of yours.</source>\n-        <translation>\u041f\u0456\u0441\u043b\u044f \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0456\u0457 \u043c\u043e\u043d\u0435\u0442, \u043f\u043e\u0442\u0440\u0456\u0431\u043d\u043e \u0437\u0430\u0447\u0435\u043a\u0430\u0442\u0438 520 \u0431\u043b\u043e\u043a\u0456\u0432, \u043f\u0435\u0440\u0448 \u043d\u0456\u0436 \u0457\u0445 \u043c\u043e\u0436\u043d\u0430 \u0431\u0443\u0434\u0435 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u0430\u0442\u0438. \u041a\u043e\u043b\u0438 \u0432\u0438 \u0437\u0433\u0435\u043d\u0435\u0440\u0443\u0432\u0430\u043b\u0438 \u0446\u0435\u0439 \u0431\u043b\u043e\u043a, \u0439\u043e\u0433\u043e \u0431\u0443\u043b\u043e \u0432\u0456\u0434\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u043e \u0432 \u043c\u0435\u0440\u0435\u0436\u0443 \u0434\u043b\u044f \u0442\u043e\u0433\u043e, \u0449\u043e\u0431 \u0432\u0456\u043d \u0431\u0443\u0432 \u0434\u043e\u0434\u0430\u043d\u0438\u0439 \u0434\u043e \u043b\u0430\u043d\u0446\u044e\u0436\u043a\u0430 \u0431\u043b\u043e\u043a\u0456\u0432. \u042f\u043a\u0449\u043e \u0446\u044f \u043f\u0440\u043e\u0446\u0435\u0434\u0443\u0440\u0430 \u043d\u0435 \u0432\u0434\u0430\u0441\u0442\u044c\u0441\u044f, \u0441\u0442\u0430\u0442\u0443\u0441 \u0431\u0443\u0434\u0435 \u0437\u043c\u0456\u043d\u0435\u043d\u043e \u043d\u0430 \u00ab\u043d\u0435 \u043f\u0456\u0434\u0442\u0432\u0435\u0440\u0434\u0436\u0435\u043d\u043e\u00bb \u0456 \u0432\u0438 \u043d\u0435 \u0437\u043c\u043e\u0436\u0435\u0442\u0435 \u0432\u0438\u0442\u0440\u0430\u0442\u0438\u0442\u0438 \u0437\u0433\u0435\u043d\u0435\u0440\u043e\u0432\u0430\u043d\u0456 \u043c\u043e\u043d\u0435\u0442\u0438. \u0422\u0430\u043a\u0435 \u043c\u043e\u0436\u0435 \u0441\u0442\u0430\u0442\u0438\u0441\u044c, \u044f\u043a\u0449\u043e \u0445\u0442\u043e\u0441\u044c \u0456\u043d\u0448\u0438\u0439 \u0437\u0433\u0435\u043d\u0435\u0440\u0443\u0432\u0430\u0432 \u0431\u043b\u043e\u043a \u043d\u0430 \u0434\u0435\u043a\u0456\u043b\u044c\u043a\u0430 \u0441\u0435\u043a\u0443\u043d\u0434 \u0440\u0430\u043d\u0456\u0448\u0435.</translation>\n+        <source>Generated coins must mature 42 blocks before they can be spent. When you generated this block, it was broadcast to the network to be added to the block chain. If it fails to get into the chain, its state will change to &quot;not accepted&quot; and it won&apos;t be spendable. This may occasionally happen if another node generates a block within a few seconds of yours.</source>\n+        <translation>\u041f\u0456\u0441\u043b\u044f \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0456\u0457 \u043c\u043e\u043d\u0435\u0442, \u043f\u043e\u0442\u0440\u0456\u0431\u043d\u043e \u0437\u0430\u0447\u0435\u043a\u0430\u0442\u0438 42 \u0431\u043b\u043e\u043a\u0430, \u043f\u0435\u0440\u0448 \u043d\u0456\u0436 \u0457\u0445 \u043c\u043e\u0436\u043d\u0430 \u0431\u0443\u0434\u0435 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u0430\u0442\u0438. \u041a\u043e\u043b\u0438 \u0432\u0438 \u0437\u0433\u0435\u043d\u0435\u0440\u0443\u0432\u0430\u043b\u0438 \u0446\u0435\u0439 \u0431\u043b\u043e\u043a, \u0439\u043e\u0433\u043e \u0431\u0443\u043b\u043e \u0432\u0456\u0434\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u043e \u0432 \u043c\u0435\u0440\u0435\u0436\u0443 \u0434\u043b\u044f \u0442\u043e\u0433\u043e, \u0449\u043e\u0431 \u0432\u0456\u043d \u0431\u0443\u0432 \u0434\u043e\u0434\u0430\u043d\u0438\u0439 \u0434\u043e \u043b\u0430\u043d\u0446\u044e\u0436\u043a\u0430 \u0431\u043b\u043e\u043a\u0456\u0432. \u042f\u043a\u0449\u043e \u0446\u044f \u043f\u0440\u043e\u0446\u0435\u0434\u0443\u0440\u0430 \u043d\u0435 \u0432\u0434\u0430\u0441\u0442\u044c\u0441\u044f, \u0441\u0442\u0430\u0442\u0443\u0441 \u0431\u0443\u0434\u0435 \u0437\u043c\u0456\u043d\u0435\u043d\u043e \u043d\u0430 \u00ab\u043d\u0435 \u043f\u0456\u0434\u0442\u0432\u0435\u0440\u0434\u0436\u0435\u043d\u043e\u00bb \u0456 \u0432\u0438 \u043d\u0435 \u0437\u043c\u043e\u0436\u0435\u0442\u0435 \u0432\u0438\u0442\u0440\u0430\u0442\u0438\u0442\u0438 \u0437\u0433\u0435\u043d\u0435\u0440\u043e\u0432\u0430\u043d\u0456 \u043c\u043e\u043d\u0435\u0442\u0438. \u0422\u0430\u043a\u0435 \u043c\u043e\u0436\u0435 \u0441\u0442\u0430\u0442\u0438\u0441\u044c, \u044f\u043a\u0449\u043e \u0445\u0442\u043e\u0441\u044c \u0456\u043d\u0448\u0438\u0439 \u0437\u0433\u0435\u043d\u0435\u0440\u0443\u0432\u0430\u0432 \u0431\u043b\u043e\u043a \u043d\u0430 \u0434\u0435\u043a\u0456\u043b\u044c\u043a\u0430 \u0441\u0435\u043a\u0443\u043d\u0434 \u0440\u0430\u043d\u0456\u0448\u0435.</translation>\n     </message>\n     <message>\n         <location filename=\"../transactiondesc.cpp\" line=\"260\"/>\n@@ -3816,15 +3813,15 @@ Reduce the number of addresses involved in the address creation.</source>\n         <source>%s, you must set a rpcpassword in the configuration file:\n  %s\n It is recommended you use the following random password:\n-rpcuser=novacoinrpc\n+rpcuser=42rpc\n rpcpassword=%s\n (you do not need to remember this password)\n If the file does not exist, create it with owner-readable-only file permissions.\n </source>\n         <translation>%s, \u0432\u0438 \u043f\u043e\u0432\u0438\u043d\u043d\u0456 \u0432\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u0438 rpcpassword \u0432 \u0444\u0430\u0439\u043b\u0456 \u043a\u043e\u043d\u0444\u0456\u0433\u0443\u0440\u0430\u0446\u0456\u0457:\n %s\n \u0420\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0454\u0442\u044c\u0441\u044f \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u0430\u0442\u0438 \u0442\u0430\u043a\u0438\u0439 \u0432\u0438\u043f\u0430\u0434\u043a\u043e\u0432\u0438\u0439 \u043f\u0430\u0440\u043e\u043b\u044c:\n-rpcuser=novacoinrpc\n+rpcuser=42rpc\n rpcpassword=%s\n (\u0432\u0438 \u043d\u0435 \u043f\u043e\u0432\u0438\u043d\u043d\u0456 \u043f\u0430\u043c&apos;\u044f\u0442\u0430\u0442\u0438 \u0446\u0435\u0439 \u043f\u0430\u0440\u043e\u043b\u044c)\n \u0406\u043c\u2019\u044f \u043a\u043e\u0440\u0438\u0441\u0442\u0443\u0432\u0430\u0447\u0430 \u0442\u0430 \u043f\u0430\u0440\u043e\u043b\u044c \u041f\u041e\u0412\u0418\u041d\u041d\u0406 \u0431\u0443\u0442\u0438 \u0440\u0456\u0437\u043d\u0438\u043c\u0438.\n@@ -3849,8 +3846,8 @@ rpcpassword=%s\n     </message>\n     <message>\n         <location filename=\"../bitcoinstrings.cpp\" line=\"26\"/>\n-        <source>Cannot obtain a lock on data directory %s.  NovaCoin is probably already running.</source>\n-        <translation>\u041d\u0435 \u0432\u0434\u0430\u043b\u043e\u0441\u044f \u0432\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u0438 \u0431\u043b\u043e\u043a\u0443\u0432\u0430\u043d\u043d\u044f \u043d\u0430 \u043a\u0430\u0442\u0430\u043b\u043e\u0433 \u0434\u0430\u043d\u0438\u0445 %s. NovaCoin, \u0439\u043c\u043e\u0432\u0456\u0440\u043d\u043e, \u0432\u0436\u0435 \u0437\u0430\u043f\u0443\u0449\u0435\u043d\u0438\u0439.</translation>\n+        <source>Cannot obtain a lock on data directory %s.  42 is probably already running.</source>\n+        <translation>\u041d\u0435 \u0432\u0434\u0430\u043b\u043e\u0441\u044f \u0432\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u0438 \u0431\u043b\u043e\u043a\u0443\u0432\u0430\u043d\u043d\u044f \u043d\u0430 \u043a\u0430\u0442\u0430\u043b\u043e\u0433 \u0434\u0430\u043d\u0438\u0445 %s. 42, \u0439\u043c\u043e\u0432\u0456\u0440\u043d\u043e, \u0432\u0436\u0435 \u0437\u0430\u043f\u0443\u0449\u0435\u043d\u0438\u0439.</translation>\n     </message>\n     <message>\n         <location filename=\"../bitcoinstrings.cpp\" line=\"29\"/>\n@@ -3884,8 +3881,8 @@ rpcpassword=%s\n     </message>\n     <message>\n         <location filename=\"../bitcoinstrings.cpp\" line=\"46\"/>\n-        <source>Listen for JSON-RPC connections on &lt;port&gt; (default: 8344 or testnet: 18344)</source>\n-        <translation>\u041f\u0440\u043e\u0441\u043b\u0443\u0445\u043e\u0432\u0443\u0432\u0430\u0442\u0438 &lt;port&gt; \u0434\u043b\u044f JSON-RPC \u0437&apos;\u0454\u0434\u043d\u0430\u043d\u044c (\u0442\u0438\u043f\u043e\u0432\u043e: 8344, \u0434\u043b\u044f \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0457 \u043c\u0435\u0440\u0435\u0436\u0456: 18344)</translation>\n+        <source>Listen for JSON-RPC connections on &lt;port&gt; (default: 2121 or testnet: 21210)</source>\n+        <translation>\u041f\u0440\u043e\u0441\u043b\u0443\u0445\u043e\u0432\u0443\u0432\u0430\u0442\u0438 &lt;port&gt; \u0434\u043b\u044f JSON-RPC \u0437&apos;\u0454\u0434\u043d\u0430\u043d\u044c (\u0442\u0438\u043f\u043e\u0432\u043e: 2121, \u0434\u043b\u044f \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0457 \u043c\u0435\u0440\u0435\u0436\u0456: 21210)</translation>\n     </message>\n     <message>\n         <location filename=\"../bitcoinstrings.cpp\" line=\"48\"/>\n@@ -3899,8 +3896,8 @@ rpcpassword=%s\n     </message>\n     <message>\n         <location filename=\"../bitcoinstrings.cpp\" line=\"54\"/>\n-        <source>Unable to bind to %s on this computer. NovaCoin is probably already running.</source>\n-        <translation>\u041d\u0435\u043c\u043e\u0436\u043b\u0438\u0432\u043e \u043f\u0440\u0438\u0432&apos;\u044f\u0437\u0430\u0442\u0438\u0441\u044f \u0434\u043e %s \u043d\u0430 \u0446\u044c\u043e\u043c\u0443 \u043a\u043e\u043c\u043f&apos;\u044e\u0442\u0435\u0440\u0456. \u041c\u043e\u0436\u043b\u0438\u0432\u043e, NovaCoin \u0432\u0436\u0435 \u0437\u0430\u043f\u0443\u0449\u0435\u043d\u043e.</translation>\n+        <source>Unable to bind to %s on this computer. 42 is probably already running.</source>\n+        <translation>\u041d\u0435\u043c\u043e\u0436\u043b\u0438\u0432\u043e \u043f\u0440\u0438\u0432&apos;\u044f\u0437\u0430\u0442\u0438\u0441\u044f \u0434\u043e %s \u043d\u0430 \u0446\u044c\u043e\u043c\u0443 \u043a\u043e\u043c\u043f&apos;\u044e\u0442\u0435\u0440\u0456. \u041c\u043e\u0436\u043b\u0438\u0432\u043e, 42 \u0432\u0436\u0435 \u0437\u0430\u043f\u0443\u0449\u0435\u043d\u043e.</translation>\n     </message>\n     <message>\n         <location filename=\"../bitcoinstrings.cpp\" line=\"56\"/>\n@@ -3909,8 +3906,8 @@ rpcpassword=%s\n     </message>\n     <message>\n         <location filename=\"../bitcoinstrings.cpp\" line=\"59\"/>\n-        <source>Warning: Please check that your computer&apos;s date and time are correct! If your clock is wrong NovaCoin will not work properly.</source>\n-        <translation>\u0423\u0432\u0430\u0433\u0430: \u0431\u0443\u0434\u044c \u043b\u0430\u0441\u043a\u0430, \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u0442\u0435 \u0434\u0430\u0442\u0443 \u0456 \u0447\u0430\u0441 \u043d\u0430 \u0441\u0432\u043e\u0454\u043c\u0443 \u043a\u043e\u043c\u043f&amp;apos;\u044e\u0442\u0435\u0440\u0456. \u042f\u043a\u0449\u043e \u0432\u0430\u0448 \u0433\u043e\u0434\u0438\u043d\u043d\u0438\u043a \u0439\u0434\u0435 \u043d\u0435\u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e, NovaCoin \u043c\u043e\u0436\u0435 \u043f\u0440\u0430\u0446\u044e\u0432\u0430\u0442\u0438 \u043d\u0435\u043a\u043e\u0440\u0435\u043a\u0442\u043d\u043e.</translation>\n+        <source>Warning: Please check that your computer&apos;s date and time are correct! If your clock is wrong 42 will not work properly.</source>\n+        <translation>\u0423\u0432\u0430\u0433\u0430: \u0431\u0443\u0434\u044c \u043b\u0430\u0441\u043a\u0430, \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u0442\u0435 \u0434\u0430\u0442\u0443 \u0456 \u0447\u0430\u0441 \u043d\u0430 \u0441\u0432\u043e\u0454\u043c\u0443 \u043a\u043e\u043c\u043f&amp;apos;\u044e\u0442\u0435\u0440\u0456. \u042f\u043a\u0449\u043e \u0432\u0430\u0448 \u0433\u043e\u0434\u0438\u043d\u043d\u0438\u043a \u0439\u0434\u0435 \u043d\u0435\u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e, 42 \u043c\u043e\u0436\u0435 \u043f\u0440\u0430\u0446\u044e\u0432\u0430\u0442\u0438 \u043d\u0435\u043a\u043e\u0440\u0435\u043a\u0442\u043d\u043e.</translation>\n     </message>\n     <message>\n         <location filename=\"../bitcoinstrings.cpp\" line=\"62\"/>\n@@ -4040,8 +4037,8 @@ If the file does not exist, create it with owner-readable-only file permissions.\n     </message>\n     <message>\n         <location filename=\"../bitcoinstrings.cpp\" line=\"95\"/>\n-        <source>Error loading wallet.dat: Wallet requires newer version of NovaCoin</source>\n-        <translation>\u041f\u043e\u043c\u0438\u043b\u043a\u0430 \u043f\u0440\u0438 \u0437\u0430\u0432\u0430\u043d\u0442\u0430\u0436\u0435\u043d\u043d\u0456 wallet.dat: \u0413\u0430\u043c\u0430\u043d\u0435\u0446\u044c \u043f\u043e\u0442\u0440\u0435\u0431\u0443\u0454 \u043d\u043e\u0432\u0456\u0448\u043e\u0457 \u0432\u0435\u0440\u0441\u0456\u0457 NovaCoin</translation>\n+        <source>Error loading wallet.dat: Wallet requires newer version of 42</source>\n+        <translation>\u041f\u043e\u043c\u0438\u043b\u043a\u0430 \u043f\u0440\u0438 \u0437\u0430\u0432\u0430\u043d\u0442\u0430\u0436\u0435\u043d\u043d\u0456 wallet.dat: \u0413\u0430\u043c\u0430\u043d\u0435\u0446\u044c \u043f\u043e\u0442\u0440\u0435\u0431\u0443\u0454 \u043d\u043e\u0432\u0456\u0448\u043e\u0457 \u0432\u0435\u0440\u0441\u0456\u0457 42</translation>\n     </message>\n     <message>\n         <location filename=\"../bitcoinstrings.cpp\" line=\"96\"/>\n@@ -4152,8 +4149,8 @@ If the file does not exist, create it with owner-readable-only file permissions.\n     </message>\n     <message>\n         <location filename=\"../bitcoinstrings.cpp\" line=\"117\"/>\n-        <source>Listen for connections on &lt;port&gt; (default: 7777 or testnet: 17777)</source>\n-        <translation>\u0427\u0435\u043a\u0430\u0442\u0438 \u043d\u0430 \u0437&apos;\u0454\u0434\u043d\u0430\u043d\u043d\u044f \u043d\u0430 &lt;port&gt; (\u0442\u0438\u043f\u043e\u0432\u043e: 7777, \u0434\u043b\u044f \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0457 \u043c\u0435\u0440\u0435\u0436\u0456: 17777)</translation>\n+        <source>Listen for connections on &lt;port&gt; (default: 4242 or testnet: 42420)</source>\n+        <translation>\u0427\u0435\u043a\u0430\u0442\u0438 \u043d\u0430 \u0437&apos;\u0454\u0434\u043d\u0430\u043d\u043d\u044f \u043d\u0430 &lt;port&gt; (\u0442\u0438\u043f\u043e\u0432\u043e: 4242, \u0434\u043b\u044f \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0457 \u043c\u0435\u0440\u0435\u0436\u0456: 42420)</translation>\n     </message>\n     <message>\n         <location filename=\"../bitcoinstrings.cpp\" line=\"118\"/>\n@@ -4187,13 +4184,13 @@ If the file does not exist, create it with owner-readable-only file permissions.\n     </message>\n     <message>\n         <location filename=\"../bitcoinstrings.cpp\" line=\"124\"/>\n-        <source>NovaCoin version</source>\n-        <translation>NovaCoin \u0432\u0435\u0440\u0441\u0456\u0457</translation>\n+        <source>42 version</source>\n+        <translation>42 \u0432\u0435\u0440\u0441\u0456\u0457</translation>\n     </message>\n     <message>\n         <location filename=\"../bitcoinstrings.cpp\" line=\"125\"/>\n-        <source>NovaCoin</source>\n-        <translation>NovaCoin</translation>\n+        <source>42</source>\n+        <translation>42</translation>\n     </message>\n     <message>\n         <location filename=\"../bitcoinstrings.cpp\" line=\"126\"/>\n@@ -4256,7 +4253,7 @@ If the file does not exist, create it with owner-readable-only file permissions.\n     </message>\n     <message>\n         <location filename=\"../bitcoinstrings.cpp\" line=\"137\"/>\n-        <source>Send command to -server or novacoind</source>\n+        <source>Send command to -server or 42d</source>\n         <translation>\u0412\u0456\u0434\u043f\u0440\u0430\u0432\u0438\u0442\u0438 \u043a\u043e\u043c\u0430\u043d\u0434\u0443 \u0441\u0435\u0440\u0432\u0435\u0440\u0443 -server \u0447\u0438 \u0434\u0435\u043c\u043e\u043d\u0443\n </translation>\n     </message>\n@@ -4326,8 +4323,8 @@ If the file does not exist, create it with owner-readable-only file permissions.\n     </message>\n     <message>\n         <location filename=\"../bitcoinstrings.cpp\" line=\"150\"/>\n-        <source>Specify configuration file (default: novacoin.conf)</source>\n-        <translation>\u0412\u043a\u0430\u0436\u0456\u0442\u044c \u0444\u0430\u0439\u043b \u043a\u043e\u043d\u0444\u0456\u0433\u0443\u0440\u0430\u0446\u0456\u0457 (\u0437\u0430 \u043f\u0440\u043e\u043c\u043e\u0432\u0447\u0443\u0432\u0430\u043d\u043d\u044f\u043c: novacoin.conf)\n+        <source>Specify configuration file (default: 42.conf)</source>\n+        <translation>\u0412\u043a\u0430\u0436\u0456\u0442\u044c \u0444\u0430\u0439\u043b \u043a\u043e\u043d\u0444\u0456\u0433\u0443\u0440\u0430\u0446\u0456\u0457 (\u0437\u0430 \u043f\u0440\u043e\u043c\u043e\u0432\u0447\u0443\u0432\u0430\u043d\u043d\u044f\u043c: 42.conf)\n </translation>\n     </message>\n     <message>\n@@ -4343,8 +4340,8 @@ If the file does not exist, create it with owner-readable-only file permissions.\n     </message>\n     <message>\n         <location filename=\"../bitcoinstrings.cpp\" line=\"153\"/>\n-        <source>Specify pid file (default: novacoind.pid)</source>\n-        <translation>\u0412\u043a\u0430\u0436\u0456\u0442\u044c pid-\u0444\u0430\u0439\u043b (\u0437\u0430 \u043f\u0440\u043e\u043c\u043e\u0432\u0447\u0443\u0432\u0430\u043d\u043d\u044f\u043c: novacoind.pid)\n+        <source>Specify pid file (default: 42d.pid)</source>\n+        <translation>\u0412\u043a\u0430\u0436\u0456\u0442\u044c pid-\u0444\u0430\u0439\u043b (\u0437\u0430 \u043f\u0440\u043e\u043c\u043e\u0432\u0447\u0443\u0432\u0430\u043d\u043d\u044f\u043c: 42d.pid)\n </translation>\n     </message>\n     <message>\n@@ -4430,8 +4427,8 @@ If the file does not exist, create it with owner-readable-only file permissions.\n     </message>\n     <message>\n         <location filename=\"../bitcoinstrings.cpp\" line=\"169\"/>\n-        <source>Wallet needed to be rewritten: restart NovaCoin to complete</source>\n-        <translation>\u041f\u043e\u0442\u0440\u0456\u0431\u043d\u043e \u043f\u0435\u0440\u0435\u0437\u0430\u043f\u0438\u0441\u0430\u0442\u0438 \u0433\u0430\u043c\u0430\u043d\u0435\u0446\u044c: \u043f\u0435\u0440\u0435\u0437\u0430\u043f\u0443\u0441\u0442\u0456\u0442\u044c NovaCoin \u0434\u043b\u044f \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u043d\u044f</translation>\n+        <source>Wallet needed to be rewritten: restart 42 to complete</source>\n+        <translation>\u041f\u043e\u0442\u0440\u0456\u0431\u043d\u043e \u043f\u0435\u0440\u0435\u0437\u0430\u043f\u0438\u0441\u0430\u0442\u0438 \u0433\u0430\u043c\u0430\u043d\u0435\u0446\u044c: \u043f\u0435\u0440\u0435\u0437\u0430\u043f\u0443\u0441\u0442\u0456\u0442\u044c 42 \u0434\u043b\u044f \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u043d\u044f</translation>\n     </message>\n     <message>\n         <location filename=\"../bitcoinstrings.cpp\" line=\"170\"/>"
      },
      {
        "sha": "9ad1c3d4995407ce4836135dd3584cac19fc7d80",
        "filename": "src/qt/mintingtablemodel.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 10,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/mintingtablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/mintingtablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/mintingtablemodel.cpp?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -225,7 +225,7 @@ MintingTableModel::MintingTableModel(CWallet *wallet, WalletModel *parent):\n         mintingInterval(10),\n         priv(new MintingTablePriv(wallet, this))\n {\n-    columns << tr(\"Transaction\") <<  tr(\"Address\") << tr(\"Balance\") << tr(\"Age\") << tr(\"CoinDay\") << tr(\"MintProbability\") << tr(\"MintReward\");\n+    columns << tr(\"Transaction\") <<  tr(\"Address\") << tr(\"Balance\") << tr(\"Age\") << tr(\"CoinDay\") << tr(\"MintProbability\");\n     priv->refreshWallet();\n \n     QTimer *timer = new QTimer(this);\n@@ -312,8 +312,6 @@ QVariant MintingTableModel::data(const QModelIndex &index, int role) const\n             return formatTxCoinDay(rec);\n         case MintProbability:\n             return formatDayToMint(rec);\n-        case MintReward:\n-            return formatTxPoSReward(rec);\n         }\n         break;\n       case Qt::TextAlignmentRole:\n@@ -357,8 +355,6 @@ QVariant MintingTableModel::data(const QModelIndex &index, int role) const\n             return static_cast<qlonglong>(rec->nValue);\n         case MintProbability:\n             return getDayToMint(rec);\n-        case MintReward:\n-            return formatTxPoSReward(rec);\n         }\n         break;\n       case Qt::BackgroundColorRole:\n@@ -406,8 +402,8 @@ QString MintingTableModel::formatTxPoSReward(KernelRecord *wtx) const\n {\n     QString posReward;\n     int nBits = GetLastBlockIndex(pindexBest, true)->nBits;\n-    posReward += QString(QObject::tr(\"from  %1 to %2\")).arg(BitcoinUnits::formatWithUnit(walletModel->getOptionsModel()->getDisplayUnit(), wtx->getPoSReward(nBits, 0)), \n-        BitcoinUnits::formatWithUnit(walletModel->getOptionsModel()->getDisplayUnit(), wtx->getPoSReward(nBits, mintingInterval))); \n+    posReward += QString(QObject::tr(\"from  %1 to %2\")).arg(BitcoinUnits::formatWithUnit(walletModel->getOptionsModel()->getDisplayUnit(), wtx->getPoSReward(0)), \n+        BitcoinUnits::formatWithUnit(walletModel->getOptionsModel()->getDisplayUnit(), wtx->getPoSReward(mintingInterval))); \n     return posReward;\n }\n \n@@ -479,9 +475,7 @@ QVariant MintingTableModel::headerData(int section, Qt::Orientation orientation,\n             case CoinDay:\n                 return tr(\"Coin age in the output.\");\n             case MintProbability:\n-                return tr(\"Chance to mint a block within given time interval.\");\n-            case MintReward:\n-                return tr(\"The size of the potential rewards if the block is found at the beginning and the end given time interval.\");\n+                return tr(\"Chance to mint a block within given time interval.\");            \n             }\n         }\n     }"
      },
      {
        "sha": "d9de171e5c7712067f57949caa455f998be794a9",
        "filename": "src/qt/mintingtablemodel.h",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/mintingtablemodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/mintingtablemodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/mintingtablemodel.h?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -24,8 +24,7 @@ class MintingTableModel : public QAbstractTableModel\n         Balance = 2,\n         Age = 3,\n         CoinDay = 4,\n-        MintProbability = 5,\n-        MintReward = 6\n+        MintProbability = 5,        \n     };\n \n     void setMintingProxyModel(MintingFilterProxy *mintingProxy);"
      },
      {
        "sha": "2726e28f26bd51ac36ea50d3eebbbe018733788c",
        "filename": "src/qt/mintingview.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 17,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/mintingview.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/mintingview.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/mintingview.cpp?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -60,12 +60,12 @@ MintingView::MintingView(QWidget *parent) :\n \n     QLabel *mintingLabel = new QLabel(tr(\"Display minting probability within : \"));\n     mintingCombo = new QComboBox();\n-    mintingCombo->addItem(tr(\"10 min\"), Minting10min);\n     mintingCombo->addItem(tr(\"24 hours\"), Minting1day);\n     mintingCombo->addItem(tr(\"7 days\"), Minting7days);\n-    mintingCombo->addItem(tr(\"30 days\"), Minting30days);\n-    mintingCombo->addItem(tr(\"60 days\"), Minting60days);\n+    mintingCombo->addItem(tr(\"42 days\"), Minting42days);\n     mintingCombo->addItem(tr(\"90 days\"), Minting90days);\n+    mintingCombo->addItem(tr(\"180 days\"), Minting180days);\n+\tmintingCombo->addItem(tr(\"420 days\"), Minting420days);\n     mintingCombo->setFixedWidth(120);\n \n \n@@ -149,15 +149,13 @@ void MintingView::setModel(WalletModel *model)\n                 MintingTableModel::MintProbability, 105);\n #if QT_VERSION < 0x050000\n         mintingView->horizontalHeader()->setResizeMode(\n-                MintingTableModel::MintReward, QHeaderView::Stretch);\n+                MintingTableModel::TxHash, QHeaderView::Stretch);\n #else\n         mintingView->horizontalHeader()->setSectionResizeMode(\n-                MintingTableModel::MintReward, QHeaderView::Stretch);\n+                MintingTableModel::TxHash, QHeaderView::Stretch);\n #endif\n         mintingView->horizontalHeader()->resizeSection(\n             MintingTableModel::Address, 245);\n-        mintingView->horizontalHeader()->resizeSection(\n-            MintingTableModel::TxHash, 75);\n     }\n }\n \n@@ -166,24 +164,24 @@ void MintingView::chooseMintingInterval(int idx)\n     int interval = 10;\n     switch(mintingCombo->itemData(idx).toInt())\n     {\n-        case Minting10min:\n-            interval = 10;\n-            break;\n         case Minting1day:\n             interval = 60*24;\n             break;\n         case Minting7days:\n             interval = 60*24*7;\n             break;\n-        case Minting30days:\n-            interval = 60*24*30;\n-            break;\n-        case Minting60days:\n-            interval = 60*24*60;\n+        case Minting42days:\n+            interval = 60*24*42;\n             break;\n         case Minting90days:\n             interval = 60*24*90;\n             break;\n+        case Minting180days:\n+            interval = 60*24*180;\n+            break;\n+        case Minting420days:\n+            interval = 60*24*420;\n+            break;\n     }\n     model->getMintingTableModel()->setMintingInterval(interval);\n     mintingProxyModel->invalidate();\n@@ -209,8 +207,7 @@ void MintingView::exportClicked()\n     writer.addColumn(tr(\"CoinDay\"), MintingTableModel::CoinDay,0);\n     writer.addColumn(tr(\"Balance\"), MintingTableModel::Balance,0);\n     writer.addColumn(tr(\"MintingProbability\"), MintingTableModel::MintProbability,0);\n-    writer.addColumn(tr(\"MintingReward\"), MintingTableModel::MintReward,0);\n-\n+    \n     if(!writer.write())\n     {\n         QMessageBox::critical(this, tr(\"Error exporting\"), tr(\"Could not write to file %1.\").arg(filename),"
      },
      {
        "sha": "a92044f019303d801cc257d94999ff34a535922e",
        "filename": "src/qt/mintingview.h",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/mintingview.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/mintingview.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/mintingview.h?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -22,12 +22,12 @@ class MintingView : public QWidget\n \n     enum MintingEnum\n     {\n-        Minting10min,\n         Minting1day,\n         Minting7days,\n-        Minting30days,\n-        Minting60days,\n-        Minting90days\n+        Minting42days,\n+        Minting90days,\n+        Minting180days,\n+\t\tMinting420days,\n     };\n \n private:"
      },
      {
        "sha": "91f2b7cf5e8f9c7e54aaf52b0484f7bb49771e62",
        "filename": "src/qt/multisigdialog.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/multisigdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/multisigdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/multisigdialog.cpp?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -517,13 +517,13 @@ void MultisigDialog::on_sendTransactionButton_clicked()\n     int64_t minFee = MIN_TX_FEE * (1 + (int64_t) transactionSize / 1000);\n     if(fee < minFee)\n     {\n-        QMessageBox::StandardButton ret = QMessageBox::question(this, tr(\"Confirm send transaction\"), tr(\"The fee of the transaction (%1 NVC) is smaller than the expected fee (%2 NVC). Do you want to send the transaction anyway?\").arg((double) fee / COIN).arg((double) minFee / COIN), QMessageBox::Yes | QMessageBox::Cancel, QMessageBox::Cancel);\n+        QMessageBox::StandardButton ret = QMessageBox::question(this, tr(\"Confirm send transaction\"), tr(\"The fee of the transaction (%1 42) is smaller than the expected fee (%2 42). Do you want to send the transaction anyway?\").arg((double) fee / COIN).arg((double) minFee / COIN), QMessageBox::Yes | QMessageBox::Cancel, QMessageBox::Cancel);\n         if(ret != QMessageBox::Yes)\n             return;\n     }\n     else if(fee > minFee)\n     {\n-        QMessageBox::StandardButton ret = QMessageBox::question(this, tr(\"Confirm send transaction\"), tr(\"The fee of the transaction (%1 NVC) is bigger than the expected fee (%2 NVC). Do you want to send the transaction anyway?\").arg((double) fee / COIN).arg((double) minFee / COIN), QMessageBox::Yes | QMessageBox::Cancel, QMessageBox::Cancel);\n+        QMessageBox::StandardButton ret = QMessageBox::question(this, tr(\"Confirm send transaction\"), tr(\"The fee of the transaction (%1 42) is bigger than the expected fee (%2 42). Do you want to send the transaction anyway?\").arg((double) fee / COIN).arg((double) minFee / COIN), QMessageBox::Yes | QMessageBox::Cancel, QMessageBox::Cancel);\n         if(ret != QMessageBox::Yes)\n             return;\n     }"
      },
      {
        "sha": "f24292889483bfa8737618f779b1d2df10b17864",
        "filename": "src/qt/multisiginputentry.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/multisiginputentry.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/multisiginputentry.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/multisiginputentry.cpp?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -129,10 +129,10 @@ void MultisigInputEntry::on_transactionId_textChanged(const QString &transaction\n         {\n             CBitcoinAddress address(addr);\n             QString addressStr(address.ToString().c_str());\n-            ui->transactionOutput->addItem(idStr + QString(\" - \") + addressStr + QString(\" - \") + amountStr + QString(\" NVC\"));\n+            ui->transactionOutput->addItem(idStr + QString(\" - \") + addressStr + QString(\" - \") + amountStr + QString(\" 42\"));\n         }\n         else\n-            ui->transactionOutput->addItem(idStr + QString(\" - \") + amountStr + QString(\" NVC\"));\n+            ui->transactionOutput->addItem(idStr + QString(\" - \") + amountStr + QString(\" 42\"));\n     }\n }\n "
      },
      {
        "sha": "48040743c79fe02241fe2ca4d6ff503639eb254a",
        "filename": "src/qt/optionsdialog.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/optionsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/optionsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsdialog.cpp?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -239,7 +239,7 @@ void OptionsDialog::showRestartWarning_Proxy()\n {\n     if(!fRestartWarningDisplayed_Proxy)\n     {\n-        QMessageBox::warning(this, tr(\"Warning\"), tr(\"This setting will take effect after restarting NovaCoin.\"), QMessageBox::Ok);\n+        QMessageBox::warning(this, tr(\"Warning\"), tr(\"This setting will take effect after restarting 42.\"), QMessageBox::Ok);\n         fRestartWarningDisplayed_Proxy = true;\n     }\n }\n@@ -248,7 +248,7 @@ void OptionsDialog::showRestartWarning_Tor()\n {\n     if(!fRestartWarningDisplayed_Proxy)\n     {\n-        QMessageBox::warning(this, tr(\"Warning\"), tr(\"This setting will take effect after restarting NovaCoin.\"), QMessageBox::Ok);\n+        QMessageBox::warning(this, tr(\"Warning\"), tr(\"This setting will take effect after restarting 42.\"), QMessageBox::Ok);\n         fRestartWarningDisplayed_Tor = true;\n     }\n }\n@@ -257,7 +257,7 @@ void OptionsDialog::showRestartWarning_Lang()\n {\n     if(!fRestartWarningDisplayed_Lang)\n     {\n-        QMessageBox::warning(this, tr(\"Warning\"), tr(\"This setting will take effect after restarting NovaCoin.\"), QMessageBox::Ok);\n+        QMessageBox::warning(this, tr(\"Warning\"), tr(\"This setting will take effect after restarting 42.\"), QMessageBox::Ok);\n         fRestartWarningDisplayed_Lang = true;\n     }\n }\n@@ -266,7 +266,7 @@ void OptionsDialog::showRestartWarning_URL()\n {\n     if(!fRestartWarningDisplayed_URL)\n     {\n-        QMessageBox::warning(this, tr(\"Warning\"), tr(\"This setting will take effect after restarting NovaCoin.\"), QMessageBox::Ok);\n+        QMessageBox::warning(this, tr(\"Warning\"), tr(\"This setting will take effect after restarting 42.\"), QMessageBox::Ok);\n         fRestartWarningDisplayed_URL = true;\n     }\n }"
      },
      {
        "sha": "0ef0ea3dc4e5b145a1237f40ef9841be5b716ec7",
        "filename": "src/qt/optionsmodel.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/optionsmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/optionsmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsmodel.cpp?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -67,9 +67,9 @@ void OptionsModel::Init()\n         if(fTestNet)\n             settings.setValue(\"strThirdPartyTxUrls\", \"\");\n         else\n-            settings.setValue(\"strThirdPartyTxUrls\", \"https://bitinfocharts.com/novacoin/tx/%s|https://coinplorer.com/NVC/Transactions/%s|https://explorer.novaco.in/tx/%s|https://bchain.info/NVC/tx/%s\");\n+            settings.setValue(\"strThirdPartyTxUrls\", \"\");\n     }\n-    strThirdPartyTxUrls = settings.value(\"strThirdPartyTxUrls\", \"https://bitinfocharts.com/novacoin/tx/%s|https://coinplorer.com/NVC/Transactions/%s|https://explorer.novaco.in/tx/%s|https://bchain.info/NVC/tx/%s\").toString();\n+    strThirdPartyTxUrls = settings.value(\"strThirdPartyTxUrls\", \"\").toString();\n     fMinimizeToTray = settings.value(\"fMinimizeToTray\", false).toBool();\n     fMinimizeOnClose = settings.value(\"fMinimizeOnClose\", false).toBool();\n     fCoinControlFeatures = settings.value(\"fCoinControlFeatures\", false).toBool();"
      },
      {
        "sha": "cd21b94b88811a6914f04c108cb6c199451c2f5b",
        "filename": "src/qt/qrcodedialog.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/qrcodedialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/qrcodedialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/qrcodedialog.cpp?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -84,7 +84,7 @@ void QRCodeDialog::genCode()\n \n QString QRCodeDialog::getURI()\n {\n-    QString ret = QString(\"novacoin:%1\").arg(address);\n+    QString ret = QString(\"42:%1\").arg(address);\n     int paramCount = 0;\n \n     ui->outUri->clear();"
      },
      {
        "sha": "0da5cf1eb6a55087305247f62c083d7aadc60433",
        "filename": "src/qt/qtipcserver.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/qtipcserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/qtipcserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/qtipcserver.cpp?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -44,7 +44,7 @@ static bool ipcScanCmd(int argc, char *argv[], bool fRelay)\n     bool fSent = false;\n     for (int i = 1; i < argc; i++)\n     {\n-        if (boost::algorithm::istarts_with(argv[i], \"novacoin:\"))\n+        if (boost::algorithm::istarts_with(argv[i], \"42:\"))\n         {\n             const char *strURI = argv[i];\n             try {\n@@ -77,7 +77,7 @@ void ipcScanRelay(int argc, char *argv[])\n static void ipcThread(void* pArg)\n {\n     // Make this thread recognisable as the GUI-IPC thread\n-    RenameThread(\"novacoin-gui-ipc\");\n+    RenameThread(\"42-gui-ipc\");\n \t\n     try\n     {"
      },
      {
        "sha": "d6f03ece9692779aefca7f72fb5d0851eec0fe03",
        "filename": "src/qt/qtipcserver.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/qtipcserver.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/qtipcserver.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/qtipcserver.h?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -2,7 +2,7 @@\n #define QTIPCSERVER_H\n \n // Define Bitcoin-Qt message queue name\n-#define BITCOINURI_QUEUE_NAME \"NovaCoinURI\"\n+#define BITCOINURI_QUEUE_NAME \"42URI\"\n \n void ipcScanRelay(int argc, char *argv[]);\n void ipcInit(int argc, char *argv[]);"
      },
      {
        "sha": "06c2642f90f9840004c3b1058c9ae19b6212b727",
        "filename": "src/qt/res/bitcoin-qt.rc",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/res/bitcoin-qt.rc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/res/bitcoin-qt.rc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/bitcoin-qt.rc?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -1,4 +1,4 @@\n-IDI_ICON1 ICON DISCARDABLE \"icons/novacoin.ico\"\n+IDI_ICON1 ICON DISCARDABLE \"icons/42.ico\"\n \n #include <windows.h>             // needed for VERSIONINFO\n #include \"../../clientversion.h\" // holds the needed client version information\n@@ -18,14 +18,14 @@ BEGIN\n     BEGIN\n         BLOCK \"040904E4\" // U.S. English - multilingual (hex)\n         BEGIN\n-            VALUE \"CompanyName\",        \"NovaCoin\"\n-            VALUE \"FileDescription\",    \"NovaCoin-Qt (OSS GUI client for NovaCoin)\"\n+            VALUE \"CompanyName\",        \"42\"\n+            VALUE \"FileDescription\",    \"42-Qt (OSS GUI client for 42)\"\n             VALUE \"FileVersion\",        VER_FILEVERSION_STR\n-            VALUE \"InternalName\",       \"novacoin-qt\"\n-            VALUE \"LegalCopyright\",     \"2009-2012 The Bitcoin developers, 2012-2014 The NovaCoin & PPCoin developers\"\n+            VALUE \"InternalName\",       \"42-qt\"\n+            VALUE \"LegalCopyright\",     \"2009-2012 The Bitcoin developers, 2012-2016 The NovaCoin & PPCoin developers, 2016 The 42 developers\"\n             VALUE \"LegalTrademarks1\",   \"Distributed under the MIT/X11 software license, see the accompanying file COPYING or http://www.opensource.org/licenses/mit-license.php.\"\n-            VALUE \"OriginalFilename\",   \"novacoin-qt.exe\"\n-            VALUE \"ProductName\",        \"NovaCoin-Qt\"\n+            VALUE \"OriginalFilename\",   \"42-qt.exe\"\n+            VALUE \"ProductName\",        \"42-Qt\"\n             VALUE \"ProductVersion\",     VER_PRODUCTVERSION_STR\n         END\n     END"
      },
      {
        "sha": "b67f09aad7ee6ebeebc693a1bddb1c0896e66fd9",
        "filename": "src/qt/res/icons/42-128.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/res/icons/42-128.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/res/icons/42-128.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/icons/42-128.png?ref=4dd28f80df1e355098f2c25006fe2a32091a63da"
      },
      {
        "sha": "e38bc66bdab9139d6ff704cbc8281f783c396d1b",
        "filename": "src/qt/res/icons/42-16.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/res/icons/42-16.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/res/icons/42-16.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/icons/42-16.png?ref=4dd28f80df1e355098f2c25006fe2a32091a63da"
      },
      {
        "sha": "580182dabeee12e820ca98eeecca2bacdf5c623e",
        "filename": "src/qt/res/icons/42-32.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/res/icons/42-32.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/res/icons/42-32.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/icons/42-32.png?ref=4dd28f80df1e355098f2c25006fe2a32091a63da"
      },
      {
        "sha": "d6e8f548903d27a27da0e593966252a390a8e877",
        "filename": "src/qt/res/icons/42-48.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/res/icons/42-48.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/res/icons/42-48.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/icons/42-48.png?ref=4dd28f80df1e355098f2c25006fe2a32091a63da"
      },
      {
        "sha": "4984425c40405a8ec2b6ff3c6e9e4b351ff1cfac",
        "filename": "src/qt/res/icons/42-80.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/res/icons/42-80.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/res/icons/42-80.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/icons/42-80.png?ref=4dd28f80df1e355098f2c25006fe2a32091a63da"
      },
      {
        "sha": "1cacaf95ac9db98d95c28b51512cd8bc5cac7c8e",
        "filename": "src/qt/res/icons/42.ico",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/res/icons/42.ico",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/res/icons/42.ico",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/icons/42.ico?ref=4dd28f80df1e355098f2c25006fe2a32091a63da"
      },
      {
        "sha": "d6e8f548903d27a27da0e593966252a390a8e877",
        "filename": "src/qt/res/icons/42.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/res/icons/42.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/res/icons/42.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/icons/42.png?ref=4dd28f80df1e355098f2c25006fe2a32091a63da"
      },
      {
        "sha": "46d395d70ee29048f7e392603acb3ef6353d3e5d",
        "filename": "src/qt/res/icons/novacoin-128.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b6f4727f602d4f1f45f6a007b7cec016a60529d0/src/qt/res/icons/novacoin-128.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b6f4727f602d4f1f45f6a007b7cec016a60529d0/src/qt/res/icons/novacoin-128.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/icons/novacoin-128.png?ref=b6f4727f602d4f1f45f6a007b7cec016a60529d0"
      },
      {
        "sha": "9b462cf5140a28ff9a805f284ef81ff0e98eaac1",
        "filename": "src/qt/res/icons/novacoin-16.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b6f4727f602d4f1f45f6a007b7cec016a60529d0/src/qt/res/icons/novacoin-16.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b6f4727f602d4f1f45f6a007b7cec016a60529d0/src/qt/res/icons/novacoin-16.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/icons/novacoin-16.png?ref=b6f4727f602d4f1f45f6a007b7cec016a60529d0"
      },
      {
        "sha": "7eae52e87bee63b3d8a651a165a1686f1e4114f8",
        "filename": "src/qt/res/icons/novacoin-32.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b6f4727f602d4f1f45f6a007b7cec016a60529d0/src/qt/res/icons/novacoin-32.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b6f4727f602d4f1f45f6a007b7cec016a60529d0/src/qt/res/icons/novacoin-32.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/icons/novacoin-32.png?ref=b6f4727f602d4f1f45f6a007b7cec016a60529d0"
      },
      {
        "sha": "7c22059c708b5e593f64a8ef61c208cd1eb11f43",
        "filename": "src/qt/res/icons/novacoin-48.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b6f4727f602d4f1f45f6a007b7cec016a60529d0/src/qt/res/icons/novacoin-48.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b6f4727f602d4f1f45f6a007b7cec016a60529d0/src/qt/res/icons/novacoin-48.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/icons/novacoin-48.png?ref=b6f4727f602d4f1f45f6a007b7cec016a60529d0"
      },
      {
        "sha": "87fb68856b4a1dae447d6891b209d8679778ad1d",
        "filename": "src/qt/res/icons/novacoin-80.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b6f4727f602d4f1f45f6a007b7cec016a60529d0/src/qt/res/icons/novacoin-80.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b6f4727f602d4f1f45f6a007b7cec016a60529d0/src/qt/res/icons/novacoin-80.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/icons/novacoin-80.png?ref=b6f4727f602d4f1f45f6a007b7cec016a60529d0"
      },
      {
        "sha": "ee62b47e7e7ec146ecc0fd773c487b6f960e507c",
        "filename": "src/qt/res/icons/novacoin.ico",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b6f4727f602d4f1f45f6a007b7cec016a60529d0/src/qt/res/icons/novacoin.ico",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b6f4727f602d4f1f45f6a007b7cec016a60529d0/src/qt/res/icons/novacoin.ico",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/icons/novacoin.ico?ref=b6f4727f602d4f1f45f6a007b7cec016a60529d0"
      },
      {
        "sha": "7c22059c708b5e593f64a8ef61c208cd1eb11f43",
        "filename": "src/qt/res/icons/novacoin.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b6f4727f602d4f1f45f6a007b7cec016a60529d0/src/qt/res/icons/novacoin.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b6f4727f602d4f1f45f6a007b7cec016a60529d0/src/qt/res/icons/novacoin.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/icons/novacoin.png?ref=b6f4727f602d4f1f45f6a007b7cec016a60529d0"
      },
      {
        "sha": "effc0cbd96b90bc6fa711a4ea0f3d66110fc056c",
        "filename": "src/qt/res/images/splash2.jpg",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/res/images/splash2.jpg",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/res/images/splash2.jpg",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/images/splash2.jpg?ref=4dd28f80df1e355098f2c25006fe2a32091a63da"
      },
      {
        "sha": "dcfed19fb0948961c91b3da317474e1bd4e279b2",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -322,7 +322,7 @@ void RPCConsole::clear()\n                 \"b { color: #006060; } \"\n                 );\n \n-    message(CMD_REPLY, (tr(\"Welcome to the NovaCoin RPC console.\") + \"<br>\" +\n+    message(CMD_REPLY, (tr(\"Welcome to the 42 RPC console.\") + \"<br>\" +\n                         tr(\"Use up and down arrows to navigate history, and <b>Ctrl-L</b> to clear screen.\") + \"<br>\" +\n                         tr(\"Type <b>help</b> for an overview of available commands.\")), true);\n }"
      },
      {
        "sha": "95edce567a441b34f405c593e3398c9d1884891f",
        "filename": "src/qt/sendcoinsdialog.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/sendcoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/sendcoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.cpp?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -40,7 +40,7 @@ SendCoinsDialog::SendCoinsDialog(QWidget *parent) :\n \n #if QT_VERSION >= 0x040700\n     /* Do not move this to the XML file, Qt before 4.7 will choke on it */\n-    ui->lineEditCoinControlChange->setPlaceholderText(tr(\"Enter a NovaCoin address (e.g. 4Zo1ga6xuKuQ7JV7M9rGDoxdbYwV5zgQJ5)\"));\n+    ui->lineEditCoinControlChange->setPlaceholderText(tr(\"Enter a 42 address (e.g. 4VsEs7wqRpoiTpmqViWRtse1P3CNgvBw4g)\"));\n #endif\n \n     addEntry();"
      },
      {
        "sha": "ed6238c8ed2cfb156f4a5116d904d57fbd4668ae",
        "filename": "src/qt/sendcoinsentry.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/sendcoinsentry.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/sendcoinsentry.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsentry.cpp?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -23,7 +23,7 @@ SendCoinsEntry::SendCoinsEntry(QWidget *parent) :\n #if QT_VERSION >= 0x040700\n     /* Do not move this to the XML file, Qt before 4.7 will choke on it */\n     ui->addAsLabel->setPlaceholderText(tr(\"Enter a label for this address to add it to your address book\"));\n-    ui->payTo->setPlaceholderText(tr(\"Enter a NovaCoin address (e.g. 4Zo1ga6xuKuQ7JV7M9rGDoxdbYwV5zgQJ5)\"));\n+    ui->payTo->setPlaceholderText(tr(\"Enter a 42 address (e.g. 4VsEs7wqRpoiTpmqViWRtse1P3CNgvBw4g)\"));\n #endif\n     setFocusPolicy(Qt::TabFocus);\n     setFocusProxy(ui->payTo);"
      },
      {
        "sha": "88d3714907cb7197f1718410e063793cb3c43a91",
        "filename": "src/qt/signverifymessagedialog.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/signverifymessagedialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/signverifymessagedialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/signverifymessagedialog.cpp?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -26,11 +26,11 @@ SignVerifyMessageDialog::SignVerifyMessageDialog(QWidget *parent) :\n \n #if (QT_VERSION >= 0x040700)\n     /* Do not move this to the XML file, Qt before 4.7 will choke on it */\n-    ui->addressIn_SM->setPlaceholderText(tr(\"Enter a NovaCoin address (e.g. 4Zo1ga6xuKuQ7JV7M9rGDoxdbYwV5zgQJ5)\"));\n+    ui->addressIn_SM->setPlaceholderText(tr(\"Enter a 42 address (e.g. 4VsEs7wqRpoiTpmqViWRtse1P3CNgvBw4g)\"));\n     ui->signatureOut_SM->setPlaceholderText(tr(\"Click \\\"Sign Message\\\" to generate signature\"));\n \n-    ui->addressIn_VM->setPlaceholderText(tr(\"Enter a NovaCoin address (e.g. 4Zo1ga6xuKuQ7JV7M9rGDoxdbYwV5zgQJ5)\"));\n-    ui->signatureIn_VM->setPlaceholderText(tr(\"Enter NovaCoin signature\"));\n+    ui->addressIn_VM->setPlaceholderText(tr(\"Enter a 42 address (e.g. 4VsEs7wqRpoiTpmqViWRtse1P3CNgvBw4g)\"));\n+    ui->signatureIn_VM->setPlaceholderText(tr(\"Enter 42 signature\"));\n #endif\n \n     GUIUtil::setupAddressWidget(ui->addressIn_SM, this);"
      },
      {
        "sha": "81b401c5f6ef72e26131c5e7499232561070b512",
        "filename": "src/qt/transactiondesc.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/transactiondesc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/transactiondesc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactiondesc.cpp?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -26,7 +26,7 @@ QString TransactionDesc::FormatTxStatus(const CWalletTx& wtx)\n         int nDepth = wtx.GetDepthInMainChain();\n         if (GetAdjustedTime() - wtx.nTimeReceived > 2 * 60 && wtx.GetRequestCount() == 0)\n             return tr(\"%1/offline\").arg(nDepth);\n-        else if (nDepth < 6)\n+        else if (nDepth < 7)\n             return tr(\"%1/unconfirmed\").arg(nDepth);\n         else\n             return tr(\"%1 confirmations\").arg(nDepth);\n@@ -250,7 +250,7 @@ QString TransactionDesc::toHTML(CWallet *wallet, CWalletTx &wtx)\n         strHTML += \"<b>\" + tr(\"Transaction ID\") + \":</b> \" + wtx.GetHash().ToString().c_str() + \"<br>\";\n \n         if (wtx.IsCoinBase() || wtx.IsCoinStake())\n-            strHTML += \"<br>\" + tr(\"Generated coins must mature 520 blocks before they can be spent. When you generated this block, it was broadcast to the network to be added to the block chain. If it fails to get into the chain, its state will change to \\\"not accepted\\\" and it won't be spendable. This may occasionally happen if another node generates a block within a few seconds of yours.\") + \"<br>\";\n+            strHTML += \"<br>\" + tr(\"Generated coins must mature 42 blocks before they can be spent. When you generated this block, it was broadcast to the network to be added to the block chain. If it fails to get into the chain, its state will change to \\\"not accepted\\\" and it won't be spendable. This may occasionally happen if another node generates a block within a few seconds of yours.\") + \"<br>\";\n \n         //\n         // Debug view"
      },
      {
        "sha": "37e01981218f483d92a5d1dc7b5fa18b209eac42",
        "filename": "src/qt/transactionrecord.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/transactionrecord.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/src/qt/transactionrecord.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionrecord.h?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -72,7 +72,7 @@ class TransactionRecord\n     };\n \n     /** Number of confirmation needed for transaction */\n-    static const int NumConfirmations = 6;\n+    static const int NumConfirmations = 7;\n \n     TransactionRecord():\n             hash(), time(0), type(Other), address(\"\"), debit(0), credit(0), idx(0)"
      },
      {
        "sha": "68c3bb930f5d727e75ac304c7f1ab8295044bb8f",
        "filename": "src/rpccrypt.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/src/rpccrypt.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/src/rpccrypt.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpccrypt.cpp?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -30,7 +30,7 @@ Value decryptdata(const Array& params, bool fHelp)\n {\n     if (fHelp || params.size() != 2)\n         throw runtime_error(\n-            \"decryptdata <novacoin address or private key> <encrypted stream>\\n\"\n+            \"decryptdata <42 address or private key> <encrypted stream>\\n\"\n             \"Decrypt octet stream.\\n\");\n \n     EnsureWalletIsUnlocked();\n@@ -77,7 +77,7 @@ Value decryptmessage(const Array& params, bool fHelp)\n {\n     if (fHelp || params.size() != 2)\n         throw runtime_error(\n-            \"decryptmessage <novacoin address or private key> <encrypted message>\\n\"\n+            \"decryptmessage <42 address or private key> <encrypted message>\\n\"\n             \"Decrypt message string.\\n\");\n \n     EnsureWalletIsUnlocked();"
      },
      {
        "sha": "ad813fb65ce1af3d2c4663dfc09deeecc7e57072",
        "filename": "src/rpcdump.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/src/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/src/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcdump.cpp?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -36,7 +36,7 @@ Value importprivkey(const Array& params, bool fHelp)\n {\n     if (fHelp || params.size() < 1 || params.size() > 3)\n         throw runtime_error(\n-            \"importprivkey <novacoinprivkey> [label] [rescan=true]\\n\"\n+            \"importprivkey <42privkey> [label] [rescan=true]\\n\"\n             \"Adds a private key (as returned by dumpprivkey) to your wallet.\");\n \n     EnsureWalletIsUnlocked();\n@@ -108,7 +108,7 @@ Value importaddress(const Array& params, bool fHelp)\n         std::vector<unsigned char> data(ParseHex(params[0].get_str()));\n         script = CScript(data.begin(), data.end());\n     } else\n-        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid Novacoin address or script\");\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid 42 address or script\");\n \n     string strLabel = \"\";\n     if (params.size() > 1)\n@@ -207,15 +207,15 @@ Value dumpprivkey(const Array& params, bool fHelp)\n {\n     if (fHelp || params.size() != 1)\n         throw runtime_error(\n-            \"dumpprivkey <novacoinaddress>\\n\"\n-            \"Reveals the private key corresponding to <novacoinaddress>.\");\n+            \"dumpprivkey <42address>\\n\"\n+            \"Reveals the private key corresponding to <42address>.\");\n \n     EnsureWalletIsUnlocked();\n \n     string strAddress = params[0].get_str();\n     CBitcoinAddress address;\n     if (!address.SetString(strAddress))\n-        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid NovaCoin address\");\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid 42 address\");\n     if (fWalletUnlockMintOnly)\n         throw JSONRPCError(RPC_WALLET_UNLOCK_NEEDED, \"Wallet is unlocked for minting only.\");\n     CKeyID keyID;\n@@ -232,8 +232,8 @@ Value dumppem(const Array& params, bool fHelp)\n {\n     if (fHelp || params.size() != 3)\n         throw runtime_error(\n-            \"dumppem <novacoinaddress> <filename> <passphrase>\\n\"\n-            \"Dump the key pair corresponding to <novacoinaddress> and store it as encrypted PEM file.\"\n+            \"dumppem <42address> <filename> <passphrase>\\n\"\n+            \"Dump the key pair corresponding to <42address> and store it as encrypted PEM file.\"\n             + HelpRequiringPassphrase());\n \n     EnsureWalletIsUnlocked();\n@@ -245,7 +245,7 @@ Value dumppem(const Array& params, bool fHelp)\n \n     CBitcoinAddress address;\n     if (!address.SetString(strAddress))\n-        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid NovaCoin address\");\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid 42 address\");\n     if (fWalletUnlockMintOnly)\n         throw JSONRPCError(RPC_WALLET_UNLOCK_NEEDED, \"Wallet is unlocked for minting only.\");\n     CKeyID keyID;"
      },
      {
        "sha": "ea7d6bc2e147db19034a202426e0cfd91dc8bda2",
        "filename": "src/rpcmining.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 10,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/src/rpcmining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/src/rpcmining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcmining.cpp?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -39,7 +39,7 @@ Value getsubsidy(const Array& params, bool fHelp)\n         nBits = GetNextTargetRequired(pindexBest, false);\n     }\n \n-    return (uint64_t)GetProofOfWorkReward(nBits);\n+    return (uint64_t)GetProofOfWorkReward(0);\n }\n \n Value getmininginfo(const Array& params, bool fHelp)\n@@ -59,15 +59,14 @@ Value getmininginfo(const Array& params, bool fHelp)\n     diff.push_back(Pair(\"search-interval\",      (int)nLastCoinStakeSearchInterval));\n     obj.push_back(Pair(\"difficulty\",    diff));\n \n-    obj.push_back(Pair(\"blockvalue\",    (uint64_t)GetProofOfWorkReward(GetLastBlockIndex(pindexBest, false)->nBits)));\n+    obj.push_back(Pair(\"blockvalue\",    (uint64_t)GetProofOfWorkReward(0)));\n     obj.push_back(Pair(\"netmhashps\",    GetPoWMHashPS()));\n     obj.push_back(Pair(\"netstakeweight\",GetPoSKernelPS()));\n     obj.push_back(Pair(\"errors\",        GetWarnings(\"statusbar\")));\n     obj.push_back(Pair(\"pooledtx\",      (uint64_t)mempool.size()));\n \n     obj.push_back(Pair(\"stakeinputs\",   (uint64_t)nStakeInputsMapSize));\n-    obj.push_back(Pair(\"stakeinterest\", GetProofOfStakeReward(0, GetLastBlockIndex(pindexBest, true)->nBits, GetLastBlockIndex(pindexBest, true)->nTime, true)));\n-\n+    obj.push_back(Pair(\"stakeinterest\", (uint64_t)COIN_YEAR_REWARD));\n     obj.push_back(Pair(\"testnet\",       fTestNet));\n     return obj;\n }\n@@ -238,10 +237,10 @@ Value getworkex(const Array& params, bool fHelp)\n         );\n \n     if (vNodes.empty())\n-        throw JSONRPCError(-9, \"NovaCoin is not connected!\");\n+        throw JSONRPCError(-9, \"42 is not connected!\");\n \n     if (IsInitialBlockDownload())\n-        throw JSONRPCError(-10, \"NovaCoin is downloading blocks...\");\n+        throw JSONRPCError(-10, \"42 is downloading blocks...\");\n \n     typedef map<uint256, pair<CBlock*, CScript> > mapNewBlock_t;\n     static mapNewBlock_t mapNewBlock;\n@@ -369,10 +368,10 @@ Value getwork(const Array& params, bool fHelp)\n             \"If [data] is specified, tries to solve the block and returns true if it was successful.\");\n \n     if (vNodes.empty())\n-        throw JSONRPCError(RPC_CLIENT_NOT_CONNECTED, \"NovaCoin is not connected!\");\n+        throw JSONRPCError(RPC_CLIENT_NOT_CONNECTED, \"42 is not connected!\");\n \n     if (IsInitialBlockDownload())\n-        throw JSONRPCError(RPC_CLIENT_IN_INITIAL_DOWNLOAD, \"NovaCoin is downloading blocks...\");\n+        throw JSONRPCError(RPC_CLIENT_IN_INITIAL_DOWNLOAD, \"42 is downloading blocks...\");\n \n     typedef map<uint256, pair<CBlock*, CScript> > mapNewBlock_t;\n     static mapNewBlock_t mapNewBlock;    // FIXME: thread safety\n@@ -510,10 +509,10 @@ Value getblocktemplate(const Array& params, bool fHelp)\n         throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid mode\");\n \n     if (vNodes.empty())\n-        throw JSONRPCError(RPC_CLIENT_NOT_CONNECTED, \"NovaCoin is not connected!\");\n+        throw JSONRPCError(RPC_CLIENT_NOT_CONNECTED, \"42 is not connected!\");\n \n     if (IsInitialBlockDownload())\n-        throw JSONRPCError(RPC_CLIENT_IN_INITIAL_DOWNLOAD, \"NovaCoin is downloading blocks...\");\n+        throw JSONRPCError(RPC_CLIENT_IN_INITIAL_DOWNLOAD, \"42 is downloading blocks...\");\n \n     static CReserveKey reservekey(pwalletMain);\n "
      },
      {
        "sha": "e289e467e0c3780c767fadf139e8cb6446fa481f",
        "filename": "src/rpcrawtransaction.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/src/rpcrawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/src/rpcrawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcrawtransaction.cpp?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -187,7 +187,7 @@ Value listunspent(const Array& params, bool fHelp)\n         {\n             CBitcoinAddress address(input.get_str());\n             if (!address.IsValid())\n-                throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, string(\"Invalid NovaCoin address: \")+input.get_str());\n+                throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, string(\"Invalid 42 address: \")+input.get_str());\n             if (setAddress.count(address))\n                 throw JSONRPCError(RPC_INVALID_PARAMETER, string(\"Invalid parameter, duplicated address: \")+input.get_str());\n            setAddress.insert(address);"
      },
      {
        "sha": "bf25e89e502b12e63a12e9cc9f5404b3f1e686d1",
        "filename": "src/rpcwallet.cpp",
        "status": "modified",
        "additions": 23,
        "deletions": 23,
        "changes": 46,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/src/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/src/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.cpp?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -118,7 +118,7 @@ Value getnewaddress(const Array& params, bool fHelp)\n     if (fHelp || params.size() > 1)\n         throw runtime_error(\n             \"getnewaddress [account]\\n\"\n-            \"Returns a new NovaCoin address for receiving payments.  \"\n+            \"Returns a new 42 address for receiving payments.  \"\n             \"If [account] is specified (recommended), it is added to the address book \"\n             \"so payments received with the address will be credited to [account].\");\n \n@@ -185,7 +185,7 @@ Value getaccountaddress(const Array& params, bool fHelp)\n     if (fHelp || params.size() != 1)\n         throw runtime_error(\n             \"getaccountaddress <account>\\n\"\n-            \"Returns the current NovaCoin address for receiving payments to this account.\");\n+            \"Returns the current 42 address for receiving payments to this account.\");\n \n     // Parse the account first so we don't generate a key if there's an error\n     string strAccount = AccountFromValue(params[0]);\n@@ -203,12 +203,12 @@ Value setaccount(const Array& params, bool fHelp)\n {\n     if (fHelp || params.size() < 1 || params.size() > 2)\n         throw runtime_error(\n-            \"setaccount <novacoinaddress> <account>\\n\"\n+            \"setaccount <42address> <account>\\n\"\n             \"Sets the account associated with the given address.\");\n \n     CBitcoinAddress address(params[0].get_str());\n     if (!address.IsValid())\n-        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid NovaCoin address\");\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid 42 address\");\n \n \n     string strAccount;\n@@ -233,12 +233,12 @@ Value getaccount(const Array& params, bool fHelp)\n {\n     if (fHelp || params.size() != 1)\n         throw runtime_error(\n-            \"getaccount <novacoinaddress>\\n\"\n+            \"getaccount <42address>\\n\"\n             \"Returns the account associated with the given address.\");\n \n     CBitcoinAddress address(params[0].get_str());\n     if (!address.IsValid())\n-        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid NovaCoin address\");\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid 42 address\");\n \n     string strAccount;\n     map<CBitcoinAddress, string>::iterator mi = pwalletMain->mapAddressBook.find(address);\n@@ -319,7 +319,7 @@ Value sendtoaddress(const Array& params, bool fHelp)\n {\n     if (fHelp || params.size() < 2 || params.size() > 4)\n         throw runtime_error(\n-            \"sendtoaddress <novacoinaddress> <amount> [comment] [comment-to]\\n\"\n+            \"sendtoaddress <42address> <amount> [comment] [comment-to]\\n\"\n             \"<amount> is a real and is rounded to the nearest \" + FormatMoney(nMinimumInputValue)\n             + HelpRequiringPassphrase());\n \n@@ -331,7 +331,7 @@ Value sendtoaddress(const Array& params, bool fHelp)\n     if (address.IsValid())\n         scriptPubKey.SetAddress(address);\n     else\n-        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid NovaCoin address\");\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid 42 address\");\n \n     // Amount\n     int64_t nAmount = AmountFromValue(params[1]);\n@@ -391,7 +391,7 @@ Value signmessage(const Array& params, bool fHelp)\n {\n     if (fHelp || params.size() != 2)\n         throw runtime_error(\n-            \"signmessage <novacoinaddress> <message>\\n\"\n+            \"signmessage <42address> <message>\\n\"\n             \"Sign a message with the private key of an address\");\n \n     EnsureWalletIsUnlocked();\n@@ -426,7 +426,7 @@ Value verifymessage(const Array& params, bool fHelp)\n {\n     if (fHelp || params.size() != 3)\n         throw runtime_error(\n-            \"verifymessage <novacoinaddress> <signature> <message>\\n\"\n+            \"verifymessage <42address> <signature> <message>\\n\"\n             \"Verify a signed message\");\n \n     string strAddress  = params[0].get_str();\n@@ -463,13 +463,13 @@ Value getreceivedbyaddress(const Array& params, bool fHelp)\n {\n     if (fHelp || params.size() < 1 || params.size() > 2)\n         throw runtime_error(\n-                \"getreceivedbyaddress <novacoinaddress> [minconf=1]\\n\"\n-                \"Returns the total amount received by <novacoinaddress> in transactions with at least [minconf] confirmations.\");\n+                \"getreceivedbyaddress <42address> [minconf=1]\\n\"\n+                \"Returns the total amount received by <42address> in transactions with at least [minconf] confirmations.\");\n \n     // Bitcoin address\n     CBitcoinAddress address = CBitcoinAddress(params[0].get_str());\n     if (!address.IsValid())\n-        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid NovaCoin address\");\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid 42 address\");\n     if (!IsMine(*pwalletMain,address))\n         return 0.0;\n \n@@ -696,7 +696,7 @@ Value sendfrom(const Array& params, bool fHelp)\n {\n     if (fHelp || params.size() < 3 || params.size() > 6)\n         throw runtime_error(\n-            \"sendfrom <fromaccount> <tonovacoinaddress> <amount> [minconf=1] [comment] [comment-to]\\n\"\n+            \"sendfrom <fromaccount> <to42address> <amount> [minconf=1] [comment] [comment-to]\\n\"\n             \"<amount> is a real and is rounded to the nearest \" + FormatMoney(nMinimumInputValue)\n             + HelpRequiringPassphrase());\n \n@@ -710,7 +710,7 @@ Value sendfrom(const Array& params, bool fHelp)\n     if (address.IsValid())\n         scriptPubKey.SetAddress(address);\n     else\n-        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid NovaCoin address\");\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid 42 address\");\n \n \n     int64_t nAmount = AmountFromValue(params[2]);\n@@ -772,7 +772,7 @@ Value sendmany(const Array& params, bool fHelp)\n     {\n         CBitcoinAddress address(s.name_);\n         if (!address.IsValid())\n-            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, string(\"Invalid NovaCoin address: \")+s.name_);\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, string(\"Invalid 42 address: \")+s.name_);\n \n         if (!address.IsPair())\n         {\n@@ -823,7 +823,7 @@ Value addmultisigaddress(const Array& params, bool fHelp)\n     {\n         string msg = \"addmultisigaddress <nrequired> <'[\\\"key\\\",\\\"key\\\"]'> [account]\\n\"\n             \"Add a nrequired-to-sign multisignature address to the wallet\\\"\\n\"\n-            \"each key is a NovaCoin address or hex-encoded public key\\n\"\n+            \"each key is a 42 address or hex-encoded public key\\n\"\n             \"If [account] is specified, assign address to [account].\";\n         throw runtime_error(msg);\n     }\n@@ -1495,15 +1495,15 @@ Value keypoolreset(const Array& params, bool fHelp)\n void ThreadTopUpKeyPool(void* parg)\n {\n     // Make this thread recognisable as the key-topping-up thread\n-    RenameThread(\"novacoin-key-top\");\n+    RenameThread(\"42-key-top\");\n \n     pwalletMain->TopUpKeyPool();\n }\n \n void ThreadCleanWalletPassphrase(void* parg)\n {\n     // Make this thread recognisable as the wallet relocking thread\n-    RenameThread(\"novacoin-lock-wa\");\n+    RenameThread(\"42-lock-wa\");\n \n     int64_t nMyWakeTime = GetTimeMillis() + *((int64_t*)parg) * 1000;\n \n@@ -1674,7 +1674,7 @@ Value encryptwallet(const Array& params, bool fHelp)\n     // slack space in .dat files; that is bad if the old data is\n     // unencrypted private keys. So:\n     StartShutdown();\n-    return \"wallet encrypted; NovaCoin server stopping, restart to run with encrypted wallet.  The keypool has been flushed, you need to make a new backup.\";\n+    return \"wallet encrypted; 42 server stopping, restart to run with encrypted wallet.  The keypool has been flushed, you need to make a new backup.\";\n }\n \n class DescribeAddressVisitor : public boost::static_visitor<Object>\n@@ -1725,8 +1725,8 @@ Value validateaddress(const Array& params, bool fHelp)\n {\n     if (fHelp || params.size() != 1)\n         throw runtime_error(\n-            \"validateaddress <novacoinaddress>\\n\"\n-            \"Return information about <novacoinaddress>.\");\n+            \"validateaddress <42address>\\n\"\n+            \"Return information about <42address>.\");\n \n     CBitcoinAddress address(params[0].get_str());\n     bool isValid = address.IsValid();\n@@ -1854,7 +1854,7 @@ Value repairwallet(const Array& params, bool fHelp)\n     return result;\n }\n \n-// NovaCoin: resend unconfirmed wallet transactions\n+// 42: resend unconfirmed wallet transactions\n Value resendtx(const Array& params, bool fHelp)\n {\n     if (fHelp || params.size() > 1)"
      },
      {
        "sha": "2f8a82a671c439185f26273b8da7dc8155ea9b37",
        "filename": "src/timestamps.h",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/src/timestamps.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/src/timestamps.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/timestamps.h?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -1,6 +1,4 @@\n #ifndef BITCOIN_TIMESTAMPS_H\n #define BITCOIN_TIMESTAMPS_H\n-\n-static const unsigned int TARGETS_SWITCH_TIME = 1374278400; // Saturday, 20-Jul-2013 00:00:00 UTC\n-static const unsigned int CHECKLOCKTIMEVERIFY_SWITCH_TIME = 1461110400; // Wednesday, 20-Apr-16 00:00:00 UTC\n+static const unsigned int CHECKLOCKTIMEVERIFY_SWITCH_TIME = 1478476800; // Monday, 07 Nov 2016 00:00:00 UTC\n #endif"
      },
      {
        "sha": "cd999d52af55ba669ed4cbf45caf7e1019ba1890",
        "filename": "src/txdb-leveldb.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/src/txdb-leveldb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/src/txdb-leveldb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txdb-leveldb.cpp?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -396,7 +396,7 @@ bool CTxDB::LoadBlockIndex()\n             return error(\"LoadBlockIndex() : CheckIndex failed at %d\", pindexNew->nHeight);\n         }\n \n-        // NovaCoin: build setStakeSeen\n+        // 42: build setStakeSeen\n         if (pindexNew->IsProofOfStake())\n             setStakeSeen.insert(make_pair(pindexNew->prevoutStake, pindexNew->nStakeTime));\n \n@@ -420,7 +420,7 @@ bool CTxDB::LoadBlockIndex()\n     {\n         CBlockIndex* pindex = item.second;\n         pindex->nChainTrust = (pindex->pprev ? pindex->pprev->nChainTrust : 0) + pindex->GetBlockTrust();\n-        // NovaCoin: calculate stake modifier checksum\n+        // 42: calculate stake modifier checksum\n         pindex->nStakeModifierChecksum = GetStakeModifierChecksum(pindex);\n         if (!CheckStakeModifierCheckpoints(pindex->nHeight, pindex->nStakeModifierChecksum))\n             return error(\"CTxDB::LoadBlockIndex() : Failed stake modifier checkpoint height=%d, modifier=0x%016\" PRIx64, pindex->nHeight, pindex->nStakeModifier);\n@@ -443,7 +443,7 @@ bool CTxDB::LoadBlockIndex()\n       hashBestChain.ToString().substr(0,20).c_str(), nBestHeight, CBigNum(nBestChainTrust).ToString().c_str(),\n       DateTimeStrFormat(\"%x %H:%M:%S\", pindexBest->GetBlockTime()).c_str());\n \n-    // NovaCoin: load hashSyncCheckpoint\n+    // 42: load hashSyncCheckpoint\n     if (!ReadSyncCheckpoint(Checkpoints::hashSyncCheckpoint))\n         return error(\"CTxDB::LoadBlockIndex() : hashSyncCheckpoint not loaded\");\n     printf(\"LoadBlockIndex(): synchronized checkpoint %s\\n\", Checkpoints::hashSyncCheckpoint.ToString().c_str());"
      },
      {
        "sha": "e6239071c9b97bf35f049cdbbcf31d1652448c0a",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 13,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -1041,7 +1041,7 @@ static std::string FormatException(std::exception* pex, const char* pszThread)\n     char pszModule[MAX_PATH] = \"\";\n     GetModuleFileNameA(NULL, pszModule, sizeof(pszModule));\n #else\n-    const char* pszModule = \"novacoin\";\n+    const char* pszModule = \"42\";\n #endif\n     if (pex)\n         return strprintf(\n@@ -1090,13 +1090,13 @@ void PrintExceptionContinue(std::exception* pex, const char* pszThread)\n boost::filesystem::path GetDefaultDataDir()\n {\n     namespace fs = boost::filesystem;\n-    // Windows < Vista: C:\\Documents and Settings\\Username\\Application Data\\NovaCoin\n-    // Windows >= Vista: C:\\Users\\Username\\AppData\\Roaming\\NovaCoin\n-    // Mac: ~/Library/Application Support/NovaCoin\n-    // Unix: ~/.novacoin\n+    // Windows < Vista: C:\\Documents and Settings\\Username\\Application Data\\42\n+    // Windows >= Vista: C:\\Users\\Username\\AppData\\Roaming\\42\n+    // Mac: ~/Library/Application Support/42\n+    // Unix: ~/.42\n #ifdef WIN32\n     // Windows\n-    return GetSpecialFolderPath(CSIDL_APPDATA) / \"NovaCoin\";\n+    return GetSpecialFolderPath(CSIDL_APPDATA) / \"42\";\n #else\n     fs::path pathRet;\n     char* pszHome = getenv(\"HOME\");\n@@ -1108,10 +1108,10 @@ boost::filesystem::path GetDefaultDataDir()\n     // Mac\n     pathRet /= \"Library/Application Support\";\n     fs::create_directory(pathRet);\n-    return pathRet / \"NovaCoin\";\n+    return pathRet / \"42\";\n #else\n     // Unix\n-    return pathRet / \".novacoin\";\n+    return pathRet / \".42\";\n #endif\n #endif\n }\n@@ -1173,7 +1173,7 @@ void createConf()\n #endif\n     pConf << \"rpcuser=user\\nrpcpassword=\"\n             + randomStrGen(15)\n-            + \"\\nrpcport=8344\"\n+            + \"\\nrpcport=2121\"\n             + \"\\n#(0=off, 1=on) daemon - run in the background as a daemon and accept commands\"\n             + \"\\ndaemon=0\"\n             + \"\\n#(0=off, 1=on) server - accept command line and JSON-RPC commands\"\n@@ -1184,7 +1184,7 @@ void createConf()\n \n boost::filesystem::path GetConfigFile()\n {\n-    boost::filesystem::path pathConfigFile(GetArg(\"-conf\", \"novacoin.conf\"));\n+    boost::filesystem::path pathConfigFile(GetArg(\"-conf\", \"42.conf\"));\n     if (!pathConfigFile.is_complete()) pathConfigFile = GetDataDir(false) / pathConfigFile;\n     return pathConfigFile;\n }\n@@ -1220,7 +1220,7 @@ void ReadConfigFile(map<string, string>& mapSettingsRet,\n \n boost::filesystem::path GetPidFile()\n {\n-    boost::filesystem::path pathPidFile(GetArg(\"-pid\", \"novacoind.pid\"));\n+    boost::filesystem::path pathPidFile(GetArg(\"-pid\", \"42d.pid\"));\n     if (!pathPidFile.is_complete()) pathPidFile = GetDataDir() / pathPidFile;\n     return pathPidFile;\n }\n@@ -1388,10 +1388,10 @@ void AddTimeData(const CNetAddr& ip, int64_t nTime)\n                 if (!fMatch)\n                 {\n                     fDone = true;\n-                    string strMessage = _(\"Warning: Please check that your computer's date and time are correct! If your clock is wrong NovaCoin will not work properly.\");\n+                    string strMessage = _(\"Warning: Please check that your computer's date and time are correct! If your clock is wrong 42 will not work properly.\");\n                     strMiscWarning = strMessage;\n                     printf(\"*** %s\\n\", strMessage.c_str());\n-                    uiInterface.ThreadSafeMessageBox(strMessage+\" \", string(\"NovaCoin\"), CClientUIInterface::OK | CClientUIInterface::ICON_EXCLAMATION);\n+                    uiInterface.ThreadSafeMessageBox(strMessage+\" \", string(\"42\"), CClientUIInterface::OK | CClientUIInterface::ICON_EXCLAMATION);\n                 }\n             }\n         }"
      },
      {
        "sha": "042fbbbdef181a1c905a9b79b68276a27fe9f72b",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -39,8 +39,8 @@ static const int32_t nOneHour = 60 * 60;\n static const int32_t nOneDay = 24 * 60 * 60;\n static const int64_t nOneWeek = 7 * 24 * 60 * 60;\n \n-static const int64_t COIN = 1000000;\n-static const int64_t CENT = 10000;\n+static const int64_t COIN = 100000000;\n+static const int64_t CENT = 1000000;\n \n #define BEGIN(a)            ((char*)&(a))\n #define END(a)              ((char*)&((&(a))[1]))"
      },
      {
        "sha": "3d09a996b8b94f8c2076ad792cd0edc13bae08c3",
        "filename": "src/version.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/src/version.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/src/version.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/version.cpp?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -60,15 +60,15 @@ const std::string CLIENT_NAME(\"Satoshi\");\n // git will put \"#define GIT_ARCHIVE 1\" on the next line inside archives. \n #define GIT_ARCHIVE 1\n #ifdef GIT_ARCHIVE\n-#    define GIT_COMMIT_ID \"32a928e\"\n+#    define GIT_COMMIT_ID \"891b422\"\n #    define GIT_COMMIT_DATE \"$Format:%cD\"\n #endif\n \n #define BUILD_DESC_FROM_COMMIT(maj,min,rev,commit) \\\n-    \"nvc-v\" DO_STRINGIZE(maj) \".\" DO_STRINGIZE(min) \".\" DO_STRINGIZE(rev) \".\" DO_STRINGIZE(build) \"-g\" commit\n+    \"42-v\" DO_STRINGIZE(maj) \".\" DO_STRINGIZE(min) \".\" DO_STRINGIZE(rev) \".\" DO_STRINGIZE(build) \"-g\" commit\n \n #define BUILD_DESC_FROM_UNKNOWN(maj,min,rev) \\\n-    \"nvc-v\" DO_STRINGIZE(maj) \".\" DO_STRINGIZE(min) \".\" DO_STRINGIZE(rev) \".\" DO_STRINGIZE(build) \"-unk\"\n+    \"42-v\" DO_STRINGIZE(maj) \".\" DO_STRINGIZE(min) \".\" DO_STRINGIZE(rev) \".\" DO_STRINGIZE(build) \"-unk\"\n \n #ifndef BUILD_DESC\n #    ifdef GIT_COMMIT_ID"
      },
      {
        "sha": "7ab08d17e447e47962058645bed25f1865a88b9e",
        "filename": "src/version.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/src/version.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/src/version.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/version.h?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -32,7 +32,7 @@ static const int DATABASE_VERSION = 70507;\n \n static const int PROTOCOL_VERSION = 60018;\n \n-// earlier versions not supported as of Feb 2012, and are disconnected\n+// earlier versions not supported and disconnected\n static const int MIN_PROTO_VERSION = 209;\n \n // nTime field added to CAddress, starting with this version;\n@@ -44,7 +44,7 @@ static const int NOBLKS_VERSION_START = 60002;\n static const int NOBLKS_VERSION_END = 60006;\n \n #define DISPLAY_VERSION_MAJOR       0\n-#define DISPLAY_VERSION_MINOR       5\n-#define DISPLAY_VERSION_REVISION    8\n+#define DISPLAY_VERSION_MINOR       0\n+#define DISPLAY_VERSION_REVISION    7\n \n #endif"
      },
      {
        "sha": "e6c469a163d1daff6a6f330148c1a3bb22e46999",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -591,7 +591,7 @@ void CWallet::WalletUpdateSpent(const CTransaction &tx, bool fBlock)\n                     printf(\"WalletUpdateSpent: bad wtx %s\\n\", wtx.GetHash().ToString().c_str());\n                 else if (!wtx.IsSpent(txin.prevout.n) && IsMine(wtx.vout[txin.prevout.n]))\n                 {\n-                    printf(\"WalletUpdateSpent found spent coin %snvc %s\\n\", FormatMoney(wtx.GetCredit(MINE_ALL)).c_str(), wtx.GetHash().ToString().c_str());\n+                    printf(\"WalletUpdateSpent found spent coin %s42 %s\\n\", FormatMoney(wtx.GetCredit(MINE_ALL)).c_str(), wtx.GetHash().ToString().c_str());\n                     wtx.MarkSpent(txin.prevout.n);\n                     wtx.WriteToDisk();\n                     NotifyTransactionChanged(this, txin.prevout.hash, CT_UPDATED);\n@@ -1464,7 +1464,7 @@ void CWallet::ReacceptWalletTransactions()\n                 }\n                 if (fUpdated)\n                 {\n-                    printf(\"ReacceptWalletTransactions found spent coin %snvc %s\\n\", FormatMoney(wtx.GetCredit(MINE_ALL)).c_str(), wtx.GetHash().ToString().c_str());\n+                    printf(\"ReacceptWalletTransactions found spent coin %s42 %s\\n\", FormatMoney(wtx.GetCredit(MINE_ALL)).c_str(), wtx.GetHash().ToString().c_str());\n                     wtx.MarkDirty();\n                     wtx.WriteToDisk();\n                 }\n@@ -2299,7 +2299,7 @@ bool CWallet::CreateCoinStake(uint256 &hashTx, uint32_t nOut, uint32_t nGenerati\n \n     // The following combine threshold is important to security\n     // Should not be adjusted if you don't understand the consequences\n-    int64_t nCombineThreshold = GetProofOfWorkReward(GetLastBlockIndex(pindexBest, false)->nBits) / 3;\n+    int64_t nCombineThreshold = 1 * CENT;\n \n     int64_t nBalance = GetBalance();\n     int64_t nCredit = wtx.vout[nOut].nValue;\n@@ -2325,7 +2325,7 @@ bool CWallet::CreateCoinStake(uint256 &hashTx, uint32_t nOut, uint32_t nGenerati\n \n     int64_t nValueIn = 0;\n     CoinsSet setCoins;\n-    if (!SelectCoinsSimple(nBalance - nReserveBalance, MIN_TX_FEE, MAX_MONEY, nGenerationTime, nCoinbaseMaturity * 10, setCoins, nValueIn))\n+    if (!SelectCoinsSimple(nBalance - nReserveBalance, MIN_TX_FEE, MAX_MONEY, nGenerationTime, nCoinbaseMaturity, setCoins, nValueIn))\n         return false;\n \n     if (setCoins.empty())\n@@ -2339,7 +2339,7 @@ bool CWallet::CreateCoinStake(uint256 &hashTx, uint32_t nOut, uint32_t nGenerati\n \n         // Iterate through set of (wtx*, nout) in order to find some additional inputs for our new coinstake transaction.\n         //\n-        // * Value is higher than 0.01 NVC;\n+        // * Value is higher than 0.01 42;\n         // * Only add inputs of the same key/address as kernel;\n         // * Input hash and kernel parent hash should be different.\n         for(CoinsSet::iterator pcoin = setCoins.begin(); pcoin != setCoins.end(); pcoin++)\n@@ -2404,7 +2404,7 @@ bool CWallet::CreateCoinStake(uint256 &hashTx, uint32_t nOut, uint32_t nGenerati\n     CTxDB txdb(\"r\");\n     if (!txNew.GetCoinAge(txdb, nCoinAge))\n         return error(\"CreateCoinStake : failed to calculate coin age\\n\");\n-    nCredit += GetProofOfStakeReward(nCoinAge, nBits, nGenerationTime);\n+    nCredit += GetProofOfStakeReward(nCoinAge);\n \n     int64_t nMinFee = 0;\n     for ( ; ; )"
      },
      {
        "sha": "7d098307af9067da6e6c53e271cb894ac8585f61",
        "filename": "src/walletdb.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dd28f80df1e355098f2c25006fe2a32091a63da/src/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dd28f80df1e355098f2c25006fe2a32091a63da/src/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/walletdb.cpp?ref=4dd28f80df1e355098f2c25006fe2a32091a63da",
        "patch": "@@ -683,7 +683,7 @@ DBErrors CWalletDB::ZapWalletTx(CWallet* pwallet)\n void ThreadFlushWalletDB(void* parg)\n {\n     // Make this thread recognisable as the wallet flushing thread\n-    RenameThread(\"novacoin-wallet\");\n+    RenameThread(\"42-wallet\");\n \n     const string& strFile = ((const string*)parg)[0];\n     static bool fOneThread;\n@@ -808,7 +808,7 @@ bool DumpWallet(CWallet* pwallet, const string& strDest)\n        return false;\n \n     // produce output\n-    file << strprintf(\"# Wallet dump created by NovaCoin %s (%s)\\n\", CLIENT_BUILD.c_str(), CLIENT_DATE.c_str());\n+    file << strprintf(\"# Wallet dump created by 42 %s (%s)\\n\", CLIENT_BUILD.c_str(), CLIENT_DATE.c_str());\n     file << strprintf(\"# * Created on %s\\n\", EncodeDumpTime(GetTime()).c_str());\n     file << strprintf(\"# * Best block at time of backup was %i (%s),\\n\", nBestHeight, hashBestChain.ToString().c_str());\n     file << strprintf(\"#   mined on %s\\n\", EncodeDumpTime(pindexBest->nTime).c_str());"
      }
    ]
  },
  {
    "sha": "ef2c2dd2e00424f178b752ad7c40442497b77d06",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplZjJjMmRkMmUwMDQyNGYxNzhiNzUyYWQ3YzQwNDQyNDk3Yjc3ZDA2",
    "commit": {
      "author": {
        "name": "Laser9un",
        "email": "laser9un@gmail.com",
        "date": "2016-12-15T19:10:14Z"
      },
      "committer": {
        "name": "Laser9un",
        "email": "laser9un@gmail.com",
        "date": "2016-12-15T19:10:14Z"
      },
      "message": "Add checkpoint @ block # 4200",
      "tree": {
        "sha": "4e4d6cda7a217e23f8ae09fd95bab5090311aa4d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4e4d6cda7a217e23f8ae09fd95bab5090311aa4d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ef2c2dd2e00424f178b752ad7c40442497b77d06",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ef2c2dd2e00424f178b752ad7c40442497b77d06",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ef2c2dd2e00424f178b752ad7c40442497b77d06",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ef2c2dd2e00424f178b752ad7c40442497b77d06/comments",
    "author": {
      "login": "Laser9un",
      "id": 16782409,
      "node_id": "MDQ6VXNlcjE2NzgyNDA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16782409?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Laser9un",
      "html_url": "https://github.com/Laser9un",
      "followers_url": "https://api.github.com/users/Laser9un/followers",
      "following_url": "https://api.github.com/users/Laser9un/following{/other_user}",
      "gists_url": "https://api.github.com/users/Laser9un/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Laser9un/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Laser9un/subscriptions",
      "organizations_url": "https://api.github.com/users/Laser9un/orgs",
      "repos_url": "https://api.github.com/users/Laser9un/repos",
      "events_url": "https://api.github.com/users/Laser9un/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Laser9un/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Laser9un",
      "id": 16782409,
      "node_id": "MDQ6VXNlcjE2NzgyNDA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16782409?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Laser9un",
      "html_url": "https://github.com/Laser9un",
      "followers_url": "https://api.github.com/users/Laser9un/followers",
      "following_url": "https://api.github.com/users/Laser9un/following{/other_user}",
      "gists_url": "https://api.github.com/users/Laser9un/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Laser9un/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Laser9un/subscriptions",
      "organizations_url": "https://api.github.com/users/Laser9un/orgs",
      "repos_url": "https://api.github.com/users/Laser9un/repos",
      "events_url": "https://api.github.com/users/Laser9un/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Laser9un/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4dd28f80df1e355098f2c25006fe2a32091a63da",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4dd28f80df1e355098f2c25006fe2a32091a63da",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4dd28f80df1e355098f2c25006fe2a32091a63da"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 6,
      "deletions": 4
    },
    "files": [
      {
        "sha": "0b21cd59c6c63aed449a49efe8f946fa01bb4cb0",
        "filename": "src/checkpoints.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef2c2dd2e00424f178b752ad7c40442497b77d06/src/checkpoints.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef2c2dd2e00424f178b752ad7c40442497b77d06/src/checkpoints.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/checkpoints.cpp?ref=ef2c2dd2e00424f178b752ad7c40442497b77d06",
        "patch": "@@ -26,8 +26,9 @@ namespace Checkpoints\n     //\n     static MapCheckpoints mapCheckpoints =\n         boost::assign::map_list_of\n-        ( 0,     std::make_pair(hashGenesisBlock, 1478980800) )\n-\t\t( 420,   std::make_pair(uint256(\"0x00000bc4728eba8caf6ac81c81ce2a95ea69e81fde5e75dbc260690caa6d99af\"), 1479273521) )\n+        ( 0,      std::make_pair(hashGenesisBlock, 1478980800) )\n+\t\t( 420,    std::make_pair(uint256(\"0x00000bc4728eba8caf6ac81c81ce2a95ea69e81fde5e75dbc260690caa6d99af\"), 1479273521) )\n+\t\t( 4200,   std::make_pair(uint256(\"0x000000022c3ed3e7c12741177b3ff82d0b0186511a5e864859f8e0d799e61ad5\"), 1481725697) )\n     ;\n \n     static ListBannedBlocks listBanned ="
      },
      {
        "sha": "b1824c2b45942a29cc4ff3b6fffb048581432db0",
        "filename": "src/kernel.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef2c2dd2e00424f178b752ad7c40442497b77d06/src/kernel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef2c2dd2e00424f178b752ad7c40442497b77d06/src/kernel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/kernel.cpp?ref=ef2c2dd2e00424f178b752ad7c40442497b77d06",
        "patch": "@@ -31,8 +31,9 @@ typedef std::map<int, unsigned int> MapModifierCheckpoints;\n // Hard checkpoints of stake modifiers to ensure they are deterministic\n static std::map<int, unsigned int> mapStakeModifierCheckpoints =\n     boost::assign::map_list_of\n-        ( 0,   0xfd11f4e7 )\n-\t\t( 420, 0x9ccdddaf )\n+        ( 0,     0xfd11f4e7 )\n+\t\t( 420,   0x9ccdddaf )\n+\t\t( 4200,  0x6cfc8d5b )\n     ;\n \n // Hard checkpoints of stake modifiers to ensure they are deterministic (testNet)"
      }
    ]
  },
  {
    "sha": "6d1600c57ada74aae9d6e46f6f86f052404fdb9e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ZDE2MDBjNTdhZGE3NGFhZTlkNmU0NmY2Zjg2ZjA1MjQwNGZkYjll",
    "commit": {
      "author": {
        "name": "Laser9un",
        "email": "laser9un@gmail.com",
        "date": "2016-12-24T18:13:54Z"
      },
      "committer": {
        "name": "Laser9un",
        "email": "laser9un@gmail.com",
        "date": "2016-12-24T18:13:54Z"
      },
      "message": "Add cryptoid.info block explorer URL",
      "tree": {
        "sha": "a9fb7d7a8ecf58225b3a3e7dae65c9b6e3da4f82",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a9fb7d7a8ecf58225b3a3e7dae65c9b6e3da4f82"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6d1600c57ada74aae9d6e46f6f86f052404fdb9e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6d1600c57ada74aae9d6e46f6f86f052404fdb9e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6d1600c57ada74aae9d6e46f6f86f052404fdb9e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6d1600c57ada74aae9d6e46f6f86f052404fdb9e/comments",
    "author": {
      "login": "Laser9un",
      "id": 16782409,
      "node_id": "MDQ6VXNlcjE2NzgyNDA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16782409?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Laser9un",
      "html_url": "https://github.com/Laser9un",
      "followers_url": "https://api.github.com/users/Laser9un/followers",
      "following_url": "https://api.github.com/users/Laser9un/following{/other_user}",
      "gists_url": "https://api.github.com/users/Laser9un/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Laser9un/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Laser9un/subscriptions",
      "organizations_url": "https://api.github.com/users/Laser9un/orgs",
      "repos_url": "https://api.github.com/users/Laser9un/repos",
      "events_url": "https://api.github.com/users/Laser9un/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Laser9un/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Laser9un",
      "id": 16782409,
      "node_id": "MDQ6VXNlcjE2NzgyNDA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16782409?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Laser9un",
      "html_url": "https://github.com/Laser9un",
      "followers_url": "https://api.github.com/users/Laser9un/followers",
      "following_url": "https://api.github.com/users/Laser9un/following{/other_user}",
      "gists_url": "https://api.github.com/users/Laser9un/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Laser9un/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Laser9un/subscriptions",
      "organizations_url": "https://api.github.com/users/Laser9un/orgs",
      "repos_url": "https://api.github.com/users/Laser9un/repos",
      "events_url": "https://api.github.com/users/Laser9un/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Laser9un/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ef2c2dd2e00424f178b752ad7c40442497b77d06",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ef2c2dd2e00424f178b752ad7c40442497b77d06",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ef2c2dd2e00424f178b752ad7c40442497b77d06"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "5628d7c036c22ad55f9b10929a34346112be4d7c",
        "filename": "src/qt/optionsmodel.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6d1600c57ada74aae9d6e46f6f86f052404fdb9e/src/qt/optionsmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6d1600c57ada74aae9d6e46f6f86f052404fdb9e/src/qt/optionsmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsmodel.cpp?ref=6d1600c57ada74aae9d6e46f6f86f052404fdb9e",
        "patch": "@@ -67,9 +67,9 @@ void OptionsModel::Init()\n         if(fTestNet)\n             settings.setValue(\"strThirdPartyTxUrls\", \"\");\n         else\n-            settings.setValue(\"strThirdPartyTxUrls\", \"\");\n+            settings.setValue(\"strThirdPartyTxUrls\", \"https://chainz.cryptoid.info/42/tx.dws?%s\");\n     }\n-    strThirdPartyTxUrls = settings.value(\"strThirdPartyTxUrls\", \"\").toString();\n+    strThirdPartyTxUrls = settings.value(\"strThirdPartyTxUrls\", \"https://chainz.cryptoid.info/42/tx.dws?%s\").toString();\n     fMinimizeToTray = settings.value(\"fMinimizeToTray\", false).toBool();\n     fMinimizeOnClose = settings.value(\"fMinimizeOnClose\", false).toBool();\n     fCoinControlFeatures = settings.value(\"fCoinControlFeatures\", false).toBool();"
      }
    ]
  },
  {
    "sha": "31ee1d46e1a241cc6d5311d8ae0a91e8400da79d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozMWVlMWQ0NmUxYTI0MWNjNmQ1MzExZDhhZTBhOTFlODQwMGRhNzlk",
    "commit": {
      "author": {
        "name": "Laser9un",
        "email": "laser9un@gmail.com",
        "date": "2017-01-04T02:52:04Z"
      },
      "committer": {
        "name": "Laser9un",
        "email": "laser9un@gmail.com",
        "date": "2017-01-04T02:52:04Z"
      },
      "message": "Update icons for Debian",
      "tree": {
        "sha": "c0fc7f26007fe91837de1735442771a3c34797a1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c0fc7f26007fe91837de1735442771a3c34797a1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/31ee1d46e1a241cc6d5311d8ae0a91e8400da79d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/31ee1d46e1a241cc6d5311d8ae0a91e8400da79d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/31ee1d46e1a241cc6d5311d8ae0a91e8400da79d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/31ee1d46e1a241cc6d5311d8ae0a91e8400da79d/comments",
    "author": {
      "login": "Laser9un",
      "id": 16782409,
      "node_id": "MDQ6VXNlcjE2NzgyNDA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16782409?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Laser9un",
      "html_url": "https://github.com/Laser9un",
      "followers_url": "https://api.github.com/users/Laser9un/followers",
      "following_url": "https://api.github.com/users/Laser9un/following{/other_user}",
      "gists_url": "https://api.github.com/users/Laser9un/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Laser9un/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Laser9un/subscriptions",
      "organizations_url": "https://api.github.com/users/Laser9un/orgs",
      "repos_url": "https://api.github.com/users/Laser9un/repos",
      "events_url": "https://api.github.com/users/Laser9un/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Laser9un/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Laser9un",
      "id": 16782409,
      "node_id": "MDQ6VXNlcjE2NzgyNDA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16782409?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Laser9un",
      "html_url": "https://github.com/Laser9un",
      "followers_url": "https://api.github.com/users/Laser9un/followers",
      "following_url": "https://api.github.com/users/Laser9un/following{/other_user}",
      "gists_url": "https://api.github.com/users/Laser9un/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Laser9un/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Laser9un/subscriptions",
      "organizations_url": "https://api.github.com/users/Laser9un/orgs",
      "repos_url": "https://api.github.com/users/Laser9un/repos",
      "events_url": "https://api.github.com/users/Laser9un/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Laser9un/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6d1600c57ada74aae9d6e46f6f86f052404fdb9e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6d1600c57ada74aae9d6e46f6f86f052404fdb9e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6d1600c57ada74aae9d6e46f6f86f052404fdb9e"
      }
    ],
    "stats": {
      "total": 1212,
      "additions": 556,
      "deletions": 656
    },
    "files": [
      {
        "sha": "12717740df6a7ea49ffe9db1be9f3f4a74d56cbc",
        "filename": "contrib/gentoo/novacoin-0.5.0.ebuild",
        "status": "removed",
        "additions": 0,
        "deletions": 107,
        "changes": 107,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6d1600c57ada74aae9d6e46f6f86f052404fdb9e/contrib/gentoo/novacoin-0.5.0.ebuild",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6d1600c57ada74aae9d6e46f6f86f052404fdb9e/contrib/gentoo/novacoin-0.5.0.ebuild",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gentoo/novacoin-0.5.0.ebuild?ref=6d1600c57ada74aae9d6e46f6f86f052404fdb9e",
        "patch": "@@ -1,107 +0,0 @@\n-\ufeff# Distributed under the terms of the GNU General Public License v2\n-EAPI=5\n-LANGS=\"en ru\"\n-\n-inherit db-use eutils fdo-mime gnome2-utils kde4-functions qt4-r2\n-\n-DB_VER=\"4.8\"\n-\n-DESCRIPTION=\"NovaCoin - a hybrid PoW+PoS energy efficient p2p-cryptocurrency and electronic payment system.\"\n-HOMEPAGE=\"https://novaco.in/\"\n-SRC_URI=\"https://github.com/${PN}-project/${PN}/archive/nvc-v${PV}.tar.gz -> ${PN}-${PV}.tar.gz\"\n-\n-LICENSE=\"MIT\"\n-SLOT=\"0\"\n-KEYWORDS=\"~amd64 ~x86\"\n-IUSE=\"+dbus -ipv6 kde +qrcode\"\n-\n-RDEPEND=\"\n-\tdev-libs/boost[threads(+)]\n-\tdev-libs/openssl:0[-bindist]\n-\tqrcode? (\n-\t\tmedia-gfx/qrencode\n-\t)\n-\tsys-libs/db:$(db_ver_to_slot \"${DB_VER}\")[cxx]\n-\tdev-qt/qtgui:4\n-\tdbus? (\n-\t\tdev-qt/qtdbus:4\n-\t)\n-\"\n-DEPEND=\"${RDEPEND}\n-\t>=app-shells/bash-4.1\n-\t>sys-devel/gcc-4.3.3\n-\t>=dev-libs/openssl-0.9.8g\n-\t>=sys-libs/db-4.8.30\n-\t>=dev-libs/boost-1.37\n-\"\n-\n-DOCS=\"doc/translation_process.md\"\n-\n-S=\"${WORKDIR}/${PN}-nvc-v${PV}\"\n-\n-src_prepare() {\n-\tcd src || die\n-\n-\tlocal filt= yeslang= nolang=\n-\n-\tfor ts in $(ls qt/locale/*.ts)\n-\tdo\n-\t\tx=\"${ts/*bitcoin_/}\"\n-\t\tx=\"${x/.ts/}\"\n-\t\tif ! use \"linguas_$x\"; then\n-\t\t\tnolang=\"$nolang $x\"\n-\t\t\trm \"$ts\"\n-\t\t\tfilt=\"$filt\\\\|$x\"\n-\t\telse\n-\t\t\tyeslang=\"$yeslang $x\"\n-\t\tfi\n-\tdone\n-\n-\tfilt=\"bitcoin_\\\\(${filt:2}\\\\)\\\\.\\(qm\\|ts\\)\"\n-\tsed \"/${filt}/d\" -i 'qt/bitcoin.qrc'\n-\teinfo \"Languages -- Enabled:$yeslang -- Disabled:$nolang\"\n-}\n-\n-src_configure() {\n-\tOPTS=()\n-\n-\tuse dbus && OPTS+=(\"USE_DBUS=1\")\n-\tuse ipv6 || OPTS+=(\"USE_IPV6=-\")\n-\n-\tOPTS+=(\"BDB_INCLUDE_PATH=$(db_includedir \"${DB_VER}\")\")\n-\tOPTS+=(\"BDB_LIB_SUFFIX=-${DB_VER}\")\n-\n-\tif has_version '>=dev-libs/boost-1.52'; then\n-\t\tOPTS+=(\"LIBS+=-lboost_chrono\\$\\$BOOST_LIB_SUFFIX\")\n-\tfi\n-\n-\teqmake4 ${PN}-qt.pro \"${OPTS[@]}\"\n-}\n-\n-src_install() {\n-\tdobin ${PN}-qt\n-\n-\tinsinto /usr/share/pixmaps\n-\tnewins \"src/qt/res/icons/novacoin-128.png\" \"${PN}.png\"\n-\n-\tmake_desktop_entry \"${PN}-qt\" \"Novacoin\" \"/usr/share/pixmaps/${PN}.png\" \"Network;P2P;Finance;\"\n-\n-\tif use kde; then\n-\t\tinsinto /usr/share/kde4/services\n-\t\tnewins contrib/debian/novacoin-qt.protocol ${PN}.protocol\n-\tfi\n-}\n-\n-update_caches() {\n-\tgnome2_icon_cache_update\n-\tfdo-mime_desktop_database_update\n-\tbuildsycoca\n-}\n-\n-pkg_postinst() {\n-\tupdate_caches\n-}\n-\n-pkg_postrm() {\n-\tupdate_caches\n-}\n\\ No newline at end of file"
      },
      {
        "sha": "1cacaf95ac9db98d95c28b51512cd8bc5cac7c8e",
        "filename": "share/pixmaps/42.ico",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31ee1d46e1a241cc6d5311d8ae0a91e8400da79d/share/pixmaps/42.ico",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31ee1d46e1a241cc6d5311d8ae0a91e8400da79d/share/pixmaps/42.ico",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/42.ico?ref=31ee1d46e1a241cc6d5311d8ae0a91e8400da79d"
      },
      {
        "sha": "e716c2c0432d849e1ad4cf19aad5ba31b83e3fb8",
        "filename": "share/pixmaps/4232.xpm",
        "status": "added",
        "additions": 227,
        "deletions": 0,
        "changes": 227,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31ee1d46e1a241cc6d5311d8ae0a91e8400da79d/share/pixmaps/4232.xpm",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31ee1d46e1a241cc6d5311d8ae0a91e8400da79d/share/pixmaps/4232.xpm",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/4232.xpm?ref=31ee1d46e1a241cc6d5311d8ae0a91e8400da79d",
        "patch": "@@ -0,0 +1,227 @@\n+/* XPM */\n+static char *_02bp_gxu1f[] = {\n+/* columns rows colors chars-per-pixel */\n+\"32 32 189 2 \",\n+\"   c None\",\n+\".  c #121212\",\n+\"X  c #141414\",\n+\"o  c #151515\",\n+\"O  c #161616\",\n+\"+  c #191919\",\n+\"@  c #1B1B1B\",\n+\"#  c #1D1D1D\",\n+\"$  c #1F1F1F\",\n+\"%  c #212121\",\n+\"&  c #222222\",\n+\"*  c #262626\",\n+\"=  c #272727\",\n+\"-  c #292929\",\n+\";  c #2B2B2B\",\n+\":  c #2D2D2D\",\n+\">  c #2E2E2E\",\n+\",  c #303030\",\n+\"<  c #313131\",\n+\"1  c #333333\",\n+\"2  c #343434\",\n+\"3  c #363636\",\n+\"4  c #373737\",\n+\"5  c #383838\",\n+\"6  c #393939\",\n+\"7  c #3A3A3A\",\n+\"8  c #3B3B3B\",\n+\"9  c #3C3C3C\",\n+\"0  c #3D3D3D\",\n+\"q  c #3E3E3E\",\n+\"w  c #3F3F3F\",\n+\"e  c #404040\",\n+\"r  c #414141\",\n+\"t  c #424242\",\n+\"y  c #434343\",\n+\"u  c #444444\",\n+\"i  c #454545\",\n+\"p  c #464646\",\n+\"a  c #474747\",\n+\"s  c #484848\",\n+\"d  c #494949\",\n+\"f  c #4A4A4A\",\n+\"g  c #4B4B4B\",\n+\"h  c #4C4C4C\",\n+\"j  c #4D4D4D\",\n+\"k  c #4F4F4F\",\n+\"l  c #505050\",\n+\"z  c #515151\",\n+\"x  c #525252\",\n+\"c  c #535353\",\n+\"v  c #545454\",\n+\"b  c #555555\",\n+\"n  c #565656\",\n+\"m  c #575757\",\n+\"M  c #585858\",\n+\"N  c #595959\",\n+\"B  c #5A5A5A\",\n+\"V  c #5B5B5B\",\n+\"C  c #5C5C5C\",\n+\"Z  c #5D5D5D\",\n+\"A  c #5E5E5E\",\n+\"S  c #5F5F5F\",\n+\"D  c #606060\",\n+\"F  c #616161\",\n+\"G  c #626262\",\n+\"H  c #636363\",\n+\"J  c #646464\",\n+\"K  c #656565\",\n+\"L  c #666666\",\n+\"P  c #676767\",\n+\"I  c #686868\",\n+\"U  c #696969\",\n+\"Y  c #6A6A6A\",\n+\"T  c #6B6B6B\",\n+\"R  c #6C6C6C\",\n+\"E  c #6D6D6D\",\n+\"W  c #6E6E6E\",\n+\"Q  c #707070\",\n+\"!  c #717171\",\n+\"~  c #727272\",\n+\"^  c #737373\",\n+\"/  c #747474\",\n+\"(  c #757575\",\n+\")  c #767676\",\n+\"_  c #777777\",\n+\"`  c #787878\",\n+\"'  c #797979\",\n+\"]  c gray48\",\n+\"[  c #7B7B7B\",\n+\"{  c #7C7C7C\",\n+\"}  c #7D7D7D\",\n+\"|  c #7E7E7E\",\n+\" . c #7F7F7F\",\n+\".. c #808080\",\n+\"X. c #818181\",\n+\"o. c #828282\",\n+\"O. c #838383\",\n+\"+. c #848484\",\n+\"@. c #858585\",\n+\"#. c #868686\",\n+\"$. c #878787\",\n+\"%. c #888888\",\n+\"&. c #898989\",\n+\"*. c #8A8A8A\",\n+\"=. c #8D8D8D\",\n+\"-. c #8E8E8E\",\n+\";. c #8F8F8F\",\n+\":. c #909090\",\n+\">. c #919191\",\n+\",. c #939393\",\n+\"<. c #949494\",\n+\"1. c #959595\",\n+\"2. c #969696\",\n+\"3. c #979797\",\n+\"4. c #989898\",\n+\"5. c #9A9A9A\",\n+\"6. c #9B9B9B\",\n+\"7. c #9C9C9C\",\n+\"8. c #9D9D9D\",\n+\"9. c #9E9E9E\",\n+\"0. c #9F9F9F\",\n+\"q. c #A2A2A2\",\n+\"w. c #A3A3A3\",\n+\"e. c #A4A4A4\",\n+\"r. c #A5A5A5\",\n+\"t. c #A6A6A6\",\n+\"y. c #A7A7A7\",\n+\"u. c #A8A8A8\",\n+\"i. c #A9A9A9\",\n+\"p. c #ABABAB\",\n+\"a. c #ACACAC\",\n+\"s. c #ADADAD\",\n+\"d. c #AEAEAE\",\n+\"f. c #AFAFAF\",\n+\"g. c #B0B0B0\",\n+\"h. c #B1B1B1\",\n+\"j. c #B2B2B2\",\n+\"k. c #B4B4B4\",\n+\"l. c #B5B5B5\",\n+\"z. c #B6B6B6\",\n+\"x. c #B7B7B7\",\n+\"c. c #B8B8B8\",\n+\"v. c #BABABA\",\n+\"b. c #BBBBBB\",\n+\"n. c #BCBCBC\",\n+\"m. c #BDBDBD\",\n+\"M. c #BEBEBE\",\n+\"N. c #BFBFBF\",\n+\"B. c #C0C0C0\",\n+\"V. c #C1C1C1\",\n+\"C. c #C2C2C2\",\n+\"Z. c #C3C3C3\",\n+\"A. c #C4C4C4\",\n+\"S. c #C5C5C5\",\n+\"D. c #C6C6C6\",\n+\"F. c #C7C7C7\",\n+\"G. c #C8C8C8\",\n+\"H. c #C9C9C9\",\n+\"J. c #CACACA\",\n+\"K. c #CBCBCB\",\n+\"L. c #CCCCCC\",\n+\"P. c #CDCDCD\",\n+\"I. c #CECECE\",\n+\"U. c #CFCFCF\",\n+\"Y. c #D0D0D0\",\n+\"T. c #D1D1D1\",\n+\"R. c #D2D2D2\",\n+\"E. c #D3D3D3\",\n+\"W. c #D4D4D4\",\n+\"Q. c #D5D5D5\",\n+\"!. c #D6D6D6\",\n+\"~. c #D7D7D7\",\n+\"^. c #D8D8D8\",\n+\"/. c #D9D9D9\",\n+\"(. c #DADADA\",\n+\"). c #DBDBDB\",\n+\"_. c gainsboro\",\n+\"`. c #DDDDDD\",\n+\"'. c #DEDEDE\",\n+\"]. c #DFDFDF\",\n+\"[. c #E0E0E0\",\n+\"{. c #E1E1E1\",\n+\"}. c #E2E2E2\",\n+\"|. c #E3E3E3\",\n+\" X c #E4E4E4\",\n+\".X c #E5E5E5\",\n+\"XX c #E6E6E6\",\n+\"oX c #E7E7E7\",\n+\"OX c #F1F1F1\",\n+/* pixels */\n+\"                                                                \",\n+\"                                                                \",\n+\"                      B x h s p p s j n H                       \",\n+\"                  z s r e j x M N z p q e f Z                   \",\n+\"                a t j T ;.t.c.v.u.j.0...Y p q h L               \",\n+\"            a y g [ f.H.E.W.).(.m.!.Q.W.V.4.U u u A             \",\n+\"          t t M 9.W.).R._./.(.].`.!.'.`.I./.F.$.f t Z           \",\n+\"          t c e.Y.I.n.(.{.{.Q._..XT.Q.U.m.U.J.c.-.k u F         \",\n+\"        w k >.L.Y..XQ.oX(.v.-.,.).L.J.L.r.&./ ~ _ [ a d         \",\n+\"      5 a *.H.Y.C.oXOX~.+.P K } !.^.c.[ R F M n v %./ e v       \",\n+\"      q P H. XB.l.oXV./ V %.{ [ [.W.[ n n E ;.s.Q &.k.M p       \",\n+\"    , p w.^.~.M.`.s.R R y.n.R ,.{.j.K R 4.Y.{.Q.| $.P.o.r v     \",\n+\"    4 N N.XXW.H.;.m Y M.).{ R F.Q.>.J 5.G.'.}.t.B >.{.j.k f     \",\n+\"    7 / R.!.P.:.l F 0.G.u.V 7.(.!.#.E &.a.K.q.N N y.}.F.F i     \",\n+\"    0 =.|.^.5.z U x.^.n.E ) P.{. XZ.R.!.j.) M L g.~._.A.! y     \",\n+\"    e 3.^.M.I F k./.[.*.L f._.[.[.(.~.q.H l I f.|.^.^.I.O.y     \",\n+\"    e 7.oXi.m { b.p.1.D A _ 9.)..X).2.B c ! Z.E.].'.T.A.o.u     \",\n+\"    0 4.R.7.A x J N b S H M *.(.!.2.S J 9.I..X/.).P.H.I.X.t     \",\n+\"    6 #.U.d.T K B C C c F W v./.=.F R f.oX/./.H.Q.(.U.R.[ r     \",\n+\"    < U U.R.6.;.<.) M @.M.H.).j.D  .x.M.i.=.( <./.'.(.S.F w     \",\n+\"    * l V.[.R.[. X&.N p.'./._.4.V _ J n B N Z p.(.!._.g.l 8     \",\n+\"    o 9 >.H.N.!.U.^ k 3.).[./.i.B b v V V m ' C./.E.Y.-.t       \",\n+\"      ; M h.M.J.I.] ] B._./.'.J.X.G E _  .2.C.{.!.).n.B 7       \",\n+\"      X 7 ` F.~.).D.m.l.C.^.'./.K.N.C.Z.K.W.'.~.H.N.' r         \",\n+\"        % u <.^.Q.oXY.g.b.I.Y.}.XX].^.{.{.`.Q.`.I.:.s 1         \",\n+\"          - d 4._._.J.P.K.S.Z.J.^.). X~.(.}.{.W.6.j 3           \",\n+\"            - p @.A.!./.G.Z.V.m.Z.Q.'..X(.'.P.*.g 2             \",\n+\"              & 9 C ;.B.`.Q.S.Z.K.`.).Q.v.7.K r >               \",\n+\"                o > e N +.8.a.h.c.z.r.+.B y 1 $                 \",\n+\"                    O = 2 0 p h h a w 4 : #                     \",\n+\"                          . + # # @ o                           \",\n+\"                                                                \"\n+};"
      },
      {
        "sha": "620df726378ac56a8d3fe70291a6a9af625fc34a",
        "filename": "share/pixmaps/4280.xpm",
        "status": "added",
        "additions": 329,
        "deletions": 0,
        "changes": 329,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31ee1d46e1a241cc6d5311d8ae0a91e8400da79d/share/pixmaps/4280.xpm",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31ee1d46e1a241cc6d5311d8ae0a91e8400da79d/share/pixmaps/4280.xpm",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/4280.xpm?ref=31ee1d46e1a241cc6d5311d8ae0a91e8400da79d",
        "patch": "@@ -0,0 +1,329 @@\n+/* XPM */\n+static char *cgd6b_gj3dd[] = {\n+/* columns rows colors chars-per-pixel */\n+\"80 80 243 2 \",\n+\"   c None\",\n+\".  c black\",\n+\"X  c #010101\",\n+\"o  c #020202\",\n+\"O  c gray1\",\n+\"+  c #040404\",\n+\"@  c gray2\",\n+\"#  c #060606\",\n+\"$  c #070707\",\n+\"%  c gray3\",\n+\"&  c #090909\",\n+\"*  c #0B0B0B\",\n+\"=  c #0C0C0C\",\n+\"-  c gray5\",\n+\";  c #0E0E0E\",\n+\":  c #111111\",\n+\">  c gray7\",\n+\",  c #131313\",\n+\"<  c gray8\",\n+\"1  c #161616\",\n+\"2  c gray9\",\n+\"3  c #181818\",\n+\"4  c #191919\",\n+\"5  c gray10\",\n+\"6  c #1B1B1B\",\n+\"7  c #1D1D1D\",\n+\"8  c #1E1E1E\",\n+\"9  c gray12\",\n+\"0  c #202020\",\n+\"q  c gray13\",\n+\"w  c #222222\",\n+\"e  c #232323\",\n+\"r  c #252525\",\n+\"t  c #272727\",\n+\"y  c #282828\",\n+\"u  c gray16\",\n+\"i  c #2A2A2A\",\n+\"p  c gray17\",\n+\"a  c #2C2C2C\",\n+\"s  c #2D2D2D\",\n+\"d  c gray18\",\n+\"f  c #2F2F2F\",\n+\"g  c gray19\",\n+\"h  c #313131\",\n+\"j  c #323232\",\n+\"k  c gray20\",\n+\"l  c #343434\",\n+\"z  c #353535\",\n+\"x  c gray21\",\n+\"c  c #373737\",\n+\"v  c gray22\",\n+\"b  c #393939\",\n+\"n  c #3A3A3A\",\n+\"m  c gray23\",\n+\"M  c #3C3C3C\",\n+\"N  c gray24\",\n+\"B  c #3E3E3E\",\n+\"V  c #3F3F3F\",\n+\"C  c gray25\",\n+\"Z  c #414141\",\n+\"A  c gray26\",\n+\"S  c #434343\",\n+\"D  c #444444\",\n+\"F  c gray27\",\n+\"G  c #464646\",\n+\"H  c gray28\",\n+\"J  c #484848\",\n+\"K  c #494949\",\n+\"L  c gray29\",\n+\"P  c #4B4B4B\",\n+\"I  c #4C4C4C\",\n+\"U  c gray30\",\n+\"Y  c #4E4E4E\",\n+\"T  c gray31\",\n+\"R  c #505050\",\n+\"E  c #515151\",\n+\"W  c gray32\",\n+\"Q  c #535353\",\n+\"!  c gray33\",\n+\"~  c #555555\",\n+\"^  c #565656\",\n+\"/  c gray34\",\n+\"(  c #585858\",\n+\")  c gray35\",\n+\"_  c #5A5A5A\",\n+\"`  c #5B5B5B\",\n+\"'  c gray36\",\n+\"]  c #5D5D5D\",\n+\"[  c gray37\",\n+\"{  c #5F5F5F\",\n+\"}  c #606060\",\n+\"|  c gray38\",\n+\" . c #626262\",\n+\".. c gray39\",\n+\"X. c #646464\",\n+\"o. c #656565\",\n+\"O. c gray40\",\n+\"+. c #676767\",\n+\"@. c #686868\",\n+\"#. c DimGray\",\n+\"$. c #6A6A6A\",\n+\"%. c gray42\",\n+\"&. c #6C6C6C\",\n+\"*. c #6D6D6D\",\n+\"=. c gray43\",\n+\"-. c #6F6F6F\",\n+\";. c gray44\",\n+\":. c #717171\",\n+\">. c #727272\",\n+\",. c gray45\",\n+\"<. c #747474\",\n+\"1. c gray46\",\n+\"2. c #767676\",\n+\"3. c #777777\",\n+\"4. c gray47\",\n+\"5. c #797979\",\n+\"6. c gray48\",\n+\"7. c #7B7B7B\",\n+\"8. c #7C7C7C\",\n+\"9. c gray49\",\n+\"0. c #7E7E7E\",\n+\"q. c gray50\",\n+\"w. c #808080\",\n+\"e. c #818181\",\n+\"r. c gray51\",\n+\"t. c #838383\",\n+\"y. c #848484\",\n+\"u. c gray52\",\n+\"i. c #868686\",\n+\"p. c gray53\",\n+\"a. c #888888\",\n+\"s. c #898989\",\n+\"d. c gray54\",\n+\"f. c #8B8B8B\",\n+\"g. c gray55\",\n+\"h. c #8D8D8D\",\n+\"j. c #8E8E8E\",\n+\"k. c gray56\",\n+\"l. c #909090\",\n+\"z. c gray57\",\n+\"x. c #929292\",\n+\"c. c #939393\",\n+\"v. c gray58\",\n+\"b. c #959595\",\n+\"n. c gray59\",\n+\"m. c #979797\",\n+\"M. c #989898\",\n+\"N. c gray60\",\n+\"B. c #9A9A9A\",\n+\"V. c #9B9B9B\",\n+\"C. c gray61\",\n+\"Z. c #9D9D9D\",\n+\"A. c gray62\",\n+\"S. c #9F9F9F\",\n+\"D. c #A0A0A0\",\n+\"F. c gray63\",\n+\"G. c #A2A2A2\",\n+\"H. c gray64\",\n+\"J. c #A4A4A4\",\n+\"K. c #A5A5A5\",\n+\"L. c gray65\",\n+\"P. c #A7A7A7\",\n+\"I. c gray66\",\n+\"U. c #A9A9A9\",\n+\"Y. c #AAAAAA\",\n+\"T. c gray67\",\n+\"R. c #ACACAC\",\n+\"E. c gray68\",\n+\"W. c #AEAEAE\",\n+\"Q. c #AFAFAF\",\n+\"!. c gray69\",\n+\"~. c #B1B1B1\",\n+\"^. c #B2B2B2\",\n+\"/. c gray70\",\n+\"(. c #B4B4B4\",\n+\"). c gray71\",\n+\"_. c #B6B6B6\",\n+\"`. c #B7B7B7\",\n+\"'. c gray72\",\n+\"]. c #B9B9B9\",\n+\"[. c gray73\",\n+\"{. c #BBBBBB\",\n+\"}. c #BCBCBC\",\n+\"|. c gray74\",\n+\" X c gray\",\n+\".X c gray75\",\n+\"XX c #C0C0C0\",\n+\"oX c #C1C1C1\",\n+\"OX c gray76\",\n+\"+X c #C3C3C3\",\n+\"@X c gray77\",\n+\"#X c #C5C5C5\",\n+\"$X c #C6C6C6\",\n+\"%X c gray78\",\n+\"&X c #C8C8C8\",\n+\"*X c gray79\",\n+\"=X c #CACACA\",\n+\"-X c #CBCBCB\",\n+\";X c gray80\",\n+\":X c #CDCDCD\",\n+\">X c #CECECE\",\n+\",X c gray81\",\n+\"<X c #D0D0D0\",\n+\"1X c gray82\",\n+\"2X c #D2D2D2\",\n+\"3X c LightGray\",\n+\"4X c gray83\",\n+\"5X c #D5D5D5\",\n+\"6X c gray84\",\n+\"7X c #D7D7D7\",\n+\"8X c #D8D8D8\",\n+\"9X c gray85\",\n+\"0X c #DADADA\",\n+\"qX c gray86\",\n+\"wX c gainsboro\",\n+\"eX c #DDDDDD\",\n+\"rX c gray87\",\n+\"tX c #DFDFDF\",\n+\"yX c gray88\",\n+\"uX c #E1E1E1\",\n+\"iX c #E2E2E2\",\n+\"pX c gray89\",\n+\"aX c #E4E4E4\",\n+\"sX c gray90\",\n+\"dX c #E6E6E6\",\n+\"fX c #E7E7E7\",\n+\"gX c gray91\",\n+\"hX c #E9E9E9\",\n+\"jX c #EAEAEA\",\n+\"kX c gray92\",\n+\"lX c #ECECEC\",\n+\"zX c gray93\",\n+\"xX c #EEEEEE\",\n+\"cX c #EFEFEF\",\n+\"vX c gray94\",\n+\"bX c #F1F1F1\",\n+\"nX c gray95\",\n+\"mX c #F3F3F3\",\n+\"MX c #F4F4F4\",\n+\"NX c gray96\",\n+\"BX c #F6F6F6\",\n+\"VX c #F8F8F8\",\n+\"CX c #F9F9F9\",\n+/* pixels */\n+\"                                                                                                                                                                \",\n+\"                                                                                                                                                                \",\n+\"                                                                                                                                                                \",\n+\"                                                                                                                                                                \",\n+\"                                                                        y.q.7.5.5.8.e.a.                                                                        \",\n+\"                                                              1.#.{ / E U L K J J K L U E / } &.9.z.                                                            \",\n+\"                                                        %.' E K F S S S S S S S S S S S S S S D J R { <.j.                                                      \",\n+\"                                                  =.] T H D S S S A Z C B M n n n n m M B C A S S S S G T ..w.                                                  \",\n+\"                                              #.( L D S S S Z B b c v l x A m N A V M n v x h k n V A S S S L ' 8.                                              \",\n+\"                                            / L D S S A B b l m H ] @.] +.,.<.1.8.1.=.%.+.o.Y k M c z b V S S S K [ y.                                          \",\n+\"                                        ` I D S S A M n S Y U O.d.l.A.Y.P.K.P.`.[.I.z.V.c.j.d.;. .| ! V k x B A S S U $.                                        \",\n+\"                                      E H S S A N b L { 1.y.N.K.!.L.oX@X@X5X=X<XOXF.(.2X|.OXE.f.i.0.a.-.( A g x V S S F ) y.                                    \",\n+\"                                  ~ I D S S V n J O.7.p.H.E.,X6X5X|._.@XuXlXXX'.D.q.3XxX,X:X<X~.-XU.E.D.i.-.Y C z v Z S S T 2.                                  \",\n+\"                                R J D S A N V [ w.j.E.2X0X<X-X$XdXkX&X$XlXjX6X<XE.V.1XjX;X#XjX-XrXeX].$X/.A.>.%.] m j B S S L &.                                \",\n+\"                              I H S S Z M ~ q.D.{.+XiXwX:X,XtX;X+XkXuX#XdXkXrXbXaX].+X0X9X3XcX1XqXbX1X%X=X`.H.A.e.*.I z n A S J +.                              \",\n+\"                            J G S S C A  .t./.,XpXzXaX%X:X<XMXeX;X5X9X5X2XtXqXdXcX8X0XjX*XXXdXeX7XnXlX;X2X8X8X<XL.b.9.) z v A S H O.                            \",\n+\"                          D F S S C D 1.G.'.qXuXlXgX|.sXOX1XdX<XtX8X5XeX4XuX7X3X0X<XlXuX+XwXbXfX9XpX<X}.-XzXhXgX6X~.Z.5.' v x A S H #.                          \",\n+\"                        M F S S C H *.K.].wX*X'.2X8X<XyX(.lX9XrXeXiX8XtX3XzXyX9X0XiXkX6X X9XnXzX*XoX].{.@XeX3XdX5XqX!.n.y.| B x A S K -.                        \",\n+\"                        S S S Z A %.F.|.7X6XQ.uXwX4XOXU.eXnX0X0XlXfXtX2X#XrX2XsXgX9X8X6X|.,XiXgX%X+X@X X[.7X1XpX&X.X/.I.P.2.[ V c A S I 4.                      \",\n+\"                      C D S A C X.d.XX-XgX&X+XrX).z.c.[.cXxXeXqXjXyXrX=XwX8XrXkXbXlXaX5X=X[.oXsX4X{.oX(.).-XqX;X`.&X$XaX1XI.x.$.B b S S Q u.                    \",\n+\"                    v S S A C X.d.K.OX<X6X_.3XMXuX!.J.fXdXxXsXeXaXqX7X&X*XS.P.2XfXcXzXOX<X+X%XzXtX.X.X.X_.`.].M.r.p.g.l.c.g.j.w.} n M S D {                     \",\n+\"                    Z S S Z ( h.T.].#X1X=XY.0XmXMXnXyXgX8X6XtXqXyXqXF.,.o.) ^ d.>XkXpX].<X:X+X*XsX;X].U.1.) { { ! T W ) [ ! 5.G.8./ c C S K ;.                  \",\n+\"                  n S S Z T p.P.+X=X5XqXL.@XtXVXMXNXgX8XwX5XuX7X+Xe.X.3._ ] K s.qX;XXX[.$XXXOX+X$XK.d.e.[ @.0.@.! J E ^ ) U ! k.A.*.F z A S Q                   \",\n+\"                p Z S A A o.J.7XpX<X%X`.}.6XtXcXNXxXsX9XyX6XgXoXz.:.w.0.<.+. .}.<X0X1XiXwXqX:XJ.>.O.3.1.=.@.X.:.) | *.] W ~ o.p.V.7.] h M S G O.                \",\n+\"                n S S Z %.J.XX2XfXsX<X/. XXXJ.hXbXdXhXyX6X].0.^ K U R T @.` ' G.4XbXmXjX XeX'.) J ~ [ ` | W } ^ T W U E U ( ) ;.oXI.a.( l Z S R                 \",\n+\"              t Z S A T Z.,X9X8X2XtXgXE..Xh./.sXxXvXvXwXY.&./ [ ` +. .,.i. .{ v.cXpX3XyXdXR.+.] X.+.O.` Q { +.A [ *.;.,._ ^ ( >.>X|.R.,.C m S G X.              \",\n+\"              x S S Z } Q.yXrXiX=X=X=XW.A.T.iXMXmXlX X2. .( W ..( 3.(.*X*.J T f.vXfX*XyXdX>.H T G H S D ~ }  .%.Q..XuXfXI.E Y X.oX8XoXf...c Z S W               \",\n+\"              B S A P k.XX*XsXeXXX+X#XI.F.dXMXCXkXC.R o.' ' ( -.n.,XbX).@.| 3.Q.zXvXdX2X'.<.>.0.#.*.....#.v.&X7XsXgXpXdX2X+.R } .XaX XY.4.S N S J #.            \",\n+\"            a A S Z -.+XwX>XjXiX&X>X*XC.wXVXNXpXB.7. .E [ W ] V.<XrXoX( I U ~ B.aXxX9X$X1.! &.! _ ..O.x.,XpXjXwXgX8XOX:X).T ..| _.XX[.W.g.) v A D )             \",\n+\"            c S S G n.5XhXpXgX7X1X9XH.@XbXVX|.1.{ } 0.,.6.k.,XhXqX1Xt.*.:.3.B.dXaX2X0X7Xs.` ] / ( %.k.$XsX6XkX8XkX4X6X>XV.| >.#.#XwXhX=XD.&.x C S U             \",\n+\"            N S A ! G.wXjXxXbX6X%X!.^.xXMX%X%.R  .{ R X.C.,XlXgXjXC.E Y R y.:X6X=XqXfX|.| } >.t.{.sXwX0XeX0XaX5XzX0XlXG.L I Y T #XuXlX8XoXt.F M S H X.          \",\n+\"          r Z S A <.`..X,XcXzXdX=X|.<XnXJ.[ _ ^ } ~ U k.hXeXhX3XP.( #.*.( D.iX6X@X0XaXu.Y ] +.6._.:X:X2XpXaXqX:XvXwX|.%.X.] &.,.4XyXpX.X%XP.@.m A D )           \",\n+\"          d S S G d.}.&X2XiX1XtXsXdXjXa.D C Z H ^ ^ m.OX6X5XkXiXv.E P ! 3.}.zX<X#X;X0X=./ } | @.X.;.-.W.4XqX1XrXbX$X;.R ( R ] w.3XyXzXeX0X`.9.B Z S E           \",\n+\"          z S S I V.7X9X@XuX=X*X;X1X/.{ H F A L =.j.Q.^./.>XkXE.o.} T &.%X$XsXjX%X>X4X3.O.*.X.o.,.>.=.Z. X:XhXhX_.2.W C Z F Y m.@XtXcXcXaX[.3.N V S P           \",\n+\"          n S A [ }.:XtXhXeXXX+XqXE.#.4.4.&.R ^ d.L.!.].`.=X3XX.A ( Y l.,XQ.3XvXkXeX>X7.I Q } 7.L.Q.E.>X2X{.).7.` U Z G J =.M.^..XrXyX2X;XP.d.! N S J {         \",\n+\"        1 N S A #.`.tXbXbXuX$X4X}.O.R O.~ T O.K.].[..XXX|.+Xb.-.o.X.<.:X8X%X:XjXbXaX%X=XS. XrXzXbX&X8X&X2X'.7.` O.+.{ <.-.l.+X|.XXyXfX}.XX*Xc.X.M S G _         \",\n+\"        6 V S S 1.<XkXqXlX<X%X3X9.D G G C Q W.=XyXxXzXcXzXY.) @.' ' s.`.uXnX9XqXbXxX3X-XrXmXsXyXgX}.0X`.e._ T E / ' R ! B.pXcXxXlXcXrX<X8X~.f.` B S F ~         \",\n+\"        9 C S D r.,XfX;XfX-X7X.XU F G T / N.@X.XtXgXiXdX].t.` ( o.;.[.;XgXbXgX5XvXxX@XXX9XlX7X9XtX%X|.@.C Z U Y U  .&.G.pXtXlX-X8XcX,X@XwX;XC.;.C A D W         \",\n+\"        q Z S F n.%X,XuXiX+X=Xa.` o.` | n.$X4XqXcXkXtX0X-.! ) ' :.R.cX7X2XlXvXaXhXcX5X,XaX;X9XlX@Xd.~ H R W ..#._ 3.Y.fXnXrXfX].$XxX5X<X=XtX'.>.B A D T         \",\n+\"        e Z S H B.%X:X:X+X[.V.` Y G A 1.pX3X.X+XuXgXtX%X@.-.7.:.q.@XgX0X9X:XdX;X[.vXkXsXuX*X3X+X0.T X.=.O.` _ ( ` F.`.9XsXuXfX:X1XkX;X<X%X6X(.q.S A S Y         \",\n+\"        w Z S H w.%XcXaX1X5X-.C U ..o.#XMX8X*X*X}.iX:Xw.=.1.>.{ r.Q.~.N.:XsXtXoX}.bXbX2X XlX+X=.#.~ _ ( A Z F y.>X&X=X X=XaXsXkXjXfX+X:X&X#XC.&.D A S I         \",\n+\"        0 Z S H z.wXcXvXnX3X:.#.' O.+.|.0X&X{.|.].E.3.K P L K G U I ' >.0.8XmXrXaXvXvXgXwX[.@.H Q G H F Z U j.dXxX,X9XyXkXgXuXiXkXpX%X,X;X`.~.u.F A S P         \",\n+\"        7 C S G x.uXsX0XbX).+.9.U Z D @.$.O.;.( E ) { [ / ] ! ^ } ^ P R { -XcXeXpXcXbXfXE.o. .' %. .+.{ e.W.%XbXhX8X0X7X5XjX4XXX-X*X+XOX+X'.F.<.A A D L         \",\n+\"        4 V S F 6.8XqXW.4X~.` [ #.T Z J | ..] K F R ` ( +.O.-.X.;.) X.X.2.rX8X5XtXwXfXJ.{ +.#.U ( I ( c.8XqX#XbXiXqX1X,X4XjX*X&XoXOX*X;X<X%XQ.<.Z A D K         \",\n+\"        , M S S 9.qXqXL._.*X/ | ( { K Z O.%._ #.~ R ] E @.>.5.-.O.) ..<.L.sX;X;XwX>XZ.1.:.;.X.' o.0./.yXyX9X@XvXjX0XqXpX0XjX1X2X2XqX=X$XpXuX(.{ V S D H         \",\n+\"        = v S S =.:XjX#X|.8Xu.-.>.3.,.} o.] ] /  .} E Z L W ^ E L H J +.;X9X9XiXjXz.) ^ ) Y C H w.qXvXpXtX9X&XvXvX,X9XwX=X<X7X7X<X1X{.2XjXqX).X.V S D S         \",\n+\"        @ k S A [ XX8X3X+X[.Y.*.} <.;.X.` @. .[  .@.-.~ H A Q ! &.+.,.Y.wXyXwXbX[.( #.[ -.:.' a.).8XnXpXtX7X%XbXyX1X>X2XOX3XzXlX9X+X/.7XrX$X_.O.C S D N         \",\n+\"          i S S T !.tX$X|.-X].#.W ..:.+.K P I K ..$.I ) *.~ ;.0.h.h.H.@XwXzX<X!.{ I E :.>.-.(.).1XOXzXsXiXwX&X2X|.(.z.`.pX8X8X:X3XuXxXsX#XT.m.W Z S D           \",\n+\"          9 Z S J f.:XrX=XxXOXM.;.' *.-.@.-.:.,.' #.I L @.`.1X3XgXeXoX&XjXzX#X6.! ~ / O.=.U.aX&XhX8X1X7X_.J.l.1.] T ..G.uX0XyXsXpXrX5XgXqX(.8.H A S Z           \",\n+\"          , M S D <.5XhX&XvXyX=X,X3X).&X3XfX3XF.+.] [ %.a.:X;X#X3XlX1XXXjXjX$Xq.5.$.&.j.;X3XpX|.[.L.=.;.T G ^ _ ( W 6.8X6X;XjXfX0X=X#X-X8X.X;.Z S S M           \",\n+\"          # k S S ' XXhX&XlXbX>X>X4X-XfXwXpXnXf.L I K K v.dXkXqX$XdXgX2XeXzXU.E X.R } R.F.7.o.} ) W ) ( Q ( *.+. .^ r.zXuX+X5X4XtXgXhX@X-X'.+.C S S k           \",\n+\"            r A S L H.jX,XgXxXqX%XuXcXcXlX5XiXt.X.] #.{ G.bXzX2X3X1X:X5X<X0X~.J ` O...&.#.J V A A R ....^ ..} W ] X.R.iX4XhX4X;XuXnXtX=X.Xl.U A S C             \",\n+\"            < M S S 5.uXyX4X$X'.`.9XyXjXkXgX;X;.} ] #.8.M.4XwXqXtXqX9XpX7XxXOXU ~ { R } ] L A A Z C Y O.W ^ [ ` +.2.OX9XtX3X4X-X|.pX4X8X}.8.S S S b             \",\n+\"            @ g S S Q .X8X}.#X X.X=X4XeX6XrX$X<.J C G R 7._.*XwXpXhXqX8X=XfX&X` L Y L E ] _ @.[ ..) o...W T ~ ` *.M.$X_.0XqXwX1XW.oX4X;X).{ Z S Z a             \",\n+\"              7 V S D u.8XoXOX}.`.{.qX6X;X{.T.X.D C T ' ;.=X1XwXxXpXyX:X;X8X<Xh.-.,.=.Q R R ' X.7.>.1.~ P ( X.X.g.(.|.9XtX{.tXcX9X-X3X%Xb.H S S M               \",\n+\"              & l S S Q '.#X}.|.)._.5X3X[.$X}.;.^ } } O.N.aX<XqXaXeXqX-XpXqXaX`.( { ' P I ^ U ! ] S H @.:.*.=.p.(.3X6XbXzXrXtXfXbX6X&XE.X.Z S A d               \",\n+\"              . 8 C S D 4.#X[.#X X].oX%X1XuX3X$.( | e.XXyXlX0X5X4XwX1X5XgXjX-X-Xu.2.5.'  .;.;.7.=.*.=.i.s.b.^.;X6XlXvXzX9X[.[.4X9XrX'.y.F S S m                 \",\n+\"                % j S S U N.$X X+XXX4X5XjXaX}.:./ j.>X|.!.qXjXeX-XqX<XqXkXlX$X:X*XC.w.;.1.q.D.G.(.oX'.+XXX;X8XeXxX,X0XyX9X4X7XrX6X:XE.! A S Z p                 \",\n+\"                . 4 N S S [ _.,X7X^.uXzXzXrX3X<X5XhX+XL.E. X`.3XeX8XyX7XhXgX4X*X0X=X].=X1X$X XXX].OX;X0X X*XxXlXhX1XuX7XqX,X@X X.XA.,.S S S c                   \",\n+\"                  O i A S F 3.9X5X/.aXiX XsXeXrXgX>XB.E.).J.B.A.;XjX6X-X8XfXkX8X%XjXkXjX>XsXaX0X|.].iXsX`.:XxX@X6XaX8X}.'.(.(.'.T.9.H S S B q                   \",\n+\"                    - z S S L s.<XiXaX;X&X1X>XpXgXjX+X.XW.G.S.K.rX6X$X3X4X9X0X8XsXzXjXhX;X*X>XbXlXsXOX<X0XjX6X@X5X#XuX3X2X$X&X#XD.~ A S Z s                     \",\n+\"                    . 4 M S S Y G.pX3X9X9X<X>XnXbXcX<X=X~.H.C.5X0X$X%X&X0XyXgXcXnXtX+XqXxX<X>XeXcXxXgXzXxX0X5X0XqX.XkXjX4X0X+XI.` A S S z                       \",\n+\"                      o w V S S Q D.wXpX8XsX4XBXBXOX_.8X|.P.#XiX#X:X+X$XOX,XpXkXcXvX0XyXuXhX3XXXyXgXbXvXeXqXpXrXuXeXzXvXaX=XD.[ S S S n 3                       \",\n+\"                        @ u Z S S ! K.pX7XcX5X-XiXU._.tX.X5X0X&X4X:X XOX{.#X%X%X5XeXxX>X-XhXgXhX*X^.wXtXwXjXsXeXdXiX,X,X:XE.o.S S S M 9                         \",\n+\"                          % a Z S S W B.4XkXtXwX<X8X-X3X1XaX@X+X%X{.#X&X X&X X}.%X:XqXuX6XkXvXvXpX X#X;XgXtXlX0XhX2XXXoX^. .S S S N w                           \",\n+\"                          . & s Z S S I s.2XqXzX>X4X7XyXrX@X+X%X{..X@X$X@X`._..X$X.X2X2XqX5XzXbXvXxX,X2XuX5XfX7XjX2X2XC.( S S S N w                             \",\n+\"                            . & i C S S H &.'.wX%X6XfX>X5XgX#XXX[.%X#X@XoXXX+X|.#X$X+X;XyX0X5XeXkXbXiX0XtXwXuX,XsX Xu.T S S S m 0                               \",\n+\"                              . # r B S S D / f.'.|.qXeX9X9XiX7XOX&X-X+X).oX|.[..X).*X4XfXiX%XXXgXiXeX3XqXaX,X}.R.+.F S S A c 5                                 \",\n+\"                                  O 7 b A S S H ..d.^.].@X9XwX9XuX7X$XXX|. X$X X{.+XpX8XuX1XuX*X0X2X X}.%X%XJ.2.Y S S S C h >                                   \",\n+\"                                    . : f C S S S L o.d.R.3XcXgX;XaXuX&X{.$X$X*X*XyX2XwX0XfX0X7X5X8X).T.x.2.E S S S S m r &                                     \",\n+\"                                      . $ 0 v A S S S J _ 0.!.9XpX9X:XeX6X+XoX+XrX>X>XaXfX5XyXfX3XR.0.X.I S S S S V g 1                                         \",\n+\"                                          X ; t n A S S S S L _ 1.v.B.H.=X6XXX&X6X&X>X2X).Q.S.e.X.T F S S S S C l 8 $                                           \",\n+\"                                            . o : t v Z S S S A S D L R ( ..@.&.%.%.X.' Q I F S A S S S A B j 8 &                                               \",\n+\"                                                . X = 9 g M Z S S S S S A A A A A A A A S S S S S A V v i 3 #                                                   \",\n+\"                                                    . . @ : 9 s x M C A S S S S S S S S A Z V n j y 5 * X                                                       \",\n+\"                                                          . . o & > 5 w y a f g h g d i r 9 2 ; # X                                                             \",\n+\"                                                                  . . . . X O + + O o X . .                                                                     \",\n+\"                                                                                                                                                                \",\n+\"                                                                                                                                                                \",\n+\"                                                                                                                                                                \"\n+};"
      },
      {
        "sha": "ee62b47e7e7ec146ecc0fd773c487b6f960e507c",
        "filename": "share/pixmaps/novacoin.ico",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6d1600c57ada74aae9d6e46f6f86f052404fdb9e/share/pixmaps/novacoin.ico",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6d1600c57ada74aae9d6e46f6f86f052404fdb9e/share/pixmaps/novacoin.ico",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/novacoin.ico?ref=6d1600c57ada74aae9d6e46f6f86f052404fdb9e"
      },
      {
        "sha": "691fc9df031f10da2c84bdd839ccbb68e483fa54",
        "filename": "share/pixmaps/novacoin32.xpm",
        "status": "removed",
        "additions": 0,
        "deletions": 210,
        "changes": 210,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6d1600c57ada74aae9d6e46f6f86f052404fdb9e/share/pixmaps/novacoin32.xpm",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6d1600c57ada74aae9d6e46f6f86f052404fdb9e/share/pixmaps/novacoin32.xpm",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/novacoin32.xpm?ref=6d1600c57ada74aae9d6e46f6f86f052404fdb9e",
        "patch": "@@ -1,210 +0,0 @@\n-/* XPM */\n-static char *novacoin_32[] = {\n-/* columns rows colors chars-per-pixel */\n-\"32 32 172 2 \",\n-\"   c #6B3F0A\",\n-\".  c #6E430E\",\n-\"X  c #704103\",\n-\"o  c #74430B\",\n-\"O  c #7A4F0F\",\n-\"+  c #7F5004\",\n-\"@  c #774C12\",\n-\"#  c #7A5016\",\n-\"$  c #744B22\",\n-\"%  c #7C4F21\",\n-\"&  c #7F5223\",\n-\"*  c #7C5A33\",\n-\"=  c #874D0F\",\n-\"-  c #884E0F\",\n-\";  c #835006\",\n-\":  c #875805\",\n-\">  c #8D5D07\",\n-\",  c #805610\",\n-\"<  c #815817\",\n-\"1  c #925911\",\n-\"2  c #9A5B15\",\n-\"3  c #98660E\",\n-\"4  c #9E6B0E\",\n-\"5  c #936519\",\n-\"6  c #A0631B\",\n-\"7  c #B26B1B\",\n-\"8  c #AC7616\",\n-\"9  c #B57D1D\",\n-\"0  c #885F23\",\n-\"q  c #825928\",\n-\"w  c #8D652F\",\n-\"e  c #926028\",\n-\"r  c #886538\",\n-\"t  c #8C6532\",\n-\"y  c #966C33\",\n-\"u  c #946D38\",\n-\"i  c #99733E\",\n-\"p  c #9E783F\",\n-\"a  c #9D7136\",\n-\"s  c #AA7327\",\n-\"d  c #BB7727\",\n-\"f  c #B07C22\",\n-\"g  c #A07334\",\n-\"h  c #AD7630\",\n-\"j  c #AD7B36\",\n-\"k  c #A37738\",\n-\"l  c #A2793D\",\n-\"z  c #AE7E3A\",\n-\"x  c #B47E3A\",\n-\"c  c #987540\",\n-\"v  c #9D7943\",\n-\"b  c #9C7B4E\",\n-\"n  c #9C7E55\",\n-\"m  c #AF7E41\",\n-\"M  c #BD861E\",\n-\"N  c #B68429\",\n-\"B  c #BB862A\",\n-\"V  c #AD8038\",\n-\"C  c #B38139\",\n-\"Z  c #C88F27\",\n-\"A  c #C88229\",\n-\"S  c #C98C28\",\n-\"D  c #C3822A\",\n-\"F  c #D1952C\",\n-\"G  c #C18736\",\n-\"H  c #C78837\",\n-\"J  c #D7993C\",\n-\"K  c #E49E38\",\n-\"L  c #E6A637\",\n-\"P  c #EAA936\",\n-\"I  c #EFA63C\",\n-\"U  c #A58245\",\n-\"Y  c #A98243\",\n-\"T  c #A3804F\",\n-\"R  c #B98846\",\n-\"E  c #B68E4B\",\n-\"W  c #BC8A4A\",\n-\"Q  c #BF974F\",\n-\"!  c #BE9757\",\n-\"~  c #BF9B53\",\n-\"^  c #BD9A5E\",\n-\"/  c #CC9A44\",\n-\"(  c #C0974C\",\n-\")  c #C59447\",\n-\"_  c #D39B45\",\n-\"`  c #C79C51\",\n-\"'  c #CB9D52\",\n-\"]  c #D5A248\",\n-\"[  c #DBA64B\",\n-\"{  c #DCA94D\",\n-\"}  c #DAA144\",\n-\"|  c #CFA754\",\n-\" . c #CCA458\",\n-\".. c #D4AA5B\",\n-\"X. c #DFAC52\",\n-\"o. c #DAB258\",\n-\"O. c #E0A74B\",\n-\"+. c #E7AF4C\",\n-\"@. c #EDB64C\",\n-\"#. c #F0B049\",\n-\"$. c #F6BA49\",\n-\"%. c #F7B848\",\n-\"&. c #E0AD53\",\n-\"*. c #E6B356\",\n-\"=. c #E5B45A\",\n-\"-. c #E8B75B\",\n-\";. c #E6BA5B\",\n-\":. c #EBBA5D\",\n-\">. c #EAB453\",\n-\",. c #F4BF59\",\n-\"<. c #C49F60\",\n-\"1. c #CAA562\",\n-\"2. c #D5A663\",\n-\"3. c #DDB76F\",\n-\"4. c #DEB96F\",\n-\"5. c #E1B761\",\n-\"6. c #E1B863\",\n-\"7. c #EBBC63\",\n-\"8. c #E2BA6F\",\n-\"9. c #F0BF62\",\n-\"0. c #E1BD7D\",\n-\"q. c #FBC355\",\n-\"w. c #FBC75B\",\n-\"e. c #E5C161\",\n-\"r. c #EFC765\",\n-\"t. c #EFC669\",\n-\"y. c #EACA68\",\n-\"u. c #F6CD67\",\n-\"i. c #FCCE62\",\n-\"p. c #FACD68\",\n-\"a. c #F3C567\",\n-\"s. c #FCD267\",\n-\"d. c #F7D26B\",\n-\"f. c #FED169\",\n-\"g. c #FED86E\",\n-\"h. c #EBC171\",\n-\"j. c #ECC77D\",\n-\"k. c #F3CB71\",\n-\"l. c #FCCF75\",\n-\"z. c #F3CC78\",\n-\"x. c #EED173\",\n-\"c. c #F5D572\",\n-\"v. c #F7D876\",\n-\"b. c #FCDB74\",\n-\"n. c #F5D17C\",\n-\"m. c #FAD57A\",\n-\"M. c #FCDE7B\",\n-\"N. c #F7E37E\",\n-\"B. c #FBE17E\",\n-\"V. c #F5D485\",\n-\"C. c #FAD885\",\n-\"Z. c #FBDC95\",\n-\"A. c #F7D998\",\n-\"S. c #FDE584\",\n-\"D. c #FFE987\",\n-\"F. c #FDE28A\",\n-\"G. c #FFEB8A\",\n-\"H. c #FCE294\",\n-\"J. c #FEED97\",\n-\"K. c #FDEE9B\",\n-\"L. c #FFF591\",\n-\"P. c #FDF19D\",\n-\"I. c #FAE4A4\",\n-\"U. c #FEF4A3\",\n-\"Y. c #F8E5B5\",\n-\"T. c #FCECB0\",\n-\"R. c #F9E4B8\",\n-\"E. c #FDF6B2\",\n-\"W. c #FFF0B8\",\n-\"Q. c #F6E8C7\",\n-\"!. c #FFF2CC\",\n-\"~. c None\",\n-/* pixels */\n-\"~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.] ] ] ] ] ] ] ~.~.~.~.~.~.\",\n-\"~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.] ] { ;.r.u.s.s.s.s.c.r.>.{ ] ~.~.\",\n-\"~.~.~.~.~.~.~.~.~.~.~.~.~.~.] e.N.P.U.G.F.B.v.d.s.B.D.W.!.V.{ ~.\",\n-\"~.~.~.~.~.~.~.~.~.~.~.~.~.{ y.L.U.K.E.K.S.x.M.G.v.B.B.s.f.J.M./ \",\n-\"~.~.~.~.~.~.~.~.~.~.~.~.~.&.m.U.P.U.K.H.J.S.S.S.D.d.s.g.b.w.w.z \",\n-\"~.~.~.~.~.~.~.~.~.~.~.~.~.&.q.Z.T.K.G.G.N.x.c.M.v.B.d.m.l.@.F j \",\n-\"~.~.~.~.~.~.~.~.~.~.~.~.~.&.q.p.C.Y.Q.R.A.A.H.z.6.4.1.Q N M Z z \",\n-\"~.~.~.~.~.~.~.~.~.~.~.~.~.&.>.a.n.H.C.f.$.P F M 3 : > 4 8 f j C \",\n-\"~.~.~.~.~.~.~.~.~.~.~.~.~.&.a.7.7.j.V.7.+.L F 9 5 O < e w k ] j \",\n-\"~.~.~.~.~.~.~.~.~.~.~.~.~.&.q.Z.I.Z.y.6... .~ E Y v Y  .x.@.F j \",\n-\"~.~.~.~.~.~.~.~.~.~.~.~.~.O.$.p.C.Y.Q.Y.A.A.Z.z.6.4.1.~ N M Z z \",\n-\"~.~.~.~.~.~.] ] ] ] ] ] ] K K I #.:.:.>.#.P F 9 3 : > 4 8 f h C \",\n-\"~.~.] ] { ;.y.u.s.s.s.s.d.t.-.{ } [ _ H d D A 9 5 O # w w p ] j \",\n-\"~.] e.N.P.U.G.S.B.v.d.d.M.G.T.!.V.{ J G h e & p Y v Y ` h.@.F j \",\n-\"[ y.L.U.J.E.K.S.c.M.G.v.S.M.s.s.K.B.) 2.( ) W ' e.4.1.Q N M Z V \",\n-\"&.C.U.P.P.K.H.J.S.S.G.S.c.s.g.b.w.q.j _ A 7 2 1 3 : > 4 8 9 j C \",\n-\"&.q.Z.T.K.G.S.S.v.c.b.v.M.d.m.z.@.F C V.{ D 2 1 5 # # e w a / V \",\n-\"&.q.s.C.R.Q.R.A.Z.H.z.6.4.1.Q N M Z j K.M./ % $ p v m <.h.@.F V \",\n-\"&.*.7.n.H.C.p.$.P F 9 3 : > 4 8 9 j ) w.w.z ) C x 3. .~ N M Z j \",\n-\"~.*.-.-.j.V.7.+.L F 9 5 , < 0 w l 1.l.@.F x 2 - o ; > 4 8 M k C \",\n-\"~.~.~.*.,.9.5...E Y c b b v m 1.1.Q N M Z j { s . O # e w k / j \",\n-\"~.~.~.&.*.9.z.H.C.p.%.P F 9 3 ; > 3 8 N s Q B./ % r V ^ 8.@.F j \",\n-\"~.~.~.~.*.-.7.j.V.7.+.L F 9 5 , < e w i | i.w.j V R ! ~ N M Z V \",\n-\"~.~.~.~.~.+.,.h.j.0. .E Y c c v U ~ o.v.c.@.F j o X ; 3 8 f h C \",\n-\"~.~.~.~.] X.q.s.C.Y.Q.Y.A.A.Z.z.6.4.1.Q N M Z j o . @ e w a / j \",\n-\"~.~.~.[ y.7.*.9.z.H.F.d.%.P F 9 3 : > 4 8 f h g $ & y ! 4.@.F j \",\n-\"~.~.~.&.C.K.n.7.7.j.V.7.+.L F 9 5 # < 0 w y m x j R E Q N M Z V \",\n-\"~.~.~.&.q.Z.T.K.M.z.t.6.' E Y c u T T V B z 2 = o X ; 4 8 9 k j \",\n-\"~.~.~.&.q.s.C.Y.Q.R.A.A.H.t.4.4.1.~ N M Z j 2 = . . @ 0 w y a ~.\",\n-\"~.~.~.&.*.7.n.H.C.p.$.P F M 3 > > 4 8 f j z U i r * * r ~.~.~.~.\",\n-\"~.~.~.~.*.-.7.j.j.7.+.L F 9 5 O # e w y g ~.~.~.~.~.~.~.~.~.~.~.\",\n-\"~.~.~.~.~.~.~.,.-...` E U i r * * * ~.~.~.~.~.~.~.~.~.~.~.~.~.~.\"\n-};"
      },
      {
        "sha": "3c96b69c00eb0c2383c9a4fc154c875de106557a",
        "filename": "share/pixmaps/novacoin80.xpm",
        "status": "removed",
        "additions": 0,
        "deletions": 339,
        "changes": 339,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6d1600c57ada74aae9d6e46f6f86f052404fdb9e/share/pixmaps/novacoin80.xpm",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6d1600c57ada74aae9d6e46f6f86f052404fdb9e/share/pixmaps/novacoin80.xpm",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/novacoin80.xpm?ref=6d1600c57ada74aae9d6e46f6f86f052404fdb9e",
        "patch": "@@ -1,339 +0,0 @@\n-/* XPM */\n-static char *novacoin_80[] = {\n-/* columns rows colors chars-per-pixel */\n-\"80 80 253 2 \",\n-\"   c #7A4B09\",\n-\".  c #794C19\",\n-\"X  c #7D5418\",\n-\"o  c #784D0F\",\n-\"O  c #7B5628\",\n-\"+  c #7C5A32\",\n-\"@  c #6A4A26\",\n-\"#  c #84550A\",\n-\"$  c #8C5C0A\",\n-\"%  c #875807\",\n-\"&  c #845413\",\n-\"*  c #8A5513\",\n-\"=  c #8D5C15\",\n-\"-  c #87591D\",\n-\";  c #945B16\",\n-\":  c #90570F\",\n-\">  c #9D6A15\",\n-\",  c #94651B\",\n-\"<  c #9B6C1C\",\n-\"1  c #976618\",\n-\"2  c #916314\",\n-\"3  c #A16E16\",\n-\"4  c #A46919\",\n-\"5  c #A6711C\",\n-\"6  c #AE781C\",\n-\"7  c #AA751C\",\n-\"8  c #B47C1A\",\n-\"9  c #865B25\",\n-\"0  c #8B5E2A\",\n-\"q  c #8A632A\",\n-\"w  c #9C6523\",\n-\"e  c #9C6C23\",\n-\"r  c #976927\",\n-\"t  c #9E7229\",\n-\"y  c #8B6532\",\n-\"u  c #886537\",\n-\"i  c #936B33\",\n-\"p  c #986E34\",\n-\"a  c #9C7337\",\n-\"s  c #A46B23\",\n-\"d  c #AA6D24\",\n-\"f  c #A26824\",\n-\"g  c #A57424\",\n-\"h  c #AA7623\",\n-\"j  c #AC7B25\",\n-\"k  c #A2732C\",\n-\"l  c #A67A2C\",\n-\"z  c #AC7C2A\",\n-\"x  c #AA7529\",\n-\"c  c #B47222\",\n-\"v  c #B17E25\",\n-\"b  c #B77A2A\",\n-\"n  c #A37533\",\n-\"m  c #AB7D32\",\n-\"M  c #A77A36\",\n-\"N  c #B57D35\",\n-\"B  c #B06F23\",\n-\"V  c #C37D27\",\n-\"C  c #997745\",\n-\"Z  c #A47C40\",\n-\"A  c #B8811D\",\n-\"S  c #AF812E\",\n-\"D  c #B58125\",\n-\"F  c #BA8425\",\n-\"G  c #B4832C\",\n-\"H  c #BB852B\",\n-\"J  c #BC882D\",\n-\"K  c #BE8827\",\n-\"L  c #AD8133\",\n-\"P  c #AC823C\",\n-\"I  c #B38433\",\n-\"U  c #BA8634\",\n-\"Y  c #BD8B34\",\n-\"T  c #BC8639\",\n-\"R  c #BD8A3C\",\n-\"E  c #B58639\",\n-\"W  c #C58D2D\",\n-\"Q  c #C7872B\",\n-\"!  c #CC912C\",\n-\"~  c #D2962A\",\n-\"^  c #D99B2B\",\n-\"/  c #C38D33\",\n-\"(  c #C38D3C\",\n-\")  c #C78835\",\n-\"_  c #C49136\",\n-\"`  c #CA9436\",\n-\"'  c #C5923B\",\n-\"]  c #CB963A\",\n-\"[  c #CD993C\",\n-\"{  c #CE9837\",\n-\"}  c #D29C3B\",\n-\"|  c #D59839\",\n-\" . c #D28B2F\",\n-\".. c #DCA23B\",\n-\"X. c #E3A43A\",\n-\"o. c #E7A939\",\n-\"O. c #F1AF36\",\n-\"+. c #E29F3D\",\n-\"@. c #AB8545\",\n-\"#. c #B78A46\",\n-\"$. c #BB924A\",\n-\"%. c #BE9150\",\n-\"&. c #C38C47\",\n-\"*. c #C49343\",\n-\"=. c #CA9543\",\n-\"-. c #CD9B44\",\n-\";. c #C7984B\",\n-\":. c #D29D42\",\n-\">. c #D59D48\",\n-\",. c #C79B55\",\n-\"<. c #D29B52\",\n-\"1. c #D5A144\",\n-\"2. c #DBA344\",\n-\"3. c #D5A24A\",\n-\"4. c #DAA54A\",\n-\"5. c #DDA94C\",\n-\"6. c #DAA84B\",\n-\"7. c #CCA253\",\n-\"8. c #CCA659\",\n-\"9. c #D3A554\",\n-\"0. c #DCAB53\",\n-\"q. c #DBAC5B\",\n-\"w. c #D5A957\",\n-\"e. c #D8AB54\",\n-\"r. c #EAAE45\",\n-\"t. c #E3AC4B\",\n-\"y. c #E4A843\",\n-\"u. c #E6B14D\",\n-\"i. c #EBB34C\",\n-\"p. c #EEB145\",\n-\"a. c #F4BB4E\",\n-\"s. c #F8B947\",\n-\"d. c #E2AD52\",\n-\"f. c #E2AC5A\",\n-\"g. c #E5B253\",\n-\"h. c #EBB552\",\n-\"j. c #EEB954\",\n-\"k. c #E4B45B\",\n-\"l. c #E9B55A\",\n-\"z. c #ECBB5C\",\n-\"x. c #E6B95C\",\n-\"c. c #F2BC55\",\n-\"v. c #F2BD5A\",\n-\"b. c #F6BB55\",\n-\"n. c #CAA666\",\n-\"m. c #D6AB66\",\n-\"M. c #DDB368\",\n-\"N. c #DBB676\",\n-\"B. c #D1AE72\",\n-\"V. c #E3B563\",\n-\"C. c #E4BC63\",\n-\"Z. c #EBBC63\",\n-\"A. c #E4BA6B\",\n-\"S. c #EABE6B\",\n-\"D. c #E2B66A\",\n-\"F. c #F1BF64\",\n-\"G. c #E4BE75\",\n-\"H. c #E3BD7B\",\n-\"J. c #E9BD74\",\n-\"K. c #D09F61\",\n-\"L. c #FAC14E\",\n-\"P. c #F6C155\",\n-\"I. c #FBC454\",\n-\"U. c #F5C35C\",\n-\"Y. c #FAC55A\",\n-\"T. c #FECA5D\",\n-\"R. c #FEC856\",\n-\"E. c #EEC15E\",\n-\"W. c #ECC265\",\n-\"Q. c #ECC36C\",\n-\"!. c #EAC66C\",\n-\"~. c #F3C463\",\n-\"^. c #F5CA64\",\n-\"/. c #FDCC63\",\n-\"(. c #F3C56B\",\n-\"). c #F3CB6C\",\n-\"_. c #FBCC6A\",\n-\"`. c #F9C763\",\n-\"'. c #FFD165\",\n-\"]. c #FED36B\",\n-\"[. c #FBD66E\",\n-\"{. c #EBC474\",\n-\"}. c #ECCA74\",\n-\"|. c #EAC47B\",\n-\" X c #EDCA7B\",\n-\".X c #E6C279\",\n-\"XX c #F4CB74\",\n-\"oX c #FACD72\",\n-\"OX c #F4CC7B\",\n-\"+X c #F4C976\",\n-\"@X c #EFD079\",\n-\"#X c #F5D174\",\n-\"$X c #FDD373\",\n-\"%X c #FEDA74\",\n-\"&X c #F4D47A\",\n-\"*X c #FCD47A\",\n-\"=X c #F6DA7C\",\n-\"-X c #FDDC7B\",\n-\";X c #F7D977\",\n-\":X c #FEE27D\",\n-\">X c #FFE97F\",\n-\",X c #D9B982\",\n-\"<X c #E5BE81\",\n-\"1X c #EDCC83\",\n-\"2X c #ECCB8B\",\n-\"3X c #E6C587\",\n-\"4X c #F2CD83\",\n-\"5X c #F3CE8B\",\n-\"6X c #EED287\",\n-\"7X c #F3D383\",\n-\"8X c #FBD483\",\n-\"9X c #FDDC83\",\n-\"0X c #F3D38B\",\n-\"qX c #FAD48B\",\n-\"wX c #F4DB8C\",\n-\"eX c #FCDC8B\",\n-\"rX c #F6DA83\",\n-\"tX c #E9CC95\",\n-\"yX c #EDD298\",\n-\"uX c #F3D395\",\n-\"iX c #FCDC93\",\n-\"pX c #F3D59A\",\n-\"aX c #FBDB9B\",\n-\"sX c #F5DA96\",\n-\"dX c #F1CF93\",\n-\"fX c #FDE383\",\n-\"gX c #FFEA85\",\n-\"hX c #FFE28B\",\n-\"jX c #FFEA8B\",\n-\"kX c #FDE493\",\n-\"lX c #FBE59A\",\n-\"zX c #FEEB9C\",\n-\"xX c #FAE796\",\n-\"cX c #FFF499\",\n-\"vX c #FFF38F\",\n-\"bX c #F4D9A6\",\n-\"nX c #F3DDB4\",\n-\"mX c #ECD4AA\",\n-\"MX c #FEECA3\",\n-\"NX c #FDEEAA\",\n-\"BX c #F9E3A8\",\n-\"VX c #FFF2A5\",\n-\"CX c #FEF2AC\",\n-\"ZX c #FFFBA4\",\n-\"AX c #F9E3B9\",\n-\"SX c #FEF5B3\",\n-\"DX c #FFF7BA\",\n-\"FX c #FAEAC7\",\n-\"GX c #FFFAC4\",\n-\"HX c #FFFAD8\",\n-\"JX c #F5E9D4\",\n-\"KX c #FFFCE5\",\n-\"LX c None\",\n-/* pixels */\n-\"LXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXt.u.t.t.u.i.i.u.i.u.t.r.LXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLX\",\n-\"LXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXP 2.t.u.i.i.c.a.L.P.I.L.I.I.I.I.I.I.P.P.P.c.i.-.P LXLXLXLXLXLXLXLXLXLXLXLX\",\n-\"LXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLX-.t.t.t.t.z.W.^._.$X*X;X-X-X-X$XoX%X-X>XgXgX>X>X:X:X[._.P.P.h.i.E LXLXLXLXLXLXLXLX\",\n-\"LXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLX2.5.0.x.!.7XeXhXkXhXkXhXhXhXfX=X&X!.&X%X%X%X].T.).:XvXcXVXDXDXNXeX*X`.c.6.LXLXLXLXLXLX\",\n-\"LXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXt.6.6.}.wXlXzXzXMXzXxXkXhXxXjX&X}.&X&X-X-X%X$XU.W.W.].].].].%X9XkXDXKXKXGXiXY.c.5.LXLXLXLX\",\n-\"LXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXt.4.w. XMXMXMXlXzXDXGXDXCXzXjXjX9X9XfX9X9X;X#X!.W.#X%X:X[.].].'.'.'./././.sXSXHXGX9X/.h.LXLXLX\",\n-\"LXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLX4.0.wXNXMXMXzXzXMXVXzXDXSXcXxXgXjXfX:X-X!.!.}.;X*X=X;X=X-X-X-X%X[.]./././.T.T.-XVXDXgXT.j.LXLX\",\n-\"LXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLX5.3.7XCXMXMXMXNXCXMXxXxXSXDXVXvXgXjXfXfX!.!.9XgXfX}.!.).).^.!.[.).).^.].].]./././.T.gXZX-XY.u.LX\",\n-\"LXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXg.0.lXNXCXSXSXBXxXsXxXxXzXDXVXxX=X@X@X{.OX&X}.&X@X:XgX-X$X$X$X%X%X-X;X/.U.P.Y.T.[.%XT.gX:XY.5.LX\",\n-\"LXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXz.d.sXGXCXBXxXxXzXzXzXVXzXsXwX7XwXxXhXeX9X9X-X&X=X}.gXgX=X:XgXfX#XE.U.T.T.'.'.'.%X[.s.T.T.P.*.LX\",\n-\"LXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXt.W.W.6XzXMXMXCXCXCXzXwX7XeXkXlXxXNXwXhXhXfX9XfX=X@X:X@X:XfX).x.T.'.'.'.'.%X%X%XT.L.I.R.I.t.T LX\",\n-\"LXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXt.g.XX{.0XCXSXCXxXhXsXkXxXxXhXhXfX0X@X@X X}.{.Q.!.}.@X=X}.x.^.].].].[.:X:X[./.P.L.I.I.b.g.| R LX\",\n-\"LXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXi.h.l.OX5X4X6X0XxXlXxXxXxXxXkXhXhXhXeX9X9X9X-X-X-X-X=X&X}.:X%X:X-X-X#X).`.P.I.T.T.P.P.2.[ { Y LX\",\n-\"LXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXh.c.j.(.A.qXpXuXyXuXsXhXhXkXhXkXhXeXhX9X9X9X9X-X*X%X$XoXW.W.^.E.U.~.U.T./._.*X+XU.3.:._ } } ( LX\",\n-\"LXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXh.c.v._.Z.OXJ.dXAXnXAXFXpX0X4X&X-X8XfX9X9X9X9X-X-X*X$X$X].].'./._.$XoXiXsXpXN.-.=.F } ` } [ R LX\",\n-\"LXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXi.c.v._.Z.oXQ.OX1X.XmXmXbXFXnXbXAXuXuXqX4XOX8X*XoX$X_._.oX8X8X|.3XN.m.n.m Y j G ] K -.` } | R LX\",\n-\"LXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXt.j.c._.Z.*X!.*X7X}.lX3X|.2XN.{.|.M.J.|.D.{.G.M.m.D.9.*.3.P t E P = l S > Y D J ' K } ' | Y *.LX\",\n-\"LXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXz.d.d.F.z.oXQ.*X7X XkX7X&X8XZ.(.F.4.b.r.| t.| Q _ *.5 g E , $ g L $ S S 3 ' D J ] K } W ( =.=.LX\",\n-\"LXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXg.Z.d.g.k.(.S.OX1X XxX7XXX-XW.`.`.r.b.s...r...! { [ 8 h Y e $ z L % D I 3 Y G G Y F Y I 4.u.( LX\",\n-\"LXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXt.Z.(.x.S.V.V.{.|.|.sX2XOX-XZ.`./.i.b.s.o.p.o.~ | } 8 j Y < $ j L % D S 3 Y D D L t -.g.Y.4.E LX\",\n-\"LXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXu.h.F.OX X4XQ.W.W.A.3X<X|.4XV.(.v.t.v.s.X.r...~ { } 6 h Y < $ g t # g t 2 a p P -.j.Y.i.2.{ R LX\",\n-\"LXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXi.h.l.(.4X0X2X}.&X).!.!.C.A.M.x.f.t.h.y.| 5.| / ' R 7 g I 2 X r q 9 y p P 3.g.U.T.j.h.] { { R LX\",\n-\"LXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXh.c.v._.k.4X2XbXAXdXwX7X).).(.C.V.q.w.;.;.*.#.P P P M a @.a P $.;.3.g._.*XqXsXA.0.Y [ _ } | Y LX\",\n-\"LXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXh.c.c._.Z.*XS. XyXtXFXJXbXFXpX4X4XXX).XX).^.W.~.E.W.^.^.U.^.).).9XqX1XyXN.M.Y Y ] H } _ } } R LX\",\n-\"LXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXd.c.c._.Z.oXQ.*X1X.XsXtX2XmXtXdXnXpXaXAXuXqXiXqXXX8X8X+X(. Xm.n.n.P P P 3 Y D H ] H :.` } ` R LX\",\n-\"LXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXd.h.h._.z.*XQ.*X7X XlX1X X7XV.S.S.>.h.y.` 5.3._ =.*.> g E , # x L % S S 5 Y D J ] K } ` [ U -.LX\",\n-\"LXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXz.g.d.Z.k.*XS.*X7X}.kX6X#X-XC.).`.t.b.p.| u...W ` =.7 h Y e $ j L % D I 3 ' G J _ H ] H R 5.=.LX\",\n-\"LXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXt.S.g.k.k.C.D. X1X}.kX6XOX-X~.`.`.r.b.s.X.p...~ { } 8 6 Y < $ j L % D I 3 Y D H Y x m *.j.t.T LX\",\n-\"LXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXr.l.J.S.Q.Q.C.S.G..XuX3XOX7XC.`.`.t.b.s.X.i.o.~ { [ A S Y < $ j S % l S 1 I k k m R h.c.j.[ R LX\",\n-\"LXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXi.l.b.4X5X4X!.).(.C.{.G.J.|.D.S.F.y.b.p...u...! { ] 7 7 Y , % g t o e q q i N 3.h.P.Y.5.| { R LX\",\n-\"LXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXp.p.i.b.l.4XdX|.4XXX).).).Z.V.q.9.9.4.>.[ -.' Y Y L t r a X O y i a P ;.0.^.$X(.U.3.:./ [ { R LX\",\n-\"LXLXLXLXLXLXLXLXLXLXLXLXLXP P u.u.u.i.a.a.a.a.a.c.a.a.a.a.j.i.u.r.p.r.s.y.b.l.F.qX{.4X4XS.W.~.W.).W.C.q.e.w.7.$.;.;.;.;.7.e.e.x.z.(._.qXuX0X3X-.=.H } _ ..} R LX\",\n-\"LXLXLXLXLXLXLXLXLXt.t.t.t.u.h.U.`.`._._.].].].].].'.'.[.%X%X].'.`.b.b.c.j.h.t.h.k.k.+XH.J.3XN.D.<XJ.4XqXqXOX8XoXoXoX$X/.oX*X*XOXwXN.B.n.#.R D G ' K [ ' [ [ R LX\",\n-\"LXLXLXLXLXLX=.5.5.g.Z.).&X9XhXeXhXeXfXhXfX=X#X{.%X:X>X>X:X:XgXcXcXCXMXkX$X].Y.b.h.h.F.f.d.f.>.>.<.&.<.K.m.J.J.D.f.A.q.;.9.#.k N P 2 S S 3 Y D J ` K } ] ../ R LX\",\n-\"LXLXLXLXt.4.6.!.rXiXlXxXxXxXkXhXhXjXgX=X}.XX&X-X-X%X[.U.P.E.].%X9XhXzXDXHXHXFXlX_.P.j.g.i.h.>.>.>.) V V B N ) V ( *.4 s U , # l L o D S 5 ' F J ] K } _ ( ' 4.LX\",\n-\"LXLXt.6.q. XzXzXzXzXCXGXSXVXzXjXxX9X X&X9X9X-X-X).W.W.).%X[.].].]./././.].eXFXKXHXNX$XP.h.b.+.+.+.V +.V B V c c ] :.8 h Y < $ j L $ D I 3 Y G J Y D Y S -.b.=.LX\",\n-\"LX1.6.M.sXMXzXMXzXzXSXNXDXSXcXjXgXhXfXfX>X}.#XW.XX;X-X:X:X:X%X%X].].'.T.T.T./.$XxXGXSX9XY.j.>.+.+.V  .V V V c 4 G [ A D Y t $ D L $ D L > Y j v S l R t.P.h.R LX\",\n-\"t.6.M.MXNXNXMXMXMXCXNXlXSXDXVXcXgXgXgXgX;XM.&XfXfX!.!.!.!.#X;X;X:X).^.'.'.'.'./.T.'.cXZX*XY.y.+.+.V >.V B V B d 5 J 6 7 Y < $ g l   g t , l i n $.t.I.P.b.:.T LX\",\n-\"5.0.7XVXNXNXSXNXMXkXwXxXMXDXCXzXfXfX-X&XW.7X=X@X:X9XfX-X].].).).).[.%X;X'.^.I.Y.[.'.T.vXgXT.u.>.&.V ) b B B f ; w x 7 t I - X e q X q i a R 6.a.I.P.I.t.} | Y LX\",\n-\"x.0.wXSXGXSXlXxXxXlXlXzXzXCXlX@X@XrX7X&X9X-X&X@X@X&XgXfX#X%X:X:X>X[.^.U.Y.T.T.'.[.%XI.].].T.>.] &.V N f f w 0 0 9 0 i i i q y i P #.3.u.P.I./._./.h.6._ } { R LX\",\n-\"d.z.A.BXxXlXMXMXNXVXCXxXwX6XeXxXNXCXwX9X9X9X9X-XfX=XfX:X=XfX:X).z.U./././.'.[.%X[.Y.L.I.Y.v.' 2.t.y.+.=.*.( &.&.( -.~.U.'.'.'.T.'./._.*XqXaXyXw.-.D } _ ..[ R LX\",\n-\"t.l.+X{.xXNXSXCXCXlXwXwXhXkXhXkXwXwXwXwXeXrXrX&X}.A.@X@X:X}.x.^.'.].].%X%X%X%X^.I.I.I.I.P.2.*.w.M.<.<.&.=.&.) &.) 4././.].].$X+X0X6X.X3X,.,.U G ] F 1._ [ | R LX\",\n-\"t.u.S.OX1X0XlXlXeXkXlXxXxXkXkXhXhXhXrX&X&X#X#XXXoX-X=XgXM.^.[.[.%X-X:X%X[.`.P.I.T.I.R.j.2.` *.9.m.;.<.K.&.&.&.N #.,.A.m.V.8.$.*.%.r z L > / D J ] H 1.` .._ *.LX\",\n-\"i.c.v.F.{.0XuX3XsXkXkXxXxXkXhXkXhXhXhX9X9X9X9X-X-X-X$X).!.[.#X#X).^.E.P.Y.T./.`./.h.g.! | { *.[ >.V &.V f N d ; w d s x E r # l L % j I < _ D J ` F } _ _ E =.LX\",\n-\"t.c.~.~.V.XX2XpXFXbXbXsX7X*XeXiXhXeXeX9X9X9X-X-X*X-X$X$X$X).^.^.^././.].8XqXBXA.0.J -.W } { ;.6.>.V  .V B b B 4 f s : s Y < $ j L $ j G 3 _ D H ] F ` z R 5.' LX\",\n-\"g.c.F.`.Z.oX{.{.2X3XAXJXnXFXnXdXuXqXOX8X8XoXoX$XoX_.].$X/.].$X[.8XsX3X2XB.8.U v ` F :.! ..{ ;.E.b.>.|  .c V B 4 4 x : : S < $ j m $ z I > ( j D I k M >.c.5.T LX\",\n-\"t.h.c.`.Z.oX(.OX0X|.sXtX3XuX3X2XbXtXqXbXdX4XuXqX{.*XOXS.S.G.8.7.8.t P E > H G G ] F 1.W } ` 8.xX_.b.>. .c b c 4 s d : = e 1 $ z l % l l 1 S e n M -.j.c.t.] R LX\",\n-\"LXg.i.~.z.$X}.oXrX}.kX0X{.7XD.F.Z.4.k.y.| 4.0.) ( *.5 < U ,   g m # g I 4 J J G ] H 1.W [ I E.cXfXY.t.V B b B 1 f f * * e & # e , X q q q M $.6.U.v.c.} { | R LX\",\n-\"LXLXg.l.f._.J.oX8X XkXwXXX-XS.~.`.u.b.s.| r.t.! _ [ 8 5 Y t $ t L $ 6 I 3 J I D ] F ' D E x.L.%X%XT.4.x f i 0 0 0 - . . 9 9 u u p a $.w.Z.oX8X(.Z.] :.) } } Y LX\",\n-\"LXLXLXx.f.Z.A.{.7X|.xX6X}.-XW.`.T.p.I.s.o.r.r.~ { } D 6 Y 7 $ 7 I $ h I 3 J G v Y j l $.W.T.L.R.T.c.*.T N M B n n f N N N &.f.l.XX-X7XlXpX3Xn.*._ H :.` } } R LX\",\n-\"LXLXLXLXd.g.z.Z.G.G.2X2X{.7XS.~.`.u.I.s.o.p.r.~ ` ..A 7 Y g % 7 L % 7 S > z t t a $.C.[.P.L.I.I.Y.4.( K.,.&.&.<.&.&.<.&.<.m.<XA.H.n.,.$.e Y v J ] K } ] } ] R LX\",\n-\"LXLXLXLXu.d.Z.J.W.S.!.J.J..XD.S.Z.t.h.p.| y.2.! _ [ 6 5 Y < o t t o q q y a @.8.!.^.P.L.I.I.Y.j.t.| ( N N N N n n N w ; k r w N M # j G 3 / D J ] G .._ | U *.LX\",\n-\"LXLXLXLXi.h.j.(.5X5X4X{.Z.Z.x.q.9.9.3.:.] ;.' U E P t r a q O O q u @.$.8.C.^.U.I.I.I.T./.c.j.] | ] R 1.U b d ; f w & * w &   g l $ S I < _ D H ' F [ W I =.=.LX\",\n-\"LXLXLXLXg.j.l.F.z.OXyXpXAX2X1X7XXXC.C.M.q.w.8.8.7.,.$.,.7.8.k.E.E.E.E.E.Y.T.T.'.[.*XsX!.h./ [ W } | ' `.u.=.c 4 f d : ; f & # < z $ j I 3 _ D H Y D I E >.d.( LX\",\n-\"LXLXLXLXh.j.c._.Z.oX{. XbXtXFXJXbXAXpX7X&XXX_.^.^.'././.'./.T.T.T.'.'./.*X9X4XaXtXN.,.Y _ D [ _ 1.[ ' zX_.j.) 4 s d : : w &   , t $ z L > Y j j l a *.u.P.:.( LX\",\n-\"LXLXLXLXd.h.z._.Z.oXXX&X6X.XyXtX2XmXyXpXnXbXaXBXuX7XaXiX}.-XOX{.}..XM.m.B.%.E I 2 Y G H _ F } ! 1.` *.ZXcXT.t.x f s : * w &   w , # t e = p p M -.h.Y.u.:.{ T LX\",\n-\"LXLXLXLXLXg.h.(.F.oXoXXXeX}.aX2X X4XM.S.J.f.v.f.4.f.q.-.;.w.G m Y t 2 t S   D S > / J G ` F [ _ } Y 2.:XvX/.c.x w w & & - . . . O 9 q i Z <.x.F.`.g.t._ [ { ( LX\",\n-\"LXLXLXLXLXg.g.z.l.+X{.+XrX}.kXwXOX9XC.~.~.t.b.p.| y.1.W ) -.6 5 Y < $ g S   D S > J J H _ F [ H E e.P.R.'.Y.h.i 9 9 9 9 9 0 y a E >.x.*X8XsXpXq.3.J [ _ } | ( LX\",\n-\"LXLXLXLXLXLXLXg.g.S.A.+X6X{.kXwX&X9XZ.`./.i.b.L.o.r.y.~ ` 3.8 8 Y < $ g S $ S D > Y H D Y 8 I E 0.P.L.I.Y.b.:.T N ) &.) =.<.<.f.J.|..X3Xn.7.E U ] H :._ } | #.LX\",\n-\"LXLXLXLXLXLXLXLXg.x.z.A.|..XuX3X X8XC.~./.i.b.O.o.p.o.^ { 1.8 j Y 3 $ 7 S % < S > I z k l a 7.g.L.L.I.I.P.2.=.&.#.&.&.#.&.#.N N @.t I L 1 / v K ] K } _ .._ E LX\",\n-\"LXLXLXLXLXLXR 6.d.t.v.z.Z.Z.{.H.{.|.D.S.Z.t.h.p.X.y.2.~ _ :.6 h I , % t <   S , q r p P 3.j.L.I.R.I.Y.h.2./ [ w w w & & w .   ; e # j I < _ D J ] F } _ _ N LXLX\",\n-\"LXLXLXLXLX3.3.e.d.t.v.z.C.{.OXQ.S.S.V.q.q.4.d.2.| >.] W / R e e l q X q + + + L @.:.5.P.Y.T.'._.^.z.5._ | { :.s f s * * w &   w k $ v I 3 _ D H ' F _ G N LXLXLX\",\n-\"LXLXLX-.6.6.).fXz.i.v.v.(.(.4X<XbXmXpXmX3XN.n.;.,.$.$.#.@.@.@.@.@.#.$.$.e.x.E.'.T.]._.-XeX0XuXm.3.H ` W :.] :.d s d ; : w *   < k % z G 3 _ v H I k M p LXLXLXLX\",\n-\"LXLXLX3.3.&XgXgXZ.t.~.v.(.(.-XS.dXH.bXFXmXnXFXyXbXpX3X|.OX}.).(.^.).].'.^.[.;X@X4X2XN.N.8.#.$.j ] F ` ! } { =.s f d : = f &   < e # j l 1 m e t p 0 LXLXLXLXLXLX\",\n-\"LXLX3.3.x.gXfXgX}.g.c.v.).).-XQ.qX|.qXsXH.2X3XG.2X<X|.5X5XJ.4X1XM.{.A.m.9.w.P P ;.r < I < j Y D ] D ] _ ..` E 4 4 f * * w X   1 = o q q q y y LXLXLXLXLXLXLXLXLX\",\n-\"LXLXd.d.W.cXVXSXMXW.g.j.F.(.*XQ.eX}.eXxX}.rX{.Z.{.d.u.h.| >.t.Q J -.v 5 z l # 1 I % 1 Y < D _ D { F ] ! ' m t - 9 - . . O . @ @ O + @ LXLXLXLXLXLXLXLXLXLXLXLXLX\",\n-\"LXLXd.Z.M.SXlXfX:X-XC.k.g.Z.OXS.rX|.rXkX}.8X).W._.a.i.s.o.X.t. .W 1.F 5 G S % < I $ < J 3 D _ j ] A _ G M p i u u + + O LXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLX\",\n-\"LXLXt.d.!.W.=XjXxXcXCX&Xz.x.V.A.1X.X0XsX}.8X).E._.a.b.L.O.r.i.^ ! 2.K 6 H G $ < Y $ > I 3 j Y 6 J k t n LXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLX\",\n-\"LXLXt.t.~.{.XXwXNXzXrX;X-X).~.z.S.A.|.tX.X4X{.x.(.u.c.s.o.X.i.^ ! 1.H 7 G S % , I % , L 2 t l i a i LXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLX\",\n-\"LXLXu.i.v.Z.5X4X0X}.=X>X>X>X%X;X).~.Z.Q.S.A.M.V.Z.d.i.i.X.y.y.` J -.D 5 D S o - t X X q q y a L ( LXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLX\",\n-\"LXLXi.h.U.F.W.{.pXuXnXyX7X7X&X;X-X-X%X].).W.Z.V.q.9.7.;.=.$.#.N L P i i i + + u C @.a t Y K ..[ -.LXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLX\",\n-\"LXLXd.i.`.v.(.(.{.{.bXyXAXJXnXBXsXOX#X#X].[.].^.).(.W.x.k.g.9.7.7.8.m.B.B.H.,Xn.,.P $.D ] Y 1.[ -.LXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLX\",\n-\"LXLXd.h.U.F._._.XX{.eXH.0XyX3XbXnXtXAXnXqXnXaX4XqXeXOX*X*XoXoXOX1Xm.N.n.$.$.> D H v [ 8 { _ ..{ ( LXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLX\",\n-\"LXLXLXd.h.z.(.(.$X).eX}.eXuX<X6XG.V.+Xf.l.l.>.d.A.>.=.w.#.x T M $ t L $ < Y > G J v -.F { / } / p LXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLX\",\n-\"LXLXLX3.g.z.z.(.oX{.eX}.eXwX}.8X(.Z.oXd.h.h.X.>.t.! ) :.v 5 G x $ 3 S $ < Y 3 G J D [ F { W U M LXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLX\",\n-\"LXLXLXLXLXk.g.Z.S.Q.0X.XeXwX}.9X).U._.s.b.s.O.o.i.~ / 1.H 6 H z $ < S 2 < Y > G H v _ 6 G n i LXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLX\",\n-\"LXLXLXLXLXLX7.l.V.Z.|.N.0XyX.X8X{.z.].a.a.s.O.y.i.^ ! 2.K 6 H z $ < I $ < E 2 j S 5 n p y LXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLX\",\n-\"LXLXLXLXLXLXLXLXLXz.Z.Z.{..XG. XG.V.(.t.h.a.o.y.u.~ / 3.D 7 G l   < S # , t = y i y i LXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLX\",\n-\"LXLXLXLXLXLXLXLXLXLXLXLX#.Z.Z.C.k.q.w.0.0.5.} :.:.W R *.g e l r X 9 q O + + O @ LXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLX\",\n-\"LXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXq.w.<.,.&.$.#.#.@.Z a p u u u + + LXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLXLX\"\n-};"
      }
    ]
  },
  {
    "sha": "20604445ebf3f1f50e4d53762d8cdddb0dae346c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyMDYwNDQ0NWViZjNmMWY1MGU0ZDUzNzYyZDhjZGRkYjBkYWUzNDZj",
    "commit": {
      "author": {
        "name": "Laser9un",
        "email": "laser9un@gmail.com",
        "date": "2017-01-07T10:11:52Z"
      },
      "committer": {
        "name": "Laser9un",
        "email": "laser9un@gmail.com",
        "date": "2017-01-07T10:11:52Z"
      },
      "message": "Copyright Info Update",
      "tree": {
        "sha": "d9e84a220397fa4db410ec6206486c43d754ed0e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d9e84a220397fa4db410ec6206486c43d754ed0e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/20604445ebf3f1f50e4d53762d8cdddb0dae346c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/20604445ebf3f1f50e4d53762d8cdddb0dae346c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/20604445ebf3f1f50e4d53762d8cdddb0dae346c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/20604445ebf3f1f50e4d53762d8cdddb0dae346c/comments",
    "author": {
      "login": "Laser9un",
      "id": 16782409,
      "node_id": "MDQ6VXNlcjE2NzgyNDA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16782409?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Laser9un",
      "html_url": "https://github.com/Laser9un",
      "followers_url": "https://api.github.com/users/Laser9un/followers",
      "following_url": "https://api.github.com/users/Laser9un/following{/other_user}",
      "gists_url": "https://api.github.com/users/Laser9un/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Laser9un/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Laser9un/subscriptions",
      "organizations_url": "https://api.github.com/users/Laser9un/orgs",
      "repos_url": "https://api.github.com/users/Laser9un/repos",
      "events_url": "https://api.github.com/users/Laser9un/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Laser9un/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Laser9un",
      "id": 16782409,
      "node_id": "MDQ6VXNlcjE2NzgyNDA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16782409?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Laser9un",
      "html_url": "https://github.com/Laser9un",
      "followers_url": "https://api.github.com/users/Laser9un/followers",
      "following_url": "https://api.github.com/users/Laser9un/following{/other_user}",
      "gists_url": "https://api.github.com/users/Laser9un/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Laser9un/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Laser9un/subscriptions",
      "organizations_url": "https://api.github.com/users/Laser9un/orgs",
      "repos_url": "https://api.github.com/users/Laser9un/repos",
      "events_url": "https://api.github.com/users/Laser9un/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Laser9un/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "31ee1d46e1a241cc6d5311d8ae0a91e8400da79d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/31ee1d46e1a241cc6d5311d8ae0a91e8400da79d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/31ee1d46e1a241cc6d5311d8ae0a91e8400da79d"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 9,
      "deletions": 11
    },
    "files": [
      {
        "sha": "66a83ee9f7107784526b002cc3f3b8afc32ae8b3",
        "filename": "COPYING",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/20604445ebf3f1f50e4d53762d8cdddb0dae346c/COPYING",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/20604445ebf3f1f50e4d53762d8cdddb0dae346c/COPYING",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/COPYING?ref=20604445ebf3f1f50e4d53762d8cdddb0dae346c",
        "patch": "@@ -3,7 +3,7 @@ Copyright \u00a9 2011-2012 The PPCoin Developers\n Copyright \u00a9 2014 The Peerunity Developers\n Copyright \u00a9 2014 The EmerCoin Developers\n Copyright \u00a9 2012-2016 The NovaCoin developers\n-Copyright \u00a9 2016 The 42 developers\n+Copyright \u00a9 2016-2017 The 42 developers\n \n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal"
      },
      {
        "sha": "0ef076b13a16084eeb5f857a82d57de51c749bfa",
        "filename": "src/miner.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/20604445ebf3f1f50e4d53762d8cdddb0dae346c/src/miner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/20604445ebf3f1f50e4d53762d8cdddb0dae346c/src/miner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.cpp?ref=20604445ebf3f1f50e4d53762d8cdddb0dae346c",
        "patch": "@@ -1,7 +1,6 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n // Copyright (c) 2009-2012 The Bitcoin developers\n // Copyright (c) 2013-2016 The NovaCoin developers\n-// Copyright (c) 2016 The 42 developers\n // Distributed under the MIT/X11 software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "45c966e9938b48b6941c64ba71128ad4d561adff",
        "filename": "src/miner.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/20604445ebf3f1f50e4d53762d8cdddb0dae346c/src/miner.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/20604445ebf3f1f50e4d53762d8cdddb0dae346c/src/miner.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.h?ref=20604445ebf3f1f50e4d53762d8cdddb0dae346c",
        "patch": "@@ -1,7 +1,6 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n // Copyright (c) 2009-2012 The Bitcoin developers\n // Copyright (c) 2013-2016 The NovaCoin developers\n-// Copyright (c) 2016 The 42 developers\n // Distributed under the MIT/X11 software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n #ifndef MINER_H"
      },
      {
        "sha": "cf00297cc944bd3fc25dfa25caf2a7cc4af3ab66",
        "filename": "src/qt/forms/aboutdialog.ui",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/20604445ebf3f1f50e4d53762d8cdddb0dae346c/src/qt/forms/aboutdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/20604445ebf3f1f50e4d53762d8cdddb0dae346c/src/qt/forms/aboutdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/aboutdialog.ui?ref=20604445ebf3f1f50e4d53762d8cdddb0dae346c",
        "patch": "@@ -99,7 +99,7 @@ Copyright \u00a9 2011-2012 The PPCoin Developers\n Copyright \u00a9 2014 The Peerunity Developers\n Copyright \u00a9 2014 The EmerCoin Developers\n Copyright \u00a9 2012-2016 The NovaCoin developers\n-Copyright \u00a9 2016 The 42 developers</string>\n+Copyright \u00a9 2016-2017 The 42 developers</string>\n        </property>\n        <property name=\"textInteractionFlags\">\n         <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>"
      },
      {
        "sha": "b256fcf174b603592a4a016680201b530d050bb5",
        "filename": "src/qt/locale/bitcoin_en.ts",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/20604445ebf3f1f50e4d53762d8cdddb0dae346c/src/qt/locale/bitcoin_en.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/20604445ebf3f1f50e4d53762d8cdddb0dae346c/src/qt/locale/bitcoin_en.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_en.ts?ref=20604445ebf3f1f50e4d53762d8cdddb0dae346c",
        "patch": "@@ -21,13 +21,13 @@ Copyright \u00a9 2011-2012 The PPCoin Developers\n Copyright \u00a9 2014 The Peerunity Developers\n Copyright \u00a9 2014 The EmerCoin Developers\n Copyright \u00a9 2012-2016 The NovaCoin developers\n-Copyright \u00a9 2016 The 42 developers</source>\n+Copyright \u00a9 2016-2017 The 42 developers</source>\n         <translation>Copyright \u00a9 2009-2016 The Bitcoin developers\n Copyright \u00a9 2011-2012 The PPCoin Developers\n Copyright \u00a9 2014 The Peerunity Developers\n Copyright \u00a9 2014 The EmerCoin Developers\n Copyright \u00a9 2012-2016 The NovaCoin developers\n-Copyright \u00a9 2016 The 42 developers</translation>\n+Copyright \u00a9 2016-2017 The 42 developers</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/aboutdialog.ui\" line=\"114\"/>"
      },
      {
        "sha": "a9e7177c165e6ad6c9ded2dd1632bd256f07ad37",
        "filename": "src/qt/locale/bitcoin_ru.ts",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/20604445ebf3f1f50e4d53762d8cdddb0dae346c/src/qt/locale/bitcoin_ru.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/20604445ebf3f1f50e4d53762d8cdddb0dae346c/src/qt/locale/bitcoin_ru.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ru.ts?ref=20604445ebf3f1f50e4d53762d8cdddb0dae346c",
        "patch": "@@ -21,13 +21,13 @@ Copyright \u00a9 2011-2012 The PPCoin Developers\n Copyright \u00a9 2014 The Peerunity Developers\n Copyright \u00a9 2014 The EmerCoin Developers\n Copyright \u00a9 2012-2016 The NovaCoin developers\n-Copyright \u00a9 2016 The 42 developers</source>\n+Copyright \u00a9 2016-2017 The 42 developers</source>\n         <translation>\u0412\u0441\u0435 \u043f\u0440\u0430\u0432\u0430 \u0437\u0430\u0449\u0438\u0449\u0435\u043d\u044b \u00a9 2009-2016 \u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0438 Bitcoin\n \u0412\u0441\u0435 \u043f\u0440\u0430\u0432\u0430 \u0437\u0430\u0449\u0438\u0449\u0435\u043d\u044b \u00a9 2011-2012 \u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0438 PPCoin\n \u0412\u0441\u0435 \u043f\u0440\u0430\u0432\u0430 \u0437\u0430\u0449\u0438\u0449\u0435\u043d\u044b \u00a9 2014 \u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0438 Peerunity\n \u0412\u0441\u0435 \u043f\u0440\u0430\u0432\u0430 \u0437\u0430\u0449\u0438\u0449\u0435\u043d\u044b \u00a9 2014 \u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0438 EmerCoin\n \u0412\u0441\u0435 \u043f\u0440\u0430\u0432\u0430 \u0437\u0430\u0449\u0438\u0449\u0435\u043d\u044b \u00a9 2012-2016 \u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0438 NovaCoin\n-\u0412\u0441\u0435 \u043f\u0440\u0430\u0432\u0430 \u0437\u0430\u0449\u0438\u0449\u0435\u043d\u044b \u00a9 2016 \u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0438 42</translation>\n+\u0412\u0441\u0435 \u043f\u0440\u0430\u0432\u0430 \u0437\u0430\u0449\u0438\u0449\u0435\u043d\u044b \u00a9 2016-2017 \u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0438 42</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/aboutdialog.ui\" line=\"114\"/>"
      },
      {
        "sha": "24de4b82da4490240113ccad13805de1d6211de7",
        "filename": "src/qt/locale/bitcoin_uk.ts",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/20604445ebf3f1f50e4d53762d8cdddb0dae346c/src/qt/locale/bitcoin_uk.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/20604445ebf3f1f50e4d53762d8cdddb0dae346c/src/qt/locale/bitcoin_uk.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_uk.ts?ref=20604445ebf3f1f50e4d53762d8cdddb0dae346c",
        "patch": "@@ -21,13 +21,13 @@ Copyright \u00a9 2011-2012 The PPCoin Developers\n Copyright \u00a9 2014 The Peerunity Developers\n Copyright \u00a9 2014 The EmerCoin Developers\n Copyright \u00a9 2012-2016 The NovaCoin Developers\n-Copyright \u00a9 2016 The 42 Developers</source>\n+Copyright \u00a9 2016-2017 The 42 Developers</source>\n         <translation>\u00a9 2009-2016 \u0420\u043e\u0437\u0440\u043e\u0431\u043d\u0438\u043a\u0438 Bitcoin\n \u00a9 2011-2012 \u0420\u043e\u0437\u0440\u043e\u0431\u043d\u0438\u043a\u0438 PPCoin\n \u00a9 2014 \u0420\u043e\u0437\u0440\u043e\u0431\u043d\u0438\u043a\u0438 Peerunity\n \u00a9 2014 \u0420\u043e\u0437\u0440\u043e\u0431\u043d\u0438\u043a\u0438 EmerCoin\n \u00a9 2012-2016 \u0420\u043e\u0437\u0440\u043e\u0431\u043d\u0438\u043a\u0438 NovaCoin\n-\u00a9 2016 \u0420\u043e\u0437\u0440\u043e\u0431\u043d\u0438\u043a\u0438 42</translation>\n+\u00a9 2016-2017 \u0420\u043e\u0437\u0440\u043e\u0431\u043d\u0438\u043a\u0438 42</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/aboutdialog.ui\" line=\"114\"/>"
      },
      {
        "sha": "fedaa1c11d585813302d06ed72d56481bd02da9a",
        "filename": "src/qt/res/bitcoin-qt.rc",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/20604445ebf3f1f50e4d53762d8cdddb0dae346c/src/qt/res/bitcoin-qt.rc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/20604445ebf3f1f50e4d53762d8cdddb0dae346c/src/qt/res/bitcoin-qt.rc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/bitcoin-qt.rc?ref=20604445ebf3f1f50e4d53762d8cdddb0dae346c",
        "patch": "@@ -22,7 +22,7 @@ BEGIN\n             VALUE \"FileDescription\",    \"42-Qt (OSS GUI client for 42)\"\n             VALUE \"FileVersion\",        VER_FILEVERSION_STR\n             VALUE \"InternalName\",       \"42-qt\"\n-            VALUE \"LegalCopyright\",     \"2009-2012 The Bitcoin developers, 2012-2016 The NovaCoin & PPCoin developers, 2016 The 42 developers\"\n+            VALUE \"LegalCopyright\",     \"2009-2012 The Bitcoin developers, 2012-2016 The NovaCoin & PPCoin developers, 2016-2017 The 42 developers\"\n             VALUE \"LegalTrademarks1\",   \"Distributed under the MIT/X11 software license, see the accompanying file COPYING or http://www.opensource.org/licenses/mit-license.php.\"\n             VALUE \"OriginalFilename\",   \"42-qt.exe\"\n             VALUE \"ProductName\",        \"42-Qt\""
      }
    ]
  },
  {
    "sha": "92af4781f462162a6ffb45c54bacea6b004ea827",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5MmFmNDc4MWY0NjIxNjJhNmZmYjQ1YzU0YmFjZWE2YjAwNGVhODI3",
    "commit": {
      "author": {
        "name": "Laser9un",
        "email": "laser9un@gmail.com",
        "date": "2017-01-10T14:45:06Z"
      },
      "committer": {
        "name": "Laser9un",
        "email": "laser9un@gmail.com",
        "date": "2017-01-10T14:45:06Z"
      },
      "message": "Update MacOS icons",
      "tree": {
        "sha": "32551a1ee954b897b58a797296d7e3e5bf99193f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/32551a1ee954b897b58a797296d7e3e5bf99193f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/92af4781f462162a6ffb45c54bacea6b004ea827",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/92af4781f462162a6ffb45c54bacea6b004ea827",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/92af4781f462162a6ffb45c54bacea6b004ea827",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/92af4781f462162a6ffb45c54bacea6b004ea827/comments",
    "author": {
      "login": "Laser9un",
      "id": 16782409,
      "node_id": "MDQ6VXNlcjE2NzgyNDA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16782409?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Laser9un",
      "html_url": "https://github.com/Laser9un",
      "followers_url": "https://api.github.com/users/Laser9un/followers",
      "following_url": "https://api.github.com/users/Laser9un/following{/other_user}",
      "gists_url": "https://api.github.com/users/Laser9un/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Laser9un/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Laser9un/subscriptions",
      "organizations_url": "https://api.github.com/users/Laser9un/orgs",
      "repos_url": "https://api.github.com/users/Laser9un/repos",
      "events_url": "https://api.github.com/users/Laser9un/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Laser9un/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Laser9un",
      "id": 16782409,
      "node_id": "MDQ6VXNlcjE2NzgyNDA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16782409?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Laser9un",
      "html_url": "https://github.com/Laser9un",
      "followers_url": "https://api.github.com/users/Laser9un/followers",
      "following_url": "https://api.github.com/users/Laser9un/following{/other_user}",
      "gists_url": "https://api.github.com/users/Laser9un/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Laser9un/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Laser9un/subscriptions",
      "organizations_url": "https://api.github.com/users/Laser9un/orgs",
      "repos_url": "https://api.github.com/users/Laser9un/repos",
      "events_url": "https://api.github.com/users/Laser9un/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Laser9un/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "20604445ebf3f1f50e4d53762d8cdddb0dae346c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/20604445ebf3f1f50e4d53762d8cdddb0dae346c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/20604445ebf3f1f50e4d53762d8cdddb0dae346c"
      }
    ],
    "stats": {
      "total": 0,
      "additions": 0,
      "deletions": 0
    },
    "files": [
      {
        "sha": "7ec1723e9495e49049d5350eea47b8ddb6f383bb",
        "filename": "src/qt/res/icons/bitcoin.icns",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/92af4781f462162a6ffb45c54bacea6b004ea827/src/qt/res/icons/bitcoin.icns",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/92af4781f462162a6ffb45c54bacea6b004ea827/src/qt/res/icons/bitcoin.icns",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/icons/bitcoin.icns?ref=92af4781f462162a6ffb45c54bacea6b004ea827"
      }
    ]
  },
  {
    "sha": "909973026b4395221b10d8872ddb0a4200b236cf",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5MDk5NzMwMjZiNDM5NTIyMWIxMGQ4ODcyZGRiMGE0MjAwYjIzNmNm",
    "commit": {
      "author": {
        "name": "Laser9un",
        "email": "laser9un@gmail.com",
        "date": "2017-01-16T08:18:44Z"
      },
      "committer": {
        "name": "Laser9un",
        "email": "laser9un@gmail.com",
        "date": "2017-01-16T08:18:44Z"
      },
      "message": "Fix C++11 compatibility issue",
      "tree": {
        "sha": "75e4f8fe2d12075eabcdd72bada7bacd0a02e3be",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/75e4f8fe2d12075eabcdd72bada7bacd0a02e3be"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/909973026b4395221b10d8872ddb0a4200b236cf",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/909973026b4395221b10d8872ddb0a4200b236cf",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/909973026b4395221b10d8872ddb0a4200b236cf",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/909973026b4395221b10d8872ddb0a4200b236cf/comments",
    "author": {
      "login": "Laser9un",
      "id": 16782409,
      "node_id": "MDQ6VXNlcjE2NzgyNDA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16782409?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Laser9un",
      "html_url": "https://github.com/Laser9un",
      "followers_url": "https://api.github.com/users/Laser9un/followers",
      "following_url": "https://api.github.com/users/Laser9un/following{/other_user}",
      "gists_url": "https://api.github.com/users/Laser9un/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Laser9un/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Laser9un/subscriptions",
      "organizations_url": "https://api.github.com/users/Laser9un/orgs",
      "repos_url": "https://api.github.com/users/Laser9un/repos",
      "events_url": "https://api.github.com/users/Laser9un/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Laser9un/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Laser9un",
      "id": 16782409,
      "node_id": "MDQ6VXNlcjE2NzgyNDA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16782409?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Laser9un",
      "html_url": "https://github.com/Laser9un",
      "followers_url": "https://api.github.com/users/Laser9un/followers",
      "following_url": "https://api.github.com/users/Laser9un/following{/other_user}",
      "gists_url": "https://api.github.com/users/Laser9un/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Laser9un/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Laser9un/subscriptions",
      "organizations_url": "https://api.github.com/users/Laser9un/orgs",
      "repos_url": "https://api.github.com/users/Laser9un/repos",
      "events_url": "https://api.github.com/users/Laser9un/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Laser9un/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "92af4781f462162a6ffb45c54bacea6b004ea827",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/92af4781f462162a6ffb45c54bacea6b004ea827",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/92af4781f462162a6ffb45c54bacea6b004ea827"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "b2fb4e6e8ad5c7fb4ec1bff6efeadc63e702babb",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/909973026b4395221b10d8872ddb0a4200b236cf/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/909973026b4395221b10d8872ddb0a4200b236cf/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=909973026b4395221b10d8872ddb0a4200b236cf",
        "patch": "@@ -1009,7 +1009,7 @@ int64_t GetProofOfWorkReward(int64_t nFees)\n         nSubsidy = 0 * COIN;\n \t\n \tif (fDebug && GetBoolArg(\"-printcreation\"))\n-        printf(\"GetProofOfWorkReward() : create=%s nSubsidy=%\"PRId64 \"\\n\", FormatMoney(nSubsidy).c_str(), nSubsidy);\n+        printf(\"GetProofOfWorkReward() : create=%s nSubsidy=%\" PRId64 \"\\n\", FormatMoney(nSubsidy).c_str(), nSubsidy);\n \t\n     return nSubsidy + nFees;\n }\n@@ -1020,7 +1020,7 @@ int64_t GetProofOfStakeReward(int64_t nCoinAge)\n     int64_t nSubsidy = nCoinAge * COIN_YEAR_REWARD * 33 / (365 * 33 + 8);\n \t\n     if (fDebug && GetBoolArg(\"-printcreation\"))\n-        printf(\"GetProofOfStakeReward(): create=%s nCoinAge=%\"PRId64 \"\\n\", FormatMoney(nSubsidy).c_str(), nCoinAge);\n+        printf(\"GetProofOfStakeReward(): create=%s nCoinAge=%\" PRId64 \"\\n\", FormatMoney(nSubsidy).c_str(), nCoinAge);\n \n     return nSubsidy;\n }\n@@ -2071,7 +2071,7 @@ bool CBlock::AddToBlockIndex(unsigned int nFile, unsigned int nBlockPos)\n     pindexNew->SetStakeModifier(nStakeModifier, fGeneratedStakeModifier);\n     pindexNew->nStakeModifierChecksum = GetStakeModifierChecksum(pindexNew);\n \tif (!CheckStakeModifierCheckpoints(pindexNew->nHeight, pindexNew->nStakeModifierChecksum))\n-        return error(\"AddToBlockIndex() : Rejected by stake modifier checkpoint height=%d, modifier=0x%016\"PRIx64, pindexNew->nHeight, nStakeModifier);\n+        return error(\"AddToBlockIndex() : Rejected by stake modifier checkpoint height=%d, modifier=0x%016\" PRIx64, pindexNew->nHeight, nStakeModifier);\n \n     // Add to mapBlockIndex\n     map<uint256, CBlockIndex*>::iterator mi = mapBlockIndex.insert(make_pair(hash, pindexNew)).first;"
      }
    ]
  },
  {
    "sha": "a531a3a4093e28ce71c05a79b4988c2520091cee",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNTMxYTNhNDA5M2UyOGNlNzFjMDVhNzliNDk4OGMyNTIwMDkxY2Vl",
    "commit": {
      "author": {
        "name": "Laser9un",
        "email": "laser9un@gmail.com",
        "date": "2017-01-19T13:41:33Z"
      },
      "committer": {
        "name": "Laser9un",
        "email": "laser9un@gmail.com",
        "date": "2017-01-19T13:41:33Z"
      },
      "message": "42-qt.pro: Change the link for macxBDB_LIB_PATH",
      "tree": {
        "sha": "e9785b40effe31f5bb4eb2ea70fbdde350881b1c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e9785b40effe31f5bb4eb2ea70fbdde350881b1c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a531a3a4093e28ce71c05a79b4988c2520091cee",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a531a3a4093e28ce71c05a79b4988c2520091cee",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a531a3a4093e28ce71c05a79b4988c2520091cee",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a531a3a4093e28ce71c05a79b4988c2520091cee/comments",
    "author": {
      "login": "Laser9un",
      "id": 16782409,
      "node_id": "MDQ6VXNlcjE2NzgyNDA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16782409?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Laser9un",
      "html_url": "https://github.com/Laser9un",
      "followers_url": "https://api.github.com/users/Laser9un/followers",
      "following_url": "https://api.github.com/users/Laser9un/following{/other_user}",
      "gists_url": "https://api.github.com/users/Laser9un/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Laser9un/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Laser9un/subscriptions",
      "organizations_url": "https://api.github.com/users/Laser9un/orgs",
      "repos_url": "https://api.github.com/users/Laser9un/repos",
      "events_url": "https://api.github.com/users/Laser9un/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Laser9un/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Laser9un",
      "id": 16782409,
      "node_id": "MDQ6VXNlcjE2NzgyNDA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16782409?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Laser9un",
      "html_url": "https://github.com/Laser9un",
      "followers_url": "https://api.github.com/users/Laser9un/followers",
      "following_url": "https://api.github.com/users/Laser9un/following{/other_user}",
      "gists_url": "https://api.github.com/users/Laser9un/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Laser9un/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Laser9un/subscriptions",
      "organizations_url": "https://api.github.com/users/Laser9un/orgs",
      "repos_url": "https://api.github.com/users/Laser9un/repos",
      "events_url": "https://api.github.com/users/Laser9un/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Laser9un/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "909973026b4395221b10d8872ddb0a4200b236cf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/909973026b4395221b10d8872ddb0a4200b236cf",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/909973026b4395221b10d8872ddb0a4200b236cf"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "4ea10d563f2fcc3dff28ae72f48c7cb81df61b5c",
        "filename": "42-qt.pro",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a531a3a4093e28ce71c05a79b4988c2520091cee/42-qt.pro",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a531a3a4093e28ce71c05a79b4988c2520091cee/42-qt.pro",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/42-qt.pro?ref=a531a3a4093e28ce71c05a79b4988c2520091cee",
        "patch": "@@ -23,7 +23,7 @@ win32-g++-cross: QMAKE_TARGET.arch = $$TARGET_PLATFORM\n # use: qmake BOOST_LIB_SUFFIX=-mt\n # for boost thread win32 with _win32 sufix\n # use: BOOST_THREAD_LIB_SUFFIX=_win32-...\n-# or when linking against a specific BerkelyDB version: BDB_LIB_SUFFIX=-6.1\n+# or when linking against a specific BerkelyDB version: BDB_LIB_SUFFIX=-6.0\n \n # Dependency library locations can be customized with:\n #    BOOST_INCLUDE_PATH, BOOST_LIB_PATH, BDB_INCLUDE_PATH,\n@@ -426,7 +426,7 @@ isEmpty(BOOST_THREAD_LIB_SUFFIX) {\n }\n \n isEmpty(BDB_LIB_PATH) {\n-    macx:BDB_LIB_PATH = /usr/local/BerkeleyDB.6.1/lib\n+    macx:BDB_LIB_PATH = /opt/local/lib/db60\n }\n \n isEmpty(OPENSSL_LIB_PATH) {"
      }
    ]
  },
  {
    "sha": "6366236c6d674a17768dad5e74967f368ab044db",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2MzY2MjM2YzZkNjc0YTE3NzY4ZGFkNWU3NDk2N2YzNjhhYjA0NGRi",
    "commit": {
      "author": {
        "name": "Laser9un",
        "email": "laser9un@gmail.com",
        "date": "2017-01-26T18:03:24Z"
      },
      "committer": {
        "name": "Laser9un",
        "email": "laser9un@gmail.com",
        "date": "2017-01-26T18:03:24Z"
      },
      "message": "Clarify a license of the main logo",
      "tree": {
        "sha": "222b6db9096e3e2608946503ff42e2ace22eb5d3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/222b6db9096e3e2608946503ff42e2ace22eb5d3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6366236c6d674a17768dad5e74967f368ab044db",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6366236c6d674a17768dad5e74967f368ab044db",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6366236c6d674a17768dad5e74967f368ab044db",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6366236c6d674a17768dad5e74967f368ab044db/comments",
    "author": {
      "login": "Laser9un",
      "id": 16782409,
      "node_id": "MDQ6VXNlcjE2NzgyNDA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16782409?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Laser9un",
      "html_url": "https://github.com/Laser9un",
      "followers_url": "https://api.github.com/users/Laser9un/followers",
      "following_url": "https://api.github.com/users/Laser9un/following{/other_user}",
      "gists_url": "https://api.github.com/users/Laser9un/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Laser9un/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Laser9un/subscriptions",
      "organizations_url": "https://api.github.com/users/Laser9un/orgs",
      "repos_url": "https://api.github.com/users/Laser9un/repos",
      "events_url": "https://api.github.com/users/Laser9un/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Laser9un/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Laser9un",
      "id": 16782409,
      "node_id": "MDQ6VXNlcjE2NzgyNDA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16782409?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Laser9un",
      "html_url": "https://github.com/Laser9un",
      "followers_url": "https://api.github.com/users/Laser9un/followers",
      "following_url": "https://api.github.com/users/Laser9un/following{/other_user}",
      "gists_url": "https://api.github.com/users/Laser9un/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Laser9un/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Laser9un/subscriptions",
      "organizations_url": "https://api.github.com/users/Laser9un/orgs",
      "repos_url": "https://api.github.com/users/Laser9un/repos",
      "events_url": "https://api.github.com/users/Laser9un/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Laser9un/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a531a3a4093e28ce71c05a79b4988c2520091cee",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a531a3a4093e28ce71c05a79b4988c2520091cee",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a531a3a4093e28ce71c05a79b4988c2520091cee"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 5,
      "deletions": 1
    },
    "files": [
      {
        "sha": "9e4019888fd98888e7cb3eb1e1ae6f7910836a09",
        "filename": "doc/assets-attribution.txt",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6366236c6d674a17768dad5e74967f368ab044db/doc/assets-attribution.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6366236c6d674a17768dad5e74967f368ab044db/doc/assets-attribution.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/assets-attribution.txt?ref=6366236c6d674a17768dad5e74967f368ab044db",
        "patch": "@@ -50,3 +50,7 @@ Designer: Crobbo (forum)\n Site: https://bitcointalk.org/index.php?topic=32273.0\n License: Public domain\n \n+42-coin Logo\n+Designer: aelpop (forum)\n+Site: https://bitcointalk.org/index.php?topic=399658.msg4426031#msg4426031\n+License: Creative Commons Attribution 4.0 International License\n\\ No newline at end of file"
      },
      {
        "sha": "eca4b1741fced82f581c00dc3b5fb4ab900942eb",
        "filename": "src/qt/forms/aboutdialog.ui",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6366236c6d674a17768dad5e74967f368ab044db/src/qt/forms/aboutdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6366236c6d674a17768dad5e74967f368ab044db/src/qt/forms/aboutdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/aboutdialog.ui?ref=6366236c6d674a17768dad5e74967f368ab044db",
        "patch": "@@ -112,7 +112,7 @@ Copyright \u00a9 2016-2017 The 42 developers</string>\n         <cursorShape>IBeamCursor</cursorShape>\n        </property>\n        <property name=\"text\">\n-        <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;br/&gt;This is experimental software.&lt;/p&gt;&lt;p&gt;Distributed under the MIT/X11 software license, see the accompanying file COPYING or &lt;br/&gt;&lt;a href=&quot;http://www.opensource.org/licenses/mit-license.php&quot;&gt;&lt;span style=&quot; text-decoration: underline; color:#0000ff;&quot;&gt;http://www.opensource.org/licenses/mit-license.php&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;Main icon was designed by VisualPharm.com (&lt;a href=&quot;mailto:team@visualpharm.com&quot;&gt;&lt;span style=&quot; text-decoration: underline; color:#0000ff;&quot;&gt;team@visualpharm.com&lt;/span&gt;&lt;/a&gt;). This product also includes software developed by the OpenSSL Project for use in the OpenSSL Toolkit (&lt;a href=&quot;http://www.openssl.org/&quot;&gt;&lt;span style=&quot; text-decoration: underline; color:#0000ff;&quot;&gt;http://www.openssl.org/&lt;/span&gt;&lt;/a&gt;) and cryptographic software written by Eric Young (&lt;a href=&quot;mailto:eay@cryptsoft.com&quot;&gt;&lt;span style=&quot; text-decoration: underline; color:#0000ff;&quot;&gt;eay@cryptsoft.com&lt;/span&gt;&lt;/a&gt;).&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>\n+        <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;br/&gt;This is experimental software.&lt;/p&gt;&lt;p&gt;Distributed under the MIT/X11 software license, see the accompanying file COPYING or &lt;br/&gt;&lt;a href=&quot;http://www.opensource.org/licenses/mit-license.php&quot;&gt;&lt;span style=&quot; text-decoration: underline; color:#0000ff;&quot;&gt;http://www.opensource.org/licenses/mit-license.php&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;&lt;p&gt; This product includes software developed by the OpenSSL Project for use in the OpenSSL Toolkit (&lt;a href=&quot;http://www.openssl.org/&quot;&gt;&lt;span style=&quot; text-decoration: underline; color:#0000ff;&quot;&gt;http://www.openssl.org/&lt;/span&gt;&lt;/a&gt;) and cryptographic software written by Eric Young (&lt;a href=&quot;mailto:eay@cryptsoft.com&quot;&gt;&lt;span style=&quot; text-decoration: underline; color:#0000ff;&quot;&gt;eay@cryptsoft.com&lt;/span&gt;&lt;/a&gt;).&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>\n        </property>\n        <property name=\"wordWrap\">\n         <bool>true</bool>"
      }
    ]
  },
  {
    "sha": "b05c30f3d1f2ded19c626cd0b03126ea885b3473",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMDVjMzBmM2QxZjJkZWQxOWM2MjZjZDBiMDMxMjZlYTg4NWIzNDcz",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2017-02-10T08:51:12Z"
      },
      "committer": {
        "name": "Laser9un",
        "email": "laser9un@gmail.com",
        "date": "2017-02-10T08:51:12Z"
      },
      "message": "Clear history when using clear button in RPC console",
      "tree": {
        "sha": "f28ac78128d6eb403fa9e523a7c2c2af9551e6d4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f28ac78128d6eb403fa9e523a7c2c2af9551e6d4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b05c30f3d1f2ded19c626cd0b03126ea885b3473",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b05c30f3d1f2ded19c626cd0b03126ea885b3473",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b05c30f3d1f2ded19c626cd0b03126ea885b3473",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b05c30f3d1f2ded19c626cd0b03126ea885b3473/comments",
    "author": null,
    "committer": {
      "login": "Laser9un",
      "id": 16782409,
      "node_id": "MDQ6VXNlcjE2NzgyNDA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16782409?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Laser9un",
      "html_url": "https://github.com/Laser9un",
      "followers_url": "https://api.github.com/users/Laser9un/followers",
      "following_url": "https://api.github.com/users/Laser9un/following{/other_user}",
      "gists_url": "https://api.github.com/users/Laser9un/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Laser9un/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Laser9un/subscriptions",
      "organizations_url": "https://api.github.com/users/Laser9un/orgs",
      "repos_url": "https://api.github.com/users/Laser9un/repos",
      "events_url": "https://api.github.com/users/Laser9un/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Laser9un/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6366236c6d674a17768dad5e74967f368ab044db",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6366236c6d674a17768dad5e74967f368ab044db",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6366236c6d674a17768dad5e74967f368ab044db"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 2,
      "deletions": 0
    },
    "files": [
      {
        "sha": "be0ac67ad6cb57f98c0f41dc02782465b4980eb3",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b05c30f3d1f2ded19c626cd0b03126ea885b3473/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b05c30f3d1f2ded19c626cd0b03126ea885b3473/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=b05c30f3d1f2ded19c626cd0b03126ea885b3473",
        "patch": "@@ -299,6 +299,8 @@ static QString categoryClass(int category)\n void RPCConsole::clear()\n {\n     ui->messagesWidget->clear();\n+\thistory.clear();\n+\thistoryPtr = 0;\n     ui->lineEdit->clear();\n     ui->lineEdit->setFocus();\n "
      }
    ]
  },
  {
    "sha": "8c823f2c80dea3e288ceae1399b703fa75a89f49",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4YzgyM2YyYzgwZGVhM2UyODhjZWFlMTM5OWI3MDNmYTc1YTg5ZjQ5",
    "commit": {
      "author": {
        "name": "Laser9un",
        "email": "laser9un@gmail.com",
        "date": "2017-02-17T13:26:45Z"
      },
      "committer": {
        "name": "Laser9un",
        "email": "laser9un@gmail.com",
        "date": "2017-02-17T13:26:45Z"
      },
      "message": "Upd. an example in the second auth. dialog",
      "tree": {
        "sha": "0ec96b239dd71c626982a7bbef7f985c3f26180f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0ec96b239dd71c626982a7bbef7f985c3f26180f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8c823f2c80dea3e288ceae1399b703fa75a89f49",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8c823f2c80dea3e288ceae1399b703fa75a89f49",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8c823f2c80dea3e288ceae1399b703fa75a89f49",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8c823f2c80dea3e288ceae1399b703fa75a89f49/comments",
    "author": {
      "login": "Laser9un",
      "id": 16782409,
      "node_id": "MDQ6VXNlcjE2NzgyNDA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16782409?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Laser9un",
      "html_url": "https://github.com/Laser9un",
      "followers_url": "https://api.github.com/users/Laser9un/followers",
      "following_url": "https://api.github.com/users/Laser9un/following{/other_user}",
      "gists_url": "https://api.github.com/users/Laser9un/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Laser9un/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Laser9un/subscriptions",
      "organizations_url": "https://api.github.com/users/Laser9un/orgs",
      "repos_url": "https://api.github.com/users/Laser9un/repos",
      "events_url": "https://api.github.com/users/Laser9un/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Laser9un/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Laser9un",
      "id": 16782409,
      "node_id": "MDQ6VXNlcjE2NzgyNDA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16782409?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Laser9un",
      "html_url": "https://github.com/Laser9un",
      "followers_url": "https://api.github.com/users/Laser9un/followers",
      "following_url": "https://api.github.com/users/Laser9un/following{/other_user}",
      "gists_url": "https://api.github.com/users/Laser9un/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Laser9un/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Laser9un/subscriptions",
      "organizations_url": "https://api.github.com/users/Laser9un/orgs",
      "repos_url": "https://api.github.com/users/Laser9un/repos",
      "events_url": "https://api.github.com/users/Laser9un/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Laser9un/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b05c30f3d1f2ded19c626cd0b03126ea885b3473",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b05c30f3d1f2ded19c626cd0b03126ea885b3473",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b05c30f3d1f2ded19c626cd0b03126ea885b3473"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "c709ce4a7259db5dc690842336fbb96aa51be712",
        "filename": "src/qt/forms/secondauthdialog.ui",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8c823f2c80dea3e288ceae1399b703fa75a89f49/src/qt/forms/secondauthdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8c823f2c80dea3e288ceae1399b703fa75a89f49/src/qt/forms/secondauthdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/secondauthdialog.ui?ref=8c823f2c80dea3e288ceae1399b703fa75a89f49",
        "patch": "@@ -35,7 +35,7 @@\n      <item>\n       <widget class=\"QValidatedLineEdit\" name=\"addressIn\">\n        <property name=\"toolTip\">\n-        <string>The address for authentification (e.g. 4Zo1ga6xuKuQ7JV7M9rGDoxdbYwV5zgQJ5)</string>\n+        <string>The address for authentification (e.g. 4VsEs7wqRpoiTpmqViWRtse1P3CNgvBw4g)</string>\n        </property>\n        <property name=\"maxLength\">\n         <number>34</number>"
      },
      {
        "sha": "0e1a2ed3da9be55b8a5f3bb8aaf9e3988e8e3eb7",
        "filename": "src/qt/secondauthdialog.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8c823f2c80dea3e288ceae1399b703fa75a89f49/src/qt/secondauthdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8c823f2c80dea3e288ceae1399b703fa75a89f49/src/qt/secondauthdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/secondauthdialog.cpp?ref=8c823f2c80dea3e288ceae1399b703fa75a89f49",
        "patch": "@@ -26,7 +26,7 @@ SecondAuthDialog::SecondAuthDialog(QWidget *parent) :\n \n #if (QT_VERSION >= 0x040700)\n     /* Do not move this to the XML file, Qt before 4.7 will choke on it */\n-    ui->addressIn->setPlaceholderText(tr(\"Enter a NovaCoin address (e.g. 4Zo1ga6xuKuQ7JV7M9rGDoxdbYwV5zgQJ5)\"));\n+    ui->addressIn->setPlaceholderText(tr(\"Enter a NovaCoin address (e.g. 4VsEs7wqRpoiTpmqViWRtse1P3CNgvBw4g)\"));\n     ui->signatureOut->setPlaceholderText(tr(\"Click \\\"Sign data\\\" to generate signature\"));\n #endif\n "
      }
    ]
  },
  {
    "sha": "94f1854a4e3f1355f8f5eaa7ea084a4436f781d9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5NGYxODU0YTRlM2YxMzU1ZjhmNWVhYTdlYTA4NGE0NDM2Zjc4MWQ5",
    "commit": {
      "author": {
        "name": "Laser9un",
        "email": "laser9un@gmail.com",
        "date": "2017-02-25T19:14:09Z"
      },
      "committer": {
        "name": "Laser9un",
        "email": "laser9un@gmail.com",
        "date": "2017-02-25T19:14:09Z"
      },
      "message": "Increase max offset time for the MedianTimePast",
      "tree": {
        "sha": "f086e8feafcb777ad0231429e0de0269df504699",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f086e8feafcb777ad0231429e0de0269df504699"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/94f1854a4e3f1355f8f5eaa7ea084a4436f781d9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/94f1854a4e3f1355f8f5eaa7ea084a4436f781d9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/94f1854a4e3f1355f8f5eaa7ea084a4436f781d9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/94f1854a4e3f1355f8f5eaa7ea084a4436f781d9/comments",
    "author": {
      "login": "Laser9un",
      "id": 16782409,
      "node_id": "MDQ6VXNlcjE2NzgyNDA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16782409?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Laser9un",
      "html_url": "https://github.com/Laser9un",
      "followers_url": "https://api.github.com/users/Laser9un/followers",
      "following_url": "https://api.github.com/users/Laser9un/following{/other_user}",
      "gists_url": "https://api.github.com/users/Laser9un/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Laser9un/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Laser9un/subscriptions",
      "organizations_url": "https://api.github.com/users/Laser9un/orgs",
      "repos_url": "https://api.github.com/users/Laser9un/repos",
      "events_url": "https://api.github.com/users/Laser9un/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Laser9un/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Laser9un",
      "id": 16782409,
      "node_id": "MDQ6VXNlcjE2NzgyNDA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16782409?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Laser9un",
      "html_url": "https://github.com/Laser9un",
      "followers_url": "https://api.github.com/users/Laser9un/followers",
      "following_url": "https://api.github.com/users/Laser9un/following{/other_user}",
      "gists_url": "https://api.github.com/users/Laser9un/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Laser9un/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Laser9un/subscriptions",
      "organizations_url": "https://api.github.com/users/Laser9un/orgs",
      "repos_url": "https://api.github.com/users/Laser9un/repos",
      "events_url": "https://api.github.com/users/Laser9un/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Laser9un/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8c823f2c80dea3e288ceae1399b703fa75a89f49",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8c823f2c80dea3e288ceae1399b703fa75a89f49",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8c823f2c80dea3e288ceae1399b703fa75a89f49"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "311c1a968761dc8fd4152a240982a3661270cd6c",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/94f1854a4e3f1355f8f5eaa7ea084a4436f781d9/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/94f1854a4e3f1355f8f5eaa7ea084a4436f781d9/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=94f1854a4e3f1355f8f5eaa7ea084a4436f781d9",
        "patch": "@@ -2239,7 +2239,7 @@ bool CBlock::AcceptBlock()\n         return DoS(100, error(\"AcceptBlock() : incorrect %s\", IsProofOfWork() ? \"proof-of-work\" : \"proof-of-stake\"));\n \n     int64_t nMedianTimePast = pindexPrev->GetMedianTimePast();\n-    int nMaxOffset = 12 * nOneHour; // 12 hours\n+    int nMaxOffset = 42 * nOneHour; // 42 hours\n     if (fTestNet || pindexPrev->nTime < 1450569600)\n         nMaxOffset = 7 * nOneWeek; // One week\n "
      }
    ]
  },
  {
    "sha": "29d82edd7623f20e7fb7fe846bbe7aa6b9f5c814",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyOWQ4MmVkZDc2MjNmMjBlN2ZiN2ZlODQ2YmJlN2FhNmI5ZjVjODE0",
    "commit": {
      "author": {
        "name": "Laser9un",
        "email": "laser9un@gmail.com",
        "date": "2017-03-09T17:41:22Z"
      },
      "committer": {
        "name": "Laser9un",
        "email": "laser9un@gmail.com",
        "date": "2017-03-09T17:41:22Z"
      },
      "message": "Make max PoS age unlimited",
      "tree": {
        "sha": "2d2cfe42e83267b20e32e1e132e28ac0a7e2ea33",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2d2cfe42e83267b20e32e1e132e28ac0a7e2ea33"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/29d82edd7623f20e7fb7fe846bbe7aa6b9f5c814",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/29d82edd7623f20e7fb7fe846bbe7aa6b9f5c814",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/29d82edd7623f20e7fb7fe846bbe7aa6b9f5c814",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/29d82edd7623f20e7fb7fe846bbe7aa6b9f5c814/comments",
    "author": {
      "login": "Laser9un",
      "id": 16782409,
      "node_id": "MDQ6VXNlcjE2NzgyNDA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16782409?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Laser9un",
      "html_url": "https://github.com/Laser9un",
      "followers_url": "https://api.github.com/users/Laser9un/followers",
      "following_url": "https://api.github.com/users/Laser9un/following{/other_user}",
      "gists_url": "https://api.github.com/users/Laser9un/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Laser9un/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Laser9un/subscriptions",
      "organizations_url": "https://api.github.com/users/Laser9un/orgs",
      "repos_url": "https://api.github.com/users/Laser9un/repos",
      "events_url": "https://api.github.com/users/Laser9un/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Laser9un/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Laser9un",
      "id": 16782409,
      "node_id": "MDQ6VXNlcjE2NzgyNDA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16782409?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Laser9un",
      "html_url": "https://github.com/Laser9un",
      "followers_url": "https://api.github.com/users/Laser9un/followers",
      "following_url": "https://api.github.com/users/Laser9un/following{/other_user}",
      "gists_url": "https://api.github.com/users/Laser9un/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Laser9un/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Laser9un/subscriptions",
      "organizations_url": "https://api.github.com/users/Laser9un/orgs",
      "repos_url": "https://api.github.com/users/Laser9un/repos",
      "events_url": "https://api.github.com/users/Laser9un/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Laser9un/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "94f1854a4e3f1355f8f5eaa7ea084a4436f781d9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/94f1854a4e3f1355f8f5eaa7ea084a4436f781d9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/94f1854a4e3f1355f8f5eaa7ea084a4436f781d9"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "3d322a5db8cada7b1ddb491cb32a602ced12bf5d",
        "filename": "README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/29d82edd7623f20e7fb7fe846bbe7aa6b9f5c814/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/29d82edd7623f20e7fb7fe846bbe7aa6b9f5c814/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/README.md?ref=29d82edd7623f20e7fb7fe846bbe7aa6b9f5c814",
        "patch": "@@ -13,7 +13,7 @@ Specifications\n - Number of block confirmation: 42\n - PoS reward: 0 coin\n - Min stake age: 42 hours\n-- Max stake age: 420 days\n+- Max stake age: unlimited\n - PoS target spacing: 7 minutes\n - PoW algo type: Scrypt\n - PoW reward: 0 coin + tx fees"
      },
      {
        "sha": "459547ec0396d36542c9df056d0dd250df4639b9",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/29d82edd7623f20e7fb7fe846bbe7aa6b9f5c814/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/29d82edd7623f20e7fb7fe846bbe7aa6b9f5c814/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=29d82edd7623f20e7fb7fe846bbe7aa6b9f5c814",
        "patch": "@@ -40,7 +40,7 @@ uint256 nPoWBase = uint256(\"0x00000000ffff00000000000000000000000000000000000000\n CBigNum bnProofOfWorkLimitTestNet(~uint256(0) >> 16);\n \n unsigned int nStakeMinAge = 42 * nOneHour; // 42 hours as zero time weight\n-unsigned int nStakeMaxAge = 420 * nOneDay; // 420 days as full weight\n+unsigned int nStakeMaxAge = -1; // unlimited full weight\n unsigned int nStakeTargetSpacing = 7 * 60; // 7-minutes stakes spacing\n unsigned int nModifierInterval = 7 * 60; // time to elapse before new modifier is computed\n int nCoinbaseMaturity = 22;"
      }
    ]
  },
  {
    "sha": "c12a04b74a87f6b186bbb82df4e6114e73537194",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjMTJhMDRiNzRhODdmNmIxODZiYmI4MmRmNGU2MTE0ZTczNTM3MTk0",
    "commit": {
      "author": {
        "name": "Laser9un",
        "email": "laser9un@gmail.com",
        "date": "2017-03-20T21:11:58Z"
      },
      "committer": {
        "name": "Laser9un",
        "email": "laser9un@gmail.com",
        "date": "2017-03-20T21:11:58Z"
      },
      "message": "Update debian/copyright",
      "tree": {
        "sha": "8971ce3dee0221e01b2c8715238b92e38d700723",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8971ce3dee0221e01b2c8715238b92e38d700723"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c12a04b74a87f6b186bbb82df4e6114e73537194",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c12a04b74a87f6b186bbb82df4e6114e73537194",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c12a04b74a87f6b186bbb82df4e6114e73537194",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c12a04b74a87f6b186bbb82df4e6114e73537194/comments",
    "author": {
      "login": "Laser9un",
      "id": 16782409,
      "node_id": "MDQ6VXNlcjE2NzgyNDA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16782409?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Laser9un",
      "html_url": "https://github.com/Laser9un",
      "followers_url": "https://api.github.com/users/Laser9un/followers",
      "following_url": "https://api.github.com/users/Laser9un/following{/other_user}",
      "gists_url": "https://api.github.com/users/Laser9un/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Laser9un/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Laser9un/subscriptions",
      "organizations_url": "https://api.github.com/users/Laser9un/orgs",
      "repos_url": "https://api.github.com/users/Laser9un/repos",
      "events_url": "https://api.github.com/users/Laser9un/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Laser9un/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Laser9un",
      "id": 16782409,
      "node_id": "MDQ6VXNlcjE2NzgyNDA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16782409?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Laser9un",
      "html_url": "https://github.com/Laser9un",
      "followers_url": "https://api.github.com/users/Laser9un/followers",
      "following_url": "https://api.github.com/users/Laser9un/following{/other_user}",
      "gists_url": "https://api.github.com/users/Laser9un/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Laser9un/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Laser9un/subscriptions",
      "organizations_url": "https://api.github.com/users/Laser9un/orgs",
      "repos_url": "https://api.github.com/users/Laser9un/repos",
      "events_url": "https://api.github.com/users/Laser9un/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Laser9un/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "29d82edd7623f20e7fb7fe846bbe7aa6b9f5c814",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/29d82edd7623f20e7fb7fe846bbe7aa6b9f5c814",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/29d82edd7623f20e7fb7fe846bbe7aa6b9f5c814"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "2ff8940cff779cbbfac2d228efd3293ef627d140",
        "filename": "contrib/debian/copyright",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c12a04b74a87f6b186bbb82df4e6114e73537194/contrib/debian/copyright",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c12a04b74a87f6b186bbb82df4e6114e73537194/contrib/debian/copyright",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/copyright?ref=c12a04b74a87f6b186bbb82df4e6114e73537194",
        "patch": "@@ -3,11 +3,11 @@ Upstream-Name: 42\n Upstream-Source: https://github.com/42-coin/42\n \n Files: *\n-Copyright: 2016, 42 Developers\n+Copyright: 2016-2017, 42 Developers\n License: Expat\n \n Files: *\n-Copyright: 2012-2015, Novacoin Developers\n+Copyright: 2012-2016, Novacoin Developers\n License: Expat\n \n Files: *"
      }
    ]
  },
  {
    "sha": "64af179d858ef4d1448c19b255bca607843c294a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2NGFmMTc5ZDg1OGVmNGQxNDQ4YzE5YjI1NWJjYTYwNzg0M2MyOTRh",
    "commit": {
      "author": {
        "name": "Laser9un",
        "email": "laser9un@gmail.com",
        "date": "2017-04-13T19:53:21Z"
      },
      "committer": {
        "name": "Laser9un",
        "email": "laser9un@gmail.com",
        "date": "2017-04-13T19:53:21Z"
      },
      "message": "RPC: fix \"Invalid 42 address\" error\n\nhttps://bitcointalk.org/index.php?topic=1502028.msg18565832#msg18565832",
      "tree": {
        "sha": "74f81785c862abcf31e1c44583566a5594ecc6d7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/74f81785c862abcf31e1c44583566a5594ecc6d7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/64af179d858ef4d1448c19b255bca607843c294a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/64af179d858ef4d1448c19b255bca607843c294a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/64af179d858ef4d1448c19b255bca607843c294a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/64af179d858ef4d1448c19b255bca607843c294a/comments",
    "author": {
      "login": "Laser9un",
      "id": 16782409,
      "node_id": "MDQ6VXNlcjE2NzgyNDA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16782409?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Laser9un",
      "html_url": "https://github.com/Laser9un",
      "followers_url": "https://api.github.com/users/Laser9un/followers",
      "following_url": "https://api.github.com/users/Laser9un/following{/other_user}",
      "gists_url": "https://api.github.com/users/Laser9un/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Laser9un/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Laser9un/subscriptions",
      "organizations_url": "https://api.github.com/users/Laser9un/orgs",
      "repos_url": "https://api.github.com/users/Laser9un/repos",
      "events_url": "https://api.github.com/users/Laser9un/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Laser9un/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Laser9un",
      "id": 16782409,
      "node_id": "MDQ6VXNlcjE2NzgyNDA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16782409?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Laser9un",
      "html_url": "https://github.com/Laser9un",
      "followers_url": "https://api.github.com/users/Laser9un/followers",
      "following_url": "https://api.github.com/users/Laser9un/following{/other_user}",
      "gists_url": "https://api.github.com/users/Laser9un/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Laser9un/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Laser9un/subscriptions",
      "organizations_url": "https://api.github.com/users/Laser9un/orgs",
      "repos_url": "https://api.github.com/users/Laser9un/repos",
      "events_url": "https://api.github.com/users/Laser9un/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Laser9un/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c12a04b74a87f6b186bbb82df4e6114e73537194",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c12a04b74a87f6b186bbb82df4e6114e73537194",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c12a04b74a87f6b186bbb82df4e6114e73537194"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "64b5f39e9931cdee30d25b722ab23e74cd3f0f3a",
        "filename": "src/rpcwallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/64af179d858ef4d1448c19b255bca607843c294a/src/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/64af179d858ef4d1448c19b255bca607843c294a/src/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.cpp?ref=64af179d858ef4d1448c19b255bca607843c294a",
        "patch": "@@ -704,7 +704,7 @@ Value sendfrom(const Array& params, bool fHelp)\n \n     // Parse address\n     CScript scriptPubKey;\n-    string strAddress = params[0].get_str();\n+    string strAddress = params[1].get_str();\n \n     CBitcoinAddress address(strAddress);\n     if (address.IsValid())"
      }
    ]
  },
  {
    "sha": "70f0043d2fea5626c46cb7539758d97e6cbe3b33",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3MGYwMDQzZDJmZWE1NjI2YzQ2Y2I3NTM5NzU4ZDk3ZTZjYmUzYjMz",
    "commit": {
      "author": {
        "name": "Laser9un",
        "email": "laser9un@gmail.com",
        "date": "2017-04-17T16:32:14Z"
      },
      "committer": {
        "name": "Laser9un",
        "email": "laser9un@gmail.com",
        "date": "2017-04-17T16:32:14Z"
      },
      "message": "Update doc: building 42d and 42-qt under Windows with MinGW",
      "tree": {
        "sha": "8ea8a91c2227cd00ff22d651128b98e56139497a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8ea8a91c2227cd00ff22d651128b98e56139497a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/70f0043d2fea5626c46cb7539758d97e6cbe3b33",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/70f0043d2fea5626c46cb7539758d97e6cbe3b33",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/70f0043d2fea5626c46cb7539758d97e6cbe3b33",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/70f0043d2fea5626c46cb7539758d97e6cbe3b33/comments",
    "author": {
      "login": "Laser9un",
      "id": 16782409,
      "node_id": "MDQ6VXNlcjE2NzgyNDA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16782409?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Laser9un",
      "html_url": "https://github.com/Laser9un",
      "followers_url": "https://api.github.com/users/Laser9un/followers",
      "following_url": "https://api.github.com/users/Laser9un/following{/other_user}",
      "gists_url": "https://api.github.com/users/Laser9un/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Laser9un/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Laser9un/subscriptions",
      "organizations_url": "https://api.github.com/users/Laser9un/orgs",
      "repos_url": "https://api.github.com/users/Laser9un/repos",
      "events_url": "https://api.github.com/users/Laser9un/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Laser9un/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Laser9un",
      "id": 16782409,
      "node_id": "MDQ6VXNlcjE2NzgyNDA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16782409?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Laser9un",
      "html_url": "https://github.com/Laser9un",
      "followers_url": "https://api.github.com/users/Laser9un/followers",
      "following_url": "https://api.github.com/users/Laser9un/following{/other_user}",
      "gists_url": "https://api.github.com/users/Laser9un/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Laser9un/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Laser9un/subscriptions",
      "organizations_url": "https://api.github.com/users/Laser9un/orgs",
      "repos_url": "https://api.github.com/users/Laser9un/repos",
      "events_url": "https://api.github.com/users/Laser9un/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Laser9un/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "64af179d858ef4d1448c19b255bca607843c294a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/64af179d858ef4d1448c19b255bca607843c294a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/64af179d858ef4d1448c19b255bca607843c294a"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 9,
      "deletions": 9
    },
    "files": [
      {
        "sha": "459ce89a99653a71d3f148e0929d02394ded9bb6",
        "filename": "doc/building 42d and 42-qt under Windows with MinGW.txt",
        "status": "modified",
        "additions": 9,
        "deletions": 9,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/70f0043d2fea5626c46cb7539758d97e6cbe3b33/doc/building%2042d%20and%2042-qt%20under%20Windows%20with%20MinGW.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/70f0043d2fea5626c46cb7539758d97e6cbe3b33/doc/building%2042d%20and%2042-qt%20under%20Windows%20with%20MinGW.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/building%2042d%20and%2042-qt%20under%20Windows%20with%20MinGW.txt?ref=70f0043d2fea5626c46cb7539758d97e6cbe3b33",
        "patch": "@@ -126,12 +126,12 @@ mingw32-make\n \n \n Qt4:\n--\u0421\u043a\u0430\u0447\u0430\u0439\u0442\u0435 http://download.qt-project.org/official_releases/qt/4.8/4.8.6/qt-everywhere-opensource-src-4.8.6.zip\n+-\u0421\u043a\u0430\u0447\u0430\u0439\u0442\u0435 http://download.qt-project.org/official_releases/qt/4.8/4.8.7/qt-everywhere-opensource-src-4.8.7.zip\n -\u0420\u0430\u0441\u043f\u0430\u043a\u0443\u0439\u0442\u0435 \u0432 C:\\Qt\n--\u041f\u0435\u0440\u0435\u0438\u043c\u0435\u043d\u0443\u0439\u0442\u0435 \u043f\u0430\u043f\u043a\u0443 qt-everywhere-opensource-src-4.8.6 \u0432 4.8.6\n+-\u041f\u0435\u0440\u0435\u0438\u043c\u0435\u043d\u0443\u0439\u0442\u0435 \u043f\u0430\u043f\u043a\u0443 qt-everywhere-opensource-src-4.8.7 \u0432 4.8.7\n -\u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u043d\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443 Windows \u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u0435 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u043a\u043e\u0434:\n \n-cd C:\\Qt\\4.8.6\n+cd C:\\Qt\\4.8.7\n \n configure -release -opensource -confirm-license -static -no-sql-sqlite -no-qt3support -no-opengl -qt-zlib -no-gif -qt-libpng -qt-libmng -no-libtiff -qt-libjpeg -no-dsp -no-vcproj -no-openssl -no-dbus -no-phonon -no-phonon-backend -no-multimedia -no-audio-backend -no-webkit -no-script -no-scripttools -no-declarative -no-declarative-debug -qt-style-windows -qt-style-windowsxp -qt-style-windowsvista -no-style-plastique -no-style-cleanlooks -no-style-motif -no-style-cde -nomake demos -nomake examples\n \n@@ -239,14 +239,14 @@ mingw32-make -f Makefile.Release\n \n Qt4 + \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u043e\u043d\u043d\u044b\u0439 \u0438\u043d\u0434\u0435\u043a\u0441 BDB\n \n-set PATH=%PATH%;C:\\Qt\\4.8.6\\bin\n+set PATH=%PATH%;C:\\Qt\\4.8.7\\bin\n cd C:\\MyProjects\\42-master\n qmake \"USE_IPV6=1\" \"USE_ASM=1\" 42-qt.pro\n mingw32-make -f Makefile.Release\n \n Qt4 + \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u043e\u043d\u043d\u044b\u0439 \u0438\u043d\u0434\u0435\u043a\u0441 LevelDB\n \n-set PATH=%PATH%;C:\\Qt\\4.8.6\\bin\n+set PATH=%PATH%;C:\\Qt\\4.8.7\\bin\n cd C:\\MyProjects\\42-master\n qmake \"USE_IPV6=1\" \"USE_LEVELDB=1\" \"USE_ASM=1\" 42-qt.pro\n mingw32-make -f Makefile.Release\n@@ -354,9 +354,9 @@ qmake qttranslations.pro\n mingw32-make\n \n Qt4:\n--\u0421\u043a\u0430\u0447\u0430\u0439\u0442\u0435 http://download.qt-project.org/official_releases/qt/4.8/4.8.6/qt-everywhere-opensource-src-4.8.6.zip\n+-\u0421\u043a\u0430\u0447\u0430\u0439\u0442\u0435 http://download.qt-project.org/official_releases/qt/4.8/4.8.7/qt-everywhere-opensource-src-4.8.7.zip\n -\u0420\u0430\u0441\u043f\u0430\u043a\u0443\u0439\u0442\u0435 \u0432 C:\\Qt\n--\u041f\u0435\u0440\u0435\u0438\u043c\u0435\u043d\u0443\u0439\u0442\u0435 \u043f\u0430\u043f\u043a\u0443 qt-everywhere-opensource-src-4.8.6 \u0432 4.8.6-x64\n+-\u041f\u0435\u0440\u0435\u0438\u043c\u0435\u043d\u0443\u0439\u0442\u0435 \u043f\u0430\u043f\u043a\u0443 qt-everywhere-opensource-src-4.8.7 \u0432 4.8.7-x64\n -\u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u043d\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443 Windows \u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u0435 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u043a\u043e\u0434:\n \n configure -release -opensource -confirm-license -static -no-sql-sqlite -no-qt3support -no-opengl -qt-zlib -no-gif -qt-libpng -qt-libmng -no-libtiff -qt-libjpeg -no-dsp -no-vcproj -no-openssl -no-dbus -no-phonon -no-phonon-backend -no-multimedia -no-audio-backend -no-webkit -no-script -no-scripttools -no-declarative -no-declarative-debug -qt-style-windows -qt-style-windowsxp -qt-style-windowsvista -no-style-plastique -no-style-cleanlooks -no-style-motif -no-style-cde -nomake demos -nomake examples\n@@ -434,14 +434,14 @@ mingw32-make -f Makefile.Release\n \n Qt4 + \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u043e\u043d\u043d\u044b\u0439 \u0438\u043d\u0434\u0435\u043a\u0441 BDB\n \n-set PATH=%PATH%;C:\\Qt\\4.8.6-x64\\bin\n+set PATH=%PATH%;C:\\Qt\\4.8.7-x64\\bin\n cd C:\\MyProjects\\42-master\n qmake \"USE_IPV6=1\" \"USE_ASM=1\" 42-qt64.pro\n mingw32-make -f Makefile.Release\n \n Qt4 + \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u043e\u043d\u043d\u044b\u0439 \u0438\u043d\u0434\u0435\u043a\u0441 LevelDB\n \n-set PATH=%PATH%;C:\\Qt\\4.8.6-x64\\bin\n+set PATH=%PATH%;C:\\Qt\\4.8.7-x64\\bin\n cd C:\\MyProjects\\42-master\n qmake \"USE_IPV6=1\" \"USE_LEVELDB=1\" \"USE_ASM=1\" 42-qt64.pro\n mingw32-make -f Makefile.Release"
      }
    ]
  },
  {
    "sha": "7c38b3bbfc743829cf4df5a89d2c135f168bd888",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3YzM4YjNiYmZjNzQzODI5Y2Y0ZGY1YTg5ZDJjMTM1ZjE2OGJkODg4",
    "commit": {
      "author": {
        "name": "Laser9un",
        "email": "laser9un@gmail.com",
        "date": "2017-04-21T19:41:44Z"
      },
      "committer": {
        "name": "Laser9un",
        "email": "laser9un@gmail.com",
        "date": "2017-04-21T19:41:44Z"
      },
      "message": "Add checkpoint @ block # 21000",
      "tree": {
        "sha": "37e5df39d539cf1a493af55cf007c6257d231766",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/37e5df39d539cf1a493af55cf007c6257d231766"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7c38b3bbfc743829cf4df5a89d2c135f168bd888",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7c38b3bbfc743829cf4df5a89d2c135f168bd888",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7c38b3bbfc743829cf4df5a89d2c135f168bd888",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7c38b3bbfc743829cf4df5a89d2c135f168bd888/comments",
    "author": {
      "login": "Laser9un",
      "id": 16782409,
      "node_id": "MDQ6VXNlcjE2NzgyNDA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16782409?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Laser9un",
      "html_url": "https://github.com/Laser9un",
      "followers_url": "https://api.github.com/users/Laser9un/followers",
      "following_url": "https://api.github.com/users/Laser9un/following{/other_user}",
      "gists_url": "https://api.github.com/users/Laser9un/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Laser9un/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Laser9un/subscriptions",
      "organizations_url": "https://api.github.com/users/Laser9un/orgs",
      "repos_url": "https://api.github.com/users/Laser9un/repos",
      "events_url": "https://api.github.com/users/Laser9un/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Laser9un/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Laser9un",
      "id": 16782409,
      "node_id": "MDQ6VXNlcjE2NzgyNDA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16782409?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Laser9un",
      "html_url": "https://github.com/Laser9un",
      "followers_url": "https://api.github.com/users/Laser9un/followers",
      "following_url": "https://api.github.com/users/Laser9un/following{/other_user}",
      "gists_url": "https://api.github.com/users/Laser9un/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Laser9un/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Laser9un/subscriptions",
      "organizations_url": "https://api.github.com/users/Laser9un/orgs",
      "repos_url": "https://api.github.com/users/Laser9un/repos",
      "events_url": "https://api.github.com/users/Laser9un/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Laser9un/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "70f0043d2fea5626c46cb7539758d97e6cbe3b33",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/70f0043d2fea5626c46cb7539758d97e6cbe3b33",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/70f0043d2fea5626c46cb7539758d97e6cbe3b33"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 2,
      "deletions": 0
    },
    "files": [
      {
        "sha": "e5e03f499707fced33df72fede7facd0740f5a95",
        "filename": "src/checkpoints.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7c38b3bbfc743829cf4df5a89d2c135f168bd888/src/checkpoints.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7c38b3bbfc743829cf4df5a89d2c135f168bd888/src/checkpoints.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/checkpoints.cpp?ref=7c38b3bbfc743829cf4df5a89d2c135f168bd888",
        "patch": "@@ -29,6 +29,7 @@ namespace Checkpoints\n         ( 0,      std::make_pair(hashGenesisBlock, 1478980800) )\n \t\t( 420,    std::make_pair(uint256(\"0x00000bc4728eba8caf6ac81c81ce2a95ea69e81fde5e75dbc260690caa6d99af\"), 1479273521) )\n \t\t( 4200,   std::make_pair(uint256(\"0x000000022c3ed3e7c12741177b3ff82d0b0186511a5e864859f8e0d799e61ad5\"), 1481725697) )\n+\t\t( 21000,   std::make_pair(uint256(\"00000009204e1118bfca2a5306c50b070445dc9be370ced87bee522a58b269ad\"), 1492742717) )\n     ;\n \n     static ListBannedBlocks listBanned ="
      },
      {
        "sha": "e042733b2a04d5ad1ec9d471ecf770cf9256cd7d",
        "filename": "src/kernel.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7c38b3bbfc743829cf4df5a89d2c135f168bd888/src/kernel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7c38b3bbfc743829cf4df5a89d2c135f168bd888/src/kernel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/kernel.cpp?ref=7c38b3bbfc743829cf4df5a89d2c135f168bd888",
        "patch": "@@ -34,6 +34,7 @@ static std::map<int, unsigned int> mapStakeModifierCheckpoints =\n         ( 0,     0xfd11f4e7 )\n \t\t( 420,   0x9ccdddaf )\n \t\t( 4200,  0x6cfc8d5b )\n+\t\t( 21000,  0xe32676ac )\n     ;\n \n // Hard checkpoints of stake modifiers to ensure they are deterministic (testNet)"
      }
    ]
  },
  {
    "sha": "27ba8a4da38b81e553fa2944c68eade6bcf435cf",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyN2JhOGE0ZGEzOGI4MWU1NTNmYTI5NDRjNjhlYWRlNmJjZjQzNWNm",
    "commit": {
      "author": {
        "name": "Laser9un",
        "email": "laser9un@gmail.com",
        "date": "2017-04-24T08:25:54Z"
      },
      "committer": {
        "name": "Laser9un",
        "email": "laser9un@gmail.com",
        "date": "2017-04-24T08:25:54Z"
      },
      "message": "Bump version to 0.0.8",
      "tree": {
        "sha": "4fb1547ff10e223384eb5af397bf4b090b5f8a6e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4fb1547ff10e223384eb5af397bf4b090b5f8a6e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/27ba8a4da38b81e553fa2944c68eade6bcf435cf",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/27ba8a4da38b81e553fa2944c68eade6bcf435cf",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/27ba8a4da38b81e553fa2944c68eade6bcf435cf",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/27ba8a4da38b81e553fa2944c68eade6bcf435cf/comments",
    "author": {
      "login": "Laser9un",
      "id": 16782409,
      "node_id": "MDQ6VXNlcjE2NzgyNDA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16782409?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Laser9un",
      "html_url": "https://github.com/Laser9un",
      "followers_url": "https://api.github.com/users/Laser9un/followers",
      "following_url": "https://api.github.com/users/Laser9un/following{/other_user}",
      "gists_url": "https://api.github.com/users/Laser9un/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Laser9un/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Laser9un/subscriptions",
      "organizations_url": "https://api.github.com/users/Laser9un/orgs",
      "repos_url": "https://api.github.com/users/Laser9un/repos",
      "events_url": "https://api.github.com/users/Laser9un/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Laser9un/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Laser9un",
      "id": 16782409,
      "node_id": "MDQ6VXNlcjE2NzgyNDA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16782409?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Laser9un",
      "html_url": "https://github.com/Laser9un",
      "followers_url": "https://api.github.com/users/Laser9un/followers",
      "following_url": "https://api.github.com/users/Laser9un/following{/other_user}",
      "gists_url": "https://api.github.com/users/Laser9un/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Laser9un/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Laser9un/subscriptions",
      "organizations_url": "https://api.github.com/users/Laser9un/orgs",
      "repos_url": "https://api.github.com/users/Laser9un/repos",
      "events_url": "https://api.github.com/users/Laser9un/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Laser9un/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7c38b3bbfc743829cf4df5a89d2c135f168bd888",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7c38b3bbfc743829cf4df5a89d2c135f168bd888",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7c38b3bbfc743829cf4df5a89d2c135f168bd888"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "26aa24976882e52f97167799417a9fbcedec4dc9",
        "filename": "src/clientversion.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/27ba8a4da38b81e553fa2944c68eade6bcf435cf/src/clientversion.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/27ba8a4da38b81e553fa2944c68eade6bcf435cf/src/clientversion.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/clientversion.h?ref=27ba8a4da38b81e553fa2944c68eade6bcf435cf",
        "patch": "@@ -9,7 +9,7 @@\n #define CLIENT_VERSION_MAJOR       0\n #define CLIENT_VERSION_MINOR       7\n #define CLIENT_VERSION_REVISION    6\n-#define CLIENT_VERSION_BUILD       8\n+#define CLIENT_VERSION_BUILD       9\n \n // Converts the parameter X to a string after macro replacement on X has been performed.\n // Don't merge these into one macro!"
      },
      {
        "sha": "69574ada3ab3499373edfc68569a1a91903abbe0",
        "filename": "src/version.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/27ba8a4da38b81e553fa2944c68eade6bcf435cf/src/version.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/27ba8a4da38b81e553fa2944c68eade6bcf435cf/src/version.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/version.h?ref=27ba8a4da38b81e553fa2944c68eade6bcf435cf",
        "patch": "@@ -30,7 +30,7 @@ static const int DATABASE_VERSION = 70507;\n // network protocol versioning\n //\n \n-static const int PROTOCOL_VERSION = 60018;\n+static const int PROTOCOL_VERSION = 60019;\n \n // earlier versions not supported and disconnected\n static const int MIN_PROTO_VERSION = 209;\n@@ -45,6 +45,6 @@ static const int NOBLKS_VERSION_END = 60006;\n \n #define DISPLAY_VERSION_MAJOR       0\n #define DISPLAY_VERSION_MINOR       0\n-#define DISPLAY_VERSION_REVISION    7\n+#define DISPLAY_VERSION_REVISION    8\n \n #endif"
      }
    ]
  },
  {
    "sha": "4344daeb6d063c58f9f9466ac85cf76a65435ddf",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0MzQ0ZGFlYjZkMDYzYzU4ZjlmOTQ2NmFjODVjZjc2YTY1NDM1ZGRm",
    "commit": {
      "author": {
        "name": "Laser9un",
        "email": "laser9un@gmail.com",
        "date": "2017-05-15T10:14:36Z"
      },
      "committer": {
        "name": "Laser9un",
        "email": "laser9un@gmail.com",
        "date": "2017-05-15T10:14:36Z"
      },
      "message": "Update doc: crosscompiling & osx building manuals",
      "tree": {
        "sha": "964d512c968d88d9ff43a1b2ef20fc115e5f766a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/964d512c968d88d9ff43a1b2ef20fc115e5f766a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4344daeb6d063c58f9f9466ac85cf76a65435ddf",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4344daeb6d063c58f9f9466ac85cf76a65435ddf",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4344daeb6d063c58f9f9466ac85cf76a65435ddf",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4344daeb6d063c58f9f9466ac85cf76a65435ddf/comments",
    "author": {
      "login": "Laser9un",
      "id": 16782409,
      "node_id": "MDQ6VXNlcjE2NzgyNDA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16782409?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Laser9un",
      "html_url": "https://github.com/Laser9un",
      "followers_url": "https://api.github.com/users/Laser9un/followers",
      "following_url": "https://api.github.com/users/Laser9un/following{/other_user}",
      "gists_url": "https://api.github.com/users/Laser9un/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Laser9un/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Laser9un/subscriptions",
      "organizations_url": "https://api.github.com/users/Laser9un/orgs",
      "repos_url": "https://api.github.com/users/Laser9un/repos",
      "events_url": "https://api.github.com/users/Laser9un/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Laser9un/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Laser9un",
      "id": 16782409,
      "node_id": "MDQ6VXNlcjE2NzgyNDA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16782409?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Laser9un",
      "html_url": "https://github.com/Laser9un",
      "followers_url": "https://api.github.com/users/Laser9un/followers",
      "following_url": "https://api.github.com/users/Laser9un/following{/other_user}",
      "gists_url": "https://api.github.com/users/Laser9un/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Laser9un/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Laser9un/subscriptions",
      "organizations_url": "https://api.github.com/users/Laser9un/orgs",
      "repos_url": "https://api.github.com/users/Laser9un/repos",
      "events_url": "https://api.github.com/users/Laser9un/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Laser9un/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "27ba8a4da38b81e553fa2944c68eade6bcf435cf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/27ba8a4da38b81e553fa2944c68eade6bcf435cf",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/27ba8a4da38b81e553fa2944c68eade6bcf435cf"
      }
    ],
    "stats": {
      "total": 264,
      "additions": 89,
      "deletions": 175
    },
    "files": [
      {
        "sha": "03fc94c2f9deba0de484a8aa6270fde24df459f1",
        "filename": "doc/build-osx.txt",
        "status": "modified",
        "additions": 26,
        "deletions": 116,
        "changes": 142,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4344daeb6d063c58f9f9466ac85cf76a65435ddf/doc/build-osx.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4344daeb6d063c58f9f9466ac85cf76a65435ddf/doc/build-osx.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-osx.txt?ref=4344daeb6d063c58f9f9466ac85cf76a65435ddf",
        "patch": "@@ -1,136 +1,46 @@\n Mac OS X Build Instructions and Notes\n-====================================\n-This guide will show you how to build 42d(headless client) for OSX.\n+=====================================\n \n-Notes\n------\n+Recommended OS X 10.10 (or higher, 10.11.6 - El Capitan was used in this manual). All of the commands should be executed in a Terminal application. The built-in one is located in /Applications/Utilities. \n \n-* Tested on OS X 10.7 through 10.10 on 64-bit Intel processors only.\n+1. Install Xcode (7.3.1 for El Capital) and accept the license agreement:\n \n-* All of the commands should be executed in a Terminal application. The\n-built-in one is located in `/Applications/Utilities`.\n+https://developer.apple.com/xcode/\n \n-Preparation\n------------\n+Install Xcode command line tools:\n \n-You need to install XCode with all the options checked so that the compiler\n-and everything is available in /usr not just /Developer. XCode should be\n-available on your OS X installation media, but if not, you can get the\n-current version from https://developer.apple.com/xcode/. If you install\n-Xcode 4.3 or later, you'll need to install its command line tools. This can\n-be done in `Xcode > Preferences > Downloads > Components` and generally must\n-be re-done or updated every time Xcode is updated.\n+xcode-select --install\n \n-There's also an assumption that you already have `git` installed. If\n-not, it's the path of least resistance to install [Github for Mac](https://mac.github.com/)\n-(OS X 10.7+) or\n-[Git for OS X](https://code.google.com/p/git-osx-installer/). It is also\n-available via Homebrew.\n+2. Install MacPorts with dependencies:\n \n-You will also need to install [Homebrew](http://brew.sh) in order to install library\n-dependencies.\n+https://distfiles.macports.org/MacPorts/MacPorts-2.3.5-10.11-ElCapitan.pkg\n \n-The installation of the actual dependencies is covered in the Instructions\n-sections below.\n+sudo port install libtool boost db60 openssl qrencode\n \n-Instructions: Homebrew\n-----------------------\n+nano ~/.profile\n+Add these lines:\n+export PATH=$PATH:~/opt/local/lib/db6.0\n+export PATH=$PATH:~/opt/local/lib/db60/include\n \n-#### Install dependencies using Homebrew\n+Ctrl+O, Enter, Ctrl+X\n \n-        brew install autoconf automake libtool boost openssl pkg-config protobuf qt qrencode\n+3. Install Homebrew(http://brew.sh) with dependencies.\n \n-#### Installing berkeley-db4 using Homebrew\n+/usr/bin/ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n \n-The homebrew package for berkeley-db4 has been broken for some time.  It will install without Java though.\n+brew install autoconf automake pkg-config qt5\n \n-Running this command takes you into brew's interactive mode, which allows you to configure, make, and install by hand:\n-```\n-$ brew install https://raw.github.com/mxcl/homebrew/master/Library/Formula/berkeley-db4.rb -\u2013without-java \n-```\n+brew link --force qt5\n \n-The rest of these commands are run inside brew interactive mode:\n-```\n-/private/tmp/berkeley-db4-UGpd0O/db-4.8.30 $ cd ..\n-/private/tmp/berkeley-db4-UGpd0O $ db-4.8.30/dist/configure --prefix=/usr/local/Cellar/berkeley-db4/4.8.30 --mandir=/usr/local/Cellar/berkeley-db4/4.8.30/share/man --enable-cxx\n-/private/tmp/berkeley-db4-UGpd0O $ make\n-/private/tmp/berkeley-db4-UGpd0O $ make install\n-/private/tmp/berkeley-db4-UGpd0O $ exit\n-```\n+4. Clone the github tree and build 42-Qt application.\n \n-After exiting, you'll get a warning that the install is keg-only, which means it wasn't symlinked to `/usr/local`.  You don't need it to link it to build 42, but if you want to, here's how:\n+git clone https://github.com/42-coin/42.git\n \n-    $ brew link --force berkeley-db4\n+cd 42\n+qmake\n+make\n \n+5. Create the .dmg disk image:\n \n-### Building `42d`\n-\n-1. Clone the github tree to get the source code and go into the directory.\n-\n-        git clone https://github.com/42-coin/42.git\n-        cd 42\n-\n-2. Build 42-Qt application:\n-        qmake\n-        make\n-\n-3. Build bitcoind:\n-        cd src\n-        make -f makefile.osx 42d\n-\n-Use Qt Creator as IDE\n-------------------------\n-You can use Qt Creator as IDE, for debugging and for manipulating forms, etc.\n-Download Qt Creator from http://www.qt.io/download/. Download the \"community edition\" and only install Qt Creator (uncheck the rest during the installation process).\n-\n-1. Make sure you installed everything through homebrew mentioned above \n-2. In Qt Creator do \"File\" -> \"Open Project\"\n-3. Select 42-qt.pro as project file.\n-4. In the \"Projects\" tab select \"Manage Kits...\"\n-5. Select the default \"Desktop\" kit and select \"Clang (x86 64bit in /usr/bin)\" as compiler\n-6. Select LLDB as debugger (you might need to set the path to your installtion)\n-7. Start debugging with Qt Creator\n-\n-Creating a release build\n-------------------------\n-You can ignore this section if you are building `42d` for your own use.\n-\n-42d binary isn't included in the 42-Qt.app bundle.\n-\n-If you are building `42d` or `42-Qt` for others, your build machine should be set up\n-as follows for maximum compatibility:\n-\n-All dependencies should be compiled with these flags:\n-\n- -mmacosx-version-min=10.7\n- -arch x86_64\n- -isysroot $(xcode-select --print-path)/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.7.sdk\n-\n-Once dependencies are compiled, you can create the .dmg disk image:\n-\n-./contrib/macdeploy/macdeployqtplus 42-Qt.app -dmg -fancy ./contrib/macdeploy/fancy.plist\n-\n-Running\n--------\n-\n-It's now available at `./42d`, provided that you are still in the `src`\n-directory. We have to first create the RPC configuration file, though.\n-\n-Run `./42d` to get the filename where it should be put, or just try these\n-commands:\n-\n-    echo -e \"rpcuser=42rpc\\nrpcpassword=$(xxd -l 16 -p /dev/urandom)\" > \"/Users/${USER}/Library/Application Support/42/42.conf\"\n-    chmod 600 \"/Users/${USER}/Library/Application Support/42/42.conf\"\n-\n-The next time you run it, it will start downloading the blockchain, but it won't\n-output anything while it's doing this. This process may take several hours;\n-you can monitor its process by looking at the debug.log file, like this:\n-\n-    tail -f $HOME/Library/Application\\ Support/42/debug.log\n-\n-Other commands:\n--------\n-\n-    ./42d -daemon # to start the bitcoin daemon.\n-    ./42d --help  # for a list of command-line options.\n-    ./42d help    # When the daemon is running, to get a list of RPC commands\n+sudo easy_install appscript\n+./contrib/macdeploy/macdeployqtplus 42-Qt.app -dmg -fancy ./contrib/macdeploy/fancy.plist\n\\ No newline at end of file"
      },
      {
        "sha": "0c8aa88d08df3698a95f4024b5b136739b75cb43",
        "filename": "doc/crosscompiling_building Windows binary under Unix.txt",
        "status": "modified",
        "additions": 63,
        "deletions": 59,
        "changes": 122,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4344daeb6d063c58f9f9466ac85cf76a65435ddf/doc/crosscompiling_building%20Windows%20binary%20under%20Unix.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4344daeb6d063c58f9f9466ac85cf76a65435ddf/doc/crosscompiling_building%20Windows%20binary%20under%20Unix.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/crosscompiling_building%20Windows%20binary%20under%20Unix.txt?ref=4344daeb6d063c58f9f9466ac85cf76a65435ddf",
        "patch": "@@ -1,33 +1,37 @@\n \ufeff\u0414\u0430\u043d\u043d\u044b\u0439 \u0441\u043f\u043e\u0441\u043e\u0431 \u0434\u043e\u043b\u0436\u0435\u043d \u043f\u043e\u0434\u0445\u043e\u0434\u0438\u0442\u044c \u0434\u043b\u044f \u043b\u044e\u0431\u043e\u0439 Unix \u0441\u0438\u0441\u0442\u0435\u043c\u044b: Linux, FreeBSD, MacOS X\n-\u041f\u0440\u0438 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0438 \u044d\u0442\u043e\u0433\u043e \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043b\u0441\u044f Linux Mint 17.1 ( http://linuxmint.com/ )\n+\u0414\u0430\u043d\u043d\u043e\u0435 \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u043e \u043f\u0438\u0441\u0430\u043b\u043e\u0441\u044c \u043d\u0430 Linux Mint 17.1 ( http://linuxmint.com/ ) \u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u043b\u043e\u0441\u044c \u043d\u0430 Ubuntu 14.04 (https://www.ubuntu.com/)\n+\n 1) \u041f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u043a\u0430 \u0441\u0438\u0441\u0442\u0435\u043c\u044b \u0434\u043b\u044f \u043a\u0440\u043e\u0441\u0441\u043a\u043e\u043c\u043f\u0438\u043b\u044f\u0446\u0438\u0438.\n \n- sudo apt-get install git bison cmake flex g++ gperf ruby scons libghc-zlib-dev  libghc-zlib-bindings-dev\n+sudo apt-get install git bison cmake flex g++ gperf ruby scons libghc-zlib-dev  libghc-zlib-bindings-dev\n \n 2) \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 MXE \u0438 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0435\u0439\n- cd /home/<\u0432\u0430\u0448\u0435 \u0438\u043c\u044f>/\n- git clone https://github.com/mxe/mxe.git\n+\n+cd /home/<\u0432\u0430\u0448\u0435 \u0438\u043c\u044f>/\n+git clone https://github.com/mxe/mxe.git\n  \n+sudo apt-get install autoconf automake autopoint libtool intltool libtoolize p7zip-full libgtk2.0-dev\n \n 2.1) gcc\n- cd /home/<\u0432\u0430\u0448\u0435 \u0438\u043c\u044f>/mxe\n- make gcc zlib libpng\n+\n+cd /home/<\u0432\u0430\u0448\u0435 \u0438\u043c\u044f>/mxe\n+make gcc zlib libpng\n \n \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0442\u043e\u0433\u043e, \u0447\u0442\u043e \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 gcc \u043f\u0440\u043e\u0448\u043b\u0430 \u0443\u0441\u043f\u0435\u0448\u043d\u043e:\n \u0412 \u043f\u0430\u043f\u043a\u0435 /home/<\u0432\u0430\u0448\u0435 \u0438\u043c\u044f>/mxe/usr/bin \u0434\u043e\u043b\u0436\u0435\u043d \u043f\u043e\u044f\u0432\u0438\u0442\u044c\u0441\u044f \u0444\u0430\u0439\u043b i686-w64-mingw32.static-gcc \u0438 i686-w64-mingw32.static-g++\n-\u0418 \u043f\u0440\u0438 \u0437\u0430\u043f\u0443\u0441\u043a\u0435 ./i686-w64-mingw32.static-gcc -v \u0434\u043e\u043b\u0436\u043d\u043e \u0432\u044b\u0434\u0430\u0432\u0430\u0442\u044c\u0441\u044f\n+\u0418 \u043f\u0440\u0438 \u0437\u0430\u043f\u0443\u0441\u043a\u0435 /home/<\u0432\u0430\u0448\u0435 \u0438\u043c\u044f>/mxe/usr/bin/i686-w64-mingw32.static-gcc -v \u0434\u043e\u043b\u0436\u043d\u043e \u0432\u044b\u0434\u0430\u0432\u0430\u0442\u044c\u0441\u044f\n ......\n Thread model: win32\n-gcc version 4.9.3 (GCC)\n+gcc version 5.4.0 (GCC)\n \n \u0412 \u043f\u0430\u043f\u043a\u0435 /home/<\u0432\u0430\u0448\u0435 \u0438\u043c\u044f>/mxe/usr/i686-w64-mingw32.static/lib \u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u0442\u044c \u0444\u0430\u0439\u043b\u044b:\n libz.a\n libpng.a\n \n 2.2) Openssl\n  \n- cd /home/<\u0432\u0430\u0448\u0435 \u0438\u043c\u044f>/mxe\n- make openssl\n+cd /home/<\u0432\u0430\u0448\u0435 \u0438\u043c\u044f>/mxe\n+make openssl\n \n \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0447\u0442\u043e \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 Openssl \u043f\u0440\u043e\u0448\u043b\u0430 \u0443\u0441\u043f\u0435\u0448\u043d\u043e:\n \u0412 \u043f\u0430\u043f\u043a\u0435 /home/<\u0432\u0430\u0448\u0435 \u0438\u043c\u044f>/mxe/usr/i686-w64-mingw32.static/lib \u0434\u043e\u043b\u0436\u043d\u044b \u043f\u043e\u044f\u0432\u0438\u0442\u044c\u0441\u044f \u0434\u0432\u0430 \u0444\u0430\u0439\u043b\u0430\n@@ -37,13 +41,13 @@ libpng.a\n \n 2.3) Boost\n \n- cd /home/<\u0432\u0430\u0448\u0435 \u0438\u043c\u044f>/mxe\n- make boost\n+cd /home/<\u0432\u0430\u0448\u0435 \u0438\u043c\u044f>/mxe\n+make boost\n \n \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0447\u0442\u043e \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 Boost \u043f\u0440\u043e\u0448\u043b\u0430 \u0443\u0441\u043f\u0435\u0448\u043d\u043e:\n \u0412 /home/<\u0432\u0430\u0448\u0435 \u0438\u043c\u044f>/mxe/usr/i686-w64-mingw32.static/lib \u043f\u0430\u043f\u043a\u0435 \u0434\u043e\u043b\u0436\u043d\u044b \u043f\u043e\u044f\u0432\u0438\u0442\u044c\u0441\u044f \u0444\u0430\u0439\u043b\u044b:\n -libboost_\u0438\u043c\u044f\u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438_mt.a (libboost_atomic-mt.a \u0438 \u0434\u0440\u0443\u0433\u0438\u0435 \u043f\u043e\u0434\u043e\u0431\u043d\u044b\u0435 \u0444\u0430\u0439\u043b\u044b)\n--libboost_\u0438\u043c\u044f\u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438_mt-d.a (libboost_atomic-mt-d.a \u0438 \u0434\u0440\u0443\u0433\u0438\u0435 \u043f\u043e\u0434\u043e\u0431\u043d\u044b\u0435 \u0444\u0430\u0439\u043b\u044b)\n+-libboost_\u0438\u043c\u044f\u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438_mt-d.a (libboost_atomic-mt-d.a \u0438 \u0434\u0440\u0443\u0433\u0438\u0435 \u043f\u043e\u0434\u043e\u0431\u043d\u044b\u0435 \u0444\u0430\u0439\u043b\u044b)                   -!!!!!!!!!!!!\u043d\u0435\u0442\n \n \u0412 \u043f\u0430\u043f\u043a\u0435 /home/<\u0432\u0430\u0448\u0435 \u0438\u043c\u044f>/mxe/usr/i686-w64-mingw32.static/include \u0434\u043e\u043b\u0436\u043d\u0430 \u043f\u043e\u044f\u0432\u0438\u0442\u044c\u0441\u044f \u043f\u0430\u043f\u043a\u0430 boost\n \n@@ -56,11 +60,15 @@ libpng.a\n \u043d\u0430\n #include <winioctl.h>\n -\u0421\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u0435 \u0444\u0430\u0439\u043b\n--\u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 \u0442\u0435\u0440\u043c\u0438\u043d\u0430\u043b\n- cd /home/<\u0432\u0430\u0448\u0435 \u0438\u043c\u044f>/db-6.0.20/build_unix\n- export PATH=/home/<\u0432\u0430\u0448\u0435 \u0438\u043c\u044f>/mxe/usr/bin:$PATH\n- ../dist/configure --host=i686-w64-mingw32.static --enable-mingw --enable-cxx --disable-shared --disable-replication\n- make\n+-\u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 \u0442\u0435\u0440\u043c\u0438\u043d\u0430\u043b:\n+\n+cd /home/<\u0432\u0430\u0448\u0435 \u0438\u043c\u044f>/db-6.0.20/dist\n+chmod +x configure\n+cd\n+cd /home/<\u0432\u0430\u0448\u0435 \u0438\u043c\u044f>/db-6.0.20/build_unix\n+export PATH=/home/<\u0432\u0430\u0448\u0435 \u0438\u043c\u044f>/mxe/usr/bin:$PATH\n+../dist/configure --host=i686-w64-mingw32.static --enable-mingw --enable-cxx --disable-shared --disable-replication\n+make\n \n \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430, \u0447\u0442\u043e \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 Berkeley DB \u043f\u0440\u043e\u0448\u043b\u0430 \u0443\u0441\u043f\u0435\u0448\u043d\u043e:\n \u0412 \u043f\u0430\u043f\u043a\u0435 /home/<\u0432\u0430\u0448\u0435 \u0438\u043c\u044f>/db-6.0.20/build_unix \u0434\u043e\u043b\u0436\u043d\u044b \u043f\u043e\u044f\u0432\u0438\u0442\u044c\u0441\u044f \u0444\u0430\u0439\u043b\u044b:\n@@ -72,10 +80,11 @@ libdb_cxx.a\n -\u0420\u0430\u0441\u043f\u0430\u043a\u0443\u0439\u0442\u0435 \u0432 \u0434\u043e\u043c\u0430\u0448\u043d\u044e\u044e \u043f\u0430\u043f\u043a\u0443\n -\u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 \u0442\u0435\u0440\u043c\u0438\u043d\u0430\u043b:\n \n- export PATH=/home/<\u0432\u0430\u0448\u0435 \u0438\u043c\u044f>/mxe/usr/bin:$PATH\n- cd /home/<\u0432\u0430\u0448\u0435 \u0438\u043c\u044f>/qrencode-3.4.4\n- ./configure --host=i686-w64-mingw32.static --enable-static --disable-shared --without-tools\n- make\n+export PATH=/home/<\u0432\u0430\u0448\u0435 \u0438\u043c\u044f>/mxe/usr/bin:$PATH\n+cd /home/<\u0432\u0430\u0448\u0435 \u0438\u043c\u044f>/qrencode-3.4.4\n+chmod +x configure\n+./configure --host=i686-w64-mingw32.static --enable-static --disable-shared --without-tools\n+make\n \n \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0447\u0442\u043e qrencode \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0441\u043e\u0431\u0440\u0430\u043b\u0430\u0441\u044c:\n \u0432 \u043f\u0430\u043f\u043a\u0435 /home/<\u0432\u0430\u0448\u0435 \u0438\u043c\u044f>/qrencode-3.4.4/.libs \u0434\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u0442\u044c \u0444\u0430\u0439\u043b:\n@@ -84,51 +93,52 @@ libqrencode.a\n 2.6 Qt 5 \u0438 Qt 4\n \n Qt 4\n--\u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 \u0442\u0435\u0440\u043c\u0438\u043d\u0430\u043b\n+-\u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 \u0442\u0435\u0440\u043c\u0438\u043d\u0430\u043b:\n \n- cd /home/<\u0432\u0430\u0448\u0435 \u0438\u043c\u044f>/mxe\n- make qt\n+cd /home/<\u0432\u0430\u0448\u0435 \u0438\u043c\u044f>/mxe\n+make qt\n \n \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0447\u0442\u043e Qt4 \u0441\u043e\u0431\u0440\u0430\u043b\u0441\u044f \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e:\n--\u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 \u0442\u0435\u0440\u043c\u0438\u043d\u0430\u043b\n--\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b\n- export PATH=/home/<\u0432\u0430\u0448\u0435 \u0438\u043c\u044f>/mxe/usr/bin:$PATH\n- i686-w64-mingw32.static-qmake-qt4 -v\n+-\u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 \u0442\u0435\u0440\u043c\u0438\u043d\u0430\u043b:\n+\n+export PATH=/home/<\u0432\u0430\u0448\u0435 \u0438\u043c\u044f>/mxe/usr/bin:$PATH\n+i686-w64-mingw32.static-qmake-qt4 -v\n \n -\u0414\u043e\u043b\u0436\u043d\u043e \u043f\u043e\u044f\u0432\u0438\u0442\u044c\u0441\u044f \u0432 \u043e\u0442\u0432\u0435\u0442\n QMake version 2.01a\n Using Qt version 4.8.7 in /home/<\u0432\u0430\u0448\u0435 \u0438\u043c\u044f>/mxe/usr/i686-w64-mingw32.static/qt/lib\n \n Qt 5\n--\u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 \u0442\u0435\u0440\u043c\u0438\u043d\u0430\u043b\n+-\u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 \u0442\u0435\u0440\u043c\u0438\u043d\u0430\u043b:\n \n- export PATH=/home/<\u0432\u0430\u0448\u0435 \u0438\u043c\u044f>/mxe/usr/bin:$PATH\n- cd /home/<\u0432\u0430\u0448\u0435 \u0438\u043c\u044f>/mxe\n- make qtbase qttools qttranslations\n+export PATH=/home/<\u0432\u0430\u0448\u0435 \u0438\u043c\u044f>/mxe/usr/bin:$PATH\n+cd /home/<\u0432\u0430\u0448\u0435 \u0438\u043c\u044f>/mxe\n+make qtbase qttools qttranslations\n \n \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0447\u0442\u043e Qt5 \u0441\u043e\u0431\u0440\u0430\u043b\u0441\u044f \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e:\n--\u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 \u0442\u0435\u0440\u043c\u0438\u043d\u0430\u043b\n--\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b\n- export PATH=/home/<\u0432\u0430\u0448\u0435 \u0438\u043c\u044f>/mxe/usr/bin:$PATH\n- i686-w64-mingw32.static-qmake-qt5 -v\n+-\u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 \u0442\u0435\u0440\u043c\u0438\u043d\u0430\u043b:\n+\n+export PATH=/home/<\u0432\u0430\u0448\u0435 \u0438\u043c\u044f>/mxe/usr/bin:$PATH\n+i686-w64-mingw32.static-qmake-qt5 -v\n \n -\u0414\u043e\u043b\u0436\u043d\u043e \u043f\u043e\u044f\u0432\u0438\u0442\u044c\u0441\u044f \u0432 \u043e\u0442\u0432\u0435\u0442\n-QMake version 3.0\n-Using Qt version 5.5.1 in /home/<\u0432\u0430\u0448\u0435 \u0438\u043c\u044f>/mxe/usr/i686-w64-mingw32.static/qt5/lib\n+QMake version 3.1\n+Using Qt version 5.8.0 in /home/<\u0432\u0430\u0448\u0435 \u0438\u043c\u044f>/mxe/usr/i686-w64-mingw32.static/qt5/lib\n \n 3. \u041a\u043e\u043c\u043f\u0438\u043b\u044f\u0446\u0438\u044f\n \n 3.1 \u0421\u043a\u0430\u0447\u0438\u0432\u0430\u0435\u043c \u0438\u0441\u0445\u043e\u0434\u043d\u0438\u043a\u0438\n -\u041f\u0435\u0440\u0435\u0439\u0434\u0438\u0442\u0435 \u0432 \u0434\u043e\u043c\u0430\u0448\u043d\u044e\u044e \u043f\u0430\u043f\u043a\u0443\n--\u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 \u0442\u0435\u0440\u043c\u0438\u043d\u0430\u043b\n+-\u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 \u0442\u0435\u0440\u043c\u0438\u043d\u0430\u043b:\n \n- git clone https://github.com/42-coin/42.git\n+git clone https://github.com/42-coin/42.git\n \n 3.2 \u0421\u043e\u0431\u0438\u0440\u0430\u0435\u043c 42d \n--\u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 \u0444\u0430\u0439\u043b makefile.mingw \u0432 \u0442\u0435\u043a\u0441\u0442\u043e\u0432\u043e\u043c \u0440\u0435\u0434\u0430\u043a\u0442\u043e\u0440\u0435.(\u041f\u0440\u0438 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0438 \u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043b\u0441\u044f Pluma 1.8.1)\n--\u0412\u0441\u0442\u0430\u0432\u044c\u0442\u0435 \n+-\u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 \u0444\u0430\u0439\u043b makefile.mingw \u0432 \u0442\u0435\u043a\u0441\u0442\u043e\u0432\u043e\u043c \u0440\u0435\u0434\u0430\u043a\u0442\u043e\u0440\u0435 (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, Pluma, gedit)\n+-\u0417\u0430\u043c\u0435\u043d\u0438\u0442\u0435 CC=gcc \u043d\u0430 \n CC=$(CROSS)gcc\n CXX=$(CROSS)g++\n+\n -\u0414\u043e\u0431\u0430\u0432\u044c\u0442\u0435  \u0441\u0442\u0440\u043e\u0447\u043a\u0443 USE_ASM:=1\n -\u041f\u043e\u043c\u0435\u043d\u044f\u0439\u0442\u0435 \u0442\u0435\u043a\u0443\u0449\u0438\u0435 INCLUDEPATHS, LIBPATHS, LIBS \u043d\u0430:\n \n@@ -179,7 +189,7 @@ CXX=$(CROSS)g++\n \u0421\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u0435 \u0444\u0430\u0439\u043b\n \n \u0421\u043d\u043e\u0432\u0430 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c\u0441\u044f \u0432 \u0444\u0430\u0439\u043b makefile.mingw, \u0438\u0437\u043c\u0435\u043d\u0438\u0442\u0435 \n-cd leveldb; make; cd ..\n+cd leveldb;TARGET_OS=NATIVE_WINDOWS make libleveldb.a libmemenv.a; cd ..\n \u043d\u0430 \n cd leveldb; TARGET_OS=NATIVE_WINDOWS make CROSS=i686-w64-mingw32.static- libleveldb.a libmemenv.a; cd ..\n \n@@ -200,28 +210,26 @@ clean:\n \n -\u0421\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u0435 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u043d\u044b\u0439 \u0444\u0430\u0439\u043b makefile.mingw\n \n--\u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 \u0442\u0435\u0440\u043c\u0438\u043d\u0430\u043b\n+-\u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 \u0442\u0435\u0440\u043c\u0438\u043d\u0430\u043b:\n+\n cd /home/<\u0432\u0430\u0448\u0435 \u0438\u043c\u044f>/42/src\n export PATH=/home/<\u0432\u0430\u0448\u0435 \u0438\u043c\u044f>/mxe/usr/bin:$PATH\n make -j n CROSS=i686-w64-mingw32.static- -f makefile.mingw (\u0432\u043c\u0435\u0441\u0442\u043e n \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u044f\u0434\u0435\u0440 \u0432\u0430\u0448\u0435\u0433\u043e \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0440\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432\u044b \u0445\u043e\u0442\u0438\u0442\u0435 \u0432\u044b\u0434\u0435\u043b\u0438\u0442\u044c \u043f\u043e\u0434 \u0441\u0431\u043e\u0440\u043a\u0443)\n strip 42d.exe\n \n-\n-\u0412\u043e \u0432\u0440\u0435\u043c\u044f \u043b\u0438\u043d\u043a\u043e\u0432\u043a\u0438 \u0431\u0443\u0434\u0443\u0442 \u0432\u044b\u0434\u0430\u0432\u0430\u0442\u044c\u0441\u044f \u043f\u043e\u0434\u043e\u0431\u043d\u044b\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f:\n-libboost_thread_win32-mt.a(thread.o): duplicate section `.rdata$_ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEEE[__ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEEE]' has different size\n-\u0418\u0433\u043d\u043e\u0440\u0438\u0440\u0443\u0439\u0442\u0435 \u0438\u0445. \u041d\u0430 \u0440\u0430\u0431\u043e\u0442\u043e\u0441\u043f\u043e\u0441\u043e\u0431\u043d\u043e\u0441\u0442\u044c \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b \u044d\u0442\u043e \u043d\u0438\u043a\u0430\u043a \u043d\u0435 \u0432\u043b\u0438\u044f\u0435\u0442\n-\n+\u0415\u0441\u043b\u0438 \u0432\u0441\u0451 \u0441\u0434\u0435\u043b\u0430\u043d\u043e \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e, \u0442\u043e \u0444\u0430\u0439\u043b 42d.exe \u0431\u0443\u0434\u0435\u0442 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u0432 \u043f\u0430\u043f\u043a\u0435 /home/<\u0432\u0430\u0448\u0435 \u0438\u043c\u044f>/42/src.\n \n 3.3 \u0421\u043e\u0431\u0438\u0440\u0430\u0435\u043c 42 QT\n \n \u0412\u043d\u0438\u043c\u0430\u043d\u0438\u0435: \u0415\u0441\u043b\u0438 \u0432\u044b \u0445\u043e\u0442\u0438\u0442\u0435 \u0441\u043e\u0431\u0438\u0440\u0430\u0442\u044c 42 Qt \u0441 LevelDB, \u043d\u043e \u043f\u0440\u043e\u043f\u0443\u0441\u0442\u0438\u043b\u0438 \u0448\u0430\u0433 \u0441\u043e \u0441\u0431\u043e\u0440\u043a\u043e\u0439 42d.exe, \u0442\u043e \n -\u0418\u0437\u043c\u0435\u043d\u0438\u0442\u0435 Makefile \u0432 \u043f\u0430\u043f\u043a\u0435 leveldb \u0442\u0430\u043a\u0436\u0435 \u043a\u0430\u043a \u0432 \u043f\u0443\u043d\u043a\u0442\u0435 3.2\n--\u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 \u0442\u0435\u0440\u043c\u0438\u043d\u0430\u043b \u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u0435 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b:\n+-\u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 \u0442\u0435\u0440\u043c\u0438\u043d\u0430\u043b:\n+\n export PATH=/home/<\u0432\u0430\u0448\u0435 \u0438\u043c\u044f>/mxe/usr/bin:$PATH\n cd /home/<\u0432\u0430\u0448\u0435 \u0438\u043c\u044f>/42/src/leveldb\n TARGET_OS=NATIVE_WINDOWS make CROSS=i686-w64-mingw32.static- libleveldb.a libmemenv.a\n \n--\u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 \u0444\u0430\u0439\u043b /home/<\u0432\u0430\u0448\u0435 \u0438\u043c\u044f>/42/42-qt.pro \u0432 \u0442\u0435\u043a\u0441\u0442\u043e\u0432\u043e\u043c \u0440\u0435\u0434\u0430\u043a\u0442\u043e\u0440\u0435(\u043f\u0440\u0438 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0438 \u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043b\u0441\u044f Pluma 1.8.1)\n+-\u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 \u0444\u0430\u0439\u043b /home/<\u0432\u0430\u0448\u0435 \u0438\u043c\u044f>/42/42-qt.pro \u0432 \u0442\u0435\u043a\u0441\u0442\u043e\u0432\u043e\u043c \u0440\u0435\u0434\u0430\u043a\u0442\u043e\u0440\u0435 (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, Pluma, gedit)\n -\u041d\u0438\u0436\u0435 \n # Dependency library locations can be customized with:\n #    BOOST_INCLUDE_PATH, BOOST_LIB_PATH, BDB_INCLUDE_PATH,\n@@ -247,7 +255,7 @@ LIBS += -lshlwapi\n \u0415\u0441\u043b\u0438 \u0432 \u0444\u0430\u0439\u043b\u0435 \u043d\u0435\u0442 \u0442\u0430\u043a\u043e\u0439 \u0441\u0442\u0440\u043e\u0447\u043a\u0438 CONFIG += static , \u0442\u043e \u0434\u043e\u0431\u0430\u0432\u044c\u0442\u0435 \u0435\u0451.\n \n \u0418\u0437\u043c\u0435\u043d\u0438\u0442\u0435 \n-win32:QMAKE_LFLAGS........................\n+win32:QMAKE_LFLAGS *= -Wl,--dynamicbase -Wl,--nxcompat\n \u043d\u0430 \n win32:QMAKE_LFLAGS *= -Wl,--large-address-aware -static \n \n@@ -257,7 +265,7 @@ win32:QMAKE_LRELEASE = $$[QT_INSTALL_BINS]\\\\lrelease.exe\n win32:QMAKE_LRELEASE = $$[QT_INSTALL_BINS]/lrelease\n \n -\u0421\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u0435 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u043d\u044b\u0439 \u0444\u0430\u0439\u043b 42-qt.pro\n--\u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 \u0442\u0435\u0440\u043c\u0438\u043d\u0430\u043b \u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u0435 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b\n+-\u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 \u0442\u0435\u0440\u043c\u0438\u043d\u0430\u043b \u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u0435 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b:\n \n Qt4 + \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u043e\u043d\u043d\u044b\u0439 \u0438\u043d\u0434\u0435\u043a\u0441 LevelDB\n \n@@ -287,11 +295,7 @@ cd /home/<\u0432\u0430\u0448\u0435 \u0438\u043c\u044f>/42\n i686-w64-mingw32.static-qmake-qt5 \"USE_IPV6=1\" \"USE_ASM=1\" 42-qt.pro\n make -j n -f Makefile.Release  (\u0432\u043c\u0435\u0441\u0442\u043e n \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u044f\u0434\u0435\u0440 \u0432\u0430\u0448\u0435\u0433\u043e \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0440\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432\u044b \u0445\u043e\u0442\u0438\u0442\u0435 \u0432\u044b\u0434\u0435\u043b\u0438\u0442\u044c \u043f\u043e\u0434 \u0441\u0431\u043e\u0440\u043a\u0443)\n \n-\n-\u0415\u0441\u043b\u0438 \u0432\u0441\u0451 \u0441\u0434\u0435\u043b\u0430\u043d\u043e \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e, \u0442\u043e \u0444\u0430\u0439\u043b 42-qt.exe \u0431\u0443\u0434\u0435\u0442 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u0432 \u043f\u0430\u043f\u043a\u0435 /home/<\u0432\u0430\u0448\u0435 \u0438\u043c\u044f>/42/release\n-\u0412\u043e \u0432\u0440\u0435\u043c\u044f \u043b\u0438\u043d\u043a\u043e\u0432\u043a\u0438 \u0431\u0443\u0434\u0443\u0442 \u0432\u044b\u0434\u0430\u0432\u0430\u0442\u044c\u0441\u044f \u043f\u043e\u0434\u043e\u0431\u043d\u044b\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f:\n-libboost_thread_win32-mt.a(thread.o): duplicate section `.rdata$_ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEEE[__ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEEE]' has different size\n-\u0418\u0433\u043d\u043e\u0440\u0438\u0440\u0443\u0439\u0442\u0435 \u0438\u0445. \u041d\u0430 \u0440\u0430\u0431\u043e\u0442\u043e\u0441\u043f\u043e\u0441\u043e\u0431\u043d\u043e\u0441\u0442\u044c \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b \u044d\u0442\u043e \u043d\u0438\u043a\u0430\u043a \u043d\u0435 \u0432\u043b\u0438\u044f\u0435\u0442 \n+\u0415\u0441\u043b\u0438 \u0432\u0441\u0451 \u0441\u0434\u0435\u043b\u0430\u043d\u043e \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e, \u0442\u043e \u0444\u0430\u0439\u043b 42-qt.exe \u0431\u0443\u0434\u0435\u0442 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u0432 \u043f\u0430\u043f\u043a\u0435 /home/<\u0432\u0430\u0448\u0435 \u0438\u043c\u044f>/42/release.\n \n \u0415\u0441\u043b\u0438 \u0432\u044b \u0445\u043e\u0442\u0438\u0442\u0435 \u0443\u043c\u0435\u043d\u044c\u0448\u0438\u0442\u044c \u0440\u0430\u0437\u043c\u0435\u0440 \u0431\u0438\u043d\u0430\u0440\u043d\u044b\u0445 \u0444\u0430\u0439\u043b\u043e\u0432, \u0442\u043e\n 1) \u041f\u0435\u0440\u0435\u0439\u0434\u0438\u0442\u0435 \u043d\u0430 \u0441\u0430\u0439\u0442 http://upx.sourceforge.net/#downloadupx"
      }
    ]
  },
  {
    "sha": "0466ddb653009c31e9b31298dcfcf4548f350093",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNDY2ZGRiNjUzMDA5YzMxZTliMzEyOThkY2ZjZjQ1NDhmMzUwMDkz",
    "commit": {
      "author": {
        "name": "Laser9un",
        "email": "laser9un@gmail.com",
        "date": "2017-06-12T18:10:45Z"
      },
      "committer": {
        "name": "Laser9un",
        "email": "laser9un@gmail.com",
        "date": "2017-06-12T18:10:45Z"
      },
      "message": "Add prohashing.com block explorer URL",
      "tree": {
        "sha": "fba23d13fda9cd5bb4f818b5033eff1486d4a927",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fba23d13fda9cd5bb4f818b5033eff1486d4a927"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0466ddb653009c31e9b31298dcfcf4548f350093",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0466ddb653009c31e9b31298dcfcf4548f350093",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0466ddb653009c31e9b31298dcfcf4548f350093",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0466ddb653009c31e9b31298dcfcf4548f350093/comments",
    "author": {
      "login": "Laser9un",
      "id": 16782409,
      "node_id": "MDQ6VXNlcjE2NzgyNDA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16782409?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Laser9un",
      "html_url": "https://github.com/Laser9un",
      "followers_url": "https://api.github.com/users/Laser9un/followers",
      "following_url": "https://api.github.com/users/Laser9un/following{/other_user}",
      "gists_url": "https://api.github.com/users/Laser9un/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Laser9un/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Laser9un/subscriptions",
      "organizations_url": "https://api.github.com/users/Laser9un/orgs",
      "repos_url": "https://api.github.com/users/Laser9un/repos",
      "events_url": "https://api.github.com/users/Laser9un/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Laser9un/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Laser9un",
      "id": 16782409,
      "node_id": "MDQ6VXNlcjE2NzgyNDA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16782409?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Laser9un",
      "html_url": "https://github.com/Laser9un",
      "followers_url": "https://api.github.com/users/Laser9un/followers",
      "following_url": "https://api.github.com/users/Laser9un/following{/other_user}",
      "gists_url": "https://api.github.com/users/Laser9un/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Laser9un/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Laser9un/subscriptions",
      "organizations_url": "https://api.github.com/users/Laser9un/orgs",
      "repos_url": "https://api.github.com/users/Laser9un/repos",
      "events_url": "https://api.github.com/users/Laser9un/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Laser9un/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4344daeb6d063c58f9f9466ac85cf76a65435ddf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4344daeb6d063c58f9f9466ac85cf76a65435ddf",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4344daeb6d063c58f9f9466ac85cf76a65435ddf"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "f7eb52c622a36075d7d44e6fd1a96858ee632b4d",
        "filename": "src/qt/optionsmodel.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0466ddb653009c31e9b31298dcfcf4548f350093/src/qt/optionsmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0466ddb653009c31e9b31298dcfcf4548f350093/src/qt/optionsmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsmodel.cpp?ref=0466ddb653009c31e9b31298dcfcf4548f350093",
        "patch": "@@ -67,9 +67,9 @@ void OptionsModel::Init()\n         if(fTestNet)\n             settings.setValue(\"strThirdPartyTxUrls\", \"\");\n         else\n-            settings.setValue(\"strThirdPartyTxUrls\", \"https://chainz.cryptoid.info/42/tx.dws?%s\");\n+            settings.setValue(\"strThirdPartyTxUrls\", \"https://chainz.cryptoid.info/42/tx.dws?%s|https://prohashing.com/explorer/42/%s\");\n     }\n-    strThirdPartyTxUrls = settings.value(\"strThirdPartyTxUrls\", \"https://chainz.cryptoid.info/42/tx.dws?%s\").toString();\n+    strThirdPartyTxUrls = settings.value(\"strThirdPartyTxUrls\", \"https://chainz.cryptoid.info/42/tx.dws?%s|https://prohashing.com/explorer/42/%s\").toString();\n     fMinimizeToTray = settings.value(\"fMinimizeToTray\", false).toBool();\n     fMinimizeOnClose = settings.value(\"fMinimizeOnClose\", false).toBool();\n     fCoinControlFeatures = settings.value(\"fCoinControlFeatures\", false).toBool();"
      }
    ]
  },
  {
    "sha": "57514c7e0b5f97f961d52d4423fc804f4b2d9926",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NzUxNGM3ZTBiNWY5N2Y5NjFkNTJkNDQyM2ZjODA0ZjRiMmQ5OTI2",
    "commit": {
      "author": {
        "name": "Laser9un",
        "email": "laser9un@gmail.com",
        "date": "2017-08-03T15:26:18Z"
      },
      "committer": {
        "name": "Laser9un",
        "email": "laser9un@gmail.com",
        "date": "2017-08-03T15:26:18Z"
      },
      "message": "Fix version info and build time",
      "tree": {
        "sha": "6a2a1f6d7781330dbd8f6890b1b0d10951cac23c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6a2a1f6d7781330dbd8f6890b1b0d10951cac23c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/57514c7e0b5f97f961d52d4423fc804f4b2d9926",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/57514c7e0b5f97f961d52d4423fc804f4b2d9926",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/57514c7e0b5f97f961d52d4423fc804f4b2d9926",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/57514c7e0b5f97f961d52d4423fc804f4b2d9926/comments",
    "author": {
      "login": "Laser9un",
      "id": 16782409,
      "node_id": "MDQ6VXNlcjE2NzgyNDA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16782409?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Laser9un",
      "html_url": "https://github.com/Laser9un",
      "followers_url": "https://api.github.com/users/Laser9un/followers",
      "following_url": "https://api.github.com/users/Laser9un/following{/other_user}",
      "gists_url": "https://api.github.com/users/Laser9un/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Laser9un/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Laser9un/subscriptions",
      "organizations_url": "https://api.github.com/users/Laser9un/orgs",
      "repos_url": "https://api.github.com/users/Laser9un/repos",
      "events_url": "https://api.github.com/users/Laser9un/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Laser9un/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Laser9un",
      "id": 16782409,
      "node_id": "MDQ6VXNlcjE2NzgyNDA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16782409?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Laser9un",
      "html_url": "https://github.com/Laser9un",
      "followers_url": "https://api.github.com/users/Laser9un/followers",
      "following_url": "https://api.github.com/users/Laser9un/following{/other_user}",
      "gists_url": "https://api.github.com/users/Laser9un/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Laser9un/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Laser9un/subscriptions",
      "organizations_url": "https://api.github.com/users/Laser9un/orgs",
      "repos_url": "https://api.github.com/users/Laser9un/repos",
      "events_url": "https://api.github.com/users/Laser9un/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Laser9un/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0466ddb653009c31e9b31298dcfcf4548f350093",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0466ddb653009c31e9b31298dcfcf4548f350093",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0466ddb653009c31e9b31298dcfcf4548f350093"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 11,
      "deletions": 8
    },
    "files": [
      {
        "sha": "1760383807795807c63a65716a1fbdaa2a7d2056",
        "filename": "src/version.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 8,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57514c7e0b5f97f961d52d4423fc804f4b2d9926/src/version.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57514c7e0b5f97f961d52d4423fc804f4b2d9926/src/version.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/version.cpp?ref=57514c7e0b5f97f961d52d4423fc804f4b2d9926",
        "patch": "@@ -25,14 +25,14 @@ const std::string CLIENT_NAME(\"Satoshi\");\n //code specific to MSVC compiler\n #define CL_NAME   \"-msvc\"\n #elif __clang__\n-//code specific to clang compilers\n+//code specific to clang compiler\n #define CL_NAME   \"-clang\"\n-#elif __GNUC__\n-//code for GNU C compiler\n-#define CL_NAME   \"-gcc\"\n #elif __MINGW32__\n-//code specific to mingw compilers\n+//code specific to mingw compiler\n #define CL_NAME   \"-mingw\"\n+#elif __GNUC__\n+//code specific to gnu compiler\n+#define CL_NAME   \"-gcc\"\n #else\n #define CL_NAME   \"-genericcl\"\n //others\n@@ -57,11 +57,14 @@ const std::string CLIENT_NAME(\"Satoshi\");\n #    include \"build.h\"\n #endif\n \n-// git will put \"#define GIT_ARCHIVE 1\" on the next line inside archives. \n+// git will put \"#define GIT_ARCHIVE 1\" on the next line inside archives.\n+#ifdef GIT_ARCHIVE\n+#define GIT_COMMIT_DATE \"$Format:%cD$\"\n+#endif\n+\n #define GIT_ARCHIVE 1\n #ifdef GIT_ARCHIVE\n-#    define GIT_COMMIT_ID \"891b422\"\n-#    define GIT_COMMIT_DATE \"$Format:%cD\"\n+#define GIT_COMMIT_ID \"891b422\"\n #endif\n \n #define BUILD_DESC_FROM_COMMIT(maj,min,rev,commit) \\"
      }
    ]
  },
  {
    "sha": "e7c373aeb71bc10c38064e06c6c8eac9ac4a882a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplN2MzNzNhZWI3MWJjMTBjMzgwNjRlMDZjNmM4ZWFjOWFjNGE4ODJh",
    "commit": {
      "author": {
        "name": "Laser9un",
        "email": "laser9un@gmail.com",
        "date": "2017-09-05T18:42:10Z"
      },
      "committer": {
        "name": "Laser9un",
        "email": "laser9un@gmail.com",
        "date": "2017-09-05T18:42:10Z"
      },
      "message": "Add checkpoint @ block # 42000",
      "tree": {
        "sha": "d2bb93c1527b0b425bab2f5b5243d5faceb6bb6f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d2bb93c1527b0b425bab2f5b5243d5faceb6bb6f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e7c373aeb71bc10c38064e06c6c8eac9ac4a882a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e7c373aeb71bc10c38064e06c6c8eac9ac4a882a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e7c373aeb71bc10c38064e06c6c8eac9ac4a882a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e7c373aeb71bc10c38064e06c6c8eac9ac4a882a/comments",
    "author": {
      "login": "Laser9un",
      "id": 16782409,
      "node_id": "MDQ6VXNlcjE2NzgyNDA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16782409?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Laser9un",
      "html_url": "https://github.com/Laser9un",
      "followers_url": "https://api.github.com/users/Laser9un/followers",
      "following_url": "https://api.github.com/users/Laser9un/following{/other_user}",
      "gists_url": "https://api.github.com/users/Laser9un/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Laser9un/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Laser9un/subscriptions",
      "organizations_url": "https://api.github.com/users/Laser9un/orgs",
      "repos_url": "https://api.github.com/users/Laser9un/repos",
      "events_url": "https://api.github.com/users/Laser9un/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Laser9un/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Laser9un",
      "id": 16782409,
      "node_id": "MDQ6VXNlcjE2NzgyNDA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16782409?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Laser9un",
      "html_url": "https://github.com/Laser9un",
      "followers_url": "https://api.github.com/users/Laser9un/followers",
      "following_url": "https://api.github.com/users/Laser9un/following{/other_user}",
      "gists_url": "https://api.github.com/users/Laser9un/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Laser9un/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Laser9un/subscriptions",
      "organizations_url": "https://api.github.com/users/Laser9un/orgs",
      "repos_url": "https://api.github.com/users/Laser9un/repos",
      "events_url": "https://api.github.com/users/Laser9un/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Laser9un/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "57514c7e0b5f97f961d52d4423fc804f4b2d9926",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/57514c7e0b5f97f961d52d4423fc804f4b2d9926",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/57514c7e0b5f97f961d52d4423fc804f4b2d9926"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 3,
      "deletions": 1
    },
    "files": [
      {
        "sha": "3ecbc52b850714e6ea0da2a0fad08cba1195242e",
        "filename": "src/checkpoints.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e7c373aeb71bc10c38064e06c6c8eac9ac4a882a/src/checkpoints.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e7c373aeb71bc10c38064e06c6c8eac9ac4a882a/src/checkpoints.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/checkpoints.cpp?ref=e7c373aeb71bc10c38064e06c6c8eac9ac4a882a",
        "patch": "@@ -29,7 +29,8 @@ namespace Checkpoints\n         ( 0,      std::make_pair(hashGenesisBlock, 1478980800) )\n \t\t( 420,    std::make_pair(uint256(\"0x00000bc4728eba8caf6ac81c81ce2a95ea69e81fde5e75dbc260690caa6d99af\"), 1479273521) )\n \t\t( 4200,   std::make_pair(uint256(\"0x000000022c3ed3e7c12741177b3ff82d0b0186511a5e864859f8e0d799e61ad5\"), 1481725697) )\n-\t\t( 21000,   std::make_pair(uint256(\"00000009204e1118bfca2a5306c50b070445dc9be370ced87bee522a58b269ad\"), 1492742717) )\n+\t\t( 21000,   std::make_pair(uint256(\"0x00000009204e1118bfca2a5306c50b070445dc9be370ced87bee522a58b269ad\"), 1492742717) )\n+\t\t( 42000,   std::make_pair(uint256(\"0x00000004ce60e9b8481570804e09ffc06277befa867db5dca85ef8018a5a2fd7\"), 1504231286) )\n     ;\n \n     static ListBannedBlocks listBanned ="
      },
      {
        "sha": "3630d4d496dec161378f9eb808f8a2c1bcce3d80",
        "filename": "src/kernel.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e7c373aeb71bc10c38064e06c6c8eac9ac4a882a/src/kernel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e7c373aeb71bc10c38064e06c6c8eac9ac4a882a/src/kernel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/kernel.cpp?ref=e7c373aeb71bc10c38064e06c6c8eac9ac4a882a",
        "patch": "@@ -35,6 +35,7 @@ static std::map<int, unsigned int> mapStakeModifierCheckpoints =\n \t\t( 420,   0x9ccdddaf )\n \t\t( 4200,  0x6cfc8d5b )\n \t\t( 21000,  0xe32676ac )\n+\t\t( 42000,  0x51bb6d61 )\n     ;\n \n // Hard checkpoints of stake modifiers to ensure they are deterministic (testNet)"
      }
    ]
  },
  {
    "sha": "674830b1774fae7412c819bd6bdbf0aadbf8e4e4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2NzQ4MzBiMTc3NGZhZTc0MTJjODE5YmQ2YmRiZjBhYWRiZjhlNGU0",
    "commit": {
      "author": {
        "name": "svost",
        "email": "ya.nowa@yandex.ru",
        "date": "2017-10-09T11:26:30Z"
      },
      "committer": {
        "name": "Laser9un",
        "email": "laser9un@gmail.com",
        "date": "2017-10-09T11:26:30Z"
      },
      "message": "Fix CBitcoinAddressGetKeyID logic\n\nFix gcc 7.0 warning (Wimplicit-fallthrough)",
      "tree": {
        "sha": "d172f7b50fb63fdff6b40f2f2ad8ff537d32e81b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d172f7b50fb63fdff6b40f2f2ad8ff537d32e81b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/674830b1774fae7412c819bd6bdbf0aadbf8e4e4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/674830b1774fae7412c819bd6bdbf0aadbf8e4e4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/674830b1774fae7412c819bd6bdbf0aadbf8e4e4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/674830b1774fae7412c819bd6bdbf0aadbf8e4e4/comments",
    "author": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Laser9un",
      "id": 16782409,
      "node_id": "MDQ6VXNlcjE2NzgyNDA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16782409?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Laser9un",
      "html_url": "https://github.com/Laser9un",
      "followers_url": "https://api.github.com/users/Laser9un/followers",
      "following_url": "https://api.github.com/users/Laser9un/following{/other_user}",
      "gists_url": "https://api.github.com/users/Laser9un/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Laser9un/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Laser9un/subscriptions",
      "organizations_url": "https://api.github.com/users/Laser9un/orgs",
      "repos_url": "https://api.github.com/users/Laser9un/repos",
      "events_url": "https://api.github.com/users/Laser9un/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Laser9un/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e7c373aeb71bc10c38064e06c6c8eac9ac4a882a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e7c373aeb71bc10c38064e06c6c8eac9ac4a882a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e7c373aeb71bc10c38064e06c6c8eac9ac4a882a"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 1,
      "deletions": 0
    },
    "files": [
      {
        "sha": "dc813abafa9d617cc37f001469841b59fff14f18",
        "filename": "src/base58.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/674830b1774fae7412c819bd6bdbf0aadbf8e4e4/src/base58.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/674830b1774fae7412c819bd6bdbf0aadbf8e4e4/src/base58.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/base58.cpp?ref=674830b1774fae7412c819bd6bdbf0aadbf8e4e4",
        "patch": "@@ -352,6 +352,7 @@ bool DecodeBase58Check(const std::string& str, std::vector<unsigned char>& vchRe\n             CMalleablePubKey mPubKey;\n             mPubKey.setvch(vchData);\n             keyID = mPubKey.GetID();\n+            return true;\n         }\n         default: return false;\n         }"
      }
    ]
  },
  {
    "sha": "d02af84b9a64afb8d4b07d6ec3d46dacfc31eb04",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkMDJhZjg0YjlhNjRhZmI4ZDRiMDdkNmVjM2Q0NmRhY2ZjMzFlYjA0",
    "commit": {
      "author": {
        "name": "Laser9un",
        "email": "laser9un@gmail.com",
        "date": "2017-12-06T18:25:38Z"
      },
      "committer": {
        "name": "Laser9un",
        "email": "laser9un@gmail.com",
        "date": "2017-12-06T18:25:38Z"
      },
      "message": "Fix 42 logo",
      "tree": {
        "sha": "95a5d6bb7d1b24e98f665b38e9dbcf3552ab7efd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/95a5d6bb7d1b24e98f665b38e9dbcf3552ab7efd"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d02af84b9a64afb8d4b07d6ec3d46dacfc31eb04",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d02af84b9a64afb8d4b07d6ec3d46dacfc31eb04",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d02af84b9a64afb8d4b07d6ec3d46dacfc31eb04",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d02af84b9a64afb8d4b07d6ec3d46dacfc31eb04/comments",
    "author": {
      "login": "Laser9un",
      "id": 16782409,
      "node_id": "MDQ6VXNlcjE2NzgyNDA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16782409?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Laser9un",
      "html_url": "https://github.com/Laser9un",
      "followers_url": "https://api.github.com/users/Laser9un/followers",
      "following_url": "https://api.github.com/users/Laser9un/following{/other_user}",
      "gists_url": "https://api.github.com/users/Laser9un/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Laser9un/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Laser9un/subscriptions",
      "organizations_url": "https://api.github.com/users/Laser9un/orgs",
      "repos_url": "https://api.github.com/users/Laser9un/repos",
      "events_url": "https://api.github.com/users/Laser9un/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Laser9un/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Laser9un",
      "id": 16782409,
      "node_id": "MDQ6VXNlcjE2NzgyNDA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16782409?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Laser9un",
      "html_url": "https://github.com/Laser9un",
      "followers_url": "https://api.github.com/users/Laser9un/followers",
      "following_url": "https://api.github.com/users/Laser9un/following{/other_user}",
      "gists_url": "https://api.github.com/users/Laser9un/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Laser9un/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Laser9un/subscriptions",
      "organizations_url": "https://api.github.com/users/Laser9un/orgs",
      "repos_url": "https://api.github.com/users/Laser9un/repos",
      "events_url": "https://api.github.com/users/Laser9un/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Laser9un/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "674830b1774fae7412c819bd6bdbf0aadbf8e4e4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/674830b1774fae7412c819bd6bdbf0aadbf8e4e4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/674830b1774fae7412c819bd6bdbf0aadbf8e4e4"
      }
    ],
    "stats": {
      "total": 1088,
      "additions": 549,
      "deletions": 539
    },
    "files": [
      {
        "sha": "47d6b554e39d6d421136dfb72f56fe5e0e64a77b",
        "filename": "share/pixmaps/42.ico",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d02af84b9a64afb8d4b07d6ec3d46dacfc31eb04/share/pixmaps/42.ico",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d02af84b9a64afb8d4b07d6ec3d46dacfc31eb04/share/pixmaps/42.ico",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/42.ico?ref=d02af84b9a64afb8d4b07d6ec3d46dacfc31eb04"
      },
      {
        "sha": "dd1f6b86a2b661d400ce7f5279ee1855ebe95114",
        "filename": "share/pixmaps/4232.xpm",
        "status": "modified",
        "additions": 222,
        "deletions": 216,
        "changes": 438,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d02af84b9a64afb8d4b07d6ec3d46dacfc31eb04/share/pixmaps/4232.xpm",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d02af84b9a64afb8d4b07d6ec3d46dacfc31eb04/share/pixmaps/4232.xpm",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/4232.xpm?ref=d02af84b9a64afb8d4b07d6ec3d46dacfc31eb04",
        "patch": "@@ -1,227 +1,233 @@\n /* XPM */\n-static char *_02bp_gxu1f[] = {\n+static char *c8127399dd8e4aa0bf76b0bb12d170df[] = {\n /* columns rows colors chars-per-pixel */\n-\"32 32 189 2 \",\n-\"   c None\",\n-\".  c #121212\",\n-\"X  c #141414\",\n-\"o  c #151515\",\n-\"O  c #161616\",\n-\"+  c #191919\",\n-\"@  c #1B1B1B\",\n-\"#  c #1D1D1D\",\n-\"$  c #1F1F1F\",\n-\"%  c #212121\",\n-\"&  c #222222\",\n-\"*  c #262626\",\n-\"=  c #272727\",\n-\"-  c #292929\",\n-\";  c #2B2B2B\",\n-\":  c #2D2D2D\",\n-\">  c #2E2E2E\",\n-\",  c #303030\",\n-\"<  c #313131\",\n-\"1  c #333333\",\n-\"2  c #343434\",\n-\"3  c #363636\",\n-\"4  c #373737\",\n-\"5  c #383838\",\n-\"6  c #393939\",\n-\"7  c #3A3A3A\",\n-\"8  c #3B3B3B\",\n-\"9  c #3C3C3C\",\n-\"0  c #3D3D3D\",\n-\"q  c #3E3E3E\",\n-\"w  c #3F3F3F\",\n-\"e  c #404040\",\n-\"r  c #414141\",\n-\"t  c #424242\",\n-\"y  c #434343\",\n-\"u  c #444444\",\n-\"i  c #454545\",\n-\"p  c #464646\",\n-\"a  c #474747\",\n-\"s  c #484848\",\n-\"d  c #494949\",\n-\"f  c #4A4A4A\",\n-\"g  c #4B4B4B\",\n-\"h  c #4C4C4C\",\n-\"j  c #4D4D4D\",\n-\"k  c #4F4F4F\",\n-\"l  c #505050\",\n-\"z  c #515151\",\n-\"x  c #525252\",\n-\"c  c #535353\",\n-\"v  c #545454\",\n-\"b  c #555555\",\n-\"n  c #565656\",\n-\"m  c #575757\",\n-\"M  c #585858\",\n-\"N  c #595959\",\n-\"B  c #5A5A5A\",\n-\"V  c #5B5B5B\",\n-\"C  c #5C5C5C\",\n-\"Z  c #5D5D5D\",\n-\"A  c #5E5E5E\",\n-\"S  c #5F5F5F\",\n-\"D  c #606060\",\n-\"F  c #616161\",\n-\"G  c #626262\",\n-\"H  c #636363\",\n-\"J  c #646464\",\n-\"K  c #656565\",\n-\"L  c #666666\",\n-\"P  c #676767\",\n-\"I  c #686868\",\n-\"U  c #696969\",\n-\"Y  c #6A6A6A\",\n-\"T  c #6B6B6B\",\n-\"R  c #6C6C6C\",\n-\"E  c #6D6D6D\",\n-\"W  c #6E6E6E\",\n-\"Q  c #707070\",\n-\"!  c #717171\",\n-\"~  c #727272\",\n-\"^  c #737373\",\n-\"/  c #747474\",\n-\"(  c #757575\",\n-\")  c #767676\",\n-\"_  c #777777\",\n-\"`  c #787878\",\n-\"'  c #797979\",\n-\"]  c gray48\",\n-\"[  c #7B7B7B\",\n-\"{  c #7C7C7C\",\n-\"}  c #7D7D7D\",\n-\"|  c #7E7E7E\",\n-\" . c #7F7F7F\",\n-\".. c #808080\",\n-\"X. c #818181\",\n-\"o. c #828282\",\n-\"O. c #838383\",\n-\"+. c #848484\",\n-\"@. c #858585\",\n-\"#. c #868686\",\n-\"$. c #878787\",\n-\"%. c #888888\",\n-\"&. c #898989\",\n-\"*. c #8A8A8A\",\n-\"=. c #8D8D8D\",\n-\"-. c #8E8E8E\",\n-\";. c #8F8F8F\",\n-\":. c #909090\",\n-\">. c #919191\",\n-\",. c #939393\",\n-\"<. c #949494\",\n-\"1. c #959595\",\n-\"2. c #969696\",\n-\"3. c #979797\",\n-\"4. c #989898\",\n+\"32 32 195 2 \",\n+\"   c gray7\",\n+\".  c gray8\",\n+\"X  c #151515\",\n+\"o  c #161616\",\n+\"O  c #191919\",\n+\"+  c #1B1B1B\",\n+\"@  c #1D1D1D\",\n+\"#  c gray12\",\n+\"$  c gray13\",\n+\"%  c #222222\",\n+\"&  c gray15\",\n+\"*  c #272727\",\n+\"=  c gray16\",\n+\"-  c gray17\",\n+\";  c #2D2D2D\",\n+\":  c gray18\",\n+\">  c gray19\",\n+\",  c #313131\",\n+\"<  c gray20\",\n+\"1  c #343434\",\n+\"2  c gray21\",\n+\"3  c #373737\",\n+\"4  c gray22\",\n+\"5  c #393939\",\n+\"6  c #3A3A3A\",\n+\"7  c gray23\",\n+\"8  c #3C3C3C\",\n+\"9  c gray24\",\n+\"0  c #3E3E3E\",\n+\"q  c #3F3F3F\",\n+\"w  c gray25\",\n+\"e  c #414141\",\n+\"r  c gray26\",\n+\"t  c #434343\",\n+\"y  c #444444\",\n+\"u  c gray27\",\n+\"i  c #464646\",\n+\"p  c gray28\",\n+\"a  c #484848\",\n+\"s  c #494949\",\n+\"d  c gray29\",\n+\"f  c #4B4B4B\",\n+\"g  c #4C4C4C\",\n+\"h  c gray30\",\n+\"j  c gray31\",\n+\"k  c #505050\",\n+\"l  c #515151\",\n+\"z  c gray32\",\n+\"x  c #535353\",\n+\"c  c gray33\",\n+\"v  c #555555\",\n+\"b  c #565656\",\n+\"n  c gray34\",\n+\"m  c #585858\",\n+\"M  c gray35\",\n+\"N  c #5A5A5A\",\n+\"B  c #5B5B5B\",\n+\"V  c gray36\",\n+\"C  c #5D5D5D\",\n+\"Z  c gray37\",\n+\"A  c #5F5F5F\",\n+\"S  c #606060\",\n+\"D  c gray38\",\n+\"F  c #626262\",\n+\"G  c gray39\",\n+\"H  c #646464\",\n+\"J  c #656565\",\n+\"K  c gray40\",\n+\"L  c #676767\",\n+\"P  c #686868\",\n+\"I  c DimGray\",\n+\"U  c #6A6A6A\",\n+\"Y  c #6C6C6C\",\n+\"T  c #6D6D6D\",\n+\"R  c gray43\",\n+\"E  c gray44\",\n+\"W  c #717171\",\n+\"Q  c #727272\",\n+\"!  c gray45\",\n+\"~  c #747474\",\n+\"^  c gray46\",\n+\"/  c #767676\",\n+\"(  c #777777\",\n+\")  c gray47\",\n+\"_  c #797979\",\n+\"`  c gray48\",\n+\"'  c #7B7B7B\",\n+\"]  c #7C7C7C\",\n+\"[  c gray49\",\n+\"{  c #7E7E7E\",\n+\"}  c gray50\",\n+\"|  c #808080\",\n+\" . c #818181\",\n+\".. c gray51\",\n+\"X. c #838383\",\n+\"o. c #848484\",\n+\"O. c gray52\",\n+\"+. c #868686\",\n+\"@. c gray53\",\n+\"#. c #888888\",\n+\"$. c #898989\",\n+\"%. c gray54\",\n+\"&. c #8B8B8B\",\n+\"*. c #8D8D8D\",\n+\"=. c #8E8E8E\",\n+\"-. c gray56\",\n+\";. c #909090\",\n+\":. c gray57\",\n+\">. c #939393\",\n+\",. c gray58\",\n+\"<. c #959595\",\n+\"1. c gray59\",\n+\"2. c #979797\",\n+\"3. c #989898\",\n+\"4. c gray60\",\n \"5. c #9A9A9A\",\n \"6. c #9B9B9B\",\n-\"7. c #9C9C9C\",\n+\"7. c gray61\",\n \"8. c #9D9D9D\",\n-\"9. c #9E9E9E\",\n+\"9. c gray62\",\n \"0. c #9F9F9F\",\n-\"q. c #A2A2A2\",\n-\"w. c #A3A3A3\",\n-\"e. c #A4A4A4\",\n+\"q. c #A0A0A0\",\n+\"w. c #A2A2A2\",\n+\"e. c gray64\",\n \"r. c #A5A5A5\",\n-\"t. c #A6A6A6\",\n+\"t. c gray65\",\n \"y. c #A7A7A7\",\n-\"u. c #A8A8A8\",\n+\"u. c gray66\",\n \"i. c #A9A9A9\",\n-\"p. c #ABABAB\",\n-\"a. c #ACACAC\",\n-\"s. c #ADADAD\",\n-\"d. c #AEAEAE\",\n-\"f. c #AFAFAF\",\n-\"g. c #B0B0B0\",\n-\"h. c #B1B1B1\",\n-\"j. c #B2B2B2\",\n-\"k. c #B4B4B4\",\n-\"l. c #B5B5B5\",\n-\"z. c #B6B6B6\",\n-\"x. c #B7B7B7\",\n-\"c. c #B8B8B8\",\n-\"v. c #BABABA\",\n-\"b. c #BBBBBB\",\n-\"n. c #BCBCBC\",\n-\"m. c #BDBDBD\",\n-\"M. c #BEBEBE\",\n-\"N. c #BFBFBF\",\n-\"B. c #C0C0C0\",\n-\"V. c #C1C1C1\",\n-\"C. c #C2C2C2\",\n-\"Z. c #C3C3C3\",\n-\"A. c #C4C4C4\",\n-\"S. c #C5C5C5\",\n-\"D. c #C6C6C6\",\n-\"F. c #C7C7C7\",\n-\"G. c #C8C8C8\",\n-\"H. c #C9C9C9\",\n-\"J. c #CACACA\",\n-\"K. c #CBCBCB\",\n-\"L. c #CCCCCC\",\n-\"P. c #CDCDCD\",\n-\"I. c #CECECE\",\n-\"U. c #CFCFCF\",\n-\"Y. c #D0D0D0\",\n-\"T. c #D1D1D1\",\n-\"R. c #D2D2D2\",\n-\"E. c #D3D3D3\",\n-\"W. c #D4D4D4\",\n-\"Q. c #D5D5D5\",\n-\"!. c #D6D6D6\",\n-\"~. c #D7D7D7\",\n-\"^. c #D8D8D8\",\n-\"/. c #D9D9D9\",\n-\"(. c #DADADA\",\n-\"). c #DBDBDB\",\n-\"_. c gainsboro\",\n-\"`. c #DDDDDD\",\n-\"'. c #DEDEDE\",\n-\"]. c #DFDFDF\",\n-\"[. c #E0E0E0\",\n-\"{. c #E1E1E1\",\n-\"}. c #E2E2E2\",\n-\"|. c #E3E3E3\",\n-\" X c #E4E4E4\",\n-\".X c #E5E5E5\",\n-\"XX c #E6E6E6\",\n-\"oX c #E7E7E7\",\n-\"OX c #F1F1F1\",\n+\"p. c #AAAAAA\",\n+\"a. c gray67\",\n+\"s. c #ACACAC\",\n+\"d. c gray68\",\n+\"f. c #AEAEAE\",\n+\"g. c #AFAFAF\",\n+\"h. c gray69\",\n+\"j. c #B1B1B1\",\n+\"k. c #B2B2B2\",\n+\"l. c gray70\",\n+\"z. c #B4B4B4\",\n+\"x. c gray71\",\n+\"c. c #B6B6B6\",\n+\"v. c #B7B7B7\",\n+\"b. c gray72\",\n+\"n. c #B9B9B9\",\n+\"m. c gray73\",\n+\"M. c #BBBBBB\",\n+\"N. c #BCBCBC\",\n+\"B. c gray74\",\n+\"V. c gray\",\n+\"C. c gray75\",\n+\"Z. c #C0C0C0\",\n+\"A. c #C1C1C1\",\n+\"S. c gray76\",\n+\"D. c #C3C3C3\",\n+\"F. c gray77\",\n+\"G. c #C5C5C5\",\n+\"H. c #C6C6C6\",\n+\"J. c gray78\",\n+\"K. c #C8C8C8\",\n+\"L. c gray79\",\n+\"P. c #CACACA\",\n+\"I. c #CBCBCB\",\n+\"U. c gray80\",\n+\"Y. c #CDCDCD\",\n+\"T. c #CECECE\",\n+\"R. c gray81\",\n+\"E. c #D0D0D0\",\n+\"W. c gray82\",\n+\"Q. c #D2D2D2\",\n+\"!. c LightGray\",\n+\"~. c gray83\",\n+\"^. c #D5D5D5\",\n+\"/. c gray84\",\n+\"(. c #D7D7D7\",\n+\"). c #D8D8D8\",\n+\"_. c gray85\",\n+\"`. c #DADADA\",\n+\"'. c gray86\",\n+\"]. c gainsboro\",\n+\"[. c #DDDDDD\",\n+\"{. c gray87\",\n+\"}. c #DFDFDF\",\n+\"|. c gray88\",\n+\" X c #E1E1E1\",\n+\".X c #E2E2E2\",\n+\"XX c gray89\",\n+\"oX c #E4E4E4\",\n+\"OX c gray90\",\n+\"+X c #E6E6E6\",\n+\"@X c #E7E7E7\",\n+\"#X c #E9E9E9\",\n+\"$X c #EFEFEF\",\n+\"%X c gray95\",\n+\"&X c None\",\n /* pixels */\n-\"                                                                \",\n-\"                                                                \",\n-\"                      B x h s p p s j n H                       \",\n-\"                  z s r e j x M N z p q e f Z                   \",\n-\"                a t j T ;.t.c.v.u.j.0...Y p q h L               \",\n-\"            a y g [ f.H.E.W.).(.m.!.Q.W.V.4.U u u A             \",\n-\"          t t M 9.W.).R._./.(.].`.!.'.`.I./.F.$.f t Z           \",\n-\"          t c e.Y.I.n.(.{.{.Q._..XT.Q.U.m.U.J.c.-.k u F         \",\n-\"        w k >.L.Y..XQ.oX(.v.-.,.).L.J.L.r.&./ ~ _ [ a d         \",\n-\"      5 a *.H.Y.C.oXOX~.+.P K } !.^.c.[ R F M n v %./ e v       \",\n-\"      q P H. XB.l.oXV./ V %.{ [ [.W.[ n n E ;.s.Q &.k.M p       \",\n-\"    , p w.^.~.M.`.s.R R y.n.R ,.{.j.K R 4.Y.{.Q.| $.P.o.r v     \",\n-\"    4 N N.XXW.H.;.m Y M.).{ R F.Q.>.J 5.G.'.}.t.B >.{.j.k f     \",\n-\"    7 / R.!.P.:.l F 0.G.u.V 7.(.!.#.E &.a.K.q.N N y.}.F.F i     \",\n-\"    0 =.|.^.5.z U x.^.n.E ) P.{. XZ.R.!.j.) M L g.~._.A.! y     \",\n-\"    e 3.^.M.I F k./.[.*.L f._.[.[.(.~.q.H l I f.|.^.^.I.O.y     \",\n-\"    e 7.oXi.m { b.p.1.D A _ 9.)..X).2.B c ! Z.E.].'.T.A.o.u     \",\n-\"    0 4.R.7.A x J N b S H M *.(.!.2.S J 9.I..X/.).P.H.I.X.t     \",\n-\"    6 #.U.d.T K B C C c F W v./.=.F R f.oX/./.H.Q.(.U.R.[ r     \",\n-\"    < U U.R.6.;.<.) M @.M.H.).j.D  .x.M.i.=.( <./.'.(.S.F w     \",\n-\"    * l V.[.R.[. X&.N p.'./._.4.V _ J n B N Z p.(.!._.g.l 8     \",\n-\"    o 9 >.H.N.!.U.^ k 3.).[./.i.B b v V V m ' C./.E.Y.-.t       \",\n-\"      ; M h.M.J.I.] ] B._./.'.J.X.G E _  .2.C.{.!.).n.B 7       \",\n-\"      X 7 ` F.~.).D.m.l.C.^.'./.K.N.C.Z.K.W.'.~.H.N.' r         \",\n-\"        % u <.^.Q.oXY.g.b.I.Y.}.XX].^.{.{.`.Q.`.I.:.s 1         \",\n-\"          - d 4._._.J.P.K.S.Z.J.^.). X~.(.}.{.W.6.j 3           \",\n-\"            - p @.A.!./.G.Z.V.m.Z.Q.'..X(.'.P.*.g 2             \",\n-\"              & 9 C ;.B.`.Q.S.Z.K.`.).Q.v.7.K r >               \",\n-\"                o > e N +.8.a.h.c.z.r.+.B y 1 $                 \",\n-\"                    O = 2 0 p h h a w 4 : #                     \",\n-\"                          . + # # @ o                           \",\n-\"                                                                \"\n+\"&X&X&X&X&X&X&X&X&X&X&X&X&X&X&X&X&X&X&X&X&X&X&X&X&X&X&X&X&X&X&X&X\",\n+\"&X&X&X&X&X&X&X&X&X&X&X&X&X&X&X&X&X&X&X&X&X&X&X&X&X&X&X&X&X&X&X&X\",\n+\"&X&X&X&X&X&X&X&X&X&X&Xm x a a p p p j n D &X&X&X&X&X&X&X&X&X&X&X\",\n+\"&X&X&X&X&X&X&X&X&Xx a t 0 j n n m j p 0 t a C &X&X&X&X&X&X&X&X&X\",\n+\"&X&X&X&X&X&X&X&Xp t j T >.r.b.b.r.k.w.] P a 0 j J &X&X&X&X&X&X&X\",\n+\"&X&X&X&X&X&Xp t j ` k.R.Q.^.].).V.^.^.Q.Z.5.P p p C &X&X&X&X&X&X\",\n+\"&X&X&X&X&Xt t m w.^.).Q.].).).XX].).].].R.).F.#.a t C &X&X&X&X&X\",\n+\"&X&X&X&X&Xt x r.Q.R.V.).XXXX^.].oXQ.).Q.V.R.L.b.*.j p D &X&X&X&X\",\n+\"&X&X&X&X0 j >.^.Q.oX^.#X].V.*.1.).R.L.R.r.#.! ! ( ] p a &X&X&X&X\",\n+\"&X&X&X4 p #.^.].Z.#X%X).>.P J ] ^.).b.` P D n n n #.! t n &X&X&X\",\n+\"&X&X&X0 J R.$XF.z.#XF.( m #.` ` XXQ.` n m T *.g.T *.z.n p &X&X&X\",\n+\"&X&X: p r.].].V.XXz.T T r.V.T 1.XXk.J T 1.Q.XX^.] #.R. .t n &X&X\",\n+\"&X&X4 m Z.#X^.Q.1.n P Z.].] P L.^.>.D 7.F.].oXp.m >.XXk.j a &X&X\",\n+\"&X&X4 ! Q.^.R.1.x D w.F.p.m 7.).^.O.T #.g.L.w.m m r.XXL.C p &X&X\",\n+\"&X&X0 *.XX).5.x P b.).V.T ( R.XXoXF.Q.^.k.( m J k.^.].F.! t &X&X\",\n+\"&X&Xt 1.).V.P D z.).XX#.P g.).XXXX).).w.D x P g.oX).^.R. .t &X&X\",\n+\"&X&Xt 7.oXp.n ] b.p.1.D C ` w.].oX].1.m n ! Z.^.XX].Q.F. .p &X&X\",\n+\"&X&X0 5.^.7.C x J m n C D m #.].^.1.D J 7.R.oX).).R.L.R. .t &X&X\",\n+\"&X&X4 O.R.g.T J m C C n D T b.).*.D T g.oX).).L.^.].Q.Q.` t &X&X\",\n+\"&X&X> P R.Q.7.*.1.` m O.V.L.).k.D  .z.V.p.*.( >.).].).F.D 0 &X&X\",\n+\"&X&X& x Z.].Q.XXXX#.m g.XX).].5.m ` J n m m C g.).^.].k.x 4 &X&X\",\n+\"&X&XX 4 >.L.Z.^.R.! j 1.).XX).p.m n n m m m ` Z.).Q.Q.*.t &X&X&X\",\n+\"&X&X&X: m k.Z.L.R.` ` V.].).].L. .D T `  .1.Z.XX^.].V.m 4 &X&X&X\",\n+\"&X&X&X. 4 ` L.^.].F.V.z.F.).].).L.Z.Z.F.R.Q.].).L.Z.` t &X&X&X&X\",\n+\"&X&X&X&X$ p >.^.^.oXQ.k.b.R.Q.XXoXXX).XXXX].^.].R.>.a 1 &X&X&X&X\",\n+\"&X&X&X&X&X= a 5.].].L.R.L.F.F.L.).].oX).).XXXXQ.7.a 1 &X&X&X&X&X\",\n+\"&X&X&X&X&X&X= p O.F.).).L.F.Z.V.Z.^.].oX).].R.#.a 1 &X&X&X&X&X&X\",\n+\"&X&X&X&X&X&X&X$ 0 C *.Z.].^.F.F.R.].).^.V.7.J t > &X&X&X&X&X&X&X\",\n+\"&X&X&X&X&X&X&X&XX : 0 m O.7.p.k.b.z.r. .m p > # &X&X&X&X&X&X&X&X\",\n+\"&X&X&X&X&X&X&X&X&X&XX = > 0 p a j p t 1 : # &X&X&X&X&X&X&X&X&X&X\",\n+\"&X&X&X&X&X&X&X&X&X&X&X&X&X. + # # + X &X&X&X&X&X&X&X&X&X&X&X&X&X\",\n+\"&X&X&X&X&X&X&X&X&X&X&X&X&X&X&X&X&X&X&X&X&X&X&X&X&X&X&X&X&X&X&X&X\"\n };"
      },
      {
        "sha": "946ffecdd4c22c3d85ccbe9320112c27f0a01e61",
        "filename": "share/pixmaps/4280.xpm",
        "status": "modified",
        "additions": 327,
        "deletions": 323,
        "changes": 650,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d02af84b9a64afb8d4b07d6ec3d46dacfc31eb04/share/pixmaps/4280.xpm",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d02af84b9a64afb8d4b07d6ec3d46dacfc31eb04/share/pixmaps/4280.xpm",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/4280.xpm?ref=d02af84b9a64afb8d4b07d6ec3d46dacfc31eb04",
        "patch": "@@ -1,329 +1,333 @@\n /* XPM */\n-static char *cgd6b_gj3dd[] = {\n+static char *_ea0ac925a4f4febae3025bad6a6b67e[] = {\n /* columns rows colors chars-per-pixel */\n-\"80 80 243 2 \",\n-\"   c None\",\n-\".  c black\",\n-\"X  c #010101\",\n-\"o  c #020202\",\n-\"O  c gray1\",\n-\"+  c #040404\",\n-\"@  c gray2\",\n-\"#  c #060606\",\n-\"$  c #070707\",\n-\"%  c gray3\",\n-\"&  c #090909\",\n-\"*  c #0B0B0B\",\n-\"=  c #0C0C0C\",\n-\"-  c gray5\",\n-\";  c #0E0E0E\",\n-\":  c #111111\",\n-\">  c gray7\",\n-\",  c #131313\",\n-\"<  c gray8\",\n-\"1  c #161616\",\n-\"2  c gray9\",\n-\"3  c #181818\",\n-\"4  c #191919\",\n-\"5  c gray10\",\n-\"6  c #1B1B1B\",\n-\"7  c #1D1D1D\",\n-\"8  c #1E1E1E\",\n-\"9  c gray12\",\n-\"0  c #202020\",\n-\"q  c gray13\",\n-\"w  c #222222\",\n-\"e  c #232323\",\n-\"r  c #252525\",\n-\"t  c #272727\",\n-\"y  c #282828\",\n-\"u  c gray16\",\n-\"i  c #2A2A2A\",\n-\"p  c gray17\",\n-\"a  c #2C2C2C\",\n-\"s  c #2D2D2D\",\n-\"d  c gray18\",\n-\"f  c #2F2F2F\",\n-\"g  c gray19\",\n-\"h  c #313131\",\n-\"j  c #323232\",\n-\"k  c gray20\",\n-\"l  c #343434\",\n-\"z  c #353535\",\n-\"x  c gray21\",\n-\"c  c #373737\",\n-\"v  c gray22\",\n-\"b  c #393939\",\n-\"n  c #3A3A3A\",\n-\"m  c gray23\",\n-\"M  c #3C3C3C\",\n-\"N  c gray24\",\n-\"B  c #3E3E3E\",\n-\"V  c #3F3F3F\",\n-\"C  c gray25\",\n-\"Z  c #414141\",\n-\"A  c gray26\",\n-\"S  c #434343\",\n-\"D  c #444444\",\n-\"F  c gray27\",\n-\"G  c #464646\",\n-\"H  c gray28\",\n-\"J  c #484848\",\n-\"K  c #494949\",\n-\"L  c gray29\",\n-\"P  c #4B4B4B\",\n-\"I  c #4C4C4C\",\n-\"U  c gray30\",\n-\"Y  c #4E4E4E\",\n-\"T  c gray31\",\n-\"R  c #505050\",\n-\"E  c #515151\",\n-\"W  c gray32\",\n-\"Q  c #535353\",\n-\"!  c gray33\",\n-\"~  c #555555\",\n-\"^  c #565656\",\n-\"/  c gray34\",\n-\"(  c #585858\",\n-\")  c gray35\",\n-\"_  c #5A5A5A\",\n-\"`  c #5B5B5B\",\n-\"'  c gray36\",\n-\"]  c #5D5D5D\",\n-\"[  c gray37\",\n-\"{  c #5F5F5F\",\n-\"}  c #606060\",\n-\"|  c gray38\",\n-\" . c #626262\",\n-\".. c gray39\",\n-\"X. c #646464\",\n-\"o. c #656565\",\n-\"O. c gray40\",\n-\"+. c #676767\",\n-\"@. c #686868\",\n-\"#. c DimGray\",\n-\"$. c #6A6A6A\",\n-\"%. c gray42\",\n-\"&. c #6C6C6C\",\n-\"*. c #6D6D6D\",\n-\"=. c gray43\",\n-\"-. c #6F6F6F\",\n-\";. c gray44\",\n-\":. c #717171\",\n-\">. c #727272\",\n-\",. c gray45\",\n-\"<. c #747474\",\n-\"1. c gray46\",\n-\"2. c #767676\",\n-\"3. c #777777\",\n-\"4. c gray47\",\n-\"5. c #797979\",\n-\"6. c gray48\",\n-\"7. c #7B7B7B\",\n-\"8. c #7C7C7C\",\n-\"9. c gray49\",\n-\"0. c #7E7E7E\",\n-\"q. c gray50\",\n-\"w. c #808080\",\n-\"e. c #818181\",\n-\"r. c gray51\",\n-\"t. c #838383\",\n-\"y. c #848484\",\n-\"u. c gray52\",\n-\"i. c #868686\",\n-\"p. c gray53\",\n-\"a. c #888888\",\n-\"s. c #898989\",\n-\"d. c gray54\",\n-\"f. c #8B8B8B\",\n-\"g. c gray55\",\n-\"h. c #8D8D8D\",\n-\"j. c #8E8E8E\",\n-\"k. c gray56\",\n-\"l. c #909090\",\n-\"z. c gray57\",\n-\"x. c #929292\",\n-\"c. c #939393\",\n-\"v. c gray58\",\n-\"b. c #959595\",\n-\"n. c gray59\",\n-\"m. c #979797\",\n-\"M. c #989898\",\n-\"N. c gray60\",\n-\"B. c #9A9A9A\",\n-\"V. c #9B9B9B\",\n-\"C. c gray61\",\n-\"Z. c #9D9D9D\",\n-\"A. c gray62\",\n-\"S. c #9F9F9F\",\n-\"D. c #A0A0A0\",\n-\"F. c gray63\",\n-\"G. c #A2A2A2\",\n-\"H. c gray64\",\n-\"J. c #A4A4A4\",\n-\"K. c #A5A5A5\",\n-\"L. c gray65\",\n-\"P. c #A7A7A7\",\n-\"I. c gray66\",\n-\"U. c #A9A9A9\",\n-\"Y. c #AAAAAA\",\n-\"T. c gray67\",\n-\"R. c #ACACAC\",\n-\"E. c gray68\",\n-\"W. c #AEAEAE\",\n-\"Q. c #AFAFAF\",\n-\"!. c gray69\",\n-\"~. c #B1B1B1\",\n-\"^. c #B2B2B2\",\n-\"/. c gray70\",\n-\"(. c #B4B4B4\",\n-\"). c gray71\",\n-\"_. c #B6B6B6\",\n-\"`. c #B7B7B7\",\n-\"'. c gray72\",\n-\"]. c #B9B9B9\",\n-\"[. c gray73\",\n-\"{. c #BBBBBB\",\n-\"}. c #BCBCBC\",\n-\"|. c gray74\",\n-\" X c gray\",\n-\".X c gray75\",\n-\"XX c #C0C0C0\",\n-\"oX c #C1C1C1\",\n-\"OX c gray76\",\n-\"+X c #C3C3C3\",\n-\"@X c gray77\",\n-\"#X c #C5C5C5\",\n-\"$X c #C6C6C6\",\n-\"%X c gray78\",\n-\"&X c #C8C8C8\",\n-\"*X c gray79\",\n-\"=X c #CACACA\",\n-\"-X c #CBCBCB\",\n-\";X c gray80\",\n-\":X c #CDCDCD\",\n-\">X c #CECECE\",\n-\",X c gray81\",\n-\"<X c #D0D0D0\",\n-\"1X c gray82\",\n-\"2X c #D2D2D2\",\n-\"3X c LightGray\",\n-\"4X c gray83\",\n-\"5X c #D5D5D5\",\n-\"6X c gray84\",\n-\"7X c #D7D7D7\",\n-\"8X c #D8D8D8\",\n-\"9X c gray85\",\n-\"0X c #DADADA\",\n-\"qX c gray86\",\n-\"wX c gainsboro\",\n-\"eX c #DDDDDD\",\n-\"rX c gray87\",\n-\"tX c #DFDFDF\",\n-\"yX c gray88\",\n-\"uX c #E1E1E1\",\n-\"iX c #E2E2E2\",\n-\"pX c gray89\",\n-\"aX c #E4E4E4\",\n-\"sX c gray90\",\n-\"dX c #E6E6E6\",\n-\"fX c #E7E7E7\",\n-\"gX c gray91\",\n-\"hX c #E9E9E9\",\n-\"jX c #EAEAEA\",\n-\"kX c gray92\",\n-\"lX c #ECECEC\",\n-\"zX c gray93\",\n-\"xX c #EEEEEE\",\n-\"cX c #EFEFEF\",\n-\"vX c gray94\",\n-\"bX c #F1F1F1\",\n-\"nX c gray95\",\n-\"mX c #F3F3F3\",\n-\"MX c #F4F4F4\",\n-\"NX c gray96\",\n-\"BX c #F6F6F6\",\n+\"80 80 247 2 \",\n+\"   c black\",\n+\".  c #010101\",\n+\"X  c #020202\",\n+\"o  c gray1\",\n+\"O  c #040404\",\n+\"+  c gray2\",\n+\"@  c #060606\",\n+\"#  c #070707\",\n+\"$  c gray3\",\n+\"%  c #090909\",\n+\"&  c #0B0B0B\",\n+\"*  c #0C0C0C\",\n+\"=  c gray5\",\n+\"-  c #0E0E0E\",\n+\";  c #111111\",\n+\":  c gray7\",\n+\">  c #131313\",\n+\",  c gray8\",\n+\"<  c #161616\",\n+\"1  c gray9\",\n+\"2  c #181818\",\n+\"3  c #191919\",\n+\"4  c gray10\",\n+\"5  c #1B1B1B\",\n+\"6  c #1D1D1D\",\n+\"7  c #1E1E1E\",\n+\"8  c gray12\",\n+\"9  c #202020\",\n+\"0  c gray13\",\n+\"q  c #222222\",\n+\"w  c #232323\",\n+\"e  c #252525\",\n+\"r  c #272727\",\n+\"t  c #282828\",\n+\"y  c gray16\",\n+\"u  c #2A2A2A\",\n+\"i  c gray17\",\n+\"p  c #2C2C2C\",\n+\"a  c #2D2D2D\",\n+\"s  c gray18\",\n+\"d  c #2F2F2F\",\n+\"f  c gray19\",\n+\"g  c #313131\",\n+\"h  c #323232\",\n+\"j  c gray20\",\n+\"k  c #343434\",\n+\"l  c #353535\",\n+\"z  c gray21\",\n+\"x  c #373737\",\n+\"c  c gray22\",\n+\"v  c #393939\",\n+\"b  c #3A3A3A\",\n+\"n  c gray23\",\n+\"m  c #3C3C3C\",\n+\"M  c gray24\",\n+\"N  c #3E3E3E\",\n+\"B  c #3F3F3F\",\n+\"V  c gray25\",\n+\"C  c #414141\",\n+\"Z  c gray26\",\n+\"A  c #434343\",\n+\"S  c #444444\",\n+\"D  c gray27\",\n+\"F  c #464646\",\n+\"G  c gray28\",\n+\"H  c #484848\",\n+\"J  c #494949\",\n+\"K  c gray29\",\n+\"L  c #4B4B4B\",\n+\"P  c #4C4C4C\",\n+\"I  c gray30\",\n+\"U  c #4E4E4E\",\n+\"Y  c gray31\",\n+\"T  c #505050\",\n+\"R  c #515151\",\n+\"E  c gray32\",\n+\"W  c #535353\",\n+\"Q  c gray33\",\n+\"!  c #555555\",\n+\"~  c #565656\",\n+\"^  c gray34\",\n+\"/  c #585858\",\n+\"(  c gray35\",\n+\")  c #5A5A5A\",\n+\"_  c #5B5B5B\",\n+\"`  c gray36\",\n+\"'  c #5D5D5D\",\n+\"]  c gray37\",\n+\"[  c #5F5F5F\",\n+\"{  c #606060\",\n+\"}  c gray38\",\n+\"|  c #626262\",\n+\" . c gray39\",\n+\".. c #646464\",\n+\"X. c #656565\",\n+\"o. c gray40\",\n+\"O. c #676767\",\n+\"+. c #686868\",\n+\"@. c DimGray\",\n+\"#. c #6A6A6A\",\n+\"$. c gray42\",\n+\"%. c #6C6C6C\",\n+\"&. c #6D6D6D\",\n+\"*. c gray43\",\n+\"=. c #6F6F6F\",\n+\"-. c gray44\",\n+\";. c #717171\",\n+\":. c #727272\",\n+\">. c gray45\",\n+\",. c #747474\",\n+\"<. c gray46\",\n+\"1. c #767676\",\n+\"2. c #777777\",\n+\"3. c gray47\",\n+\"4. c #797979\",\n+\"5. c gray48\",\n+\"6. c #7B7B7B\",\n+\"7. c #7C7C7C\",\n+\"8. c gray49\",\n+\"9. c #7E7E7E\",\n+\"0. c gray50\",\n+\"q. c #808080\",\n+\"w. c #818181\",\n+\"e. c gray51\",\n+\"r. c #838383\",\n+\"t. c #848484\",\n+\"y. c gray52\",\n+\"u. c #868686\",\n+\"i. c gray53\",\n+\"p. c #888888\",\n+\"a. c #898989\",\n+\"s. c gray54\",\n+\"d. c #8B8B8B\",\n+\"f. c gray55\",\n+\"g. c #8D8D8D\",\n+\"h. c #8E8E8E\",\n+\"j. c gray56\",\n+\"k. c #909090\",\n+\"l. c gray57\",\n+\"z. c #929292\",\n+\"x. c #939393\",\n+\"c. c gray58\",\n+\"v. c #959595\",\n+\"b. c gray59\",\n+\"n. c #979797\",\n+\"m. c #989898\",\n+\"M. c gray60\",\n+\"N. c #9A9A9A\",\n+\"B. c #9B9B9B\",\n+\"V. c gray61\",\n+\"C. c #9D9D9D\",\n+\"Z. c gray62\",\n+\"A. c #9F9F9F\",\n+\"S. c #A0A0A0\",\n+\"D. c gray63\",\n+\"F. c #A2A2A2\",\n+\"G. c gray64\",\n+\"H. c #A4A4A4\",\n+\"J. c #A5A5A5\",\n+\"K. c gray65\",\n+\"L. c #A7A7A7\",\n+\"P. c gray66\",\n+\"I. c #A9A9A9\",\n+\"U. c #AAAAAA\",\n+\"Y. c gray67\",\n+\"T. c #ACACAC\",\n+\"R. c gray68\",\n+\"E. c #AEAEAE\",\n+\"W. c #AFAFAF\",\n+\"Q. c gray69\",\n+\"!. c #B1B1B1\",\n+\"~. c #B2B2B2\",\n+\"^. c gray70\",\n+\"/. c #B4B4B4\",\n+\"(. c gray71\",\n+\"). c #B6B6B6\",\n+\"_. c #B7B7B7\",\n+\"`. c gray72\",\n+\"'. c #B9B9B9\",\n+\"]. c gray73\",\n+\"[. c #BBBBBB\",\n+\"{. c #BCBCBC\",\n+\"}. c gray74\",\n+\"|. c gray\",\n+\" X c gray75\",\n+\".X c #C0C0C0\",\n+\"XX c #C1C1C1\",\n+\"oX c gray76\",\n+\"OX c #C3C3C3\",\n+\"+X c gray77\",\n+\"@X c #C5C5C5\",\n+\"#X c #C6C6C6\",\n+\"$X c gray78\",\n+\"%X c #C8C8C8\",\n+\"&X c gray79\",\n+\"*X c #CACACA\",\n+\"=X c #CBCBCB\",\n+\"-X c gray80\",\n+\";X c #CDCDCD\",\n+\":X c #CECECE\",\n+\">X c gray81\",\n+\",X c #D0D0D0\",\n+\"<X c gray82\",\n+\"1X c #D2D2D2\",\n+\"2X c LightGray\",\n+\"3X c gray83\",\n+\"4X c #D5D5D5\",\n+\"5X c gray84\",\n+\"6X c #D7D7D7\",\n+\"7X c #D8D8D8\",\n+\"8X c gray85\",\n+\"9X c #DADADA\",\n+\"0X c gray86\",\n+\"qX c gainsboro\",\n+\"wX c #DDDDDD\",\n+\"eX c gray87\",\n+\"rX c #DFDFDF\",\n+\"tX c gray88\",\n+\"yX c #E1E1E1\",\n+\"uX c #E2E2E2\",\n+\"iX c gray89\",\n+\"pX c #E4E4E4\",\n+\"aX c gray90\",\n+\"sX c #E6E6E6\",\n+\"dX c #E7E7E7\",\n+\"fX c gray91\",\n+\"gX c #E9E9E9\",\n+\"hX c #EAEAEA\",\n+\"jX c gray92\",\n+\"kX c #ECECEC\",\n+\"lX c gray93\",\n+\"zX c #EEEEEE\",\n+\"xX c #EFEFEF\",\n+\"cX c gray94\",\n+\"vX c #F1F1F1\",\n+\"bX c gray95\",\n+\"nX c #F3F3F3\",\n+\"mX c #F4F4F4\",\n+\"MX c gray96\",\n+\"NX c #F6F6F6\",\n+\"BX c gray97\",\n \"VX c #F8F8F8\",\n \"CX c #F9F9F9\",\n+\"ZX c gray98\",\n+\"AX c gray99\",\n+\"SX c #FDFDFD\",\n+\"DX c None\",\n /* pixels */\n-\"                                                                                                                                                                \",\n-\"                                                                                                                                                                \",\n-\"                                                                                                                                                                \",\n-\"                                                                                                                                                                \",\n-\"                                                                        y.q.7.5.5.8.e.a.                                                                        \",\n-\"                                                              1.#.{ / E U L K J J K L U E / } &.9.z.                                                            \",\n-\"                                                        %.' E K F S S S S S S S S S S S S S S D J R { <.j.                                                      \",\n-\"                                                  =.] T H D S S S A Z C B M n n n n m M B C A S S S S G T ..w.                                                  \",\n-\"                                              #.( L D S S S Z B b c v l x A m N A V M n v x h k n V A S S S L ' 8.                                              \",\n-\"                                            / L D S S A B b l m H ] @.] +.,.<.1.8.1.=.%.+.o.Y k M c z b V S S S K [ y.                                          \",\n-\"                                        ` I D S S A M n S Y U O.d.l.A.Y.P.K.P.`.[.I.z.V.c.j.d.;. .| ! V k x B A S S U $.                                        \",\n-\"                                      E H S S A N b L { 1.y.N.K.!.L.oX@X@X5X=X<XOXF.(.2X|.OXE.f.i.0.a.-.( A g x V S S F ) y.                                    \",\n-\"                                  ~ I D S S V n J O.7.p.H.E.,X6X5X|._.@XuXlXXX'.D.q.3XxX,X:X<X~.-XU.E.D.i.-.Y C z v Z S S T 2.                                  \",\n-\"                                R J D S A N V [ w.j.E.2X0X<X-X$XdXkX&X$XlXjX6X<XE.V.1XjX;X#XjX-XrXeX].$X/.A.>.%.] m j B S S L &.                                \",\n-\"                              I H S S Z M ~ q.D.{.+XiXwX:X,XtX;X+XkXuX#XdXkXrXbXaX].+X0X9X3XcX1XqXbX1X%X=X`.H.A.e.*.I z n A S J +.                              \",\n-\"                            J G S S C A  .t./.,XpXzXaX%X:X<XMXeX;X5X9X5X2XtXqXdXcX8X0XjX*XXXdXeX7XnXlX;X2X8X8X<XL.b.9.) z v A S H O.                            \",\n-\"                          D F S S C D 1.G.'.qXuXlXgX|.sXOX1XdX<XtX8X5XeX4XuX7X3X0X<XlXuX+XwXbXfX9XpX<X}.-XzXhXgX6X~.Z.5.' v x A S H #.                          \",\n-\"                        M F S S C H *.K.].wX*X'.2X8X<XyX(.lX9XrXeXiX8XtX3XzXyX9X0XiXkX6X X9XnXzX*XoX].{.@XeX3XdX5XqX!.n.y.| B x A S K -.                        \",\n-\"                        S S S Z A %.F.|.7X6XQ.uXwX4XOXU.eXnX0X0XlXfXtX2X#XrX2XsXgX9X8X6X|.,XiXgX%X+X@X X[.7X1XpX&X.X/.I.P.2.[ V c A S I 4.                      \",\n-\"                      C D S A C X.d.XX-XgX&X+XrX).z.c.[.cXxXeXqXjXyXrX=XwX8XrXkXbXlXaX5X=X[.oXsX4X{.oX(.).-XqX;X`.&X$XaX1XI.x.$.B b S S Q u.                    \",\n-\"                    v S S A C X.d.K.OX<X6X_.3XMXuX!.J.fXdXxXsXeXaXqX7X&X*XS.P.2XfXcXzXOX<X+X%XzXtX.X.X.X_.`.].M.r.p.g.l.c.g.j.w.} n M S D {                     \",\n-\"                    Z S S Z ( h.T.].#X1X=XY.0XmXMXnXyXgX8X6XtXqXyXqXF.,.o.) ^ d.>XkXpX].<X:X+X*XsX;X].U.1.) { { ! T W ) [ ! 5.G.8./ c C S K ;.                  \",\n-\"                  n S S Z T p.P.+X=X5XqXL.@XtXVXMXNXgX8XwX5XuX7X+Xe.X.3._ ] K s.qX;XXX[.$XXXOX+X$XK.d.e.[ @.0.@.! J E ^ ) U ! k.A.*.F z A S Q                   \",\n-\"                p Z S A A o.J.7XpX<X%X`.}.6XtXcXNXxXsX9XyX6XgXoXz.:.w.0.<.+. .}.<X0X1XiXwXqX:XJ.>.O.3.1.=.@.X.:.) | *.] W ~ o.p.V.7.] h M S G O.                \",\n-\"                n S S Z %.J.XX2XfXsX<X/. XXXJ.hXbXdXhXyX6X].0.^ K U R T @.` ' G.4XbXmXjX XeX'.) J ~ [ ` | W } ^ T W U E U ( ) ;.oXI.a.( l Z S R                 \",\n-\"              t Z S A T Z.,X9X8X2XtXgXE..Xh./.sXxXvXvXwXY.&./ [ ` +. .,.i. .{ v.cXpX3XyXdXR.+.] X.+.O.` Q { +.A [ *.;.,._ ^ ( >.>X|.R.,.C m S G X.              \",\n-\"              x S S Z } Q.yXrXiX=X=X=XW.A.T.iXMXmXlX X2. .( W ..( 3.(.*X*.J T f.vXfX*XyXdX>.H T G H S D ~ }  .%.Q..XuXfXI.E Y X.oX8XoXf...c Z S W               \",\n-\"              B S A P k.XX*XsXeXXX+X#XI.F.dXMXCXkXC.R o.' ' ( -.n.,XbX).@.| 3.Q.zXvXdX2X'.<.>.0.#.*.....#.v.&X7XsXgXpXdX2X+.R } .XaX XY.4.S N S J #.            \",\n-\"            a A S Z -.+XwX>XjXiX&X>X*XC.wXVXNXpXB.7. .E [ W ] V.<XrXoX( I U ~ B.aXxX9X$X1.! &.! _ ..O.x.,XpXjXwXgX8XOX:X).T ..| _.XX[.W.g.) v A D )             \",\n-\"            c S S G n.5XhXpXgX7X1X9XH.@XbXVX|.1.{ } 0.,.6.k.,XhXqX1Xt.*.:.3.B.dXaX2X0X7Xs.` ] / ( %.k.$XsX6XkX8XkX4X6X>XV.| >.#.#XwXhX=XD.&.x C S U             \",\n-\"            N S A ! G.wXjXxXbX6X%X!.^.xXMX%X%.R  .{ R X.C.,XlXgXjXC.E Y R y.:X6X=XqXfX|.| } >.t.{.sXwX0XeX0XaX5XzX0XlXG.L I Y T #XuXlX8XoXt.F M S H X.          \",\n-\"          r Z S A <.`..X,XcXzXdX=X|.<XnXJ.[ _ ^ } ~ U k.hXeXhX3XP.( #.*.( D.iX6X@X0XaXu.Y ] +.6._.:X:X2XpXaXqX:XvXwX|.%.X.] &.,.4XyXpX.X%XP.@.m A D )           \",\n-\"          d S S G d.}.&X2XiX1XtXsXdXjXa.D C Z H ^ ^ m.OX6X5XkXiXv.E P ! 3.}.zX<X#X;X0X=./ } | @.X.;.-.W.4XqX1XrXbX$X;.R ( R ] w.3XyXzXeX0X`.9.B Z S E           \",\n-\"          z S S I V.7X9X@XuX=X*X;X1X/.{ H F A L =.j.Q.^./.>XkXE.o.} T &.%X$XsXjX%X>X4X3.O.*.X.o.,.>.=.Z. X:XhXhX_.2.W C Z F Y m.@XtXcXcXaX[.3.N V S P           \",\n-\"          n S A [ }.:XtXhXeXXX+XqXE.#.4.4.&.R ^ d.L.!.].`.=X3XX.A ( Y l.,XQ.3XvXkXeX>X7.I Q } 7.L.Q.E.>X2X{.).7.` U Z G J =.M.^..XrXyX2X;XP.d.! N S J {         \",\n-\"        1 N S A #.`.tXbXbXuX$X4X}.O.R O.~ T O.K.].[..XXX|.+Xb.-.o.X.<.:X8X%X:XjXbXaX%X=XS. XrXzXbX&X8X&X2X'.7.` O.+.{ <.-.l.+X|.XXyXfX}.XX*Xc.X.M S G _         \",\n-\"        6 V S S 1.<XkXqXlX<X%X3X9.D G G C Q W.=XyXxXzXcXzXY.) @.' ' s.`.uXnX9XqXbXxX3X-XrXmXsXyXgX}.0X`.e._ T E / ' R ! B.pXcXxXlXcXrX<X8X~.f.` B S F ~         \",\n-\"        9 C S D r.,XfX;XfX-X7X.XU F G T / N.@X.XtXgXiXdX].t.` ( o.;.[.;XgXbXgX5XvXxX@XXX9XlX7X9XtX%X|.@.C Z U Y U  .&.G.pXtXlX-X8XcX,X@XwX;XC.;.C A D W         \",\n-\"        q Z S F n.%X,XuXiX+X=Xa.` o.` | n.$X4XqXcXkXtX0X-.! ) ' :.R.cX7X2XlXvXaXhXcX5X,XaX;X9XlX@Xd.~ H R W ..#._ 3.Y.fXnXrXfX].$XxX5X<X=XtX'.>.B A D T         \",\n-\"        e Z S H B.%X:X:X+X[.V.` Y G A 1.pX3X.X+XuXgXtX%X@.-.7.:.q.@XgX0X9X:XdX;X[.vXkXsXuX*X3X+X0.T X.=.O.` _ ( ` F.`.9XsXuXfX:X1XkX;X<X%X6X(.q.S A S Y         \",\n-\"        w Z S H w.%XcXaX1X5X-.C U ..o.#XMX8X*X*X}.iX:Xw.=.1.>.{ r.Q.~.N.:XsXtXoX}.bXbX2X XlX+X=.#.~ _ ( A Z F y.>X&X=X X=XaXsXkXjXfX+X:X&X#XC.&.D A S I         \",\n-\"        0 Z S H z.wXcXvXnX3X:.#.' O.+.|.0X&X{.|.].E.3.K P L K G U I ' >.0.8XmXrXaXvXvXgXwX[.@.H Q G H F Z U j.dXxX,X9XyXkXgXuXiXkXpX%X,X;X`.~.u.F A S P         \",\n-\"        7 C S G x.uXsX0XbX).+.9.U Z D @.$.O.;.( E ) { [ / ] ! ^ } ^ P R { -XcXeXpXcXbXfXE.o. .' %. .+.{ e.W.%XbXhX8X0X7X5XjX4XXX-X*X+XOX+X'.F.<.A A D L         \",\n-\"        4 V S F 6.8XqXW.4X~.` [ #.T Z J | ..] K F R ` ( +.O.-.X.;.) X.X.2.rX8X5XtXwXfXJ.{ +.#.U ( I ( c.8XqX#XbXiXqX1X,X4XjX*X&XoXOX*X;X<X%XQ.<.Z A D K         \",\n-\"        , M S S 9.qXqXL._.*X/ | ( { K Z O.%._ #.~ R ] E @.>.5.-.O.) ..<.L.sX;X;XwX>XZ.1.:.;.X.' o.0./.yXyX9X@XvXjX0XqXpX0XjX1X2X2XqX=X$XpXuX(.{ V S D H         \",\n-\"        = v S S =.:XjX#X|.8Xu.-.>.3.,.} o.] ] /  .} E Z L W ^ E L H J +.;X9X9XiXjXz.) ^ ) Y C H w.qXvXpXtX9X&XvXvX,X9XwX=X<X7X7X<X1X{.2XjXqX).X.V S D S         \",\n-\"        @ k S A [ XX8X3X+X[.Y.*.} <.;.X.` @. .[  .@.-.~ H A Q ! &.+.,.Y.wXyXwXbX[.( #.[ -.:.' a.).8XnXpXtX7X%XbXyX1X>X2XOX3XzXlX9X+X/.7XrX$X_.O.C S D N         \",\n-\"          i S S T !.tX$X|.-X].#.W ..:.+.K P I K ..$.I ) *.~ ;.0.h.h.H.@XwXzX<X!.{ I E :.>.-.(.).1XOXzXsXiXwX&X2X|.(.z.`.pX8X8X:X3XuXxXsX#XT.m.W Z S D           \",\n-\"          9 Z S J f.:XrX=XxXOXM.;.' *.-.@.-.:.,.' #.I L @.`.1X3XgXeXoX&XjXzX#X6.! ~ / O.=.U.aX&XhX8X1X7X_.J.l.1.] T ..G.uX0XyXsXpXrX5XgXqX(.8.H A S Z           \",\n-\"          , M S D <.5XhX&XvXyX=X,X3X).&X3XfX3XF.+.] [ %.a.:X;X#X3XlX1XXXjXjX$Xq.5.$.&.j.;X3XpX|.[.L.=.;.T G ^ _ ( W 6.8X6X;XjXfX0X=X#X-X8X.X;.Z S S M           \",\n-\"          # k S S ' XXhX&XlXbX>X>X4X-XfXwXpXnXf.L I K K v.dXkXqX$XdXgX2XeXzXU.E X.R } R.F.7.o.} ) W ) ( Q ( *.+. .^ r.zXuX+X5X4XtXgXhX@X-X'.+.C S S k           \",\n-\"            r A S L H.jX,XgXxXqX%XuXcXcXlX5XiXt.X.] #.{ G.bXzX2X3X1X:X5X<X0X~.J ` O...&.#.J V A A R ....^ ..} W ] X.R.iX4XhX4X;XuXnXtX=X.Xl.U A S C             \",\n-\"            < M S S 5.uXyX4X$X'.`.9XyXjXkXgX;X;.} ] #.8.M.4XwXqXtXqX9XpX7XxXOXU ~ { R } ] L A A Z C Y O.W ^ [ ` +.2.OX9XtX3X4X-X|.pX4X8X}.8.S S S b             \",\n-\"            @ g S S Q .X8X}.#X X.X=X4XeX6XrX$X<.J C G R 7._.*XwXpXhXqX8X=XfX&X` L Y L E ] _ @.[ ..) o...W T ~ ` *.M.$X_.0XqXwX1XW.oX4X;X).{ Z S Z a             \",\n-\"              7 V S D u.8XoXOX}.`.{.qX6X;X{.T.X.D C T ' ;.=X1XwXxXpXyX:X;X8X<Xh.-.,.=.Q R R ' X.7.>.1.~ P ( X.X.g.(.|.9XtX{.tXcX9X-X3X%Xb.H S S M               \",\n-\"              & l S S Q '.#X}.|.)._.5X3X[.$X}.;.^ } } O.N.aX<XqXaXeXqX-XpXqXaX`.( { ' P I ^ U ! ] S H @.:.*.=.p.(.3X6XbXzXrXtXfXbX6X&XE.X.Z S A d               \",\n-\"              . 8 C S D 4.#X[.#X X].oX%X1XuX3X$.( | e.XXyXlX0X5X4XwX1X5XgXjX-X-Xu.2.5.'  .;.;.7.=.*.=.i.s.b.^.;X6XlXvXzX9X[.[.4X9XrX'.y.F S S m                 \",\n-\"                % j S S U N.$X X+XXX4X5XjXaX}.:./ j.>X|.!.qXjXeX-XqX<XqXkXlX$X:X*XC.w.;.1.q.D.G.(.oX'.+XXX;X8XeXxX,X0XyX9X4X7XrX6X:XE.! A S Z p                 \",\n-\"                . 4 N S S [ _.,X7X^.uXzXzXrX3X<X5XhX+XL.E. X`.3XeX8XyX7XhXgX4X*X0X=X].=X1X$X XXX].OX;X0X X*XxXlXhX1XuX7XqX,X@X X.XA.,.S S S c                   \",\n-\"                  O i A S F 3.9X5X/.aXiX XsXeXrXgX>XB.E.).J.B.A.;XjX6X-X8XfXkX8X%XjXkXjX>XsXaX0X|.].iXsX`.:XxX@X6XaX8X}.'.(.(.'.T.9.H S S B q                   \",\n-\"                    - z S S L s.<XiXaX;X&X1X>XpXgXjX+X.XW.G.S.K.rX6X$X3X4X9X0X8XsXzXjXhX;X*X>XbXlXsXOX<X0XjX6X@X5X#XuX3X2X$X&X#XD.~ A S Z s                     \",\n-\"                    . 4 M S S Y G.pX3X9X9X<X>XnXbXcX<X=X~.H.C.5X0X$X%X&X0XyXgXcXnXtX+XqXxX<X>XeXcXxXgXzXxX0X5X0XqX.XkXjX4X0X+XI.` A S S z                       \",\n-\"                      o w V S S Q D.wXpX8XsX4XBXBXOX_.8X|.P.#XiX#X:X+X$XOX,XpXkXcXvX0XyXuXhX3XXXyXgXbXvXeXqXpXrXuXeXzXvXaX=XD.[ S S S n 3                       \",\n-\"                        @ u Z S S ! K.pX7XcX5X-XiXU._.tX.X5X0X&X4X:X XOX{.#X%X%X5XeXxX>X-XhXgXhX*X^.wXtXwXjXsXeXdXiX,X,X:XE.o.S S S M 9                         \",\n-\"                          % a Z S S W B.4XkXtXwX<X8X-X3X1XaX@X+X%X{.#X&X X&X X}.%X:XqXuX6XkXvXvXpX X#X;XgXtXlX0XhX2XXXoX^. .S S S N w                           \",\n-\"                          . & s Z S S I s.2XqXzX>X4X7XyXrX@X+X%X{..X@X$X@X`._..X$X.X2X2XqX5XzXbXvXxX,X2XuX5XfX7XjX2X2XC.( S S S N w                             \",\n-\"                            . & i C S S H &.'.wX%X6XfX>X5XgX#XXX[.%X#X@XoXXX+X|.#X$X+X;XyX0X5XeXkXbXiX0XtXwXuX,XsX Xu.T S S S m 0                               \",\n-\"                              . # r B S S D / f.'.|.qXeX9X9XiX7XOX&X-X+X).oX|.[..X).*X4XfXiX%XXXgXiXeX3XqXaX,X}.R.+.F S S A c 5                                 \",\n-\"                                  O 7 b A S S H ..d.^.].@X9XwX9XuX7X$XXX|. X$X X{.+XpX8XuX1XuX*X0X2X X}.%X%XJ.2.Y S S S C h >                                   \",\n-\"                                    . : f C S S S L o.d.R.3XcXgX;XaXuX&X{.$X$X*X*XyX2XwX0XfX0X7X5X8X).T.x.2.E S S S S m r &                                     \",\n-\"                                      . $ 0 v A S S S J _ 0.!.9XpX9X:XeX6X+XoX+XrX>X>XaXfX5XyXfX3XR.0.X.I S S S S V g 1                                         \",\n-\"                                          X ; t n A S S S S L _ 1.v.B.H.=X6XXX&X6X&X>X2X).Q.S.e.X.T F S S S S C l 8 $                                           \",\n-\"                                            . o : t v Z S S S A S D L R ( ..@.&.%.%.X.' Q I F S A S S S A B j 8 &                                               \",\n-\"                                                . X = 9 g M Z S S S S S A A A A A A A A S S S S S A V v i 3 #                                                   \",\n-\"                                                    . . @ : 9 s x M C A S S S S S S S S A Z V n j y 5 * X                                                       \",\n-\"                                                          . . o & > 5 w y a f g h g d i r 9 2 ; # X                                                             \",\n-\"                                                                  . . . . X O + + O o X . .                                                                     \",\n-\"                                                                                                                                                                \",\n-\"                                                                                                                                                                \",\n-\"                                                                                                                                                                \"\n+\"DXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDX\",\n+\"DXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDX\",\n+\"DXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDX\",\n+\"DXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDX\",\n+\"DXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXi.8.8.6.6.6.w.p.DXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDX\",\n+\"DXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDX<.$.] ) T P H H F H H H P T ! } $.8.k.DXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDX\",\n+\"DXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDX=.] T H F C F C C F F C C F F C F C F F H T } <.j.DXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDX\",\n+\"DXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDX=.] P F C C F C C C C M M c c M c c M M C C C F C C F P X.w.DXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDX\",\n+\"DXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDX$.) H C F F C C M c c c x x C c M C M M c c x h h c M C F C F H ] 8.DXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDX\",\n+\"DXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDX) H F C F C M x x M H ] X.] $.-.<.<.8.<.=.=.X.X.P x M x x c M C F C H ] i.DXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDX\",\n+\"DXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDX) P F F C C M M C P P X.p.k.Z.U.U.H.H._.[.H.k.B.k.j.j.-.} } ! M x x M C C F P $.DXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDX\",\n+\"DXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXT H C C C M c H } <.i.B.H.~.H.OX+X+X4X*X<XOXF._.<X[.OXE.p.p.8.p.-.! C h x C C C F ) i.DXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDX\",\n+\"DXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDX! P F F C M c H X.i.k.E._.;X9X4X X_.+XuXfXOX_.Z.8.4XzX;X;X<X~.;XU.E.F.i.=.P M x c C C C P <.DXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDX\",\n+\"DXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXT F F C C M C ] w.B.[.4XqXqX<X+XdXfX*X+XzXfX4X<XE.Z.<XfX;X+XfX*XqXqX[.+X~.Z.-.=.] M h M C F H =.DXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDX\",\n+\"DXDXDXDXDXDXDXDXDXDXDXDXDXDXDXP F F F C M ! 8.F. X*XuXqX;X<XdX;XOXfXuX+XdXfXqXvXuX[.OX9X9X<XzX<X9XvX<X+X*X[.H.Z.w.=.H x M C F H X.DXDXDXDXDXDXDXDXDXDXDXDXDXDXDX\",\n+\"DXDXDXDXDXDXDXDXDXDXDXDXDXDXH F C F M C X.p.[.;XuXzXuX*X;X<XvXqX;X4X9X4X<XuXqXfXzX9X9XfX*XOXdXqX4XvXzX;X<X4X9X<XH.k.8.) x c C C H X.DXDXDXDXDXDXDXDXDXDXDXDXDXDX\",\n+\"DXDXDXDXDXDXDXDXDXDXDXDXDXF F C F M C <.H.OXqXuXzXdX XdXOX;XdX<XqX9X4XqX4XqX9X<X9X<XfXuXOXqXzXdX9XuX<X[.*XzXfXfX4X~.Z.6.) c x C C F $.DXDXDXDXDXDXDXDXDXDXDXDXDX\",\n+\"DXDXDXDXDXDXDXDXDXDXDXDXc F C F C H =.H. XqX*X_.<X9X;XuX~.zX9XqXqXuX9XqX<XzXuX9X9XuXzX4X X9XvXzX*XOX[.[.+XqX<XdX4XqX~.b.i.] M x F C H =.DXDXDXDXDXDXDXDXDXDXDXDX\",\n+\"DXDXDXDXDXDXDXDXDXDXDXDXF C F C C =.F. X9X4XE.uX9X<XOXH.qXvX9X9XzXfXuX<X+XuX<XdXdX9X9X4X X;XuXdX+XOXOX X[.4X<XuX*XOX~.H.U.<.] M x C F H 6.DXDXDXDXDXDXDXDXDXDXDX\",\n+\"DXDXDXDXDXDXDXDXDXDXDXM C F C M X.p. X;XfX*XOXqX_.k.b.[.vXzX9X9XfXuXqX*X9X9XqXzXvXfXuX4X*X[.OXdX4X[.OX~._.;X9X*X_.+X+XdX<XU.k.$.C c C F T i.DXDXDXDXDXDXDXDXDXDX\",\n+\"DXDXDXDXDXDXDXDXDXDXc F F C C X.p.F.+XqXfX[.4XvXuX~.F.dXfXmXqXqX9X9X9X*X*XF.H.<XfXvXzXOX;X+X+XzXqXOX X X_._.[.B.i.p.j.k.k.j.j.w.] c M C F ] DXDXDXDXDXDXDXDXDXDX\",\n+\"DXDXDXDXDXDXDXDXDXDXC F C C ! j.U._.<XvX<X[.9XmXmXvXuXzXqXVXvXqX<X9XF.-.X.) ) p.<XfXuX[.<X;X+X*XdX*X[.U.<.) ] ] T T T ) ] ! 6.F.8.! c C C H -.DXDXDXDXDXDXDXDXDX\",\n+\"DXDXDXDXDXDXDXDXDXc C F C T p.H.OX;XmXmX~.+XqXVXmXVXzXuX9XmXzX9XU.<.X.6.) ] H p.9X*X X[.+XOXOXOX+XH.p.w.] X.8.$.! H T ! ) P T k.Z.=.F x C F ! DXDXDXDXDXDXDXDXDX\",\n+\"DXDXDXDXDXDXDXDXt C F C C X.H.4XqX9XmX*XOX4XqXvXmXvXfXzXvXmX;Xi.<.=.8.8.-.$.}  X<X9X<XuX9X9X;XF.-.$.6.<.=.X.X.-.) } =.] T ! X.p.B.6.) h M C H X.DXDXDXDXDXDXDXDX\",\n+\"DXDXDXDXDXDXDXDXc C F C $.H.OX*XdXVXSXU. X XF.fXvXdXfXmXfXE.) C F P T P $.] ] F.4XvXvXfX XqX[.) H ! ] ] } T } ! P T P T P ) ) -.OXU.i.) x C F P DXDXDXDXDXDXDXDX\",\n+\"DXDXDXDXDXDXDXt C F C P Z.<X4X4XmXmXzXZ. Xj.~.dXzXvXVXqXB.] ! ] ) $.X.-.i.} } k.zXuX4XuXdXE.$.] X.X.X.) ! } X.C ] =.-.<.) ! ) <.;X XU.-.C c C F X.DXDXDXDXDXDXDX\",\n+\"DXDXDXDXDXDXDXx F C C } E.qXzXVXSXzXOXH.Z.U.dXmXmXzXOX=.] ! T } ! 6.~.*X=.H P j.vXdX*XuXdX<.F T F F C F ! } } =.~. XuXdXU.T P X. X4XOXp.} c C F T DXDXDXDXDXDXDX\",\n+\"DXDXDXDXDXDXDXM C F H k. XOXdXSXmX+X[.U.F.fXmXVXzXF.T X.] ) ) =.b.<XvX_.$.} <.E.zXzXdX<X_.-.-.8.$.=.} X.$.k.*X4XdXdXuXdX<X$.P }  XdX XU.6.C M C H $.DXDXDXDXDXDX\",\n+\"DXDXDXDXDXDXp C C C =.OXqX[.<XmX4X+X;XB.qXVXmXdXZ.8.} T } T ] Z.<XqXOX) H P ! B.dXzX4X+X<.T $.! ) } X.k.<XuXfX9XfX9XOX;X_.P X.} [. X[.E.p.) c C F ) DXDXDXDXDXDX\",\n+\"DXDXDXDXDXDXc C F F b.4XfXfXdXuX9X9XF.+XvXVX;X6.] } 8.<.6.k.<XfXqX;Xi.=.-.6.B.dXdX<X9X9Xp.) ] ) ! =.k.*XdX4XzX9XfX4X4X;XZ.} -.$.+XqXfX*XF.$.x C C P DXDXDXDXDXDX\",\n+\"DXDXDXDXDXDXM F C ! F.qXfXvXvX4X+XE.~.vXmX*X-.T } ] T X.Z.<XzXfXfXZ.P P T w.;X4X*X9XdX XX.} -.w. XdXqX9XqX9XdX4XzX9XfXF.H H P T +XuXfX9XOXw.C M C F X.DXDXDXDXDX\",\n+\"DXDXDXDXDXe C C C <._. X<XvXvXdX*X X<XmX[.] ) ! } ! P k.fXqXfX<XU.) $.=.) F.uX4X+X9XuXi.P ] X.6._.;X;X<XuXuX9X;XvXqX X=.X.] =.<.4XqXdX X*XH.$.M C F ) DXDXDXDXDX\",\n+\"DXDXDXDXDXp F C F p. X*X<XuX<XuXfXfXzX~.P C C F ! ! b.OX4X4XfXuXb.T P ! 6. XzX;X+X;X9X=.! } } $.} -.-.~.<X9X<XqXvX*X-.T ) P ] w.<XuXzXqX9X[.8.M C C T DXDXDXDXDX\",\n+\"DXDXDXDXDXx C F P B.4X9X+XuX*X*X<X<X_.} H F C H -.j.E.~._.;XzXE.X.] P =.+X+XdXfX*X<X<X6.X.=.} X.<.-.=.Z. X;XfXfX_.<.T C C F P b.OXuXzXzXuX[.<.M C F P DXDXDXDXDX\",\n+\"DXDXDXDXDXc C C ]  X;XqXfXqXOXOXqXE.$.6.6.$.T ) j.H.E.[._.*X<XX.C ) P k.<XE.<XvXfXqX;X8.H ! } 8.H.~.E.;X<X X_.8.) P C F H =.B.~. XqXqX<X*XU.p.! M C H ] DXDXDXDX\",\n+\"DXDXDXDX1 M F C $._.uXvXvXuX+X4X XX.T X.! P X.H.[.[. X X XOXb.=.X.X.<.;X9X*X;XfXvXdX+X*XF. XqXzXvX*X4X*X<X_.6.] X.$.] <.=.k.OX X XuXfX XOX+Xb.} M F F ) DXDXDXDX\",\n+\"DXDXDXDX5 M F C <.<XfXqXzX;X+X<X8.F F F C T ~.*XqXvXzXzXzXU.) $.) ] p.[.uXvX9X9XvXzX<X*XqXvXdXqXfX X9X_.w.) P T ! ] T T B.dXzXzXfXvXqX<X9X~.p.) M C F T DXDXDXDX\",\n+\"DXDXDXDX8 M C F w.;XdX;XdX*X9X XP F F P ! B.+X XqXfXuXdX[.w.) ! X.-.[.*XdXvXdX4XvXzX+XOX9XzX4X9XuX+X[.$.C C P P P } =.F.uXqXzX*X9XzX<X+X9X;XZ.-.C C F ! DXDXDXDX\",\n+\"DXDXDXDXw C C F b.+X;XuXuXOX*Xp.) X.] } b.+X4X9XzXzXqXqX=.! ) ] -.E.vX9X<XfXvXuXfXzX4X;XdX;X9XzXOXp.) F P T X.$.) 6.U.dXvXqXdX[.*XzX4X<X*XqX[.-.M C F T DXDXDXDX\",\n+\"DXDXDXDXw C F F B.*X;X;XOX[.Z.) P F C <.dX<X XOXuXfXqX*X$.=.8.-.w.+XfX9X9X;XdX;X[.zXzXuXuX*X<XOX8.T X.=.X.] ) ) ] F._.9XdXuXdX;X<XfX*X<X*X4X~.8.F C C P DXDXDXDX\",\n+\"DXDXDXDXw C C F w.+XvXuX<X4X=.C P X.X.+XmX4X*X*X XuX;Xw.=.<.-.} w.~.~.B.;XdXqXOX XvXvX<X XzXOX=.$.! ) ! C C F i.;X*X*X X*XdXdXfXfXfX+X;X*X+XB.=.F C F P DXDXDXDX\",\n+\"DXDXDXDXw C F F k.9XvXvXvX<X=.$.] X.X. X9X*X[. X[.E.<.H P H H F P P ] <.w.4XvXqXdXzXvXfXqX[.X.H T F H F C P j.dXzX;X9XqXfXfXuXuXfXuX*X;X;X_.~.i.F C C H DXDXDXDX\",\n+\"DXDXDXDX8 C C F k.uXdX9XvX_.$.8.P C F $.=.X.=.) T ) ] ] ) ] ! ! } ! H T ] *XvXqXuXzXvXdXE.X.} ] =.} X.} w.~.+XvXfX9X9X9X4XfX4XOX*X*XOXOXOX[.F.<.C C F H DXDXDXDX\",\n+\"DXDXDXDX1 C C F 6.9X9XE.4X~.) ] $.P C H } } ] H F T ) ) X.X.=.X.=.) X.X.6.qX9X4XuXqXdXH.] X.$.P ) H ) k.9X9X+XvXuX9X<X;X4XfX*X+X XOX*X;X<X+XE.-.C C F H DXDXDXDX\",\n+\"DXDXDXDX: M C C 8.9X9XU._.*X! } ) } H C X.$.) $.! T ] T $.-.6.-.X.) } <.H.dX*X*X9X;XZ.<.-.-.X.] X.8._.qXuX9XOXvXfX9XqXuX9XfX<X4X<XqX*X+XuXuX_.} C F C H DXDXDXDX\",\n+\"DXDXDXDX* c C F =.;XfX+X[.9Xi.=.-.<.<.} X.] ] ! } } T C H T ! T H F F $.;X9X9XuXzXk.) ! ) T M F w.qXzXdXqX9X*XzXvX;X9XqX*X<X9X4X;X<X X<XfX9X~.} C C F C DXDXDXDX\",\n+\"DXDXDXDX@ h F C ] OX9X<XOX[.U.=.} -.-.X.) $.} ] } $.=.! H C ! ! =.X.-.E.qXuX9XvX[.) $.] =.-.] i._.4XvXuXqX9X+XvXuX<X;X4XOX<XzXfX9XOX_.4XqX*X_.X.C C F M DXDXDXDX\",\n+\"DXDXDXDXDXt F C P ~.qX+X X*X[.$.T X.-.X.H P H H } $.P ) =.! -.8.j.j.H.+XqXzX<X~.} P P -.-.-._._.<XOXzXdXuXqX*X<X X_.k.[.uX9X9X;X<XuXzXdX+XU.B.T C C F DXDXDXDXDX\",\n+\"DXDXDXDXDX8 C C H j.;XqX;XzXOXb.-.] =.-.$.=.-.<.] X.P H $._.<X<XfXqXOX+XzXzX+X8.T ! ! X.=.U.uX*XfX9X<X4X_.H.k.<.] P } H.uX9XuXdXuXqX4XfXqX_.8.F C C C DXDXDXDXDX\",\n+\"DXDXDXDXDX1 M C C <.4XfX*XvXuX*X;X4X_.+X<XdX<XF.$.] ] =.p.;X;X+X<XzX<XOXfXfX+Xw.6.$.=.j.;X4XuX X[.H.=.-.P F ) ) ) ! 6.4X4X;XfXdX9X;X+X;X4X X-.C C F M DXDXDXDXDX\",\n+\"DXDXDXDXDX@ h F F ] OXfX+XzXvX;X;X4X*XfXqXuXvXj.H H H H k.dXzXqX+XfXfX<XqXzXU.T X.T } E.F.6.X.} ) T ) ! ! ) =.$.} ! w.zXuXOX4X<XqXfXfXOX;X[.X.C F C h DXDXDXDXDX\",\n+\"DXDXDXDXDXDXe C C H F.fX<XfXzX9X+XuXvXvXzX4XuXw.X.] $.] F.vXzX<X4X<X;X4X<X9X~.H ) X.} $.$.F M C C T } X.! } ] T ] X.E.uX4XfX4X;XuXmXqX*X Xk.P C C C DXDXDXDXDXDX\",\n+\"DXDXDXDXDXDX1 c C F 6.uXuX<X+X[._.9XqXfXzXfX;X-.} ] $.8.B.<XqX9XqX9X9XuX4XzXOXP ! } T } ] H C C C C P X.! ! ] ) X.<.OX9XqX<X4X;X[.uX4X9X X8.C F F c DXDXDXDXDXDX\",\n+\"DXDXDXDXDXDX@ p C C T  X4X X+X X X*X4XqX4XqX+X<.H C F T 6._.*XqXdXfX9X9X*XdX*X] H T H T ] ) $.] X.) X.} T T ! ) =.B.+X_.9XqXqX<XE.OX<X;X~.] C C C p DXDXDXDXDXDX\",\n+\"DXDXDXDXDXDXDX8 C C C i.9XOXOX X_.[.9X4X;X[.U.X.F M T ] =.*X<XqXzXuXuX;X*X9X;Xj.=.<.=.T T T ] } 6.-.<.! P ) } X.j.~. X9XqX[.qXvX9X*X4X+Xb.F C F M DXDXDXDXDXDXDX\",\n+\"DXDXDXDXDXDXDX% x F F T [.+X[.[._._.4X4X[.+X X-.! } } X.B.uX<X9XdXqX9X*XuX9XdX_.) ] ] P P ! P ! ] C H $.-.=.=.i._.<X4XvXzXuXqXdXvX4X*XE.X.C F C p DXDXDXDXDXDXDX\",\n+\"DXDXDXDXDXDXDX  8 M C F 6.+X[.+X X[. X+X<XuX4X$.) } w. XuXzX9X4X<XqX<X4XdXfX;X*Xi.<.6.) } -.=.6.=.=.=.i.p.b.~.*X4XfXzXzX9X[.[.<X9XqX[.w.F F F c DXDXDXDXDXDXDXDX\",\n+\"DXDXDXDXDXDXDXDX@ h C F P B.+X XOXOX<X4XfXdX X-.) j.;X XE.qXfXqX*XqX<X9XfXzX+X;X*XZ.w.-.<.w.F.F.~. X_.OXOX;X9XqXzX<X9XuX9X<X9XqX4X;XU.! C C C t DXDXDXDXDXDXDXDX\",\n+\"DXDXDXDXDXDXDXDX  5 M C F ] [.;X4X~.uXzXzXqX<X4X4XfXOXH.E. X_.<XqX9XuX9XfXfX4X*X9X*X[.;X<X+X X X[.OX*X9X X+XzXzXfX<XuX4XqX;X+X X XZ.<.C F F x DXDXDXDXDXDXDXDXDX\",\n+\"DXDXDXDXDXDXDXDXDX  t F C C 6.9X4X~.uXuX XdXqXqXfX;XB.E._.F.B.Z.;XfX4X*X9XfXfX9X*XfXfXfX;XdXdX9X X_.uXdX[.;XzX+X4XdX4X X[.~.~.[.E.8.F C C M w DXDXDXDXDXDXDXDXDX\",\n+\"DXDXDXDXDXDXDXDXDXDX* x C C H p.;XuXdX;X*X<X;XdXfXfX+XOXE.F.Z.H.qX4X+X<X4X9X9X4XdXzXfXfX;X*X;XvXfXdXOX;X9XfX9X+X4X+XuX4X<X+X*X+XZ.! C F C p DXDXDXDXDXDXDXDXDXDX\",\n+\"DXDXDXDXDXDXDXDXDXDX  5 M F F T F.uX<X9X9X<X;XvXvXzX;X*X~.F.Z.4XqX+X*X*X9XuXfXzXmXqXOX9XzX<X;XqXzXzXfXzXzX9X4X9X9XOXfXfX4X9XOXU.] C F C x DXDXDXDXDXDXDXDXDXDXDX\",\n+\"DXDXDXDXDXDXDXDXDXDXDX  w C C F ! F.9XdX4XdX4XmXmXOX_.9X XH.+XuX+X;XOX+XOX;XuXzXzXvX9XuXuXfX<XOXuXfXvXvXqX9XdXqXuXqXzXvXdX*XZ.] F C F c 1 DXDXDXDXDXDXDXDXDXDXDX\",\n+\"DXDXDXDXDXDXDXDXDXDXDXDX@ t C C C ! H.uX4XzX4X*XuXU._.qXOX4X9X*X4X;X XOX[.+X*X+X4XqXzX;X*XfXfXfX*X~.qXqX9XfXdXqXdXuX;X;X;XE.X.C C F c 8 DXDXDXDXDXDXDXDXDXDXDXDX\",\n+\"DXDXDXDXDXDXDXDXDXDXDXDXDX% p C F C T Z.<XzXqXqX<X4X;X<X<XdX+XOX+X X+X*X X*X X[.+X;X9XuX4XzXzXvXuX X+X;XfXqXzX9XfX<XOXOX~.} C F C M w DXDXDXDXDXDXDXDXDXDXDXDXDX\",\n+\"DXDXDXDXDXDXDXDXDXDXDXDXDX  % p C C C P p.<XqXzX;X4X4XuXqX+X+X+X[. X+X+XOX_._. X+XOX<X<X9X4XzXvXzXzX<X<XuX4XfX4XfX<X<XB.) C F C M w DXDXDXDXDXDXDXDXDXDXDXDXDXDX\",\n+\"DXDXDXDXDXDXDXDXDXDXDXDXDXDX  % t M F C F =.[.9X*X4XdX;X4XfX+XOX[.+X+X+XOX XOX[.+X+XOX;XuX9X4X9XfXvXuX9XqX9XuX;XdX Xi.P C C F c 8 DXDXDXDXDXDXDXDXDXDXDXDXDXDXDX\",\n+\"DXDXDXDXDXDXDXDXDXDXDXDXDXDXDX  % e M F F C ! j._. X9XqX9X9XuX4XOX*X*XOX~.OX X[.OX_.*X<XfXuX+XOXfXdXqX<XqXdX;X XE.X.F F F C x 5 DXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDX\",\n+\"DXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDX@ 8 c C C C H X.p.~.[.+X9XqX9XuX4X+X X X X+X X[.OXdX4XuX<XuX*X9X<X X X*X*XH.<.P F C C M h : DXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDX\",\n+\"DXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDX  : p C C F F H X.p.E.<XzXdX*XdXuX*X[.+X+X*X*XqX<X9X9XdX9X4X4X4X_.U.k.<.T C F C C M e % DXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDX\",\n+\"DXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDX  % w c C C F C H ) 8.~.9XuX9X;XqX4XOXOXOXqX;X;XdXdX4XqXdX<XE.8.X.P C F C F M h 1 DXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDX\",\n+\"DXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDX  * t c C F C F C H ) <.b.B.F.*X4XOX+X4X*X<X<X_.E.F.w.X.P F C F C F C h 8 @ DXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDX\",\n+\"DXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDX    : e c C C C C C F C H T ) } $.$.$.$.X.] T P F C C C F C C M x 8 % DXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDX\",\n+\"DXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDX    * w h M C F C F F C F C C C C C C C F C F F F C C c t 5 @ DXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDX\",\n+\"DXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDX    @ : 8 p x c C C C F C F F C F C C C M c h t 5 %   DXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDX\",\n+\"DXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDX      % : 5 e t p p h h h p t e w 1 : @   DXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDX\",\n+\"DXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDX            @   @         DXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDX\",\n+\"DXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDX\",\n+\"DXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDX\",\n+\"DXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDXDX\"\n };"
      },
      {
        "sha": "0ec91f307c38c8936e22b5002b2f0248c2259796",
        "filename": "src/qt/res/icons/42-128.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d02af84b9a64afb8d4b07d6ec3d46dacfc31eb04/src/qt/res/icons/42-128.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d02af84b9a64afb8d4b07d6ec3d46dacfc31eb04/src/qt/res/icons/42-128.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/icons/42-128.png?ref=d02af84b9a64afb8d4b07d6ec3d46dacfc31eb04"
      },
      {
        "sha": "ad2b125a512977606ebf706ad05df52420ef373c",
        "filename": "src/qt/res/icons/42-16.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d02af84b9a64afb8d4b07d6ec3d46dacfc31eb04/src/qt/res/icons/42-16.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d02af84b9a64afb8d4b07d6ec3d46dacfc31eb04/src/qt/res/icons/42-16.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/icons/42-16.png?ref=d02af84b9a64afb8d4b07d6ec3d46dacfc31eb04"
      },
      {
        "sha": "8a5bb6405e3992bb130637f31974ba1e3090fb32",
        "filename": "src/qt/res/icons/42-32.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d02af84b9a64afb8d4b07d6ec3d46dacfc31eb04/src/qt/res/icons/42-32.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d02af84b9a64afb8d4b07d6ec3d46dacfc31eb04/src/qt/res/icons/42-32.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/icons/42-32.png?ref=d02af84b9a64afb8d4b07d6ec3d46dacfc31eb04"
      },
      {
        "sha": "cf598e2390f803549218d3bc291d175d5f7d4201",
        "filename": "src/qt/res/icons/42-48.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d02af84b9a64afb8d4b07d6ec3d46dacfc31eb04/src/qt/res/icons/42-48.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d02af84b9a64afb8d4b07d6ec3d46dacfc31eb04/src/qt/res/icons/42-48.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/icons/42-48.png?ref=d02af84b9a64afb8d4b07d6ec3d46dacfc31eb04"
      },
      {
        "sha": "bf2ad65da5e7e5575294ffdcace314a3953abd84",
        "filename": "src/qt/res/icons/42-80.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d02af84b9a64afb8d4b07d6ec3d46dacfc31eb04/src/qt/res/icons/42-80.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d02af84b9a64afb8d4b07d6ec3d46dacfc31eb04/src/qt/res/icons/42-80.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/icons/42-80.png?ref=d02af84b9a64afb8d4b07d6ec3d46dacfc31eb04"
      },
      {
        "sha": "47d6b554e39d6d421136dfb72f56fe5e0e64a77b",
        "filename": "src/qt/res/icons/42.ico",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d02af84b9a64afb8d4b07d6ec3d46dacfc31eb04/src/qt/res/icons/42.ico",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d02af84b9a64afb8d4b07d6ec3d46dacfc31eb04/src/qt/res/icons/42.ico",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/icons/42.ico?ref=d02af84b9a64afb8d4b07d6ec3d46dacfc31eb04"
      },
      {
        "sha": "cf598e2390f803549218d3bc291d175d5f7d4201",
        "filename": "src/qt/res/icons/42.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d02af84b9a64afb8d4b07d6ec3d46dacfc31eb04/src/qt/res/icons/42.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d02af84b9a64afb8d4b07d6ec3d46dacfc31eb04/src/qt/res/icons/42.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/icons/42.png?ref=d02af84b9a64afb8d4b07d6ec3d46dacfc31eb04"
      },
      {
        "sha": "b09a119a978675bfcbd481b3a3d397739ed73759",
        "filename": "src/qt/res/icons/bitcoin.icns",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d02af84b9a64afb8d4b07d6ec3d46dacfc31eb04/src/qt/res/icons/bitcoin.icns",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d02af84b9a64afb8d4b07d6ec3d46dacfc31eb04/src/qt/res/icons/bitcoin.icns",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/icons/bitcoin.icns?ref=d02af84b9a64afb8d4b07d6ec3d46dacfc31eb04"
      }
    ]
  },
  {
    "sha": "e3f37994cb5ac7e204ed38807aef6caa314cd201",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplM2YzNzk5NGNiNWFjN2UyMDRlZDM4ODA3YWVmNmNhYTMxNGNkMjAx",
    "commit": {
      "author": {
        "name": "Laser9un",
        "email": "laser9un@gmail.com",
        "date": "2017-12-09T12:53:49Z"
      },
      "committer": {
        "name": "Laser9un",
        "email": "laser9un@gmail.com",
        "date": "2017-12-09T12:53:49Z"
      },
      "message": "Upd README.md",
      "tree": {
        "sha": "c667a319d540308e093ef2f6da382012923dc336",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c667a319d540308e093ef2f6da382012923dc336"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e3f37994cb5ac7e204ed38807aef6caa314cd201",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e3f37994cb5ac7e204ed38807aef6caa314cd201",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e3f37994cb5ac7e204ed38807aef6caa314cd201",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e3f37994cb5ac7e204ed38807aef6caa314cd201/comments",
    "author": {
      "login": "Laser9un",
      "id": 16782409,
      "node_id": "MDQ6VXNlcjE2NzgyNDA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16782409?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Laser9un",
      "html_url": "https://github.com/Laser9un",
      "followers_url": "https://api.github.com/users/Laser9un/followers",
      "following_url": "https://api.github.com/users/Laser9un/following{/other_user}",
      "gists_url": "https://api.github.com/users/Laser9un/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Laser9un/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Laser9un/subscriptions",
      "organizations_url": "https://api.github.com/users/Laser9un/orgs",
      "repos_url": "https://api.github.com/users/Laser9un/repos",
      "events_url": "https://api.github.com/users/Laser9un/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Laser9un/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Laser9un",
      "id": 16782409,
      "node_id": "MDQ6VXNlcjE2NzgyNDA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16782409?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Laser9un",
      "html_url": "https://github.com/Laser9un",
      "followers_url": "https://api.github.com/users/Laser9un/followers",
      "following_url": "https://api.github.com/users/Laser9un/following{/other_user}",
      "gists_url": "https://api.github.com/users/Laser9un/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Laser9un/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Laser9un/subscriptions",
      "organizations_url": "https://api.github.com/users/Laser9un/orgs",
      "repos_url": "https://api.github.com/users/Laser9un/repos",
      "events_url": "https://api.github.com/users/Laser9un/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Laser9un/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d02af84b9a64afb8d4b07d6ec3d46dacfc31eb04",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d02af84b9a64afb8d4b07d6ec3d46dacfc31eb04",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d02af84b9a64afb8d4b07d6ec3d46dacfc31eb04"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 7,
      "deletions": 7
    },
    "files": [
      {
        "sha": "a123638bc4684a50c882b85765ed762edfade4f3",
        "filename": "README.md",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e3f37994cb5ac7e204ed38807aef6caa314cd201/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e3f37994cb5ac7e204ed38807aef6caa314cd201/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/README.md?ref=e3f37994cb5ac7e204ed38807aef6caa314cd201",
        "patch": "@@ -1,23 +1,23 @@\n-[![42orig256.png](https://s13.postimg.org/u4nl71wxj/42orig256.png/)](https://tr.im/42coin)\n+[![42-256.png](https://s18.postimg.org/ijc11b8kp/42-256.png/)](https://tr.im/42coin)\n \n \n-42-coin - a PoS/PoW based cryptocurrency.\n+42-coin - a PoW/PoS based cryptocurrency.\n \t\t\n Specifications\n --------------\n \n - Max money: 42 coins\n-- Transaction confirmation method: PoS+PoW\n-- Transaction type: public & anonymous\n+- Transaction confirmation method: PoW+POS\n+- Transaction type: public & private\n - Number of transaction confirmation: 7\n - Number of block confirmation: 42\n+- PoW algo type: Scrypt\n+- PoW reward: 0 coin + tx fees\n+- PoW target spacing: 21 minutes\n - PoS reward: 0 coin\n - Min stake age: 42 hours\n - Max stake age: unlimited\n - PoS target spacing: 7 minutes\n-- PoW algo type: Scrypt\n-- PoW reward: 0 coin + tx fees\n-- PoW target spacing: 21 minutes\n - Default Listen Port: 4242 (42420 for testnet)\n - JSON-RPC Port: 2121 (21210 for testnet)\n "
      }
    ]
  },
  {
    "sha": "f97ec4e154f446530b22dc2ce302fa436fc98a50",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmOTdlYzRlMTU0ZjQ0NjUzMGIyMmRjMmNlMzAyZmE0MzZmYzk4YTUw",
    "commit": {
      "author": {
        "name": "Laser9un",
        "email": "laser9un@gmail.com",
        "date": "2017-12-09T13:05:59Z"
      },
      "committer": {
        "name": "Laser9un",
        "email": "laser9un@gmail.com",
        "date": "2017-12-09T13:05:59Z"
      },
      "message": "Fix MintProbability column",
      "tree": {
        "sha": "973c355ceeb5b79860668cf98c70fec65d9b2fcf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/973c355ceeb5b79860668cf98c70fec65d9b2fcf"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f97ec4e154f446530b22dc2ce302fa436fc98a50",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f97ec4e154f446530b22dc2ce302fa436fc98a50",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f97ec4e154f446530b22dc2ce302fa436fc98a50",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f97ec4e154f446530b22dc2ce302fa436fc98a50/comments",
    "author": {
      "login": "Laser9un",
      "id": 16782409,
      "node_id": "MDQ6VXNlcjE2NzgyNDA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16782409?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Laser9un",
      "html_url": "https://github.com/Laser9un",
      "followers_url": "https://api.github.com/users/Laser9un/followers",
      "following_url": "https://api.github.com/users/Laser9un/following{/other_user}",
      "gists_url": "https://api.github.com/users/Laser9un/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Laser9un/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Laser9un/subscriptions",
      "organizations_url": "https://api.github.com/users/Laser9un/orgs",
      "repos_url": "https://api.github.com/users/Laser9un/repos",
      "events_url": "https://api.github.com/users/Laser9un/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Laser9un/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Laser9un",
      "id": 16782409,
      "node_id": "MDQ6VXNlcjE2NzgyNDA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16782409?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Laser9un",
      "html_url": "https://github.com/Laser9un",
      "followers_url": "https://api.github.com/users/Laser9un/followers",
      "following_url": "https://api.github.com/users/Laser9un/following{/other_user}",
      "gists_url": "https://api.github.com/users/Laser9un/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Laser9un/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Laser9un/subscriptions",
      "organizations_url": "https://api.github.com/users/Laser9un/orgs",
      "repos_url": "https://api.github.com/users/Laser9un/repos",
      "events_url": "https://api.github.com/users/Laser9un/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Laser9un/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e3f37994cb5ac7e204ed38807aef6caa314cd201",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e3f37994cb5ac7e204ed38807aef6caa314cd201",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e3f37994cb5ac7e204ed38807aef6caa314cd201"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "589a5cbcd2c792b0f59960b5b09366b2e8a3b531",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f97ec4e154f446530b22dc2ce302fa436fc98a50/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f97ec4e154f446530b22dc2ce302fa436fc98a50/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=f97ec4e154f446530b22dc2ce302fa436fc98a50",
        "patch": "@@ -40,7 +40,7 @@ uint256 nPoWBase = uint256(\"0x00000000ffff00000000000000000000000000000000000000\n CBigNum bnProofOfWorkLimitTestNet(~uint256(0) >> 16);\n \n unsigned int nStakeMinAge = 42 * nOneHour; // 42 hours as zero time weight\n-unsigned int nStakeMaxAge = -1; // unlimited full weight\n+unsigned int nStakeMaxAge = INT_MAX; // 'unlimited' full weight\n unsigned int nStakeTargetSpacing = 7 * 60; // 7-minutes stakes spacing\n unsigned int nModifierInterval = 7 * 60; // time to elapse before new modifier is computed\n int nCoinbaseMaturity = 22;"
      }
    ]
  },
  {
    "sha": "cd840983d091d3577758d98ffee5857124568f45",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjZDg0MDk4M2QwOTFkMzU3Nzc1OGQ5OGZmZWU1ODU3MTI0NTY4ZjQ1",
    "commit": {
      "author": {
        "name": "Laser9un",
        "email": "laser9un@gmail.com",
        "date": "2018-03-13T09:10:26Z"
      },
      "committer": {
        "name": "Laser9un",
        "email": "laser9un@gmail.com",
        "date": "2018-03-13T09:10:26Z"
      },
      "message": "Add checkpoint @ block # 70000",
      "tree": {
        "sha": "521f1474521c38ec7cd8557d58ef876ac99e65f0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/521f1474521c38ec7cd8557d58ef876ac99e65f0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cd840983d091d3577758d98ffee5857124568f45",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cd840983d091d3577758d98ffee5857124568f45",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cd840983d091d3577758d98ffee5857124568f45",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cd840983d091d3577758d98ffee5857124568f45/comments",
    "author": {
      "login": "Laser9un",
      "id": 16782409,
      "node_id": "MDQ6VXNlcjE2NzgyNDA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16782409?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Laser9un",
      "html_url": "https://github.com/Laser9un",
      "followers_url": "https://api.github.com/users/Laser9un/followers",
      "following_url": "https://api.github.com/users/Laser9un/following{/other_user}",
      "gists_url": "https://api.github.com/users/Laser9un/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Laser9un/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Laser9un/subscriptions",
      "organizations_url": "https://api.github.com/users/Laser9un/orgs",
      "repos_url": "https://api.github.com/users/Laser9un/repos",
      "events_url": "https://api.github.com/users/Laser9un/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Laser9un/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Laser9un",
      "id": 16782409,
      "node_id": "MDQ6VXNlcjE2NzgyNDA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16782409?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Laser9un",
      "html_url": "https://github.com/Laser9un",
      "followers_url": "https://api.github.com/users/Laser9un/followers",
      "following_url": "https://api.github.com/users/Laser9un/following{/other_user}",
      "gists_url": "https://api.github.com/users/Laser9un/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Laser9un/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Laser9un/subscriptions",
      "organizations_url": "https://api.github.com/users/Laser9un/orgs",
      "repos_url": "https://api.github.com/users/Laser9un/repos",
      "events_url": "https://api.github.com/users/Laser9un/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Laser9un/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f97ec4e154f446530b22dc2ce302fa436fc98a50",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f97ec4e154f446530b22dc2ce302fa436fc98a50",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f97ec4e154f446530b22dc2ce302fa436fc98a50"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 2,
      "deletions": 0
    },
    "files": [
      {
        "sha": "deca00db4463906a6765c6aaed53a15186d53df0",
        "filename": "src/checkpoints.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cd840983d091d3577758d98ffee5857124568f45/src/checkpoints.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cd840983d091d3577758d98ffee5857124568f45/src/checkpoints.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/checkpoints.cpp?ref=cd840983d091d3577758d98ffee5857124568f45",
        "patch": "@@ -31,6 +31,7 @@ namespace Checkpoints\n \t\t( 4200,   std::make_pair(uint256(\"0x000000022c3ed3e7c12741177b3ff82d0b0186511a5e864859f8e0d799e61ad5\"), 1481725697) )\n \t\t( 21000,   std::make_pair(uint256(\"0x00000009204e1118bfca2a5306c50b070445dc9be370ced87bee522a58b269ad\"), 1492742717) )\n \t\t( 42000,   std::make_pair(uint256(\"0x00000004ce60e9b8481570804e09ffc06277befa867db5dca85ef8018a5a2fd7\"), 1504231286) )\n+\t\t( 70000,   std::make_pair(uint256(\"0x0000000000dbf72bace0b3197aea91f6f65b9cd61577ed894603a8d4e1a615c0\"), 1520846671) )\n     ;\n \n     static ListBannedBlocks listBanned ="
      },
      {
        "sha": "935a2da8d6c4243eeee98b7a766dd547c990abe5",
        "filename": "src/kernel.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cd840983d091d3577758d98ffee5857124568f45/src/kernel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cd840983d091d3577758d98ffee5857124568f45/src/kernel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/kernel.cpp?ref=cd840983d091d3577758d98ffee5857124568f45",
        "patch": "@@ -36,6 +36,7 @@ static std::map<int, unsigned int> mapStakeModifierCheckpoints =\n \t\t( 4200,  0x6cfc8d5b )\n \t\t( 21000,  0xe32676ac )\n \t\t( 42000,  0x51bb6d61 )\n+\t\t( 70000,  0x50ed7983 )\n     ;\n \n // Hard checkpoints of stake modifiers to ensure they are deterministic (testNet)"
      }
    ]
  },
  {
    "sha": "3fdcf6e7719d69834f98194e2fdf7352b8376723",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozZmRjZjZlNzcxOWQ2OTgzNGY5ODE5NGUyZmRmNzM1MmI4Mzc2NzIz",
    "commit": {
      "author": {
        "name": "Laser9un",
        "email": "laser9un@gmail.com",
        "date": "2018-03-24T17:57:15Z"
      },
      "committer": {
        "name": "Laser9un",
        "email": "laser9un@gmail.com",
        "date": "2018-03-24T17:57:15Z"
      },
      "message": "Update Copyright Year",
      "tree": {
        "sha": "8f35a74b56dbfc7256714b88cd93d1ed7a559a66",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8f35a74b56dbfc7256714b88cd93d1ed7a559a66"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3fdcf6e7719d69834f98194e2fdf7352b8376723",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3fdcf6e7719d69834f98194e2fdf7352b8376723",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3fdcf6e7719d69834f98194e2fdf7352b8376723",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3fdcf6e7719d69834f98194e2fdf7352b8376723/comments",
    "author": {
      "login": "Laser9un",
      "id": 16782409,
      "node_id": "MDQ6VXNlcjE2NzgyNDA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16782409?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Laser9un",
      "html_url": "https://github.com/Laser9un",
      "followers_url": "https://api.github.com/users/Laser9un/followers",
      "following_url": "https://api.github.com/users/Laser9un/following{/other_user}",
      "gists_url": "https://api.github.com/users/Laser9un/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Laser9un/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Laser9un/subscriptions",
      "organizations_url": "https://api.github.com/users/Laser9un/orgs",
      "repos_url": "https://api.github.com/users/Laser9un/repos",
      "events_url": "https://api.github.com/users/Laser9un/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Laser9un/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Laser9un",
      "id": 16782409,
      "node_id": "MDQ6VXNlcjE2NzgyNDA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16782409?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Laser9un",
      "html_url": "https://github.com/Laser9un",
      "followers_url": "https://api.github.com/users/Laser9un/followers",
      "following_url": "https://api.github.com/users/Laser9un/following{/other_user}",
      "gists_url": "https://api.github.com/users/Laser9un/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Laser9un/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Laser9un/subscriptions",
      "organizations_url": "https://api.github.com/users/Laser9un/orgs",
      "repos_url": "https://api.github.com/users/Laser9un/repos",
      "events_url": "https://api.github.com/users/Laser9un/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Laser9un/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cd840983d091d3577758d98ffee5857124568f45",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cd840983d091d3577758d98ffee5857124568f45",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cd840983d091d3577758d98ffee5857124568f45"
      }
    ],
    "stats": {
      "total": 24,
      "additions": 10,
      "deletions": 14
    },
    "files": [
      {
        "sha": "e0d76bbb3398e1e09cf0ddc4df1a34887fce3afe",
        "filename": "COPYING",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3fdcf6e7719d69834f98194e2fdf7352b8376723/COPYING",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3fdcf6e7719d69834f98194e2fdf7352b8376723/COPYING",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/COPYING?ref=3fdcf6e7719d69834f98194e2fdf7352b8376723",
        "patch": "@@ -3,7 +3,7 @@ Copyright \u00a9 2011-2012 The PPCoin Developers\n Copyright \u00a9 2014 The Peerunity Developers\n Copyright \u00a9 2014 The EmerCoin Developers\n Copyright \u00a9 2012-2016 The NovaCoin developers\n-Copyright \u00a9 2016-2017 The 42 developers\n+Copyright \u00a9 2016-2018 The 42 developers\n \n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal"
      },
      {
        "sha": "56ca703b5e7eb52e7c82dcca709e24be876a96f2",
        "filename": "contrib/debian/copyright",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3fdcf6e7719d69834f98194e2fdf7352b8376723/contrib/debian/copyright",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3fdcf6e7719d69834f98194e2fdf7352b8376723/contrib/debian/copyright",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/copyright?ref=3fdcf6e7719d69834f98194e2fdf7352b8376723",
        "patch": "@@ -3,7 +3,7 @@ Upstream-Name: 42\n Upstream-Source: https://github.com/42-coin/42\n \n Files: *\n-Copyright: 2016-2017, 42 Developers\n+Copyright: 2016-2018, 42 Developers\n License: Expat\n \n Files: *"
      },
      {
        "sha": "0728e278a05b332d84214d48d3579aae69552bc4",
        "filename": "doc/README",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3fdcf6e7719d69834f98194e2fdf7352b8376723/doc/README",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3fdcf6e7719d69834f98194e2fdf7352b8376723/doc/README",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README?ref=3fdcf6e7719d69834f98194e2fdf7352b8376723",
        "patch": "@@ -1,5 +1,3 @@\n-42 0.5.0 BETA\n-\n Copyright (c) 2016 42 Developers\n Copyright (c) 2013 NovaCoin Developers\n Copyright (c) 2011-2012 PPCoin Developers"
      },
      {
        "sha": "b5ece81bcd44a665b59f188072c2c7da598fd2dd",
        "filename": "doc/README_windows.txt",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3fdcf6e7719d69834f98194e2fdf7352b8376723/doc/README_windows.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3fdcf6e7719d69834f98194e2fdf7352b8376723/doc/README_windows.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README_windows.txt?ref=3fdcf6e7719d69834f98194e2fdf7352b8376723",
        "patch": "@@ -1,5 +1,3 @@\n-42 0.4.4 BETA\r\n-\r\n Copyright (c) 2016 42 Developers\r\n Copyright (c) 2013 NovaCoin Developers\r\n Copyright (c) 2011-2013 PPCoin Developers\r"
      },
      {
        "sha": "aa06b02c8826ee679af6de212e5958c3e97de1fe",
        "filename": "src/qt/forms/aboutdialog.ui",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3fdcf6e7719d69834f98194e2fdf7352b8376723/src/qt/forms/aboutdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3fdcf6e7719d69834f98194e2fdf7352b8376723/src/qt/forms/aboutdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/aboutdialog.ui?ref=3fdcf6e7719d69834f98194e2fdf7352b8376723",
        "patch": "@@ -99,7 +99,7 @@ Copyright \u00a9 2011-2012 The PPCoin Developers\n Copyright \u00a9 2014 The Peerunity Developers\n Copyright \u00a9 2014 The EmerCoin Developers\n Copyright \u00a9 2012-2016 The NovaCoin developers\n-Copyright \u00a9 2016-2017 The 42 developers</string>\n+Copyright \u00a9 2016-2018 The 42 developers</string>\n        </property>\n        <property name=\"textInteractionFlags\">\n         <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>"
      },
      {
        "sha": "0837f961b95d56d1f49aadc72adb65ff462c92ec",
        "filename": "src/qt/locale/bitcoin_en.ts",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3fdcf6e7719d69834f98194e2fdf7352b8376723/src/qt/locale/bitcoin_en.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3fdcf6e7719d69834f98194e2fdf7352b8376723/src/qt/locale/bitcoin_en.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_en.ts?ref=3fdcf6e7719d69834f98194e2fdf7352b8376723",
        "patch": "@@ -21,13 +21,13 @@ Copyright \u00a9 2011-2012 The PPCoin Developers\n Copyright \u00a9 2014 The Peerunity Developers\n Copyright \u00a9 2014 The EmerCoin Developers\n Copyright \u00a9 2012-2016 The NovaCoin developers\n-Copyright \u00a9 2016-2017 The 42 developers</source>\n+Copyright \u00a9 2016-2018 The 42 developers</source>\n         <translation>Copyright \u00a9 2009-2016 The Bitcoin developers\n Copyright \u00a9 2011-2012 The PPCoin Developers\n Copyright \u00a9 2014 The Peerunity Developers\n Copyright \u00a9 2014 The EmerCoin Developers\n Copyright \u00a9 2012-2016 The NovaCoin developers\n-Copyright \u00a9 2016-2017 The 42 developers</translation>\n+Copyright \u00a9 2016-2018 The 42 developers</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/aboutdialog.ui\" line=\"114\"/>"
      },
      {
        "sha": "c625298676b9bf4f682e4375e7eb0cf90062c5d1",
        "filename": "src/qt/locale/bitcoin_ru.ts",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3fdcf6e7719d69834f98194e2fdf7352b8376723/src/qt/locale/bitcoin_ru.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3fdcf6e7719d69834f98194e2fdf7352b8376723/src/qt/locale/bitcoin_ru.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ru.ts?ref=3fdcf6e7719d69834f98194e2fdf7352b8376723",
        "patch": "@@ -21,13 +21,13 @@ Copyright \u00a9 2011-2012 The PPCoin Developers\n Copyright \u00a9 2014 The Peerunity Developers\n Copyright \u00a9 2014 The EmerCoin Developers\n Copyright \u00a9 2012-2016 The NovaCoin developers\n-Copyright \u00a9 2016-2017 The 42 developers</source>\n+Copyright \u00a9 2016-2018 The 42 developers</source>\n         <translation>\u0412\u0441\u0435 \u043f\u0440\u0430\u0432\u0430 \u0437\u0430\u0449\u0438\u0449\u0435\u043d\u044b \u00a9 2009-2016 \u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0438 Bitcoin\n \u0412\u0441\u0435 \u043f\u0440\u0430\u0432\u0430 \u0437\u0430\u0449\u0438\u0449\u0435\u043d\u044b \u00a9 2011-2012 \u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0438 PPCoin\n \u0412\u0441\u0435 \u043f\u0440\u0430\u0432\u0430 \u0437\u0430\u0449\u0438\u0449\u0435\u043d\u044b \u00a9 2014 \u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0438 Peerunity\n \u0412\u0441\u0435 \u043f\u0440\u0430\u0432\u0430 \u0437\u0430\u0449\u0438\u0449\u0435\u043d\u044b \u00a9 2014 \u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0438 EmerCoin\n \u0412\u0441\u0435 \u043f\u0440\u0430\u0432\u0430 \u0437\u0430\u0449\u0438\u0449\u0435\u043d\u044b \u00a9 2012-2016 \u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0438 NovaCoin\n-\u0412\u0441\u0435 \u043f\u0440\u0430\u0432\u0430 \u0437\u0430\u0449\u0438\u0449\u0435\u043d\u044b \u00a9 2016-2017 \u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0438 42</translation>\n+\u0412\u0441\u0435 \u043f\u0440\u0430\u0432\u0430 \u0437\u0430\u0449\u0438\u0449\u0435\u043d\u044b \u00a9 2016-2018 \u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0438 42</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/aboutdialog.ui\" line=\"114\"/>"
      },
      {
        "sha": "78cc9b605d4731d64b75bd73fcf79abb49bc1f4e",
        "filename": "src/qt/locale/bitcoin_uk.ts",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3fdcf6e7719d69834f98194e2fdf7352b8376723/src/qt/locale/bitcoin_uk.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3fdcf6e7719d69834f98194e2fdf7352b8376723/src/qt/locale/bitcoin_uk.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_uk.ts?ref=3fdcf6e7719d69834f98194e2fdf7352b8376723",
        "patch": "@@ -21,13 +21,13 @@ Copyright \u00a9 2011-2012 The PPCoin Developers\n Copyright \u00a9 2014 The Peerunity Developers\n Copyright \u00a9 2014 The EmerCoin Developers\n Copyright \u00a9 2012-2016 The NovaCoin Developers\n-Copyright \u00a9 2016-2017 The 42 Developers</source>\n+Copyright \u00a9 2016-2018 The 42 Developers</source>\n         <translation>\u00a9 2009-2016 \u0420\u043e\u0437\u0440\u043e\u0431\u043d\u0438\u043a\u0438 Bitcoin\n \u00a9 2011-2012 \u0420\u043e\u0437\u0440\u043e\u0431\u043d\u0438\u043a\u0438 PPCoin\n \u00a9 2014 \u0420\u043e\u0437\u0440\u043e\u0431\u043d\u0438\u043a\u0438 Peerunity\n \u00a9 2014 \u0420\u043e\u0437\u0440\u043e\u0431\u043d\u0438\u043a\u0438 EmerCoin\n \u00a9 2012-2016 \u0420\u043e\u0437\u0440\u043e\u0431\u043d\u0438\u043a\u0438 NovaCoin\n-\u00a9 2016-2017 \u0420\u043e\u0437\u0440\u043e\u0431\u043d\u0438\u043a\u0438 42</translation>\n+\u00a9 2016-2018 \u0420\u043e\u0437\u0440\u043e\u0431\u043d\u0438\u043a\u0438 42</translation>\n     </message>\n     <message>\n         <location filename=\"../forms/aboutdialog.ui\" line=\"114\"/>"
      },
      {
        "sha": "ae41603fa3ad8379399f2a537bcd893cb115c04e",
        "filename": "src/qt/res/bitcoin-qt.rc",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3fdcf6e7719d69834f98194e2fdf7352b8376723/src/qt/res/bitcoin-qt.rc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3fdcf6e7719d69834f98194e2fdf7352b8376723/src/qt/res/bitcoin-qt.rc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/bitcoin-qt.rc?ref=3fdcf6e7719d69834f98194e2fdf7352b8376723",
        "patch": "@@ -22,7 +22,7 @@ BEGIN\n             VALUE \"FileDescription\",    \"42-Qt (OSS GUI client for 42)\"\n             VALUE \"FileVersion\",        VER_FILEVERSION_STR\n             VALUE \"InternalName\",       \"42-qt\"\n-            VALUE \"LegalCopyright\",     \"2009-2012 The Bitcoin developers, 2012-2016 The NovaCoin & PPCoin developers, 2016-2017 The 42 developers\"\n+            VALUE \"LegalCopyright\",     \"2009-2012 The Bitcoin developers, 2012-2016 The NovaCoin & PPCoin developers, 2016-2018 The 42 developers\"\n             VALUE \"LegalTrademarks1\",   \"Distributed under the MIT/X11 software license, see the accompanying file COPYING or http://www.opensource.org/licenses/mit-license.php.\"\n             VALUE \"OriginalFilename\",   \"42-qt.exe\"\n             VALUE \"ProductName\",        \"42-Qt\""
      }
    ]
  },
  {
    "sha": "27522f01c2bb2dd0c31b3c3a70a7e04e1776612a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyNzUyMmYwMWMyYmIyZGQwYzMxYjNjM2E3MGE3ZTA0ZTE3NzY2MTJh",
    "commit": {
      "author": {
        "name": "Laser9un",
        "email": "laser9un@gmail.com",
        "date": "2018-05-12T07:06:57Z"
      },
      "committer": {
        "name": "Laser9un",
        "email": "laser9un@gmail.com",
        "date": "2018-05-12T07:06:57Z"
      },
      "message": "Fix logo link",
      "tree": {
        "sha": "9e578b3a18cab165486510ae053835d12d905ea0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9e578b3a18cab165486510ae053835d12d905ea0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/27522f01c2bb2dd0c31b3c3a70a7e04e1776612a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/27522f01c2bb2dd0c31b3c3a70a7e04e1776612a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/27522f01c2bb2dd0c31b3c3a70a7e04e1776612a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/27522f01c2bb2dd0c31b3c3a70a7e04e1776612a/comments",
    "author": {
      "login": "Laser9un",
      "id": 16782409,
      "node_id": "MDQ6VXNlcjE2NzgyNDA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16782409?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Laser9un",
      "html_url": "https://github.com/Laser9un",
      "followers_url": "https://api.github.com/users/Laser9un/followers",
      "following_url": "https://api.github.com/users/Laser9un/following{/other_user}",
      "gists_url": "https://api.github.com/users/Laser9un/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Laser9un/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Laser9un/subscriptions",
      "organizations_url": "https://api.github.com/users/Laser9un/orgs",
      "repos_url": "https://api.github.com/users/Laser9un/repos",
      "events_url": "https://api.github.com/users/Laser9un/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Laser9un/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Laser9un",
      "id": 16782409,
      "node_id": "MDQ6VXNlcjE2NzgyNDA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16782409?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Laser9un",
      "html_url": "https://github.com/Laser9un",
      "followers_url": "https://api.github.com/users/Laser9un/followers",
      "following_url": "https://api.github.com/users/Laser9un/following{/other_user}",
      "gists_url": "https://api.github.com/users/Laser9un/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Laser9un/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Laser9un/subscriptions",
      "organizations_url": "https://api.github.com/users/Laser9un/orgs",
      "repos_url": "https://api.github.com/users/Laser9un/repos",
      "events_url": "https://api.github.com/users/Laser9un/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Laser9un/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3fdcf6e7719d69834f98194e2fdf7352b8376723",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3fdcf6e7719d69834f98194e2fdf7352b8376723",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3fdcf6e7719d69834f98194e2fdf7352b8376723"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "a573c5aa7ee21e2a52662a7233d4ec6ec16be739",
        "filename": "README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/27522f01c2bb2dd0c31b3c3a70a7e04e1776612a/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/27522f01c2bb2dd0c31b3c3a70a7e04e1776612a/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/README.md?ref=27522f01c2bb2dd0c31b3c3a70a7e04e1776612a",
        "patch": "@@ -1,4 +1,4 @@\n-[![42-256.png](https://s18.postimg.org/ijc11b8kp/42-256.png/)](https://tr.im/42coin)\n+[![42-256.png](http://i65.tinypic.com/2nscfvm.png)](https://tr.im/42coin)\n \n \n 42-coin - a PoW/PoS based cryptocurrency."
      }
    ]
  },
  {
    "sha": "17a13496c556385b2a9cb9245052586f1f6b269f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxN2ExMzQ5NmM1NTYzODViMmE5Y2I5MjQ1MDUyNTg2ZjFmNmIyNjlm",
    "commit": {
      "author": {
        "name": "Laser9un",
        "email": "laser9un@gmail.com",
        "date": "2018-05-28T07:47:26Z"
      },
      "committer": {
        "name": "Laser9un",
        "email": "laser9un@gmail.com",
        "date": "2018-05-28T07:47:26Z"
      },
      "message": "Upd README.md",
      "tree": {
        "sha": "465f10eb94dcf58c9e5e346d6f1f0e8bcb1eccaa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/465f10eb94dcf58c9e5e346d6f1f0e8bcb1eccaa"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/17a13496c556385b2a9cb9245052586f1f6b269f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/17a13496c556385b2a9cb9245052586f1f6b269f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/17a13496c556385b2a9cb9245052586f1f6b269f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/17a13496c556385b2a9cb9245052586f1f6b269f/comments",
    "author": {
      "login": "Laser9un",
      "id": 16782409,
      "node_id": "MDQ6VXNlcjE2NzgyNDA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16782409?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Laser9un",
      "html_url": "https://github.com/Laser9un",
      "followers_url": "https://api.github.com/users/Laser9un/followers",
      "following_url": "https://api.github.com/users/Laser9un/following{/other_user}",
      "gists_url": "https://api.github.com/users/Laser9un/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Laser9un/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Laser9un/subscriptions",
      "organizations_url": "https://api.github.com/users/Laser9un/orgs",
      "repos_url": "https://api.github.com/users/Laser9un/repos",
      "events_url": "https://api.github.com/users/Laser9un/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Laser9un/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Laser9un",
      "id": 16782409,
      "node_id": "MDQ6VXNlcjE2NzgyNDA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16782409?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Laser9un",
      "html_url": "https://github.com/Laser9un",
      "followers_url": "https://api.github.com/users/Laser9un/followers",
      "following_url": "https://api.github.com/users/Laser9un/following{/other_user}",
      "gists_url": "https://api.github.com/users/Laser9un/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Laser9un/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Laser9un/subscriptions",
      "organizations_url": "https://api.github.com/users/Laser9un/orgs",
      "repos_url": "https://api.github.com/users/Laser9un/repos",
      "events_url": "https://api.github.com/users/Laser9un/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Laser9un/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "27522f01c2bb2dd0c31b3c3a70a7e04e1776612a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/27522f01c2bb2dd0c31b3c3a70a7e04e1776612a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/27522f01c2bb2dd0c31b3c3a70a7e04e1776612a"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "b46f0b06ad7f6fcb25c0b53a1b614872d74bdb3d",
        "filename": "README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17a13496c556385b2a9cb9245052586f1f6b269f/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17a13496c556385b2a9cb9245052586f1f6b269f/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/README.md?ref=17a13496c556385b2a9cb9245052586f1f6b269f",
        "patch": "@@ -14,7 +14,7 @@ Specifications\n - PoW algo type: Scrypt\n - PoW reward: 0 coin + tx fees\n - PoW target spacing: 21 minutes\n-- PoS reward: 0 coin\n+- PoS reward: 0 coin & destroy tx fees (for deflation)\n - Min stake age: 42 hours\n - Max stake age: unlimited\n - PoS target spacing: 7 minutes"
      }
    ]
  },
  {
    "sha": "c738dc89f0d1139e28bc723586e12a3f4e618f0a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNzM4ZGM4OWYwZDExMzllMjhiYzcyMzU4NmUxMmEzZjRlNjE4ZjBh",
    "commit": {
      "author": {
        "name": "Laser9un",
        "email": "laser9un@gmail.com",
        "date": "2018-05-28T09:50:05Z"
      },
      "committer": {
        "name": "Laser9un",
        "email": "laser9un@gmail.com",
        "date": "2018-05-28T09:50:05Z"
      },
      "message": "Fix wallettools/ .py 42 RPC Port",
      "tree": {
        "sha": "f858c59c441e1959a548c52a8f5bf892c9c5f138",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f858c59c441e1959a548c52a8f5bf892c9c5f138"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c738dc89f0d1139e28bc723586e12a3f4e618f0a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c738dc89f0d1139e28bc723586e12a3f4e618f0a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c738dc89f0d1139e28bc723586e12a3f4e618f0a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c738dc89f0d1139e28bc723586e12a3f4e618f0a/comments",
    "author": {
      "login": "Laser9un",
      "id": 16782409,
      "node_id": "MDQ6VXNlcjE2NzgyNDA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16782409?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Laser9un",
      "html_url": "https://github.com/Laser9un",
      "followers_url": "https://api.github.com/users/Laser9un/followers",
      "following_url": "https://api.github.com/users/Laser9un/following{/other_user}",
      "gists_url": "https://api.github.com/users/Laser9un/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Laser9un/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Laser9un/subscriptions",
      "organizations_url": "https://api.github.com/users/Laser9un/orgs",
      "repos_url": "https://api.github.com/users/Laser9un/repos",
      "events_url": "https://api.github.com/users/Laser9un/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Laser9un/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Laser9un",
      "id": 16782409,
      "node_id": "MDQ6VXNlcjE2NzgyNDA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16782409?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Laser9un",
      "html_url": "https://github.com/Laser9un",
      "followers_url": "https://api.github.com/users/Laser9un/followers",
      "following_url": "https://api.github.com/users/Laser9un/following{/other_user}",
      "gists_url": "https://api.github.com/users/Laser9un/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Laser9un/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Laser9un/subscriptions",
      "organizations_url": "https://api.github.com/users/Laser9un/orgs",
      "repos_url": "https://api.github.com/users/Laser9un/repos",
      "events_url": "https://api.github.com/users/Laser9un/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Laser9un/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "17a13496c556385b2a9cb9245052586f1f6b269f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/17a13496c556385b2a9cb9245052586f1f6b269f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/17a13496c556385b2a9cb9245052586f1f6b269f"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "4659b0fb837266c6acd2455c441b3226eb25edb2",
        "filename": "contrib/wallettools/walletchangepass.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c738dc89f0d1139e28bc723586e12a3f4e618f0a/contrib/wallettools/walletchangepass.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c738dc89f0d1139e28bc723586e12a3f4e618f0a/contrib/wallettools/walletchangepass.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/wallettools/walletchangepass.py?ref=c738dc89f0d1139e28bc723586e12a3f4e618f0a",
        "patch": "@@ -1,5 +1,5 @@\n from jsonrpc import ServiceProxy\n-access = ServiceProxy(\"http://127.0.0.1:4242\")\n+access = ServiceProxy(\"http://127.0.0.1:2121\")\n pwd = raw_input(\"Enter old wallet passphrase: \")\n pwd2 = raw_input(\"Enter new wallet passphrase: \")\n access.walletpassphrasechange(pwd, pwd2)\n\\ No newline at end of file"
      },
      {
        "sha": "456257e67d475d613440c29e9d32677fc2db11a0",
        "filename": "contrib/wallettools/walletdefrag.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c738dc89f0d1139e28bc723586e12a3f4e618f0a/contrib/wallettools/walletdefrag.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c738dc89f0d1139e28bc723586e12a3f4e618f0a/contrib/wallettools/walletdefrag.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/wallettools/walletdefrag.py?ref=c738dc89f0d1139e28bc723586e12a3f4e618f0a",
        "patch": "@@ -4,7 +4,7 @@\n MaxOutputSum = 500       # Maximum transaction value\n MinInputSum = 50         # Minimum input value, inputs with lower size will be ignored\n \n-access = ServiceProxy(\"http://alexd:123456789@127.0.0.1:4242\")   # http://username:password@host:port/\n+access = ServiceProxy(\"http://alexd:123456789@127.0.0.1:2121\")   # http://username:password@host:port/\n \n try:\n     balance = access.getbalance()"
      },
      {
        "sha": "8cdb580db1b946b94cf5aae6ed5373f424d221cd",
        "filename": "contrib/wallettools/walletunlock.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c738dc89f0d1139e28bc723586e12a3f4e618f0a/contrib/wallettools/walletunlock.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c738dc89f0d1139e28bc723586e12a3f4e618f0a/contrib/wallettools/walletunlock.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/wallettools/walletunlock.py?ref=c738dc89f0d1139e28bc723586e12a3f4e618f0a",
        "patch": "@@ -1,5 +1,5 @@\n from jsonrpc import ServiceProxy\n-access = ServiceProxy(\"http://127.0.0.1:4242\")\n+access = ServiceProxy(\"http://127.0.0.1:2121\")\n pwd = raw_input(\"Enter wallet passphrase: \")\n access.walletpassphrase(pwd, 60)\n "
      }
    ]
  },
  {
    "sha": "e8c850c5d85c0797db58129b5c719e39f9ef3fc0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplOGM4NTBjNWQ4NWMwNzk3ZGI1ODEyOWI1YzcxOWUzOWY5ZWYzZmMw",
    "commit": {
      "author": {
        "name": "Laser9un",
        "email": "laser9un@gmail.com",
        "date": "2018-06-03T19:03:54Z"
      },
      "committer": {
        "name": "Laser9un",
        "email": "laser9un@gmail.com",
        "date": "2018-06-03T19:03:54Z"
      },
      "message": "Upd. translation",
      "tree": {
        "sha": "bce836a92804b04445fc84482fd429e039229b46",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bce836a92804b04445fc84482fd429e039229b46"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e8c850c5d85c0797db58129b5c719e39f9ef3fc0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e8c850c5d85c0797db58129b5c719e39f9ef3fc0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e8c850c5d85c0797db58129b5c719e39f9ef3fc0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e8c850c5d85c0797db58129b5c719e39f9ef3fc0/comments",
    "author": {
      "login": "Laser9un",
      "id": 16782409,
      "node_id": "MDQ6VXNlcjE2NzgyNDA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16782409?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Laser9un",
      "html_url": "https://github.com/Laser9un",
      "followers_url": "https://api.github.com/users/Laser9un/followers",
      "following_url": "https://api.github.com/users/Laser9un/following{/other_user}",
      "gists_url": "https://api.github.com/users/Laser9un/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Laser9un/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Laser9un/subscriptions",
      "organizations_url": "https://api.github.com/users/Laser9un/orgs",
      "repos_url": "https://api.github.com/users/Laser9un/repos",
      "events_url": "https://api.github.com/users/Laser9un/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Laser9un/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Laser9un",
      "id": 16782409,
      "node_id": "MDQ6VXNlcjE2NzgyNDA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16782409?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Laser9un",
      "html_url": "https://github.com/Laser9un",
      "followers_url": "https://api.github.com/users/Laser9un/followers",
      "following_url": "https://api.github.com/users/Laser9un/following{/other_user}",
      "gists_url": "https://api.github.com/users/Laser9un/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Laser9un/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Laser9un/subscriptions",
      "organizations_url": "https://api.github.com/users/Laser9un/orgs",
      "repos_url": "https://api.github.com/users/Laser9un/repos",
      "events_url": "https://api.github.com/users/Laser9un/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Laser9un/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c738dc89f0d1139e28bc723586e12a3f4e618f0a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c738dc89f0d1139e28bc723586e12a3f4e618f0a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c738dc89f0d1139e28bc723586e12a3f4e618f0a"
      }
    ],
    "stats": {
      "total": 551,
      "additions": 6,
      "deletions": 545
    },
    "files": [
      {
        "sha": "87febc662d57687b7632f4214db99e6f46d02068",
        "filename": "src/ntp.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e8c850c5d85c0797db58129b5c719e39f9ef3fc0/src/ntp.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e8c850c5d85c0797db58129b5c719e39f9ef3fc0/src/ntp.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/ntp.cpp?ref=e8c850c5d85c0797db58129b5c719e39f9ef3fc0",
        "patch": "@@ -461,7 +461,7 @@ void ThreadNtpSamples(void* parg) {\n     vnThreadsRunning[THREAD_NTP]++;\n \n     // Make this thread recognisable as time synchronization thread\n-    RenameThread(\"novacoin-ntp-samples\");\n+    RenameThread(\"42-ntp-samples\");\n \n     CMedianFilter<int64_t> vTimeOffsets(200,0);\n \n@@ -517,10 +517,10 @@ void ThreadNtpSamples(void* parg) {\n         if (GetNodesOffset() == INT_MAX && abs64(nNtpOffset) > 40 * 60)\n         {\n             // If there is not enough node offsets data and NTP time offset is greater than 40 minutes then give a warning.\n-            std::string strMessage = _(\"Warning: Please check that your computer's date and time are correct! If your clock is wrong NovaCoin will not work properly.\");\n+            std::string strMessage = _(\"Warning: Please check that your computer's date and time are correct! If your clock is wrong 42 will not work properly.\");\n             strMiscWarning = strMessage;\n             printf(\"*** %s\\n\", strMessage.c_str());\n-            uiInterface.ThreadSafeMessageBox(strMessage+\" \", std::string(\"NovaCoin\"), CClientUIInterface::OK | CClientUIInterface::ICON_EXCLAMATION);\n+            uiInterface.ThreadSafeMessageBox(strMessage+\" \", std::string(\"42\"), CClientUIInterface::OK | CClientUIInterface::ICON_EXCLAMATION);\n         }\n \n         printf(\"nNtpOffset = %+\" PRId64 \"  (%+\" PRId64 \" minutes)\\n\", nNtpOffset, nNtpOffset/60);"
      },
      {
        "sha": "1e104ee6968407939ed8f1c9011e855754503fd7",
        "filename": "src/qt/forms/guiutil.cpp",
        "status": "removed",
        "additions": 0,
        "deletions": 539,
        "changes": 539,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c738dc89f0d1139e28bc723586e12a3f4e618f0a/src/qt/forms/guiutil.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c738dc89f0d1139e28bc723586e12a3f4e618f0a/src/qt/forms/guiutil.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/guiutil.cpp?ref=c738dc89f0d1139e28bc723586e12a3f4e618f0a",
        "patch": "@@ -1,539 +0,0 @@\n-#include \"guiutil.h\"\n-#include \"bitcoinaddressvalidator.h\"\n-#include \"walletmodel.h\"\n-#include \"bitcoinunits.h\"\n-#include \"util.h\"\n-#include \"init.h\"\n-\n-#include <QString>\n-#include <QDateTime>\n-#include <QDoubleValidator>\n-#include <QFont>\n-#include <QLineEdit>\n-#if QT_VERSION >= 0x050000\n-#include <QUrlQuery>\n-#else\n-#include <QUrl>\n-#endif\n-#include <QTextDocument> // For Qt::mightBeRichText\n-#include <QAbstractItemView>\n-#include <QApplication>\n-#include <QClipboard>\n-#include <QFileDialog>\n-#include <QDesktopServices>\n-#include <QThread>\n-\n-#ifndef Q_MOC_RUN\n-#include <boost/filesystem.hpp>\n-#include <boost/filesystem/fstream.hpp>\n-#if BOOST_FILESYSTEM_VERSION >= 3\n-#include <boost/filesystem/detail/utf8_codecvt_facet.hpp>\n-#endif\n-#endif\n-\n-#ifdef WIN32\n-#ifdef _WIN32_WINNT\n-#undef _WIN32_WINNT\n-#endif\n-#define _WIN32_WINNT 0x0501\n-#ifdef _WIN32_IE\n-#undef _WIN32_IE\n-#endif\n-#define _WIN32_IE 0x0501\n-#define WIN32_LEAN_AND_MEAN 1\n-#ifndef NOMINMAX\n-#define NOMINMAX\n-#endif\n-#include \"shlwapi.h\"\n-#include \"shlobj.h\"\n-#include \"shellapi.h\"\n-#endif\n-\n-#if BOOST_FILESYSTEM_VERSION >= 3\n-static boost::filesystem::detail::utf8_codecvt_facet utf8;\n-#endif\n-\n-namespace GUIUtil {\n-\n-#if BOOST_FILESYSTEM_VERSION >= 3\n-boost::filesystem::path qstringToBoostPath(const QString &path)\n-{\n-    return boost::filesystem::path(path.toStdString(), utf8);\n-}\n-QString boostPathToQString(const boost::filesystem::path &path)\n-{\n-    return QString::fromStdString(path.string(utf8));\n-}\n-#else\n-#warning Conversion between boost path and QString can use invalid character encoding with boost_filesystem v2 and older\n-boost::filesystem::path qstringToBoostPath(const QString &path)\n-{\n-    return boost::filesystem::path(path.toStdString());\n-}\n-QString boostPathToQString(const boost::filesystem::path &path)\n-{\n-    return QString::fromStdString(path.string());\n-}\n-#endif\n-\n-QString dateTimeStr(const QDateTime &date)\n-{\n-    return date.date().toString(Qt::SystemLocaleShortDate) + QString(\" \") + date.toString(\"hh:mm\");\n-}\n-\n-QString dateTimeStr(qint64 nTime)\n-{\n-    return dateTimeStr(QDateTime::fromTime_t((qint32)nTime));\n-}\n-\n-QFont bitcoinAddressFont()\n-{\n-    QFont font(\"Monospace\");\n-    font.setStyleHint(QFont::TypeWriter);\n-    return font;\n-}\n-\n-void setupAddressWidget(QLineEdit *widget, QWidget *parent)\n-{\n-    widget->setMaxLength(BitcoinAddressValidator::MaxAddressLength);\n-    widget->setValidator(new BitcoinAddressValidator(parent));\n-    widget->setFont(bitcoinAddressFont());\n-}\n-\n-void setupAmountWidget(QLineEdit *widget, QWidget *parent)\n-{\n-    QDoubleValidator *amountValidator = new QDoubleValidator(parent);\n-    amountValidator->setDecimals(8);\n-    amountValidator->setBottom(0.0);\n-    widget->setValidator(amountValidator);\n-    widget->setAlignment(Qt::AlignRight|Qt::AlignVCenter);\n-}\n-\n-bool parseBitcoinURI(const QUrl &uri, SendCoinsRecipient *out)\n-{\n-    // 42: check prefix\n-    if(uri.scheme() != QString(\"42\"))\n-        return false;\n-\n-    SendCoinsRecipient rv;\n-    rv.address = uri.path();\n-    rv.amount = 0;\n-#if QT_VERSION < 0x050000\n-    QList<QPair<QString, QString> > items = uri.queryItems();\n-#else\n-    QUrlQuery uriQuery(uri);\n-    QList<QPair<QString, QString> > items = uriQuery.queryItems();\n-#endif\n-    for (QList<QPair<QString, QString> >::iterator i = items.begin(); i != items.end(); i++)\n-    {\n-        bool fShouldReturnFalse = false;\n-        if (i->first.startsWith(\"req-\"))\n-        {\n-            i->first.remove(0, 4);\n-            fShouldReturnFalse = true;\n-        }\n-\n-        if (i->first == \"label\")\n-        {\n-            rv.label = i->second;\n-            fShouldReturnFalse = false;\n-        }\n-        else if (i->first == \"amount\")\n-        {\n-            if(!i->second.isEmpty())\n-            {\n-                if(!BitcoinUnits::parse(BitcoinUnits::BTC, i->second, &rv.amount))\n-                {\n-                    return false;\n-                }\n-            }\n-            fShouldReturnFalse = false;\n-        }\n-\n-        if (fShouldReturnFalse)\n-            return false;\n-    }\n-    if(out)\n-    {\n-        *out = rv;\n-    }\n-    return true;\n-}\n-\n-bool parseBitcoinURI(QString uri, SendCoinsRecipient *out)\n-{\n-    // Convert 42:// to 42:\n-    //\n-    //    Cannot handle this later, because bitcoin:// will cause Qt to see the part after // as host,\n-    //    which will lower-case it (and thus invalidate the address).\n-    if(uri.startsWith(\"42://\"))\n-    {\n-        uri.replace(0, 10, \"42:\");\n-    }\n-    QUrl uriInstance(uri);\n-    return parseBitcoinURI(uriInstance, out);\n-}\n-\n-QString HtmlEscape(const QString& str, bool fMultiLine)\n-{\n-#if QT_VERSION < 0x050000\n-    QString escaped = Qt::escape(str);\n-#else\n-    QString escaped = str.toHtmlEscaped();\n-#endif\n-    if(fMultiLine)\n-    {\n-        escaped = escaped.replace(\"\\n\", \"<br>\\n\");\n-    }\n-    return escaped;\n-}\n-\n-QString HtmlEscape(const std::string& str, bool fMultiLine)\n-{\n-    return HtmlEscape(QString::fromStdString(str), fMultiLine);\n-}\n-\n-void copyEntryData(QAbstractItemView *view, int column, int role)\n-{\n-    if(!view || !view->selectionModel())\n-        return;\n-    QModelIndexList selection = view->selectionModel()->selectedRows(column);\n-\n-    if(!selection.isEmpty())\n-    {\n-        // Copy first item\n-        QApplication::clipboard()->setText(selection.at(0).data(role).toString());\n-    }\n-}\n-\n-QString getSaveFileName(QWidget *parent, const QString &caption,\n-                                 const QString &dir,\n-                                 const QString &filter,\n-                                 QString *selectedSuffixOut)\n-{\n-    QString selectedFilter;\n-    QString myDir;\n-    if(dir.isEmpty()) // Default to user documents location\n-    {\n-#if QT_VERSION < 0x050000\n-        myDir = QDesktopServices::storageLocation(QDesktopServices::DocumentsLocation);\n-#else\n-        myDir = QStandardPaths::writableLocation(QStandardPaths::DocumentsLocation);\n-#endif\n-    }\n-    else\n-    {\n-        myDir = dir;\n-    }\n-    QString result = QFileDialog::getSaveFileName(parent, caption, myDir, filter, &selectedFilter);\n-\n-    /* Extract first suffix from filter pattern \"Description (*.foo)\" or \"Description (*.foo *.bar ...) */\n-    QRegExp filter_re(\".* \\\\(\\\\*\\\\.(.*)[ \\\\)]\");\n-    QString selectedSuffix;\n-    if(filter_re.exactMatch(selectedFilter))\n-    {\n-        selectedSuffix = filter_re.cap(1);\n-    }\n-\n-    /* Add suffix if needed */\n-    QFileInfo info(result);\n-    if(!result.isEmpty())\n-    {\n-        if(info.suffix().isEmpty() && !selectedSuffix.isEmpty())\n-        {\n-            /* No suffix specified, add selected suffix */\n-            if(!result.endsWith(\".\"))\n-                result.append(\".\");\n-            result.append(selectedSuffix);\n-        }\n-    }\n-\n-    /* Return selected suffix if asked to */\n-    if(selectedSuffixOut)\n-    {\n-        *selectedSuffixOut = selectedSuffix;\n-    }\n-    return result;\n-}\n-\n-Qt::ConnectionType blockingGUIThreadConnection()\n-{\n-    if(QThread::currentThread() != QCoreApplication::instance()->thread())\n-    {\n-        return Qt::BlockingQueuedConnection;\n-    }\n-    else\n-    {\n-        return Qt::DirectConnection;\n-    }\n-}\n-\n-bool checkPoint(const QPoint &p, const QWidget *w)\n-{\n-    QWidget *atW = qApp->widgetAt(w->mapToGlobal(p));\n-    if (!atW) return false;\n-    return atW->topLevelWidget() == w;\n-}\n-\n-bool isObscured(QWidget *w)\n-{\n-    return !(checkPoint(QPoint(0, 0), w)\n-        && checkPoint(QPoint(w->width() - 1, 0), w)\n-        && checkPoint(QPoint(0, w->height() - 1), w)\n-        && checkPoint(QPoint(w->width() - 1, w->height() - 1), w)\n-        && checkPoint(QPoint(w->width() / 2, w->height() / 2), w));\n-}\n-\n-void openDebugLogfile()\n-{\n-    boost::filesystem::path pathDebug = GetDataDir() / \"debug.log\";\n-\n-    /* Open debug.log with the associated application */\n-    if (boost::filesystem::exists(pathDebug))\n-        QDesktopServices::openUrl(QUrl::fromLocalFile(QString::fromStdString(pathDebug.string())));\n-}\n-\n-void openConfigfile()\n-{\n-    boost::filesystem::path pathConfig = GetConfigFile();\n-\n-    /* Open 42.conf with the associated application */\n-    if (boost::filesystem::exists(pathConfig))\n-        QDesktopServices::openUrl(QUrl::fromLocalFile(QString::fromStdString(pathConfig.string())));\n-}\n-\n-ToolTipToRichTextFilter::ToolTipToRichTextFilter(int size_threshold, QObject *parent) :\n-    QObject(parent), size_threshold(size_threshold)\n-{\n-\n-}\n-\n-bool ToolTipToRichTextFilter::eventFilter(QObject *obj, QEvent *evt)\n-{\n-    if(evt->type() == QEvent::ToolTipChange)\n-    {\n-        QWidget *widget = static_cast<QWidget*>(obj);\n-        QString tooltip = widget->toolTip();\n-        if(tooltip.size() > size_threshold && !tooltip.startsWith(\"<qt>\") && !Qt::mightBeRichText(tooltip))\n-        {\n-            // Prefix <qt/> to make sure Qt detects this as rich text\n-            // Escape the current message as HTML and replace \\n by <br>\n-            tooltip = \"<qt>\" + HtmlEscape(tooltip, true) + \"<qt/>\";\n-            widget->setToolTip(tooltip);\n-            return true;\n-        }\n-    }\n-    return QObject::eventFilter(obj, evt);\n-}\n-\n-#ifdef WIN32\n-boost::filesystem::path static StartupShortcutPath()\n-{\n-    return GetSpecialFolderPath(CSIDL_STARTUP) / \"42.lnk\";\n-}\n-\n-bool GetStartOnSystemStartup()\n-{\n-    // check for Bitcoin.lnk\n-    return boost::filesystem::exists(StartupShortcutPath());\n-}\n-\n-bool SetStartOnSystemStartup(bool fAutoStart)\n-{\n-    // If the shortcut exists already, remove it for updating\n-    boost::filesystem::remove(StartupShortcutPath());\n-\n-    if (fAutoStart)\n-    {\n-        CoInitialize(NULL);\n-\n-        // Get a pointer to the IShellLink interface.\n-        IShellLink* psl = NULL;\n-        HRESULT hres = CoCreateInstance(CLSID_ShellLink, NULL,\n-                                CLSCTX_INPROC_SERVER, IID_IShellLink,\n-                                reinterpret_cast<void**>(&psl));\n-\n-        if (SUCCEEDED(hres))\n-        {\n-            // Get the current executable path\n-            TCHAR pszExePath[MAX_PATH];\n-            GetModuleFileName(NULL, pszExePath, sizeof(pszExePath));\n-\n-            TCHAR pszArgs[5] = TEXT(\"-min\");\n-\n-            // Set the path to the shortcut target\n-            psl->SetPath(pszExePath);\n-            PathRemoveFileSpec(pszExePath);\n-            psl->SetWorkingDirectory(pszExePath);\n-            psl->SetShowCmd(SW_SHOWMINNOACTIVE);\n-            psl->SetArguments(pszArgs);\n-\n-            // Query IShellLink for the IPersistFile interface for\n-            // saving the shortcut in persistent storage.\n-            IPersistFile* ppf = NULL;\n-            hres = psl->QueryInterface(IID_IPersistFile,\n-                                       reinterpret_cast<void**>(&ppf));\n-            if (SUCCEEDED(hres))\n-            {\n-                WCHAR pwsz[MAX_PATH];\n-                // Ensure that the string is ANSI.\n-                MultiByteToWideChar(CP_ACP, 0, StartupShortcutPath().string().c_str(), -1, pwsz, MAX_PATH);\n-                // Save the link by calling IPersistFile::Save.\n-                hres = ppf->Save(pwsz, TRUE);\n-                ppf->Release();\n-                psl->Release();\n-                CoUninitialize();\n-                return true;\n-            }\n-            psl->Release();\n-        }\n-        CoUninitialize();\n-        return false;\n-    }\n-    return true;\n-}\n-\n-#elif defined(LINUX)\n-\n-// Follow the Desktop Application Autostart Spec:\n-//  http://standards.freedesktop.org/autostart-spec/autostart-spec-latest.html\n-\n-boost::filesystem::path static GetAutostartDir()\n-{\n-    namespace fs = boost::filesystem;\n-\n-    char* pszConfigHome = getenv(\"XDG_CONFIG_HOME\");\n-    if (pszConfigHome) return fs::path(pszConfigHome) / \"autostart\";\n-    char* pszHome = getenv(\"HOME\");\n-    if (pszHome) return fs::path(pszHome) / \".config\" / \"autostart\";\n-    return fs::path();\n-}\n-\n-boost::filesystem::path static GetAutostartFilePath()\n-{\n-    return GetAutostartDir() / \"42.desktop\";\n-}\n-\n-bool GetStartOnSystemStartup()\n-{\n-    boost::filesystem::ifstream optionFile(GetAutostartFilePath());\n-    if (!optionFile.good())\n-        return false;\n-    // Scan through file for \"Hidden=true\":\n-    std::string line;\n-    while (!optionFile.eof())\n-    {\n-        getline(optionFile, line);\n-        if (line.find(\"Hidden\") != std::string::npos &&\n-            line.find(\"true\") != std::string::npos)\n-            return false;\n-    }\n-    optionFile.close();\n-\n-    return true;\n-}\n-\n-bool SetStartOnSystemStartup(bool fAutoStart)\n-{\n-    if (!fAutoStart)\n-        boost::filesystem::remove(GetAutostartFilePath());\n-    else\n-    {\n-        char pszExePath[MAX_PATH+1];\n-        memset(pszExePath, 0, sizeof(pszExePath));\n-        if (readlink(\"/proc/self/exe\", pszExePath, sizeof(pszExePath)-1) == -1)\n-            return false;\n-\n-        boost::filesystem::create_directories(GetAutostartDir());\n-\n-        boost::filesystem::ofstream optionFile(GetAutostartFilePath(), std::ios_base::out|std::ios_base::trunc);\n-        if (!optionFile.good())\n-            return false;\n-        // Write a bitcoin.desktop file to the autostart directory:\n-        optionFile << \"[Desktop Entry]\\n\";\n-        optionFile << \"Type=Application\\n\";\n-        optionFile << \"Name=42\\n\";\n-        optionFile << \"Exec=\" << pszExePath << \" -min\\n\";\n-        optionFile << \"Terminal=false\\n\";\n-        optionFile << \"Hidden=false\\n\";\n-        optionFile.close();\n-    }\n-    return true;\n-}\n-#else\n-\n-// TODO: OSX startup stuff; see:\n-// https://developer.apple.com/library/mac/#documentation/MacOSX/Conceptual/BPSystemStartup/Articles/CustomLogin.html\n-\n-bool GetStartOnSystemStartup() { return false; }\n-bool SetStartOnSystemStartup(bool fAutoStart) { return false; }\n-\n-#endif\n-\n-HelpMessageBox::HelpMessageBox(QWidget *parent) :\n-    QMessageBox(parent)\n-{\n-    header = tr(\"42-Qt\") + \" \" + tr(\"version\") + \" \" +\n-        QString::fromStdString(FormatFullVersion()) + \"\\n\\n\" +\n-        tr(\"Usage:\") + \"\\n\" +\n-        \"  42-qt [\" + tr(\"command-line options\") + \"]                     \" + \"\\n\";\n-\n-    coreOptions = QString::fromStdString(HelpMessage());\n-\n-    uiOptions = tr(\"UI options\") + \":\\n\" +\n-        \"  -lang=<lang>           \" + tr(\"Set language, for example \\\"de_DE\\\" (default: system locale)\") + \"\\n\" +\n-        \"  -min                   \" + tr(\"Start minimized\") + \"\\n\" +\n-        \"  -splash                \" + tr(\"Show splash screen on startup (default: 1)\") + \"\\n\";\n-\n-    setWindowTitle(tr(\"42-Qt\"));\n-    setFont(bitcoinAddressFont());\n-    setTextFormat(Qt::PlainText);\n-    // setMinimumWidth is ignored for QMessageBox so put in non-breaking spaces to make it wider.\n-    setText(header + QString(QChar(0x2003)).repeated(50));\n-    setDetailedText(coreOptions + \"\\n\" + uiOptions);\n-    addButton(\"OK\", QMessageBox::RejectRole);   //\u043a\u043d\u043e\u043f\u043a\u0430 OK \u0431\u0443\u0434\u0435\u0442 \u0441\u043f\u0440\u0430\u0432\u0430 \u043e\u0442 \u043a\u043d\u043e\u043f\u043a\u0438 \"\u0421\u043a\u0440\u044b\u0442\u044c \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u043e\u0441\u0442\u0438\"\n-    //addButton(\"OK\", QMessageBox::NoRole);     //\u043a\u043d\u043e\u043f\u043a\u0430 OK \u0431\u0443\u0434\u0435\u0442 \u0441\u043b\u0435\u0432\u0430 \u043e\u0442 \u043a\u043d\u043e\u043f\u043a\u0438 \"\u0421\u043a\u0440\u044b\u0442\u044c \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u043e\u0441\u0442\u0438\"\n-    setMouseTracking(true);\n-    setSizeGripEnabled(true);   \n-}\n-\n-void HelpMessageBox::printToConsole()\n-{\n-    // On other operating systems, the expected action is to print the message to the console.\n-    QString strUsage = header + \"\\n\" + coreOptions + \"\\n\" + uiOptions;\n-    fprintf(stdout, \"%s\", strUsage.toStdString().c_str());\n-}\n-\n-void HelpMessageBox::showOrPrint()\n-{\n-#if defined(WIN32)\n-        // On Windows, show a message box, as there is no stderr/stdout in windowed applications\n-        exec();\n-#else\n-        // On other operating systems, print help text to console\n-        printToConsole();\n-#endif\n-}\n-\n-QString formatDurationStr(int secs)\n-{\n-    QStringList strList;\n-    int days = secs / 86400;\n-    int hours = (secs % 86400) / 3600;\n-    int mins = (secs % 3600) / 60;\n-    int seconds = secs % 60;\n-\n-    if (days)\n-        strList.append(QString(QObject::tr(\"%1 d\")).arg(days));\n-    if (hours)\n-        strList.append(QString(QObject::tr(\"%1 h\")).arg(hours));\n-    if (mins)\n-        strList.append(QString(QObject::tr(\"%1 m\")).arg(mins));\n-    if (seconds || (!days && !hours && !mins))\n-        strList.append(QString(QObject::tr(\"%1 s\")).arg(seconds));\n-\n-    return strList.join(\" \");\n-}\n-\n-} // namespace GUIUtil\n-"
      },
      {
        "sha": "3f80d12c5f3ca0142607809e71980fec90ed8a15",
        "filename": "src/qt/intro.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e8c850c5d85c0797db58129b5c719e39f9ef3fc0/src/qt/intro.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e8c850c5d85c0797db58129b5c719e39f9ef3fc0/src/qt/intro.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/intro.cpp?ref=e8c850c5d85c0797db58129b5c719e39f9ef3fc0",
        "patch": "@@ -181,7 +181,7 @@ void Intro::pickDataDirectory()\n                 boost::filesystem::create_directory(GUIUtil::qstringToBoostPath(dataDir));\n                 break;\n             } catch (const fs::filesystem_error&) {\n-                QMessageBox::critical(0, tr(\"Novacoin-qt\"),\n+                QMessageBox::critical(0, tr(\"42-qt\"),\n                     tr(\"Error: Specified data directory \\\"%1\\\" cannot be created.\").arg(dataDir));\n                 /* fall through, back to choosing screen */\n             }"
      },
      {
        "sha": "8ed75b4ae259f0cfba3a870a41f0f6a96256751f",
        "filename": "src/qt/rpcconsole.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e8c850c5d85c0797db58129b5c719e39f9ef3fc0/src/qt/rpcconsole.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e8c850c5d85c0797db58129b5c719e39f9ef3fc0/src/qt/rpcconsole.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.h?ref=e8c850c5d85c0797db58129b5c719e39f9ef3fc0",
        "patch": "@@ -36,7 +36,7 @@ private slots:\n     void on_tabWidget_currentChanged(int index);\n     /** open the debug.log from the current datadir */\n     void on_openDebugLogfileButton_clicked();\n-    /** open the novacoin.conf from the current datadir */\n+    /** open the 42.conf from the current datadir */\n     void on_openConfigurationfileButton_clicked();\n     /** change the time range of the network traffic graph */\n     void on_sldGraphRange_valueChanged(int value);"
      },
      {
        "sha": "4220046a55ef0ba8a176165ad8f725fa383ffca0",
        "filename": "src/qt/secondauthdialog.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e8c850c5d85c0797db58129b5c719e39f9ef3fc0/src/qt/secondauthdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e8c850c5d85c0797db58129b5c719e39f9ef3fc0/src/qt/secondauthdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/secondauthdialog.cpp?ref=e8c850c5d85c0797db58129b5c719e39f9ef3fc0",
        "patch": "@@ -26,7 +26,7 @@ SecondAuthDialog::SecondAuthDialog(QWidget *parent) :\n \n #if (QT_VERSION >= 0x040700)\n     /* Do not move this to the XML file, Qt before 4.7 will choke on it */\n-    ui->addressIn->setPlaceholderText(tr(\"Enter a NovaCoin address (e.g. 4VsEs7wqRpoiTpmqViWRtse1P3CNgvBw4g)\"));\n+    ui->addressIn->setPlaceholderText(tr(\"Enter a 42 address (e.g. 4VsEs7wqRpoiTpmqViWRtse1P3CNgvBw4g)\"));\n     ui->signatureOut->setPlaceholderText(tr(\"Click \\\"Sign data\\\" to generate signature\"));\n #endif\n "
      }
    ]
  },
  {
    "sha": "f8864e0cb1bfee105bf3d41e78834bb06c26c003",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmODg2NGUwY2IxYmZlZTEwNWJmM2Q0MWU3ODgzNGJiMDZjMjZjMDAz",
    "commit": {
      "author": {
        "name": "Laser9un",
        "email": "laser9un@gmail.com",
        "date": "2018-06-13T12:13:26Z"
      },
      "committer": {
        "name": "Laser9un",
        "email": "laser9un@gmail.com",
        "date": "2018-06-13T12:13:26Z"
      },
      "message": "Add checkpoint @ block # 84000",
      "tree": {
        "sha": "a0ef4a5fb156b96f4c83e5b31850d7163c63e54b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a0ef4a5fb156b96f4c83e5b31850d7163c63e54b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f8864e0cb1bfee105bf3d41e78834bb06c26c003",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f8864e0cb1bfee105bf3d41e78834bb06c26c003",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f8864e0cb1bfee105bf3d41e78834bb06c26c003",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f8864e0cb1bfee105bf3d41e78834bb06c26c003/comments",
    "author": {
      "login": "Laser9un",
      "id": 16782409,
      "node_id": "MDQ6VXNlcjE2NzgyNDA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16782409?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Laser9un",
      "html_url": "https://github.com/Laser9un",
      "followers_url": "https://api.github.com/users/Laser9un/followers",
      "following_url": "https://api.github.com/users/Laser9un/following{/other_user}",
      "gists_url": "https://api.github.com/users/Laser9un/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Laser9un/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Laser9un/subscriptions",
      "organizations_url": "https://api.github.com/users/Laser9un/orgs",
      "repos_url": "https://api.github.com/users/Laser9un/repos",
      "events_url": "https://api.github.com/users/Laser9un/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Laser9un/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Laser9un",
      "id": 16782409,
      "node_id": "MDQ6VXNlcjE2NzgyNDA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16782409?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Laser9un",
      "html_url": "https://github.com/Laser9un",
      "followers_url": "https://api.github.com/users/Laser9un/followers",
      "following_url": "https://api.github.com/users/Laser9un/following{/other_user}",
      "gists_url": "https://api.github.com/users/Laser9un/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Laser9un/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Laser9un/subscriptions",
      "organizations_url": "https://api.github.com/users/Laser9un/orgs",
      "repos_url": "https://api.github.com/users/Laser9un/repos",
      "events_url": "https://api.github.com/users/Laser9un/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Laser9un/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e8c850c5d85c0797db58129b5c719e39f9ef3fc0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e8c850c5d85c0797db58129b5c719e39f9ef3fc0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e8c850c5d85c0797db58129b5c719e39f9ef3fc0"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 9,
      "deletions": 6
    },
    "files": [
      {
        "sha": "8882ea55760e08e1982630d95e29802eaf2e2c7f",
        "filename": ".gitignore",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8864e0cb1bfee105bf3d41e78834bb06c26c003/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8864e0cb1bfee105bf3d41e78834bb06c26c003/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.gitignore?ref=f8864e0cb1bfee105bf3d41e78834bb06c26c003",
        "patch": "@@ -20,5 +20,6 @@ qrc_*.cpp\n #mac specific\n .DS_Store\n build\n+Thumbs.db\n \n !src/leveldb/Makefile"
      },
      {
        "sha": "c3e3bed311ff996a754ace789c919e8a2fe4406a",
        "filename": "src/checkpoints.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8864e0cb1bfee105bf3d41e78834bb06c26c003/src/checkpoints.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8864e0cb1bfee105bf3d41e78834bb06c26c003/src/checkpoints.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/checkpoints.cpp?ref=f8864e0cb1bfee105bf3d41e78834bb06c26c003",
        "patch": "@@ -26,12 +26,13 @@ namespace Checkpoints\n     //\n     static MapCheckpoints mapCheckpoints =\n         boost::assign::map_list_of\n-        ( 0,      std::make_pair(hashGenesisBlock, 1478980800) )\n-\t\t( 420,    std::make_pair(uint256(\"0x00000bc4728eba8caf6ac81c81ce2a95ea69e81fde5e75dbc260690caa6d99af\"), 1479273521) )\n-\t\t( 4200,   std::make_pair(uint256(\"0x000000022c3ed3e7c12741177b3ff82d0b0186511a5e864859f8e0d799e61ad5\"), 1481725697) )\n+        ( 0,       std::make_pair(hashGenesisBlock, 1478980800) )\n+\t\t( 420,     std::make_pair(uint256(\"0x00000bc4728eba8caf6ac81c81ce2a95ea69e81fde5e75dbc260690caa6d99af\"), 1479273521) )\n+\t\t( 4200,    std::make_pair(uint256(\"0x000000022c3ed3e7c12741177b3ff82d0b0186511a5e864859f8e0d799e61ad5\"), 1481725697) )\n \t\t( 21000,   std::make_pair(uint256(\"0x00000009204e1118bfca2a5306c50b070445dc9be370ced87bee522a58b269ad\"), 1492742717) )\n \t\t( 42000,   std::make_pair(uint256(\"0x00000004ce60e9b8481570804e09ffc06277befa867db5dca85ef8018a5a2fd7\"), 1504231286) )\n \t\t( 70000,   std::make_pair(uint256(\"0x0000000000dbf72bace0b3197aea91f6f65b9cd61577ed894603a8d4e1a615c0\"), 1520846671) )\n+\t\t( 84000,   std::make_pair(uint256(\"0x00000000000558f3e12ca83e6ef05cca372d29db0dd7243f6253334e0b984784\"), 1528854255) )\n     ;\n \n     static ListBannedBlocks listBanned ="
      },
      {
        "sha": "78aed7825172e1f01072d449a7af8bd7bc0f6ff1",
        "filename": "src/kernel.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8864e0cb1bfee105bf3d41e78834bb06c26c003/src/kernel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8864e0cb1bfee105bf3d41e78834bb06c26c003/src/kernel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/kernel.cpp?ref=f8864e0cb1bfee105bf3d41e78834bb06c26c003",
        "patch": "@@ -31,12 +31,13 @@ typedef std::map<int, unsigned int> MapModifierCheckpoints;\n // Hard checkpoints of stake modifiers to ensure they are deterministic\n static std::map<int, unsigned int> mapStakeModifierCheckpoints =\n     boost::assign::map_list_of\n-        ( 0,     0xfd11f4e7 )\n-\t\t( 420,   0x9ccdddaf )\n-\t\t( 4200,  0x6cfc8d5b )\n+        ( 0,      0xfd11f4e7 )\n+\t\t( 420,    0x9ccdddaf )\n+\t\t( 4200,   0x6cfc8d5b )\n \t\t( 21000,  0xe32676ac )\n \t\t( 42000,  0x51bb6d61 )\n \t\t( 70000,  0x50ed7983 )\n+\t\t( 84000,  0x03dd44f4 )\n     ;\n \n // Hard checkpoints of stake modifiers to ensure they are deterministic (testNet)"
      }
    ]
  },
  {
    "sha": "07688e7293dfb767e287537168a9aacc538b23f6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNzY4OGU3MjkzZGZiNzY3ZTI4NzUzNzE2OGE5YWFjYzUzOGIyM2Y2",
    "commit": {
      "author": {
        "name": "Laser9un",
        "email": "laser9un@gmail.com",
        "date": "2018-06-13T12:14:20Z"
      },
      "committer": {
        "name": "Laser9un",
        "email": "laser9un@gmail.com",
        "date": "2018-06-13T12:14:20Z"
      },
      "message": "Bump version to 0.0.9",
      "tree": {
        "sha": "f57dbe217d6fff6301932abf47aadc17415e9b24",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f57dbe217d6fff6301932abf47aadc17415e9b24"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/07688e7293dfb767e287537168a9aacc538b23f6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/07688e7293dfb767e287537168a9aacc538b23f6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/07688e7293dfb767e287537168a9aacc538b23f6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/07688e7293dfb767e287537168a9aacc538b23f6/comments",
    "author": {
      "login": "Laser9un",
      "id": 16782409,
      "node_id": "MDQ6VXNlcjE2NzgyNDA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16782409?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Laser9un",
      "html_url": "https://github.com/Laser9un",
      "followers_url": "https://api.github.com/users/Laser9un/followers",
      "following_url": "https://api.github.com/users/Laser9un/following{/other_user}",
      "gists_url": "https://api.github.com/users/Laser9un/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Laser9un/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Laser9un/subscriptions",
      "organizations_url": "https://api.github.com/users/Laser9un/orgs",
      "repos_url": "https://api.github.com/users/Laser9un/repos",
      "events_url": "https://api.github.com/users/Laser9un/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Laser9un/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Laser9un",
      "id": 16782409,
      "node_id": "MDQ6VXNlcjE2NzgyNDA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16782409?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Laser9un",
      "html_url": "https://github.com/Laser9un",
      "followers_url": "https://api.github.com/users/Laser9un/followers",
      "following_url": "https://api.github.com/users/Laser9un/following{/other_user}",
      "gists_url": "https://api.github.com/users/Laser9un/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Laser9un/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Laser9un/subscriptions",
      "organizations_url": "https://api.github.com/users/Laser9un/orgs",
      "repos_url": "https://api.github.com/users/Laser9un/repos",
      "events_url": "https://api.github.com/users/Laser9un/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Laser9un/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f8864e0cb1bfee105bf3d41e78834bb06c26c003",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f8864e0cb1bfee105bf3d41e78834bb06c26c003",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f8864e0cb1bfee105bf3d41e78834bb06c26c003"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "73098ab11f3ee1aa3a4ee73735a064867d1a5b06",
        "filename": "src/clientversion.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07688e7293dfb767e287537168a9aacc538b23f6/src/clientversion.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07688e7293dfb767e287537168a9aacc538b23f6/src/clientversion.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/clientversion.h?ref=07688e7293dfb767e287537168a9aacc538b23f6",
        "patch": "@@ -8,8 +8,8 @@\n // These need to be macros, as version.cpp's and bitcoin-qt.rc's voodoo requires it\n #define CLIENT_VERSION_MAJOR       0\n #define CLIENT_VERSION_MINOR       7\n-#define CLIENT_VERSION_REVISION    6\n-#define CLIENT_VERSION_BUILD       9\n+#define CLIENT_VERSION_REVISION    7\n+#define CLIENT_VERSION_BUILD       1\n \n // Converts the parameter X to a string after macro replacement on X has been performed.\n // Don't merge these into one macro!"
      },
      {
        "sha": "b3641065a5d3a1f2a4633b4a41eb4217928910e5",
        "filename": "src/version.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07688e7293dfb767e287537168a9aacc538b23f6/src/version.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07688e7293dfb767e287537168a9aacc538b23f6/src/version.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/version.h?ref=07688e7293dfb767e287537168a9aacc538b23f6",
        "patch": "@@ -45,6 +45,6 @@ static const int NOBLKS_VERSION_END = 60006;\n \n #define DISPLAY_VERSION_MAJOR       0\n #define DISPLAY_VERSION_MINOR       0\n-#define DISPLAY_VERSION_REVISION    8\n+#define DISPLAY_VERSION_REVISION    9\n \n #endif"
      }
    ]
  },
  {
    "sha": "8ff3861cdf75af0a1ae9ec78e7f13585d3efb819",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4ZmYzODYxY2RmNzVhZjBhMWFlOWVjNzhlN2YxMzU4NWQzZWZiODE5",
    "commit": {
      "author": {
        "name": "svost",
        "email": "ya.nowa@yandex.ru",
        "date": "2018-08-27T22:16:51Z"
      },
      "committer": {
        "name": "Laser9un",
        "email": "laser9un@gmail.com",
        "date": "2018-08-27T22:16:51Z"
      },
      "message": "Update ntp servers list",
      "tree": {
        "sha": "3c20c1e1fe2c04780bdd1aa333c2585d5fbca945",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3c20c1e1fe2c04780bdd1aa333c2585d5fbca945"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8ff3861cdf75af0a1ae9ec78e7f13585d3efb819",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8ff3861cdf75af0a1ae9ec78e7f13585d3efb819",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8ff3861cdf75af0a1ae9ec78e7f13585d3efb819",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8ff3861cdf75af0a1ae9ec78e7f13585d3efb819/comments",
    "author": {
      "login": "svost",
      "id": 6769910,
      "node_id": "MDQ6VXNlcjY3Njk5MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6769910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svost",
      "html_url": "https://github.com/svost",
      "followers_url": "https://api.github.com/users/svost/followers",
      "following_url": "https://api.github.com/users/svost/following{/other_user}",
      "gists_url": "https://api.github.com/users/svost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svost/subscriptions",
      "organizations_url": "https://api.github.com/users/svost/orgs",
      "repos_url": "https://api.github.com/users/svost/repos",
      "events_url": "https://api.github.com/users/svost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svost/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Laser9un",
      "id": 16782409,
      "node_id": "MDQ6VXNlcjE2NzgyNDA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/16782409?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Laser9un",
      "html_url": "https://github.com/Laser9un",
      "followers_url": "https://api.github.com/users/Laser9un/followers",
      "following_url": "https://api.github.com/users/Laser9un/following{/other_user}",
      "gists_url": "https://api.github.com/users/Laser9un/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Laser9un/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Laser9un/subscriptions",
      "organizations_url": "https://api.github.com/users/Laser9un/orgs",
      "repos_url": "https://api.github.com/users/Laser9un/repos",
      "events_url": "https://api.github.com/users/Laser9un/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Laser9un/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "07688e7293dfb767e287537168a9aacc538b23f6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/07688e7293dfb767e287537168a9aacc538b23f6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/07688e7293dfb767e287537168a9aacc538b23f6"
      }
    ],
    "stats": {
      "total": 30,
      "additions": 11,
      "deletions": 19
    },
    "files": [
      {
        "sha": "c8ebeb6d4d3f43ac2d8dffb4470355e84c9dca33",
        "filename": "src/ntp.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 19,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8ff3861cdf75af0a1ae9ec78e7f13585d3efb819/src/ntp.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8ff3861cdf75af0a1ae9ec78e7f13585d3efb819/src/ntp.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/ntp.cpp?ref=8ff3861cdf75af0a1ae9ec78e7f13585d3efb819",
        "patch": "@@ -80,9 +80,12 @@ struct pkt {\n   uint8_t  mac[5 * sizeof(uint32_t)]; /* mac */\n };\n \n-const int nServersCount = 162;\n+const int nServersCount = 154;\n+\n+std::string NtpServers[nServersCount] = {\n+    // Apple\n+    \"time.apple.com\",\n \n-std::string NtpServers[162] = {\n     // Microsoft\n     \"time.windows.com\",\n \n@@ -96,12 +99,6 @@ std::string NtpServers[162] = {\n     \"clock.sjc.he.net\",\n     \"clock.nyc.he.net\",\n \n-    // SixXS\n-    \"ntp.sixxs.net\",\n-    \"ntp.eu.sixxs.net\",\n-    \"ntp.us.sixxs.net\",\n-    \"ntp.ap.sixxs.net\",\n-\n     // Russian Federation\n     \"ntp.karelia.pro\",\n     \"ntp.alpet.me\",\n@@ -114,12 +111,11 @@ std::string NtpServers[162] = {\n     \"ntp3.stratum2.ru\",\n     \"ntp4.stratum2.ru\",\n     \"ntp5.stratum2.ru\",\n-    \"ntp6.stratum2.ru\",\n-    \"ntp7.stratum2.ru\",\n     \"ntp1.stratum1.ru\",\n     \"ntp2.stratum1.ru\",\n     \"ntp3.stratum1.ru\",\n     \"ntp4.stratum1.ru\",\n+    \"ntp5.stratum1.ru\",\n     \"ntp1.vniiftri.ru\",\n     \"ntp2.vniiftri.ru\",\n     \"ntp3.vniiftri.ru\",\n@@ -143,14 +139,18 @@ std::string NtpServers[162] = {\n     \"sundial.columbia.edu\",\n     \"ntp-1.ece.cmu.edu\",\n     \"ntp-2.ece.cmu.edu\",\n+    \"ntp-3.ece.cmu.edu\",\n     \"ntp1.cs.wisc.edu\",\n     \"ntp2.cs.wisc.edu\",\n     \"ntp3.cs.wisc.edu\",\n+    \"ntp4.cs.wisc.edu\",\n     \"ntp-01.caltech.edu\",\n     \"ntp-02.caltech.edu\",\n     \"ntp-03.caltech.edu\",\n     \"ntp-04.caltech.edu\",\n+    \"nist0-pa.ustiming.org\",\n     \"nist1-pa.ustiming.org\",\n+    \"nist2-pa.ustiming.org\",\n     \"time.nist.gov\",\n     \"time-a.nist.gov\",\n     \"time-b.nist.gov\",\n@@ -159,27 +159,21 @@ std::string NtpServers[162] = {\n     \"time-nw.nist.gov\",\n     \"nist1-macon.macon.ga.us\",\n     \"nist.netservicesgroup.com\",\n-    \"nisttime.carsoncity.k12.mi.us\",\n-    \"nist1-lnk.binary.net\",\n     \"wwv.nist.gov\",\n     \"time-a.timefreq.bldrdoc.gov\",\n     \"time-b.timefreq.bldrdoc.gov\",\n     \"time-c.timefreq.bldrdoc.gov\",\n     \"utcnist.colorado.edu\",\n     \"utcnist2.colorado.edu\",\n-    \"ntp-nist.ldsbc.net\",\n     \"nist1-lv.ustiming.org\",\n     \"time-nw.nist.gov\",\n-    \"nist-time-server.eoni.com\",\n-    \"nist-time-server.eoni.com\",\n     \"ntp1.bu.edu\",\n     \"ntp2.bu.edu\",\n     \"ntp3.bu.edu\",\n     \"0.us.pool.ntp.org\",\n     \"1.us.pool.ntp.org\",\n     \"2.us.pool.ntp.org\",\n     \"3.us.pool.ntp.org\",\n-    \"wwv.otc.psu.edu\",\n     \"otc1.psu.edu\",\n     \"otc2.psu.edu\",\n     \"now.okstate.edu\",\n@@ -243,8 +237,6 @@ std::string NtpServers[162] = {\n     \"time.nrc.ca\",\n     \"timelord.uregina.ca\",\n     \"tock.utoronto.ca\",\n-    \"www1.cmc.ec.gc.ca\",\n-    \"www2.cmc.ec.gc.ca\",\n     \"0.ca.pool.ntp.org\",\n     \"1.ca.pool.ntp.org\",\n     \"2.ca.pool.ntp.org\",\n@@ -532,4 +524,4 @@ void ThreadNtpSamples(void* parg) {\n \n     vnThreadsRunning[THREAD_NTP]--;\n     printf(\"ThreadNtpSamples exited\\n\");\n-}\n+}\n\\ No newline at end of file"
      }
    ]
  }
]