[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/788791440",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21329#issuecomment-788791440",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21329",
    "id": 788791440,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4ODc5MTQ0MA==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-02T10:11:42Z",
    "updated_at": "2021-06-24T16:50:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #21500 by S3RK\n* #20096 by achow101\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/788791440/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/793505411",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21329#issuecomment-793505411",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21329",
    "id": 793505411,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5MzUwNTQxMQ==",
    "user": {
      "login": "S3RK",
      "id": 1466284,
      "node_id": "MDQ6VXNlcjE0NjYyODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/S3RK",
      "html_url": "https://github.com/S3RK",
      "followers_url": "https://api.github.com/users/S3RK/followers",
      "following_url": "https://api.github.com/users/S3RK/following{/other_user}",
      "gists_url": "https://api.github.com/users/S3RK/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
      "organizations_url": "https://api.github.com/users/S3RK/orgs",
      "repos_url": "https://api.github.com/users/S3RK/repos",
      "events_url": "https://api.github.com/users/S3RK/events{/privacy}",
      "received_events_url": "https://api.github.com/users/S3RK/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-09T07:55:22Z",
    "updated_at": "2021-03-09T07:55:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "Started reviewing this",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/793505411/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/823829443",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21329#issuecomment-823829443",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21329",
    "id": 823829443,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyMzgyOTQ0Mw==",
    "user": {
      "login": "S3RK",
      "id": 1466284,
      "node_id": "MDQ6VXNlcjE0NjYyODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/S3RK",
      "html_url": "https://github.com/S3RK",
      "followers_url": "https://api.github.com/users/S3RK/followers",
      "following_url": "https://api.github.com/users/S3RK/following{/other_user}",
      "gists_url": "https://api.github.com/users/S3RK/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
      "organizations_url": "https://api.github.com/users/S3RK/orgs",
      "repos_url": "https://api.github.com/users/S3RK/repos",
      "events_url": "https://api.github.com/users/S3RK/events{/privacy}",
      "received_events_url": "https://api.github.com/users/S3RK/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-04-21T07:04:42Z",
    "updated_at": "2021-04-21T07:04:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "reACK ec22064. Just rebased on top of latest master\r\n\r\nMy [comment above](https://github.com/bitcoin/bitcoin/pull/21329#pullrequestreview-614021474) is still relevant though.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/823829443/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/824197588",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21329#issuecomment-824197588",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21329",
    "id": 824197588,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyNDE5NzU4OA==",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?u=9791e96cd4268d48e3517bac41eaf2b1d09759fd&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-04-21T16:31:45Z",
    "updated_at": "2021-04-21T16:31:45Z",
    "author_association": "MEMBER",
    "body": "> With that said, I don't like the direction in which `DescriptorImpl::ToStringHelper` and `DescriptorScriptPubKeyMan::TopUp` is going. The code becomes more and more complicated and there are untapped opportunities for simplification.\r\n\r\nWhat direction do you think it should be going in?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/824197588/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/824610596",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21329#issuecomment-824610596",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21329",
    "id": 824610596,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyNDYxMDU5Ng==",
    "user": {
      "login": "S3RK",
      "id": 1466284,
      "node_id": "MDQ6VXNlcjE0NjYyODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/S3RK",
      "html_url": "https://github.com/S3RK",
      "followers_url": "https://api.github.com/users/S3RK/followers",
      "following_url": "https://api.github.com/users/S3RK/following{/other_user}",
      "gists_url": "https://api.github.com/users/S3RK/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
      "organizations_url": "https://api.github.com/users/S3RK/orgs",
      "repos_url": "https://api.github.com/users/S3RK/repos",
      "events_url": "https://api.github.com/users/S3RK/events{/privacy}",
      "received_events_url": "https://api.github.com/users/S3RK/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-04-22T07:30:02Z",
    "updated_at": "2021-04-22T07:30:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "> What direction do you think it should be going in?\r\n\r\nThanks for asking. I think we need to try to simplify the code for readability and comprehension. Some rough ideas:\r\n\r\n1) for `ToStringHelper` we can a) avoid multiple flags controlling the control flow b) shift non-general code to child classes (addr, raw, multisig). \r\n\r\nTo be more specific for this PR: I think it's better to have `ToNormalizedString` reimplement some logic and not call `ToStringHelper` at all. Both functions would be easier to reason about. We also don't need to support normalized private descriptors case, no code actually uses this.\r\n\r\n2) for `DescriptorScriptPubKeyMan::TopUp` we can keep the code on the same/constant level of abstraction  by better encapsulating cache structure. One option is to introduce something like `DescriptorCache::CopyFrom(DescriptorCache)` and `WalletBatch::WriteCache(DescriptorCache)`.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/824610596/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/825124865",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21329#issuecomment-825124865",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21329",
    "id": 825124865,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyNTEyNDg2NQ==",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?u=9791e96cd4268d48e3517bac41eaf2b1d09759fd&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-04-22T19:26:21Z",
    "updated_at": "2021-04-22T19:26:21Z",
    "author_association": "MEMBER",
    "body": "> To be more specific for this PR: I think it's better to have `ToNormalizedString` reimplement some logic and not call `ToStringHelper` at all. Both functions would be easier to reason about. We also don't need to support normalized private descriptors case, no code actually uses this.\r\n\r\nI kind of disagree. All of the `To*String` functions do roughly the same thing. The construction of all of the non-key related parts are all the same and it doesn't make sense to me to be duplicating that. The only parts that are different are the key things, which is why `ToStringHelper` has options in order to determine which key function to use. I think that instead of using bools, it would be better to use an enum, so I have implemented it that way.\r\n\r\n> for `DescriptorScriptPubKeyMan::TopUp` we can keep the code on the same/constant level of abstraction  by better encapsulating cache structure. One option is to introduce something like `DescriptorCache::CopyFrom(DescriptorCache)` and `WalletBatch::WriteCache(DescriptorCache)`.\r\n\r\nI've added ` DescriptorCache::MergeAndDiff` which merges another `DescriptorCache` with the current `DescriptorCache` and returns another `DescriptorCache` containing a copy of the new items. I've also added `WalletBatch::WriteDescriptorCache` which takes a `DescriptorCache` and writes all of the items. This cleans up `TopUp` and deduplicates some code.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/825124865/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/826562621",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21329#issuecomment-826562621",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21329",
    "id": 826562621,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyNjU2MjYyMQ==",
    "user": {
      "login": "S3RK",
      "id": 1466284,
      "node_id": "MDQ6VXNlcjE0NjYyODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/S3RK",
      "html_url": "https://github.com/S3RK",
      "followers_url": "https://api.github.com/users/S3RK/followers",
      "following_url": "https://api.github.com/users/S3RK/following{/other_user}",
      "gists_url": "https://api.github.com/users/S3RK/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
      "organizations_url": "https://api.github.com/users/S3RK/orgs",
      "repos_url": "https://api.github.com/users/S3RK/repos",
      "events_url": "https://api.github.com/users/S3RK/events{/privacy}",
      "received_events_url": "https://api.github.com/users/S3RK/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-04-26T07:00:03Z",
    "updated_at": "2021-04-26T07:00:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "utACK e668b9e. Thanks for incorporating my suggestions. ",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/826562621/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/869234463",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21329#issuecomment-869234463",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21329",
    "id": 869234463,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2OTIzNDQ2Mw==",
    "user": {
      "login": "fjahr",
      "id": 1322187,
      "node_id": "MDQ6VXNlcjEzMjIxODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1322187?u=348c27f90b6fff8fd72fa27232272651436a2ff0&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjahr",
      "html_url": "https://github.com/fjahr",
      "followers_url": "https://api.github.com/users/fjahr/followers",
      "following_url": "https://api.github.com/users/fjahr/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjahr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
      "organizations_url": "https://api.github.com/users/fjahr/orgs",
      "repos_url": "https://api.github.com/users/fjahr/repos",
      "events_url": "https://api.github.com/users/fjahr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjahr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-27T22:48:22Z",
    "updated_at": "2021-06-27T22:48:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "tACK e6cf0ed92de31a5ac35a271b0da8f0a8364d1175\r\n\r\nReviewed code, light manual testing with restarts to ensure persistence works (could have been covered by a test case as well).\r\n\r\nnit: in d87b544b834077f102724415e0fada6ee8b2def2 there is a typo in commit description: \"hardenex\"",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/869234463/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/870796836",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21329#issuecomment-870796836",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21329",
    "id": 870796836,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3MDc5NjgzNg==",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?u=9791e96cd4268d48e3517bac41eaf2b1d09759fd&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-29T17:51:58Z",
    "updated_at": "2021-06-29T17:51:58Z",
    "author_association": "MEMBER",
    "body": "I will implement the suggestions if I have to retouch.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/870796836/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/871161449",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21329#issuecomment-871161449",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21329",
    "id": 871161449,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3MTE2MTQ0OQ==",
    "user": {
      "login": "S3RK",
      "id": 1466284,
      "node_id": "MDQ6VXNlcjE0NjYyODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/S3RK",
      "html_url": "https://github.com/S3RK",
      "followers_url": "https://api.github.com/users/S3RK/followers",
      "following_url": "https://api.github.com/users/S3RK/following{/other_user}",
      "gists_url": "https://api.github.com/users/S3RK/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
      "organizations_url": "https://api.github.com/users/S3RK/orgs",
      "repos_url": "https://api.github.com/users/S3RK/repos",
      "events_url": "https://api.github.com/users/S3RK/events{/privacy}",
      "received_events_url": "https://api.github.com/users/S3RK/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-30T07:23:54Z",
    "updated_at": "2021-06-30T07:23:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "reACK e6cf0ed\r\n\r\nChanges from last review: 1) `PubkeyProvider::GetPubKey` became const 2) necessary changes for taproot descriptors\r\n\r\nHappy to reACK again if you want to incorporate jonatack's readability suggestions",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/871161449/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/871193416",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21329#issuecomment-871193416",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21329",
    "id": 871193416,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3MTE5MzQxNg==",
    "user": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?u=a0e0040aacd7d4f0787481e8ac30b494fa429e11&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-30T08:15:04Z",
    "updated_at": "2021-06-30T08:15:04Z",
    "author_association": "MEMBER",
    "body": "@meshcollider ",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/871193416/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/871754641",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21329#issuecomment-871754641",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21329",
    "id": 871754641,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3MTc1NDY0MQ==",
    "user": {
      "login": "meshcollider",
      "id": 3211283,
      "node_id": "MDQ6VXNlcjMyMTEyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3211283?u=447cdc9e2966cbee415545c8ff452954ee1209af&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meshcollider",
      "html_url": "https://github.com/meshcollider",
      "followers_url": "https://api.github.com/users/meshcollider/followers",
      "following_url": "https://api.github.com/users/meshcollider/following{/other_user}",
      "gists_url": "https://api.github.com/users/meshcollider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
      "organizations_url": "https://api.github.com/users/meshcollider/orgs",
      "repos_url": "https://api.github.com/users/meshcollider/repos",
      "events_url": "https://api.github.com/users/meshcollider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meshcollider/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-30T21:59:45Z",
    "updated_at": "2021-06-30T21:59:45Z",
    "author_association": "MEMBER",
    "body": "Nits can be left for follow-up if needed, lets just get this in",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/871754641/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/871761012",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21329#issuecomment-871761012",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21329",
    "id": 871761012,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3MTc2MTAxMg==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-30T22:12:44Z",
    "updated_at": "2021-06-30T22:12:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--cf906140f33d8803c4a75a2196329ecb-->\n\ud83d\udc19 This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/871761012/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/871769093",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21329#issuecomment-871769093",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21329",
    "id": 871769093,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3MTc2OTA5Mw==",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?u=9791e96cd4268d48e3517bac41eaf2b1d09759fd&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-30T22:31:22Z",
    "updated_at": "2021-06-30T22:31:22Z",
    "author_association": "MEMBER",
    "body": "This was merged, but github isn't detecting it.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/871769093/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 1,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/871770444",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21329#issuecomment-871770444",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21329",
    "id": 871770444,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3MTc3MDQ0NA==",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?u=3f68150a5f30acd541d1ed279376cd20b78046b1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-30T22:34:40Z",
    "updated_at": "2021-06-30T22:34:40Z",
    "author_association": "MEMBER",
    "body": "There have been several of these, I think this is the third one in as many days.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/871770444/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/585212906",
    "pull_request_review_id": 601364737,
    "id": 585212906,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NTIxMjkwNg==",
    "diff_hunk": "@@ -410,7 +411,7 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n         }\n         return true;\n     }\n-    bool ToNormalizedString(const SigningProvider& arg, std::string& out, bool priv) const override\n+    bool ToNormalizedString(const SigningProvider& arg, std::string& out, bool priv, std::optional<DescriptorCache> cache) const override",
    "path": "src/script/descriptor.cpp",
    "position": null,
    "original_position": 112,
    "commit_id": "e6cf0ed92de31a5ac35a271b0da8f0a8364d1175",
    "original_commit_id": "c096de409861f2c90cb08540e11e872882b576c1",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Passing a copy of the entire cache seems overkill here, and especially without std::move's you're going to be making copies in every step in the call graph.\r\n\r\nThe language purist version would be `std::optional<std::reference_wrapper<const DescriptorCache>>` to achieve something like an optional reference to a const cache. But just `const DescriptorCache*` works just as well...",
    "created_at": "2021-03-02T03:03:06Z",
    "updated_at": "2021-04-22T19:26:52Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21329#discussion_r585212906",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21329",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/585212906"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21329#discussion_r585212906"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21329"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/585212906/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 414,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/585213867",
    "pull_request_review_id": 601365839,
    "id": 585213867,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NTIxMzg2Nw==",
    "diff_hunk": "@@ -410,7 +411,7 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n         }\n         return true;\n     }\n-    bool ToNormalizedString(const SigningProvider& arg, std::string& out, bool priv) const override\n+    bool ToNormalizedString(const SigningProvider& arg, std::string& out, bool priv, std::optional<DescriptorCache> cache) const override",
    "path": "src/script/descriptor.cpp",
    "position": null,
    "original_position": 112,
    "commit_id": "e6cf0ed92de31a5ac35a271b0da8f0a8364d1175",
    "original_commit_id": "c096de409861f2c90cb08540e11e872882b576c1",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Argh, I meant to click comment, not approve...",
    "created_at": "2021-03-02T03:06:07Z",
    "updated_at": "2021-04-22T19:26:52Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21329#discussion_r585213867",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21329",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/585213867"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21329#discussion_r585213867"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21329"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/585213867/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 414,
    "side": "RIGHT",
    "in_reply_to_id": 585212906
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/585792052",
    "pull_request_review_id": 602114637,
    "id": 585792052,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NTc5MjA1Mg==",
    "diff_hunk": "@@ -410,7 +411,7 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n         }\n         return true;\n     }\n-    bool ToNormalizedString(const SigningProvider& arg, std::string& out, bool priv) const override\n+    bool ToNormalizedString(const SigningProvider& arg, std::string& out, bool priv, std::optional<DescriptorCache> cache) const override",
    "path": "src/script/descriptor.cpp",
    "position": null,
    "original_position": 112,
    "commit_id": "e6cf0ed92de31a5ac35a271b0da8f0a8364d1175",
    "original_commit_id": "c096de409861f2c90cb08540e11e872882b576c1",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done",
    "created_at": "2021-03-02T18:06:11Z",
    "updated_at": "2021-04-22T19:26:52Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21329#discussion_r585792052",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21329",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/585792052"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21329#discussion_r585792052"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21329"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/585792052/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 414,
    "side": "RIGHT",
    "in_reply_to_id": 585212906
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/591236020",
    "pull_request_review_id": 607157872,
    "id": 591236020,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MTIzNjAyMA==",
    "diff_hunk": "@@ -432,29 +432,39 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n             out = ToString();\n             return true;\n         }\n-        // Derive the xpub at the last hardened step\n-        CExtKey xprv;\n-        if (!GetExtKey(arg, xprv)) return false;\n+        // Get the path to the last hardened stup\n         KeyOriginInfo origin;\n         int k = 0;\n         for (; k <= i; ++k) {",
    "path": "src/script/descriptor.cpp",
    "position": 172,
    "original_position": 50,
    "commit_id": "e6cf0ed92de31a5ac35a271b0da8f0a8364d1175",
    "original_commit_id": "0ab914a06b26158be5bf3e09eb5988ab0a4a0915",
    "user": {
      "login": "S3RK",
      "id": 1466284,
      "node_id": "MDQ6VXNlcjE0NjYyODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/S3RK",
      "html_url": "https://github.com/S3RK",
      "followers_url": "https://api.github.com/users/S3RK/followers",
      "following_url": "https://api.github.com/users/S3RK/following{/other_user}",
      "gists_url": "https://api.github.com/users/S3RK/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
      "organizations_url": "https://api.github.com/users/S3RK/orgs",
      "repos_url": "https://api.github.com/users/S3RK/repos",
      "events_url": "https://api.github.com/users/S3RK/events{/privacy}",
      "received_events_url": "https://api.github.com/users/S3RK/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: I think it would be nice to simply this function by extracting the code for splitting KeyPath. We can introduce a member function like:\r\n```cpp\r\nstd::pair<KeyPath, KeyPath> KeyPath::split_unhardened() const;\r\n```\r\nor \r\n```cpp\r\nKeyPath KeyPath::split_unhardened();\r\n```",
    "created_at": "2021-03-10T08:58:48Z",
    "updated_at": "2021-04-22T19:26:52Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21329#discussion_r591236020",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21329",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/591236020"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21329#discussion_r591236020"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21329"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/591236020/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 437,
    "original_line": 437,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/592135979",
    "pull_request_review_id": 607157872,
    "id": 592135979,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MjEzNTk3OQ==",
    "diff_hunk": "@@ -110,7 +110,7 @@ struct Descriptor {\n     virtual bool ToPrivateString(const SigningProvider& provider, std::string& out) const = 0;\n \n     /** Convert the descriptor to a normalized string. Normalized descriptors have the xpub at the last hardened step. This fails if the provided provider does not have the private keys to derive that xpub. */\n-    virtual bool ToNormalizedString(const SigningProvider& provider, std::string& out, bool priv) const = 0;\n+    virtual bool ToNormalizedString(const SigningProvider& provider, std::string& out, bool priv, const DescriptorCache* cache = nullptr) const = 0;",
    "path": "src/script/descriptor.h",
    "position": null,
    "original_position": 5,
    "commit_id": "e6cf0ed92de31a5ac35a271b0da8f0a8364d1175",
    "original_commit_id": "690160aac9e8054cdc303086f02bb373ff481bd9",
    "user": {
      "login": "S3RK",
      "id": 1466284,
      "node_id": "MDQ6VXNlcjE0NjYyODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/S3RK",
      "html_url": "https://github.com/S3RK",
      "followers_url": "https://api.github.com/users/S3RK/followers",
      "following_url": "https://api.github.com/users/S3RK/following{/other_user}",
      "gists_url": "https://api.github.com/users/S3RK/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
      "organizations_url": "https://api.github.com/users/S3RK/orgs",
      "repos_url": "https://api.github.com/users/S3RK/repos",
      "events_url": "https://api.github.com/users/S3RK/events{/privacy}",
      "received_events_url": "https://api.github.com/users/S3RK/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Why not pass it as const reference? It can help to remove some of the checks and we can always relax the requirements and make it optional later if needed.",
    "created_at": "2021-03-11T07:55:57Z",
    "updated_at": "2021-04-22T19:26:52Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21329#discussion_r592135979",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21329",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/592135979"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21329#discussion_r592135979"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21329"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/592135979/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 113,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593929906",
    "pull_request_review_id": 607157872,
    "id": 593929906,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MzkyOTkwNg==",
    "diff_hunk": "@@ -2291,3 +2291,43 @@ bool DescriptorScriptPubKeyMan::GetDescriptorString(std::string& out, bool priv)\n \n     return m_wallet_descriptor.descriptor->ToNormalizedString(provider, out, priv);\n }\n+\n+void DescriptorScriptPubKeyMan::UpgradeDescriptorCache()\n+{\n+    LOCK(cs_desc_man);\n+    if (m_storage.IsLocked() || m_storage.IsWalletFlagSet(WALLET_FLAG_LAST_HARDENED_XPUB_CACHED)) {\n+        return;\n+    }\n+\n+    // Skip if we have the last hardened xpub cache\n+    if (m_wallet_descriptor.cache.GetCachedLastHardenedExtPubKeys().size() > 0) {\n+        return;\n+    }\n+\n+    // Expand the descriptor\n+    FlatSigningProvider provider;\n+    provider.keys = GetKeys();\n+    FlatSigningProvider out_keys;\n+    std::vector<CScript> scripts_temp;\n+    DescriptorCache temp_cache;\n+    if (!m_wallet_descriptor.descriptor->Expand(0, provider, scripts_temp, out_keys, &temp_cache)){\n+        throw std::runtime_error(\"Unable to expand descriptor\");\n+    }\n+\n+    // Cache the last hardened xpubs\n+    WalletBatch batch(m_storage.GetDatabase());\n+    uint256 id = GetID();\n+    for (const auto& lh_xpub_pair : temp_cache.GetCachedLastHardenedExtPubKeys()) {\n+        CExtPubKey xpub;\n+        if (m_wallet_descriptor.cache.GetCachedLastHardenedExtPubKey(lh_xpub_pair.first, xpub)) {",
    "path": "src/wallet/scriptpubkeyman.cpp",
    "position": null,
    "original_position": 32,
    "commit_id": "e6cf0ed92de31a5ac35a271b0da8f0a8364d1175",
    "original_commit_id": "8c5d41f40c65b4c9fc691d4f4b070c551d112995",
    "user": {
      "login": "S3RK",
      "id": 1466284,
      "node_id": "MDQ6VXNlcjE0NjYyODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/S3RK",
      "html_url": "https://github.com/S3RK",
      "followers_url": "https://api.github.com/users/S3RK/followers",
      "following_url": "https://api.github.com/users/S3RK/following{/other_user}",
      "gists_url": "https://api.github.com/users/S3RK/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
      "organizations_url": "https://api.github.com/users/S3RK/orgs",
      "repos_url": "https://api.github.com/users/S3RK/repos",
      "events_url": "https://api.github.com/users/S3RK/events{/privacy}",
      "received_events_url": "https://api.github.com/users/S3RK/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I can't see how this ever evaluates to `true` since we exit early if the cache exists.",
    "created_at": "2021-03-14T16:57:08Z",
    "updated_at": "2021-04-22T19:26:52Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21329#discussion_r593929906",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21329",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593929906"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21329#discussion_r593929906"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21329"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593929906/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2321,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593933030",
    "pull_request_review_id": 607157872,
    "id": 593933030,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MzkzMzAzMA==",
    "diff_hunk": "@@ -2291,3 +2291,43 @@ bool DescriptorScriptPubKeyMan::GetDescriptorString(std::string& out, bool priv)\n \n     return m_wallet_descriptor.descriptor->ToNormalizedString(provider, out, priv);\n }\n+\n+void DescriptorScriptPubKeyMan::UpgradeDescriptorCache()\n+{\n+    LOCK(cs_desc_man);\n+    if (m_storage.IsLocked() || m_storage.IsWalletFlagSet(WALLET_FLAG_LAST_HARDENED_XPUB_CACHED)) {\n+        return;\n+    }\n+\n+    // Skip if we have the last hardened xpub cache\n+    if (m_wallet_descriptor.cache.GetCachedLastHardenedExtPubKeys().size() > 0) {\n+        return;\n+    }\n+\n+    // Expand the descriptor\n+    FlatSigningProvider provider;\n+    provider.keys = GetKeys();\n+    FlatSigningProvider out_keys;\n+    std::vector<CScript> scripts_temp;\n+    DescriptorCache temp_cache;\n+    if (!m_wallet_descriptor.descriptor->Expand(0, provider, scripts_temp, out_keys, &temp_cache)){",
    "path": "src/wallet/scriptpubkeyman.cpp",
    "position": 74,
    "original_position": 23,
    "commit_id": "e6cf0ed92de31a5ac35a271b0da8f0a8364d1175",
    "original_commit_id": "8c5d41f40c65b4c9fc691d4f4b070c551d112995",
    "user": {
      "login": "S3RK",
      "id": 1466284,
      "node_id": "MDQ6VXNlcjE0NjYyODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/S3RK",
      "html_url": "https://github.com/S3RK",
      "followers_url": "https://api.github.com/users/S3RK/followers",
      "following_url": "https://api.github.com/users/S3RK/following{/other_user}",
      "gists_url": "https://api.github.com/users/S3RK/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
      "organizations_url": "https://api.github.com/users/S3RK/orgs",
      "repos_url": "https://api.github.com/users/S3RK/repos",
      "events_url": "https://api.github.com/users/S3RK/events{/privacy}",
      "received_events_url": "https://api.github.com/users/S3RK/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Why do we need a temp cache? ",
    "created_at": "2021-03-14T17:20:07Z",
    "updated_at": "2021-04-22T19:26:52Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21329#discussion_r593933030",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21329",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593933030"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21329#discussion_r593933030"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21329"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593933030/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 2297,
    "original_line": 2297,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593938969",
    "pull_request_review_id": 611722652,
    "id": 593938969,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MzkzODk2OQ==",
    "diff_hunk": "@@ -110,7 +110,7 @@ struct Descriptor {\n     virtual bool ToPrivateString(const SigningProvider& provider, std::string& out) const = 0;\n \n     /** Convert the descriptor to a normalized string. Normalized descriptors have the xpub at the last hardened step. This fails if the provided provider does not have the private keys to derive that xpub. */\n-    virtual bool ToNormalizedString(const SigningProvider& provider, std::string& out, bool priv) const = 0;\n+    virtual bool ToNormalizedString(const SigningProvider& provider, std::string& out, bool priv, const DescriptorCache* cache = nullptr) const = 0;",
    "path": "src/script/descriptor.h",
    "position": null,
    "original_position": 5,
    "commit_id": "e6cf0ed92de31a5ac35a271b0da8f0a8364d1175",
    "original_commit_id": "690160aac9e8054cdc303086f02bb373ff481bd9",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Not every caller of this will necessarily have a cache to pass.",
    "created_at": "2021-03-14T18:07:33Z",
    "updated_at": "2021-04-22T19:26:52Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21329#discussion_r593938969",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21329",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593938969"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21329#discussion_r593938969"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21329"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593938969/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 113,
    "side": "RIGHT",
    "in_reply_to_id": 592135979
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593939354",
    "pull_request_review_id": 611722935,
    "id": 593939354,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MzkzOTM1NA==",
    "diff_hunk": "@@ -2291,3 +2291,43 @@ bool DescriptorScriptPubKeyMan::GetDescriptorString(std::string& out, bool priv)\n \n     return m_wallet_descriptor.descriptor->ToNormalizedString(provider, out, priv);\n }\n+\n+void DescriptorScriptPubKeyMan::UpgradeDescriptorCache()\n+{\n+    LOCK(cs_desc_man);\n+    if (m_storage.IsLocked() || m_storage.IsWalletFlagSet(WALLET_FLAG_LAST_HARDENED_XPUB_CACHED)) {\n+        return;\n+    }\n+\n+    // Skip if we have the last hardened xpub cache\n+    if (m_wallet_descriptor.cache.GetCachedLastHardenedExtPubKeys().size() > 0) {\n+        return;\n+    }\n+\n+    // Expand the descriptor\n+    FlatSigningProvider provider;\n+    provider.keys = GetKeys();\n+    FlatSigningProvider out_keys;\n+    std::vector<CScript> scripts_temp;\n+    DescriptorCache temp_cache;\n+    if (!m_wallet_descriptor.descriptor->Expand(0, provider, scripts_temp, out_keys, &temp_cache)){\n+        throw std::runtime_error(\"Unable to expand descriptor\");\n+    }\n+\n+    // Cache the last hardened xpubs\n+    WalletBatch batch(m_storage.GetDatabase());\n+    uint256 id = GetID();\n+    for (const auto& lh_xpub_pair : temp_cache.GetCachedLastHardenedExtPubKeys()) {\n+        CExtPubKey xpub;\n+        if (m_wallet_descriptor.cache.GetCachedLastHardenedExtPubKey(lh_xpub_pair.first, xpub)) {",
    "path": "src/wallet/scriptpubkeyman.cpp",
    "position": null,
    "original_position": 32,
    "commit_id": "e6cf0ed92de31a5ac35a271b0da8f0a8364d1175",
    "original_commit_id": "8c5d41f40c65b4c9fc691d4f4b070c551d112995",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I don't follow.\r\n\r\nThis is checking to see if elements in the temp cache are in the stored cache;",
    "created_at": "2021-03-14T18:10:47Z",
    "updated_at": "2021-04-22T19:26:52Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21329#discussion_r593939354",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21329",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593939354"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21329#discussion_r593939354"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21329"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593939354/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2321,
    "side": "RIGHT",
    "in_reply_to_id": 593929906
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593939497",
    "pull_request_review_id": 611723061,
    "id": 593939497,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MzkzOTQ5Nw==",
    "diff_hunk": "@@ -2291,3 +2291,43 @@ bool DescriptorScriptPubKeyMan::GetDescriptorString(std::string& out, bool priv)\n \n     return m_wallet_descriptor.descriptor->ToNormalizedString(provider, out, priv);\n }\n+\n+void DescriptorScriptPubKeyMan::UpgradeDescriptorCache()\n+{\n+    LOCK(cs_desc_man);\n+    if (m_storage.IsLocked() || m_storage.IsWalletFlagSet(WALLET_FLAG_LAST_HARDENED_XPUB_CACHED)) {\n+        return;\n+    }\n+\n+    // Skip if we have the last hardened xpub cache\n+    if (m_wallet_descriptor.cache.GetCachedLastHardenedExtPubKeys().size() > 0) {\n+        return;\n+    }\n+\n+    // Expand the descriptor\n+    FlatSigningProvider provider;\n+    provider.keys = GetKeys();\n+    FlatSigningProvider out_keys;\n+    std::vector<CScript> scripts_temp;\n+    DescriptorCache temp_cache;\n+    if (!m_wallet_descriptor.descriptor->Expand(0, provider, scripts_temp, out_keys, &temp_cache)){",
    "path": "src/wallet/scriptpubkeyman.cpp",
    "position": 74,
    "original_position": 23,
    "commit_id": "e6cf0ed92de31a5ac35a271b0da8f0a8364d1175",
    "original_commit_id": "8c5d41f40c65b4c9fc691d4f4b070c551d112995",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "To avoid modifying the wallet state if something goes wrong during expansion. It is possible that the cache could be modified, but something else causes expansion to fail.",
    "created_at": "2021-03-14T18:12:13Z",
    "updated_at": "2021-04-22T19:26:52Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21329#discussion_r593939497",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21329",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593939497"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21329#discussion_r593939497"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21329"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593939497/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 2297,
    "original_line": 2297,
    "side": "RIGHT",
    "in_reply_to_id": 593933030
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593939739",
    "pull_request_review_id": 611723254,
    "id": 593939739,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MzkzOTczOQ==",
    "diff_hunk": "@@ -432,29 +432,39 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n             out = ToString();\n             return true;\n         }\n-        // Derive the xpub at the last hardened step\n-        CExtKey xprv;\n-        if (!GetExtKey(arg, xprv)) return false;\n+        // Get the path to the last hardened stup\n         KeyOriginInfo origin;\n         int k = 0;\n         for (; k <= i; ++k) {",
    "path": "src/script/descriptor.cpp",
    "position": 172,
    "original_position": 50,
    "commit_id": "e6cf0ed92de31a5ac35a271b0da8f0a8364d1175",
    "original_commit_id": "0ab914a06b26158be5bf3e09eb5988ab0a4a0915",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I don't think that's really necessary since we only do the split in this one spot.",
    "created_at": "2021-03-14T18:14:27Z",
    "updated_at": "2021-04-22T19:26:52Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21329#discussion_r593939739",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21329",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593939739"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21329#discussion_r593939739"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21329"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/593939739/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 437,
    "original_line": 437,
    "side": "RIGHT",
    "in_reply_to_id": 591236020
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/594100575",
    "pull_request_review_id": 611886330,
    "id": 594100575,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NDEwMDU3NQ==",
    "diff_hunk": "@@ -2291,3 +2291,43 @@ bool DescriptorScriptPubKeyMan::GetDescriptorString(std::string& out, bool priv)\n \n     return m_wallet_descriptor.descriptor->ToNormalizedString(provider, out, priv);\n }\n+\n+void DescriptorScriptPubKeyMan::UpgradeDescriptorCache()\n+{\n+    LOCK(cs_desc_man);\n+    if (m_storage.IsLocked() || m_storage.IsWalletFlagSet(WALLET_FLAG_LAST_HARDENED_XPUB_CACHED)) {\n+        return;\n+    }\n+\n+    // Skip if we have the last hardened xpub cache\n+    if (m_wallet_descriptor.cache.GetCachedLastHardenedExtPubKeys().size() > 0) {\n+        return;\n+    }\n+\n+    // Expand the descriptor\n+    FlatSigningProvider provider;\n+    provider.keys = GetKeys();\n+    FlatSigningProvider out_keys;\n+    std::vector<CScript> scripts_temp;\n+    DescriptorCache temp_cache;\n+    if (!m_wallet_descriptor.descriptor->Expand(0, provider, scripts_temp, out_keys, &temp_cache)){\n+        throw std::runtime_error(\"Unable to expand descriptor\");\n+    }\n+\n+    // Cache the last hardened xpubs\n+    WalletBatch batch(m_storage.GetDatabase());\n+    uint256 id = GetID();\n+    for (const auto& lh_xpub_pair : temp_cache.GetCachedLastHardenedExtPubKeys()) {\n+        CExtPubKey xpub;\n+        if (m_wallet_descriptor.cache.GetCachedLastHardenedExtPubKey(lh_xpub_pair.first, xpub)) {",
    "path": "src/wallet/scriptpubkeyman.cpp",
    "position": null,
    "original_position": 32,
    "commit_id": "e6cf0ed92de31a5ac35a271b0da8f0a8364d1175",
    "original_commit_id": "8c5d41f40c65b4c9fc691d4f4b070c551d112995",
    "user": {
      "login": "S3RK",
      "id": 1466284,
      "node_id": "MDQ6VXNlcjE0NjYyODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/S3RK",
      "html_url": "https://github.com/S3RK",
      "followers_url": "https://api.github.com/users/S3RK/followers",
      "following_url": "https://api.github.com/users/S3RK/following{/other_user}",
      "gists_url": "https://api.github.com/users/S3RK/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
      "organizations_url": "https://api.github.com/users/S3RK/orgs",
      "repos_url": "https://api.github.com/users/S3RK/repos",
      "events_url": "https://api.github.com/users/S3RK/events{/privacy}",
      "received_events_url": "https://api.github.com/users/S3RK/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "But the stored cache is always empty, no? I'm looking at the line 2303",
    "created_at": "2021-03-15T07:27:56Z",
    "updated_at": "2021-04-22T19:26:52Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21329#discussion_r594100575",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21329",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/594100575"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21329#discussion_r594100575"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21329"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/594100575/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2321,
    "side": "RIGHT",
    "in_reply_to_id": 593929906
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/594107561",
    "pull_request_review_id": 611894838,
    "id": 594107561,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NDEwNzU2MQ==",
    "diff_hunk": "@@ -110,7 +110,7 @@ struct Descriptor {\n     virtual bool ToPrivateString(const SigningProvider& provider, std::string& out) const = 0;\n \n     /** Convert the descriptor to a normalized string. Normalized descriptors have the xpub at the last hardened step. This fails if the provided provider does not have the private keys to derive that xpub. */\n-    virtual bool ToNormalizedString(const SigningProvider& provider, std::string& out, bool priv) const = 0;\n+    virtual bool ToNormalizedString(const SigningProvider& provider, std::string& out, bool priv, const DescriptorCache* cache = nullptr) const = 0;",
    "path": "src/script/descriptor.h",
    "position": null,
    "original_position": 5,
    "commit_id": "e6cf0ed92de31a5ac35a271b0da8f0a8364d1175",
    "original_commit_id": "690160aac9e8054cdc303086f02bb373ff481bd9",
    "user": {
      "login": "S3RK",
      "id": 1466284,
      "node_id": "MDQ6VXNlcjE0NjYyODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/S3RK",
      "html_url": "https://github.com/S3RK",
      "followers_url": "https://api.github.com/users/S3RK/followers",
      "following_url": "https://api.github.com/users/S3RK/following{/other_user}",
      "gists_url": "https://api.github.com/users/S3RK/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
      "organizations_url": "https://api.github.com/users/S3RK/orgs",
      "repos_url": "https://api.github.com/users/S3RK/repos",
      "events_url": "https://api.github.com/users/S3RK/events{/privacy}",
      "received_events_url": "https://api.github.com/users/S3RK/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Ok. I don't have strong feelings about it, but right now the only caller besides the unit tests is `DescriptorScriptPubKeyMan`. Though I can imagine other possibilities in the future I'd still go with more restrictive signature as it's easier to relax the requirements rather than the other way around. ",
    "created_at": "2021-03-15T07:42:30Z",
    "updated_at": "2021-04-22T19:26:52Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21329#discussion_r594107561",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21329",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/594107561"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21329#discussion_r594107561"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21329"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/594107561/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 113,
    "side": "RIGHT",
    "in_reply_to_id": 592135979
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/594448119",
    "pull_request_review_id": 612342738,
    "id": 594448119,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NDQ0ODExOQ==",
    "diff_hunk": "@@ -2291,3 +2291,43 @@ bool DescriptorScriptPubKeyMan::GetDescriptorString(std::string& out, bool priv)\n \n     return m_wallet_descriptor.descriptor->ToNormalizedString(provider, out, priv);\n }\n+\n+void DescriptorScriptPubKeyMan::UpgradeDescriptorCache()\n+{\n+    LOCK(cs_desc_man);\n+    if (m_storage.IsLocked() || m_storage.IsWalletFlagSet(WALLET_FLAG_LAST_HARDENED_XPUB_CACHED)) {\n+        return;\n+    }\n+\n+    // Skip if we have the last hardened xpub cache\n+    if (m_wallet_descriptor.cache.GetCachedLastHardenedExtPubKeys().size() > 0) {\n+        return;\n+    }\n+\n+    // Expand the descriptor\n+    FlatSigningProvider provider;\n+    provider.keys = GetKeys();\n+    FlatSigningProvider out_keys;\n+    std::vector<CScript> scripts_temp;\n+    DescriptorCache temp_cache;\n+    if (!m_wallet_descriptor.descriptor->Expand(0, provider, scripts_temp, out_keys, &temp_cache)){\n+        throw std::runtime_error(\"Unable to expand descriptor\");\n+    }\n+\n+    // Cache the last hardened xpubs\n+    WalletBatch batch(m_storage.GetDatabase());\n+    uint256 id = GetID();\n+    for (const auto& lh_xpub_pair : temp_cache.GetCachedLastHardenedExtPubKeys()) {\n+        CExtPubKey xpub;\n+        if (m_wallet_descriptor.cache.GetCachedLastHardenedExtPubKey(lh_xpub_pair.first, xpub)) {",
    "path": "src/wallet/scriptpubkeyman.cpp",
    "position": null,
    "original_position": 32,
    "commit_id": "e6cf0ed92de31a5ac35a271b0da8f0a8364d1175",
    "original_commit_id": "8c5d41f40c65b4c9fc691d4f4b070c551d112995",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Ah, I see. There shouldn't be anything in the stored cache, however I am doing this as a belt-and-suspenders check.",
    "created_at": "2021-03-15T15:40:13Z",
    "updated_at": "2021-04-22T19:26:52Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21329#discussion_r594448119",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21329",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/594448119"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21329#discussion_r594448119"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21329"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/594448119/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2321,
    "side": "RIGHT",
    "in_reply_to_id": 593929906
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/595812931",
    "pull_request_review_id": 614021474,
    "id": 595812931,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NTgxMjkzMQ==",
    "diff_hunk": "@@ -1817,6 +1817,19 @@ bool DescriptorScriptPubKeyMan::TopUp(unsigned int size)\n                 m_wallet_descriptor.cache.CacheDerivedExtPubKey(derived_xpub_map_pair.first, derived_xpub_pair.first, derived_xpub_pair.second);\n             }\n         }\n+        for (const auto& lh_xpub_pair : temp_cache.GetCachedLastHardenedExtPubKeys()) {\n+            CExtPubKey xpub;\n+            if (m_wallet_descriptor.cache.GetCachedLastHardenedExtPubKey(lh_xpub_pair.first, xpub)) {\n+                if (xpub != lh_xpub_pair.second) {\n+                    throw std::runtime_error(std::string(__func__) + \": New cached last hardened xpub does not match already cached last hardened xpub\");\n+                }\n+                continue;\n+            }\n+            if (!batch.WriteDescriptorLastHardenedCache(lh_xpub_pair.second, id, lh_xpub_pair.first)) {",
    "path": "src/wallet/scriptpubkeyman.cpp",
    "position": null,
    "original_position": 12,
    "commit_id": "e6cf0ed92de31a5ac35a271b0da8f0a8364d1175",
    "original_commit_id": "e2519b0f6cb9b3de12cbede3fb080086a080b028",
    "user": {
      "login": "S3RK",
      "id": 1466284,
      "node_id": "MDQ6VXNlcjE0NjYyODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/S3RK",
      "html_url": "https://github.com/S3RK",
      "followers_url": "https://api.github.com/users/S3RK/followers",
      "following_url": "https://api.github.com/users/S3RK/following{/other_user}",
      "gists_url": "https://api.github.com/users/S3RK/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
      "organizations_url": "https://api.github.com/users/S3RK/orgs",
      "repos_url": "https://api.github.com/users/S3RK/repos",
      "events_url": "https://api.github.com/users/S3RK/events{/privacy}",
      "received_events_url": "https://api.github.com/users/S3RK/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "If this is a new wallet, at what time do we set the `WALLET_FLAG_LAST_HARDENED_XPUB_CACHED` flag?",
    "created_at": "2021-03-17T08:42:23Z",
    "updated_at": "2021-04-22T19:26:52Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21329#discussion_r595812931",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21329",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/595812931"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21329#discussion_r595812931"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21329"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/595812931/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1830,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/596629909",
    "pull_request_review_id": 614021474,
    "id": 596629909,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NjYyOTkwOQ==",
    "diff_hunk": "@@ -2291,3 +2291,43 @@ bool DescriptorScriptPubKeyMan::GetDescriptorString(std::string& out, bool priv)\n \n     return m_wallet_descriptor.descriptor->ToNormalizedString(provider, out, priv);\n }\n+\n+void DescriptorScriptPubKeyMan::UpgradeDescriptorCache()\n+{\n+    LOCK(cs_desc_man);\n+    if (m_storage.IsLocked() || m_storage.IsWalletFlagSet(WALLET_FLAG_LAST_HARDENED_XPUB_CACHED)) {\n+        return;\n+    }\n+\n+    // Skip if we have the last hardened xpub cache\n+    if (m_wallet_descriptor.cache.GetCachedLastHardenedExtPubKeys().size() > 0) {\n+        return;\n+    }\n+\n+    // Expand the descriptor\n+    FlatSigningProvider provider;\n+    provider.keys = GetKeys();\n+    FlatSigningProvider out_keys;\n+    std::vector<CScript> scripts_temp;\n+    DescriptorCache temp_cache;\n+    if (!m_wallet_descriptor.descriptor->Expand(0, provider, scripts_temp, out_keys, &temp_cache)){",
    "path": "src/wallet/scriptpubkeyman.cpp",
    "position": 74,
    "original_position": 23,
    "commit_id": "e6cf0ed92de31a5ac35a271b0da8f0a8364d1175",
    "original_commit_id": "8c5d41f40c65b4c9fc691d4f4b070c551d112995",
    "user": {
      "login": "S3RK",
      "id": 1466284,
      "node_id": "MDQ6VXNlcjE0NjYyODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/S3RK",
      "html_url": "https://github.com/S3RK",
      "followers_url": "https://api.github.com/users/S3RK/followers",
      "following_url": "https://api.github.com/users/S3RK/following{/other_user}",
      "gists_url": "https://api.github.com/users/S3RK/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
      "organizations_url": "https://api.github.com/users/S3RK/orgs",
      "repos_url": "https://api.github.com/users/S3RK/repos",
      "events_url": "https://api.github.com/users/S3RK/events{/privacy}",
      "received_events_url": "https://api.github.com/users/S3RK/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I don't understand the real life scenario. From what I see `Expand` fails if we can't get a pub key. For example we tried to derive hardened derivation from the cache or the cache itself was inconsistent. This seems to indicate some logic error in the code itself or a corrupted state. Is my understanding correct or do I miss something?",
    "created_at": "2021-03-18T08:07:28Z",
    "updated_at": "2021-04-22T19:26:52Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21329#discussion_r596629909",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21329",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/596629909"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21329#discussion_r596629909"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21329"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/596629909/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 2297,
    "original_line": 2297,
    "side": "RIGHT",
    "in_reply_to_id": 593933030
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/596640549",
    "pull_request_review_id": 614021474,
    "id": 596640549,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NjY0MDU0OQ==",
    "diff_hunk": "@@ -432,29 +432,39 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n             out = ToString();\n             return true;\n         }\n-        // Derive the xpub at the last hardened step\n-        CExtKey xprv;\n-        if (!GetExtKey(arg, xprv)) return false;\n+        // Get the path to the last hardened stup\n         KeyOriginInfo origin;\n         int k = 0;\n         for (; k <= i; ++k) {",
    "path": "src/script/descriptor.cpp",
    "position": 172,
    "original_position": 50,
    "commit_id": "e6cf0ed92de31a5ac35a271b0da8f0a8364d1175",
    "original_commit_id": "0ab914a06b26158be5bf3e09eb5988ab0a4a0915",
    "user": {
      "login": "S3RK",
      "id": 1466284,
      "node_id": "MDQ6VXNlcjE0NjYyODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/S3RK",
      "html_url": "https://github.com/S3RK",
      "followers_url": "https://api.github.com/users/S3RK/followers",
      "following_url": "https://api.github.com/users/S3RK/following{/other_user}",
      "gists_url": "https://api.github.com/users/S3RK/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
      "organizations_url": "https://api.github.com/users/S3RK/orgs",
      "repos_url": "https://api.github.com/users/S3RK/repos",
      "events_url": "https://api.github.com/users/S3RK/events{/privacy}",
      "received_events_url": "https://api.github.com/users/S3RK/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Feel free to leave it as it. But just to clarify my point. It's not about code deduplication, it's about readability and comprehension. There are 3 loops dedicated to splitting derivation path and I think they distract from the main purpose of this function.",
    "created_at": "2021-03-18T08:25:25Z",
    "updated_at": "2021-04-22T19:26:52Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21329#discussion_r596640549",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21329",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/596640549"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21329#discussion_r596640549"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21329"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/596640549/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 437,
    "original_line": 437,
    "side": "RIGHT",
    "in_reply_to_id": 591236020
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/596650372",
    "pull_request_review_id": 614021474,
    "id": 596650372,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NjY1MDM3Mg==",
    "diff_hunk": "@@ -2291,3 +2291,43 @@ bool DescriptorScriptPubKeyMan::GetDescriptorString(std::string& out, bool priv)\n \n     return m_wallet_descriptor.descriptor->ToNormalizedString(provider, out, priv);\n }\n+\n+void DescriptorScriptPubKeyMan::UpgradeDescriptorCache()\n+{\n+    LOCK(cs_desc_man);\n+    if (m_storage.IsLocked() || m_storage.IsWalletFlagSet(WALLET_FLAG_LAST_HARDENED_XPUB_CACHED)) {\n+        return;\n+    }\n+\n+    // Skip if we have the last hardened xpub cache\n+    if (m_wallet_descriptor.cache.GetCachedLastHardenedExtPubKeys().size() > 0) {\n+        return;\n+    }\n+\n+    // Expand the descriptor\n+    FlatSigningProvider provider;\n+    provider.keys = GetKeys();\n+    FlatSigningProvider out_keys;\n+    std::vector<CScript> scripts_temp;\n+    DescriptorCache temp_cache;\n+    if (!m_wallet_descriptor.descriptor->Expand(0, provider, scripts_temp, out_keys, &temp_cache)){\n+        throw std::runtime_error(\"Unable to expand descriptor\");\n+    }\n+\n+    // Cache the last hardened xpubs\n+    WalletBatch batch(m_storage.GetDatabase());\n+    uint256 id = GetID();\n+    for (const auto& lh_xpub_pair : temp_cache.GetCachedLastHardenedExtPubKeys()) {\n+        CExtPubKey xpub;\n+        if (m_wallet_descriptor.cache.GetCachedLastHardenedExtPubKey(lh_xpub_pair.first, xpub)) {",
    "path": "src/wallet/scriptpubkeyman.cpp",
    "position": null,
    "original_position": 32,
    "commit_id": "e6cf0ed92de31a5ac35a271b0da8f0a8364d1175",
    "original_commit_id": "8c5d41f40c65b4c9fc691d4f4b070c551d112995",
    "user": {
      "login": "S3RK",
      "id": 1466284,
      "node_id": "MDQ6VXNlcjE0NjYyODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/S3RK",
      "html_url": "https://github.com/S3RK",
      "followers_url": "https://api.github.com/users/S3RK/followers",
      "following_url": "https://api.github.com/users/S3RK/following{/other_user}",
      "gists_url": "https://api.github.com/users/S3RK/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
      "organizations_url": "https://api.github.com/users/S3RK/orgs",
      "repos_url": "https://api.github.com/users/S3RK/repos",
      "events_url": "https://api.github.com/users/S3RK/events{/privacy}",
      "received_events_url": "https://api.github.com/users/S3RK/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I find it confusing when we check same conditions multiple times in different places because it's not clear what is the responsibility/assumptions of each class/function. It also makes it harder to modify the code. `DescriptorScriptPubKeyMan` and `CWallet` are strongly coupled anyway.\r\n\r\nMaybe we can just remove the check on the top of the function? Even in the worst case nothing will go wrong 1) If wallet is locked then expand will fail 2) if the cache exists already we will just regenerate it. \r\n",
    "created_at": "2021-03-18T08:40:21Z",
    "updated_at": "2021-04-22T19:26:52Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21329#discussion_r596650372",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21329",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/596650372"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21329#discussion_r596650372"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21329"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/596650372/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2321,
    "side": "RIGHT",
    "in_reply_to_id": 593929906
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/597081685",
    "pull_request_review_id": 615664930,
    "id": 597081685,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NzA4MTY4NQ==",
    "diff_hunk": "@@ -1817,6 +1817,19 @@ bool DescriptorScriptPubKeyMan::TopUp(unsigned int size)\n                 m_wallet_descriptor.cache.CacheDerivedExtPubKey(derived_xpub_map_pair.first, derived_xpub_pair.first, derived_xpub_pair.second);\n             }\n         }\n+        for (const auto& lh_xpub_pair : temp_cache.GetCachedLastHardenedExtPubKeys()) {\n+            CExtPubKey xpub;\n+            if (m_wallet_descriptor.cache.GetCachedLastHardenedExtPubKey(lh_xpub_pair.first, xpub)) {\n+                if (xpub != lh_xpub_pair.second) {\n+                    throw std::runtime_error(std::string(__func__) + \": New cached last hardened xpub does not match already cached last hardened xpub\");\n+                }\n+                continue;\n+            }\n+            if (!batch.WriteDescriptorLastHardenedCache(lh_xpub_pair.second, id, lh_xpub_pair.first)) {",
    "path": "src/wallet/scriptpubkeyman.cpp",
    "position": null,
    "original_position": 12,
    "commit_id": "e6cf0ed92de31a5ac35a271b0da8f0a8364d1175",
    "original_commit_id": "e2519b0f6cb9b3de12cbede3fb080086a080b028",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "`LoadWallet`, which is called as part of wallet creation, will always call `CWallet::UpgradeDescriptorCache`. Since a newly created wallet is never encrypted at that stage, and has no `ScriptPubKeyMan`s, `UpgradeDescriptorCache` will just set the flag.",
    "created_at": "2021-03-18T17:12:35Z",
    "updated_at": "2021-04-22T19:26:52Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21329#discussion_r597081685",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21329",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/597081685"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21329#discussion_r597081685"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21329"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/597081685/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1830,
    "side": "RIGHT",
    "in_reply_to_id": 595812931
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/597084769",
    "pull_request_review_id": 615669074,
    "id": 597084769,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NzA4NDc2OQ==",
    "diff_hunk": "@@ -2291,3 +2291,43 @@ bool DescriptorScriptPubKeyMan::GetDescriptorString(std::string& out, bool priv)\n \n     return m_wallet_descriptor.descriptor->ToNormalizedString(provider, out, priv);\n }\n+\n+void DescriptorScriptPubKeyMan::UpgradeDescriptorCache()\n+{\n+    LOCK(cs_desc_man);\n+    if (m_storage.IsLocked() || m_storage.IsWalletFlagSet(WALLET_FLAG_LAST_HARDENED_XPUB_CACHED)) {\n+        return;\n+    }\n+\n+    // Skip if we have the last hardened xpub cache\n+    if (m_wallet_descriptor.cache.GetCachedLastHardenedExtPubKeys().size() > 0) {\n+        return;\n+    }\n+\n+    // Expand the descriptor\n+    FlatSigningProvider provider;\n+    provider.keys = GetKeys();\n+    FlatSigningProvider out_keys;\n+    std::vector<CScript> scripts_temp;\n+    DescriptorCache temp_cache;\n+    if (!m_wallet_descriptor.descriptor->Expand(0, provider, scripts_temp, out_keys, &temp_cache)){\n+        throw std::runtime_error(\"Unable to expand descriptor\");\n+    }\n+\n+    // Cache the last hardened xpubs\n+    WalletBatch batch(m_storage.GetDatabase());\n+    uint256 id = GetID();\n+    for (const auto& lh_xpub_pair : temp_cache.GetCachedLastHardenedExtPubKeys()) {\n+        CExtPubKey xpub;\n+        if (m_wallet_descriptor.cache.GetCachedLastHardenedExtPubKey(lh_xpub_pair.first, xpub)) {",
    "path": "src/wallet/scriptpubkeyman.cpp",
    "position": null,
    "original_position": 32,
    "commit_id": "e6cf0ed92de31a5ac35a271b0da8f0a8364d1175",
    "original_commit_id": "8c5d41f40c65b4c9fc691d4f4b070c551d112995",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This is largely just code duplicated from TopUp. The intention was to refactor them to avoid the duplication, but I never got around to doing that.\r\n\r\nThe check at the top of the function is important to avoid unnecessary extra computation which slows down wallet loading and unlocking.",
    "created_at": "2021-03-18T17:16:38Z",
    "updated_at": "2021-04-22T19:26:52Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21329#discussion_r597084769",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21329",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/597084769"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21329#discussion_r597084769"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21329"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/597084769/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2321,
    "side": "RIGHT",
    "in_reply_to_id": 593929906
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/597090580",
    "pull_request_review_id": 615676636,
    "id": 597090580,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NzA5MDU4MA==",
    "diff_hunk": "@@ -2291,3 +2291,43 @@ bool DescriptorScriptPubKeyMan::GetDescriptorString(std::string& out, bool priv)\n \n     return m_wallet_descriptor.descriptor->ToNormalizedString(provider, out, priv);\n }\n+\n+void DescriptorScriptPubKeyMan::UpgradeDescriptorCache()\n+{\n+    LOCK(cs_desc_man);\n+    if (m_storage.IsLocked() || m_storage.IsWalletFlagSet(WALLET_FLAG_LAST_HARDENED_XPUB_CACHED)) {\n+        return;\n+    }\n+\n+    // Skip if we have the last hardened xpub cache\n+    if (m_wallet_descriptor.cache.GetCachedLastHardenedExtPubKeys().size() > 0) {\n+        return;\n+    }\n+\n+    // Expand the descriptor\n+    FlatSigningProvider provider;\n+    provider.keys = GetKeys();\n+    FlatSigningProvider out_keys;\n+    std::vector<CScript> scripts_temp;\n+    DescriptorCache temp_cache;\n+    if (!m_wallet_descriptor.descriptor->Expand(0, provider, scripts_temp, out_keys, &temp_cache)){",
    "path": "src/wallet/scriptpubkeyman.cpp",
    "position": 74,
    "original_position": 23,
    "commit_id": "e6cf0ed92de31a5ac35a271b0da8f0a8364d1175",
    "original_commit_id": "8c5d41f40c65b4c9fc691d4f4b070c551d112995",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Consider `multi(2,xpub.../0/*,xpub.../0h/*)`. The first xpub is entirely unhardened derivation. So we will have entries added to the cache when it is expanded. When `ExpandHelper` moves onto the second xpub, it finds it is entirely hardened derivation. If the keys are unavailable (e.g. they're encrypted), expand now fails here. However the cache now has entries for the first xpub but no entries for the second. While this is not a dangerous state to be in, the in memory state will not be accurately reflected on disk and that is generally something that I think we should avoid. Thus the temp cache is used.",
    "created_at": "2021-03-18T17:24:03Z",
    "updated_at": "2021-04-22T19:26:52Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21329#discussion_r597090580",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21329",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/597090580"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21329#discussion_r597090580"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21329"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/597090580/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 2297,
    "original_line": 2297,
    "side": "RIGHT",
    "in_reply_to_id": 593933030
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/658034162",
    "pull_request_review_id": 691876680,
    "id": 658034162,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1ODAzNDE2Mg==",
    "diff_hunk": "@@ -287,9 +286,6 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     CExtPubKey m_root_extkey;\n     KeyPath m_path;\n     DeriveType m_derive;\n-    // Cache of the parent of the final derived pubkeys.\n-    // Primarily useful for situations when no read_cache is provided\n-    CExtPubKey m_cached_xpub;",
    "path": "src/script/descriptor.cpp",
    "position": 66,
    "original_position": 39,
    "commit_id": "e6cf0ed92de31a5ac35a271b0da8f0a8364d1175",
    "original_commit_id": "e668b9e2bb02217afe032fc344117a5761a83fba",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "0cc90f1e3dbccd5940b05b633260fdcd8dac5581 essentially reverts 09e25071f40 IIUC. Perhaps re-add `const` to the four `GetPubKey()` member functions in the commit and mention in the commit message that it reverts 09e25071f40\r\n\r\n```diff\r\n-    virtual bool GetPubKey(int pos, const SigningProvider& arg, CPubKey& key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) = 0;\r\n+    virtual bool GetPubKey(int pos, const SigningProvider& arg, CPubKey& key, KeyOriginInfo& info, const DescriptorCache* read_cache = nullptr, DescriptorCache* write_cache = nullptr) const = 0;\r\n```",
    "created_at": "2021-06-24T15:06:11Z",
    "updated_at": "2021-06-24T15:06:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21329#discussion_r658034162",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21329",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/658034162"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21329#discussion_r658034162"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21329"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/658034162/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 293,
    "original_line": 293,
    "side": "LEFT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/658103313",
    "pull_request_review_id": 691979910,
    "id": 658103313,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1ODEwMzMxMw==",
    "diff_hunk": "@@ -287,9 +286,6 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     CExtPubKey m_root_extkey;\n     KeyPath m_path;\n     DeriveType m_derive;\n-    // Cache of the parent of the final derived pubkeys.\n-    // Primarily useful for situations when no read_cache is provided\n-    CExtPubKey m_cached_xpub;",
    "path": "src/script/descriptor.cpp",
    "position": 66,
    "original_position": 39,
    "commit_id": "e6cf0ed92de31a5ac35a271b0da8f0a8364d1175",
    "original_commit_id": "e668b9e2bb02217afe032fc344117a5761a83fba",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Apart from this, ACK up to 8fac319f6d180fa5c597ea08beb7827331e7d9ec so far (the first three commits).",
    "created_at": "2021-06-24T16:25:36Z",
    "updated_at": "2021-06-24T16:25:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21329#discussion_r658103313",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21329",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/658103313"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21329#discussion_r658103313"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21329"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/658103313/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 293,
    "original_line": 293,
    "side": "LEFT",
    "in_reply_to_id": 658034162
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/658159649",
    "pull_request_review_id": 692054733,
    "id": 658159649,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1ODE1OTY0OQ==",
    "diff_hunk": "@@ -287,9 +286,6 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     CExtPubKey m_root_extkey;\n     KeyPath m_path;\n     DeriveType m_derive;\n-    // Cache of the parent of the final derived pubkeys.\n-    // Primarily useful for situations when no read_cache is provided\n-    CExtPubKey m_cached_xpub;",
    "path": "src/script/descriptor.cpp",
    "position": 66,
    "original_position": 39,
    "commit_id": "e6cf0ed92de31a5ac35a271b0da8f0a8364d1175",
    "original_commit_id": "e668b9e2bb02217afe032fc344117a5761a83fba",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I've made this commit into a pure revert with an extra comment saying why.",
    "created_at": "2021-06-24T17:47:48Z",
    "updated_at": "2021-06-24T17:47:48Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21329#discussion_r658159649",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21329",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/658159649"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21329#discussion_r658159649"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21329"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/658159649/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 293,
    "original_line": 293,
    "side": "LEFT",
    "in_reply_to_id": 658034162
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/659164948",
    "pull_request_review_id": 693306832,
    "id": 659164948,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1OTE2NDk0OA==",
    "diff_hunk": "@@ -352,16 +352,17 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n                 final_extkey = parent_extkey;\n                 if (m_derive == DeriveType::UNHARDENED) der = parent_extkey.Derive(final_extkey, pos);\n             }\n-        } else if (m_cached_xpub.pubkey.IsValid() && m_derive != DeriveType::HARDENED) {\n-            parent_extkey = final_extkey = m_cached_xpub;\n-            if (m_derive == DeriveType::UNHARDENED) der = parent_extkey.Derive(final_extkey, pos);\n         } else if (IsHardened()) {\n             CExtKey xprv;\n-            if (!GetDerivedExtKey(arg, xprv)) return false;\n+            CExtKey lh_xprv;",
    "path": "src/script/descriptor.cpp",
    "position": 113,
    "original_position": 113,
    "commit_id": "e6cf0ed92de31a5ac35a271b0da8f0a8364d1175",
    "original_commit_id": "e6cf0ed92de31a5ac35a271b0da8f0a8364d1175",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "d87b544b consider naming `s/lh_xprv/last_hardened_xprv/` as \"lh\" is a common abbreviation for left-hand and `last_hardened_extkey` is a localvar too",
    "created_at": "2021-06-26T12:56:01Z",
    "updated_at": "2021-06-26T15:40:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21329#discussion_r659164948",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21329",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/659164948"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21329#discussion_r659164948"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21329"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/659164948/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 357,
    "original_line": 357,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/659165999",
    "pull_request_review_id": 693306832,
    "id": 659165999,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1OTE2NTk5OQ==",
    "diff_hunk": "@@ -1429,6 +1454,55 @@ bool DescriptorCache::GetCachedDerivedExtPubKey(uint32_t key_exp_pos, uint32_t d\n     return true;\n }\n \n+bool DescriptorCache::GetCachedLastHardenedExtPubKey(uint32_t key_exp_pos, CExtPubKey& xpub) const\n+{\n+    const auto& it = m_last_hardened_xpubs.find(key_exp_pos);\n+    if (it == m_last_hardened_xpubs.end()) return false;\n+    xpub = it->second;\n+    return true;\n+}\n+\n+DescriptorCache DescriptorCache::MergeAndDiff(const DescriptorCache& other)\n+{\n+    DescriptorCache diff;\n+    for (const auto& parent_xpub_pair : other.GetCachedParentExtPubKeys()) {\n+        CExtPubKey xpub;\n+        if (GetCachedParentExtPubKey(parent_xpub_pair.first, xpub)) {\n+            if (xpub != parent_xpub_pair.second) {\n+                throw std::runtime_error(std::string(__func__) + \": New cached parent xpub does not match already cached parent xpub\");\n+            }\n+            continue;\n+        }\n+        CacheParentExtPubKey(parent_xpub_pair.first, parent_xpub_pair.second);\n+        diff.CacheParentExtPubKey(parent_xpub_pair.first, parent_xpub_pair.second);\n+    }\n+    for (const auto& derived_xpub_map_pair : other.GetCachedDerivedExtPubKeys()) {\n+        for (const auto& derived_xpub_pair : derived_xpub_map_pair.second) {\n+            CExtPubKey xpub;\n+            if (GetCachedDerivedExtPubKey(derived_xpub_map_pair.first, derived_xpub_pair.first, xpub)) {\n+                if (xpub != derived_xpub_pair.second) {\n+                    throw std::runtime_error(std::string(__func__) + \": New cached derived xpub does not match already cached derived xpub\");\n+                }\n+                continue;\n+            }\n+            CacheDerivedExtPubKey(derived_xpub_map_pair.first, derived_xpub_pair.first, derived_xpub_pair.second);\n+            diff.CacheDerivedExtPubKey(derived_xpub_map_pair.first, derived_xpub_pair.first, derived_xpub_pair.second);\n+        }\n+    }\n+    for (const auto& lh_xpub_pair : other.GetCachedLastHardenedExtPubKeys()) {\n+        CExtPubKey xpub;\n+        if (GetCachedLastHardenedExtPubKey(lh_xpub_pair.first, xpub)) {",
    "path": "src/script/descriptor.cpp",
    "position": 384,
    "original_position": 384,
    "commit_id": "e6cf0ed92de31a5ac35a271b0da8f0a8364d1175",
    "original_commit_id": "e6cf0ed92de31a5ac35a271b0da8f0a8364d1175",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "d87b544b could make this easier to quickly understand\r\n```suggestion\r\n        if (GetCachedLastHardenedExtPubKey(/* key_exp_pos */ lh_xpub_pair.first, xpub)) {\r\n```",
    "created_at": "2021-06-26T13:07:11Z",
    "updated_at": "2021-06-26T15:40:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21329#discussion_r659165999",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21329",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/659165999"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21329#discussion_r659165999"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21329"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/659165999/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1494,
    "original_line": 1494,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/659166424",
    "pull_request_review_id": 693306832,
    "id": 659166424,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1OTE2NjQyNA==",
    "diff_hunk": "@@ -1429,6 +1454,55 @@ bool DescriptorCache::GetCachedDerivedExtPubKey(uint32_t key_exp_pos, uint32_t d\n     return true;\n }\n \n+bool DescriptorCache::GetCachedLastHardenedExtPubKey(uint32_t key_exp_pos, CExtPubKey& xpub) const\n+{\n+    const auto& it = m_last_hardened_xpubs.find(key_exp_pos);\n+    if (it == m_last_hardened_xpubs.end()) return false;\n+    xpub = it->second;\n+    return true;\n+}\n+\n+DescriptorCache DescriptorCache::MergeAndDiff(const DescriptorCache& other)\n+{\n+    DescriptorCache diff;\n+    for (const auto& parent_xpub_pair : other.GetCachedParentExtPubKeys()) {\n+        CExtPubKey xpub;\n+        if (GetCachedParentExtPubKey(parent_xpub_pair.first, xpub)) {\n+            if (xpub != parent_xpub_pair.second) {\n+                throw std::runtime_error(std::string(__func__) + \": New cached parent xpub does not match already cached parent xpub\");\n+            }\n+            continue;\n+        }\n+        CacheParentExtPubKey(parent_xpub_pair.first, parent_xpub_pair.second);\n+        diff.CacheParentExtPubKey(parent_xpub_pair.first, parent_xpub_pair.second);\n+    }\n+    for (const auto& derived_xpub_map_pair : other.GetCachedDerivedExtPubKeys()) {\n+        for (const auto& derived_xpub_pair : derived_xpub_map_pair.second) {\n+            CExtPubKey xpub;\n+            if (GetCachedDerivedExtPubKey(derived_xpub_map_pair.first, derived_xpub_pair.first, xpub)) {\n+                if (xpub != derived_xpub_pair.second) {\n+                    throw std::runtime_error(std::string(__func__) + \": New cached derived xpub does not match already cached derived xpub\");\n+                }\n+                continue;\n+            }\n+            CacheDerivedExtPubKey(derived_xpub_map_pair.first, derived_xpub_pair.first, derived_xpub_pair.second);\n+            diff.CacheDerivedExtPubKey(derived_xpub_map_pair.first, derived_xpub_pair.first, derived_xpub_pair.second);\n+        }\n+    }\n+    for (const auto& lh_xpub_pair : other.GetCachedLastHardenedExtPubKeys()) {\n+        CExtPubKey xpub;\n+        if (GetCachedLastHardenedExtPubKey(lh_xpub_pair.first, xpub)) {\n+            if (xpub != lh_xpub_pair.second) {\n+                throw std::runtime_error(std::string(__func__) + \": New cached last hardened xpub does not match already cached last hardened xpub\");\n+            }\n+            continue;\n+        }\n+        CacheLastHardenedExtPubKey(lh_xpub_pair.first, lh_xpub_pair.second);",
    "path": "src/script/descriptor.cpp",
    "position": 390,
    "original_position": 390,
    "commit_id": "e6cf0ed92de31a5ac35a271b0da8f0a8364d1175",
    "original_commit_id": "e6cf0ed92de31a5ac35a271b0da8f0a8364d1175",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "d87b544b It would be nice to make the code easier to quickly understand (using a struct instead of pairs would make the code more self-documenting but is outside the scope here)\r\n```diff\r\n-        CacheLastHardenedExtPubKey(lh_xpub_pair.first, lh_xpub_pair.second);\r\n-        diff.CacheLastHardenedExtPubKey(lh_xpub_pair.first, lh_xpub_pair.second);\r\n+        CacheLastHardenedExtPubKey(\r\n+            /* key_exp_pos */ last_hardened_xpub_pair.first,\r\n+            /* xpub */ last_hardened_xpub_pair.second);\r\n+        diff.CacheLastHardenedExtPubKey(\r\n+            /* key_exp_pos */ last_hardened_xpub_pair.first,\r\n+            /* xpub */ last_hardened_xpub_pair.second);\r\n```",
    "created_at": "2021-06-26T13:10:54Z",
    "updated_at": "2021-06-26T15:40:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21329#discussion_r659166424",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21329",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/659166424"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21329#discussion_r659166424"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21329"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/659166424/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1500,
    "original_line": 1500,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/659168013",
    "pull_request_review_id": 693306832,
    "id": 659168013,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1OTE2ODAxMw==",
    "diff_hunk": "@@ -52,6 +52,7 @@ const std::string TX{\"tx\"};\n const std::string VERSION{\"version\"};\n const std::string WALLETDESCRIPTOR{\"walletdescriptor\"};\n const std::string WALLETDESCRIPTORCACHE{\"walletdescriptorcache\"};\n+const std::string WALLETDESCRIPTORLHCACHE{\"walletdescriptorlhcache\"};",
    "path": "src/wallet/walletdb.cpp",
    "position": 4,
    "original_position": 4,
    "commit_id": "e6cf0ed92de31a5ac35a271b0da8f0a8364d1175",
    "original_commit_id": "e6cf0ed92de31a5ac35a271b0da8f0a8364d1175",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "432ba9e this naming isn't very readable; `s/LH/LASTHARDENED/` would be nice and per developer-notes.md, \"constant names are all uppercase, and use `_` to separate words\"\r\n```suggestion\r\nconst std::string WALLET_DESCRIPTOR_LAST_HARDENED_CACHE{\"walletdescriptorlhcache\"};\r\n```\r\n",
    "created_at": "2021-06-26T13:27:50Z",
    "updated_at": "2021-06-26T15:40:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21329#discussion_r659168013",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21329",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/659168013"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21329#discussion_r659168013"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21329"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/659168013/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 55,
    "original_line": 55,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/659168559",
    "pull_request_review_id": 693306832,
    "id": 659168559,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1OTE2ODU1OQ==",
    "diff_hunk": "@@ -305,11 +301,14 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     }\n \n     // Derives the last xprv\n-    bool GetDerivedExtKey(const SigningProvider& arg, CExtKey& xprv) const\n+    bool GetDerivedExtKey(const SigningProvider& arg, CExtKey& xprv, CExtKey& last_hardened) const\n     {\n         if (!GetExtKey(arg, xprv)) return false;\n         for (auto entry : m_path) {\n             xprv.Derive(xprv, entry);\n+            if (entry >> 31) {",
    "path": "src/script/descriptor.cpp",
    "position": 80,
    "original_position": 80,
    "commit_id": "e6cf0ed92de31a5ac35a271b0da8f0a8364d1175",
    "original_commit_id": "e6cf0ed92de31a5ac35a271b0da8f0a8364d1175",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "d87b544 it would be nice to hoist these `31` values to a well-named constant",
    "created_at": "2021-06-26T13:33:06Z",
    "updated_at": "2021-06-27T23:05:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21329#discussion_r659168559",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21329",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/659168559"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21329#discussion_r659168559"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21329"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/659168559/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 309,
    "original_line": 309,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/659169067",
    "pull_request_review_id": 693306832,
    "id": 659169067,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1OTE2OTA2Nw==",
    "diff_hunk": "@@ -248,6 +249,35 @@ bool WalletBatch::WriteDescriptorParentCache(const CExtPubKey& xpub, const uint2\n     return WriteIC(std::make_pair(std::make_pair(DBKeys::WALLETDESCRIPTORCACHE, desc_id), key_exp_index), ser_xpub);\n }\n \n+bool WalletBatch::WriteDescriptorLastHardenedCache(const CExtPubKey& xpub, const uint256& desc_id, uint32_t key_exp_index)\n+{\n+    std::vector<unsigned char> ser_xpub(BIP32_EXTKEY_SIZE);\n+    xpub.Encode(ser_xpub.data());\n+    return WriteIC(std::make_pair(std::make_pair(DBKeys::WALLETDESCRIPTORLHCACHE, desc_id), key_exp_index), ser_xpub);\n+}\n+\n+bool WalletBatch::WriteDescriptorCacheItems(const uint256& desc_id, const DescriptorCache& cache)\n+{\n+    for (const auto& parent_xpub_pair : cache.GetCachedParentExtPubKeys()) {\n+        if (!WriteDescriptorParentCache(parent_xpub_pair.second, desc_id, parent_xpub_pair.first)) {\n+            return false;\n+        }\n+    }\n+    for (const auto& derived_xpub_map_pair : cache.GetCachedDerivedExtPubKeys()) {\n+        for (const auto& derived_xpub_pair : derived_xpub_map_pair.second) {\n+            if (!WriteDescriptorDerivedCache(derived_xpub_pair.second, desc_id, derived_xpub_map_pair.first, derived_xpub_pair.first)) {\n+                return false;\n+            }\n+        }\n+    }\n+    for (const auto& lh_xpub_pair : cache.GetCachedLastHardenedExtPubKeys()) {\n+        if (!WriteDescriptorLastHardenedCache(lh_xpub_pair.second, desc_id, lh_xpub_pair.first)) {",
    "path": "src/wallet/walletdb.cpp",
    "position": 34,
    "original_position": 34,
    "commit_id": "e6cf0ed92de31a5ac35a271b0da8f0a8364d1175",
    "original_commit_id": "e6cf0ed92de31a5ac35a271b0da8f0a8364d1175",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "432ba9e readability suggestion\r\n```diff\r\n-    for (const auto& lh_xpub_pair : cache.GetCachedLastHardenedExtPubKeys()) {\r\n-        if (!WriteDescriptorLastHardenedCache(lh_xpub_pair.second, desc_id, lh_xpub_pair.first)) {\r\n+    for (const auto& last_hardened_xpub_pair : cache.GetCachedLastHardenedExtPubKeys()) {\r\n+        if (!WriteDescriptorLastHardenedCache(/* xpub */ last_hardened_xpub_pair.second, desc_id, /* key_exp_index */ lh_xpub_pair.first)) {\r\n```\r\n",
    "created_at": "2021-06-26T13:38:21Z",
    "updated_at": "2021-06-26T15:40:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21329#discussion_r659169067",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21329",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/659169067"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21329#discussion_r659169067"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21329"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/659169067/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 274,
    "original_line": 274,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/659174750",
    "pull_request_review_id": 693306832,
    "id": 659174750,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1OTE3NDc1MA==",
    "diff_hunk": "@@ -2290,15 +2266,41 @@ const std::vector<CScript> DescriptorScriptPubKeyMan::GetScriptPubKeys() const\n     return script_pub_keys;\n }\n \n-bool DescriptorScriptPubKeyMan::GetDescriptorString(std::string& out, bool priv) const\n+bool DescriptorScriptPubKeyMan::GetDescriptorString(std::string& out) const\n {\n     LOCK(cs_desc_man);\n-    if (m_storage.IsLocked()) {\n-        return false;\n+\n+    FlatSigningProvider provider;\n+    provider.keys = GetKeys();\n+\n+    return m_wallet_descriptor.descriptor->ToNormalizedString(provider, out, &m_wallet_descriptor.cache);\n+}\n+\n+void DescriptorScriptPubKeyMan::UpgradeDescriptorCache()\n+{\n+    LOCK(cs_desc_man);\n+    if (m_storage.IsLocked() || m_storage.IsWalletFlagSet(WALLET_FLAG_LAST_HARDENED_XPUB_CACHED)) {",
    "path": "src/wallet/scriptpubkeyman.cpp",
    "position": 59,
    "original_position": 59,
    "commit_id": "e6cf0ed92de31a5ac35a271b0da8f0a8364d1175",
    "original_commit_id": "e6cf0ed92de31a5ac35a271b0da8f0a8364d1175",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "74fede3 It seems like `IsLocked()` is already checked by the callers `CWallet::UpgradeDescriptorCache` and `CWallet::Unlock` IIUC, but belt-and-suspenders, I suppose.",
    "created_at": "2021-06-26T14:31:04Z",
    "updated_at": "2021-06-26T15:40:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21329#discussion_r659174750",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21329",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/659174750"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21329#discussion_r659174750"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21329"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/659174750/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 2282,
    "original_line": 2282,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/659177495",
    "pull_request_review_id": 693306832,
    "id": 659177495,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1OTE3NzQ5NQ==",
    "diff_hunk": "@@ -429,33 +428,42 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n         }\n         // Either no derivation or all unhardened derivation\n         if (i == -1) {\n-            if (priv) return ToPrivateString(arg, out);\n             out = ToString();\n             return true;\n         }\n-        // Derive the xpub at the last hardened step\n-        CExtKey xprv;\n-        if (!GetExtKey(arg, xprv)) return false;\n+        // Get the path to the last hardened stup\n         KeyOriginInfo origin;\n         int k = 0;\n         for (; k <= i; ++k) {\n-            // Derive\n-            xprv.Derive(xprv, m_path.at(k));\n             // Add to the path\n             origin.path.push_back(m_path.at(k));\n-            // First derivation element, get the fingerprint for origin\n-            if (k == 0) {\n-                std::copy(xprv.vchFingerprint, xprv.vchFingerprint + 4, origin.fingerprint);\n-            }\n         }\n         // Build the remaining path\n         KeyPath end_path;\n         for (; k < (int)m_path.size(); ++k) {\n             end_path.push_back(m_path.at(k));\n         }\n+        // Get the fingerprint\n+        CKeyID id = m_root_extkey.pubkey.GetID();\n+        std::copy(id.begin(), id.begin() + 4, origin.fingerprint);\n+\n+        CExtPubKey xpub;\n+        CExtKey lh_xprv;",
    "path": "src/script/descriptor.cpp",
    "position": 192,
    "original_position": 192,
    "commit_id": "e6cf0ed92de31a5ac35a271b0da8f0a8364d1175",
    "original_commit_id": "e6cf0ed92de31a5ac35a271b0da8f0a8364d1175",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "3280704 naming style, suggest `last_hardened_xprv`, as this looks like \"left-hand xprv\"",
    "created_at": "2021-06-26T14:57:43Z",
    "updated_at": "2021-06-26T15:40:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21329#discussion_r659177495",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21329",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/659177495"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21329#discussion_r659177495"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21329"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/659177495/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 451,
    "original_line": 451,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/659177602",
    "pull_request_review_id": 693306832,
    "id": 659177602,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1OTE3NzYwMg==",
    "diff_hunk": "@@ -429,33 +428,42 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n         }\n         // Either no derivation or all unhardened derivation\n         if (i == -1) {\n-            if (priv) return ToPrivateString(arg, out);\n             out = ToString();\n             return true;\n         }\n-        // Derive the xpub at the last hardened step\n-        CExtKey xprv;\n-        if (!GetExtKey(arg, xprv)) return false;\n+        // Get the path to the last hardened stup\n         KeyOriginInfo origin;\n         int k = 0;\n         for (; k <= i; ++k) {\n-            // Derive\n-            xprv.Derive(xprv, m_path.at(k));\n             // Add to the path\n             origin.path.push_back(m_path.at(k));\n-            // First derivation element, get the fingerprint for origin\n-            if (k == 0) {\n-                std::copy(xprv.vchFingerprint, xprv.vchFingerprint + 4, origin.fingerprint);\n-            }\n         }\n         // Build the remaining path\n         KeyPath end_path;\n         for (; k < (int)m_path.size(); ++k) {\n             end_path.push_back(m_path.at(k));\n         }\n+        // Get the fingerprint\n+        CKeyID id = m_root_extkey.pubkey.GetID();\n+        std::copy(id.begin(), id.begin() + 4, origin.fingerprint);\n+\n+        CExtPubKey xpub;\n+        CExtKey lh_xprv;\n+        // If we have the cache, just get the parent xpub\n+        if (cache != nullptr) {\n+            cache->GetCachedLastHardenedExtPubKey(m_expr_index, xpub);\n+        }\n+        if (!xpub.pubkey.IsValid()) {\n+            // Cache miss, or nor cache, or need privkey",
    "path": "src/script/descriptor.cpp",
    "position": 198,
    "original_position": 198,
    "commit_id": "e6cf0ed92de31a5ac35a271b0da8f0a8364d1175",
    "original_commit_id": "e6cf0ed92de31a5ac35a271b0da8f0a8364d1175",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "3280704\r\n```suggestion\r\n            // Cache miss, or no cache, or need privkey\r\n```",
    "created_at": "2021-06-26T14:59:06Z",
    "updated_at": "2021-06-26T15:40:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21329#discussion_r659177602",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21329",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/659177602"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21329#discussion_r659177602"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21329"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/659177602/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 457,
    "original_line": 457,
    "side": "RIGHT"
  }
]