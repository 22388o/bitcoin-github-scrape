[
  {
    "sha": "49f4c7f0699e5e19ac6e41ef5b607392dd7a2983",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0OWY0YzdmMDY5OWU1ZTE5YWM2ZTQxZWY1YjYwNzM5MmRkN2EyOTgz",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2019-10-14T11:49:31Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2019-11-18T16:52:56Z"
      },
      "message": "tests: Add fuzzing harness for various PSBT related functions",
      "tree": {
        "sha": "45ae6b68b3072d50390446188d4f715d7bb09302",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/45ae6b68b3072d50390446188d4f715d7bb09302"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/49f4c7f0699e5e19ac6e41ef5b607392dd7a2983",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/49f4c7f0699e5e19ac6e41ef5b607392dd7a2983",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/49f4c7f0699e5e19ac6e41ef5b607392dd7a2983",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/49f4c7f0699e5e19ac6e41ef5b607392dd7a2983/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "08e29473126d5cc4df6d2b3f368c6f6f641c0bd8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/08e29473126d5cc4df6d2b3f368c6f6f641c0bd8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/08e29473126d5cc4df6d2b3f368c6f6f641c0bd8"
      }
    ],
    "stats": {
      "total": 86,
      "additions": 86,
      "deletions": 0
    },
    "files": [
      {
        "sha": "df49cc1f5e8eea797a54bb0df16eebcafff8a6a9",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49f4c7f0699e5e19ac6e41ef5b607392dd7a2983/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49f4c7f0699e5e19ac6e41ef5b607392dd7a2983/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=49f4c7f0699e5e19ac6e41ef5b607392dd7a2983",
        "patch": "@@ -23,6 +23,7 @@ FUZZ_TARGETS = \\\n   test/fuzz/messageheader_deserialize \\\n   test/fuzz/netaddr_deserialize \\\n   test/fuzz/parse_iso8601 \\\n+  test/fuzz/psbt \\\n   test/fuzz/script \\\n   test/fuzz/script_flags \\\n   test/fuzz/service_deserialize \\\n@@ -276,6 +277,12 @@ test_fuzz_parse_iso8601_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_parse_iso8601_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n test_fuzz_parse_iso8601_LDADD = $(FUZZ_SUITE_LD_COMMON)\n \n+test_fuzz_psbt_SOURCES = $(FUZZ_SUITE) test/fuzz/psbt.cpp\n+test_fuzz_psbt_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n+test_fuzz_psbt_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_psbt_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_psbt_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+\n test_fuzz_script_SOURCES = $(FUZZ_SUITE) test/fuzz/script.cpp\n test_fuzz_script_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_script_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)"
      },
      {
        "sha": "1ce28f9a6dfc8ee2ea774c1a87c011198ed7a246",
        "filename": "src/test/fuzz/psbt.cpp",
        "status": "added",
        "additions": 79,
        "deletions": 0,
        "changes": 79,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49f4c7f0699e5e19ac6e41ef5b607392dd7a2983/src/test/fuzz/psbt.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49f4c7f0699e5e19ac6e41ef5b607392dd7a2983/src/test/fuzz/psbt.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/psbt.cpp?ref=49f4c7f0699e5e19ac6e41ef5b607392dd7a2983",
        "patch": "@@ -0,0 +1,79 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <test/fuzz/fuzz.h>\n+\n+#include <node/psbt.h>\n+#include <optional.h>\n+#include <psbt.h>\n+#include <pubkey.h>\n+#include <script/script.h>\n+#include <streams.h>\n+#include <util/memory.h>\n+#include <version.h>\n+\n+#include <cstdint>\n+#include <string>\n+#include <vector>\n+\n+void initialize()\n+{\n+    static const auto verify_handle = MakeUnique<ECCVerifyHandle>();\n+}\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    PartiallySignedTransaction psbt_mut;\n+    const std::string raw_psbt{buffer.begin(), buffer.end()};\n+    std::string error;\n+    if (!DecodeRawPSBT(psbt_mut, raw_psbt, error)) {\n+        return;\n+    }\n+    const PartiallySignedTransaction psbt = psbt_mut;\n+\n+    const PSBTAnalysis analysis = AnalyzePSBT(psbt);\n+    (void)PSBTRoleName(analysis.next);\n+    for (const PSBTInputAnalysis& input_analysis : analysis.inputs) {\n+        (void)PSBTRoleName(input_analysis.next);\n+    }\n+\n+    (void)psbt.IsNull();\n+    (void)psbt.IsSane();\n+\n+    Optional<CMutableTransaction> tx = psbt.tx;\n+    if (tx) {\n+        const CMutableTransaction& mtx = *tx;\n+        const PartiallySignedTransaction psbt_from_tx{mtx};\n+    }\n+\n+    for (const PSBTInput& input : psbt.inputs) {\n+        (void)PSBTInputSigned(input);\n+        (void)input.IsNull();\n+        (void)input.IsSane();\n+    }\n+\n+    for (const PSBTOutput& output : psbt.outputs) {\n+        (void)output.IsNull();\n+    }\n+\n+    for (size_t i = 0; i < psbt.tx->vin.size(); ++i) {\n+        CTxOut tx_out;\n+        if (psbt.GetInputUTXO(tx_out, i)) {\n+            (void)tx_out.IsNull();\n+            (void)tx_out.ToString();\n+        }\n+    }\n+\n+    psbt_mut = psbt;\n+    (void)FinalizePSBT(psbt_mut);\n+\n+    psbt_mut = psbt;\n+    CMutableTransaction result;\n+    if (FinalizeAndExtractPSBT(psbt_mut, result)) {\n+        const PartiallySignedTransaction psbt_from_tx{result};\n+    }\n+\n+    psbt_mut = psbt;\n+    (void)psbt_mut.Merge(psbt);\n+}"
      }
    ]
  }
]