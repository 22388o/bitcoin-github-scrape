DrahtBot,2019-10-14 15:21:24,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#17229](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/17229.html) (tests: Add fuzzing harnesses for various Ba",https://github.com/bitcoin/bitcoin/pull/17136#issuecomment-541743438,541743438,
laanwj,2019-10-15 06:27:38,Thanks for adding fuzzing tests! However I think the PR list is getting saturated this way. Maybe it makes more sense to add these to a single PR. I suppose people will intend to review and merge them together anyway.,https://github.com/bitcoin/bitcoin/pull/17136#issuecomment-542058618,542058618,
practicalswift,2019-10-15 09:17:50,"@laanwj I try to separate so that fuzzers stressing a specific subsystem go in to the same PR. \n\nThe reason I do that is that if the fuzzers uncover potential problems in our code base the fuzzing PR might need attention not only from `test/` maintainers but also from experts on the specific subsystem being stressed.\n\nThis PR is a good example: this PR adds a PSBT fuzzer which means that a",https://github.com/bitcoin/bitcoin/pull/17136#issuecomment-542119819,542119819,
laanwj,2019-10-15 09:20:49,"> OTOH I'm not entirely convinced that it is a good idea to group unrelated fuzzers (such as for example the PSBT fuzzers and Miniscript fuzzers) in to the same PR in order to keep the PR list short :)\n\nI don't think anyone but the maintainers ever cares about keeping the PR list clean. Feel free to ignore my remark, but don't expect attention from me any time soon on these then.\n\nAlso, *h",https://github.com/bitcoin/bitcoin/pull/17136#issuecomment-542121038,542121038,
jb55,2019-10-15 18:32:57,"Concept ACK. I think the granular fuzz PRs are ok, it allows individuals from each subsystem to comment on them independently.",https://github.com/bitcoin/bitcoin/pull/17136#issuecomment-542346580,542346580,
practicalswift,2019-10-17 12:38:15,"These are the places where we process raw PSBT:\n\n```\nanalyzepsbt(JSONRPCRequest const&) ‚Üí DecodeBase64PSBT(PartiallySignedTransaction&, std::string const&, std::string&) ‚Üí DecodeRawPSBT(PartiallySignedTransaction&, std::string const&, std::string&)\ncombinepsbt(JSONRPCRequest const&) ‚Üí DecodeBase64PSBT(PartiallySignedTransaction&, std::string const&, std::string&) ‚Üí DecodeRawPSBT(PartiallyS",https://github.com/bitcoin/bitcoin/pull/17136#issuecomment-543154631,543154631,
practicalswift,2019-10-30 21:18:52,Rebased!,https://github.com/bitcoin/bitcoin/pull/17136#issuecomment-548116711,548116711,
EthanHeilman,2019-11-13 14:45:30,"I did some fuzzing of Bitcoin. I wish this had been around back then.\n\nConcept ACK",https://github.com/bitcoin/bitcoin/pull/17136#issuecomment-553434478,553434478,
practicalswift,2019-11-18 16:54:13,@MarcoFalke Thanks a lot for reviewing! Feedback addressed. Please re-review :),https://github.com/bitcoin/bitcoin/pull/17136#issuecomment-555106581,555106581,
MarcoFalke,2019-11-18 17:16:05,"re-ACK 49f4c7f0699e5e19ac6e41ef5b607392dd7a2983 üêü\n\n<details><summary>Show signature and timestamp</summary>\n\nSignature:\n\n```\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\nre-ACK 49f4c7f0699e5e19ac6e41ef5b607392dd7a2983 üêü\n-----BEGIN PGP SIGNATURE-----\n\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUgzewwAyitA7w1F5QgES5+wQunGnKQ4JT865NoAoBWVFg41msIC",https://github.com/bitcoin/bitcoin/pull/17136#issuecomment-555116481,555116481,
practicalswift,2019-11-18 17:18:20,@jonasnick You've shown interest in previous fuzzing harnesses - would you mind reviewing this one too? :),https://github.com/bitcoin/bitcoin/pull/17136#issuecomment-555117474,555117474,
MarcoFalke,2019-11-18 17:19:02,@practicalswift I think you mean @jonatack ? :),https://github.com/bitcoin/bitcoin/pull/17136#issuecomment-555117779,555117779,
practicalswift,2019-11-18 17:23:31,"Oh, sorry! Same mistake again! :)\n\nThanks for merging!",https://github.com/bitcoin/bitcoin/pull/17136#issuecomment-555119781,555119781,
jonatack,2019-11-18 17:26:04,"Yep, don't hesitate to ping me, I'm for the moment only a part-time contributor and often don't see things :)",https://github.com/bitcoin/bitcoin/pull/17136#issuecomment-555120834,555120834,
practicalswift,2019-11-18 17:35:34,"@jonatack Thanks! :)\n\n(BTW: It has been nice to follow your Bitcoin Core activity and progression during 2019 and I really enjoyed the recent podcast interview. I hope you become a full-time contributor during 2020!)",https://github.com/bitcoin/bitcoin/pull/17136#issuecomment-555124796,555124796,
jonatack,2019-11-18 17:38:30,Thanks @practicalswift! :heart_eyes: ,https://github.com/bitcoin/bitcoin/pull/17136#issuecomment-555126043,555126043,
MarcoFalke,2019-11-15 17:54:41,"```suggestion\n    const PSBTAnalysis analysis = AnalyzePSBT(psbt);\n```",https://github.com/bitcoin/bitcoin/pull/17136#discussion_r346941275,346941275,src/test/fuzz/psbt.cpp
MarcoFalke,2019-11-15 17:58:15,"Or just inline the `*tx` further down?\n\n```suggestion\n        const CMutableTransaction& mtx = *tx;\n```",https://github.com/bitcoin/bitcoin/pull/17136#discussion_r346942582,346942582,src/test/fuzz/psbt.cpp
MarcoFalke,2019-11-15 18:34:09,:eye: ,https://github.com/bitcoin/bitcoin/pull/17136#discussion_r346956204,346956204,test/fuzz/test_runner.py
practicalswift,2019-11-18 16:52:22,"Oh, good catch. Thanks!",https://github.com/bitcoin/bitcoin/pull/17136#discussion_r347493382,347493382,src/test/fuzz/psbt.cpp
practicalswift,2019-11-18 16:53:23,Fixed!,https://github.com/bitcoin/bitcoin/pull/17136#discussion_r347493955,347493955,src/test/fuzz/psbt.cpp
practicalswift,2019-11-18 16:53:30,Removed!,https://github.com/bitcoin/bitcoin/pull/17136#discussion_r347494029,347494029,test/fuzz/test_runner.py
