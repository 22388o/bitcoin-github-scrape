[
  {
    "sha": "876794e3086d21ebaddfa868bc7bd10ce2fead45",
    "node_id": "C_kwDOABII59oAKDg3Njc5NGUzMDg2ZDIxZWJhZGRmYTg2OGJjN2JkMTBjZTJmZWFkNDU",
    "commit": {
      "author": {
        "name": "Douglas Chimento",
        "email": "dchimento@gmail.com",
        "date": "2021-12-02T11:17:36Z"
      },
      "committer": {
        "name": "Douglas Chimento",
        "email": "dchimento@gmail.com",
        "date": "2021-12-02T11:17:36Z"
      },
      "message": "test: Add functional test for -maxuploadtarget with byte unit '1M'",
      "tree": {
        "sha": "d4f747b6b1141edabedb9fba6834200033514a2d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d4f747b6b1141edabedb9fba6834200033514a2d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/876794e3086d21ebaddfa868bc7bd10ce2fead45",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQHIBAABCAAyFiEEFt7wA8cqIHRePmNa0a1maOubxakFAmGoq40UHGRjaGltZW50\nb0BnbWFpbC5jb20ACgkQ0a1maOubxamIRQv/YrKQAqDskaEJSP+WCGiBgQRDFicj\nUFBlR0G10B1RhB1pgKa0uEAdleC+Xv5/QfSjhpaMBfYiL8ZlHeEGEZYIoj2lPIy4\n511/R/oiL0FWv0JkGfXDqvg2D/w8jGqbr0ovVVJRnRjjDSocosc+G1RG2De47F2Y\nvfLrqXetQMaprxZ5MfJTZef7/g+DD9K7fDtZU6Ohtp6D66LPGgErGtltkXTFaRYQ\noU9ItBYFRvvxYZX0OIF+/GSlWMoqTlDRTcdDbM1l0Qt65x8pZswNyBXylVgqyN5Q\nMJbZYjHGQmyp0XtUDPRX97I9sr5MFyXwdTzsowAHPiMlaWgruucUAPFaGWkYnldd\njVrOLsCsdme5ZOQHNDk3GEtlTMtWIw4ha3pEe0Hb8z3UalqkRT1sjjQumkDf5s2u\nDgPERc8emrubKlIMNIo89Y/Yixl+/3VG8LBInPcQwYmlz0Qq4OMIY1Vscrtm98BT\nPJTik8rVcVb9eb/a0V95AyBSWn8SdjwWO5W/\n=FND8\n-----END PGP SIGNATURE-----",
        "payload": "tree d4f747b6b1141edabedb9fba6834200033514a2d\nparent 6acda4b00b3fc1bfac02f5de590e1a5386cbc779\nauthor Douglas Chimento <dchimento@gmail.com> 1638443856 +0200\ncommitter Douglas Chimento <dchimento@gmail.com> 1638443856 +0200\n\ntest: Add functional test for -maxuploadtarget with byte unit '1M'\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/876794e3086d21ebaddfa868bc7bd10ce2fead45",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/876794e3086d21ebaddfa868bc7bd10ce2fead45",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/876794e3086d21ebaddfa868bc7bd10ce2fead45/comments",
    "author": {
      "login": "dougEfresh",
      "id": 976425,
      "node_id": "MDQ6VXNlcjk3NjQyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/976425?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougEfresh",
      "html_url": "https://github.com/dougEfresh",
      "followers_url": "https://api.github.com/users/dougEfresh/followers",
      "following_url": "https://api.github.com/users/dougEfresh/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougEfresh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougEfresh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougEfresh/subscriptions",
      "organizations_url": "https://api.github.com/users/dougEfresh/orgs",
      "repos_url": "https://api.github.com/users/dougEfresh/repos",
      "events_url": "https://api.github.com/users/dougEfresh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougEfresh/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dougEfresh",
      "id": 976425,
      "node_id": "MDQ6VXNlcjk3NjQyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/976425?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dougEfresh",
      "html_url": "https://github.com/dougEfresh",
      "followers_url": "https://api.github.com/users/dougEfresh/followers",
      "following_url": "https://api.github.com/users/dougEfresh/following{/other_user}",
      "gists_url": "https://api.github.com/users/dougEfresh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dougEfresh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dougEfresh/subscriptions",
      "organizations_url": "https://api.github.com/users/dougEfresh/orgs",
      "repos_url": "https://api.github.com/users/dougEfresh/repos",
      "events_url": "https://api.github.com/users/dougEfresh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dougEfresh/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6acda4b00b3fc1bfac02f5de590e1a5386cbc779",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6acda4b00b3fc1bfac02f5de590e1a5386cbc779",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6acda4b00b3fc1bfac02f5de590e1a5386cbc779"
      }
    ],
    "stats": {
      "total": 31,
      "additions": 16,
      "deletions": 15
    },
    "files": [
      {
        "sha": "9896d1d5df2d43ecec64a710a4a6c360ea721a8f",
        "filename": "test/functional/feature_maxuploadtarget.py",
        "status": "modified",
        "additions": 16,
        "deletions": 15,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/876794e3086d21ebaddfa868bc7bd10ce2fead45/test/functional/feature_maxuploadtarget.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/876794e3086d21ebaddfa868bc7bd10ce2fead45/test/functional/feature_maxuploadtarget.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_maxuploadtarget.py?ref=876794e3086d21ebaddfa868bc7bd10ce2fead45",
        "patch": "@@ -140,25 +140,26 @@ def run_test(self):\n \n         self.nodes[0].disconnect_p2ps()\n \n-        self.log.info(\"Restarting node 0 with download permission and 1MB maxuploadtarget\")\n-        self.restart_node(0, [\"-whitelist=download@127.0.0.1\", \"-maxuploadtarget=1\"])\n+        for upload_target in ['1', '1M']:\n+            self.log.info(\"Restarting node 0 with download permission and 1MB maxuploadtarget\")\n+            self.restart_node(0, [\"-whitelist=download@127.0.0.1\", f\"-maxuploadtarget={upload_target}\"])\n \n-        # Reconnect to self.nodes[0]\n-        peer = self.nodes[0].add_p2p_connection(TestP2PConn())\n+            # Reconnect to self.nodes[0]\n+            peer = self.nodes[0].add_p2p_connection(TestP2PConn())\n \n-        #retrieve 20 blocks which should be enough to break the 1MB limit\n-        getdata_request.inv = [CInv(MSG_BLOCK, big_new_block)]\n-        for i in range(20):\n-            peer.send_and_ping(getdata_request)\n-            assert_equal(peer.block_receive_map[big_new_block], i+1)\n+            #retrieve 20 blocks which should be enough to break the 1MB limit\n+            getdata_request.inv = [CInv(MSG_BLOCK, big_new_block)]\n+            for i in range(20):\n+                peer.send_and_ping(getdata_request)\n+                assert_equal(peer.block_receive_map[big_new_block], i+1)\n \n-        getdata_request.inv = [CInv(MSG_BLOCK, big_old_block)]\n-        peer.send_and_ping(getdata_request)\n+            getdata_request.inv = [CInv(MSG_BLOCK, big_old_block)]\n+            peer.send_and_ping(getdata_request)\n \n-        self.log.info(\"Peer still connected after trying to download old block (download permission)\")\n-        peer_info = self.nodes[0].getpeerinfo()\n-        assert_equal(len(peer_info), 1)  # node is still connected\n-        assert_equal(peer_info[0]['permissions'], ['download'])\n+            self.log.info(\"Peer still connected after trying to download old block (download permission)\")\n+            peer_info = self.nodes[0].getpeerinfo()\n+            assert_equal(len(peer_info), 1)  # node is still connected\n+            assert_equal(peer_info[0]['permissions'], ['download'])\n \n \n if __name__ == '__main__':"
      }
    ]
  }
]