[
  {
    "sha": "a1e13055c2c57913d8d57ca0978cef2fec1e6148",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphMWUxMzA1NWMyYzU3OTEzZDhkNTdjYTA5NzhjZWYyZmVjMWU2MTQ4",
    "commit": {
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@gmail.com",
        "date": "2018-02-05T22:46:06Z"
      },
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@gmail.com",
        "date": "2018-02-05T22:48:47Z"
      },
      "message": "Clarify help messages for path args to mention datadir prefix\n\nChange `-conf`'s and others' help messages to indicate that relative path\nvalues will be prefixed by the datadir path. This behavior is confusing when\nattempting to specify a configuration file in the current directory with\n`-conf=bitcoin.conf`, but loading the `bitcoin.conf` file in ~/.bitcoin\ndatadir.",
      "tree": {
        "sha": "7d51432d4768b3b6ce308c2b6ca382b422c6834b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7d51432d4768b3b6ce308c2b6ca382b422c6834b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a1e13055c2c57913d8d57ca0978cef2fec1e6148",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a1e13055c2c57913d8d57ca0978cef2fec1e6148",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a1e13055c2c57913d8d57ca0978cef2fec1e6148",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a1e13055c2c57913d8d57ca0978cef2fec1e6148/comments",
    "author": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2a30e67d20f76bbcd9a7d445f616f005316e0a1a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2a30e67d20f76bbcd9a7d445f616f005316e0a1a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2a30e67d20f76bbcd9a7d445f616f005316e0a1a"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 5,
      "deletions": 5
    },
    "files": [
      {
        "sha": "8fc708be6b91acacf15e12b9afa7d1b8d50f9f4d",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a1e13055c2c57913d8d57ca0978cef2fec1e6148/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a1e13055c2c57913d8d57ca0978cef2fec1e6148/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=a1e13055c2c57913d8d57ca0978cef2fec1e6148",
        "patch": "@@ -35,7 +35,7 @@ std::string HelpMessageCli()\n     std::string strUsage;\n     strUsage += HelpMessageGroup(_(\"Options:\"));\n     strUsage += HelpMessageOpt(\"-?\", _(\"This help message\"));\n-    strUsage += HelpMessageOpt(\"-conf=<file>\", strprintf(_(\"Specify configuration file (default: %s)\"), BITCOIN_CONF_FILENAME));\n+    strUsage += HelpMessageOpt(\"-conf=<file>\", strprintf(_(\"Specify configuration file. Relative paths will be prefixed by datadir location. (default: %s)\"), BITCOIN_CONF_FILENAME));\n     strUsage += HelpMessageOpt(\"-datadir=<dir>\", _(\"Specify data directory\"));\n     strUsage += HelpMessageOpt(\"-getinfo\", _(\"Get general information from the remote server. Note that unlike server-side RPC calls, the results of -getinfo is the result of multiple non-atomic requests. Some entries in the result may represent results from different states (e.g. wallet balance may be as of a different block from the chain state reported)\"));\n     AppendParamsHelpMessages(strUsage);"
      },
      {
        "sha": "50643ff96ba8346d3c0a2f655268c8fbec8d58c9",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a1e13055c2c57913d8d57ca0978cef2fec1e6148/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a1e13055c2c57913d8d57ca0978cef2fec1e6148/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=a1e13055c2c57913d8d57ca0978cef2fec1e6148",
        "patch": "@@ -336,7 +336,7 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += HelpMessageOpt(\"-blockreconstructionextratxn=<n>\", strprintf(_(\"Extra transactions to keep in memory for compact block reconstructions (default: %u)\"), DEFAULT_BLOCK_RECONSTRUCTION_EXTRA_TXN));\n     if (showDebug)\n         strUsage += HelpMessageOpt(\"-blocksonly\", strprintf(_(\"Whether to operate in a blocks only mode (default: %u)\"), DEFAULT_BLOCKSONLY));\n-    strUsage += HelpMessageOpt(\"-conf=<file>\", strprintf(_(\"Specify configuration file (default: %s)\"), BITCOIN_CONF_FILENAME));\n+    strUsage += HelpMessageOpt(\"-conf=<file>\", strprintf(_(\"Specify configuration file. Relative paths will be prefixed by datadir location. (default: %s)\"), BITCOIN_CONF_FILENAME));\n     if (mode == HMM_BITCOIND)\n     {\n #if HAVE_DECL_DAEMON\n@@ -348,7 +348,7 @@ std::string HelpMessage(HelpMessageMode mode)\n         strUsage += HelpMessageOpt(\"-dbbatchsize\", strprintf(\"Maximum database write batch size in bytes (default: %u)\", nDefaultDbBatchSize));\n     }\n     strUsage += HelpMessageOpt(\"-dbcache=<n>\", strprintf(_(\"Set database cache size in megabytes (%d to %d, default: %d)\"), nMinDbCache, nMaxDbCache, nDefaultDbCache));\n-    strUsage += HelpMessageOpt(\"-debuglogfile=<file>\", strprintf(_(\"Specify location of debug log file: this can be an absolute path or a path relative to the data directory (default: %s)\"), DEFAULT_DEBUGLOGFILE));\n+    strUsage += HelpMessageOpt(\"-debuglogfile=<file>\", strprintf(_(\"Specify location of debug log file. Relative paths will be prefixed by a net-specific datadir location. (default: %s)\"), DEFAULT_DEBUGLOGFILE));\n     if (showDebug)\n         strUsage += HelpMessageOpt(\"-feefilter\", strprintf(\"Tell other nodes to filter invs to us by our mempool min fee (default: %u)\", DEFAULT_FEEFILTER));\n     strUsage += HelpMessageOpt(\"-loadblock=<file>\", _(\"Imports blocks from external blk000??.dat file on startup\"));\n@@ -362,7 +362,7 @@ std::string HelpMessage(HelpMessageMode mode)\n         -GetNumCores(), MAX_SCRIPTCHECK_THREADS, DEFAULT_SCRIPTCHECK_THREADS));\n     strUsage += HelpMessageOpt(\"-persistmempool\", strprintf(_(\"Whether to save the mempool on shutdown and load on restart (default: %u)\"), DEFAULT_PERSIST_MEMPOOL));\n #ifndef WIN32\n-    strUsage += HelpMessageOpt(\"-pid=<file>\", strprintf(_(\"Specify pid file (default: %s)\"), BITCOIN_PID_FILENAME));\n+    strUsage += HelpMessageOpt(\"-pid=<file>\", strprintf(_(\"Specify pid file. Relative paths will be prefixed by a net-specific datadir location. (default: %s)\"), BITCOIN_PID_FILENAME));\n #endif\n     strUsage += HelpMessageOpt(\"-prune=<n>\", strprintf(_(\"Reduce storage requirements by enabling pruning (deleting) of old blocks. This allows the pruneblockchain RPC to be called to delete specific blocks, and enables automatic pruning of old blocks if a target size in MiB is provided. This mode is incompatible with -txindex and -rescan. \"\n             \"Warning: Reverting this setting requires re-downloading the entire blockchain. \"\n@@ -500,7 +500,7 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += HelpMessageOpt(\"-rpcallowip=<ip>\", _(\"Allow JSON-RPC connections from specified source. Valid for <ip> are a single IP (e.g. 1.2.3.4), a network/netmask (e.g. 1.2.3.4/255.255.255.0) or a network/CIDR (e.g. 1.2.3.4/24). This option can be specified multiple times\"));\n     strUsage += HelpMessageOpt(\"-rpcauth=<userpw>\", _(\"Username and hashed password for JSON-RPC connections. The field <userpw> comes in the format: <USERNAME>:<SALT>$<HASH>. A canonical python script is included in share/rpcuser. The client then connects normally using the rpcuser=<USERNAME>/rpcpassword=<PASSWORD> pair of arguments. This option can be specified multiple times\"));\n     strUsage += HelpMessageOpt(\"-rpcbind=<addr>[:port]\", _(\"Bind to given address to listen for JSON-RPC connections. This option is ignored unless -rpcallowip is also passed. Port is optional and overrides -rpcport. Use [host]:port notation for IPv6. This option can be specified multiple times (default: 127.0.0.1 and ::1 i.e., localhost, or if -rpcallowip has been specified, 0.0.0.0 and :: i.e., all addresses)\"));\n-    strUsage += HelpMessageOpt(\"-rpccookiefile=<loc>\", _(\"Location of the auth cookie (default: data dir)\"));\n+    strUsage += HelpMessageOpt(\"-rpccookiefile=<loc>\", _(\"Location of the auth cookie. Relative paths will be prefixed by a net-specific datadir location. (default: data dir)\"));\n     strUsage += HelpMessageOpt(\"-rpcpassword=<pw>\", _(\"Password for JSON-RPC connections\"));\n     strUsage += HelpMessageOpt(\"-rpcport=<port>\", strprintf(_(\"Listen for JSON-RPC connections on <port> (default: %u or testnet: %u)\"), defaultBaseParams->RPCPort(), testnetBaseParams->RPCPort()));\n     strUsage += HelpMessageOpt(\"-rpcserialversion\", strprintf(_(\"Sets the serialization of raw transaction or block hex returned in non-verbose mode, non-segwit(0) or segwit(1) (default: %d)\"), DEFAULT_RPC_SERIALIZE_VERSION));"
      }
    ]
  },
  {
    "sha": "54604600c3de6cb18540c0911127173f68ad246c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NDYwNDYwMGMzZGU2Y2IxODU0MGMwOTExMTI3MTczZjY4YWQyNDZj",
    "commit": {
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@gmail.com",
        "date": "2018-01-31T03:33:49Z"
      },
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@gmail.com",
        "date": "2018-02-05T22:48:59Z"
      },
      "message": "Add AbsPathForConfigVal to consolidate datadir prefixing for path args\n\nMost commandline/config args are interpreted as relative to datadir if\nnot passed absolute. Consolidate the logic for this normalization.",
      "tree": {
        "sha": "b778b12ff044d505836aac17225354451e950515",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b778b12ff044d505836aac17225354451e950515"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/54604600c3de6cb18540c0911127173f68ad246c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/54604600c3de6cb18540c0911127173f68ad246c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/54604600c3de6cb18540c0911127173f68ad246c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/54604600c3de6cb18540c0911127173f68ad246c/comments",
    "author": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a1e13055c2c57913d8d57ca0978cef2fec1e6148",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a1e13055c2c57913d8d57ca0978cef2fec1e6148",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a1e13055c2c57913d8d57ca0978cef2fec1e6148"
      }
    ],
    "stats": {
      "total": 36,
      "additions": 20,
      "deletions": 16
    },
    "files": [
      {
        "sha": "cdd2e67a6998f459b594400e0500f9612a1b3e91",
        "filename": "src/rpc/protocol.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/54604600c3de6cb18540c0911127173f68ad246c/src/rpc/protocol.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/54604600c3de6cb18540c0911127173f68ad246c/src/rpc/protocol.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/protocol.cpp?ref=54604600c3de6cb18540c0911127173f68ad246c",
        "patch": "@@ -72,9 +72,7 @@ static fs::path GetAuthCookieFile(bool temp=false)\n     if (temp) {\n         arg += \".tmp\";\n     }\n-    fs::path path(arg);\n-    if (!path.is_complete()) path = GetDataDir() / path;\n-    return path;\n+    return AbsPathForConfigVal(fs::path(arg));\n }\n \n bool GenerateAuthCookie(std::string *cookie_out)"
      },
      {
        "sha": "6738bbc6e4470aa5904b0cb61e9b273e470a858a",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 13,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/54604600c3de6cb18540c0911127173f68ad246c/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/54604600c3de6cb18540c0911127173f68ad246c/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=54604600c3de6cb18540c0911127173f68ad246c",
        "patch": "@@ -4,6 +4,7 @@\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #include <util.h>\n+#include <fs.h>\n \n #include <chainparamsbase.h>\n #include <random.h>\n@@ -188,11 +189,7 @@ static void DebugPrintInit()\n fs::path GetDebugLogPath()\n {\n     fs::path logfile(gArgs.GetArg(\"-debuglogfile\", DEFAULT_DEBUGLOGFILE));\n-    if (logfile.is_absolute()) {\n-        return logfile;\n-    } else {\n-        return GetDataDir() / logfile;\n-    }\n+    return AbsPathForConfigVal(logfile);\n }\n \n bool OpenDebugLog()\n@@ -624,11 +621,7 @@ void ClearDatadirCache()\n \n fs::path GetConfigFile(const std::string& confPath)\n {\n-    fs::path pathConfigFile(confPath);\n-    if (!pathConfigFile.is_complete())\n-        pathConfigFile = GetDataDir(false) / pathConfigFile;\n-\n-    return pathConfigFile;\n+    return AbsPathForConfigVal(fs::path(confPath), false);\n }\n \n void ArgsManager::ReadConfigFile(const std::string& confPath)\n@@ -663,9 +656,7 @@ void ArgsManager::ReadConfigFile(const std::string& confPath)\n #ifndef WIN32\n fs::path GetPidFile()\n {\n-    fs::path pathPidFile(gArgs.GetArg(\"-pid\", BITCOIN_PID_FILENAME));\n-    if (!pathPidFile.is_complete()) pathPidFile = GetDataDir() / pathPidFile;\n-    return pathPidFile;\n+    return AbsPathForConfigVal(fs::path(gArgs.GetArg(\"-pid\", BITCOIN_PID_FILENAME)));\n }\n \n void CreatePidFile(const fs::path &path, pid_t pid)\n@@ -936,3 +927,8 @@ int64_t GetStartupTime()\n {\n     return nStartupTime;\n }\n+\n+fs::path AbsPathForConfigVal(const fs::path& path, bool net_specific)\n+{\n+    return fs::absolute(path, GetDataDir(net_specific));\n+}"
      },
      {
        "sha": "05138a9bfed958f7850a07b5c52f1fd499d0ff73",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/54604600c3de6cb18540c0911127173f68ad246c/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/54604600c3de6cb18540c0911127173f68ad246c/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=54604600c3de6cb18540c0911127173f68ad246c",
        "patch": "@@ -191,6 +191,16 @@ bool OpenDebugLog();\n void ShrinkDebugFile();\n void runCommand(const std::string& strCommand);\n \n+/**\n+ * Most paths passed as configuration arguments are treated as relative to\n+ * the datadir if they are not absolute.\n+ *\n+ * @param path The path to be conditionally prefixed with datadir.\n+ * @param net_specific Forwarded to GetDataDir().\n+ * @return The normalized path.\n+ */\n+fs::path AbsPathForConfigVal(const fs::path& path, bool net_specific = true);\n+\n inline bool IsSwitchChar(char c)\n {\n #ifdef WIN32"
      }
    ]
  }
]