[
  {
    "sha": "e2195037116f47b11b66452351dba4fe606423a2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplMjE5NTAzNzExNmY0N2IxMWI2NjQ1MjM1MWRiYTRmZTYwNjQyM2Ey",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2016-03-03T12:28:07Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2016-03-03T12:31:26Z"
      },
      "message": "Fix memleak in TorController [rework]\n\nIt looks like, TorController::disconnected_cb(TorControlConnection&\nconn) gets called multiple times which results in multiple event_new().\n\nAvoid this by creating the event only once in the constructore, and\ndeleting it only once in the destructor (thanks to Cory Fields for the\nidea).\n\nReplaces the fix by Jonas Schnelli in #7610, see discussion there.",
      "tree": {
        "sha": "649891536f56b5f2f0909b23a0883d38fbc1ffb2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/649891536f56b5f2f0909b23a0883d38fbc1ffb2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e2195037116f47b11b66452351dba4fe606423a2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e2195037116f47b11b66452351dba4fe606423a2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e2195037116f47b11b66452351dba4fe606423a2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e2195037116f47b11b66452351dba4fe606423a2/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1b68de35250e7c00105eac5c2533b97f4e97dc27",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1b68de35250e7c00105eac5c2533b97f4e97dc27",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1b68de35250e7c00105eac5c2533b97f4e97dc27"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 9,
      "deletions": 4
    },
    "files": [
      {
        "sha": "a04b5c30242f12d696d45dde96d78f71271e5eca",
        "filename": "src/torcontrol.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 4,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2195037116f47b11b66452351dba4fe606423a2/src/torcontrol.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2195037116f47b11b66452351dba4fe606423a2/src/torcontrol.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/torcontrol.cpp?ref=e2195037116f47b11b66452351dba4fe606423a2",
        "patch": "@@ -398,6 +398,9 @@ TorController::TorController(struct event_base* base, const std::string& target)\n     target(target), conn(base), reconnect(true), reconnect_ev(0),\n     reconnect_timeout(RECONNECT_TIMEOUT_START)\n {\n+    reconnect_ev = event_new(base, -1, 0, reconnect_cb, this);\n+    if (!reconnect_ev)\n+        LogPrintf(\"tor: Failed to create event for reconnection: out of memory?\\n\");\n     // Start connection attempts immediately\n     if (!conn.Connect(target, boost::bind(&TorController::connected_cb, this, _1),\n          boost::bind(&TorController::disconnected_cb, this, _1) )) {\n@@ -413,8 +416,10 @@ TorController::TorController(struct event_base* base, const std::string& target)\n \n TorController::~TorController()\n {\n-    if (reconnect_ev)\n-        event_del(reconnect_ev);\n+    if (reconnect_ev) {\n+        event_free(reconnect_ev);\n+        reconnect_ev = 0;\n+    }\n     if (service.IsValid()) {\n         RemoveLocal(service);\n     }\n@@ -626,8 +631,8 @@ void TorController::disconnected_cb(TorControlConnection& conn)\n \n     // Single-shot timer for reconnect. Use exponential backoff.\n     struct timeval time = MillisToTimeval(int64_t(reconnect_timeout * 1000.0));\n-    reconnect_ev = event_new(base, -1, 0, reconnect_cb, this);\n-    event_add(reconnect_ev, &time);\n+    if (reconnect_ev)\n+        event_add(reconnect_ev, &time);\n     reconnect_timeout *= RECONNECT_TIMEOUT_EXP;\n }\n "
      }
    ]
  }
]