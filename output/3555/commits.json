[
  {
    "sha": "cf74e8cb5eed90cbb14ed40d834c30ef9d37c443",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjZjc0ZThjYjVlZWQ5MGNiYjE0ZWQ0MGQ4MzRjMzBlZjlkMzdjNDQz",
    "commit": {
      "author": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2013-12-03T11:47:44Z"
      },
      "committer": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2013-12-03T11:47:44Z"
      },
      "message": "Merge pull request #3320 from laanwj/2013_11_cli_split\n\nbitcoin-cli: remove unneeded dependencies (only minor code movement)",
      "tree": {
        "sha": "115a15599169cb7fbcaa0a76c38c3c444dbaf068",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/115a15599169cb7fbcaa0a76c38c3c444dbaf068"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cf74e8cb5eed90cbb14ed40d834c30ef9d37c443",
      "comment_count": 1,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cf74e8cb5eed90cbb14ed40d834c30ef9d37c443",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cf74e8cb5eed90cbb14ed40d834c30ef9d37c443",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cf74e8cb5eed90cbb14ed40d834c30ef9d37c443/comments",
    "author": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0563ee952c299c7b796b787c8b5251beef8bf6ee",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0563ee952c299c7b796b787c8b5251beef8bf6ee",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0563ee952c299c7b796b787c8b5251beef8bf6ee"
      },
      {
        "sha": "0b47fe6bdc14e942bc886a08a55cc183c6820636",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0b47fe6bdc14e942bc886a08a55cc183c6820636",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0b47fe6bdc14e942bc886a08a55cc183c6820636"
      }
    ],
    "stats": {
      "total": 251,
      "additions": 144,
      "deletions": 107
    },
    "files": [
      {
        "sha": "9d3365fd60308dfb17c7e8e5a1a0406e7f7ea084",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 30,
        "deletions": 15,
        "changes": 45,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cf74e8cb5eed90cbb14ed40d834c30ef9d37c443/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cf74e8cb5eed90cbb14ed40d834c30ef9d37c443/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=cf74e8cb5eed90cbb14ed40d834c30ef9d37c443",
        "patch": "@@ -3,7 +3,7 @@ include Makefile.include\n AM_CPPFLAGS += -I$(top_srcdir)/src/leveldb/helpers/memenv \\\n   -I$(builddir)\n \n-noinst_LIBRARIES = libbitcoin.a\n+noinst_LIBRARIES = libbitcoin_server.a libbitcoin_common.a libbitcoin_cli.a\n \n bin_PROGRAMS = bitcoind bitcoin-cli\n \n@@ -33,23 +33,40 @@ obj/build.h: FORCE\n \t  $(abs_top_srcdir)\n version.o: obj/build.h\n \n-libbitcoin_a_SOURCES = addrman.cpp alert.cpp allocators.cpp \\\n-  rpcclient.cpp \\\n-  rpcprotocol.cpp \\\n+libbitcoin_server_a_SOURCES = addrman.cpp alert.cpp \\\n   rpcserver.cpp \\\n   bloom.cpp \\\n-  chainparams.cpp checkpoints.cpp core.cpp coins.cpp crypter.cpp db.cpp hash.cpp \\\n-  init.cpp key.cpp keystore.cpp leveldbwrapper.cpp main.cpp miner.cpp \\\n-  netbase.cpp net.cpp noui.cpp protocol.cpp rpcblockchain.cpp rpcdump.cpp \\\n-  rpcmining.cpp rpcnet.cpp rpcrawtransaction.cpp rpcwallet.cpp script.cpp \\\n-  sync.cpp txdb.cpp txmempool.cpp util.cpp version.cpp wallet.cpp walletdb.cpp $(JSON_H) \\\n+  chainparams.cpp checkpoints.cpp coins.cpp crypter.cpp db.cpp \\\n+  init.cpp keystore.cpp leveldbwrapper.cpp main.cpp miner.cpp \\\n+  net.cpp noui.cpp rpcblockchain.cpp rpcdump.cpp \\\n+  rpcmining.cpp rpcnet.cpp rpcrawtransaction.cpp rpcwallet.cpp \\\n+  txdb.cpp txmempool.cpp wallet.cpp walletdb.cpp $(JSON_H) \\\n+  $(BITCOIN_CORE_H)\n+\n+libbitcoin_common_a_SOURCES = \\\n+  allocators.cpp \\\n+  chainparams.cpp \\\n+  core.cpp \\\n+  hash.cpp \\\n+  key.cpp \\\n+  netbase.cpp \\\n+  protocol.cpp \\\n+  rpcprotocol.cpp \\\n+  script.cpp \\\n+  sync.cpp \\\n+  util.cpp \\\n+  version.cpp \\\n   $(BITCOIN_CORE_H)\n \n-nodist_libbitcoin_a_SOURCES = $(top_srcdir)/src/obj/build.h\n+libbitcoin_cli_a_SOURCES = \\\n+  rpcclient.cpp \\\n+  $(BITCOIN_CORE_H)\n+\n+nodist_libbitcoin_common_a_SOURCES = $(top_srcdir)/src/obj/build.h\n #\n \n # bitcoind binary #\n-bitcoind_LDADD = libbitcoin.a leveldb/libleveldb.a leveldb/libmemenv.a \\\n+bitcoind_LDADD = libbitcoin_server.a libbitcoin_cli.a libbitcoin_common.a leveldb/libleveldb.a leveldb/libmemenv.a \\\n   $(BOOST_LIBS)\n bitcoind_SOURCES = bitcoind.cpp\n #\n@@ -62,15 +79,13 @@ AM_CPPFLAGS += $(BDB_CPPFLAGS)\n bitcoind_LDADD += $(BDB_LIBS)\n \n # bitcoin-cli binary #\n-bitcoin_cli_LDADD = libbitcoin.a leveldb/libleveldb.a leveldb/libmemenv.a \\\n-  $(BOOST_LIBS)\n+bitcoin_cli_LDADD = libbitcoin_cli.a libbitcoin_common.a $(BOOST_LIBS)\n bitcoin_cli_SOURCES = bitcoin-cli.cpp\n #\n \n if TARGET_WINDOWS\n bitcoin_cli_SOURCES += bitcoin-cli-res.rc\n endif\n-bitcoin_cli_LDADD += $(BDB_LIBS)\n \n leveldb/libleveldb.a: leveldb/libmemenv.a\n \n@@ -79,7 +94,7 @@ leveldb/%.a:\n \t  CC=\"$(CC)\" PLATFORM=$(TARGET_OS) AR=\"$(AR)\" $(LEVELDB_TARGET_FLAGS) \\\n \t  OPT=\"$(CXXFLAGS) $(CPPFLAGS)\"\n \n-qt/bitcoinstrings.cpp: $(libbitcoin_a_SOURCES)\n+qt/bitcoinstrings.cpp: $(libbitcoin_server_a_SOURCES) $(libbitcoin_common_a_SOURCES) $(libbitcoin_cli_a_SOURCES)\n \t@test -n $(XGETTEXT) || echo \"xgettext is required for updating translations\"\n \t@cd $(top_srcdir); XGETTEXT=$(XGETTEXT) share/qt/extract_strings_qt.py\n "
      },
      {
        "sha": "2e96a6b7dccfc70f0421acae046997168070845b",
        "filename": "src/Makefile.include",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cf74e8cb5eed90cbb14ed40d834c30ef9d37c443/src/Makefile.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cf74e8cb5eed90cbb14ed40d834c30ef9d37c443/src/Makefile.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.include?ref=cf74e8cb5eed90cbb14ed40d834c30ef9d37c443",
        "patch": "@@ -5,7 +5,9 @@ AM_CPPFLAGS =  $(INCLUDES) \\\n   $(BOOST_INCLUDES)\n AM_LDFLAGS = $(PTHREAD_CFLAGS)\n \n-LIBBITCOIN=$(top_builddir)/src/libbitcoin.a\n+LIBBITCOIN_SERVER=$(top_builddir)/src/libbitcoin_server.a\n+LIBBITCOIN_COMMON=$(top_builddir)/src/libbitcoin_common.a\n+LIBBITCOIN_CLI=$(top_builddir)/src/libbitcoin_cli.a\n LIBLEVELDB=$(top_builddir)/src/leveldb/libleveldb.a\n LIBMEMENV=$(top_builddir)/src/leveldb/libmemenv.a\n LIBBITCOINQT=$(top_builddir)/src/qt/libbitcoinqt.a"
      },
      {
        "sha": "04b75e7f1cdaedca6b7732fea58c8905a1963d4d",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cf74e8cb5eed90cbb14ed40d834c30ef9d37c443/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cf74e8cb5eed90cbb14ed40d834c30ef9d37c443/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=cf74e8cb5eed90cbb14ed40d834c30ef9d37c443",
        "patch": "@@ -42,7 +42,7 @@ static bool AppInitRPC(int argc, char* argv[])\n               \"  bitcoin-cli [options] help                \" + _(\"List commands\") + \"\\n\" +\n               \"  bitcoin-cli [options] help <command>      \" + _(\"Get help for a command\") + \"\\n\";\n \n-        strUsage += \"\\n\" + HelpMessage(HMM_BITCOIN_CLI);\n+        strUsage += \"\\n\" + HelpMessageCli(true);\n \n         fprintf(stdout, \"%s\", strUsage.c_str());\n         return false;"
      },
      {
        "sha": "e13d688158ad63d65a0ba54775ed2514313221bb",
        "filename": "src/bitcoind.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cf74e8cb5eed90cbb14ed40d834c30ef9d37c443/src/bitcoind.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cf74e8cb5eed90cbb14ed40d834c30ef9d37c443/src/bitcoind.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoind.cpp?ref=cf74e8cb5eed90cbb14ed40d834c30ef9d37c443",
        "patch": "@@ -87,6 +87,7 @@ bool AppInit(int argc, char* argv[])\n                   \"  bitcoind [options] help <command>      \" + _(\"Get help for a command\") + \"\\n\";\n \n             strUsage += \"\\n\" + HelpMessage(HMM_BITCOIND);\n+            strUsage += \"\\n\" + HelpMessageCli(false);\n \n             fprintf(stdout, \"%s\", strUsage.c_str());\n             return false;"
      },
      {
        "sha": "54722743e60bdfb37b43a9519aa1985477a554fc",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 63,
        "deletions": 84,
        "changes": 147,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cf74e8cb5eed90cbb14ed40d834c30ef9d37c443/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cf74e8cb5eed90cbb14ed40d834c30ef9d37c443/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=cf74e8cb5eed90cbb14ed40d834c30ef9d37c443",
        "patch": "@@ -37,7 +37,6 @@ using namespace boost;\n \n std::string strWalletFile;\n CWallet* pwalletMain;\n-CClientUIInterface uiInterface;\n \n #ifdef WIN32\n // Win32 LevelDB doesn't use filedescriptors, and the ones used for\n@@ -181,45 +180,43 @@ std::string HelpMessage(HelpMessageMode hmm)\n     strUsage += \"  -datadir=<dir>         \" + _(\"Specify data directory\") + \"\\n\";\n     strUsage += \"  -testnet               \" + _(\"Use the test network\") + \"\\n\";\n \n-    if(hmm == HMM_BITCOIND || hmm == HMM_BITCOIN_QT)\n-    {\n-        strUsage += \"  -pid=<file>            \" + _(\"Specify pid file (default: bitcoind.pid)\") + \"\\n\";\n-        strUsage += \"  -gen                   \" + _(\"Generate coins (default: 0)\") + \"\\n\";\n-        strUsage += \"  -wallet=<file>         \" + _(\"Specify wallet file (within data directory)\") + \"\\n\";\n-        strUsage += \"  -dbcache=<n>           \" + _(\"Set database cache size in megabytes (default: 25)\") + \"\\n\";\n-        strUsage += \"  -timeout=<n>           \" + _(\"Specify connection timeout in milliseconds (default: 5000)\") + \"\\n\";\n-        strUsage += \"  -proxy=<ip:port>       \" + _(\"Connect through socks proxy\") + \"\\n\";\n-        strUsage += \"  -socks=<n>             \" + _(\"Select the version of socks proxy to use (4-5, default: 5)\") + \"\\n\";\n-        strUsage += \"  -onion=<ip:port>         \" + _(\"Use proxy to reach tor hidden services (default: same as -proxy)\") + \"\\n\";\n-        strUsage += \"  -dns                   \" + _(\"Allow DNS lookups for -addnode, -seednode and -connect\") + \"\\n\";\n-        strUsage += \"  -port=<port>           \" + _(\"Listen for connections on <port> (default: 8333 or testnet: 18333)\") + \"\\n\";\n-        strUsage += \"  -maxconnections=<n>    \" + _(\"Maintain at most <n> connections to peers (default: 125)\") + \"\\n\";\n-        strUsage += \"  -addnode=<ip>          \" + _(\"Add a node to connect to and attempt to keep the connection open\") + \"\\n\";\n-        strUsage += \"  -connect=<ip>          \" + _(\"Connect only to the specified node(s)\") + \"\\n\";\n-        strUsage += \"  -seednode=<ip>         \" + _(\"Connect to a node to retrieve peer addresses, and disconnect\") + \"\\n\";\n-        strUsage += \"  -externalip=<ip>       \" + _(\"Specify your own public address\") + \"\\n\";\n-        strUsage += \"  -onlynet=<net>         \" + _(\"Only connect to nodes in network <net> (IPv4, IPv6 or Tor)\") + \"\\n\";\n-        strUsage += \"  -discover              \" + _(\"Discover own IP address (default: 1 when listening and no -externalip)\") + \"\\n\";\n-        strUsage += \"  -checkpoints           \" + _(\"Only accept block chain matching built-in checkpoints (default: 1)\") + \"\\n\";\n-        strUsage += \"  -listen                \" + _(\"Accept connections from outside (default: 1 if no -proxy or -connect)\") + \"\\n\";\n-        strUsage += \"  -bind=<addr>           \" + _(\"Bind to given address and always listen on it. Use [host]:port notation for IPv6\") + \"\\n\";\n-        strUsage += \"  -dnsseed               \" + _(\"Find peers using DNS lookup (default: 1 unless -connect)\") + \"\\n\";\n-        strUsage += \"  -banscore=<n>          \" + _(\"Threshold for disconnecting misbehaving peers (default: 100)\") + \"\\n\";\n-        strUsage += \"  -bantime=<n>           \" + _(\"Number of seconds to keep misbehaving peers from reconnecting (default: 86400)\") + \"\\n\";\n-        strUsage += \"  -maxreceivebuffer=<n>  \" + _(\"Maximum per-connection receive buffer, <n>*1000 bytes (default: 5000)\") + \"\\n\";\n-        strUsage += \"  -maxsendbuffer=<n>     \" + _(\"Maximum per-connection send buffer, <n>*1000 bytes (default: 1000)\") + \"\\n\";\n+    strUsage += \"  -pid=<file>            \" + _(\"Specify pid file (default: bitcoind.pid)\") + \"\\n\";\n+    strUsage += \"  -gen                   \" + _(\"Generate coins (default: 0)\") + \"\\n\";\n+    strUsage += \"  -wallet=<file>         \" + _(\"Specify wallet file (within data directory)\") + \"\\n\";\n+    strUsage += \"  -dbcache=<n>           \" + _(\"Set database cache size in megabytes (default: 25)\") + \"\\n\";\n+    strUsage += \"  -timeout=<n>           \" + _(\"Specify connection timeout in milliseconds (default: 5000)\") + \"\\n\";\n+    strUsage += \"  -proxy=<ip:port>       \" + _(\"Connect through socks proxy\") + \"\\n\";\n+    strUsage += \"  -socks=<n>             \" + _(\"Select the version of socks proxy to use (4-5, default: 5)\") + \"\\n\";\n+    strUsage += \"  -onion=<ip:port>         \" + _(\"Use proxy to reach tor hidden services (default: same as -proxy)\") + \"\\n\";\n+    strUsage += \"  -dns                   \" + _(\"Allow DNS lookups for -addnode, -seednode and -connect\") + \"\\n\";\n+    strUsage += \"  -port=<port>           \" + _(\"Listen for connections on <port> (default: 8333 or testnet: 18333)\") + \"\\n\";\n+    strUsage += \"  -maxconnections=<n>    \" + _(\"Maintain at most <n> connections to peers (default: 125)\") + \"\\n\";\n+    strUsage += \"  -addnode=<ip>          \" + _(\"Add a node to connect to and attempt to keep the connection open\") + \"\\n\";\n+    strUsage += \"  -connect=<ip>          \" + _(\"Connect only to the specified node(s)\") + \"\\n\";\n+    strUsage += \"  -seednode=<ip>         \" + _(\"Connect to a node to retrieve peer addresses, and disconnect\") + \"\\n\";\n+    strUsage += \"  -externalip=<ip>       \" + _(\"Specify your own public address\") + \"\\n\";\n+    strUsage += \"  -onlynet=<net>         \" + _(\"Only connect to nodes in network <net> (IPv4, IPv6 or Tor)\") + \"\\n\";\n+    strUsage += \"  -discover              \" + _(\"Discover own IP address (default: 1 when listening and no -externalip)\") + \"\\n\";\n+    strUsage += \"  -checkpoints           \" + _(\"Only accept block chain matching built-in checkpoints (default: 1)\") + \"\\n\";\n+    strUsage += \"  -listen                \" + _(\"Accept connections from outside (default: 1 if no -proxy or -connect)\") + \"\\n\";\n+    strUsage += \"  -bind=<addr>           \" + _(\"Bind to given address and always listen on it. Use [host]:port notation for IPv6\") + \"\\n\";\n+    strUsage += \"  -dnsseed               \" + _(\"Find peers using DNS lookup (default: 1 unless -connect)\") + \"\\n\";\n+    strUsage += \"  -banscore=<n>          \" + _(\"Threshold for disconnecting misbehaving peers (default: 100)\") + \"\\n\";\n+    strUsage += \"  -bantime=<n>           \" + _(\"Number of seconds to keep misbehaving peers from reconnecting (default: 86400)\") + \"\\n\";\n+    strUsage += \"  -maxreceivebuffer=<n>  \" + _(\"Maximum per-connection receive buffer, <n>*1000 bytes (default: 5000)\") + \"\\n\";\n+    strUsage += \"  -maxsendbuffer=<n>     \" + _(\"Maximum per-connection send buffer, <n>*1000 bytes (default: 1000)\") + \"\\n\";\n #ifdef USE_UPNP\n #if USE_UPNP\n-        strUsage += \"  -upnp                  \" + _(\"Use UPnP to map the listening port (default: 1 when listening)\") + \"\\n\";\n+    strUsage += \"  -upnp                  \" + _(\"Use UPnP to map the listening port (default: 1 when listening)\") + \"\\n\";\n #else\n-        strUsage += \"  -upnp                  \" + _(\"Use UPnP to map the listening port (default: 0)\") + \"\\n\";\n+    strUsage += \"  -upnp                  \" + _(\"Use UPnP to map the listening port (default: 0)\") + \"\\n\";\n #endif\n #endif\n-        strUsage += \"  -paytxfee=<amt>        \" + _(\"Fee per KB to add to transactions you send\") + \"\\n\";\n-        strUsage += \"  -debug=<category>      \" + _(\"Output debugging information (default: 0, supplying <category> is optional)\") + \"\\n\";\n-        strUsage +=                               _(\"If <category> is not supplied, output all debugging information.\") + \"\\n\";\n-        strUsage +=                               _(\"<category> can be:\");\n-        strUsage +=                                 \" addrman, alert, coindb, db, lock, rand, rpc, selectcoins, mempool, net\"; // Don't translate these and qt below\n+    strUsage += \"  -paytxfee=<amt>        \" + _(\"Fee per KB to add to transactions you send\") + \"\\n\";\n+    strUsage += \"  -debug=<category>      \" + _(\"Output debugging information (default: 0, supplying <category> is optional)\") + \"\\n\";\n+    strUsage +=                               _(\"If <category> is not supplied, output all debugging information.\") + \"\\n\";\n+    strUsage +=                               _(\"<category> can be:\");\n+    strUsage +=                                 \" addrman, alert, coindb, db, lock, rand, rpc, selectcoins, mempool, net\"; // Don't translate these and qt below\n     if (hmm == HMM_BITCOIN_QT)\n     {\n         strUsage += \", qt.\\n\";\n@@ -228,15 +225,14 @@ std::string HelpMessage(HelpMessageMode hmm)\n     {\n         strUsage += \".\\n\";\n     }\n-        strUsage += \"  -logtimestamps         \" + _(\"Prepend debug output with timestamp (default: 1)\") + \"\\n\";\n-        strUsage += \"  -shrinkdebugfile       \" + _(\"Shrink debug.log file on client startup (default: 1 when no -debug)\") + \"\\n\";\n-        strUsage += \"  -printtoconsole        \" + _(\"Send trace/debug info to console instead of debug.log file\") + \"\\n\";\n-        strUsage += \"  -regtest               \" + _(\"Enter regression test mode, which uses a special chain in which blocks can be \"\n-                                                \"solved instantly. This is intended for regression testing tools and app development.\") + \"\\n\";\n+    strUsage += \"  -logtimestamps         \" + _(\"Prepend debug output with timestamp (default: 1)\") + \"\\n\";\n+    strUsage += \"  -shrinkdebugfile       \" + _(\"Shrink debug.log file on client startup (default: 1 when no -debug)\") + \"\\n\";\n+    strUsage += \"  -printtoconsole        \" + _(\"Send trace/debug info to console instead of debug.log file\") + \"\\n\";\n+    strUsage += \"  -regtest               \" + _(\"Enter regression test mode, which uses a special chain in which blocks can be \"\n+                                            \"solved instantly. This is intended for regression testing tools and app development.\") + \"\\n\";\n #ifdef WIN32\n-        strUsage += \"  -printtodebugger       \" + _(\"Send trace/debug info to debugger\") + \"\\n\";\n+    strUsage += \"  -printtodebugger       \" + _(\"Send trace/debug info to debugger\") + \"\\n\";\n #endif\n-    }\n \n     if (hmm == HMM_BITCOIN_QT)\n     {\n@@ -250,53 +246,36 @@ std::string HelpMessage(HelpMessageMode hmm)\n #endif\n     }\n \n-    if (hmm == HMM_BITCOIND || hmm == HMM_BITCOIN_CLI)\n-    {\n-        strUsage += \"  -rpcconnect=<ip>       \" + _(\"Send commands to node running on <ip> (default: 127.0.0.1)\") + \"\\n\";\n-        strUsage += \"  -rpcwait               \" + _(\"Wait for RPC server to start\") + \"\\n\";\n-    }\n-\n     strUsage += \"  -rpcuser=<user>        \" + _(\"Username for JSON-RPC connections\") + \"\\n\";\n     strUsage += \"  -rpcpassword=<pw>      \" + _(\"Password for JSON-RPC connections\") + \"\\n\";\n-    if (hmm == HMM_BITCOIND || hmm == HMM_BITCOIN_QT)\n-    {\n-        strUsage += \"  -rpcport=<port>        \" + _(\"Listen for JSON-RPC connections on <port> (default: 8332 or testnet: 18332)\") + \"\\n\";\n-    } else {\n-        strUsage += \"  -rpcport=<port>        \" + _(\"Connect to JSON-RPC on <port> (default: 8332 or testnet: 18332)\") + \"\\n\";\n-    }\n-\n-    if(hmm == HMM_BITCOIND || hmm == HMM_BITCOIN_QT)\n-    {\n-        strUsage += \"  -rpcallowip=<ip>       \" + _(\"Allow JSON-RPC connections from specified IP address\") + \"\\n\";\n-        strUsage += \"  -rpcthreads=<n>        \" + _(\"Set the number of threads to service RPC calls (default: 4)\") + \"\\n\";\n-        strUsage += \"  -blocknotify=<cmd>     \" + _(\"Execute command when the best block changes (%s in cmd is replaced by block hash)\") + \"\\n\";\n-        strUsage += \"  -walletnotify=<cmd>    \" + _(\"Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)\") + \"\\n\";\n-        strUsage += \"  -alertnotify=<cmd>     \" + _(\"Execute command when a relevant alert is received or we see a really long fork (%s in cmd is replaced by message)\") + \"\\n\";\n-        strUsage += \"  -upgradewallet         \" + _(\"Upgrade wallet to latest format\") + \"\\n\";\n-        strUsage += \"  -keypool=<n>           \" + _(\"Set key pool size to <n> (default: 100)\") + \"\\n\";\n-        strUsage += \"  -rescan                \" + _(\"Rescan the block chain for missing wallet transactions\") + \"\\n\";\n-        strUsage += \"  -salvagewallet         \" + _(\"Attempt to recover private keys from a corrupt wallet.dat\") + \"\\n\";\n-        strUsage += \"  -checkblocks=<n>       \" + _(\"How many blocks to check at startup (default: 288, 0 = all)\") + \"\\n\";\n-        strUsage += \"  -checklevel=<n>        \" + _(\"How thorough the block verification is (0-4, default: 3)\") + \"\\n\";\n-        strUsage += \"  -txindex               \" + _(\"Maintain a full transaction index (default: 0)\") + \"\\n\";\n-        strUsage += \"  -loadblock=<file>      \" + _(\"Imports blocks from external blk000??.dat file\") + \"\\n\";\n-        strUsage += \"  -reindex               \" + _(\"Rebuild block chain index from current blk000??.dat files\") + \"\\n\";\n-        strUsage += \"  -par=<n>               \" + _(\"Set the number of script verification threads (up to 16, 0 = auto, <0 = leave that many cores free, default: 0)\") + \"\\n\";\n-\n-        strUsage += \"\\n\" + _(\"Block creation options:\") + \"\\n\";\n-        strUsage += \"  -blockminsize=<n>      \"   + _(\"Set minimum block size in bytes (default: 0)\") + \"\\n\";\n-        strUsage += \"  -blockmaxsize=<n>      \"   + _(\"Set maximum block size in bytes (default: 250000)\") + \"\\n\";\n-        strUsage += \"  -blockprioritysize=<n> \"   + _(\"Set maximum size of high-priority/low-fee transactions in bytes (default: 27000)\") + \"\\n\";\n-    }\n+    strUsage += \"  -rpcport=<port>        \" + _(\"Listen for JSON-RPC connections on <port> (default: 8332 or testnet: 18332)\") + \"\\n\";\n+\n+    strUsage += \"  -rpcallowip=<ip>       \" + _(\"Allow JSON-RPC connections from specified IP address\") + \"\\n\";\n+    strUsage += \"  -rpcthreads=<n>        \" + _(\"Set the number of threads to service RPC calls (default: 4)\") + \"\\n\";\n+    strUsage += \"  -blocknotify=<cmd>     \" + _(\"Execute command when the best block changes (%s in cmd is replaced by block hash)\") + \"\\n\";\n+    strUsage += \"  -walletnotify=<cmd>    \" + _(\"Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)\") + \"\\n\";\n+    strUsage += \"  -alertnotify=<cmd>     \" + _(\"Execute command when a relevant alert is received or we see a really long fork (%s in cmd is replaced by message)\") + \"\\n\";\n+    strUsage += \"  -upgradewallet         \" + _(\"Upgrade wallet to latest format\") + \"\\n\";\n+    strUsage += \"  -keypool=<n>           \" + _(\"Set key pool size to <n> (default: 100)\") + \"\\n\";\n+    strUsage += \"  -rescan                \" + _(\"Rescan the block chain for missing wallet transactions\") + \"\\n\";\n+    strUsage += \"  -salvagewallet         \" + _(\"Attempt to recover private keys from a corrupt wallet.dat\") + \"\\n\";\n+    strUsage += \"  -checkblocks=<n>       \" + _(\"How many blocks to check at startup (default: 288, 0 = all)\") + \"\\n\";\n+    strUsage += \"  -checklevel=<n>        \" + _(\"How thorough the block verification is (0-4, default: 3)\") + \"\\n\";\n+    strUsage += \"  -txindex               \" + _(\"Maintain a full transaction index (default: 0)\") + \"\\n\";\n+    strUsage += \"  -loadblock=<file>      \" + _(\"Imports blocks from external blk000??.dat file\") + \"\\n\";\n+    strUsage += \"  -reindex               \" + _(\"Rebuild block chain index from current blk000??.dat files\") + \"\\n\";\n+    strUsage += \"  -par=<n>               \" + _(\"Set the number of script verification threads (up to 16, 0 = auto, <0 = leave that many cores free, default: 0)\") + \"\\n\";\n+\n+    strUsage += \"\\n\" + _(\"Block creation options:\") + \"\\n\";\n+    strUsage += \"  -blockminsize=<n>      \"   + _(\"Set minimum block size in bytes (default: 0)\") + \"\\n\";\n+    strUsage += \"  -blockmaxsize=<n>      \"   + _(\"Set maximum block size in bytes (default: 250000)\") + \"\\n\";\n+    strUsage += \"  -blockprioritysize=<n> \"   + _(\"Set maximum size of high-priority/low-fee transactions in bytes (default: 27000)\") + \"\\n\";\n \n     strUsage += \"\\n\" + _(\"SSL options: (see the Bitcoin Wiki for SSL setup instructions)\") + \"\\n\";\n     strUsage += \"  -rpcssl                                  \" + _(\"Use OpenSSL (https) for JSON-RPC connections\") + \"\\n\";\n-    if (hmm == HMM_BITCOIND || hmm == HMM_BITCOIN_QT)\n-    {\n-        strUsage += \"  -rpcsslcertificatechainfile=<file.cert>  \" + _(\"Server certificate file (default: server.cert)\") + \"\\n\";\n-        strUsage += \"  -rpcsslprivatekeyfile=<file.pem>         \" + _(\"Server private key (default: server.pem)\") + \"\\n\";\n-        strUsage += \"  -rpcsslciphers=<ciphers>                 \" + _(\"Acceptable ciphers (default: TLSv1.2+HIGH:TLSv1+HIGH:!SSLv2:!aNULL:!eNULL:!3DES:@STRENGTH)\") + \"\\n\";\n-    }\n+    strUsage += \"  -rpcsslcertificatechainfile=<file.cert>  \" + _(\"Server certificate file (default: server.cert)\") + \"\\n\";\n+    strUsage += \"  -rpcsslprivatekeyfile=<file.pem>         \" + _(\"Server private key (default: server.pem)\") + \"\\n\";\n+    strUsage += \"  -rpcsslciphers=<ciphers>                 \" + _(\"Acceptable ciphers (default: TLSv1.2+HIGH:TLSv1+HIGH:!SSLv2:!aNULL:!eNULL:!3DES:@STRENGTH)\") + \"\\n\";\n \n     return strUsage;\n }"
      },
      {
        "sha": "018d2d5ea313d85d138d38ead4b07d81cc9824cf",
        "filename": "src/init.h",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cf74e8cb5eed90cbb14ed40d834c30ef9d37c443/src/init.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cf74e8cb5eed90cbb14ed40d834c30ef9d37c443/src/init.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.h?ref=cf74e8cb5eed90cbb14ed40d834c30ef9d37c443",
        "patch": "@@ -26,8 +26,7 @@ bool AppInit2(boost::thread_group& threadGroup, bool fForceServer);\n enum HelpMessageMode\n {\n     HMM_BITCOIND,\n-    HMM_BITCOIN_QT,\n-    HMM_BITCOIN_CLI\n+    HMM_BITCOIN_QT\n };\n \n std::string HelpMessage(HelpMessageMode mode);"
      },
      {
        "sha": "e302adc89f8eb845306df2ca095279d8bc5babd2",
        "filename": "src/qt/Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cf74e8cb5eed90cbb14ed40d834c30ef9d37c443/src/qt/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cf74e8cb5eed90cbb14ed40d834c30ef9d37c443/src/qt/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/Makefile.am?ref=cf74e8cb5eed90cbb14ed40d834c30ef9d37c443",
        "patch": "@@ -197,7 +197,7 @@ endif\n bitcoin_qt_CPPFLAGS = $(AM_CPPFLAGS) $(QT_INCLUDES) \\\n   -I$(top_srcdir)/src/qt/forms\n bitcoin_qt_SOURCES = bitcoin.cpp\n-bitcoin_qt_LDADD = libbitcoinqt.a $(LIBBITCOIN) $(LIBLEVELDB) $(LIBMEMENV) \\\n+bitcoin_qt_LDADD = libbitcoinqt.a $(LIBBITCOIN_SERVER) $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBLEVELDB) $(LIBMEMENV) \\\n   $(BOOST_LIBS) $(QT_LIBS) $(QT_DBUS_LIBS) $(QR_LIBS) $(PROTOBUF_LIBS) $(BDB_LIBS)\n \n # forms/foo.h -> forms/ui_foo.h"
      },
      {
        "sha": "29247a79a10b36845a8b4c8e1e3867d697e90b07",
        "filename": "src/qt/test/Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cf74e8cb5eed90cbb14ed40d834c30ef9d37c443/src/qt/test/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cf74e8cb5eed90cbb14ed40d834c30ef9d37c443/src/qt/test/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/Makefile.am?ref=cf74e8cb5eed90cbb14ed40d834c30ef9d37c443",
        "patch": "@@ -17,7 +17,7 @@ BUILT_SOURCES = $(TEST_QT_MOC_CPP)\n test_bitcoin_qt_CPPFLAGS = $(AM_CPPFLAGS) $(QT_INCLUDES) $(QT_TEST_INCLUDES)\n test_bitcoin_qt_SOURCES = test_main.cpp uritests.cpp paymentservertests.cpp $(TEST_QT_H)\n nodist_test_bitcoin_qt_SOURCES = $(TEST_QT_MOC_CPP)\n-test_bitcoin_qt_LDADD = $(LIBBITCOINQT) $(LIBBITCOIN) $(LIBLEVELDB) \\\n+test_bitcoin_qt_LDADD = $(LIBBITCOINQT) $(LIBBITCOIN_SERVER) $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBLEVELDB) \\\n   $(LIBMEMENV) $(BOOST_LIBS) $(QT_LIBS) $(QT_DBUS_LIBS) $(QT_TEST_LIBS) \\\n   $(QR_LIBS) $(PROTOBUF_LIBS) $(BDB_LIBS)\n "
      },
      {
        "sha": "a3168917fc15c3fb9a0d5f2a6a31c3edbf8c10eb",
        "filename": "src/rpcclient.cpp",
        "status": "modified",
        "additions": 32,
        "deletions": 0,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cf74e8cb5eed90cbb14ed40d834c30ef9d37c443/src/rpcclient.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cf74e8cb5eed90cbb14ed40d834c30ef9d37c443/src/rpcclient.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcclient.cpp?ref=cf74e8cb5eed90cbb14ed40d834c30ef9d37c443",
        "patch": "@@ -245,3 +245,35 @@ int CommandLineRPC(int argc, char *argv[])\n     }\n     return nRet;\n }\n+\n+std::string HelpMessageCli(bool mainProgram)\n+{\n+    string strUsage;\n+    if(mainProgram)\n+    {\n+        strUsage += _(\"Options:\") + \"\\n\";\n+        strUsage += \"  -?                     \" + _(\"This help message\") + \"\\n\";\n+        strUsage += \"  -conf=<file>           \" + _(\"Specify configuration file (default: bitcoin.conf)\") + \"\\n\";\n+        strUsage += \"  -datadir=<dir>         \" + _(\"Specify data directory\") + \"\\n\";\n+        strUsage += \"  -testnet               \" + _(\"Use the test network\") + \"\\n\";\n+        strUsage += \"  -regtest               \" + _(\"Enter regression test mode, which uses a special chain in which blocks can be \"\n+                                            \"solved instantly. This is intended for regression testing tools and app development.\") + \"\\n\";\n+    } else {\n+        strUsage += _(\"RPC client options:\") + \"\\n\";\n+    }\n+\n+    strUsage += \"  -rpcconnect=<ip>       \" + _(\"Send commands to node running on <ip> (default: 127.0.0.1)\") + \"\\n\";\n+    strUsage += \"  -rpcport=<port>        \" + _(\"Connect to JSON-RPC on <port> (default: 8332 or testnet: 18332)\") + \"\\n\";\n+    strUsage += \"  -rpcwait               \" + _(\"Wait for RPC server to start\") + \"\\n\";\n+    strUsage += \"  -rpcuser=<user>        \" + _(\"Username for JSON-RPC connections\") + \"\\n\";\n+    strUsage += \"  -rpcpassword=<pw>      \" + _(\"Password for JSON-RPC connections\") + \"\\n\";\n+\n+    if(mainProgram)\n+    {\n+        strUsage += \"\\n\" + _(\"SSL options: (see the Bitcoin Wiki for SSL setup instructions)\") + \"\\n\";\n+        strUsage += \"  -rpcssl                \" + _(\"Use OpenSSL (https) for JSON-RPC connections\") + \"\\n\";\n+    }\n+\n+    return strUsage;\n+}\n+"
      },
      {
        "sha": "e101d22ec56912a2cca5b83e56bf060c28926899",
        "filename": "src/rpcclient.h",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cf74e8cb5eed90cbb14ed40d834c30ef9d37c443/src/rpcclient.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cf74e8cb5eed90cbb14ed40d834c30ef9d37c443/src/rpcclient.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcclient.h?ref=cf74e8cb5eed90cbb14ed40d834c30ef9d37c443",
        "patch": "@@ -14,4 +14,12 @@ int CommandLineRPC(int argc, char *argv[]);\n \n json_spirit::Array RPCConvertValues(const std::string &strMethod, const std::vector<std::string> &strParams);\n \n+/** Show help message for bitcoin-cli.\n+ * The mainProgram argument is used to determine whether to show this message as main program\n+ * (and include some common options) or as sub-header of another help message.\n+ *\n+ * @note the argument can be removed once bitcoin-cli functionality is removed from bitcoind\n+ */\n+std::string HelpMessageCli(bool mainProgram);\n+\n #endif"
      },
      {
        "sha": "39f2c6a385329ce3a4afd15dbcfc8400212f0449",
        "filename": "src/test/Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cf74e8cb5eed90cbb14ed40d834c30ef9d37c443/src/test/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cf74e8cb5eed90cbb14ed40d834c30ef9d37c443/src/test/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/Makefile.am?ref=cf74e8cb5eed90cbb14ed40d834c30ef9d37c443",
        "patch": "@@ -20,7 +20,7 @@ BUILT_SOURCES = $(JSON_TEST_FILES:.json=.json.h) $(RAW_TEST_FILES:.raw=.raw.h)\n \n # test_bitcoin binary #\n test_bitcoin_CPPFLAGS = $(AM_CPPFLAGS) $(TESTDEFS)\n-test_bitcoin_LDADD = $(LIBBITCOIN) $(LIBLEVELDB) $(LIBMEMENV) \\\n+test_bitcoin_LDADD = $(LIBBITCOIN_SERVER) $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBLEVELDB) $(LIBMEMENV) \\\n   $(BOOST_LIBS) $(BOOST_UNIT_TEST_FRAMEWORK_LIB) $(BDB_LIBS)\n test_bitcoin_SOURCES = accounting_tests.cpp alert_tests.cpp \\\n   allocator_tests.cpp base32_tests.cpp base58_tests.cpp base64_tests.cpp \\"
      },
      {
        "sha": "443e7735d71731887eb8ce6c77397858965c7a5e",
        "filename": "src/test/test_bitcoin.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cf74e8cb5eed90cbb14ed40d834c30ef9d37c443/src/test/test_bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cf74e8cb5eed90cbb14ed40d834c30ef9d37c443/src/test/test_bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/test_bitcoin.cpp?ref=cf74e8cb5eed90cbb14ed40d834c30ef9d37c443",
        "patch": "@@ -14,7 +14,6 @@\n \n \n CWallet* pwalletMain;\n-CClientUIInterface uiInterface;\n \n extern bool fPrintToConsole;\n extern void noui_connect();"
      },
      {
        "sha": "a8c591cc7a39d2d17b54ebb029967f7e8ed20326",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cf74e8cb5eed90cbb14ed40d834c30ef9d37c443/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cf74e8cb5eed90cbb14ed40d834c30ef9d37c443/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=cf74e8cb5eed90cbb14ed40d834c30ef9d37c443",
        "patch": "@@ -95,6 +95,7 @@ string strMiscWarning;\n bool fNoListen = false;\n bool fLogTimestamps = false;\n volatile bool fReopenDebugLog = false;\n+CClientUIInterface uiInterface;\n \n // Init OpenSSL library multithreading support\n static CCriticalSection** ppmutexOpenSSL;\n@@ -1511,3 +1512,4 @@ void RenameThread(const char* name)\n     (void)name;\n #endif\n }\n+"
      }
    ]
  },
  {
    "sha": "ccd1372dd063e4098a245da91c9e73743484f68a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjY2QxMzcyZGQwNjNlNDA5OGEyNDVkYTkxYzllNzM3NDM0ODRmNjhh",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2013-12-03T08:25:24Z"
      },
      "committer": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2013-12-03T13:01:53Z"
      },
      "message": "[Qt] small notificator and style changes\n\n- remove default arguments for notificator\n- re-order some calls to use same ordering in Qt files\n- style police changes (spaces, comments and such)",
      "tree": {
        "sha": "c75be6b7ed08a01c3f1354faa0d66d1ed45a30ae",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c75be6b7ed08a01c3f1354faa0d66d1ed45a30ae"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ccd1372dd063e4098a245da91c9e73743484f68a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ccd1372dd063e4098a245da91c9e73743484f68a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ccd1372dd063e4098a245da91c9e73743484f68a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ccd1372dd063e4098a245da91c9e73743484f68a/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "cf74e8cb5eed90cbb14ed40d834c30ef9d37c443",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cf74e8cb5eed90cbb14ed40d834c30ef9d37c443",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cf74e8cb5eed90cbb14ed40d834c30ef9d37c443"
      }
    ],
    "stats": {
      "total": 27,
      "additions": 14,
      "deletions": 13
    },
    "files": [
      {
        "sha": "2f9e205c8d83ca5f1a3c713506c9f27296567a8f",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ccd1372dd063e4098a245da91c9e73743484f68a/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ccd1372dd063e4098a245da91c9e73743484f68a/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=ccd1372dd063e4098a245da91c9e73743484f68a",
        "patch": "@@ -53,7 +53,6 @@ static SplashScreen *splashref;\n \n static bool ThreadSafeMessageBox(const std::string& message, const std::string& caption, unsigned int style)\n {\n-    // Message from network thread\n     if(guiref)\n     {\n         bool modal = (style & CClientUIInterface::MODAL);\n@@ -160,7 +159,7 @@ static void initTranslations(QTranslator &qtTranslatorBase, QTranslator &qtTrans\n \n /* qDebug() message handler --> debug.log */\n #if QT_VERSION < 0x050000\n-void DebugMessageHandler(QtMsgType type, const char * msg)\n+void DebugMessageHandler(QtMsgType type, const char *msg)\n {\n     Q_UNUSED(type);\n     LogPrint(\"qt\", \"Bitcoin-Qt: %s\\n\", msg);\n@@ -313,11 +312,12 @@ int main(int argc, char *argv[])\n                     splash.finish(&window);\n \n                 ClientModel clientModel(&optionsModel);\n+                window.setClientModel(&clientModel);\n+\n                 WalletModel *walletModel = 0;\n                 if(pwalletMain)\n                     walletModel = new WalletModel(pwalletMain, &optionsModel);\n \n-                window.setClientModel(&clientModel);\n                 if(walletModel)\n                 {\n                     window.addWallet(\"~Default\", walletModel);"
      },
      {
        "sha": "b3a566428d32e004f2ee2dc0930f36bfd1b77b56",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ccd1372dd063e4098a245da91c9e73743484f68a/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ccd1372dd063e4098a245da91c9e73743484f68a/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=ccd1372dd063e4098a245da91c9e73743484f68a",
        "patch": "@@ -405,7 +405,7 @@ void BitcoinGUI::createTrayIcon(bool fIsTestnet)\n     trayIcon->show();\n #endif\n \n-    notificator = new Notificator(QApplication::applicationName(), trayIcon);\n+    notificator = new Notificator(QApplication::applicationName(), trayIcon, this);\n }\n \n void BitcoinGUI::createTrayIconMenu()"
      },
      {
        "sha": "05e8412528e2a429b197dc7e9a6984a50abd61a5",
        "filename": "src/qt/clientmodel.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ccd1372dd063e4098a245da91c9e73743484f68a/src/qt/clientmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ccd1372dd063e4098a245da91c9e73743484f68a/src/qt/clientmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.h?ref=ccd1372dd063e4098a245da91c9e73743484f68a",
        "patch": "@@ -84,7 +84,7 @@ class ClientModel : public QObject\n     void alertsChanged(const QString &warnings);\n     void bytesChanged(quint64 totalBytesIn, quint64 totalBytesOut);\n \n-    //! Asynchronous message notification\n+    //! Fired when a message should be reported to the user\n     void message(const QString &title, const QString &message, unsigned int style);\n \n public slots:"
      },
      {
        "sha": "8f8d67dc587831003133c74b8e0f93440d12517e",
        "filename": "src/qt/guiutil.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ccd1372dd063e4098a245da91c9e73743484f68a/src/qt/guiutil.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ccd1372dd063e4098a245da91c9e73743484f68a/src/qt/guiutil.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.cpp?ref=ccd1372dd063e4098a245da91c9e73743484f68a",
        "patch": "@@ -32,6 +32,7 @@\n \n #include <boost/filesystem.hpp>\n #include <boost/filesystem/fstream.hpp>\n+\n #include <QAbstractItemView>\n #include <QApplication>\n #include <QClipboard>"
      },
      {
        "sha": "1cef397d12166845f98d77cf933f38e53a7e3693",
        "filename": "src/qt/notificator.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ccd1372dd063e4098a245da91c9e73743484f68a/src/qt/notificator.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ccd1372dd063e4098a245da91c9e73743484f68a/src/qt/notificator.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/notificator.cpp?ref=ccd1372dd063e4098a245da91c9e73743484f68a",
        "patch": "@@ -4,7 +4,6 @@\n \n #include \"notificator.h\"\n \n-\n #include <QApplication>\n #include <QByteArray>\n #include <QIcon>\n@@ -32,7 +31,7 @@\n // https://wiki.ubuntu.com/NotificationDevelopmentGuidelines recommends at least 128\n const int FREEDESKTOP_NOTIFICATION_ICON_SIZE = 128;\n \n-Notificator::Notificator(const QString &programName, QSystemTrayIcon *trayicon, QWidget *parent):\n+Notificator::Notificator(const QString &programName, QSystemTrayIcon *trayicon, QWidget *parent) :\n     QObject(parent),\n     parent(parent),\n     programName(programName),\n@@ -48,7 +47,7 @@ Notificator::Notificator(const QString &programName, QSystemTrayIcon *trayicon,\n     }\n #ifdef USE_DBUS\n     interface = new QDBusInterface(\"org.freedesktop.Notifications\",\n-          \"/org/freedesktop/Notifications\", \"org.freedesktop.Notifications\");\n+        \"/org/freedesktop/Notifications\", \"org.freedesktop.Notifications\");\n     if(interface->isValid())\n     {\n         mode = Freedesktop;"
      },
      {
        "sha": "abab986992a6042f9b1a3a6696663abc1565157c",
        "filename": "src/qt/notificator.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ccd1372dd063e4098a245da91c9e73743484f68a/src/qt/notificator.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ccd1372dd063e4098a245da91c9e73743484f68a/src/qt/notificator.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/notificator.h?ref=ccd1372dd063e4098a245da91c9e73743484f68a",
        "patch": "@@ -29,7 +29,7 @@ class Notificator: public QObject\n     /** Create a new notificator.\n        @note Ownership of trayIcon is not transferred to this object.\n     */\n-    Notificator(const QString &programName=QString(), QSystemTrayIcon *trayIcon=0, QWidget *parent=0);\n+    Notificator(const QString &programName, QSystemTrayIcon *trayIcon, QWidget *parent);\n     ~Notificator();\n \n     // Message class"
      },
      {
        "sha": "cad41abd66fc1df9cdae8a8a6fafd58b08d58e17",
        "filename": "src/qt/receivecoinsdialog.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ccd1372dd063e4098a245da91c9e73743484f68a/src/qt/receivecoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ccd1372dd063e4098a245da91c9e73743484f68a/src/qt/receivecoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/receivecoinsdialog.cpp?ref=ccd1372dd063e4098a245da91c9e73743484f68a",
        "patch": "@@ -101,11 +101,11 @@ void ReceiveCoinsDialog::on_receiveButton_clicked()\n         address = model->getAddressTableModel()->addRow(AddressTableModel::Receive, label, \"\");\n     }\n     SendCoinsRecipient info(address, label,\n-            ui->reqAmount->value(), ui->reqMessage->text());\n+        ui->reqAmount->value(), ui->reqMessage->text());\n     ReceiveRequestDialog *dialog = new ReceiveRequestDialog(this);\n+    dialog->setAttribute(Qt::WA_DeleteOnClose);\n     dialog->setModel(model->getOptionsModel());\n     dialog->setInfo(info);\n-    dialog->setAttribute(Qt::WA_DeleteOnClose);\n     dialog->show();\n     clear();\n }"
      },
      {
        "sha": "1a9c7866dbc13f37c01f1e7401ff1c17587bf325",
        "filename": "src/qt/walletview.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ccd1372dd063e4098a245da91c9e73743484f68a/src/qt/walletview.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ccd1372dd063e4098a245da91c9e73743484f68a/src/qt/walletview.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletview.cpp?ref=ccd1372dd063e4098a245da91c9e73743484f68a",
        "patch": "@@ -263,8 +263,8 @@ void WalletView::usedSendingAddresses()\n     if(!walletModel)\n         return;\n     AddressBookPage *dlg = new AddressBookPage(AddressBookPage::ForEditing, AddressBookPage::SendingTab, this);\n-    dlg->setModel(walletModel->getAddressTableModel());\n     dlg->setAttribute(Qt::WA_DeleteOnClose);\n+    dlg->setModel(walletModel->getAddressTableModel());\n     dlg->show();\n }\n \n@@ -273,7 +273,7 @@ void WalletView::usedReceivingAddresses()\n     if(!walletModel)\n         return;\n     AddressBookPage *dlg = new AddressBookPage(AddressBookPage::ForEditing, AddressBookPage::ReceivingTab, this);\n-    dlg->setModel(walletModel->getAddressTableModel());\n     dlg->setAttribute(Qt::WA_DeleteOnClose);\n+    dlg->setModel(walletModel->getAddressTableModel());\n     dlg->show();\n }"
      },
      {
        "sha": "ecfa06ac5a0832451c3e79e2e62ddd3088176354",
        "filename": "src/qt/walletview.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ccd1372dd063e4098a245da91c9e73743484f68a/src/qt/walletview.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ccd1372dd063e4098a245da91c9e73743484f68a/src/qt/walletview.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletview.h?ref=ccd1372dd063e4098a245da91c9e73743484f68a",
        "patch": "@@ -96,6 +96,7 @@ public slots:\n \n     /** Re-emit encryption status signal */\n     void updateEncryptionStatus();\n+\n signals:\n     /** Signal that we want to show the main window */\n     void showNormalIfMinimized();"
      }
    ]
  },
  {
    "sha": "f15bd3c96f0c6806a5140120a7c3442e08ae3812",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmMTViZDNjOTZmMGM2ODA2YTUxNDAxMjBhN2MzNDQyZTA4YWUzODEy",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-03T16:26:39Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-03T16:26:45Z"
      },
      "message": "Merge pull request #3285\n\nd3207b6 [Qt] coin-control features GUI cleanup 3 (Philip Kaufmann)\n834e14e [Qt] coin-control features GUI cleanup 2 (Philip Kaufmann)",
      "tree": {
        "sha": "cf7e771550b56553b1df0655223428821a841d50",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cf7e771550b56553b1df0655223428821a841d50"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f15bd3c96f0c6806a5140120a7c3442e08ae3812",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJSngZFAAoJEHSBCwEjRsmmXLcH/0JU9LP9l67or+8gattxDUbS\n8UI+wcaxVLNN40qNuBE8n1j+Gd+9FLKNdlQwlIpcWN6oCNiS9h9hNQTJHxv4V5Ih\nAn0ni3dbr84a328YbXJ30oz7aleViEkyy5kmUtOh+IvuAF+jZ35chiD8HUuqfNM5\nsa+Q5BNrGt/pj1Bm+AN9FV0xvC3J1slZI7OL6tqOtqKfBh0z+hTSPq0Iz3/5I8PD\nQR0rDlcYMIgu9cp67Qun9rwrMNFX9AJSl8lcDPlNBTbBNbwlJVYXDgOpU+PWAJ+G\nHZ/KBD8TmPH7DHxYEZz65uSahVINmdB/SFeGtopk3ZekJKi6RPtmcAde1w+BQfw=\n=MrTh\n-----END PGP SIGNATURE-----",
        "payload": "tree cf7e771550b56553b1df0655223428821a841d50\nparent cf74e8cb5eed90cbb14ed40d834c30ef9d37c443\nparent d3207b6fa8283cdd15bfa89b222880cf20524c35\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1386087999 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1386088005 +0100\n\nMerge pull request #3285\n\nd3207b6 [Qt] coin-control features GUI cleanup 3 (Philip Kaufmann)\n834e14e [Qt] coin-control features GUI cleanup 2 (Philip Kaufmann)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f15bd3c96f0c6806a5140120a7c3442e08ae3812",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f15bd3c96f0c6806a5140120a7c3442e08ae3812",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f15bd3c96f0c6806a5140120a7c3442e08ae3812/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cf74e8cb5eed90cbb14ed40d834c30ef9d37c443",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cf74e8cb5eed90cbb14ed40d834c30ef9d37c443",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cf74e8cb5eed90cbb14ed40d834c30ef9d37c443"
      },
      {
        "sha": "d3207b6fa8283cdd15bfa89b222880cf20524c35",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d3207b6fa8283cdd15bfa89b222880cf20524c35",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d3207b6fa8283cdd15bfa89b222880cf20524c35"
      }
    ],
    "stats": {
      "total": 248,
      "additions": 147,
      "deletions": 101
    },
    "files": [
      {
        "sha": "14e5b07133f3ab1ed9d04a20efc15fa2d927679e",
        "filename": "src/qt/coincontroldialog.cpp",
        "status": "modified",
        "additions": 20,
        "deletions": 5,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f15bd3c96f0c6806a5140120a7c3442e08ae3812/src/qt/coincontroldialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f15bd3c96f0c6806a5140120a7c3442e08ae3812/src/qt/coincontroldialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/coincontroldialog.cpp?ref=f15bd3c96f0c6806a5140120a7c3442e08ae3812",
        "patch": "@@ -590,7 +590,7 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n     l4->setText(BitcoinUnits::formatWithUnit(nDisplayUnit, nAfterFee));      // After Fee\n     l5->setText(((nBytes > 0) ? \"~\" : \"\") + QString::number(nBytes));        // Bytes\n     l6->setText(sPriorityLabel);                                             // Priority\n-    l7->setText((fLowOutput ? (fDust ? tr(\"DUST\") : tr(\"yes\")) : tr(\"no\"))); // Low Output / Dust\n+    l7->setText((fLowOutput ? (fDust ? tr(\"Dust\") : tr(\"yes\")) : tr(\"no\"))); // Low Output / Dust\n     l8->setText(BitcoinUnits::formatWithUnit(nDisplayUnit, nChange));        // Change\n \n     // turn labels \"red\"\n@@ -600,10 +600,25 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n     l8->setStyleSheet((nChange > 0 && nChange < CENT) ? \"color:red;\" : \"\"); // Change < 0.01BTC\n \n     // tool tips\n-    l5->setToolTip(tr(\"This label turns red, if the transaction size is bigger than 1000 bytes.\\n\\n This means a fee of at least %1 per kb is required.\\n\\n Can vary +/- 1 Byte per input.\").arg(BitcoinUnits::formatWithUnit(nDisplayUnit, CTransaction::nMinTxFee)));\n-    l6->setToolTip(tr(\"Transactions with higher priority get more likely into a block.\\n\\nThis label turns red, if the priority is smaller than \\\"medium\\\".\\n\\n This means a fee of at least %1 per kb is required.\").arg(BitcoinUnits::formatWithUnit(nDisplayUnit, CTransaction::nMinTxFee)));\n-    l7->setToolTip(tr(\"This label turns red, if any recipient receives an amount smaller than %1.\\n\\n This means a fee of at least %2 is required. \\n\\n Amounts below 0.546 times the minimum relay fee are shown as DUST.\").arg(BitcoinUnits::formatWithUnit(nDisplayUnit, CENT)).arg(BitcoinUnits::formatWithUnit(nDisplayUnit, CTransaction::nMinTxFee)));\n-    l8->setToolTip(tr(\"This label turns red, if the change is smaller than %1.\\n\\n This means a fee of at least %2 is required.\").arg(BitcoinUnits::formatWithUnit(nDisplayUnit, CENT)).arg(BitcoinUnits::formatWithUnit(nDisplayUnit, CTransaction::nMinTxFee)));\n+    QString toolTip1 = tr(\"This label turns red, if the transaction size is greater than 1000 bytes.\") + \"<br /><br />\";\n+    toolTip1 += tr(\"This means a fee of at least %1 per kB is required.\").arg(BitcoinUnits::formatWithUnit(nDisplayUnit, CTransaction::nMinTxFee)) + \"<br /><br />\";\n+    toolTip1 += tr(\"Can vary +/- 1 byte per input.\");\n+\n+    QString toolTip2 = tr(\"Transactions with higher priority are more likely to get included into a block.\") + \"<br /><br />\";\n+    toolTip2 += tr(\"This label turns red, if the priority is smaller than \\\"medium\\\"\") + \"<br /><br />\";\n+    toolTip2 += tr(\"This means a fee of at least %1 per kB is required.\").arg(BitcoinUnits::formatWithUnit(nDisplayUnit, CTransaction::nMinTxFee));\n+\n+    QString toolTip3 = tr(\"This label turns red, if any recipient receives an amount smaller than %1.\").arg(BitcoinUnits::formatWithUnit(nDisplayUnit, CENT)) + \"<br /><br />\";\n+    toolTip3 += tr(\"This means a fee of at least %1 is required.\").arg(BitcoinUnits::formatWithUnit(nDisplayUnit, CTransaction::nMinTxFee)) + \"<br /><br />\";\n+    toolTip3 += tr(\"Amounts below 0.546 times the minimum relay fee are shown as dust.\");\n+\n+    QString toolTip4 = tr(\"This label turns red, if the change is smaller than %1.\").arg(BitcoinUnits::formatWithUnit(nDisplayUnit, CENT)) + \"<br /><br />\";\n+    toolTip4 += tr(\"This means a fee of at least %1 is required.\").arg(BitcoinUnits::formatWithUnit(nDisplayUnit, CTransaction::nMinTxFee));\n+\n+    l5->setToolTip(toolTip1);\n+    l6->setToolTip(toolTip2);\n+    l7->setToolTip(toolTip3);\n+    l8->setToolTip(toolTip4);\n     dialog->findChild<QLabel *>(\"labelCoinControlBytesText\")    ->setToolTip(l5->toolTip());\n     dialog->findChild<QLabel *>(\"labelCoinControlPriorityText\") ->setToolTip(l6->toolTip());\n     dialog->findChild<QLabel *>(\"labelCoinControlLowOutputText\")->setToolTip(l7->toolTip());"
      },
      {
        "sha": "e4faa312d40c4d220d6c82840955672834894eb1",
        "filename": "src/qt/forms/coincontroldialog.ui",
        "status": "modified",
        "additions": 45,
        "deletions": 18,
        "changes": 63,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f15bd3c96f0c6806a5140120a7c3442e08ae3812/src/qt/forms/coincontroldialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f15bd3c96f0c6806a5140120a7c3442e08ae3812/src/qt/forms/coincontroldialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/coincontroldialog.ui?ref=f15bd3c96f0c6806a5140120a7c3442e08ae3812",
        "patch": "@@ -38,8 +38,11 @@\n        </property>\n        <item row=\"0\" column=\"0\">\n         <widget class=\"QLabel\" name=\"labelCoinControlQuantityText\">\n-         <property name=\"styleSheet\">\n-          <string notr=\"true\">font-weight:bold;</string>\n+         <property name=\"font\">\n+          <font>\n+           <weight>75</weight>\n+           <bold>true</bold>\n+          </font>\n          </property>\n          <property name=\"text\">\n           <string>Quantity:</string>\n@@ -64,8 +67,11 @@\n        </item>\n        <item row=\"1\" column=\"0\">\n         <widget class=\"QLabel\" name=\"labelCoinControlBytesText\">\n-         <property name=\"styleSheet\">\n-          <string notr=\"true\">font-weight:bold;</string>\n+         <property name=\"font\">\n+          <font>\n+           <weight>75</weight>\n+           <bold>true</bold>\n+          </font>\n          </property>\n          <property name=\"text\">\n           <string>Bytes:</string>\n@@ -106,8 +112,11 @@\n        </property>\n        <item row=\"0\" column=\"0\">\n         <widget class=\"QLabel\" name=\"labelCoinControlAmountText\">\n-         <property name=\"styleSheet\">\n-          <string notr=\"true\">font-weight:bold;</string>\n+         <property name=\"font\">\n+          <font>\n+           <weight>75</weight>\n+           <bold>true</bold>\n+          </font>\n          </property>\n          <property name=\"text\">\n           <string>Amount:</string>\n@@ -132,8 +141,11 @@\n        </item>\n        <item row=\"1\" column=\"0\">\n         <widget class=\"QLabel\" name=\"labelCoinControlPriorityText\">\n-         <property name=\"styleSheet\">\n-          <string notr=\"true\">font-weight:bold;</string>\n+         <property name=\"font\">\n+          <font>\n+           <weight>75</weight>\n+           <bold>true</bold>\n+          </font>\n          </property>\n          <property name=\"text\">\n           <string>Priority:</string>\n@@ -148,6 +160,9 @@\n          <property name=\"contextMenuPolicy\">\n           <enum>Qt::ActionsContextMenu</enum>\n          </property>\n+         <property name=\"text\">\n+          <string notr=\"true\">medium</string>\n+         </property>\n          <property name=\"textInteractionFlags\">\n           <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n          </property>\n@@ -171,8 +186,11 @@\n        </property>\n        <item row=\"0\" column=\"0\">\n         <widget class=\"QLabel\" name=\"labelCoinControlFeeText\">\n-         <property name=\"styleSheet\">\n-          <string notr=\"true\">font-weight:bold;</string>\n+         <property name=\"font\">\n+          <font>\n+           <weight>75</weight>\n+           <bold>true</bold>\n+          </font>\n          </property>\n          <property name=\"text\">\n           <string>Fee:</string>\n@@ -200,8 +218,11 @@\n          <property name=\"enabled\">\n           <bool>false</bool>\n          </property>\n-         <property name=\"styleSheet\">\n-          <string notr=\"true\">font-weight:bold;</string>\n+         <property name=\"font\">\n+          <font>\n+           <weight>75</weight>\n+           <bold>true</bold>\n+          </font>\n          </property>\n          <property name=\"text\">\n           <string>Low Output:</string>\n@@ -220,7 +241,7 @@\n           <enum>Qt::ActionsContextMenu</enum>\n          </property>\n          <property name=\"text\">\n-          <string>no</string>\n+          <string notr=\"true\">no</string>\n          </property>\n          <property name=\"textInteractionFlags\">\n           <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n@@ -245,8 +266,11 @@\n        </property>\n        <item row=\"0\" column=\"0\">\n         <widget class=\"QLabel\" name=\"labelCoinControlAfterFeeText\">\n-         <property name=\"styleSheet\">\n-          <string notr=\"true\">font-weight:bold;</string>\n+         <property name=\"font\">\n+          <font>\n+           <weight>75</weight>\n+           <bold>true</bold>\n+          </font>\n          </property>\n          <property name=\"text\">\n           <string>After Fee:</string>\n@@ -274,8 +298,11 @@\n          <property name=\"enabled\">\n           <bool>false</bool>\n          </property>\n-         <property name=\"styleSheet\">\n-          <string notr=\"true\">font-weight:bold;</string>\n+         <property name=\"font\">\n+          <font>\n+           <weight>75</weight>\n+           <bold>true</bold>\n+          </font>\n          </property>\n          <property name=\"text\">\n           <string>Change:</string>\n@@ -377,7 +404,7 @@\n        <item>\n         <widget class=\"QLabel\" name=\"labelLocked\">\n          <property name=\"text\">\n-          <string>(1 locked)</string>\n+          <string notr=\"true\">(1 locked)</string>\n          </property>\n         </widget>\n        </item>"
      },
      {
        "sha": "db8271b01695a08113214b295c74e5f396830446",
        "filename": "src/qt/forms/sendcoinsdialog.ui",
        "status": "modified",
        "additions": 67,
        "deletions": 72,
        "changes": 139,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f15bd3c96f0c6806a5140120a7c3442e08ae3812/src/qt/forms/sendcoinsdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f15bd3c96f0c6806a5140120a7c3442e08ae3812/src/qt/forms/sendcoinsdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/sendcoinsdialog.ui?ref=f15bd3c96f0c6806a5140120a7c3442e08ae3812",
        "patch": "@@ -39,7 +39,7 @@\n      </property>\n      <layout class=\"QVBoxLayout\" name=\"verticalLayoutCoinControl2\">\n       <property name=\"spacing\">\n-       <number>-1</number>\n+       <number>0</number>\n       </property>\n       <property name=\"leftMargin\">\n        <number>0</number>\n@@ -173,7 +173,16 @@\n            <string notr=\"true\"/>\n           </property>\n           <layout class=\"QHBoxLayout\" name=\"horizontalLayoutCoinControl5\">\n-           <property name=\"margin\">\n+           <property name=\"leftMargin\">\n+            <number>0</number>\n+           </property>\n+           <property name=\"topMargin\">\n+            <number>0</number>\n+           </property>\n+           <property name=\"rightMargin\">\n+            <number>0</number>\n+           </property>\n+           <property name=\"bottomMargin\">\n             <number>0</number>\n            </property>\n            <item>\n@@ -206,8 +215,11 @@\n                </property>\n                <item row=\"0\" column=\"0\">\n                 <widget class=\"QLabel\" name=\"labelCoinControlQuantityText\">\n-                 <property name=\"styleSheet\">\n-                  <string notr=\"true\">font-weight:bold;</string>\n+                 <property name=\"font\">\n+                  <font>\n+                   <weight>75</weight>\n+                   <bold>true</bold>\n+                  </font>\n                  </property>\n                  <property name=\"text\">\n                   <string>Quantity:</string>\n@@ -219,12 +231,6 @@\n                </item>\n                <item row=\"0\" column=\"1\">\n                 <widget class=\"QLabel\" name=\"labelCoinControlQuantity\">\n-                 <property name=\"font\">\n-                  <font>\n-                   <family>Monospace</family>\n-                   <pointsize>10</pointsize>\n-                  </font>\n-                 </property>\n                  <property name=\"cursor\">\n                   <cursorShape>IBeamCursor</cursorShape>\n                  </property>\n@@ -244,8 +250,11 @@\n                </item>\n                <item row=\"1\" column=\"0\">\n                 <widget class=\"QLabel\" name=\"labelCoinControlBytesText\">\n-                 <property name=\"styleSheet\">\n-                  <string notr=\"true\">font-weight:bold;</string>\n+                 <property name=\"font\">\n+                  <font>\n+                   <weight>75</weight>\n+                   <bold>true</bold>\n+                  </font>\n                  </property>\n                  <property name=\"text\">\n                   <string>Bytes:</string>\n@@ -254,12 +263,6 @@\n                </item>\n                <item row=\"1\" column=\"1\">\n                 <widget class=\"QLabel\" name=\"labelCoinControlBytes\">\n-                 <property name=\"font\">\n-                  <font>\n-                   <family>Monospace</family>\n-                   <pointsize>10</pointsize>\n-                  </font>\n-                 </property>\n                  <property name=\"cursor\">\n                   <cursorShape>IBeamCursor</cursorShape>\n                  </property>\n@@ -295,8 +298,11 @@\n                </property>\n                <item row=\"0\" column=\"0\">\n                 <widget class=\"QLabel\" name=\"labelCoinControlAmountText\">\n-                 <property name=\"styleSheet\">\n-                  <string notr=\"true\">font-weight:bold;</string>\n+                 <property name=\"font\">\n+                  <font>\n+                   <weight>75</weight>\n+                   <bold>true</bold>\n+                  </font>\n                  </property>\n                  <property name=\"text\">\n                   <string>Amount:</string>\n@@ -308,12 +314,6 @@\n                </item>\n                <item row=\"0\" column=\"1\">\n                 <widget class=\"QLabel\" name=\"labelCoinControlAmount\">\n-                 <property name=\"font\">\n-                  <font>\n-                   <family>Monospace</family>\n-                   <pointsize>10</pointsize>\n-                  </font>\n-                 </property>\n                  <property name=\"cursor\">\n                   <cursorShape>IBeamCursor</cursorShape>\n                  </property>\n@@ -330,8 +330,11 @@\n                </item>\n                <item row=\"1\" column=\"0\">\n                 <widget class=\"QLabel\" name=\"labelCoinControlPriorityText\">\n-                 <property name=\"styleSheet\">\n-                  <string notr=\"true\">font-weight:bold;</string>\n+                 <property name=\"font\">\n+                  <font>\n+                   <weight>75</weight>\n+                   <bold>true</bold>\n+                  </font>\n                  </property>\n                  <property name=\"text\">\n                   <string>Priority:</string>\n@@ -340,20 +343,14 @@\n                </item>\n                <item row=\"1\" column=\"1\">\n                 <widget class=\"QLabel\" name=\"labelCoinControlPriority\">\n-                 <property name=\"font\">\n-                  <font>\n-                   <family>Monospace</family>\n-                   <pointsize>10</pointsize>\n-                  </font>\n-                 </property>\n                  <property name=\"cursor\">\n                   <cursorShape>IBeamCursor</cursorShape>\n                  </property>\n                  <property name=\"contextMenuPolicy\">\n                   <enum>Qt::ActionsContextMenu</enum>\n                  </property>\n                  <property name=\"text\">\n-                  <string>medium</string>\n+                  <string notr=\"true\">medium</string>\n                  </property>\n                  <property name=\"textInteractionFlags\">\n                   <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n@@ -381,8 +378,11 @@\n                </property>\n                <item row=\"0\" column=\"0\">\n                 <widget class=\"QLabel\" name=\"labelCoinControlFeeText\">\n-                 <property name=\"styleSheet\">\n-                  <string notr=\"true\">font-weight:bold;</string>\n+                 <property name=\"font\">\n+                  <font>\n+                   <weight>75</weight>\n+                   <bold>true</bold>\n+                  </font>\n                  </property>\n                  <property name=\"text\">\n                   <string>Fee:</string>\n@@ -394,12 +394,6 @@\n                </item>\n                <item row=\"0\" column=\"1\">\n                 <widget class=\"QLabel\" name=\"labelCoinControlFee\">\n-                 <property name=\"font\">\n-                  <font>\n-                   <family>Monospace</family>\n-                   <pointsize>10</pointsize>\n-                  </font>\n-                 </property>\n                  <property name=\"cursor\">\n                   <cursorShape>IBeamCursor</cursorShape>\n                  </property>\n@@ -416,8 +410,11 @@\n                </item>\n                <item row=\"1\" column=\"0\">\n                 <widget class=\"QLabel\" name=\"labelCoinControlLowOutputText\">\n-                 <property name=\"styleSheet\">\n-                  <string notr=\"true\">font-weight:bold;</string>\n+                 <property name=\"font\">\n+                  <font>\n+                   <weight>75</weight>\n+                   <bold>true</bold>\n+                  </font>\n                  </property>\n                  <property name=\"text\">\n                   <string>Low Output:</string>\n@@ -426,20 +423,14 @@\n                </item>\n                <item row=\"1\" column=\"1\">\n                 <widget class=\"QLabel\" name=\"labelCoinControlLowOutput\">\n-                 <property name=\"font\">\n-                  <font>\n-                   <family>Monospace</family>\n-                   <pointsize>10</pointsize>\n-                  </font>\n-                 </property>\n                  <property name=\"cursor\">\n                   <cursorShape>IBeamCursor</cursorShape>\n                  </property>\n                  <property name=\"contextMenuPolicy\">\n                   <enum>Qt::ActionsContextMenu</enum>\n                  </property>\n                  <property name=\"text\">\n-                  <string>no</string>\n+                  <string notr=\"true\">no</string>\n                  </property>\n                  <property name=\"textInteractionFlags\">\n                   <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n@@ -467,8 +458,11 @@\n                </property>\n                <item row=\"0\" column=\"0\">\n                 <widget class=\"QLabel\" name=\"labelCoinControlAfterFeeText\">\n-                 <property name=\"styleSheet\">\n-                  <string notr=\"true\">font-weight:bold;</string>\n+                 <property name=\"font\">\n+                  <font>\n+                   <weight>75</weight>\n+                   <bold>true</bold>\n+                  </font>\n                  </property>\n                  <property name=\"text\">\n                   <string>After Fee:</string>\n@@ -480,12 +474,6 @@\n                </item>\n                <item row=\"0\" column=\"1\">\n                 <widget class=\"QLabel\" name=\"labelCoinControlAfterFee\">\n-                 <property name=\"font\">\n-                  <font>\n-                   <family>Monospace</family>\n-                   <pointsize>10</pointsize>\n-                  </font>\n-                 </property>\n                  <property name=\"cursor\">\n                   <cursorShape>IBeamCursor</cursorShape>\n                  </property>\n@@ -502,8 +490,11 @@\n                </item>\n                <item row=\"1\" column=\"0\">\n                 <widget class=\"QLabel\" name=\"labelCoinControlChangeText\">\n-                 <property name=\"styleSheet\">\n-                  <string notr=\"true\">font-weight:bold;</string>\n+                 <property name=\"font\">\n+                  <font>\n+                   <weight>75</weight>\n+                   <bold>true</bold>\n+                  </font>\n                  </property>\n                  <property name=\"text\">\n                   <string>Change:</string>\n@@ -512,12 +503,6 @@\n                </item>\n                <item row=\"1\" column=\"1\">\n                 <widget class=\"QLabel\" name=\"labelCoinControlChange\">\n-                 <property name=\"font\">\n-                  <font>\n-                   <family>Monospace</family>\n-                   <pointsize>10</pointsize>\n-                  </font>\n-                 </property>\n                  <property name=\"cursor\">\n                   <cursorShape>IBeamCursor</cursorShape>\n                  </property>\n@@ -555,13 +540,16 @@\n           </property>\n           <item>\n            <widget class=\"QCheckBox\" name=\"checkBoxCoinControlChange\">\n+            <property name=\"toolTip\">\n+             <string>If this is activated, but the change address is empty or invalid, change will be sent to a newly generated address.</string>\n+            </property>\n             <property name=\"text\">\n-             <string>custom change address</string>\n+             <string>Custom change address</string>\n             </property>\n            </widget>\n           </item>\n           <item>\n-           <widget class=\"QLineEdit\" name=\"lineEditCoinControlChange\">\n+           <widget class=\"QValidatedLineEdit\" name=\"lineEditCoinControlChange\">\n             <property name=\"enabled\">\n              <bool>false</bool>\n             </property>\n@@ -626,7 +614,7 @@\n         <x>0</x>\n         <y>0</y>\n         <width>830</width>\n-        <height>165</height>\n+        <height>178</height>\n        </rect>\n       </property>\n       <layout class=\"QVBoxLayout\" name=\"verticalLayout_2\" stretch=\"0,1\">\n@@ -729,7 +717,7 @@\n           <cursorShape>IBeamCursor</cursorShape>\n          </property>\n          <property name=\"text\">\n-          <string>123.456 BTC</string>\n+          <string notr=\"true\">123.456 BTC</string>\n          </property>\n          <property name=\"textInteractionFlags\">\n           <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n@@ -778,6 +766,13 @@\n    </item>\n   </layout>\n  </widget>\n+ <customwidgets>\n+  <customwidget>\n+   <class>QValidatedLineEdit</class>\n+   <extends>QLineEdit</extends>\n+   <header>qvalidatedlineedit.h</header>\n+  </customwidget>\n+ </customwidgets>\n  <resources>\n   <include location=\"../bitcoin.qrc\"/>\n  </resources>"
      },
      {
        "sha": "73cfa27c83ce8e0b80eba6b7dce2e8eadf19ad03",
        "filename": "src/qt/sendcoinsdialog.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 6,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f15bd3c96f0c6806a5140120a7c3442e08ae3812/src/qt/sendcoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f15bd3c96f0c6806a5140120a7c3442e08ae3812/src/qt/sendcoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.cpp?ref=f15bd3c96f0c6806a5140120a7c3442e08ae3812",
        "patch": "@@ -529,16 +529,17 @@ void SendCoinsDialog::coinControlButtonClicked()\n // Coin Control: checkbox custom change address\n void SendCoinsDialog::coinControlChangeChecked(int state)\n {\n-    if (model)\n+    if (state == Qt::Unchecked)\n     {\n-        if (state == Qt::Checked)\n-            CoinControlDialog::coinControl->destChange = CBitcoinAddress(ui->lineEditCoinControlChange->text().toStdString()).Get();\n-        else\n-            CoinControlDialog::coinControl->destChange = CNoDestination();\n+        CoinControlDialog::coinControl->destChange = CNoDestination();\n+        ui->lineEditCoinControlChange->setValid(true);\n+        ui->labelCoinControlChangeLabel->clear();\n     }\n+    else\n+        // use this to re-validate an already entered address\n+        coinControlChangeEdited(ui->lineEditCoinControlChange->text());\n \n     ui->lineEditCoinControlChange->setEnabled((state == Qt::Checked));\n-    ui->labelCoinControlChangeLabel->setVisible((state == Qt::Checked));\n }\n \n // Coin Control: custom change address changed\n@@ -554,6 +555,10 @@ void SendCoinsDialog::coinControlChangeEdited(const QString & text)\n             ui->labelCoinControlChangeLabel->setText(\"\");\n         else if (!CBitcoinAddress(text.toStdString()).IsValid())\n         {\n+            // invalid change address\n+            CoinControlDialog::coinControl->destChange = CNoDestination();\n+\n+            ui->lineEditCoinControlChange->setValid(false);\n             ui->labelCoinControlChangeLabel->setStyleSheet(\"QLabel{color:red;}\");\n             ui->labelCoinControlChangeLabel->setText(tr(\"Warning: Invalid Bitcoin address\"));\n         }\n@@ -571,6 +576,10 @@ void SendCoinsDialog::coinControlChangeEdited(const QString & text)\n                     ui->labelCoinControlChangeLabel->setText(tr(\"(no label)\"));\n                 else\n                 {\n+                    // unknown change address\n+                    CoinControlDialog::coinControl->destChange = CNoDestination();\n+\n+                    ui->lineEditCoinControlChange->setValid(false);\n                     ui->labelCoinControlChangeLabel->setStyleSheet(\"QLabel{color:red;}\");\n                     ui->labelCoinControlChangeLabel->setText(tr(\"Warning: Unknown change address\"));\n                 }"
      }
    ]
  },
  {
    "sha": "1e01f7c506af60012bb99ced053d98eb529eda61",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxZTAxZjdjNTA2YWY2MDAxMmJiOTljZWQwNTNkOThlYjUyOWVkYTYx",
    "commit": {
      "author": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2013-12-04T03:18:09Z"
      },
      "committer": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2013-12-04T03:18:09Z"
      },
      "message": "Payment request URI syntax changed, from request=... to r=...\n\nBIP 72 was changed to save six bytes in bitcoin: URIs.",
      "tree": {
        "sha": "bce24878fbe914590a085d06146bd55d024e5559",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bce24878fbe914590a085d06146bd55d024e5559"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1e01f7c506af60012bb99ced053d98eb529eda61",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1e01f7c506af60012bb99ced053d98eb529eda61",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1e01f7c506af60012bb99ced053d98eb529eda61",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1e01f7c506af60012bb99ced053d98eb529eda61/comments",
    "author": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f15bd3c96f0c6806a5140120a7c3442e08ae3812",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f15bd3c96f0c6806a5140120a7c3442e08ae3812",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f15bd3c96f0c6806a5140120a7c3442e08ae3812"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "06189aeaf3ea3d9ca241309de01fa7b71ba0f7ca",
        "filename": "src/qt/openuridialog.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1e01f7c506af60012bb99ced053d98eb529eda61/src/qt/openuridialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1e01f7c506af60012bb99ced053d98eb529eda61/src/qt/openuridialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/openuridialog.cpp?ref=1e01f7c506af60012bb99ced053d98eb529eda61",
        "patch": "@@ -48,5 +48,5 @@ void OpenURIDialog::on_selectFileButton_clicked()\n     if(filename.isEmpty())\n         return;\n     QUrl fileUri = QUrl::fromLocalFile(filename);\n-    ui->uriEdit->setText(\"bitcoin:?request=\" + QUrl::toPercentEncoding(fileUri.toString()));\n+    ui->uriEdit->setText(\"bitcoin:?r=\" + QUrl::toPercentEncoding(fileUri.toString()));\n }"
      },
      {
        "sha": "d66a722078456db3719e0475a7f2e881b5c611a7",
        "filename": "src/qt/paymentserver.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1e01f7c506af60012bb99ced053d98eb529eda61/src/qt/paymentserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1e01f7c506af60012bb99ced053d98eb529eda61/src/qt/paymentserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/paymentserver.cpp?ref=1e01f7c506af60012bb99ced053d98eb529eda61",
        "patch": "@@ -366,10 +366,10 @@ void PaymentServer::handleURIOrFile(const QString& s)\n #else\n         QUrlQuery uri((QUrl(s)));\n #endif\n-        if (uri.hasQueryItem(\"request\"))\n+        if (uri.hasQueryItem(\"r\"))\n         {\n             QByteArray temp;\n-            temp.append(uri.queryItemValue(\"request\"));\n+            temp.append(uri.queryItemValue(\"r\"));\n             QString decoded = QUrl::fromPercentEncoding(temp);\n             QUrl fetchUrl(decoded, QUrl::StrictMode);\n "
      }
    ]
  },
  {
    "sha": "6c98cca9e47ddb9c786cd3f0445175c378515e0d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2Yzk4Y2NhOWU0N2RkYjljNzg2Y2QzZjA0NDUxNzVjMzc4NTE1ZTBk",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-04T07:17:57Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-04T07:17:57Z"
      },
      "message": "qt: use deleteLater to remove send entries\n\nUse deleteLater() instead of delete, as it is not allowed\nto delete widgets directly in an event handler.\nShould solve the MacOSX random crashes on send with coincontrol.",
      "tree": {
        "sha": "e7e66512e89afb5fc6c58f5db42e85ea9c5f4d59",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e7e66512e89afb5fc6c58f5db42e85ea9c5f4d59"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6c98cca9e47ddb9c786cd3f0445175c378515e0d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6c98cca9e47ddb9c786cd3f0445175c378515e0d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6c98cca9e47ddb9c786cd3f0445175c378515e0d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6c98cca9e47ddb9c786cd3f0445175c378515e0d/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f15bd3c96f0c6806a5140120a7c3442e08ae3812",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f15bd3c96f0c6806a5140120a7c3442e08ae3812",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f15bd3c96f0c6806a5140120a7c3442e08ae3812"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "0a4e80811f5488b295e875c21b8b17e3fe26b6d8",
        "filename": "src/qt/sendcoinsdialog.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6c98cca9e47ddb9c786cd3f0445175c378515e0d/src/qt/sendcoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6c98cca9e47ddb9c786cd3f0445175c378515e0d/src/qt/sendcoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.cpp?ref=6c98cca9e47ddb9c786cd3f0445175c378515e0d",
        "patch": "@@ -260,7 +260,7 @@ void SendCoinsDialog::clear()\n     // Remove entries until only one left\n     while(ui->entries->count())\n     {\n-        delete ui->entries->takeAt(0)->widget();\n+        ui->entries->takeAt(0)->widget()->deleteLater();\n     }\n     addEntry();\n \n@@ -306,7 +306,7 @@ void SendCoinsDialog::updateTabsAndLabels()\n \n void SendCoinsDialog::removeEntry(SendCoinsEntry* entry)\n {\n-    delete entry;\n+    entry->deleteLater();\n \n     // If the last entry was removed add an empty one\n     if (!ui->entries->count())"
      }
    ]
  },
  {
    "sha": "00cfc9f0749daed5137bea78a4234c3d074e8889",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowMGNmYzlmMDc0OWRhZWQ1MTM3YmVhNzhhNDIzNGMzZDA3NGU4ODg5",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-04T08:42:00Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-04T08:42:09Z"
      },
      "message": "Merge pull request #3355\n\n6c98cca qt: use deleteLater to remove send entries (Wladimir J. van der Laan)",
      "tree": {
        "sha": "e7e66512e89afb5fc6c58f5db42e85ea9c5f4d59",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e7e66512e89afb5fc6c58f5db42e85ea9c5f4d59"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/00cfc9f0749daed5137bea78a4234c3d074e8889",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJSnurhAAoJEHSBCwEjRsmmG5YIAI35th2+yGIGDCwDABxMOToy\nMgDcBX1RipXKVo19H76bJVCVez8GoR6nbnMpxXaxSZWNZokVthZsH2VxrtJQ3BtA\ncaSWEAtZIFa3/eatvBPUAccz54yBhhuJhIUPZbg4Le4e0wqkUjxYd1yaNZ/kHUk4\nd8qNFKuAuETw7tv+c22VeDicVNGtOHf0PP51RmPmbeLdzzuPJMauX+kEpZ6+4NKd\ncDQy+a8ukiBdo+6peCq9Selyl2P/HSx/K68+PZK5eqsyQ1/RSOQklKGQyOdd3BCZ\n48+abgREQW22d173tDfXu4cJRjhsjmJ+oDaqRQaHQe7z5BSeipXEZ2E2w4wIb/g=\n=HbZs\n-----END PGP SIGNATURE-----",
        "payload": "tree e7e66512e89afb5fc6c58f5db42e85ea9c5f4d59\nparent f15bd3c96f0c6806a5140120a7c3442e08ae3812\nparent 6c98cca9e47ddb9c786cd3f0445175c378515e0d\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1386146520 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1386146529 +0100\n\nMerge pull request #3355\n\n6c98cca qt: use deleteLater to remove send entries (Wladimir J. van der Laan)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/00cfc9f0749daed5137bea78a4234c3d074e8889",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/00cfc9f0749daed5137bea78a4234c3d074e8889",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/00cfc9f0749daed5137bea78a4234c3d074e8889/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f15bd3c96f0c6806a5140120a7c3442e08ae3812",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f15bd3c96f0c6806a5140120a7c3442e08ae3812",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f15bd3c96f0c6806a5140120a7c3442e08ae3812"
      },
      {
        "sha": "6c98cca9e47ddb9c786cd3f0445175c378515e0d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6c98cca9e47ddb9c786cd3f0445175c378515e0d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6c98cca9e47ddb9c786cd3f0445175c378515e0d"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "0a4e80811f5488b295e875c21b8b17e3fe26b6d8",
        "filename": "src/qt/sendcoinsdialog.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/00cfc9f0749daed5137bea78a4234c3d074e8889/src/qt/sendcoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/00cfc9f0749daed5137bea78a4234c3d074e8889/src/qt/sendcoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.cpp?ref=00cfc9f0749daed5137bea78a4234c3d074e8889",
        "patch": "@@ -260,7 +260,7 @@ void SendCoinsDialog::clear()\n     // Remove entries until only one left\n     while(ui->entries->count())\n     {\n-        delete ui->entries->takeAt(0)->widget();\n+        ui->entries->takeAt(0)->widget()->deleteLater();\n     }\n     addEntry();\n \n@@ -306,7 +306,7 @@ void SendCoinsDialog::updateTabsAndLabels()\n \n void SendCoinsDialog::removeEntry(SendCoinsEntry* entry)\n {\n-    delete entry;\n+    entry->deleteLater();\n \n     // If the last entry was removed add an empty one\n     if (!ui->entries->count())"
      }
    ]
  },
  {
    "sha": "bbb093652e33c0905d93f9d4bb70dbaf269e0cad",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiYmIwOTM2NTJlMzNjMDkwNWQ5M2Y5ZDRiYjcwZGJhZjI2OWUwY2Fk",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-11-29T14:48:07Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-04T11:46:12Z"
      },
      "message": "Move HelpExample* from rpcwallet to rpcserver\n\nGeneral functions used throughout the RPC framework\ndon't belong in rpcwallet.",
      "tree": {
        "sha": "4ab8dab830faf7c10e4fb0f9acfdcd53906bd7e5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4ab8dab830faf7c10e4fb0f9acfdcd53906bd7e5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bbb093652e33c0905d93f9d4bb70dbaf269e0cad",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bbb093652e33c0905d93f9d4bb70dbaf269e0cad",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bbb093652e33c0905d93f9d4bb70dbaf269e0cad",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bbb093652e33c0905d93f9d4bb70dbaf269e0cad/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "00cfc9f0749daed5137bea78a4234c3d074e8889",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/00cfc9f0749daed5137bea78a4234c3d074e8889",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/00cfc9f0749daed5137bea78a4234c3d074e8889"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 9,
      "deletions": 9
    },
    "files": [
      {
        "sha": "949e81e07f07f92ed019a0ac95fe8859dcbe318f",
        "filename": "src/rpcserver.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bbb093652e33c0905d93f9d4bb70dbaf269e0cad/src/rpcserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bbb093652e33c0905d93f9d4bb70dbaf269e0cad/src/rpcserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.cpp?ref=bbb093652e33c0905d93f9d4bb70dbaf269e0cad",
        "patch": "@@ -820,4 +820,13 @@ json_spirit::Value CRPCTable::execute(const std::string &strMethod, const json_s\n     }\n }\n \n+std::string HelpExampleCli(string methodname, string args){\n+    return \"> bitcoin-cli \" + methodname + \" \" + args + \"\\n\";\n+}\n+\n+std::string HelpExampleRpc(string methodname, string args){\n+    return \"> curl --user myusername --data-binary '{\\\"jsonrpc\\\": \\\"1.0\\\", \\\"id\\\":\\\"curltest\\\", \"\n+        \"\\\"method\\\": \\\"\" + methodname + \"\\\", \\\"params\\\": [\" + args + \"] }' -H 'content-type: text/plain;' http://127.0.0.1:8332/\\n\";\n+}\n+\n const CRPCTable tableRPC;"
      },
      {
        "sha": "77ebc189a8184feb7a1d0caa6153db5e705f2492",
        "filename": "src/rpcwallet.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 9,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bbb093652e33c0905d93f9d4bb70dbaf269e0cad/src/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bbb093652e33c0905d93f9d4bb70dbaf269e0cad/src/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.cpp?ref=bbb093652e33c0905d93f9d4bb70dbaf269e0cad",
        "patch": "@@ -33,15 +33,6 @@ std::string HelpRequiringPassphrase()\n         : \"\";\n }\n \n-std::string HelpExampleCli(string methodname, string args){\n-    return \"> bitcoin-cli \" + methodname + \" \" + args + \"\\n\";\n-}\n-\n-std::string HelpExampleRpc(string methodname, string args){\n-    return \"> curl --user myusername --data-binary '{\\\"jsonrpc\\\": \\\"1.0\\\", \\\"id\\\":\\\"curltest\\\", \"\n-        \"\\\"method\\\": \\\"\" + methodname + \"\\\", \\\"params\\\": [\" + args + \"] }' -H 'content-type: text/plain;' http://127.0.0.1:8332/\\n\";\n-}\n-\n void EnsureWalletIsUnlocked()\n {\n     if (pwalletMain->IsLocked())"
      }
    ]
  },
  {
    "sha": "991685d3dc208cfcbc2f27900a7252fb14c8f7ad",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5OTE2ODVkM2RjMjA4Y2ZjYmMyZjI3OTAwYTcyNTJmYjE0YzhmN2Fk",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-11-29T15:00:11Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-04T11:46:13Z"
      },
      "message": "Move getinfo to rpcnet.cpp\n\nWhere to place `getinfo` is a difficult issue\nas it shows information from the wallet, net and\nblock chain. However, I moved it out of rpcwallet\nas the command needs also to be available without\nwallet.",
      "tree": {
        "sha": "fa1b64162c5ccfc62b41f09723a299801795221b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fa1b64162c5ccfc62b41f09723a299801795221b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/991685d3dc208cfcbc2f27900a7252fb14c8f7ad",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/991685d3dc208cfcbc2f27900a7252fb14c8f7ad",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/991685d3dc208cfcbc2f27900a7252fb14c8f7ad",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/991685d3dc208cfcbc2f27900a7252fb14c8f7ad/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bbb093652e33c0905d93f9d4bb70dbaf269e0cad",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bbb093652e33c0905d93f9d4bb70dbaf269e0cad",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bbb093652e33c0905d93f9d4bb70dbaf269e0cad"
      }
    ],
    "stats": {
      "total": 117,
      "additions": 59,
      "deletions": 58
    },
    "files": [
      {
        "sha": "71b55bca1ed5b08bd8552496c6ceea714e4e5106",
        "filename": "src/rpcnet.cpp",
        "status": "modified",
        "additions": 59,
        "deletions": 0,
        "changes": 59,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/991685d3dc208cfcbc2f27900a7252fb14c8f7ad/src/rpcnet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/991685d3dc208cfcbc2f27900a7252fb14c8f7ad/src/rpcnet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcnet.cpp?ref=991685d3dc208cfcbc2f27900a7252fb14c8f7ad",
        "patch": "@@ -8,6 +8,9 @@\n #include \"protocol.h\"\n #include \"sync.h\"\n #include \"util.h\"\n+#include \"wallet.h\" // for getinfo\n+#include \"init.h\" // for getinfo\n+#include \"main.h\" // for getinfo\n \n #include <inttypes.h>\n \n@@ -329,3 +332,59 @@ Value getnettotals(const Array& params, bool fHelp)\n     obj.push_back(Pair(\"timemillis\", static_cast<boost::int64_t>(GetTimeMillis())));\n     return obj;\n }\n+\n+Value getinfo(const Array& params, bool fHelp)\n+{\n+    if (fHelp || params.size() != 0)\n+        throw runtime_error(\n+            \"getinfo\\n\"\n+            \"Returns an object containing various state info.\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"version\\\": xxxxx,           (numeric) the server version\\n\"\n+            \"  \\\"protocolversion\\\": xxxxx,   (numeric) the protocol version\\n\"\n+            \"  \\\"walletversion\\\": xxxxx,     (numeric) the wallet version\\n\"\n+            \"  \\\"balance\\\": xxxxxxx,         (numeric) the total bitcoin balance of the wallet\\n\"\n+            \"  \\\"blocks\\\": xxxxxx,           (numeric) the current number of blocks processed in the server\\n\"\n+            \"  \\\"timeoffset\\\": xxxxx,        (numeric) the time offset\\n\"\n+            \"  \\\"connections\\\": xxxxx,       (numeric) the number of connections\\n\"\n+            \"  \\\"proxy\\\": \\\"host:port\\\",     (string, optional) the proxy used by the server\\n\"\n+            \"  \\\"difficulty\\\": xxxxxx,       (numeric) the current difficulty\\n\"\n+            \"  \\\"testnet\\\": true|false,      (boolean) if the server is using testnet or not\\n\"\n+            \"  \\\"keypoololdest\\\": xxxxxx,    (numeric) the timestamp (seconds since GMT epoch) of the oldest pre-generated key in the key pool\\n\"\n+            \"  \\\"keypoolsize\\\": xxxx,        (numeric) how many new keys are pre-generated\\n\"\n+            \"  \\\"paytxfee\\\": x.xxxx,         (numeric) the transaction fee set in btc\\n\"\n+            \"  \\\"unlocked_until\\\": ttt,      (numeric) the timestamp in seconds since epoch (midnight Jan 1 1970 GMT) that the wallet is unlocked for transfers, or 0 if the wallet is locked\\n\"\n+            \"  \\\"errors\\\": \\\"...\\\"           (string) any error messages\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getinfo\", \"\")\n+            + HelpExampleRpc(\"getinfo\", \"\")\n+        );\n+\n+    proxyType proxy;\n+    GetProxy(NET_IPV4, proxy);\n+\n+    Object obj;\n+    obj.push_back(Pair(\"version\",       (int)CLIENT_VERSION));\n+    obj.push_back(Pair(\"protocolversion\",(int)PROTOCOL_VERSION));\n+    if (pwalletMain) {\n+        obj.push_back(Pair(\"walletversion\", pwalletMain->GetVersion()));\n+        obj.push_back(Pair(\"balance\",       ValueFromAmount(pwalletMain->GetBalance())));\n+    }\n+    obj.push_back(Pair(\"blocks\",        (int)chainActive.Height()));\n+    obj.push_back(Pair(\"timeoffset\",    (boost::int64_t)GetTimeOffset()));\n+    obj.push_back(Pair(\"connections\",   (int)vNodes.size()));\n+    obj.push_back(Pair(\"proxy\",         (proxy.first.IsValid() ? proxy.first.ToStringIPPort() : string())));\n+    obj.push_back(Pair(\"difficulty\",    (double)GetDifficulty()));\n+    obj.push_back(Pair(\"testnet\",       TestNet()));\n+    if (pwalletMain) {\n+        obj.push_back(Pair(\"keypoololdest\", (boost::int64_t)pwalletMain->GetOldestKeyPoolTime()));\n+        obj.push_back(Pair(\"keypoolsize\",   (int)pwalletMain->GetKeyPoolSize()));\n+    }\n+    obj.push_back(Pair(\"paytxfee\",      ValueFromAmount(nTransactionFee)));\n+    if (pwalletMain && pwalletMain->IsCrypted())\n+        obj.push_back(Pair(\"unlocked_until\", (boost::int64_t)nWalletUnlockTime));\n+    obj.push_back(Pair(\"errors\",        GetWarnings(\"statusbar\")));\n+    return obj;\n+}"
      },
      {
        "sha": "bb87afec5b618b361d5959ee414409a1ecf57abe",
        "filename": "src/rpcwallet.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 58,
        "changes": 58,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/991685d3dc208cfcbc2f27900a7252fb14c8f7ad/src/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/991685d3dc208cfcbc2f27900a7252fb14c8f7ad/src/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.cpp?ref=991685d3dc208cfcbc2f27900a7252fb14c8f7ad",
        "patch": "@@ -66,64 +66,6 @@ string AccountFromValue(const Value& value)\n     return strAccount;\n }\n \n-Value getinfo(const Array& params, bool fHelp)\n-{\n-    if (fHelp || params.size() != 0)\n-        throw runtime_error(\n-            \"getinfo\\n\"\n-            \"Returns an object containing various state info.\\n\"\n-            \"\\nResult:\\n\"\n-            \"{\\n\"\n-            \"  \\\"version\\\": xxxxx,           (numeric) the server version\\n\"\n-            \"  \\\"protocolversion\\\": xxxxx,   (numeric) the protocol version\\n\"\n-            \"  \\\"walletversion\\\": xxxxx,     (numeric) the wallet version\\n\"\n-            \"  \\\"balance\\\": xxxxxxx,         (numeric) the total bitcoin balance of the wallet\\n\"\n-            \"  \\\"blocks\\\": xxxxxx,           (numeric) the current number of blocks processed in the server\\n\"\n-            \"  \\\"timeoffset\\\": xxxxx,        (numeric) the time offset\\n\"\n-            \"  \\\"connections\\\": xxxxx,       (numeric) the number of connections\\n\"\n-            \"  \\\"proxy\\\": \\\"host:port\\\",     (string, optional) the proxy used by the server\\n\"\n-            \"  \\\"difficulty\\\": xxxxxx,       (numeric) the current difficulty\\n\"\n-            \"  \\\"testnet\\\": true|false,      (boolean) if the server is using testnet or not\\n\"\n-            \"  \\\"keypoololdest\\\": xxxxxx,    (numeric) the timestamp (seconds since GMT epoch) of the oldest pre-generated key in the key pool\\n\"\n-            \"  \\\"keypoolsize\\\": xxxx,        (numeric) how many new keys are pre-generated\\n\"\n-            \"  \\\"paytxfee\\\": x.xxxx,         (numeric) the transaction fee set in btc\\n\"\n-            \"  \\\"unlocked_until\\\": ttt,      (numeric) the timestamp in seconds since epoch (midnight Jan 1 1970 GMT) that the wallet is unlocked for transfers, or 0 if the wallet is locked\\n\"\n-            \"  \\\"errors\\\": \\\"...\\\"           (string) any error messages\\n\"\n-            \"}\\n\"\n-            \"\\nExamples:\\n\"\n-            + HelpExampleCli(\"getinfo\", \"\")\n-            + HelpExampleRpc(\"getinfo\", \"\")\n-        );\n-\n-    proxyType proxy;\n-    GetProxy(NET_IPV4, proxy);\n-\n-    Object obj;\n-    obj.push_back(Pair(\"version\",       (int)CLIENT_VERSION));\n-    obj.push_back(Pair(\"protocolversion\",(int)PROTOCOL_VERSION));\n-    if (pwalletMain) {\n-        obj.push_back(Pair(\"walletversion\", pwalletMain->GetVersion()));\n-        obj.push_back(Pair(\"balance\",       ValueFromAmount(pwalletMain->GetBalance())));\n-    }\n-    obj.push_back(Pair(\"blocks\",        (int)chainActive.Height()));\n-    obj.push_back(Pair(\"timeoffset\",    (boost::int64_t)GetTimeOffset()));\n-    obj.push_back(Pair(\"connections\",   (int)vNodes.size()));\n-    obj.push_back(Pair(\"proxy\",         (proxy.first.IsValid() ? proxy.first.ToStringIPPort() : string())));\n-    obj.push_back(Pair(\"difficulty\",    (double)GetDifficulty()));\n-    obj.push_back(Pair(\"testnet\",       TestNet()));\n-    if (pwalletMain) {\n-        obj.push_back(Pair(\"keypoololdest\", (boost::int64_t)pwalletMain->GetOldestKeyPoolTime()));\n-        obj.push_back(Pair(\"keypoolsize\",   (int)pwalletMain->GetKeyPoolSize()));\n-    }\n-    obj.push_back(Pair(\"paytxfee\",      ValueFromAmount(nTransactionFee)));\n-    if (pwalletMain && pwalletMain->IsCrypted())\n-        obj.push_back(Pair(\"unlocked_until\", (boost::int64_t)nWalletUnlockTime));\n-    obj.push_back(Pair(\"errors\",        GetWarnings(\"statusbar\")));\n-    return obj;\n-}\n-\n-\n-\n Value getnewaddress(const Array& params, bool fHelp)\n {\n     if (fHelp || params.size() > 1)"
      }
    ]
  },
  {
    "sha": "48ba56cdfd1f0d2478b0d8cffb828efb6982ed76",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0OGJhNTZjZGZkMWYwZDI0NzhiMGQ4Y2ZmYjgyOGVmYjY5ODJlZDc2",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-11-29T15:04:29Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-04T11:46:13Z"
      },
      "message": "Delimit code with #ifdef ENABLE_WALLET\n\nDelimit all code that uses the wallet functions\nin implementation files that conditionally use the wallet.",
      "tree": {
        "sha": "9616a93d913e09f9a7b63878c107a591615cc6e0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9616a93d913e09f9a7b63878c107a591615cc6e0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/48ba56cdfd1f0d2478b0d8cffb828efb6982ed76",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/48ba56cdfd1f0d2478b0d8cffb828efb6982ed76",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/48ba56cdfd1f0d2478b0d8cffb828efb6982ed76",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/48ba56cdfd1f0d2478b0d8cffb828efb6982ed76/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "991685d3dc208cfcbc2f27900a7252fb14c8f7ad",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/991685d3dc208cfcbc2f27900a7252fb14c8f7ad",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/991685d3dc208cfcbc2f27900a7252fb14c8f7ad"
      }
    ],
    "stats": {
      "total": 125,
      "additions": 101,
      "deletions": 24
    },
    "files": [
      {
        "sha": "fc15df05942a4201e77565d4ee72df58daa094d6",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 33,
        "deletions": 8,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/48ba56cdfd1f0d2478b0d8cffb828efb6982ed76/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/48ba56cdfd1f0d2478b0d8cffb828efb6982ed76/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=48ba56cdfd1f0d2478b0d8cffb828efb6982ed76",
        "patch": "@@ -10,15 +10,18 @@\n #include \"init.h\"\n \n #include \"addrman.h\"\n+#include \"db.h\"\n #include \"rpcserver.h\"\n #include \"checkpoints.h\"\n #include \"miner.h\"\n #include \"net.h\"\n #include \"txdb.h\"\n #include \"ui_interface.h\"\n #include \"util.h\"\n+#ifdef ENABLE_WALLET\n #include \"wallet.h\"\n #include \"walletdb.h\"\n+#endif\n \n #include <inttypes.h>\n #include <stdint.h>\n@@ -35,8 +38,10 @@\n using namespace std;\n using namespace boost;\n \n+#ifdef ENABLE_WALLET\n std::string strWalletFile;\n CWallet* pwalletMain;\n+#endif\n \n #ifdef WIN32\n // Win32 LevelDB doesn't use filedescriptors, and the ones used for\n@@ -108,15 +113,19 @@ void Shutdown()\n     RenameThread(\"bitcoin-shutoff\");\n     mempool.AddTransactionsUpdated(1);\n     StopRPCThreads();\n+#ifdef ENABLE_WALLET\n     ShutdownRPCMining();\n     if (pwalletMain)\n         bitdb.Flush(false);\n     GenerateBitcoins(false, NULL, 0);\n+#endif\n     StopNode();\n     {\n         LOCK(cs_main);\n+#ifdef ENABLE_WALLET\n         if (pwalletMain)\n             pwalletMain->SetBestChain(chainActive.GetLocator());\n+#endif\n         if (pblocktree)\n             pblocktree->Flush();\n         if (pcoinsTip)\n@@ -125,12 +134,16 @@ void Shutdown()\n         delete pcoinsdbview; pcoinsdbview = NULL;\n         delete pblocktree; pblocktree = NULL;\n     }\n+#ifdef ENABLE_WALLET\n     if (pwalletMain)\n         bitdb.Flush(true);\n+#endif\n     boost::filesystem::remove(GetPidFile());\n     UnregisterAllWallets();\n+#ifdef ENABLE_WALLET\n     if (pwalletMain)\n         delete pwalletMain;\n+#endif\n     LogPrintf(\"Shutdown : done\\n\");\n }\n \n@@ -479,7 +492,9 @@ bool AppInit2(boost::thread_group& threadGroup, bool fForceServer)\n     fPrintToConsole = GetBoolArg(\"-printtoconsole\", false);\n     fPrintToDebugger = GetBoolArg(\"-printtodebugger\", false);\n     fLogTimestamps = GetBoolArg(\"-logtimestamps\", true);\n+#ifdef ENABLE_WALLET\n     bool fDisableWallet = GetBoolArg(\"-disablewallet\", false);\n+#endif\n \n     if (mapArgs.count(\"-timeout\"))\n     {\n@@ -525,16 +540,17 @@ bool AppInit2(boost::thread_group& threadGroup, bool fForceServer)\n             InitWarning(_(\"Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.\"));\n     }\n \n+#ifdef ENABLE_WALLET\n     strWalletFile = GetArg(\"-wallet\", \"wallet.dat\");\n-\n+#endif\n     // ********************************************************* Step 4: application initialization: dir lock, daemonize, pidfile, debug log\n \n     std::string strDataDir = GetDataDir().string();\n-\n+#ifdef ENABLE_WALLET\n     // Wallet file must be a plain filename without a directory\n     if (strWalletFile != boost::filesystem::basename(strWalletFile) + boost::filesystem::extension(strWalletFile))\n         return InitError(strprintf(_(\"Wallet %s resides outside data directory %s\"), strWalletFile.c_str(), strDataDir.c_str()));\n-\n+#endif\n     // Make sure only a single Bitcoin process is using the data directory.\n     boost::filesystem::path pathLockFile = GetDataDir() / \".lock\";\n     FILE* file = fopen(pathLockFile.string().c_str(), \"a\"); // empty lock file; created if it doesn't exist.\n@@ -567,7 +583,7 @@ bool AppInit2(boost::thread_group& threadGroup, bool fForceServer)\n     int64_t nStart;\n \n     // ********************************************************* Step 5: verify wallet database integrity\n-\n+#ifdef ENABLE_WALLET\n     if (!fDisableWallet) {\n         uiInterface.InitMessage(_(\"Verifying wallet...\"));\n \n@@ -613,7 +629,7 @@ bool AppInit2(boost::thread_group& threadGroup, bool fForceServer)\n                 return InitError(_(\"wallet.dat corrupt, salvage failed\"));\n         }\n     } // (!fDisableWallet)\n-\n+#endif // ENABLE_WALLET\n     // ********************************************************* Step 6: network initialization\n \n     RegisterNodeSignals(GetNodeSignals());\n@@ -880,7 +896,7 @@ bool AppInit2(boost::thread_group& threadGroup, bool fForceServer)\n     }\n \n     // ********************************************************* Step 8: load wallet\n-\n+#ifdef ENABLE_WALLET\n     if (fDisableWallet) {\n         pwalletMain = NULL;\n         LogPrintf(\"Wallet disabled!\\n\");\n@@ -972,7 +988,9 @@ bool AppInit2(boost::thread_group& threadGroup, bool fForceServer)\n             nWalletDBUpdated++;\n         }\n     } // (!fDisableWallet)\n-\n+#else // ENABLE_WALLET\n+    LogPrintf(\"No wallet compiled in!\\n\");\n+#endif // !ENABLE_WALLET\n     // ********************************************************* Step 9: import blocks\n \n     // scan for better chains in the block chain database, that are not yet connected in the active best chain\n@@ -1016,32 +1034,39 @@ bool AppInit2(boost::thread_group& threadGroup, bool fForceServer)\n     //// debug print\n     LogPrintf(\"mapBlockIndex.size() = %\"PRIszu\"\\n\",   mapBlockIndex.size());\n     LogPrintf(\"nBestHeight = %d\\n\",                   chainActive.Height());\n+#ifdef ENABLE_WALLET\n     LogPrintf(\"setKeyPool.size() = %\"PRIszu\"\\n\",      pwalletMain ? pwalletMain->setKeyPool.size() : 0);\n     LogPrintf(\"mapWallet.size() = %\"PRIszu\"\\n\",       pwalletMain ? pwalletMain->mapWallet.size() : 0);\n     LogPrintf(\"mapAddressBook.size() = %\"PRIszu\"\\n\",  pwalletMain ? pwalletMain->mapAddressBook.size() : 0);\n+#endif\n \n     StartNode(threadGroup);\n-\n+#ifdef ENABLE_WALLET\n     // InitRPCMining is needed here so getwork/getblocktemplate in the GUI debug console works properly.\n     InitRPCMining();\n+#endif\n     if (fServer)\n         StartRPCThreads();\n \n+#ifdef ENABLE_WALLET\n     // Generate coins in the background\n     if (pwalletMain)\n         GenerateBitcoins(GetBoolArg(\"-gen\", false), pwalletMain, GetArg(\"-genproclimit\", -1));\n+#endif\n \n     // ********************************************************* Step 12: finished\n \n     uiInterface.InitMessage(_(\"Done loading\"));\n \n+#ifdef ENABLE_WALLET\n     if (pwalletMain) {\n         // Add wallet transactions that aren't already in a block to mapTransactions\n         pwalletMain->ReacceptWalletTransactions();\n \n         // Run a thread to flush wallet periodically\n         threadGroup.create_thread(boost::bind(&ThreadFlushWalletDB, boost::ref(pwalletMain->strWalletFile)));\n     }\n+#endif\n \n     return !fRequestShutdown;\n }"
      },
      {
        "sha": "89bf53060e260c8d179e558a0c9234accc2ebc5f",
        "filename": "src/rpcnet.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 1,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/48ba56cdfd1f0d2478b0d8cffb828efb6982ed76/src/rpcnet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/48ba56cdfd1f0d2478b0d8cffb828efb6982ed76/src/rpcnet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcnet.cpp?ref=48ba56cdfd1f0d2478b0d8cffb828efb6982ed76",
        "patch": "@@ -1,15 +1,16 @@\n // Copyright (c) 2009-2013 The Bitcoin developers\n // Distributed under the MIT/X11 software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n #include \"rpcserver.h\"\n #include \"net.h\"\n #include \"netbase.h\"\n #include \"protocol.h\"\n #include \"sync.h\"\n #include \"util.h\"\n+#ifdef ENABLE_WALLET\n #include \"wallet.h\" // for getinfo\n #include \"init.h\" // for getinfo\n+#endif\n #include \"main.h\" // for getinfo\n \n #include <inttypes.h>\n@@ -368,23 +369,29 @@ Value getinfo(const Array& params, bool fHelp)\n     Object obj;\n     obj.push_back(Pair(\"version\",       (int)CLIENT_VERSION));\n     obj.push_back(Pair(\"protocolversion\",(int)PROTOCOL_VERSION));\n+#ifdef ENABLE_WALLET\n     if (pwalletMain) {\n         obj.push_back(Pair(\"walletversion\", pwalletMain->GetVersion()));\n         obj.push_back(Pair(\"balance\",       ValueFromAmount(pwalletMain->GetBalance())));\n     }\n+#endif\n     obj.push_back(Pair(\"blocks\",        (int)chainActive.Height()));\n     obj.push_back(Pair(\"timeoffset\",    (boost::int64_t)GetTimeOffset()));\n     obj.push_back(Pair(\"connections\",   (int)vNodes.size()));\n     obj.push_back(Pair(\"proxy\",         (proxy.first.IsValid() ? proxy.first.ToStringIPPort() : string())));\n     obj.push_back(Pair(\"difficulty\",    (double)GetDifficulty()));\n     obj.push_back(Pair(\"testnet\",       TestNet()));\n+#ifdef ENABLE_WALLET\n     if (pwalletMain) {\n         obj.push_back(Pair(\"keypoololdest\", (boost::int64_t)pwalletMain->GetOldestKeyPoolTime()));\n         obj.push_back(Pair(\"keypoolsize\",   (int)pwalletMain->GetKeyPoolSize()));\n     }\n+#endif\n     obj.push_back(Pair(\"paytxfee\",      ValueFromAmount(nTransactionFee)));\n+#ifdef ENABLE_WALLET\n     if (pwalletMain && pwalletMain->IsCrypted())\n         obj.push_back(Pair(\"unlocked_until\", (boost::int64_t)nWalletUnlockTime));\n+#endif\n     obj.push_back(Pair(\"errors\",        GetWarnings(\"statusbar\")));\n     return obj;\n }"
      },
      {
        "sha": "abbc33cc56aefecaa13bd01174ce6ddb4f79368e",
        "filename": "src/rpcrawtransaction.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/48ba56cdfd1f0d2478b0d8cffb828efb6982ed76/src/rpcrawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/48ba56cdfd1f0d2478b0d8cffb828efb6982ed76/src/rpcrawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcrawtransaction.cpp?ref=48ba56cdfd1f0d2478b0d8cffb828efb6982ed76",
        "patch": "@@ -8,7 +8,12 @@\n #include \"init.h\"\n #include \"net.h\"\n #include \"uint256.h\"\n+#include \"core.h\"\n+#include \"main.h\"\n+#include \"keystore.h\"\n+#ifdef ENABLE_WALLET\n #include \"wallet.h\"\n+#endif\n \n #include <stdint.h>\n \n@@ -190,6 +195,7 @@ Value getrawtransaction(const Array& params, bool fHelp)\n     return result;\n }\n \n+#ifdef ENABLE_WALLET\n Value listunspent(const Array& params, bool fHelp)\n {\n     if (fHelp || params.size() > 3)\n@@ -303,6 +309,7 @@ Value listunspent(const Array& params, bool fHelp)\n \n     return results;\n }\n+#endif\n \n Value createrawtransaction(const Array& params, bool fHelp)\n {\n@@ -508,7 +515,9 @@ Value signrawtransaction(const Array& params, bool fHelp)\n             \"this transaction depends on but may not yet be in the block chain.\\n\"\n             \"The third optional argument (may be null) is an array of base58-encoded private\\n\"\n             \"keys that, if given, will be the only keys used to sign the transaction.\\n\"\n+#ifdef ENABLE_WALLET\n             + HelpRequiringPassphrase() + \"\\n\"\n+#endif\n \n             \"\\nArguments:\\n\"\n             \"1. \\\"hexstring\\\"     (string, required) The transaction hex string\\n\"\n@@ -605,8 +614,10 @@ Value signrawtransaction(const Array& params, bool fHelp)\n             tempKeystore.AddKey(key);\n         }\n     }\n+#ifdef ENABLE_WALLET\n     else\n         EnsureWalletIsUnlocked();\n+#endif\n \n     // Add previous txouts given in the RPC call:\n     if (params.size() > 1 && params[1].type() != null_type)\n@@ -662,7 +673,11 @@ Value signrawtransaction(const Array& params, bool fHelp)\n         }\n     }\n \n+#ifdef ENABLE_WALLET\n     const CKeyStore& keystore = ((fGivenKeys || !pwalletMain) ? tempKeystore : *pwalletMain);\n+#else\n+    const CKeyStore& keystore = tempKeystore;\n+#endif\n \n     int nHashType = SIGHASH_ALL;\n     if (params.size() > 3 && params[3].type() != null_type)"
      },
      {
        "sha": "2dc7b34f8823ac3f05f7af63f1015e1abd6386b1",
        "filename": "src/rpcserver.cpp",
        "status": "modified",
        "additions": 31,
        "deletions": 14,
        "changes": 45,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/48ba56cdfd1f0d2478b0d8cffb828efb6982ed76/src/rpcserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/48ba56cdfd1f0d2478b0d8cffb828efb6982ed76/src/rpcserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.cpp?ref=48ba56cdfd1f0d2478b0d8cffb828efb6982ed76",
        "patch": "@@ -9,7 +9,10 @@\n #include \"init.h\"\n #include \"main.h\"\n #include \"util.h\"\n+#include \"ui_interface.h\"\n+#ifdef ENABLE_WALLET\n #include \"wallet.h\"\n+#endif\n \n #include <boost/algorithm/string.hpp>\n #include <boost/asio.hpp>\n@@ -149,8 +152,10 @@ string CRPCTable::help(string strCommand) const\n             continue;\n         if (strCommand != \"\" && strMethod != strCommand)\n             continue;\n+#ifdef ENABLE_WALLET\n         if (pcmd->reqWallet && !pwalletMain)\n             continue;\n+#endif\n \n         try\n         {\n@@ -228,11 +233,26 @@ static const CRPCCommand vRPCCommands[] =\n     { \"getaddednodeinfo\",       &getaddednodeinfo,       true,      true,       false },\n     { \"getnettotals\",           &getnettotals,           true,      true,       false },\n     { \"getdifficulty\",          &getdifficulty,          true,      false,      false },\n+    { \"getinfo\",                &getinfo,                true,      false,      false },\n+    { \"getrawmempool\",          &getrawmempool,          true,      false,      false },\n+    { \"getblock\",               &getblock,               false,     false,      false },\n+    { \"getblockhash\",           &getblockhash,           false,     false,      false },\n+    { \"settxfee\",               &settxfee,               false,     false,      true },\n+    { \"getrawtransaction\",      &getrawtransaction,      false,     false,      false },\n+    { \"createrawtransaction\",   &createrawtransaction,   false,     false,      false },\n+    { \"decoderawtransaction\",   &decoderawtransaction,   false,     false,      false },\n+    { \"decodescript\",           &decodescript,           false,     false,      false },\n+    { \"signrawtransaction\",     &signrawtransaction,     false,     false,      false },\n+    { \"sendrawtransaction\",     &sendrawtransaction,     false,     false,      false },\n+    { \"gettxoutsetinfo\",        &gettxoutsetinfo,        true,      false,      false },\n+    { \"gettxout\",               &gettxout,               true,      false,      false },\n+    { \"verifychain\",            &verifychain,            true,      false,      false },\n+\n+#ifdef ENABLE_WALLET\n     { \"getnetworkhashps\",       &getnetworkhashps,       true,      false,      false },\n     { \"getgenerate\",            &getgenerate,            true,      false,      false },\n     { \"setgenerate\",            &setgenerate,            true,      true,       false },\n     { \"gethashespersec\",        &gethashespersec,        true,      false,      false },\n-    { \"getinfo\",                &getinfo,                true,      false,      false },\n     { \"getmininginfo\",          &getmininginfo,          true,      false,      false },\n     { \"getnewaddress\",          &getnewaddress,          true,      false,      true },\n     { \"getaccountaddress\",      &getaccountaddress,      true,      false,      true },\n@@ -258,17 +278,13 @@ static const CRPCCommand vRPCCommands[] =\n     { \"sendmany\",               &sendmany,               false,     false,      true },\n     { \"addmultisigaddress\",     &addmultisigaddress,     false,     false,      true },\n     { \"createmultisig\",         &createmultisig,         true,      true ,      false },\n-    { \"getrawmempool\",          &getrawmempool,          true,      false,      false },\n-    { \"getblock\",               &getblock,               false,     false,      false },\n-    { \"getblockhash\",           &getblockhash,           false,     false,      false },\n     { \"gettransaction\",         &gettransaction,         false,     false,      true },\n     { \"listtransactions\",       &listtransactions,       false,     false,      true },\n     { \"listaddressgroupings\",   &listaddressgroupings,   false,     false,      true },\n     { \"signmessage\",            &signmessage,            false,     false,      true },\n     { \"verifymessage\",          &verifymessage,          false,     false,      false },\n     { \"getwork\",                &getwork,                true,      false,      true },\n     { \"listaccounts\",           &listaccounts,           false,     false,      true },\n-    { \"settxfee\",               &settxfee,               false,     false,      true },\n     { \"getblocktemplate\",       &getblocktemplate,       true,      false,      false },\n     { \"submitblock\",            &submitblock,            false,     false,      false },\n     { \"listsinceblock\",         &listsinceblock,         false,     false,      true },\n@@ -277,17 +293,9 @@ static const CRPCCommand vRPCCommands[] =\n     { \"importprivkey\",          &importprivkey,          false,     false,      true },\n     { \"importwallet\",           &importwallet,           false,     false,      true },\n     { \"listunspent\",            &listunspent,            false,     false,      true },\n-    { \"getrawtransaction\",      &getrawtransaction,      false,     false,      false },\n-    { \"createrawtransaction\",   &createrawtransaction,   false,     false,      false },\n-    { \"decoderawtransaction\",   &decoderawtransaction,   false,     false,      false },\n-    { \"decodescript\",           &decodescript,           false,     false,      false },\n-    { \"signrawtransaction\",     &signrawtransaction,     false,     false,      false },\n-    { \"sendrawtransaction\",     &sendrawtransaction,     false,     false,      false },\n-    { \"gettxoutsetinfo\",        &gettxoutsetinfo,        true,      false,      false },\n-    { \"gettxout\",               &gettxout,               true,      false,      false },\n     { \"lockunspent\",            &lockunspent,            false,     false,      true },\n     { \"listlockunspent\",        &listlockunspent,        false,     false,      true },\n-    { \"verifychain\",            &verifychain,            true,      false,      false },\n+#endif // ENABLE_WALLET\n };\n \n CRPCTable::CRPCTable()\n@@ -788,8 +796,10 @@ json_spirit::Value CRPCTable::execute(const std::string &strMethod, const json_s\n     const CRPCCommand *pcmd = tableRPC[strMethod];\n     if (!pcmd)\n         throw JSONRPCError(RPC_METHOD_NOT_FOUND, \"Method not found\");\n+#ifdef ENABLE_WALLET\n     if (pcmd->reqWallet && !pwalletMain)\n         throw JSONRPCError(RPC_METHOD_NOT_FOUND, \"Method not found (disabled)\");\n+#endif\n \n     // Observe safe mode\n     string strWarning = GetWarnings(\"rpc\");\n@@ -804,13 +814,20 @@ json_spirit::Value CRPCTable::execute(const std::string &strMethod, const json_s\n         {\n             if (pcmd->threadSafe)\n                 result = pcmd->actor(params, false);\n+#ifdef ENABLE_WALLET\n             else if (!pwalletMain) {\n                 LOCK(cs_main);\n                 result = pcmd->actor(params, false);\n             } else {\n                 LOCK2(cs_main, pwalletMain->cs_wallet);\n                 result = pcmd->actor(params, false);\n             }\n+#else // ENABLE_WALLET\n+            else {\n+                LOCK(cs_main);\n+                result = pcmd->actor(params, false);\n+            }\n+#endif // !ENABLE_WALLET\n         }\n         return result;\n     }"
      },
      {
        "sha": "e56aae225ed4ff741f2e6d9ca0676e5aa78b6ea8",
        "filename": "src/test/rpc_tests.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/48ba56cdfd1f0d2478b0d8cffb828efb6982ed76/src/test/rpc_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/48ba56cdfd1f0d2478b0d8cffb828efb6982ed76/src/test/rpc_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/rpc_tests.cpp?ref=48ba56cdfd1f0d2478b0d8cffb828efb6982ed76",
        "patch": "@@ -23,6 +23,7 @@ createArgs(int nRequired, const char* address1=NULL, const char* address2=NULL)\n     return result;\n }\n \n+#ifdef ENABLE_WALLET\n BOOST_AUTO_TEST_CASE(rpc_addmultisig)\n {\n     rpcfn_type addmultisig = tableRPC[\"addmultisigaddress\"]->actor;\n@@ -59,6 +60,7 @@ BOOST_AUTO_TEST_CASE(rpc_addmultisig)\n     string short2(address1Hex+1, address1Hex+sizeof(address1Hex)); // first byte missing\n     BOOST_CHECK_THROW(addmultisig(createArgs(2, short2.c_str()), false), runtime_error);\n }\n+#endif\n \n static Value CallRPC(string args)\n {\n@@ -79,6 +81,7 @@ static Value CallRPC(string args)\n     }\n }\n \n+#ifdef ENABLE_WALLET\n BOOST_AUTO_TEST_CASE(rpc_wallet)\n {\n     // Test RPC calls for various wallet statistics\n@@ -106,7 +109,7 @@ BOOST_AUTO_TEST_CASE(rpc_wallet)\n     BOOST_CHECK_NO_THROW(CallRPC(\"listreceivedbyaccount 0 true\"));\n     BOOST_CHECK_THROW(CallRPC(\"listreceivedbyaccount 0 true extra\"), runtime_error);\n }\n-\n+#endif\n \n BOOST_AUTO_TEST_CASE(rpc_rawparams)\n {"
      },
      {
        "sha": "a804ff3803cf8099c44aa8685fc229be8d8f6de7",
        "filename": "src/test/test_bitcoin.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/48ba56cdfd1f0d2478b0d8cffb828efb6982ed76/src/test/test_bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/48ba56cdfd1f0d2478b0d8cffb828efb6982ed76/src/test/test_bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/test_bitcoin.cpp?ref=48ba56cdfd1f0d2478b0d8cffb828efb6982ed76",
        "patch": "@@ -7,7 +7,9 @@\n #include \"txdb.h\"\n #include \"ui_interface.h\"\n #include \"util.h\"\n+#ifdef ENABLE_WALLET\n #include \"wallet.h\"\n+#endif\n \n #include <boost/filesystem.hpp>\n #include <boost/test/unit_test.hpp>\n@@ -26,18 +28,22 @@ struct TestingSetup {\n     TestingSetup() {\n         fPrintToDebugger = true; // don't want to write to debug.log file\n         noui_connect();\n+#ifdef ENABLE_WALLET\n         bitdb.MakeMock();\n+#endif\n         pathTemp = GetTempPath() / strprintf(\"test_bitcoin_%lu_%i\", (unsigned long)GetTime(), (int)(GetRand(100000)));\n         boost::filesystem::create_directories(pathTemp);\n         mapArgs[\"-datadir\"] = pathTemp.string();\n         pblocktree = new CBlockTreeDB(1 << 20, true);\n         pcoinsdbview = new CCoinsViewDB(1 << 23, true);\n         pcoinsTip = new CCoinsViewCache(*pcoinsdbview);\n         InitBlockIndex();\n+#ifdef ENABLE_WALLET\n         bool fFirstRun;\n         pwalletMain = new CWallet(\"wallet.dat\");\n         pwalletMain->LoadWallet(fFirstRun);\n         RegisterWallet(pwalletMain);\n+#endif\n         nScriptCheckThreads = 3;\n         for (int i=0; i < nScriptCheckThreads-1; i++)\n             threadGroup.create_thread(&ThreadScriptCheck);\n@@ -46,12 +52,16 @@ struct TestingSetup {\n     {\n         threadGroup.interrupt_all();\n         threadGroup.join_all();\n+#ifdef ENABLE_WALLET\n         delete pwalletMain;\n         pwalletMain = NULL;\n+#endif\n         delete pcoinsTip;\n         delete pcoinsdbview;\n         delete pblocktree;\n+#ifdef ENABLE_WALLET\n         bitdb.Flush(true);\n+#endif\n         boost::filesystem::remove_all(pathTemp);\n     }\n };"
      }
    ]
  },
  {
    "sha": "d004d7279ff21b7ee90207a850ec26ba044799bb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkMDA0ZDcyNzlmZjIxYjdlZTkwMjA3YTg1MGVjMjZiYTA0NDc5OWJi",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-11-29T15:33:34Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-04T11:46:13Z"
      },
      "message": "Move CAddrDB frrom db to net\n\nThis was a leftover from the times in which\npeers.dat depended in BDB.\n\nOther functions in db.cpp still depend on BerkelyDB,\nto be able to compile without BDB this (small)\nfunctionality needs to be moved to another file.",
      "tree": {
        "sha": "37ddc5ee8062d6b85905bf4ffb82fcc78dbc4ae0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/37ddc5ee8062d6b85905bf4ffb82fcc78dbc4ae0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d004d7279ff21b7ee90207a850ec26ba044799bb",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d004d7279ff21b7ee90207a850ec26ba044799bb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d004d7279ff21b7ee90207a850ec26ba044799bb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d004d7279ff21b7ee90207a850ec26ba044799bb/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "48ba56cdfd1f0d2478b0d8cffb828efb6982ed76",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/48ba56cdfd1f0d2478b0d8cffb828efb6982ed76",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/48ba56cdfd1f0d2478b0d8cffb828efb6982ed76"
      }
    ],
    "stats": {
      "total": 239,
      "additions": 111,
      "deletions": 128
    },
    "files": [
      {
        "sha": "1f2ee1c554041d164060ec89be7d07a88092acb2",
        "filename": "src/db.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 110,
        "changes": 110,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d004d7279ff21b7ee90207a850ec26ba044799bb/src/db.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d004d7279ff21b7ee90207a850ec26ba044799bb/src/db.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/db.cpp?ref=d004d7279ff21b7ee90207a850ec26ba044799bb",
        "patch": "@@ -479,113 +479,3 @@ void CDBEnv::Flush(bool fShutdown)\n     }\n }\n \n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-//\n-// CAddrDB\n-//\n-\n-CAddrDB::CAddrDB()\n-{\n-    pathAddr = GetDataDir() / \"peers.dat\";\n-}\n-\n-bool CAddrDB::Write(const CAddrMan& addr)\n-{\n-    // Generate random temporary filename\n-    unsigned short randv = 0;\n-    RAND_bytes((unsigned char *)&randv, sizeof(randv));\n-    std::string tmpfn = strprintf(\"peers.dat.%04x\", randv);\n-\n-    // serialize addresses, checksum data up to that point, then append csum\n-    CDataStream ssPeers(SER_DISK, CLIENT_VERSION);\n-    ssPeers << FLATDATA(Params().MessageStart());\n-    ssPeers << addr;\n-    uint256 hash = Hash(ssPeers.begin(), ssPeers.end());\n-    ssPeers << hash;\n-\n-    // open temp output file, and associate with CAutoFile\n-    boost::filesystem::path pathTmp = GetDataDir() / tmpfn;\n-    FILE *file = fopen(pathTmp.string().c_str(), \"wb\");\n-    CAutoFile fileout = CAutoFile(file, SER_DISK, CLIENT_VERSION);\n-    if (!fileout)\n-        return error(\"CAddrman::Write() : open failed\");\n-\n-    // Write and commit header, data\n-    try {\n-        fileout << ssPeers;\n-    }\n-    catch (std::exception &e) {\n-        return error(\"CAddrman::Write() : I/O error\");\n-    }\n-    FileCommit(fileout);\n-    fileout.fclose();\n-\n-    // replace existing peers.dat, if any, with new peers.dat.XXXX\n-    if (!RenameOver(pathTmp, pathAddr))\n-        return error(\"CAddrman::Write() : Rename-into-place failed\");\n-\n-    return true;\n-}\n-\n-bool CAddrDB::Read(CAddrMan& addr)\n-{\n-    // open input file, and associate with CAutoFile\n-    FILE *file = fopen(pathAddr.string().c_str(), \"rb\");\n-    CAutoFile filein = CAutoFile(file, SER_DISK, CLIENT_VERSION);\n-    if (!filein)\n-        return error(\"CAddrman::Read() : open failed\");\n-\n-    // use file size to size memory buffer\n-    int fileSize = GetFilesize(filein);\n-    int dataSize = fileSize - sizeof(uint256);\n-    //Don't try to resize to a negative number if file is small\n-    if ( dataSize < 0 ) dataSize = 0;\n-    vector<unsigned char> vchData;\n-    vchData.resize(dataSize);\n-    uint256 hashIn;\n-\n-    // read data and checksum from file\n-    try {\n-        filein.read((char *)&vchData[0], dataSize);\n-        filein >> hashIn;\n-    }\n-    catch (std::exception &e) {\n-        return error(\"CAddrman::Read() 2 : I/O error or stream data corrupted\");\n-    }\n-    filein.fclose();\n-\n-    CDataStream ssPeers(vchData, SER_DISK, CLIENT_VERSION);\n-\n-    // verify stored checksum matches input data\n-    uint256 hashTmp = Hash(ssPeers.begin(), ssPeers.end());\n-    if (hashIn != hashTmp)\n-        return error(\"CAddrman::Read() : checksum mismatch; data corrupted\");\n-\n-    unsigned char pchMsgTmp[4];\n-    try {\n-        // de-serialize file header (network specific magic number) and ..\n-        ssPeers >> FLATDATA(pchMsgTmp);\n-\n-        // ... verify the network matches ours\n-        if (memcmp(pchMsgTmp, Params().MessageStart(), sizeof(pchMsgTmp)))\n-            return error(\"CAddrman::Read() : invalid network magic number\");\n-\n-        // de-serialize address data into one CAddrMan object\n-        ssPeers >> addr;\n-    }\n-    catch (std::exception &e) {\n-        return error(\"CAddrman::Read() : I/O error or stream data corrupted\");\n-    }\n-\n-    return true;\n-}\n-"
      },
      {
        "sha": "66d7f319174d1cd0334eaa82c996c2e319e166d1",
        "filename": "src/db.h",
        "status": "modified",
        "additions": 0,
        "deletions": 18,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d004d7279ff21b7ee90207a850ec26ba044799bb/src/db.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d004d7279ff21b7ee90207a850ec26ba044799bb/src/db.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/db.h?ref=d004d7279ff21b7ee90207a850ec26ba044799bb",
        "patch": "@@ -305,22 +305,4 @@ class CDB\n     bool static Rewrite(const std::string& strFile, const char* pszSkip = NULL);\n };\n \n-\n-\n-\n-\n-\n-\n-\n-/** Access to the (IP) address database (peers.dat) */\n-class CAddrDB\n-{\n-private:\n-    boost::filesystem::path pathAddr;\n-public:\n-    CAddrDB();\n-    bool Write(const CAddrMan& addr);\n-    bool Read(CAddrMan& addr);\n-};\n-\n #endif // BITCOIN_DB_H"
      },
      {
        "sha": "afffbdf1da64423ef4cba52b1e06805c0593e8f6",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 100,
        "deletions": 0,
        "changes": 100,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d004d7279ff21b7ee90207a850ec26ba044799bb/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d004d7279ff21b7ee90207a850ec26ba044799bb/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=d004d7279ff21b7ee90207a850ec26ba044799bb",
        "patch": "@@ -1942,3 +1942,103 @@ void CNode::Fuzz(int nChance)\n     // (more changes exponentially less likely):\n     Fuzz(2);\n }\n+\n+//\n+// CAddrDB\n+//\n+\n+CAddrDB::CAddrDB()\n+{\n+    pathAddr = GetDataDir() / \"peers.dat\";\n+}\n+\n+bool CAddrDB::Write(const CAddrMan& addr)\n+{\n+    // Generate random temporary filename\n+    unsigned short randv = 0;\n+    RAND_bytes((unsigned char *)&randv, sizeof(randv));\n+    std::string tmpfn = strprintf(\"peers.dat.%04x\", randv);\n+\n+    // serialize addresses, checksum data up to that point, then append csum\n+    CDataStream ssPeers(SER_DISK, CLIENT_VERSION);\n+    ssPeers << FLATDATA(Params().MessageStart());\n+    ssPeers << addr;\n+    uint256 hash = Hash(ssPeers.begin(), ssPeers.end());\n+    ssPeers << hash;\n+\n+    // open temp output file, and associate with CAutoFile\n+    boost::filesystem::path pathTmp = GetDataDir() / tmpfn;\n+    FILE *file = fopen(pathTmp.string().c_str(), \"wb\");\n+    CAutoFile fileout = CAutoFile(file, SER_DISK, CLIENT_VERSION);\n+    if (!fileout)\n+        return error(\"CAddrman::Write() : open failed\");\n+\n+    // Write and commit header, data\n+    try {\n+        fileout << ssPeers;\n+    }\n+    catch (std::exception &e) {\n+        return error(\"CAddrman::Write() : I/O error\");\n+    }\n+    FileCommit(fileout);\n+    fileout.fclose();\n+\n+    // replace existing peers.dat, if any, with new peers.dat.XXXX\n+    if (!RenameOver(pathTmp, pathAddr))\n+        return error(\"CAddrman::Write() : Rename-into-place failed\");\n+\n+    return true;\n+}\n+\n+bool CAddrDB::Read(CAddrMan& addr)\n+{\n+    // open input file, and associate with CAutoFile\n+    FILE *file = fopen(pathAddr.string().c_str(), \"rb\");\n+    CAutoFile filein = CAutoFile(file, SER_DISK, CLIENT_VERSION);\n+    if (!filein)\n+        return error(\"CAddrman::Read() : open failed\");\n+\n+    // use file size to size memory buffer\n+    int fileSize = GetFilesize(filein);\n+    int dataSize = fileSize - sizeof(uint256);\n+    //Don't try to resize to a negative number if file is small\n+    if ( dataSize < 0 ) dataSize = 0;\n+    vector<unsigned char> vchData;\n+    vchData.resize(dataSize);\n+    uint256 hashIn;\n+\n+    // read data and checksum from file\n+    try {\n+        filein.read((char *)&vchData[0], dataSize);\n+        filein >> hashIn;\n+    }\n+    catch (std::exception &e) {\n+        return error(\"CAddrman::Read() 2 : I/O error or stream data corrupted\");\n+    }\n+    filein.fclose();\n+\n+    CDataStream ssPeers(vchData, SER_DISK, CLIENT_VERSION);\n+\n+    // verify stored checksum matches input data\n+    uint256 hashTmp = Hash(ssPeers.begin(), ssPeers.end());\n+    if (hashIn != hashTmp)\n+        return error(\"CAddrman::Read() : checksum mismatch; data corrupted\");\n+\n+    unsigned char pchMsgTmp[4];\n+    try {\n+        // de-serialize file header (network specific magic number) and ..\n+        ssPeers >> FLATDATA(pchMsgTmp);\n+\n+        // ... verify the network matches ours\n+        if (memcmp(pchMsgTmp, Params().MessageStart(), sizeof(pchMsgTmp)))\n+            return error(\"CAddrman::Read() : invalid network magic number\");\n+\n+        // de-serialize address data into one CAddrMan object\n+        ssPeers >> addr;\n+    }\n+    catch (std::exception &e) {\n+        return error(\"CAddrman::Read() : I/O error or stream data corrupted\");\n+    }\n+\n+    return true;\n+}"
      },
      {
        "sha": "28359ea12b236cd08851b5fa8fdf93c63bf452b3",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d004d7279ff21b7ee90207a850ec26ba044799bb/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d004d7279ff21b7ee90207a850ec26ba044799bb/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=d004d7279ff21b7ee90207a850ec26ba044799bb",
        "patch": "@@ -690,4 +690,15 @@ class CTransaction;\n void RelayTransaction(const CTransaction& tx, const uint256& hash);\n void RelayTransaction(const CTransaction& tx, const uint256& hash, const CDataStream& ss);\n \n+/** Access to the (IP) address database (peers.dat) */\n+class CAddrDB\n+{\n+private:\n+    boost::filesystem::path pathAddr;\n+public:\n+    CAddrDB();\n+    bool Write(const CAddrMan& addr);\n+    bool Read(CAddrMan& addr);\n+};\n+\n #endif"
      }
    ]
  },
  {
    "sha": "4f9e993bc9beb8261022aad6668d675dccb1e6c4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0ZjllOTkzYmM5YmViODI2MTAyMmFhZDY2NjhkNjc1ZGNjYjFlNmM0",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-11-29T15:50:11Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-04T11:46:13Z"
      },
      "message": "Add --disable-wallet option to build system\n\nMake it possible to build Bitcoin without wallet\n(and thus without BDB) so that it only functions as node.",
      "tree": {
        "sha": "f6c5b75c65774abf96619076d9f58193b55c351c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f6c5b75c65774abf96619076d9f58193b55c351c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4f9e993bc9beb8261022aad6668d675dccb1e6c4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4f9e993bc9beb8261022aad6668d675dccb1e6c4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4f9e993bc9beb8261022aad6668d675dccb1e6c4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4f9e993bc9beb8261022aad6668d675dccb1e6c4/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d004d7279ff21b7ee90207a850ec26ba044799bb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d004d7279ff21b7ee90207a850ec26ba044799bb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d004d7279ff21b7ee90207a850ec26ba044799bb"
      }
    ],
    "stats": {
      "total": 91,
      "additions": 77,
      "deletions": 14
    },
    "files": [
      {
        "sha": "0f99675fb44c92a5e27ef7f76c6c528bac66dece",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 26,
        "deletions": 2,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4f9e993bc9beb8261022aad6668d675dccb1e6c4/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4f9e993bc9beb8261022aad6668d675dccb1e6c4/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=4f9e993bc9beb8261022aad6668d675dccb1e6c4",
        "patch": "@@ -37,6 +37,13 @@ AM_MAINTAINER_MODE([enable])\n dnl make the compilation flags quiet unless V=1 is used\n m4_ifdef([AM_SILENT_RULES], [AM_SILENT_RULES([yes])])\n \n+# Enable wallet\n+AC_ARG_ENABLE([wallet],\n+  [AS_HELP_STRING([--enable-wallet],\n+  [enable wallet (default is yes)])],\n+  [enable_wallet=$enableval],\n+  [enable_wallet=yes])\n+\n AC_ARG_WITH([miniupnpc],\n   [AS_HELP_STRING([--with-miniupnpc],\n   [enable UPNP (default is yes if libminiupnpc is found)])],\n@@ -362,8 +369,10 @@ AC_TRY_COMPILE([#include <sys/socket.h>],\n  [ AC_MSG_RESULT(no)]\n )\n \n-dnl Check for libdb_cxx\n-BITCOIN_FIND_BDB48\n+if test x$enable_wallet != xno; then\n+    dnl Check for libdb_cxx only if wallet enabled\n+    BITCOIN_FIND_BDB48\n+fi\n \n dnl Check for libminiupnpc (optional)\n if test x$use_upnp != xno; then\n@@ -593,6 +602,20 @@ if test \"x$use_ccache\" != \"xno\"; then\n   AC_MSG_RESULT($use_ccache)\n fi\n \n+dnl enable wallet\n+AC_MSG_CHECKING([if wallet should be enabled])\n+if test x$enable_wallet != xno; then\n+  AC_MSG_RESULT(yes)\n+  AC_DEFINE_UNQUOTED([ENABLE_WALLET],[1],[Define to 1 to enable wallet functions])\n+\n+else\n+  AC_MSG_RESULT(no)\n+\n+  if test \"x$use_qt\" != \"xno\"; then\n+    AC_MSG_ERROR([Cannot currently build Qt GUI with wallet disabled. Use --without-qt.])\n+  fi\n+fi\n+\n dnl enable ipv6 support\n AC_MSG_CHECKING([if ipv6 should be enabled])\n if test x$have_ipv6 = xno; then\n@@ -705,6 +728,7 @@ fi\n \n AM_CONDITIONAL([TARGET_DARWIN], [test x$TARGET_OS = xdarwin])\n AM_CONDITIONAL([TARGET_WINDOWS], [test x$TARGET_OS = xwindows])\n+AM_CONDITIONAL([ENABLE_WALLET],[test x$enable_wallet == xyes])\n AM_CONDITIONAL([USE_QRCODE], [test x$use_qr = xyes])\n AM_CONDITIONAL([USE_LCOV],[test x$use_lcov == xyes])\n AM_CONDITIONAL([USE_COMPARISON_TOOL],[test x$use_comparison_tool != xno])"
      },
      {
        "sha": "5daf625695b9c59f6b86c338cf37d114355aafa7",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 35,
        "deletions": 6,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4f9e993bc9beb8261022aad6668d675dccb1e6c4/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4f9e993bc9beb8261022aad6668d675dccb1e6c4/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=4f9e993bc9beb8261022aad6668d675dccb1e6c4",
        "patch": "@@ -4,6 +4,9 @@ AM_CPPFLAGS += -I$(top_srcdir)/src/leveldb/helpers/memenv \\\n   -I$(builddir)\n \n noinst_LIBRARIES = libbitcoin_server.a libbitcoin_common.a libbitcoin_cli.a\n+if ENABLE_WALLET\n+noinst_LIBRARIES += libbitcoin_wallet.a\n+endif\n \n bin_PROGRAMS = bitcoind bitcoin-cli\n \n@@ -33,14 +36,37 @@ obj/build.h: FORCE\n \t  $(abs_top_srcdir)\n version.o: obj/build.h\n \n-libbitcoin_server_a_SOURCES = addrman.cpp alert.cpp \\\n+libbitcoin_server_a_SOURCES = \\\n+  addrman.cpp \\\n+  alert.cpp \\\n+  crypter.cpp \\\n   rpcserver.cpp \\\n   bloom.cpp \\\n-  chainparams.cpp checkpoints.cpp coins.cpp crypter.cpp db.cpp \\\n-  init.cpp keystore.cpp leveldbwrapper.cpp main.cpp miner.cpp \\\n-  net.cpp noui.cpp rpcblockchain.cpp rpcdump.cpp \\\n-  rpcmining.cpp rpcnet.cpp rpcrawtransaction.cpp rpcwallet.cpp \\\n-  txdb.cpp txmempool.cpp wallet.cpp walletdb.cpp $(JSON_H) \\\n+  chainparams.cpp \\\n+  checkpoints.cpp \\\n+  coins.cpp \\\n+  init.cpp \\\n+  keystore.cpp \\\n+  leveldbwrapper.cpp \\\n+  main.cpp \\\n+  net.cpp \\\n+  noui.cpp \\\n+  rpcblockchain.cpp \\\n+  rpcnet.cpp \\\n+  rpcrawtransaction.cpp \\\n+  txdb.cpp \\\n+  txmempool.cpp \\\n+  $(JSON_H) \\\n+  $(BITCOIN_CORE_H)\n+\n+libbitcoin_wallet_a_SOURCES = \\\n+  db.cpp \\\n+  miner.cpp \\\n+  rpcdump.cpp \\\n+  rpcmining.cpp \\\n+  rpcwallet.cpp \\\n+  wallet.cpp \\\n+  walletdb.cpp \\\n   $(BITCOIN_CORE_H)\n \n libbitcoin_common_a_SOURCES = \\\n@@ -68,6 +94,9 @@ nodist_libbitcoin_common_a_SOURCES = $(top_srcdir)/src/obj/build.h\n # bitcoind binary #\n bitcoind_LDADD = libbitcoin_server.a libbitcoin_cli.a libbitcoin_common.a leveldb/libleveldb.a leveldb/libmemenv.a \\\n   $(BOOST_LIBS)\n+if ENABLE_WALLET\n+bitcoind_LDADD += libbitcoin_wallet.a\n+endif\n bitcoind_SOURCES = bitcoind.cpp\n #\n "
      },
      {
        "sha": "13cffd29bc2a76ab8498c03eaf0d2750bbb8948e",
        "filename": "src/Makefile.include",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4f9e993bc9beb8261022aad6668d675dccb1e6c4/src/Makefile.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4f9e993bc9beb8261022aad6668d675dccb1e6c4/src/Makefile.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.include?ref=4f9e993bc9beb8261022aad6668d675dccb1e6c4",
        "patch": "@@ -6,6 +6,7 @@ AM_CPPFLAGS =  $(INCLUDES) \\\n AM_LDFLAGS = $(PTHREAD_CFLAGS)\n \n LIBBITCOIN_SERVER=$(top_builddir)/src/libbitcoin_server.a\n+LIBBITCOIN_WALLET=$(top_builddir)/src/libbitcoin_wallet.a\n LIBBITCOIN_COMMON=$(top_builddir)/src/libbitcoin_common.a\n LIBBITCOIN_CLI=$(top_builddir)/src/libbitcoin_cli.a\n LIBLEVELDB=$(top_builddir)/src/leveldb/libleveldb.a"
      },
      {
        "sha": "08846604ea3321e482950dda69ccb356a0751a82",
        "filename": "src/qt/Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4f9e993bc9beb8261022aad6668d675dccb1e6c4/src/qt/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4f9e993bc9beb8261022aad6668d675dccb1e6c4/src/qt/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/Makefile.am?ref=4f9e993bc9beb8261022aad6668d675dccb1e6c4",
        "patch": "@@ -197,7 +197,7 @@ endif\n bitcoin_qt_CPPFLAGS = $(AM_CPPFLAGS) $(QT_INCLUDES) \\\n   -I$(top_srcdir)/src/qt/forms\n bitcoin_qt_SOURCES = bitcoin.cpp\n-bitcoin_qt_LDADD = libbitcoinqt.a $(LIBBITCOIN_SERVER) $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBLEVELDB) $(LIBMEMENV) \\\n+bitcoin_qt_LDADD = libbitcoinqt.a $(LIBBITCOIN_SERVER) $(LIBBITCOIN_WALLET) $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBLEVELDB) $(LIBMEMENV) \\\n   $(BOOST_LIBS) $(QT_LIBS) $(QT_DBUS_LIBS) $(QR_LIBS) $(PROTOBUF_LIBS) $(BDB_LIBS)\n \n # forms/foo.h -> forms/ui_foo.h"
      },
      {
        "sha": "cb6874700e94a0c672e122185bd10326f5a7a31b",
        "filename": "src/qt/test/Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4f9e993bc9beb8261022aad6668d675dccb1e6c4/src/qt/test/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4f9e993bc9beb8261022aad6668d675dccb1e6c4/src/qt/test/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/Makefile.am?ref=4f9e993bc9beb8261022aad6668d675dccb1e6c4",
        "patch": "@@ -17,7 +17,7 @@ BUILT_SOURCES = $(TEST_QT_MOC_CPP)\n test_bitcoin_qt_CPPFLAGS = $(AM_CPPFLAGS) $(QT_INCLUDES) $(QT_TEST_INCLUDES)\n test_bitcoin_qt_SOURCES = test_main.cpp uritests.cpp paymentservertests.cpp $(TEST_QT_H)\n nodist_test_bitcoin_qt_SOURCES = $(TEST_QT_MOC_CPP)\n-test_bitcoin_qt_LDADD = $(LIBBITCOINQT) $(LIBBITCOIN_SERVER) $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBLEVELDB) \\\n+test_bitcoin_qt_LDADD = $(LIBBITCOINQT) $(LIBBITCOIN_SERVER) $(LIBBITCOIN_WALLET) $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBLEVELDB) \\\n   $(LIBMEMENV) $(BOOST_LIBS) $(QT_LIBS) $(QT_DBUS_LIBS) $(QT_TEST_LIBS) \\\n   $(QR_LIBS) $(PROTOBUF_LIBS) $(BDB_LIBS)\n "
      },
      {
        "sha": "715020a9819604fd7ffd71007ca491a75894f747",
        "filename": "src/test/Makefile.am",
        "status": "modified",
        "additions": 13,
        "deletions": 4,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4f9e993bc9beb8261022aad6668d675dccb1e6c4/src/test/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4f9e993bc9beb8261022aad6668d675dccb1e6c4/src/test/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/Makefile.am?ref=4f9e993bc9beb8261022aad6668d675dccb1e6c4",
        "patch": "@@ -21,16 +21,25 @@ BUILT_SOURCES = $(JSON_TEST_FILES:.json=.json.h) $(RAW_TEST_FILES:.raw=.raw.h)\n # test_bitcoin binary #\n test_bitcoin_CPPFLAGS = $(AM_CPPFLAGS) $(TESTDEFS)\n test_bitcoin_LDADD = $(LIBBITCOIN_SERVER) $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBLEVELDB) $(LIBMEMENV) \\\n-  $(BOOST_LIBS) $(BOOST_UNIT_TEST_FRAMEWORK_LIB) $(BDB_LIBS)\n-test_bitcoin_SOURCES = accounting_tests.cpp alert_tests.cpp \\\n+  $(BOOST_LIBS) $(BOOST_UNIT_TEST_FRAMEWORK_LIB)\n+if ENABLE_WALLET\n+test_bitcoin_LDADD += $(LIBBITCOIN_WALLET)\n+endif\n+test_bitcoin_LDADD += $(BDB_LIBS)\n+\n+test_bitcoin_SOURCES = alert_tests.cpp \\\n   allocator_tests.cpp base32_tests.cpp base58_tests.cpp base64_tests.cpp \\\n   bignum_tests.cpp bloom_tests.cpp canonical_tests.cpp checkblock_tests.cpp \\\n   Checkpoints_tests.cpp compress_tests.cpp DoS_tests.cpp getarg_tests.cpp \\\n-  key_tests.cpp miner_tests.cpp mruset_tests.cpp multisig_tests.cpp \\\n+  key_tests.cpp mruset_tests.cpp multisig_tests.cpp \\\n   netbase_tests.cpp pmt_tests.cpp rpc_tests.cpp script_P2SH_tests.cpp \\\n   script_tests.cpp serialize_tests.cpp sigopcount_tests.cpp test_bitcoin.cpp \\\n   transaction_tests.cpp uint160_tests.cpp uint256_tests.cpp util_tests.cpp \\\n-  wallet_tests.cpp sighash_tests.cpp $(JSON_TEST_FILES) $(RAW_TEST_FILES)\n+  sighash_tests.cpp $(JSON_TEST_FILES) $(RAW_TEST_FILES)\n+\n+if ENABLE_WALLET\n+test_bitcoin_SOURCES += accounting_tests.cpp wallet_tests.cpp miner_tests.cpp\n+endif\n \n nodist_test_bitcoin_SOURCES = $(BUILT_SOURCES)\n "
      }
    ]
  },
  {
    "sha": "ae6ea5a6fa4a674fc1c989df6f4ec945df1aa534",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphZTZlYTVhNmZhNGE2NzRmYzFjOTg5ZGY2ZjRlYzk0NWRmMWFhNTM0",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-11-29T17:37:29Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-04T11:46:13Z"
      },
      "message": "Update build-unix.md to mention --disable-wallet\n\nMention the new --disable-wallet mode.\nAlso, correct the BDB entry in the dependencies table.",
      "tree": {
        "sha": "f9d64677d22b9b0127c32c76b136bf71c269fb4c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f9d64677d22b9b0127c32c76b136bf71c269fb4c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ae6ea5a6fa4a674fc1c989df6f4ec945df1aa534",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ae6ea5a6fa4a674fc1c989df6f4ec945df1aa534",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ae6ea5a6fa4a674fc1c989df6f4ec945df1aa534",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ae6ea5a6fa4a674fc1c989df6f4ec945df1aa534/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4f9e993bc9beb8261022aad6668d675dccb1e6c4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4f9e993bc9beb8261022aad6668d675dccb1e6c4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4f9e993bc9beb8261022aad6668d675dccb1e6c4"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 10,
      "deletions": 1
    },
    "files": [
      {
        "sha": "1d9d96a1ca147aba3d16e7f6319a4ef53801f1d5",
        "filename": "doc/build-unix.md",
        "status": "modified",
        "additions": 10,
        "deletions": 1,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ae6ea5a6fa4a674fc1c989df6f4ec945df1aa534/doc/build-unix.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ae6ea5a6fa4a674fc1c989df6f4ec945df1aa534/doc/build-unix.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-unix.md?ref=ae6ea5a6fa4a674fc1c989df6f4ec945df1aa534",
        "patch": "@@ -22,7 +22,7 @@ Dependencies\n  Library     Purpose           Description\n  -------     -------           -----------\n  libssl      SSL Support       Secure communications\n- libdb4.8    Berkeley DB       Blockchain & wallet storage\n+ libdb4.8    Berkeley DB       Wallet storage\n  libboost    Boost             C++ Library\n  miniupnpc   UPnP Support      Optional firewall-jumping support\n  qt          GUI               GUI toolkit\n@@ -178,3 +178,12 @@ Hardening enables the following features:\n \tRW- R-- RW-\n \n     The STK RW- means that the stack is readable and writeable but not executable.\n+\n+Disable-wallet mode\n+--------------------\n+When the intention is to run only a P2P node without a wallet, bitcoin may be compiled in\n+disable-wallet mode with:\n+\n+    ./configure --disable-wallet\n+\n+In this case there is no dependency on Berkeley DB 4.8."
      }
    ]
  },
  {
    "sha": "829c9203874277265613185c73f96760ae4b9356",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4MjljOTIwMzg3NDI3NzI2NTYxMzE4NWM3M2Y5Njc2MGFlNGI5MzU2",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-11-30T05:09:32Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-04T11:46:13Z"
      },
      "message": "Move CCryptoKeyStore to crypter.cpp\n\nThis breaks the dependency on crypter for disable-wallet builds.",
      "tree": {
        "sha": "5df689e450592e2e0636662c4d613fda9e6b063e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5df689e450592e2e0636662c4d613fda9e6b063e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/829c9203874277265613185c73f96760ae4b9356",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/829c9203874277265613185c73f96760ae4b9356",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/829c9203874277265613185c73f96760ae4b9356",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/829c9203874277265613185c73f96760ae4b9356/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ae6ea5a6fa4a674fc1c989df6f4ec945df1aa534",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ae6ea5a6fa4a674fc1c989df6f4ec945df1aa534",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ae6ea5a6fa4a674fc1c989df6f4ec945df1aa534"
      }
    ],
    "stats": {
      "total": 477,
      "additions": 240,
      "deletions": 237
    },
    "files": [
      {
        "sha": "89879d5cd829df56ff133823f432e1acfc7403d3",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/829c9203874277265613185c73f96760ae4b9356/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/829c9203874277265613185c73f96760ae4b9356/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=829c9203874277265613185c73f96760ae4b9356",
        "patch": "@@ -39,7 +39,6 @@ version.o: obj/build.h\n libbitcoin_server_a_SOURCES = \\\n   addrman.cpp \\\n   alert.cpp \\\n-  crypter.cpp \\\n   rpcserver.cpp \\\n   bloom.cpp \\\n   chainparams.cpp \\\n@@ -61,6 +60,7 @@ libbitcoin_server_a_SOURCES = \\\n \n libbitcoin_wallet_a_SOURCES = \\\n   db.cpp \\\n+  crypter.cpp \\\n   miner.cpp \\\n   rpcdump.cpp \\\n   rpcmining.cpp \\"
      },
      {
        "sha": "4c43e3a7986da977da6d20a777e947076cdf6342",
        "filename": "src/crypter.cpp",
        "status": "modified",
        "additions": 156,
        "deletions": 1,
        "changes": 157,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/829c9203874277265613185c73f96760ae4b9356/src/crypter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/829c9203874277265613185c73f96760ae4b9356/src/crypter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crypter.cpp?ref=829c9203874277265613185c73f96760ae4b9356",
        "patch": "@@ -4,9 +4,11 @@\n \n #include \"crypter.h\"\n \n+#include \"script.h\"\n+\n #include <string>\n #include <vector>\n-\n+#include <boost/foreach.hpp>\n #include <openssl/aes.h>\n #include <openssl/evp.h>\n \n@@ -117,3 +119,156 @@ bool DecryptSecret(const CKeyingMaterial& vMasterKey, const std::vector<unsigned\n         return false;\n     return cKeyCrypter.Decrypt(vchCiphertext, *((CKeyingMaterial*)&vchPlaintext));\n }\n+\n+bool CCryptoKeyStore::SetCrypted()\n+{\n+    LOCK(cs_KeyStore);\n+    if (fUseCrypto)\n+        return true;\n+    if (!mapKeys.empty())\n+        return false;\n+    fUseCrypto = true;\n+    return true;\n+}\n+\n+bool CCryptoKeyStore::Lock()\n+{\n+    if (!SetCrypted())\n+        return false;\n+\n+    {\n+        LOCK(cs_KeyStore);\n+        vMasterKey.clear();\n+    }\n+\n+    NotifyStatusChanged(this);\n+    return true;\n+}\n+\n+bool CCryptoKeyStore::Unlock(const CKeyingMaterial& vMasterKeyIn)\n+{\n+    {\n+        LOCK(cs_KeyStore);\n+        if (!SetCrypted())\n+            return false;\n+\n+        CryptedKeyMap::const_iterator mi = mapCryptedKeys.begin();\n+        for (; mi != mapCryptedKeys.end(); ++mi)\n+        {\n+            const CPubKey &vchPubKey = (*mi).second.first;\n+            const std::vector<unsigned char> &vchCryptedSecret = (*mi).second.second;\n+            CKeyingMaterial vchSecret;\n+            if(!DecryptSecret(vMasterKeyIn, vchCryptedSecret, vchPubKey.GetHash(), vchSecret))\n+                return false;\n+            if (vchSecret.size() != 32)\n+                return false;\n+            CKey key;\n+            key.Set(vchSecret.begin(), vchSecret.end(), vchPubKey.IsCompressed());\n+            if (key.GetPubKey() == vchPubKey)\n+                break;\n+            return false;\n+        }\n+        vMasterKey = vMasterKeyIn;\n+    }\n+    NotifyStatusChanged(this);\n+    return true;\n+}\n+\n+bool CCryptoKeyStore::AddKeyPubKey(const CKey& key, const CPubKey &pubkey)\n+{\n+    {\n+        LOCK(cs_KeyStore);\n+        if (!IsCrypted())\n+            return CBasicKeyStore::AddKeyPubKey(key, pubkey);\n+\n+        if (IsLocked())\n+            return false;\n+\n+        std::vector<unsigned char> vchCryptedSecret;\n+        CKeyingMaterial vchSecret(key.begin(), key.end());\n+        if (!EncryptSecret(vMasterKey, vchSecret, pubkey.GetHash(), vchCryptedSecret))\n+            return false;\n+\n+        if (!AddCryptedKey(pubkey, vchCryptedSecret))\n+            return false;\n+    }\n+    return true;\n+}\n+\n+\n+bool CCryptoKeyStore::AddCryptedKey(const CPubKey &vchPubKey, const std::vector<unsigned char> &vchCryptedSecret)\n+{\n+    {\n+        LOCK(cs_KeyStore);\n+        if (!SetCrypted())\n+            return false;\n+\n+        mapCryptedKeys[vchPubKey.GetID()] = make_pair(vchPubKey, vchCryptedSecret);\n+    }\n+    return true;\n+}\n+\n+bool CCryptoKeyStore::GetKey(const CKeyID &address, CKey& keyOut) const\n+{\n+    {\n+        LOCK(cs_KeyStore);\n+        if (!IsCrypted())\n+            return CBasicKeyStore::GetKey(address, keyOut);\n+\n+        CryptedKeyMap::const_iterator mi = mapCryptedKeys.find(address);\n+        if (mi != mapCryptedKeys.end())\n+        {\n+            const CPubKey &vchPubKey = (*mi).second.first;\n+            const std::vector<unsigned char> &vchCryptedSecret = (*mi).second.second;\n+            CKeyingMaterial vchSecret;\n+            if (!DecryptSecret(vMasterKey, vchCryptedSecret, vchPubKey.GetHash(), vchSecret))\n+                return false;\n+            if (vchSecret.size() != 32)\n+                return false;\n+            keyOut.Set(vchSecret.begin(), vchSecret.end(), vchPubKey.IsCompressed());\n+            return true;\n+        }\n+    }\n+    return false;\n+}\n+\n+bool CCryptoKeyStore::GetPubKey(const CKeyID &address, CPubKey& vchPubKeyOut) const\n+{\n+    {\n+        LOCK(cs_KeyStore);\n+        if (!IsCrypted())\n+            return CKeyStore::GetPubKey(address, vchPubKeyOut);\n+\n+        CryptedKeyMap::const_iterator mi = mapCryptedKeys.find(address);\n+        if (mi != mapCryptedKeys.end())\n+        {\n+            vchPubKeyOut = (*mi).second.first;\n+            return true;\n+        }\n+    }\n+    return false;\n+}\n+\n+bool CCryptoKeyStore::EncryptKeys(CKeyingMaterial& vMasterKeyIn)\n+{\n+    {\n+        LOCK(cs_KeyStore);\n+        if (!mapCryptedKeys.empty() || IsCrypted())\n+            return false;\n+\n+        fUseCrypto = true;\n+        BOOST_FOREACH(KeyMap::value_type& mKey, mapKeys)\n+        {\n+            const CKey &key = mKey.second;\n+            CPubKey vchPubKey = key.GetPubKey();\n+            CKeyingMaterial vchSecret(key.begin(), key.end());\n+            std::vector<unsigned char> vchCryptedSecret;\n+            if (!EncryptSecret(vMasterKeyIn, vchSecret, vchPubKey.GetHash(), vchCryptedSecret))\n+                return false;\n+            if (!AddCryptedKey(vchPubKey, vchCryptedSecret))\n+                return false;\n+        }\n+        mapKeys.clear();\n+    }\n+    return true;\n+}"
      },
      {
        "sha": "4791428b485f086cb03853e74fad04fc5ae176f4",
        "filename": "src/crypter.h",
        "status": "modified",
        "additions": 83,
        "deletions": 0,
        "changes": 83,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/829c9203874277265613185c73f96760ae4b9356/src/crypter.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/829c9203874277265613185c73f96760ae4b9356/src/crypter.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crypter.h?ref=829c9203874277265613185c73f96760ae4b9356",
        "patch": "@@ -7,6 +7,7 @@\n \n #include \"allocators.h\"\n #include \"serialize.h\"\n+#include \"keystore.h\"\n \n class uint256;\n \n@@ -106,4 +107,86 @@ class CCrypter\n bool EncryptSecret(const CKeyingMaterial& vMasterKey, const CKeyingMaterial &vchPlaintext, const uint256& nIV, std::vector<unsigned char> &vchCiphertext);\n bool DecryptSecret(const CKeyingMaterial& vMasterKey, const std::vector<unsigned char>& vchCiphertext, const uint256& nIV, CKeyingMaterial& vchPlaintext);\n \n+/** Keystore which keeps the private keys encrypted.\n+ * It derives from the basic key store, which is used if no encryption is active.\n+ */\n+class CCryptoKeyStore : public CBasicKeyStore\n+{\n+private:\n+    CryptedKeyMap mapCryptedKeys;\n+\n+    CKeyingMaterial vMasterKey;\n+\n+    // if fUseCrypto is true, mapKeys must be empty\n+    // if fUseCrypto is false, vMasterKey must be empty\n+    bool fUseCrypto;\n+\n+protected:\n+    bool SetCrypted();\n+\n+    // will encrypt previously unencrypted keys\n+    bool EncryptKeys(CKeyingMaterial& vMasterKeyIn);\n+\n+    bool Unlock(const CKeyingMaterial& vMasterKeyIn);\n+\n+public:\n+    CCryptoKeyStore() : fUseCrypto(false)\n+    {\n+    }\n+\n+    bool IsCrypted() const\n+    {\n+        return fUseCrypto;\n+    }\n+\n+    bool IsLocked() const\n+    {\n+        if (!IsCrypted())\n+            return false;\n+        bool result;\n+        {\n+            LOCK(cs_KeyStore);\n+            result = vMasterKey.empty();\n+        }\n+        return result;\n+    }\n+\n+    bool Lock();\n+\n+    virtual bool AddCryptedKey(const CPubKey &vchPubKey, const std::vector<unsigned char> &vchCryptedSecret);\n+    bool AddKeyPubKey(const CKey& key, const CPubKey &pubkey);\n+    bool HaveKey(const CKeyID &address) const\n+    {\n+        {\n+            LOCK(cs_KeyStore);\n+            if (!IsCrypted())\n+                return CBasicKeyStore::HaveKey(address);\n+            return mapCryptedKeys.count(address) > 0;\n+        }\n+        return false;\n+    }\n+    bool GetKey(const CKeyID &address, CKey& keyOut) const;\n+    bool GetPubKey(const CKeyID &address, CPubKey& vchPubKeyOut) const;\n+    void GetKeys(std::set<CKeyID> &setAddress) const\n+    {\n+        if (!IsCrypted())\n+        {\n+            CBasicKeyStore::GetKeys(setAddress);\n+            return;\n+        }\n+        setAddress.clear();\n+        CryptedKeyMap::const_iterator mi = mapCryptedKeys.begin();\n+        while (mi != mapCryptedKeys.end())\n+        {\n+            setAddress.insert((*mi).first);\n+            mi++;\n+        }\n+    }\n+\n+    /* Wallet status (encrypted, locked) changed.\n+     * Note: Called without locks held.\n+     */\n+    boost::signals2::signal<void (CCryptoKeyStore* wallet)> NotifyStatusChanged;\n+};\n+\n #endif"
      },
      {
        "sha": "46402ea25b74333e841d9b47ecfc95d4c9abdf5e",
        "filename": "src/keystore.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 152,
        "changes": 152,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/829c9203874277265613185c73f96760ae4b9356/src/keystore.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/829c9203874277265613185c73f96760ae4b9356/src/keystore.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/keystore.cpp?ref=829c9203874277265613185c73f96760ae4b9356",
        "patch": "@@ -56,155 +56,3 @@ bool CBasicKeyStore::GetCScript(const CScriptID &hash, CScript& redeemScriptOut)\n     return false;\n }\n \n-bool CCryptoKeyStore::SetCrypted()\n-{\n-    LOCK(cs_KeyStore);\n-    if (fUseCrypto)\n-        return true;\n-    if (!mapKeys.empty())\n-        return false;\n-    fUseCrypto = true;\n-    return true;\n-}\n-\n-bool CCryptoKeyStore::Lock()\n-{\n-    if (!SetCrypted())\n-        return false;\n-\n-    {\n-        LOCK(cs_KeyStore);\n-        vMasterKey.clear();\n-    }\n-\n-    NotifyStatusChanged(this);\n-    return true;\n-}\n-\n-bool CCryptoKeyStore::Unlock(const CKeyingMaterial& vMasterKeyIn)\n-{\n-    {\n-        LOCK(cs_KeyStore);\n-        if (!SetCrypted())\n-            return false;\n-\n-        CryptedKeyMap::const_iterator mi = mapCryptedKeys.begin();\n-        for (; mi != mapCryptedKeys.end(); ++mi)\n-        {\n-            const CPubKey &vchPubKey = (*mi).second.first;\n-            const std::vector<unsigned char> &vchCryptedSecret = (*mi).second.second;\n-            CKeyingMaterial vchSecret;\n-            if(!DecryptSecret(vMasterKeyIn, vchCryptedSecret, vchPubKey.GetHash(), vchSecret))\n-                return false;\n-            if (vchSecret.size() != 32)\n-                return false;\n-            CKey key;\n-            key.Set(vchSecret.begin(), vchSecret.end(), vchPubKey.IsCompressed());\n-            if (key.GetPubKey() == vchPubKey)\n-                break;\n-            return false;\n-        }\n-        vMasterKey = vMasterKeyIn;\n-    }\n-    NotifyStatusChanged(this);\n-    return true;\n-}\n-\n-bool CCryptoKeyStore::AddKeyPubKey(const CKey& key, const CPubKey &pubkey)\n-{\n-    {\n-        LOCK(cs_KeyStore);\n-        if (!IsCrypted())\n-            return CBasicKeyStore::AddKeyPubKey(key, pubkey);\n-\n-        if (IsLocked())\n-            return false;\n-\n-        std::vector<unsigned char> vchCryptedSecret;\n-        CKeyingMaterial vchSecret(key.begin(), key.end());\n-        if (!EncryptSecret(vMasterKey, vchSecret, pubkey.GetHash(), vchCryptedSecret))\n-            return false;\n-\n-        if (!AddCryptedKey(pubkey, vchCryptedSecret))\n-            return false;\n-    }\n-    return true;\n-}\n-\n-\n-bool CCryptoKeyStore::AddCryptedKey(const CPubKey &vchPubKey, const std::vector<unsigned char> &vchCryptedSecret)\n-{\n-    {\n-        LOCK(cs_KeyStore);\n-        if (!SetCrypted())\n-            return false;\n-\n-        mapCryptedKeys[vchPubKey.GetID()] = make_pair(vchPubKey, vchCryptedSecret);\n-    }\n-    return true;\n-}\n-\n-bool CCryptoKeyStore::GetKey(const CKeyID &address, CKey& keyOut) const\n-{\n-    {\n-        LOCK(cs_KeyStore);\n-        if (!IsCrypted())\n-            return CBasicKeyStore::GetKey(address, keyOut);\n-\n-        CryptedKeyMap::const_iterator mi = mapCryptedKeys.find(address);\n-        if (mi != mapCryptedKeys.end())\n-        {\n-            const CPubKey &vchPubKey = (*mi).second.first;\n-            const std::vector<unsigned char> &vchCryptedSecret = (*mi).second.second;\n-            CKeyingMaterial vchSecret;\n-            if (!DecryptSecret(vMasterKey, vchCryptedSecret, vchPubKey.GetHash(), vchSecret))\n-                return false;\n-            if (vchSecret.size() != 32)\n-                return false;\n-            keyOut.Set(vchSecret.begin(), vchSecret.end(), vchPubKey.IsCompressed());\n-            return true;\n-        }\n-    }\n-    return false;\n-}\n-\n-bool CCryptoKeyStore::GetPubKey(const CKeyID &address, CPubKey& vchPubKeyOut) const\n-{\n-    {\n-        LOCK(cs_KeyStore);\n-        if (!IsCrypted())\n-            return CKeyStore::GetPubKey(address, vchPubKeyOut);\n-\n-        CryptedKeyMap::const_iterator mi = mapCryptedKeys.find(address);\n-        if (mi != mapCryptedKeys.end())\n-        {\n-            vchPubKeyOut = (*mi).second.first;\n-            return true;\n-        }\n-    }\n-    return false;\n-}\n-\n-bool CCryptoKeyStore::EncryptKeys(CKeyingMaterial& vMasterKeyIn)\n-{\n-    {\n-        LOCK(cs_KeyStore);\n-        if (!mapCryptedKeys.empty() || IsCrypted())\n-            return false;\n-\n-        fUseCrypto = true;\n-        BOOST_FOREACH(KeyMap::value_type& mKey, mapKeys)\n-        {\n-            const CKey &key = mKey.second;\n-            CPubKey vchPubKey = key.GetPubKey();\n-            CKeyingMaterial vchSecret(key.begin(), key.end());\n-            std::vector<unsigned char> vchCryptedSecret;\n-            if (!EncryptSecret(vMasterKeyIn, vchSecret, vchPubKey.GetHash(), vchCryptedSecret))\n-                return false;\n-            if (!AddCryptedKey(vchPubKey, vchCryptedSecret))\n-                return false;\n-        }\n-        mapKeys.clear();\n-    }\n-    return true;\n-}"
      },
      {
        "sha": "0d55e6c81ef0da788a59142664883024946ed188",
        "filename": "src/keystore.h",
        "status": "modified",
        "additions": 0,
        "deletions": 83,
        "changes": 83,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/829c9203874277265613185c73f96760ae4b9356/src/keystore.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/829c9203874277265613185c73f96760ae4b9356/src/keystore.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/keystore.h?ref=829c9203874277265613185c73f96760ae4b9356",
        "patch": "@@ -93,87 +93,4 @@ class CBasicKeyStore : public CKeyStore\n typedef std::vector<unsigned char, secure_allocator<unsigned char> > CKeyingMaterial;\n typedef std::map<CKeyID, std::pair<CPubKey, std::vector<unsigned char> > > CryptedKeyMap;\n \n-\n-/** Keystore which keeps the private keys encrypted.\n- * It derives from the basic key store, which is used if no encryption is active.\n- */\n-class CCryptoKeyStore : public CBasicKeyStore\n-{\n-private:\n-    CryptedKeyMap mapCryptedKeys;\n-\n-    CKeyingMaterial vMasterKey;\n-\n-    // if fUseCrypto is true, mapKeys must be empty\n-    // if fUseCrypto is false, vMasterKey must be empty\n-    bool fUseCrypto;\n-\n-protected:\n-    bool SetCrypted();\n-\n-    // will encrypt previously unencrypted keys\n-    bool EncryptKeys(CKeyingMaterial& vMasterKeyIn);\n-\n-    bool Unlock(const CKeyingMaterial& vMasterKeyIn);\n-\n-public:\n-    CCryptoKeyStore() : fUseCrypto(false)\n-    {\n-    }\n-\n-    bool IsCrypted() const\n-    {\n-        return fUseCrypto;\n-    }\n-\n-    bool IsLocked() const\n-    {\n-        if (!IsCrypted())\n-            return false;\n-        bool result;\n-        {\n-            LOCK(cs_KeyStore);\n-            result = vMasterKey.empty();\n-        }\n-        return result;\n-    }\n-\n-    bool Lock();\n-\n-    virtual bool AddCryptedKey(const CPubKey &vchPubKey, const std::vector<unsigned char> &vchCryptedSecret);\n-    bool AddKeyPubKey(const CKey& key, const CPubKey &pubkey);\n-    bool HaveKey(const CKeyID &address) const\n-    {\n-        {\n-            LOCK(cs_KeyStore);\n-            if (!IsCrypted())\n-                return CBasicKeyStore::HaveKey(address);\n-            return mapCryptedKeys.count(address) > 0;\n-        }\n-        return false;\n-    }\n-    bool GetKey(const CKeyID &address, CKey& keyOut) const;\n-    bool GetPubKey(const CKeyID &address, CPubKey& vchPubKeyOut) const;\n-    void GetKeys(std::set<CKeyID> &setAddress) const\n-    {\n-        if (!IsCrypted())\n-        {\n-            CBasicKeyStore::GetKeys(setAddress);\n-            return;\n-        }\n-        setAddress.clear();\n-        CryptedKeyMap::const_iterator mi = mapCryptedKeys.begin();\n-        while (mi != mapCryptedKeys.end())\n-        {\n-            setAddress.insert((*mi).first);\n-            mi++;\n-        }\n-    }\n-\n-    /* Wallet status (encrypted, locked) changed.\n-     * Note: Called without locks held.\n-     */\n-    boost::signals2::signal<void (CCryptoKeyStore* wallet)> NotifyStatusChanged;\n-};\n-\n #endif"
      }
    ]
  },
  {
    "sha": "5094f8d46fe3a0f0bcee913d6f1586dcef35749e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1MDk0ZjhkNDZmZTNhMGYwYmNlZTkxM2Q2ZjE1ODZkY2VmMzU3NDll",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-11-30T10:10:35Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-04T11:46:14Z"
      },
      "message": "Split off rpc_wallet_tests\n\nSplit wallet tests from other RPC tests.\nNow no #ifdef ENABLE_WALLET are needed anymore in either file.",
      "tree": {
        "sha": "45266d8ff7f86d3db40bd6ae54c37d9b831c638d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/45266d8ff7f86d3db40bd6ae54c37d9b831c638d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5094f8d46fe3a0f0bcee913d6f1586dcef35749e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5094f8d46fe3a0f0bcee913d6f1586dcef35749e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5094f8d46fe3a0f0bcee913d6f1586dcef35749e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5094f8d46fe3a0f0bcee913d6f1586dcef35749e/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "829c9203874277265613185c73f96760ae4b9356",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/829c9203874277265613185c73f96760ae4b9356",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/829c9203874277265613185c73f96760ae4b9356"
      }
    ],
    "stats": {
      "total": 158,
      "additions": 86,
      "deletions": 72
    },
    "files": [
      {
        "sha": "dccd264e5a978df299566151f8b8ae0bae971a0a",
        "filename": "src/test/Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5094f8d46fe3a0f0bcee913d6f1586dcef35749e/src/test/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5094f8d46fe3a0f0bcee913d6f1586dcef35749e/src/test/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/Makefile.am?ref=5094f8d46fe3a0f0bcee913d6f1586dcef35749e",
        "patch": "@@ -38,7 +38,7 @@ test_bitcoin_SOURCES = alert_tests.cpp \\\n   sighash_tests.cpp $(JSON_TEST_FILES) $(RAW_TEST_FILES)\n \n if ENABLE_WALLET\n-test_bitcoin_SOURCES += accounting_tests.cpp wallet_tests.cpp miner_tests.cpp\n+test_bitcoin_SOURCES += accounting_tests.cpp wallet_tests.cpp miner_tests.cpp rpc_wallet_tests.cpp\n endif\n \n nodist_test_bitcoin_SOURCES = $(BUILT_SOURCES)"
      },
      {
        "sha": "29195545dad9a04c5bd7cdc465eea08ac7fb029e",
        "filename": "src/test/rpc_tests.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 71,
        "changes": 74,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5094f8d46fe3a0f0bcee913d6f1586dcef35749e/src/test/rpc_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5094f8d46fe3a0f0bcee913d6f1586dcef35749e/src/test/rpc_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/rpc_tests.cpp?ref=5094f8d46fe3a0f0bcee913d6f1586dcef35749e",
        "patch": "@@ -9,9 +9,7 @@\n using namespace std;\n using namespace json_spirit;\n \n-BOOST_AUTO_TEST_SUITE(rpc_tests)\n-\n-static Array\n+Array\n createArgs(int nRequired, const char* address1=NULL, const char* address2=NULL)\n {\n     Array result;\n@@ -23,46 +21,7 @@ createArgs(int nRequired, const char* address1=NULL, const char* address2=NULL)\n     return result;\n }\n \n-#ifdef ENABLE_WALLET\n-BOOST_AUTO_TEST_CASE(rpc_addmultisig)\n-{\n-    rpcfn_type addmultisig = tableRPC[\"addmultisigaddress\"]->actor;\n-\n-    // old, 65-byte-long:\n-    const char address1Hex[] = \"0434e3e09f49ea168c5bbf53f877ff4206923858aab7c7e1df25bc263978107c95e35065a27ef6f1b27222db0ec97e0e895eaca603d3ee0d4c060ce3d8a00286c8\";\n-    // new, compressed:\n-    const char address2Hex[] = \"0388c2037017c62240b6b72ac1a2a5f94da790596ebd06177c8572752922165cb4\";\n-\n-    Value v;\n-    CBitcoinAddress address;\n-    BOOST_CHECK_NO_THROW(v = addmultisig(createArgs(1, address1Hex), false));\n-    address.SetString(v.get_str());\n-    BOOST_CHECK(address.IsValid() && address.IsScript());\n-\n-    BOOST_CHECK_NO_THROW(v = addmultisig(createArgs(1, address1Hex, address2Hex), false));\n-    address.SetString(v.get_str());\n-    BOOST_CHECK(address.IsValid() && address.IsScript());\n-\n-    BOOST_CHECK_NO_THROW(v = addmultisig(createArgs(2, address1Hex, address2Hex), false));\n-    address.SetString(v.get_str());\n-    BOOST_CHECK(address.IsValid() && address.IsScript());\n-\n-    BOOST_CHECK_THROW(addmultisig(createArgs(0), false), runtime_error);\n-    BOOST_CHECK_THROW(addmultisig(createArgs(1), false), runtime_error);\n-    BOOST_CHECK_THROW(addmultisig(createArgs(2, address1Hex), false), runtime_error);\n-\n-    BOOST_CHECK_THROW(addmultisig(createArgs(1, \"\"), false), runtime_error);\n-    BOOST_CHECK_THROW(addmultisig(createArgs(1, \"NotAValidPubkey\"), false), runtime_error);\n-\n-    string short1(address1Hex, address1Hex+sizeof(address1Hex)-2); // last byte missing\n-    BOOST_CHECK_THROW(addmultisig(createArgs(2, short1.c_str()), false), runtime_error);\n-\n-    string short2(address1Hex+1, address1Hex+sizeof(address1Hex)); // first byte missing\n-    BOOST_CHECK_THROW(addmultisig(createArgs(2, short2.c_str()), false), runtime_error);\n-}\n-#endif\n-\n-static Value CallRPC(string args)\n+Value CallRPC(string args)\n {\n     vector<string> vArgs;\n     boost::split(vArgs, args, boost::is_any_of(\" \\t\"));\n@@ -81,35 +40,8 @@ static Value CallRPC(string args)\n     }\n }\n \n-#ifdef ENABLE_WALLET\n-BOOST_AUTO_TEST_CASE(rpc_wallet)\n-{\n-    // Test RPC calls for various wallet statistics\n-    Value r;\n \n-    BOOST_CHECK_NO_THROW(CallRPC(\"listunspent\"));\n-    BOOST_CHECK_THROW(CallRPC(\"listunspent string\"), runtime_error);\n-    BOOST_CHECK_THROW(CallRPC(\"listunspent 0 string\"), runtime_error);\n-    BOOST_CHECK_THROW(CallRPC(\"listunspent 0 1 not_array\"), runtime_error);\n-    BOOST_CHECK_THROW(CallRPC(\"listunspent 0 1 [] extra\"), runtime_error);\n-    BOOST_CHECK_NO_THROW(r=CallRPC(\"listunspent 0 1 []\"));\n-    BOOST_CHECK(r.get_array().empty());\n-\n-    BOOST_CHECK_NO_THROW(CallRPC(\"listreceivedbyaddress\"));\n-    BOOST_CHECK_NO_THROW(CallRPC(\"listreceivedbyaddress 0\"));\n-    BOOST_CHECK_THROW(CallRPC(\"listreceivedbyaddress not_int\"), runtime_error);\n-    BOOST_CHECK_THROW(CallRPC(\"listreceivedbyaddress 0 not_bool\"), runtime_error);\n-    BOOST_CHECK_NO_THROW(CallRPC(\"listreceivedbyaddress 0 true\"));\n-    BOOST_CHECK_THROW(CallRPC(\"listreceivedbyaddress 0 true extra\"), runtime_error);\n-\n-    BOOST_CHECK_NO_THROW(CallRPC(\"listreceivedbyaccount\"));\n-    BOOST_CHECK_NO_THROW(CallRPC(\"listreceivedbyaccount 0\"));\n-    BOOST_CHECK_THROW(CallRPC(\"listreceivedbyaccount not_int\"), runtime_error);\n-    BOOST_CHECK_THROW(CallRPC(\"listreceivedbyaccount 0 not_bool\"), runtime_error);\n-    BOOST_CHECK_NO_THROW(CallRPC(\"listreceivedbyaccount 0 true\"));\n-    BOOST_CHECK_THROW(CallRPC(\"listreceivedbyaccount 0 true extra\"), runtime_error);\n-}\n-#endif\n+BOOST_AUTO_TEST_SUITE(rpc_tests)\n \n BOOST_AUTO_TEST_CASE(rpc_rawparams)\n {"
      },
      {
        "sha": "2cf0fb350bba4c209f42139820e8dd85569debb9",
        "filename": "src/test/rpc_wallet_tests.cpp",
        "status": "added",
        "additions": 82,
        "deletions": 0,
        "changes": 82,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5094f8d46fe3a0f0bcee913d6f1586dcef35749e/src/test/rpc_wallet_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5094f8d46fe3a0f0bcee913d6f1586dcef35749e/src/test/rpc_wallet_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/rpc_wallet_tests.cpp?ref=5094f8d46fe3a0f0bcee913d6f1586dcef35749e",
        "patch": "@@ -0,0 +1,82 @@\n+#include \"rpcserver.h\"\n+#include \"rpcclient.h\"\n+\n+#include \"base58.h\"\n+\n+#include <boost/algorithm/string.hpp>\n+#include <boost/test/unit_test.hpp>\n+\n+using namespace std;\n+using namespace json_spirit;\n+\n+extern Array createArgs(int nRequired, const char* address1=NULL, const char* address2=NULL);\n+extern Value CallRPC(string args);\n+\n+BOOST_AUTO_TEST_SUITE(rpc_wallet_tests)\n+\n+BOOST_AUTO_TEST_CASE(rpc_addmultisig)\n+{\n+    rpcfn_type addmultisig = tableRPC[\"addmultisigaddress\"]->actor;\n+\n+    // old, 65-byte-long:\n+    const char address1Hex[] = \"0434e3e09f49ea168c5bbf53f877ff4206923858aab7c7e1df25bc263978107c95e35065a27ef6f1b27222db0ec97e0e895eaca603d3ee0d4c060ce3d8a00286c8\";\n+    // new, compressed:\n+    const char address2Hex[] = \"0388c2037017c62240b6b72ac1a2a5f94da790596ebd06177c8572752922165cb4\";\n+\n+    Value v;\n+    CBitcoinAddress address;\n+    BOOST_CHECK_NO_THROW(v = addmultisig(createArgs(1, address1Hex), false));\n+    address.SetString(v.get_str());\n+    BOOST_CHECK(address.IsValid() && address.IsScript());\n+\n+    BOOST_CHECK_NO_THROW(v = addmultisig(createArgs(1, address1Hex, address2Hex), false));\n+    address.SetString(v.get_str());\n+    BOOST_CHECK(address.IsValid() && address.IsScript());\n+\n+    BOOST_CHECK_NO_THROW(v = addmultisig(createArgs(2, address1Hex, address2Hex), false));\n+    address.SetString(v.get_str());\n+    BOOST_CHECK(address.IsValid() && address.IsScript());\n+\n+    BOOST_CHECK_THROW(addmultisig(createArgs(0), false), runtime_error);\n+    BOOST_CHECK_THROW(addmultisig(createArgs(1), false), runtime_error);\n+    BOOST_CHECK_THROW(addmultisig(createArgs(2, address1Hex), false), runtime_error);\n+\n+    BOOST_CHECK_THROW(addmultisig(createArgs(1, \"\"), false), runtime_error);\n+    BOOST_CHECK_THROW(addmultisig(createArgs(1, \"NotAValidPubkey\"), false), runtime_error);\n+\n+    string short1(address1Hex, address1Hex+sizeof(address1Hex)-2); // last byte missing\n+    BOOST_CHECK_THROW(addmultisig(createArgs(2, short1.c_str()), false), runtime_error);\n+\n+    string short2(address1Hex+1, address1Hex+sizeof(address1Hex)); // first byte missing\n+    BOOST_CHECK_THROW(addmultisig(createArgs(2, short2.c_str()), false), runtime_error);\n+}\n+\n+BOOST_AUTO_TEST_CASE(rpc_wallet)\n+{\n+    // Test RPC calls for various wallet statistics\n+    Value r;\n+\n+    BOOST_CHECK_NO_THROW(CallRPC(\"listunspent\"));\n+    BOOST_CHECK_THROW(CallRPC(\"listunspent string\"), runtime_error);\n+    BOOST_CHECK_THROW(CallRPC(\"listunspent 0 string\"), runtime_error);\n+    BOOST_CHECK_THROW(CallRPC(\"listunspent 0 1 not_array\"), runtime_error);\n+    BOOST_CHECK_THROW(CallRPC(\"listunspent 0 1 [] extra\"), runtime_error);\n+    BOOST_CHECK_NO_THROW(r=CallRPC(\"listunspent 0 1 []\"));\n+    BOOST_CHECK(r.get_array().empty());\n+\n+    BOOST_CHECK_NO_THROW(CallRPC(\"listreceivedbyaddress\"));\n+    BOOST_CHECK_NO_THROW(CallRPC(\"listreceivedbyaddress 0\"));\n+    BOOST_CHECK_THROW(CallRPC(\"listreceivedbyaddress not_int\"), runtime_error);\n+    BOOST_CHECK_THROW(CallRPC(\"listreceivedbyaddress 0 not_bool\"), runtime_error);\n+    BOOST_CHECK_NO_THROW(CallRPC(\"listreceivedbyaddress 0 true\"));\n+    BOOST_CHECK_THROW(CallRPC(\"listreceivedbyaddress 0 true extra\"), runtime_error);\n+\n+    BOOST_CHECK_NO_THROW(CallRPC(\"listreceivedbyaccount\"));\n+    BOOST_CHECK_NO_THROW(CallRPC(\"listreceivedbyaccount 0\"));\n+    BOOST_CHECK_THROW(CallRPC(\"listreceivedbyaccount not_int\"), runtime_error);\n+    BOOST_CHECK_THROW(CallRPC(\"listreceivedbyaccount 0 not_bool\"), runtime_error);\n+    BOOST_CHECK_NO_THROW(CallRPC(\"listreceivedbyaccount 0 true\"));\n+    BOOST_CHECK_THROW(CallRPC(\"listreceivedbyaccount 0 true extra\"), runtime_error);\n+}\n+\n+BOOST_AUTO_TEST_SUITE_END()"
      }
    ]
  },
  {
    "sha": "d3ef9b00ecdc9cc449bea073b1ee54a8dcc6aaf1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkM2VmOWIwMGVjZGM5Y2M0NDliZWEwNzNiMWVlNTRhOGRjYzZhYWYx",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-04T14:30:23Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-04T14:30:23Z"
      },
      "message": "Prevent empty transactions from being added to vtxPrev\n\nCWalletTx::AddSupportingTransactions() was adding empty transaction\nto vtxPrev in some cases. Skip over these.\n\nPart one of the solution to #3190. This prevents invalid vtxPrev from\nentering the wallet, but not current ones being transmitted.",
      "tree": {
        "sha": "d2af0c57251d3b961d7e6aa3e9661a55f136e1e6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d2af0c57251d3b961d7e6aa3e9661a55f136e1e6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d3ef9b00ecdc9cc449bea073b1ee54a8dcc6aaf1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d3ef9b00ecdc9cc449bea073b1ee54a8dcc6aaf1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d3ef9b00ecdc9cc449bea073b1ee54a8dcc6aaf1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d3ef9b00ecdc9cc449bea073b1ee54a8dcc6aaf1/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "00cfc9f0749daed5137bea78a4234c3d074e8889",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/00cfc9f0749daed5137bea78a4234c3d074e8889",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/00cfc9f0749daed5137bea78a4234c3d074e8889"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 4,
      "deletions": 0
    },
    "files": [
      {
        "sha": "8b38fc6026a18f0b7987889edd670b7ac3529389",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d3ef9b00ecdc9cc449bea073b1ee54a8dcc6aaf1/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d3ef9b00ecdc9cc449bea073b1ee54a8dcc6aaf1/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=d3ef9b00ecdc9cc449bea073b1ee54a8dcc6aaf1",
        "patch": "@@ -765,6 +765,10 @@ void CWalletTx::AddSupportingTransactions()\n                 {\n                     tx = *mapWalletPrev[hash];\n                 }\n+                else\n+                {\n+                    continue;\n+                }\n \n                 int nDepth = tx.SetMerkleBranch();\n                 vtxPrev.push_back(tx);"
      }
    ]
  },
  {
    "sha": "4ef92a9067a51c962d662b857704f63d936effa0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0ZWY5MmE5MDY3YTUxYzk2MmQ2NjJiODU3NzA0ZjYzZDkzNmVmZmEw",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-04T14:40:51Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-04T14:40:51Z"
      },
      "message": "Refuse to retransmit transactions without vins\n\nVersions of bitcoin before 0.8.6 have a bug that inserted\nempty transactions into the vtxPrev in the wallet, which will cause the node to be\nbanned when retransmitted, hence add a check for !tx.vin.empty()\nbefore RelayTransaction.",
      "tree": {
        "sha": "f86a2ed2b7592e37f6a86b89417f14db30e024b9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f86a2ed2b7592e37f6a86b89417f14db30e024b9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4ef92a9067a51c962d662b857704f63d936effa0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4ef92a9067a51c962d662b857704f63d936effa0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4ef92a9067a51c962d662b857704f63d936effa0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4ef92a9067a51c962d662b857704f63d936effa0/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "00cfc9f0749daed5137bea78a4234c3d074e8889",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/00cfc9f0749daed5137bea78a4234c3d074e8889",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/00cfc9f0749daed5137bea78a4234c3d074e8889"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 4,
      "deletions": 1
    },
    "files": [
      {
        "sha": "ab6a926f7881d2ad27140be158ee6988ae7fed55",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4ef92a9067a51c962d662b857704f63d936effa0/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4ef92a9067a51c962d662b857704f63d936effa0/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=4ef92a9067a51c962d662b857704f63d936effa0",
        "patch": "@@ -895,7 +895,10 @@ void CWalletTx::RelayWalletTransaction()\n {\n     BOOST_FOREACH(const CMerkleTx& tx, vtxPrev)\n     {\n-        if (!tx.IsCoinBase())\n+        // Important: versions of bitcoin before 0.8.6 had a bug that inserted\n+        // empty transactions into the vtxPrev, which will cause the node to be\n+        // banned when retransmitted, hence the check for !tx.vin.empty()\n+        if (!tx.IsCoinBase() && !tx.vin.empty())\n             if (tx.GetDepthInMainChain() == 0)\n                 RelayTransaction((CTransaction)tx, tx.GetHash());\n     }"
      }
    ]
  },
  {
    "sha": "80ca273b7f34bdb60d44441a379636fa9641ec75",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4MGNhMjczYjdmMzRiZGI2MGQ0NDQ0MWEzNzk2MzZmYTk2NDFlYzc1",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-04T17:28:50Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-04T17:29:00Z"
      },
      "message": "Merge pull request #3357\n\n4ef92a9 Refuse to retransmit transactions without vins (Wladimir J. van der Laan)",
      "tree": {
        "sha": "f86a2ed2b7592e37f6a86b89417f14db30e024b9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f86a2ed2b7592e37f6a86b89417f14db30e024b9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/80ca273b7f34bdb60d44441a379636fa9641ec75",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJSn2ZcAAoJEHSBCwEjRsmmPIoH/ipByfN6qZCplcFO4w+deXyp\nRCQIMjziaUk63yeHfmrtW9Nkwad+58qPuz/IVtWf83UR45SEzsxiUhaUV3RZuCSt\nLHeIZYfbv/b06RaqrViqJiUaJsZm94NJFXzUpjI7GSC8brp+dghp1c2GCdiDU40O\nZ9ghHulntsmyYhZNuX/jtgu81eq5OYjkIoREJ04TiKMOaxXOHPIdBf+n4jwMgTNs\n3PP/QXJGi2khZ25zWMUjZVcWTlsKxB8MnwrbcKoF8icCP54xvS++/2lVl3EWe9uL\nw3kKqDtY3TwOeis+g2asxdPqCUpv0jhq7brRdgrkEvygovvbojeQ+TVzlvFOfjA=\n=tFHd\n-----END PGP SIGNATURE-----",
        "payload": "tree f86a2ed2b7592e37f6a86b89417f14db30e024b9\nparent 00cfc9f0749daed5137bea78a4234c3d074e8889\nparent 4ef92a9067a51c962d662b857704f63d936effa0\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1386178130 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1386178140 +0100\n\nMerge pull request #3357\n\n4ef92a9 Refuse to retransmit transactions without vins (Wladimir J. van der Laan)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/80ca273b7f34bdb60d44441a379636fa9641ec75",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/80ca273b7f34bdb60d44441a379636fa9641ec75",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/80ca273b7f34bdb60d44441a379636fa9641ec75/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "00cfc9f0749daed5137bea78a4234c3d074e8889",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/00cfc9f0749daed5137bea78a4234c3d074e8889",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/00cfc9f0749daed5137bea78a4234c3d074e8889"
      },
      {
        "sha": "4ef92a9067a51c962d662b857704f63d936effa0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4ef92a9067a51c962d662b857704f63d936effa0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4ef92a9067a51c962d662b857704f63d936effa0"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 4,
      "deletions": 1
    },
    "files": [
      {
        "sha": "ab6a926f7881d2ad27140be158ee6988ae7fed55",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/80ca273b7f34bdb60d44441a379636fa9641ec75/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/80ca273b7f34bdb60d44441a379636fa9641ec75/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=80ca273b7f34bdb60d44441a379636fa9641ec75",
        "patch": "@@ -895,7 +895,10 @@ void CWalletTx::RelayWalletTransaction()\n {\n     BOOST_FOREACH(const CMerkleTx& tx, vtxPrev)\n     {\n-        if (!tx.IsCoinBase())\n+        // Important: versions of bitcoin before 0.8.6 had a bug that inserted\n+        // empty transactions into the vtxPrev, which will cause the node to be\n+        // banned when retransmitted, hence the check for !tx.vin.empty()\n+        if (!tx.IsCoinBase() && !tx.vin.empty())\n             if (tx.GetDepthInMainChain() == 0)\n                 RelayTransaction((CTransaction)tx, tx.GetHash());\n     }"
      }
    ]
  },
  {
    "sha": "b1961523f1cdf8f707d5be67f4a20996c90302b9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMTk2MTUyM2YxY2RmOGY3MDdkNWJlNjdmNGEyMDk5NmM5MDMwMmI5",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-05T07:16:50Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-05T07:17:02Z"
      },
      "message": "Merge pull request #3356\n\nd3ef9b0 Prevent empty transactions from being added to vtxPrev (Wladimir J. van der Laan)",
      "tree": {
        "sha": "5b59441adb8046eec5bd218b541cece95f43e9eb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5b59441adb8046eec5bd218b541cece95f43e9eb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b1961523f1cdf8f707d5be67f4a20996c90302b9",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJSoChuAAoJEHSBCwEjRsmmNmgH/jSFlskzWiMRAkbcfCCs997V\n4j0pdpsRK9R2IuhUDNwjZRSZkSGYjVbGSmGPmxbHRuSex8kNqqXMSLS7vxCJ+5Zv\nAWunNjgE2u/P+4MOFbnL20Bp5LihWjeFxqv2pRU6x0+5NyrUbuvE0ruWYpFZYrnw\nqdS4r4Ie4gKBKNQ890nQ8jIu3AYbaqzU0AfuTJl83pVnT7S3aM+70rOZx4Qc8WI6\nH/vLODCPws1E3xnFl6QmneIxcSenPZmqkGJ7p6GPImvB/mYiI6xyETFeK+LWI8d3\n2wu4L6SDosJoTOct/DHAms8/htc8GTF1PluL4G7HLrGVtwcVkZYri7oVqMKuHqE=\n=PhK9\n-----END PGP SIGNATURE-----",
        "payload": "tree 5b59441adb8046eec5bd218b541cece95f43e9eb\nparent 80ca273b7f34bdb60d44441a379636fa9641ec75\nparent d3ef9b00ecdc9cc449bea073b1ee54a8dcc6aaf1\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1386227810 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1386227822 +0100\n\nMerge pull request #3356\n\nd3ef9b0 Prevent empty transactions from being added to vtxPrev (Wladimir J. van der Laan)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b1961523f1cdf8f707d5be67f4a20996c90302b9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b1961523f1cdf8f707d5be67f4a20996c90302b9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b1961523f1cdf8f707d5be67f4a20996c90302b9/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "80ca273b7f34bdb60d44441a379636fa9641ec75",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/80ca273b7f34bdb60d44441a379636fa9641ec75",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/80ca273b7f34bdb60d44441a379636fa9641ec75"
      },
      {
        "sha": "d3ef9b00ecdc9cc449bea073b1ee54a8dcc6aaf1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d3ef9b00ecdc9cc449bea073b1ee54a8dcc6aaf1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d3ef9b00ecdc9cc449bea073b1ee54a8dcc6aaf1"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 4,
      "deletions": 0
    },
    "files": [
      {
        "sha": "241e937b1b063ec112dd706f851db2d5a0d4d567",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b1961523f1cdf8f707d5be67f4a20996c90302b9/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b1961523f1cdf8f707d5be67f4a20996c90302b9/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=b1961523f1cdf8f707d5be67f4a20996c90302b9",
        "patch": "@@ -765,6 +765,10 @@ void CWalletTx::AddSupportingTransactions()\n                 {\n                     tx = *mapWalletPrev[hash];\n                 }\n+                else\n+                {\n+                    continue;\n+                }\n \n                 int nDepth = tx.SetMerkleBranch();\n                 vtxPrev.push_back(tx);"
      }
    ]
  },
  {
    "sha": "38cbeab1ff5be4fbeab7a1b86d52c112a30f9901",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozOGNiZWFiMWZmNWJlNGZiZWFiN2ExYjg2ZDUyYzExMmEzMGY5OTAx",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2013-12-05T07:46:50Z"
      },
      "committer": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2013-12-05T07:46:50Z"
      },
      "message": "fix typo in rpcnet.cpp",
      "tree": {
        "sha": "cabd1c790e8265307eb394ebcd04d135d6979398",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cabd1c790e8265307eb394ebcd04d135d6979398"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/38cbeab1ff5be4fbeab7a1b86d52c112a30f9901",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/38cbeab1ff5be4fbeab7a1b86d52c112a30f9901",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/38cbeab1ff5be4fbeab7a1b86d52c112a30f9901",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/38cbeab1ff5be4fbeab7a1b86d52c112a30f9901/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "b1961523f1cdf8f707d5be67f4a20996c90302b9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b1961523f1cdf8f707d5be67f4a20996c90302b9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b1961523f1cdf8f707d5be67f4a20996c90302b9"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "b492b57deda4e75cfe0b852047a98863320eb5d4",
        "filename": "src/rpcnet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/38cbeab1ff5be4fbeab7a1b86d52c112a30f9901/src/rpcnet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/38cbeab1ff5be4fbeab7a1b86d52c112a30f9901/src/rpcnet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcnet.cpp?ref=38cbeab1ff5be4fbeab7a1b86d52c112a30f9901",
        "patch": "@@ -315,7 +315,7 @@ Value getnettotals(const Array& params, bool fHelp)\n             \"\\nResult:\\n\"\n             \"{\\n\"\n             \"  \\\"totalbytesrecv\\\": n,   (numeric) Total bytes received\\n\"\n-            \"  \\\"totalbytessent\\\": n,   (numeric) Total Bytes sent\\n\"\n+            \"  \\\"totalbytessent\\\": n,   (numeric) Total bytes sent\\n\"\n             \"  \\\"timemillis\\\": t        (numeric) Total cpu time\\n\"\n             \"}\\n\"\n             \"\\nExamples:\\n\""
      }
    ]
  },
  {
    "sha": "ac57a2320f1d90acd00ae86268b614d5bb7f566c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphYzU3YTIzMjBmMWQ5MGFjZDAwYWU4NjI2OGI2MTRkNWJiN2Y1NjZj",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-05T08:35:04Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-05T08:35:10Z"
      },
      "message": "Merge pull request #3359\n\n38cbeab fix typo in rpcnet.cpp (Philip Kaufmann)",
      "tree": {
        "sha": "cabd1c790e8265307eb394ebcd04d135d6979398",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cabd1c790e8265307eb394ebcd04d135d6979398"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ac57a2320f1d90acd00ae86268b614d5bb7f566c",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJSoDq+AAoJEHSBCwEjRsmmzFsIAMSCyPwDQMBjK9loK+nHDqx/\nAgKfvf65+8lPztEVpqRWfZkrIO6Gct+kufWzPTg5gCfqXQdYgUixueVp2lIOeBhf\n/gjCgVJw2GSSO3jR8NB6Z4SzdX9T8GwbHsFVKuAI/c2k/HTAGfai7wVzx5yrnixw\nfTIg9dylPdePWIMXQoVWjlnKrQkejPeXucMqdTzMmzIhEkoOE9w80o7FIDT1AwQF\n6LrtHQXQERAGQY4wOFGg5JtOiVlwOj9Qr24lYF/4YYdQWvz9hYTvt3Xgcqq6x9hZ\n2nBt6ABOoz2el4STlp0wdOFmeMAwaGni6+Brr1BIx+0NJ84UOMY2Mf37xGYhYUs=\n=u1Em\n-----END PGP SIGNATURE-----",
        "payload": "tree cabd1c790e8265307eb394ebcd04d135d6979398\nparent b1961523f1cdf8f707d5be67f4a20996c90302b9\nparent 38cbeab1ff5be4fbeab7a1b86d52c112a30f9901\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1386232504 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1386232510 +0100\n\nMerge pull request #3359\n\n38cbeab fix typo in rpcnet.cpp (Philip Kaufmann)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ac57a2320f1d90acd00ae86268b614d5bb7f566c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ac57a2320f1d90acd00ae86268b614d5bb7f566c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ac57a2320f1d90acd00ae86268b614d5bb7f566c/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b1961523f1cdf8f707d5be67f4a20996c90302b9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b1961523f1cdf8f707d5be67f4a20996c90302b9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b1961523f1cdf8f707d5be67f4a20996c90302b9"
      },
      {
        "sha": "38cbeab1ff5be4fbeab7a1b86d52c112a30f9901",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/38cbeab1ff5be4fbeab7a1b86d52c112a30f9901",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/38cbeab1ff5be4fbeab7a1b86d52c112a30f9901"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "b492b57deda4e75cfe0b852047a98863320eb5d4",
        "filename": "src/rpcnet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ac57a2320f1d90acd00ae86268b614d5bb7f566c/src/rpcnet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ac57a2320f1d90acd00ae86268b614d5bb7f566c/src/rpcnet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcnet.cpp?ref=ac57a2320f1d90acd00ae86268b614d5bb7f566c",
        "patch": "@@ -315,7 +315,7 @@ Value getnettotals(const Array& params, bool fHelp)\n             \"\\nResult:\\n\"\n             \"{\\n\"\n             \"  \\\"totalbytesrecv\\\": n,   (numeric) Total bytes received\\n\"\n-            \"  \\\"totalbytessent\\\": n,   (numeric) Total Bytes sent\\n\"\n+            \"  \\\"totalbytessent\\\": n,   (numeric) Total bytes sent\\n\"\n             \"  \\\"timemillis\\\": t        (numeric) Total cpu time\\n\"\n             \"}\\n\"\n             \"\\nExamples:\\n\""
      }
    ]
  },
  {
    "sha": "cc75306ceb9154761a1eb4234ebc058389c89aef",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjYzc1MzA2Y2ViOTE1NDc2MWExZWI0MjM0ZWJjMDU4Mzg5Yzg5YWVm",
    "commit": {
      "author": {
        "name": "Micha",
        "email": "michagogo@server.fake",
        "date": "2013-12-06T00:26:40Z"
      },
      "committer": {
        "name": "Micha",
        "email": "michagogo@server.fake",
        "date": "2013-12-06T00:26:40Z"
      },
      "message": "Change release-process.md to sign release tags",
      "tree": {
        "sha": "b039a90abad7d8494c7ca53c1cb525545115c551",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b039a90abad7d8494c7ca53c1cb525545115c551"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cc75306ceb9154761a1eb4234ebc058389c89aef",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unverified_email",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABAgAGBQJSoRnvAAoJEILFwAlijs8MOJYH/2aIohx7hisS+VU62DA2nUK6\nB+pntTTldC7m6NsSH9l6pvHHRP/ChCYASew1JmY5RmusPnn/8+uwUepJhqSUOKJW\nUhvAZNG8qLgA+CZ4az533GVwMxJm1WRQvzSFrb+KqlnLOsdcWEpeOKJNYlh2sXMW\nW0ohLh0L/8SqNm5MfhXxnHs1jgwpc9L1Gd01gPOkVO+vXXDRNKaPd+drY75YmTtn\ngBOMncL9iSYnoJ/pC5fHrxMntV68MfiKPXL6b2u9DZQh3CuG8OKphLRDP641qN6S\nnnnzyxYXET2Pu3tDel4iSb0/3oS9BT1ar+Pl1cwx5Pa7GKioYgjOlfE9DcbR8GU=\n=bMoy\n-----END PGP SIGNATURE-----",
        "payload": "tree b039a90abad7d8494c7ca53c1cb525545115c551\nparent ac57a2320f1d90acd00ae86268b614d5bb7f566c\nauthor Micha <michagogo@server.fake> 1386289600 -0500\ncommitter Micha <michagogo@server.fake> 1386289600 -0500\n\nChange release-process.md to sign release tags\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cc75306ceb9154761a1eb4234ebc058389c89aef",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cc75306ceb9154761a1eb4234ebc058389c89aef",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cc75306ceb9154761a1eb4234ebc058389c89aef/comments",
    "author": {
      "login": "Michagogo",
      "id": 2559390,
      "node_id": "MDQ6VXNlcjI1NTkzOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2559390?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Michagogo",
      "html_url": "https://github.com/Michagogo",
      "followers_url": "https://api.github.com/users/Michagogo/followers",
      "following_url": "https://api.github.com/users/Michagogo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Michagogo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Michagogo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Michagogo/subscriptions",
      "organizations_url": "https://api.github.com/users/Michagogo/orgs",
      "repos_url": "https://api.github.com/users/Michagogo/repos",
      "events_url": "https://api.github.com/users/Michagogo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Michagogo/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Michagogo",
      "id": 2559390,
      "node_id": "MDQ6VXNlcjI1NTkzOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2559390?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Michagogo",
      "html_url": "https://github.com/Michagogo",
      "followers_url": "https://api.github.com/users/Michagogo/followers",
      "following_url": "https://api.github.com/users/Michagogo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Michagogo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Michagogo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Michagogo/subscriptions",
      "organizations_url": "https://api.github.com/users/Michagogo/orgs",
      "repos_url": "https://api.github.com/users/Michagogo/repos",
      "events_url": "https://api.github.com/users/Michagogo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Michagogo/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ac57a2320f1d90acd00ae86268b614d5bb7f566c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ac57a2320f1d90acd00ae86268b614d5bb7f566c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ac57a2320f1d90acd00ae86268b614d5bb7f566c"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "3d5c577f8677034b38e333d7c90e5aec0010b116",
        "filename": "doc/release-process.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cc75306ceb9154761a1eb4234ebc058389c89aef/doc/release-process.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cc75306ceb9154761a1eb4234ebc058389c89aef/doc/release-process.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-process.md?ref=cc75306ceb9154761a1eb4234ebc058389c89aef",
        "patch": "@@ -17,7 +17,7 @@ Release Process\n \n ###tag version in git\n \n-\tgit tag -a v(new version, e.g. 0.8.0)\n+\tgit tag -s v(new version, e.g. 0.8.0)\n \n ###write release notes. git shortlog helps a lot, for example:\n "
      }
    ]
  },
  {
    "sha": "d6d12f932db873a1eb490820206de1cca7d287d3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkNmQxMmY5MzJkYjg3M2ExZWI0OTA4MjAyMDZkZTFjY2E3ZDI4N2Qz",
    "commit": {
      "author": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2013-12-06T01:25:12Z"
      },
      "committer": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2013-12-06T01:25:12Z"
      },
      "message": "Merge pull request #3362 from Michagogo/signed-tags\n\nChange release-process.md to sign release tags",
      "tree": {
        "sha": "b039a90abad7d8494c7ca53c1cb525545115c551",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b039a90abad7d8494c7ca53c1cb525545115c551"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d6d12f932db873a1eb490820206de1cca7d287d3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d6d12f932db873a1eb490820206de1cca7d287d3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d6d12f932db873a1eb490820206de1cca7d287d3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d6d12f932db873a1eb490820206de1cca7d287d3/comments",
    "author": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ac57a2320f1d90acd00ae86268b614d5bb7f566c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ac57a2320f1d90acd00ae86268b614d5bb7f566c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ac57a2320f1d90acd00ae86268b614d5bb7f566c"
      },
      {
        "sha": "cc75306ceb9154761a1eb4234ebc058389c89aef",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cc75306ceb9154761a1eb4234ebc058389c89aef",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cc75306ceb9154761a1eb4234ebc058389c89aef"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "3d5c577f8677034b38e333d7c90e5aec0010b116",
        "filename": "doc/release-process.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d6d12f932db873a1eb490820206de1cca7d287d3/doc/release-process.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d6d12f932db873a1eb490820206de1cca7d287d3/doc/release-process.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-process.md?ref=d6d12f932db873a1eb490820206de1cca7d287d3",
        "patch": "@@ -17,7 +17,7 @@ Release Process\n \n ###tag version in git\n \n-\tgit tag -a v(new version, e.g. 0.8.0)\n+\tgit tag -s v(new version, e.g. 0.8.0)\n \n ###write release notes. git shortlog helps a lot, for example:\n "
      }
    ]
  },
  {
    "sha": "b4297c8fffa6a21535015db4e34b95041a386fbb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiNDI5N2M4ZmZmYTZhMjE1MzUwMTVkYjRlMzRiOTUwNDFhMzg2ZmJi",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-06T08:46:25Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-06T08:46:48Z"
      },
      "message": "Merge pull request #3353\n\n1e01f7c Payment request URI syntax changed, from request=... to r=... (Gavin Andresen)",
      "tree": {
        "sha": "fa8fada71c94cd6200e18cf742df26679983492e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fa8fada71c94cd6200e18cf742df26679983492e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b4297c8fffa6a21535015db4e34b95041a386fbb",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJSoY74AAoJEHSBCwEjRsmmL8AH/3n50jrz/jgmOukkFDujOe89\nMqYAmfpKeyFDO7s+27Qgb9ssfEoOa8KezkuNAB/+7p7zgiGawjUE+5VcOh+BBvmB\nOvncuSuyC/AgXh3RxFHrlWOC6z+eW0ovir/ap9RH1Nt+cZZZpgpIsZFN3Adw0jer\nLArUfZdDxDBPVETf+h/T4PN236AhEnfjGMgzK6MQl8m5zAvWCODIB4y0C7thNs0B\nQ1mlvEpeF7Xin+0SRd1E7nUXbMhmfuMTrSKsyppCspBmF9tI0VjEd+y3Wzds/13u\n9DyWLeqhA05i2Uk2KrWgb264gz1XZ1nnmc3LFyY0k7nW9VCdJxnooRpA0BSR62I=\n=h40e\n-----END PGP SIGNATURE-----",
        "payload": "tree fa8fada71c94cd6200e18cf742df26679983492e\nparent d6d12f932db873a1eb490820206de1cca7d287d3\nparent 1e01f7c506af60012bb99ced053d98eb529eda61\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1386319585 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1386319608 +0100\n\nMerge pull request #3353\n\n1e01f7c Payment request URI syntax changed, from request=... to r=... (Gavin Andresen)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b4297c8fffa6a21535015db4e34b95041a386fbb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b4297c8fffa6a21535015db4e34b95041a386fbb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b4297c8fffa6a21535015db4e34b95041a386fbb/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d6d12f932db873a1eb490820206de1cca7d287d3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d6d12f932db873a1eb490820206de1cca7d287d3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d6d12f932db873a1eb490820206de1cca7d287d3"
      },
      {
        "sha": "1e01f7c506af60012bb99ced053d98eb529eda61",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1e01f7c506af60012bb99ced053d98eb529eda61",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1e01f7c506af60012bb99ced053d98eb529eda61"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "06189aeaf3ea3d9ca241309de01fa7b71ba0f7ca",
        "filename": "src/qt/openuridialog.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b4297c8fffa6a21535015db4e34b95041a386fbb/src/qt/openuridialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b4297c8fffa6a21535015db4e34b95041a386fbb/src/qt/openuridialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/openuridialog.cpp?ref=b4297c8fffa6a21535015db4e34b95041a386fbb",
        "patch": "@@ -48,5 +48,5 @@ void OpenURIDialog::on_selectFileButton_clicked()\n     if(filename.isEmpty())\n         return;\n     QUrl fileUri = QUrl::fromLocalFile(filename);\n-    ui->uriEdit->setText(\"bitcoin:?request=\" + QUrl::toPercentEncoding(fileUri.toString()));\n+    ui->uriEdit->setText(\"bitcoin:?r=\" + QUrl::toPercentEncoding(fileUri.toString()));\n }"
      },
      {
        "sha": "d66a722078456db3719e0475a7f2e881b5c611a7",
        "filename": "src/qt/paymentserver.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b4297c8fffa6a21535015db4e34b95041a386fbb/src/qt/paymentserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b4297c8fffa6a21535015db4e34b95041a386fbb/src/qt/paymentserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/paymentserver.cpp?ref=b4297c8fffa6a21535015db4e34b95041a386fbb",
        "patch": "@@ -366,10 +366,10 @@ void PaymentServer::handleURIOrFile(const QString& s)\n #else\n         QUrlQuery uri((QUrl(s)));\n #endif\n-        if (uri.hasQueryItem(\"request\"))\n+        if (uri.hasQueryItem(\"r\"))\n         {\n             QByteArray temp;\n-            temp.append(uri.queryItemValue(\"request\"));\n+            temp.append(uri.queryItemValue(\"r\"));\n             QString decoded = QUrl::fromPercentEncoding(temp);\n             QUrl fetchUrl(decoded, QUrl::StrictMode);\n "
      }
    ]
  },
  {
    "sha": "4cf3411056f6a59fc5fe07784b6b6a512d76b046",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0Y2YzNDExMDU2ZjZhNTlmYzVmZTA3Nzg0YjZiNmE1MTJkNzZiMDQ2",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2013-11-14T18:21:16Z"
      },
      "committer": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2013-12-06T10:06:57Z"
      },
      "message": "[Qt] misc PaymentServer changes (e.g. changes to eventFilter())\n\n- make eventFilter() private and pass events on to QObject::eventFilter()\n  instead of just returning false\n- re-work paymentservertest.cpp to correctly handle the event test\n  after the above change (rewrite test_main to allow usage of\n  QCoreApplication:: in the tests)\n- delete socket when we were unable to connect in ipcSendCommandLine()\n- show a message to the user if we fail to start-up (instead of just a\n  debug.log entry)\n- misc small comment changes",
      "tree": {
        "sha": "d06a4552af4cc2694c9e2fec98d840365a298a27",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d06a4552af4cc2694c9e2fec98d840365a298a27"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4cf3411056f6a59fc5fe07784b6b6a512d76b046",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4cf3411056f6a59fc5fe07784b6b6a512d76b046",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4cf3411056f6a59fc5fe07784b6b6a512d76b046",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4cf3411056f6a59fc5fe07784b6b6a512d76b046/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "b4297c8fffa6a21535015db4e34b95041a386fbb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b4297c8fffa6a21535015db4e34b95041a386fbb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b4297c8fffa6a21535015db4e34b95041a386fbb"
      }
    ],
    "stats": {
      "total": 54,
      "additions": 35,
      "deletions": 19
    },
    "files": [
      {
        "sha": "ba5c06064f603067a6021664df7b7a2b6f905562",
        "filename": "src/qt/paymentserver.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 7,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4cf3411056f6a59fc5fe07784b6b6a512d76b046/src/qt/paymentserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4cf3411056f6a59fc5fe07784b6b6a512d76b046/src/qt/paymentserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/paymentserver.cpp?ref=4cf3411056f6a59fc5fe07784b6b6a512d76b046",
        "patch": "@@ -232,7 +232,10 @@ bool PaymentServer::ipcSendCommandLine(int argc, char* argv[])\n         QLocalSocket* socket = new QLocalSocket();\n         socket->connectToServer(ipcServerName(), QIODevice::WriteOnly);\n         if (!socket->waitForConnected(BITCOIN_IPC_CONNECT_TIMEOUT))\n+        {\n+            delete socket;\n             return false;\n+        }\n \n         QByteArray block;\n         QDataStream out(&block, QIODevice::WriteOnly);\n@@ -277,8 +280,11 @@ PaymentServer::PaymentServer(QObject* parent, bool startLocalServer) :\n     {\n         uriServer = new QLocalServer(this);\n \n-        if (!uriServer->listen(name))\n-            qDebug() << \"PaymentServer::PaymentServer : Cannot start bitcoin: click-to-pay handler\";\n+        if (!uriServer->listen(name)) {\n+            // constructor is called early in init, so don't use \"emit message()\" here\n+            QMessageBox::critical(0, tr(\"Payment request error\"),\n+                tr(\"Cannot start bitcoin: click-to-pay handler\"));\n+        }\n         else {\n             connect(uriServer, SIGNAL(newConnection()), this, SLOT(handleURIConnection()));\n             connect(this, SIGNAL(receivedPaymentACK(QString)), this, SLOT(handlePaymentACK(QString)));\n@@ -295,20 +301,21 @@ PaymentServer::~PaymentServer()\n // OSX-specific way of handling bitcoin: URIs and\n // PaymentRequest mime types\n //\n-bool PaymentServer::eventFilter(QObject *, QEvent *event)\n+bool PaymentServer::eventFilter(QObject *object, QEvent *event)\n {\n-    // clicking on bitcoin: URIs creates FileOpen events on the Mac:\n+    // clicking on bitcoin: URIs creates FileOpen events on the Mac\n     if (event->type() == QEvent::FileOpen)\n     {\n-        QFileOpenEvent* fileEvent = static_cast<QFileOpenEvent*>(event);\n+        QFileOpenEvent *fileEvent = static_cast<QFileOpenEvent*>(event);\n         if (!fileEvent->file().isEmpty())\n             handleURIOrFile(fileEvent->file());\n         else if (!fileEvent->url().isEmpty())\n             handleURIOrFile(fileEvent->url().toString());\n \n         return true;\n     }\n-    return false;\n+\n+    return QObject::eventFilter(object, event);\n }\n \n void PaymentServer::initNetManager()\n@@ -359,7 +366,7 @@ void PaymentServer::handleURIOrFile(const QString& s)\n         return;\n     }\n \n-    if (s.startsWith(BITCOIN_IPC_PREFIX, Qt::CaseInsensitive)) // bitcoin:\n+    if (s.startsWith(BITCOIN_IPC_PREFIX, Qt::CaseInsensitive)) // bitcoin: URI\n     {\n #if QT_VERSION < 0x050000\n         QUrl uri(s);"
      },
      {
        "sha": "ab59388accf72beee915eb1f13f53a6e1fb645b0",
        "filename": "src/qt/paymentserver.h",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4cf3411056f6a59fc5fe07784b6b6a512d76b046/src/qt/paymentserver.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4cf3411056f6a59fc5fe07784b6b6a512d76b046/src/qt/paymentserver.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/paymentserver.h?ref=4cf3411056f6a59fc5fe07784b6b6a512d76b046",
        "patch": "@@ -77,10 +77,6 @@ class PaymentServer : public QObject\n     // Return certificate store\n     static X509_STORE* getCertStore() { return certStore; }\n \n-    // Constructor registers this on the parent QApplication to\n-    // receive QEvent::FileOpen events\n-    bool eventFilter(QObject *object, QEvent *event);\n-\n     // OptionsModel is used for getting proxy settings and display unit\n     void setOptionsModel(OptionsModel *optionsModel);\n \n@@ -111,6 +107,11 @@ private slots:\n     void reportSslErrors(QNetworkReply*, const QList<QSslError> &);\n     void handlePaymentACK(const QString& paymentACKMsg);\n \n+protected:\n+    // Constructor registers this on the parent QApplication to\n+    // receive QEvent::FileOpen and QEvent:Drop events\n+    bool eventFilter(QObject *object, QEvent *event);\n+\n private:\n     static bool readPaymentRequest(const QString& filename, PaymentRequestPlus& request);\n     bool processPaymentRequest(PaymentRequestPlus& request, SendCoinsRecipient& recipient);"
      },
      {
        "sha": "7dee7a9cda47b29d291dc7489825520b2e81d797",
        "filename": "src/qt/test/paymentservertests.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 6,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4cf3411056f6a59fc5fe07784b6b6a512d76b046/src/qt/test/paymentservertests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4cf3411056f6a59fc5fe07784b6b6a512d76b046/src/qt/test/paymentservertests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/paymentservertests.cpp?ref=4cf3411056f6a59fc5fe07784b6b6a512d76b046",
        "patch": "@@ -7,12 +7,9 @@\n \n #include <openssl/x509.h>\n #include <openssl/x509_vfy.h>\n-#include <QCoreApplication>\n-#include <QDebug>\n+\n #include <QFileOpenEvent>\n #include <QTemporaryFile>\n-#include <QVariant>\n-\n \n X509 *parse_b64der_cert(const char* cert_data)\n {\n@@ -41,9 +38,14 @@ static SendCoinsRecipient handleRequest(PaymentServer* server, std::vector<unsig\n     f.write((const char*)&data[0], data.size());\n     f.close();\n \n-    // Create a FileOpenEvent and send it directly to the server's event filter:\n+    // Create a QObject, install event filter from PaymentServer\n+    // and send a file open event to the object\n+    QObject object;\n+    object.installEventFilter(server);\n     QFileOpenEvent event(f.fileName());\n-    server->eventFilter(NULL, &event);\n+    // If sending the event fails, this will cause sigCatcher to be empty,\n+    // which will lead to a test failure anyway.\n+    QCoreApplication::sendEvent(&object, &event);\n \n     QObject::disconnect(server, SIGNAL(receivedPaymentRequest(SendCoinsRecipient)),\n                         &sigCatcher, SLOT(getRecipient(SendCoinsRecipient)));"
      },
      {
        "sha": "884e535a6032d62413f8c0dd1b3a64cbab9bd8bf",
        "filename": "src/qt/test/paymentservertests.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4cf3411056f6a59fc5fe07784b6b6a512d76b046/src/qt/test/paymentservertests.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4cf3411056f6a59fc5fe07784b6b6a512d76b046/src/qt/test/paymentservertests.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/paymentservertests.h?ref=4cf3411056f6a59fc5fe07784b6b6a512d76b046",
        "patch": "@@ -20,8 +20,10 @@ private slots:\n class RecipientCatcher : public QObject\n {\n     Q_OBJECT\n+\n public slots:\n     void getRecipient(SendCoinsRecipient r);\n+\n public:\n     SendCoinsRecipient recipient;\n };"
      },
      {
        "sha": "ae584706f197ee828e1dfc6265083b0bd1fea0b9",
        "filename": "src/qt/test/test_main.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 2,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4cf3411056f6a59fc5fe07784b6b6a512d76b046/src/qt/test/test_main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4cf3411056f6a59fc5fe07784b6b6a512d76b046/src/qt/test/test_main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/test_main.cpp?ref=4cf3411056f6a59fc5fe07784b6b6a512d76b046",
        "patch": "@@ -1,8 +1,7 @@\n-\n-\n #include \"paymentservertests.h\"\n #include \"uritests.h\"\n \n+#include <QCoreApplication>\n #include <QObject>\n #include <QTest>\n \n@@ -11,6 +10,11 @@ int main(int argc, char *argv[])\n {\n     bool fInvalid = false;\n \n+    // Don't remove this, it's needed to access\n+    // QCoreApplication:: in the tests\n+    QCoreApplication app(argc, argv);\n+    app.setApplicationName(\"Bitcoin-Qt-test\");\n+\n     URITests test1;\n     if (QTest::qExec(&test1) != 0)\n         fInvalid = true;"
      }
    ]
  },
  {
    "sha": "9ac11a4e1e8daba83fe1a57c767844ba9994824b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5YWMxMWE0ZTFlOGRhYmE4M2ZlMWE1N2M3Njc4NDRiYTk5OTQ4MjRi",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-06T10:31:55Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-06T10:32:25Z"
      },
      "message": "Merge pull request #3254\n\n4cf3411 [Qt] misc PaymentServer changes (e.g. changes to eventFilter()) (Philip Kaufmann)",
      "tree": {
        "sha": "d06a4552af4cc2694c9e2fec98d840365a298a27",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d06a4552af4cc2694c9e2fec98d840365a298a27"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9ac11a4e1e8daba83fe1a57c767844ba9994824b",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJSoae5AAoJEHSBCwEjRsmm/8EH/2Uroxk+r9KWWyHJV42bCOsI\nzPXN/yZNZ7LkCnlK0axzXNZ3QTv54oJwoGRX5NGupgL4J4x4wMDddD19IKXw89ev\nxXEK7lvmKXtPnef/X0jQZrs+3APo++ONB8p79xxeXxbPgG7fOiQI14Cs5t1P2c/+\nMR5cai8dQsCzQERlZzZUcxGIO0fLlVxamnNLrYFNlGBxkyMxlAk4hkDNDGT7cIim\n6GJAI68AX1WOWi5MZ4NJFF9hn7qZv9jzGMZA5zl8UPlDqBNbQ30OKit76JgUExvr\n+5g6b4+ixzJ1CY8JL0vfGl+GFhSgbrht+l0w9T6IJQ74qPf2biwCDo7a8IXyork=\n=43+G\n-----END PGP SIGNATURE-----",
        "payload": "tree d06a4552af4cc2694c9e2fec98d840365a298a27\nparent b4297c8fffa6a21535015db4e34b95041a386fbb\nparent 4cf3411056f6a59fc5fe07784b6b6a512d76b046\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1386325915 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1386325945 +0100\n\nMerge pull request #3254\n\n4cf3411 [Qt] misc PaymentServer changes (e.g. changes to eventFilter()) (Philip Kaufmann)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9ac11a4e1e8daba83fe1a57c767844ba9994824b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9ac11a4e1e8daba83fe1a57c767844ba9994824b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9ac11a4e1e8daba83fe1a57c767844ba9994824b/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b4297c8fffa6a21535015db4e34b95041a386fbb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b4297c8fffa6a21535015db4e34b95041a386fbb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b4297c8fffa6a21535015db4e34b95041a386fbb"
      },
      {
        "sha": "4cf3411056f6a59fc5fe07784b6b6a512d76b046",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4cf3411056f6a59fc5fe07784b6b6a512d76b046",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4cf3411056f6a59fc5fe07784b6b6a512d76b046"
      }
    ],
    "stats": {
      "total": 54,
      "additions": 35,
      "deletions": 19
    },
    "files": [
      {
        "sha": "ba5c06064f603067a6021664df7b7a2b6f905562",
        "filename": "src/qt/paymentserver.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 7,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9ac11a4e1e8daba83fe1a57c767844ba9994824b/src/qt/paymentserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9ac11a4e1e8daba83fe1a57c767844ba9994824b/src/qt/paymentserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/paymentserver.cpp?ref=9ac11a4e1e8daba83fe1a57c767844ba9994824b",
        "patch": "@@ -232,7 +232,10 @@ bool PaymentServer::ipcSendCommandLine(int argc, char* argv[])\n         QLocalSocket* socket = new QLocalSocket();\n         socket->connectToServer(ipcServerName(), QIODevice::WriteOnly);\n         if (!socket->waitForConnected(BITCOIN_IPC_CONNECT_TIMEOUT))\n+        {\n+            delete socket;\n             return false;\n+        }\n \n         QByteArray block;\n         QDataStream out(&block, QIODevice::WriteOnly);\n@@ -277,8 +280,11 @@ PaymentServer::PaymentServer(QObject* parent, bool startLocalServer) :\n     {\n         uriServer = new QLocalServer(this);\n \n-        if (!uriServer->listen(name))\n-            qDebug() << \"PaymentServer::PaymentServer : Cannot start bitcoin: click-to-pay handler\";\n+        if (!uriServer->listen(name)) {\n+            // constructor is called early in init, so don't use \"emit message()\" here\n+            QMessageBox::critical(0, tr(\"Payment request error\"),\n+                tr(\"Cannot start bitcoin: click-to-pay handler\"));\n+        }\n         else {\n             connect(uriServer, SIGNAL(newConnection()), this, SLOT(handleURIConnection()));\n             connect(this, SIGNAL(receivedPaymentACK(QString)), this, SLOT(handlePaymentACK(QString)));\n@@ -295,20 +301,21 @@ PaymentServer::~PaymentServer()\n // OSX-specific way of handling bitcoin: URIs and\n // PaymentRequest mime types\n //\n-bool PaymentServer::eventFilter(QObject *, QEvent *event)\n+bool PaymentServer::eventFilter(QObject *object, QEvent *event)\n {\n-    // clicking on bitcoin: URIs creates FileOpen events on the Mac:\n+    // clicking on bitcoin: URIs creates FileOpen events on the Mac\n     if (event->type() == QEvent::FileOpen)\n     {\n-        QFileOpenEvent* fileEvent = static_cast<QFileOpenEvent*>(event);\n+        QFileOpenEvent *fileEvent = static_cast<QFileOpenEvent*>(event);\n         if (!fileEvent->file().isEmpty())\n             handleURIOrFile(fileEvent->file());\n         else if (!fileEvent->url().isEmpty())\n             handleURIOrFile(fileEvent->url().toString());\n \n         return true;\n     }\n-    return false;\n+\n+    return QObject::eventFilter(object, event);\n }\n \n void PaymentServer::initNetManager()\n@@ -359,7 +366,7 @@ void PaymentServer::handleURIOrFile(const QString& s)\n         return;\n     }\n \n-    if (s.startsWith(BITCOIN_IPC_PREFIX, Qt::CaseInsensitive)) // bitcoin:\n+    if (s.startsWith(BITCOIN_IPC_PREFIX, Qt::CaseInsensitive)) // bitcoin: URI\n     {\n #if QT_VERSION < 0x050000\n         QUrl uri(s);"
      },
      {
        "sha": "ab59388accf72beee915eb1f13f53a6e1fb645b0",
        "filename": "src/qt/paymentserver.h",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9ac11a4e1e8daba83fe1a57c767844ba9994824b/src/qt/paymentserver.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9ac11a4e1e8daba83fe1a57c767844ba9994824b/src/qt/paymentserver.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/paymentserver.h?ref=9ac11a4e1e8daba83fe1a57c767844ba9994824b",
        "patch": "@@ -77,10 +77,6 @@ class PaymentServer : public QObject\n     // Return certificate store\n     static X509_STORE* getCertStore() { return certStore; }\n \n-    // Constructor registers this on the parent QApplication to\n-    // receive QEvent::FileOpen events\n-    bool eventFilter(QObject *object, QEvent *event);\n-\n     // OptionsModel is used for getting proxy settings and display unit\n     void setOptionsModel(OptionsModel *optionsModel);\n \n@@ -111,6 +107,11 @@ private slots:\n     void reportSslErrors(QNetworkReply*, const QList<QSslError> &);\n     void handlePaymentACK(const QString& paymentACKMsg);\n \n+protected:\n+    // Constructor registers this on the parent QApplication to\n+    // receive QEvent::FileOpen and QEvent:Drop events\n+    bool eventFilter(QObject *object, QEvent *event);\n+\n private:\n     static bool readPaymentRequest(const QString& filename, PaymentRequestPlus& request);\n     bool processPaymentRequest(PaymentRequestPlus& request, SendCoinsRecipient& recipient);"
      },
      {
        "sha": "7dee7a9cda47b29d291dc7489825520b2e81d797",
        "filename": "src/qt/test/paymentservertests.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 6,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9ac11a4e1e8daba83fe1a57c767844ba9994824b/src/qt/test/paymentservertests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9ac11a4e1e8daba83fe1a57c767844ba9994824b/src/qt/test/paymentservertests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/paymentservertests.cpp?ref=9ac11a4e1e8daba83fe1a57c767844ba9994824b",
        "patch": "@@ -7,12 +7,9 @@\n \n #include <openssl/x509.h>\n #include <openssl/x509_vfy.h>\n-#include <QCoreApplication>\n-#include <QDebug>\n+\n #include <QFileOpenEvent>\n #include <QTemporaryFile>\n-#include <QVariant>\n-\n \n X509 *parse_b64der_cert(const char* cert_data)\n {\n@@ -41,9 +38,14 @@ static SendCoinsRecipient handleRequest(PaymentServer* server, std::vector<unsig\n     f.write((const char*)&data[0], data.size());\n     f.close();\n \n-    // Create a FileOpenEvent and send it directly to the server's event filter:\n+    // Create a QObject, install event filter from PaymentServer\n+    // and send a file open event to the object\n+    QObject object;\n+    object.installEventFilter(server);\n     QFileOpenEvent event(f.fileName());\n-    server->eventFilter(NULL, &event);\n+    // If sending the event fails, this will cause sigCatcher to be empty,\n+    // which will lead to a test failure anyway.\n+    QCoreApplication::sendEvent(&object, &event);\n \n     QObject::disconnect(server, SIGNAL(receivedPaymentRequest(SendCoinsRecipient)),\n                         &sigCatcher, SLOT(getRecipient(SendCoinsRecipient)));"
      },
      {
        "sha": "884e535a6032d62413f8c0dd1b3a64cbab9bd8bf",
        "filename": "src/qt/test/paymentservertests.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9ac11a4e1e8daba83fe1a57c767844ba9994824b/src/qt/test/paymentservertests.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9ac11a4e1e8daba83fe1a57c767844ba9994824b/src/qt/test/paymentservertests.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/paymentservertests.h?ref=9ac11a4e1e8daba83fe1a57c767844ba9994824b",
        "patch": "@@ -20,8 +20,10 @@ private slots:\n class RecipientCatcher : public QObject\n {\n     Q_OBJECT\n+\n public slots:\n     void getRecipient(SendCoinsRecipient r);\n+\n public:\n     SendCoinsRecipient recipient;\n };"
      },
      {
        "sha": "ae584706f197ee828e1dfc6265083b0bd1fea0b9",
        "filename": "src/qt/test/test_main.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 2,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9ac11a4e1e8daba83fe1a57c767844ba9994824b/src/qt/test/test_main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9ac11a4e1e8daba83fe1a57c767844ba9994824b/src/qt/test/test_main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/test_main.cpp?ref=9ac11a4e1e8daba83fe1a57c767844ba9994824b",
        "patch": "@@ -1,8 +1,7 @@\n-\n-\n #include \"paymentservertests.h\"\n #include \"uritests.h\"\n \n+#include <QCoreApplication>\n #include <QObject>\n #include <QTest>\n \n@@ -11,6 +10,11 @@ int main(int argc, char *argv[])\n {\n     bool fInvalid = false;\n \n+    // Don't remove this, it's needed to access\n+    // QCoreApplication:: in the tests\n+    QCoreApplication app(argc, argv);\n+    app.setApplicationName(\"Bitcoin-Qt-test\");\n+\n     URITests test1;\n     if (QTest::qExec(&test1) != 0)\n         fInvalid = true;"
      }
    ]
  },
  {
    "sha": "a702a0b61dc4a473d5828c75cff1e90ba96cee8d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNzAyYTBiNjFkYzRhNDczZDU4MjhjNzVjZmYxZTkwYmE5NmNlZThk",
    "commit": {
      "author": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2013-12-06T23:56:38Z"
      },
      "committer": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2013-12-06T23:59:34Z"
      },
      "message": "Restore hex to getrawtransaction vout scriptPubkey.\n\nCommit be066fad accidentally removed the hex field.\nThis gets in the way of doing offline signing.\n\n(credit belongs to sipa for actually looking for the\n cause instead of being lazy like me and just shrugging\n and writing the scriptpubkey from the asm.)",
      "tree": {
        "sha": "999030d81c69e0e656a5cda46a1e1c1d58a58548",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/999030d81c69e0e656a5cda46a1e1c1d58a58548"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a702a0b61dc4a473d5828c75cff1e90ba96cee8d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a702a0b61dc4a473d5828c75cff1e90ba96cee8d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a702a0b61dc4a473d5828c75cff1e90ba96cee8d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a702a0b61dc4a473d5828c75cff1e90ba96cee8d/comments",
    "author": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ac57a2320f1d90acd00ae86268b614d5bb7f566c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ac57a2320f1d90acd00ae86268b614d5bb7f566c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ac57a2320f1d90acd00ae86268b614d5bb7f566c"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "a45c2cc1f30a9fe2309c763c4cc7487b5e97ae9c",
        "filename": "src/rpcrawtransaction.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a702a0b61dc4a473d5828c75cff1e90ba96cee8d/src/rpcrawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a702a0b61dc4a473d5828c75cff1e90ba96cee8d/src/rpcrawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcrawtransaction.cpp?ref=a702a0b61dc4a473d5828c75cff1e90ba96cee8d",
        "patch": "@@ -78,7 +78,7 @@ void TxToJSON(const CTransaction& tx, const uint256 hashBlock, Object& entry)\n         out.push_back(Pair(\"value\", ValueFromAmount(txout.nValue)));\n         out.push_back(Pair(\"n\", (boost::int64_t)i));\n         Object o;\n-        ScriptPubKeyToJSON(txout.scriptPubKey, o, false);\n+        ScriptPubKeyToJSON(txout.scriptPubKey, o, true);\n         out.push_back(Pair(\"scriptPubKey\", o));\n         vout.push_back(out);\n     }"
      }
    ]
  },
  {
    "sha": "fbbed19b78e3055103cdff8d31d24ced7e7e561b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYmJlZDE5Yjc4ZTMwNTUxMDNjZGZmOGQzMWQyNGNlZDdlN2U1NjFi",
    "commit": {
      "author": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2013-12-07T00:58:15Z"
      },
      "committer": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2013-12-07T00:58:15Z"
      },
      "message": "Merge pull request #3365 from gmaxwell/hexify\n\nRestore hex to getrawtransaction vout scriptPubkey.",
      "tree": {
        "sha": "8f1f88db2ecc3065af54a4b2718bd9ea915ee475",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8f1f88db2ecc3065af54a4b2718bd9ea915ee475"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fbbed19b78e3055103cdff8d31d24ced7e7e561b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fbbed19b78e3055103cdff8d31d24ced7e7e561b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fbbed19b78e3055103cdff8d31d24ced7e7e561b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fbbed19b78e3055103cdff8d31d24ced7e7e561b/comments",
    "author": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9ac11a4e1e8daba83fe1a57c767844ba9994824b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9ac11a4e1e8daba83fe1a57c767844ba9994824b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9ac11a4e1e8daba83fe1a57c767844ba9994824b"
      },
      {
        "sha": "a702a0b61dc4a473d5828c75cff1e90ba96cee8d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a702a0b61dc4a473d5828c75cff1e90ba96cee8d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a702a0b61dc4a473d5828c75cff1e90ba96cee8d"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "a45c2cc1f30a9fe2309c763c4cc7487b5e97ae9c",
        "filename": "src/rpcrawtransaction.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fbbed19b78e3055103cdff8d31d24ced7e7e561b/src/rpcrawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fbbed19b78e3055103cdff8d31d24ced7e7e561b/src/rpcrawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcrawtransaction.cpp?ref=fbbed19b78e3055103cdff8d31d24ced7e7e561b",
        "patch": "@@ -78,7 +78,7 @@ void TxToJSON(const CTransaction& tx, const uint256 hashBlock, Object& entry)\n         out.push_back(Pair(\"value\", ValueFromAmount(txout.nValue)));\n         out.push_back(Pair(\"n\", (boost::int64_t)i));\n         Object o;\n-        ScriptPubKeyToJSON(txout.scriptPubKey, o, false);\n+        ScriptPubKeyToJSON(txout.scriptPubKey, o, true);\n         out.push_back(Pair(\"scriptPubKey\", o));\n         vout.push_back(out);\n     }"
      }
    ]
  },
  {
    "sha": "05e27c66411caa622815cc7cc7136dfd85370ab4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNWUyN2M2NjQxMWNhYTYyMjgxNWNjN2NjNzEzNmRmZDg1MzcwYWI0",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-08T12:51:53Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-08T12:52:48Z"
      },
      "message": "Merge pull request #3332\n\n5094f8d Split off rpc_wallet_tests (Wladimir J. van der Laan)\n829c920 Move CCryptoKeyStore to crypter.cpp (Wladimir J. van der Laan)\nae6ea5a Update build-unix.md to mention --disable-wallet (Wladimir J. van der Laan)\n4f9e993 Add --disable-wallet option to build system (Wladimir J. van der Laan)\nd004d72 Move CAddrDB frrom db to net (Wladimir J. van der Laan)\n48ba56c Delimit code with #ifdef ENABLE_WALLET (Wladimir J. van der Laan)\n991685d Move getinfo to rpcnet.cpp (Wladimir J. van der Laan)\nbbb0936 Move HelpExample* from rpcwallet to rpcserver (Wladimir J. van der Laan)",
      "tree": {
        "sha": "983fe8073153218c28d756873daeaf4ec2293b16",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/983fe8073153218c28d756873daeaf4ec2293b16"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/05e27c66411caa622815cc7cc7136dfd85370ab4",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJSpGugAAoJEHSBCwEjRsmmWHIH/0nELk/+e1exRVOR0zWjgGea\nV04+/ssDjvVL7Q94uJAsmM+s2y15zrUe2JHHFn9aZ8TanjMX8EPzYh65Yp3KqKjx\nasEX9OjfZec7ugWA4Gnv6uV0ye9VV8Hm+1tB30EtI5hMWUfpc6Q7mm9CaAkVnFCD\nEMFmPQ9MegKF9fhPIpycHu+XIatBKGeu9E9TiUkjYzCZbsP1Ai22yDpFzoN7JL7s\nzU/MF0pqdGPxeMFXa5JoWWJFvbbCUYQP0/Sed+nBE8WqQbk6bEzoCnY+23//y2xk\n9ID4xd3mo2K/l4JZzxPp/xizNQ+aY2iqgyAggIZtnmlMeF7/uz4ndNlcsI6tbuM=\n=boxm\n-----END PGP SIGNATURE-----",
        "payload": "tree 983fe8073153218c28d756873daeaf4ec2293b16\nparent fbbed19b78e3055103cdff8d31d24ced7e7e561b\nparent 5094f8d46fe3a0f0bcee913d6f1586dcef35749e\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1386507113 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1386507168 +0100\n\nMerge pull request #3332\n\n5094f8d Split off rpc_wallet_tests (Wladimir J. van der Laan)\n829c920 Move CCryptoKeyStore to crypter.cpp (Wladimir J. van der Laan)\nae6ea5a Update build-unix.md to mention --disable-wallet (Wladimir J. van der Laan)\n4f9e993 Add --disable-wallet option to build system (Wladimir J. van der Laan)\nd004d72 Move CAddrDB frrom db to net (Wladimir J. van der Laan)\n48ba56c Delimit code with #ifdef ENABLE_WALLET (Wladimir J. van der Laan)\n991685d Move getinfo to rpcnet.cpp (Wladimir J. van der Laan)\nbbb0936 Move HelpExample* from rpcwallet to rpcserver (Wladimir J. van der Laan)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/05e27c66411caa622815cc7cc7136dfd85370ab4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/05e27c66411caa622815cc7cc7136dfd85370ab4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/05e27c66411caa622815cc7cc7136dfd85370ab4/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fbbed19b78e3055103cdff8d31d24ced7e7e561b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fbbed19b78e3055103cdff8d31d24ced7e7e561b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fbbed19b78e3055103cdff8d31d24ced7e7e561b"
      },
      {
        "sha": "5094f8d46fe3a0f0bcee913d6f1586dcef35749e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5094f8d46fe3a0f0bcee913d6f1586dcef35749e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5094f8d46fe3a0f0bcee913d6f1586dcef35749e"
      }
    ],
    "stats": {
      "total": 1224,
      "additions": 687,
      "deletions": 537
    },
    "files": [
      {
        "sha": "0f99675fb44c92a5e27ef7f76c6c528bac66dece",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 26,
        "deletions": 2,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/05e27c66411caa622815cc7cc7136dfd85370ab4/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/05e27c66411caa622815cc7cc7136dfd85370ab4/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=05e27c66411caa622815cc7cc7136dfd85370ab4",
        "patch": "@@ -37,6 +37,13 @@ AM_MAINTAINER_MODE([enable])\n dnl make the compilation flags quiet unless V=1 is used\n m4_ifdef([AM_SILENT_RULES], [AM_SILENT_RULES([yes])])\n \n+# Enable wallet\n+AC_ARG_ENABLE([wallet],\n+  [AS_HELP_STRING([--enable-wallet],\n+  [enable wallet (default is yes)])],\n+  [enable_wallet=$enableval],\n+  [enable_wallet=yes])\n+\n AC_ARG_WITH([miniupnpc],\n   [AS_HELP_STRING([--with-miniupnpc],\n   [enable UPNP (default is yes if libminiupnpc is found)])],\n@@ -362,8 +369,10 @@ AC_TRY_COMPILE([#include <sys/socket.h>],\n  [ AC_MSG_RESULT(no)]\n )\n \n-dnl Check for libdb_cxx\n-BITCOIN_FIND_BDB48\n+if test x$enable_wallet != xno; then\n+    dnl Check for libdb_cxx only if wallet enabled\n+    BITCOIN_FIND_BDB48\n+fi\n \n dnl Check for libminiupnpc (optional)\n if test x$use_upnp != xno; then\n@@ -593,6 +602,20 @@ if test \"x$use_ccache\" != \"xno\"; then\n   AC_MSG_RESULT($use_ccache)\n fi\n \n+dnl enable wallet\n+AC_MSG_CHECKING([if wallet should be enabled])\n+if test x$enable_wallet != xno; then\n+  AC_MSG_RESULT(yes)\n+  AC_DEFINE_UNQUOTED([ENABLE_WALLET],[1],[Define to 1 to enable wallet functions])\n+\n+else\n+  AC_MSG_RESULT(no)\n+\n+  if test \"x$use_qt\" != \"xno\"; then\n+    AC_MSG_ERROR([Cannot currently build Qt GUI with wallet disabled. Use --without-qt.])\n+  fi\n+fi\n+\n dnl enable ipv6 support\n AC_MSG_CHECKING([if ipv6 should be enabled])\n if test x$have_ipv6 = xno; then\n@@ -705,6 +728,7 @@ fi\n \n AM_CONDITIONAL([TARGET_DARWIN], [test x$TARGET_OS = xdarwin])\n AM_CONDITIONAL([TARGET_WINDOWS], [test x$TARGET_OS = xwindows])\n+AM_CONDITIONAL([ENABLE_WALLET],[test x$enable_wallet == xyes])\n AM_CONDITIONAL([USE_QRCODE], [test x$use_qr = xyes])\n AM_CONDITIONAL([USE_LCOV],[test x$use_lcov == xyes])\n AM_CONDITIONAL([USE_COMPARISON_TOOL],[test x$use_comparison_tool != xno])"
      },
      {
        "sha": "1d9d96a1ca147aba3d16e7f6319a4ef53801f1d5",
        "filename": "doc/build-unix.md",
        "status": "modified",
        "additions": 10,
        "deletions": 1,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/05e27c66411caa622815cc7cc7136dfd85370ab4/doc/build-unix.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/05e27c66411caa622815cc7cc7136dfd85370ab4/doc/build-unix.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-unix.md?ref=05e27c66411caa622815cc7cc7136dfd85370ab4",
        "patch": "@@ -22,7 +22,7 @@ Dependencies\n  Library     Purpose           Description\n  -------     -------           -----------\n  libssl      SSL Support       Secure communications\n- libdb4.8    Berkeley DB       Blockchain & wallet storage\n+ libdb4.8    Berkeley DB       Wallet storage\n  libboost    Boost             C++ Library\n  miniupnpc   UPnP Support      Optional firewall-jumping support\n  qt          GUI               GUI toolkit\n@@ -178,3 +178,12 @@ Hardening enables the following features:\n \tRW- R-- RW-\n \n     The STK RW- means that the stack is readable and writeable but not executable.\n+\n+Disable-wallet mode\n+--------------------\n+When the intention is to run only a P2P node without a wallet, bitcoin may be compiled in\n+disable-wallet mode with:\n+\n+    ./configure --disable-wallet\n+\n+In this case there is no dependency on Berkeley DB 4.8."
      },
      {
        "sha": "89879d5cd829df56ff133823f432e1acfc7403d3",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 35,
        "deletions": 6,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/05e27c66411caa622815cc7cc7136dfd85370ab4/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/05e27c66411caa622815cc7cc7136dfd85370ab4/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=05e27c66411caa622815cc7cc7136dfd85370ab4",
        "patch": "@@ -4,6 +4,9 @@ AM_CPPFLAGS += -I$(top_srcdir)/src/leveldb/helpers/memenv \\\n   -I$(builddir)\n \n noinst_LIBRARIES = libbitcoin_server.a libbitcoin_common.a libbitcoin_cli.a\n+if ENABLE_WALLET\n+noinst_LIBRARIES += libbitcoin_wallet.a\n+endif\n \n bin_PROGRAMS = bitcoind bitcoin-cli\n \n@@ -33,14 +36,37 @@ obj/build.h: FORCE\n \t  $(abs_top_srcdir)\n version.o: obj/build.h\n \n-libbitcoin_server_a_SOURCES = addrman.cpp alert.cpp \\\n+libbitcoin_server_a_SOURCES = \\\n+  addrman.cpp \\\n+  alert.cpp \\\n   rpcserver.cpp \\\n   bloom.cpp \\\n-  chainparams.cpp checkpoints.cpp coins.cpp crypter.cpp db.cpp \\\n-  init.cpp keystore.cpp leveldbwrapper.cpp main.cpp miner.cpp \\\n-  net.cpp noui.cpp rpcblockchain.cpp rpcdump.cpp \\\n-  rpcmining.cpp rpcnet.cpp rpcrawtransaction.cpp rpcwallet.cpp \\\n-  txdb.cpp txmempool.cpp wallet.cpp walletdb.cpp $(JSON_H) \\\n+  chainparams.cpp \\\n+  checkpoints.cpp \\\n+  coins.cpp \\\n+  init.cpp \\\n+  keystore.cpp \\\n+  leveldbwrapper.cpp \\\n+  main.cpp \\\n+  net.cpp \\\n+  noui.cpp \\\n+  rpcblockchain.cpp \\\n+  rpcnet.cpp \\\n+  rpcrawtransaction.cpp \\\n+  txdb.cpp \\\n+  txmempool.cpp \\\n+  $(JSON_H) \\\n+  $(BITCOIN_CORE_H)\n+\n+libbitcoin_wallet_a_SOURCES = \\\n+  db.cpp \\\n+  crypter.cpp \\\n+  miner.cpp \\\n+  rpcdump.cpp \\\n+  rpcmining.cpp \\\n+  rpcwallet.cpp \\\n+  wallet.cpp \\\n+  walletdb.cpp \\\n   $(BITCOIN_CORE_H)\n \n libbitcoin_common_a_SOURCES = \\\n@@ -68,6 +94,9 @@ nodist_libbitcoin_common_a_SOURCES = $(top_srcdir)/src/obj/build.h\n # bitcoind binary #\n bitcoind_LDADD = libbitcoin_server.a libbitcoin_cli.a libbitcoin_common.a leveldb/libleveldb.a leveldb/libmemenv.a \\\n   $(BOOST_LIBS)\n+if ENABLE_WALLET\n+bitcoind_LDADD += libbitcoin_wallet.a\n+endif\n bitcoind_SOURCES = bitcoind.cpp\n #\n "
      },
      {
        "sha": "13cffd29bc2a76ab8498c03eaf0d2750bbb8948e",
        "filename": "src/Makefile.include",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/05e27c66411caa622815cc7cc7136dfd85370ab4/src/Makefile.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/05e27c66411caa622815cc7cc7136dfd85370ab4/src/Makefile.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.include?ref=05e27c66411caa622815cc7cc7136dfd85370ab4",
        "patch": "@@ -6,6 +6,7 @@ AM_CPPFLAGS =  $(INCLUDES) \\\n AM_LDFLAGS = $(PTHREAD_CFLAGS)\n \n LIBBITCOIN_SERVER=$(top_builddir)/src/libbitcoin_server.a\n+LIBBITCOIN_WALLET=$(top_builddir)/src/libbitcoin_wallet.a\n LIBBITCOIN_COMMON=$(top_builddir)/src/libbitcoin_common.a\n LIBBITCOIN_CLI=$(top_builddir)/src/libbitcoin_cli.a\n LIBLEVELDB=$(top_builddir)/src/leveldb/libleveldb.a"
      },
      {
        "sha": "4c43e3a7986da977da6d20a777e947076cdf6342",
        "filename": "src/crypter.cpp",
        "status": "modified",
        "additions": 156,
        "deletions": 1,
        "changes": 157,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/05e27c66411caa622815cc7cc7136dfd85370ab4/src/crypter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/05e27c66411caa622815cc7cc7136dfd85370ab4/src/crypter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crypter.cpp?ref=05e27c66411caa622815cc7cc7136dfd85370ab4",
        "patch": "@@ -4,9 +4,11 @@\n \n #include \"crypter.h\"\n \n+#include \"script.h\"\n+\n #include <string>\n #include <vector>\n-\n+#include <boost/foreach.hpp>\n #include <openssl/aes.h>\n #include <openssl/evp.h>\n \n@@ -117,3 +119,156 @@ bool DecryptSecret(const CKeyingMaterial& vMasterKey, const std::vector<unsigned\n         return false;\n     return cKeyCrypter.Decrypt(vchCiphertext, *((CKeyingMaterial*)&vchPlaintext));\n }\n+\n+bool CCryptoKeyStore::SetCrypted()\n+{\n+    LOCK(cs_KeyStore);\n+    if (fUseCrypto)\n+        return true;\n+    if (!mapKeys.empty())\n+        return false;\n+    fUseCrypto = true;\n+    return true;\n+}\n+\n+bool CCryptoKeyStore::Lock()\n+{\n+    if (!SetCrypted())\n+        return false;\n+\n+    {\n+        LOCK(cs_KeyStore);\n+        vMasterKey.clear();\n+    }\n+\n+    NotifyStatusChanged(this);\n+    return true;\n+}\n+\n+bool CCryptoKeyStore::Unlock(const CKeyingMaterial& vMasterKeyIn)\n+{\n+    {\n+        LOCK(cs_KeyStore);\n+        if (!SetCrypted())\n+            return false;\n+\n+        CryptedKeyMap::const_iterator mi = mapCryptedKeys.begin();\n+        for (; mi != mapCryptedKeys.end(); ++mi)\n+        {\n+            const CPubKey &vchPubKey = (*mi).second.first;\n+            const std::vector<unsigned char> &vchCryptedSecret = (*mi).second.second;\n+            CKeyingMaterial vchSecret;\n+            if(!DecryptSecret(vMasterKeyIn, vchCryptedSecret, vchPubKey.GetHash(), vchSecret))\n+                return false;\n+            if (vchSecret.size() != 32)\n+                return false;\n+            CKey key;\n+            key.Set(vchSecret.begin(), vchSecret.end(), vchPubKey.IsCompressed());\n+            if (key.GetPubKey() == vchPubKey)\n+                break;\n+            return false;\n+        }\n+        vMasterKey = vMasterKeyIn;\n+    }\n+    NotifyStatusChanged(this);\n+    return true;\n+}\n+\n+bool CCryptoKeyStore::AddKeyPubKey(const CKey& key, const CPubKey &pubkey)\n+{\n+    {\n+        LOCK(cs_KeyStore);\n+        if (!IsCrypted())\n+            return CBasicKeyStore::AddKeyPubKey(key, pubkey);\n+\n+        if (IsLocked())\n+            return false;\n+\n+        std::vector<unsigned char> vchCryptedSecret;\n+        CKeyingMaterial vchSecret(key.begin(), key.end());\n+        if (!EncryptSecret(vMasterKey, vchSecret, pubkey.GetHash(), vchCryptedSecret))\n+            return false;\n+\n+        if (!AddCryptedKey(pubkey, vchCryptedSecret))\n+            return false;\n+    }\n+    return true;\n+}\n+\n+\n+bool CCryptoKeyStore::AddCryptedKey(const CPubKey &vchPubKey, const std::vector<unsigned char> &vchCryptedSecret)\n+{\n+    {\n+        LOCK(cs_KeyStore);\n+        if (!SetCrypted())\n+            return false;\n+\n+        mapCryptedKeys[vchPubKey.GetID()] = make_pair(vchPubKey, vchCryptedSecret);\n+    }\n+    return true;\n+}\n+\n+bool CCryptoKeyStore::GetKey(const CKeyID &address, CKey& keyOut) const\n+{\n+    {\n+        LOCK(cs_KeyStore);\n+        if (!IsCrypted())\n+            return CBasicKeyStore::GetKey(address, keyOut);\n+\n+        CryptedKeyMap::const_iterator mi = mapCryptedKeys.find(address);\n+        if (mi != mapCryptedKeys.end())\n+        {\n+            const CPubKey &vchPubKey = (*mi).second.first;\n+            const std::vector<unsigned char> &vchCryptedSecret = (*mi).second.second;\n+            CKeyingMaterial vchSecret;\n+            if (!DecryptSecret(vMasterKey, vchCryptedSecret, vchPubKey.GetHash(), vchSecret))\n+                return false;\n+            if (vchSecret.size() != 32)\n+                return false;\n+            keyOut.Set(vchSecret.begin(), vchSecret.end(), vchPubKey.IsCompressed());\n+            return true;\n+        }\n+    }\n+    return false;\n+}\n+\n+bool CCryptoKeyStore::GetPubKey(const CKeyID &address, CPubKey& vchPubKeyOut) const\n+{\n+    {\n+        LOCK(cs_KeyStore);\n+        if (!IsCrypted())\n+            return CKeyStore::GetPubKey(address, vchPubKeyOut);\n+\n+        CryptedKeyMap::const_iterator mi = mapCryptedKeys.find(address);\n+        if (mi != mapCryptedKeys.end())\n+        {\n+            vchPubKeyOut = (*mi).second.first;\n+            return true;\n+        }\n+    }\n+    return false;\n+}\n+\n+bool CCryptoKeyStore::EncryptKeys(CKeyingMaterial& vMasterKeyIn)\n+{\n+    {\n+        LOCK(cs_KeyStore);\n+        if (!mapCryptedKeys.empty() || IsCrypted())\n+            return false;\n+\n+        fUseCrypto = true;\n+        BOOST_FOREACH(KeyMap::value_type& mKey, mapKeys)\n+        {\n+            const CKey &key = mKey.second;\n+            CPubKey vchPubKey = key.GetPubKey();\n+            CKeyingMaterial vchSecret(key.begin(), key.end());\n+            std::vector<unsigned char> vchCryptedSecret;\n+            if (!EncryptSecret(vMasterKeyIn, vchSecret, vchPubKey.GetHash(), vchCryptedSecret))\n+                return false;\n+            if (!AddCryptedKey(vchPubKey, vchCryptedSecret))\n+                return false;\n+        }\n+        mapKeys.clear();\n+    }\n+    return true;\n+}"
      },
      {
        "sha": "4791428b485f086cb03853e74fad04fc5ae176f4",
        "filename": "src/crypter.h",
        "status": "modified",
        "additions": 83,
        "deletions": 0,
        "changes": 83,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/05e27c66411caa622815cc7cc7136dfd85370ab4/src/crypter.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/05e27c66411caa622815cc7cc7136dfd85370ab4/src/crypter.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crypter.h?ref=05e27c66411caa622815cc7cc7136dfd85370ab4",
        "patch": "@@ -7,6 +7,7 @@\n \n #include \"allocators.h\"\n #include \"serialize.h\"\n+#include \"keystore.h\"\n \n class uint256;\n \n@@ -106,4 +107,86 @@ class CCrypter\n bool EncryptSecret(const CKeyingMaterial& vMasterKey, const CKeyingMaterial &vchPlaintext, const uint256& nIV, std::vector<unsigned char> &vchCiphertext);\n bool DecryptSecret(const CKeyingMaterial& vMasterKey, const std::vector<unsigned char>& vchCiphertext, const uint256& nIV, CKeyingMaterial& vchPlaintext);\n \n+/** Keystore which keeps the private keys encrypted.\n+ * It derives from the basic key store, which is used if no encryption is active.\n+ */\n+class CCryptoKeyStore : public CBasicKeyStore\n+{\n+private:\n+    CryptedKeyMap mapCryptedKeys;\n+\n+    CKeyingMaterial vMasterKey;\n+\n+    // if fUseCrypto is true, mapKeys must be empty\n+    // if fUseCrypto is false, vMasterKey must be empty\n+    bool fUseCrypto;\n+\n+protected:\n+    bool SetCrypted();\n+\n+    // will encrypt previously unencrypted keys\n+    bool EncryptKeys(CKeyingMaterial& vMasterKeyIn);\n+\n+    bool Unlock(const CKeyingMaterial& vMasterKeyIn);\n+\n+public:\n+    CCryptoKeyStore() : fUseCrypto(false)\n+    {\n+    }\n+\n+    bool IsCrypted() const\n+    {\n+        return fUseCrypto;\n+    }\n+\n+    bool IsLocked() const\n+    {\n+        if (!IsCrypted())\n+            return false;\n+        bool result;\n+        {\n+            LOCK(cs_KeyStore);\n+            result = vMasterKey.empty();\n+        }\n+        return result;\n+    }\n+\n+    bool Lock();\n+\n+    virtual bool AddCryptedKey(const CPubKey &vchPubKey, const std::vector<unsigned char> &vchCryptedSecret);\n+    bool AddKeyPubKey(const CKey& key, const CPubKey &pubkey);\n+    bool HaveKey(const CKeyID &address) const\n+    {\n+        {\n+            LOCK(cs_KeyStore);\n+            if (!IsCrypted())\n+                return CBasicKeyStore::HaveKey(address);\n+            return mapCryptedKeys.count(address) > 0;\n+        }\n+        return false;\n+    }\n+    bool GetKey(const CKeyID &address, CKey& keyOut) const;\n+    bool GetPubKey(const CKeyID &address, CPubKey& vchPubKeyOut) const;\n+    void GetKeys(std::set<CKeyID> &setAddress) const\n+    {\n+        if (!IsCrypted())\n+        {\n+            CBasicKeyStore::GetKeys(setAddress);\n+            return;\n+        }\n+        setAddress.clear();\n+        CryptedKeyMap::const_iterator mi = mapCryptedKeys.begin();\n+        while (mi != mapCryptedKeys.end())\n+        {\n+            setAddress.insert((*mi).first);\n+            mi++;\n+        }\n+    }\n+\n+    /* Wallet status (encrypted, locked) changed.\n+     * Note: Called without locks held.\n+     */\n+    boost::signals2::signal<void (CCryptoKeyStore* wallet)> NotifyStatusChanged;\n+};\n+\n #endif"
      },
      {
        "sha": "1f2ee1c554041d164060ec89be7d07a88092acb2",
        "filename": "src/db.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 110,
        "changes": 110,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/05e27c66411caa622815cc7cc7136dfd85370ab4/src/db.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/05e27c66411caa622815cc7cc7136dfd85370ab4/src/db.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/db.cpp?ref=05e27c66411caa622815cc7cc7136dfd85370ab4",
        "patch": "@@ -479,113 +479,3 @@ void CDBEnv::Flush(bool fShutdown)\n     }\n }\n \n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-//\n-// CAddrDB\n-//\n-\n-CAddrDB::CAddrDB()\n-{\n-    pathAddr = GetDataDir() / \"peers.dat\";\n-}\n-\n-bool CAddrDB::Write(const CAddrMan& addr)\n-{\n-    // Generate random temporary filename\n-    unsigned short randv = 0;\n-    RAND_bytes((unsigned char *)&randv, sizeof(randv));\n-    std::string tmpfn = strprintf(\"peers.dat.%04x\", randv);\n-\n-    // serialize addresses, checksum data up to that point, then append csum\n-    CDataStream ssPeers(SER_DISK, CLIENT_VERSION);\n-    ssPeers << FLATDATA(Params().MessageStart());\n-    ssPeers << addr;\n-    uint256 hash = Hash(ssPeers.begin(), ssPeers.end());\n-    ssPeers << hash;\n-\n-    // open temp output file, and associate with CAutoFile\n-    boost::filesystem::path pathTmp = GetDataDir() / tmpfn;\n-    FILE *file = fopen(pathTmp.string().c_str(), \"wb\");\n-    CAutoFile fileout = CAutoFile(file, SER_DISK, CLIENT_VERSION);\n-    if (!fileout)\n-        return error(\"CAddrman::Write() : open failed\");\n-\n-    // Write and commit header, data\n-    try {\n-        fileout << ssPeers;\n-    }\n-    catch (std::exception &e) {\n-        return error(\"CAddrman::Write() : I/O error\");\n-    }\n-    FileCommit(fileout);\n-    fileout.fclose();\n-\n-    // replace existing peers.dat, if any, with new peers.dat.XXXX\n-    if (!RenameOver(pathTmp, pathAddr))\n-        return error(\"CAddrman::Write() : Rename-into-place failed\");\n-\n-    return true;\n-}\n-\n-bool CAddrDB::Read(CAddrMan& addr)\n-{\n-    // open input file, and associate with CAutoFile\n-    FILE *file = fopen(pathAddr.string().c_str(), \"rb\");\n-    CAutoFile filein = CAutoFile(file, SER_DISK, CLIENT_VERSION);\n-    if (!filein)\n-        return error(\"CAddrman::Read() : open failed\");\n-\n-    // use file size to size memory buffer\n-    int fileSize = GetFilesize(filein);\n-    int dataSize = fileSize - sizeof(uint256);\n-    //Don't try to resize to a negative number if file is small\n-    if ( dataSize < 0 ) dataSize = 0;\n-    vector<unsigned char> vchData;\n-    vchData.resize(dataSize);\n-    uint256 hashIn;\n-\n-    // read data and checksum from file\n-    try {\n-        filein.read((char *)&vchData[0], dataSize);\n-        filein >> hashIn;\n-    }\n-    catch (std::exception &e) {\n-        return error(\"CAddrman::Read() 2 : I/O error or stream data corrupted\");\n-    }\n-    filein.fclose();\n-\n-    CDataStream ssPeers(vchData, SER_DISK, CLIENT_VERSION);\n-\n-    // verify stored checksum matches input data\n-    uint256 hashTmp = Hash(ssPeers.begin(), ssPeers.end());\n-    if (hashIn != hashTmp)\n-        return error(\"CAddrman::Read() : checksum mismatch; data corrupted\");\n-\n-    unsigned char pchMsgTmp[4];\n-    try {\n-        // de-serialize file header (network specific magic number) and ..\n-        ssPeers >> FLATDATA(pchMsgTmp);\n-\n-        // ... verify the network matches ours\n-        if (memcmp(pchMsgTmp, Params().MessageStart(), sizeof(pchMsgTmp)))\n-            return error(\"CAddrman::Read() : invalid network magic number\");\n-\n-        // de-serialize address data into one CAddrMan object\n-        ssPeers >> addr;\n-    }\n-    catch (std::exception &e) {\n-        return error(\"CAddrman::Read() : I/O error or stream data corrupted\");\n-    }\n-\n-    return true;\n-}\n-"
      },
      {
        "sha": "66d7f319174d1cd0334eaa82c996c2e319e166d1",
        "filename": "src/db.h",
        "status": "modified",
        "additions": 0,
        "deletions": 18,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/05e27c66411caa622815cc7cc7136dfd85370ab4/src/db.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/05e27c66411caa622815cc7cc7136dfd85370ab4/src/db.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/db.h?ref=05e27c66411caa622815cc7cc7136dfd85370ab4",
        "patch": "@@ -305,22 +305,4 @@ class CDB\n     bool static Rewrite(const std::string& strFile, const char* pszSkip = NULL);\n };\n \n-\n-\n-\n-\n-\n-\n-\n-/** Access to the (IP) address database (peers.dat) */\n-class CAddrDB\n-{\n-private:\n-    boost::filesystem::path pathAddr;\n-public:\n-    CAddrDB();\n-    bool Write(const CAddrMan& addr);\n-    bool Read(CAddrMan& addr);\n-};\n-\n #endif // BITCOIN_DB_H"
      },
      {
        "sha": "fc15df05942a4201e77565d4ee72df58daa094d6",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 33,
        "deletions": 8,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/05e27c66411caa622815cc7cc7136dfd85370ab4/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/05e27c66411caa622815cc7cc7136dfd85370ab4/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=05e27c66411caa622815cc7cc7136dfd85370ab4",
        "patch": "@@ -10,15 +10,18 @@\n #include \"init.h\"\n \n #include \"addrman.h\"\n+#include \"db.h\"\n #include \"rpcserver.h\"\n #include \"checkpoints.h\"\n #include \"miner.h\"\n #include \"net.h\"\n #include \"txdb.h\"\n #include \"ui_interface.h\"\n #include \"util.h\"\n+#ifdef ENABLE_WALLET\n #include \"wallet.h\"\n #include \"walletdb.h\"\n+#endif\n \n #include <inttypes.h>\n #include <stdint.h>\n@@ -35,8 +38,10 @@\n using namespace std;\n using namespace boost;\n \n+#ifdef ENABLE_WALLET\n std::string strWalletFile;\n CWallet* pwalletMain;\n+#endif\n \n #ifdef WIN32\n // Win32 LevelDB doesn't use filedescriptors, and the ones used for\n@@ -108,15 +113,19 @@ void Shutdown()\n     RenameThread(\"bitcoin-shutoff\");\n     mempool.AddTransactionsUpdated(1);\n     StopRPCThreads();\n+#ifdef ENABLE_WALLET\n     ShutdownRPCMining();\n     if (pwalletMain)\n         bitdb.Flush(false);\n     GenerateBitcoins(false, NULL, 0);\n+#endif\n     StopNode();\n     {\n         LOCK(cs_main);\n+#ifdef ENABLE_WALLET\n         if (pwalletMain)\n             pwalletMain->SetBestChain(chainActive.GetLocator());\n+#endif\n         if (pblocktree)\n             pblocktree->Flush();\n         if (pcoinsTip)\n@@ -125,12 +134,16 @@ void Shutdown()\n         delete pcoinsdbview; pcoinsdbview = NULL;\n         delete pblocktree; pblocktree = NULL;\n     }\n+#ifdef ENABLE_WALLET\n     if (pwalletMain)\n         bitdb.Flush(true);\n+#endif\n     boost::filesystem::remove(GetPidFile());\n     UnregisterAllWallets();\n+#ifdef ENABLE_WALLET\n     if (pwalletMain)\n         delete pwalletMain;\n+#endif\n     LogPrintf(\"Shutdown : done\\n\");\n }\n \n@@ -479,7 +492,9 @@ bool AppInit2(boost::thread_group& threadGroup, bool fForceServer)\n     fPrintToConsole = GetBoolArg(\"-printtoconsole\", false);\n     fPrintToDebugger = GetBoolArg(\"-printtodebugger\", false);\n     fLogTimestamps = GetBoolArg(\"-logtimestamps\", true);\n+#ifdef ENABLE_WALLET\n     bool fDisableWallet = GetBoolArg(\"-disablewallet\", false);\n+#endif\n \n     if (mapArgs.count(\"-timeout\"))\n     {\n@@ -525,16 +540,17 @@ bool AppInit2(boost::thread_group& threadGroup, bool fForceServer)\n             InitWarning(_(\"Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.\"));\n     }\n \n+#ifdef ENABLE_WALLET\n     strWalletFile = GetArg(\"-wallet\", \"wallet.dat\");\n-\n+#endif\n     // ********************************************************* Step 4: application initialization: dir lock, daemonize, pidfile, debug log\n \n     std::string strDataDir = GetDataDir().string();\n-\n+#ifdef ENABLE_WALLET\n     // Wallet file must be a plain filename without a directory\n     if (strWalletFile != boost::filesystem::basename(strWalletFile) + boost::filesystem::extension(strWalletFile))\n         return InitError(strprintf(_(\"Wallet %s resides outside data directory %s\"), strWalletFile.c_str(), strDataDir.c_str()));\n-\n+#endif\n     // Make sure only a single Bitcoin process is using the data directory.\n     boost::filesystem::path pathLockFile = GetDataDir() / \".lock\";\n     FILE* file = fopen(pathLockFile.string().c_str(), \"a\"); // empty lock file; created if it doesn't exist.\n@@ -567,7 +583,7 @@ bool AppInit2(boost::thread_group& threadGroup, bool fForceServer)\n     int64_t nStart;\n \n     // ********************************************************* Step 5: verify wallet database integrity\n-\n+#ifdef ENABLE_WALLET\n     if (!fDisableWallet) {\n         uiInterface.InitMessage(_(\"Verifying wallet...\"));\n \n@@ -613,7 +629,7 @@ bool AppInit2(boost::thread_group& threadGroup, bool fForceServer)\n                 return InitError(_(\"wallet.dat corrupt, salvage failed\"));\n         }\n     } // (!fDisableWallet)\n-\n+#endif // ENABLE_WALLET\n     // ********************************************************* Step 6: network initialization\n \n     RegisterNodeSignals(GetNodeSignals());\n@@ -880,7 +896,7 @@ bool AppInit2(boost::thread_group& threadGroup, bool fForceServer)\n     }\n \n     // ********************************************************* Step 8: load wallet\n-\n+#ifdef ENABLE_WALLET\n     if (fDisableWallet) {\n         pwalletMain = NULL;\n         LogPrintf(\"Wallet disabled!\\n\");\n@@ -972,7 +988,9 @@ bool AppInit2(boost::thread_group& threadGroup, bool fForceServer)\n             nWalletDBUpdated++;\n         }\n     } // (!fDisableWallet)\n-\n+#else // ENABLE_WALLET\n+    LogPrintf(\"No wallet compiled in!\\n\");\n+#endif // !ENABLE_WALLET\n     // ********************************************************* Step 9: import blocks\n \n     // scan for better chains in the block chain database, that are not yet connected in the active best chain\n@@ -1016,32 +1034,39 @@ bool AppInit2(boost::thread_group& threadGroup, bool fForceServer)\n     //// debug print\n     LogPrintf(\"mapBlockIndex.size() = %\"PRIszu\"\\n\",   mapBlockIndex.size());\n     LogPrintf(\"nBestHeight = %d\\n\",                   chainActive.Height());\n+#ifdef ENABLE_WALLET\n     LogPrintf(\"setKeyPool.size() = %\"PRIszu\"\\n\",      pwalletMain ? pwalletMain->setKeyPool.size() : 0);\n     LogPrintf(\"mapWallet.size() = %\"PRIszu\"\\n\",       pwalletMain ? pwalletMain->mapWallet.size() : 0);\n     LogPrintf(\"mapAddressBook.size() = %\"PRIszu\"\\n\",  pwalletMain ? pwalletMain->mapAddressBook.size() : 0);\n+#endif\n \n     StartNode(threadGroup);\n-\n+#ifdef ENABLE_WALLET\n     // InitRPCMining is needed here so getwork/getblocktemplate in the GUI debug console works properly.\n     InitRPCMining();\n+#endif\n     if (fServer)\n         StartRPCThreads();\n \n+#ifdef ENABLE_WALLET\n     // Generate coins in the background\n     if (pwalletMain)\n         GenerateBitcoins(GetBoolArg(\"-gen\", false), pwalletMain, GetArg(\"-genproclimit\", -1));\n+#endif\n \n     // ********************************************************* Step 12: finished\n \n     uiInterface.InitMessage(_(\"Done loading\"));\n \n+#ifdef ENABLE_WALLET\n     if (pwalletMain) {\n         // Add wallet transactions that aren't already in a block to mapTransactions\n         pwalletMain->ReacceptWalletTransactions();\n \n         // Run a thread to flush wallet periodically\n         threadGroup.create_thread(boost::bind(&ThreadFlushWalletDB, boost::ref(pwalletMain->strWalletFile)));\n     }\n+#endif\n \n     return !fRequestShutdown;\n }"
      },
      {
        "sha": "46402ea25b74333e841d9b47ecfc95d4c9abdf5e",
        "filename": "src/keystore.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 152,
        "changes": 152,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/05e27c66411caa622815cc7cc7136dfd85370ab4/src/keystore.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/05e27c66411caa622815cc7cc7136dfd85370ab4/src/keystore.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/keystore.cpp?ref=05e27c66411caa622815cc7cc7136dfd85370ab4",
        "patch": "@@ -56,155 +56,3 @@ bool CBasicKeyStore::GetCScript(const CScriptID &hash, CScript& redeemScriptOut)\n     return false;\n }\n \n-bool CCryptoKeyStore::SetCrypted()\n-{\n-    LOCK(cs_KeyStore);\n-    if (fUseCrypto)\n-        return true;\n-    if (!mapKeys.empty())\n-        return false;\n-    fUseCrypto = true;\n-    return true;\n-}\n-\n-bool CCryptoKeyStore::Lock()\n-{\n-    if (!SetCrypted())\n-        return false;\n-\n-    {\n-        LOCK(cs_KeyStore);\n-        vMasterKey.clear();\n-    }\n-\n-    NotifyStatusChanged(this);\n-    return true;\n-}\n-\n-bool CCryptoKeyStore::Unlock(const CKeyingMaterial& vMasterKeyIn)\n-{\n-    {\n-        LOCK(cs_KeyStore);\n-        if (!SetCrypted())\n-            return false;\n-\n-        CryptedKeyMap::const_iterator mi = mapCryptedKeys.begin();\n-        for (; mi != mapCryptedKeys.end(); ++mi)\n-        {\n-            const CPubKey &vchPubKey = (*mi).second.first;\n-            const std::vector<unsigned char> &vchCryptedSecret = (*mi).second.second;\n-            CKeyingMaterial vchSecret;\n-            if(!DecryptSecret(vMasterKeyIn, vchCryptedSecret, vchPubKey.GetHash(), vchSecret))\n-                return false;\n-            if (vchSecret.size() != 32)\n-                return false;\n-            CKey key;\n-            key.Set(vchSecret.begin(), vchSecret.end(), vchPubKey.IsCompressed());\n-            if (key.GetPubKey() == vchPubKey)\n-                break;\n-            return false;\n-        }\n-        vMasterKey = vMasterKeyIn;\n-    }\n-    NotifyStatusChanged(this);\n-    return true;\n-}\n-\n-bool CCryptoKeyStore::AddKeyPubKey(const CKey& key, const CPubKey &pubkey)\n-{\n-    {\n-        LOCK(cs_KeyStore);\n-        if (!IsCrypted())\n-            return CBasicKeyStore::AddKeyPubKey(key, pubkey);\n-\n-        if (IsLocked())\n-            return false;\n-\n-        std::vector<unsigned char> vchCryptedSecret;\n-        CKeyingMaterial vchSecret(key.begin(), key.end());\n-        if (!EncryptSecret(vMasterKey, vchSecret, pubkey.GetHash(), vchCryptedSecret))\n-            return false;\n-\n-        if (!AddCryptedKey(pubkey, vchCryptedSecret))\n-            return false;\n-    }\n-    return true;\n-}\n-\n-\n-bool CCryptoKeyStore::AddCryptedKey(const CPubKey &vchPubKey, const std::vector<unsigned char> &vchCryptedSecret)\n-{\n-    {\n-        LOCK(cs_KeyStore);\n-        if (!SetCrypted())\n-            return false;\n-\n-        mapCryptedKeys[vchPubKey.GetID()] = make_pair(vchPubKey, vchCryptedSecret);\n-    }\n-    return true;\n-}\n-\n-bool CCryptoKeyStore::GetKey(const CKeyID &address, CKey& keyOut) const\n-{\n-    {\n-        LOCK(cs_KeyStore);\n-        if (!IsCrypted())\n-            return CBasicKeyStore::GetKey(address, keyOut);\n-\n-        CryptedKeyMap::const_iterator mi = mapCryptedKeys.find(address);\n-        if (mi != mapCryptedKeys.end())\n-        {\n-            const CPubKey &vchPubKey = (*mi).second.first;\n-            const std::vector<unsigned char> &vchCryptedSecret = (*mi).second.second;\n-            CKeyingMaterial vchSecret;\n-            if (!DecryptSecret(vMasterKey, vchCryptedSecret, vchPubKey.GetHash(), vchSecret))\n-                return false;\n-            if (vchSecret.size() != 32)\n-                return false;\n-            keyOut.Set(vchSecret.begin(), vchSecret.end(), vchPubKey.IsCompressed());\n-            return true;\n-        }\n-    }\n-    return false;\n-}\n-\n-bool CCryptoKeyStore::GetPubKey(const CKeyID &address, CPubKey& vchPubKeyOut) const\n-{\n-    {\n-        LOCK(cs_KeyStore);\n-        if (!IsCrypted())\n-            return CKeyStore::GetPubKey(address, vchPubKeyOut);\n-\n-        CryptedKeyMap::const_iterator mi = mapCryptedKeys.find(address);\n-        if (mi != mapCryptedKeys.end())\n-        {\n-            vchPubKeyOut = (*mi).second.first;\n-            return true;\n-        }\n-    }\n-    return false;\n-}\n-\n-bool CCryptoKeyStore::EncryptKeys(CKeyingMaterial& vMasterKeyIn)\n-{\n-    {\n-        LOCK(cs_KeyStore);\n-        if (!mapCryptedKeys.empty() || IsCrypted())\n-            return false;\n-\n-        fUseCrypto = true;\n-        BOOST_FOREACH(KeyMap::value_type& mKey, mapKeys)\n-        {\n-            const CKey &key = mKey.second;\n-            CPubKey vchPubKey = key.GetPubKey();\n-            CKeyingMaterial vchSecret(key.begin(), key.end());\n-            std::vector<unsigned char> vchCryptedSecret;\n-            if (!EncryptSecret(vMasterKeyIn, vchSecret, vchPubKey.GetHash(), vchCryptedSecret))\n-                return false;\n-            if (!AddCryptedKey(vchPubKey, vchCryptedSecret))\n-                return false;\n-        }\n-        mapKeys.clear();\n-    }\n-    return true;\n-}"
      },
      {
        "sha": "0d55e6c81ef0da788a59142664883024946ed188",
        "filename": "src/keystore.h",
        "status": "modified",
        "additions": 0,
        "deletions": 83,
        "changes": 83,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/05e27c66411caa622815cc7cc7136dfd85370ab4/src/keystore.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/05e27c66411caa622815cc7cc7136dfd85370ab4/src/keystore.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/keystore.h?ref=05e27c66411caa622815cc7cc7136dfd85370ab4",
        "patch": "@@ -93,87 +93,4 @@ class CBasicKeyStore : public CKeyStore\n typedef std::vector<unsigned char, secure_allocator<unsigned char> > CKeyingMaterial;\n typedef std::map<CKeyID, std::pair<CPubKey, std::vector<unsigned char> > > CryptedKeyMap;\n \n-\n-/** Keystore which keeps the private keys encrypted.\n- * It derives from the basic key store, which is used if no encryption is active.\n- */\n-class CCryptoKeyStore : public CBasicKeyStore\n-{\n-private:\n-    CryptedKeyMap mapCryptedKeys;\n-\n-    CKeyingMaterial vMasterKey;\n-\n-    // if fUseCrypto is true, mapKeys must be empty\n-    // if fUseCrypto is false, vMasterKey must be empty\n-    bool fUseCrypto;\n-\n-protected:\n-    bool SetCrypted();\n-\n-    // will encrypt previously unencrypted keys\n-    bool EncryptKeys(CKeyingMaterial& vMasterKeyIn);\n-\n-    bool Unlock(const CKeyingMaterial& vMasterKeyIn);\n-\n-public:\n-    CCryptoKeyStore() : fUseCrypto(false)\n-    {\n-    }\n-\n-    bool IsCrypted() const\n-    {\n-        return fUseCrypto;\n-    }\n-\n-    bool IsLocked() const\n-    {\n-        if (!IsCrypted())\n-            return false;\n-        bool result;\n-        {\n-            LOCK(cs_KeyStore);\n-            result = vMasterKey.empty();\n-        }\n-        return result;\n-    }\n-\n-    bool Lock();\n-\n-    virtual bool AddCryptedKey(const CPubKey &vchPubKey, const std::vector<unsigned char> &vchCryptedSecret);\n-    bool AddKeyPubKey(const CKey& key, const CPubKey &pubkey);\n-    bool HaveKey(const CKeyID &address) const\n-    {\n-        {\n-            LOCK(cs_KeyStore);\n-            if (!IsCrypted())\n-                return CBasicKeyStore::HaveKey(address);\n-            return mapCryptedKeys.count(address) > 0;\n-        }\n-        return false;\n-    }\n-    bool GetKey(const CKeyID &address, CKey& keyOut) const;\n-    bool GetPubKey(const CKeyID &address, CPubKey& vchPubKeyOut) const;\n-    void GetKeys(std::set<CKeyID> &setAddress) const\n-    {\n-        if (!IsCrypted())\n-        {\n-            CBasicKeyStore::GetKeys(setAddress);\n-            return;\n-        }\n-        setAddress.clear();\n-        CryptedKeyMap::const_iterator mi = mapCryptedKeys.begin();\n-        while (mi != mapCryptedKeys.end())\n-        {\n-            setAddress.insert((*mi).first);\n-            mi++;\n-        }\n-    }\n-\n-    /* Wallet status (encrypted, locked) changed.\n-     * Note: Called without locks held.\n-     */\n-    boost::signals2::signal<void (CCryptoKeyStore* wallet)> NotifyStatusChanged;\n-};\n-\n #endif"
      },
      {
        "sha": "afffbdf1da64423ef4cba52b1e06805c0593e8f6",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 100,
        "deletions": 0,
        "changes": 100,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/05e27c66411caa622815cc7cc7136dfd85370ab4/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/05e27c66411caa622815cc7cc7136dfd85370ab4/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=05e27c66411caa622815cc7cc7136dfd85370ab4",
        "patch": "@@ -1942,3 +1942,103 @@ void CNode::Fuzz(int nChance)\n     // (more changes exponentially less likely):\n     Fuzz(2);\n }\n+\n+//\n+// CAddrDB\n+//\n+\n+CAddrDB::CAddrDB()\n+{\n+    pathAddr = GetDataDir() / \"peers.dat\";\n+}\n+\n+bool CAddrDB::Write(const CAddrMan& addr)\n+{\n+    // Generate random temporary filename\n+    unsigned short randv = 0;\n+    RAND_bytes((unsigned char *)&randv, sizeof(randv));\n+    std::string tmpfn = strprintf(\"peers.dat.%04x\", randv);\n+\n+    // serialize addresses, checksum data up to that point, then append csum\n+    CDataStream ssPeers(SER_DISK, CLIENT_VERSION);\n+    ssPeers << FLATDATA(Params().MessageStart());\n+    ssPeers << addr;\n+    uint256 hash = Hash(ssPeers.begin(), ssPeers.end());\n+    ssPeers << hash;\n+\n+    // open temp output file, and associate with CAutoFile\n+    boost::filesystem::path pathTmp = GetDataDir() / tmpfn;\n+    FILE *file = fopen(pathTmp.string().c_str(), \"wb\");\n+    CAutoFile fileout = CAutoFile(file, SER_DISK, CLIENT_VERSION);\n+    if (!fileout)\n+        return error(\"CAddrman::Write() : open failed\");\n+\n+    // Write and commit header, data\n+    try {\n+        fileout << ssPeers;\n+    }\n+    catch (std::exception &e) {\n+        return error(\"CAddrman::Write() : I/O error\");\n+    }\n+    FileCommit(fileout);\n+    fileout.fclose();\n+\n+    // replace existing peers.dat, if any, with new peers.dat.XXXX\n+    if (!RenameOver(pathTmp, pathAddr))\n+        return error(\"CAddrman::Write() : Rename-into-place failed\");\n+\n+    return true;\n+}\n+\n+bool CAddrDB::Read(CAddrMan& addr)\n+{\n+    // open input file, and associate with CAutoFile\n+    FILE *file = fopen(pathAddr.string().c_str(), \"rb\");\n+    CAutoFile filein = CAutoFile(file, SER_DISK, CLIENT_VERSION);\n+    if (!filein)\n+        return error(\"CAddrman::Read() : open failed\");\n+\n+    // use file size to size memory buffer\n+    int fileSize = GetFilesize(filein);\n+    int dataSize = fileSize - sizeof(uint256);\n+    //Don't try to resize to a negative number if file is small\n+    if ( dataSize < 0 ) dataSize = 0;\n+    vector<unsigned char> vchData;\n+    vchData.resize(dataSize);\n+    uint256 hashIn;\n+\n+    // read data and checksum from file\n+    try {\n+        filein.read((char *)&vchData[0], dataSize);\n+        filein >> hashIn;\n+    }\n+    catch (std::exception &e) {\n+        return error(\"CAddrman::Read() 2 : I/O error or stream data corrupted\");\n+    }\n+    filein.fclose();\n+\n+    CDataStream ssPeers(vchData, SER_DISK, CLIENT_VERSION);\n+\n+    // verify stored checksum matches input data\n+    uint256 hashTmp = Hash(ssPeers.begin(), ssPeers.end());\n+    if (hashIn != hashTmp)\n+        return error(\"CAddrman::Read() : checksum mismatch; data corrupted\");\n+\n+    unsigned char pchMsgTmp[4];\n+    try {\n+        // de-serialize file header (network specific magic number) and ..\n+        ssPeers >> FLATDATA(pchMsgTmp);\n+\n+        // ... verify the network matches ours\n+        if (memcmp(pchMsgTmp, Params().MessageStart(), sizeof(pchMsgTmp)))\n+            return error(\"CAddrman::Read() : invalid network magic number\");\n+\n+        // de-serialize address data into one CAddrMan object\n+        ssPeers >> addr;\n+    }\n+    catch (std::exception &e) {\n+        return error(\"CAddrman::Read() : I/O error or stream data corrupted\");\n+    }\n+\n+    return true;\n+}"
      },
      {
        "sha": "28359ea12b236cd08851b5fa8fdf93c63bf452b3",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/05e27c66411caa622815cc7cc7136dfd85370ab4/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/05e27c66411caa622815cc7cc7136dfd85370ab4/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=05e27c66411caa622815cc7cc7136dfd85370ab4",
        "patch": "@@ -690,4 +690,15 @@ class CTransaction;\n void RelayTransaction(const CTransaction& tx, const uint256& hash);\n void RelayTransaction(const CTransaction& tx, const uint256& hash, const CDataStream& ss);\n \n+/** Access to the (IP) address database (peers.dat) */\n+class CAddrDB\n+{\n+private:\n+    boost::filesystem::path pathAddr;\n+public:\n+    CAddrDB();\n+    bool Write(const CAddrMan& addr);\n+    bool Read(CAddrMan& addr);\n+};\n+\n #endif"
      },
      {
        "sha": "08846604ea3321e482950dda69ccb356a0751a82",
        "filename": "src/qt/Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/05e27c66411caa622815cc7cc7136dfd85370ab4/src/qt/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/05e27c66411caa622815cc7cc7136dfd85370ab4/src/qt/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/Makefile.am?ref=05e27c66411caa622815cc7cc7136dfd85370ab4",
        "patch": "@@ -197,7 +197,7 @@ endif\n bitcoin_qt_CPPFLAGS = $(AM_CPPFLAGS) $(QT_INCLUDES) \\\n   -I$(top_srcdir)/src/qt/forms\n bitcoin_qt_SOURCES = bitcoin.cpp\n-bitcoin_qt_LDADD = libbitcoinqt.a $(LIBBITCOIN_SERVER) $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBLEVELDB) $(LIBMEMENV) \\\n+bitcoin_qt_LDADD = libbitcoinqt.a $(LIBBITCOIN_SERVER) $(LIBBITCOIN_WALLET) $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBLEVELDB) $(LIBMEMENV) \\\n   $(BOOST_LIBS) $(QT_LIBS) $(QT_DBUS_LIBS) $(QR_LIBS) $(PROTOBUF_LIBS) $(BDB_LIBS)\n \n # forms/foo.h -> forms/ui_foo.h"
      },
      {
        "sha": "cb6874700e94a0c672e122185bd10326f5a7a31b",
        "filename": "src/qt/test/Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/05e27c66411caa622815cc7cc7136dfd85370ab4/src/qt/test/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/05e27c66411caa622815cc7cc7136dfd85370ab4/src/qt/test/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/Makefile.am?ref=05e27c66411caa622815cc7cc7136dfd85370ab4",
        "patch": "@@ -17,7 +17,7 @@ BUILT_SOURCES = $(TEST_QT_MOC_CPP)\n test_bitcoin_qt_CPPFLAGS = $(AM_CPPFLAGS) $(QT_INCLUDES) $(QT_TEST_INCLUDES)\n test_bitcoin_qt_SOURCES = test_main.cpp uritests.cpp paymentservertests.cpp $(TEST_QT_H)\n nodist_test_bitcoin_qt_SOURCES = $(TEST_QT_MOC_CPP)\n-test_bitcoin_qt_LDADD = $(LIBBITCOINQT) $(LIBBITCOIN_SERVER) $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBLEVELDB) \\\n+test_bitcoin_qt_LDADD = $(LIBBITCOINQT) $(LIBBITCOIN_SERVER) $(LIBBITCOIN_WALLET) $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBLEVELDB) \\\n   $(LIBMEMENV) $(BOOST_LIBS) $(QT_LIBS) $(QT_DBUS_LIBS) $(QT_TEST_LIBS) \\\n   $(QR_LIBS) $(PROTOBUF_LIBS) $(BDB_LIBS)\n "
      },
      {
        "sha": "baa3268fb0de47740b0c5b90c248b3f96359b701",
        "filename": "src/rpcnet.cpp",
        "status": "modified",
        "additions": 67,
        "deletions": 1,
        "changes": 68,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/05e27c66411caa622815cc7cc7136dfd85370ab4/src/rpcnet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/05e27c66411caa622815cc7cc7136dfd85370ab4/src/rpcnet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcnet.cpp?ref=05e27c66411caa622815cc7cc7136dfd85370ab4",
        "patch": "@@ -1,13 +1,17 @@\n // Copyright (c) 2009-2013 The Bitcoin developers\n // Distributed under the MIT/X11 software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n #include \"rpcserver.h\"\n #include \"net.h\"\n #include \"netbase.h\"\n #include \"protocol.h\"\n #include \"sync.h\"\n #include \"util.h\"\n+#ifdef ENABLE_WALLET\n+#include \"wallet.h\" // for getinfo\n+#include \"init.h\" // for getinfo\n+#endif\n+#include \"main.h\" // for getinfo\n \n #include <inttypes.h>\n \n@@ -329,3 +333,65 @@ Value getnettotals(const Array& params, bool fHelp)\n     obj.push_back(Pair(\"timemillis\", static_cast<boost::int64_t>(GetTimeMillis())));\n     return obj;\n }\n+\n+Value getinfo(const Array& params, bool fHelp)\n+{\n+    if (fHelp || params.size() != 0)\n+        throw runtime_error(\n+            \"getinfo\\n\"\n+            \"Returns an object containing various state info.\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"version\\\": xxxxx,           (numeric) the server version\\n\"\n+            \"  \\\"protocolversion\\\": xxxxx,   (numeric) the protocol version\\n\"\n+            \"  \\\"walletversion\\\": xxxxx,     (numeric) the wallet version\\n\"\n+            \"  \\\"balance\\\": xxxxxxx,         (numeric) the total bitcoin balance of the wallet\\n\"\n+            \"  \\\"blocks\\\": xxxxxx,           (numeric) the current number of blocks processed in the server\\n\"\n+            \"  \\\"timeoffset\\\": xxxxx,        (numeric) the time offset\\n\"\n+            \"  \\\"connections\\\": xxxxx,       (numeric) the number of connections\\n\"\n+            \"  \\\"proxy\\\": \\\"host:port\\\",     (string, optional) the proxy used by the server\\n\"\n+            \"  \\\"difficulty\\\": xxxxxx,       (numeric) the current difficulty\\n\"\n+            \"  \\\"testnet\\\": true|false,      (boolean) if the server is using testnet or not\\n\"\n+            \"  \\\"keypoololdest\\\": xxxxxx,    (numeric) the timestamp (seconds since GMT epoch) of the oldest pre-generated key in the key pool\\n\"\n+            \"  \\\"keypoolsize\\\": xxxx,        (numeric) how many new keys are pre-generated\\n\"\n+            \"  \\\"paytxfee\\\": x.xxxx,         (numeric) the transaction fee set in btc\\n\"\n+            \"  \\\"unlocked_until\\\": ttt,      (numeric) the timestamp in seconds since epoch (midnight Jan 1 1970 GMT) that the wallet is unlocked for transfers, or 0 if the wallet is locked\\n\"\n+            \"  \\\"errors\\\": \\\"...\\\"           (string) any error messages\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getinfo\", \"\")\n+            + HelpExampleRpc(\"getinfo\", \"\")\n+        );\n+\n+    proxyType proxy;\n+    GetProxy(NET_IPV4, proxy);\n+\n+    Object obj;\n+    obj.push_back(Pair(\"version\",       (int)CLIENT_VERSION));\n+    obj.push_back(Pair(\"protocolversion\",(int)PROTOCOL_VERSION));\n+#ifdef ENABLE_WALLET\n+    if (pwalletMain) {\n+        obj.push_back(Pair(\"walletversion\", pwalletMain->GetVersion()));\n+        obj.push_back(Pair(\"balance\",       ValueFromAmount(pwalletMain->GetBalance())));\n+    }\n+#endif\n+    obj.push_back(Pair(\"blocks\",        (int)chainActive.Height()));\n+    obj.push_back(Pair(\"timeoffset\",    (boost::int64_t)GetTimeOffset()));\n+    obj.push_back(Pair(\"connections\",   (int)vNodes.size()));\n+    obj.push_back(Pair(\"proxy\",         (proxy.first.IsValid() ? proxy.first.ToStringIPPort() : string())));\n+    obj.push_back(Pair(\"difficulty\",    (double)GetDifficulty()));\n+    obj.push_back(Pair(\"testnet\",       TestNet()));\n+#ifdef ENABLE_WALLET\n+    if (pwalletMain) {\n+        obj.push_back(Pair(\"keypoololdest\", (boost::int64_t)pwalletMain->GetOldestKeyPoolTime()));\n+        obj.push_back(Pair(\"keypoolsize\",   (int)pwalletMain->GetKeyPoolSize()));\n+    }\n+#endif\n+    obj.push_back(Pair(\"paytxfee\",      ValueFromAmount(nTransactionFee)));\n+#ifdef ENABLE_WALLET\n+    if (pwalletMain && pwalletMain->IsCrypted())\n+        obj.push_back(Pair(\"unlocked_until\", (boost::int64_t)nWalletUnlockTime));\n+#endif\n+    obj.push_back(Pair(\"errors\",        GetWarnings(\"statusbar\")));\n+    return obj;\n+}"
      },
      {
        "sha": "86025918efe89e0c836c009e52fd1b4b48e1a6a8",
        "filename": "src/rpcrawtransaction.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/05e27c66411caa622815cc7cc7136dfd85370ab4/src/rpcrawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/05e27c66411caa622815cc7cc7136dfd85370ab4/src/rpcrawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcrawtransaction.cpp?ref=05e27c66411caa622815cc7cc7136dfd85370ab4",
        "patch": "@@ -8,7 +8,12 @@\n #include \"init.h\"\n #include \"net.h\"\n #include \"uint256.h\"\n+#include \"core.h\"\n+#include \"main.h\"\n+#include \"keystore.h\"\n+#ifdef ENABLE_WALLET\n #include \"wallet.h\"\n+#endif\n \n #include <stdint.h>\n \n@@ -190,6 +195,7 @@ Value getrawtransaction(const Array& params, bool fHelp)\n     return result;\n }\n \n+#ifdef ENABLE_WALLET\n Value listunspent(const Array& params, bool fHelp)\n {\n     if (fHelp || params.size() > 3)\n@@ -303,6 +309,7 @@ Value listunspent(const Array& params, bool fHelp)\n \n     return results;\n }\n+#endif\n \n Value createrawtransaction(const Array& params, bool fHelp)\n {\n@@ -508,7 +515,9 @@ Value signrawtransaction(const Array& params, bool fHelp)\n             \"this transaction depends on but may not yet be in the block chain.\\n\"\n             \"The third optional argument (may be null) is an array of base58-encoded private\\n\"\n             \"keys that, if given, will be the only keys used to sign the transaction.\\n\"\n+#ifdef ENABLE_WALLET\n             + HelpRequiringPassphrase() + \"\\n\"\n+#endif\n \n             \"\\nArguments:\\n\"\n             \"1. \\\"hexstring\\\"     (string, required) The transaction hex string\\n\"\n@@ -605,8 +614,10 @@ Value signrawtransaction(const Array& params, bool fHelp)\n             tempKeystore.AddKey(key);\n         }\n     }\n+#ifdef ENABLE_WALLET\n     else\n         EnsureWalletIsUnlocked();\n+#endif\n \n     // Add previous txouts given in the RPC call:\n     if (params.size() > 1 && params[1].type() != null_type)\n@@ -662,7 +673,11 @@ Value signrawtransaction(const Array& params, bool fHelp)\n         }\n     }\n \n+#ifdef ENABLE_WALLET\n     const CKeyStore& keystore = ((fGivenKeys || !pwalletMain) ? tempKeystore : *pwalletMain);\n+#else\n+    const CKeyStore& keystore = tempKeystore;\n+#endif\n \n     int nHashType = SIGHASH_ALL;\n     if (params.size() > 3 && params[3].type() != null_type)"
      },
      {
        "sha": "2dc7b34f8823ac3f05f7af63f1015e1abd6386b1",
        "filename": "src/rpcserver.cpp",
        "status": "modified",
        "additions": 40,
        "deletions": 14,
        "changes": 54,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/05e27c66411caa622815cc7cc7136dfd85370ab4/src/rpcserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/05e27c66411caa622815cc7cc7136dfd85370ab4/src/rpcserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.cpp?ref=05e27c66411caa622815cc7cc7136dfd85370ab4",
        "patch": "@@ -9,7 +9,10 @@\n #include \"init.h\"\n #include \"main.h\"\n #include \"util.h\"\n+#include \"ui_interface.h\"\n+#ifdef ENABLE_WALLET\n #include \"wallet.h\"\n+#endif\n \n #include <boost/algorithm/string.hpp>\n #include <boost/asio.hpp>\n@@ -149,8 +152,10 @@ string CRPCTable::help(string strCommand) const\n             continue;\n         if (strCommand != \"\" && strMethod != strCommand)\n             continue;\n+#ifdef ENABLE_WALLET\n         if (pcmd->reqWallet && !pwalletMain)\n             continue;\n+#endif\n \n         try\n         {\n@@ -228,11 +233,26 @@ static const CRPCCommand vRPCCommands[] =\n     { \"getaddednodeinfo\",       &getaddednodeinfo,       true,      true,       false },\n     { \"getnettotals\",           &getnettotals,           true,      true,       false },\n     { \"getdifficulty\",          &getdifficulty,          true,      false,      false },\n+    { \"getinfo\",                &getinfo,                true,      false,      false },\n+    { \"getrawmempool\",          &getrawmempool,          true,      false,      false },\n+    { \"getblock\",               &getblock,               false,     false,      false },\n+    { \"getblockhash\",           &getblockhash,           false,     false,      false },\n+    { \"settxfee\",               &settxfee,               false,     false,      true },\n+    { \"getrawtransaction\",      &getrawtransaction,      false,     false,      false },\n+    { \"createrawtransaction\",   &createrawtransaction,   false,     false,      false },\n+    { \"decoderawtransaction\",   &decoderawtransaction,   false,     false,      false },\n+    { \"decodescript\",           &decodescript,           false,     false,      false },\n+    { \"signrawtransaction\",     &signrawtransaction,     false,     false,      false },\n+    { \"sendrawtransaction\",     &sendrawtransaction,     false,     false,      false },\n+    { \"gettxoutsetinfo\",        &gettxoutsetinfo,        true,      false,      false },\n+    { \"gettxout\",               &gettxout,               true,      false,      false },\n+    { \"verifychain\",            &verifychain,            true,      false,      false },\n+\n+#ifdef ENABLE_WALLET\n     { \"getnetworkhashps\",       &getnetworkhashps,       true,      false,      false },\n     { \"getgenerate\",            &getgenerate,            true,      false,      false },\n     { \"setgenerate\",            &setgenerate,            true,      true,       false },\n     { \"gethashespersec\",        &gethashespersec,        true,      false,      false },\n-    { \"getinfo\",                &getinfo,                true,      false,      false },\n     { \"getmininginfo\",          &getmininginfo,          true,      false,      false },\n     { \"getnewaddress\",          &getnewaddress,          true,      false,      true },\n     { \"getaccountaddress\",      &getaccountaddress,      true,      false,      true },\n@@ -258,17 +278,13 @@ static const CRPCCommand vRPCCommands[] =\n     { \"sendmany\",               &sendmany,               false,     false,      true },\n     { \"addmultisigaddress\",     &addmultisigaddress,     false,     false,      true },\n     { \"createmultisig\",         &createmultisig,         true,      true ,      false },\n-    { \"getrawmempool\",          &getrawmempool,          true,      false,      false },\n-    { \"getblock\",               &getblock,               false,     false,      false },\n-    { \"getblockhash\",           &getblockhash,           false,     false,      false },\n     { \"gettransaction\",         &gettransaction,         false,     false,      true },\n     { \"listtransactions\",       &listtransactions,       false,     false,      true },\n     { \"listaddressgroupings\",   &listaddressgroupings,   false,     false,      true },\n     { \"signmessage\",            &signmessage,            false,     false,      true },\n     { \"verifymessage\",          &verifymessage,          false,     false,      false },\n     { \"getwork\",                &getwork,                true,      false,      true },\n     { \"listaccounts\",           &listaccounts,           false,     false,      true },\n-    { \"settxfee\",               &settxfee,               false,     false,      true },\n     { \"getblocktemplate\",       &getblocktemplate,       true,      false,      false },\n     { \"submitblock\",            &submitblock,            false,     false,      false },\n     { \"listsinceblock\",         &listsinceblock,         false,     false,      true },\n@@ -277,17 +293,9 @@ static const CRPCCommand vRPCCommands[] =\n     { \"importprivkey\",          &importprivkey,          false,     false,      true },\n     { \"importwallet\",           &importwallet,           false,     false,      true },\n     { \"listunspent\",            &listunspent,            false,     false,      true },\n-    { \"getrawtransaction\",      &getrawtransaction,      false,     false,      false },\n-    { \"createrawtransaction\",   &createrawtransaction,   false,     false,      false },\n-    { \"decoderawtransaction\",   &decoderawtransaction,   false,     false,      false },\n-    { \"decodescript\",           &decodescript,           false,     false,      false },\n-    { \"signrawtransaction\",     &signrawtransaction,     false,     false,      false },\n-    { \"sendrawtransaction\",     &sendrawtransaction,     false,     false,      false },\n-    { \"gettxoutsetinfo\",        &gettxoutsetinfo,        true,      false,      false },\n-    { \"gettxout\",               &gettxout,               true,      false,      false },\n     { \"lockunspent\",            &lockunspent,            false,     false,      true },\n     { \"listlockunspent\",        &listlockunspent,        false,     false,      true },\n-    { \"verifychain\",            &verifychain,            true,      false,      false },\n+#endif // ENABLE_WALLET\n };\n \n CRPCTable::CRPCTable()\n@@ -788,8 +796,10 @@ json_spirit::Value CRPCTable::execute(const std::string &strMethod, const json_s\n     const CRPCCommand *pcmd = tableRPC[strMethod];\n     if (!pcmd)\n         throw JSONRPCError(RPC_METHOD_NOT_FOUND, \"Method not found\");\n+#ifdef ENABLE_WALLET\n     if (pcmd->reqWallet && !pwalletMain)\n         throw JSONRPCError(RPC_METHOD_NOT_FOUND, \"Method not found (disabled)\");\n+#endif\n \n     // Observe safe mode\n     string strWarning = GetWarnings(\"rpc\");\n@@ -804,13 +814,20 @@ json_spirit::Value CRPCTable::execute(const std::string &strMethod, const json_s\n         {\n             if (pcmd->threadSafe)\n                 result = pcmd->actor(params, false);\n+#ifdef ENABLE_WALLET\n             else if (!pwalletMain) {\n                 LOCK(cs_main);\n                 result = pcmd->actor(params, false);\n             } else {\n                 LOCK2(cs_main, pwalletMain->cs_wallet);\n                 result = pcmd->actor(params, false);\n             }\n+#else // ENABLE_WALLET\n+            else {\n+                LOCK(cs_main);\n+                result = pcmd->actor(params, false);\n+            }\n+#endif // !ENABLE_WALLET\n         }\n         return result;\n     }\n@@ -820,4 +837,13 @@ json_spirit::Value CRPCTable::execute(const std::string &strMethod, const json_s\n     }\n }\n \n+std::string HelpExampleCli(string methodname, string args){\n+    return \"> bitcoin-cli \" + methodname + \" \" + args + \"\\n\";\n+}\n+\n+std::string HelpExampleRpc(string methodname, string args){\n+    return \"> curl --user myusername --data-binary '{\\\"jsonrpc\\\": \\\"1.0\\\", \\\"id\\\":\\\"curltest\\\", \"\n+        \"\\\"method\\\": \\\"\" + methodname + \"\\\", \\\"params\\\": [\" + args + \"] }' -H 'content-type: text/plain;' http://127.0.0.1:8332/\\n\";\n+}\n+\n const CRPCTable tableRPC;"
      },
      {
        "sha": "bb87afec5b618b361d5959ee414409a1ecf57abe",
        "filename": "src/rpcwallet.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 67,
        "changes": 67,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/05e27c66411caa622815cc7cc7136dfd85370ab4/src/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/05e27c66411caa622815cc7cc7136dfd85370ab4/src/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.cpp?ref=05e27c66411caa622815cc7cc7136dfd85370ab4",
        "patch": "@@ -33,15 +33,6 @@ std::string HelpRequiringPassphrase()\n         : \"\";\n }\n \n-std::string HelpExampleCli(string methodname, string args){\n-    return \"> bitcoin-cli \" + methodname + \" \" + args + \"\\n\";\n-}\n-\n-std::string HelpExampleRpc(string methodname, string args){\n-    return \"> curl --user myusername --data-binary '{\\\"jsonrpc\\\": \\\"1.0\\\", \\\"id\\\":\\\"curltest\\\", \"\n-        \"\\\"method\\\": \\\"\" + methodname + \"\\\", \\\"params\\\": [\" + args + \"] }' -H 'content-type: text/plain;' http://127.0.0.1:8332/\\n\";\n-}\n-\n void EnsureWalletIsUnlocked()\n {\n     if (pwalletMain->IsLocked())\n@@ -75,64 +66,6 @@ string AccountFromValue(const Value& value)\n     return strAccount;\n }\n \n-Value getinfo(const Array& params, bool fHelp)\n-{\n-    if (fHelp || params.size() != 0)\n-        throw runtime_error(\n-            \"getinfo\\n\"\n-            \"Returns an object containing various state info.\\n\"\n-            \"\\nResult:\\n\"\n-            \"{\\n\"\n-            \"  \\\"version\\\": xxxxx,           (numeric) the server version\\n\"\n-            \"  \\\"protocolversion\\\": xxxxx,   (numeric) the protocol version\\n\"\n-            \"  \\\"walletversion\\\": xxxxx,     (numeric) the wallet version\\n\"\n-            \"  \\\"balance\\\": xxxxxxx,         (numeric) the total bitcoin balance of the wallet\\n\"\n-            \"  \\\"blocks\\\": xxxxxx,           (numeric) the current number of blocks processed in the server\\n\"\n-            \"  \\\"timeoffset\\\": xxxxx,        (numeric) the time offset\\n\"\n-            \"  \\\"connections\\\": xxxxx,       (numeric) the number of connections\\n\"\n-            \"  \\\"proxy\\\": \\\"host:port\\\",     (string, optional) the proxy used by the server\\n\"\n-            \"  \\\"difficulty\\\": xxxxxx,       (numeric) the current difficulty\\n\"\n-            \"  \\\"testnet\\\": true|false,      (boolean) if the server is using testnet or not\\n\"\n-            \"  \\\"keypoololdest\\\": xxxxxx,    (numeric) the timestamp (seconds since GMT epoch) of the oldest pre-generated key in the key pool\\n\"\n-            \"  \\\"keypoolsize\\\": xxxx,        (numeric) how many new keys are pre-generated\\n\"\n-            \"  \\\"paytxfee\\\": x.xxxx,         (numeric) the transaction fee set in btc\\n\"\n-            \"  \\\"unlocked_until\\\": ttt,      (numeric) the timestamp in seconds since epoch (midnight Jan 1 1970 GMT) that the wallet is unlocked for transfers, or 0 if the wallet is locked\\n\"\n-            \"  \\\"errors\\\": \\\"...\\\"           (string) any error messages\\n\"\n-            \"}\\n\"\n-            \"\\nExamples:\\n\"\n-            + HelpExampleCli(\"getinfo\", \"\")\n-            + HelpExampleRpc(\"getinfo\", \"\")\n-        );\n-\n-    proxyType proxy;\n-    GetProxy(NET_IPV4, proxy);\n-\n-    Object obj;\n-    obj.push_back(Pair(\"version\",       (int)CLIENT_VERSION));\n-    obj.push_back(Pair(\"protocolversion\",(int)PROTOCOL_VERSION));\n-    if (pwalletMain) {\n-        obj.push_back(Pair(\"walletversion\", pwalletMain->GetVersion()));\n-        obj.push_back(Pair(\"balance\",       ValueFromAmount(pwalletMain->GetBalance())));\n-    }\n-    obj.push_back(Pair(\"blocks\",        (int)chainActive.Height()));\n-    obj.push_back(Pair(\"timeoffset\",    (boost::int64_t)GetTimeOffset()));\n-    obj.push_back(Pair(\"connections\",   (int)vNodes.size()));\n-    obj.push_back(Pair(\"proxy\",         (proxy.first.IsValid() ? proxy.first.ToStringIPPort() : string())));\n-    obj.push_back(Pair(\"difficulty\",    (double)GetDifficulty()));\n-    obj.push_back(Pair(\"testnet\",       TestNet()));\n-    if (pwalletMain) {\n-        obj.push_back(Pair(\"keypoololdest\", (boost::int64_t)pwalletMain->GetOldestKeyPoolTime()));\n-        obj.push_back(Pair(\"keypoolsize\",   (int)pwalletMain->GetKeyPoolSize()));\n-    }\n-    obj.push_back(Pair(\"paytxfee\",      ValueFromAmount(nTransactionFee)));\n-    if (pwalletMain && pwalletMain->IsCrypted())\n-        obj.push_back(Pair(\"unlocked_until\", (boost::int64_t)nWalletUnlockTime));\n-    obj.push_back(Pair(\"errors\",        GetWarnings(\"statusbar\")));\n-    return obj;\n-}\n-\n-\n-\n Value getnewaddress(const Array& params, bool fHelp)\n {\n     if (fHelp || params.size() > 1)"
      },
      {
        "sha": "dccd264e5a978df299566151f8b8ae0bae971a0a",
        "filename": "src/test/Makefile.am",
        "status": "modified",
        "additions": 13,
        "deletions": 4,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/05e27c66411caa622815cc7cc7136dfd85370ab4/src/test/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/05e27c66411caa622815cc7cc7136dfd85370ab4/src/test/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/Makefile.am?ref=05e27c66411caa622815cc7cc7136dfd85370ab4",
        "patch": "@@ -21,16 +21,25 @@ BUILT_SOURCES = $(JSON_TEST_FILES:.json=.json.h) $(RAW_TEST_FILES:.raw=.raw.h)\n # test_bitcoin binary #\n test_bitcoin_CPPFLAGS = $(AM_CPPFLAGS) $(TESTDEFS)\n test_bitcoin_LDADD = $(LIBBITCOIN_SERVER) $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBLEVELDB) $(LIBMEMENV) \\\n-  $(BOOST_LIBS) $(BOOST_UNIT_TEST_FRAMEWORK_LIB) $(BDB_LIBS)\n-test_bitcoin_SOURCES = accounting_tests.cpp alert_tests.cpp \\\n+  $(BOOST_LIBS) $(BOOST_UNIT_TEST_FRAMEWORK_LIB)\n+if ENABLE_WALLET\n+test_bitcoin_LDADD += $(LIBBITCOIN_WALLET)\n+endif\n+test_bitcoin_LDADD += $(BDB_LIBS)\n+\n+test_bitcoin_SOURCES = alert_tests.cpp \\\n   allocator_tests.cpp base32_tests.cpp base58_tests.cpp base64_tests.cpp \\\n   bignum_tests.cpp bloom_tests.cpp canonical_tests.cpp checkblock_tests.cpp \\\n   Checkpoints_tests.cpp compress_tests.cpp DoS_tests.cpp getarg_tests.cpp \\\n-  key_tests.cpp miner_tests.cpp mruset_tests.cpp multisig_tests.cpp \\\n+  key_tests.cpp mruset_tests.cpp multisig_tests.cpp \\\n   netbase_tests.cpp pmt_tests.cpp rpc_tests.cpp script_P2SH_tests.cpp \\\n   script_tests.cpp serialize_tests.cpp sigopcount_tests.cpp test_bitcoin.cpp \\\n   transaction_tests.cpp uint160_tests.cpp uint256_tests.cpp util_tests.cpp \\\n-  wallet_tests.cpp sighash_tests.cpp $(JSON_TEST_FILES) $(RAW_TEST_FILES)\n+  sighash_tests.cpp $(JSON_TEST_FILES) $(RAW_TEST_FILES)\n+\n+if ENABLE_WALLET\n+test_bitcoin_SOURCES += accounting_tests.cpp wallet_tests.cpp miner_tests.cpp rpc_wallet_tests.cpp\n+endif\n \n nodist_test_bitcoin_SOURCES = $(BUILT_SOURCES)\n "
      },
      {
        "sha": "29195545dad9a04c5bd7cdc465eea08ac7fb029e",
        "filename": "src/test/rpc_tests.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 68,
        "changes": 71,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/05e27c66411caa622815cc7cc7136dfd85370ab4/src/test/rpc_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/05e27c66411caa622815cc7cc7136dfd85370ab4/src/test/rpc_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/rpc_tests.cpp?ref=05e27c66411caa622815cc7cc7136dfd85370ab4",
        "patch": "@@ -9,9 +9,7 @@\n using namespace std;\n using namespace json_spirit;\n \n-BOOST_AUTO_TEST_SUITE(rpc_tests)\n-\n-static Array\n+Array\n createArgs(int nRequired, const char* address1=NULL, const char* address2=NULL)\n {\n     Array result;\n@@ -23,44 +21,7 @@ createArgs(int nRequired, const char* address1=NULL, const char* address2=NULL)\n     return result;\n }\n \n-BOOST_AUTO_TEST_CASE(rpc_addmultisig)\n-{\n-    rpcfn_type addmultisig = tableRPC[\"addmultisigaddress\"]->actor;\n-\n-    // old, 65-byte-long:\n-    const char address1Hex[] = \"0434e3e09f49ea168c5bbf53f877ff4206923858aab7c7e1df25bc263978107c95e35065a27ef6f1b27222db0ec97e0e895eaca603d3ee0d4c060ce3d8a00286c8\";\n-    // new, compressed:\n-    const char address2Hex[] = \"0388c2037017c62240b6b72ac1a2a5f94da790596ebd06177c8572752922165cb4\";\n-\n-    Value v;\n-    CBitcoinAddress address;\n-    BOOST_CHECK_NO_THROW(v = addmultisig(createArgs(1, address1Hex), false));\n-    address.SetString(v.get_str());\n-    BOOST_CHECK(address.IsValid() && address.IsScript());\n-\n-    BOOST_CHECK_NO_THROW(v = addmultisig(createArgs(1, address1Hex, address2Hex), false));\n-    address.SetString(v.get_str());\n-    BOOST_CHECK(address.IsValid() && address.IsScript());\n-\n-    BOOST_CHECK_NO_THROW(v = addmultisig(createArgs(2, address1Hex, address2Hex), false));\n-    address.SetString(v.get_str());\n-    BOOST_CHECK(address.IsValid() && address.IsScript());\n-\n-    BOOST_CHECK_THROW(addmultisig(createArgs(0), false), runtime_error);\n-    BOOST_CHECK_THROW(addmultisig(createArgs(1), false), runtime_error);\n-    BOOST_CHECK_THROW(addmultisig(createArgs(2, address1Hex), false), runtime_error);\n-\n-    BOOST_CHECK_THROW(addmultisig(createArgs(1, \"\"), false), runtime_error);\n-    BOOST_CHECK_THROW(addmultisig(createArgs(1, \"NotAValidPubkey\"), false), runtime_error);\n-\n-    string short1(address1Hex, address1Hex+sizeof(address1Hex)-2); // last byte missing\n-    BOOST_CHECK_THROW(addmultisig(createArgs(2, short1.c_str()), false), runtime_error);\n-\n-    string short2(address1Hex+1, address1Hex+sizeof(address1Hex)); // first byte missing\n-    BOOST_CHECK_THROW(addmultisig(createArgs(2, short2.c_str()), false), runtime_error);\n-}\n-\n-static Value CallRPC(string args)\n+Value CallRPC(string args)\n {\n     vector<string> vArgs;\n     boost::split(vArgs, args, boost::is_any_of(\" \\t\"));\n@@ -79,34 +40,8 @@ static Value CallRPC(string args)\n     }\n }\n \n-BOOST_AUTO_TEST_CASE(rpc_wallet)\n-{\n-    // Test RPC calls for various wallet statistics\n-    Value r;\n-\n-    BOOST_CHECK_NO_THROW(CallRPC(\"listunspent\"));\n-    BOOST_CHECK_THROW(CallRPC(\"listunspent string\"), runtime_error);\n-    BOOST_CHECK_THROW(CallRPC(\"listunspent 0 string\"), runtime_error);\n-    BOOST_CHECK_THROW(CallRPC(\"listunspent 0 1 not_array\"), runtime_error);\n-    BOOST_CHECK_THROW(CallRPC(\"listunspent 0 1 [] extra\"), runtime_error);\n-    BOOST_CHECK_NO_THROW(r=CallRPC(\"listunspent 0 1 []\"));\n-    BOOST_CHECK(r.get_array().empty());\n-\n-    BOOST_CHECK_NO_THROW(CallRPC(\"listreceivedbyaddress\"));\n-    BOOST_CHECK_NO_THROW(CallRPC(\"listreceivedbyaddress 0\"));\n-    BOOST_CHECK_THROW(CallRPC(\"listreceivedbyaddress not_int\"), runtime_error);\n-    BOOST_CHECK_THROW(CallRPC(\"listreceivedbyaddress 0 not_bool\"), runtime_error);\n-    BOOST_CHECK_NO_THROW(CallRPC(\"listreceivedbyaddress 0 true\"));\n-    BOOST_CHECK_THROW(CallRPC(\"listreceivedbyaddress 0 true extra\"), runtime_error);\n-\n-    BOOST_CHECK_NO_THROW(CallRPC(\"listreceivedbyaccount\"));\n-    BOOST_CHECK_NO_THROW(CallRPC(\"listreceivedbyaccount 0\"));\n-    BOOST_CHECK_THROW(CallRPC(\"listreceivedbyaccount not_int\"), runtime_error);\n-    BOOST_CHECK_THROW(CallRPC(\"listreceivedbyaccount 0 not_bool\"), runtime_error);\n-    BOOST_CHECK_NO_THROW(CallRPC(\"listreceivedbyaccount 0 true\"));\n-    BOOST_CHECK_THROW(CallRPC(\"listreceivedbyaccount 0 true extra\"), runtime_error);\n-}\n \n+BOOST_AUTO_TEST_SUITE(rpc_tests)\n \n BOOST_AUTO_TEST_CASE(rpc_rawparams)\n {"
      },
      {
        "sha": "2cf0fb350bba4c209f42139820e8dd85569debb9",
        "filename": "src/test/rpc_wallet_tests.cpp",
        "status": "added",
        "additions": 82,
        "deletions": 0,
        "changes": 82,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/05e27c66411caa622815cc7cc7136dfd85370ab4/src/test/rpc_wallet_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/05e27c66411caa622815cc7cc7136dfd85370ab4/src/test/rpc_wallet_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/rpc_wallet_tests.cpp?ref=05e27c66411caa622815cc7cc7136dfd85370ab4",
        "patch": "@@ -0,0 +1,82 @@\n+#include \"rpcserver.h\"\n+#include \"rpcclient.h\"\n+\n+#include \"base58.h\"\n+\n+#include <boost/algorithm/string.hpp>\n+#include <boost/test/unit_test.hpp>\n+\n+using namespace std;\n+using namespace json_spirit;\n+\n+extern Array createArgs(int nRequired, const char* address1=NULL, const char* address2=NULL);\n+extern Value CallRPC(string args);\n+\n+BOOST_AUTO_TEST_SUITE(rpc_wallet_tests)\n+\n+BOOST_AUTO_TEST_CASE(rpc_addmultisig)\n+{\n+    rpcfn_type addmultisig = tableRPC[\"addmultisigaddress\"]->actor;\n+\n+    // old, 65-byte-long:\n+    const char address1Hex[] = \"0434e3e09f49ea168c5bbf53f877ff4206923858aab7c7e1df25bc263978107c95e35065a27ef6f1b27222db0ec97e0e895eaca603d3ee0d4c060ce3d8a00286c8\";\n+    // new, compressed:\n+    const char address2Hex[] = \"0388c2037017c62240b6b72ac1a2a5f94da790596ebd06177c8572752922165cb4\";\n+\n+    Value v;\n+    CBitcoinAddress address;\n+    BOOST_CHECK_NO_THROW(v = addmultisig(createArgs(1, address1Hex), false));\n+    address.SetString(v.get_str());\n+    BOOST_CHECK(address.IsValid() && address.IsScript());\n+\n+    BOOST_CHECK_NO_THROW(v = addmultisig(createArgs(1, address1Hex, address2Hex), false));\n+    address.SetString(v.get_str());\n+    BOOST_CHECK(address.IsValid() && address.IsScript());\n+\n+    BOOST_CHECK_NO_THROW(v = addmultisig(createArgs(2, address1Hex, address2Hex), false));\n+    address.SetString(v.get_str());\n+    BOOST_CHECK(address.IsValid() && address.IsScript());\n+\n+    BOOST_CHECK_THROW(addmultisig(createArgs(0), false), runtime_error);\n+    BOOST_CHECK_THROW(addmultisig(createArgs(1), false), runtime_error);\n+    BOOST_CHECK_THROW(addmultisig(createArgs(2, address1Hex), false), runtime_error);\n+\n+    BOOST_CHECK_THROW(addmultisig(createArgs(1, \"\"), false), runtime_error);\n+    BOOST_CHECK_THROW(addmultisig(createArgs(1, \"NotAValidPubkey\"), false), runtime_error);\n+\n+    string short1(address1Hex, address1Hex+sizeof(address1Hex)-2); // last byte missing\n+    BOOST_CHECK_THROW(addmultisig(createArgs(2, short1.c_str()), false), runtime_error);\n+\n+    string short2(address1Hex+1, address1Hex+sizeof(address1Hex)); // first byte missing\n+    BOOST_CHECK_THROW(addmultisig(createArgs(2, short2.c_str()), false), runtime_error);\n+}\n+\n+BOOST_AUTO_TEST_CASE(rpc_wallet)\n+{\n+    // Test RPC calls for various wallet statistics\n+    Value r;\n+\n+    BOOST_CHECK_NO_THROW(CallRPC(\"listunspent\"));\n+    BOOST_CHECK_THROW(CallRPC(\"listunspent string\"), runtime_error);\n+    BOOST_CHECK_THROW(CallRPC(\"listunspent 0 string\"), runtime_error);\n+    BOOST_CHECK_THROW(CallRPC(\"listunspent 0 1 not_array\"), runtime_error);\n+    BOOST_CHECK_THROW(CallRPC(\"listunspent 0 1 [] extra\"), runtime_error);\n+    BOOST_CHECK_NO_THROW(r=CallRPC(\"listunspent 0 1 []\"));\n+    BOOST_CHECK(r.get_array().empty());\n+\n+    BOOST_CHECK_NO_THROW(CallRPC(\"listreceivedbyaddress\"));\n+    BOOST_CHECK_NO_THROW(CallRPC(\"listreceivedbyaddress 0\"));\n+    BOOST_CHECK_THROW(CallRPC(\"listreceivedbyaddress not_int\"), runtime_error);\n+    BOOST_CHECK_THROW(CallRPC(\"listreceivedbyaddress 0 not_bool\"), runtime_error);\n+    BOOST_CHECK_NO_THROW(CallRPC(\"listreceivedbyaddress 0 true\"));\n+    BOOST_CHECK_THROW(CallRPC(\"listreceivedbyaddress 0 true extra\"), runtime_error);\n+\n+    BOOST_CHECK_NO_THROW(CallRPC(\"listreceivedbyaccount\"));\n+    BOOST_CHECK_NO_THROW(CallRPC(\"listreceivedbyaccount 0\"));\n+    BOOST_CHECK_THROW(CallRPC(\"listreceivedbyaccount not_int\"), runtime_error);\n+    BOOST_CHECK_THROW(CallRPC(\"listreceivedbyaccount 0 not_bool\"), runtime_error);\n+    BOOST_CHECK_NO_THROW(CallRPC(\"listreceivedbyaccount 0 true\"));\n+    BOOST_CHECK_THROW(CallRPC(\"listreceivedbyaccount 0 true extra\"), runtime_error);\n+}\n+\n+BOOST_AUTO_TEST_SUITE_END()"
      },
      {
        "sha": "a804ff3803cf8099c44aa8685fc229be8d8f6de7",
        "filename": "src/test/test_bitcoin.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/05e27c66411caa622815cc7cc7136dfd85370ab4/src/test/test_bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/05e27c66411caa622815cc7cc7136dfd85370ab4/src/test/test_bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/test_bitcoin.cpp?ref=05e27c66411caa622815cc7cc7136dfd85370ab4",
        "patch": "@@ -7,7 +7,9 @@\n #include \"txdb.h\"\n #include \"ui_interface.h\"\n #include \"util.h\"\n+#ifdef ENABLE_WALLET\n #include \"wallet.h\"\n+#endif\n \n #include <boost/filesystem.hpp>\n #include <boost/test/unit_test.hpp>\n@@ -26,18 +28,22 @@ struct TestingSetup {\n     TestingSetup() {\n         fPrintToDebugger = true; // don't want to write to debug.log file\n         noui_connect();\n+#ifdef ENABLE_WALLET\n         bitdb.MakeMock();\n+#endif\n         pathTemp = GetTempPath() / strprintf(\"test_bitcoin_%lu_%i\", (unsigned long)GetTime(), (int)(GetRand(100000)));\n         boost::filesystem::create_directories(pathTemp);\n         mapArgs[\"-datadir\"] = pathTemp.string();\n         pblocktree = new CBlockTreeDB(1 << 20, true);\n         pcoinsdbview = new CCoinsViewDB(1 << 23, true);\n         pcoinsTip = new CCoinsViewCache(*pcoinsdbview);\n         InitBlockIndex();\n+#ifdef ENABLE_WALLET\n         bool fFirstRun;\n         pwalletMain = new CWallet(\"wallet.dat\");\n         pwalletMain->LoadWallet(fFirstRun);\n         RegisterWallet(pwalletMain);\n+#endif\n         nScriptCheckThreads = 3;\n         for (int i=0; i < nScriptCheckThreads-1; i++)\n             threadGroup.create_thread(&ThreadScriptCheck);\n@@ -46,12 +52,16 @@ struct TestingSetup {\n     {\n         threadGroup.interrupt_all();\n         threadGroup.join_all();\n+#ifdef ENABLE_WALLET\n         delete pwalletMain;\n         pwalletMain = NULL;\n+#endif\n         delete pcoinsTip;\n         delete pcoinsdbview;\n         delete pblocktree;\n+#ifdef ENABLE_WALLET\n         bitdb.Flush(true);\n+#endif\n         boost::filesystem::remove_all(pathTemp);\n     }\n };"
      }
    ]
  },
  {
    "sha": "6893d74e1511ee68a8f6ab25f232a66dd3cbe2b6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ODkzZDc0ZTE1MTFlZTY4YThmNmFiMjVmMjMyYTY2ZGQzY2JlMmI2",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-08T12:56:01Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-08T12:56:12Z"
      },
      "message": "Merge pull request #3322\n\n26d1b65 src/Makefile.am: Simplify clean of leveldb (Josh Triplett)\na26a367 configure.ac: Check for miniupnpc headers, not just -lminiupnpc (Josh Triplett)\n82ccb05 autogen.sh: Stop passing --verbose to autoreconf (Josh Triplett)\ne12dafd autogen.sh: Use long options to autoreconf, for self-documentation (Josh Triplett)\n19b9add autogen.sh: Support running from outside the source directory (Josh Triplett)\n97d285a autogen.sh: Use set -e to fail if any command fails (Josh Triplett)\nf80b723 autogen.sh: Add a /bin/sh shebang. (Josh Triplett)",
      "tree": {
        "sha": "2feadc59efe566ef22a2607b4f1c931fd5df17bc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2feadc59efe566ef22a2607b4f1c931fd5df17bc"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6893d74e1511ee68a8f6ab25f232a66dd3cbe2b6",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJSpGxsAAoJEHSBCwEjRsmm52MH/3rPefbgcsQmWqEr0N5Ky9RE\n6TxfJ4FjrZ5ikBZWf90dYPEheLZJMx+Q64q7powaXrnP/0yWCULXK+m0BhTqEYYZ\nFqufvVEt2rRe2qjJ9E5k4xBUrogDmRcxZO5A9iyGskwIkG2W1Oc02qUataBj5cy/\n6id4hxh/S/Fz2Bxbf2OpPNqkGZBKuFu5d7OwCUxlNnyj/fMxBlr6vCTE2lWz0HRg\nhiVOmXsrgXvQ6a3PTZGSK+9MHwT5kmhycJG6Dn57TBZVYf0XTeWOV4yb5TKdkSw7\nCB2vkl/h9BMU+30YEY/zDKIpNnPOZgMYN2gn2iSarieYWI/7zPq6RUpthmVBVJs=\n=aA06\n-----END PGP SIGNATURE-----",
        "payload": "tree 2feadc59efe566ef22a2607b4f1c931fd5df17bc\nparent 05e27c66411caa622815cc7cc7136dfd85370ab4\nparent 26d1b65c532585dfb8c0405af3c56c4217cd1524\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1386507361 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1386507372 +0100\n\nMerge pull request #3322\n\n26d1b65 src/Makefile.am: Simplify clean of leveldb (Josh Triplett)\na26a367 configure.ac: Check for miniupnpc headers, not just -lminiupnpc (Josh Triplett)\n82ccb05 autogen.sh: Stop passing --verbose to autoreconf (Josh Triplett)\ne12dafd autogen.sh: Use long options to autoreconf, for self-documentation (Josh Triplett)\n19b9add autogen.sh: Support running from outside the source directory (Josh Triplett)\n97d285a autogen.sh: Use set -e to fail if any command fails (Josh Triplett)\nf80b723 autogen.sh: Add a /bin/sh shebang. (Josh Triplett)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6893d74e1511ee68a8f6ab25f232a66dd3cbe2b6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6893d74e1511ee68a8f6ab25f232a66dd3cbe2b6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6893d74e1511ee68a8f6ab25f232a66dd3cbe2b6/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "05e27c66411caa622815cc7cc7136dfd85370ab4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/05e27c66411caa622815cc7cc7136dfd85370ab4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/05e27c66411caa622815cc7cc7136dfd85370ab4"
      },
      {
        "sha": "26d1b65c532585dfb8c0405af3c56c4217cd1524",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/26d1b65c532585dfb8c0405af3c56c4217cd1524",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/26d1b65c532585dfb8c0405af3c56c4217cd1524"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 11,
      "deletions": 4
    },
    "files": [
      {
        "sha": "5b883a6a4c070554acd12e8caa4e8251ed0cab1e",
        "filename": "autogen.sh",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6893d74e1511ee68a8f6ab25f232a66dd3cbe2b6/autogen.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6893d74e1511ee68a8f6ab25f232a66dd3cbe2b6/autogen.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/autogen.sh?ref=6893d74e1511ee68a8f6ab25f232a66dd3cbe2b6",
        "patch": "@@ -1 +1,5 @@\n-autoreconf -vif\n+#!/bin/sh\n+set -e\n+srcdir=\"$(dirname $0)\"\n+cd \"$srcdir\"\n+autoreconf --install --force"
      },
      {
        "sha": "34509993a0628892fcc1dadee4b92bfc4bc63fa2",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6893d74e1511ee68a8f6ab25f232a66dd3cbe2b6/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6893d74e1511ee68a8f6ab25f232a66dd3cbe2b6/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=6893d74e1511ee68a8f6ab25f232a66dd3cbe2b6",
        "patch": "@@ -376,7 +376,11 @@ fi\n \n dnl Check for libminiupnpc (optional)\n if test x$use_upnp != xno; then\n-  AC_CHECK_LIB([miniupnpc], [main],, [have_miniupnpc=no])\n+  AC_CHECK_HEADERS(\n+    [miniupnpc/miniwget.h miniupnpc/miniupnpc.h miniupnpc/upnpcommands.h miniupnpc/upnperrors.h],\n+    [AC_CHECK_LIB([miniupnpc], [main],, [have_miniupnpc=no])],\n+    [have_miniupnpc=no]\n+  )\n fi\n \n dnl Check for boost libs"
      },
      {
        "sha": "df4087c3134dd81c4d5649aacbe891ff23d495c8",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6893d74e1511ee68a8f6ab25f232a66dd3cbe2b6/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6893d74e1511ee68a8f6ab25f232a66dd3cbe2b6/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=6893d74e1511ee68a8f6ab25f232a66dd3cbe2b6",
        "patch": "@@ -135,5 +135,4 @@ EXTRA_DIST = leveldb Makefile.include\n \n clean-local:\n \t-$(MAKE) -C leveldb clean\n-\trm -f leveldb/port/*.gcno leveldb/db/*.gcno leveldb/table/*.gcno leveldb/helpers/*.gcno\n-\trm -f leveldb/util/*.gcno leveldb/helpers/memenv/*.gcno\n+\trm -f leveldb/*/*.gcno leveldb/helpers/memenv/*.gcno"
      }
    ]
  },
  {
    "sha": "70370ae502df8756f3a067a00ccd61b9fc819581",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3MDM3MGFlNTAyZGY4NzU2ZjNhMDY3YTAwY2NkNjFiOWZjODE5NTgx",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-08T13:24:10Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-08T13:24:49Z"
      },
      "message": "Merge pull request #3348\n\nccd1372 [Qt] small notificator and style changes (Philip Kaufmann)",
      "tree": {
        "sha": "1f3beb9dcdaa036ea822573cf461e6566287bef8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1f3beb9dcdaa036ea822573cf461e6566287bef8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/70370ae502df8756f3a067a00ccd61b9fc819581",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJSpHMhAAoJEHSBCwEjRsmmRQ8H/iny2hByXJuYoyfIBvmNKGE/\nBjh6NFhWvUY3IMETqZX2XCHK4d2ytuVyPBfMNmpr3BKVaqyP2qMOIXZ8bhCuUMUS\nmoIy3T2AQ7cYnHewoZ6JD0zNMMYuEtb/N7eFpvOWvWRb0JzPRV9zCFtx9u0uj1YX\n6U7pcDu1tdwJOS6RtRGFHnVCTMxIeRKc+YHRRVzpeDF5IrsOnmWDFWAPomspAvBR\nIizmYnDT3769Oc2ZlMZ30zIaGJMQbkDKV/sYXOuanc/tnpYBjFF2mf3cUGVZe+v0\nmxlCypzbQ3BHHjToZZ00FjqCZiUIns2QYpdtksIzlm65mNXXnHMDPKUyalrmbWw=\n=yz/i\n-----END PGP SIGNATURE-----",
        "payload": "tree 1f3beb9dcdaa036ea822573cf461e6566287bef8\nparent 6893d74e1511ee68a8f6ab25f232a66dd3cbe2b6\nparent ccd1372dd063e4098a245da91c9e73743484f68a\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1386509050 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1386509089 +0100\n\nMerge pull request #3348\n\nccd1372 [Qt] small notificator and style changes (Philip Kaufmann)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/70370ae502df8756f3a067a00ccd61b9fc819581",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/70370ae502df8756f3a067a00ccd61b9fc819581",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/70370ae502df8756f3a067a00ccd61b9fc819581/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6893d74e1511ee68a8f6ab25f232a66dd3cbe2b6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6893d74e1511ee68a8f6ab25f232a66dd3cbe2b6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6893d74e1511ee68a8f6ab25f232a66dd3cbe2b6"
      },
      {
        "sha": "ccd1372dd063e4098a245da91c9e73743484f68a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ccd1372dd063e4098a245da91c9e73743484f68a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ccd1372dd063e4098a245da91c9e73743484f68a"
      }
    ],
    "stats": {
      "total": 27,
      "additions": 14,
      "deletions": 13
    },
    "files": [
      {
        "sha": "2f9e205c8d83ca5f1a3c713506c9f27296567a8f",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/70370ae502df8756f3a067a00ccd61b9fc819581/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/70370ae502df8756f3a067a00ccd61b9fc819581/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=70370ae502df8756f3a067a00ccd61b9fc819581",
        "patch": "@@ -53,7 +53,6 @@ static SplashScreen *splashref;\n \n static bool ThreadSafeMessageBox(const std::string& message, const std::string& caption, unsigned int style)\n {\n-    // Message from network thread\n     if(guiref)\n     {\n         bool modal = (style & CClientUIInterface::MODAL);\n@@ -160,7 +159,7 @@ static void initTranslations(QTranslator &qtTranslatorBase, QTranslator &qtTrans\n \n /* qDebug() message handler --> debug.log */\n #if QT_VERSION < 0x050000\n-void DebugMessageHandler(QtMsgType type, const char * msg)\n+void DebugMessageHandler(QtMsgType type, const char *msg)\n {\n     Q_UNUSED(type);\n     LogPrint(\"qt\", \"Bitcoin-Qt: %s\\n\", msg);\n@@ -313,11 +312,12 @@ int main(int argc, char *argv[])\n                     splash.finish(&window);\n \n                 ClientModel clientModel(&optionsModel);\n+                window.setClientModel(&clientModel);\n+\n                 WalletModel *walletModel = 0;\n                 if(pwalletMain)\n                     walletModel = new WalletModel(pwalletMain, &optionsModel);\n \n-                window.setClientModel(&clientModel);\n                 if(walletModel)\n                 {\n                     window.addWallet(\"~Default\", walletModel);"
      },
      {
        "sha": "b3a566428d32e004f2ee2dc0930f36bfd1b77b56",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/70370ae502df8756f3a067a00ccd61b9fc819581/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/70370ae502df8756f3a067a00ccd61b9fc819581/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=70370ae502df8756f3a067a00ccd61b9fc819581",
        "patch": "@@ -405,7 +405,7 @@ void BitcoinGUI::createTrayIcon(bool fIsTestnet)\n     trayIcon->show();\n #endif\n \n-    notificator = new Notificator(QApplication::applicationName(), trayIcon);\n+    notificator = new Notificator(QApplication::applicationName(), trayIcon, this);\n }\n \n void BitcoinGUI::createTrayIconMenu()"
      },
      {
        "sha": "05e8412528e2a429b197dc7e9a6984a50abd61a5",
        "filename": "src/qt/clientmodel.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/70370ae502df8756f3a067a00ccd61b9fc819581/src/qt/clientmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/70370ae502df8756f3a067a00ccd61b9fc819581/src/qt/clientmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.h?ref=70370ae502df8756f3a067a00ccd61b9fc819581",
        "patch": "@@ -84,7 +84,7 @@ class ClientModel : public QObject\n     void alertsChanged(const QString &warnings);\n     void bytesChanged(quint64 totalBytesIn, quint64 totalBytesOut);\n \n-    //! Asynchronous message notification\n+    //! Fired when a message should be reported to the user\n     void message(const QString &title, const QString &message, unsigned int style);\n \n public slots:"
      },
      {
        "sha": "8f8d67dc587831003133c74b8e0f93440d12517e",
        "filename": "src/qt/guiutil.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/70370ae502df8756f3a067a00ccd61b9fc819581/src/qt/guiutil.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/70370ae502df8756f3a067a00ccd61b9fc819581/src/qt/guiutil.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.cpp?ref=70370ae502df8756f3a067a00ccd61b9fc819581",
        "patch": "@@ -32,6 +32,7 @@\n \n #include <boost/filesystem.hpp>\n #include <boost/filesystem/fstream.hpp>\n+\n #include <QAbstractItemView>\n #include <QApplication>\n #include <QClipboard>"
      },
      {
        "sha": "1cef397d12166845f98d77cf933f38e53a7e3693",
        "filename": "src/qt/notificator.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/70370ae502df8756f3a067a00ccd61b9fc819581/src/qt/notificator.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/70370ae502df8756f3a067a00ccd61b9fc819581/src/qt/notificator.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/notificator.cpp?ref=70370ae502df8756f3a067a00ccd61b9fc819581",
        "patch": "@@ -4,7 +4,6 @@\n \n #include \"notificator.h\"\n \n-\n #include <QApplication>\n #include <QByteArray>\n #include <QIcon>\n@@ -32,7 +31,7 @@\n // https://wiki.ubuntu.com/NotificationDevelopmentGuidelines recommends at least 128\n const int FREEDESKTOP_NOTIFICATION_ICON_SIZE = 128;\n \n-Notificator::Notificator(const QString &programName, QSystemTrayIcon *trayicon, QWidget *parent):\n+Notificator::Notificator(const QString &programName, QSystemTrayIcon *trayicon, QWidget *parent) :\n     QObject(parent),\n     parent(parent),\n     programName(programName),\n@@ -48,7 +47,7 @@ Notificator::Notificator(const QString &programName, QSystemTrayIcon *trayicon,\n     }\n #ifdef USE_DBUS\n     interface = new QDBusInterface(\"org.freedesktop.Notifications\",\n-          \"/org/freedesktop/Notifications\", \"org.freedesktop.Notifications\");\n+        \"/org/freedesktop/Notifications\", \"org.freedesktop.Notifications\");\n     if(interface->isValid())\n     {\n         mode = Freedesktop;"
      },
      {
        "sha": "abab986992a6042f9b1a3a6696663abc1565157c",
        "filename": "src/qt/notificator.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/70370ae502df8756f3a067a00ccd61b9fc819581/src/qt/notificator.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/70370ae502df8756f3a067a00ccd61b9fc819581/src/qt/notificator.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/notificator.h?ref=70370ae502df8756f3a067a00ccd61b9fc819581",
        "patch": "@@ -29,7 +29,7 @@ class Notificator: public QObject\n     /** Create a new notificator.\n        @note Ownership of trayIcon is not transferred to this object.\n     */\n-    Notificator(const QString &programName=QString(), QSystemTrayIcon *trayIcon=0, QWidget *parent=0);\n+    Notificator(const QString &programName, QSystemTrayIcon *trayIcon, QWidget *parent);\n     ~Notificator();\n \n     // Message class"
      },
      {
        "sha": "cad41abd66fc1df9cdae8a8a6fafd58b08d58e17",
        "filename": "src/qt/receivecoinsdialog.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/70370ae502df8756f3a067a00ccd61b9fc819581/src/qt/receivecoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/70370ae502df8756f3a067a00ccd61b9fc819581/src/qt/receivecoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/receivecoinsdialog.cpp?ref=70370ae502df8756f3a067a00ccd61b9fc819581",
        "patch": "@@ -101,11 +101,11 @@ void ReceiveCoinsDialog::on_receiveButton_clicked()\n         address = model->getAddressTableModel()->addRow(AddressTableModel::Receive, label, \"\");\n     }\n     SendCoinsRecipient info(address, label,\n-            ui->reqAmount->value(), ui->reqMessage->text());\n+        ui->reqAmount->value(), ui->reqMessage->text());\n     ReceiveRequestDialog *dialog = new ReceiveRequestDialog(this);\n+    dialog->setAttribute(Qt::WA_DeleteOnClose);\n     dialog->setModel(model->getOptionsModel());\n     dialog->setInfo(info);\n-    dialog->setAttribute(Qt::WA_DeleteOnClose);\n     dialog->show();\n     clear();\n }"
      },
      {
        "sha": "1a9c7866dbc13f37c01f1e7401ff1c17587bf325",
        "filename": "src/qt/walletview.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/70370ae502df8756f3a067a00ccd61b9fc819581/src/qt/walletview.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/70370ae502df8756f3a067a00ccd61b9fc819581/src/qt/walletview.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletview.cpp?ref=70370ae502df8756f3a067a00ccd61b9fc819581",
        "patch": "@@ -263,8 +263,8 @@ void WalletView::usedSendingAddresses()\n     if(!walletModel)\n         return;\n     AddressBookPage *dlg = new AddressBookPage(AddressBookPage::ForEditing, AddressBookPage::SendingTab, this);\n-    dlg->setModel(walletModel->getAddressTableModel());\n     dlg->setAttribute(Qt::WA_DeleteOnClose);\n+    dlg->setModel(walletModel->getAddressTableModel());\n     dlg->show();\n }\n \n@@ -273,7 +273,7 @@ void WalletView::usedReceivingAddresses()\n     if(!walletModel)\n         return;\n     AddressBookPage *dlg = new AddressBookPage(AddressBookPage::ForEditing, AddressBookPage::ReceivingTab, this);\n-    dlg->setModel(walletModel->getAddressTableModel());\n     dlg->setAttribute(Qt::WA_DeleteOnClose);\n+    dlg->setModel(walletModel->getAddressTableModel());\n     dlg->show();\n }"
      },
      {
        "sha": "ecfa06ac5a0832451c3e79e2e62ddd3088176354",
        "filename": "src/qt/walletview.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/70370ae502df8756f3a067a00ccd61b9fc819581/src/qt/walletview.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/70370ae502df8756f3a067a00ccd61b9fc819581/src/qt/walletview.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletview.h?ref=70370ae502df8756f3a067a00ccd61b9fc819581",
        "patch": "@@ -96,6 +96,7 @@ public slots:\n \n     /** Re-emit encryption status signal */\n     void updateEncryptionStatus();\n+\n signals:\n     /** Signal that we want to show the main window */\n     void showNormalIfMinimized();"
      }
    ]
  },
  {
    "sha": "b2864d2fb35fa85e32c76e111f8900598e0bb69d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMjg2NGQyZmIzNWZhODVlMzJjNzZlMTExZjg5MDA1OThlMGJiNjlk",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2013-11-18T00:25:17Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2013-12-08T13:51:37Z"
      },
      "message": "Add main-specific node state",
      "tree": {
        "sha": "e34d33bf5a9309ce4e60ba1e1889a5bf1b6c7beb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e34d33bf5a9309ce4e60ba1e1889a5bf1b6c7beb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b2864d2fb35fa85e32c76e111f8900598e0bb69d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b2864d2fb35fa85e32c76e111f8900598e0bb69d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b2864d2fb35fa85e32c76e111f8900598e0bb69d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b2864d2fb35fa85e32c76e111f8900598e0bb69d/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "70370ae502df8756f3a067a00ccd61b9fc819581",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/70370ae502df8756f3a067a00ccd61b9fc819581",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/70370ae502df8756f3a067a00ccd61b9fc819581"
      }
    ],
    "stats": {
      "total": 206,
      "additions": 158,
      "deletions": 48
    },
    "files": [
      {
        "sha": "df3cedc202351c2d63a490e1efb3b612ea53575c",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b2864d2fb35fa85e32c76e111f8900598e0bb69d/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b2864d2fb35fa85e32c76e111f8900598e0bb69d/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=b2864d2fb35fa85e32c76e111f8900598e0bb69d",
        "patch": "@@ -120,6 +120,7 @@ void Shutdown()\n     GenerateBitcoins(false, NULL, 0);\n #endif\n     StopNode();\n+    UnregisterNodeSignals(GetNodeSignals());\n     {\n         LOCK(cs_main);\n #ifdef ENABLE_WALLET"
      },
      {
        "sha": "d130e9705eb5df18b8844bb1022793cfcbc033a2",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 90,
        "deletions": 12,
        "changes": 102,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b2864d2fb35fa85e32c76e111f8900598e0bb69d/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b2864d2fb35fa85e32c76e111f8900598e0bb69d/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=b2864d2fb35fa85e32c76e111f8900598e0bb69d",
        "patch": "@@ -153,24 +153,75 @@ void SyncWithWallets(const uint256 &hash, const CTransaction &tx, const CBlock *\n // Registration of network node signals.\n //\n \n-int static GetHeight()\n+namespace {\n+// Maintain validation-specific state about nodes, protected by cs_main, instead\n+// by CNode's own locks. This simplifies asynchronous operation, where\n+// processing of incoming data is done after the ProcessMessage call returns,\n+// and we're no longer holding the node's locks.\n+struct CNodeState {\n+    int nMisbehavior;\n+    bool fShouldBan;\n+    std::string name;\n+\n+    CNodeState() {\n+        nMisbehavior = 0;\n+        fShouldBan = false;\n+    }\n+};\n+\n+map<NodeId, CNodeState> mapNodeState;\n+\n+// Requires cs_main.\n+CNodeState *State(NodeId pnode) {\n+    map<NodeId, CNodeState>::iterator it = mapNodeState.find(pnode);\n+    if (it == mapNodeState.end())\n+        return NULL;\n+    return &it->second;\n+}\n+\n+int GetHeight()\n {\n     LOCK(cs_main);\n     return chainActive.Height();\n }\n \n+void InitializeNode(NodeId nodeid, const CNode *pnode) {\n+    LOCK(cs_main);\n+    CNodeState &state = mapNodeState.insert(std::make_pair(nodeid, CNodeState())).first->second;\n+    state.name = pnode->addrName;\n+}\n+\n+void FinalizeNode(NodeId nodeid) {\n+    LOCK(cs_main);\n+    mapNodeState.erase(nodeid);\n+}\n+}\n+\n+bool GetNodeStateStats(NodeId nodeid, CNodeStateStats &stats) {\n+    LOCK(cs_main);\n+    CNodeState *state = State(nodeid);\n+    if (state == NULL)\n+        return false;\n+    stats.nMisbehavior = state->nMisbehavior;\n+    return true;\n+}\n+\n void RegisterNodeSignals(CNodeSignals& nodeSignals)\n {\n     nodeSignals.GetHeight.connect(&GetHeight);\n     nodeSignals.ProcessMessages.connect(&ProcessMessages);\n     nodeSignals.SendMessages.connect(&SendMessages);\n+    nodeSignals.InitializeNode.connect(&InitializeNode);\n+    nodeSignals.FinalizeNode.connect(&FinalizeNode);\n }\n \n void UnregisterNodeSignals(CNodeSignals& nodeSignals)\n {\n     nodeSignals.GetHeight.disconnect(&GetHeight);\n     nodeSignals.ProcessMessages.disconnect(&ProcessMessages);\n     nodeSignals.SendMessages.disconnect(&SendMessages);\n+    nodeSignals.InitializeNode.disconnect(&InitializeNode);\n+    nodeSignals.FinalizeNode.disconnect(&FinalizeNode);\n }\n \n //////////////////////////////////////////////////////////////////////////////\n@@ -2915,6 +2966,23 @@ bool static AlreadyHave(const CInv& inv)\n }\n \n \n+void Misbehaving(NodeId pnode, int howmuch)\n+{\n+    if (howmuch == 0)\n+        return;\n+\n+    CNodeState *state = State(pnode);\n+    if (state == NULL)\n+        return;\n+\n+    state->nMisbehavior += howmuch;\n+    if (state->nMisbehavior >= GetArg(\"-banscore\", 100))\n+    {\n+        LogPrintf(\"Misbehaving: %s (%d -> %d) BAN THRESHOLD EXCEEDED\\n\", state->name.c_str(), state->nMisbehavior-howmuch, state->nMisbehavior);\n+        state->fShouldBan = true;\n+    } else\n+        LogPrintf(\"Misbehaving: %s (%d -> %d)\\n\", state->name.c_str(), state->nMisbehavior-howmuch, state->nMisbehavior);\n+}\n \n void static ProcessGetData(CNode* pfrom)\n {\n@@ -3048,7 +3116,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n         if (pfrom->nVersion != 0)\n         {\n             pfrom->PushMessage(\"reject\", strCommand, REJECT_DUPLICATE, string(\"Duplicate version message\"));\n-            pfrom->Misbehaving(1);\n+            Misbehaving(pfrom->GetId(), 1);\n             return false;\n         }\n \n@@ -3153,7 +3221,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n     else if (pfrom->nVersion == 0)\n     {\n         // Must have a version message before anything else\n-        pfrom->Misbehaving(1);\n+        Misbehaving(pfrom->GetId(), 1);\n         return false;\n     }\n \n@@ -3174,7 +3242,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n             return true;\n         if (vAddr.size() > 1000)\n         {\n-            pfrom->Misbehaving(20);\n+            Misbehaving(pfrom->GetId(), 20);\n             return error(\"message addr size() = %\"PRIszu\"\", vAddr.size());\n         }\n \n@@ -3237,7 +3305,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n         vRecv >> vInv;\n         if (vInv.size() > MAX_INV_SZ)\n         {\n-            pfrom->Misbehaving(20);\n+            Misbehaving(pfrom->GetId(), 20);\n             return error(\"message inv size() = %\"PRIszu\"\", vInv.size());\n         }\n \n@@ -3288,7 +3356,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n         vRecv >> vInv;\n         if (vInv.size() > MAX_INV_SZ)\n         {\n-            pfrom->Misbehaving(20);\n+            Misbehaving(pfrom->GetId(), 20);\n             return error(\"message getdata size() = %\"PRIszu\"\", vInv.size());\n         }\n \n@@ -3461,7 +3529,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n             pfrom->PushMessage(\"reject\", strCommand, state.GetRejectCode(),\n                                state.GetRejectReason(), inv.hash);\n             if (nDoS > 0)\n-                pfrom->Misbehaving(nDoS);\n+                Misbehaving(pfrom->GetId(), nDoS);\n         }\n     }\n \n@@ -3488,7 +3556,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n             pfrom->PushMessage(\"reject\", strCommand, state.GetRejectCode(),\n                                state.GetRejectReason(), inv.hash);\n             if (nDoS > 0)\n-                pfrom->Misbehaving(nDoS);\n+                Misbehaving(pfrom->GetId(), nDoS);\n         }\n     }\n \n@@ -3631,7 +3699,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n                 // This isn't a Misbehaving(100) (immediate ban) because the\n                 // peer might be an older or different implementation with\n                 // a different signature key, etc.\n-                pfrom->Misbehaving(10);\n+                Misbehaving(pfrom->GetId(), 10);\n             }\n         }\n     }\n@@ -3644,7 +3712,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n \n         if (!filter.IsWithinSizeConstraints())\n             // There is no excuse for sending a too-large filter\n-            pfrom->Misbehaving(100);\n+            Misbehaving(pfrom->GetId(), 100);\n         else\n         {\n             LOCK(pfrom->cs_filter);\n@@ -3665,13 +3733,13 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n         // and thus, the maximum size any matched object can have) in a filteradd message\n         if (vData.size() > MAX_SCRIPT_ELEMENT_SIZE)\n         {\n-            pfrom->Misbehaving(100);\n+            Misbehaving(pfrom->GetId(), 100);\n         } else {\n             LOCK(pfrom->cs_filter);\n             if (pfrom->pfilter)\n                 pfrom->pfilter->insert(vData);\n             else\n-                pfrom->Misbehaving(100);\n+                Misbehaving(pfrom->GetId(), 100);\n         }\n     }\n \n@@ -3936,6 +4004,16 @@ bool SendMessages(CNode* pto, bool fSendTrickle)\n         if (!lockMain)\n             return true;\n \n+        if (State(pto->GetId())->fShouldBan) {\n+            if (pto->addr.IsLocal())\n+                LogPrintf(\"Warning: not banning local node %s!\\n\", pto->addr.ToString().c_str());\n+            else {\n+                pto->fDisconnect = true;\n+                CNode::Ban(pto->addr);\n+            }\n+            State(pto->GetId())->fShouldBan = false;\n+        }\n+\n         // Start block sync\n         if (pto->fStartSync && !fImporting && !fReindex) {\n             pto->fStartSync = false;"
      },
      {
        "sha": "c52f37cc87122330c7a8985e2dacfee03f9875f3",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b2864d2fb35fa85e32c76e111f8900598e0bb69d/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b2864d2fb35fa85e32c76e111f8900598e0bb69d/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=b2864d2fb35fa85e32c76e111f8900598e0bb69d",
        "patch": "@@ -110,6 +110,7 @@ class CTxUndo;\n class CScriptCheck;\n class CValidationState;\n class CWalletInterface;\n+struct CNodeStateStats;\n \n struct CBlockTemplate;\n \n@@ -182,6 +183,8 @@ CBlockIndex * InsertBlockIndex(uint256 hash);\n bool VerifySignature(const CCoins& txFrom, const CTransaction& txTo, unsigned int nIn, unsigned int flags, int nHashType);\n /** Abort with a message */\n bool AbortNode(const std::string &msg);\n+/** Get statistics from node state */\n+bool GetNodeStateStats(NodeId nodeid, CNodeStateStats &stats);\n \n /** (try to) add transaction to memory pool **/\n bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransaction &tx, bool fLimitFree,\n@@ -194,6 +197,10 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n \n \n \n+struct CNodeStateStats {\n+    int nMisbehavior;\n+};\n+\n struct CDiskBlockPos\n {\n     int nFile;"
      },
      {
        "sha": "a6a04cdd46a93326171e1ebcd9c46a9fd7b847f9",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 22,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b2864d2fb35fa85e32c76e111f8900598e0bb69d/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b2864d2fb35fa85e32c76e111f8900598e0bb69d/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=b2864d2fb35fa85e32c76e111f8900598e0bb69d",
        "patch": "@@ -80,6 +80,9 @@ CCriticalSection cs_setservAddNodeAddresses;\n vector<std::string> vAddedNodes;\n CCriticalSection cs_vAddedNodes;\n \n+NodeId nLastNodeId = 0;\n+CCriticalSection cs_nLastNodeId;\n+\n static CSemaphore *semOutbound = NULL;\n \n // Signals for message handling\n@@ -581,35 +584,21 @@ bool CNode::IsBanned(CNetAddr ip)\n     return fResult;\n }\n \n-bool CNode::Misbehaving(int howmuch)\n-{\n-    if (addr.IsLocal())\n+bool CNode::Ban(const CNetAddr &addr) {\n+    int64_t banTime = GetTime()+GetArg(\"-bantime\", 60*60*24);  // Default 24-hour ban\n     {\n-        LogPrintf(\"Warning: Local node %s misbehaving (delta: %d)!\\n\", addrName.c_str(), howmuch);\n-        return false;\n+        LOCK(cs_setBanned);\n+        if (setBanned[addr] < banTime)\n+            setBanned[addr] = banTime;\n     }\n-\n-    nMisbehavior += howmuch;\n-    if (nMisbehavior >= GetArg(\"-banscore\", 100))\n-    {\n-        int64_t banTime = GetTime()+GetArg(\"-bantime\", 60*60*24);  // Default 24-hour ban\n-        LogPrintf(\"Misbehaving: %s (%d -> %d) DISCONNECTING\\n\", addr.ToString().c_str(), nMisbehavior-howmuch, nMisbehavior);\n-        {\n-            LOCK(cs_setBanned);\n-            if (setBanned[addr] < banTime)\n-                setBanned[addr] = banTime;\n-        }\n-        CloseSocketDisconnect();\n-        return true;\n-    } else\n-        LogPrintf(\"Misbehaving: %s (%d -> %d)\\n\", addr.ToString().c_str(), nMisbehavior-howmuch, nMisbehavior);\n-    return false;\n+    return true;\n }\n \n #undef X\n #define X(name) stats.name = name\n void CNode::copyStats(CNodeStats &stats)\n {\n+    stats.nodeid = this->GetId();\n     X(nServices);\n     X(nLastSend);\n     X(nLastRecv);\n@@ -619,7 +608,6 @@ void CNode::copyStats(CNodeStats &stats)\n     X(cleanSubVer);\n     X(fInbound);\n     X(nStartingHeight);\n-    X(nMisbehavior);\n     X(nSendBytes);\n     X(nRecvBytes);\n     stats.fSyncNode = (this == pnodeSync);"
      },
      {
        "sha": "5835001739b934aaf49828899becceba29e6928d",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 21,
        "deletions": 5,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b2864d2fb35fa85e32c76e111f8900598e0bb69d/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b2864d2fb35fa85e32c76e111f8900598e0bb69d/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=b2864d2fb35fa85e32c76e111f8900598e0bb69d",
        "patch": "@@ -57,14 +57,19 @@ void StartNode(boost::thread_group& threadGroup);\n bool StopNode();\n void SocketSendData(CNode *pnode);\n \n+typedef int NodeId;\n+\n // Signals for message handling\n struct CNodeSignals\n {\n     boost::signals2::signal<int ()> GetHeight;\n     boost::signals2::signal<bool (CNode*)> ProcessMessages;\n     boost::signals2::signal<bool (CNode*, bool)> SendMessages;\n+    boost::signals2::signal<void (NodeId, const CNode*)> InitializeNode;\n+    boost::signals2::signal<void (NodeId)> FinalizeNode;\n };\n \n+\n CNodeSignals& GetNodeSignals();\n \n \n@@ -109,12 +114,14 @@ extern limitedmap<CInv, int64_t> mapAlreadyAskedFor;\n extern std::vector<std::string> vAddedNodes;\n extern CCriticalSection cs_vAddedNodes;\n \n-\n+extern NodeId nLastNodeId;\n+extern CCriticalSection cs_nLastNodeId;\n \n \n class CNodeStats\n {\n public:\n+    NodeId nodeid;\n     uint64_t nServices;\n     int64_t nLastSend;\n     int64_t nLastRecv;\n@@ -124,7 +131,6 @@ class CNodeStats\n     std::string cleanSubVer;\n     bool fInbound;\n     int nStartingHeight;\n-    int nMisbehavior;\n     uint64_t nSendBytes;\n     uint64_t nRecvBytes;\n     bool fSyncNode;\n@@ -223,13 +229,13 @@ class CNode\n     CCriticalSection cs_filter;\n     CBloomFilter* pfilter;\n     int nRefCount;\n+    NodeId id;\n protected:\n \n     // Denial-of-service detection/prevention\n     // Key is IP address, value is banned-until-time\n     static std::map<CNetAddr, int64_t> setBanned;\n     static CCriticalSection cs_setBanned;\n-    int nMisbehavior;\n \n     // Basic fuzz-testing\n     void Fuzz(int nChance); // modifies ssSend\n@@ -289,7 +295,6 @@ class CNode\n         nStartingHeight = -1;\n         fStartSync = false;\n         fGetAddr = false;\n-        nMisbehavior = 0;\n         fRelayTxes = false;\n         setInventoryKnown.max_size(SendBufferSize() / 1000);\n         pfilter = new CBloomFilter();\n@@ -298,9 +303,16 @@ class CNode\n         nPingUsecTime = 0;\n         fPingQueued = false;\n \n+        {\n+            LOCK(cs_nLastNodeId);\n+            id = nLastNodeId++;\n+        }\n+\n         // Be shy and don't send version until we hear\n         if (hSocket != INVALID_SOCKET && !fInbound)\n             PushVersion();\n+\n+        GetNodeSignals().InitializeNode(GetId(), this);\n     }\n \n     ~CNode()\n@@ -312,6 +324,7 @@ class CNode\n         }\n         if (pfilter)\n             delete pfilter;\n+        GetNodeSignals().FinalizeNode(GetId());\n     }\n \n private:\n@@ -326,6 +339,9 @@ class CNode\n \n public:\n \n+    NodeId GetId() const {\n+      return id;\n+    }\n \n     int GetRefCount()\n     {\n@@ -673,7 +689,7 @@ class CNode\n     // new code.\n     static void ClearBanned(); // needed for unit testing\n     static bool IsBanned(CNetAddr ip);\n-    bool Misbehaving(int howmuch); // 1 == a little, 100 == a lot\n+    static bool Ban(const CNetAddr &ip);\n     void copyStats(CNodeStats &stats);\n \n     // Network stats"
      },
      {
        "sha": "93811e80ed6becd81b8c75f8f293ef50339dd003",
        "filename": "src/rpcnet.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 2,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b2864d2fb35fa85e32c76e111f8900598e0bb69d/src/rpcnet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b2864d2fb35fa85e32c76e111f8900598e0bb69d/src/rpcnet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcnet.cpp?ref=b2864d2fb35fa85e32c76e111f8900598e0bb69d",
        "patch": "@@ -2,6 +2,9 @@\n // Distributed under the MIT/X11 software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n #include \"rpcserver.h\"\n+\n+\n+#include \"main.h\"\n #include \"net.h\"\n #include \"netbase.h\"\n #include \"protocol.h\"\n@@ -114,7 +117,8 @@ Value getpeerinfo(const Array& params, bool fHelp)\n \n     BOOST_FOREACH(const CNodeStats& stats, vstats) {\n         Object obj;\n-\n+        CNodeStateStats statestats;\n+        bool fStateStats = GetNodeStateStats(stats.nodeid, statestats);\n         obj.push_back(Pair(\"addr\", stats.addrName));\n         if (!(stats.addrLocal.empty()))\n             obj.push_back(Pair(\"addrlocal\", stats.addrLocal));\n@@ -134,7 +138,9 @@ Value getpeerinfo(const Array& params, bool fHelp)\n         obj.push_back(Pair(\"subver\", stats.cleanSubVer));\n         obj.push_back(Pair(\"inbound\", stats.fInbound));\n         obj.push_back(Pair(\"startingheight\", stats.nStartingHeight));\n-        obj.push_back(Pair(\"banscore\", stats.nMisbehavior));\n+        if (fStateStats) {\n+            obj.push_back(Pair(\"banscore\", statestats.nMisbehavior));\n+        }\n         if (stats.fSyncNode)\n             obj.push_back(Pair(\"syncnode\", true));\n "
      },
      {
        "sha": "fbca09b4dc1d3d91860e8687834fc1c8133c6e98",
        "filename": "src/test/DoS_tests.cpp",
        "status": "modified",
        "additions": 19,
        "deletions": 7,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b2864d2fb35fa85e32c76e111f8900598e0bb69d/src/test/DoS_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b2864d2fb35fa85e32c76e111f8900598e0bb69d/src/test/DoS_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/DoS_tests.cpp?ref=b2864d2fb35fa85e32c76e111f8900598e0bb69d",
        "patch": "@@ -21,6 +21,7 @@\n // Tests this internal-to-main.cpp method:\n extern bool AddOrphanTx(const CTransaction& tx);\n extern unsigned int LimitOrphanTxSize(unsigned int nMaxOrphans);\n+extern void Misbehaving(NodeId nodeid, int howmuch);\n extern std::map<uint256, CTransaction> mapOrphanTransactions;\n extern std::map<uint256, std::set<uint256> > mapOrphanTransactionsByPrev;\n \n@@ -38,16 +39,21 @@ BOOST_AUTO_TEST_CASE(DoS_banning)\n     CNode::ClearBanned();\n     CAddress addr1(ip(0xa0b0c001));\n     CNode dummyNode1(INVALID_SOCKET, addr1, \"\", true);\n-    dummyNode1.Misbehaving(100); // Should get banned\n+    dummyNode1.nVersion = 1;\n+    Misbehaving(dummyNode1.GetId(), 100); // Should get banned\n+    SendMessages(&dummyNode1, false);\n     BOOST_CHECK(CNode::IsBanned(addr1));\n     BOOST_CHECK(!CNode::IsBanned(ip(0xa0b0c001|0x0000ff00))); // Different IP, not banned\n \n     CAddress addr2(ip(0xa0b0c002));\n     CNode dummyNode2(INVALID_SOCKET, addr2, \"\", true);\n-    dummyNode2.Misbehaving(50);\n+    dummyNode2.nVersion = 1;\n+    Misbehaving(dummyNode2.GetId(), 50);\n+    SendMessages(&dummyNode2, false);\n     BOOST_CHECK(!CNode::IsBanned(addr2)); // 2 not banned yet...\n     BOOST_CHECK(CNode::IsBanned(addr1));  // ... but 1 still should be\n-    dummyNode2.Misbehaving(50);\n+    Misbehaving(dummyNode2.GetId(), 50);\n+    SendMessages(&dummyNode2, false);\n     BOOST_CHECK(CNode::IsBanned(addr2));\n }\n \n@@ -57,11 +63,15 @@ BOOST_AUTO_TEST_CASE(DoS_banscore)\n     mapArgs[\"-banscore\"] = \"111\"; // because 11 is my favorite number\n     CAddress addr1(ip(0xa0b0c001));\n     CNode dummyNode1(INVALID_SOCKET, addr1, \"\", true);\n-    dummyNode1.Misbehaving(100);\n+    dummyNode1.nVersion = 1;\n+    Misbehaving(dummyNode1.GetId(), 100);\n+    SendMessages(&dummyNode1, false);\n     BOOST_CHECK(!CNode::IsBanned(addr1));\n-    dummyNode1.Misbehaving(10);\n+    Misbehaving(dummyNode1.GetId(), 10);\n+    SendMessages(&dummyNode1, false);\n     BOOST_CHECK(!CNode::IsBanned(addr1));\n-    dummyNode1.Misbehaving(1);\n+    Misbehaving(dummyNode1.GetId(), 1);\n+    SendMessages(&dummyNode1, false);\n     BOOST_CHECK(CNode::IsBanned(addr1));\n     mapArgs.erase(\"-banscore\");\n }\n@@ -74,8 +84,10 @@ BOOST_AUTO_TEST_CASE(DoS_bantime)\n \n     CAddress addr(ip(0xa0b0c001));\n     CNode dummyNode(INVALID_SOCKET, addr, \"\", true);\n+    dummyNode.nVersion = 1;\n \n-    dummyNode.Misbehaving(100);\n+    Misbehaving(dummyNode.GetId(), 100);\n+    SendMessages(&dummyNode, false);\n     BOOST_CHECK(CNode::IsBanned(addr));\n \n     SetMockTime(nStartTime+60*60);"
      },
      {
        "sha": "a4592fe803fe1751727284617d53038512767f75",
        "filename": "src/test/test_bitcoin.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b2864d2fb35fa85e32c76e111f8900598e0bb69d/src/test/test_bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b2864d2fb35fa85e32c76e111f8900598e0bb69d/src/test/test_bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/test_bitcoin.cpp?ref=b2864d2fb35fa85e32c76e111f8900598e0bb69d",
        "patch": "@@ -47,11 +47,13 @@ struct TestingSetup {\n         nScriptCheckThreads = 3;\n         for (int i=0; i < nScriptCheckThreads-1; i++)\n             threadGroup.create_thread(&ThreadScriptCheck);\n+        RegisterNodeSignals(GetNodeSignals());\n     }\n     ~TestingSetup()\n     {\n         threadGroup.interrupt_all();\n         threadGroup.join_all();\n+        UnregisterNodeSignals(GetNodeSignals());\n #ifdef ENABLE_WALLET\n         delete pwalletMain;\n         pwalletMain = NULL;"
      }
    ]
  },
  {
    "sha": "6027b460e40e7769930d0e89f18f011fa0f6c262",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2MDI3YjQ2MGU0MGU3NzY5OTMwZDBlODlmMThmMDExZmEwZjZjMjYy",
    "commit": {
      "author": {
        "name": "Michael Bauer",
        "email": "michael@m-bauer.org",
        "date": "2013-11-24T11:48:52Z"
      },
      "committer": {
        "name": "Michael Bauer",
        "email": "michael@m-bauer.org",
        "date": "2013-12-08T17:51:45Z"
      },
      "message": "Add rpc command 'getunconfirmedbalance' to obtain total unconfirmed balance\n\nConflicts:\n\tsrc/rpcserver.cpp",
      "tree": {
        "sha": "311b39159c8c4a55b2f928a0b33ec47768c295e9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/311b39159c8c4a55b2f928a0b33ec47768c295e9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6027b460e40e7769930d0e89f18f011fa0f6c262",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6027b460e40e7769930d0e89f18f011fa0f6c262",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6027b460e40e7769930d0e89f18f011fa0f6c262",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6027b460e40e7769930d0e89f18f011fa0f6c262/comments",
    "author": {
      "login": "TripleSpeeder",
      "id": 754478,
      "node_id": "MDQ6VXNlcjc1NDQ3OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/754478?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TripleSpeeder",
      "html_url": "https://github.com/TripleSpeeder",
      "followers_url": "https://api.github.com/users/TripleSpeeder/followers",
      "following_url": "https://api.github.com/users/TripleSpeeder/following{/other_user}",
      "gists_url": "https://api.github.com/users/TripleSpeeder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TripleSpeeder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TripleSpeeder/subscriptions",
      "organizations_url": "https://api.github.com/users/TripleSpeeder/orgs",
      "repos_url": "https://api.github.com/users/TripleSpeeder/repos",
      "events_url": "https://api.github.com/users/TripleSpeeder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TripleSpeeder/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TripleSpeeder",
      "id": 754478,
      "node_id": "MDQ6VXNlcjc1NDQ3OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/754478?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TripleSpeeder",
      "html_url": "https://github.com/TripleSpeeder",
      "followers_url": "https://api.github.com/users/TripleSpeeder/followers",
      "following_url": "https://api.github.com/users/TripleSpeeder/following{/other_user}",
      "gists_url": "https://api.github.com/users/TripleSpeeder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TripleSpeeder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TripleSpeeder/subscriptions",
      "organizations_url": "https://api.github.com/users/TripleSpeeder/orgs",
      "repos_url": "https://api.github.com/users/TripleSpeeder/repos",
      "events_url": "https://api.github.com/users/TripleSpeeder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TripleSpeeder/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fbbed19b78e3055103cdff8d31d24ced7e7e561b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fbbed19b78e3055103cdff8d31d24ced7e7e561b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fbbed19b78e3055103cdff8d31d24ced7e7e561b"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 11,
      "deletions": 0
    },
    "files": [
      {
        "sha": "403567203c64a6de7078c78b3955bd0b55e0f110",
        "filename": "src/rpcserver.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6027b460e40e7769930d0e89f18f011fa0f6c262/src/rpcserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6027b460e40e7769930d0e89f18f011fa0f6c262/src/rpcserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.cpp?ref=6027b460e40e7769930d0e89f18f011fa0f6c262",
        "patch": "@@ -253,6 +253,7 @@ static const CRPCCommand vRPCCommands[] =\n     { \"encryptwallet\",          &encryptwallet,          false,     false,      true },\n     { \"validateaddress\",        &validateaddress,        true,      false,      false },\n     { \"getbalance\",             &getbalance,             false,     false,      true },\n+    { \"getunconfirmedbalance\",  &getunconfirmedbalance,  false,     false,      true },\n     { \"move\",                   &movecmd,                false,     false,      true },\n     { \"sendfrom\",               &sendfrom,               false,     false,      true },\n     { \"sendmany\",               &sendmany,               false,     false,      true },"
      },
      {
        "sha": "9087be9e8885d9d1746bd9f3088e14512efcd295",
        "filename": "src/rpcserver.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6027b460e40e7769930d0e89f18f011fa0f6c262/src/rpcserver.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6027b460e40e7769930d0e89f18f011fa0f6c262/src/rpcserver.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.h?ref=6027b460e40e7769930d0e89f18f011fa0f6c262",
        "patch": "@@ -135,6 +135,7 @@ extern json_spirit::Value verifymessage(const json_spirit::Array& params, bool f\n extern json_spirit::Value getreceivedbyaddress(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value getreceivedbyaccount(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value getbalance(const json_spirit::Array& params, bool fHelp);\n+extern json_spirit::Value getunconfirmedbalance(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value movecmd(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value sendfrom(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value sendmany(const json_spirit::Array& params, bool fHelp);"
      },
      {
        "sha": "fe42b74dea9d78f5b390639cbe3e64951ef0fea0",
        "filename": "src/rpcwallet.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6027b460e40e7769930d0e89f18f011fa0f6c262/src/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6027b460e40e7769930d0e89f18f011fa0f6c262/src/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.cpp?ref=6027b460e40e7769930d0e89f18f011fa0f6c262",
        "patch": "@@ -767,6 +767,15 @@ Value getbalance(const Array& params, bool fHelp)\n     return ValueFromAmount(nBalance);\n }\n \n+Value getunconfirmedbalance(const Array &params, bool fHelp)\n+{\n+    if (fHelp || params.size() > 0)\n+        throw runtime_error(\n+                \"getunconfirmedbalance\\n\"\n+                \"Returns the server's total unconfirmed balance\\n\");\n+    return ValueFromAmount(pwalletMain->GetUnconfirmedBalance());\n+}\n+\n \n Value movecmd(const Array& params, bool fHelp)\n {"
      }
    ]
  },
  {
    "sha": "80ecf6702ad53488758d431133585b1e5c8b57f0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4MGVjZjY3MDJhZDUzNDg4NzU4ZDQzMTEzMzU4NWIxZTVjOGI1N2Yw",
    "commit": {
      "author": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2013-12-09T04:08:51Z"
      },
      "committer": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2013-12-09T04:10:10Z"
      },
      "message": "Add ThreadGetMyExternalIP to net thread group\n\nFixes #3372 -- crash at shutdown.",
      "tree": {
        "sha": "22172c5399a038628a94084d2d72c887c7a9e26d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/22172c5399a038628a94084d2d72c887c7a9e26d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/80ecf6702ad53488758d431133585b1e5c8b57f0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/80ecf6702ad53488758d431133585b1e5c8b57f0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/80ecf6702ad53488758d431133585b1e5c8b57f0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/80ecf6702ad53488758d431133585b1e5c8b57f0/comments",
    "author": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "70370ae502df8756f3a067a00ccd61b9fc819581",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/70370ae502df8756f3a067a00ccd61b9fc819581",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/70370ae502df8756f3a067a00ccd61b9fc819581"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "99a56a0a5d5a6e4735fe5441eb09cfbccf64def1",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/80ecf6702ad53488758d431133585b1e5c8b57f0/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/80ecf6702ad53488758d431133585b1e5c8b57f0/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=80ecf6702ad53488758d431133585b1e5c8b57f0",
        "patch": "@@ -1690,7 +1690,7 @@ bool BindListenPort(const CService &addrBind, string& strError)\n     return true;\n }\n \n-void static Discover()\n+void static Discover(boost::thread_group& threadGroup)\n {\n     if (!fDiscover)\n         return;\n@@ -1743,7 +1743,7 @@ void static Discover()\n \n     // Don't use external IPv4 discovery, when -onlynet=\"IPv6\"\n     if (!IsLimited(NET_IPV4))\n-        boost::thread(boost::bind(&TraceThread<void (*)()>, \"ext-ip\", &ThreadGetMyExternalIP));\n+        threadGroup.create_thread(boost::bind(&TraceThread<void (*)()>, \"ext-ip\", &ThreadGetMyExternalIP));\n }\n \n void StartNode(boost::thread_group& threadGroup)\n@@ -1757,7 +1757,7 @@ void StartNode(boost::thread_group& threadGroup)\n     if (pnodeLocalHost == NULL)\n         pnodeLocalHost = new CNode(INVALID_SOCKET, CAddress(CService(\"127.0.0.1\", 0), nLocalServices));\n \n-    Discover();\n+    Discover(threadGroup);\n \n     //\n     // Start threads"
      }
    ]
  },
  {
    "sha": "7202d9d9bf6e7442ea8e945b271dcec079ff5239",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3MjAyZDlkOWJmNmU3NDQyZWE4ZTk0NWIyNzFkY2VjMDc5ZmY1MjM5",
    "commit": {
      "author": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2013-12-09T07:33:24Z"
      },
      "committer": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2013-12-09T07:33:24Z"
      },
      "message": "Merge pull request #3276 from sipa/nodestate\n\nAdd main-specific node state & move ban score",
      "tree": {
        "sha": "e34d33bf5a9309ce4e60ba1e1889a5bf1b6c7beb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e34d33bf5a9309ce4e60ba1e1889a5bf1b6c7beb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7202d9d9bf6e7442ea8e945b271dcec079ff5239",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7202d9d9bf6e7442ea8e945b271dcec079ff5239",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7202d9d9bf6e7442ea8e945b271dcec079ff5239",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7202d9d9bf6e7442ea8e945b271dcec079ff5239/comments",
    "author": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "70370ae502df8756f3a067a00ccd61b9fc819581",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/70370ae502df8756f3a067a00ccd61b9fc819581",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/70370ae502df8756f3a067a00ccd61b9fc819581"
      },
      {
        "sha": "b2864d2fb35fa85e32c76e111f8900598e0bb69d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b2864d2fb35fa85e32c76e111f8900598e0bb69d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b2864d2fb35fa85e32c76e111f8900598e0bb69d"
      }
    ],
    "stats": {
      "total": 206,
      "additions": 158,
      "deletions": 48
    },
    "files": [
      {
        "sha": "df3cedc202351c2d63a490e1efb3b612ea53575c",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7202d9d9bf6e7442ea8e945b271dcec079ff5239/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7202d9d9bf6e7442ea8e945b271dcec079ff5239/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=7202d9d9bf6e7442ea8e945b271dcec079ff5239",
        "patch": "@@ -120,6 +120,7 @@ void Shutdown()\n     GenerateBitcoins(false, NULL, 0);\n #endif\n     StopNode();\n+    UnregisterNodeSignals(GetNodeSignals());\n     {\n         LOCK(cs_main);\n #ifdef ENABLE_WALLET"
      },
      {
        "sha": "d130e9705eb5df18b8844bb1022793cfcbc033a2",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 90,
        "deletions": 12,
        "changes": 102,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7202d9d9bf6e7442ea8e945b271dcec079ff5239/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7202d9d9bf6e7442ea8e945b271dcec079ff5239/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=7202d9d9bf6e7442ea8e945b271dcec079ff5239",
        "patch": "@@ -153,24 +153,75 @@ void SyncWithWallets(const uint256 &hash, const CTransaction &tx, const CBlock *\n // Registration of network node signals.\n //\n \n-int static GetHeight()\n+namespace {\n+// Maintain validation-specific state about nodes, protected by cs_main, instead\n+// by CNode's own locks. This simplifies asynchronous operation, where\n+// processing of incoming data is done after the ProcessMessage call returns,\n+// and we're no longer holding the node's locks.\n+struct CNodeState {\n+    int nMisbehavior;\n+    bool fShouldBan;\n+    std::string name;\n+\n+    CNodeState() {\n+        nMisbehavior = 0;\n+        fShouldBan = false;\n+    }\n+};\n+\n+map<NodeId, CNodeState> mapNodeState;\n+\n+// Requires cs_main.\n+CNodeState *State(NodeId pnode) {\n+    map<NodeId, CNodeState>::iterator it = mapNodeState.find(pnode);\n+    if (it == mapNodeState.end())\n+        return NULL;\n+    return &it->second;\n+}\n+\n+int GetHeight()\n {\n     LOCK(cs_main);\n     return chainActive.Height();\n }\n \n+void InitializeNode(NodeId nodeid, const CNode *pnode) {\n+    LOCK(cs_main);\n+    CNodeState &state = mapNodeState.insert(std::make_pair(nodeid, CNodeState())).first->second;\n+    state.name = pnode->addrName;\n+}\n+\n+void FinalizeNode(NodeId nodeid) {\n+    LOCK(cs_main);\n+    mapNodeState.erase(nodeid);\n+}\n+}\n+\n+bool GetNodeStateStats(NodeId nodeid, CNodeStateStats &stats) {\n+    LOCK(cs_main);\n+    CNodeState *state = State(nodeid);\n+    if (state == NULL)\n+        return false;\n+    stats.nMisbehavior = state->nMisbehavior;\n+    return true;\n+}\n+\n void RegisterNodeSignals(CNodeSignals& nodeSignals)\n {\n     nodeSignals.GetHeight.connect(&GetHeight);\n     nodeSignals.ProcessMessages.connect(&ProcessMessages);\n     nodeSignals.SendMessages.connect(&SendMessages);\n+    nodeSignals.InitializeNode.connect(&InitializeNode);\n+    nodeSignals.FinalizeNode.connect(&FinalizeNode);\n }\n \n void UnregisterNodeSignals(CNodeSignals& nodeSignals)\n {\n     nodeSignals.GetHeight.disconnect(&GetHeight);\n     nodeSignals.ProcessMessages.disconnect(&ProcessMessages);\n     nodeSignals.SendMessages.disconnect(&SendMessages);\n+    nodeSignals.InitializeNode.disconnect(&InitializeNode);\n+    nodeSignals.FinalizeNode.disconnect(&FinalizeNode);\n }\n \n //////////////////////////////////////////////////////////////////////////////\n@@ -2915,6 +2966,23 @@ bool static AlreadyHave(const CInv& inv)\n }\n \n \n+void Misbehaving(NodeId pnode, int howmuch)\n+{\n+    if (howmuch == 0)\n+        return;\n+\n+    CNodeState *state = State(pnode);\n+    if (state == NULL)\n+        return;\n+\n+    state->nMisbehavior += howmuch;\n+    if (state->nMisbehavior >= GetArg(\"-banscore\", 100))\n+    {\n+        LogPrintf(\"Misbehaving: %s (%d -> %d) BAN THRESHOLD EXCEEDED\\n\", state->name.c_str(), state->nMisbehavior-howmuch, state->nMisbehavior);\n+        state->fShouldBan = true;\n+    } else\n+        LogPrintf(\"Misbehaving: %s (%d -> %d)\\n\", state->name.c_str(), state->nMisbehavior-howmuch, state->nMisbehavior);\n+}\n \n void static ProcessGetData(CNode* pfrom)\n {\n@@ -3048,7 +3116,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n         if (pfrom->nVersion != 0)\n         {\n             pfrom->PushMessage(\"reject\", strCommand, REJECT_DUPLICATE, string(\"Duplicate version message\"));\n-            pfrom->Misbehaving(1);\n+            Misbehaving(pfrom->GetId(), 1);\n             return false;\n         }\n \n@@ -3153,7 +3221,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n     else if (pfrom->nVersion == 0)\n     {\n         // Must have a version message before anything else\n-        pfrom->Misbehaving(1);\n+        Misbehaving(pfrom->GetId(), 1);\n         return false;\n     }\n \n@@ -3174,7 +3242,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n             return true;\n         if (vAddr.size() > 1000)\n         {\n-            pfrom->Misbehaving(20);\n+            Misbehaving(pfrom->GetId(), 20);\n             return error(\"message addr size() = %\"PRIszu\"\", vAddr.size());\n         }\n \n@@ -3237,7 +3305,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n         vRecv >> vInv;\n         if (vInv.size() > MAX_INV_SZ)\n         {\n-            pfrom->Misbehaving(20);\n+            Misbehaving(pfrom->GetId(), 20);\n             return error(\"message inv size() = %\"PRIszu\"\", vInv.size());\n         }\n \n@@ -3288,7 +3356,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n         vRecv >> vInv;\n         if (vInv.size() > MAX_INV_SZ)\n         {\n-            pfrom->Misbehaving(20);\n+            Misbehaving(pfrom->GetId(), 20);\n             return error(\"message getdata size() = %\"PRIszu\"\", vInv.size());\n         }\n \n@@ -3461,7 +3529,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n             pfrom->PushMessage(\"reject\", strCommand, state.GetRejectCode(),\n                                state.GetRejectReason(), inv.hash);\n             if (nDoS > 0)\n-                pfrom->Misbehaving(nDoS);\n+                Misbehaving(pfrom->GetId(), nDoS);\n         }\n     }\n \n@@ -3488,7 +3556,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n             pfrom->PushMessage(\"reject\", strCommand, state.GetRejectCode(),\n                                state.GetRejectReason(), inv.hash);\n             if (nDoS > 0)\n-                pfrom->Misbehaving(nDoS);\n+                Misbehaving(pfrom->GetId(), nDoS);\n         }\n     }\n \n@@ -3631,7 +3699,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n                 // This isn't a Misbehaving(100) (immediate ban) because the\n                 // peer might be an older or different implementation with\n                 // a different signature key, etc.\n-                pfrom->Misbehaving(10);\n+                Misbehaving(pfrom->GetId(), 10);\n             }\n         }\n     }\n@@ -3644,7 +3712,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n \n         if (!filter.IsWithinSizeConstraints())\n             // There is no excuse for sending a too-large filter\n-            pfrom->Misbehaving(100);\n+            Misbehaving(pfrom->GetId(), 100);\n         else\n         {\n             LOCK(pfrom->cs_filter);\n@@ -3665,13 +3733,13 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n         // and thus, the maximum size any matched object can have) in a filteradd message\n         if (vData.size() > MAX_SCRIPT_ELEMENT_SIZE)\n         {\n-            pfrom->Misbehaving(100);\n+            Misbehaving(pfrom->GetId(), 100);\n         } else {\n             LOCK(pfrom->cs_filter);\n             if (pfrom->pfilter)\n                 pfrom->pfilter->insert(vData);\n             else\n-                pfrom->Misbehaving(100);\n+                Misbehaving(pfrom->GetId(), 100);\n         }\n     }\n \n@@ -3936,6 +4004,16 @@ bool SendMessages(CNode* pto, bool fSendTrickle)\n         if (!lockMain)\n             return true;\n \n+        if (State(pto->GetId())->fShouldBan) {\n+            if (pto->addr.IsLocal())\n+                LogPrintf(\"Warning: not banning local node %s!\\n\", pto->addr.ToString().c_str());\n+            else {\n+                pto->fDisconnect = true;\n+                CNode::Ban(pto->addr);\n+            }\n+            State(pto->GetId())->fShouldBan = false;\n+        }\n+\n         // Start block sync\n         if (pto->fStartSync && !fImporting && !fReindex) {\n             pto->fStartSync = false;"
      },
      {
        "sha": "c52f37cc87122330c7a8985e2dacfee03f9875f3",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7202d9d9bf6e7442ea8e945b271dcec079ff5239/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7202d9d9bf6e7442ea8e945b271dcec079ff5239/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=7202d9d9bf6e7442ea8e945b271dcec079ff5239",
        "patch": "@@ -110,6 +110,7 @@ class CTxUndo;\n class CScriptCheck;\n class CValidationState;\n class CWalletInterface;\n+struct CNodeStateStats;\n \n struct CBlockTemplate;\n \n@@ -182,6 +183,8 @@ CBlockIndex * InsertBlockIndex(uint256 hash);\n bool VerifySignature(const CCoins& txFrom, const CTransaction& txTo, unsigned int nIn, unsigned int flags, int nHashType);\n /** Abort with a message */\n bool AbortNode(const std::string &msg);\n+/** Get statistics from node state */\n+bool GetNodeStateStats(NodeId nodeid, CNodeStateStats &stats);\n \n /** (try to) add transaction to memory pool **/\n bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransaction &tx, bool fLimitFree,\n@@ -194,6 +197,10 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n \n \n \n+struct CNodeStateStats {\n+    int nMisbehavior;\n+};\n+\n struct CDiskBlockPos\n {\n     int nFile;"
      },
      {
        "sha": "a6a04cdd46a93326171e1ebcd9c46a9fd7b847f9",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 22,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7202d9d9bf6e7442ea8e945b271dcec079ff5239/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7202d9d9bf6e7442ea8e945b271dcec079ff5239/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=7202d9d9bf6e7442ea8e945b271dcec079ff5239",
        "patch": "@@ -80,6 +80,9 @@ CCriticalSection cs_setservAddNodeAddresses;\n vector<std::string> vAddedNodes;\n CCriticalSection cs_vAddedNodes;\n \n+NodeId nLastNodeId = 0;\n+CCriticalSection cs_nLastNodeId;\n+\n static CSemaphore *semOutbound = NULL;\n \n // Signals for message handling\n@@ -581,35 +584,21 @@ bool CNode::IsBanned(CNetAddr ip)\n     return fResult;\n }\n \n-bool CNode::Misbehaving(int howmuch)\n-{\n-    if (addr.IsLocal())\n+bool CNode::Ban(const CNetAddr &addr) {\n+    int64_t banTime = GetTime()+GetArg(\"-bantime\", 60*60*24);  // Default 24-hour ban\n     {\n-        LogPrintf(\"Warning: Local node %s misbehaving (delta: %d)!\\n\", addrName.c_str(), howmuch);\n-        return false;\n+        LOCK(cs_setBanned);\n+        if (setBanned[addr] < banTime)\n+            setBanned[addr] = banTime;\n     }\n-\n-    nMisbehavior += howmuch;\n-    if (nMisbehavior >= GetArg(\"-banscore\", 100))\n-    {\n-        int64_t banTime = GetTime()+GetArg(\"-bantime\", 60*60*24);  // Default 24-hour ban\n-        LogPrintf(\"Misbehaving: %s (%d -> %d) DISCONNECTING\\n\", addr.ToString().c_str(), nMisbehavior-howmuch, nMisbehavior);\n-        {\n-            LOCK(cs_setBanned);\n-            if (setBanned[addr] < banTime)\n-                setBanned[addr] = banTime;\n-        }\n-        CloseSocketDisconnect();\n-        return true;\n-    } else\n-        LogPrintf(\"Misbehaving: %s (%d -> %d)\\n\", addr.ToString().c_str(), nMisbehavior-howmuch, nMisbehavior);\n-    return false;\n+    return true;\n }\n \n #undef X\n #define X(name) stats.name = name\n void CNode::copyStats(CNodeStats &stats)\n {\n+    stats.nodeid = this->GetId();\n     X(nServices);\n     X(nLastSend);\n     X(nLastRecv);\n@@ -619,7 +608,6 @@ void CNode::copyStats(CNodeStats &stats)\n     X(cleanSubVer);\n     X(fInbound);\n     X(nStartingHeight);\n-    X(nMisbehavior);\n     X(nSendBytes);\n     X(nRecvBytes);\n     stats.fSyncNode = (this == pnodeSync);"
      },
      {
        "sha": "5835001739b934aaf49828899becceba29e6928d",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 21,
        "deletions": 5,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7202d9d9bf6e7442ea8e945b271dcec079ff5239/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7202d9d9bf6e7442ea8e945b271dcec079ff5239/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=7202d9d9bf6e7442ea8e945b271dcec079ff5239",
        "patch": "@@ -57,14 +57,19 @@ void StartNode(boost::thread_group& threadGroup);\n bool StopNode();\n void SocketSendData(CNode *pnode);\n \n+typedef int NodeId;\n+\n // Signals for message handling\n struct CNodeSignals\n {\n     boost::signals2::signal<int ()> GetHeight;\n     boost::signals2::signal<bool (CNode*)> ProcessMessages;\n     boost::signals2::signal<bool (CNode*, bool)> SendMessages;\n+    boost::signals2::signal<void (NodeId, const CNode*)> InitializeNode;\n+    boost::signals2::signal<void (NodeId)> FinalizeNode;\n };\n \n+\n CNodeSignals& GetNodeSignals();\n \n \n@@ -109,12 +114,14 @@ extern limitedmap<CInv, int64_t> mapAlreadyAskedFor;\n extern std::vector<std::string> vAddedNodes;\n extern CCriticalSection cs_vAddedNodes;\n \n-\n+extern NodeId nLastNodeId;\n+extern CCriticalSection cs_nLastNodeId;\n \n \n class CNodeStats\n {\n public:\n+    NodeId nodeid;\n     uint64_t nServices;\n     int64_t nLastSend;\n     int64_t nLastRecv;\n@@ -124,7 +131,6 @@ class CNodeStats\n     std::string cleanSubVer;\n     bool fInbound;\n     int nStartingHeight;\n-    int nMisbehavior;\n     uint64_t nSendBytes;\n     uint64_t nRecvBytes;\n     bool fSyncNode;\n@@ -223,13 +229,13 @@ class CNode\n     CCriticalSection cs_filter;\n     CBloomFilter* pfilter;\n     int nRefCount;\n+    NodeId id;\n protected:\n \n     // Denial-of-service detection/prevention\n     // Key is IP address, value is banned-until-time\n     static std::map<CNetAddr, int64_t> setBanned;\n     static CCriticalSection cs_setBanned;\n-    int nMisbehavior;\n \n     // Basic fuzz-testing\n     void Fuzz(int nChance); // modifies ssSend\n@@ -289,7 +295,6 @@ class CNode\n         nStartingHeight = -1;\n         fStartSync = false;\n         fGetAddr = false;\n-        nMisbehavior = 0;\n         fRelayTxes = false;\n         setInventoryKnown.max_size(SendBufferSize() / 1000);\n         pfilter = new CBloomFilter();\n@@ -298,9 +303,16 @@ class CNode\n         nPingUsecTime = 0;\n         fPingQueued = false;\n \n+        {\n+            LOCK(cs_nLastNodeId);\n+            id = nLastNodeId++;\n+        }\n+\n         // Be shy and don't send version until we hear\n         if (hSocket != INVALID_SOCKET && !fInbound)\n             PushVersion();\n+\n+        GetNodeSignals().InitializeNode(GetId(), this);\n     }\n \n     ~CNode()\n@@ -312,6 +324,7 @@ class CNode\n         }\n         if (pfilter)\n             delete pfilter;\n+        GetNodeSignals().FinalizeNode(GetId());\n     }\n \n private:\n@@ -326,6 +339,9 @@ class CNode\n \n public:\n \n+    NodeId GetId() const {\n+      return id;\n+    }\n \n     int GetRefCount()\n     {\n@@ -673,7 +689,7 @@ class CNode\n     // new code.\n     static void ClearBanned(); // needed for unit testing\n     static bool IsBanned(CNetAddr ip);\n-    bool Misbehaving(int howmuch); // 1 == a little, 100 == a lot\n+    static bool Ban(const CNetAddr &ip);\n     void copyStats(CNodeStats &stats);\n \n     // Network stats"
      },
      {
        "sha": "93811e80ed6becd81b8c75f8f293ef50339dd003",
        "filename": "src/rpcnet.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 2,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7202d9d9bf6e7442ea8e945b271dcec079ff5239/src/rpcnet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7202d9d9bf6e7442ea8e945b271dcec079ff5239/src/rpcnet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcnet.cpp?ref=7202d9d9bf6e7442ea8e945b271dcec079ff5239",
        "patch": "@@ -2,6 +2,9 @@\n // Distributed under the MIT/X11 software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n #include \"rpcserver.h\"\n+\n+\n+#include \"main.h\"\n #include \"net.h\"\n #include \"netbase.h\"\n #include \"protocol.h\"\n@@ -114,7 +117,8 @@ Value getpeerinfo(const Array& params, bool fHelp)\n \n     BOOST_FOREACH(const CNodeStats& stats, vstats) {\n         Object obj;\n-\n+        CNodeStateStats statestats;\n+        bool fStateStats = GetNodeStateStats(stats.nodeid, statestats);\n         obj.push_back(Pair(\"addr\", stats.addrName));\n         if (!(stats.addrLocal.empty()))\n             obj.push_back(Pair(\"addrlocal\", stats.addrLocal));\n@@ -134,7 +138,9 @@ Value getpeerinfo(const Array& params, bool fHelp)\n         obj.push_back(Pair(\"subver\", stats.cleanSubVer));\n         obj.push_back(Pair(\"inbound\", stats.fInbound));\n         obj.push_back(Pair(\"startingheight\", stats.nStartingHeight));\n-        obj.push_back(Pair(\"banscore\", stats.nMisbehavior));\n+        if (fStateStats) {\n+            obj.push_back(Pair(\"banscore\", statestats.nMisbehavior));\n+        }\n         if (stats.fSyncNode)\n             obj.push_back(Pair(\"syncnode\", true));\n "
      },
      {
        "sha": "fbca09b4dc1d3d91860e8687834fc1c8133c6e98",
        "filename": "src/test/DoS_tests.cpp",
        "status": "modified",
        "additions": 19,
        "deletions": 7,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7202d9d9bf6e7442ea8e945b271dcec079ff5239/src/test/DoS_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7202d9d9bf6e7442ea8e945b271dcec079ff5239/src/test/DoS_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/DoS_tests.cpp?ref=7202d9d9bf6e7442ea8e945b271dcec079ff5239",
        "patch": "@@ -21,6 +21,7 @@\n // Tests this internal-to-main.cpp method:\n extern bool AddOrphanTx(const CTransaction& tx);\n extern unsigned int LimitOrphanTxSize(unsigned int nMaxOrphans);\n+extern void Misbehaving(NodeId nodeid, int howmuch);\n extern std::map<uint256, CTransaction> mapOrphanTransactions;\n extern std::map<uint256, std::set<uint256> > mapOrphanTransactionsByPrev;\n \n@@ -38,16 +39,21 @@ BOOST_AUTO_TEST_CASE(DoS_banning)\n     CNode::ClearBanned();\n     CAddress addr1(ip(0xa0b0c001));\n     CNode dummyNode1(INVALID_SOCKET, addr1, \"\", true);\n-    dummyNode1.Misbehaving(100); // Should get banned\n+    dummyNode1.nVersion = 1;\n+    Misbehaving(dummyNode1.GetId(), 100); // Should get banned\n+    SendMessages(&dummyNode1, false);\n     BOOST_CHECK(CNode::IsBanned(addr1));\n     BOOST_CHECK(!CNode::IsBanned(ip(0xa0b0c001|0x0000ff00))); // Different IP, not banned\n \n     CAddress addr2(ip(0xa0b0c002));\n     CNode dummyNode2(INVALID_SOCKET, addr2, \"\", true);\n-    dummyNode2.Misbehaving(50);\n+    dummyNode2.nVersion = 1;\n+    Misbehaving(dummyNode2.GetId(), 50);\n+    SendMessages(&dummyNode2, false);\n     BOOST_CHECK(!CNode::IsBanned(addr2)); // 2 not banned yet...\n     BOOST_CHECK(CNode::IsBanned(addr1));  // ... but 1 still should be\n-    dummyNode2.Misbehaving(50);\n+    Misbehaving(dummyNode2.GetId(), 50);\n+    SendMessages(&dummyNode2, false);\n     BOOST_CHECK(CNode::IsBanned(addr2));\n }\n \n@@ -57,11 +63,15 @@ BOOST_AUTO_TEST_CASE(DoS_banscore)\n     mapArgs[\"-banscore\"] = \"111\"; // because 11 is my favorite number\n     CAddress addr1(ip(0xa0b0c001));\n     CNode dummyNode1(INVALID_SOCKET, addr1, \"\", true);\n-    dummyNode1.Misbehaving(100);\n+    dummyNode1.nVersion = 1;\n+    Misbehaving(dummyNode1.GetId(), 100);\n+    SendMessages(&dummyNode1, false);\n     BOOST_CHECK(!CNode::IsBanned(addr1));\n-    dummyNode1.Misbehaving(10);\n+    Misbehaving(dummyNode1.GetId(), 10);\n+    SendMessages(&dummyNode1, false);\n     BOOST_CHECK(!CNode::IsBanned(addr1));\n-    dummyNode1.Misbehaving(1);\n+    Misbehaving(dummyNode1.GetId(), 1);\n+    SendMessages(&dummyNode1, false);\n     BOOST_CHECK(CNode::IsBanned(addr1));\n     mapArgs.erase(\"-banscore\");\n }\n@@ -74,8 +84,10 @@ BOOST_AUTO_TEST_CASE(DoS_bantime)\n \n     CAddress addr(ip(0xa0b0c001));\n     CNode dummyNode(INVALID_SOCKET, addr, \"\", true);\n+    dummyNode.nVersion = 1;\n \n-    dummyNode.Misbehaving(100);\n+    Misbehaving(dummyNode.GetId(), 100);\n+    SendMessages(&dummyNode, false);\n     BOOST_CHECK(CNode::IsBanned(addr));\n \n     SetMockTime(nStartTime+60*60);"
      },
      {
        "sha": "a4592fe803fe1751727284617d53038512767f75",
        "filename": "src/test/test_bitcoin.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7202d9d9bf6e7442ea8e945b271dcec079ff5239/src/test/test_bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7202d9d9bf6e7442ea8e945b271dcec079ff5239/src/test/test_bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/test_bitcoin.cpp?ref=7202d9d9bf6e7442ea8e945b271dcec079ff5239",
        "patch": "@@ -47,11 +47,13 @@ struct TestingSetup {\n         nScriptCheckThreads = 3;\n         for (int i=0; i < nScriptCheckThreads-1; i++)\n             threadGroup.create_thread(&ThreadScriptCheck);\n+        RegisterNodeSignals(GetNodeSignals());\n     }\n     ~TestingSetup()\n     {\n         threadGroup.interrupt_all();\n         threadGroup.join_all();\n+        UnregisterNodeSignals(GetNodeSignals());\n #ifdef ENABLE_WALLET\n         delete pwalletMain;\n         pwalletMain = NULL;"
      }
    ]
  },
  {
    "sha": "4a85e067502a5df340e1b8c49df21e4c30a0de68",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0YTg1ZTA2NzUwMmE1ZGYzNDBlMWI4YzQ5ZGYyMWU0YzMwYTBkZTY4",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-08T14:26:08Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-09T07:44:57Z"
      },
      "message": "Allow mining RPCs with --disable-wallet\n\nThe following mining-related RPC calls don't use the wallet:\n\n- getnetworkhashps\n- getmininginfo\n- getblocktemplate\n- submitblock\n\nEnable them when compiling with --disable-wallet.",
      "tree": {
        "sha": "e036991e5f02c9d5017e9230cceace4433f1d297",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e036991e5f02c9d5017e9230cceace4433f1d297"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4a85e067502a5df340e1b8c49df21e4c30a0de68",
      "comment_count": 3,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4a85e067502a5df340e1b8c49df21e4c30a0de68",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4a85e067502a5df340e1b8c49df21e4c30a0de68",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4a85e067502a5df340e1b8c49df21e4c30a0de68/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "70370ae502df8756f3a067a00ccd61b9fc819581",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/70370ae502df8756f3a067a00ccd61b9fc819581",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/70370ae502df8756f3a067a00ccd61b9fc819581"
      }
    ],
    "stats": {
      "total": 64,
      "additions": 44,
      "deletions": 20
    },
    "files": [
      {
        "sha": "6cf88edffbd25a01bebfd71fc68c528ac1183a03",
        "filename": "doc/build-unix.md",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4a85e067502a5df340e1b8c49df21e4c30a0de68/doc/build-unix.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4a85e067502a5df340e1b8c49df21e4c30a0de68/doc/build-unix.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-unix.md?ref=4a85e067502a5df340e1b8c49df21e4c30a0de68",
        "patch": "@@ -187,3 +187,7 @@ disable-wallet mode with:\n     ./configure --disable-wallet\n \n In this case there is no dependency on Berkeley DB 4.8.\n+\n+Mining is also possible in disable-wallet mode, but only using the `getblocktemplate` RPC\n+call not `getwork`.\n+"
      },
      {
        "sha": "62dd63abef2f0d0875692da7a9e9c0024d88daee",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4a85e067502a5df340e1b8c49df21e4c30a0de68/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4a85e067502a5df340e1b8c49df21e4c30a0de68/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=4a85e067502a5df340e1b8c49df21e4c30a0de68",
        "patch": "@@ -48,9 +48,11 @@ libbitcoin_server_a_SOURCES = \\\n   keystore.cpp \\\n   leveldbwrapper.cpp \\\n   main.cpp \\\n+  miner.cpp \\\n   net.cpp \\\n   noui.cpp \\\n   rpcblockchain.cpp \\\n+  rpcmining.cpp \\\n   rpcnet.cpp \\\n   rpcrawtransaction.cpp \\\n   txdb.cpp \\\n@@ -61,9 +63,7 @@ libbitcoin_server_a_SOURCES = \\\n libbitcoin_wallet_a_SOURCES = \\\n   db.cpp \\\n   crypter.cpp \\\n-  miner.cpp \\\n   rpcdump.cpp \\\n-  rpcmining.cpp \\\n   rpcwallet.cpp \\\n   wallet.cpp \\\n   walletdb.cpp \\"
      },
      {
        "sha": "f4424b6ba5fa2b1243f751df28a55aa4fed5015c",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4a85e067502a5df340e1b8c49df21e4c30a0de68/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4a85e067502a5df340e1b8c49df21e4c30a0de68/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=4a85e067502a5df340e1b8c49df21e4c30a0de68",
        "patch": "@@ -113,8 +113,8 @@ void Shutdown()\n     RenameThread(\"bitcoin-shutoff\");\n     mempool.AddTransactionsUpdated(1);\n     StopRPCThreads();\n-#ifdef ENABLE_WALLET\n     ShutdownRPCMining();\n+#ifdef ENABLE_WALLET\n     if (pwalletMain)\n         bitdb.Flush(false);\n     GenerateBitcoins(false, NULL, 0);\n@@ -1041,10 +1041,8 @@ bool AppInit2(boost::thread_group& threadGroup, bool fForceServer)\n #endif\n \n     StartNode(threadGroup);\n-#ifdef ENABLE_WALLET\n     // InitRPCMining is needed here so getwork/getblocktemplate in the GUI debug console works properly.\n     InitRPCMining();\n-#endif\n     if (fServer)\n         StartRPCThreads();\n "
      },
      {
        "sha": "384ebd27cf659b26685b5523ad9c6d73cbf6202f",
        "filename": "src/miner.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 2,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4a85e067502a5df340e1b8c49df21e4c30a0de68/src/miner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4a85e067502a5df340e1b8c49df21e4c30a0de68/src/miner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.cpp?ref=4a85e067502a5df340e1b8c49df21e4c30a0de68",
        "patch": "@@ -10,8 +10,11 @@\n #include \"net.h\"\n #include \"wallet.h\"\n \n+#ifdef ENABLE_WALLET\n+// These globals are only used by the built-in miner\n double dHashesPerSec = 0.0;\n int64_t nHPSTimerStart = 0;\n+#endif\n \n //////////////////////////////////////////////////////////////////////////////\n //\n@@ -381,6 +384,7 @@ CBlockTemplate* CreateNewBlock(const CScript& scriptPubKeyIn)\n     return pblocktemplate.release();\n }\n \n+#ifdef ENABLE_WALLET\n CBlockTemplate* CreateNewBlockWithKey(CReserveKey& reservekey)\n {\n     CPubKey pubkey;\n@@ -390,6 +394,7 @@ CBlockTemplate* CreateNewBlockWithKey(CReserveKey& reservekey)\n     CScript scriptPubKey = CScript() << pubkey << OP_CHECKSIG;\n     return CreateNewBlock(scriptPubKey);\n }\n+#endif\n \n void IncrementExtraNonce(CBlock* pblock, CBlockIndex* pindexPrev, unsigned int& nExtraNonce)\n {\n@@ -454,7 +459,7 @@ void FormatHashBuffers(CBlock* pblock, char* pmidstate, char* pdata, char* phash\n     memcpy(phash1, &tmp.hash1, 64);\n }\n \n-\n+#ifdef ENABLE_WALLET\n bool CheckWork(CBlock* pblock, CWallet& wallet, CReserveKey& reservekey)\n {\n     uint256 hash = pblock->GetHash();\n@@ -665,5 +670,5 @@ void GenerateBitcoins(bool fGenerate, CWallet* pwallet, int nThreads)\n         minerThreads->create_thread(boost::bind(&BitcoinMiner, pwallet));\n }\n \n-\n+#endif\n "
      },
      {
        "sha": "b81433120ed875dc74e6db9cd2ce2b566ddc6149",
        "filename": "src/rpcmining.cpp",
        "status": "modified",
        "additions": 18,
        "deletions": 6,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4a85e067502a5df340e1b8c49df21e4c30a0de68/src/rpcmining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4a85e067502a5df340e1b8c49df21e4c30a0de68/src/rpcmining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcmining.cpp?ref=4a85e067502a5df340e1b8c49df21e4c30a0de68",
        "patch": "@@ -20,7 +20,8 @@\n using namespace json_spirit;\n using namespace std;\n \n-// Key used by getwork/getblocktemplate miners.\n+#ifdef ENABLE_WALLET\n+// Key used by getwork miners.\n // Allocated in InitRPCMining, free'd in ShutdownRPCMining\n static CReserveKey* pMiningKey = NULL;\n \n@@ -40,6 +41,14 @@ void ShutdownRPCMining()\n \n     delete pMiningKey; pMiningKey = NULL;\n }\n+#else\n+void InitRPCMining()\n+{\n+}\n+void ShutdownRPCMining()\n+{\n+}\n+#endif\n \n // Return average network hashes per second based on the last 'lookup' blocks,\n // or from the last difficulty change if 'lookup' is nonpositive.\n@@ -99,7 +108,7 @@ Value getnetworkhashps(const Array& params, bool fHelp)\n     return GetNetworkHashPS(params.size() > 0 ? params[0].get_int() : 120, params.size() > 1 ? params[1].get_int() : -1);\n }\n \n-\n+#ifdef ENABLE_WALLET\n Value getgenerate(const Array& params, bool fHelp)\n {\n     if (fHelp || params.size() != 0)\n@@ -197,7 +206,6 @@ Value setgenerate(const Array& params, bool fHelp)\n     return Value::null;\n }\n \n-\n Value gethashespersec(const Array& params, bool fHelp)\n {\n     if (fHelp || params.size() != 0)\n@@ -216,6 +224,7 @@ Value gethashespersec(const Array& params, bool fHelp)\n         return (boost::int64_t)0;\n     return (boost::int64_t)dHashesPerSec;\n }\n+#endif\n \n \n Value getmininginfo(const Array& params, bool fHelp)\n@@ -248,16 +257,19 @@ Value getmininginfo(const Array& params, bool fHelp)\n     obj.push_back(Pair(\"currentblocktx\",   (uint64_t)nLastBlockTx));\n     obj.push_back(Pair(\"difficulty\",       (double)GetDifficulty()));\n     obj.push_back(Pair(\"errors\",           GetWarnings(\"statusbar\")));\n-    obj.push_back(Pair(\"generate\",         getgenerate(params, false)));\n     obj.push_back(Pair(\"genproclimit\",     (int)GetArg(\"-genproclimit\", -1)));\n-    obj.push_back(Pair(\"hashespersec\",     gethashespersec(params, false)));\n     obj.push_back(Pair(\"networkhashps\",    getnetworkhashps(params, false)));\n     obj.push_back(Pair(\"pooledtx\",         (uint64_t)mempool.size()));\n     obj.push_back(Pair(\"testnet\",          TestNet()));\n+#ifdef ENABLE_WALLET\n+    obj.push_back(Pair(\"generate\",         getgenerate(params, false)));\n+    obj.push_back(Pair(\"hashespersec\",     gethashespersec(params, false)));\n+#endif\n     return obj;\n }\n \n \n+#ifdef ENABLE_WALLET\n Value getwork(const Array& params, bool fHelp)\n {\n     if (fHelp || params.size() > 1)\n@@ -381,7 +393,7 @@ Value getwork(const Array& params, bool fHelp)\n         return CheckWork(pblock, *pwalletMain, *pMiningKey);\n     }\n }\n-\n+#endif\n \n Value getblocktemplate(const Array& params, bool fHelp)\n {"
      },
      {
        "sha": "c95f450c8292b1a33555816e440c35fe9545a609",
        "filename": "src/rpcserver.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 7,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4a85e067502a5df340e1b8c49df21e4c30a0de68/src/rpcserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4a85e067502a5df340e1b8c49df21e4c30a0de68/src/rpcserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.cpp?ref=4a85e067502a5df340e1b8c49df21e4c30a0de68",
        "patch": "@@ -248,12 +248,14 @@ static const CRPCCommand vRPCCommands[] =\n     { \"gettxout\",               &gettxout,               true,      false,      false },\n     { \"verifychain\",            &verifychain,            true,      false,      false },\n \n-#ifdef ENABLE_WALLET\n+    /* Mining */\n     { \"getnetworkhashps\",       &getnetworkhashps,       true,      false,      false },\n-    { \"getgenerate\",            &getgenerate,            true,      false,      false },\n-    { \"setgenerate\",            &setgenerate,            true,      true,       false },\n-    { \"gethashespersec\",        &gethashespersec,        true,      false,      false },\n     { \"getmininginfo\",          &getmininginfo,          true,      false,      false },\n+    { \"getblocktemplate\",       &getblocktemplate,       true,      false,      false },\n+    { \"submitblock\",            &submitblock,            false,     false,      false },\n+\n+#ifdef ENABLE_WALLET\n+    /* Wallet */\n     { \"getnewaddress\",          &getnewaddress,          true,      false,      true },\n     { \"getaccountaddress\",      &getaccountaddress,      true,      false,      true },\n     { \"getrawchangeaddress\",    &getrawchangeaddress,    true,      false,      true },\n@@ -283,10 +285,7 @@ static const CRPCCommand vRPCCommands[] =\n     { \"listaddressgroupings\",   &listaddressgroupings,   false,     false,      true },\n     { \"signmessage\",            &signmessage,            false,     false,      true },\n     { \"verifymessage\",          &verifymessage,          false,     false,      false },\n-    { \"getwork\",                &getwork,                true,      false,      true },\n     { \"listaccounts\",           &listaccounts,           false,     false,      true },\n-    { \"getblocktemplate\",       &getblocktemplate,       true,      false,      false },\n-    { \"submitblock\",            &submitblock,            false,     false,      false },\n     { \"listsinceblock\",         &listsinceblock,         false,     false,      true },\n     { \"dumpprivkey\",            &dumpprivkey,            true,      false,      true },\n     { \"dumpwallet\",             &dumpwallet,             true,      false,      true },\n@@ -295,6 +294,12 @@ static const CRPCCommand vRPCCommands[] =\n     { \"listunspent\",            &listunspent,            false,     false,      true },\n     { \"lockunspent\",            &lockunspent,            false,     false,      true },\n     { \"listlockunspent\",        &listlockunspent,        false,     false,      true },\n+\n+    /* Wallet-enabled mining */\n+    { \"getgenerate\",            &getgenerate,            true,      false,      false },\n+    { \"setgenerate\",            &setgenerate,            true,      true,       false },\n+    { \"gethashespersec\",        &gethashespersec,        true,      false,      false },\n+    { \"getwork\",                &getwork,                true,      false,      true },\n #endif // ENABLE_WALLET\n };\n "
      }
    ]
  },
  {
    "sha": "acfa03337e8224ef778d4a5b2177271611f74593",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphY2ZhMDMzMzdlODIyNGVmNzc4ZDRhNWIyMTc3MjcxNjExZjc0NTkz",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-09T07:55:56Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-09T07:55:56Z"
      },
      "message": "Move internal miner functionality together",
      "tree": {
        "sha": "40972f13b08f7435bb291e4707cbf90eea76d7ba",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/40972f13b08f7435bb291e4707cbf90eea76d7ba"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/acfa03337e8224ef778d4a5b2177271611f74593",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/acfa03337e8224ef778d4a5b2177271611f74593",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/acfa03337e8224ef778d4a5b2177271611f74593",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/acfa03337e8224ef778d4a5b2177271611f74593/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4a85e067502a5df340e1b8c49df21e4c30a0de68",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4a85e067502a5df340e1b8c49df21e4c30a0de68",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4a85e067502a5df340e1b8c49df21e4c30a0de68"
      }
    ],
    "stats": {
      "total": 105,
      "additions": 52,
      "deletions": 53
    },
    "files": [
      {
        "sha": "49f6ec6b957db05e23efe7a710531c473dae198d",
        "filename": "src/miner.cpp",
        "status": "modified",
        "additions": 52,
        "deletions": 53,
        "changes": 105,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/acfa03337e8224ef778d4a5b2177271611f74593/src/miner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/acfa03337e8224ef778d4a5b2177271611f74593/src/miner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.cpp?ref=acfa03337e8224ef778d4a5b2177271611f74593",
        "patch": "@@ -10,12 +10,6 @@\n #include \"net.h\"\n #include \"wallet.h\"\n \n-#ifdef ENABLE_WALLET\n-// These globals are only used by the built-in miner\n-double dHashesPerSec = 0.0;\n-int64_t nHPSTimerStart = 0;\n-#endif\n-\n //////////////////////////////////////////////////////////////////////////////\n //\n // BitcoinMiner\n@@ -57,41 +51,6 @@ void SHA256Transform(void* pstate, void* pinput, const void* pinit)\n         ((uint32_t*)pstate)[i] = ctx.h[i];\n }\n \n-//\n-// ScanHash scans nonces looking for a hash with at least some zero bits.\n-// It operates on big endian data.  Caller does the byte reversing.\n-// All input buffers are 16-byte aligned.  nNonce is usually preserved\n-// between calls, but periodically or if nNonce is 0xffff0000 or above,\n-// the block is rebuilt and nNonce starts over at zero.\n-//\n-unsigned int static ScanHash_CryptoPP(char* pmidstate, char* pdata, char* phash1, char* phash, unsigned int& nHashesDone)\n-{\n-    unsigned int& nNonce = *(unsigned int*)(pdata + 12);\n-    for (;;)\n-    {\n-        // Crypto++ SHA256\n-        // Hash pdata using pmidstate as the starting state into\n-        // pre-formatted buffer phash1, then hash phash1 into phash\n-        nNonce++;\n-        SHA256Transform(phash1, pdata, pmidstate);\n-        SHA256Transform(phash, phash1, pSHA256InitState);\n-\n-        // Return the nonce if the hash has at least some zero bits,\n-        // caller will check if it has enough to reach the target\n-        if (((unsigned short*)phash)[14] == 0)\n-            return nNonce;\n-\n-        // If nothing found after trying for a while, return -1\n-        if ((nNonce & 0xffff) == 0)\n-        {\n-            nHashesDone = 0xffff+1;\n-            return (unsigned int) -1;\n-        }\n-        if ((nNonce & 0xfff) == 0)\n-            boost::this_thread::interruption_point();\n-    }\n-}\n-\n // Some explaining would be appreciated\n class COrphan\n {\n@@ -384,18 +343,6 @@ CBlockTemplate* CreateNewBlock(const CScript& scriptPubKeyIn)\n     return pblocktemplate.release();\n }\n \n-#ifdef ENABLE_WALLET\n-CBlockTemplate* CreateNewBlockWithKey(CReserveKey& reservekey)\n-{\n-    CPubKey pubkey;\n-    if (!reservekey.GetReservedKey(pubkey))\n-        return NULL;\n-\n-    CScript scriptPubKey = CScript() << pubkey << OP_CHECKSIG;\n-    return CreateNewBlock(scriptPubKey);\n-}\n-#endif\n-\n void IncrementExtraNonce(CBlock* pblock, CBlockIndex* pindexPrev, unsigned int& nExtraNonce)\n {\n     // Update nExtraNonce\n@@ -460,6 +407,58 @@ void FormatHashBuffers(CBlock* pblock, char* pmidstate, char* pdata, char* phash\n }\n \n #ifdef ENABLE_WALLET\n+//////////////////////////////////////////////////////////////////////////////\n+//\n+// Internal miner\n+//\n+double dHashesPerSec = 0.0;\n+int64_t nHPSTimerStart = 0;\n+\n+//\n+// ScanHash scans nonces looking for a hash with at least some zero bits.\n+// It operates on big endian data.  Caller does the byte reversing.\n+// All input buffers are 16-byte aligned.  nNonce is usually preserved\n+// between calls, but periodically or if nNonce is 0xffff0000 or above,\n+// the block is rebuilt and nNonce starts over at zero.\n+//\n+unsigned int static ScanHash_CryptoPP(char* pmidstate, char* pdata, char* phash1, char* phash, unsigned int& nHashesDone)\n+{\n+    unsigned int& nNonce = *(unsigned int*)(pdata + 12);\n+    for (;;)\n+    {\n+        // Crypto++ SHA256\n+        // Hash pdata using pmidstate as the starting state into\n+        // pre-formatted buffer phash1, then hash phash1 into phash\n+        nNonce++;\n+        SHA256Transform(phash1, pdata, pmidstate);\n+        SHA256Transform(phash, phash1, pSHA256InitState);\n+\n+        // Return the nonce if the hash has at least some zero bits,\n+        // caller will check if it has enough to reach the target\n+        if (((unsigned short*)phash)[14] == 0)\n+            return nNonce;\n+\n+        // If nothing found after trying for a while, return -1\n+        if ((nNonce & 0xffff) == 0)\n+        {\n+            nHashesDone = 0xffff+1;\n+            return (unsigned int) -1;\n+        }\n+        if ((nNonce & 0xfff) == 0)\n+            boost::this_thread::interruption_point();\n+    }\n+}\n+\n+CBlockTemplate* CreateNewBlockWithKey(CReserveKey& reservekey)\n+{\n+    CPubKey pubkey;\n+    if (!reservekey.GetReservedKey(pubkey))\n+        return NULL;\n+\n+    CScript scriptPubKey = CScript() << pubkey << OP_CHECKSIG;\n+    return CreateNewBlock(scriptPubKey);\n+}\n+\n bool CheckWork(CBlock* pblock, CWallet& wallet, CReserveKey& reservekey)\n {\n     uint256 hash = pblock->GetHash();"
      }
    ]
  },
  {
    "sha": "fbc7a96d03200e55021c9e04f7fa9114272e6960",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYmM3YTk2ZDAzMjAwZTU1MDIxYzllMDRmN2ZhOTExNDI3MmU2OTYw",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-09T08:22:15Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-09T08:25:10Z"
      },
      "message": "Re-enable miner tests in --disable-wallet mode\n\nUse a fixed script instead of a CReserveKey from the wallet.\nThis does not affect the functionality or result of the tests as they never\ncheck the state of the wallet in the first place.",
      "tree": {
        "sha": "fd313e48fab02e44a5e1aed20f086bb8caf09b3f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fd313e48fab02e44a5e1aed20f086bb8caf09b3f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fbc7a96d03200e55021c9e04f7fa9114272e6960",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fbc7a96d03200e55021c9e04f7fa9114272e6960",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fbc7a96d03200e55021c9e04f7fa9114272e6960",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fbc7a96d03200e55021c9e04f7fa9114272e6960/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "acfa03337e8224ef778d4a5b2177271611f74593",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/acfa03337e8224ef778d4a5b2177271611f74593",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/acfa03337e8224ef778d4a5b2177271611f74593"
      }
    ],
    "stats": {
      "total": 29,
      "additions": 14,
      "deletions": 15
    },
    "files": [
      {
        "sha": "ccc8da1690e39458b5bd24a0a2a8913e83d078cf",
        "filename": "src/test/Makefile.am",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fbc7a96d03200e55021c9e04f7fa9114272e6960/src/test/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fbc7a96d03200e55021c9e04f7fa9114272e6960/src/test/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/Makefile.am?ref=fbc7a96d03200e55021c9e04f7fa9114272e6960",
        "patch": "@@ -31,14 +31,14 @@ test_bitcoin_SOURCES = alert_tests.cpp \\\n   allocator_tests.cpp base32_tests.cpp base58_tests.cpp base64_tests.cpp \\\n   bignum_tests.cpp bloom_tests.cpp canonical_tests.cpp checkblock_tests.cpp \\\n   Checkpoints_tests.cpp compress_tests.cpp DoS_tests.cpp getarg_tests.cpp \\\n-  key_tests.cpp mruset_tests.cpp multisig_tests.cpp \\\n+  key_tests.cpp miner_tests.cpp mruset_tests.cpp multisig_tests.cpp \\\n   netbase_tests.cpp pmt_tests.cpp rpc_tests.cpp script_P2SH_tests.cpp \\\n   script_tests.cpp serialize_tests.cpp sigopcount_tests.cpp test_bitcoin.cpp \\\n   transaction_tests.cpp uint160_tests.cpp uint256_tests.cpp util_tests.cpp \\\n   sighash_tests.cpp $(JSON_TEST_FILES) $(RAW_TEST_FILES)\n \n if ENABLE_WALLET\n-test_bitcoin_SOURCES += accounting_tests.cpp wallet_tests.cpp miner_tests.cpp rpc_wallet_tests.cpp\n+test_bitcoin_SOURCES += accounting_tests.cpp wallet_tests.cpp rpc_wallet_tests.cpp\n endif\n \n nodist_test_bitcoin_SOURCES = $(BUILT_SOURCES)"
      },
      {
        "sha": "ea6abb7e9afc2771612a1bbdcb5b04c8a5ff447e",
        "filename": "src/test/miner_tests.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 13,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fbc7a96d03200e55021c9e04f7fa9114272e6960/src/test/miner_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fbc7a96d03200e55021c9e04f7fa9114272e6960/src/test/miner_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/miner_tests.cpp?ref=fbc7a96d03200e55021c9e04f7fa9114272e6960",
        "patch": "@@ -8,7 +8,6 @@\n \n #include <boost/test/unit_test.hpp>\n \n-extern CWallet* pwalletMain;\n extern void SHA256Transform(void* pstate, void* pinput, const void* pinit);\n \n BOOST_AUTO_TEST_SUITE(miner_tests)\n@@ -51,7 +50,7 @@ struct {\n // NOTE: These tests rely on CreateNewBlock doing its own self-validation!\n BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)\n {\n-    CReserveKey reservekey(pwalletMain);\n+    CScript scriptPubKey = CScript() << ParseHex(\"04678afdb0fe5548271967f1a67130b7105cd6a828e03909a67962e0ea1f61deb649f6bc3f4cef38c4f35504e51ec112de5c384df7ba0b8d578a4c702b6bf11d5f\") << OP_CHECKSIG;\n     CBlockTemplate *pblocktemplate;\n     CTransaction tx;\n     CScript script;\n@@ -60,7 +59,7 @@ BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)\n     LOCK(cs_main);\n \n     // Simple block creation, nothing special yet:\n-    BOOST_CHECK(pblocktemplate = CreateNewBlockWithKey(reservekey));\n+    BOOST_CHECK(pblocktemplate = CreateNewBlock(scriptPubKey));\n \n     // We can't make transactions until we have inputs\n     // Therefore, load 100 blocks :)\n@@ -86,7 +85,7 @@ BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)\n     delete pblocktemplate;\n \n     // Just to make sure we can still make simple blocks\n-    BOOST_CHECK(pblocktemplate = CreateNewBlockWithKey(reservekey));\n+    BOOST_CHECK(pblocktemplate = CreateNewBlock(scriptPubKey));\n     delete pblocktemplate;\n \n     // block sigops > limit: 1000 CHECKMULTISIG + 1\n@@ -104,7 +103,7 @@ BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)\n         mempool.addUnchecked(hash, CTxMemPoolEntry(tx, 11, GetTime(), 111.0, 11));\n         tx.vin[0].prevout.hash = hash;\n     }\n-    BOOST_CHECK(pblocktemplate = CreateNewBlockWithKey(reservekey));\n+    BOOST_CHECK(pblocktemplate = CreateNewBlock(scriptPubKey));\n     delete pblocktemplate;\n     mempool.clear();\n \n@@ -124,14 +123,14 @@ BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)\n         mempool.addUnchecked(hash, CTxMemPoolEntry(tx, 11, GetTime(), 111.0, 11));\n         tx.vin[0].prevout.hash = hash;\n     }\n-    BOOST_CHECK(pblocktemplate = CreateNewBlockWithKey(reservekey));\n+    BOOST_CHECK(pblocktemplate = CreateNewBlock(scriptPubKey));\n     delete pblocktemplate;\n     mempool.clear();\n \n     // orphan in mempool\n     hash = tx.GetHash();\n     mempool.addUnchecked(hash, CTxMemPoolEntry(tx, 11, GetTime(), 111.0, 11));\n-    BOOST_CHECK(pblocktemplate = CreateNewBlockWithKey(reservekey));\n+    BOOST_CHECK(pblocktemplate = CreateNewBlock(scriptPubKey));\n     delete pblocktemplate;\n     mempool.clear();\n \n@@ -149,7 +148,7 @@ BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)\n     tx.vout[0].nValue = 5900000000LL;\n     hash = tx.GetHash();\n     mempool.addUnchecked(hash, CTxMemPoolEntry(tx, 11, GetTime(), 111.0, 11));\n-    BOOST_CHECK(pblocktemplate = CreateNewBlockWithKey(reservekey));\n+    BOOST_CHECK(pblocktemplate = CreateNewBlock(scriptPubKey));\n     delete pblocktemplate;\n     mempool.clear();\n \n@@ -160,7 +159,7 @@ BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)\n     tx.vout[0].nValue = 0;\n     hash = tx.GetHash();\n     mempool.addUnchecked(hash, CTxMemPoolEntry(tx, 11, GetTime(), 111.0, 11));\n-    BOOST_CHECK(pblocktemplate = CreateNewBlockWithKey(reservekey));\n+    BOOST_CHECK(pblocktemplate = CreateNewBlock(scriptPubKey));\n     delete pblocktemplate;\n     mempool.clear();\n \n@@ -178,7 +177,7 @@ BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)\n     tx.vout[0].nValue -= 1000000;\n     hash = tx.GetHash();\n     mempool.addUnchecked(hash, CTxMemPoolEntry(tx, 11, GetTime(), 111.0, 11));\n-    BOOST_CHECK(pblocktemplate = CreateNewBlockWithKey(reservekey));\n+    BOOST_CHECK(pblocktemplate = CreateNewBlock(scriptPubKey));\n     delete pblocktemplate;\n     mempool.clear();\n \n@@ -192,17 +191,17 @@ BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)\n     tx.vout[0].scriptPubKey = CScript() << OP_2;\n     hash = tx.GetHash();\n     mempool.addUnchecked(hash, CTxMemPoolEntry(tx, 11, GetTime(), 111.0, 11));\n-    BOOST_CHECK(pblocktemplate = CreateNewBlockWithKey(reservekey));\n+    BOOST_CHECK(pblocktemplate = CreateNewBlock(scriptPubKey));\n     delete pblocktemplate;\n     mempool.clear();\n \n     // subsidy changing\n     int nHeight = chainActive.Height();\n     chainActive.Tip()->nHeight = 209999;\n-    BOOST_CHECK(pblocktemplate = CreateNewBlockWithKey(reservekey));\n+    BOOST_CHECK(pblocktemplate = CreateNewBlock(scriptPubKey));\n     delete pblocktemplate;\n     chainActive.Tip()->nHeight = 210000;\n-    BOOST_CHECK(pblocktemplate = CreateNewBlockWithKey(reservekey));\n+    BOOST_CHECK(pblocktemplate = CreateNewBlock(scriptPubKey));\n     delete pblocktemplate;\n     chainActive.Tip()->nHeight = nHeight;\n "
      }
    ]
  },
  {
    "sha": "b6aafca03d40739f02bbaebe58f9c66109790e64",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiNmFhZmNhMDNkNDA3MzlmMDJiYmFlYmU1OGY5YzY2MTA5NzkwZTY0",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2013-12-03T12:57:54Z"
      },
      "committer": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2013-12-09T09:09:59Z"
      },
      "message": "some string and indentation updates in init/rpcclient",
      "tree": {
        "sha": "bd240ac1bba57e1ba341bb6c516a05430def2324",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bd240ac1bba57e1ba341bb6c516a05430def2324"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b6aafca03d40739f02bbaebe58f9c66109790e64",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b6aafca03d40739f02bbaebe58f9c66109790e64",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b6aafca03d40739f02bbaebe58f9c66109790e64",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b6aafca03d40739f02bbaebe58f9c66109790e64/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "7202d9d9bf6e7442ea8e945b271dcec079ff5239",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7202d9d9bf6e7442ea8e945b271dcec079ff5239",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7202d9d9bf6e7442ea8e945b271dcec079ff5239"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 9,
      "deletions": 9
    },
    "files": [
      {
        "sha": "6a6c9ae2905cc04207d2cef8971ec72d39c66123",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b6aafca03d40739f02bbaebe58f9c66109790e64/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b6aafca03d40739f02bbaebe58f9c66109790e64/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=b6aafca03d40739f02bbaebe58f9c66109790e64",
        "patch": "@@ -199,9 +199,9 @@ std::string HelpMessage(HelpMessageMode hmm)\n     strUsage += \"  -wallet=<file>         \" + _(\"Specify wallet file (within data directory)\") + \"\\n\";\n     strUsage += \"  -dbcache=<n>           \" + _(\"Set database cache size in megabytes (default: 25)\") + \"\\n\";\n     strUsage += \"  -timeout=<n>           \" + _(\"Specify connection timeout in milliseconds (default: 5000)\") + \"\\n\";\n-    strUsage += \"  -proxy=<ip:port>       \" + _(\"Connect through socks proxy\") + \"\\n\";\n-    strUsage += \"  -socks=<n>             \" + _(\"Select the version of socks proxy to use (4-5, default: 5)\") + \"\\n\";\n-    strUsage += \"  -onion=<ip:port>         \" + _(\"Use proxy to reach tor hidden services (default: same as -proxy)\") + \"\\n\";\n+    strUsage += \"  -proxy=<ip:port>       \" + _(\"Connect through SOCKS proxy\") + \"\\n\";\n+    strUsage += \"  -socks=<n>             \" + _(\"Select SOCKS version for -proxy (4 or 5, default: 5)\") + \"\\n\";\n+    strUsage += \"  -onion=<ip:port>       \" + _(\"Use separate SOCKS5 proxy to reach peers via Tor hidden services (default: -proxy)\") + \"\\n\";\n     strUsage += \"  -dns                   \" + _(\"Allow DNS lookups for -addnode, -seednode and -connect\") + \"\\n\";\n     strUsage += \"  -port=<port>           \" + _(\"Listen for connections on <port> (default: 8333 or testnet: 18333)\") + \"\\n\";\n     strUsage += \"  -maxconnections=<n>    \" + _(\"Maintain at most <n> connections to peers (default: 125)\") + \"\\n\";\n@@ -226,7 +226,7 @@ std::string HelpMessage(HelpMessageMode hmm)\n     strUsage += \"  -upnp                  \" + _(\"Use UPnP to map the listening port (default: 0)\") + \"\\n\";\n #endif\n #endif\n-    strUsage += \"  -paytxfee=<amt>        \" + _(\"Fee per KB to add to transactions you send\") + \"\\n\";\n+    strUsage += \"  -paytxfee=<amt>        \" + _(\"Fee per kB to add to transactions you send\") + \"\\n\";\n     strUsage += \"  -debug=<category>      \" + _(\"Output debugging information (default: 0, supplying <category> is optional)\") + \"\\n\";\n     strUsage +=                               _(\"If <category> is not supplied, output all debugging information.\") + \"\\n\";\n     strUsage +=                               _(\"<category> can be:\");\n@@ -243,7 +243,7 @@ std::string HelpMessage(HelpMessageMode hmm)\n     strUsage += \"  -shrinkdebugfile       \" + _(\"Shrink debug.log file on client startup (default: 1 when no -debug)\") + \"\\n\";\n     strUsage += \"  -printtoconsole        \" + _(\"Send trace/debug info to console instead of debug.log file\") + \"\\n\";\n     strUsage += \"  -regtest               \" + _(\"Enter regression test mode, which uses a special chain in which blocks can be \"\n-                                            \"solved instantly. This is intended for regression testing tools and app development.\") + \"\\n\";\n+                                                \"solved instantly. This is intended for regression testing tools and app development.\") + \"\\n\";\n #ifdef WIN32\n     strUsage += \"  -printtodebugger       \" + _(\"Send trace/debug info to debugger\") + \"\\n\";\n #endif\n@@ -281,9 +281,9 @@ std::string HelpMessage(HelpMessageMode hmm)\n     strUsage += \"  -par=<n>               \" + _(\"Set the number of script verification threads (up to 16, 0 = auto, <0 = leave that many cores free, default: 0)\") + \"\\n\";\n \n     strUsage += \"\\n\" + _(\"Block creation options:\") + \"\\n\";\n-    strUsage += \"  -blockminsize=<n>      \"   + _(\"Set minimum block size in bytes (default: 0)\") + \"\\n\";\n-    strUsage += \"  -blockmaxsize=<n>      \"   + _(\"Set maximum block size in bytes (default: 250000)\") + \"\\n\";\n-    strUsage += \"  -blockprioritysize=<n> \"   + _(\"Set maximum size of high-priority/low-fee transactions in bytes (default: 27000)\") + \"\\n\";\n+    strUsage += \"  -blockminsize=<n>      \" + _(\"Set minimum block size in bytes (default: 0)\") + \"\\n\";\n+    strUsage += \"  -blockmaxsize=<n>      \" + _(\"Set maximum block size in bytes (default: 250000)\") + \"\\n\";\n+    strUsage += \"  -blockprioritysize=<n> \" + _(\"Set maximum size of high-priority/low-fee transactions in bytes (default: 27000)\") + \"\\n\";\n \n     strUsage += \"\\n\" + _(\"SSL options: (see the Bitcoin Wiki for SSL setup instructions)\") + \"\\n\";\n     strUsage += \"  -rpcssl                                  \" + _(\"Use OpenSSL (https) for JSON-RPC connections\") + \"\\n\";"
      },
      {
        "sha": "c404ac274b42508fb3740a05980a827c483a016c",
        "filename": "src/rpcclient.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b6aafca03d40739f02bbaebe58f9c66109790e64/src/rpcclient.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b6aafca03d40739f02bbaebe58f9c66109790e64/src/rpcclient.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcclient.cpp?ref=b6aafca03d40739f02bbaebe58f9c66109790e64",
        "patch": "@@ -257,7 +257,7 @@ std::string HelpMessageCli(bool mainProgram)\n         strUsage += \"  -datadir=<dir>         \" + _(\"Specify data directory\") + \"\\n\";\n         strUsage += \"  -testnet               \" + _(\"Use the test network\") + \"\\n\";\n         strUsage += \"  -regtest               \" + _(\"Enter regression test mode, which uses a special chain in which blocks can be \"\n-                                            \"solved instantly. This is intended for regression testing tools and app development.\") + \"\\n\";\n+                                                    \"solved instantly. This is intended for regression testing tools and app development.\") + \"\\n\";\n     } else {\n         strUsage += _(\"RPC client options:\") + \"\\n\";\n     }"
      }
    ]
  },
  {
    "sha": "7266bb1bdc35466a956e1596a5369d3e866503ce",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3MjY2YmIxYmRjMzU0NjZhOTU2ZTE1OTZhNTM2OWQzZTg2NjUwM2Nl",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-09T11:27:45Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-09T11:27:59Z"
      },
      "message": "Merge pull request #3373\n\n80ecf67 Add ThreadGetMyExternalIP to net thread group (Gavin Andresen)",
      "tree": {
        "sha": "f427836da604cebc101c29f00abd87574820b516",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f427836da604cebc101c29f00abd87574820b516"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7266bb1bdc35466a956e1596a5369d3e866503ce",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJSpak/AAoJEHSBCwEjRsmmqx4H/2EqIcsbYo2DY1oYQGPMdRfV\nsS3GqIYWXn0svVj1O/63tgBwBqgu0VhjI0eutKgN8dokUPfbSf0l6dOPAEgeiyOb\niD0XBayogT2spGmBcmJ7lfoWltfgiNvf422Anqli0JWQaFdZKlydWk/xliNweaCQ\nDCuOCoa481AgAgVUgoMpUnJY5V1jL4dAL4W6Tuww7/qHSCaDaTbWEwKw5cn8A5Tk\ncuEZmwDRX1t6HjeG9K/NhbsPIzSONUBIESOFuA1mXivYb9h7+h8H0iVK4hbSJ+by\n59JeeEjen5KixGvvFCv03naZ1XAardEgr40eZyiFpqll8qk4WDSRI/XE27jR3JU=\n=ONRa\n-----END PGP SIGNATURE-----",
        "payload": "tree f427836da604cebc101c29f00abd87574820b516\nparent 7202d9d9bf6e7442ea8e945b271dcec079ff5239\nparent 80ecf6702ad53488758d431133585b1e5c8b57f0\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1386588465 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1386588479 +0100\n\nMerge pull request #3373\n\n80ecf67 Add ThreadGetMyExternalIP to net thread group (Gavin Andresen)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7266bb1bdc35466a956e1596a5369d3e866503ce",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7266bb1bdc35466a956e1596a5369d3e866503ce",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7266bb1bdc35466a956e1596a5369d3e866503ce/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7202d9d9bf6e7442ea8e945b271dcec079ff5239",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7202d9d9bf6e7442ea8e945b271dcec079ff5239",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7202d9d9bf6e7442ea8e945b271dcec079ff5239"
      },
      {
        "sha": "80ecf6702ad53488758d431133585b1e5c8b57f0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/80ecf6702ad53488758d431133585b1e5c8b57f0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/80ecf6702ad53488758d431133585b1e5c8b57f0"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "6ae749c6572dac46db7686c967f5ff72b6af72ba",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7266bb1bdc35466a956e1596a5369d3e866503ce/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7266bb1bdc35466a956e1596a5369d3e866503ce/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=7266bb1bdc35466a956e1596a5369d3e866503ce",
        "patch": "@@ -1678,7 +1678,7 @@ bool BindListenPort(const CService &addrBind, string& strError)\n     return true;\n }\n \n-void static Discover()\n+void static Discover(boost::thread_group& threadGroup)\n {\n     if (!fDiscover)\n         return;\n@@ -1731,7 +1731,7 @@ void static Discover()\n \n     // Don't use external IPv4 discovery, when -onlynet=\"IPv6\"\n     if (!IsLimited(NET_IPV4))\n-        boost::thread(boost::bind(&TraceThread<void (*)()>, \"ext-ip\", &ThreadGetMyExternalIP));\n+        threadGroup.create_thread(boost::bind(&TraceThread<void (*)()>, \"ext-ip\", &ThreadGetMyExternalIP));\n }\n \n void StartNode(boost::thread_group& threadGroup)\n@@ -1745,7 +1745,7 @@ void StartNode(boost::thread_group& threadGroup)\n     if (pnodeLocalHost == NULL)\n         pnodeLocalHost = new CNode(INVALID_SOCKET, CAddress(CService(\"127.0.0.1\", 0), nLocalServices));\n \n-    Discover();\n+    Discover(threadGroup);\n \n     //\n     // Start threads"
      }
    ]
  },
  {
    "sha": "fdbdb7f3459603bfd977cff3c16473992485197a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmZGJkYjdmMzQ1OTYwM2JmZDk3N2NmZjNjMTY0NzM5OTI0ODUxOTdh",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2013-12-09T09:12:08Z"
      },
      "committer": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2013-12-09T13:02:38Z"
      },
      "message": "cleanup includes in rpcnet.cpp",
      "tree": {
        "sha": "0da4f39cbb85410aeae4224e68e63572cffe6acd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0da4f39cbb85410aeae4224e68e63572cffe6acd"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fdbdb7f3459603bfd977cff3c16473992485197a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fdbdb7f3459603bfd977cff3c16473992485197a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fdbdb7f3459603bfd977cff3c16473992485197a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fdbdb7f3459603bfd977cff3c16473992485197a/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "b6aafca03d40739f02bbaebe58f9c66109790e64",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b6aafca03d40739f02bbaebe58f9c66109790e64",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b6aafca03d40739f02bbaebe58f9c66109790e64"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 2,
      "deletions": 3
    },
    "files": [
      {
        "sha": "fd72fe6386a9c1f62c00bab88657e1366491d4c8",
        "filename": "src/rpcnet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fdbdb7f3459603bfd977cff3c16473992485197a/src/rpcnet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fdbdb7f3459603bfd977cff3c16473992485197a/src/rpcnet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcnet.cpp?ref=fdbdb7f3459603bfd977cff3c16473992485197a",
        "patch": "@@ -1,8 +1,8 @@\n // Copyright (c) 2009-2013 The Bitcoin developers\n // Distributed under the MIT/X11 software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-#include \"rpcserver.h\"\n \n+#include \"rpcserver.h\"\n \n #include \"main.h\"\n #include \"net.h\"\n@@ -11,10 +11,9 @@\n #include \"sync.h\"\n #include \"util.h\"\n #ifdef ENABLE_WALLET\n-#include \"wallet.h\" // for getinfo\n #include \"init.h\" // for getinfo\n+#include \"wallet.h\" // for getinfo\n #endif\n-#include \"main.h\" // for getinfo\n \n #include <inttypes.h>\n "
      }
    ]
  },
  {
    "sha": "84f8551f3ab2ee1be72590278855972e7f200c94",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4NGY4NTUxZjNhYjJlZTFiZTcyNTkwMjc4ODU1OTcyZTdmMjAwYzk0",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2013-11-21T16:59:31Z"
      },
      "committer": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2013-12-09T14:24:45Z"
      },
      "message": "[Qt] misc small Mac related changes/cleanups\n\n- cleanup Info.plist.in and specify high DPI mode enable command as per\n  http://blog.qt.digia.com/blog/2013/04/25/retina-display-support-for-mac-os-ios-and-x11/\n- move setting of QApplication::setAttribute() to bitcoin.cpp and add\n  attribute for enabling use of high DPI pixmaps for Qt >= 5.1\n- add missing setWindowTitle() on Mac\n- cleanup Mac / non-Mac setup in bitcoingui.cpp",
      "tree": {
        "sha": "1b1cfe8845b6ca3f6b822485a0bd5fd4d3a8215e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1b1cfe8845b6ca3f6b822485a0bd5fd4d3a8215e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/84f8551f3ab2ee1be72590278855972e7f200c94",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/84f8551f3ab2ee1be72590278855972e7f200c94",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/84f8551f3ab2ee1be72590278855972e7f200c94",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/84f8551f3ab2ee1be72590278855972e7f200c94/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "7202d9d9bf6e7442ea8e945b271dcec079ff5239",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7202d9d9bf6e7442ea8e945b271dcec079ff5239",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7202d9d9bf6e7442ea8e945b271dcec079ff5239"
      }
    ],
    "stats": {
      "total": 40,
      "additions": 31,
      "deletions": 9
    },
    "files": [
      {
        "sha": "54ced278f2a71ed49bc28ab29cc8b2e3af181d7d",
        "filename": "share/qt/Info.plist.in",
        "status": "modified",
        "additions": 12,
        "deletions": 1,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/84f8551f3ab2ee1be72590278855972e7f200c94/share/qt/Info.plist.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/84f8551f3ab2ee1be72590278855972e7f200c94/share/qt/Info.plist.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/qt/Info.plist.in?ref=84f8551f3ab2ee1be72590278855972e7f200c94",
        "patch": "@@ -4,18 +4,25 @@\n <dict>\n   <key>CFBundleIconFile</key>\n   <string>bitcoin.icns</string>\n+\n   <key>CFBundlePackageType</key>\n   <string>APPL</string>\n+\n   <key>CFBundleGetInfoString</key>\n   <string>@CLIENT_VERSION_MAJOR@.@CLIENT_VERSION_MINOR@, Copyright \u00a9 2009-@COPYRIGHT_YEAR@ The Bitcoin developers</string>\n+\n   <key>CFBundleShortVersionString</key>\n   <string>@CLIENT_VERSION_MAJOR@.@CLIENT_VERSION_MINOR@</string>\n+\n   <key>CFBundleVersion</key>\n   <string>@CLIENT_VERSION_MAJOR@.@CLIENT_VERSION_MINOR@</string>\n+\n   <key>CFBundleSignature</key>\n   <string>????</string>\n+\n   <key>CFBundleExecutable</key>\n   <string>Bitcoin-Qt</string>\n+\n   <key>CFBundleIdentifier</key>\n   <string>org.bitcoinfoundation.Bitcoin-Qt</string>\n \n@@ -69,7 +76,11 @@\n       <string>Owner</string>\n     </dict>\n   </array>\n+\n+  <key>NSPrincipalClass</key>\n+    <string>NSApplication</string>\n+\n   <key>NSHighResolutionCapable</key>\n-  <true/>\n+    <string>True</string>\n </dict>\n </plist>"
      },
      {
        "sha": "2b3bf3bfb53649dbba1262c1349caad143fc0a34",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/84f8551f3ab2ee1be72590278855972e7f200c94/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/84f8551f3ab2ee1be72590278855972e7f200c94/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=84f8551f3ab2ee1be72590278855972e7f200c94",
        "patch": "@@ -200,6 +200,13 @@ int main(int argc, char *argv[])\n \n     Q_INIT_RESOURCE(bitcoin);\n     QApplication app(argc, argv);\n+#if QT_VERSION > 0x050100\n+    // Generate high-dpi pixmaps\n+    QApplication::setAttribute(Qt::AA_UseHighDpiPixmaps);\n+#endif\n+#ifdef Q_OS_MAC\n+    QApplication::setAttribute(Qt::AA_DontShowIconsInMenus);\n+#endif\n \n     // Register meta types used for QMetaObject::invokeMethod\n     qRegisterMetaType< bool* >();"
      },
      {
        "sha": "b1daba5cba92a36ae4af70cac6627ad6e66c885d",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 8,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/84f8551f3ab2ee1be72590278855972e7f200c94/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/84f8551f3ab2ee1be72590278855972e7f200c94/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=84f8551f3ab2ee1be72590278855972e7f200c94",
        "patch": "@@ -69,28 +69,32 @@ BitcoinGUI::BitcoinGUI(bool fIsTestnet, QWidget *parent) :\n {\n     GUIUtil::restoreWindowGeometry(\"nWindow\", QSize(850, 550), this);\n \n-#ifndef Q_OS_MAC\n     if (!fIsTestnet)\n     {\n         setWindowTitle(tr(\"Bitcoin\") + \" - \" + tr(\"Wallet\"));\n+#ifndef Q_OS_MAC\n         QApplication::setWindowIcon(QIcon(\":icons/bitcoin\"));\n         setWindowIcon(QIcon(\":icons/bitcoin\"));\n+#else\n+        MacDockIconHandler::instance()->setIcon(QIcon(\":icons/bitcoin\"));\n+#endif\n     }\n     else\n     {\n         setWindowTitle(tr(\"Bitcoin\") + \" - \" + tr(\"Wallet\") + \" \" + tr(\"[testnet]\"));\n+#ifndef Q_OS_MAC\n         QApplication::setWindowIcon(QIcon(\":icons/bitcoin_testnet\"));\n         setWindowIcon(QIcon(\":icons/bitcoin_testnet\"));\n-    }\n #else\n-    setUnifiedTitleAndToolBarOnMac(true);\n-    QApplication::setAttribute(Qt::AA_DontShowIconsInMenus);\n-\n-    if (!fIsTestnet)\n-        MacDockIconHandler::instance()->setIcon(QIcon(\":icons/bitcoin\"));\n-    else\n         MacDockIconHandler::instance()->setIcon(QIcon(\":icons/bitcoin_testnet\"));\n #endif\n+    }\n+\n+#if defined(Q_OS_MAC) && QT_VERSION < 0x050000\n+    // This property is not implemented in Qt 5. Setting it has no effect.\n+    // A replacement API (QtMacUnifiedToolBar) is available in QtMacExtras.\n+    setUnifiedTitleAndToolBarOnMac(true);\n+#endif\n \n     // Create wallet frame and make it the central widget\n     walletFrame = new WalletFrame(this);"
      }
    ]
  },
  {
    "sha": "6694f4a7a21a2c8250dfd30f17cc528c984ffe58",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2Njk0ZjRhN2EyMWEyYzgyNTBkZmQzMGYxN2NjNTI4Yzk4NGZmZTU4",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-09T14:35:10Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-09T14:36:14Z"
      },
      "message": "Merge pull request #3297\n\n84f8551 [Qt] misc small Mac related changes/cleanups (Philip Kaufmann)",
      "tree": {
        "sha": "73739932d060f37fa5d59e2bec932b27f4321b91",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/73739932d060f37fa5d59e2bec932b27f4321b91"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6694f4a7a21a2c8250dfd30f17cc528c984ffe58",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJSpdVeAAoJEHSBCwEjRsmm/bkH/A0/FNNNLxJh9+30qer8gixE\nLlBGrhP9xLkN2hWUApjDBol7Mgl6uqslCL198rK/H9Z3rzAkAqxT6yrhpf4y2VD/\ncHpRJW0LKJOIQ9b33Tf/L/1kVBZxaFvCs38ZkTNpVfLzwSaCNQeGmj3/dh1qdj4V\n6IUywXgTN/mu3By3EKiMl6nJ6HpJMKWLljg680T0muhryzSqF39kEqZ5dtS+t/OJ\nhDp0rFkP2bK30VYWtucvm4GKqlYZdEyStVKqgsVp0ivDXoW4lgHSBBG7QJkVQ1hi\nd+tOmveR05gmJBR4EpJlaE2oooBPi0y5i3hgc9fFiZ+JmalBoBW7bSKUml0Q+Bc=\n=QuAS\n-----END PGP SIGNATURE-----",
        "payload": "tree 73739932d060f37fa5d59e2bec932b27f4321b91\nparent 7266bb1bdc35466a956e1596a5369d3e866503ce\nparent 84f8551f3ab2ee1be72590278855972e7f200c94\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1386599710 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1386599774 +0100\n\nMerge pull request #3297\n\n84f8551 [Qt] misc small Mac related changes/cleanups (Philip Kaufmann)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6694f4a7a21a2c8250dfd30f17cc528c984ffe58",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6694f4a7a21a2c8250dfd30f17cc528c984ffe58",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6694f4a7a21a2c8250dfd30f17cc528c984ffe58/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7266bb1bdc35466a956e1596a5369d3e866503ce",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7266bb1bdc35466a956e1596a5369d3e866503ce",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7266bb1bdc35466a956e1596a5369d3e866503ce"
      },
      {
        "sha": "84f8551f3ab2ee1be72590278855972e7f200c94",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/84f8551f3ab2ee1be72590278855972e7f200c94",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/84f8551f3ab2ee1be72590278855972e7f200c94"
      }
    ],
    "stats": {
      "total": 40,
      "additions": 31,
      "deletions": 9
    },
    "files": [
      {
        "sha": "54ced278f2a71ed49bc28ab29cc8b2e3af181d7d",
        "filename": "share/qt/Info.plist.in",
        "status": "modified",
        "additions": 12,
        "deletions": 1,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6694f4a7a21a2c8250dfd30f17cc528c984ffe58/share/qt/Info.plist.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6694f4a7a21a2c8250dfd30f17cc528c984ffe58/share/qt/Info.plist.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/qt/Info.plist.in?ref=6694f4a7a21a2c8250dfd30f17cc528c984ffe58",
        "patch": "@@ -4,18 +4,25 @@\n <dict>\n   <key>CFBundleIconFile</key>\n   <string>bitcoin.icns</string>\n+\n   <key>CFBundlePackageType</key>\n   <string>APPL</string>\n+\n   <key>CFBundleGetInfoString</key>\n   <string>@CLIENT_VERSION_MAJOR@.@CLIENT_VERSION_MINOR@, Copyright \u00a9 2009-@COPYRIGHT_YEAR@ The Bitcoin developers</string>\n+\n   <key>CFBundleShortVersionString</key>\n   <string>@CLIENT_VERSION_MAJOR@.@CLIENT_VERSION_MINOR@</string>\n+\n   <key>CFBundleVersion</key>\n   <string>@CLIENT_VERSION_MAJOR@.@CLIENT_VERSION_MINOR@</string>\n+\n   <key>CFBundleSignature</key>\n   <string>????</string>\n+\n   <key>CFBundleExecutable</key>\n   <string>Bitcoin-Qt</string>\n+\n   <key>CFBundleIdentifier</key>\n   <string>org.bitcoinfoundation.Bitcoin-Qt</string>\n \n@@ -69,7 +76,11 @@\n       <string>Owner</string>\n     </dict>\n   </array>\n+\n+  <key>NSPrincipalClass</key>\n+    <string>NSApplication</string>\n+\n   <key>NSHighResolutionCapable</key>\n-  <true/>\n+    <string>True</string>\n </dict>\n </plist>"
      },
      {
        "sha": "2b3bf3bfb53649dbba1262c1349caad143fc0a34",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6694f4a7a21a2c8250dfd30f17cc528c984ffe58/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6694f4a7a21a2c8250dfd30f17cc528c984ffe58/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=6694f4a7a21a2c8250dfd30f17cc528c984ffe58",
        "patch": "@@ -200,6 +200,13 @@ int main(int argc, char *argv[])\n \n     Q_INIT_RESOURCE(bitcoin);\n     QApplication app(argc, argv);\n+#if QT_VERSION > 0x050100\n+    // Generate high-dpi pixmaps\n+    QApplication::setAttribute(Qt::AA_UseHighDpiPixmaps);\n+#endif\n+#ifdef Q_OS_MAC\n+    QApplication::setAttribute(Qt::AA_DontShowIconsInMenus);\n+#endif\n \n     // Register meta types used for QMetaObject::invokeMethod\n     qRegisterMetaType< bool* >();"
      },
      {
        "sha": "b1daba5cba92a36ae4af70cac6627ad6e66c885d",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 8,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6694f4a7a21a2c8250dfd30f17cc528c984ffe58/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6694f4a7a21a2c8250dfd30f17cc528c984ffe58/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=6694f4a7a21a2c8250dfd30f17cc528c984ffe58",
        "patch": "@@ -69,28 +69,32 @@ BitcoinGUI::BitcoinGUI(bool fIsTestnet, QWidget *parent) :\n {\n     GUIUtil::restoreWindowGeometry(\"nWindow\", QSize(850, 550), this);\n \n-#ifndef Q_OS_MAC\n     if (!fIsTestnet)\n     {\n         setWindowTitle(tr(\"Bitcoin\") + \" - \" + tr(\"Wallet\"));\n+#ifndef Q_OS_MAC\n         QApplication::setWindowIcon(QIcon(\":icons/bitcoin\"));\n         setWindowIcon(QIcon(\":icons/bitcoin\"));\n+#else\n+        MacDockIconHandler::instance()->setIcon(QIcon(\":icons/bitcoin\"));\n+#endif\n     }\n     else\n     {\n         setWindowTitle(tr(\"Bitcoin\") + \" - \" + tr(\"Wallet\") + \" \" + tr(\"[testnet]\"));\n+#ifndef Q_OS_MAC\n         QApplication::setWindowIcon(QIcon(\":icons/bitcoin_testnet\"));\n         setWindowIcon(QIcon(\":icons/bitcoin_testnet\"));\n-    }\n #else\n-    setUnifiedTitleAndToolBarOnMac(true);\n-    QApplication::setAttribute(Qt::AA_DontShowIconsInMenus);\n-\n-    if (!fIsTestnet)\n-        MacDockIconHandler::instance()->setIcon(QIcon(\":icons/bitcoin\"));\n-    else\n         MacDockIconHandler::instance()->setIcon(QIcon(\":icons/bitcoin_testnet\"));\n #endif\n+    }\n+\n+#if defined(Q_OS_MAC) && QT_VERSION < 0x050000\n+    // This property is not implemented in Qt 5. Setting it has no effect.\n+    // A replacement API (QtMacUnifiedToolBar) is available in QtMacExtras.\n+    setUnifiedTitleAndToolBarOnMac(true);\n+#endif\n \n     // Create wallet frame and make it the central widget\n     walletFrame = new WalletFrame(this);"
      }
    ]
  },
  {
    "sha": "f914c7a1a47657b75f2d54b7a1f5a299772f1cae",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmOTE0YzdhMWE0NzY1N2I3NWYyZDU0YjdhMWY1YTI5OTc3MmYxY2Fl",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2013-10-28T10:58:39Z"
      },
      "committer": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2013-12-09T15:19:12Z"
      },
      "message": "rpcwallet: use EnsureWalletIsUnlocked() where possible\n\n- replaces a pwalletMain->IsLocked() check\n- in keypoolrefill init kpSize to 0 as we have the logic to determine max\n  kpSize in pwalletMain->TopUpKeyPool() anyway",
      "tree": {
        "sha": "77389c0125df579e321e64d0e4bf5e8150fdded2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/77389c0125df579e321e64d0e4bf5e8150fdded2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f914c7a1a47657b75f2d54b7a1f5a299772f1cae",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f914c7a1a47657b75f2d54b7a1f5a299772f1cae",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f914c7a1a47657b75f2d54b7a1f5a299772f1cae",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f914c7a1a47657b75f2d54b7a1f5a299772f1cae/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "6694f4a7a21a2c8250dfd30f17cc528c984ffe58",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6694f4a7a21a2c8250dfd30f17cc528c984ffe58",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6694f4a7a21a2c8250dfd30f17cc528c984ffe58"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 5,
      "deletions": 6
    },
    "files": [
      {
        "sha": "82fa9d88c51b41e19837b80b790a6c3779f3c50a",
        "filename": "src/rpcwallet.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 6,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f914c7a1a47657b75f2d54b7a1f5a299772f1cae/src/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f914c7a1a47657b75f2d54b7a1f5a299772f1cae/src/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.cpp?ref=f914c7a1a47657b75f2d54b7a1f5a299772f1cae",
        "patch": "@@ -334,8 +334,7 @@ Value sendtoaddress(const Array& params, bool fHelp)\n     if (params.size() > 3 && params[3].type() != null_type && !params[3].get_str().empty())\n         wtx.mapValue[\"to\"]      = params[3].get_str();\n \n-    if (pwalletMain->IsLocked())\n-        throw JSONRPCError(RPC_WALLET_UNLOCK_NEEDED, \"Error: Please enter the wallet passphrase with walletpassphrase first.\");\n+    EnsureWalletIsUnlocked();\n \n     string strError = pwalletMain->SendMoneyToDestination(address.Get(), nAmount, wtx);\n     if (strError != \"\")\n@@ -1657,15 +1656,15 @@ Value keypoolrefill(const Array& params, bool fHelp)\n             + HelpExampleRpc(\"keypoolrefill\", \"\")\n         );\n \n-    unsigned int kpSize = max(GetArg(\"-keypool\", 100), (int64_t) 0);\n+    // 0 is interpreted by TopUpKeyPool() as the default keypool size given by -keypool\n+    unsigned int kpSize = 0;\n     if (params.size() > 0) {\n         if (params[0].get_int() < 0)\n-            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, expected valid size\");\n-        kpSize = (unsigned int) params[0].get_int();\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, expected valid size.\");\n+        kpSize = (unsigned int)params[0].get_int();\n     }\n \n     EnsureWalletIsUnlocked();\n-\n     pwalletMain->TopUpKeyPool(kpSize);\n \n     if (pwalletMain->GetKeyPoolSize() < kpSize)"
      }
    ]
  },
  {
    "sha": "20a3c807907643123298405632628b1629ff61a1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyMGEzYzgwNzkwNzY0MzEyMzI5ODQwNTYzMjYyOGIxNjI5ZmY2MWEx",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-09T15:24:08Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-09T15:24:23Z"
      },
      "message": "Merge pull request #3178\n\nf914c7a rpcwallet: use EnsureWalletIsUnlocked() where possible (Philip Kaufmann)",
      "tree": {
        "sha": "77389c0125df579e321e64d0e4bf5e8150fdded2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/77389c0125df579e321e64d0e4bf5e8150fdded2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/20a3c807907643123298405632628b1629ff61a1",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJSpeCnAAoJEHSBCwEjRsmmnTAH/RFkt3pCfwNvErJB2mPaYJJz\nH0Jwaf0Vz0hZGZ1fXZqx0mDF1aGjc6UNfJoZTrvTimKoKUHdawSwXNscKJfV0jA2\nBXLKRLVARRVHIcjjqxmYjttAA6RjmS2fA2ub+UVih1IX0D6JweMf+gpbVhVzKV2R\nDPY3gdKC/x5ATV+gdcJiMcVcBsuoYi8k+tnrpnCAsAaNEq0fMTb+1QwyemlmZflb\nSFLj+MWu+htBErnI1Nvfx1iY3DKUyO5u9IHZhJSKV9Kk2n8ogPOWZBKeh2u7cVb3\ngKdAEcppZorGo1d/xoJOQe5BVr4It6jm1PT+YncciHEZxA4UTSv2r8I9tndqXB4=\n=eepb\n-----END PGP SIGNATURE-----",
        "payload": "tree 77389c0125df579e321e64d0e4bf5e8150fdded2\nparent 6694f4a7a21a2c8250dfd30f17cc528c984ffe58\nparent f914c7a1a47657b75f2d54b7a1f5a299772f1cae\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1386602648 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1386602663 +0100\n\nMerge pull request #3178\n\nf914c7a rpcwallet: use EnsureWalletIsUnlocked() where possible (Philip Kaufmann)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/20a3c807907643123298405632628b1629ff61a1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/20a3c807907643123298405632628b1629ff61a1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/20a3c807907643123298405632628b1629ff61a1/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6694f4a7a21a2c8250dfd30f17cc528c984ffe58",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6694f4a7a21a2c8250dfd30f17cc528c984ffe58",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6694f4a7a21a2c8250dfd30f17cc528c984ffe58"
      },
      {
        "sha": "f914c7a1a47657b75f2d54b7a1f5a299772f1cae",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f914c7a1a47657b75f2d54b7a1f5a299772f1cae",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f914c7a1a47657b75f2d54b7a1f5a299772f1cae"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 5,
      "deletions": 6
    },
    "files": [
      {
        "sha": "82fa9d88c51b41e19837b80b790a6c3779f3c50a",
        "filename": "src/rpcwallet.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 6,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/20a3c807907643123298405632628b1629ff61a1/src/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/20a3c807907643123298405632628b1629ff61a1/src/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.cpp?ref=20a3c807907643123298405632628b1629ff61a1",
        "patch": "@@ -334,8 +334,7 @@ Value sendtoaddress(const Array& params, bool fHelp)\n     if (params.size() > 3 && params[3].type() != null_type && !params[3].get_str().empty())\n         wtx.mapValue[\"to\"]      = params[3].get_str();\n \n-    if (pwalletMain->IsLocked())\n-        throw JSONRPCError(RPC_WALLET_UNLOCK_NEEDED, \"Error: Please enter the wallet passphrase with walletpassphrase first.\");\n+    EnsureWalletIsUnlocked();\n \n     string strError = pwalletMain->SendMoneyToDestination(address.Get(), nAmount, wtx);\n     if (strError != \"\")\n@@ -1657,15 +1656,15 @@ Value keypoolrefill(const Array& params, bool fHelp)\n             + HelpExampleRpc(\"keypoolrefill\", \"\")\n         );\n \n-    unsigned int kpSize = max(GetArg(\"-keypool\", 100), (int64_t) 0);\n+    // 0 is interpreted by TopUpKeyPool() as the default keypool size given by -keypool\n+    unsigned int kpSize = 0;\n     if (params.size() > 0) {\n         if (params[0].get_int() < 0)\n-            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, expected valid size\");\n-        kpSize = (unsigned int) params[0].get_int();\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, expected valid size.\");\n+        kpSize = (unsigned int)params[0].get_int();\n     }\n \n     EnsureWalletIsUnlocked();\n-\n     pwalletMain->TopUpKeyPool(kpSize);\n \n     if (pwalletMain->GetKeyPoolSize() < kpSize)"
      }
    ]
  },
  {
    "sha": "955787f83f49dab298763a3a119766494dede30f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5NTU3ODdmODNmNDlkYWIyOTg3NjNhM2ExMTk3NjY0OTRkZWRlMzBm",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-09T15:42:10Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-09T15:42:37Z"
      },
      "message": "Merge pull request #3207\n\n666893b qt: keep a list of requested payments (Wladimir J. van der Laan)",
      "tree": {
        "sha": "650c18263e346016c5787978cd5aef4d648dd5ab",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/650c18263e346016c5787978cd5aef4d648dd5ab"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/955787f83f49dab298763a3a119766494dede30f",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJSpeTtAAoJEHSBCwEjRsmmf8YIAMNd5iITsDNH+xmGYshJcKW2\nN88LcXr+Y6vyr75isSAqCTMQ0Wd5G8A9DROIAhGDyuwqXAufYN+e2QAdjDse36Gs\nmSs15dTJXOEp/ZvlQBnWn0EN0lsD3MKgw4/FVpxd5Uu1srFRcejrVh6kgnaji829\nGHjZ2N8/PBbKEVhyC55A2G7Z0spXKOkuvQBbHSI0PCihxXTaPNp8NrNuZjUOr8X5\n4hQQQ44boLFiNErS7uZc0uyPOvikVZvE13qkA3G3utb1lgKC/sdp8PRihDdEzMr0\nu19yDtFJkPKJBqC0+3H75FS9FaDIVJGfGA8/sxMI5sIC6VVZlZ7VS0lv51ClQMo=\n=qDKC\n-----END PGP SIGNATURE-----",
        "payload": "tree 650c18263e346016c5787978cd5aef4d648dd5ab\nparent 20a3c807907643123298405632628b1629ff61a1\nparent 666893b1facfbc748de760e6aeb6bc26bd3797f3\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1386603730 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1386603757 +0100\n\nMerge pull request #3207\n\n666893b qt: keep a list of requested payments (Wladimir J. van der Laan)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/955787f83f49dab298763a3a119766494dede30f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/955787f83f49dab298763a3a119766494dede30f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/955787f83f49dab298763a3a119766494dede30f/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "20a3c807907643123298405632628b1629ff61a1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/20a3c807907643123298405632628b1629ff61a1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/20a3c807907643123298405632628b1629ff61a1"
      },
      {
        "sha": "666893b1facfbc748de760e6aeb6bc26bd3797f3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/666893b1facfbc748de760e6aeb6bc26bd3797f3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/666893b1facfbc748de760e6aeb6bc26bd3797f3"
      }
    ],
    "stats": {
      "total": 482,
      "additions": 409,
      "deletions": 73
    },
    "files": [
      {
        "sha": "434373da2914ca85a8e5385d952cee53b9a8cc1d",
        "filename": "src/qt/Makefile.am",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/955787f83f49dab298763a3a119766494dede30f/src/qt/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/955787f83f49dab298763a3a119766494dede30f/src/qt/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/Makefile.am?ref=955787f83f49dab298763a3a119766494dede30f",
        "patch": "@@ -96,6 +96,7 @@ QT_MOC_CPP = moc_aboutdialog.cpp moc_addressbookpage.cpp \\\n   moc_optionsmodel.cpp moc_overviewpage.cpp moc_paymentserver.cpp \\\n   moc_receiverequestdialog.cpp moc_qvalidatedlineedit.cpp moc_qvaluecombobox.cpp \\\n   moc_receivecoinsdialog.cpp \\\n+  moc_recentrequeststablemodel.cpp \\\n   moc_rpcconsole.cpp moc_sendcoinsdialog.cpp moc_sendcoinsentry.cpp \\\n   moc_signverifymessagedialog.cpp moc_splashscreen.cpp moc_trafficgraphwidget.cpp moc_transactiondesc.cpp \\\n   moc_transactiondescdialog.cpp moc_transactionfilterproxy.cpp \\\n@@ -122,6 +123,7 @@ BITCOIN_QT_H  = aboutdialog.h addressbookpage.h addresstablemodel.h \\\n   optionsdialog.h \\\n   optionsmodel.h overviewpage.h paymentrequestplus.h paymentserver.h \\\n   receivecoinsdialog.h \\\n+  recentrequeststablemodel.h \\\n   receiverequestdialog.h qvalidatedlineedit.h qvaluecombobox.h rpcconsole.h \\\n   sendcoinsdialog.h sendcoinsentry.h signverifymessagedialog.h splashscreen.h \\\n   trafficgraphwidget.h transactiondescdialog.h transactiondesc.h transactionfilterproxy.h \\\n@@ -157,6 +159,7 @@ BITCOIN_QT_CPP = aboutdialog.cpp addressbookpage.cpp \\\n   optionsdialog.cpp optionsmodel.cpp overviewpage.cpp paymentrequestplus.cpp \\\n   paymentserver.cpp qvalidatedlineedit.cpp qvaluecombobox.cpp \\\n   receivecoinsdialog.cpp receiverequestdialog.cpp \\\n+  recentrequeststablemodel.cpp \\\n   rpcconsole.cpp sendcoinsdialog.cpp sendcoinsentry.cpp \\\n   signverifymessagedialog.cpp splashscreen.cpp trafficgraphwidget.cpp transactiondesc.cpp \\\n   transactiondescdialog.cpp transactionfilterproxy.cpp transactionrecord.cpp \\"
      },
      {
        "sha": "5e7d8e617894a554fa958d14734e0b2a10121e75",
        "filename": "src/qt/addresstablemodel.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/955787f83f49dab298763a3a119766494dede30f/src/qt/addresstablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/955787f83f49dab298763a3a119766494dede30f/src/qt/addresstablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/addresstablemodel.cpp?ref=955787f83f49dab298763a3a119766494dede30f",
        "patch": "@@ -297,7 +297,7 @@ QVariant AddressTableModel::headerData(int section, Qt::Orientation orientation,\n {\n     if(orientation == Qt::Horizontal)\n     {\n-        if(role == Qt::DisplayRole)\n+        if(role == Qt::DisplayRole && section < columns.size())\n         {\n             return columns[section];\n         }"
      },
      {
        "sha": "e7138f5371b5e106885c6777b53454ad5075ea23",
        "filename": "src/qt/forms/receivecoinsdialog.ui",
        "status": "modified",
        "additions": 152,
        "deletions": 62,
        "changes": 214,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/955787f83f49dab298763a3a119766494dede30f/src/qt/forms/receivecoinsdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/955787f83f49dab298763a3a119766494dede30f/src/qt/forms/receivecoinsdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/receivecoinsdialog.ui?ref=955787f83f49dab298763a3a119766494dede30f",
        "patch": "@@ -7,35 +7,60 @@\n     <x>0</x>\n     <y>0</y>\n     <width>776</width>\n-    <height>343</height>\n+    <height>364</height>\n    </rect>\n   </property>\n   <layout class=\"QVBoxLayout\" name=\"verticalLayout\">\n    <item>\n     <layout class=\"QGridLayout\" name=\"gridLayout\">\n-     <item row=\"3\" column=\"0\">\n-      <widget class=\"QLabel\" name=\"label\">\n+     <item row=\"7\" column=\"2\">\n+      <widget class=\"QCheckBox\" name=\"reuseAddress\">\n+       <property name=\"toolTip\">\n+        <string>Reuse one of the previously used receiving addresses. Reusing addresses has security and privacy issues. Do not use this unless re-generating a payment request made before.</string>\n+       </property>\n        <property name=\"text\">\n-        <string>&amp;Amount:</string>\n+        <string>R&amp;euse an existing receiving address (not recommended)</string>\n+       </property>\n+      </widget>\n+     </item>\n+     <item row=\"7\" column=\"0\">\n+      <widget class=\"QLabel\" name=\"label_4\">\n+       <property name=\"text\">\n+        <string/>\n+       </property>\n+      </widget>\n+     </item>\n+     <item row=\"6\" column=\"0\">\n+      <widget class=\"QLabel\" name=\"label_3\">\n+       <property name=\"text\">\n+        <string>&amp;Message:</string>\n        </property>\n        <property name=\"alignment\">\n         <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>\n        </property>\n        <property name=\"buddy\">\n-        <cstring>reqAmount</cstring>\n+        <cstring>reqMessage</cstring>\n        </property>\n       </widget>\n      </item>\n-     <item row=\"3\" column=\"1\">\n-      <widget class=\"BitcoinAmountField\" name=\"reqAmount\">\n-       <property name=\"minimumSize\">\n-        <size>\n-         <width>80</width>\n-         <height>0</height>\n-        </size>\n+     <item row=\"4\" column=\"2\">\n+      <widget class=\"QLineEdit\" name=\"reqLabel\">\n+       <property name=\"toolTip\">\n+        <string>The label to associate with the new receiving address</string>\n        </property>\n+      </widget>\n+     </item>\n+     <item row=\"6\" column=\"2\">\n+      <widget class=\"QLineEdit\" name=\"reqMessage\">\n        <property name=\"toolTip\">\n-        <string>The amount to request</string>\n+        <string>The message to attach to payment request</string>\n+       </property>\n+      </widget>\n+     </item>\n+     <item row=\"2\" column=\"2\">\n+      <widget class=\"QLabel\" name=\"label_5\">\n+       <property name=\"text\">\n+        <string>Use this form to request payments. All fields are optional.</string>\n        </property>\n       </widget>\n      </item>\n@@ -52,72 +77,34 @@\n        </property>\n       </widget>\n      </item>\n-     <item row=\"4\" column=\"1\">\n-      <widget class=\"QLineEdit\" name=\"reqLabel\">\n-       <property name=\"toolTip\">\n-        <string>The label to associate with the receiving address</string>\n-       </property>\n-      </widget>\n-     </item>\n      <item row=\"5\" column=\"0\">\n-      <widget class=\"QLabel\" name=\"label_3\">\n+      <widget class=\"QLabel\" name=\"label\">\n        <property name=\"text\">\n-        <string>&amp;Message:</string>\n+        <string>&amp;Amount:</string>\n        </property>\n        <property name=\"alignment\">\n         <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>\n        </property>\n        <property name=\"buddy\">\n-        <cstring>reqMessage</cstring>\n-       </property>\n-      </widget>\n-     </item>\n-     <item row=\"5\" column=\"1\">\n-      <widget class=\"QLineEdit\" name=\"reqMessage\">\n-       <property name=\"toolTip\">\n-        <string>The message to attach to payment request</string>\n+        <cstring>reqAmount</cstring>\n        </property>\n       </widget>\n      </item>\n-     <item row=\"6\" column=\"0\">\n-      <widget class=\"QLabel\" name=\"label_4\">\n-       <property name=\"text\">\n-        <string/>\n+     <item row=\"5\" column=\"2\">\n+      <widget class=\"BitcoinAmountField\" name=\"reqAmount\">\n+       <property name=\"minimumSize\">\n+        <size>\n+         <width>80</width>\n+         <height>0</height>\n+        </size>\n        </property>\n-      </widget>\n-     </item>\n-     <item row=\"6\" column=\"1\">\n-      <widget class=\"QCheckBox\" name=\"reuseAddress\">\n        <property name=\"toolTip\">\n-        <string>Reuse one of the previously used receiving addresses. Reusing addresses has security and privacy issues. Do not use this unless re-generating a payment request made before.</string>\n-       </property>\n-       <property name=\"text\">\n-        <string>R&amp;euse an existing receiving address (not recommended)</string>\n-       </property>\n-      </widget>\n-     </item>\n-     <item row=\"2\" column=\"1\">\n-      <widget class=\"QLabel\" name=\"label_5\">\n-       <property name=\"text\">\n-        <string>Use this form to request payments. All fields are optional.</string>\n+        <string>The amount to request</string>\n        </property>\n       </widget>\n      </item>\n     </layout>\n    </item>\n-   <item>\n-    <spacer name=\"verticalSpacer\">\n-     <property name=\"orientation\">\n-      <enum>Qt::Vertical</enum>\n-     </property>\n-     <property name=\"sizeHint\" stdset=\"0\">\n-      <size>\n-       <width>20</width>\n-       <height>40</height>\n-      </size>\n-     </property>\n-    </spacer>\n-   </item>\n    <item>\n     <layout class=\"QHBoxLayout\" name=\"horizontalLayout\">\n      <item>\n@@ -178,6 +165,98 @@\n      </item>\n     </layout>\n    </item>\n+   <item>\n+    <spacer name=\"verticalSpacer_2\">\n+     <property name=\"orientation\">\n+      <enum>Qt::Vertical</enum>\n+     </property>\n+     <property name=\"sizeHint\" stdset=\"0\">\n+      <size>\n+       <width>20</width>\n+       <height>40</height>\n+      </size>\n+     </property>\n+    </spacer>\n+   </item>\n+   <item>\n+    <widget class=\"QFrame\" name=\"frame\">\n+     <property name=\"sizePolicy\">\n+      <sizepolicy hsizetype=\"Preferred\" vsizetype=\"Expanding\">\n+       <horstretch>0</horstretch>\n+       <verstretch>0</verstretch>\n+      </sizepolicy>\n+     </property>\n+     <property name=\"frameShape\">\n+      <enum>QFrame::StyledPanel</enum>\n+     </property>\n+     <property name=\"frameShadow\">\n+      <enum>QFrame::Raised</enum>\n+     </property>\n+     <layout class=\"QVBoxLayout\" name=\"verticalLayout_2\">\n+      <item>\n+       <widget class=\"QLabel\" name=\"label_6\">\n+        <property name=\"font\">\n+         <font>\n+          <weight>75</weight>\n+          <bold>true</bold>\n+         </font>\n+        </property>\n+        <property name=\"text\">\n+         <string>Previously requested payments</string>\n+        </property>\n+       </widget>\n+      </item>\n+      <item>\n+       <widget class=\"QTableView\" name=\"recentRequestsView\"/>\n+      </item>\n+      <item>\n+       <layout class=\"QHBoxLayout\" name=\"horizontalLayout_2\">\n+        <item>\n+         <widget class=\"QPushButton\" name=\"showRequestButton\">\n+          <property name=\"toolTip\">\n+           <string>Show the selected request (does the same as double clicking an entry)</string>\n+          </property>\n+          <property name=\"text\">\n+           <string>Show</string>\n+          </property>\n+          <property name=\"icon\">\n+           <iconset resource=\"../bitcoin.qrc\">\n+            <normaloff>:/icons/edit</normaloff>:/icons/edit</iconset>\n+          </property>\n+         </widget>\n+        </item>\n+        <item>\n+         <widget class=\"QPushButton\" name=\"removeRequestButton\">\n+          <property name=\"toolTip\">\n+           <string>Remove the selected entries from the list</string>\n+          </property>\n+          <property name=\"text\">\n+           <string>Remove</string>\n+          </property>\n+          <property name=\"icon\">\n+           <iconset resource=\"../bitcoin.qrc\">\n+            <normaloff>:/icons/remove</normaloff>:/icons/remove</iconset>\n+          </property>\n+         </widget>\n+        </item>\n+        <item>\n+         <spacer name=\"horizontalSpacer_2\">\n+          <property name=\"orientation\">\n+           <enum>Qt::Horizontal</enum>\n+          </property>\n+          <property name=\"sizeHint\" stdset=\"0\">\n+           <size>\n+            <width>40</width>\n+            <height>20</height>\n+           </size>\n+          </property>\n+         </spacer>\n+        </item>\n+       </layout>\n+      </item>\n+     </layout>\n+    </widget>\n+   </item>\n   </layout>\n  </widget>\n  <customwidgets>\n@@ -187,6 +266,17 @@\n    <header>bitcoinamountfield.h</header>\n   </customwidget>\n  </customwidgets>\n+ <tabstops>\n+  <tabstop>reqLabel</tabstop>\n+  <tabstop>reqAmount</tabstop>\n+  <tabstop>reqMessage</tabstop>\n+  <tabstop>reuseAddress</tabstop>\n+  <tabstop>clearButton</tabstop>\n+  <tabstop>receiveButton</tabstop>\n+  <tabstop>recentRequestsView</tabstop>\n+  <tabstop>showRequestButton</tabstop>\n+  <tabstop>removeRequestButton</tabstop>\n+ </tabstops>\n  <resources>\n   <include location=\"../bitcoin.qrc\"/>\n  </resources>"
      },
      {
        "sha": "85928c9be5aac53a8616727b560068240f1a628c",
        "filename": "src/qt/forms/receiverequestdialog.ui",
        "status": "modified",
        "additions": 0,
        "deletions": 7,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/955787f83f49dab298763a3a119766494dede30f/src/qt/forms/receiverequestdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/955787f83f49dab298763a3a119766494dede30f/src/qt/forms/receiverequestdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/receiverequestdialog.ui?ref=955787f83f49dab298763a3a119766494dede30f",
        "patch": "@@ -83,13 +83,6 @@\n        </property>\n       </widget>\n      </item>\n-     <item>\n-      <widget class=\"QPushButton\" name=\"btnCopyImage\">\n-       <property name=\"text\">\n-        <string>&amp;Copy Image</string>\n-       </property>\n-      </widget>\n-     </item>\n      <item>\n       <widget class=\"QPushButton\" name=\"btnSaveAs\">\n        <property name=\"text\">"
      },
      {
        "sha": "075a16dabf0bcdd4be696a3c9882f80bf61ecb80",
        "filename": "src/qt/receivecoinsdialog.cpp",
        "status": "modified",
        "additions": 54,
        "deletions": 1,
        "changes": 55,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/955787f83f49dab298763a3a119766494dede30f/src/qt/receivecoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/955787f83f49dab298763a3a119766494dede30f/src/qt/receivecoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/receivecoinsdialog.cpp?ref=955787f83f49dab298763a3a119766494dede30f",
        "patch": "@@ -12,6 +12,7 @@\n #include \"guiutil.h\"\n #include \"receiverequestdialog.h\"\n #include \"addresstablemodel.h\"\n+#include \"recentrequeststablemodel.h\"\n \n #include <QMessageBox>\n #include <QTextDocument>\n@@ -27,6 +28,8 @@ ReceiveCoinsDialog::ReceiveCoinsDialog(QWidget *parent) :\n #ifdef Q_OS_MAC // Icons on push buttons are very uncommon on Mac\n     ui->clearButton->setIcon(QIcon());\n     ui->receiveButton->setIcon(QIcon());\n+    ui->showRequestButton->setIcon(QIcon());\n+    ui->removeRequestButton->setIcon(QIcon());\n #endif\n     connect(ui->clearButton, SIGNAL(clicked()), this, SLOT(clear()));\n }\n@@ -39,6 +42,19 @@ void ReceiveCoinsDialog::setModel(WalletModel *model)\n     {\n         connect(model->getOptionsModel(), SIGNAL(displayUnitChanged(int)), this, SLOT(updateDisplayUnit()));\n         updateDisplayUnit();\n+\n+        ui->recentRequestsView->setModel(model->getRecentRequestsTableModel());\n+        ui->recentRequestsView->setAlternatingRowColors(true);\n+        ui->recentRequestsView->setSelectionBehavior(QAbstractItemView::SelectRows);\n+        ui->recentRequestsView->setSelectionMode(QAbstractItemView::ContiguousSelection);\n+        ui->recentRequestsView->horizontalHeader()->resizeSection(RecentRequestsTableModel::Date, 130);\n+        ui->recentRequestsView->horizontalHeader()->resizeSection(RecentRequestsTableModel::Label, 120);\n+#if QT_VERSION < 0x050000\n+        ui->recentRequestsView->horizontalHeader()->setResizeMode(RecentRequestsTableModel::Message, QHeaderView::Stretch);\n+#else\n+        ui->recentRequestsView->horizontalHeader()->setSectionResizeMode(RecentRequestsTableModel::Message, QHeaderView::Stretch);\n+#endif\n+        ui->recentRequestsView->horizontalHeader()->resizeSection(RecentRequestsTableModel::Amount, 100);\n     }\n }\n \n@@ -76,7 +92,7 @@ void ReceiveCoinsDialog::updateDisplayUnit()\n \n void ReceiveCoinsDialog::on_receiveButton_clicked()\n {\n-    if(!model || !model->getOptionsModel() || !model->getAddressTableModel())\n+    if(!model || !model->getOptionsModel() || !model->getAddressTableModel() || !model->getRecentRequestsTableModel())\n         return;\n \n     QString address;\n@@ -108,4 +124,41 @@ void ReceiveCoinsDialog::on_receiveButton_clicked()\n     dialog->setInfo(info);\n     dialog->show();\n     clear();\n+\n+    /* Store request for later reference */\n+    model->getRecentRequestsTableModel()->addNewRequest(info);\n+}\n+\n+void ReceiveCoinsDialog::on_recentRequestsView_doubleClicked(const QModelIndex &index)\n+{\n+    const RecentRequestsTableModel *submodel = model->getRecentRequestsTableModel();\n+    ReceiveRequestDialog *dialog = new ReceiveRequestDialog(this);\n+    dialog->setModel(model->getOptionsModel());\n+    dialog->setInfo(submodel->entry(index.row()).recipient);\n+    dialog->setAttribute(Qt::WA_DeleteOnClose);\n+    dialog->show();\n+}\n+\n+void ReceiveCoinsDialog::on_showRequestButton_clicked()\n+{\n+    if(!model || !model->getRecentRequestsTableModel() || !ui->recentRequestsView->selectionModel())\n+        return;\n+    QModelIndexList selection = ui->recentRequestsView->selectionModel()->selectedRows();\n+\n+    foreach (QModelIndex index, selection)\n+    {\n+        on_recentRequestsView_doubleClicked(index);\n+    }\n+}\n+\n+void ReceiveCoinsDialog::on_removeRequestButton_clicked()\n+{\n+    if(!model || !model->getRecentRequestsTableModel() || !ui->recentRequestsView->selectionModel())\n+        return;\n+    QModelIndexList selection = ui->recentRequestsView->selectionModel()->selectedRows();\n+    if(selection.empty())\n+        return;\n+    // correct for selection mode ContiguousSelection\n+    QModelIndex firstIndex = selection.at(0);\n+    model->getRecentRequestsTableModel()->removeRows(firstIndex.row(), selection.length(), firstIndex.parent());\n }"
      },
      {
        "sha": "4435bf66944d0a182373c822fd9425066f6d30c0",
        "filename": "src/qt/receivecoinsdialog.h",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/955787f83f49dab298763a3a119766494dede30f/src/qt/receivecoinsdialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/955787f83f49dab298763a3a119766494dede30f/src/qt/receivecoinsdialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/receivecoinsdialog.h?ref=955787f83f49dab298763a3a119766494dede30f",
        "patch": "@@ -13,6 +13,9 @@ namespace Ui {\n }\n class WalletModel;\n class OptionsModel;\n+QT_BEGIN_NAMESPACE\n+class QModelIndex;\n+QT_END_NAMESPACE\n \n /** Dialog for requesting payment of bitcoins */\n class ReceiveCoinsDialog : public QDialog\n@@ -36,6 +39,9 @@ public slots:\n \n private slots:\n     void on_receiveButton_clicked();\n+    void on_showRequestButton_clicked();\n+    void on_removeRequestButton_clicked();\n+    void on_recentRequestsView_doubleClicked(const QModelIndex &index);\n     void updateDisplayUnit();\n };\n "
      },
      {
        "sha": "b5e45341d92730bca65332d51af29e2e80292f15",
        "filename": "src/qt/receiverequestdialog.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/955787f83f49dab298763a3a119766494dede30f/src/qt/receiverequestdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/955787f83f49dab298763a3a119766494dede30f/src/qt/receiverequestdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/receiverequestdialog.cpp?ref=955787f83f49dab298763a3a119766494dede30f",
        "patch": "@@ -85,12 +85,10 @@ ReceiveRequestDialog::ReceiveRequestDialog(QWidget *parent) :\n \n #ifndef USE_QRCODE\n     ui->btnSaveAs->setVisible(false);\n-    ui->btnCopyImage->setVisible(false);\n     ui->lblQRCode->setVisible(false);\n #endif\n \n     connect(ui->btnSaveAs, SIGNAL(clicked()), ui->lblQRCode, SLOT(saveImage()));\n-    connect(ui->btnCopyImage, SIGNAL(clicked()), ui->lblQRCode, SLOT(copyImage()));\n }\n \n ReceiveRequestDialog::~ReceiveRequestDialog()"
      },
      {
        "sha": "06f64af146229a213630f079b92660f39634aa3c",
        "filename": "src/qt/recentrequeststablemodel.cpp",
        "status": "added",
        "additions": 121,
        "deletions": 0,
        "changes": 121,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/955787f83f49dab298763a3a119766494dede30f/src/qt/recentrequeststablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/955787f83f49dab298763a3a119766494dede30f/src/qt/recentrequeststablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/recentrequeststablemodel.cpp?ref=955787f83f49dab298763a3a119766494dede30f",
        "patch": "@@ -0,0 +1,121 @@\n+// Copyright (c) 2011-2013 The Bitcoin developers\n+// Distributed under the MIT/X11 software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"recentrequeststablemodel.h\"\n+#include \"guiutil.h\"\n+#include \"bitcoinunits.h\"\n+#include \"optionsmodel.h\"\n+\n+RecentRequestsTableModel::RecentRequestsTableModel(CWallet *wallet, WalletModel *parent):\n+    walletModel(parent)\n+{\n+    /* These columns must match the indices in the ColumnIndex enumeration */\n+    columns << tr(\"Date\") << tr(\"Label\") << tr(\"Message\") << tr(\"Amount\");\n+}\n+\n+RecentRequestsTableModel::~RecentRequestsTableModel()\n+{\n+    /* Intentionally left empty */\n+}\n+\n+int RecentRequestsTableModel::rowCount(const QModelIndex &parent) const\n+{\n+    Q_UNUSED(parent);\n+    return list.length();\n+}\n+\n+int RecentRequestsTableModel::columnCount(const QModelIndex &parent) const\n+{\n+    Q_UNUSED(parent);\n+    return columns.length();\n+}\n+\n+QVariant RecentRequestsTableModel::data(const QModelIndex &index, int role) const\n+{\n+    if(!index.isValid() || index.row() >= list.length())\n+        return QVariant();\n+\n+    const RecentRequestEntry *rec = &list[index.row()];\n+\n+    if(role == Qt::DisplayRole || role == Qt::EditRole)\n+    {\n+        switch(index.column())\n+        {\n+        case Date:\n+            return GUIUtil::dateTimeStr(rec->date);\n+        case Label:\n+            if(rec->recipient.label.isEmpty() && role == Qt::DisplayRole)\n+            {\n+                return tr(\"(no label)\");\n+            }\n+            else\n+            {\n+                return rec->recipient.label;\n+            }\n+        case Message:\n+            if(rec->recipient.message.isEmpty() && role == Qt::DisplayRole)\n+            {\n+                return tr(\"(no message)\");\n+            }\n+            else\n+            {\n+                return rec->recipient.message;\n+            }\n+        case Amount:\n+            return BitcoinUnits::format(walletModel->getOptionsModel()->getDisplayUnit(), rec->recipient.amount);\n+        }\n+    }\n+    return QVariant();\n+}\n+\n+bool RecentRequestsTableModel::setData(const QModelIndex &index, const QVariant &value, int role)\n+{\n+    return true;\n+}\n+\n+QVariant RecentRequestsTableModel::headerData(int section, Qt::Orientation orientation, int role) const\n+{\n+    if(orientation == Qt::Horizontal)\n+    {\n+        if(role == Qt::DisplayRole && section < columns.size())\n+        {\n+            return columns[section];\n+        }\n+    }\n+    return QVariant();\n+}\n+\n+QModelIndex RecentRequestsTableModel::index(int row, int column, const QModelIndex &parent) const\n+{\n+    return createIndex(row, column, 0);\n+}\n+\n+bool RecentRequestsTableModel::removeRows(int row, int count, const QModelIndex &parent)\n+{\n+    Q_UNUSED(parent);\n+    if(count > 0 && row >= 0 && (row+count) <= list.size())\n+    {\n+        beginRemoveRows(parent, row, row + count - 1);\n+        list.erase(list.begin() + row, list.begin() + row + count);\n+        endRemoveRows();\n+        return true;\n+    } else {\n+        return false;\n+    }\n+}\n+\n+Qt::ItemFlags RecentRequestsTableModel::flags(const QModelIndex &index) const\n+{\n+    return Qt::ItemIsSelectable | Qt::ItemIsEnabled;\n+}\n+\n+void RecentRequestsTableModel::addNewRequest(const SendCoinsRecipient &recipient)\n+{\n+    RecentRequestEntry newEntry;\n+    newEntry.date = QDateTime::currentDateTime();\n+    newEntry.recipient = recipient;\n+    beginInsertRows(QModelIndex(), 0, 0);\n+    list.prepend(newEntry);\n+    endInsertRows();\n+}"
      },
      {
        "sha": "d00a2a90558fb3f0b8ab031596a74dec06394fa8",
        "filename": "src/qt/recentrequeststablemodel.h",
        "status": "added",
        "additions": 61,
        "deletions": 0,
        "changes": 61,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/955787f83f49dab298763a3a119766494dede30f/src/qt/recentrequeststablemodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/955787f83f49dab298763a3a119766494dede30f/src/qt/recentrequeststablemodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/recentrequeststablemodel.h?ref=955787f83f49dab298763a3a119766494dede30f",
        "patch": "@@ -0,0 +1,61 @@\n+// Copyright (c) 2011-2013 The Bitcoin developers\n+// Distributed under the MIT/X11 software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef RECENTREQUESTSTABLEMODEL_H\n+#define RECENTREQUESTSTABLEMODEL_H\n+\n+#include <QAbstractTableModel>\n+#include <QStringList>\n+#include <QDateTime>\n+\n+#include \"walletmodel.h\"\n+\n+class CWallet;\n+\n+struct RecentRequestEntry\n+{\n+    QDateTime date;\n+    SendCoinsRecipient recipient;\n+};\n+\n+/** Model for list of recently generated payment requests / bitcoin URIs.\n+ * Part of wallet model.\n+ */\n+class RecentRequestsTableModel: public QAbstractTableModel\n+{\n+    Q_OBJECT\n+\n+public:\n+    explicit RecentRequestsTableModel(CWallet *wallet, WalletModel *parent = 0);\n+    ~RecentRequestsTableModel();\n+\n+    enum ColumnIndex {\n+        Date = 0,\n+        Label = 1,\n+        Message = 2,\n+        Amount = 3\n+    };\n+\n+    /** @name Methods overridden from QAbstractTableModel\n+        @{*/\n+    int rowCount(const QModelIndex &parent) const;\n+    int columnCount(const QModelIndex &parent) const;\n+    QVariant data(const QModelIndex &index, int role) const;\n+    bool setData(const QModelIndex &index, const QVariant &value, int role);\n+    QVariant headerData(int section, Qt::Orientation orientation, int role) const;\n+    QModelIndex index(int row, int column, const QModelIndex &parent) const;\n+    bool removeRows(int row, int count, const QModelIndex &parent = QModelIndex());\n+    Qt::ItemFlags flags(const QModelIndex &index) const;\n+    /*@}*/\n+\n+    const RecentRequestEntry &entry(int row) const { return list[row]; }\n+    void addNewRequest(const SendCoinsRecipient &recipient);\n+\n+private:\n+    WalletModel *walletModel;\n+    QStringList columns;\n+    QList<RecentRequestEntry> list;\n+};\n+\n+#endif"
      },
      {
        "sha": "984a5a2e7193e4088b264004635d4a5bdd00fb9c",
        "filename": "src/qt/walletmodel.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/955787f83f49dab298763a3a119766494dede30f/src/qt/walletmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/955787f83f49dab298763a3a119766494dede30f/src/qt/walletmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.cpp?ref=955787f83f49dab298763a3a119766494dede30f",
        "patch": "@@ -7,6 +7,7 @@\n #include \"addresstablemodel.h\"\n #include \"guiconstants.h\"\n #include \"transactiontablemodel.h\"\n+#include \"recentrequeststablemodel.h\"\n \n #include \"base58.h\"\n #include \"db.h\"\n@@ -26,13 +27,15 @@\n WalletModel::WalletModel(CWallet *wallet, OptionsModel *optionsModel, QObject *parent) :\n     QObject(parent), wallet(wallet), optionsModel(optionsModel), addressTableModel(0),\n     transactionTableModel(0),\n+    recentRequestsTableModel(0),\n     cachedBalance(0), cachedUnconfirmedBalance(0), cachedImmatureBalance(0),\n     cachedNumTransactions(0),\n     cachedEncryptionStatus(Unencrypted),\n     cachedNumBlocks(0)\n {\n     addressTableModel = new AddressTableModel(wallet, this);\n     transactionTableModel = new TransactionTableModel(wallet, this);\n+    recentRequestsTableModel = new RecentRequestsTableModel(wallet, this);\n \n     // This timer will be fired repeatedly to update the balance\n     pollTimer = new QTimer(this);\n@@ -325,6 +328,11 @@ TransactionTableModel *WalletModel::getTransactionTableModel()\n     return transactionTableModel;\n }\n \n+RecentRequestsTableModel *WalletModel::getRecentRequestsTableModel()\n+{\n+    return recentRequestsTableModel;\n+}\n+\n WalletModel::EncryptionStatus WalletModel::getEncryptionStatus() const\n {\n     if(!wallet->IsCrypted())"
      },
      {
        "sha": "44a1912ecc843d011f684fc1bb7932f7e3b9e5ff",
        "filename": "src/qt/walletmodel.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/955787f83f49dab298763a3a119766494dede30f/src/qt/walletmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/955787f83f49dab298763a3a119766494dede30f/src/qt/walletmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.h?ref=955787f83f49dab298763a3a119766494dede30f",
        "patch": "@@ -18,6 +18,7 @@\n class AddressTableModel;\n class OptionsModel;\n class TransactionTableModel;\n+class RecentRequestsTableModel;\n class WalletModelTransaction;\n \n class CCoinControl;\n@@ -88,6 +89,7 @@ class WalletModel : public QObject\n     OptionsModel *getOptionsModel();\n     AddressTableModel *getAddressTableModel();\n     TransactionTableModel *getTransactionTableModel();\n+    RecentRequestsTableModel *getRecentRequestsTableModel();\n \n     qint64 getBalance(const CCoinControl *coinControl = NULL) const;\n     qint64 getUnconfirmedBalance() const;\n@@ -160,6 +162,7 @@ class WalletModel : public QObject\n \n     AddressTableModel *addressTableModel;\n     TransactionTableModel *transactionTableModel;\n+    RecentRequestsTableModel *recentRequestsTableModel;\n \n     // Cache some values to be able to detect changes\n     qint64 cachedBalance;"
      }
    ]
  },
  {
    "sha": "962b1cf441ceb1de7791d89951a79a54a2fefcd4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5NjJiMWNmNDQxY2ViMWRlNzc5MWQ4OTk1MWE3OWE1NGEyZmVmY2Q0",
    "commit": {
      "author": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2013-12-10T01:34:28Z"
      },
      "committer": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2013-12-10T01:34:28Z"
      },
      "message": "Fix infinite loop with LogPrint on Windows\n\nRunning -printtodebugger -debug (or -debug=lock),\ncompiled with -DDEBUG_LOCKORDER would infinite loop\non Windows because every critical section lock/unlock\ntriggers a LogPrint.\n\nSolution is to use the raw boost mutex instead of a CCriticalSection.",
      "tree": {
        "sha": "59909d2f6aac84c197f2ecf0440f0159ad294b3f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/59909d2f6aac84c197f2ecf0440f0159ad294b3f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/962b1cf441ceb1de7791d89951a79a54a2fefcd4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/962b1cf441ceb1de7791d89951a79a54a2fefcd4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/962b1cf441ceb1de7791d89951a79a54a2fefcd4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/962b1cf441ceb1de7791d89951a79a54a2fefcd4/comments",
    "author": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "955787f83f49dab298763a3a119766494dede30f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/955787f83f49dab298763a3a119766494dede30f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/955787f83f49dab298763a3a119766494dede30f"
      }
    ],
    "stats": {
      "total": 31,
      "additions": 14,
      "deletions": 17
    },
    "files": [
      {
        "sha": "d975cc9bfb6b2acdc18e63e6bf95635f046c6a4f",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 17,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/962b1cf441ceb1de7791d89951a79a54a2fefcd4/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/962b1cf441ceb1de7791d89951a79a54a2fefcd4/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=962b1cf441ceb1de7791d89951a79a54a2fefcd4",
        "patch": "@@ -299,27 +299,24 @@ int LogPrint(const char* category, const char* pszFormat, ...)\n #ifdef WIN32\n     if (fPrintToDebugger)\n     {\n-        static CCriticalSection cs_OutputDebugStringF;\n-\n         // accumulate and output a line at a time\n-        {\n-            LOCK(cs_OutputDebugStringF);\n-            static std::string buffer;\n+        static std::string buffer;\n \n-            va_list arg_ptr;\n-            va_start(arg_ptr, pszFormat);\n-            buffer += vstrprintf(pszFormat, arg_ptr);\n-            va_end(arg_ptr);\n+        boost::mutex::scoped_lock scoped_lock(*mutexDebugLog);\n \n-            int line_start = 0, line_end;\n-            while((line_end = buffer.find('\\n', line_start)) != -1)\n-            {\n-                OutputDebugStringA(buffer.substr(line_start, line_end - line_start).c_str());\n-                line_start = line_end + 1;\n-                ret += line_end-line_start;\n-            }\n-            buffer.erase(0, line_start);\n+        va_list arg_ptr;\n+        va_start(arg_ptr, pszFormat);\n+        buffer += vstrprintf(pszFormat, arg_ptr);\n+        va_end(arg_ptr);\n+\n+        int line_start = 0, line_end;\n+        while((line_end = buffer.find('\\n', line_start)) != -1)\n+        {\n+            OutputDebugStringA(buffer.substr(line_start, line_end - line_start).c_str());\n+            line_start = line_end + 1;\n+            ret += line_end-line_start;\n         }\n+        buffer.erase(0, line_start);\n     }\n #endif\n     return ret;"
      }
    ]
  },
  {
    "sha": "0b238b278686f8e0c6609b7c9360d36c3198105c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowYjIzOGIyNzg2ODZmOGUwYzY2MDliN2M5MzYwZDM2YzMxOTgxMDVj",
    "commit": {
      "author": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2013-12-10T03:19:18Z"
      },
      "committer": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2013-12-10T03:19:18Z"
      },
      "message": "Use thread-local storage for LogPrint(category...)\n\nThis prevents crashes at shutdown where a global destructor\ncalls LogPrint(category...) after mapMultiArgs has been\ndeleted.",
      "tree": {
        "sha": "f7e4e2b07029d7c87c28d4e050454dc6b848fca2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f7e4e2b07029d7c87c28d4e050454dc6b848fca2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0b238b278686f8e0c6609b7c9360d36c3198105c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0b238b278686f8e0c6609b7c9360d36c3198105c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0b238b278686f8e0c6609b7c9360d36c3198105c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0b238b278686f8e0c6609b7c9360d36c3198105c/comments",
    "author": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "962b1cf441ceb1de7791d89951a79a54a2fefcd4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/962b1cf441ceb1de7791d89951a79a54a2fefcd4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/962b1cf441ceb1de7791d89951a79a54a2fefcd4"
      }
    ],
    "stats": {
      "total": 24,
      "additions": 15,
      "deletions": 9
    },
    "files": [
      {
        "sha": "bedf59767b1f8ff58550ffc030c75ae47e1737f1",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 9,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0b238b278686f8e0c6609b7c9360d36c3198105c/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0b238b278686f8e0c6609b7c9360d36c3198105c/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=0b238b278686f8e0c6609b7c9360d36c3198105c",
        "patch": "@@ -242,17 +242,23 @@ int LogPrint(const char* category, const char* pszFormat, ...)\n         if (!fDebug)\n             return 0;\n \n-        const vector<string>& categories = mapMultiArgs[\"-debug\"];\n-        bool allCategories = count(categories.begin(), categories.end(), string(\"\"));\n-\n-        // Only look for categories, if not -debug/-debug=1 was passed,\n-        // as that implies every category should be logged.\n-        if (!allCategories)\n+        // Give each thread quick access to -debug settings.\n+        // This helps prevent issues debugging global destructors,\n+        // where mapMultiArgs might be deleted before another\n+        // global destructor calls LogPrint()\n+        static boost::thread_specific_ptr<set<string> > ptrCategory;\n+        if (ptrCategory.get() == NULL)\n         {\n-            // Category was not found (not supplied via -debug=<category>)\n-            if (find(categories.begin(), categories.end(), string(category)) == categories.end())\n-                return 0;\n+            const vector<string>& categories = mapMultiArgs[\"-debug\"];\n+            ptrCategory.reset(new set<string>(categories.begin(), categories.end()));\n+            // thread_specific_ptr automatically deletes the set when the thread ends.\n         }\n+        const set<string>& setCategories = *ptrCategory.get();\n+\n+        // if not debugging everything and not debugging specific category, LogPrint does nothing.\n+        if (setCategories.count(string(\"\")) == 0 &&\n+            setCategories.count(string(category)) == 0)\n+            return 0;\n     }\n \n     int ret = 0; // Returns total number of characters written"
      }
    ]
  },
  {
    "sha": "d47bbbd2619910f197967e8a8e54ac5ccdfae338",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkNDdiYmJkMjYxOTkxMGYxOTc5NjdlOGE4ZTU0YWM1Y2NkZmFlMzM4",
    "commit": {
      "author": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2013-12-10T03:36:39Z"
      },
      "committer": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2013-12-10T03:36:39Z"
      },
      "message": "Merge pull request #3368 from laanwj/2013_11_disable_wallet_mining\n\nAllow mining RPCs with --disable-wallet",
      "tree": {
        "sha": "d2337ab5a7ac78bc34ad03d8fc03234ebeff697d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d2337ab5a7ac78bc34ad03d8fc03234ebeff697d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d47bbbd2619910f197967e8a8e54ac5ccdfae338",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d47bbbd2619910f197967e8a8e54ac5ccdfae338",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d47bbbd2619910f197967e8a8e54ac5ccdfae338",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d47bbbd2619910f197967e8a8e54ac5ccdfae338/comments",
    "author": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "955787f83f49dab298763a3a119766494dede30f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/955787f83f49dab298763a3a119766494dede30f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/955787f83f49dab298763a3a119766494dede30f"
      },
      {
        "sha": "fbc7a96d03200e55021c9e04f7fa9114272e6960",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fbc7a96d03200e55021c9e04f7fa9114272e6960",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fbc7a96d03200e55021c9e04f7fa9114272e6960"
      }
    ],
    "stats": {
      "total": 186,
      "additions": 104,
      "deletions": 82
    },
    "files": [
      {
        "sha": "6cf88edffbd25a01bebfd71fc68c528ac1183a03",
        "filename": "doc/build-unix.md",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d47bbbd2619910f197967e8a8e54ac5ccdfae338/doc/build-unix.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d47bbbd2619910f197967e8a8e54ac5ccdfae338/doc/build-unix.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-unix.md?ref=d47bbbd2619910f197967e8a8e54ac5ccdfae338",
        "patch": "@@ -187,3 +187,7 @@ disable-wallet mode with:\n     ./configure --disable-wallet\n \n In this case there is no dependency on Berkeley DB 4.8.\n+\n+Mining is also possible in disable-wallet mode, but only using the `getblocktemplate` RPC\n+call not `getwork`.\n+"
      },
      {
        "sha": "62dd63abef2f0d0875692da7a9e9c0024d88daee",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d47bbbd2619910f197967e8a8e54ac5ccdfae338/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d47bbbd2619910f197967e8a8e54ac5ccdfae338/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=d47bbbd2619910f197967e8a8e54ac5ccdfae338",
        "patch": "@@ -48,9 +48,11 @@ libbitcoin_server_a_SOURCES = \\\n   keystore.cpp \\\n   leveldbwrapper.cpp \\\n   main.cpp \\\n+  miner.cpp \\\n   net.cpp \\\n   noui.cpp \\\n   rpcblockchain.cpp \\\n+  rpcmining.cpp \\\n   rpcnet.cpp \\\n   rpcrawtransaction.cpp \\\n   txdb.cpp \\\n@@ -61,9 +63,7 @@ libbitcoin_server_a_SOURCES = \\\n libbitcoin_wallet_a_SOURCES = \\\n   db.cpp \\\n   crypter.cpp \\\n-  miner.cpp \\\n   rpcdump.cpp \\\n-  rpcmining.cpp \\\n   rpcwallet.cpp \\\n   wallet.cpp \\\n   walletdb.cpp \\"
      },
      {
        "sha": "b835911df33f417dd47ec6eaeb8c754523b1e435",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d47bbbd2619910f197967e8a8e54ac5ccdfae338/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d47bbbd2619910f197967e8a8e54ac5ccdfae338/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=d47bbbd2619910f197967e8a8e54ac5ccdfae338",
        "patch": "@@ -113,8 +113,8 @@ void Shutdown()\n     RenameThread(\"bitcoin-shutoff\");\n     mempool.AddTransactionsUpdated(1);\n     StopRPCThreads();\n-#ifdef ENABLE_WALLET\n     ShutdownRPCMining();\n+#ifdef ENABLE_WALLET\n     if (pwalletMain)\n         bitdb.Flush(false);\n     GenerateBitcoins(false, NULL, 0);\n@@ -1042,10 +1042,8 @@ bool AppInit2(boost::thread_group& threadGroup, bool fForceServer)\n #endif\n \n     StartNode(threadGroup);\n-#ifdef ENABLE_WALLET\n     // InitRPCMining is needed here so getwork/getblocktemplate in the GUI debug console works properly.\n     InitRPCMining();\n-#endif\n     if (fServer)\n         StartRPCThreads();\n "
      },
      {
        "sha": "49f6ec6b957db05e23efe7a710531c473dae198d",
        "filename": "src/miner.cpp",
        "status": "modified",
        "additions": 53,
        "deletions": 49,
        "changes": 102,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d47bbbd2619910f197967e8a8e54ac5ccdfae338/src/miner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d47bbbd2619910f197967e8a8e54ac5ccdfae338/src/miner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.cpp?ref=d47bbbd2619910f197967e8a8e54ac5ccdfae338",
        "patch": "@@ -10,9 +10,6 @@\n #include \"net.h\"\n #include \"wallet.h\"\n \n-double dHashesPerSec = 0.0;\n-int64_t nHPSTimerStart = 0;\n-\n //////////////////////////////////////////////////////////////////////////////\n //\n // BitcoinMiner\n@@ -54,41 +51,6 @@ void SHA256Transform(void* pstate, void* pinput, const void* pinit)\n         ((uint32_t*)pstate)[i] = ctx.h[i];\n }\n \n-//\n-// ScanHash scans nonces looking for a hash with at least some zero bits.\n-// It operates on big endian data.  Caller does the byte reversing.\n-// All input buffers are 16-byte aligned.  nNonce is usually preserved\n-// between calls, but periodically or if nNonce is 0xffff0000 or above,\n-// the block is rebuilt and nNonce starts over at zero.\n-//\n-unsigned int static ScanHash_CryptoPP(char* pmidstate, char* pdata, char* phash1, char* phash, unsigned int& nHashesDone)\n-{\n-    unsigned int& nNonce = *(unsigned int*)(pdata + 12);\n-    for (;;)\n-    {\n-        // Crypto++ SHA256\n-        // Hash pdata using pmidstate as the starting state into\n-        // pre-formatted buffer phash1, then hash phash1 into phash\n-        nNonce++;\n-        SHA256Transform(phash1, pdata, pmidstate);\n-        SHA256Transform(phash, phash1, pSHA256InitState);\n-\n-        // Return the nonce if the hash has at least some zero bits,\n-        // caller will check if it has enough to reach the target\n-        if (((unsigned short*)phash)[14] == 0)\n-            return nNonce;\n-\n-        // If nothing found after trying for a while, return -1\n-        if ((nNonce & 0xffff) == 0)\n-        {\n-            nHashesDone = 0xffff+1;\n-            return (unsigned int) -1;\n-        }\n-        if ((nNonce & 0xfff) == 0)\n-            boost::this_thread::interruption_point();\n-    }\n-}\n-\n // Some explaining would be appreciated\n class COrphan\n {\n@@ -381,16 +343,6 @@ CBlockTemplate* CreateNewBlock(const CScript& scriptPubKeyIn)\n     return pblocktemplate.release();\n }\n \n-CBlockTemplate* CreateNewBlockWithKey(CReserveKey& reservekey)\n-{\n-    CPubKey pubkey;\n-    if (!reservekey.GetReservedKey(pubkey))\n-        return NULL;\n-\n-    CScript scriptPubKey = CScript() << pubkey << OP_CHECKSIG;\n-    return CreateNewBlock(scriptPubKey);\n-}\n-\n void IncrementExtraNonce(CBlock* pblock, CBlockIndex* pindexPrev, unsigned int& nExtraNonce)\n {\n     // Update nExtraNonce\n@@ -454,6 +406,58 @@ void FormatHashBuffers(CBlock* pblock, char* pmidstate, char* pdata, char* phash\n     memcpy(phash1, &tmp.hash1, 64);\n }\n \n+#ifdef ENABLE_WALLET\n+//////////////////////////////////////////////////////////////////////////////\n+//\n+// Internal miner\n+//\n+double dHashesPerSec = 0.0;\n+int64_t nHPSTimerStart = 0;\n+\n+//\n+// ScanHash scans nonces looking for a hash with at least some zero bits.\n+// It operates on big endian data.  Caller does the byte reversing.\n+// All input buffers are 16-byte aligned.  nNonce is usually preserved\n+// between calls, but periodically or if nNonce is 0xffff0000 or above,\n+// the block is rebuilt and nNonce starts over at zero.\n+//\n+unsigned int static ScanHash_CryptoPP(char* pmidstate, char* pdata, char* phash1, char* phash, unsigned int& nHashesDone)\n+{\n+    unsigned int& nNonce = *(unsigned int*)(pdata + 12);\n+    for (;;)\n+    {\n+        // Crypto++ SHA256\n+        // Hash pdata using pmidstate as the starting state into\n+        // pre-formatted buffer phash1, then hash phash1 into phash\n+        nNonce++;\n+        SHA256Transform(phash1, pdata, pmidstate);\n+        SHA256Transform(phash, phash1, pSHA256InitState);\n+\n+        // Return the nonce if the hash has at least some zero bits,\n+        // caller will check if it has enough to reach the target\n+        if (((unsigned short*)phash)[14] == 0)\n+            return nNonce;\n+\n+        // If nothing found after trying for a while, return -1\n+        if ((nNonce & 0xffff) == 0)\n+        {\n+            nHashesDone = 0xffff+1;\n+            return (unsigned int) -1;\n+        }\n+        if ((nNonce & 0xfff) == 0)\n+            boost::this_thread::interruption_point();\n+    }\n+}\n+\n+CBlockTemplate* CreateNewBlockWithKey(CReserveKey& reservekey)\n+{\n+    CPubKey pubkey;\n+    if (!reservekey.GetReservedKey(pubkey))\n+        return NULL;\n+\n+    CScript scriptPubKey = CScript() << pubkey << OP_CHECKSIG;\n+    return CreateNewBlock(scriptPubKey);\n+}\n \n bool CheckWork(CBlock* pblock, CWallet& wallet, CReserveKey& reservekey)\n {\n@@ -665,5 +669,5 @@ void GenerateBitcoins(bool fGenerate, CWallet* pwallet, int nThreads)\n         minerThreads->create_thread(boost::bind(&BitcoinMiner, pwallet));\n }\n \n-\n+#endif\n "
      },
      {
        "sha": "b81433120ed875dc74e6db9cd2ce2b566ddc6149",
        "filename": "src/rpcmining.cpp",
        "status": "modified",
        "additions": 18,
        "deletions": 6,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d47bbbd2619910f197967e8a8e54ac5ccdfae338/src/rpcmining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d47bbbd2619910f197967e8a8e54ac5ccdfae338/src/rpcmining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcmining.cpp?ref=d47bbbd2619910f197967e8a8e54ac5ccdfae338",
        "patch": "@@ -20,7 +20,8 @@\n using namespace json_spirit;\n using namespace std;\n \n-// Key used by getwork/getblocktemplate miners.\n+#ifdef ENABLE_WALLET\n+// Key used by getwork miners.\n // Allocated in InitRPCMining, free'd in ShutdownRPCMining\n static CReserveKey* pMiningKey = NULL;\n \n@@ -40,6 +41,14 @@ void ShutdownRPCMining()\n \n     delete pMiningKey; pMiningKey = NULL;\n }\n+#else\n+void InitRPCMining()\n+{\n+}\n+void ShutdownRPCMining()\n+{\n+}\n+#endif\n \n // Return average network hashes per second based on the last 'lookup' blocks,\n // or from the last difficulty change if 'lookup' is nonpositive.\n@@ -99,7 +108,7 @@ Value getnetworkhashps(const Array& params, bool fHelp)\n     return GetNetworkHashPS(params.size() > 0 ? params[0].get_int() : 120, params.size() > 1 ? params[1].get_int() : -1);\n }\n \n-\n+#ifdef ENABLE_WALLET\n Value getgenerate(const Array& params, bool fHelp)\n {\n     if (fHelp || params.size() != 0)\n@@ -197,7 +206,6 @@ Value setgenerate(const Array& params, bool fHelp)\n     return Value::null;\n }\n \n-\n Value gethashespersec(const Array& params, bool fHelp)\n {\n     if (fHelp || params.size() != 0)\n@@ -216,6 +224,7 @@ Value gethashespersec(const Array& params, bool fHelp)\n         return (boost::int64_t)0;\n     return (boost::int64_t)dHashesPerSec;\n }\n+#endif\n \n \n Value getmininginfo(const Array& params, bool fHelp)\n@@ -248,16 +257,19 @@ Value getmininginfo(const Array& params, bool fHelp)\n     obj.push_back(Pair(\"currentblocktx\",   (uint64_t)nLastBlockTx));\n     obj.push_back(Pair(\"difficulty\",       (double)GetDifficulty()));\n     obj.push_back(Pair(\"errors\",           GetWarnings(\"statusbar\")));\n-    obj.push_back(Pair(\"generate\",         getgenerate(params, false)));\n     obj.push_back(Pair(\"genproclimit\",     (int)GetArg(\"-genproclimit\", -1)));\n-    obj.push_back(Pair(\"hashespersec\",     gethashespersec(params, false)));\n     obj.push_back(Pair(\"networkhashps\",    getnetworkhashps(params, false)));\n     obj.push_back(Pair(\"pooledtx\",         (uint64_t)mempool.size()));\n     obj.push_back(Pair(\"testnet\",          TestNet()));\n+#ifdef ENABLE_WALLET\n+    obj.push_back(Pair(\"generate\",         getgenerate(params, false)));\n+    obj.push_back(Pair(\"hashespersec\",     gethashespersec(params, false)));\n+#endif\n     return obj;\n }\n \n \n+#ifdef ENABLE_WALLET\n Value getwork(const Array& params, bool fHelp)\n {\n     if (fHelp || params.size() > 1)\n@@ -381,7 +393,7 @@ Value getwork(const Array& params, bool fHelp)\n         return CheckWork(pblock, *pwalletMain, *pMiningKey);\n     }\n }\n-\n+#endif\n \n Value getblocktemplate(const Array& params, bool fHelp)\n {"
      },
      {
        "sha": "c95f450c8292b1a33555816e440c35fe9545a609",
        "filename": "src/rpcserver.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 7,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d47bbbd2619910f197967e8a8e54ac5ccdfae338/src/rpcserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d47bbbd2619910f197967e8a8e54ac5ccdfae338/src/rpcserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.cpp?ref=d47bbbd2619910f197967e8a8e54ac5ccdfae338",
        "patch": "@@ -248,12 +248,14 @@ static const CRPCCommand vRPCCommands[] =\n     { \"gettxout\",               &gettxout,               true,      false,      false },\n     { \"verifychain\",            &verifychain,            true,      false,      false },\n \n-#ifdef ENABLE_WALLET\n+    /* Mining */\n     { \"getnetworkhashps\",       &getnetworkhashps,       true,      false,      false },\n-    { \"getgenerate\",            &getgenerate,            true,      false,      false },\n-    { \"setgenerate\",            &setgenerate,            true,      true,       false },\n-    { \"gethashespersec\",        &gethashespersec,        true,      false,      false },\n     { \"getmininginfo\",          &getmininginfo,          true,      false,      false },\n+    { \"getblocktemplate\",       &getblocktemplate,       true,      false,      false },\n+    { \"submitblock\",            &submitblock,            false,     false,      false },\n+\n+#ifdef ENABLE_WALLET\n+    /* Wallet */\n     { \"getnewaddress\",          &getnewaddress,          true,      false,      true },\n     { \"getaccountaddress\",      &getaccountaddress,      true,      false,      true },\n     { \"getrawchangeaddress\",    &getrawchangeaddress,    true,      false,      true },\n@@ -283,10 +285,7 @@ static const CRPCCommand vRPCCommands[] =\n     { \"listaddressgroupings\",   &listaddressgroupings,   false,     false,      true },\n     { \"signmessage\",            &signmessage,            false,     false,      true },\n     { \"verifymessage\",          &verifymessage,          false,     false,      false },\n-    { \"getwork\",                &getwork,                true,      false,      true },\n     { \"listaccounts\",           &listaccounts,           false,     false,      true },\n-    { \"getblocktemplate\",       &getblocktemplate,       true,      false,      false },\n-    { \"submitblock\",            &submitblock,            false,     false,      false },\n     { \"listsinceblock\",         &listsinceblock,         false,     false,      true },\n     { \"dumpprivkey\",            &dumpprivkey,            true,      false,      true },\n     { \"dumpwallet\",             &dumpwallet,             true,      false,      true },\n@@ -295,6 +294,12 @@ static const CRPCCommand vRPCCommands[] =\n     { \"listunspent\",            &listunspent,            false,     false,      true },\n     { \"lockunspent\",            &lockunspent,            false,     false,      true },\n     { \"listlockunspent\",        &listlockunspent,        false,     false,      true },\n+\n+    /* Wallet-enabled mining */\n+    { \"getgenerate\",            &getgenerate,            true,      false,      false },\n+    { \"setgenerate\",            &setgenerate,            true,      true,       false },\n+    { \"gethashespersec\",        &gethashespersec,        true,      false,      false },\n+    { \"getwork\",                &getwork,                true,      false,      true },\n #endif // ENABLE_WALLET\n };\n "
      },
      {
        "sha": "ccc8da1690e39458b5bd24a0a2a8913e83d078cf",
        "filename": "src/test/Makefile.am",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d47bbbd2619910f197967e8a8e54ac5ccdfae338/src/test/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d47bbbd2619910f197967e8a8e54ac5ccdfae338/src/test/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/Makefile.am?ref=d47bbbd2619910f197967e8a8e54ac5ccdfae338",
        "patch": "@@ -31,14 +31,14 @@ test_bitcoin_SOURCES = alert_tests.cpp \\\n   allocator_tests.cpp base32_tests.cpp base58_tests.cpp base64_tests.cpp \\\n   bignum_tests.cpp bloom_tests.cpp canonical_tests.cpp checkblock_tests.cpp \\\n   Checkpoints_tests.cpp compress_tests.cpp DoS_tests.cpp getarg_tests.cpp \\\n-  key_tests.cpp mruset_tests.cpp multisig_tests.cpp \\\n+  key_tests.cpp miner_tests.cpp mruset_tests.cpp multisig_tests.cpp \\\n   netbase_tests.cpp pmt_tests.cpp rpc_tests.cpp script_P2SH_tests.cpp \\\n   script_tests.cpp serialize_tests.cpp sigopcount_tests.cpp test_bitcoin.cpp \\\n   transaction_tests.cpp uint160_tests.cpp uint256_tests.cpp util_tests.cpp \\\n   sighash_tests.cpp $(JSON_TEST_FILES) $(RAW_TEST_FILES)\n \n if ENABLE_WALLET\n-test_bitcoin_SOURCES += accounting_tests.cpp wallet_tests.cpp miner_tests.cpp rpc_wallet_tests.cpp\n+test_bitcoin_SOURCES += accounting_tests.cpp wallet_tests.cpp rpc_wallet_tests.cpp\n endif\n \n nodist_test_bitcoin_SOURCES = $(BUILT_SOURCES)"
      },
      {
        "sha": "ea6abb7e9afc2771612a1bbdcb5b04c8a5ff447e",
        "filename": "src/test/miner_tests.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 13,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d47bbbd2619910f197967e8a8e54ac5ccdfae338/src/test/miner_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d47bbbd2619910f197967e8a8e54ac5ccdfae338/src/test/miner_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/miner_tests.cpp?ref=d47bbbd2619910f197967e8a8e54ac5ccdfae338",
        "patch": "@@ -8,7 +8,6 @@\n \n #include <boost/test/unit_test.hpp>\n \n-extern CWallet* pwalletMain;\n extern void SHA256Transform(void* pstate, void* pinput, const void* pinit);\n \n BOOST_AUTO_TEST_SUITE(miner_tests)\n@@ -51,7 +50,7 @@ struct {\n // NOTE: These tests rely on CreateNewBlock doing its own self-validation!\n BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)\n {\n-    CReserveKey reservekey(pwalletMain);\n+    CScript scriptPubKey = CScript() << ParseHex(\"04678afdb0fe5548271967f1a67130b7105cd6a828e03909a67962e0ea1f61deb649f6bc3f4cef38c4f35504e51ec112de5c384df7ba0b8d578a4c702b6bf11d5f\") << OP_CHECKSIG;\n     CBlockTemplate *pblocktemplate;\n     CTransaction tx;\n     CScript script;\n@@ -60,7 +59,7 @@ BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)\n     LOCK(cs_main);\n \n     // Simple block creation, nothing special yet:\n-    BOOST_CHECK(pblocktemplate = CreateNewBlockWithKey(reservekey));\n+    BOOST_CHECK(pblocktemplate = CreateNewBlock(scriptPubKey));\n \n     // We can't make transactions until we have inputs\n     // Therefore, load 100 blocks :)\n@@ -86,7 +85,7 @@ BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)\n     delete pblocktemplate;\n \n     // Just to make sure we can still make simple blocks\n-    BOOST_CHECK(pblocktemplate = CreateNewBlockWithKey(reservekey));\n+    BOOST_CHECK(pblocktemplate = CreateNewBlock(scriptPubKey));\n     delete pblocktemplate;\n \n     // block sigops > limit: 1000 CHECKMULTISIG + 1\n@@ -104,7 +103,7 @@ BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)\n         mempool.addUnchecked(hash, CTxMemPoolEntry(tx, 11, GetTime(), 111.0, 11));\n         tx.vin[0].prevout.hash = hash;\n     }\n-    BOOST_CHECK(pblocktemplate = CreateNewBlockWithKey(reservekey));\n+    BOOST_CHECK(pblocktemplate = CreateNewBlock(scriptPubKey));\n     delete pblocktemplate;\n     mempool.clear();\n \n@@ -124,14 +123,14 @@ BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)\n         mempool.addUnchecked(hash, CTxMemPoolEntry(tx, 11, GetTime(), 111.0, 11));\n         tx.vin[0].prevout.hash = hash;\n     }\n-    BOOST_CHECK(pblocktemplate = CreateNewBlockWithKey(reservekey));\n+    BOOST_CHECK(pblocktemplate = CreateNewBlock(scriptPubKey));\n     delete pblocktemplate;\n     mempool.clear();\n \n     // orphan in mempool\n     hash = tx.GetHash();\n     mempool.addUnchecked(hash, CTxMemPoolEntry(tx, 11, GetTime(), 111.0, 11));\n-    BOOST_CHECK(pblocktemplate = CreateNewBlockWithKey(reservekey));\n+    BOOST_CHECK(pblocktemplate = CreateNewBlock(scriptPubKey));\n     delete pblocktemplate;\n     mempool.clear();\n \n@@ -149,7 +148,7 @@ BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)\n     tx.vout[0].nValue = 5900000000LL;\n     hash = tx.GetHash();\n     mempool.addUnchecked(hash, CTxMemPoolEntry(tx, 11, GetTime(), 111.0, 11));\n-    BOOST_CHECK(pblocktemplate = CreateNewBlockWithKey(reservekey));\n+    BOOST_CHECK(pblocktemplate = CreateNewBlock(scriptPubKey));\n     delete pblocktemplate;\n     mempool.clear();\n \n@@ -160,7 +159,7 @@ BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)\n     tx.vout[0].nValue = 0;\n     hash = tx.GetHash();\n     mempool.addUnchecked(hash, CTxMemPoolEntry(tx, 11, GetTime(), 111.0, 11));\n-    BOOST_CHECK(pblocktemplate = CreateNewBlockWithKey(reservekey));\n+    BOOST_CHECK(pblocktemplate = CreateNewBlock(scriptPubKey));\n     delete pblocktemplate;\n     mempool.clear();\n \n@@ -178,7 +177,7 @@ BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)\n     tx.vout[0].nValue -= 1000000;\n     hash = tx.GetHash();\n     mempool.addUnchecked(hash, CTxMemPoolEntry(tx, 11, GetTime(), 111.0, 11));\n-    BOOST_CHECK(pblocktemplate = CreateNewBlockWithKey(reservekey));\n+    BOOST_CHECK(pblocktemplate = CreateNewBlock(scriptPubKey));\n     delete pblocktemplate;\n     mempool.clear();\n \n@@ -192,17 +191,17 @@ BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)\n     tx.vout[0].scriptPubKey = CScript() << OP_2;\n     hash = tx.GetHash();\n     mempool.addUnchecked(hash, CTxMemPoolEntry(tx, 11, GetTime(), 111.0, 11));\n-    BOOST_CHECK(pblocktemplate = CreateNewBlockWithKey(reservekey));\n+    BOOST_CHECK(pblocktemplate = CreateNewBlock(scriptPubKey));\n     delete pblocktemplate;\n     mempool.clear();\n \n     // subsidy changing\n     int nHeight = chainActive.Height();\n     chainActive.Tip()->nHeight = 209999;\n-    BOOST_CHECK(pblocktemplate = CreateNewBlockWithKey(reservekey));\n+    BOOST_CHECK(pblocktemplate = CreateNewBlock(scriptPubKey));\n     delete pblocktemplate;\n     chainActive.Tip()->nHeight = 210000;\n-    BOOST_CHECK(pblocktemplate = CreateNewBlockWithKey(reservekey));\n+    BOOST_CHECK(pblocktemplate = CreateNewBlock(scriptPubKey));\n     delete pblocktemplate;\n     chainActive.Tip()->nHeight = nHeight;\n "
      }
    ]
  },
  {
    "sha": "b9c3416723b42b35c0de6fa273ecfffe0682b4a7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiOWMzNDE2NzIzYjQyYjM1YzBkZTZmYTI3M2VjZmZmZTA2ODJiNGE3",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-10T08:02:35Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-10T08:02:35Z"
      },
      "message": "Add protobuf-compiler dependency package for debian\n\nFixes #3361",
      "tree": {
        "sha": "0277fb8021a441bf9ea6032872122423a013d501",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0277fb8021a441bf9ea6032872122423a013d501"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b9c3416723b42b35c0de6fa273ecfffe0682b4a7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b9c3416723b42b35c0de6fa273ecfffe0682b4a7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b9c3416723b42b35c0de6fa273ecfffe0682b4a7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b9c3416723b42b35c0de6fa273ecfffe0682b4a7/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d47bbbd2619910f197967e8a8e54ac5ccdfae338",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d47bbbd2619910f197967e8a8e54ac5ccdfae338",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d47bbbd2619910f197967e8a8e54ac5ccdfae338"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "b53d6934240edae0c6b2d61651ddeb55ca617aac",
        "filename": "doc/build-unix.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b9c3416723b42b35c0de6fa273ecfffe0682b4a7/doc/build-unix.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b9c3416723b42b35c0de6fa273ecfffe0682b4a7/doc/build-unix.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-unix.md?ref=b9c3416723b42b35c0de6fa273ecfffe0682b4a7",
        "patch": "@@ -93,7 +93,7 @@ are installed. Qt 4 is currently necessary to build the GUI.\n \n To build with Qt 4 you need the following:\n \n-    apt-get install libqt4-dev libprotobuf-dev\n+    apt-get install libqt4-dev libprotobuf-dev protobuf-compiler\n \n libqrencode (optional) can be installed with:\n "
      }
    ]
  },
  {
    "sha": "fb96e28b29487f4fdff81b8852d03da5e3110345",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYjk2ZTI4YjI5NDg3ZjRmZGZmODFiODg1MmQwM2RhNWUzMTEwMzQ1",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-10T08:03:37Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-10T08:03:44Z"
      },
      "message": "Merge pull request #3378\n\nb9c3416 Add protobuf-compiler dependency package for debian (Wladimir J. van der Laan)",
      "tree": {
        "sha": "0277fb8021a441bf9ea6032872122423a013d501",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0277fb8021a441bf9ea6032872122423a013d501"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fb96e28b29487f4fdff81b8852d03da5e3110345",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJSpsrgAAoJEHSBCwEjRsmmGuIH/jTZgoPp9J17fZM03QAQDRx5\nHe9mh+ue12BdIimolcDoqLO/R5NqhnFOIUd5C0DVbagg7EkBF0DMRNR5Dbn9rJPH\n2n5uxjHjO95lySwbYSbwKM37tKk1pLWocjlZRaleSeToFTHtXAXMF16qWRKRQLi0\n34p1ONeRRZ7rXxF0lOXi4quMfDvo5psDf4chQkPpPIwAOEzg8qDtF9KX28ZchDzg\n2t4x8TguOgUn+ap0iQp1vjsi7p1Q+s4/1wSpZlka+TC4YyHYJWoVVmjwoh1y2qIg\n3yRjAz3NneJMVEI/8c2AZkf4Rqj9r9sOuyx1lCtQSaH4YUPMuBvgf9bEX7j03yE=\n=4BnM\n-----END PGP SIGNATURE-----",
        "payload": "tree 0277fb8021a441bf9ea6032872122423a013d501\nparent d47bbbd2619910f197967e8a8e54ac5ccdfae338\nparent b9c3416723b42b35c0de6fa273ecfffe0682b4a7\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1386662617 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1386662624 +0100\n\nMerge pull request #3378\n\nb9c3416 Add protobuf-compiler dependency package for debian (Wladimir J. van der Laan)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fb96e28b29487f4fdff81b8852d03da5e3110345",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fb96e28b29487f4fdff81b8852d03da5e3110345",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fb96e28b29487f4fdff81b8852d03da5e3110345/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d47bbbd2619910f197967e8a8e54ac5ccdfae338",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d47bbbd2619910f197967e8a8e54ac5ccdfae338",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d47bbbd2619910f197967e8a8e54ac5ccdfae338"
      },
      {
        "sha": "b9c3416723b42b35c0de6fa273ecfffe0682b4a7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b9c3416723b42b35c0de6fa273ecfffe0682b4a7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b9c3416723b42b35c0de6fa273ecfffe0682b4a7"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "b53d6934240edae0c6b2d61651ddeb55ca617aac",
        "filename": "doc/build-unix.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fb96e28b29487f4fdff81b8852d03da5e3110345/doc/build-unix.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fb96e28b29487f4fdff81b8852d03da5e3110345/doc/build-unix.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-unix.md?ref=fb96e28b29487f4fdff81b8852d03da5e3110345",
        "patch": "@@ -93,7 +93,7 @@ are installed. Qt 4 is currently necessary to build the GUI.\n \n To build with Qt 4 you need the following:\n \n-    apt-get install libqt4-dev libprotobuf-dev\n+    apt-get install libqt4-dev libprotobuf-dev protobuf-compiler\n \n libqrencode (optional) can be installed with:\n "
      }
    ]
  },
  {
    "sha": "4f99b1601ba3723fb71653784166350c13d95c1b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0Zjk5YjE2MDFiYTM3MjNmYjcxNjUzNzg0MTY2MzUwYzEzZDk1YzFi",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-10T08:57:30Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-10T08:57:30Z"
      },
      "message": "Release process: add section about announcing new release",
      "tree": {
        "sha": "afdf9769c5ca50faea91339d08fd4623a118d64c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/afdf9769c5ca50faea91339d08fd4623a118d64c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4f99b1601ba3723fb71653784166350c13d95c1b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4f99b1601ba3723fb71653784166350c13d95c1b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4f99b1601ba3723fb71653784166350c13d95c1b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4f99b1601ba3723fb71653784166350c13d95c1b/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fb96e28b29487f4fdff81b8852d03da5e3110345",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fb96e28b29487f4fdff81b8852d03da5e3110345",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fb96e28b29487f4fdff81b8852d03da5e3110345"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 11,
      "deletions": 0
    },
    "files": [
      {
        "sha": "2c0e2a36771d7e31c7bc5336159d17b7a2b13327",
        "filename": "doc/release-process.md",
        "status": "modified",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4f99b1601ba3723fb71653784166350c13d95c1b/doc/release-process.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4f99b1601ba3723fb71653784166350c13d95c1b/doc/release-process.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-process.md?ref=4f99b1601ba3723fb71653784166350c13d95c1b",
        "patch": "@@ -172,4 +172,15 @@ From a directory containing bitcoin source, gitian.sigs and gitian zips\n \tpopd\n \n - Upload gitian zips to SourceForge\n+\n+- Announce the release:\n+\n+  - Add the release to bitcoin.org: https://github.com/bitcoin/bitcoin.org/tree/master/_releases\n+\n+  - Release sticky on bitcointalk: https://bitcointalk.org/index.php?board=1.0\n+\n+  - Bitcoin-development mailing list\n+\n+  - Optionally reddit /r/Bitcoin, ...\n+\n - Celebrate "
      }
    ]
  },
  {
    "sha": "bd70562f660552973dcf99e00c7897ae884661da",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiZDcwNTYyZjY2MDU1Mjk3M2RjZjk5ZTAwYzc4OTdhZTg4NDY2MWRh",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2013-12-09T09:48:14Z"
      },
      "committer": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2013-12-10T10:04:37Z"
      },
      "message": "[Qt] add messages when handling local payment request files\n\n- important for the open URI dialog to give users feedback\n  when a file is invalid etc.",
      "tree": {
        "sha": "1ba3b7c073cf8c7fc2eaf06994bb10f6ff3accdf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1ba3b7c073cf8c7fc2eaf06994bb10f6ff3accdf"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bd70562f660552973dcf99e00c7897ae884661da",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bd70562f660552973dcf99e00c7897ae884661da",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bd70562f660552973dcf99e00c7897ae884661da",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bd70562f660552973dcf99e00c7897ae884661da/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "fb96e28b29487f4fdff81b8852d03da5e3110345",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fb96e28b29487f4fdff81b8852d03da5e3110345",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fb96e28b29487f4fdff81b8852d03da5e3110345"
      }
    ],
    "stats": {
      "total": 54,
      "additions": 37,
      "deletions": 17
    },
    "files": [
      {
        "sha": "120831fc90c31cc69ed845d41efafe32aff25e0e",
        "filename": "src/qt/paymentserver.cpp",
        "status": "modified",
        "additions": 36,
        "deletions": 16,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bd70562f660552973dcf99e00c7897ae884661da/src/qt/paymentserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bd70562f660552973dcf99e00c7897ae884661da/src/qt/paymentserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/paymentserver.cpp?ref=bd70562f660552973dcf99e00c7897ae884661da",
        "patch": "@@ -373,40 +373,52 @@ void PaymentServer::handleURIOrFile(const QString& s)\n #else\n         QUrlQuery uri((QUrl(s)));\n #endif\n-        if (uri.hasQueryItem(\"r\"))\n+        if (uri.hasQueryItem(\"r\")) // payment request URI\n         {\n             QByteArray temp;\n             temp.append(uri.queryItemValue(\"r\"));\n             QString decoded = QUrl::fromPercentEncoding(temp);\n             QUrl fetchUrl(decoded, QUrl::StrictMode);\n \n-            qDebug() << \"PaymentServer::handleURIOrFile : fetchRequest(\" << fetchUrl << \")\";\n-\n             if (fetchUrl.isValid())\n+            {\n+                qDebug() << \"PaymentServer::handleURIOrFile : fetchRequest(\" << fetchUrl << \")\";\n                 fetchRequest(fetchUrl);\n+            }\n             else\n+            {\n                 qDebug() << \"PaymentServer::handleURIOrFile : Invalid URL: \" << fetchUrl;\n+                emit message(tr(\"URI handling\"),\n+                    tr(\"Payment request fetch URL is invalid: %1\").arg(fetchUrl.toString()),\n+                    CClientUIInterface::ICON_WARNING);\n+            }\n \n             return;\n         }\n+        else // normal URI\n+        {\n+            SendCoinsRecipient recipient;\n+            if (GUIUtil::parseBitcoinURI(s, &recipient))\n+                emit receivedPaymentRequest(recipient);\n+            else\n+                emit message(tr(\"URI handling\"),\n+                    tr(\"URI can not be parsed! This can be caused by an invalid Bitcoin address or malformed URI parameters.\"),\n+                    CClientUIInterface::ICON_WARNING);\n \n-        SendCoinsRecipient recipient;\n-        if (GUIUtil::parseBitcoinURI(s, &recipient))\n-            emit receivedPaymentRequest(recipient);\n-        else\n-            emit message(tr(\"URI handling\"),\n-                tr(\"URI can not be parsed! This can be caused by an invalid Bitcoin address or malformed URI parameters.\"),\n-                CClientUIInterface::ICON_WARNING);\n-\n-        return;\n+            return;\n+        }\n     }\n \n-    if (QFile::exists(s))\n+    if (QFile::exists(s)) // payment request file\n     {\n         PaymentRequestPlus request;\n         SendCoinsRecipient recipient;\n         if (readPaymentRequest(s, request) && processPaymentRequest(request, recipient))\n             emit receivedPaymentRequest(recipient);\n+        else\n+            emit message(tr(\"Payment request file handling\"),\n+                tr(\"Payment request file can not be read or processed! This can be caused by an invalid payment request file.\"),\n+                CClientUIInterface::ICON_WARNING);\n \n         return;\n     }\n@@ -584,7 +596,7 @@ void PaymentServer::netRequestFinished(QNetworkReply* reply)\n             .arg(reply->errorString());\n \n         qDebug() << \"PaymentServer::netRequestFinished : \" << msg;\n-        emit message(tr(\"Network request error\"), msg, CClientUIInterface::MSG_ERROR);\n+        emit message(tr(\"Payment request error\"), msg, CClientUIInterface::MSG_ERROR);\n         return;\n     }\n \n@@ -596,9 +608,16 @@ void PaymentServer::netRequestFinished(QNetworkReply* reply)\n         PaymentRequestPlus request;\n         SendCoinsRecipient recipient;\n         if (request.parse(data) && processPaymentRequest(request, recipient))\n+        {\n             emit receivedPaymentRequest(recipient);\n+        }\n         else\n+        {\n             qDebug() << \"PaymentServer::netRequestFinished : Error processing payment request\";\n+            emit message(tr(\"Payment request error\"),\n+                tr(\"Payment request can not be parsed or processed!\"),\n+                CClientUIInterface::MSG_ERROR);\n+        }\n \n         return;\n     }\n@@ -611,9 +630,10 @@ void PaymentServer::netRequestFinished(QNetworkReply* reply)\n                 .arg(reply->request().url().toString());\n \n             qDebug() << \"PaymentServer::netRequestFinished : \" << msg;\n-            emit message(tr(\"Network request error\"), msg, CClientUIInterface::MSG_ERROR);\n+            emit message(tr(\"Payment request error\"), msg, CClientUIInterface::MSG_ERROR);\n         }\n-        else {\n+        else\n+        {\n             emit receivedPaymentACK(GUIUtil::HtmlEscape(paymentACK.memo()));\n         }\n     }"
      },
      {
        "sha": "da9923f9f1d90804d788619b1a23e684ecffb1e8",
        "filename": "src/qt/paymentserver.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bd70562f660552973dcf99e00c7897ae884661da/src/qt/paymentserver.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bd70562f660552973dcf99e00c7897ae884661da/src/qt/paymentserver.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/paymentserver.h?ref=bd70562f660552973dcf99e00c7897ae884661da",
        "patch": "@@ -98,7 +98,7 @@ public slots:\n     // Submit Payment message to a merchant, get back PaymentACK:\n     void fetchPaymentACK(CWallet* wallet, SendCoinsRecipient recipient, QByteArray transaction);\n \n-    // Handle an incoming URI or file\n+    // Handle an incoming URI, URI with local file scheme or file\n     void handleURIOrFile(const QString& s);\n \n private slots:"
      }
    ]
  },
  {
    "sha": "6939a0d50e2bb6156e88786cb025e8223302d8cf",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2OTM5YTBkNTBlMmJiNjE1NmU4ODc4NmNiMDI1ZTgyMjMzMDJkOGNm",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-10T11:37:34Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-10T11:37:43Z"
      },
      "message": "Merge pull request #3350\n\nfdbdb7f cleanup includes in rpcnet.cpp (Philip Kaufmann)\nb6aafca some string and indentation updates in init/rpcclient (Philip Kaufmann)",
      "tree": {
        "sha": "4ea71bab5c7422bc258c590e5b9d644e4c6a759c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4ea71bab5c7422bc258c590e5b9d644e4c6a759c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6939a0d50e2bb6156e88786cb025e8223302d8cf",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJSpv0HAAoJEHSBCwEjRsmm5NoH/2LoluJ+ilS/lwBGP914YbPa\nfrDEAI2zX1W8I3oFSk9d6XRedFqNgp1eQpV490oG4I46SE0/hqDK6XE2i6GBRS1O\n5TEc6LMacp+4DwpRT8sg44QbaTloT6SJfgQiqBawlmB5kqXLs4a5F/m1CsisGsep\nClXhNTe2hUsSPdVs5VRwqNdcDOWwlKTKMY4plwD7pY2DHlloDM9ecef5RgtIjYNK\nlcQQgl6dMzafJB+dvROk04sG2WbE4wFQq7nBg4+T9aqVeRfd4A8kkpqzNgvp1qFY\nqZpCnUuOUGuRn4okq7AfuXuFBTyK7DtYAWbPhsRI9R9kdksbt91GRXFNmW7re8w=\n=tO6B\n-----END PGP SIGNATURE-----",
        "payload": "tree 4ea71bab5c7422bc258c590e5b9d644e4c6a759c\nparent fb96e28b29487f4fdff81b8852d03da5e3110345\nparent fdbdb7f3459603bfd977cff3c16473992485197a\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1386675454 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1386675463 +0100\n\nMerge pull request #3350\n\nfdbdb7f cleanup includes in rpcnet.cpp (Philip Kaufmann)\nb6aafca some string and indentation updates in init/rpcclient (Philip Kaufmann)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6939a0d50e2bb6156e88786cb025e8223302d8cf",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6939a0d50e2bb6156e88786cb025e8223302d8cf",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6939a0d50e2bb6156e88786cb025e8223302d8cf/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fb96e28b29487f4fdff81b8852d03da5e3110345",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fb96e28b29487f4fdff81b8852d03da5e3110345",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fb96e28b29487f4fdff81b8852d03da5e3110345"
      },
      {
        "sha": "fdbdb7f3459603bfd977cff3c16473992485197a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fdbdb7f3459603bfd977cff3c16473992485197a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fdbdb7f3459603bfd977cff3c16473992485197a"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 11,
      "deletions": 12
    },
    "files": [
      {
        "sha": "72346be679b3c97f155fa30cada5e0fd31958999",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6939a0d50e2bb6156e88786cb025e8223302d8cf/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6939a0d50e2bb6156e88786cb025e8223302d8cf/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=6939a0d50e2bb6156e88786cb025e8223302d8cf",
        "patch": "@@ -199,9 +199,9 @@ std::string HelpMessage(HelpMessageMode hmm)\n     strUsage += \"  -wallet=<file>         \" + _(\"Specify wallet file (within data directory)\") + \"\\n\";\n     strUsage += \"  -dbcache=<n>           \" + _(\"Set database cache size in megabytes (default: 25)\") + \"\\n\";\n     strUsage += \"  -timeout=<n>           \" + _(\"Specify connection timeout in milliseconds (default: 5000)\") + \"\\n\";\n-    strUsage += \"  -proxy=<ip:port>       \" + _(\"Connect through socks proxy\") + \"\\n\";\n-    strUsage += \"  -socks=<n>             \" + _(\"Select the version of socks proxy to use (4-5, default: 5)\") + \"\\n\";\n-    strUsage += \"  -onion=<ip:port>         \" + _(\"Use proxy to reach tor hidden services (default: same as -proxy)\") + \"\\n\";\n+    strUsage += \"  -proxy=<ip:port>       \" + _(\"Connect through SOCKS proxy\") + \"\\n\";\n+    strUsage += \"  -socks=<n>             \" + _(\"Select SOCKS version for -proxy (4 or 5, default: 5)\") + \"\\n\";\n+    strUsage += \"  -onion=<ip:port>       \" + _(\"Use separate SOCKS5 proxy to reach peers via Tor hidden services (default: -proxy)\") + \"\\n\";\n     strUsage += \"  -dns                   \" + _(\"Allow DNS lookups for -addnode, -seednode and -connect\") + \"\\n\";\n     strUsage += \"  -port=<port>           \" + _(\"Listen for connections on <port> (default: 8333 or testnet: 18333)\") + \"\\n\";\n     strUsage += \"  -maxconnections=<n>    \" + _(\"Maintain at most <n> connections to peers (default: 125)\") + \"\\n\";\n@@ -226,7 +226,7 @@ std::string HelpMessage(HelpMessageMode hmm)\n     strUsage += \"  -upnp                  \" + _(\"Use UPnP to map the listening port (default: 0)\") + \"\\n\";\n #endif\n #endif\n-    strUsage += \"  -paytxfee=<amt>        \" + _(\"Fee per KB to add to transactions you send\") + \"\\n\";\n+    strUsage += \"  -paytxfee=<amt>        \" + _(\"Fee per kB to add to transactions you send\") + \"\\n\";\n     strUsage += \"  -debug=<category>      \" + _(\"Output debugging information (default: 0, supplying <category> is optional)\") + \"\\n\";\n     strUsage +=                               _(\"If <category> is not supplied, output all debugging information.\") + \"\\n\";\n     strUsage +=                               _(\"<category> can be:\");\n@@ -243,7 +243,7 @@ std::string HelpMessage(HelpMessageMode hmm)\n     strUsage += \"  -shrinkdebugfile       \" + _(\"Shrink debug.log file on client startup (default: 1 when no -debug)\") + \"\\n\";\n     strUsage += \"  -printtoconsole        \" + _(\"Send trace/debug info to console instead of debug.log file\") + \"\\n\";\n     strUsage += \"  -regtest               \" + _(\"Enter regression test mode, which uses a special chain in which blocks can be \"\n-                                            \"solved instantly. This is intended for regression testing tools and app development.\") + \"\\n\";\n+                                                \"solved instantly. This is intended for regression testing tools and app development.\") + \"\\n\";\n #ifdef WIN32\n     strUsage += \"  -printtodebugger       \" + _(\"Send trace/debug info to debugger\") + \"\\n\";\n #endif\n@@ -281,9 +281,9 @@ std::string HelpMessage(HelpMessageMode hmm)\n     strUsage += \"  -par=<n>               \" + _(\"Set the number of script verification threads (up to 16, 0 = auto, <0 = leave that many cores free, default: 0)\") + \"\\n\";\n \n     strUsage += \"\\n\" + _(\"Block creation options:\") + \"\\n\";\n-    strUsage += \"  -blockminsize=<n>      \"   + _(\"Set minimum block size in bytes (default: 0)\") + \"\\n\";\n-    strUsage += \"  -blockmaxsize=<n>      \"   + _(\"Set maximum block size in bytes (default: 250000)\") + \"\\n\";\n-    strUsage += \"  -blockprioritysize=<n> \"   + _(\"Set maximum size of high-priority/low-fee transactions in bytes (default: 27000)\") + \"\\n\";\n+    strUsage += \"  -blockminsize=<n>      \" + _(\"Set minimum block size in bytes (default: 0)\") + \"\\n\";\n+    strUsage += \"  -blockmaxsize=<n>      \" + _(\"Set maximum block size in bytes (default: 250000)\") + \"\\n\";\n+    strUsage += \"  -blockprioritysize=<n> \" + _(\"Set maximum size of high-priority/low-fee transactions in bytes (default: 27000)\") + \"\\n\";\n \n     strUsage += \"\\n\" + _(\"SSL options: (see the Bitcoin Wiki for SSL setup instructions)\") + \"\\n\";\n     strUsage += \"  -rpcssl                                  \" + _(\"Use OpenSSL (https) for JSON-RPC connections\") + \"\\n\";"
      },
      {
        "sha": "c404ac274b42508fb3740a05980a827c483a016c",
        "filename": "src/rpcclient.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6939a0d50e2bb6156e88786cb025e8223302d8cf/src/rpcclient.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6939a0d50e2bb6156e88786cb025e8223302d8cf/src/rpcclient.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcclient.cpp?ref=6939a0d50e2bb6156e88786cb025e8223302d8cf",
        "patch": "@@ -257,7 +257,7 @@ std::string HelpMessageCli(bool mainProgram)\n         strUsage += \"  -datadir=<dir>         \" + _(\"Specify data directory\") + \"\\n\";\n         strUsage += \"  -testnet               \" + _(\"Use the test network\") + \"\\n\";\n         strUsage += \"  -regtest               \" + _(\"Enter regression test mode, which uses a special chain in which blocks can be \"\n-                                            \"solved instantly. This is intended for regression testing tools and app development.\") + \"\\n\";\n+                                                    \"solved instantly. This is intended for regression testing tools and app development.\") + \"\\n\";\n     } else {\n         strUsage += _(\"RPC client options:\") + \"\\n\";\n     }"
      },
      {
        "sha": "fd72fe6386a9c1f62c00bab88657e1366491d4c8",
        "filename": "src/rpcnet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6939a0d50e2bb6156e88786cb025e8223302d8cf/src/rpcnet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6939a0d50e2bb6156e88786cb025e8223302d8cf/src/rpcnet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcnet.cpp?ref=6939a0d50e2bb6156e88786cb025e8223302d8cf",
        "patch": "@@ -1,8 +1,8 @@\n // Copyright (c) 2009-2013 The Bitcoin developers\n // Distributed under the MIT/X11 software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-#include \"rpcserver.h\"\n \n+#include \"rpcserver.h\"\n \n #include \"main.h\"\n #include \"net.h\"\n@@ -11,10 +11,9 @@\n #include \"sync.h\"\n #include \"util.h\"\n #ifdef ENABLE_WALLET\n-#include \"wallet.h\" // for getinfo\n #include \"init.h\" // for getinfo\n+#include \"wallet.h\" // for getinfo\n #endif\n-#include \"main.h\" // for getinfo\n \n #include <inttypes.h>\n "
      }
    ]
  },
  {
    "sha": "3e01c00f420864a59c53b988394222eaadd86169",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozZTAxYzAwZjQyMDg2NGE1OWM1M2I5ODgzOTQyMjJlYWFkZDg2MTY5",
    "commit": {
      "author": {
        "name": "Tamas Blummer",
        "email": "tamas@bitsofproof.com",
        "date": "2013-12-10T23:03:50Z"
      },
      "committer": {
        "name": "Tamas Blummer",
        "email": "tamas@bitsofproof.com",
        "date": "2013-12-10T23:03:50Z"
      },
      "message": "Add tests for correct and incorrect order of signatures for a multisig\n(P2SH)",
      "tree": {
        "sha": "ade246caaf37f249f688e54a7ad8647043edeb50",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ade246caaf37f249f688e54a7ad8647043edeb50"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3e01c00f420864a59c53b988394222eaadd86169",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3e01c00f420864a59c53b988394222eaadd86169",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3e01c00f420864a59c53b988394222eaadd86169",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3e01c00f420864a59c53b988394222eaadd86169/comments",
    "author": {
      "login": "tamasblummer",
      "id": 4289351,
      "node_id": "MDQ6VXNlcjQyODkzNTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4289351?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tamasblummer",
      "html_url": "https://github.com/tamasblummer",
      "followers_url": "https://api.github.com/users/tamasblummer/followers",
      "following_url": "https://api.github.com/users/tamasblummer/following{/other_user}",
      "gists_url": "https://api.github.com/users/tamasblummer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tamasblummer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tamasblummer/subscriptions",
      "organizations_url": "https://api.github.com/users/tamasblummer/orgs",
      "repos_url": "https://api.github.com/users/tamasblummer/repos",
      "events_url": "https://api.github.com/users/tamasblummer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tamasblummer/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "tamasblummer",
      "id": 4289351,
      "node_id": "MDQ6VXNlcjQyODkzNTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4289351?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tamasblummer",
      "html_url": "https://github.com/tamasblummer",
      "followers_url": "https://api.github.com/users/tamasblummer/followers",
      "following_url": "https://api.github.com/users/tamasblummer/following{/other_user}",
      "gists_url": "https://api.github.com/users/tamasblummer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tamasblummer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tamasblummer/subscriptions",
      "organizations_url": "https://api.github.com/users/tamasblummer/orgs",
      "repos_url": "https://api.github.com/users/tamasblummer/repos",
      "events_url": "https://api.github.com/users/tamasblummer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tamasblummer/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fb96e28b29487f4fdff81b8852d03da5e3110345",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fb96e28b29487f4fdff81b8852d03da5e3110345",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fb96e28b29487f4fdff81b8852d03da5e3110345"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 12,
      "deletions": 2
    },
    "files": [
      {
        "sha": "e386f81fe6fa34d3211f4bc3038130e3b120547f",
        "filename": "src/test/data/tx_invalid.json",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3e01c00f420864a59c53b988394222eaadd86169/src/test/data/tx_invalid.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3e01c00f420864a59c53b988394222eaadd86169/src/test/data/tx_invalid.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/data/tx_invalid.json?ref=3e01c00f420864a59c53b988394222eaadd86169",
        "patch": "@@ -65,5 +65,10 @@\n [\"Same as the transactions in valid with one input SIGHASH_ALL and one SIGHASH_ANYONECANPAY, but we set the _ANYONECANPAY sequence number, invalidating the SIGHASH_ALL signature\"],\n [[[\"0000000000000000000000000000000000000000000000000000000000000100\", 0, \"0x21 0x035e7f0d4d0841bcd56c39337ed086b1a633ee770c1ffdd94ac552a95ac2ce0efc CHECKSIG\"],\n   [\"0000000000000000000000000000000000000000000000000000000000000200\", 0, \"0x21 0x035e7f0d4d0841bcd56c39337ed086b1a633ee770c1ffdd94ac552a95ac2ce0efc CHECKSIG\"]],\n- \"01000000020001000000000000000000000000000000000000000000000000000000000000000000004948304502203a0f5f0e1f2bdbcd04db3061d18f3af70e07f4f467cbc1b8116f267025f5360b022100c792b6e215afc5afc721a351ec413e714305cb749aae3d7fee76621313418df10101000000000200000000000000000000000000000000000000000000000000000000000000000000484730440220201dc2d030e380e8f9cfb41b442d930fa5a685bb2c8db5906671f865507d0670022018d9e7a8d4c8d86a73c2a724ee38ef983ec249827e0e464841735955c707ece98101000000010100000000000000015100000000\", true]\n+ \"01000000020001000000000000000000000000000000000000000000000000000000000000000000004948304502203a0f5f0e1f2bdbcd04db3061d18f3af70e07f4f467cbc1b8116f267025f5360b022100c792b6e215afc5afc721a351ec413e714305cb749aae3d7fee76621313418df10101000000000200000000000000000000000000000000000000000000000000000000000000000000484730440220201dc2d030e380e8f9cfb41b442d930fa5a685bb2c8db5906671f865507d0670022018d9e7a8d4c8d86a73c2a724ee38ef983ec249827e0e464841735955c707ece98101000000010100000000000000015100000000\", true],\n+\n+[\"Incorrect signature order\"],\n+[\"Note the input is just required to make the tester happy\"],\n+[[[\"b3da01dd4aae683c7aee4d5d8b52a540a508e1115f77cd7fa9a291243f501223\", 0, \"HASH160 0x14 0xb1ce99298d5f07364b57b1e5c9cc00be0b04a954 EQUAL\"]],\n+\"01000000012312503f2491a2a97fcd775f11e108a540a5528b5d4dee7a3c68ae4add01dab300000000fdfe000048304502207aacee820e08b0b174e248abd8d7a34ed63b5da3abedb99934df9fddd65c05c4022100dfe87896ab5ee3df476c2655f9fbe5bd089dccbef3e4ea05b5d121169fe7f5f401483045022100f6649b0eddfdfd4ad55426663385090d51ee86c3481bdc6b0c18ea6c0ece2c0b0220561c315b07cffa6f7dd9df96dbae9200c2dee09bf93cc35ca05e6cdf613340aa014c695221031d11db38972b712a9fe1fc023577c7ae3ddb4a3004187d41c45121eecfdbb5b7210207ec36911b6ad2382860d32989c7b8728e9489d7bbc94a6b5509ef0029be128821024ea9fac06f666a4adc3fc1357b7bec1fd0bdece2b9d08579226a8ebde53058e453aeffffffff0180380100000000001976a914c9b99cddf847d10685a4fabaa0baf505f7c3dfab88ac00000000\", true]\n ]"
      },
      {
        "sha": "c33a7a035ad0b1eb4314e136153ed9d44b4621d8",
        "filename": "src/test/data/tx_valid.json",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3e01c00f420864a59c53b988394222eaadd86169/src/test/data/tx_valid.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3e01c00f420864a59c53b988394222eaadd86169/src/test/data/tx_valid.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/data/tx_valid.json?ref=3e01c00f420864a59c53b988394222eaadd86169",
        "patch": "@@ -87,5 +87,10 @@\n \n  [\"ddc454a1c0c35c188c98976b17670f69e586d9c0f3593ea879928332f0a069e7, which spends an input that pushes using a PUSHDATA1 that is negative when read as signed\"],\n  [[[\"c5510a5dd97a25f43175af1fe649b707b1df8e1a41489bac33a23087027a2f48\", 0, \"0x4c 0xae 0x606563686f2022553246736447566b58312b5a536e587574356542793066794778625456415675534a6c376a6a334878416945325364667657734f53474f36633338584d7439435c6e543249584967306a486956304f376e775236644546673d3d22203e20743b206f70656e73736c20656e63202d7061737320706173733a5b314a564d7751432d707269766b65792d6865785d202d64202d6165732d3235362d636263202d61202d696e207460 DROP DUP HASH160 0x14 0xbfd7436b6265aa9de506f8a994f881ff08cc2872 EQUALVERIFY CHECKSIG\"]],\n- \"0100000001482f7a028730a233ac9b48411a8edfb107b749e61faf7531f4257ad95d0a51c5000000008b483045022100bf0bbae9bde51ad2b222e87fbf67530fbafc25c903519a1e5dcc52a32ff5844e022028c4d9ad49b006dd59974372a54291d5764be541574bb0c4dc208ec51f80b7190141049dd4aad62741dc27d5f267f7b70682eee22e7e9c1923b9c0957bdae0b96374569b460eb8d5b40d972e8c7c0ad441de3d94c4a29864b212d56050acb980b72b2bffffffff0180969800000000001976a914e336d0017a9d28de99d16472f6ca6d5a3a8ebc9988ac00000000\", true]\n+ \"0100000001482f7a028730a233ac9b48411a8edfb107b749e61faf7531f4257ad95d0a51c5000000008b483045022100bf0bbae9bde51ad2b222e87fbf67530fbafc25c903519a1e5dcc52a32ff5844e022028c4d9ad49b006dd59974372a54291d5764be541574bb0c4dc208ec51f80b7190141049dd4aad62741dc27d5f267f7b70682eee22e7e9c1923b9c0957bdae0b96374569b460eb8d5b40d972e8c7c0ad441de3d94c4a29864b212d56050acb980b72b2bffffffff0180969800000000001976a914e336d0017a9d28de99d16472f6ca6d5a3a8ebc9988ac00000000\", true],\n+\n+[\"Correct signature order\"],\n+[\"Note the input is just required to make the tester happy\"],\n+[[[\"b3da01dd4aae683c7aee4d5d8b52a540a508e1115f77cd7fa9a291243f501223\", 0, \"HASH160 0x14 0xb1ce99298d5f07364b57b1e5c9cc00be0b04a954 EQUAL\"]],\n+\"01000000012312503f2491a2a97fcd775f11e108a540a5528b5d4dee7a3c68ae4add01dab300000000fdfe0000483045022100f6649b0eddfdfd4ad55426663385090d51ee86c3481bdc6b0c18ea6c0ece2c0b0220561c315b07cffa6f7dd9df96dbae9200c2dee09bf93cc35ca05e6cdf613340aa0148304502207aacee820e08b0b174e248abd8d7a34ed63b5da3abedb99934df9fddd65c05c4022100dfe87896ab5ee3df476c2655f9fbe5bd089dccbef3e4ea05b5d121169fe7f5f4014c695221031d11db38972b712a9fe1fc023577c7ae3ddb4a3004187d41c45121eecfdbb5b7210207ec36911b6ad2382860d32989c7b8728e9489d7bbc94a6b5509ef0029be128821024ea9fac06f666a4adc3fc1357b7bec1fd0bdece2b9d08579226a8ebde53058e453aeffffffff0180380100000000001976a914c9b99cddf847d10685a4fabaa0baf505f7c3dfab88ac00000000\", true] \n ]"
      }
    ]
  },
  {
    "sha": "9392924d0d0285c6add21cb8e01e3e4fcccd71cf",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5MzkyOTI0ZDBkMDI4NWM2YWRkMjFjYjhlMDFlM2U0ZmNjY2Q3MWNm",
    "commit": {
      "author": {
        "name": "regergregregerrge",
        "email": "regergregregerrge@oxymail.de",
        "date": "2013-12-11T03:58:06Z"
      },
      "committer": {
        "name": "regergregregerrge",
        "email": "regergregregerrge@oxymail.de",
        "date": "2013-12-11T03:58:06Z"
      },
      "message": "Update build-osx.md",
      "tree": {
        "sha": "cbb018073a571a9ba9ed7bba38f5f83fa8cf27e2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cbb018073a571a9ba9ed7bba38f5f83fa8cf27e2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9392924d0d0285c6add21cb8e01e3e4fcccd71cf",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9392924d0d0285c6add21cb8e01e3e4fcccd71cf",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9392924d0d0285c6add21cb8e01e3e4fcccd71cf",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9392924d0d0285c6add21cb8e01e3e4fcccd71cf/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "6939a0d50e2bb6156e88786cb025e8223302d8cf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6939a0d50e2bb6156e88786cb025e8223302d8cf",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6939a0d50e2bb6156e88786cb025e8223302d8cf"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "8a266bc5673aa128e29f15d0f036ee3978a0b53c",
        "filename": "doc/build-osx.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9392924d0d0285c6add21cb8e01e3e4fcccd71cf/doc/build-osx.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9392924d0d0285c6add21cb8e01e3e4fcccd71cf/doc/build-osx.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-osx.md?ref=9392924d0d0285c6add21cb8e01e3e4fcccd71cf",
        "patch": "@@ -87,7 +87,7 @@ Rerunning \"openssl version\" should now return the correct version.\n \n 1. Clone the github tree to get the source code and go into the directory.\n \n-        git clone git@github.com:bitcoin/bitcoin.git bitcoin\n+        git clone https://github.com/bitcoin/bitcoin.git\n         cd bitcoin\n \n 2.  Build bitcoind:"
      }
    ]
  },
  {
    "sha": "ef20293c517d3d6757e827c1790fc65ef45c0423",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplZjIwMjkzYzUxN2QzZDY3NTdlODI3YzE3OTBmYzY1ZWY0NWMwNDIz",
    "commit": {
      "author": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2013-12-11T08:13:28Z"
      },
      "committer": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2013-12-11T08:13:28Z"
      },
      "message": "Merge pull request #3389 from regergregregerrge/patch-1\n\nUpdate build-osx.md",
      "tree": {
        "sha": "cbb018073a571a9ba9ed7bba38f5f83fa8cf27e2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cbb018073a571a9ba9ed7bba38f5f83fa8cf27e2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ef20293c517d3d6757e827c1790fc65ef45c0423",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ef20293c517d3d6757e827c1790fc65ef45c0423",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ef20293c517d3d6757e827c1790fc65ef45c0423",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ef20293c517d3d6757e827c1790fc65ef45c0423/comments",
    "author": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6939a0d50e2bb6156e88786cb025e8223302d8cf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6939a0d50e2bb6156e88786cb025e8223302d8cf",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6939a0d50e2bb6156e88786cb025e8223302d8cf"
      },
      {
        "sha": "9392924d0d0285c6add21cb8e01e3e4fcccd71cf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9392924d0d0285c6add21cb8e01e3e4fcccd71cf",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9392924d0d0285c6add21cb8e01e3e4fcccd71cf"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "8a266bc5673aa128e29f15d0f036ee3978a0b53c",
        "filename": "doc/build-osx.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef20293c517d3d6757e827c1790fc65ef45c0423/doc/build-osx.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef20293c517d3d6757e827c1790fc65ef45c0423/doc/build-osx.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-osx.md?ref=ef20293c517d3d6757e827c1790fc65ef45c0423",
        "patch": "@@ -87,7 +87,7 @@ Rerunning \"openssl version\" should now return the correct version.\n \n 1. Clone the github tree to get the source code and go into the directory.\n \n-        git clone git@github.com:bitcoin/bitcoin.git bitcoin\n+        git clone https://github.com/bitcoin/bitcoin.git\n         cd bitcoin\n \n 2.  Build bitcoind:"
      }
    ]
  },
  {
    "sha": "69127034c3018630d790ba462b070b9219c5d790",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2OTEyNzAzNGMzMDE4NjMwZDc5MGJhNDYyYjA3MGI5MjE5YzVkNzkw",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-11T11:41:48Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-11T11:41:51Z"
      },
      "message": "Merge pull request #3379\n\n4f99b16 Release process: add section about announcing new release (Wladimir J. van der Laan)",
      "tree": {
        "sha": "f9c7119ea8cc8e4adfa4d583e4d6ec2ab9f03448",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f9c7119ea8cc8e4adfa4d583e4d6ec2ab9f03448"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/69127034c3018630d790ba462b070b9219c5d790",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJSqE9/AAoJEHSBCwEjRsmm1DYH/2AnbjW9IpGv3Wf1JZ1ZbsSV\n+R3n9gleqMyaF5UHTA2VjA3afLlosW9Achwf5+TaO+thRxHJJ1IKViEdg8pJN4d2\nsGLL32Tco4ZtopGMUQuNxemcP03KwyqzCaCswfBegB1/0R6YVmJiqOs9XioarWPM\nXYqa0hnIexdxifXIdgNP3GXEnnDKGE/8fG8K0nzsIJkk8TR42kpt7YSDq2nzK0TB\nrjro5eO2YSReZL9AhVDIEcDq1rVD/SIYtHbw623qwXng89fzbXB9mTqSvdZJQpk/\nWMLnr9nGdE//3bD9ORVgGCIQn7guzZzqnKuXkaz/H3Y+RpSX4PtBTdwyxY8xSa8=\n=pNj3\n-----END PGP SIGNATURE-----",
        "payload": "tree f9c7119ea8cc8e4adfa4d583e4d6ec2ab9f03448\nparent ef20293c517d3d6757e827c1790fc65ef45c0423\nparent 4f99b1601ba3723fb71653784166350c13d95c1b\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1386762108 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1386762111 +0100\n\nMerge pull request #3379\n\n4f99b16 Release process: add section about announcing new release (Wladimir J. van der Laan)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/69127034c3018630d790ba462b070b9219c5d790",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/69127034c3018630d790ba462b070b9219c5d790",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/69127034c3018630d790ba462b070b9219c5d790/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ef20293c517d3d6757e827c1790fc65ef45c0423",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ef20293c517d3d6757e827c1790fc65ef45c0423",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ef20293c517d3d6757e827c1790fc65ef45c0423"
      },
      {
        "sha": "4f99b1601ba3723fb71653784166350c13d95c1b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4f99b1601ba3723fb71653784166350c13d95c1b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4f99b1601ba3723fb71653784166350c13d95c1b"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 11,
      "deletions": 0
    },
    "files": [
      {
        "sha": "2c0e2a36771d7e31c7bc5336159d17b7a2b13327",
        "filename": "doc/release-process.md",
        "status": "modified",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/69127034c3018630d790ba462b070b9219c5d790/doc/release-process.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/69127034c3018630d790ba462b070b9219c5d790/doc/release-process.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-process.md?ref=69127034c3018630d790ba462b070b9219c5d790",
        "patch": "@@ -172,4 +172,15 @@ From a directory containing bitcoin source, gitian.sigs and gitian zips\n \tpopd\n \n - Upload gitian zips to SourceForge\n+\n+- Announce the release:\n+\n+  - Add the release to bitcoin.org: https://github.com/bitcoin/bitcoin.org/tree/master/_releases\n+\n+  - Release sticky on bitcointalk: https://bitcointalk.org/index.php?board=1.0\n+\n+  - Bitcoin-development mailing list\n+\n+  - Optionally reddit /r/Bitcoin, ...\n+\n - Celebrate "
      }
    ]
  },
  {
    "sha": "24646ee76f060a4590d074e80aebeb6665cb5ae1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyNDY0NmVlNzZmMDYwYTQ1OTBkMDc0ZTgwYWViZWI2NjY1Y2I1YWUx",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2013-12-10T11:01:54Z"
      },
      "committer": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2013-12-11T13:40:31Z"
      },
      "message": "[Qt] fix possibilty to delete last sendcoins entry\n\n- hide the entry about to be deleted, and if it is the last entry add a\n  new one, so that we always have one entry in our list",
      "tree": {
        "sha": "adac39b01968f65e88a61974bbb377447dd08897",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/adac39b01968f65e88a61974bbb377447dd08897"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/24646ee76f060a4590d074e80aebeb6665cb5ae1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/24646ee76f060a4590d074e80aebeb6665cb5ae1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/24646ee76f060a4590d074e80aebeb6665cb5ae1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/24646ee76f060a4590d074e80aebeb6665cb5ae1/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "69127034c3018630d790ba462b070b9219c5d790",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/69127034c3018630d790ba462b070b9219c5d790",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/69127034c3018630d790ba462b070b9219c5d790"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 6,
      "deletions": 4
    },
    "files": [
      {
        "sha": "03cf7f51ea1b8e20bd5aaa20e1f415ba852482d0",
        "filename": "src/qt/sendcoinsdialog.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 4,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/24646ee76f060a4590d074e80aebeb6665cb5ae1/src/qt/sendcoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/24646ee76f060a4590d074e80aebeb6665cb5ae1/src/qt/sendcoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.cpp?ref=24646ee76f060a4590d074e80aebeb6665cb5ae1",
        "patch": "@@ -306,12 +306,14 @@ void SendCoinsDialog::updateTabsAndLabels()\n \n void SendCoinsDialog::removeEntry(SendCoinsEntry* entry)\n {\n-    entry->deleteLater();\n+    entry->hide();\n \n-    // If the last entry was removed add an empty one\n-    if (!ui->entries->count())\n+    // If the last entry is about to be removed add an empty one\n+    if (ui->entries->count() == 1)\n         addEntry();\n \n+    entry->deleteLater();\n+\n     updateTabsAndLabels();\n }\n \n@@ -543,7 +545,7 @@ void SendCoinsDialog::coinControlChangeChecked(int state)\n }\n \n // Coin Control: custom change address changed\n-void SendCoinsDialog::coinControlChangeEdited(const QString & text)\n+void SendCoinsDialog::coinControlChangeEdited(const QString& text)\n {\n     if (model)\n     {"
      }
    ]
  },
  {
    "sha": "7df07b3f456958288fe6787be6bee503d5dbb034",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3ZGYwN2IzZjQ1Njk1ODI4OGZlNjc4N2JlNmJlZTUwM2Q1ZGJiMDM0",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2013-12-10T10:57:57Z"
      },
      "committer": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2013-12-11T13:45:25Z"
      },
      "message": "[Qt] fix RecentRequestsTableModel function ambiuguity\n\n- fixes a compiler ambiguity error with ::createIndex() called in\n  RecentRequestsTableModel::index()\n- also add some Q_UNUSED() macros",
      "tree": {
        "sha": "ce37a92a2b1b10b55511d628b5bfd70fdc9835b7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ce37a92a2b1b10b55511d628b5bfd70fdc9835b7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7df07b3f456958288fe6787be6bee503d5dbb034",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7df07b3f456958288fe6787be6bee503d5dbb034",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7df07b3f456958288fe6787be6bee503d5dbb034",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7df07b3f456958288fe6787be6bee503d5dbb034/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "69127034c3018630d790ba462b070b9219c5d790",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/69127034c3018630d790ba462b070b9219c5d790",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/69127034c3018630d790ba462b070b9219c5d790"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 14,
      "deletions": 6
    },
    "files": [
      {
        "sha": "86c29dd02b00399c638c00eae10ceaa2c1862af5",
        "filename": "src/qt/recentrequeststablemodel.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 3,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7df07b3f456958288fe6787be6bee503d5dbb034/src/qt/recentrequeststablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7df07b3f456958288fe6787be6bee503d5dbb034/src/qt/recentrequeststablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/recentrequeststablemodel.cpp?ref=7df07b3f456958288fe6787be6bee503d5dbb034",
        "patch": "@@ -3,13 +3,16 @@\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #include \"recentrequeststablemodel.h\"\n-#include \"guiutil.h\"\n+\n #include \"bitcoinunits.h\"\n+#include \"guiutil.h\"\n #include \"optionsmodel.h\"\n \n-RecentRequestsTableModel::RecentRequestsTableModel(CWallet *wallet, WalletModel *parent):\n+RecentRequestsTableModel::RecentRequestsTableModel(CWallet *wallet, WalletModel *parent) :\n     walletModel(parent)\n {\n+    Q_UNUSED(wallet);\n+\n     /* These columns must match the indices in the ColumnIndex enumeration */\n     columns << tr(\"Date\") << tr(\"Label\") << tr(\"Message\") << tr(\"Amount\");\n }\n@@ -22,12 +25,14 @@ RecentRequestsTableModel::~RecentRequestsTableModel()\n int RecentRequestsTableModel::rowCount(const QModelIndex &parent) const\n {\n     Q_UNUSED(parent);\n+\n     return list.length();\n }\n \n int RecentRequestsTableModel::columnCount(const QModelIndex &parent) const\n {\n     Q_UNUSED(parent);\n+\n     return columns.length();\n }\n \n@@ -88,12 +93,15 @@ QVariant RecentRequestsTableModel::headerData(int section, Qt::Orientation orien\n \n QModelIndex RecentRequestsTableModel::index(int row, int column, const QModelIndex &parent) const\n {\n-    return createIndex(row, column, 0);\n+    Q_UNUSED(parent);\n+\n+    return createIndex(row, column);\n }\n \n bool RecentRequestsTableModel::removeRows(int row, int count, const QModelIndex &parent)\n {\n     Q_UNUSED(parent);\n+\n     if(count > 0 && row >= 0 && (row+count) <= list.size())\n     {\n         beginRemoveRows(parent, row, row + count - 1);"
      },
      {
        "sha": "3aab7b0a48e79b04e71ec3b2491302a446d118b7",
        "filename": "src/qt/recentrequeststablemodel.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7df07b3f456958288fe6787be6bee503d5dbb034/src/qt/recentrequeststablemodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7df07b3f456958288fe6787be6bee503d5dbb034/src/qt/recentrequeststablemodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/recentrequeststablemodel.h?ref=7df07b3f456958288fe6787be6bee503d5dbb034",
        "patch": "@@ -5,12 +5,12 @@\n #ifndef RECENTREQUESTSTABLEMODEL_H\n #define RECENTREQUESTSTABLEMODEL_H\n \n+#include \"walletmodel.h\"\n+\n #include <QAbstractTableModel>\n #include <QStringList>\n #include <QDateTime>\n \n-#include \"walletmodel.h\"\n-\n class CWallet;\n \n struct RecentRequestEntry\n@@ -27,7 +27,7 @@ class RecentRequestsTableModel: public QAbstractTableModel\n     Q_OBJECT\n \n public:\n-    explicit RecentRequestsTableModel(CWallet *wallet, WalletModel *parent = 0);\n+    explicit RecentRequestsTableModel(CWallet *wallet, WalletModel *parent);\n     ~RecentRequestsTableModel();\n \n     enum ColumnIndex {"
      }
    ]
  },
  {
    "sha": "5e47c2b70a4cffa2de60d578ddd6b7767879c83f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ZTQ3YzJiNzBhNGNmZmEyZGU2MGQ1NzhkZGQ2Yjc3Njc4NzljODNm",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-11T14:10:04Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-11T14:10:21Z"
      },
      "message": "Merge pull request #3382\n\n24646ee [Qt] fix possibilty to delete last sendcoins entry (Philip Kaufmann)",
      "tree": {
        "sha": "adac39b01968f65e88a61974bbb377447dd08897",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/adac39b01968f65e88a61974bbb377447dd08897"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5e47c2b70a4cffa2de60d578ddd6b7767879c83f",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJSqHJNAAoJEHSBCwEjRsmmmh0H/i40NzvDStW2lpogXgivKJth\nFNGGiuFZoHhdC93NRv+YwF8zRA1zEaIX6+uvLW3wkaSHWSnzcaS9mC2d5+TiA+/l\nxzX2i7mB1+JcEev2JMdjdFo260U0mzJmkdnJ1Fe1oylv2/oDVBkwqeyAogRMlkCb\nWVIsqf89ckX2uaqZGQqHUwuRRTJx5vUZrLCrFmcGtGb0DwlTDrYdCFK8CXT5zv5i\nm2ukn1QRvpMkyFxiglMUNOtvUfKSfPc13M/dee7JGpsZRuDqFsvRKbeZnrj3IhrO\nIZsR4zwy75xKaIEQta8Nmet+EC+8ByyQ/FN0ELiStADveX2nhnOd6Ae9G0XM9QY=\n=zdlq\n-----END PGP SIGNATURE-----",
        "payload": "tree adac39b01968f65e88a61974bbb377447dd08897\nparent 69127034c3018630d790ba462b070b9219c5d790\nparent 24646ee76f060a4590d074e80aebeb6665cb5ae1\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1386771004 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1386771021 +0100\n\nMerge pull request #3382\n\n24646ee [Qt] fix possibilty to delete last sendcoins entry (Philip Kaufmann)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5e47c2b70a4cffa2de60d578ddd6b7767879c83f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5e47c2b70a4cffa2de60d578ddd6b7767879c83f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5e47c2b70a4cffa2de60d578ddd6b7767879c83f/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "69127034c3018630d790ba462b070b9219c5d790",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/69127034c3018630d790ba462b070b9219c5d790",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/69127034c3018630d790ba462b070b9219c5d790"
      },
      {
        "sha": "24646ee76f060a4590d074e80aebeb6665cb5ae1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/24646ee76f060a4590d074e80aebeb6665cb5ae1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/24646ee76f060a4590d074e80aebeb6665cb5ae1"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 6,
      "deletions": 4
    },
    "files": [
      {
        "sha": "03cf7f51ea1b8e20bd5aaa20e1f415ba852482d0",
        "filename": "src/qt/sendcoinsdialog.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 4,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5e47c2b70a4cffa2de60d578ddd6b7767879c83f/src/qt/sendcoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5e47c2b70a4cffa2de60d578ddd6b7767879c83f/src/qt/sendcoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.cpp?ref=5e47c2b70a4cffa2de60d578ddd6b7767879c83f",
        "patch": "@@ -306,12 +306,14 @@ void SendCoinsDialog::updateTabsAndLabels()\n \n void SendCoinsDialog::removeEntry(SendCoinsEntry* entry)\n {\n-    entry->deleteLater();\n+    entry->hide();\n \n-    // If the last entry was removed add an empty one\n-    if (!ui->entries->count())\n+    // If the last entry is about to be removed add an empty one\n+    if (ui->entries->count() == 1)\n         addEntry();\n \n+    entry->deleteLater();\n+\n     updateTabsAndLabels();\n }\n \n@@ -543,7 +545,7 @@ void SendCoinsDialog::coinControlChangeChecked(int state)\n }\n \n // Coin Control: custom change address changed\n-void SendCoinsDialog::coinControlChangeEdited(const QString & text)\n+void SendCoinsDialog::coinControlChangeEdited(const QString& text)\n {\n     if (model)\n     {"
      }
    ]
  },
  {
    "sha": "b878b763cb2898e83851353383e5de5bc2d0cc94",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiODc4Yjc2M2NiMjg5OGU4Mzg1MTM1MzM4M2U1ZGU1YmMyZDBjYzk0",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2013-12-11T21:27:56Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2013-12-11T21:27:56Z"
      },
      "message": "build: fix syntax error on older m4/autoconf.\n\nFixes #3358. This affects preinstalled autotools on osx 10.6.",
      "tree": {
        "sha": "72a2e16a2a8a3b1031f1656a89f7379dc36d8790",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/72a2e16a2a8a3b1031f1656a89f7379dc36d8790"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b878b763cb2898e83851353383e5de5bc2d0cc94",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b878b763cb2898e83851353383e5de5bc2d0cc94",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b878b763cb2898e83851353383e5de5bc2d0cc94",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b878b763cb2898e83851353383e5de5bc2d0cc94/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5e47c2b70a4cffa2de60d578ddd6b7767879c83f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5e47c2b70a4cffa2de60d578ddd6b7767879c83f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5e47c2b70a4cffa2de60d578ddd6b7767879c83f"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 3,
      "deletions": 4
    },
    "files": [
      {
        "sha": "af230c355da229dbc504bb310f5894de98996b0a",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 3,
        "deletions": 4,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b878b763cb2898e83851353383e5de5bc2d0cc94/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b878b763cb2898e83851353383e5de5bc2d0cc94/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=b878b763cb2898e83851353383e5de5bc2d0cc94",
        "patch": "@@ -531,10 +531,9 @@ else\n       CPPFLAGS=\"$CPPFLAGS $QT_INCLUDES\"\n     fi\n   ])\n-\n-    BITCOIN_QT_CHECK(AC_CHECK_HEADER([QtPlugin],,BITCOIN_QT_FAIL(QtCore headers missing),))\n-    BITCOIN_QT_CHECK(AC_CHECK_HEADER([QApplication],, BITCOIN_QT_FAIL(QtGui headers missing),))\n-    BITCOIN_QT_CHECK(AC_CHECK_HEADER([QLocalSocket],, BITCOIN_QT_FAIL(QtNetwork headers missing),))\n+    BITCOIN_QT_CHECK([AC_CHECK_HEADER([QtPlugin],,BITCOIN_QT_FAIL(QtCore headers missing))])\n+    BITCOIN_QT_CHECK([AC_CHECK_HEADER([QApplication],, BITCOIN_QT_FAIL(QtGui headers missing))])\n+    BITCOIN_QT_CHECK([AC_CHECK_HEADER([QLocalSocket],, BITCOIN_QT_FAIL(QtNetwork headers missing))])\n \n   BITCOIN_QT_CHECK([\n     if test x$use_tests = xyes; then"
      }
    ]
  },
  {
    "sha": "3f2c6f8654ac3a975d6a78be83b50cd2da4fddb3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozZjJjNmY4NjU0YWMzYTk3NWQ2YTc4YmU4M2I1MGNkMmRhNGZkZGIz",
    "commit": {
      "author": {
        "name": "Lake Denman",
        "email": "lake@lakedenman.com",
        "date": "2013-12-11T22:11:21Z"
      },
      "committer": {
        "name": "Lake Denman",
        "email": "lake@lakedenman.com",
        "date": "2013-12-11T22:11:21Z"
      },
      "message": "Use 'make check' instead of 'make test'",
      "tree": {
        "sha": "fdfa7e6d576f09110cb477b6edc825fc5b61f8c9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fdfa7e6d576f09110cb477b6edc825fc5b61f8c9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3f2c6f8654ac3a975d6a78be83b50cd2da4fddb3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3f2c6f8654ac3a975d6a78be83b50cd2da4fddb3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3f2c6f8654ac3a975d6a78be83b50cd2da4fddb3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3f2c6f8654ac3a975d6a78be83b50cd2da4fddb3/comments",
    "author": {
      "login": "ldenman",
      "id": 1603,
      "node_id": "MDQ6VXNlcjE2MDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1603?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ldenman",
      "html_url": "https://github.com/ldenman",
      "followers_url": "https://api.github.com/users/ldenman/followers",
      "following_url": "https://api.github.com/users/ldenman/following{/other_user}",
      "gists_url": "https://api.github.com/users/ldenman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ldenman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ldenman/subscriptions",
      "organizations_url": "https://api.github.com/users/ldenman/orgs",
      "repos_url": "https://api.github.com/users/ldenman/repos",
      "events_url": "https://api.github.com/users/ldenman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ldenman/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ldenman",
      "id": 1603,
      "node_id": "MDQ6VXNlcjE2MDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1603?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ldenman",
      "html_url": "https://github.com/ldenman",
      "followers_url": "https://api.github.com/users/ldenman/followers",
      "following_url": "https://api.github.com/users/ldenman/following{/other_user}",
      "gists_url": "https://api.github.com/users/ldenman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ldenman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ldenman/subscriptions",
      "organizations_url": "https://api.github.com/users/ldenman/orgs",
      "repos_url": "https://api.github.com/users/ldenman/repos",
      "events_url": "https://api.github.com/users/ldenman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ldenman/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5e47c2b70a4cffa2de60d578ddd6b7767879c83f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5e47c2b70a4cffa2de60d578ddd6b7767879c83f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5e47c2b70a4cffa2de60d578ddd6b7767879c83f"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "6268a440a8787408abd026bf77920a2a98b92657",
        "filename": "doc/build-osx.md",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f2c6f8654ac3a975d6a78be83b50cd2da4fddb3/doc/build-osx.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f2c6f8654ac3a975d6a78be83b50cd2da4fddb3/doc/build-osx.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-osx.md?ref=3f2c6f8654ac3a975d6a78be83b50cd2da4fddb3",
        "patch": "@@ -62,7 +62,7 @@ Installing the dependencies using MacPorts is very straightforward.\n \n 3.  It is a good idea to build and run the unit tests, too:\n \n-        make test\n+        make check\n \n Instructions: HomeBrew\n ----------------------\n@@ -98,7 +98,7 @@ Rerunning \"openssl version\" should now return the correct version.\n \n 3.  It is a good idea to build and run the unit tests, too:\n \n-        make test\n+        make check\n \n Creating a release build\n ------------------------"
      }
    ]
  },
  {
    "sha": "c4880e01720286c9e9f15526d3436232936c0458",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNDg4MGUwMTcyMDI4NmM5ZTlmMTU1MjZkMzQzNjIzMjkzNmMwNDU4",
    "commit": {
      "author": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2013-12-11T23:33:03Z"
      },
      "committer": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2013-12-11T23:33:03Z"
      },
      "message": "Merge pull request #3395 from ldenman/patch-2\n\nUse 'make check' instead of 'make test'",
      "tree": {
        "sha": "fdfa7e6d576f09110cb477b6edc825fc5b61f8c9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fdfa7e6d576f09110cb477b6edc825fc5b61f8c9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c4880e01720286c9e9f15526d3436232936c0458",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c4880e01720286c9e9f15526d3436232936c0458",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c4880e01720286c9e9f15526d3436232936c0458",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c4880e01720286c9e9f15526d3436232936c0458/comments",
    "author": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5e47c2b70a4cffa2de60d578ddd6b7767879c83f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5e47c2b70a4cffa2de60d578ddd6b7767879c83f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5e47c2b70a4cffa2de60d578ddd6b7767879c83f"
      },
      {
        "sha": "3f2c6f8654ac3a975d6a78be83b50cd2da4fddb3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3f2c6f8654ac3a975d6a78be83b50cd2da4fddb3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3f2c6f8654ac3a975d6a78be83b50cd2da4fddb3"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "6268a440a8787408abd026bf77920a2a98b92657",
        "filename": "doc/build-osx.md",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c4880e01720286c9e9f15526d3436232936c0458/doc/build-osx.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c4880e01720286c9e9f15526d3436232936c0458/doc/build-osx.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-osx.md?ref=c4880e01720286c9e9f15526d3436232936c0458",
        "patch": "@@ -62,7 +62,7 @@ Installing the dependencies using MacPorts is very straightforward.\n \n 3.  It is a good idea to build and run the unit tests, too:\n \n-        make test\n+        make check\n \n Instructions: HomeBrew\n ----------------------\n@@ -98,7 +98,7 @@ Rerunning \"openssl version\" should now return the correct version.\n \n 3.  It is a good idea to build and run the unit tests, too:\n \n-        make test\n+        make check\n \n Creating a release build\n ------------------------"
      }
    ]
  },
  {
    "sha": "fb34be6d5905d36a2d9a392d87aa73bdb9470a1b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYjM0YmU2ZDU5MDVkMzZhMmQ5YTM5MmQ4N2FhNzNiZGI5NDcwYTFi",
    "commit": {
      "author": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2013-12-12T00:01:54Z"
      },
      "committer": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2013-12-12T00:01:54Z"
      },
      "message": "Merge pull request #3393 from theuni/build-10.6\n\nbuild: fix syntax error on older m4/autoconf.",
      "tree": {
        "sha": "c34500b1c60409d1f2b8e4efafe8f5f18430f99b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c34500b1c60409d1f2b8e4efafe8f5f18430f99b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fb34be6d5905d36a2d9a392d87aa73bdb9470a1b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fb34be6d5905d36a2d9a392d87aa73bdb9470a1b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fb34be6d5905d36a2d9a392d87aa73bdb9470a1b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fb34be6d5905d36a2d9a392d87aa73bdb9470a1b/comments",
    "author": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c4880e01720286c9e9f15526d3436232936c0458",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c4880e01720286c9e9f15526d3436232936c0458",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c4880e01720286c9e9f15526d3436232936c0458"
      },
      {
        "sha": "b878b763cb2898e83851353383e5de5bc2d0cc94",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b878b763cb2898e83851353383e5de5bc2d0cc94",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b878b763cb2898e83851353383e5de5bc2d0cc94"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 3,
      "deletions": 4
    },
    "files": [
      {
        "sha": "af230c355da229dbc504bb310f5894de98996b0a",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 3,
        "deletions": 4,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fb34be6d5905d36a2d9a392d87aa73bdb9470a1b/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fb34be6d5905d36a2d9a392d87aa73bdb9470a1b/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=fb34be6d5905d36a2d9a392d87aa73bdb9470a1b",
        "patch": "@@ -531,10 +531,9 @@ else\n       CPPFLAGS=\"$CPPFLAGS $QT_INCLUDES\"\n     fi\n   ])\n-\n-    BITCOIN_QT_CHECK(AC_CHECK_HEADER([QtPlugin],,BITCOIN_QT_FAIL(QtCore headers missing),))\n-    BITCOIN_QT_CHECK(AC_CHECK_HEADER([QApplication],, BITCOIN_QT_FAIL(QtGui headers missing),))\n-    BITCOIN_QT_CHECK(AC_CHECK_HEADER([QLocalSocket],, BITCOIN_QT_FAIL(QtNetwork headers missing),))\n+    BITCOIN_QT_CHECK([AC_CHECK_HEADER([QtPlugin],,BITCOIN_QT_FAIL(QtCore headers missing))])\n+    BITCOIN_QT_CHECK([AC_CHECK_HEADER([QApplication],, BITCOIN_QT_FAIL(QtGui headers missing))])\n+    BITCOIN_QT_CHECK([AC_CHECK_HEADER([QLocalSocket],, BITCOIN_QT_FAIL(QtNetwork headers missing))])\n \n   BITCOIN_QT_CHECK([\n     if test x$use_tests = xyes; then"
      }
    ]
  },
  {
    "sha": "ed873a301eeff8c021ba57c78fb702fd2b6f0452",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplZDg3M2EzMDFlZWZmOGMwMjFiYTU3Yzc4ZmI3MDJmZDJiNmYwNDUy",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2013-12-12T21:08:18Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2013-12-12T21:08:18Z"
      },
      "message": "Merge src/leveldb changes for LevelDB 1.15",
      "tree": {
        "sha": "3fb5bcb91b8ceab464a50e63b6fce407eccb17e2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3fb5bcb91b8ceab464a50e63b6fce407eccb17e2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ed873a301eeff8c021ba57c78fb702fd2b6f0452",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ed873a301eeff8c021ba57c78fb702fd2b6f0452",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ed873a301eeff8c021ba57c78fb702fd2b6f0452",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ed873a301eeff8c021ba57c78fb702fd2b6f0452/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fb34be6d5905d36a2d9a392d87aa73bdb9470a1b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fb34be6d5905d36a2d9a392d87aa73bdb9470a1b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fb34be6d5905d36a2d9a392d87aa73bdb9470a1b"
      },
      {
        "sha": "55c68902946c8c9bacea748c159be456a7c9c180",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/55c68902946c8c9bacea748c159be456a7c9c180",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/55c68902946c8c9bacea748c159be456a7c9c180"
      }
    ],
    "stats": {
      "total": 813,
      "additions": 448,
      "deletions": 365
    },
    "files": [
      {
        "sha": "2439d7a45299f2aadc9bb99512c1aaa6300b02a7",
        "filename": "src/leveldb/AUTHORS",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ed873a301eeff8c021ba57c78fb702fd2b6f0452/src/leveldb/AUTHORS",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ed873a301eeff8c021ba57c78fb702fd2b6f0452/src/leveldb/AUTHORS",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/AUTHORS?ref=ed873a301eeff8c021ba57c78fb702fd2b6f0452",
        "patch": "@@ -9,3 +9,4 @@ Sanjay Ghemawat <sanjay@google.com>\n \n # Partial list of contributors:\n Kevin Regan <kevin.d.regan@gmail.com>\n+Johan Bilien <jobi@litl.com>"
      },
      {
        "sha": "344ff2972a57dd6925b96ca47b5f3c9c6bfdf7e1",
        "filename": "src/leveldb/Makefile",
        "status": "modified",
        "additions": 7,
        "deletions": 3,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ed873a301eeff8c021ba57c78fb702fd2b6f0452/src/leveldb/Makefile",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ed873a301eeff8c021ba57c78fb702fd2b6f0452/src/leveldb/Makefile",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/Makefile?ref=ed873a301eeff8c021ba57c78fb702fd2b6f0452",
        "patch": "@@ -44,6 +44,7 @@ TESTS = \\\n \tfilename_test \\\n \tfilter_block_test \\\n \tissue178_test \\\n+\tissue200_test \\\n \tlog_test \\\n \tmemenv_test \\\n \tskiplist_test \\\n@@ -71,7 +72,7 @@ SHARED = $(SHARED1)\n else\n # Update db.h if you change these.\n SHARED_MAJOR = 1\n-SHARED_MINOR = 13\n+SHARED_MINOR = 15\n SHARED1 = libleveldb.$(PLATFORM_SHARED_EXT)\n SHARED2 = $(SHARED1).$(SHARED_MAJOR)\n SHARED3 = $(SHARED1).$(SHARED_MAJOR).$(SHARED_MINOR)\n@@ -154,6 +155,9 @@ filter_block_test: table/filter_block_test.o $(LIBOBJECTS) $(TESTHARNESS)\n issue178_test: issues/issue178_test.o $(LIBOBJECTS) $(TESTHARNESS)\n \t$(CXX) $(LDFLAGS) issues/issue178_test.o $(LIBOBJECTS) $(TESTHARNESS) -o $@ $(LIBS)\n \n+issue200_test: issues/issue200_test.o $(LIBOBJECTS) $(TESTHARNESS)\n+\t$(CXX) $(LDFLAGS) issues/issue200_test.o $(LIBOBJECTS) $(TESTHARNESS) -o $@ $(LIBS)\n+\n log_test: db/log_test.o $(LIBOBJECTS) $(TESTHARNESS)\n \t$(CXX) $(LDFLAGS) db/log_test.o $(LIBOBJECTS) $(TESTHARNESS) -o $@ $(LIBS)\n \n@@ -191,14 +195,14 @@ IOSVERSION=$(shell defaults read $(PLATFORMSROOT)/iPhoneOS.platform/version CFBu\n \tmkdir -p ios-x86/$(dir $@)\n \t$(CXX) $(CXXFLAGS) -isysroot $(SIMULATORROOT)/SDKs/iPhoneSimulator$(IOSVERSION).sdk -arch i686 -c $< -o ios-x86/$@\n \tmkdir -p ios-arm/$(dir $@)\n-\t$(DEVICEROOT)/usr/bin/$(CXX) $(CXXFLAGS) -isysroot $(DEVICEROOT)/SDKs/iPhoneOS$(IOSVERSION).sdk -arch armv6 -arch armv7 -c $< -o ios-arm/$@\n+\txcrun -sdk iphoneos $(CXX) $(CXXFLAGS) -isysroot $(DEVICEROOT)/SDKs/iPhoneOS$(IOSVERSION).sdk -arch armv6 -arch armv7 -c $< -o ios-arm/$@\n \tlipo ios-x86/$@ ios-arm/$@ -create -output $@\n \n .c.o:\n \tmkdir -p ios-x86/$(dir $@)\n \t$(CC) $(CFLAGS) -isysroot $(SIMULATORROOT)/SDKs/iPhoneSimulator$(IOSVERSION).sdk -arch i686 -c $< -o ios-x86/$@\n \tmkdir -p ios-arm/$(dir $@)\n-\t$(DEVICEROOT)/usr/bin/$(CC) $(CFLAGS) -isysroot $(DEVICEROOT)/SDKs/iPhoneOS$(IOSVERSION).sdk -arch armv6 -arch armv7 -c $< -o ios-arm/$@\n+\txcrun -sdk iphoneos $(CC) $(CFLAGS) -isysroot $(DEVICEROOT)/SDKs/iPhoneOS$(IOSVERSION).sdk -arch armv6 -arch armv7 -c $< -o ios-arm/$@\n \tlipo ios-x86/$@ ios-arm/$@ -create -output $@\n \n else"
      },
      {
        "sha": "85b1ce02241a2e336cefff28c1ccb28b22ff09e9",
        "filename": "src/leveldb/build_detect_platform",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ed873a301eeff8c021ba57c78fb702fd2b6f0452/src/leveldb/build_detect_platform",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ed873a301eeff8c021ba57c78fb702fd2b6f0452/src/leveldb/build_detect_platform",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/build_detect_platform?ref=ed873a301eeff8c021ba57c78fb702fd2b6f0452",
        "patch": "@@ -137,6 +137,16 @@ case \"$TARGET_OS\" in\n         # man ld: +h internal_name\n         PLATFORM_SHARED_LDFLAGS=\"-shared -Wl,+h -Wl,\"\n         ;;\n+    IOS)\n+        PLATFORM=IOS\n+        COMMON_FLAGS=\"$MEMCMP_FLAG -DOS_MACOSX\"\n+        [ -z \"$INSTALL_PATH\" ] && INSTALL_PATH=`pwd`\n+        PORT_FILE=port/port_posix.cc\n+        PLATFORM_SHARED_EXT=\n+        PLATFORM_SHARED_LDFLAGS=\n+        PLATFORM_SHARED_CFLAGS=\n+        PLATFORM_SHARED_VERSIONED=\n+        ;;\n     OS_WINDOWS_CROSSCOMPILE | NATIVE_WINDOWS)\n         PLATFORM=OS_WINDOWS\n         COMMON_FLAGS=\"-fno-builtin-memcmp -D_REENTRANT -DOS_WINDOWS -DLEVELDB_PLATFORM_WINDOWS -DWINVER=0x0500 -D__USE_MINGW_ANSI_STDIO=1\""
      },
      {
        "sha": "96afc68913ce23ff83ffbf0fa94610b4f30f182e",
        "filename": "src/leveldb/db/corruption_test.cc",
        "status": "modified",
        "additions": 24,
        "deletions": 2,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ed873a301eeff8c021ba57c78fb702fd2b6f0452/src/leveldb/db/corruption_test.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ed873a301eeff8c021ba57c78fb702fd2b6f0452/src/leveldb/db/corruption_test.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/corruption_test.cc?ref=ed873a301eeff8c021ba57c78fb702fd2b6f0452",
        "patch": "@@ -75,7 +75,13 @@ class CorruptionTest {\n       Slice key = Key(i, &key_space);\n       batch.Clear();\n       batch.Put(key, Value(i, &value_space));\n-      ASSERT_OK(db_->Write(WriteOptions(), &batch));\n+      WriteOptions options;\n+      // Corrupt() doesn't work without this sync on windows; stat reports 0 for\n+      // the file size.\n+      if (i == n - 1) {\n+        options.sync = true;\n+      }\n+      ASSERT_OK(db_->Write(options, &batch));\n     }\n   }\n \n@@ -125,7 +131,7 @@ class CorruptionTest {\n     FileType type;\n     std::string fname;\n     int picked_number = -1;\n-    for (int i = 0; i < filenames.size(); i++) {\n+    for (size_t i = 0; i < filenames.size(); i++) {\n       if (ParseFileName(filenames[i], &number, &type) &&\n           type == filetype &&\n           int(number) > picked_number) {  // Pick latest file\n@@ -238,6 +244,22 @@ TEST(CorruptionTest, TableFile) {\n   Check(90, 99);\n }\n \n+TEST(CorruptionTest, TableFileRepair) {\n+  options_.block_size = 2 * kValueSize;  // Limit scope of corruption\n+  options_.paranoid_checks = true;\n+  Reopen();\n+  Build(100);\n+  DBImpl* dbi = reinterpret_cast<DBImpl*>(db_);\n+  dbi->TEST_CompactMemTable();\n+  dbi->TEST_CompactRange(0, NULL, NULL);\n+  dbi->TEST_CompactRange(1, NULL, NULL);\n+\n+  Corrupt(kTableFile, 100, 1);\n+  RepairDB();\n+  Reopen();\n+  Check(95, 99);\n+}\n+\n TEST(CorruptionTest, TableFileIndexData) {\n   Build(10000);  // Enough to build multiple Tables\n   DBImpl* dbi = reinterpret_cast<DBImpl*>(db_);"
      },
      {
        "sha": "fc46d89693ee72c534e9e936e4643089b9845069",
        "filename": "src/leveldb/db/db_bench.cc",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ed873a301eeff8c021ba57c78fb702fd2b6f0452/src/leveldb/db/db_bench.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ed873a301eeff8c021ba57c78fb702fd2b6f0452/src/leveldb/db/db_bench.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/db_bench.cc?ref=ed873a301eeff8c021ba57c78fb702fd2b6f0452",
        "patch": "@@ -128,7 +128,7 @@ class RandomGenerator {\n     pos_ = 0;\n   }\n \n-  Slice Generate(int len) {\n+  Slice Generate(size_t len) {\n     if (pos_ + len > data_.size()) {\n       pos_ = 0;\n       assert(len < data_.size());\n@@ -139,11 +139,11 @@ class RandomGenerator {\n };\n \n static Slice TrimSpace(Slice s) {\n-  int start = 0;\n+  size_t start = 0;\n   while (start < s.size() && isspace(s[start])) {\n     start++;\n   }\n-  int limit = s.size();\n+  size_t limit = s.size();\n   while (limit > start && isspace(s[limit-1])) {\n     limit--;\n   }\n@@ -399,7 +399,7 @@ class Benchmark {\n     heap_counter_(0) {\n     std::vector<std::string> files;\n     Env::Default()->GetChildren(FLAGS_db, &files);\n-    for (int i = 0; i < files.size(); i++) {\n+    for (size_t i = 0; i < files.size(); i++) {\n       if (Slice(files[i]).starts_with(\"heap-\")) {\n         Env::Default()->DeleteFile(std::string(FLAGS_db) + \"/\" + files[i]);\n       }"
      },
      {
        "sha": "faf5e7d7ba2bd6781d501f90e81966da8ac6a7e9",
        "filename": "src/leveldb/db/db_impl.cc",
        "status": "modified",
        "additions": 57,
        "deletions": 42,
        "changes": 99,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ed873a301eeff8c021ba57c78fb702fd2b6f0452/src/leveldb/db/db_impl.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ed873a301eeff8c021ba57c78fb702fd2b6f0452/src/leveldb/db/db_impl.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/db_impl.cc?ref=ed873a301eeff8c021ba57c78fb702fd2b6f0452",
        "patch": "@@ -133,8 +133,7 @@ DBImpl::DBImpl(const Options& raw_options, const std::string& dbname)\n       seed_(0),\n       tmp_batch_(new WriteBatch),\n       bg_compaction_scheduled_(false),\n-      manual_compaction_(NULL),\n-      consecutive_compaction_errors_(0) {\n+      manual_compaction_(NULL) {\n   mem_->Ref();\n   has_imm_.Release_Store(NULL);\n \n@@ -217,6 +216,12 @@ void DBImpl::MaybeIgnoreError(Status* s) const {\n }\n \n void DBImpl::DeleteObsoleteFiles() {\n+  if (!bg_error_.ok()) {\n+    // After a background error, we don't know whether a new version may\n+    // or may not have been committed, so we cannot safely garbage collect.\n+    return;\n+  }\n+\n   // Make a set of all of the live files\n   std::set<uint64_t> live = pending_outputs_;\n   versions_->AddLiveFiles(&live);\n@@ -495,7 +500,7 @@ Status DBImpl::WriteLevel0Table(MemTable* mem, VersionEdit* edit,\n   return s;\n }\n \n-Status DBImpl::CompactMemTable() {\n+void DBImpl::CompactMemTable() {\n   mutex_.AssertHeld();\n   assert(imm_ != NULL);\n \n@@ -523,9 +528,9 @@ Status DBImpl::CompactMemTable() {\n     imm_ = NULL;\n     has_imm_.Release_Store(NULL);\n     DeleteObsoleteFiles();\n+  } else {\n+    RecordBackgroundError(s);\n   }\n-\n-  return s;\n }\n \n void DBImpl::CompactRange(const Slice* begin, const Slice* end) {\n@@ -568,16 +573,18 @@ void DBImpl::TEST_CompactRange(int level, const Slice* begin,const Slice* end) {\n   }\n \n   MutexLock l(&mutex_);\n-  while (!manual.done) {\n-    while (manual_compaction_ != NULL) {\n-      bg_cv_.Wait();\n-    }\n-    manual_compaction_ = &manual;\n-    MaybeScheduleCompaction();\n-    while (manual_compaction_ == &manual) {\n+  while (!manual.done && !shutting_down_.Acquire_Load() && bg_error_.ok()) {\n+    if (manual_compaction_ == NULL) {  // Idle\n+      manual_compaction_ = &manual;\n+      MaybeScheduleCompaction();\n+    } else {  // Running either my compaction or another compaction.\n       bg_cv_.Wait();\n     }\n   }\n+  if (manual_compaction_ == &manual) {\n+    // Cancel my manual compaction since we aborted early for some reason.\n+    manual_compaction_ = NULL;\n+  }\n }\n \n Status DBImpl::TEST_CompactMemTable() {\n@@ -596,12 +603,22 @@ Status DBImpl::TEST_CompactMemTable() {\n   return s;\n }\n \n+void DBImpl::RecordBackgroundError(const Status& s) {\n+  mutex_.AssertHeld();\n+  if (bg_error_.ok()) {\n+    bg_error_ = s;\n+    bg_cv_.SignalAll();\n+  }\n+}\n+\n void DBImpl::MaybeScheduleCompaction() {\n   mutex_.AssertHeld();\n   if (bg_compaction_scheduled_) {\n     // Already scheduled\n   } else if (shutting_down_.Acquire_Load()) {\n     // DB is being deleted; no more background compactions\n+  } else if (!bg_error_.ok()) {\n+    // Already got an error; no more changes\n   } else if (imm_ == NULL &&\n              manual_compaction_ == NULL &&\n              !versions_->NeedsCompaction()) {\n@@ -619,30 +636,12 @@ void DBImpl::BGWork(void* db) {\n void DBImpl::BackgroundCall() {\n   MutexLock l(&mutex_);\n   assert(bg_compaction_scheduled_);\n-  if (!shutting_down_.Acquire_Load()) {\n-    Status s = BackgroundCompaction();\n-    if (s.ok()) {\n-      // Success\n-      consecutive_compaction_errors_ = 0;\n-    } else if (shutting_down_.Acquire_Load()) {\n-      // Error most likely due to shutdown; do not wait\n-    } else {\n-      // Wait a little bit before retrying background compaction in\n-      // case this is an environmental problem and we do not want to\n-      // chew up resources for failed compactions for the duration of\n-      // the problem.\n-      bg_cv_.SignalAll();  // In case a waiter can proceed despite the error\n-      Log(options_.info_log, \"Waiting after background compaction error: %s\",\n-          s.ToString().c_str());\n-      mutex_.Unlock();\n-      ++consecutive_compaction_errors_;\n-      int seconds_to_sleep = 1;\n-      for (int i = 0; i < 3 && i < consecutive_compaction_errors_ - 1; ++i) {\n-        seconds_to_sleep *= 2;\n-      }\n-      env_->SleepForMicroseconds(seconds_to_sleep * 1000000);\n-      mutex_.Lock();\n-    }\n+  if (shutting_down_.Acquire_Load()) {\n+    // No more background work when shutting down.\n+  } else if (!bg_error_.ok()) {\n+    // No more background work after a background error.\n+  } else {\n+    BackgroundCompaction();\n   }\n \n   bg_compaction_scheduled_ = false;\n@@ -653,11 +652,12 @@ void DBImpl::BackgroundCall() {\n   bg_cv_.SignalAll();\n }\n \n-Status DBImpl::BackgroundCompaction() {\n+void DBImpl::BackgroundCompaction() {\n   mutex_.AssertHeld();\n \n   if (imm_ != NULL) {\n-    return CompactMemTable();\n+    CompactMemTable();\n+    return;\n   }\n \n   Compaction* c;\n@@ -691,6 +691,9 @@ Status DBImpl::BackgroundCompaction() {\n     c->edit()->AddFile(c->level() + 1, f->number, f->file_size,\n                        f->smallest, f->largest);\n     status = versions_->LogAndApply(c->edit(), &mutex_);\n+    if (!status.ok()) {\n+      RecordBackgroundError(status);\n+    }\n     VersionSet::LevelSummaryStorage tmp;\n     Log(options_.info_log, \"Moved #%lld to level-%d %lld bytes %s: %s\\n\",\n         static_cast<unsigned long long>(f->number),\n@@ -701,6 +704,9 @@ Status DBImpl::BackgroundCompaction() {\n   } else {\n     CompactionState* compact = new CompactionState(c);\n     status = DoCompactionWork(compact);\n+    if (!status.ok()) {\n+      RecordBackgroundError(status);\n+    }\n     CleanupCompaction(compact);\n     c->ReleaseInputs();\n     DeleteObsoleteFiles();\n@@ -714,9 +720,6 @@ Status DBImpl::BackgroundCompaction() {\n   } else {\n     Log(options_.info_log,\n         \"Compaction error: %s\", status.ToString().c_str());\n-    if (options_.paranoid_checks && bg_error_.ok()) {\n-      bg_error_ = status;\n-    }\n   }\n \n   if (is_manual) {\n@@ -732,7 +735,6 @@ Status DBImpl::BackgroundCompaction() {\n     }\n     manual_compaction_ = NULL;\n   }\n-  return status;\n }\n \n void DBImpl::CleanupCompaction(CompactionState* compact) {\n@@ -1002,6 +1004,9 @@ Status DBImpl::DoCompactionWork(CompactionState* compact) {\n   if (status.ok()) {\n     status = InstallCompactionResults(compact);\n   }\n+  if (!status.ok()) {\n+    RecordBackgroundError(status);\n+  }\n   VersionSet::LevelSummaryStorage tmp;\n   Log(options_.info_log,\n       \"compacted to: %s\", versions_->LevelSummary(&tmp));\n@@ -1185,13 +1190,23 @@ Status DBImpl::Write(const WriteOptions& options, WriteBatch* my_batch) {\n     {\n       mutex_.Unlock();\n       status = log_->AddRecord(WriteBatchInternal::Contents(updates));\n+      bool sync_error = false;\n       if (status.ok() && options.sync) {\n         status = logfile_->Sync();\n+        if (!status.ok()) {\n+          sync_error = true;\n+        }\n       }\n       if (status.ok()) {\n         status = WriteBatchInternal::InsertInto(updates, mem_);\n       }\n       mutex_.Lock();\n+      if (sync_error) {\n+        // The state of the log file is indeterminate: the log record we\n+        // just added may or may not show up when the DB is re-opened.\n+        // So we force the DB into a mode where all future writes fail.\n+        RecordBackgroundError(status);\n+      }\n     }\n     if (updates == tmp_batch_) tmp_batch_->Clear();\n "
      },
      {
        "sha": "cfc998164af60d9a5a9fb388e36bf56fbb74bf16",
        "filename": "src/leveldb/db/db_impl.h",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ed873a301eeff8c021ba57c78fb702fd2b6f0452/src/leveldb/db/db_impl.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ed873a301eeff8c021ba57c78fb702fd2b6f0452/src/leveldb/db/db_impl.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/db_impl.h?ref=ed873a301eeff8c021ba57c78fb702fd2b6f0452",
        "patch": "@@ -87,8 +87,8 @@ class DBImpl : public DB {\n \n   // Compact the in-memory write buffer to disk.  Switches to a new\n   // log-file/memtable and writes a new descriptor iff successful.\n-  Status CompactMemTable()\n-      EXCLUSIVE_LOCKS_REQUIRED(mutex_);\n+  // Errors are recorded in bg_error_.\n+  void CompactMemTable() EXCLUSIVE_LOCKS_REQUIRED(mutex_);\n \n   Status RecoverLogFile(uint64_t log_number,\n                         VersionEdit* edit,\n@@ -102,10 +102,12 @@ class DBImpl : public DB {\n       EXCLUSIVE_LOCKS_REQUIRED(mutex_);\n   WriteBatch* BuildBatchGroup(Writer** last_writer);\n \n+  void RecordBackgroundError(const Status& s);\n+\n   void MaybeScheduleCompaction() EXCLUSIVE_LOCKS_REQUIRED(mutex_);\n   static void BGWork(void* db);\n   void BackgroundCall();\n-  Status BackgroundCompaction() EXCLUSIVE_LOCKS_REQUIRED(mutex_);\n+  void  BackgroundCompaction() EXCLUSIVE_LOCKS_REQUIRED(mutex_);\n   void CleanupCompaction(CompactionState* compact)\n       EXCLUSIVE_LOCKS_REQUIRED(mutex_);\n   Status DoCompactionWork(CompactionState* compact)\n@@ -170,7 +172,6 @@ class DBImpl : public DB {\n \n   // Have we encountered a background error in paranoid mode?\n   Status bg_error_;\n-  int consecutive_compaction_errors_;\n \n   // Per level compaction stats.  stats_[level] stores the stats for\n   // compactions that produced data for the specified \"level\"."
      },
      {
        "sha": "3b2035e9e3c2dce2b895d2f7fd03df646c166eb7",
        "filename": "src/leveldb/db/db_iter.cc",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ed873a301eeff8c021ba57c78fb702fd2b6f0452/src/leveldb/db/db_iter.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ed873a301eeff8c021ba57c78fb702fd2b6f0452/src/leveldb/db/db_iter.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/db_iter.cc?ref=ed873a301eeff8c021ba57c78fb702fd2b6f0452",
        "patch": "@@ -161,12 +161,13 @@ void DBIter::Next() {\n       saved_key_.clear();\n       return;\n     }\n+    // saved_key_ already contains the key to skip past.\n+  } else {\n+    // Store in saved_key_ the current key so we skip it below.\n+    SaveKey(ExtractUserKey(iter_->key()), &saved_key_);\n   }\n \n-  // Temporarily use saved_key_ as storage for key to skip.\n-  std::string* skip = &saved_key_;\n-  SaveKey(ExtractUserKey(iter_->key()), skip);\n-  FindNextUserEntry(true, skip);\n+  FindNextUserEntry(true, &saved_key_);\n }\n \n void DBIter::FindNextUserEntry(bool skipping, std::string* skip) {"
      },
      {
        "sha": "280b01c14b593cbdf86a30b3d323308730d3fa2f",
        "filename": "src/leveldb/db/db_test.cc",
        "status": "modified",
        "additions": 89,
        "deletions": 53,
        "changes": 142,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ed873a301eeff8c021ba57c78fb702fd2b6f0452/src/leveldb/db/db_test.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ed873a301eeff8c021ba57c78fb702fd2b6f0452/src/leveldb/db/db_test.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/db_test.cc?ref=ed873a301eeff8c021ba57c78fb702fd2b6f0452",
        "patch": "@@ -57,8 +57,11 @@ void DelayMilliseconds(int millis) {\n // Special Env used to delay background operations\n class SpecialEnv : public EnvWrapper {\n  public:\n-  // sstable Sync() calls are blocked while this pointer is non-NULL.\n-  port::AtomicPointer delay_sstable_sync_;\n+  // sstable/log Sync() calls are blocked while this pointer is non-NULL.\n+  port::AtomicPointer delay_data_sync_;\n+\n+  // sstable/log Sync() calls return an error.\n+  port::AtomicPointer data_sync_error_;\n \n   // Simulate no-space errors while this pointer is non-NULL.\n   port::AtomicPointer no_space_;\n@@ -75,11 +78,9 @@ class SpecialEnv : public EnvWrapper {\n   bool count_random_reads_;\n   AtomicCounter random_read_counter_;\n \n-  AtomicCounter sleep_counter_;\n-  AtomicCounter sleep_time_counter_;\n-\n   explicit SpecialEnv(Env* base) : EnvWrapper(base) {\n-    delay_sstable_sync_.Release_Store(NULL);\n+    delay_data_sync_.Release_Store(NULL);\n+    data_sync_error_.Release_Store(NULL);\n     no_space_.Release_Store(NULL);\n     non_writable_.Release_Store(NULL);\n     count_random_reads_ = false;\n@@ -88,17 +89,17 @@ class SpecialEnv : public EnvWrapper {\n   }\n \n   Status NewWritableFile(const std::string& f, WritableFile** r) {\n-    class SSTableFile : public WritableFile {\n+    class DataFile : public WritableFile {\n      private:\n       SpecialEnv* env_;\n       WritableFile* base_;\n \n      public:\n-      SSTableFile(SpecialEnv* env, WritableFile* base)\n+      DataFile(SpecialEnv* env, WritableFile* base)\n           : env_(env),\n             base_(base) {\n       }\n-      ~SSTableFile() { delete base_; }\n+      ~DataFile() { delete base_; }\n       Status Append(const Slice& data) {\n         if (env_->no_space_.Acquire_Load() != NULL) {\n           // Drop writes on the floor\n@@ -110,7 +111,10 @@ class SpecialEnv : public EnvWrapper {\n       Status Close() { return base_->Close(); }\n       Status Flush() { return base_->Flush(); }\n       Status Sync() {\n-        while (env_->delay_sstable_sync_.Acquire_Load() != NULL) {\n+        if (env_->data_sync_error_.Acquire_Load() != NULL) {\n+          return Status::IOError(\"simulated data sync error\");\n+        }\n+        while (env_->delay_data_sync_.Acquire_Load() != NULL) {\n           DelayMilliseconds(100);\n         }\n         return base_->Sync();\n@@ -147,8 +151,9 @@ class SpecialEnv : public EnvWrapper {\n \n     Status s = target()->NewWritableFile(f, r);\n     if (s.ok()) {\n-      if (strstr(f.c_str(), \".sst\") != NULL) {\n-        *r = new SSTableFile(this, *r);\n+      if (strstr(f.c_str(), \".ldb\") != NULL ||\n+          strstr(f.c_str(), \".log\") != NULL) {\n+        *r = new DataFile(this, *r);\n       } else if (strstr(f.c_str(), \"MANIFEST\") != NULL) {\n         *r = new ManifestFile(this, *r);\n       }\n@@ -179,12 +184,6 @@ class SpecialEnv : public EnvWrapper {\n     }\n     return s;\n   }\n-\n-  virtual void SleepForMicroseconds(int micros) {\n-    sleep_counter_.Increment();\n-    sleep_time_counter_.IncrementBy(micros);\n-  }\n-\n };\n \n class DBTest {\n@@ -322,7 +321,7 @@ class DBTest {\n     }\n \n     // Check reverse iteration results are the reverse of forward results\n-    int matched = 0;\n+    size_t matched = 0;\n     for (iter->SeekToLast(); iter->Valid(); iter->Prev()) {\n       ASSERT_LT(matched, forward.size());\n       ASSERT_EQ(IterStatus(iter), forward[forward.size() - matched - 1]);\n@@ -484,6 +483,24 @@ class DBTest {\n     }\n     return false;\n   }\n+\n+  // Returns number of files renamed.\n+  int RenameLDBToSST() {\n+    std::vector<std::string> filenames;\n+    ASSERT_OK(env_->GetChildren(dbname_, &filenames));\n+    uint64_t number;\n+    FileType type;\n+    int files_renamed = 0;\n+    for (size_t i = 0; i < filenames.size(); i++) {\n+      if (ParseFileName(filenames[i], &number, &type) && type == kTableFile) {\n+        const std::string from = TableFileName(dbname_, number);\n+        const std::string to = SSTTableFileName(dbname_, number);\n+        ASSERT_OK(env_->RenameFile(from, to));\n+        files_renamed++;\n+      }\n+    }\n+    return files_renamed;\n+  }\n };\n \n TEST(DBTest, Empty) {\n@@ -525,11 +542,11 @@ TEST(DBTest, GetFromImmutableLayer) {\n     ASSERT_OK(Put(\"foo\", \"v1\"));\n     ASSERT_EQ(\"v1\", Get(\"foo\"));\n \n-    env_->delay_sstable_sync_.Release_Store(env_);   // Block sync calls\n+    env_->delay_data_sync_.Release_Store(env_);      // Block sync calls\n     Put(\"k1\", std::string(100000, 'x'));             // Fill memtable\n     Put(\"k2\", std::string(100000, 'y'));             // Trigger compaction\n     ASSERT_EQ(\"v1\", Get(\"foo\"));\n-    env_->delay_sstable_sync_.Release_Store(NULL);   // Release sync calls\n+    env_->delay_data_sync_.Release_Store(NULL);      // Release sync calls\n   } while (ChangeOptions());\n }\n \n@@ -1516,41 +1533,13 @@ TEST(DBTest, NoSpace) {\n   Compact(\"a\", \"z\");\n   const int num_files = CountFiles();\n   env_->no_space_.Release_Store(env_);   // Force out-of-space errors\n-  env_->sleep_counter_.Reset();\n-  for (int i = 0; i < 5; i++) {\n+  for (int i = 0; i < 10; i++) {\n     for (int level = 0; level < config::kNumLevels-1; level++) {\n       dbfull()->TEST_CompactRange(level, NULL, NULL);\n     }\n   }\n   env_->no_space_.Release_Store(NULL);\n   ASSERT_LT(CountFiles(), num_files + 3);\n-\n-  // Check that compaction attempts slept after errors\n-  ASSERT_GE(env_->sleep_counter_.Read(), 5);\n-}\n-\n-TEST(DBTest, ExponentialBackoff) {\n-  Options options = CurrentOptions();\n-  options.env = env_;\n-  Reopen(&options);\n-\n-  ASSERT_OK(Put(\"foo\", \"v1\"));\n-  ASSERT_EQ(\"v1\", Get(\"foo\"));\n-  Compact(\"a\", \"z\");\n-  env_->non_writable_.Release_Store(env_);  // Force errors for new files\n-  env_->sleep_counter_.Reset();\n-  env_->sleep_time_counter_.Reset();\n-  for (int i = 0; i < 5; i++) {\n-    dbfull()->TEST_CompactRange(2, NULL, NULL);\n-  }\n-  env_->non_writable_.Release_Store(NULL);\n-\n-  // Wait for compaction to finish\n-  DelayMilliseconds(1000);\n-\n-  ASSERT_GE(env_->sleep_counter_.Read(), 5);\n-  ASSERT_LT(env_->sleep_counter_.Read(), 10);\n-  ASSERT_GE(env_->sleep_time_counter_.Read(), 10e6);\n }\n \n TEST(DBTest, NonWritableFileSystem) {\n@@ -1573,6 +1562,37 @@ TEST(DBTest, NonWritableFileSystem) {\n   env_->non_writable_.Release_Store(NULL);\n }\n \n+TEST(DBTest, WriteSyncError) {\n+  // Check that log sync errors cause the DB to disallow future writes.\n+\n+  // (a) Cause log sync calls to fail\n+  Options options = CurrentOptions();\n+  options.env = env_;\n+  Reopen(&options);\n+  env_->data_sync_error_.Release_Store(env_);\n+\n+  // (b) Normal write should succeed\n+  WriteOptions w;\n+  ASSERT_OK(db_->Put(w, \"k1\", \"v1\"));\n+  ASSERT_EQ(\"v1\", Get(\"k1\"));\n+\n+  // (c) Do a sync write; should fail\n+  w.sync = true;\n+  ASSERT_TRUE(!db_->Put(w, \"k2\", \"v2\").ok());\n+  ASSERT_EQ(\"v1\", Get(\"k1\"));\n+  ASSERT_EQ(\"NOT_FOUND\", Get(\"k2\"));\n+\n+  // (d) make sync behave normally\n+  env_->data_sync_error_.Release_Store(NULL);\n+\n+  // (e) Do a non-sync write; should fail\n+  w.sync = false;\n+  ASSERT_TRUE(!db_->Put(w, \"k3\", \"v3\").ok());\n+  ASSERT_EQ(\"v1\", Get(\"k1\"));\n+  ASSERT_EQ(\"NOT_FOUND\", Get(\"k2\"));\n+  ASSERT_EQ(\"NOT_FOUND\", Get(\"k3\"));\n+}\n+\n TEST(DBTest, ManifestWriteError) {\n   // Test for the following problem:\n   // (a) Compaction produces file F\n@@ -1632,6 +1652,22 @@ TEST(DBTest, MissingSSTFile) {\n       << s.ToString();\n }\n \n+TEST(DBTest, StillReadSST) {\n+  ASSERT_OK(Put(\"foo\", \"bar\"));\n+  ASSERT_EQ(\"bar\", Get(\"foo\"));\n+\n+  // Dump the memtable to disk.\n+  dbfull()->TEST_CompactMemTable();\n+  ASSERT_EQ(\"bar\", Get(\"foo\"));\n+  Close();\n+  ASSERT_GT(RenameLDBToSST(), 0);\n+  Options options = CurrentOptions();\n+  options.paranoid_checks = true;\n+  Status s = TryReopen(&options);\n+  ASSERT_TRUE(s.ok());\n+  ASSERT_EQ(\"bar\", Get(\"foo\"));\n+}\n+\n TEST(DBTest, FilesDeletedAfterCompaction) {\n   ASSERT_OK(Put(\"foo\", \"v2\"));\n   Compact(\"a\", \"z\");\n@@ -1663,7 +1699,7 @@ TEST(DBTest, BloomFilter) {\n   dbfull()->TEST_CompactMemTable();\n \n   // Prevent auto compactions triggered by seeks\n-  env_->delay_sstable_sync_.Release_Store(env_);\n+  env_->delay_data_sync_.Release_Store(env_);\n \n   // Lookup present keys.  Should rarely read from small sstable.\n   env_->random_read_counter_.Reset();\n@@ -1684,7 +1720,7 @@ TEST(DBTest, BloomFilter) {\n   fprintf(stderr, \"%d missing => %d reads\\n\", N, reads);\n   ASSERT_LE(reads, 3*N/100);\n \n-  env_->delay_sstable_sync_.Release_Store(NULL);\n+  env_->delay_data_sync_.Release_Store(NULL);\n   Close();\n   delete options.block_cache;\n   delete options.filter_policy;\n@@ -1744,7 +1780,7 @@ static void MTThreadBody(void* arg) {\n         ASSERT_EQ(k, key);\n         ASSERT_GE(w, 0);\n         ASSERT_LT(w, kNumThreads);\n-        ASSERT_LE(c, reinterpret_cast<uintptr_t>(\n+        ASSERT_LE(static_cast<uintptr_t>(c), reinterpret_cast<uintptr_t>(\n             t->state->counter[w].Acquire_Load()));\n       }\n     }"
      },
      {
        "sha": "da32946d9924619ebc936e0dc3131907a323a847",
        "filename": "src/leveldb/db/filename.cc",
        "status": "modified",
        "additions": 7,
        "deletions": 2,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ed873a301eeff8c021ba57c78fb702fd2b6f0452/src/leveldb/db/filename.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ed873a301eeff8c021ba57c78fb702fd2b6f0452/src/leveldb/db/filename.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/filename.cc?ref=ed873a301eeff8c021ba57c78fb702fd2b6f0452",
        "patch": "@@ -30,6 +30,11 @@ std::string LogFileName(const std::string& name, uint64_t number) {\n }\n \n std::string TableFileName(const std::string& name, uint64_t number) {\n+  assert(number > 0);\n+  return MakeFileName(name, number, \"ldb\");\n+}\n+\n+std::string SSTTableFileName(const std::string& name, uint64_t number) {\n   assert(number > 0);\n   return MakeFileName(name, number, \"sst\");\n }\n@@ -71,7 +76,7 @@ std::string OldInfoLogFileName(const std::string& dbname) {\n //    dbname/LOG\n //    dbname/LOG.old\n //    dbname/MANIFEST-[0-9]+\n-//    dbname/[0-9]+.(log|sst)\n+//    dbname/[0-9]+.(log|sst|ldb)\n bool ParseFileName(const std::string& fname,\n                    uint64_t* number,\n                    FileType* type) {\n@@ -106,7 +111,7 @@ bool ParseFileName(const std::string& fname,\n     Slice suffix = rest;\n     if (suffix == Slice(\".log\")) {\n       *type = kLogFile;\n-    } else if (suffix == Slice(\".sst\")) {\n+    } else if (suffix == Slice(\".sst\") || suffix == Slice(\".ldb\")) {\n       *type = kTableFile;\n     } else if (suffix == Slice(\".dbtmp\")) {\n       *type = kTempFile;"
      },
      {
        "sha": "87a752605d14abc2a0e3b715d412bf36ce2cdd86",
        "filename": "src/leveldb/db/filename.h",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ed873a301eeff8c021ba57c78fb702fd2b6f0452/src/leveldb/db/filename.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ed873a301eeff8c021ba57c78fb702fd2b6f0452/src/leveldb/db/filename.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/filename.h?ref=ed873a301eeff8c021ba57c78fb702fd2b6f0452",
        "patch": "@@ -37,6 +37,11 @@ extern std::string LogFileName(const std::string& dbname, uint64_t number);\n // \"dbname\".\n extern std::string TableFileName(const std::string& dbname, uint64_t number);\n \n+// Return the legacy file name for an sstable with the specified number\n+// in the db named by \"dbname\". The result will be prefixed with\n+// \"dbname\".\n+extern std::string SSTTableFileName(const std::string& dbname, uint64_t number);\n+\n // Return the name of the descriptor file for the db named by\n // \"dbname\" and the specified incarnation number.  The result will be\n // prefixed with \"dbname\"."
      },
      {
        "sha": "a32556deaff78326e68e65b848b9ec5077067a4a",
        "filename": "src/leveldb/db/filename_test.cc",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ed873a301eeff8c021ba57c78fb702fd2b6f0452/src/leveldb/db/filename_test.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ed873a301eeff8c021ba57c78fb702fd2b6f0452/src/leveldb/db/filename_test.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/filename_test.cc?ref=ed873a301eeff8c021ba57c78fb702fd2b6f0452",
        "patch": "@@ -27,6 +27,7 @@ TEST(FileNameTest, Parse) {\n     { \"100.log\",            100,   kLogFile },\n     { \"0.log\",              0,     kLogFile },\n     { \"0.sst\",              0,     kTableFile },\n+    { \"0.ldb\",              0,     kTableFile },\n     { \"CURRENT\",            0,     kCurrentFile },\n     { \"LOCK\",               0,     kDBLockFile },\n     { \"MANIFEST-2\",         2,     kDescriptorFile },"
      },
      {
        "sha": "96c9b37af14c6d48ced42368bf2e29f42ca319d8",
        "filename": "src/leveldb/db/repair.cc",
        "status": "modified",
        "additions": 116,
        "deletions": 43,
        "changes": 159,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ed873a301eeff8c021ba57c78fb702fd2b6f0452/src/leveldb/db/repair.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ed873a301eeff8c021ba57c78fb702fd2b6f0452/src/leveldb/db/repair.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/repair.cc?ref=ed873a301eeff8c021ba57c78fb702fd2b6f0452",
        "patch": "@@ -244,60 +244,133 @@ class Repairer {\n   void ExtractMetaData() {\n     std::vector<TableInfo> kept;\n     for (size_t i = 0; i < table_numbers_.size(); i++) {\n-      TableInfo t;\n-      t.meta.number = table_numbers_[i];\n-      Status status = ScanTable(&t);\n-      if (!status.ok()) {\n-        std::string fname = TableFileName(dbname_, table_numbers_[i]);\n-        Log(options_.info_log, \"Table #%llu: ignoring %s\",\n-            (unsigned long long) table_numbers_[i],\n-            status.ToString().c_str());\n-        ArchiveFile(fname);\n-      } else {\n-        tables_.push_back(t);\n-      }\n+      ScanTable(table_numbers_[i]);\n     }\n   }\n \n-  Status ScanTable(TableInfo* t) {\n-    std::string fname = TableFileName(dbname_, t->meta.number);\n+  Iterator* NewTableIterator(const FileMetaData& meta) {\n+    // Same as compaction iterators: if paranoid_checks are on, turn\n+    // on checksum verification.\n+    ReadOptions r;\n+    r.verify_checksums = options_.paranoid_checks;\n+    return table_cache_->NewIterator(r, meta.number, meta.file_size);\n+  }\n+\n+  void ScanTable(uint64_t number) {\n+    TableInfo t;\n+    t.meta.number = number;\n+    std::string fname = TableFileName(dbname_, number);\n+    Status status = env_->GetFileSize(fname, &t.meta.file_size);\n+    if (!status.ok()) {\n+      // Try alternate file name.\n+      fname = SSTTableFileName(dbname_, number);\n+      Status s2 = env_->GetFileSize(fname, &t.meta.file_size);\n+      if (s2.ok()) {\n+        status = Status::OK();\n+      }\n+    }\n+    if (!status.ok()) {\n+      ArchiveFile(TableFileName(dbname_, number));\n+      ArchiveFile(SSTTableFileName(dbname_, number));\n+      Log(options_.info_log, \"Table #%llu: dropped: %s\",\n+          (unsigned long long) t.meta.number,\n+          status.ToString().c_str());\n+      return;\n+    }\n+\n+    // Extract metadata by scanning through table.\n     int counter = 0;\n-    Status status = env_->GetFileSize(fname, &t->meta.file_size);\n-    if (status.ok()) {\n-      Iterator* iter = table_cache_->NewIterator(\n-          ReadOptions(), t->meta.number, t->meta.file_size);\n-      bool empty = true;\n-      ParsedInternalKey parsed;\n-      t->max_sequence = 0;\n-      for (iter->SeekToFirst(); iter->Valid(); iter->Next()) {\n-        Slice key = iter->key();\n-        if (!ParseInternalKey(key, &parsed)) {\n-          Log(options_.info_log, \"Table #%llu: unparsable key %s\",\n-              (unsigned long long) t->meta.number,\n-              EscapeString(key).c_str());\n-          continue;\n-        }\n+    Iterator* iter = NewTableIterator(t.meta);\n+    bool empty = true;\n+    ParsedInternalKey parsed;\n+    t.max_sequence = 0;\n+    for (iter->SeekToFirst(); iter->Valid(); iter->Next()) {\n+      Slice key = iter->key();\n+      if (!ParseInternalKey(key, &parsed)) {\n+        Log(options_.info_log, \"Table #%llu: unparsable key %s\",\n+            (unsigned long long) t.meta.number,\n+            EscapeString(key).c_str());\n+        continue;\n+      }\n \n-        counter++;\n-        if (empty) {\n-          empty = false;\n-          t->meta.smallest.DecodeFrom(key);\n-        }\n-        t->meta.largest.DecodeFrom(key);\n-        if (parsed.sequence > t->max_sequence) {\n-          t->max_sequence = parsed.sequence;\n-        }\n+      counter++;\n+      if (empty) {\n+        empty = false;\n+        t.meta.smallest.DecodeFrom(key);\n       }\n-      if (!iter->status().ok()) {\n-        status = iter->status();\n+      t.meta.largest.DecodeFrom(key);\n+      if (parsed.sequence > t.max_sequence) {\n+        t.max_sequence = parsed.sequence;\n       }\n-      delete iter;\n     }\n+    if (!iter->status().ok()) {\n+      status = iter->status();\n+    }\n+    delete iter;\n     Log(options_.info_log, \"Table #%llu: %d entries %s\",\n-        (unsigned long long) t->meta.number,\n+        (unsigned long long) t.meta.number,\n         counter,\n         status.ToString().c_str());\n-    return status;\n+\n+    if (status.ok()) {\n+      tables_.push_back(t);\n+    } else {\n+      RepairTable(fname, t);  // RepairTable archives input file.\n+    }\n+  }\n+\n+  void RepairTable(const std::string& src, TableInfo t) {\n+    // We will copy src contents to a new table and then rename the\n+    // new table over the source.\n+\n+    // Create builder.\n+    std::string copy = TableFileName(dbname_, next_file_number_++);\n+    WritableFile* file;\n+    Status s = env_->NewWritableFile(copy, &file);\n+    if (!s.ok()) {\n+      return;\n+    }\n+    TableBuilder* builder = new TableBuilder(options_, file);\n+\n+    // Copy data.\n+    Iterator* iter = NewTableIterator(t.meta);\n+    int counter = 0;\n+    for (iter->SeekToFirst(); iter->Valid(); iter->Next()) {\n+      builder->Add(iter->key(), iter->value());\n+      counter++;\n+    }\n+    delete iter;\n+\n+    ArchiveFile(src);\n+    if (counter == 0) {\n+      builder->Abandon();  // Nothing to save\n+    } else {\n+      s = builder->Finish();\n+      if (s.ok()) {\n+        t.meta.file_size = builder->FileSize();\n+      }\n+    }\n+    delete builder;\n+    builder = NULL;\n+\n+    if (s.ok()) {\n+      s = file->Close();\n+    }\n+    delete file;\n+    file = NULL;\n+\n+    if (counter > 0 && s.ok()) {\n+      std::string orig = TableFileName(dbname_, t.meta.number);\n+      s = env_->RenameFile(copy, orig);\n+      if (s.ok()) {\n+        Log(options_.info_log, \"Table #%llu: %d entries repaired\",\n+            (unsigned long long) t.meta.number, counter);\n+        tables_.push_back(t);\n+      }\n+    }\n+    if (!s.ok()) {\n+      env_->DeleteFile(copy);\n+    }\n   }\n \n   Status WriteDescriptor() {"
      },
      {
        "sha": "e3d82cd3ea2d89d11ca6ca06b5ce7d5b7068a358",
        "filename": "src/leveldb/db/table_cache.cc",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ed873a301eeff8c021ba57c78fb702fd2b6f0452/src/leveldb/db/table_cache.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ed873a301eeff8c021ba57c78fb702fd2b6f0452/src/leveldb/db/table_cache.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/table_cache.cc?ref=ed873a301eeff8c021ba57c78fb702fd2b6f0452",
        "patch": "@@ -54,6 +54,12 @@ Status TableCache::FindTable(uint64_t file_number, uint64_t file_size,\n     RandomAccessFile* file = NULL;\n     Table* table = NULL;\n     s = env_->NewRandomAccessFile(fname, &file);\n+    if (!s.ok()) {\n+      std::string old_fname = SSTTableFileName(dbname_, file_number);\n+      if (env_->NewRandomAccessFile(old_fname, &file).ok()) {\n+        s = Status::OK();\n+      }\n+    }\n     if (s.ok()) {\n       s = Table::Open(*options_, file, file_size, &table);\n     }"
      },
      {
        "sha": "517edd3b18b7a4a1a40605728a05ffb185976f52",
        "filename": "src/leveldb/db/version_set.cc",
        "status": "modified",
        "additions": 0,
        "deletions": 33,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ed873a301eeff8c021ba57c78fb702fd2b6f0452/src/leveldb/db/version_set.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ed873a301eeff8c021ba57c78fb702fd2b6f0452/src/leveldb/db/version_set.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/version_set.cc?ref=ed873a301eeff8c021ba57c78fb702fd2b6f0452",
        "patch": "@@ -876,21 +876,13 @@ Status VersionSet::LogAndApply(VersionEdit* edit, port::Mutex* mu) {\n       }\n       if (!s.ok()) {\n         Log(options_->info_log, \"MANIFEST write: %s\\n\", s.ToString().c_str());\n-        if (ManifestContains(record)) {\n-          Log(options_->info_log,\n-              \"MANIFEST contains log record despite error; advancing to new \"\n-              \"version to prevent mismatch between in-memory and logged state\");\n-          s = Status::OK();\n-        }\n       }\n     }\n \n     // If we just created a new descriptor file, install it by writing a\n     // new CURRENT file that points to it.\n     if (s.ok() && !new_manifest_file.empty()) {\n       s = SetCurrentFile(env_, dbname_, manifest_file_number_);\n-      // No need to double-check MANIFEST in case of error since it\n-      // will be discarded below.\n     }\n \n     mu->Lock();\n@@ -1124,31 +1116,6 @@ const char* VersionSet::LevelSummary(LevelSummaryStorage* scratch) const {\n   return scratch->buffer;\n }\n \n-// Return true iff the manifest contains the specified record.\n-bool VersionSet::ManifestContains(const std::string& record) const {\n-  std::string fname = DescriptorFileName(dbname_, manifest_file_number_);\n-  Log(options_->info_log, \"ManifestContains: checking %s\\n\", fname.c_str());\n-  SequentialFile* file = NULL;\n-  Status s = env_->NewSequentialFile(fname, &file);\n-  if (!s.ok()) {\n-    Log(options_->info_log, \"ManifestContains: %s\\n\", s.ToString().c_str());\n-    return false;\n-  }\n-  log::Reader reader(file, NULL, true/*checksum*/, 0);\n-  Slice r;\n-  std::string scratch;\n-  bool result = false;\n-  while (reader.ReadRecord(&r, &scratch)) {\n-    if (r == Slice(record)) {\n-      result = true;\n-      break;\n-    }\n-  }\n-  delete file;\n-  Log(options_->info_log, \"ManifestContains: result = %d\\n\", result ? 1 : 0);\n-  return result;\n-}\n-\n uint64_t VersionSet::ApproximateOffsetOf(Version* v, const InternalKey& ikey) {\n   uint64_t result = 0;\n   for (int level = 0; level < config::kNumLevels; level++) {"
      },
      {
        "sha": "8dc14b8e01c9bab3468ea338ca3c02bd703bf890",
        "filename": "src/leveldb/db/version_set.h",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ed873a301eeff8c021ba57c78fb702fd2b6f0452/src/leveldb/db/version_set.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ed873a301eeff8c021ba57c78fb702fd2b6f0452/src/leveldb/db/version_set.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/version_set.h?ref=ed873a301eeff8c021ba57c78fb702fd2b6f0452",
        "patch": "@@ -292,8 +292,6 @@ class VersionSet {\n \n   void AppendVersion(Version* v);\n \n-  bool ManifestContains(const std::string& record) const;\n-\n   Env* const env_;\n   const std::string dbname_;\n   const Options* const options_;"
      },
      {
        "sha": "28817fe0da5a42cff4c7721ffa039a0b89e6a723",
        "filename": "src/leveldb/doc/impl.html",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ed873a301eeff8c021ba57c78fb702fd2b6f0452/src/leveldb/doc/impl.html",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ed873a301eeff8c021ba57c78fb702fd2b6f0452/src/leveldb/doc/impl.html",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/doc/impl.html?ref=ed873a301eeff8c021ba57c78fb702fd2b6f0452",
        "patch": "@@ -11,7 +11,7 @@ <h1>Files</h1>\n \n The implementation of leveldb is similar in spirit to the\n representation of a single\n-<a href=\"http://labs.google.com/papers/bigtable.html\">\n+<a href=\"http://research.google.com/archive/bigtable.html\">\n Bigtable tablet (section 5.3)</a>.\n However the organization of the files that make up the representation\n is somewhat different and is explained below."
      },
      {
        "sha": "5ffb29d52644f796c8be1f218890bb431a0a6499",
        "filename": "src/leveldb/include/leveldb/db.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ed873a301eeff8c021ba57c78fb702fd2b6f0452/src/leveldb/include/leveldb/db.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ed873a301eeff8c021ba57c78fb702fd2b6f0452/src/leveldb/include/leveldb/db.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/include/leveldb/db.h?ref=ed873a301eeff8c021ba57c78fb702fd2b6f0452",
        "patch": "@@ -14,7 +14,7 @@ namespace leveldb {\n \n // Update Makefile if you change these\n static const int kMajorVersion = 1;\n-static const int kMinorVersion = 13;\n+static const int kMinorVersion = 15;\n \n struct Options;\n struct ReadOptions;"
      },
      {
        "sha": "b2072d02c1c129aabe2962f18ac3f3c23929d009",
        "filename": "src/leveldb/include/leveldb/env.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ed873a301eeff8c021ba57c78fb702fd2b6f0452/src/leveldb/include/leveldb/env.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ed873a301eeff8c021ba57c78fb702fd2b6f0452/src/leveldb/include/leveldb/env.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/include/leveldb/env.h?ref=ed873a301eeff8c021ba57c78fb702fd2b6f0452",
        "patch": "@@ -13,9 +13,9 @@\n #ifndef STORAGE_LEVELDB_INCLUDE_ENV_H_\n #define STORAGE_LEVELDB_INCLUDE_ENV_H_\n \n-#include <cstdarg>\n #include <string>\n #include <vector>\n+#include <stdarg.h>\n #include <stdint.h>\n #include \"leveldb/status.h\"\n "
      },
      {
        "sha": "1cec79f4433ac1c7ba361860c113e7b250b87e03",
        "filename": "src/leveldb/issues/issue200_test.cc",
        "status": "added",
        "additions": 59,
        "deletions": 0,
        "changes": 59,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ed873a301eeff8c021ba57c78fb702fd2b6f0452/src/leveldb/issues/issue200_test.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ed873a301eeff8c021ba57c78fb702fd2b6f0452/src/leveldb/issues/issue200_test.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/issues/issue200_test.cc?ref=ed873a301eeff8c021ba57c78fb702fd2b6f0452",
        "patch": "@@ -0,0 +1,59 @@\n+// Copyright (c) 2013 The LevelDB Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style license that can be\n+// found in the LICENSE file. See the AUTHORS file for names of contributors.\n+\n+// Test for issue 200: when iterator switches direction from backward\n+// to forward, the current key can be yielded unexpectedly if a new\n+// mutation has been added just before the current key.\n+\n+#include \"leveldb/db.h\"\n+#include \"util/testharness.h\"\n+\n+namespace leveldb {\n+\n+class Issue200 { };\n+\n+TEST(Issue200, Test) {\n+  // Get rid of any state from an old run.\n+  std::string dbpath = test::TmpDir() + \"/leveldb_issue200_test\";\n+  DestroyDB(dbpath, Options());\n+\n+  DB *db;\n+  Options options;\n+  options.create_if_missing = true;\n+  ASSERT_OK(DB::Open(options, dbpath, &db));\n+\n+  WriteOptions write_options;\n+  ASSERT_OK(db->Put(write_options, \"1\", \"b\"));\n+  ASSERT_OK(db->Put(write_options, \"2\", \"c\"));\n+  ASSERT_OK(db->Put(write_options, \"3\", \"d\"));\n+  ASSERT_OK(db->Put(write_options, \"4\", \"e\"));\n+  ASSERT_OK(db->Put(write_options, \"5\", \"f\"));\n+\n+  ReadOptions read_options;\n+  Iterator *iter = db->NewIterator(read_options);\n+\n+  // Add an element that should not be reflected in the iterator.\n+  ASSERT_OK(db->Put(write_options, \"25\", \"cd\"));\n+\n+  iter->Seek(\"5\");\n+  ASSERT_EQ(iter->key().ToString(), \"5\");\n+  iter->Prev();\n+  ASSERT_EQ(iter->key().ToString(), \"4\");\n+  iter->Prev();\n+  ASSERT_EQ(iter->key().ToString(), \"3\");\n+  iter->Next();\n+  ASSERT_EQ(iter->key().ToString(), \"4\");\n+  iter->Next();\n+  ASSERT_EQ(iter->key().ToString(), \"5\");\n+\n+  delete iter;\n+  delete db;\n+  DestroyDB(dbpath, options);\n+}\n+\n+}  // namespace leveldb\n+\n+int main(int argc, char** argv) {\n+  return leveldb::test::RunAllTests();\n+}"
      },
      {
        "sha": "a9866b2302fd42dc889e5cf49869727e85658a8b",
        "filename": "src/leveldb/port/atomic_pointer.h",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ed873a301eeff8c021ba57c78fb702fd2b6f0452/src/leveldb/port/atomic_pointer.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ed873a301eeff8c021ba57c78fb702fd2b6f0452/src/leveldb/port/atomic_pointer.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/port/atomic_pointer.h?ref=ed873a301eeff8c021ba57c78fb702fd2b6f0452",
        "patch": "@@ -50,6 +50,13 @@ namespace port {\n // http://msdn.microsoft.com/en-us/library/ms684208(v=vs.85).aspx\n #define LEVELDB_HAVE_MEMORY_BARRIER\n \n+// Mac OS\n+#elif defined(OS_MACOSX)\n+inline void MemoryBarrier() {\n+  OSMemoryBarrier();\n+}\n+#define LEVELDB_HAVE_MEMORY_BARRIER\n+\n // Gcc on x86\n #elif defined(ARCH_CPU_X86_FAMILY) && defined(__GNUC__)\n inline void MemoryBarrier() {\n@@ -68,13 +75,6 @@ inline void MemoryBarrier() {\n }\n #define LEVELDB_HAVE_MEMORY_BARRIER\n \n-// Mac OS\n-#elif defined(OS_MACOSX)\n-inline void MemoryBarrier() {\n-  OSMemoryBarrier();\n-}\n-#define LEVELDB_HAVE_MEMORY_BARRIER\n-\n // ARM Linux\n #elif defined(ARCH_CPU_ARM_FAMILY) && defined(__linux__)\n typedef void (*LinuxKernelMemoryBarrierFunc)(void);"
      },
      {
        "sha": "8c4a4741f223e28cbdebfcbb7f220b7e665dbb43",
        "filename": "src/leveldb/table/filter_block_test.cc",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ed873a301eeff8c021ba57c78fb702fd2b6f0452/src/leveldb/table/filter_block_test.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ed873a301eeff8c021ba57c78fb702fd2b6f0452/src/leveldb/table/filter_block_test.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/table/filter_block_test.cc?ref=ed873a301eeff8c021ba57c78fb702fd2b6f0452",
        "patch": "@@ -29,7 +29,7 @@ class TestHashFilter : public FilterPolicy {\n \n   virtual bool KeyMayMatch(const Slice& key, const Slice& filter) const {\n     uint32_t h = Hash(key.data(), key.size(), 1);\n-    for (int i = 0; i + 4 <= filter.size(); i += 4) {\n+    for (size_t i = 0; i + 4 <= filter.size(); i += 4) {\n       if (h == DecodeFixed32(filter.data() + i)) {\n         return true;\n       }"
      },
      {
        "sha": "9367f714924d2c070f1b5513945d6bb0c939e159",
        "filename": "src/leveldb/util/arena.cc",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ed873a301eeff8c021ba57c78fb702fd2b6f0452/src/leveldb/util/arena.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ed873a301eeff8c021ba57c78fb702fd2b6f0452/src/leveldb/util/arena.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/util/arena.cc?ref=ed873a301eeff8c021ba57c78fb702fd2b6f0452",
        "patch": "@@ -40,7 +40,7 @@ char* Arena::AllocateFallback(size_t bytes) {\n }\n \n char* Arena::AllocateAligned(size_t bytes) {\n-  const int align = sizeof(void*);    // We'll align to pointer size\n+  const int align = (sizeof(void*) > 8) ? sizeof(void*) : 8;\n   assert((align & (align-1)) == 0);   // Pointer size should be a power of 2\n   size_t current_mod = reinterpret_cast<uintptr_t>(alloc_ptr_) & (align-1);\n   size_t slop = (current_mod == 0 ? 0 : align - current_mod);"
      },
      {
        "sha": "73bbf1cb9bfb51b71302574c840cf4a5a50aeb83",
        "filename": "src/leveldb/util/arena.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ed873a301eeff8c021ba57c78fb702fd2b6f0452/src/leveldb/util/arena.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ed873a301eeff8c021ba57c78fb702fd2b6f0452/src/leveldb/util/arena.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/util/arena.h?ref=ed873a301eeff8c021ba57c78fb702fd2b6f0452",
        "patch": "@@ -5,9 +5,9 @@\n #ifndef STORAGE_LEVELDB_UTIL_ARENA_H_\n #define STORAGE_LEVELDB_UTIL_ARENA_H_\n \n-#include <cstddef>\n #include <vector>\n #include <assert.h>\n+#include <stddef.h>\n #include <stdint.h>\n \n namespace leveldb {"
      },
      {
        "sha": "58e870ec4459ee5092c4d665ca94628a7e0c6db7",
        "filename": "src/leveldb/util/arena_test.cc",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ed873a301eeff8c021ba57c78fb702fd2b6f0452/src/leveldb/util/arena_test.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ed873a301eeff8c021ba57c78fb702fd2b6f0452/src/leveldb/util/arena_test.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/util/arena_test.cc?ref=ed873a301eeff8c021ba57c78fb702fd2b6f0452",
        "patch": "@@ -40,7 +40,7 @@ TEST(ArenaTest, Simple) {\n       r = arena.Allocate(s);\n     }\n \n-    for (int b = 0; b < s; b++) {\n+    for (size_t b = 0; b < s; b++) {\n       // Fill the \"i\"th allocation with a known bit pattern\n       r[b] = i % 256;\n     }\n@@ -51,10 +51,10 @@ TEST(ArenaTest, Simple) {\n       ASSERT_LE(arena.MemoryUsage(), bytes * 1.10);\n     }\n   }\n-  for (int i = 0; i < allocated.size(); i++) {\n+  for (size_t i = 0; i < allocated.size(); i++) {\n     size_t num_bytes = allocated[i].first;\n     const char* p = allocated[i].second;\n-    for (int b = 0; b < num_bytes; b++) {\n+    for (size_t b = 0; b < num_bytes; b++) {\n       // Check the \"i\"th allocation for the known bit pattern\n       ASSERT_EQ(int(p[b]) & 0xff, i % 256);\n     }"
      },
      {
        "sha": "77fb1b315958f0539dab9b465073a9bbb0b52af9",
        "filename": "src/leveldb/util/bloom_test.cc",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ed873a301eeff8c021ba57c78fb702fd2b6f0452/src/leveldb/util/bloom_test.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ed873a301eeff8c021ba57c78fb702fd2b6f0452/src/leveldb/util/bloom_test.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/util/bloom_test.cc?ref=ed873a301eeff8c021ba57c78fb702fd2b6f0452",
        "patch": "@@ -126,7 +126,8 @@ TEST(BloomTest, VaryingLengths) {\n     }\n     Build();\n \n-    ASSERT_LE(FilterSize(), (length * 10 / 8) + 40) << length;\n+    ASSERT_LE(FilterSize(), static_cast<size_t>((length * 10 / 8) + 40))\n+        << length;\n \n     // All added keys must match\n     for (int i = 0; i < length; i++) {"
      },
      {
        "sha": "521541ea61bb6037984be50208b4a2a849ead554",
        "filename": "src/leveldb/util/coding_test.cc",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ed873a301eeff8c021ba57c78fb702fd2b6f0452/src/leveldb/util/coding_test.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ed873a301eeff8c021ba57c78fb702fd2b6f0452/src/leveldb/util/coding_test.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/util/coding_test.cc?ref=ed873a301eeff8c021ba57c78fb702fd2b6f0452",
        "patch": "@@ -112,13 +112,13 @@ TEST(Coding, Varint64) {\n   }\n \n   std::string s;\n-  for (int i = 0; i < values.size(); i++) {\n+  for (size_t i = 0; i < values.size(); i++) {\n     PutVarint64(&s, values[i]);\n   }\n \n   const char* p = s.data();\n   const char* limit = p + s.size();\n-  for (int i = 0; i < values.size(); i++) {\n+  for (size_t i = 0; i < values.size(); i++) {\n     ASSERT_TRUE(p < limit);\n     uint64_t actual;\n     const char* start = p;\n@@ -143,7 +143,7 @@ TEST(Coding, Varint32Truncation) {\n   std::string s;\n   PutVarint32(&s, large_value);\n   uint32_t result;\n-  for (int len = 0; len < s.size() - 1; len++) {\n+  for (size_t len = 0; len < s.size() - 1; len++) {\n     ASSERT_TRUE(GetVarint32Ptr(s.data(), s.data() + len, &result) == NULL);\n   }\n   ASSERT_TRUE(GetVarint32Ptr(s.data(), s.data() + s.size(), &result) != NULL);\n@@ -162,7 +162,7 @@ TEST(Coding, Varint64Truncation) {\n   std::string s;\n   PutVarint64(&s, large_value);\n   uint64_t result;\n-  for (int len = 0; len < s.size() - 1; len++) {\n+  for (size_t len = 0; len < s.size() - 1; len++) {\n     ASSERT_TRUE(GetVarint64Ptr(s.data(), s.data() + len, &result) == NULL);\n   }\n   ASSERT_TRUE(GetVarint64Ptr(s.data(), s.data() + s.size(), &result) != NULL);"
      },
      {
        "sha": "93eadb1a4f5c7c148146a61270d45286df9e8292",
        "filename": "src/leveldb/util/env_posix.cc",
        "status": "modified",
        "additions": 27,
        "deletions": 149,
        "changes": 176,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ed873a301eeff8c021ba57c78fb702fd2b6f0452/src/leveldb/util/env_posix.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ed873a301eeff8c021ba57c78fb702fd2b6f0452/src/leveldb/util/env_posix.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/util/env_posix.cc?ref=ed873a301eeff8c021ba57c78fb702fd2b6f0452",
        "patch": "@@ -176,147 +176,43 @@ class PosixMmapReadableFile: public RandomAccessFile {\n   }\n };\n \n-// We preallocate up to an extra megabyte and use memcpy to append new\n-// data to the file.  This is safe since we either properly close the\n-// file before reading from it, or for log files, the reading code\n-// knows enough to skip zero suffixes.\n-class PosixMmapFile : public WritableFile {\n+class PosixWritableFile : public WritableFile {\n  private:\n   std::string filename_;\n-  int fd_;\n-  size_t page_size_;\n-  size_t map_size_;       // How much extra memory to map at a time\n-  char* base_;            // The mapped region\n-  char* limit_;           // Limit of the mapped region\n-  char* dst_;             // Where to write next  (in range [base_,limit_])\n-  char* last_sync_;       // Where have we synced up to\n-  uint64_t file_offset_;  // Offset of base_ in file\n-\n-  // Have we done an munmap of unsynced data?\n-  bool pending_sync_;\n-\n-  // Roundup x to a multiple of y\n-  static size_t Roundup(size_t x, size_t y) {\n-    return ((x + y - 1) / y) * y;\n-  }\n-\n-  size_t TruncateToPageBoundary(size_t s) {\n-    s -= (s & (page_size_ - 1));\n-    assert((s % page_size_) == 0);\n-    return s;\n-  }\n-\n-  bool UnmapCurrentRegion() {\n-    bool result = true;\n-    if (base_ != NULL) {\n-      if (last_sync_ < limit_) {\n-        // Defer syncing this data until next Sync() call, if any\n-        pending_sync_ = true;\n-      }\n-      if (munmap(base_, limit_ - base_) != 0) {\n-        result = false;\n-      }\n-      file_offset_ += limit_ - base_;\n-      base_ = NULL;\n-      limit_ = NULL;\n-      last_sync_ = NULL;\n-      dst_ = NULL;\n-\n-      // Increase the amount we map the next time, but capped at 1MB\n-      if (map_size_ < (1<<20)) {\n-        map_size_ *= 2;\n-      }\n-    }\n-    return result;\n-  }\n-\n-  bool MapNewRegion() {\n-    assert(base_ == NULL);\n-    if (ftruncate(fd_, file_offset_ + map_size_) < 0) {\n-      return false;\n-    }\n-    void* ptr = mmap(NULL, map_size_, PROT_READ | PROT_WRITE, MAP_SHARED,\n-                     fd_, file_offset_);\n-    if (ptr == MAP_FAILED) {\n-      return false;\n-    }\n-    base_ = reinterpret_cast<char*>(ptr);\n-    limit_ = base_ + map_size_;\n-    dst_ = base_;\n-    last_sync_ = base_;\n-    return true;\n-  }\n+  FILE* file_;\n \n  public:\n-  PosixMmapFile(const std::string& fname, int fd, size_t page_size)\n-      : filename_(fname),\n-        fd_(fd),\n-        page_size_(page_size),\n-        map_size_(Roundup(65536, page_size)),\n-        base_(NULL),\n-        limit_(NULL),\n-        dst_(NULL),\n-        last_sync_(NULL),\n-        file_offset_(0),\n-        pending_sync_(false) {\n-    assert((page_size & (page_size - 1)) == 0);\n-  }\n-\n-\n-  ~PosixMmapFile() {\n-    if (fd_ >= 0) {\n-      PosixMmapFile::Close();\n+  PosixWritableFile(const std::string& fname, FILE* f)\n+      : filename_(fname), file_(f) { }\n+\n+  ~PosixWritableFile() {\n+    if (file_ != NULL) {\n+      // Ignoring any potential errors\n+      fclose(file_);\n     }\n   }\n \n   virtual Status Append(const Slice& data) {\n-    const char* src = data.data();\n-    size_t left = data.size();\n-    while (left > 0) {\n-      assert(base_ <= dst_);\n-      assert(dst_ <= limit_);\n-      size_t avail = limit_ - dst_;\n-      if (avail == 0) {\n-        if (!UnmapCurrentRegion() ||\n-            !MapNewRegion()) {\n-          return IOError(filename_, errno);\n-        }\n-      }\n-\n-      size_t n = (left <= avail) ? left : avail;\n-      memcpy(dst_, src, n);\n-      dst_ += n;\n-      src += n;\n-      left -= n;\n+    size_t r = fwrite_unlocked(data.data(), 1, data.size(), file_);\n+    if (r != data.size()) {\n+      return IOError(filename_, errno);\n     }\n     return Status::OK();\n   }\n \n   virtual Status Close() {\n-    Status s;\n-    size_t unused = limit_ - dst_;\n-    if (!UnmapCurrentRegion()) {\n-      s = IOError(filename_, errno);\n-    } else if (unused > 0) {\n-      // Trim the extra space at the end of the file\n-      if (ftruncate(fd_, file_offset_ - unused) < 0) {\n-        s = IOError(filename_, errno);\n-      }\n-    }\n-\n-    if (close(fd_) < 0) {\n-      if (s.ok()) {\n-        s = IOError(filename_, errno);\n-      }\n+    Status result;\n+    if (fclose(file_) != 0) {\n+      result = IOError(filename_, errno);\n     }\n-\n-    fd_ = -1;\n-    base_ = NULL;\n-    limit_ = NULL;\n-    return s;\n+    file_ = NULL;\n+    return result;\n   }\n \n   virtual Status Flush() {\n+    if (fflush_unlocked(file_) != 0) {\n+      return IOError(filename_, errno);\n+    }\n     return Status::OK();\n   }\n \n@@ -353,26 +249,10 @@ class PosixMmapFile : public WritableFile {\n     if (!s.ok()) {\n       return s;\n     }\n-\n-    if (pending_sync_) {\n-      // Some unmapped data was not synced\n-      pending_sync_ = false;\n-      if (fdatasync(fd_) < 0) {\n-        s = IOError(filename_, errno);\n-      }\n+    if (fflush_unlocked(file_) != 0 ||\n+        fdatasync(fileno(file_)) != 0) {\n+      s = Status::IOError(filename_, strerror(errno));\n     }\n-\n-    if (dst_ > last_sync_) {\n-      // Find the beginnings of the pages that contain the first and last\n-      // bytes to be synced.\n-      size_t p1 = TruncateToPageBoundary(last_sync_ - base_);\n-      size_t p2 = TruncateToPageBoundary(dst_ - base_ - 1);\n-      last_sync_ = dst_;\n-      if (msync(base_ + p1, p2 - p1 + page_size_, MS_SYNC) < 0) {\n-        s = IOError(filename_, errno);\n-      }\n-    }\n-\n     return s;\n   }\n };\n@@ -463,12 +343,12 @@ class PosixEnv : public Env {\n   virtual Status NewWritableFile(const std::string& fname,\n                                  WritableFile** result) {\n     Status s;\n-    const int fd = open(fname.c_str(), O_CREAT | O_RDWR | O_TRUNC, 0644);\n-    if (fd < 0) {\n+    FILE* f = fopen(fname.c_str(), \"w\");\n+    if (f == NULL) {\n       *result = NULL;\n       s = IOError(fname, errno);\n     } else {\n-      *result = new PosixMmapFile(fname, fd, page_size_);\n+      *result = new PosixWritableFile(fname, f);\n     }\n     return s;\n   }\n@@ -631,7 +511,6 @@ class PosixEnv : public Env {\n     return NULL;\n   }\n \n-  size_t page_size_;\n   pthread_mutex_t mu_;\n   pthread_cond_t bgsignal_;\n   pthread_t bgthread_;\n@@ -646,8 +525,7 @@ class PosixEnv : public Env {\n   MmapLimiter mmap_limit_;\n };\n \n-PosixEnv::PosixEnv() : page_size_(getpagesize()),\n-                       started_bgthread_(false) {\n+PosixEnv::PosixEnv() : started_bgthread_(false) {\n   PthreadCall(\"mutex_init\", pthread_mutex_init(&mu_, NULL));\n   PthreadCall(\"cvar_init\", pthread_cond_init(&bgsignal_, NULL));\n }"
      },
      {
        "sha": "402fab34d77349d4f16ff8fb9b9fb147bc158bf5",
        "filename": "src/leveldb/util/testharness.cc",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ed873a301eeff8c021ba57c78fb702fd2b6f0452/src/leveldb/util/testharness.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ed873a301eeff8c021ba57c78fb702fd2b6f0452/src/leveldb/util/testharness.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/util/testharness.cc?ref=ed873a301eeff8c021ba57c78fb702fd2b6f0452",
        "patch": "@@ -38,7 +38,7 @@ int RunAllTests() {\n \n   int num = 0;\n   if (tests != NULL) {\n-    for (int i = 0; i < tests->size(); i++) {\n+    for (size_t i = 0; i < tests->size(); i++) {\n       const Test& t = (*tests)[i];\n       if (matcher != NULL) {\n         std::string name = t.base;"
      },
      {
        "sha": "bee56bf75f1b02c6f91bee984e56d90f6ee5d42f",
        "filename": "src/leveldb/util/testutil.cc",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ed873a301eeff8c021ba57c78fb702fd2b6f0452/src/leveldb/util/testutil.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ed873a301eeff8c021ba57c78fb702fd2b6f0452/src/leveldb/util/testutil.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/util/testutil.cc?ref=ed873a301eeff8c021ba57c78fb702fd2b6f0452",
        "patch": "@@ -32,7 +32,7 @@ std::string RandomKey(Random* rnd, int len) {\n \n \n extern Slice CompressibleString(Random* rnd, double compressed_fraction,\n-                                int len, std::string* dst) {\n+                                size_t len, std::string* dst) {\n   int raw = static_cast<int>(len * compressed_fraction);\n   if (raw < 1) raw = 1;\n   std::string raw_data;"
      },
      {
        "sha": "adad3fc1eacb7cf3a1bc5bb934c127a4749d82ed",
        "filename": "src/leveldb/util/testutil.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ed873a301eeff8c021ba57c78fb702fd2b6f0452/src/leveldb/util/testutil.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ed873a301eeff8c021ba57c78fb702fd2b6f0452/src/leveldb/util/testutil.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/util/testutil.h?ref=ed873a301eeff8c021ba57c78fb702fd2b6f0452",
        "patch": "@@ -24,7 +24,7 @@ extern std::string RandomKey(Random* rnd, int len);\n // \"N*compressed_fraction\" bytes and return a Slice that references\n // the generated data.\n extern Slice CompressibleString(Random* rnd, double compressed_fraction,\n-                                int len, std::string* dst);\n+                                size_t len, std::string* dst);\n \n // A wrapper that allows injection of errors.\n class ErrorEnv : public EnvWrapper {"
      }
    ]
  },
  {
    "sha": "efdfee423f23df88ffa4b846e4522419fb081ce1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplZmRmZWU0MjNmMjNkZjg4ZmZhNGI4NDZlNDUyMjQxOWZiMDgxY2Ux",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2013-12-12T23:46:02Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2013-12-13T00:09:00Z"
      },
      "message": "build: fix detection of boost libs on multi-arch distros\n\nFixes #3219.",
      "tree": {
        "sha": "b5b1aaa9fef25ee36c7db8299a42c2d8c8ea4f48",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b5b1aaa9fef25ee36c7db8299a42c2d8c8ea4f48"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/efdfee423f23df88ffa4b846e4522419fb081ce1",
      "comment_count": 1,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/efdfee423f23df88ffa4b846e4522419fb081ce1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/efdfee423f23df88ffa4b846e4522419fb081ce1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/efdfee423f23df88ffa4b846e4522419fb081ce1/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fb34be6d5905d36a2d9a392d87aa73bdb9470a1b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fb34be6d5905d36a2d9a392d87aa73bdb9470a1b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fb34be6d5905d36a2d9a392d87aa73bdb9470a1b"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 7,
      "deletions": 1
    },
    "files": [
      {
        "sha": "c675f12d84cdb4df51af398b5bb42d102c6f0086",
        "filename": "src/m4/ax_boost_base.m4",
        "status": "modified",
        "additions": 7,
        "deletions": 1,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/efdfee423f23df88ffa4b846e4522419fb081ce1/src/m4/ax_boost_base.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/efdfee423f23df88ffa4b846e4522419fb081ce1/src/m4/ax_boost_base.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/m4/ax_boost_base.m4?ref=efdfee423f23df88ffa4b846e4522419fb081ce1",
        "patch": "@@ -33,7 +33,7 @@\n #   and this notice are preserved. This file is offered as-is, without any\n #   warranty.\n \n-#serial 21\n+#serial 22\n \n AC_DEFUN([AX_BOOST_BASE],\n [\n@@ -97,6 +97,12 @@ if test \"x$want_boost\" = \"xyes\"; then\n         ;;\n     esac\n \n+    dnl allow for real multi-arch paths e.g. /usr/lib/x86_64-linux-gnu. Give\n+    dnl them priority over the other paths since, if libs are found there, they\n+    dnl are almost assuredly the ones desired.\n+    AC_REQUIRE([AC_CANONICAL_HOST])\n+    libsubdirs=\"lib/${host_cpu}-${host_os} $libsubdirs\"\n+\n     dnl first we check the system location for boost libraries\n     dnl this location ist chosen if boost libraries are installed with the --layout=system option\n     dnl or if you install boost with RPM"
      }
    ]
  },
  {
    "sha": "952fe2ef32cccef9d1187620f5752359bd14e096",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5NTJmZTJlZjMyY2NjZWY5ZDExODc2MjBmNTc1MjM1OWJkMTRlMDk2",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2013-12-12T23:49:16Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2013-12-13T00:09:12Z"
      },
      "message": "docs: remove workaround instructions now that the problem is fixed",
      "tree": {
        "sha": "510f21a7a59d078d86524762f797c8742424c89c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/510f21a7a59d078d86524762f797c8742424c89c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/952fe2ef32cccef9d1187620f5752359bd14e096",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/952fe2ef32cccef9d1187620f5752359bd14e096",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/952fe2ef32cccef9d1187620f5752359bd14e096",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/952fe2ef32cccef9d1187620f5752359bd14e096/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "efdfee423f23df88ffa4b846e4522419fb081ce1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/efdfee423f23df88ffa4b846e4522419fb081ce1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/efdfee423f23df88ffa4b846e4522419fb081ce1"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 0,
      "deletions": 5
    },
    "files": [
      {
        "sha": "704bc1f5c70f3e483bae2efb5fe68147773f50b1",
        "filename": "doc/build-unix.md",
        "status": "modified",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/952fe2ef32cccef9d1187620f5752359bd14e096/doc/build-unix.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/952fe2ef32cccef9d1187620f5752359bd14e096/doc/build-unix.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-unix.md?ref=952fe2ef32cccef9d1187620f5752359bd14e096",
        "patch": "@@ -11,11 +11,6 @@ To Build\n \n This will build bitcoin-qt as well if the dependencies are met.\n \n-**Note:** on Ubuntu 13.10 (Saucy Salamander) the boost configuration script doesn't look in the\n-correct directory and an error about boost-system will appear. For now you need to do\n-\n-        ./configure --with-boost-libdir=/usr/lib/x86_64-linux-gnu\n-\n Dependencies\n ---------------------\n "
      }
    ]
  },
  {
    "sha": "d670cdd6986d6fba6e44944b59d7baf90c8313fa",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkNjcwY2RkNjk4NmQ2ZmJhNmU0NDk0NGI1OWQ3YmFmOTBjODMxM2Zh",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-13T04:15:31Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-13T04:16:19Z"
      },
      "message": "Merge pull request #3407\n\n952fe2e docs: remove workaround instructions now that the problem is fixed (Cory Fields)\nefdfee4 build: fix detection of boost libs on multi-arch distros (Cory Fields)",
      "tree": {
        "sha": "510f21a7a59d078d86524762f797c8742424c89c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/510f21a7a59d078d86524762f797c8742424c89c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d670cdd6986d6fba6e44944b59d7baf90c8313fa",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJSqooTAAoJEHSBCwEjRsmma1AH/Ar399+AdKevKqlIENU/Zeqo\nkTJRONentl777JXY01jM7zPxAA9hjcEKK5wmaBWfQxnDEGruJPgLqo8qad3aDN1m\ng8w924+mlx71xGZ0P/nLOPps1kabxe51LrMDENBMHMG8CnEkF4Yk7TVHyUskNwFR\nyFcezympfO01Dg+loCg9EM/G4g1t+2mA1qpULcghJk3K74M24Pa/yGGgPCaO9IrI\nv8ltKToex1oFGM0N+YVnSBqu4M3jASPDinMLcSpdLFIG0Aay/uNF7xdCx1+vggo5\nWTPzvUn5Ze1uuLIyFwRsmK/DL8GJhTQUY+3mB9shVFg4g60DzVwNTZ7fl3EPt5Y=\n=4ZMC\n-----END PGP SIGNATURE-----",
        "payload": "tree 510f21a7a59d078d86524762f797c8742424c89c\nparent fb34be6d5905d36a2d9a392d87aa73bdb9470a1b\nparent 952fe2ef32cccef9d1187620f5752359bd14e096\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1386908131 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1386908179 +0100\n\nMerge pull request #3407\n\n952fe2e docs: remove workaround instructions now that the problem is fixed (Cory Fields)\nefdfee4 build: fix detection of boost libs on multi-arch distros (Cory Fields)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d670cdd6986d6fba6e44944b59d7baf90c8313fa",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d670cdd6986d6fba6e44944b59d7baf90c8313fa",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d670cdd6986d6fba6e44944b59d7baf90c8313fa/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fb34be6d5905d36a2d9a392d87aa73bdb9470a1b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fb34be6d5905d36a2d9a392d87aa73bdb9470a1b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fb34be6d5905d36a2d9a392d87aa73bdb9470a1b"
      },
      {
        "sha": "952fe2ef32cccef9d1187620f5752359bd14e096",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/952fe2ef32cccef9d1187620f5752359bd14e096",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/952fe2ef32cccef9d1187620f5752359bd14e096"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 7,
      "deletions": 6
    },
    "files": [
      {
        "sha": "704bc1f5c70f3e483bae2efb5fe68147773f50b1",
        "filename": "doc/build-unix.md",
        "status": "modified",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d670cdd6986d6fba6e44944b59d7baf90c8313fa/doc/build-unix.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d670cdd6986d6fba6e44944b59d7baf90c8313fa/doc/build-unix.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-unix.md?ref=d670cdd6986d6fba6e44944b59d7baf90c8313fa",
        "patch": "@@ -11,11 +11,6 @@ To Build\n \n This will build bitcoin-qt as well if the dependencies are met.\n \n-**Note:** on Ubuntu 13.10 (Saucy Salamander) the boost configuration script doesn't look in the\n-correct directory and an error about boost-system will appear. For now you need to do\n-\n-        ./configure --with-boost-libdir=/usr/lib/x86_64-linux-gnu\n-\n Dependencies\n ---------------------\n "
      },
      {
        "sha": "c675f12d84cdb4df51af398b5bb42d102c6f0086",
        "filename": "src/m4/ax_boost_base.m4",
        "status": "modified",
        "additions": 7,
        "deletions": 1,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d670cdd6986d6fba6e44944b59d7baf90c8313fa/src/m4/ax_boost_base.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d670cdd6986d6fba6e44944b59d7baf90c8313fa/src/m4/ax_boost_base.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/m4/ax_boost_base.m4?ref=d670cdd6986d6fba6e44944b59d7baf90c8313fa",
        "patch": "@@ -33,7 +33,7 @@\n #   and this notice are preserved. This file is offered as-is, without any\n #   warranty.\n \n-#serial 21\n+#serial 22\n \n AC_DEFUN([AX_BOOST_BASE],\n [\n@@ -97,6 +97,12 @@ if test \"x$want_boost\" = \"xyes\"; then\n         ;;\n     esac\n \n+    dnl allow for real multi-arch paths e.g. /usr/lib/x86_64-linux-gnu. Give\n+    dnl them priority over the other paths since, if libs are found there, they\n+    dnl are almost assuredly the ones desired.\n+    AC_REQUIRE([AC_CANONICAL_HOST])\n+    libsubdirs=\"lib/${host_cpu}-${host_os} $libsubdirs\"\n+\n     dnl first we check the system location for boost libraries\n     dnl this location ist chosen if boost libraries are installed with the --layout=system option\n     dnl or if you install boost with RPM"
      }
    ]
  },
  {
    "sha": "150771c4f31cf71cb97a9589e21d8882454fbc53",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxNTA3NzFjNGYzMWNmNzFjYjk3YTk1ODllMjFkODg4MjQ1NGZiYzUz",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-13T04:39:27Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-13T04:39:35Z"
      },
      "message": "Merge pull request #3326\n\nad898b4 Increase default -blockmaxsize/prioritysize to 750K/50K (Gavin Andresen)",
      "tree": {
        "sha": "94443785dd434f9caf103d0bede4d65823de162f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/94443785dd434f9caf103d0bede4d65823de162f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/150771c4f31cf71cb97a9589e21d8882454fbc53",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJSqo+HAAoJEHSBCwEjRsmmlcwH/Rn/7O96y6vAKR6RqKpKPwsE\nUlLlzO375Y158Y3EZT70xOerIXtdLI5fcm09qBZl2wNrwvjhkc/dkhNtatBEacer\nbN+9QtlOzpglgJzWlahsSzafImRZfHqZVfZKE0yPCU2pKTFBNo9EUY3/K5tOLutW\n2d/i/UX5LECTxuIBztWekPI07YEVcdras2PjcP+hJWmJm+V2/vBCfS7D6HWMKUaw\nt+yJYsfBN9ukb6ppE46uW6pB8t27XjY14t1bd5gQhjVsyuL7pl7I6rmEy2NNnfn5\nkIERptxjq2Kn/ec2VLfaCNgplieZV3eCZ1ouUSlMCkz5LPgnUdYGTZd6zbG33TQ=\n=8ub0\n-----END PGP SIGNATURE-----",
        "payload": "tree 94443785dd434f9caf103d0bede4d65823de162f\nparent d670cdd6986d6fba6e44944b59d7baf90c8313fa\nparent ad898b40aaf06c1cc7ac12e953805720fc9217c0\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1386909567 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1386909575 +0100\n\nMerge pull request #3326\n\nad898b4 Increase default -blockmaxsize/prioritysize to 750K/50K (Gavin Andresen)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/150771c4f31cf71cb97a9589e21d8882454fbc53",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/150771c4f31cf71cb97a9589e21d8882454fbc53",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/150771c4f31cf71cb97a9589e21d8882454fbc53/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d670cdd6986d6fba6e44944b59d7baf90c8313fa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d670cdd6986d6fba6e44944b59d7baf90c8313fa",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d670cdd6986d6fba6e44944b59d7baf90c8313fa"
      },
      {
        "sha": "ad898b40aaf06c1cc7ac12e953805720fc9217c0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ad898b40aaf06c1cc7ac12e953805720fc9217c0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ad898b40aaf06c1cc7ac12e953805720fc9217c0"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 6,
      "deletions": 6
    },
    "files": [
      {
        "sha": "fd5e352cb664689afe6aec072a5e9c85206828b9",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/150771c4f31cf71cb97a9589e21d8882454fbc53/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/150771c4f31cf71cb97a9589e21d8882454fbc53/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=150771c4f31cf71cb97a9589e21d8882454fbc53",
        "patch": "@@ -35,10 +35,12 @@ class CInv;\n \n /** The maximum allowed size for a serialized block, in bytes (network rule) */\n static const unsigned int MAX_BLOCK_SIZE = 1000000;\n-/** The maximum size for mined blocks */\n-static const unsigned int MAX_BLOCK_SIZE_GEN = MAX_BLOCK_SIZE/2;\n+/** Default for -blockmaxsize, maximum size for mined blocks **/\n+static const unsigned int DEFAULT_BLOCK_MAX_SIZE = 750000;\n+/** Default for -blockprioritysize, maximum space for zero/low-fee transactions **/\n+static const unsigned int DEFAULT_BLOCK_PRIORITY_SIZE = 50000;\n /** The maximum size for transactions we're willing to relay/mine */\n-static const unsigned int MAX_STANDARD_TX_SIZE = MAX_BLOCK_SIZE_GEN/5;\n+static const unsigned int MAX_STANDARD_TX_SIZE = 100000;\n /** The maximum allowed number of signature check operations in a block (network rule) */\n static const unsigned int MAX_BLOCK_SIGOPS = MAX_BLOCK_SIZE/50;\n /** The maximum number of orphan transactions kept in memory */\n@@ -55,8 +57,6 @@ static const int COINBASE_MATURITY = 100;\n static const unsigned int LOCKTIME_THRESHOLD = 500000000; // Tue Nov  5 00:53:20 1985 UTC\n /** Maximum number of script-checking threads allowed */\n static const int MAX_SCRIPTCHECK_THREADS = 16;\n-/** Default amount of block size reserved for high-priority transactions (in bytes) */\n-static const int DEFAULT_BLOCK_PRIORITY_SIZE = 27000;\n #ifdef USE_UPNP\n static const int fHaveUPnP = true;\n #else"
      },
      {
        "sha": "edfbbf57364c5525e4521aee66a5228664285e11",
        "filename": "src/miner.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/150771c4f31cf71cb97a9589e21d8882454fbc53/src/miner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/150771c4f31cf71cb97a9589e21d8882454fbc53/src/miner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.cpp?ref=150771c4f31cf71cb97a9589e21d8882454fbc53",
        "patch": "@@ -124,7 +124,7 @@ CBlockTemplate* CreateNewBlock(const CScript& scriptPubKeyIn)\n     pblocktemplate->vTxSigOps.push_back(-1); // updated at end\n \n     // Largest block you're willing to create:\n-    unsigned int nBlockMaxSize = GetArg(\"-blockmaxsize\", MAX_BLOCK_SIZE_GEN/2);\n+    unsigned int nBlockMaxSize = GetArg(\"-blockmaxsize\", DEFAULT_BLOCK_MAX_SIZE);\n     // Limit to betweeen 1K and MAX_BLOCK_SIZE-1K for sanity:\n     nBlockMaxSize = std::max((unsigned int)1000, std::min((unsigned int)(MAX_BLOCK_SIZE-1000), nBlockMaxSize));\n "
      }
    ]
  },
  {
    "sha": "666225f6877b5c9903d03a06daefd47056368eb3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2NjYyMjVmNjg3N2I1Yzk5MDNkMDNhMDZkYWVmZDQ3MDU2MzY4ZWIz",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-13T05:03:32Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-13T05:03:40Z"
      },
      "message": "Merge pull request #3387\n\n3e01c00 Add tests for correct and incorrect order of signatures for a multisig (P2SH) (Tamas Blummer)",
      "tree": {
        "sha": "56552aa3b9092c5c294fdf73752e96a3f170de36",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/56552aa3b9092c5c294fdf73752e96a3f170de36"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/666225f6877b5c9903d03a06daefd47056368eb3",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJSqpUsAAoJEHSBCwEjRsmmpckH/3YMTEBIReQGGxub7HJqMbrP\n6+BJQw7rAyLxTW3BbqdBPBUUTEQUmVtVrVZnNTdP+oRAQH+xI4PG2t8SCik3OvRn\nKeNBrFreu2hLedB4TcdL63rACVFRFXyzJ7MYdqjx8cvCKR+I1TQMLyK7nEN+kpHz\nyn/Q1LS0zfLHkHCHTgMLY7Kk53IfxiwSeF5LLkNKtCVUpMzKHwl8O47K8O8eIrLv\n4HS/hidft6TJjt150t+8bMiPOKKcdbwS1DQk+haxIyit5UoZfKDGHj6JgF2VoZs0\nyYkDMgvH/TR7/duOpzgnf2+B5V/hp26D0lFBHEdCxNSlwkl7KDfp3zzl5ztKdEE=\n=vXPC\n-----END PGP SIGNATURE-----",
        "payload": "tree 56552aa3b9092c5c294fdf73752e96a3f170de36\nparent 150771c4f31cf71cb97a9589e21d8882454fbc53\nparent 3e01c00f420864a59c53b988394222eaadd86169\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1386911012 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1386911020 +0100\n\nMerge pull request #3387\n\n3e01c00 Add tests for correct and incorrect order of signatures for a multisig (P2SH) (Tamas Blummer)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/666225f6877b5c9903d03a06daefd47056368eb3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/666225f6877b5c9903d03a06daefd47056368eb3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/666225f6877b5c9903d03a06daefd47056368eb3/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "150771c4f31cf71cb97a9589e21d8882454fbc53",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/150771c4f31cf71cb97a9589e21d8882454fbc53",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/150771c4f31cf71cb97a9589e21d8882454fbc53"
      },
      {
        "sha": "3e01c00f420864a59c53b988394222eaadd86169",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3e01c00f420864a59c53b988394222eaadd86169",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3e01c00f420864a59c53b988394222eaadd86169"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 12,
      "deletions": 2
    },
    "files": [
      {
        "sha": "e386f81fe6fa34d3211f4bc3038130e3b120547f",
        "filename": "src/test/data/tx_invalid.json",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/666225f6877b5c9903d03a06daefd47056368eb3/src/test/data/tx_invalid.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/666225f6877b5c9903d03a06daefd47056368eb3/src/test/data/tx_invalid.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/data/tx_invalid.json?ref=666225f6877b5c9903d03a06daefd47056368eb3",
        "patch": "@@ -65,5 +65,10 @@\n [\"Same as the transactions in valid with one input SIGHASH_ALL and one SIGHASH_ANYONECANPAY, but we set the _ANYONECANPAY sequence number, invalidating the SIGHASH_ALL signature\"],\n [[[\"0000000000000000000000000000000000000000000000000000000000000100\", 0, \"0x21 0x035e7f0d4d0841bcd56c39337ed086b1a633ee770c1ffdd94ac552a95ac2ce0efc CHECKSIG\"],\n   [\"0000000000000000000000000000000000000000000000000000000000000200\", 0, \"0x21 0x035e7f0d4d0841bcd56c39337ed086b1a633ee770c1ffdd94ac552a95ac2ce0efc CHECKSIG\"]],\n- \"01000000020001000000000000000000000000000000000000000000000000000000000000000000004948304502203a0f5f0e1f2bdbcd04db3061d18f3af70e07f4f467cbc1b8116f267025f5360b022100c792b6e215afc5afc721a351ec413e714305cb749aae3d7fee76621313418df10101000000000200000000000000000000000000000000000000000000000000000000000000000000484730440220201dc2d030e380e8f9cfb41b442d930fa5a685bb2c8db5906671f865507d0670022018d9e7a8d4c8d86a73c2a724ee38ef983ec249827e0e464841735955c707ece98101000000010100000000000000015100000000\", true]\n+ \"01000000020001000000000000000000000000000000000000000000000000000000000000000000004948304502203a0f5f0e1f2bdbcd04db3061d18f3af70e07f4f467cbc1b8116f267025f5360b022100c792b6e215afc5afc721a351ec413e714305cb749aae3d7fee76621313418df10101000000000200000000000000000000000000000000000000000000000000000000000000000000484730440220201dc2d030e380e8f9cfb41b442d930fa5a685bb2c8db5906671f865507d0670022018d9e7a8d4c8d86a73c2a724ee38ef983ec249827e0e464841735955c707ece98101000000010100000000000000015100000000\", true],\n+\n+[\"Incorrect signature order\"],\n+[\"Note the input is just required to make the tester happy\"],\n+[[[\"b3da01dd4aae683c7aee4d5d8b52a540a508e1115f77cd7fa9a291243f501223\", 0, \"HASH160 0x14 0xb1ce99298d5f07364b57b1e5c9cc00be0b04a954 EQUAL\"]],\n+\"01000000012312503f2491a2a97fcd775f11e108a540a5528b5d4dee7a3c68ae4add01dab300000000fdfe000048304502207aacee820e08b0b174e248abd8d7a34ed63b5da3abedb99934df9fddd65c05c4022100dfe87896ab5ee3df476c2655f9fbe5bd089dccbef3e4ea05b5d121169fe7f5f401483045022100f6649b0eddfdfd4ad55426663385090d51ee86c3481bdc6b0c18ea6c0ece2c0b0220561c315b07cffa6f7dd9df96dbae9200c2dee09bf93cc35ca05e6cdf613340aa014c695221031d11db38972b712a9fe1fc023577c7ae3ddb4a3004187d41c45121eecfdbb5b7210207ec36911b6ad2382860d32989c7b8728e9489d7bbc94a6b5509ef0029be128821024ea9fac06f666a4adc3fc1357b7bec1fd0bdece2b9d08579226a8ebde53058e453aeffffffff0180380100000000001976a914c9b99cddf847d10685a4fabaa0baf505f7c3dfab88ac00000000\", true]\n ]"
      },
      {
        "sha": "c33a7a035ad0b1eb4314e136153ed9d44b4621d8",
        "filename": "src/test/data/tx_valid.json",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/666225f6877b5c9903d03a06daefd47056368eb3/src/test/data/tx_valid.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/666225f6877b5c9903d03a06daefd47056368eb3/src/test/data/tx_valid.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/data/tx_valid.json?ref=666225f6877b5c9903d03a06daefd47056368eb3",
        "patch": "@@ -87,5 +87,10 @@\n \n  [\"ddc454a1c0c35c188c98976b17670f69e586d9c0f3593ea879928332f0a069e7, which spends an input that pushes using a PUSHDATA1 that is negative when read as signed\"],\n  [[[\"c5510a5dd97a25f43175af1fe649b707b1df8e1a41489bac33a23087027a2f48\", 0, \"0x4c 0xae 0x606563686f2022553246736447566b58312b5a536e587574356542793066794778625456415675534a6c376a6a334878416945325364667657734f53474f36633338584d7439435c6e543249584967306a486956304f376e775236644546673d3d22203e20743b206f70656e73736c20656e63202d7061737320706173733a5b314a564d7751432d707269766b65792d6865785d202d64202d6165732d3235362d636263202d61202d696e207460 DROP DUP HASH160 0x14 0xbfd7436b6265aa9de506f8a994f881ff08cc2872 EQUALVERIFY CHECKSIG\"]],\n- \"0100000001482f7a028730a233ac9b48411a8edfb107b749e61faf7531f4257ad95d0a51c5000000008b483045022100bf0bbae9bde51ad2b222e87fbf67530fbafc25c903519a1e5dcc52a32ff5844e022028c4d9ad49b006dd59974372a54291d5764be541574bb0c4dc208ec51f80b7190141049dd4aad62741dc27d5f267f7b70682eee22e7e9c1923b9c0957bdae0b96374569b460eb8d5b40d972e8c7c0ad441de3d94c4a29864b212d56050acb980b72b2bffffffff0180969800000000001976a914e336d0017a9d28de99d16472f6ca6d5a3a8ebc9988ac00000000\", true]\n+ \"0100000001482f7a028730a233ac9b48411a8edfb107b749e61faf7531f4257ad95d0a51c5000000008b483045022100bf0bbae9bde51ad2b222e87fbf67530fbafc25c903519a1e5dcc52a32ff5844e022028c4d9ad49b006dd59974372a54291d5764be541574bb0c4dc208ec51f80b7190141049dd4aad62741dc27d5f267f7b70682eee22e7e9c1923b9c0957bdae0b96374569b460eb8d5b40d972e8c7c0ad441de3d94c4a29864b212d56050acb980b72b2bffffffff0180969800000000001976a914e336d0017a9d28de99d16472f6ca6d5a3a8ebc9988ac00000000\", true],\n+\n+[\"Correct signature order\"],\n+[\"Note the input is just required to make the tester happy\"],\n+[[[\"b3da01dd4aae683c7aee4d5d8b52a540a508e1115f77cd7fa9a291243f501223\", 0, \"HASH160 0x14 0xb1ce99298d5f07364b57b1e5c9cc00be0b04a954 EQUAL\"]],\n+\"01000000012312503f2491a2a97fcd775f11e108a540a5528b5d4dee7a3c68ae4add01dab300000000fdfe0000483045022100f6649b0eddfdfd4ad55426663385090d51ee86c3481bdc6b0c18ea6c0ece2c0b0220561c315b07cffa6f7dd9df96dbae9200c2dee09bf93cc35ca05e6cdf613340aa0148304502207aacee820e08b0b174e248abd8d7a34ed63b5da3abedb99934df9fddd65c05c4022100dfe87896ab5ee3df476c2655f9fbe5bd089dccbef3e4ea05b5d121169fe7f5f4014c695221031d11db38972b712a9fe1fc023577c7ae3ddb4a3004187d41c45121eecfdbb5b7210207ec36911b6ad2382860d32989c7b8728e9489d7bbc94a6b5509ef0029be128821024ea9fac06f666a4adc3fc1357b7bec1fd0bdece2b9d08579226a8ebde53058e453aeffffffff0180380100000000001976a914c9b99cddf847d10685a4fabaa0baf505f7c3dfab88ac00000000\", true] \n ]"
      }
    ]
  },
  {
    "sha": "22f0135df0f6ee94c137d6c59209bdfbd93533fc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyMmYwMTM1ZGYwZjZlZTk0YzEzN2Q2YzU5MjA5YmRmYmQ5MzUzM2Zj",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-13T06:39:56Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-13T06:51:16Z"
      },
      "message": "Rebrand to `Bitcoin Core`\n\nOnly messages for now, executable names and other file names\ncan be changed later if necessary and safe.\n\nDo not do an all-sweeping change. Some occurences of Bitcoin-Qt need to\nbe kept:\n\n- Applicationname: this is used to determine the registry entry names,\n  we don't want to lose settings over a silly name change.\n- Where it refers to the executable name instead of the product name.",
      "tree": {
        "sha": "63c481c6b620a05d412663b0730c2829c998389c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/63c481c6b620a05d412663b0730c2829c998389c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/22f0135df0f6ee94c137d6c59209bdfbd93533fc",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/22f0135df0f6ee94c137d6c59209bdfbd93533fc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/22f0135df0f6ee94c137d6c59209bdfbd93533fc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/22f0135df0f6ee94c137d6c59209bdfbd93533fc/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fb34be6d5905d36a2d9a392d87aa73bdb9470a1b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fb34be6d5905d36a2d9a392d87aa73bdb9470a1b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fb34be6d5905d36a2d9a392d87aa73bdb9470a1b"
      }
    ],
    "stats": {
      "total": 46,
      "additions": 23,
      "deletions": 23
    },
    "files": [
      {
        "sha": "c23d4a484e77d1aa0ece263c491dab483438207e",
        "filename": "doc/README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/22f0135df0f6ee94c137d6c59209bdfbd93533fc/doc/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/22f0135df0f6ee94c137d6c59209bdfbd93533fc/doc/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README.md?ref=22f0135df0f6ee94c137d6c59209bdfbd93533fc",
        "patch": "@@ -6,7 +6,7 @@ Copyright (c) 2009-2013 Bitcoin Developers\n \n Setup\n ---------------------\n-[Bitcoin-Qt](http://bitcoin.org/en/download) is the original Bitcoin client and it builds the backbone of the network. However, it downloads and stores the entire history of Bitcoin transactions (which is currently several GBs); depending on the speed of your computer and network connection, the synchronization process can take anywhere from a few hours to a day or more. Thankfully you only have to do this once. If you would like the process to go faster you can [download the blockchain directly](https://bitcointalk.org/index.php?topic=145386.0).\n+[Bitcoin Core](http://bitcoin.org/en/download) is the original Bitcoin client and it builds the backbone of the network. However, it downloads and stores the entire history of Bitcoin transactions (which is currently several GBs); depending on the speed of your computer and network connection, the synchronization process can take anywhere from a few hours to a day or more. Thankfully you only have to do this once. If you would like the process to go faster you can [download the blockchain directly](https://bitcointalk.org/index.php?topic=145386.0).\n \n Running\n ---------------------"
      },
      {
        "sha": "f120b8eb2f63ed426f0ba4909eb71079da9f586d",
        "filename": "doc/README_windows.txt",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/22f0135df0f6ee94c137d6c59209bdfbd93533fc/doc/README_windows.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/22f0135df0f6ee94c137d6c59209bdfbd93533fc/doc/README_windows.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README_windows.txt?ref=22f0135df0f6ee94c137d6c59209bdfbd93533fc",
        "patch": "@@ -20,7 +20,7 @@ Setup\n -----\r\n Unpack the files into a directory and run bitcoin-qt.exe.\r\n \r\n-Bitcoin-Qt is the original Bitcoin client and it builds the backbone of the network.\r\n+Bitcoin Core is the original Bitcoin client and it builds the backbone of the network.\r\n However, it downloads and stores the entire history of Bitcoin transactions;\r\n depending on the speed of your computer and network connection, the synchronization\r\n process can take anywhere from a few hours to a day or more.\r"
      },
      {
        "sha": "de71fde9bcf092f518768e999513db752f91d31c",
        "filename": "src/bitcoind.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/22f0135df0f6ee94c137d6c59209bdfbd93533fc/src/bitcoind.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/22f0135df0f6ee94c137d6c59209bdfbd93533fc/src/bitcoind.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoind.cpp?ref=22f0135df0f6ee94c137d6c59209bdfbd93533fc",
        "patch": "@@ -78,7 +78,7 @@ bool AppInit(int argc, char* argv[])\n         if (mapArgs.count(\"-?\") || mapArgs.count(\"--help\"))\n         {\n             // First part of help message is specific to bitcoind / RPC client\n-            std::string strUsage = _(\"Bitcoin version\") + \" \" + FormatFullVersion() + \"\\n\\n\" +\n+            std::string strUsage = _(\"Bitcoin Core Daemon\") + \" \" + _(\"version\") + \" \" + FormatFullVersion() + \"\\n\\n\" +\n                 _(\"Usage:\") + \"\\n\" +\n                   \"  bitcoind [options]                     \" + _(\"Start Bitcoin server\") + \"\\n\" +\n                 _(\"Usage (deprecated, use bitcoin-cli):\") + \"\\n\" +"
      },
      {
        "sha": "dbdb34b76aff29d7837e12f13d2d2645e1d7c03f",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/22f0135df0f6ee94c137d6c59209bdfbd93533fc/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/22f0135df0f6ee94c137d6c59209bdfbd93533fc/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=22f0135df0f6ee94c137d6c59209bdfbd93533fc",
        "patch": "@@ -162,14 +162,14 @@ static void initTranslations(QTranslator &qtTranslatorBase, QTranslator &qtTrans\n void DebugMessageHandler(QtMsgType type, const char *msg)\n {\n     Q_UNUSED(type);\n-    LogPrint(\"qt\", \"Bitcoin-Qt: %s\\n\", msg);\n+    LogPrint(\"qt\", \"GUI: %s\\n\", msg);\n }\n #else\n void DebugMessageHandler(QtMsgType type, const QMessageLogContext& context, const QString &msg)\n {\n     Q_UNUSED(type);\n     Q_UNUSED(context);\n-    LogPrint(\"qt\", \"Bitcoin-Qt: %s\\n\", qPrintable(msg));\n+    LogPrint(\"qt\", \"GUI: %s\\n\", qPrintable(msg));\n }\n #endif\n \n@@ -364,7 +364,7 @@ int main(int argc, char *argv[])\n                 guiref = 0;\n                 delete walletModel;\n             }\n-            // Shutdown the core and its threads, but don't exit Bitcoin-Qt here\n+            // Shutdown the core and its threads, but don't exit the GUI here\n             threadGroup.interrupt_all();\n             threadGroup.join_all();\n             Shutdown();"
      },
      {
        "sha": "5ffd3f89876d5918d6520876fef1dac0b4446ebe",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/22f0135df0f6ee94c137d6c59209bdfbd93533fc/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/22f0135df0f6ee94c137d6c59209bdfbd93533fc/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=22f0135df0f6ee94c137d6c59209bdfbd93533fc",
        "patch": "@@ -71,7 +71,7 @@ BitcoinGUI::BitcoinGUI(bool fIsTestnet, QWidget *parent) :\n \n     if (!fIsTestnet)\n     {\n-        setWindowTitle(tr(\"Bitcoin\") + \" - \" + tr(\"Wallet\"));\n+        setWindowTitle(tr(\"Bitcoin Core\") + \" - \" + tr(\"Wallet\"));\n #ifndef Q_OS_MAC\n         QApplication::setWindowIcon(QIcon(\":icons/bitcoin\"));\n         setWindowIcon(QIcon(\":icons/bitcoin\"));\n@@ -81,7 +81,7 @@ BitcoinGUI::BitcoinGUI(bool fIsTestnet, QWidget *parent) :\n     }\n     else\n     {\n-        setWindowTitle(tr(\"Bitcoin\") + \" - \" + tr(\"Wallet\") + \" \" + tr(\"[testnet]\"));\n+        setWindowTitle(tr(\"Bitcoin Core\") + \" - \" + tr(\"Wallet\") + \" \" + tr(\"[testnet]\"));\n #ifndef Q_OS_MAC\n         QApplication::setWindowIcon(QIcon(\":icons/bitcoin_testnet\"));\n         setWindowIcon(QIcon(\":icons/bitcoin_testnet\"));\n@@ -229,9 +229,9 @@ void BitcoinGUI::createActions(bool fIsTestnet)\n     quitAction->setShortcut(QKeySequence(Qt::CTRL + Qt::Key_Q));\n     quitAction->setMenuRole(QAction::QuitRole);\n     if (!fIsTestnet)\n-        aboutAction = new QAction(QIcon(\":/icons/bitcoin\"), tr(\"&About Bitcoin\"), this);\n+        aboutAction = new QAction(QIcon(\":/icons/bitcoin\"), tr(\"&About Bitcoin Core\"), this);\n     else\n-        aboutAction = new QAction(QIcon(\":/icons/bitcoin_testnet\"), tr(\"&About Bitcoin\"), this);\n+        aboutAction = new QAction(QIcon(\":/icons/bitcoin_testnet\"), tr(\"&About Bitcoin Core\"), this);\n     aboutAction->setStatusTip(tr(\"Show information about Bitcoin\"));\n     aboutAction->setMenuRole(QAction::AboutRole);\n #if QT_VERSION < 0x050000"
      },
      {
        "sha": "10a5857cab45399e2eec4da89c2a2dfcc8cc2e4d",
        "filename": "src/qt/forms/aboutdialog.ui",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/22f0135df0f6ee94c137d6c59209bdfbd93533fc/src/qt/forms/aboutdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/22f0135df0f6ee94c137d6c59209bdfbd93533fc/src/qt/forms/aboutdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/aboutdialog.ui?ref=22f0135df0f6ee94c137d6c59209bdfbd93533fc",
        "patch": "@@ -11,7 +11,7 @@\n    </rect>\n   </property>\n   <property name=\"windowTitle\">\n-   <string>About Bitcoin</string>\n+   <string>About Bitcoin Core</string>\n   </property>\n   <layout class=\"QHBoxLayout\" name=\"horizontalLayout_2\">\n    <item>\n@@ -50,7 +50,7 @@\n           <cursorShape>IBeamCursor</cursorShape>\n          </property>\n          <property name=\"text\">\n-          <string>&lt;b&gt;Bitcoin&lt;/b&gt; version</string>\n+          <string>&lt;b&gt;Bitcoin Core&lt;/b&gt; version</string>\n          </property>\n          <property name=\"textInteractionFlags\">\n           <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n@@ -91,7 +91,7 @@\n         <cursorShape>IBeamCursor</cursorShape>\n        </property>\n        <property name=\"text\">\n-        <string notr=\"true\">Copyright &amp;copy; 2009-YYYY The Bitcoin developers</string>\n+        <string notr=\"true\">Copyright &amp;copy; 2009-YYYY The Bitcoin Core developers</string>\n        </property>\n        <property name=\"textFormat\">\n         <enum>Qt::RichText</enum>"
      },
      {
        "sha": "05ee9466c4adfe8c53fce66ecc18c1343fda5309",
        "filename": "src/qt/forms/intro.ui",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/22f0135df0f6ee94c137d6c59209bdfbd93533fc/src/qt/forms/intro.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/22f0135df0f6ee94c137d6c59209bdfbd93533fc/src/qt/forms/intro.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/intro.ui?ref=22f0135df0f6ee94c137d6c59209bdfbd93533fc",
        "patch": "@@ -20,7 +20,7 @@\n       <string notr=\"true\">QLabel { font-style:italic; }</string>\n      </property>\n      <property name=\"text\">\n-      <string>Welcome to Bitcoin-Qt.</string>\n+      <string>Welcome to Bitcoin Core.</string>\n      </property>\n      <property name=\"wordWrap\">\n       <bool>true</bool>\n@@ -46,7 +46,7 @@\n    <item>\n     <widget class=\"QLabel\" name=\"label_4\">\n      <property name=\"text\">\n-      <string>As this is the first time the program is launched, you can choose where Bitcoin-Qt will store its data.</string>\n+      <string>As this is the first time the program is launched, you can choose where Bitcoin Core will store its data.</string>\n      </property>\n      <property name=\"wordWrap\">\n       <bool>true</bool>\n@@ -56,7 +56,7 @@\n    <item>\n     <widget class=\"QLabel\" name=\"sizeWarningLabel\">\n      <property name=\"text\">\n-      <string>Bitcoin-Qt will download and store a copy of the Bitcoin block chain. At least %1GB of data will be stored in this directory, and it will grow over time. The wallet will also be stored in this directory.</string>\n+      <string>Bitcoin Core will download and store a copy of the Bitcoin block chain. At least %1GB of data will be stored in this directory, and it will grow over time. The wallet will also be stored in this directory.</string>\n      </property>\n      <property name=\"wordWrap\">\n       <bool>true</bool>"
      },
      {
        "sha": "36c0b881cad10c11bfbac1295af97030c542a527",
        "filename": "src/qt/forms/rpcconsole.ui",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/22f0135df0f6ee94c137d6c59209bdfbd93533fc/src/qt/forms/rpcconsole.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/22f0135df0f6ee94c137d6c59209bdfbd93533fc/src/qt/forms/rpcconsole.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/rpcconsole.ui?ref=22f0135df0f6ee94c137d6c59209bdfbd93533fc",
        "patch": "@@ -348,7 +348,7 @@\n        <item row=\"17\" column=\"0\">\n         <widget class=\"QPushButton\" name=\"showCLOptionsButton\">\n          <property name=\"toolTip\">\n-          <string>Show the Bitcoin-Qt help message to get a list with possible Bitcoin command-line options.</string>\n+          <string>Show the Bitcoin-Core help message to get a list with possible Bitcoin command-line options.</string>\n          </property>\n          <property name=\"text\">\n           <string>&amp;Show</string>"
      },
      {
        "sha": "309d08d07951a7086394a39198e474cf49c6b95d",
        "filename": "src/qt/guiutil.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/22f0135df0f6ee94c137d6c59209bdfbd93533fc/src/qt/guiutil.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/22f0135df0f6ee94c137d6c59209bdfbd93533fc/src/qt/guiutil.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.cpp?ref=22f0135df0f6ee94c137d6c59209bdfbd93533fc",
        "patch": "@@ -594,7 +594,7 @@ void restoreWindowGeometry(const QString& strSetting, const QSize& defaultSize,\n HelpMessageBox::HelpMessageBox(QWidget *parent) :\n     QMessageBox(parent)\n {\n-    header = tr(\"Bitcoin-Qt\") + \" \" + tr(\"version\") + \" \" +\n+    header = tr(\"Bitcoin Core\") + tr(\"version\") + \" \" +\n         QString::fromStdString(FormatFullVersion()) + \"\\n\\n\" +\n         tr(\"Usage:\") + \"\\n\" +\n         \"  bitcoin-qt [\" + tr(\"command-line options\") + \"]                     \" + \"\\n\";\n@@ -607,7 +607,7 @@ HelpMessageBox::HelpMessageBox(QWidget *parent) :\n         \"  -splash                \" + tr(\"Show splash screen on startup (default: 1)\") + \"\\n\" +\n         \"  -choosedatadir         \" + tr(\"Choose data directory on startup (default: 0)\") + \"\\n\";\n \n-    setWindowTitle(tr(\"Bitcoin-Qt\"));\n+    setWindowTitle(tr(\"Bitcoin Core\"));\n     setTextFormat(Qt::PlainText);\n     // setMinimumWidth is ignored for QMessageBox so put in non-breaking spaces to make it wider.\n     setText(header + QString(QChar(0x2003)).repeated(50));"
      },
      {
        "sha": "ee23ae9b78e7cfa2b59e10039b31cf5d9e274968",
        "filename": "src/qt/res/bitcoin-qt-res.rc",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/22f0135df0f6ee94c137d6c59209bdfbd93533fc/src/qt/res/bitcoin-qt-res.rc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/22f0135df0f6ee94c137d6c59209bdfbd93533fc/src/qt/res/bitcoin-qt-res.rc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/bitcoin-qt-res.rc?ref=22f0135df0f6ee94c137d6c59209bdfbd93533fc",
        "patch": "@@ -21,13 +21,13 @@ BEGIN\n         BLOCK \"040904E4\" // U.S. English - multilingual (hex)\n         BEGIN\n             VALUE \"CompanyName\",        \"Bitcoin\"\n-            VALUE \"FileDescription\",    \"Bitcoin-Qt (OSS GUI client for Bitcoin)\"\n+            VALUE \"FileDescription\",    \"Bitcoin Core (OSS GUI client for Bitcoin)\"\n             VALUE \"FileVersion\",        VER_FILEVERSION_STR\n             VALUE \"InternalName\",       \"bitcoin-qt\"\n             VALUE \"LegalCopyright\",     COPYRIGHT_STR\n             VALUE \"LegalTrademarks1\",   \"Distributed under the MIT/X11 software license, see the accompanying file COPYING or http://www.opensource.org/licenses/mit-license.php.\"\n             VALUE \"OriginalFilename\",   \"bitcoin-qt.exe\"\n-            VALUE \"ProductName\",        \"Bitcoin-Qt\"\n+            VALUE \"ProductName\",        \"Bitcoin Core\"\n             VALUE \"ProductVersion\",     VER_PRODUCTVERSION_STR\n         END\n     END"
      },
      {
        "sha": "4528c3477c8d0d6160ba832b36473a15449ed84d",
        "filename": "src/qt/splashscreen.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/22f0135df0f6ee94c137d6c59209bdfbd93533fc/src/qt/splashscreen.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/22f0135df0f6ee94c137d6c59209bdfbd93533fc/src/qt/splashscreen.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/splashscreen.cpp?ref=22f0135df0f6ee94c137d6c59209bdfbd93533fc",
        "patch": "@@ -23,9 +23,9 @@ SplashScreen::SplashScreen(const QPixmap &pixmap, Qt::WindowFlags f) :\n     float fontFactor            = 1.0;\n \n     // define text to place\n-    QString titleText       = QString(QApplication::applicationName()).replace(QString(\"-testnet\"), QString(\"\"), Qt::CaseSensitive); // cut of testnet, place it as single object further down\n+    QString titleText       = tr(\"Bitcoin Core\");\n     QString versionText     = QString(\"Version %1\").arg(QString::fromStdString(FormatFullVersion()));\n-    QString copyrightText   = QChar(0xA9)+QString(\" 2009-%1 \").arg(COPYRIGHT_YEAR) + QString(tr(\"The Bitcoin developers\"));\n+    QString copyrightText   = QChar(0xA9)+QString(\" 2009-%1 \").arg(COPYRIGHT_YEAR) + QString(tr(\"The Bitcoin Core developers\"));\n     QString testnetAddText  = QString(tr(\"[testnet]\")); // define text to place as single text object\n \n     QString font            = \"Arial\";"
      }
    ]
  },
  {
    "sha": "a9a37c8bb5b69df4d8270d27ce070f1b16f6ff6b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphOWEzN2M4YmI1YjY5ZGY0ZDgyNzBkMjdjZTA3MGYxYjE2ZjZmZjZi",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2013-12-13T07:50:07Z"
      },
      "committer": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2013-12-13T09:01:21Z"
      },
      "message": "update help for -blockmaxsize and blockprioritysize\n\n- was left out in #3326",
      "tree": {
        "sha": "d176003961d9b2310b749235860399cb1281a06b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d176003961d9b2310b749235860399cb1281a06b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a9a37c8bb5b69df4d8270d27ce070f1b16f6ff6b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a9a37c8bb5b69df4d8270d27ce070f1b16f6ff6b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a9a37c8bb5b69df4d8270d27ce070f1b16f6ff6b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a9a37c8bb5b69df4d8270d27ce070f1b16f6ff6b/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "666225f6877b5c9903d03a06daefd47056368eb3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/666225f6877b5c9903d03a06daefd47056368eb3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/666225f6877b5c9903d03a06daefd47056368eb3"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 4,
      "deletions": 3
    },
    "files": [
      {
        "sha": "40dd2d04cd22a35609ab11646c431c16b6bcddf6",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a9a37c8bb5b69df4d8270d27ce070f1b16f6ff6b/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a9a37c8bb5b69df4d8270d27ce070f1b16f6ff6b/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=a9a37c8bb5b69df4d8270d27ce070f1b16f6ff6b",
        "patch": "@@ -11,10 +11,11 @@\n \n #include \"addrman.h\"\n #include \"db.h\"\n-#include \"rpcserver.h\"\n #include \"checkpoints.h\"\n+#include \"main.h\"\n #include \"miner.h\"\n #include \"net.h\"\n+#include \"rpcserver.h\"\n #include \"txdb.h\"\n #include \"ui_interface.h\"\n #include \"util.h\"\n@@ -282,8 +283,8 @@ std::string HelpMessage(HelpMessageMode hmm)\n \n     strUsage += \"\\n\" + _(\"Block creation options:\") + \"\\n\";\n     strUsage += \"  -blockminsize=<n>      \" + _(\"Set minimum block size in bytes (default: 0)\") + \"\\n\";\n-    strUsage += \"  -blockmaxsize=<n>      \" + _(\"Set maximum block size in bytes (default: 250000)\") + \"\\n\";\n-    strUsage += \"  -blockprioritysize=<n> \" + _(\"Set maximum size of high-priority/low-fee transactions in bytes (default: 27000)\") + \"\\n\";\n+    strUsage += \"  -blockmaxsize=<n>      \" + strprintf(_(\"Set maximum block size in bytes (default: %d)\"), DEFAULT_BLOCK_MAX_SIZE) + \"\\n\";\n+    strUsage += \"  -blockprioritysize=<n> \" + strprintf(_(\"Set maximum size of high-priority/low-fee transactions in bytes (default: %d)\"), DEFAULT_BLOCK_PRIORITY_SIZE) + \"\\n\";\n \n     strUsage += \"\\n\" + _(\"SSL options: (see the Bitcoin Wiki for SSL setup instructions)\") + \"\\n\";\n     strUsage += \"  -rpcssl                                  \" + _(\"Use OpenSSL (https) for JSON-RPC connections\") + \"\\n\";"
      }
    ]
  },
  {
    "sha": "5e2fb330fd982cd9e01bc62dfc9fa8d8f7e09243",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ZTJmYjMzMGZkOTgyY2Q5ZTAxYmM2MmRmYzlmYThkOGY3ZTA5MjQz",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-13T09:08:39Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-13T09:13:32Z"
      },
      "message": "Merge pull request #3409\n\na9a37c8 update help for -blockmaxsize and blockprioritysize (Philip Kaufmann)",
      "tree": {
        "sha": "d176003961d9b2310b749235860399cb1281a06b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d176003961d9b2310b749235860399cb1281a06b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5e2fb330fd982cd9e01bc62dfc9fa8d8f7e09243",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJSqs+8AAoJEHSBCwEjRsmm5eoH/iz0M5+FD5MrQo6hbqe/iobh\n1S6D5Vj3u8D+NgvvEDOxE0JKb6WRjeiZ+N0qFzMbhjiFyyoZB8pWQzMbAML2TaF4\nSisuhJq83OSXoHeLTMDB6y+hHpsx4/BByc8rmdFKgiiO8DKKT4K4lPLIK1g+3mDU\nxnyhjbKwps4CM/Z7iaGtv72Z8BTLP+xm4/dZdMghjtzvt0bcNALFGAztF9ttg9DJ\n79Dj/np6LtqMeXU9/bVkVHqS60rsGgf3gyGNGDawTmc+6KLpQcxdDm46GZeKeSf5\nZDW805at8vBDozqMcS5eRzmKILHxDU9uS+glzcPPxPTjiuRbtD9kCqAzBEmaGOU=\n=2b0K\n-----END PGP SIGNATURE-----",
        "payload": "tree d176003961d9b2310b749235860399cb1281a06b\nparent 666225f6877b5c9903d03a06daefd47056368eb3\nparent a9a37c8bb5b69df4d8270d27ce070f1b16f6ff6b\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1386925719 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1386926012 +0100\n\nMerge pull request #3409\n\na9a37c8 update help for -blockmaxsize and blockprioritysize (Philip Kaufmann)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5e2fb330fd982cd9e01bc62dfc9fa8d8f7e09243",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5e2fb330fd982cd9e01bc62dfc9fa8d8f7e09243",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5e2fb330fd982cd9e01bc62dfc9fa8d8f7e09243/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "666225f6877b5c9903d03a06daefd47056368eb3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/666225f6877b5c9903d03a06daefd47056368eb3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/666225f6877b5c9903d03a06daefd47056368eb3"
      },
      {
        "sha": "a9a37c8bb5b69df4d8270d27ce070f1b16f6ff6b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a9a37c8bb5b69df4d8270d27ce070f1b16f6ff6b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a9a37c8bb5b69df4d8270d27ce070f1b16f6ff6b"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 4,
      "deletions": 3
    },
    "files": [
      {
        "sha": "40dd2d04cd22a35609ab11646c431c16b6bcddf6",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5e2fb330fd982cd9e01bc62dfc9fa8d8f7e09243/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5e2fb330fd982cd9e01bc62dfc9fa8d8f7e09243/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=5e2fb330fd982cd9e01bc62dfc9fa8d8f7e09243",
        "patch": "@@ -11,10 +11,11 @@\n \n #include \"addrman.h\"\n #include \"db.h\"\n-#include \"rpcserver.h\"\n #include \"checkpoints.h\"\n+#include \"main.h\"\n #include \"miner.h\"\n #include \"net.h\"\n+#include \"rpcserver.h\"\n #include \"txdb.h\"\n #include \"ui_interface.h\"\n #include \"util.h\"\n@@ -282,8 +283,8 @@ std::string HelpMessage(HelpMessageMode hmm)\n \n     strUsage += \"\\n\" + _(\"Block creation options:\") + \"\\n\";\n     strUsage += \"  -blockminsize=<n>      \" + _(\"Set minimum block size in bytes (default: 0)\") + \"\\n\";\n-    strUsage += \"  -blockmaxsize=<n>      \" + _(\"Set maximum block size in bytes (default: 250000)\") + \"\\n\";\n-    strUsage += \"  -blockprioritysize=<n> \" + _(\"Set maximum size of high-priority/low-fee transactions in bytes (default: 27000)\") + \"\\n\";\n+    strUsage += \"  -blockmaxsize=<n>      \" + strprintf(_(\"Set maximum block size in bytes (default: %d)\"), DEFAULT_BLOCK_MAX_SIZE) + \"\\n\";\n+    strUsage += \"  -blockprioritysize=<n> \" + strprintf(_(\"Set maximum size of high-priority/low-fee transactions in bytes (default: %d)\"), DEFAULT_BLOCK_PRIORITY_SIZE) + \"\\n\";\n \n     strUsage += \"\\n\" + _(\"SSL options: (see the Bitcoin Wiki for SSL setup instructions)\") + \"\\n\";\n     strUsage += \"  -rpcssl                                  \" + _(\"Use OpenSSL (https) for JSON-RPC connections\") + \"\\n\";"
      }
    ]
  },
  {
    "sha": "08b93f9a65ce70e650244f94725fcd042d97f0ee",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowOGI5M2Y5YTY1Y2U3MGU2NTAyNDRmOTQ3MjVmY2QwNDJkOTdmMGVl",
    "commit": {
      "author": {
        "name": "HaltingState",
        "email": "haltingstate@gmail.com",
        "date": "2013-12-09T10:08:08Z"
      },
      "committer": {
        "name": "HaltingState",
        "email": "haltingstate@gmail.com",
        "date": "2013-12-13T12:09:02Z"
      },
      "message": "fixed documetation on hardening flags",
      "tree": {
        "sha": "028eb30efec3375f84031b408caf75b3ba6d767a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/028eb30efec3375f84031b408caf75b3ba6d767a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/08b93f9a65ce70e650244f94725fcd042d97f0ee",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/08b93f9a65ce70e650244f94725fcd042d97f0ee",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/08b93f9a65ce70e650244f94725fcd042d97f0ee",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/08b93f9a65ce70e650244f94725fcd042d97f0ee/comments",
    "author": {
      "login": "haltingstate",
      "id": 1774230,
      "node_id": "MDQ6VXNlcjE3NzQyMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1774230?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/haltingstate",
      "html_url": "https://github.com/haltingstate",
      "followers_url": "https://api.github.com/users/haltingstate/followers",
      "following_url": "https://api.github.com/users/haltingstate/following{/other_user}",
      "gists_url": "https://api.github.com/users/haltingstate/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/haltingstate/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/haltingstate/subscriptions",
      "organizations_url": "https://api.github.com/users/haltingstate/orgs",
      "repos_url": "https://api.github.com/users/haltingstate/repos",
      "events_url": "https://api.github.com/users/haltingstate/events{/privacy}",
      "received_events_url": "https://api.github.com/users/haltingstate/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "haltingstate",
      "id": 1774230,
      "node_id": "MDQ6VXNlcjE3NzQyMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1774230?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/haltingstate",
      "html_url": "https://github.com/haltingstate",
      "followers_url": "https://api.github.com/users/haltingstate/followers",
      "following_url": "https://api.github.com/users/haltingstate/following{/other_user}",
      "gists_url": "https://api.github.com/users/haltingstate/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/haltingstate/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/haltingstate/subscriptions",
      "organizations_url": "https://api.github.com/users/haltingstate/orgs",
      "repos_url": "https://api.github.com/users/haltingstate/repos",
      "events_url": "https://api.github.com/users/haltingstate/events{/privacy}",
      "received_events_url": "https://api.github.com/users/haltingstate/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7202d9d9bf6e7442ea8e945b271dcec079ff5239",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7202d9d9bf6e7442ea8e945b271dcec079ff5239",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7202d9d9bf6e7442ea8e945b271dcec079ff5239"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 4,
      "deletions": 1
    },
    "files": [
      {
        "sha": "673d1502a0e4c61197739316dda9f13fb77abbb8",
        "filename": "doc/build-unix.md",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/08b93f9a65ce70e650244f94725fcd042d97f0ee/doc/build-unix.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/08b93f9a65ce70e650244f94725fcd042d97f0ee/doc/build-unix.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-unix.md?ref=08b93f9a65ce70e650244f94725fcd042d97f0ee",
        "patch": "@@ -140,7 +140,10 @@ To help make your bitcoin installation more secure by making certain attacks imp\n exploit even if a vulnerability is found, binaries are hardened by default.\n This can be disabled with:\n \n-./configure --enable-hardening\n+Hardening Flags:\n+\n+\t./configure --enable-hardening\n+\t./configure --disable-hardening\n \n \n Hardening enables the following features:"
      }
    ]
  },
  {
    "sha": "6bfaf2ac37c24b61e56c63cb2c4c9dfefdd6df42",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2YmZhZjJhYzM3YzI0YjYxZTU2YzYzY2IyYzRjOWRmZWZkZDZkZjQy",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-13T12:45:11Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-13T12:45:19Z"
      },
      "message": "Merge pull request #3411\n\n08b93f9 fixed documetation on hardening flags (HaltingState)",
      "tree": {
        "sha": "89480a97598b7c2f9b5b0d69c86f01dbc676279b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/89480a97598b7c2f9b5b0d69c86f01dbc676279b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6bfaf2ac37c24b61e56c63cb2c4c9dfefdd6df42",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJSqwFfAAoJEHSBCwEjRsmmQIwH/R1BtAzlADFhNYdsq0Amtwj1\nFgv/okFvLuQzt5kLHYbSZMqrIv2Zwe/z/ifXrIKLiMZPi5mFB1RxZQZIWVdAo1Sl\nZPExNsiv3aMOsn1zL1Bw0web0tA+HJj8bohXie8fZyPaifqDGXufd/dLHuWUX26o\n1C5qUKi32pOUC+VAUWGhCvtawyVFUXUZNbfHP4Ik3p7Nrswj0iUZEerfMXU+wy1r\n0tcGNdOsbCcQnhNX9Fe1VS7atYaeatIwiT8qUzof0OjLVzqodXKSJqlpBt3MQj7g\nKsSEJUproGDaMpd4302Wi2ckxUFbtXLowN+xLKZxxg/DbZUoz0cDvkS1l8ou7bs=\n=G2gS\n-----END PGP SIGNATURE-----",
        "payload": "tree 89480a97598b7c2f9b5b0d69c86f01dbc676279b\nparent 5e2fb330fd982cd9e01bc62dfc9fa8d8f7e09243\nparent 08b93f9a65ce70e650244f94725fcd042d97f0ee\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1386938711 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1386938719 +0100\n\nMerge pull request #3411\n\n08b93f9 fixed documetation on hardening flags (HaltingState)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6bfaf2ac37c24b61e56c63cb2c4c9dfefdd6df42",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6bfaf2ac37c24b61e56c63cb2c4c9dfefdd6df42",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6bfaf2ac37c24b61e56c63cb2c4c9dfefdd6df42/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5e2fb330fd982cd9e01bc62dfc9fa8d8f7e09243",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5e2fb330fd982cd9e01bc62dfc9fa8d8f7e09243",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5e2fb330fd982cd9e01bc62dfc9fa8d8f7e09243"
      },
      {
        "sha": "08b93f9a65ce70e650244f94725fcd042d97f0ee",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/08b93f9a65ce70e650244f94725fcd042d97f0ee",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/08b93f9a65ce70e650244f94725fcd042d97f0ee"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 4,
      "deletions": 1
    },
    "files": [
      {
        "sha": "b88186a70e14a1c40913b9213c9ac406c888a072",
        "filename": "doc/build-unix.md",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6bfaf2ac37c24b61e56c63cb2c4c9dfefdd6df42/doc/build-unix.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6bfaf2ac37c24b61e56c63cb2c4c9dfefdd6df42/doc/build-unix.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-unix.md?ref=6bfaf2ac37c24b61e56c63cb2c4c9dfefdd6df42",
        "patch": "@@ -135,7 +135,10 @@ To help make your bitcoin installation more secure by making certain attacks imp\n exploit even if a vulnerability is found, binaries are hardened by default.\n This can be disabled with:\n \n-./configure --enable-hardening\n+Hardening Flags:\n+\n+\t./configure --enable-hardening\n+\t./configure --disable-hardening\n \n \n Hardening enables the following features:"
      }
    ]
  },
  {
    "sha": "652e156951c501638aebb73f8861b2ff83b51e1e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2NTJlMTU2OTUxYzUwMTYzOGFlYmI3M2Y4ODYxYjJmZjgzYjUxZTFl",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-13T15:01:22Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-13T15:03:16Z"
      },
      "message": "add new RPC implementation file `rpcmisc.cpp`",
      "tree": {
        "sha": "522566a40fefda09320b61bc2a48bdb2ee1cf1f6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/522566a40fefda09320b61bc2a48bdb2ee1cf1f6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/652e156951c501638aebb73f8861b2ff83b51e1e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/652e156951c501638aebb73f8861b2ff83b51e1e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/652e156951c501638aebb73f8861b2ff83b51e1e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/652e156951c501638aebb73f8861b2ff83b51e1e/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6bfaf2ac37c24b61e56c63cb2c4c9dfefdd6df42",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6bfaf2ac37c24b61e56c63cb2c4c9dfefdd6df42",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6bfaf2ac37c24b61e56c63cb2c4c9dfefdd6df42"
      }
    ],
    "stats": {
      "total": 29,
      "additions": 29,
      "deletions": 0
    },
    "files": [
      {
        "sha": "5ce1c8e1b630f9d8ff4a9e0f001a5fb734e7ae61",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/652e156951c501638aebb73f8861b2ff83b51e1e/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/652e156951c501638aebb73f8861b2ff83b51e1e/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=652e156951c501638aebb73f8861b2ff83b51e1e",
        "patch": "@@ -53,6 +53,7 @@ libbitcoin_server_a_SOURCES = \\\n   noui.cpp \\\n   rpcblockchain.cpp \\\n   rpcmining.cpp \\\n+  rpcmisc.cpp \\\n   rpcnet.cpp \\\n   rpcrawtransaction.cpp \\\n   txdb.cpp \\"
      },
      {
        "sha": "8635e385cfe9db7090f9a0a5bc879eb42ed5436c",
        "filename": "src/rpcmisc.cpp",
        "status": "added",
        "additions": 28,
        "deletions": 0,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/652e156951c501638aebb73f8861b2ff83b51e1e/src/rpcmisc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/652e156951c501638aebb73f8861b2ff83b51e1e/src/rpcmisc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcmisc.cpp?ref=652e156951c501638aebb73f8861b2ff83b51e1e",
        "patch": "@@ -0,0 +1,28 @@\n+// Copyright (c) 2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2013 The Bitcoin developers\n+// Distributed under the MIT/X11 software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"base58.h\"\n+#include \"rpcserver.h\"\n+#include \"init.h\"\n+#include \"main.h\"\n+#include \"net.h\"\n+#include \"netbase.h\"\n+#include \"util.h\"\n+#ifdef ENABLE_WALLET\n+#include \"wallet.h\"\n+#include \"walletdb.h\"\n+#endif\n+\n+#include <stdint.h>\n+\n+#include <boost/assign/list_of.hpp>\n+#include \"json/json_spirit_utils.h\"\n+#include \"json/json_spirit_value.h\"\n+\n+using namespace std;\n+using namespace boost;\n+using namespace boost::assign;\n+using namespace json_spirit;\n+"
      }
    ]
  },
  {
    "sha": "16bc9aaf8a62e1905052ac2acd2470e5b18e209f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxNmJjOWFhZjhhNjJlMTkwNTA1MmFjMmFjZDI0NzBlNWIxOGUyMDlm",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-13T15:03:57Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-13T15:03:57Z"
      },
      "message": "Move `getinfo` from rpcnet to rpcmisc\n\n`getinfo` is a general info method which shows information\nfrom multiple sources, it doesn't belong in rpcnet.cpp or\nany of the other current RPC implementation files.",
      "tree": {
        "sha": "9ea4e0e79b3ac3cbd039f136abbefc936adb181c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9ea4e0e79b3ac3cbd039f136abbefc936adb181c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/16bc9aaf8a62e1905052ac2acd2470e5b18e209f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/16bc9aaf8a62e1905052ac2acd2470e5b18e209f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/16bc9aaf8a62e1905052ac2acd2470e5b18e209f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/16bc9aaf8a62e1905052ac2acd2470e5b18e209f/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "652e156951c501638aebb73f8861b2ff83b51e1e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/652e156951c501638aebb73f8861b2ff83b51e1e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/652e156951c501638aebb73f8861b2ff83b51e1e"
      }
    ],
    "stats": {
      "total": 125,
      "additions": 63,
      "deletions": 62
    },
    "files": [
      {
        "sha": "6cccc93c72f1e541c1d676d8ad323f4904ce07cf",
        "filename": "src/rpcmisc.cpp",
        "status": "modified",
        "additions": 63,
        "deletions": 0,
        "changes": 63,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/16bc9aaf8a62e1905052ac2acd2470e5b18e209f/src/rpcmisc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/16bc9aaf8a62e1905052ac2acd2470e5b18e209f/src/rpcmisc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcmisc.cpp?ref=16bc9aaf8a62e1905052ac2acd2470e5b18e209f",
        "patch": "@@ -26,3 +26,66 @@ using namespace boost;\n using namespace boost::assign;\n using namespace json_spirit;\n \n+Value getinfo(const Array& params, bool fHelp)\n+{\n+    if (fHelp || params.size() != 0)\n+        throw runtime_error(\n+            \"getinfo\\n\"\n+            \"Returns an object containing various state info.\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"version\\\": xxxxx,           (numeric) the server version\\n\"\n+            \"  \\\"protocolversion\\\": xxxxx,   (numeric) the protocol version\\n\"\n+            \"  \\\"walletversion\\\": xxxxx,     (numeric) the wallet version\\n\"\n+            \"  \\\"balance\\\": xxxxxxx,         (numeric) the total bitcoin balance of the wallet\\n\"\n+            \"  \\\"blocks\\\": xxxxxx,           (numeric) the current number of blocks processed in the server\\n\"\n+            \"  \\\"timeoffset\\\": xxxxx,        (numeric) the time offset\\n\"\n+            \"  \\\"connections\\\": xxxxx,       (numeric) the number of connections\\n\"\n+            \"  \\\"proxy\\\": \\\"host:port\\\",     (string, optional) the proxy used by the server\\n\"\n+            \"  \\\"difficulty\\\": xxxxxx,       (numeric) the current difficulty\\n\"\n+            \"  \\\"testnet\\\": true|false,      (boolean) if the server is using testnet or not\\n\"\n+            \"  \\\"keypoololdest\\\": xxxxxx,    (numeric) the timestamp (seconds since GMT epoch) of the oldest pre-generated key in the key pool\\n\"\n+            \"  \\\"keypoolsize\\\": xxxx,        (numeric) how many new keys are pre-generated\\n\"\n+            \"  \\\"paytxfee\\\": x.xxxx,         (numeric) the transaction fee set in btc\\n\"\n+            \"  \\\"unlocked_until\\\": ttt,      (numeric) the timestamp in seconds since epoch (midnight Jan 1 1970 GMT) that the wallet is unlocked for transfers, or 0 if the wallet is locked\\n\"\n+            \"  \\\"errors\\\": \\\"...\\\"           (string) any error messages\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getinfo\", \"\")\n+            + HelpExampleRpc(\"getinfo\", \"\")\n+        );\n+\n+    proxyType proxy;\n+    GetProxy(NET_IPV4, proxy);\n+\n+    Object obj;\n+    obj.push_back(Pair(\"version\",       (int)CLIENT_VERSION));\n+    obj.push_back(Pair(\"protocolversion\",(int)PROTOCOL_VERSION));\n+#ifdef ENABLE_WALLET\n+    if (pwalletMain) {\n+        obj.push_back(Pair(\"walletversion\", pwalletMain->GetVersion()));\n+        obj.push_back(Pair(\"balance\",       ValueFromAmount(pwalletMain->GetBalance())));\n+    }\n+#endif\n+    obj.push_back(Pair(\"blocks\",        (int)chainActive.Height()));\n+    obj.push_back(Pair(\"timeoffset\",    (boost::int64_t)GetTimeOffset()));\n+    obj.push_back(Pair(\"connections\",   (int)vNodes.size()));\n+    obj.push_back(Pair(\"proxy\",         (proxy.first.IsValid() ? proxy.first.ToStringIPPort() : string())));\n+    obj.push_back(Pair(\"difficulty\",    (double)GetDifficulty()));\n+    obj.push_back(Pair(\"testnet\",       TestNet()));\n+#ifdef ENABLE_WALLET\n+    if (pwalletMain) {\n+        obj.push_back(Pair(\"keypoololdest\", (boost::int64_t)pwalletMain->GetOldestKeyPoolTime()));\n+        obj.push_back(Pair(\"keypoolsize\",   (int)pwalletMain->GetKeyPoolSize()));\n+    }\n+#endif\n+    obj.push_back(Pair(\"paytxfee\",      ValueFromAmount(nTransactionFee)));\n+#ifdef ENABLE_WALLET\n+    if (pwalletMain && pwalletMain->IsCrypted())\n+        obj.push_back(Pair(\"unlocked_until\", (boost::int64_t)nWalletUnlockTime));\n+#endif\n+    obj.push_back(Pair(\"errors\",        GetWarnings(\"statusbar\")));\n+    return obj;\n+}\n+\n+"
      },
      {
        "sha": "06ae7070c3d3b45127ca263294aabbfa1c192df3",
        "filename": "src/rpcnet.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 62,
        "changes": 62,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/16bc9aaf8a62e1905052ac2acd2470e5b18e209f/src/rpcnet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/16bc9aaf8a62e1905052ac2acd2470e5b18e209f/src/rpcnet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcnet.cpp?ref=16bc9aaf8a62e1905052ac2acd2470e5b18e209f",
        "patch": "@@ -338,65 +338,3 @@ Value getnettotals(const Array& params, bool fHelp)\n     obj.push_back(Pair(\"timemillis\", static_cast<boost::int64_t>(GetTimeMillis())));\n     return obj;\n }\n-\n-Value getinfo(const Array& params, bool fHelp)\n-{\n-    if (fHelp || params.size() != 0)\n-        throw runtime_error(\n-            \"getinfo\\n\"\n-            \"Returns an object containing various state info.\\n\"\n-            \"\\nResult:\\n\"\n-            \"{\\n\"\n-            \"  \\\"version\\\": xxxxx,           (numeric) the server version\\n\"\n-            \"  \\\"protocolversion\\\": xxxxx,   (numeric) the protocol version\\n\"\n-            \"  \\\"walletversion\\\": xxxxx,     (numeric) the wallet version\\n\"\n-            \"  \\\"balance\\\": xxxxxxx,         (numeric) the total bitcoin balance of the wallet\\n\"\n-            \"  \\\"blocks\\\": xxxxxx,           (numeric) the current number of blocks processed in the server\\n\"\n-            \"  \\\"timeoffset\\\": xxxxx,        (numeric) the time offset\\n\"\n-            \"  \\\"connections\\\": xxxxx,       (numeric) the number of connections\\n\"\n-            \"  \\\"proxy\\\": \\\"host:port\\\",     (string, optional) the proxy used by the server\\n\"\n-            \"  \\\"difficulty\\\": xxxxxx,       (numeric) the current difficulty\\n\"\n-            \"  \\\"testnet\\\": true|false,      (boolean) if the server is using testnet or not\\n\"\n-            \"  \\\"keypoololdest\\\": xxxxxx,    (numeric) the timestamp (seconds since GMT epoch) of the oldest pre-generated key in the key pool\\n\"\n-            \"  \\\"keypoolsize\\\": xxxx,        (numeric) how many new keys are pre-generated\\n\"\n-            \"  \\\"paytxfee\\\": x.xxxx,         (numeric) the transaction fee set in btc\\n\"\n-            \"  \\\"unlocked_until\\\": ttt,      (numeric) the timestamp in seconds since epoch (midnight Jan 1 1970 GMT) that the wallet is unlocked for transfers, or 0 if the wallet is locked\\n\"\n-            \"  \\\"errors\\\": \\\"...\\\"           (string) any error messages\\n\"\n-            \"}\\n\"\n-            \"\\nExamples:\\n\"\n-            + HelpExampleCli(\"getinfo\", \"\")\n-            + HelpExampleRpc(\"getinfo\", \"\")\n-        );\n-\n-    proxyType proxy;\n-    GetProxy(NET_IPV4, proxy);\n-\n-    Object obj;\n-    obj.push_back(Pair(\"version\",       (int)CLIENT_VERSION));\n-    obj.push_back(Pair(\"protocolversion\",(int)PROTOCOL_VERSION));\n-#ifdef ENABLE_WALLET\n-    if (pwalletMain) {\n-        obj.push_back(Pair(\"walletversion\", pwalletMain->GetVersion()));\n-        obj.push_back(Pair(\"balance\",       ValueFromAmount(pwalletMain->GetBalance())));\n-    }\n-#endif\n-    obj.push_back(Pair(\"blocks\",        (int)chainActive.Height()));\n-    obj.push_back(Pair(\"timeoffset\",    (boost::int64_t)GetTimeOffset()));\n-    obj.push_back(Pair(\"connections\",   (int)vNodes.size()));\n-    obj.push_back(Pair(\"proxy\",         (proxy.first.IsValid() ? proxy.first.ToStringIPPort() : string())));\n-    obj.push_back(Pair(\"difficulty\",    (double)GetDifficulty()));\n-    obj.push_back(Pair(\"testnet\",       TestNet()));\n-#ifdef ENABLE_WALLET\n-    if (pwalletMain) {\n-        obj.push_back(Pair(\"keypoololdest\", (boost::int64_t)pwalletMain->GetOldestKeyPoolTime()));\n-        obj.push_back(Pair(\"keypoolsize\",   (int)pwalletMain->GetKeyPoolSize()));\n-    }\n-#endif\n-    obj.push_back(Pair(\"paytxfee\",      ValueFromAmount(nTransactionFee)));\n-#ifdef ENABLE_WALLET\n-    if (pwalletMain && pwalletMain->IsCrypted())\n-        obj.push_back(Pair(\"unlocked_until\", (boost::int64_t)nWalletUnlockTime));\n-#endif\n-    obj.push_back(Pair(\"errors\",        GetWarnings(\"statusbar\")));\n-    return obj;\n-}"
      }
    ]
  },
  {
    "sha": "a943bde6f067567e47c6e12b16c541bb1fea575a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphOTQzYmRlNmYwNjc1NjdlNDdjNmUxMmIxNmM1NDFiYjFmZWE1NzVh",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-13T15:06:32Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-13T15:06:32Z"
      },
      "message": "Move `settxfee` from rpcblockchain to rpcwallet\n\n`settxfee` only affects the wallet, not the block chain.",
      "tree": {
        "sha": "1b553547b8c2b02bbde4f5fafb47a5d6e15a6233",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1b553547b8c2b02bbde4f5fafb47a5d6e15a6233"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a943bde6f067567e47c6e12b16c541bb1fea575a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a943bde6f067567e47c6e12b16c541bb1fea575a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a943bde6f067567e47c6e12b16c541bb1fea575a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a943bde6f067567e47c6e12b16c541bb1fea575a/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "16bc9aaf8a62e1905052ac2acd2470e5b18e209f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/16bc9aaf8a62e1905052ac2acd2470e5b18e209f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/16bc9aaf8a62e1905052ac2acd2470e5b18e209f"
      }
    ],
    "stats": {
      "total": 51,
      "additions": 26,
      "deletions": 25
    },
    "files": [
      {
        "sha": "661deffb195304d3537d2925e70a4456d56398ce",
        "filename": "src/rpcblockchain.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 24,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a943bde6f067567e47c6e12b16c541bb1fea575a/src/rpcblockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a943bde6f067567e47c6e12b16c541bb1fea575a/src/rpcblockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcblockchain.cpp?ref=a943bde6f067567e47c6e12b16c541bb1fea575a",
        "patch": "@@ -127,30 +127,6 @@ Value getdifficulty(const Array& params, bool fHelp)\n }\n \n \n-Value settxfee(const Array& params, bool fHelp)\n-{\n-    if (fHelp || params.size() < 1 || params.size() > 1)\n-        throw runtime_error(\n-            \"settxfee amount\\n\"\n-            \"\\nSet the transaction fee. 'amount' is a real and is rounded to the nearest 0.00000001\\n\"\n-            \"\\nArguments:\\n\"\n-            \"1. amount         (numeric, required) The transaction fee in btc rounded to the nearest 0.00000001\\n\"\n-            \"\\nResult\\n\"\n-            \"true|false        (boolean) Returns true if successful\\n\"\n-            \"\\nExamples:\\n\"\n-            + HelpExampleCli(\"settxfee\", \"0.00001\")\n-            + HelpExampleRpc(\"settxfee\", \"0.00001\")\n-        );\n-\n-    // Amount\n-    int64_t nAmount = 0;\n-    if (params[0].get_real() != 0.0)\n-        nAmount = AmountFromValue(params[0]);        // rejects 0.0 amounts\n-\n-    nTransactionFee = nAmount;\n-    return true;\n-}\n-\n Value getrawmempool(const Array& params, bool fHelp)\n {\n     if (fHelp || params.size() > 1)"
      },
      {
        "sha": "49a61d10d2a9df02106aa07d6234fea27cc41cfe",
        "filename": "src/rpcserver.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a943bde6f067567e47c6e12b16c541bb1fea575a/src/rpcserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a943bde6f067567e47c6e12b16c541bb1fea575a/src/rpcserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.cpp?ref=a943bde6f067567e47c6e12b16c541bb1fea575a",
        "patch": "@@ -237,7 +237,6 @@ static const CRPCCommand vRPCCommands[] =\n     { \"getrawmempool\",          &getrawmempool,          true,      false,      false },\n     { \"getblock\",               &getblock,               false,     false,      false },\n     { \"getblockhash\",           &getblockhash,           false,     false,      false },\n-    { \"settxfee\",               &settxfee,               false,     false,      true },\n     { \"getrawtransaction\",      &getrawtransaction,      false,     false,      false },\n     { \"createrawtransaction\",   &createrawtransaction,   false,     false,      false },\n     { \"decoderawtransaction\",   &decoderawtransaction,   false,     false,      false },\n@@ -294,6 +293,7 @@ static const CRPCCommand vRPCCommands[] =\n     { \"listunspent\",            &listunspent,            false,     false,      true },\n     { \"lockunspent\",            &lockunspent,            false,     false,      true },\n     { \"listlockunspent\",        &listlockunspent,        false,     false,      true },\n+    { \"settxfee\",               &settxfee,               false,     false,      true },\n \n     /* Wallet-enabled mining */\n     { \"getgenerate\",            &getgenerate,            true,      false,      false },"
      },
      {
        "sha": "a2a12c824315535c231d3a5b26f782bd59d475b4",
        "filename": "src/rpcwallet.cpp",
        "status": "modified",
        "additions": 25,
        "deletions": 0,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a943bde6f067567e47c6e12b16c541bb1fea575a/src/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a943bde6f067567e47c6e12b16c541bb1fea575a/src/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.cpp?ref=a943bde6f067567e47c6e12b16c541bb1fea575a",
        "patch": "@@ -2066,3 +2066,28 @@ Value listlockunspent(const Array& params, bool fHelp)\n     return ret;\n }\n \n+Value settxfee(const Array& params, bool fHelp)\n+{\n+    if (fHelp || params.size() < 1 || params.size() > 1)\n+        throw runtime_error(\n+            \"settxfee amount\\n\"\n+            \"\\nSet the transaction fee. 'amount' is a real and is rounded to the nearest 0.00000001\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. amount         (numeric, required) The transaction fee in btc rounded to the nearest 0.00000001\\n\"\n+            \"\\nResult\\n\"\n+            \"true|false        (boolean) Returns true if successful\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"settxfee\", \"0.00001\")\n+            + HelpExampleRpc(\"settxfee\", \"0.00001\")\n+        );\n+\n+    // Amount\n+    int64_t nAmount = 0;\n+    if (params[0].get_real() != 0.0)\n+        nAmount = AmountFromValue(params[0]);        // rejects 0.0 amounts\n+\n+    nTransactionFee = nAmount;\n+    return true;\n+}\n+\n+"
      }
    ]
  },
  {
    "sha": "cd7fa8bb437267db2502415e4fb035d60bda860c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjZDdmYThiYjQzNzI2N2RiMjUwMjQxNWU0ZmIwMzVkNjBiZGE4NjBj",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-13T15:14:48Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-13T15:34:57Z"
      },
      "message": "Move `nTransactionFee` from main.cpp to wallet.cpp\n\nTransaction fee is only used by the wallet.\nNo need for it to be in main.cpp.",
      "tree": {
        "sha": "ebb78a41255c9c75f84b19eb59a985444848c093",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ebb78a41255c9c75f84b19eb59a985444848c093"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cd7fa8bb437267db2502415e4fb035d60bda860c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cd7fa8bb437267db2502415e4fb035d60bda860c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cd7fa8bb437267db2502415e4fb035d60bda860c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cd7fa8bb437267db2502415e4fb035d60bda860c/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a943bde6f067567e47c6e12b16c541bb1fea575a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a943bde6f067567e47c6e12b16c541bb1fea575a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a943bde6f067567e47c6e12b16c541bb1fea575a"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 8,
      "deletions": 9
    },
    "files": [
      {
        "sha": "7b14ccbf13851d8e741367966038035307349a79",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cd7fa8bb437267db2502415e4fb035d60bda860c/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cd7fa8bb437267db2502415e4fb035d60bda860c/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=cd7fa8bb437267db2502415e4fb035d60bda860c",
        "patch": "@@ -534,6 +534,7 @@ bool AppInit2(boost::thread_group& threadGroup, bool fForceServer)\n             return InitError(strprintf(_(\"Invalid amount for -minrelaytxfee=<amount>: '%s'\"), mapArgs[\"-minrelaytxfee\"].c_str()));\n     }\n \n+#ifdef ENABLE_WALLET\n     if (mapArgs.count(\"-paytxfee\"))\n     {\n         if (!ParseMoney(mapArgs[\"-paytxfee\"], nTransactionFee))\n@@ -542,7 +543,6 @@ bool AppInit2(boost::thread_group& threadGroup, bool fForceServer)\n             InitWarning(_(\"Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.\"));\n     }\n \n-#ifdef ENABLE_WALLET\n     strWalletFile = GetArg(\"-wallet\", \"wallet.dat\");\n #endif\n     // ********************************************************* Step 4: application initialization: dir lock, daemonize, pidfile, debug log"
      },
      {
        "sha": "e3f9fdd84325d2ba2b61d134954ad7dcfedac0b7",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cd7fa8bb437267db2502415e4fb035d60bda860c/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cd7fa8bb437267db2502415e4fb035d60bda860c/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=cd7fa8bb437267db2502415e4fb035d60bda860c",
        "patch": "@@ -67,9 +67,6 @@ CScript COINBASE_FLAGS;\n \n const string strMessageMagic = \"Bitcoin Signed Message:\\n\";\n \n-// Settings\n-int64_t nTransactionFee = 0;\n-\n // Internal stuff\n namespace {\n struct CBlockIndexWorkComparator"
      },
      {
        "sha": "f3f9acb6390301bacf3ad854b7c37418c425a444",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cd7fa8bb437267db2502415e4fb035d60bda860c/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cd7fa8bb437267db2502415e4fb035d60bda860c/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=cd7fa8bb437267db2502415e4fb035d60bda860c",
        "patch": "@@ -96,9 +96,6 @@ extern bool fTxIndex;\n extern unsigned int nCoinCacheSize;\n extern bool fHaveGUI;\n \n-// Settings\n-extern int64_t nTransactionFee;\n-\n // Minimum disk space required - used in CheckDiskSpace()\n static const uint64_t nMinDiskSpace = 52428800;\n "
      },
      {
        "sha": "b69a732a853a6934eba906e250236b7772721243",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cd7fa8bb437267db2502415e4fb035d60bda860c/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cd7fa8bb437267db2502415e4fb035d60bda860c/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=cd7fa8bb437267db2502415e4fb035d60bda860c",
        "patch": "@@ -17,6 +17,7 @@\n #include \"main.h\"\n #include \"ui_interface.h\"\n #include \"util.h\"\n+#include \"wallet.h\"\n \n #include <stdint.h>\n "
      },
      {
        "sha": "363f432d6272d43cd658b9d7f43067097cd58e20",
        "filename": "src/qt/optionsmodel.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cd7fa8bb437267db2502415e4fb035d60bda860c/src/qt/optionsmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cd7fa8bb437267db2502415e4fb035d60bda860c/src/qt/optionsmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsmodel.cpp?ref=cd7fa8bb437267db2502415e4fb035d60bda860c",
        "patch": "@@ -14,6 +14,7 @@\n #include \"init.h\"\n #include \"main.h\"\n #include \"net.h\"\n+#include \"wallet.h\"\n #include \"walletdb.h\"\n \n #include <QSettings>"
      },
      {
        "sha": "0a22b103c3cdc04de8e25ce9f888a02403794869",
        "filename": "src/rpcmisc.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cd7fa8bb437267db2502415e4fb035d60bda860c/src/rpcmisc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cd7fa8bb437267db2502415e4fb035d60bda860c/src/rpcmisc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcmisc.cpp?ref=cd7fa8bb437267db2502415e4fb035d60bda860c",
        "patch": "@@ -78,9 +78,7 @@ Value getinfo(const Array& params, bool fHelp)\n         obj.push_back(Pair(\"keypoololdest\", (boost::int64_t)pwalletMain->GetOldestKeyPoolTime()));\n         obj.push_back(Pair(\"keypoolsize\",   (int)pwalletMain->GetKeyPoolSize()));\n     }\n-#endif\n     obj.push_back(Pair(\"paytxfee\",      ValueFromAmount(nTransactionFee)));\n-#ifdef ENABLE_WALLET\n     if (pwalletMain && pwalletMain->IsCrypted())\n         obj.push_back(Pair(\"unlocked_until\", (boost::int64_t)nWalletUnlockTime));\n #endif"
      },
      {
        "sha": "f9adbf73b3349005cec4318b32367ee8d05bf516",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cd7fa8bb437267db2502415e4fb035d60bda860c/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cd7fa8bb437267db2502415e4fb035d60bda860c/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=cd7fa8bb437267db2502415e4fb035d60bda860c",
        "patch": "@@ -16,6 +16,8 @@\n \n using namespace std;\n \n+// Settings\n+int64_t nTransactionFee = 0;\n \n //////////////////////////////////////////////////////////////////////////////\n //"
      },
      {
        "sha": "8cd2e021e612afd8685f644a37f8562a4dc30b69",
        "filename": "src/wallet.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cd7fa8bb437267db2502415e4fb035d60bda860c/src/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cd7fa8bb437267db2502415e4fb035d60bda860c/src/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.h?ref=cd7fa8bb437267db2502415e4fb035d60bda860c",
        "patch": "@@ -23,6 +23,9 @@\n #include <utility>\n #include <vector>\n \n+// Settings\n+extern int64_t nTransactionFee;\n+\n class CAccountingEntry;\n class CCoinControl;\n class COutput;"
      }
    ]
  },
  {
    "sha": "452955f5be9dbd4397ca6425150923521cbee4ae",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0NTI5NTVmNWJlOWRiZDQzOTdjYTY0MjUxNTA5MjM1MjFjYmVlNGFl",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-13T15:18:00Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-13T15:34:57Z"
      },
      "message": "Move `validateaddress` from rpcwallet to rpcmisc\n\nEnables it in --disable-wallet compiles.\nDelimit wallet-using part using #ifdef ENABLE_WALLET.",
      "tree": {
        "sha": "39e0e07f97f6818b4deb0fc466c1025b30ca2060",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/39e0e07f97f6818b4deb0fc466c1025b30ca2060"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/452955f5be9dbd4397ca6425150923521cbee4ae",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/452955f5be9dbd4397ca6425150923521cbee4ae",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/452955f5be9dbd4397ca6425150923521cbee4ae",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/452955f5be9dbd4397ca6425150923521cbee4ae/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cd7fa8bb437267db2502415e4fb035d60bda860c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cd7fa8bb437267db2502415e4fb035d60bda860c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cd7fa8bb437267db2502415e4fb035d60bda860c"
      }
    ],
    "stats": {
      "total": 168,
      "additions": 86,
      "deletions": 82
    },
    "files": [
      {
        "sha": "240bd68ba4568c9fd75e4d504fed53fe85be62c7",
        "filename": "src/rpcmisc.cpp",
        "status": "modified",
        "additions": 85,
        "deletions": 0,
        "changes": 85,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/452955f5be9dbd4397ca6425150923521cbee4ae/src/rpcmisc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/452955f5be9dbd4397ca6425150923521cbee4ae/src/rpcmisc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcmisc.cpp?ref=452955f5be9dbd4397ca6425150923521cbee4ae",
        "patch": "@@ -86,4 +86,89 @@ Value getinfo(const Array& params, bool fHelp)\n     return obj;\n }\n \n+#ifdef ENABLE_WALLET\n+class DescribeAddressVisitor : public boost::static_visitor<Object>\n+{\n+public:\n+    Object operator()(const CNoDestination &dest) const { return Object(); }\n+\n+    Object operator()(const CKeyID &keyID) const {\n+        Object obj;\n+        CPubKey vchPubKey;\n+        pwalletMain->GetPubKey(keyID, vchPubKey);\n+        obj.push_back(Pair(\"isscript\", false));\n+        obj.push_back(Pair(\"pubkey\", HexStr(vchPubKey)));\n+        obj.push_back(Pair(\"iscompressed\", vchPubKey.IsCompressed()));\n+        return obj;\n+    }\n+\n+    Object operator()(const CScriptID &scriptID) const {\n+        Object obj;\n+        obj.push_back(Pair(\"isscript\", true));\n+        CScript subscript;\n+        pwalletMain->GetCScript(scriptID, subscript);\n+        std::vector<CTxDestination> addresses;\n+        txnouttype whichType;\n+        int nRequired;\n+        ExtractDestinations(subscript, whichType, addresses, nRequired);\n+        obj.push_back(Pair(\"script\", GetTxnOutputType(whichType)));\n+        obj.push_back(Pair(\"hex\", HexStr(subscript.begin(), subscript.end())));\n+        Array a;\n+        BOOST_FOREACH(const CTxDestination& addr, addresses)\n+            a.push_back(CBitcoinAddress(addr).ToString());\n+        obj.push_back(Pair(\"addresses\", a));\n+        if (whichType == TX_MULTISIG)\n+            obj.push_back(Pair(\"sigsrequired\", nRequired));\n+        return obj;\n+    }\n+};\n+#endif\n+\n+Value validateaddress(const Array& params, bool fHelp)\n+{\n+    if (fHelp || params.size() != 1)\n+        throw runtime_error(\n+            \"validateaddress \\\"bitcoinaddress\\\"\\n\"\n+            \"\\nReturn information about the given bitcoin address.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"bitcoinaddress\\\"     (string, required) The bitcoin address to validate\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"isvalid\\\" : true|false,         (boolean) If the address is valid or not. If not, this is the only property returned.\\n\"\n+            \"  \\\"address\\\" : \\\"bitcoinaddress\\\", (string) The bitcoin address validated\\n\"\n+            \"  \\\"ismine\\\" : true|false,          (boolean) If the address is yours or not\\n\"\n+            \"  \\\"isscript\\\" : true|false,        (boolean) If the key is a script\\n\"\n+            \"  \\\"pubkey\\\" : \\\"publickeyhex\\\",    (string) The hex value of the raw public key\\n\"\n+            \"  \\\"iscompressed\\\" : true|false,    (boolean) If the address is compressed\\n\"\n+            \"  \\\"account\\\" : \\\"account\\\"         (string) The account associated with the address, \\\"\\\" is the default account\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"validateaddress\", \"\\\"1PSSGeFHDnKNxiEyFrD1wcEaHr9hrQDDWc\\\"\")\n+            + HelpExampleRpc(\"validateaddress\", \"\\\"1PSSGeFHDnKNxiEyFrD1wcEaHr9hrQDDWc\\\"\")\n+        );\n+\n+    CBitcoinAddress address(params[0].get_str());\n+    bool isValid = address.IsValid();\n+\n+    Object ret;\n+    ret.push_back(Pair(\"isvalid\", isValid));\n+    if (isValid)\n+    {\n+        CTxDestination dest = address.Get();\n+        string currentAddress = address.ToString();\n+        ret.push_back(Pair(\"address\", currentAddress));\n+#ifdef ENABLE_WALLET\n+        bool fMine = pwalletMain ? IsMine(*pwalletMain, dest) : false;\n+        ret.push_back(Pair(\"ismine\", fMine));\n+        if (fMine) {\n+            Object detail = boost::apply_visitor(DescribeAddressVisitor(), dest);\n+            ret.insert(ret.end(), detail.begin(), detail.end());\n+        }\n+        if (pwalletMain && pwalletMain->mapAddressBook.count(dest))\n+            ret.push_back(Pair(\"account\", pwalletMain->mapAddressBook[dest].name));\n+#endif\n+    }\n+    return ret;\n+}\n+\n "
      },
      {
        "sha": "9de84fccd8724902d513ab2d7f42e3f3996798d7",
        "filename": "src/rpcserver.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/452955f5be9dbd4397ca6425150923521cbee4ae/src/rpcserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/452955f5be9dbd4397ca6425150923521cbee4ae/src/rpcserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.cpp?ref=452955f5be9dbd4397ca6425150923521cbee4ae",
        "patch": "@@ -252,6 +252,7 @@ static const CRPCCommand vRPCCommands[] =\n     { \"getmininginfo\",          &getmininginfo,          true,      false,      false },\n     { \"getblocktemplate\",       &getblocktemplate,       true,      false,      false },\n     { \"submitblock\",            &submitblock,            false,     false,      false },\n+    { \"validateaddress\",        &validateaddress,        true,      false,      false },\n \n #ifdef ENABLE_WALLET\n     /* Wallet */\n@@ -272,7 +273,6 @@ static const CRPCCommand vRPCCommands[] =\n     { \"walletpassphrasechange\", &walletpassphrasechange, false,     false,      true },\n     { \"walletlock\",             &walletlock,             true,      false,      true },\n     { \"encryptwallet\",          &encryptwallet,          false,     false,      true },\n-    { \"validateaddress\",        &validateaddress,        true,      false,      false },\n     { \"getbalance\",             &getbalance,             false,     false,      true },\n     { \"move\",                   &movecmd,                false,     false,      true },\n     { \"sendfrom\",               &sendfrom,               false,     false,      true },"
      },
      {
        "sha": "a81c9bbc4c1ffa16e6a127cd4ff71360b91cb391",
        "filename": "src/rpcwallet.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 81,
        "changes": 81,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/452955f5be9dbd4397ca6425150923521cbee4ae/src/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/452955f5be9dbd4397ca6425150923521cbee4ae/src/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.cpp?ref=452955f5be9dbd4397ca6425150923521cbee4ae",
        "patch": "@@ -1862,87 +1862,6 @@ Value encryptwallet(const Array& params, bool fHelp)\n     return \"wallet encrypted; Bitcoin server stopping, restart to run with encrypted wallet. The keypool has been flushed, you need to make a new backup.\";\n }\n \n-class DescribeAddressVisitor : public boost::static_visitor<Object>\n-{\n-public:\n-    Object operator()(const CNoDestination &dest) const { return Object(); }\n-\n-    Object operator()(const CKeyID &keyID) const {\n-        Object obj;\n-        CPubKey vchPubKey;\n-        pwalletMain->GetPubKey(keyID, vchPubKey);\n-        obj.push_back(Pair(\"isscript\", false));\n-        obj.push_back(Pair(\"pubkey\", HexStr(vchPubKey)));\n-        obj.push_back(Pair(\"iscompressed\", vchPubKey.IsCompressed()));\n-        return obj;\n-    }\n-\n-    Object operator()(const CScriptID &scriptID) const {\n-        Object obj;\n-        obj.push_back(Pair(\"isscript\", true));\n-        CScript subscript;\n-        pwalletMain->GetCScript(scriptID, subscript);\n-        std::vector<CTxDestination> addresses;\n-        txnouttype whichType;\n-        int nRequired;\n-        ExtractDestinations(subscript, whichType, addresses, nRequired);\n-        obj.push_back(Pair(\"script\", GetTxnOutputType(whichType)));\n-        obj.push_back(Pair(\"hex\", HexStr(subscript.begin(), subscript.end())));\n-        Array a;\n-        BOOST_FOREACH(const CTxDestination& addr, addresses)\n-            a.push_back(CBitcoinAddress(addr).ToString());\n-        obj.push_back(Pair(\"addresses\", a));\n-        if (whichType == TX_MULTISIG)\n-            obj.push_back(Pair(\"sigsrequired\", nRequired));\n-        return obj;\n-    }\n-};\n-\n-Value validateaddress(const Array& params, bool fHelp)\n-{\n-    if (fHelp || params.size() != 1)\n-        throw runtime_error(\n-            \"validateaddress \\\"bitcoinaddress\\\"\\n\"\n-            \"\\nReturn information about the given bitcoin address.\\n\"\n-            \"\\nArguments:\\n\"\n-            \"1. \\\"bitcoinaddress\\\"     (string, required) The bitcoin address to validate\\n\"\n-            \"\\nResult:\\n\"\n-            \"{\\n\"\n-            \"  \\\"isvalid\\\" : true|false,         (boolean) If the address is valid or not. If not, this is the only property returned.\\n\"\n-            \"  \\\"address\\\" : \\\"bitcoinaddress\\\", (string) The bitcoin address validated\\n\"\n-            \"  \\\"ismine\\\" : true|false,          (boolean) If the address is yours or not\\n\"\n-            \"  \\\"isscript\\\" : true|false,        (boolean) If the key is a script\\n\"\n-            \"  \\\"pubkey\\\" : \\\"publickeyhex\\\",    (string) The hex value of the raw public key\\n\"\n-            \"  \\\"iscompressed\\\" : true|false,    (boolean) If the address is compressed\\n\"\n-            \"  \\\"account\\\" : \\\"account\\\"         (string) The account associated with the address, \\\"\\\" is the default account\\n\"\n-            \"}\\n\"\n-            \"\\nExamples:\\n\"\n-            + HelpExampleCli(\"validateaddress\", \"\\\"1PSSGeFHDnKNxiEyFrD1wcEaHr9hrQDDWc\\\"\")\n-            + HelpExampleRpc(\"validateaddress\", \"\\\"1PSSGeFHDnKNxiEyFrD1wcEaHr9hrQDDWc\\\"\")\n-        );\n-\n-    CBitcoinAddress address(params[0].get_str());\n-    bool isValid = address.IsValid();\n-\n-    Object ret;\n-    ret.push_back(Pair(\"isvalid\", isValid));\n-    if (isValid)\n-    {\n-        CTxDestination dest = address.Get();\n-        string currentAddress = address.ToString();\n-        ret.push_back(Pair(\"address\", currentAddress));\n-        bool fMine = pwalletMain ? IsMine(*pwalletMain, dest) : false;\n-        ret.push_back(Pair(\"ismine\", fMine));\n-        if (fMine) {\n-            Object detail = boost::apply_visitor(DescribeAddressVisitor(), dest);\n-            ret.insert(ret.end(), detail.begin(), detail.end());\n-        }\n-        if (pwalletMain && pwalletMain->mapAddressBook.count(dest))\n-            ret.push_back(Pair(\"account\", pwalletMain->mapAddressBook[dest].name));\n-    }\n-    return ret;\n-}\n-\n Value lockunspent(const Array& params, bool fHelp)\n {\n     if (fHelp || params.size() < 1 || params.size() > 2)"
      }
    ]
  },
  {
    "sha": "723a03d2deb742e5462218ffdc96d3063dd979fd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3MjNhMDNkMmRlYjc0MmU1NDYyMjE4ZmZkYzk2ZDMwNjNkZDk3OWZk",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-13T15:21:38Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-13T15:34:57Z"
      },
      "message": "Move `createmultisig` from rpcwallet to rpcmisc\n\nEnables it in --disable-wallet compiles.",
      "tree": {
        "sha": "222ca07371df465f35978fb06ec6e3e0c76ec4af",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/222ca07371df465f35978fb06ec6e3e0c76ec4af"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/723a03d2deb742e5462218ffdc96d3063dd979fd",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/723a03d2deb742e5462218ffdc96d3063dd979fd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/723a03d2deb742e5462218ffdc96d3063dd979fd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/723a03d2deb742e5462218ffdc96d3063dd979fd/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "452955f5be9dbd4397ca6425150923521cbee4ae",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/452955f5be9dbd4397ca6425150923521cbee4ae",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/452955f5be9dbd4397ca6425150923521cbee4ae"
      }
    ],
    "stats": {
      "total": 203,
      "additions": 104,
      "deletions": 99
    },
    "files": [
      {
        "sha": "df68bdf3376d33e3bc81ec1d866d2552357ffcbe",
        "filename": "src/rpcmisc.cpp",
        "status": "modified",
        "additions": 101,
        "deletions": 0,
        "changes": 101,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/723a03d2deb742e5462218ffdc96d3063dd979fd/src/rpcmisc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/723a03d2deb742e5462218ffdc96d3063dd979fd/src/rpcmisc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcmisc.cpp?ref=723a03d2deb742e5462218ffdc96d3063dd979fd",
        "patch": "@@ -171,4 +171,105 @@ Value validateaddress(const Array& params, bool fHelp)\n     return ret;\n }\n \n+//\n+// Used by addmultisigaddress / createmultisig:\n+//\n+CScript _createmultisig(const Array& params)\n+{\n+    int nRequired = params[0].get_int();\n+    const Array& keys = params[1].get_array();\n+\n+    // Gather public keys\n+    if (nRequired < 1)\n+        throw runtime_error(\"a multisignature address must require at least one key to redeem\");\n+    if ((int)keys.size() < nRequired)\n+        throw runtime_error(\n+            strprintf(\"not enough keys supplied \"\n+                      \"(got %\"PRIszu\" keys, but need at least %d to redeem)\", keys.size(), nRequired));\n+    std::vector<CPubKey> pubkeys;\n+    pubkeys.resize(keys.size());\n+    for (unsigned int i = 0; i < keys.size(); i++)\n+    {\n+        const std::string& ks = keys[i].get_str();\n+#ifdef ENABLE_WALLET\n+        // Case 1: Bitcoin address and we have full public key:\n+        CBitcoinAddress address(ks);\n+        if (pwalletMain && address.IsValid())\n+        {\n+            CKeyID keyID;\n+            if (!address.GetKeyID(keyID))\n+                throw runtime_error(\n+                    strprintf(\"%s does not refer to a key\",ks.c_str()));\n+            CPubKey vchPubKey;\n+            if (!pwalletMain->GetPubKey(keyID, vchPubKey))\n+                throw runtime_error(\n+                    strprintf(\"no full public key for address %s\",ks.c_str()));\n+            if (!vchPubKey.IsFullyValid())\n+                throw runtime_error(\" Invalid public key: \"+ks);\n+            pubkeys[i] = vchPubKey;\n+        }\n+\n+        // Case 2: hex public key\n+        else\n+#endif\n+        if (IsHex(ks))\n+        {\n+            CPubKey vchPubKey(ParseHex(ks));\n+            if (!vchPubKey.IsFullyValid())\n+                throw runtime_error(\" Invalid public key: \"+ks);\n+            pubkeys[i] = vchPubKey;\n+        }\n+        else\n+        {\n+            throw runtime_error(\" Invalid public key: \"+ks);\n+        }\n+    }\n+    CScript result;\n+    result.SetMultisig(nRequired, pubkeys);\n+    return result;\n+}\n+\n+Value createmultisig(const Array& params, bool fHelp)\n+{\n+    if (fHelp || params.size() < 2 || params.size() > 2)\n+    {\n+        string msg = \"createmultisig nrequired [\\\"key\\\",...]\\n\"\n+            \"\\nCreates a multi-signature address with n signature of m keys required.\\n\"\n+            \"It returns a json object with the address and redeemScript.\\n\"\n+\n+            \"\\nArguments:\\n\"\n+            \"1. nrequired      (numeric, required) The number of required signatures out of the n keys or addresses.\\n\"\n+            \"2. \\\"keys\\\"       (string, required) A json array of keys which are bitcoin addresses or hex-encoded public keys\\n\"\n+            \"     [\\n\"\n+            \"       \\\"key\\\"    (string) bitcoin address or hex-encoded public key\\n\"\n+            \"       ,...\\n\"\n+            \"     ]\\n\"\n+\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"address\\\":\\\"multisigaddress\\\",  (string) The value of the new multisig address.\\n\"\n+            \"  \\\"redeemScript\\\":\\\"script\\\"       (string) The string value of the hex-encoded redemption script.\\n\"\n+            \"}\\n\"\n+\n+            \"\\nExamples:\\n\"\n+            \"\\nCreate a multisig address from 2 addresses\\n\"\n+            + HelpExampleCli(\"createmultisig\", \"2 \\\"[\\\\\\\"16sSauSf5pF2UkUwvKGq4qjNRzBZYqgEL5\\\\\\\",\\\\\\\"171sgjn4YtPu27adkKGrdDwzRTxnRkBfKV\\\\\\\"]\\\"\") +\n+            \"\\nAs a json rpc call\\n\"\n+            + HelpExampleRpc(\"icreatemultisig\", \"2, \\\"[\\\\\\\"16sSauSf5pF2UkUwvKGq4qjNRzBZYqgEL5\\\\\\\",\\\\\\\"171sgjn4YtPu27adkKGrdDwzRTxnRkBfKV\\\\\\\"]\\\"\")\n+        ;\n+        throw runtime_error(msg);\n+    }\n+\n+    // Construct using pay-to-script-hash:\n+    CScript inner = _createmultisig(params);\n+    CScriptID innerID = inner.GetID();\n+    CBitcoinAddress address(innerID);\n+\n+    Object result;\n+    result.push_back(Pair(\"address\", address.ToString()));\n+    result.push_back(Pair(\"redeemScript\", HexStr(inner.begin(), inner.end())));\n+\n+    return result;\n+}\n+\n "
      },
      {
        "sha": "9d2ff9652bd8c37d295b847b1be46d66bfd6521a",
        "filename": "src/rpcserver.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/723a03d2deb742e5462218ffdc96d3063dd979fd/src/rpcserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/723a03d2deb742e5462218ffdc96d3063dd979fd/src/rpcserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.cpp?ref=723a03d2deb742e5462218ffdc96d3063dd979fd",
        "patch": "@@ -253,6 +253,7 @@ static const CRPCCommand vRPCCommands[] =\n     { \"getblocktemplate\",       &getblocktemplate,       true,      false,      false },\n     { \"submitblock\",            &submitblock,            false,     false,      false },\n     { \"validateaddress\",        &validateaddress,        true,      false,      false },\n+    { \"createmultisig\",         &createmultisig,         true,      true ,      false },\n \n #ifdef ENABLE_WALLET\n     /* Wallet */\n@@ -278,7 +279,6 @@ static const CRPCCommand vRPCCommands[] =\n     { \"sendfrom\",               &sendfrom,               false,     false,      true },\n     { \"sendmany\",               &sendmany,               false,     false,      true },\n     { \"addmultisigaddress\",     &addmultisigaddress,     false,     false,      true },\n-    { \"createmultisig\",         &createmultisig,         true,      true ,      false },\n     { \"gettransaction\",         &gettransaction,         false,     false,      true },\n     { \"listtransactions\",       &listtransactions,       false,     false,      true },\n     { \"listaddressgroupings\",   &listaddressgroupings,   false,     false,      true },"
      },
      {
        "sha": "eea75ce972d6568f005d5b6393bae7f6598fc58c",
        "filename": "src/rpcwallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 98,
        "changes": 100,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/723a03d2deb742e5462218ffdc96d3063dd979fd/src/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/723a03d2deb742e5462218ffdc96d3063dd979fd/src/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.cpp?ref=723a03d2deb742e5462218ffdc96d3063dd979fd",
        "patch": "@@ -907,61 +907,8 @@ Value sendmany(const Array& params, bool fHelp)\n     return wtx.GetHash().GetHex();\n }\n \n-//\n-// Used by addmultisigaddress / createmultisig:\n-//\n-static CScript _createmultisig(const Array& params)\n-{\n-    int nRequired = params[0].get_int();\n-    const Array& keys = params[1].get_array();\n-\n-    // Gather public keys\n-    if (nRequired < 1)\n-        throw runtime_error(\"a multisignature address must require at least one key to redeem\");\n-    if ((int)keys.size() < nRequired)\n-        throw runtime_error(\n-            strprintf(\"not enough keys supplied \"\n-                      \"(got %\"PRIszu\" keys, but need at least %d to redeem)\", keys.size(), nRequired));\n-    std::vector<CPubKey> pubkeys;\n-    pubkeys.resize(keys.size());\n-    for (unsigned int i = 0; i < keys.size(); i++)\n-    {\n-        const std::string& ks = keys[i].get_str();\n-\n-        // Case 1: Bitcoin address and we have full public key:\n-        CBitcoinAddress address(ks);\n-        if (pwalletMain && address.IsValid())\n-        {\n-            CKeyID keyID;\n-            if (!address.GetKeyID(keyID))\n-                throw runtime_error(\n-                    strprintf(\"%s does not refer to a key\",ks.c_str()));\n-            CPubKey vchPubKey;\n-            if (!pwalletMain->GetPubKey(keyID, vchPubKey))\n-                throw runtime_error(\n-                    strprintf(\"no full public key for address %s\",ks.c_str()));\n-            if (!vchPubKey.IsFullyValid())\n-                throw runtime_error(\" Invalid public key: \"+ks);\n-            pubkeys[i] = vchPubKey;\n-        }\n-\n-        // Case 2: hex public key\n-        else if (IsHex(ks))\n-        {\n-            CPubKey vchPubKey(ParseHex(ks));\n-            if (!vchPubKey.IsFullyValid())\n-                throw runtime_error(\" Invalid public key: \"+ks);\n-            pubkeys[i] = vchPubKey;\n-        }\n-        else\n-        {\n-            throw runtime_error(\" Invalid public key: \"+ks);\n-        }\n-    }\n-    CScript result;\n-    result.SetMultisig(nRequired, pubkeys);\n-    return result;\n-}\n+// Defined in rpcmisc.cpp\n+extern CScript _createmultisig(const Array& params);\n \n Value addmultisigaddress(const Array& params, bool fHelp)\n {\n@@ -1006,49 +953,6 @@ Value addmultisigaddress(const Array& params, bool fHelp)\n     return CBitcoinAddress(innerID).ToString();\n }\n \n-Value createmultisig(const Array& params, bool fHelp)\n-{\n-    if (fHelp || params.size() < 2 || params.size() > 2)\n-    {\n-        string msg = \"createmultisig nrequired [\\\"key\\\",...]\\n\"\n-            \"\\nCreates a multi-signature address with n signature of m keys required.\\n\"\n-            \"It returns a json object with the address and redeemScript.\\n\"\n-\n-            \"\\nArguments:\\n\"\n-            \"1. nrequired      (numeric, required) The number of required signatures out of the n keys or addresses.\\n\"\n-            \"2. \\\"keys\\\"       (string, required) A json array of keys which are bitcoin addresses or hex-encoded public keys\\n\"\n-            \"     [\\n\"\n-            \"       \\\"key\\\"    (string) bitcoin address or hex-encoded public key\\n\"\n-            \"       ,...\\n\"\n-            \"     ]\\n\"\n-\n-            \"\\nResult:\\n\"\n-            \"{\\n\"\n-            \"  \\\"address\\\":\\\"multisigaddress\\\",  (string) The value of the new multisig address.\\n\"\n-            \"  \\\"redeemScript\\\":\\\"script\\\"       (string) The string value of the hex-encoded redemption script.\\n\"\n-            \"}\\n\"\n-\n-            \"\\nExamples:\\n\"\n-            \"\\nCreate a multisig address from 2 addresses\\n\"\n-            + HelpExampleCli(\"createmultisig\", \"2 \\\"[\\\\\\\"16sSauSf5pF2UkUwvKGq4qjNRzBZYqgEL5\\\\\\\",\\\\\\\"171sgjn4YtPu27adkKGrdDwzRTxnRkBfKV\\\\\\\"]\\\"\") +\n-            \"\\nAs a json rpc call\\n\"\n-            + HelpExampleRpc(\"icreatemultisig\", \"2, \\\"[\\\\\\\"16sSauSf5pF2UkUwvKGq4qjNRzBZYqgEL5\\\\\\\",\\\\\\\"171sgjn4YtPu27adkKGrdDwzRTxnRkBfKV\\\\\\\"]\\\"\")\n-        ;\n-        throw runtime_error(msg);\n-    }\n-\n-    // Construct using pay-to-script-hash:\n-    CScript inner = _createmultisig(params);\n-    CScriptID innerID = inner.GetID();\n-    CBitcoinAddress address(innerID);\n-\n-    Object result;\n-    result.push_back(Pair(\"address\", address.ToString()));\n-    result.push_back(Pair(\"redeemScript\", HexStr(inner.begin(), inner.end())));\n-\n-    return result;\n-}\n-\n \n struct tallyitem\n {"
      }
    ]
  },
  {
    "sha": "c3a7f516e7ba9f39537ded149d8eb756c836fa2e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjM2E3ZjUxNmU3YmE5ZjM5NTM3ZGVkMTQ5ZDhlYjc1NmM4MzZmYTJl",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-13T15:23:39Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-13T15:34:57Z"
      },
      "message": "Move `verifymessage` from rpcwallet to rpcmisc\n\nEnables it in --disable-wallet compiles.",
      "tree": {
        "sha": "8d198d88571212179d71751683b162c8d395bb1d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8d198d88571212179d71751683b162c8d395bb1d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c3a7f516e7ba9f39537ded149d8eb756c836fa2e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c3a7f516e7ba9f39537ded149d8eb756c836fa2e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c3a7f516e7ba9f39537ded149d8eb756c836fa2e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c3a7f516e7ba9f39537ded149d8eb756c836fa2e/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "723a03d2deb742e5462218ffdc96d3063dd979fd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/723a03d2deb742e5462218ffdc96d3063dd979fd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/723a03d2deb742e5462218ffdc96d3063dd979fd"
      }
    ],
    "stats": {
      "total": 106,
      "additions": 52,
      "deletions": 54
    },
    "files": [
      {
        "sha": "c61cc4192b6c7ebd4eb88d52900efc3fa67c669a",
        "filename": "src/rpcmisc.cpp",
        "status": "modified",
        "additions": 51,
        "deletions": 0,
        "changes": 51,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c3a7f516e7ba9f39537ded149d8eb756c836fa2e/src/rpcmisc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c3a7f516e7ba9f39537ded149d8eb756c836fa2e/src/rpcmisc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcmisc.cpp?ref=c3a7f516e7ba9f39537ded149d8eb756c836fa2e",
        "patch": "@@ -272,4 +272,55 @@ Value createmultisig(const Array& params, bool fHelp)\n     return result;\n }\n \n+Value verifymessage(const Array& params, bool fHelp)\n+{\n+    if (fHelp || params.size() != 3)\n+        throw runtime_error(\n+            \"verifymessage \\\"bitcoinaddress\\\" \\\"signature\\\" \\\"message\\\"\\n\"\n+            \"\\nVerify a signed message\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"bitcoinaddress\\\"  (string, required) The bitcoin address to use for the signature.\\n\"\n+            \"2. \\\"signature\\\"       (string, required) The signature provided by the signer in base 64 encoding (see signmessage).\\n\"\n+            \"3. \\\"message\\\"         (string, required) The message that was signed.\\n\"\n+            \"\\nResult:\\n\"\n+            \"true|false   (boolean) If the signature is verified or not.\\n\"\n+            \"\\nExamples:\\n\"\n+            \"\\nUnlock the wallet for 30 seconds\\n\"\n+            + HelpExampleCli(\"walletpassphrase\", \"\\\"mypassphrase\\\" 30\") +\n+            \"\\nCreate the signature\\n\"\n+            + HelpExampleCli(\"signmessage\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\" \\\"my message\\\"\") +\n+            \"\\nVerify the signature\\n\"\n+            + HelpExampleCli(\"verifymessage\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\" \\\"signature\\\" \\\"my message\\\"\") +\n+            \"\\nAs json rpc\\n\"\n+            + HelpExampleRpc(\"verifymessage\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\", \\\"signature\\\", \\\"my message\\\"\")\n+        );\n+\n+    string strAddress  = params[0].get_str();\n+    string strSign     = params[1].get_str();\n+    string strMessage  = params[2].get_str();\n+\n+    CBitcoinAddress addr(strAddress);\n+    if (!addr.IsValid())\n+        throw JSONRPCError(RPC_TYPE_ERROR, \"Invalid address\");\n+\n+    CKeyID keyID;\n+    if (!addr.GetKeyID(keyID))\n+        throw JSONRPCError(RPC_TYPE_ERROR, \"Address does not refer to key\");\n+\n+    bool fInvalid = false;\n+    vector<unsigned char> vchSig = DecodeBase64(strSign.c_str(), &fInvalid);\n+\n+    if (fInvalid)\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Malformed base64 encoding\");\n+\n+    CHashWriter ss(SER_GETHASH, 0);\n+    ss << strMessageMagic;\n+    ss << strMessage;\n+\n+    CPubKey pubkey;\n+    if (!pubkey.RecoverCompact(ss.GetHash(), vchSig))\n+        return false;\n+\n+    return (pubkey.GetID() == keyID);\n+}\n "
      },
      {
        "sha": "d1fa81628c25f5f97c431ff98994d755e25f6fbb",
        "filename": "src/rpcserver.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c3a7f516e7ba9f39537ded149d8eb756c836fa2e/src/rpcserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c3a7f516e7ba9f39537ded149d8eb756c836fa2e/src/rpcserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.cpp?ref=c3a7f516e7ba9f39537ded149d8eb756c836fa2e",
        "patch": "@@ -254,6 +254,7 @@ static const CRPCCommand vRPCCommands[] =\n     { \"submitblock\",            &submitblock,            false,     false,      false },\n     { \"validateaddress\",        &validateaddress,        true,      false,      false },\n     { \"createmultisig\",         &createmultisig,         true,      true ,      false },\n+    { \"verifymessage\",          &verifymessage,          false,     false,      false },\n \n #ifdef ENABLE_WALLET\n     /* Wallet */\n@@ -283,7 +284,6 @@ static const CRPCCommand vRPCCommands[] =\n     { \"listtransactions\",       &listtransactions,       false,     false,      true },\n     { \"listaddressgroupings\",   &listaddressgroupings,   false,     false,      true },\n     { \"signmessage\",            &signmessage,            false,     false,      true },\n-    { \"verifymessage\",          &verifymessage,          false,     false,      false },\n     { \"listaccounts\",           &listaccounts,           false,     false,      true },\n     { \"listsinceblock\",         &listsinceblock,         false,     false,      true },\n     { \"dumpprivkey\",            &dumpprivkey,            true,      false,      true },"
      },
      {
        "sha": "32db0b46aa0ae01f3dcabf651db25b9c402fd3cd",
        "filename": "src/rpcwallet.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 53,
        "changes": 53,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c3a7f516e7ba9f39537ded149d8eb756c836fa2e/src/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c3a7f516e7ba9f39537ded149d8eb756c836fa2e/src/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.cpp?ref=c3a7f516e7ba9f39537ded149d8eb756c836fa2e",
        "patch": "@@ -441,59 +441,6 @@ Value signmessage(const Array& params, bool fHelp)\n     return EncodeBase64(&vchSig[0], vchSig.size());\n }\n \n-Value verifymessage(const Array& params, bool fHelp)\n-{\n-    if (fHelp || params.size() != 3)\n-        throw runtime_error(\n-            \"verifymessage \\\"bitcoinaddress\\\" \\\"signature\\\" \\\"message\\\"\\n\"\n-            \"\\nVerify a signed message\\n\"\n-            \"\\nArguments:\\n\"\n-            \"1. \\\"bitcoinaddress\\\"  (string, required) The bitcoin address to use for the signature.\\n\"\n-            \"2. \\\"signature\\\"       (string, required) The signature provided by the signer in base 64 encoding (see signmessage).\\n\"\n-            \"3. \\\"message\\\"         (string, required) The message that was signed.\\n\"\n-            \"\\nResult:\\n\"\n-            \"true|false   (boolean) If the signature is verified or not.\\n\"\n-            \"\\nExamples:\\n\"\n-            \"\\nUnlock the wallet for 30 seconds\\n\"\n-            + HelpExampleCli(\"walletpassphrase\", \"\\\"mypassphrase\\\" 30\") +\n-            \"\\nCreate the signature\\n\"\n-            + HelpExampleCli(\"signmessage\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\" \\\"my message\\\"\") +\n-            \"\\nVerify the signature\\n\"\n-            + HelpExampleCli(\"verifymessage\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\" \\\"signature\\\" \\\"my message\\\"\") +\n-            \"\\nAs json rpc\\n\"\n-            + HelpExampleRpc(\"verifymessage\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\", \\\"signature\\\", \\\"my message\\\"\")\n-        );\n-\n-    string strAddress  = params[0].get_str();\n-    string strSign     = params[1].get_str();\n-    string strMessage  = params[2].get_str();\n-\n-    CBitcoinAddress addr(strAddress);\n-    if (!addr.IsValid())\n-        throw JSONRPCError(RPC_TYPE_ERROR, \"Invalid address\");\n-\n-    CKeyID keyID;\n-    if (!addr.GetKeyID(keyID))\n-        throw JSONRPCError(RPC_TYPE_ERROR, \"Address does not refer to key\");\n-\n-    bool fInvalid = false;\n-    vector<unsigned char> vchSig = DecodeBase64(strSign.c_str(), &fInvalid);\n-\n-    if (fInvalid)\n-        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Malformed base64 encoding\");\n-\n-    CHashWriter ss(SER_GETHASH, 0);\n-    ss << strMessageMagic;\n-    ss << strMessage;\n-\n-    CPubKey pubkey;\n-    if (!pubkey.RecoverCompact(ss.GetHash(), vchSig))\n-        return false;\n-\n-    return (pubkey.GetID() == keyID);\n-}\n-\n-\n Value getreceivedbyaddress(const Array& params, bool fHelp)\n {\n     if (fHelp || params.size() < 1 || params.size() > 2)"
      }
    ]
  },
  {
    "sha": "37e67d37c14e916e901f9b7fac74b97150b1fe2b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozN2U2N2QzN2MxNGU5MTZlOTAxZjliN2ZhYzc0Yjk3MTUwYjFmZTJi",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-14T10:30:50Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-14T10:30:50Z"
      },
      "message": "Remove unused ThreadSafeHandleURI from ui_interface",
      "tree": {
        "sha": "1842a7a430519c4ab3775f738e2de937969f2369",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1842a7a430519c4ab3775f738e2de937969f2369"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/37e67d37c14e916e901f9b7fac74b97150b1fe2b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/37e67d37c14e916e901f9b7fac74b97150b1fe2b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/37e67d37c14e916e901f9b7fac74b97150b1fe2b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/37e67d37c14e916e901f9b7fac74b97150b1fe2b/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6bfaf2ac37c24b61e56c63cb2c4c9dfefdd6df42",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6bfaf2ac37c24b61e56c63cb2c4c9dfefdd6df42",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6bfaf2ac37c24b61e56c63cb2c4c9dfefdd6df42"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 0,
      "deletions": 3
    },
    "files": [
      {
        "sha": "9b9fb614f730709ca2df39bd79510c31bd4eab5f",
        "filename": "src/ui_interface.h",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/37e67d37c14e916e901f9b7fac74b97150b1fe2b/src/ui_interface.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/37e67d37c14e916e901f9b7fac74b97150b1fe2b/src/ui_interface.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/ui_interface.h?ref=37e67d37c14e916e901f9b7fac74b97150b1fe2b",
        "patch": "@@ -75,9 +75,6 @@ class CClientUIInterface\n     /** Ask the user whether they want to pay a fee or not. */\n     boost::signals2::signal<bool (int64_t nFeeRequired), boost::signals2::last_value<bool> > ThreadSafeAskFee;\n \n-    /** Handle a URL passed at the command line. */\n-    boost::signals2::signal<void (const std::string& strURI)> ThreadSafeHandleURI;\n-\n     /** Progress message during initialization. */\n     boost::signals2::signal<void (const std::string &message)> InitMessage;\n "
      }
    ]
  },
  {
    "sha": "ca2c83da50a2665f238432834c0246f52b5e234c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjYTJjODNkYTUwYTI2NjVmMjM4NDMyODM0YzAyNDZmNTJiNWUyMzRj",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-14T11:30:08Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-14T11:30:08Z"
      },
      "message": "Remove unused ThreadSafeAskFee from ui_interface\n\nThreadSafeAskFee is effectively unused. It is only called\nwhen the fAskFee parameter on SendMoney or SendMoneyToDestination\nis true, which never happens. Remove it.",
      "tree": {
        "sha": "d215772a66e3a452612181e5e5e650c2cd7b76e9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d215772a66e3a452612181e5e5e650c2cd7b76e9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ca2c83da50a2665f238432834c0246f52b5e234c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ca2c83da50a2665f238432834c0246f52b5e234c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ca2c83da50a2665f238432834c0246f52b5e234c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ca2c83da50a2665f238432834c0246f52b5e234c/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "37e67d37c14e916e901f9b7fac74b97150b1fe2b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/37e67d37c14e916e901f9b7fac74b97150b1fe2b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/37e67d37c14e916e901f9b7fac74b97150b1fe2b"
      }
    ],
    "stats": {
      "total": 53,
      "additions": 5,
      "deletions": 48
    },
    "files": [
      {
        "sha": "67385588e0a43b3529873dc72a0c2354bdc9a97e",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 17,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ca2c83da50a2665f238432834c0246f52b5e234c/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ca2c83da50a2665f238432834c0246f52b5e234c/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=ca2c83da50a2665f238432834c0246f52b5e234c",
        "patch": "@@ -74,22 +74,6 @@ static bool ThreadSafeMessageBox(const std::string& message, const std::string&\n     }\n }\n \n-static bool ThreadSafeAskFee(int64_t nFeeRequired)\n-{\n-    if(!guiref)\n-        return false;\n-    if(nFeeRequired < CTransaction::nMinTxFee || nFeeRequired <= nTransactionFee || fDaemon)\n-        return true;\n-\n-    bool payFee = false;\n-\n-    QMetaObject::invokeMethod(guiref, \"askFee\", GUIUtil::blockingGUIThreadConnection(),\n-                               Q_ARG(qint64, nFeeRequired),\n-                               Q_ARG(bool*, &payFee));\n-\n-    return payFee;\n-}\n-\n static void InitMessage(const std::string &message)\n {\n     if(splashref)\n@@ -262,7 +246,6 @@ int main(int argc, char *argv[])\n \n     // Subscribe to global signals from core\n     uiInterface.ThreadSafeMessageBox.connect(ThreadSafeMessageBox);\n-    uiInterface.ThreadSafeAskFee.connect(ThreadSafeAskFee);\n     uiInterface.InitMessage.connect(InitMessage);\n     uiInterface.Translate.connect(Translate);\n "
      },
      {
        "sha": "180c44ad5985a1463499fddb5ddc01247515b2d4",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 13,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ca2c83da50a2665f238432834c0246f52b5e234c/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ca2c83da50a2665f238432834c0246f52b5e234c/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=ca2c83da50a2665f238432834c0246f52b5e234c",
        "patch": "@@ -726,19 +726,6 @@ void BitcoinGUI::closeEvent(QCloseEvent *event)\n     QMainWindow::closeEvent(event);\n }\n \n-void BitcoinGUI::askFee(qint64 nFeeRequired, bool *payFee)\n-{\n-    if (!clientModel || !clientModel->getOptionsModel())\n-        return;\n-\n-    QString strMessage = tr(\"This transaction is over the size limit. You can still send it for a fee of %1, \"\n-        \"which goes to the nodes that process your transaction and helps to support the network. \"\n-        \"Do you want to pay the fee?\").arg(BitcoinUnits::formatWithUnit(clientModel->getOptionsModel()->getDisplayUnit(), nFeeRequired));\n-    QMessageBox::StandardButton retval = QMessageBox::question(this, tr(\"Confirm transaction fee\"), strMessage,\n-        QMessageBox::Yes | QMessageBox::Cancel, QMessageBox::Yes);\n-    *payFee = (retval == QMessageBox::Yes);\n-}\n-\n void BitcoinGUI::incomingTransaction(const QString& date, int unit, qint64 amount, const QString& type, const QString& address)\n {\n     // On new transaction, make an info balloon"
      },
      {
        "sha": "75c61d2a8a7baa3841ffaec62c9daf5e191cb8c0",
        "filename": "src/qt/bitcoingui.h",
        "status": "modified",
        "additions": 0,
        "deletions": 10,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ca2c83da50a2665f238432834c0246f52b5e234c/src/qt/bitcoingui.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ca2c83da50a2665f238432834c0246f52b5e234c/src/qt/bitcoingui.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.h?ref=ca2c83da50a2665f238432834c0246f52b5e234c",
        "patch": "@@ -135,16 +135,6 @@ public slots:\n     */\n     void message(const QString &title, const QString &message, unsigned int style, bool *ret = NULL);\n \n-    /** Asks the user whether to pay the transaction fee or to cancel the transaction.\n-       It is currently not possible to pass a return value to another thread through\n-       BlockingQueuedConnection, so an indirected pointer is used.\n-       https://bugreports.qt-project.org/browse/QTBUG-10440\n-\n-      @param[in] nFeeRequired       the required fee\n-      @param[out] payFee            true to pay the fee, false to not pay the fee\n-    */\n-    void askFee(qint64 nFeeRequired, bool *payFee);\n-\n     bool handlePaymentRequest(const SendCoinsRecipient& recipient);\n \n     /** Show incoming transaction notification for new transactions. */"
      },
      {
        "sha": "3c3d890e2ed09dc0aef59b8098782f73b4871c5c",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 6,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ca2c83da50a2665f238432834c0246f52b5e234c/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ca2c83da50a2665f238432834c0246f52b5e234c/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=ca2c83da50a2665f238432834c0246f52b5e234c",
        "patch": "@@ -1434,7 +1434,7 @@ bool CWallet::CommitTransaction(CWalletTx& wtxNew, CReserveKey& reservekey)\n \n \n \n-string CWallet::SendMoney(CScript scriptPubKey, int64_t nValue, CWalletTx& wtxNew, bool fAskFee)\n+string CWallet::SendMoney(CScript scriptPubKey, int64_t nValue, CWalletTx& wtxNew)\n {\n     CReserveKey reservekey(this);\n     int64_t nFeeRequired;\n@@ -1454,9 +1454,6 @@ string CWallet::SendMoney(CScript scriptPubKey, int64_t nValue, CWalletTx& wtxNe\n         return strError;\n     }\n \n-    if (fAskFee && !uiInterface.ThreadSafeAskFee(nFeeRequired))\n-        return \"ABORTED\";\n-\n     if (!CommitTransaction(wtxNew, reservekey))\n         return _(\"Error: The transaction was rejected! This might happen if some of the coins in your wallet were already spent, such as if you used a copy of wallet.dat and coins were spent in the copy but not marked as spent here.\");\n \n@@ -1465,7 +1462,7 @@ string CWallet::SendMoney(CScript scriptPubKey, int64_t nValue, CWalletTx& wtxNe\n \n \n \n-string CWallet::SendMoneyToDestination(const CTxDestination& address, int64_t nValue, CWalletTx& wtxNew, bool fAskFee)\n+string CWallet::SendMoneyToDestination(const CTxDestination& address, int64_t nValue, CWalletTx& wtxNew)\n {\n     // Check amount\n     if (nValue <= 0)\n@@ -1477,7 +1474,7 @@ string CWallet::SendMoneyToDestination(const CTxDestination& address, int64_t nV\n     CScript scriptPubKey;\n     scriptPubKey.SetDestination(address);\n \n-    return SendMoney(scriptPubKey, nValue, wtxNew, fAskFee);\n+    return SendMoney(scriptPubKey, nValue, wtxNew);\n }\n \n "
      },
      {
        "sha": "8e879c5e1a34865dca5b11f705cb2b5127b1a480",
        "filename": "src/wallet.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ca2c83da50a2665f238432834c0246f52b5e234c/src/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ca2c83da50a2665f238432834c0246f52b5e234c/src/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.h?ref=ca2c83da50a2665f238432834c0246f52b5e234c",
        "patch": "@@ -217,8 +217,8 @@ class CWallet : public CCryptoKeyStore, public CWalletInterface\n     bool CreateTransaction(CScript scriptPubKey, int64_t nValue,\n                            CWalletTx& wtxNew, CReserveKey& reservekey, int64_t& nFeeRet, std::string& strFailReason, const CCoinControl *coinControl = NULL);\n     bool CommitTransaction(CWalletTx& wtxNew, CReserveKey& reservekey);\n-    std::string SendMoney(CScript scriptPubKey, int64_t nValue, CWalletTx& wtxNew, bool fAskFee=false);\n-    std::string SendMoneyToDestination(const CTxDestination &address, int64_t nValue, CWalletTx& wtxNew, bool fAskFee=false);\n+    std::string SendMoney(CScript scriptPubKey, int64_t nValue, CWalletTx& wtxNew);\n+    std::string SendMoneyToDestination(const CTxDestination &address, int64_t nValue, CWalletTx& wtxNew);\n \n     bool NewKeyPool();\n     bool TopUpKeyPool(unsigned int kpSize = 0);"
      }
    ]
  },
  {
    "sha": "8a7606f35bf6ce862996559d4860c9b7f618e9ee",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4YTc2MDZmMzViZjZjZTg2Mjk5NjU1OWQ0ODYwYzliN2Y2MThlOWVl",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-14T12:28:15Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-14T12:28:22Z"
      },
      "message": "Merge pull request #3377\n\n0b238b2 Use thread-local storage for LogPrint(category...) (Gavin Andresen)\n962b1cf Fix infinite loop with LogPrint on Windows (Gavin Andresen)",
      "tree": {
        "sha": "fd32aba97f975c56ddf43320d8dcf35ed952810c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fd32aba97f975c56ddf43320d8dcf35ed952810c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8a7606f35bf6ce862996559d4860c9b7f618e9ee",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJSrE7mAAoJEHSBCwEjRsmmz4oH/RKEICWo88QEe20JtIoOodVL\nqwFtkvlI0TH2Kdxq5dfjHtpXldWZb0tA1CbhzLQJ5nvVL1syQa4jxST6Mp/nbiP1\n5sugolj6BmMGxFFIHaymXLZ7BAp+ALxVrd+yfxLEoq3gDilmsSFn3qSsZUbvVtMh\ncn3LXzzaIwCfALZxW9799V+mVWAPN//9HWtX5T15qPPA88Bunj/yiEn1jm+iazE+\nHl9X+nFtCvuWi6VP+88tJc2kPbgGWFhE9l/QVvPvFKgiDp2eQpL3aF+cU/Y9FfKn\n59eEz8+TZPEV0eD8uBDcYYdR1dhXdTrZ1C35ULCpHmPIS+TVhDjMm9cEF6QVXfU=\n=Kgse\n-----END PGP SIGNATURE-----",
        "payload": "tree fd32aba97f975c56ddf43320d8dcf35ed952810c\nparent 6bfaf2ac37c24b61e56c63cb2c4c9dfefdd6df42\nparent 0b238b278686f8e0c6609b7c9360d36c3198105c\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1387024095 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1387024102 +0100\n\nMerge pull request #3377\n\n0b238b2 Use thread-local storage for LogPrint(category...) (Gavin Andresen)\n962b1cf Fix infinite loop with LogPrint on Windows (Gavin Andresen)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8a7606f35bf6ce862996559d4860c9b7f618e9ee",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8a7606f35bf6ce862996559d4860c9b7f618e9ee",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8a7606f35bf6ce862996559d4860c9b7f618e9ee/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6bfaf2ac37c24b61e56c63cb2c4c9dfefdd6df42",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6bfaf2ac37c24b61e56c63cb2c4c9dfefdd6df42",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6bfaf2ac37c24b61e56c63cb2c4c9dfefdd6df42"
      },
      {
        "sha": "0b238b278686f8e0c6609b7c9360d36c3198105c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0b238b278686f8e0c6609b7c9360d36c3198105c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0b238b278686f8e0c6609b7c9360d36c3198105c"
      }
    ],
    "stats": {
      "total": 55,
      "additions": 29,
      "deletions": 26
    },
    "files": [
      {
        "sha": "bedf59767b1f8ff58550ffc030c75ae47e1737f1",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 29,
        "deletions": 26,
        "changes": 55,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8a7606f35bf6ce862996559d4860c9b7f618e9ee/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8a7606f35bf6ce862996559d4860c9b7f618e9ee/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=8a7606f35bf6ce862996559d4860c9b7f618e9ee",
        "patch": "@@ -242,17 +242,23 @@ int LogPrint(const char* category, const char* pszFormat, ...)\n         if (!fDebug)\n             return 0;\n \n-        const vector<string>& categories = mapMultiArgs[\"-debug\"];\n-        bool allCategories = count(categories.begin(), categories.end(), string(\"\"));\n-\n-        // Only look for categories, if not -debug/-debug=1 was passed,\n-        // as that implies every category should be logged.\n-        if (!allCategories)\n+        // Give each thread quick access to -debug settings.\n+        // This helps prevent issues debugging global destructors,\n+        // where mapMultiArgs might be deleted before another\n+        // global destructor calls LogPrint()\n+        static boost::thread_specific_ptr<set<string> > ptrCategory;\n+        if (ptrCategory.get() == NULL)\n         {\n-            // Category was not found (not supplied via -debug=<category>)\n-            if (find(categories.begin(), categories.end(), string(category)) == categories.end())\n-                return 0;\n+            const vector<string>& categories = mapMultiArgs[\"-debug\"];\n+            ptrCategory.reset(new set<string>(categories.begin(), categories.end()));\n+            // thread_specific_ptr automatically deletes the set when the thread ends.\n         }\n+        const set<string>& setCategories = *ptrCategory.get();\n+\n+        // if not debugging everything and not debugging specific category, LogPrint does nothing.\n+        if (setCategories.count(string(\"\")) == 0 &&\n+            setCategories.count(string(category)) == 0)\n+            return 0;\n     }\n \n     int ret = 0; // Returns total number of characters written\n@@ -299,27 +305,24 @@ int LogPrint(const char* category, const char* pszFormat, ...)\n #ifdef WIN32\n     if (fPrintToDebugger)\n     {\n-        static CCriticalSection cs_OutputDebugStringF;\n-\n         // accumulate and output a line at a time\n-        {\n-            LOCK(cs_OutputDebugStringF);\n-            static std::string buffer;\n+        static std::string buffer;\n \n-            va_list arg_ptr;\n-            va_start(arg_ptr, pszFormat);\n-            buffer += vstrprintf(pszFormat, arg_ptr);\n-            va_end(arg_ptr);\n+        boost::mutex::scoped_lock scoped_lock(*mutexDebugLog);\n \n-            int line_start = 0, line_end;\n-            while((line_end = buffer.find('\\n', line_start)) != -1)\n-            {\n-                OutputDebugStringA(buffer.substr(line_start, line_end - line_start).c_str());\n-                line_start = line_end + 1;\n-                ret += line_end-line_start;\n-            }\n-            buffer.erase(0, line_start);\n+        va_list arg_ptr;\n+        va_start(arg_ptr, pszFormat);\n+        buffer += vstrprintf(pszFormat, arg_ptr);\n+        va_end(arg_ptr);\n+\n+        int line_start = 0, line_end;\n+        while((line_end = buffer.find('\\n', line_start)) != -1)\n+        {\n+            OutputDebugStringA(buffer.substr(line_start, line_end - line_start).c_str());\n+            line_start = line_end + 1;\n+            ret += line_end-line_start;\n         }\n+        buffer.erase(0, line_start);\n     }\n #endif\n     return ret;"
      }
    ]
  },
  {
    "sha": "9e9056cd1a05e5868025553d2a8cb3e47cf45045",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ZTkwNTZjZDFhMDVlNTg2ODAyNTU1M2QyYThjYjNlNDdjZjQ1MDQ1",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-14T12:51:11Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-15T09:12:38Z"
      },
      "message": "Remove -logtodebugger\n\n`-logtodebugger` is a strange, obscure, WIN32-only (mostly MSVC) thing.\nLet's clean up the options a bit get rid of it.\n\ntest_bitcoin was using fLogToDebugger as a way to prevent logging to\ndebug.log. For this, add a boolean (not exposed as option) fLogToDebugLog that\ndefaults to true and is disabled in the tests.",
      "tree": {
        "sha": "ccb955d1bd925032fb107b908f6cc7a836d9efe5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ccb955d1bd925032fb107b908f6cc7a836d9efe5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9e9056cd1a05e5868025553d2a8cb3e47cf45045",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9e9056cd1a05e5868025553d2a8cb3e47cf45045",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9e9056cd1a05e5868025553d2a8cb3e47cf45045",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9e9056cd1a05e5868025553d2a8cb3e47cf45045/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8a7606f35bf6ce862996559d4860c9b7f618e9ee",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8a7606f35bf6ce862996559d4860c9b7f618e9ee",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8a7606f35bf6ce862996559d4860c9b7f618e9ee"
      }
    ],
    "stats": {
      "total": 36,
      "additions": 4,
      "deletions": 32
    },
    "files": [
      {
        "sha": "a4504cf65e6795610db7cb8d481173f98c405e82",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e9056cd1a05e5868025553d2a8cb3e47cf45045/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e9056cd1a05e5868025553d2a8cb3e47cf45045/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=9e9056cd1a05e5868025553d2a8cb3e47cf45045",
        "patch": "@@ -245,10 +245,6 @@ std::string HelpMessage(HelpMessageMode hmm)\n     strUsage += \"  -printtoconsole        \" + _(\"Send trace/debug info to console instead of debug.log file\") + \"\\n\";\n     strUsage += \"  -regtest               \" + _(\"Enter regression test mode, which uses a special chain in which blocks can be \"\n                                                 \"solved instantly. This is intended for regression testing tools and app development.\") + \"\\n\";\n-#ifdef WIN32\n-    strUsage += \"  -printtodebugger       \" + _(\"Send trace/debug info to debugger\") + \"\\n\";\n-#endif\n-\n     if (hmm == HMM_BITCOIN_QT)\n     {\n         strUsage += \"  -server                \" + _(\"Accept command line and JSON-RPC commands\") + \"\\n\";\n@@ -492,7 +488,6 @@ bool AppInit2(boost::thread_group& threadGroup, bool fForceServer)\n         fServer = GetBoolArg(\"-server\", false);\n \n     fPrintToConsole = GetBoolArg(\"-printtoconsole\", false);\n-    fPrintToDebugger = GetBoolArg(\"-printtodebugger\", false);\n     fLogTimestamps = GetBoolArg(\"-logtimestamps\", true);\n #ifdef ENABLE_WALLET\n     bool fDisableWallet = GetBoolArg(\"-disablewallet\", false);"
      },
      {
        "sha": "a9cb48e8cfe62007faf67917901277e7d5d6359a",
        "filename": "src/test/test_bitcoin.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e9056cd1a05e5868025553d2a8cb3e47cf45045/src/test/test_bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e9056cd1a05e5868025553d2a8cb3e47cf45045/src/test/test_bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/test_bitcoin.cpp?ref=9e9056cd1a05e5868025553d2a8cb3e47cf45045",
        "patch": "@@ -26,7 +26,7 @@ struct TestingSetup {\n     boost::thread_group threadGroup;\n \n     TestingSetup() {\n-        fPrintToDebugger = true; // don't want to write to debug.log file\n+        fPrintToDebugLog = false; // don't want to write to debug.log file\n         noui_connect();\n #ifdef ENABLE_WALLET\n         bitdb.MakeMock();"
      },
      {
        "sha": "280798f2fb33e1dfc63c718269dc766e79833c78",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 25,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e9056cd1a05e5868025553d2a8cb3e47cf45045/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e9056cd1a05e5868025553d2a8cb3e47cf45045/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=9e9056cd1a05e5868025553d2a8cb3e47cf45045",
        "patch": "@@ -88,7 +88,7 @@ map<string, string> mapArgs;\n map<string, vector<string> > mapMultiArgs;\n bool fDebug = false;\n bool fPrintToConsole = false;\n-bool fPrintToDebugger = false;\n+bool fPrintToDebugLog = true;\n bool fDaemon = false;\n bool fServer = false;\n string strMiscWarning;\n@@ -270,7 +270,7 @@ int LogPrint(const char* category, const char* pszFormat, ...)\n         ret += vprintf(pszFormat, arg_ptr);\n         va_end(arg_ptr);\n     }\n-    else if (!fPrintToDebugger)\n+    else if (fPrintToDebugLog)\n     {\n         static bool fStartedNewLine = true;\n         boost::call_once(&DebugPrintInit, debugPrintInitFlag);\n@@ -302,29 +302,6 @@ int LogPrint(const char* category, const char* pszFormat, ...)\n         va_end(arg_ptr);\n     }\n \n-#ifdef WIN32\n-    if (fPrintToDebugger)\n-    {\n-        // accumulate and output a line at a time\n-        static std::string buffer;\n-\n-        boost::mutex::scoped_lock scoped_lock(*mutexDebugLog);\n-\n-        va_list arg_ptr;\n-        va_start(arg_ptr, pszFormat);\n-        buffer += vstrprintf(pszFormat, arg_ptr);\n-        va_end(arg_ptr);\n-\n-        int line_start = 0, line_end;\n-        while((line_end = buffer.find('\\n', line_start)) != -1)\n-        {\n-            OutputDebugStringA(buffer.substr(line_start, line_end - line_start).c_str());\n-            line_start = line_end + 1;\n-            ret += line_end-line_start;\n-        }\n-        buffer.erase(0, line_start);\n-    }\n-#endif\n     return ret;\n }\n "
      },
      {
        "sha": "3922872e06a53af555dc819726411149b71f06f8",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e9056cd1a05e5868025553d2a8cb3e47cf45045/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e9056cd1a05e5868025553d2a8cb3e47cf45045/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=9e9056cd1a05e5868025553d2a8cb3e47cf45045",
        "patch": "@@ -120,7 +120,7 @@ extern std::map<std::string, std::string> mapArgs;\n extern std::map<std::string, std::vector<std::string> > mapMultiArgs;\n extern bool fDebug;\n extern bool fPrintToConsole;\n-extern bool fPrintToDebugger;\n+extern bool fPrintToDebugLog;\n extern bool fDaemon;\n extern bool fServer;\n extern std::string strMiscWarning;"
      }
    ]
  },
  {
    "sha": "bccd5324ab5b76c21b01bfe9c8ec7ab2061c93e4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiY2NkNTMyNGFiNWI3NmMyMWIwMWJmZTljOGVjN2FiMjA2MWM5M2U0",
    "commit": {
      "author": {
        "name": "Kangmo",
        "email": "kangmo@nanolat.com",
        "date": "2013-12-15T14:25:41Z"
      },
      "committer": {
        "name": "Kangmo",
        "email": "kangmo@nanolat.com",
        "date": "2013-12-15T14:25:41Z"
      },
      "message": "Fix unit test error on OSX 10.9 using Apple LLVM v5.0.\n\nBefore the fix, there were 6 errors such as :\nserialize_tests.cpp:77: error in \"noncanonical\": incorrect exception std::ios_base::failure is caught\n\nIt turns out that ex.what() returns following string instead of \"non-canonical ReadCompactSize()\"\n\"non-canonical ReadCompactSize(): unspecified iostream_category error\"\n\nAfter the fix, unit test passed.\n\nThe test ran using Apple LLVM v5.0 on OSX 10.9 and the unit test error happened because of different error messages by different compilers.\n\ng++ --version on my development environment.\n\n```\nConfigured with: --prefix=/Applications/Xcode.app/Contents/Developer/usr --with-gxx-include-dir=/usr/include/c++/4.2.1\nApple LLVM version 5.0 (clang-500.2.79) (based on LLVM 3.3svn)\nTarget: x86_64-apple-darwin13.0.0\nThread model: posix\n```",
      "tree": {
        "sha": "c17a1b7a4e8223cc6f96c0795c3ae12815129ae5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c17a1b7a4e8223cc6f96c0795c3ae12815129ae5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bccd5324ab5b76c21b01bfe9c8ec7ab2061c93e4",
      "comment_count": 2,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bccd5324ab5b76c21b01bfe9c8ec7ab2061c93e4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bccd5324ab5b76c21b01bfe9c8ec7ab2061c93e4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bccd5324ab5b76c21b01bfe9c8ec7ab2061c93e4/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "8a7606f35bf6ce862996559d4860c9b7f618e9ee",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8a7606f35bf6ce862996559d4860c9b7f618e9ee",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8a7606f35bf6ce862996559d4860c9b7f618e9ee"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 6,
      "deletions": 1
    },
    "files": [
      {
        "sha": "885a91658d9e7aeb16982122ddd16e4605a1f3b1",
        "filename": "src/test/serialize_tests.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bccd5324ab5b76c21b01bfe9c8ec7ab2061c93e4/src/test/serialize_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bccd5324ab5b76c21b01bfe9c8ec7ab2061c93e4/src/test/serialize_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/serialize_tests.cpp?ref=bccd5324ab5b76c21b01bfe9c8ec7ab2061c93e4",
        "patch": "@@ -61,9 +61,14 @@ BOOST_AUTO_TEST_CASE(compactsize)\n \n static bool isCanonicalException(const std::ios_base::failure& ex)\n {\n-    return std::string(\"non-canonical ReadCompactSize()\") == ex.what();\n+    std::string strExplanatoryString(\"non-canonical ReadCompactSize()\");\n+\n+    return strExplanatoryString == ex.what() ||\n+           // OSX Apple LLVM version 5.0 (OSX 10.9) \n+           strExplanatoryString + \": unspecified iostream_category error\" == ex.what();\n }\n \n+\n BOOST_AUTO_TEST_CASE(noncanonical)\n {\n     // Write some non-canonical CompactSize encodings, and"
      }
    ]
  },
  {
    "sha": "93a5d0bb98ce1b3486ba65d719962047b9a8c487",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5M2E1ZDBiYjk4Y2UxYjM0ODZiYTY1ZDcxOTk2MjA0N2I5YThjNDg3",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-15T14:39:09Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-15T14:39:09Z"
      },
      "message": "qt: use GUIUtil::dateTimeStr in coincontrol",
      "tree": {
        "sha": "419efc670552804a2bfee3f6834c2534eb99314b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/419efc670552804a2bfee3f6834c2534eb99314b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/93a5d0bb98ce1b3486ba65d719962047b9a8c487",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/93a5d0bb98ce1b3486ba65d719962047b9a8c487",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/93a5d0bb98ce1b3486ba65d719962047b9a8c487",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/93a5d0bb98ce1b3486ba65d719962047b9a8c487/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8a7606f35bf6ce862996559d4860c9b7f618e9ee",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8a7606f35bf6ce862996559d4860c9b7f618e9ee",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8a7606f35bf6ce862996559d4860c9b7f618e9ee"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 1,
      "deletions": 2
    },
    "files": [
      {
        "sha": "b4e6aeb1dd6b9478b37cac97b0961ab0198ea0a3",
        "filename": "src/qt/coincontroldialog.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/93a5d0bb98ce1b3486ba65d719962047b9a8c487/src/qt/coincontroldialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/93a5d0bb98ce1b3486ba65d719962047b9a8c487/src/qt/coincontroldialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/coincontroldialog.cpp?ref=93a5d0bb98ce1b3486ba65d719962047b9a8c487",
        "patch": "@@ -20,7 +20,6 @@\n #include <QCheckBox>\n #include <QColor>\n #include <QCursor>\n-#include <QDateTime>\n #include <QDialogButtonBox>\n #include <QFlags>\n #include <QIcon>\n@@ -730,7 +729,7 @@ void CoinControlDialog::updateView()\n             itemOutput->setText(COLUMN_AMOUNT_INT64, strPad(QString::number(out.tx->vout[out.i].nValue), 15, \" \")); // padding so that sorting works correctly\n \n             // date\n-            itemOutput->setText(COLUMN_DATE, QDateTime::fromTime_t(out.tx->GetTxTime()).toString(\"yy-MM-dd hh:mm\"));\n+            itemOutput->setText(COLUMN_DATE, GUIUtil::dateTimeStr(out.tx->GetTxTime()));\n \n             // confirmations\n             itemOutput->setText(COLUMN_CONFIRMATIONS, strPad(QString::number(out.nDepth), 8, \" \"));"
      }
    ]
  },
  {
    "sha": "d05ce63c98f6fb7244d25fcdb74eb94d194c3c86",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkMDVjZTYzYzk4ZjZmYjcyNDRkMjVmY2RiNzRlYjk0ZDE5NGMzYzg2",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-15T14:40:51Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-15T14:40:59Z"
      },
      "message": "Merge pull request #3421\n\n93a5d0b qt: use GUIUtil::dateTimeStr in coincontrol (Wladimir J. van der Laan)",
      "tree": {
        "sha": "419efc670552804a2bfee3f6834c2534eb99314b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/419efc670552804a2bfee3f6834c2534eb99314b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d05ce63c98f6fb7244d25fcdb74eb94d194c3c86",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJSrb97AAoJEHSBCwEjRsmm6ngH/3Q3rrvxwQ1iZbE6VgkczNb8\n9TW0n2GIDbqEwDv+zTSNso97MZOYAjesySb1Yw0MBATkfgrBQxqh7k3yNaakkJIq\nIa2ivz0EHyQmbln2O/daa+sw2ClCW8t70oRuqRK7Sbb6H1f0FJws7Zc/1ehjU7Jf\n6vVZS39eBemZopXC6go66jGMdqJIAR42M08J9hIL9kQRLzawNnCE/H7KkLqda+Ns\nhKwcuI6+/cK+DXRA4keosJJjkbdsfgntZFASE5SUBuRgElwKLlh358/xM5vy98Ke\nVykzbEenO9CFByOO6a4E5GNxldQx44heU6iO8VZ0yh0mZbTvdevbQ/u+9/e7ac8=\n=1NSx\n-----END PGP SIGNATURE-----",
        "payload": "tree 419efc670552804a2bfee3f6834c2534eb99314b\nparent 8a7606f35bf6ce862996559d4860c9b7f618e9ee\nparent 93a5d0bb98ce1b3486ba65d719962047b9a8c487\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1387118451 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1387118459 +0100\n\nMerge pull request #3421\n\n93a5d0b qt: use GUIUtil::dateTimeStr in coincontrol (Wladimir J. van der Laan)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d05ce63c98f6fb7244d25fcdb74eb94d194c3c86",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d05ce63c98f6fb7244d25fcdb74eb94d194c3c86",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d05ce63c98f6fb7244d25fcdb74eb94d194c3c86/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8a7606f35bf6ce862996559d4860c9b7f618e9ee",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8a7606f35bf6ce862996559d4860c9b7f618e9ee",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8a7606f35bf6ce862996559d4860c9b7f618e9ee"
      },
      {
        "sha": "93a5d0bb98ce1b3486ba65d719962047b9a8c487",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/93a5d0bb98ce1b3486ba65d719962047b9a8c487",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/93a5d0bb98ce1b3486ba65d719962047b9a8c487"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 1,
      "deletions": 2
    },
    "files": [
      {
        "sha": "b4e6aeb1dd6b9478b37cac97b0961ab0198ea0a3",
        "filename": "src/qt/coincontroldialog.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d05ce63c98f6fb7244d25fcdb74eb94d194c3c86/src/qt/coincontroldialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d05ce63c98f6fb7244d25fcdb74eb94d194c3c86/src/qt/coincontroldialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/coincontroldialog.cpp?ref=d05ce63c98f6fb7244d25fcdb74eb94d194c3c86",
        "patch": "@@ -20,7 +20,6 @@\n #include <QCheckBox>\n #include <QColor>\n #include <QCursor>\n-#include <QDateTime>\n #include <QDialogButtonBox>\n #include <QFlags>\n #include <QIcon>\n@@ -730,7 +729,7 @@ void CoinControlDialog::updateView()\n             itemOutput->setText(COLUMN_AMOUNT_INT64, strPad(QString::number(out.tx->vout[out.i].nValue), 15, \" \")); // padding so that sorting works correctly\n \n             // date\n-            itemOutput->setText(COLUMN_DATE, QDateTime::fromTime_t(out.tx->GetTxTime()).toString(\"yy-MM-dd hh:mm\"));\n+            itemOutput->setText(COLUMN_DATE, GUIUtil::dateTimeStr(out.tx->GetTxTime()));\n \n             // confirmations\n             itemOutput->setText(COLUMN_CONFIRMATIONS, strPad(QString::number(out.nDepth), 8, \" \"));"
      }
    ]
  },
  {
    "sha": "a5a65bbc90890fa4532313beec1b1b422f7a5c81",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNWE2NWJiYzkwODkwZmE0NTMyMzEzYmVlYzFiMWI0MjJmN2E1Yzgx",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-15T16:35:20Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-15T16:35:28Z"
      },
      "message": "Merge pull request #3420\n\nbccd532 Fix unit test error on OSX 10.9 using Apple LLVM v5.0. (Kangmo)",
      "tree": {
        "sha": "e3e37290488600683ff51943284b971567440d96",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e3e37290488600683ff51943284b971567440d96"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a5a65bbc90890fa4532313beec1b1b422f7a5c81",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJSrdpQAAoJEHSBCwEjRsmmLmEIAMUqGt2eeDKMj0K0ekk1GOJg\nSgRwKIYY7pTst7wjRDz9yhhN53t4iMeCp8o3mhSgS8kwIDVydixlZpjdUynImnbF\n2BZLv5SQPiE/E7UzvAb9luTnY6+FoeMSmgUrGdnSqas7KpS1q2G1RDYsLibf2qt/\n6lNk+xU0cW11m2ZYdx+1nqELbVev8u746i3IxZF6q1bsOiw4D/Le7v5taLHPVs2C\nLIfcvjFn1+F62va3FYDEZ/yK4F3elvuD7kwMJcvbKpfJpVjQtpqUyOZgShc08ZEA\nfGvzO0t+eJ55uRXhLNp005SXA66M/eMXIf4T8IW3Senyr6aWjL72Pl6zO2fCWTg=\n=87eF\n-----END PGP SIGNATURE-----",
        "payload": "tree e3e37290488600683ff51943284b971567440d96\nparent d05ce63c98f6fb7244d25fcdb74eb94d194c3c86\nparent bccd5324ab5b76c21b01bfe9c8ec7ab2061c93e4\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1387125320 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1387125328 +0100\n\nMerge pull request #3420\n\nbccd532 Fix unit test error on OSX 10.9 using Apple LLVM v5.0. (Kangmo)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a5a65bbc90890fa4532313beec1b1b422f7a5c81",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a5a65bbc90890fa4532313beec1b1b422f7a5c81",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a5a65bbc90890fa4532313beec1b1b422f7a5c81/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d05ce63c98f6fb7244d25fcdb74eb94d194c3c86",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d05ce63c98f6fb7244d25fcdb74eb94d194c3c86",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d05ce63c98f6fb7244d25fcdb74eb94d194c3c86"
      },
      {
        "sha": "bccd5324ab5b76c21b01bfe9c8ec7ab2061c93e4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bccd5324ab5b76c21b01bfe9c8ec7ab2061c93e4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bccd5324ab5b76c21b01bfe9c8ec7ab2061c93e4"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 6,
      "deletions": 1
    },
    "files": [
      {
        "sha": "885a91658d9e7aeb16982122ddd16e4605a1f3b1",
        "filename": "src/test/serialize_tests.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a5a65bbc90890fa4532313beec1b1b422f7a5c81/src/test/serialize_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a5a65bbc90890fa4532313beec1b1b422f7a5c81/src/test/serialize_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/serialize_tests.cpp?ref=a5a65bbc90890fa4532313beec1b1b422f7a5c81",
        "patch": "@@ -61,9 +61,14 @@ BOOST_AUTO_TEST_CASE(compactsize)\n \n static bool isCanonicalException(const std::ios_base::failure& ex)\n {\n-    return std::string(\"non-canonical ReadCompactSize()\") == ex.what();\n+    std::string strExplanatoryString(\"non-canonical ReadCompactSize()\");\n+\n+    return strExplanatoryString == ex.what() ||\n+           // OSX Apple LLVM version 5.0 (OSX 10.9) \n+           strExplanatoryString + \": unspecified iostream_category error\" == ex.what();\n }\n \n+\n BOOST_AUTO_TEST_CASE(noncanonical)\n {\n     // Write some non-canonical CompactSize encodings, and"
      }
    ]
  },
  {
    "sha": "0205abd83d8f8dcbe453440a3fa4e494b71704e8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowMjA1YWJkODNkOGY4ZGNiZTQ1MzQ0MGEzZmE0ZTQ5NGI3MTcwNGU4",
    "commit": {
      "author": {
        "name": "Kangmo",
        "email": "kangmo@nanolat.com",
        "date": "2013-12-16T00:26:04Z"
      },
      "committer": {
        "name": "Kangmo",
        "email": "kangmo@nanolat.com",
        "date": "2013-12-16T00:26:04Z"
      },
      "message": "Improve unit test code not to compare with explanatory messages for each platform.\nInstead, use have an exception object to check if the string returned by what() on the raised exception matches the string returned by what() on the expected exception instance.\nThis way, we do not need to list all different possible explanatory strings for different platforms in the test code, and make it simple. (The idea is by Cory Fields.)",
      "tree": {
        "sha": "f19aa304bbfc3f3b6162e8c5967cd3515db7483b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f19aa304bbfc3f3b6162e8c5967cd3515db7483b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0205abd83d8f8dcbe453440a3fa4e494b71704e8",
      "comment_count": 2,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0205abd83d8f8dcbe453440a3fa4e494b71704e8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0205abd83d8f8dcbe453440a3fa4e494b71704e8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0205abd83d8f8dcbe453440a3fa4e494b71704e8/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "bccd5324ab5b76c21b01bfe9c8ec7ab2061c93e4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bccd5324ab5b76c21b01bfe9c8ec7ab2061c93e4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bccd5324ab5b76c21b01bfe9c8ec7ab2061c93e4"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 6,
      "deletions": 4
    },
    "files": [
      {
        "sha": "415f957811dd8434b2d8184c2785b3c4db1d68bb",
        "filename": "src/test/serialize_tests.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 4,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0205abd83d8f8dcbe453440a3fa4e494b71704e8/src/test/serialize_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0205abd83d8f8dcbe453440a3fa4e494b71704e8/src/test/serialize_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/serialize_tests.cpp?ref=0205abd83d8f8dcbe453440a3fa4e494b71704e8",
        "patch": "@@ -61,11 +61,13 @@ BOOST_AUTO_TEST_CASE(compactsize)\n \n static bool isCanonicalException(const std::ios_base::failure& ex)\n {\n-    std::string strExplanatoryString(\"non-canonical ReadCompactSize()\");\n+    std::ios_base::failure expectedException(\"non-canonical ReadCompactSize()\");\n \n-    return strExplanatoryString == ex.what() ||\n-           // OSX Apple LLVM version 5.0 (OSX 10.9) \n-           strExplanatoryString + \": unspecified iostream_category error\" == ex.what();\n+    // The string returned by what() can be different for different platforms.\n+    // Instead of directly comparing the ex.what() with an expected string,\n+    // create an instance of exception to see if ex.what() matches \n+    // the expected explanatory string returned by the exception instance. \n+    return strcmp(expectedException.what(), ex.what()) == 0;\n }\n \n "
      }
    ]
  },
  {
    "sha": "3d7c66d75de3e5d14332976a21573aa5d4c3a74c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozZDdjNjZkNzVkZTNlNWQxNDMzMjk3NmEyMTU3M2FhNWQ0YzNhNzRj",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-16T06:53:47Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-16T06:59:07Z"
      },
      "message": "Merge pull request #3423\n\n0205abd Improve unit test code not to compare with explanatory messages for each platform. Instead, use have an exception object to check if the string returned by what() on the raised exception matches the string returned by what() on the expected exception instance. This way, we do not need to list all different possible explanatory strings for different platforms in the test code, and make it simple. (The idea is by Cory Fields.) (Kangmo)",
      "tree": {
        "sha": "df1f18a1ff539c679cdba9ef2b09572482bf679c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/df1f18a1ff539c679cdba9ef2b09572482bf679c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3d7c66d75de3e5d14332976a21573aa5d4c3a74c",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJSrqS7AAoJEHSBCwEjRsmmDM4H/0ptOAEj9NPMKG0+Z7AB9Bm2\ndgDaivUsWpJS6pNsD797kgHZaa0hFDAMKPMBWXt8E9kEshOMPSIxqjwriMRL4JXn\nfCKuNFMeoEXorG/dnsE8jP6/kCiiRdSOJZJaVXfVYug4zX4WN48j1kH2yxzSauz+\nmN7oFt0Ysk/Y9kQmnVmAXTUsXqxLjPQDF783piPDIr77/p9wuAOPcXbyp0myLmDG\nLTYHEq2XlfifSgR5kIZNAuYC7DNGH3wQd3UU2IIXoQy4tr80MaWoU2+rVroJIh1B\nNhPzxRutGllwYvpRUd1NJc/OsLVVHirL22/fyqYXKnEMv6B2hPV54GIAPkMV4wc=\n=tf8W\n-----END PGP SIGNATURE-----",
        "payload": "tree df1f18a1ff539c679cdba9ef2b09572482bf679c\nparent a5a65bbc90890fa4532313beec1b1b422f7a5c81\nparent 0205abd83d8f8dcbe453440a3fa4e494b71704e8\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1387176827 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1387177147 +0100\n\nMerge pull request #3423\n\n0205abd Improve unit test code not to compare with explanatory messages for each platform. Instead, use have an exception object to check if the string returned by what() on the raised exception matches the string returned by what() on the expected exception instance. This way, we do not need to list all different possible explanatory strings for different platforms in the test code, and make it simple. (The idea is by Cory Fields.) (Kangmo)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3d7c66d75de3e5d14332976a21573aa5d4c3a74c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3d7c66d75de3e5d14332976a21573aa5d4c3a74c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3d7c66d75de3e5d14332976a21573aa5d4c3a74c/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a5a65bbc90890fa4532313beec1b1b422f7a5c81",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a5a65bbc90890fa4532313beec1b1b422f7a5c81",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a5a65bbc90890fa4532313beec1b1b422f7a5c81"
      },
      {
        "sha": "0205abd83d8f8dcbe453440a3fa4e494b71704e8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0205abd83d8f8dcbe453440a3fa4e494b71704e8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0205abd83d8f8dcbe453440a3fa4e494b71704e8"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 6,
      "deletions": 4
    },
    "files": [
      {
        "sha": "415f957811dd8434b2d8184c2785b3c4db1d68bb",
        "filename": "src/test/serialize_tests.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 4,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3d7c66d75de3e5d14332976a21573aa5d4c3a74c/src/test/serialize_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3d7c66d75de3e5d14332976a21573aa5d4c3a74c/src/test/serialize_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/serialize_tests.cpp?ref=3d7c66d75de3e5d14332976a21573aa5d4c3a74c",
        "patch": "@@ -61,11 +61,13 @@ BOOST_AUTO_TEST_CASE(compactsize)\n \n static bool isCanonicalException(const std::ios_base::failure& ex)\n {\n-    std::string strExplanatoryString(\"non-canonical ReadCompactSize()\");\n+    std::ios_base::failure expectedException(\"non-canonical ReadCompactSize()\");\n \n-    return strExplanatoryString == ex.what() ||\n-           // OSX Apple LLVM version 5.0 (OSX 10.9) \n-           strExplanatoryString + \": unspecified iostream_category error\" == ex.what();\n+    // The string returned by what() can be different for different platforms.\n+    // Instead of directly comparing the ex.what() with an expected string,\n+    // create an instance of exception to see if ex.what() matches \n+    // the expected explanatory string returned by the exception instance. \n+    return strcmp(expectedException.what(), ex.what()) == 0;\n }\n \n "
      }
    ]
  },
  {
    "sha": "4a61c39456b553f7de8ccc019276d40aff10dac0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0YTYxYzM5NDU2YjU1M2Y3ZGU4Y2NjMDE5Mjc2ZDQwYWZmMTBkYWMw",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-16T08:46:55Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-16T08:46:55Z"
      },
      "message": "qt: status WalletModel::Aborted is no longer used\n\nAborting transactions happens in the GUI now as it should,\nnot the backend.",
      "tree": {
        "sha": "9cd224195e4cc38973792da6aa12117e59070d13",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9cd224195e4cc38973792da6aa12117e59070d13"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4a61c39456b553f7de8ccc019276d40aff10dac0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4a61c39456b553f7de8ccc019276d40aff10dac0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4a61c39456b553f7de8ccc019276d40aff10dac0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4a61c39456b553f7de8ccc019276d40aff10dac0/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ca2c83da50a2665f238432834c0246f52b5e234c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ca2c83da50a2665f238432834c0246f52b5e234c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ca2c83da50a2665f238432834c0246f52b5e234c"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 3,
      "deletions": 5
    },
    "files": [
      {
        "sha": "4bf5c3c47983e8ec9f06267cf7dd4df1b6826683",
        "filename": "src/qt/sendcoinsdialog.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4a61c39456b553f7de8ccc019276d40aff10dac0/src/qt/sendcoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4a61c39456b553f7de8ccc019276d40aff10dac0/src/qt/sendcoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.cpp?ref=4a61c39456b553f7de8ccc019276d40aff10dac0",
        "patch": "@@ -452,9 +452,8 @@ void SendCoinsDialog::processSendCoinsReturn(const WalletModel::SendCoinsReturn\n         msgParams.first = tr(\"The transaction was rejected! This might happen if some of the coins in your wallet were already spent, such as if you used a copy of wallet.dat and coins were spent in the copy but not marked as spent here.\");\n         msgParams.second = CClientUIInterface::MSG_ERROR;\n         break;\n-    // OK and Aborted are included to prevent a compiler warning.\n+    // included to prevent a compiler warning.\n     case WalletModel::OK:\n-    case WalletModel::Aborted:\n     default:\n         return;\n     }"
      },
      {
        "sha": "642021df1a27b00206015ff700847b299931a2dc",
        "filename": "src/qt/walletmodel.h",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4a61c39456b553f7de8ccc019276d40aff10dac0/src/qt/walletmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4a61c39456b553f7de8ccc019276d40aff10dac0/src/qt/walletmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.h?ref=4a61c39456b553f7de8ccc019276d40aff10dac0",
        "patch": "@@ -75,8 +75,7 @@ class WalletModel : public QObject\n         AmountWithFeeExceedsBalance,\n         DuplicateAddress,\n         TransactionCreationFailed, // Error returned when wallet is still locked\n-        TransactionCommitFailed,\n-        Aborted\n+        TransactionCommitFailed\n     };\n \n     enum EncryptionStatus\n@@ -103,7 +102,7 @@ class WalletModel : public QObject\n     // Return status record for SendCoins, contains error id + information\n     struct SendCoinsReturn\n     {\n-        SendCoinsReturn(StatusCode status = Aborted):\n+        SendCoinsReturn(StatusCode status = OK):\n             status(status) {}\n         StatusCode status;\n     };"
      }
    ]
  },
  {
    "sha": "06eb2f215b0780a6deb5b37a1782cc707d64f474",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNmViMmYyMTViMDc4MGE2ZGViNWIzN2ExNzgyY2M3MDdkNjRmNDc0",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-16T09:21:16Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-16T09:23:39Z"
      },
      "message": "Seperate out wallet options in help message\n\nSeperate out the wallet options in HelpMessage, and\ndon't show them if compiled with --disable-wallet.\n\nAlso add documentation for `-disablewallet` option.",
      "tree": {
        "sha": "fbfe9e8d3913416f90807ea169d5ba7403b2a36b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fbfe9e8d3913416f90807ea169d5ba7403b2a36b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/06eb2f215b0780a6deb5b37a1782cc707d64f474",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/06eb2f215b0780a6deb5b37a1782cc707d64f474",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/06eb2f215b0780a6deb5b37a1782cc707d64f474",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/06eb2f215b0780a6deb5b37a1782cc707d64f474/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3d7c66d75de3e5d14332976a21573aa5d4c3a74c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3d7c66d75de3e5d14332976a21573aa5d4c3a74c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3d7c66d75de3e5d14332976a21573aa5d4c3a74c"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 10,
      "deletions": 9
    },
    "files": [
      {
        "sha": "ab57842f02f252ecb6cc723cca94ee565f1047a9",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 9,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06eb2f215b0780a6deb5b37a1782cc707d64f474/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06eb2f215b0780a6deb5b37a1782cc707d64f474/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=06eb2f215b0780a6deb5b37a1782cc707d64f474",
        "patch": "@@ -194,10 +194,8 @@ std::string HelpMessage(HelpMessageMode hmm)\n     strUsage += \"  -conf=<file>           \" + _(\"Specify configuration file (default: bitcoin.conf)\") + \"\\n\";\n     strUsage += \"  -datadir=<dir>         \" + _(\"Specify data directory\") + \"\\n\";\n     strUsage += \"  -testnet               \" + _(\"Use the test network\") + \"\\n\";\n-\n     strUsage += \"  -pid=<file>            \" + _(\"Specify pid file (default: bitcoind.pid)\") + \"\\n\";\n     strUsage += \"  -gen                   \" + _(\"Generate coins (default: 0)\") + \"\\n\";\n-    strUsage += \"  -wallet=<file>         \" + _(\"Specify wallet file (within data directory)\") + \"\\n\";\n     strUsage += \"  -dbcache=<n>           \" + _(\"Set database cache size in megabytes (default: 25)\") + \"\\n\";\n     strUsage += \"  -timeout=<n>           \" + _(\"Specify connection timeout in milliseconds (default: 5000)\") + \"\\n\";\n     strUsage += \"  -proxy=<ip:port>       \" + _(\"Connect through SOCKS proxy\") + \"\\n\";\n@@ -227,7 +225,6 @@ std::string HelpMessage(HelpMessageMode hmm)\n     strUsage += \"  -upnp                  \" + _(\"Use UPnP to map the listening port (default: 0)\") + \"\\n\";\n #endif\n #endif\n-    strUsage += \"  -paytxfee=<amt>        \" + _(\"Fee per kB to add to transactions you send\") + \"\\n\";\n     strUsage += \"  -debug=<category>      \" + _(\"Output debugging information (default: 0, supplying <category> is optional)\") + \"\\n\";\n     strUsage +=                               _(\"If <category> is not supplied, output all debugging information.\") + \"\\n\";\n     strUsage +=                               _(\"<category> can be:\");\n@@ -264,23 +261,27 @@ std::string HelpMessage(HelpMessageMode hmm)\n     strUsage += \"  -rpcuser=<user>        \" + _(\"Username for JSON-RPC connections\") + \"\\n\";\n     strUsage += \"  -rpcpassword=<pw>      \" + _(\"Password for JSON-RPC connections\") + \"\\n\";\n     strUsage += \"  -rpcport=<port>        \" + _(\"Listen for JSON-RPC connections on <port> (default: 8332 or testnet: 18332)\") + \"\\n\";\n-\n     strUsage += \"  -rpcallowip=<ip>       \" + _(\"Allow JSON-RPC connections from specified IP address\") + \"\\n\";\n     strUsage += \"  -rpcthreads=<n>        \" + _(\"Set the number of threads to service RPC calls (default: 4)\") + \"\\n\";\n     strUsage += \"  -blocknotify=<cmd>     \" + _(\"Execute command when the best block changes (%s in cmd is replaced by block hash)\") + \"\\n\";\n-    strUsage += \"  -walletnotify=<cmd>    \" + _(\"Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)\") + \"\\n\";\n     strUsage += \"  -alertnotify=<cmd>     \" + _(\"Execute command when a relevant alert is received or we see a really long fork (%s in cmd is replaced by message)\") + \"\\n\";\n-    strUsage += \"  -upgradewallet         \" + _(\"Upgrade wallet to latest format\") + \"\\n\";\n     strUsage += \"  -keypool=<n>           \" + _(\"Set key pool size to <n> (default: 100)\") + \"\\n\";\n-    strUsage += \"  -rescan                \" + _(\"Rescan the block chain for missing wallet transactions\") + \"\\n\";\n-    strUsage += \"  -salvagewallet         \" + _(\"Attempt to recover private keys from a corrupt wallet.dat\") + \"\\n\";\n     strUsage += \"  -checkblocks=<n>       \" + _(\"How many blocks to check at startup (default: 288, 0 = all)\") + \"\\n\";\n     strUsage += \"  -checklevel=<n>        \" + _(\"How thorough the block verification is (0-4, default: 3)\") + \"\\n\";\n     strUsage += \"  -txindex               \" + _(\"Maintain a full transaction index (default: 0)\") + \"\\n\";\n     strUsage += \"  -loadblock=<file>      \" + _(\"Imports blocks from external blk000??.dat file\") + \"\\n\";\n     strUsage += \"  -reindex               \" + _(\"Rebuild block chain index from current blk000??.dat files\") + \"\\n\";\n     strUsage += \"  -par=<n>               \" + _(\"Set the number of script verification threads (up to 16, 0 = auto, <0 = leave that many cores free, default: 0)\") + \"\\n\";\n-\n+#ifdef ENABLE_WALLET\n+    strUsage += \"\\n\" + _(\"Wallet options:\") + \"\\n\";\n+    strUsage += \"  -disablewallet         \" + _(\"Do not load the wallet and disable wallet RPC calls\") + \"\\n\";\n+    strUsage += \"  -paytxfee=<amt>        \" + _(\"Fee per kB to add to transactions you send\") + \"\\n\";\n+    strUsage += \"  -rescan                \" + _(\"Rescan the block chain for missing wallet transactions\") + \"\\n\";\n+    strUsage += \"  -salvagewallet         \" + _(\"Attempt to recover private keys from a corrupt wallet.dat\") + \"\\n\";\n+    strUsage += \"  -upgradewallet         \" + _(\"Upgrade wallet to latest format\") + \"\\n\";\n+    strUsage += \"  -wallet=<file>         \" + _(\"Specify wallet file (within data directory)\") + \"\\n\";\n+    strUsage += \"  -walletnotify=<cmd>    \" + _(\"Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)\") + \"\\n\";\n+#endif\n     strUsage += \"\\n\" + _(\"Block creation options:\") + \"\\n\";\n     strUsage += \"  -blockminsize=<n>      \" + _(\"Set minimum block size in bytes (default: 0)\") + \"\\n\";\n     strUsage += \"  -blockmaxsize=<n>      \" + strprintf(_(\"Set maximum block size in bytes (default: %d)\"), DEFAULT_BLOCK_MAX_SIZE) + \"\\n\";"
      }
    ]
  },
  {
    "sha": "2ed38d11a8fb133406201469bfd4fa9e8c926a8a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyZWQzOGQxMWE4ZmIxMzM0MDYyMDE0NjliZmQ0ZmE5ZThjOTI2YThh",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-16T11:23:19Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-16T11:23:31Z"
      },
      "message": "Merge pull request #3408\n\n22f0135 Rebrand to `Bitcoin Core` (Wladimir J. van der Laan)",
      "tree": {
        "sha": "2ef2d92b39764dcc62eb66e561211296ef4e9955",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2ef2d92b39764dcc62eb66e561211296ef4e9955"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2ed38d11a8fb133406201469bfd4fa9e8c926a8a",
      "comment_count": 1,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJSruKzAAoJEHSBCwEjRsmmvv0H/i35CYffphCHM/qIrn2Qw/1Y\nWevqstfKmn5nS/xPCpZqwje8+slX8uGqfon79oDS1OuSldqVnaRbBAE5tXYVI4j1\nARrULHNOloliiyisWY6LfmD/LPfKwTaxDDw8OW1x/XukXGiIi2vjc1Aa6P6eU4By\nn0aw6es3pKZ29cBfX7FKpQhWdYltad8x8+CbmeEkoQ5zU8ebeayTpNXfBdWMQqPM\nvL3ZEYn+UU2slrC+YVtLG0Wn/62bkaR8MHd/bj5sIjVyYKC01V+CpPp5tDyNbMGv\ngtPRQkabA36NPl5ehDB7lKCM7Hp1/7kOGOno8e+h+0bqW9PW0yiRS9YJPOPRVOE=\n=bMAw\n-----END PGP SIGNATURE-----",
        "payload": "tree 2ef2d92b39764dcc62eb66e561211296ef4e9955\nparent 3d7c66d75de3e5d14332976a21573aa5d4c3a74c\nparent 22f0135df0f6ee94c137d6c59209bdfbd93533fc\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1387192999 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1387193011 +0100\n\nMerge pull request #3408\n\n22f0135 Rebrand to `Bitcoin Core` (Wladimir J. van der Laan)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2ed38d11a8fb133406201469bfd4fa9e8c926a8a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2ed38d11a8fb133406201469bfd4fa9e8c926a8a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2ed38d11a8fb133406201469bfd4fa9e8c926a8a/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3d7c66d75de3e5d14332976a21573aa5d4c3a74c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3d7c66d75de3e5d14332976a21573aa5d4c3a74c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3d7c66d75de3e5d14332976a21573aa5d4c3a74c"
      },
      {
        "sha": "22f0135df0f6ee94c137d6c59209bdfbd93533fc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/22f0135df0f6ee94c137d6c59209bdfbd93533fc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/22f0135df0f6ee94c137d6c59209bdfbd93533fc"
      }
    ],
    "stats": {
      "total": 46,
      "additions": 23,
      "deletions": 23
    },
    "files": [
      {
        "sha": "c23d4a484e77d1aa0ece263c491dab483438207e",
        "filename": "doc/README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2ed38d11a8fb133406201469bfd4fa9e8c926a8a/doc/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2ed38d11a8fb133406201469bfd4fa9e8c926a8a/doc/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README.md?ref=2ed38d11a8fb133406201469bfd4fa9e8c926a8a",
        "patch": "@@ -6,7 +6,7 @@ Copyright (c) 2009-2013 Bitcoin Developers\n \n Setup\n ---------------------\n-[Bitcoin-Qt](http://bitcoin.org/en/download) is the original Bitcoin client and it builds the backbone of the network. However, it downloads and stores the entire history of Bitcoin transactions (which is currently several GBs); depending on the speed of your computer and network connection, the synchronization process can take anywhere from a few hours to a day or more. Thankfully you only have to do this once. If you would like the process to go faster you can [download the blockchain directly](https://bitcointalk.org/index.php?topic=145386.0).\n+[Bitcoin Core](http://bitcoin.org/en/download) is the original Bitcoin client and it builds the backbone of the network. However, it downloads and stores the entire history of Bitcoin transactions (which is currently several GBs); depending on the speed of your computer and network connection, the synchronization process can take anywhere from a few hours to a day or more. Thankfully you only have to do this once. If you would like the process to go faster you can [download the blockchain directly](https://bitcointalk.org/index.php?topic=145386.0).\n \n Running\n ---------------------"
      },
      {
        "sha": "f120b8eb2f63ed426f0ba4909eb71079da9f586d",
        "filename": "doc/README_windows.txt",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2ed38d11a8fb133406201469bfd4fa9e8c926a8a/doc/README_windows.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2ed38d11a8fb133406201469bfd4fa9e8c926a8a/doc/README_windows.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README_windows.txt?ref=2ed38d11a8fb133406201469bfd4fa9e8c926a8a",
        "patch": "@@ -20,7 +20,7 @@ Setup\n -----\r\n Unpack the files into a directory and run bitcoin-qt.exe.\r\n \r\n-Bitcoin-Qt is the original Bitcoin client and it builds the backbone of the network.\r\n+Bitcoin Core is the original Bitcoin client and it builds the backbone of the network.\r\n However, it downloads and stores the entire history of Bitcoin transactions;\r\n depending on the speed of your computer and network connection, the synchronization\r\n process can take anywhere from a few hours to a day or more.\r"
      },
      {
        "sha": "de71fde9bcf092f518768e999513db752f91d31c",
        "filename": "src/bitcoind.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2ed38d11a8fb133406201469bfd4fa9e8c926a8a/src/bitcoind.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2ed38d11a8fb133406201469bfd4fa9e8c926a8a/src/bitcoind.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoind.cpp?ref=2ed38d11a8fb133406201469bfd4fa9e8c926a8a",
        "patch": "@@ -78,7 +78,7 @@ bool AppInit(int argc, char* argv[])\n         if (mapArgs.count(\"-?\") || mapArgs.count(\"--help\"))\n         {\n             // First part of help message is specific to bitcoind / RPC client\n-            std::string strUsage = _(\"Bitcoin version\") + \" \" + FormatFullVersion() + \"\\n\\n\" +\n+            std::string strUsage = _(\"Bitcoin Core Daemon\") + \" \" + _(\"version\") + \" \" + FormatFullVersion() + \"\\n\\n\" +\n                 _(\"Usage:\") + \"\\n\" +\n                   \"  bitcoind [options]                     \" + _(\"Start Bitcoin server\") + \"\\n\" +\n                 _(\"Usage (deprecated, use bitcoin-cli):\") + \"\\n\" +"
      },
      {
        "sha": "dbdb34b76aff29d7837e12f13d2d2645e1d7c03f",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2ed38d11a8fb133406201469bfd4fa9e8c926a8a/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2ed38d11a8fb133406201469bfd4fa9e8c926a8a/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=2ed38d11a8fb133406201469bfd4fa9e8c926a8a",
        "patch": "@@ -162,14 +162,14 @@ static void initTranslations(QTranslator &qtTranslatorBase, QTranslator &qtTrans\n void DebugMessageHandler(QtMsgType type, const char *msg)\n {\n     Q_UNUSED(type);\n-    LogPrint(\"qt\", \"Bitcoin-Qt: %s\\n\", msg);\n+    LogPrint(\"qt\", \"GUI: %s\\n\", msg);\n }\n #else\n void DebugMessageHandler(QtMsgType type, const QMessageLogContext& context, const QString &msg)\n {\n     Q_UNUSED(type);\n     Q_UNUSED(context);\n-    LogPrint(\"qt\", \"Bitcoin-Qt: %s\\n\", qPrintable(msg));\n+    LogPrint(\"qt\", \"GUI: %s\\n\", qPrintable(msg));\n }\n #endif\n \n@@ -364,7 +364,7 @@ int main(int argc, char *argv[])\n                 guiref = 0;\n                 delete walletModel;\n             }\n-            // Shutdown the core and its threads, but don't exit Bitcoin-Qt here\n+            // Shutdown the core and its threads, but don't exit the GUI here\n             threadGroup.interrupt_all();\n             threadGroup.join_all();\n             Shutdown();"
      },
      {
        "sha": "5ffd3f89876d5918d6520876fef1dac0b4446ebe",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2ed38d11a8fb133406201469bfd4fa9e8c926a8a/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2ed38d11a8fb133406201469bfd4fa9e8c926a8a/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=2ed38d11a8fb133406201469bfd4fa9e8c926a8a",
        "patch": "@@ -71,7 +71,7 @@ BitcoinGUI::BitcoinGUI(bool fIsTestnet, QWidget *parent) :\n \n     if (!fIsTestnet)\n     {\n-        setWindowTitle(tr(\"Bitcoin\") + \" - \" + tr(\"Wallet\"));\n+        setWindowTitle(tr(\"Bitcoin Core\") + \" - \" + tr(\"Wallet\"));\n #ifndef Q_OS_MAC\n         QApplication::setWindowIcon(QIcon(\":icons/bitcoin\"));\n         setWindowIcon(QIcon(\":icons/bitcoin\"));\n@@ -81,7 +81,7 @@ BitcoinGUI::BitcoinGUI(bool fIsTestnet, QWidget *parent) :\n     }\n     else\n     {\n-        setWindowTitle(tr(\"Bitcoin\") + \" - \" + tr(\"Wallet\") + \" \" + tr(\"[testnet]\"));\n+        setWindowTitle(tr(\"Bitcoin Core\") + \" - \" + tr(\"Wallet\") + \" \" + tr(\"[testnet]\"));\n #ifndef Q_OS_MAC\n         QApplication::setWindowIcon(QIcon(\":icons/bitcoin_testnet\"));\n         setWindowIcon(QIcon(\":icons/bitcoin_testnet\"));\n@@ -229,9 +229,9 @@ void BitcoinGUI::createActions(bool fIsTestnet)\n     quitAction->setShortcut(QKeySequence(Qt::CTRL + Qt::Key_Q));\n     quitAction->setMenuRole(QAction::QuitRole);\n     if (!fIsTestnet)\n-        aboutAction = new QAction(QIcon(\":/icons/bitcoin\"), tr(\"&About Bitcoin\"), this);\n+        aboutAction = new QAction(QIcon(\":/icons/bitcoin\"), tr(\"&About Bitcoin Core\"), this);\n     else\n-        aboutAction = new QAction(QIcon(\":/icons/bitcoin_testnet\"), tr(\"&About Bitcoin\"), this);\n+        aboutAction = new QAction(QIcon(\":/icons/bitcoin_testnet\"), tr(\"&About Bitcoin Core\"), this);\n     aboutAction->setStatusTip(tr(\"Show information about Bitcoin\"));\n     aboutAction->setMenuRole(QAction::AboutRole);\n #if QT_VERSION < 0x050000"
      },
      {
        "sha": "10a5857cab45399e2eec4da89c2a2dfcc8cc2e4d",
        "filename": "src/qt/forms/aboutdialog.ui",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2ed38d11a8fb133406201469bfd4fa9e8c926a8a/src/qt/forms/aboutdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2ed38d11a8fb133406201469bfd4fa9e8c926a8a/src/qt/forms/aboutdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/aboutdialog.ui?ref=2ed38d11a8fb133406201469bfd4fa9e8c926a8a",
        "patch": "@@ -11,7 +11,7 @@\n    </rect>\n   </property>\n   <property name=\"windowTitle\">\n-   <string>About Bitcoin</string>\n+   <string>About Bitcoin Core</string>\n   </property>\n   <layout class=\"QHBoxLayout\" name=\"horizontalLayout_2\">\n    <item>\n@@ -50,7 +50,7 @@\n           <cursorShape>IBeamCursor</cursorShape>\n          </property>\n          <property name=\"text\">\n-          <string>&lt;b&gt;Bitcoin&lt;/b&gt; version</string>\n+          <string>&lt;b&gt;Bitcoin Core&lt;/b&gt; version</string>\n          </property>\n          <property name=\"textInteractionFlags\">\n           <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n@@ -91,7 +91,7 @@\n         <cursorShape>IBeamCursor</cursorShape>\n        </property>\n        <property name=\"text\">\n-        <string notr=\"true\">Copyright &amp;copy; 2009-YYYY The Bitcoin developers</string>\n+        <string notr=\"true\">Copyright &amp;copy; 2009-YYYY The Bitcoin Core developers</string>\n        </property>\n        <property name=\"textFormat\">\n         <enum>Qt::RichText</enum>"
      },
      {
        "sha": "05ee9466c4adfe8c53fce66ecc18c1343fda5309",
        "filename": "src/qt/forms/intro.ui",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2ed38d11a8fb133406201469bfd4fa9e8c926a8a/src/qt/forms/intro.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2ed38d11a8fb133406201469bfd4fa9e8c926a8a/src/qt/forms/intro.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/intro.ui?ref=2ed38d11a8fb133406201469bfd4fa9e8c926a8a",
        "patch": "@@ -20,7 +20,7 @@\n       <string notr=\"true\">QLabel { font-style:italic; }</string>\n      </property>\n      <property name=\"text\">\n-      <string>Welcome to Bitcoin-Qt.</string>\n+      <string>Welcome to Bitcoin Core.</string>\n      </property>\n      <property name=\"wordWrap\">\n       <bool>true</bool>\n@@ -46,7 +46,7 @@\n    <item>\n     <widget class=\"QLabel\" name=\"label_4\">\n      <property name=\"text\">\n-      <string>As this is the first time the program is launched, you can choose where Bitcoin-Qt will store its data.</string>\n+      <string>As this is the first time the program is launched, you can choose where Bitcoin Core will store its data.</string>\n      </property>\n      <property name=\"wordWrap\">\n       <bool>true</bool>\n@@ -56,7 +56,7 @@\n    <item>\n     <widget class=\"QLabel\" name=\"sizeWarningLabel\">\n      <property name=\"text\">\n-      <string>Bitcoin-Qt will download and store a copy of the Bitcoin block chain. At least %1GB of data will be stored in this directory, and it will grow over time. The wallet will also be stored in this directory.</string>\n+      <string>Bitcoin Core will download and store a copy of the Bitcoin block chain. At least %1GB of data will be stored in this directory, and it will grow over time. The wallet will also be stored in this directory.</string>\n      </property>\n      <property name=\"wordWrap\">\n       <bool>true</bool>"
      },
      {
        "sha": "36c0b881cad10c11bfbac1295af97030c542a527",
        "filename": "src/qt/forms/rpcconsole.ui",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2ed38d11a8fb133406201469bfd4fa9e8c926a8a/src/qt/forms/rpcconsole.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2ed38d11a8fb133406201469bfd4fa9e8c926a8a/src/qt/forms/rpcconsole.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/rpcconsole.ui?ref=2ed38d11a8fb133406201469bfd4fa9e8c926a8a",
        "patch": "@@ -348,7 +348,7 @@\n        <item row=\"17\" column=\"0\">\n         <widget class=\"QPushButton\" name=\"showCLOptionsButton\">\n          <property name=\"toolTip\">\n-          <string>Show the Bitcoin-Qt help message to get a list with possible Bitcoin command-line options.</string>\n+          <string>Show the Bitcoin-Core help message to get a list with possible Bitcoin command-line options.</string>\n          </property>\n          <property name=\"text\">\n           <string>&amp;Show</string>"
      },
      {
        "sha": "309d08d07951a7086394a39198e474cf49c6b95d",
        "filename": "src/qt/guiutil.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2ed38d11a8fb133406201469bfd4fa9e8c926a8a/src/qt/guiutil.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2ed38d11a8fb133406201469bfd4fa9e8c926a8a/src/qt/guiutil.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.cpp?ref=2ed38d11a8fb133406201469bfd4fa9e8c926a8a",
        "patch": "@@ -594,7 +594,7 @@ void restoreWindowGeometry(const QString& strSetting, const QSize& defaultSize,\n HelpMessageBox::HelpMessageBox(QWidget *parent) :\n     QMessageBox(parent)\n {\n-    header = tr(\"Bitcoin-Qt\") + \" \" + tr(\"version\") + \" \" +\n+    header = tr(\"Bitcoin Core\") + tr(\"version\") + \" \" +\n         QString::fromStdString(FormatFullVersion()) + \"\\n\\n\" +\n         tr(\"Usage:\") + \"\\n\" +\n         \"  bitcoin-qt [\" + tr(\"command-line options\") + \"]                     \" + \"\\n\";\n@@ -607,7 +607,7 @@ HelpMessageBox::HelpMessageBox(QWidget *parent) :\n         \"  -splash                \" + tr(\"Show splash screen on startup (default: 1)\") + \"\\n\" +\n         \"  -choosedatadir         \" + tr(\"Choose data directory on startup (default: 0)\") + \"\\n\";\n \n-    setWindowTitle(tr(\"Bitcoin-Qt\"));\n+    setWindowTitle(tr(\"Bitcoin Core\"));\n     setTextFormat(Qt::PlainText);\n     // setMinimumWidth is ignored for QMessageBox so put in non-breaking spaces to make it wider.\n     setText(header + QString(QChar(0x2003)).repeated(50));"
      },
      {
        "sha": "ee23ae9b78e7cfa2b59e10039b31cf5d9e274968",
        "filename": "src/qt/res/bitcoin-qt-res.rc",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2ed38d11a8fb133406201469bfd4fa9e8c926a8a/src/qt/res/bitcoin-qt-res.rc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2ed38d11a8fb133406201469bfd4fa9e8c926a8a/src/qt/res/bitcoin-qt-res.rc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/bitcoin-qt-res.rc?ref=2ed38d11a8fb133406201469bfd4fa9e8c926a8a",
        "patch": "@@ -21,13 +21,13 @@ BEGIN\n         BLOCK \"040904E4\" // U.S. English - multilingual (hex)\n         BEGIN\n             VALUE \"CompanyName\",        \"Bitcoin\"\n-            VALUE \"FileDescription\",    \"Bitcoin-Qt (OSS GUI client for Bitcoin)\"\n+            VALUE \"FileDescription\",    \"Bitcoin Core (OSS GUI client for Bitcoin)\"\n             VALUE \"FileVersion\",        VER_FILEVERSION_STR\n             VALUE \"InternalName\",       \"bitcoin-qt\"\n             VALUE \"LegalCopyright\",     COPYRIGHT_STR\n             VALUE \"LegalTrademarks1\",   \"Distributed under the MIT/X11 software license, see the accompanying file COPYING or http://www.opensource.org/licenses/mit-license.php.\"\n             VALUE \"OriginalFilename\",   \"bitcoin-qt.exe\"\n-            VALUE \"ProductName\",        \"Bitcoin-Qt\"\n+            VALUE \"ProductName\",        \"Bitcoin Core\"\n             VALUE \"ProductVersion\",     VER_PRODUCTVERSION_STR\n         END\n     END"
      },
      {
        "sha": "4528c3477c8d0d6160ba832b36473a15449ed84d",
        "filename": "src/qt/splashscreen.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2ed38d11a8fb133406201469bfd4fa9e8c926a8a/src/qt/splashscreen.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2ed38d11a8fb133406201469bfd4fa9e8c926a8a/src/qt/splashscreen.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/splashscreen.cpp?ref=2ed38d11a8fb133406201469bfd4fa9e8c926a8a",
        "patch": "@@ -23,9 +23,9 @@ SplashScreen::SplashScreen(const QPixmap &pixmap, Qt::WindowFlags f) :\n     float fontFactor            = 1.0;\n \n     // define text to place\n-    QString titleText       = QString(QApplication::applicationName()).replace(QString(\"-testnet\"), QString(\"\"), Qt::CaseSensitive); // cut of testnet, place it as single object further down\n+    QString titleText       = tr(\"Bitcoin Core\");\n     QString versionText     = QString(\"Version %1\").arg(QString::fromStdString(FormatFullVersion()));\n-    QString copyrightText   = QChar(0xA9)+QString(\" 2009-%1 \").arg(COPYRIGHT_YEAR) + QString(tr(\"The Bitcoin developers\"));\n+    QString copyrightText   = QChar(0xA9)+QString(\" 2009-%1 \").arg(COPYRIGHT_YEAR) + QString(tr(\"The Bitcoin Core developers\"));\n     QString testnetAddText  = QString(tr(\"[testnet]\")); // define text to place as single text object\n \n     QString font            = \"Arial\";"
      }
    ]
  },
  {
    "sha": "88ba2643f0b95ef38f27727ee7be6489edfd8718",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4OGJhMjY0M2YwYjk1ZWYzOGYyNzcyN2VlN2JlNjQ4OWVkZmQ4NzE4",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-16T11:24:43Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-16T11:25:25Z"
      },
      "message": "qt: Update English language file for translators",
      "tree": {
        "sha": "ff0d871056426653bd70bdbed4178ebdf227540b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ff0d871056426653bd70bdbed4178ebdf227540b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/88ba2643f0b95ef38f27727ee7be6489edfd8718",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/88ba2643f0b95ef38f27727ee7be6489edfd8718",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/88ba2643f0b95ef38f27727ee7be6489edfd8718",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/88ba2643f0b95ef38f27727ee7be6489edfd8718/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2ed38d11a8fb133406201469bfd4fa9e8c926a8a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2ed38d11a8fb133406201469bfd4fa9e8c926a8a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2ed38d11a8fb133406201469bfd4fa9e8c926a8a"
      }
    ],
    "stats": {
      "total": 1474,
      "additions": 1038,
      "deletions": 436
    },
    "files": [
      {
        "sha": "183a98061d04f76b64817402100b1c492d135c31",
        "filename": "src/qt/bitcoinstrings.cpp",
        "status": "modified",
        "additions": 18,
        "deletions": 11,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/88ba2643f0b95ef38f27727ee7be6489edfd8718/src/qt/bitcoinstrings.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/88ba2643f0b95ef38f27727ee7be6489edfd8718/src/qt/bitcoinstrings.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoinstrings.cpp?ref=88ba2643f0b95ef38f27727ee7be6489edfd8718",
        "patch": "@@ -61,8 +61,9 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Number of seconds to keep misbehaving peers from reconnecting (default: \"\n \"86400)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n-\"Set maximum size of high-priority/low-fee transactions in bytes (default: \"\n-\"27000)\"),\n+\"Output debugging information (default: 0, supplying <category> is optional)\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n+\"Set maximum size of high-priority/low-fee transactions in bytes (default: %d)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Set the number of script verification threads (up to 16, 0 = auto, <0 = \"\n \"leave that many cores free, default: 0)\"),\n@@ -72,6 +73,9 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Unable to bind to %s on this computer. Bitcoin is probably already running.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n+\"Use separate SOCKS5 proxy to reach peers via Tor hidden services (default: -\"\n+\"proxy)\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Warning: -paytxfee is set very high! This is the transaction fee you will \"\n \"pay if you send a transaction.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n@@ -95,21 +99,22 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"%s\\n\"\n \"If the file does not exist, create it with owner-readable-only file \"\n \"permissions.\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"<category> can be:\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Accept command line and JSON-RPC commands\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Accept connections from outside (default: 1 if no -proxy or -connect)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Add a node to connect to and attempt to keep the connection open\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Allow DNS lookups for -addnode, -seednode and -connect\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Allow JSON-RPC connections from specified IP address\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Attempt to recover private keys from a corrupt wallet.dat\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Bitcoin Core Daemon\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Bitcoin RPC client version\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Bitcoin version\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Block creation options:\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Cannot downgrade wallet\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Cannot resolve -bind address: '%s'\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Cannot resolve -externalip address: '%s'\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Cannot write default address\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Connect only to the specified node(s)\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Connect through socks proxy\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Connect through SOCKS proxy\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Connect to JSON-RPC on <port> (default: 8332 or testnet: 18332)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Connect to a node to retrieve peer addresses, and disconnect\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Corrupted block database detected\"),\n@@ -138,12 +143,13 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Failed to write file info\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Failed to write to coin database\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Failed to write transaction index\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Failed to write undo data\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Fee per KB to add to transactions you send\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Fee per kB to add to transactions you send\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Find peers using DNS lookup (default: 1 unless -connect)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Generate coins (default: 0)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Get help for a command\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"How many blocks to check at startup (default: 288, 0 = all)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"How thorough the block verification is (0-4, default: 3)\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"If <category> is not supplied, output all debugging information.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Imports blocks from external blk000??.dat file\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Incorrect or no genesis block found. Wrong datadir for network?\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Information\"),\n@@ -167,16 +173,15 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Not enough file descriptors available.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Only accept block chain matching built-in checkpoints (default: 1)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Only connect to nodes in network <net> (IPv4, IPv6 or Tor)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Options:\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Output extra debugging information. Implies all other -debug* options\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Output extra network debugging information\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Password for JSON-RPC connections\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Prepend debug output with timestamp\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Prepend debug output with timestamp (default: 1)\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"RPC client options:\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Rebuild block chain index from current blk000??.dat files\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Rescan the block chain for missing wallet transactions\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Rescanning...\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Run in the background as a daemon and accept commands\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"SSL options: (see the Bitcoin Wiki for SSL setup instructions)\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Select the version of socks proxy to use (4-5, default: 5)\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Select SOCKS version for -proxy (4 or 5, default: 5)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Send command to Bitcoin server\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Send commands to node running on <ip> (default: 127.0.0.1)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Send trace/debug info to console instead of debug.log file\"),\n@@ -185,7 +190,7 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Server certificate file (default: server.cert\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Server private key (default: server.pem)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Set database cache size in megabytes (default: 25)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Set key pool size to <n> (default: 100)\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Set maximum block size in bytes (default: 250000)\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Set maximum block size in bytes (default: %d)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Set minimum block size in bytes (default: 0)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Set the number of threads to service RPC calls (default: 4)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Shrink debug.log file on client startup (default: 1 when no -debug)\"),\n@@ -213,15 +218,17 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Usage:\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Use OpenSSL (https) for JSON-RPC connections\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Use UPnP to map the listening port (default: 0)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Use UPnP to map the listening port (default: 1 when listening)\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Use proxy to reach tor hidden services (default: same as -proxy)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Use the test network\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Username for JSON-RPC connections\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Verifying blocks...\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Verifying wallet...\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Wait for RPC server to start\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Wallet %s resides outside data directory %s\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Wallet needed to be rewritten: restart Bitcoin to complete\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Warning\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Warning: Deprecated argument -debugnet ignored, use -debug=net\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Warning: This version is obsolete, upgrade required!\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"You need to rebuild the database using -reindex to change -txindex\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"version\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"wallet.dat corrupt, salvage failed\"),\n };"
      },
      {
        "sha": "368a4d600318c8ed33f1bc295adfcae7ff4cc80a",
        "filename": "src/qt/locale/bitcoin_en.ts",
        "status": "modified",
        "additions": 1020,
        "deletions": 425,
        "changes": 1445,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/88ba2643f0b95ef38f27727ee7be6489edfd8718/src/qt/locale/bitcoin_en.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/88ba2643f0b95ef38f27727ee7be6489edfd8718/src/qt/locale/bitcoin_en.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_en.ts?ref=88ba2643f0b95ef38f27727ee7be6489edfd8718",
        "patch": "@@ -5,13 +5,13 @@\n     <name>AboutDialog</name>\n     <message>\n         <location filename=\"../forms/aboutdialog.ui\" line=\"+14\"/>\n-        <source>About Bitcoin</source>\n-        <translation>About Bitcoin</translation>\n+        <source>About Bitcoin Core</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n         <location line=\"+39\"/>\n-        <source>&lt;b&gt;Bitcoin&lt;/b&gt; version</source>\n-        <translation>&lt;b&gt;Bitcoin&lt;/b&gt; version</translation>\n+        <source>&lt;b&gt;Bitcoin Core&lt;/b&gt; version</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n         <location line=\"+57\"/>\n@@ -29,7 +29,7 @@ Distributed under the MIT/X11 software license, see the accompanying file COPYIN\n This product includes software developed by the OpenSSL Project for use in the OpenSSL Toolkit (http://www.openssl.org/) and cryptographic software written by Eric Young (eay@cryptsoft.com) and UPnP software written by Thomas Bernard.</translation>\n     </message>\n     <message>\n-        <location filename=\"../aboutdialog.cpp\" line=\"+14\"/>\n+        <location filename=\"../aboutdialog.cpp\" line=\"+19\"/>\n         <source>Copyright</source>\n         <translation>Copyright</translation>\n     </message>\n@@ -72,7 +72,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../addressbookpage.cpp\" line=\"+72\"/>\n+        <location filename=\"../addressbookpage.cpp\" line=\"+74\"/>\n         <source>&amp;Copy Address</source>\n         <translation>&amp;Copy Address</translation>\n     </message>\n@@ -142,7 +142,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation>&amp;Edit</translation>\n     </message>\n     <message>\n-        <location line=\"+197\"/>\n+        <location line=\"+194\"/>\n         <source>Export Address List</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -165,7 +165,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n <context>\n     <name>AddressTableModel</name>\n     <message>\n-        <location filename=\"../addresstablemodel.cpp\" line=\"+164\"/>\n+        <location filename=\"../addresstablemodel.cpp\" line=\"+168\"/>\n         <source>Label</source>\n         <translation>Label</translation>\n     </message>\n@@ -203,7 +203,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation>Repeat new passphrase</translation>\n     </message>\n     <message>\n-        <location filename=\"../askpassphrasedialog.cpp\" line=\"+34\"/>\n+        <location filename=\"../askpassphrasedialog.cpp\" line=\"+40\"/>\n         <source>Enter the new passphrase to the wallet.&lt;br/&gt;Please use a passphrase of &lt;b&gt;10 or more random characters&lt;/b&gt;, or &lt;b&gt;eight or more words&lt;/b&gt;.</source>\n         <translation>Enter the new passphrase to the wallet.&lt;br/&gt;Please use a passphrase of &lt;b&gt;10 or more random characters&lt;/b&gt;, or &lt;b&gt;eight or more words&lt;/b&gt;.</translation>\n     </message>\n@@ -324,17 +324,17 @@ This product includes software developed by the OpenSSL Project for use in the O\n <context>\n     <name>BitcoinGUI</name>\n     <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"+250\"/>\n+        <location filename=\"../bitcoingui.cpp\" line=\"+260\"/>\n         <source>Sign &amp;message...</source>\n         <translation>Sign &amp;message...</translation>\n     </message>\n     <message>\n-        <location line=\"+254\"/>\n+        <location line=\"+290\"/>\n         <source>Synchronizing with network...</source>\n         <translation>Synchronizing with network...</translation>\n     </message>\n     <message>\n-        <location line=\"-324\"/>\n+        <location line=\"-360\"/>\n         <source>&amp;Overview</source>\n         <translation>&amp;Overview</translation>\n     </message>\n@@ -400,7 +400,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation>&amp;Change Passphrase...</translation>\n     </message>\n     <message>\n-        <location line=\"+259\"/>\n+        <location line=\"+295\"/>\n         <source>Importing blocks from disk...</source>\n         <translation>Importing blocks from disk...</translation>\n     </message>\n@@ -410,7 +410,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation>Reindexing blocks on disk...</translation>\n     </message>\n     <message>\n-        <location line=\"-322\"/>\n+        <location line=\"-358\"/>\n         <source>Send coins to a Bitcoin address</source>\n         <translation>Send coins to a Bitcoin address</translation>\n     </message>\n@@ -445,20 +445,18 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation>&amp;Verify message...</translation>\n     </message>\n     <message>\n-        <location line=\"-180\"/>\n-        <location line=\"+6\"/>\n-        <location line=\"+513\"/>\n+        <location line=\"+375\"/>\n         <source>Bitcoin</source>\n         <translation>Bitcoin</translation>\n     </message>\n     <message>\n-        <location line=\"-519\"/>\n-        <location line=\"+6\"/>\n+        <location line=\"-563\"/>\n+        <location line=\"+10\"/>\n         <source>Wallet</source>\n         <translation>Wallet</translation>\n     </message>\n     <message>\n-        <location line=\"+109\"/>\n+        <location line=\"+113\"/>\n         <source>&amp;Send</source>\n         <translation>&amp;Send</translation>\n     </message>\n@@ -468,13 +466,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation>&amp;Receive</translation>\n     </message>\n     <message>\n-        <location line=\"+28\"/>\n-        <location line=\"+2\"/>\n-        <source>&amp;About Bitcoin</source>\n-        <translation>&amp;About Bitcoin</translation>\n-    </message>\n-    <message>\n-        <location line=\"+14\"/>\n+        <location line=\"+44\"/>\n         <location line=\"+2\"/>\n         <source>&amp;Show / Hide</source>\n         <translation>&amp;Show / Hide</translation>\n@@ -500,12 +492,12 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation>Verify messages to ensure they were signed with specified Bitcoin addresses</translation>\n     </message>\n     <message>\n-        <location line=\"+35\"/>\n+        <location line=\"+39\"/>\n         <source>&amp;File</source>\n         <translation>&amp;File</translation>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n+        <location line=\"+11\"/>\n         <source>&amp;Settings</source>\n         <translation>&amp;Settings</translation>\n     </message>\n@@ -520,18 +512,30 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation>Tabs toolbar</translation>\n     </message>\n     <message>\n-        <location line=\"-235\"/>\n-        <location line=\"+294\"/>\n+        <location line=\"-244\"/>\n+        <location line=\"+321\"/>\n         <source>[testnet]</source>\n         <translation>[testnet]</translation>\n     </message>\n     <message>\n-        <location line=\"-177\"/>\n+        <location line=\"-331\"/>\n+        <location line=\"+10\"/>\n+        <source>Bitcoin Core</source>\n+        <translation type=\"unfinished\">Bitcoin Core</translation>\n+    </message>\n+    <message>\n+        <location line=\"+121\"/>\n         <source>Request payments (generates QR codes and bitcoin: URIs)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+63\"/>\n+        <location line=\"+27\"/>\n+        <location line=\"+2\"/>\n+        <source>&amp;About Bitcoin Core</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+34\"/>\n         <source>&amp;Used sending addresses...</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -551,13 +555,23 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+106\"/>\n+        <location line=\"+2\"/>\n+        <source>Open URI...</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Open a bitcoin: URI or payment request</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+126\"/>\n         <location line=\"+5\"/>\n         <source>Bitcoin client</source>\n         <translation>Bitcoin client</translation>\n     </message>\n     <message numerus=\"yes\">\n-        <location line=\"+120\"/>\n+        <location line=\"+133\"/>\n         <source>%n active connection(s) to Bitcoin network</source>\n         <translation>\n             <numerusform>%n active connection to Bitcoin network</numerusform>\n@@ -677,17 +691,7 @@ Address: %4\n </translation>\n     </message>\n     <message>\n-        <location line=\"+34\"/>\n-        <source>URI handling</source>\n-        <translation>URI handling</translation>\n-    </message>\n-    <message>\n-        <location line=\"+0\"/>\n-        <source>URI can not be parsed! This can be caused by an invalid Bitcoin address or malformed URI parameters.</source>\n-        <translation>URI can not be parsed! This can be caused by an invalid Bitcoin address or malformed URI parameters.</translation>\n-    </message>\n-    <message>\n-        <location line=\"+45\"/>\n+        <location line=\"+67\"/>\n         <source>Wallet is &lt;b&gt;encrypted&lt;/b&gt; and currently &lt;b&gt;unlocked&lt;/b&gt;</source>\n         <translation>Wallet is &lt;b&gt;encrypted&lt;/b&gt; and currently &lt;b&gt;unlocked&lt;/b&gt;</translation>\n     </message>\n@@ -697,256 +701,581 @@ Address: %4\n         <translation>Wallet is &lt;b&gt;encrypted&lt;/b&gt; and currently &lt;b&gt;locked&lt;/b&gt;</translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoin.cpp\" line=\"+110\"/>\n+        <location filename=\"../bitcoin.cpp\" line=\"+116\"/>\n         <source>A fatal error occurred. Bitcoin can no longer continue safely and will quit.</source>\n         <translation>A fatal error occurred. Bitcoin can no longer continue safely and will quit.</translation>\n     </message>\n </context>\n <context>\n     <name>ClientModel</name>\n     <message>\n-        <location filename=\"../clientmodel.cpp\" line=\"+115\"/>\n+        <location filename=\"../clientmodel.cpp\" line=\"+119\"/>\n         <source>Network Alert</source>\n         <translation>Network Alert</translation>\n     </message>\n </context>\n <context>\n-    <name>EditAddressDialog</name>\n+    <name>CoinControlDialog</name>\n     <message>\n-        <location filename=\"../forms/editaddressdialog.ui\" line=\"+14\"/>\n-        <source>Edit Address</source>\n-        <translation>Edit Address</translation>\n+        <location filename=\"../forms/coincontroldialog.ui\" line=\"+14\"/>\n+        <source>Coin Control Address Selection</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+11\"/>\n-        <source>&amp;Label</source>\n-        <translation>&amp;Label</translation>\n+        <location line=\"+34\"/>\n+        <source>Quantity:</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n-        <source>The label associated with this address list entry</source>\n+        <location line=\"+29\"/>\n+        <source>Bytes:</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+17\"/>\n-        <source>The address associated with this address list entry. This can only be modified for sending addresses.</source>\n+        <location line=\"+45\"/>\n+        <source>Amount:</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"-10\"/>\n-        <source>&amp;Address</source>\n-        <translation>&amp;Address</translation>\n+        <location line=\"+29\"/>\n+        <source>Priority:</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../editaddressdialog.cpp\" line=\"+21\"/>\n-        <source>New receiving address</source>\n-        <translation>New receiving address</translation>\n+        <location line=\"+45\"/>\n+        <source>Fee:</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n-        <source>New sending address</source>\n-        <translation>New sending address</translation>\n+        <location line=\"+32\"/>\n+        <source>Low Output:</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+3\"/>\n-        <source>Edit receiving address</source>\n-        <translation>Edit receiving address</translation>\n+        <location line=\"+48\"/>\n+        <source>After Fee:</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n-        <source>Edit sending address</source>\n-        <translation>Edit sending address</translation>\n+        <location line=\"+32\"/>\n+        <source>Change:</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+76\"/>\n-        <source>The entered address &quot;%1&quot; is already in the address book.</source>\n-        <translation>The entered address &quot;%1&quot; is already in the address book.</translation>\n+        <location line=\"+63\"/>\n+        <source>(un)select all</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"-5\"/>\n-        <source>The entered address &quot;%1&quot; is not a valid Bitcoin address.</source>\n-        <translation>The entered address &quot;%1&quot; is not a valid Bitcoin address.</translation>\n+        <location line=\"+13\"/>\n+        <source>Tree mode</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+16\"/>\n+        <source>List mode</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+52\"/>\n+        <source>Amount</source>\n+        <translation type=\"unfinished\">Amount</translation>\n     </message>\n     <message>\n         <location line=\"+10\"/>\n-        <source>Could not unlock wallet.</source>\n-        <translation>Could not unlock wallet.</translation>\n+        <source>Address</source>\n+        <translation type=\"unfinished\">Address</translation>\n     </message>\n     <message>\n         <location line=\"+5\"/>\n-        <source>New key generation failed.</source>\n-        <translation>New key generation failed.</translation>\n+        <source>Date</source>\n+        <translation type=\"unfinished\">Date</translation>\n     </message>\n-</context>\n-<context>\n-    <name>FreespaceChecker</name>\n     <message>\n-        <location filename=\"../intro.cpp\" line=\"+61\"/>\n-        <source>A new data directory will be created.</source>\n-        <translation>A new data directory will be created.</translation>\n+        <location line=\"+5\"/>\n+        <source>Confirmations</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+22\"/>\n-        <source>name</source>\n-        <translation>name</translation>\n+        <location line=\"+3\"/>\n+        <source>Confirmed</source>\n+        <translation type=\"unfinished\">Confirmed</translation>\n     </message>\n     <message>\n-        <location line=\"+2\"/>\n-        <source>Directory already exists. Add %1 if you intend to create a new directory here.</source>\n-        <translation>Directory already exists. Add %1 if you intend to create a new directory here.</translation>\n+        <location line=\"+5\"/>\n+        <source>Priority</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+3\"/>\n-        <source>Path already exists, and is not a directory.</source>\n-        <translation>Path already exists, and is not a directory.</translation>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"+42\"/>\n+        <source>Copy address</source>\n+        <translation type=\"unfinished\">Copy address</translation>\n     </message>\n     <message>\n-        <location line=\"+7\"/>\n-        <source>Cannot create data directory here.</source>\n-        <translation>Cannot create data directory here.</translation>\n+        <location line=\"+1\"/>\n+        <source>Copy label</source>\n+        <translation type=\"unfinished\">Copy label</translation>\n     </message>\n-</context>\n-<context>\n-    <name>GUIUtil::HelpMessageBox</name>\n     <message>\n-        <location filename=\"../guiutil.cpp\" line=\"+558\"/>\n-        <location line=\"+13\"/>\n-        <source>Bitcoin-Qt</source>\n-        <translation>Bitcoin-Qt</translation>\n+        <location line=\"+1\"/>\n+        <location line=\"+26\"/>\n+        <source>Copy amount</source>\n+        <translation type=\"unfinished\">Copy amount</translation>\n     </message>\n     <message>\n-        <location line=\"-13\"/>\n-        <source>version</source>\n-        <translation>version</translation>\n+        <location line=\"-25\"/>\n+        <source>Copy transaction ID</source>\n+        <translation type=\"unfinished\">Copy transaction ID</translation>\n     </message>\n     <message>\n-        <location line=\"+2\"/>\n-        <source>Usage:</source>\n-        <translation>Usage:</translation>\n+        <location line=\"+1\"/>\n+        <source>Lock unspent</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n         <location line=\"+1\"/>\n-        <source>command-line options</source>\n-        <translation>command-line options</translation>\n+        <source>Unlock unspent</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n-        <source>UI options</source>\n-        <translation>UI options</translation>\n+        <location line=\"+22\"/>\n+        <source>Copy quantity</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+1\"/>\n-        <source>Set language, for example &quot;de_DE&quot; (default: system locale)</source>\n-        <translation>Set language, for example &quot;de_DE&quot; (default: system locale)</translation>\n+        <location line=\"+2\"/>\n+        <source>Copy fee</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n         <location line=\"+1\"/>\n-        <source>Start minimized</source>\n-        <translation>Start minimized</translation>\n+        <source>Copy after fee</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n         <location line=\"+1\"/>\n-        <source>Show splash screen on startup (default: 1)</source>\n-        <translation>Show splash screen on startup (default: 1)</translation>\n+        <source>Copy bytes</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n         <location line=\"+1\"/>\n-        <source>Choose data directory on startup (default: 0)</source>\n-        <translation>Choose data directory on startup (default: 0)</translation>\n+        <source>Copy priority</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n-</context>\n-<context>\n-    <name>Intro</name>\n     <message>\n-        <location filename=\"../forms/intro.ui\" line=\"+14\"/>\n-        <source>Welcome</source>\n-        <translation>Welcome</translation>\n+        <location line=\"+1\"/>\n+        <source>Copy low output</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+9\"/>\n-        <source>Welcome to Bitcoin-Qt.</source>\n-        <translation>Welcome to Bitcoin-Qt.</translation>\n+        <location line=\"+1\"/>\n+        <source>Copy change</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+26\"/>\n-        <source>As this is the first time the program is launched, you can choose where Bitcoin-Qt will store its data.</source>\n-        <translation>As this is the first time the program is launched, you can choose where Bitcoin-Qt will store its data.</translation>\n+        <location line=\"+323\"/>\n+        <source>highest</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n-        <source>Bitcoin-Qt will download and store a copy of the Bitcoin block chain. At least %1GB of data will be stored in this directory, and it will grow over time. The wallet will also be stored in this directory.</source>\n-        <translation>Bitcoin-Qt will download and store a copy of the Bitcoin block chain. At least %1GB of data will be stored in this directory, and it will grow over time. The wallet will also be stored in this directory.</translation>\n+        <location line=\"+1\"/>\n+        <source>higher</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n-        <source>Use the default data directory</source>\n-        <translation>Use the default data directory</translation>\n+        <location line=\"+1\"/>\n+        <source>high</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+7\"/>\n-        <source>Use a custom data directory:</source>\n-        <translation>Use a custom data directory:</translation>\n+        <location line=\"+1\"/>\n+        <source>medium-high</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../intro.cpp\" line=\"+105\"/>\n-        <source>Error</source>\n-        <translation>Error</translation>\n+        <location line=\"+1\"/>\n+        <source>medium</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+9\"/>\n-        <source>GB of free space available</source>\n-        <translation>GB of free space available</translation>\n+        <location line=\"+4\"/>\n+        <source>low-medium</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+3\"/>\n-        <source>(of %1GB needed)</source>\n-        <translation>(of %1GB needed)</translation>\n+        <location line=\"+1\"/>\n+        <source>low</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n-</context>\n-<context>\n-    <name>OptionsDialog</name>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"+14\"/>\n-        <source>Options</source>\n-        <translation>Options</translation>\n+        <location line=\"+1\"/>\n+        <source>lower</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+16\"/>\n-        <source>&amp;Main</source>\n-        <translation>&amp;Main</translation>\n+        <location line=\"+1\"/>\n+        <source>lowest</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+6\"/>\n-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB.</source>\n-        <translation>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB.</translation>\n+        <location line=\"+11\"/>\n+        <source>(%1 locked)</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+15\"/>\n-        <source>Pay transaction &amp;fee</source>\n-        <translation>Pay transaction &amp;fee</translation>\n+        <location line=\"+171\"/>\n+        <source>Dust</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+31\"/>\n-        <source>Automatically start Bitcoin after logging in to the system.</source>\n-        <translation>Automatically start Bitcoin after logging in to the system.</translation>\n+        <location line=\"+0\"/>\n+        <source>yes</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+3\"/>\n-        <source>&amp;Start Bitcoin on system login</source>\n-        <translation>&amp;Start Bitcoin on system login</translation>\n+        <location line=\"+0\"/>\n+        <source>no</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+35\"/>\n-        <source>Reset all client options to default.</source>\n-        <translation>Reset all client options to default.</translation>\n+        <location line=\"+10\"/>\n+        <source>This label turns red, if the transaction size is greater than 1000 bytes.</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+3\"/>\n-        <source>&amp;Reset Options</source>\n-        <translation>&amp;Reset Options</translation>\n+        <location line=\"+1\"/>\n+        <location line=\"+5\"/>\n+        <source>This means a fee of at least %1 per kB is required.</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+13\"/>\n+        <location line=\"-4\"/>\n+        <source>Can vary +/- 1 byte per input.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+2\"/>\n+        <source>Transactions with higher priority are more likely to get included into a block.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>This label turns red, if the priority is smaller than &quot;medium&quot;</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>This label turns red, if any recipient receives an amount smaller than %1.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <location line=\"+4\"/>\n+        <source>This means a fee of at least %1 is required.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"-3\"/>\n+        <source>Amounts below 0.546 times the minimum relay fee are shown as dust.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+2\"/>\n+        <source>This label turns red, if the change is smaller than %1.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+43\"/>\n+        <location line=\"+66\"/>\n+        <source>(no label)</source>\n+        <translation type=\"unfinished\">(no label)</translation>\n+    </message>\n+    <message>\n+        <location line=\"-9\"/>\n+        <source>change from %1 (%2)</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>(change)</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+</context>\n+<context>\n+    <name>EditAddressDialog</name>\n+    <message>\n+        <location filename=\"../forms/editaddressdialog.ui\" line=\"+14\"/>\n+        <source>Edit Address</source>\n+        <translation>Edit Address</translation>\n+    </message>\n+    <message>\n+        <location line=\"+11\"/>\n+        <source>&amp;Label</source>\n+        <translation>&amp;Label</translation>\n+    </message>\n+    <message>\n+        <location line=\"+10\"/>\n+        <source>The label associated with this address list entry</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+17\"/>\n+        <source>The address associated with this address list entry. This can only be modified for sending addresses.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"-10\"/>\n+        <source>&amp;Address</source>\n+        <translation>&amp;Address</translation>\n+    </message>\n+    <message>\n+        <location filename=\"../editaddressdialog.cpp\" line=\"+25\"/>\n+        <source>New receiving address</source>\n+        <translation>New receiving address</translation>\n+    </message>\n+    <message>\n+        <location line=\"+4\"/>\n+        <source>New sending address</source>\n+        <translation>New sending address</translation>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>Edit receiving address</source>\n+        <translation>Edit receiving address</translation>\n+    </message>\n+    <message>\n+        <location line=\"+4\"/>\n+        <source>Edit sending address</source>\n+        <translation>Edit sending address</translation>\n+    </message>\n+    <message>\n+        <location line=\"+76\"/>\n+        <source>The entered address &quot;%1&quot; is already in the address book.</source>\n+        <translation>The entered address &quot;%1&quot; is already in the address book.</translation>\n+    </message>\n+    <message>\n+        <location line=\"-5\"/>\n+        <source>The entered address &quot;%1&quot; is not a valid Bitcoin address.</source>\n+        <translation>The entered address &quot;%1&quot; is not a valid Bitcoin address.</translation>\n+    </message>\n+    <message>\n+        <location line=\"+10\"/>\n+        <source>Could not unlock wallet.</source>\n+        <translation>Could not unlock wallet.</translation>\n+    </message>\n+    <message>\n+        <location line=\"+5\"/>\n+        <source>New key generation failed.</source>\n+        <translation>New key generation failed.</translation>\n+    </message>\n+</context>\n+<context>\n+    <name>FreespaceChecker</name>\n+    <message>\n+        <location filename=\"../intro.cpp\" line=\"+65\"/>\n+        <source>A new data directory will be created.</source>\n+        <translation>A new data directory will be created.</translation>\n+    </message>\n+    <message>\n+        <location line=\"+22\"/>\n+        <source>name</source>\n+        <translation>name</translation>\n+    </message>\n+    <message>\n+        <location line=\"+2\"/>\n+        <source>Directory already exists. Add %1 if you intend to create a new directory here.</source>\n+        <translation>Directory already exists. Add %1 if you intend to create a new directory here.</translation>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>Path already exists, and is not a directory.</source>\n+        <translation>Path already exists, and is not a directory.</translation>\n+    </message>\n+    <message>\n+        <location line=\"+7\"/>\n+        <source>Cannot create data directory here.</source>\n+        <translation>Cannot create data directory here.</translation>\n+    </message>\n+</context>\n+<context>\n+    <name>GUIUtil::HelpMessageBox</name>\n+    <message>\n+        <location filename=\"../guiutil.cpp\" line=\"+597\"/>\n+        <source>version</source>\n+        <translation>version</translation>\n+    </message>\n+    <message>\n+        <location line=\"+0\"/>\n+        <location line=\"+13\"/>\n+        <source>Bitcoin Core</source>\n+        <translation type=\"unfinished\">Bitcoin Core</translation>\n+    </message>\n+    <message>\n+        <location line=\"-11\"/>\n+        <source>Usage:</source>\n+        <translation>Usage:</translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>command-line options</source>\n+        <translation>command-line options</translation>\n+    </message>\n+    <message>\n+        <location line=\"+4\"/>\n+        <source>UI options</source>\n+        <translation>UI options</translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Set language, for example &quot;de_DE&quot; (default: system locale)</source>\n+        <translation>Set language, for example &quot;de_DE&quot; (default: system locale)</translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Start minimized</source>\n+        <translation>Start minimized</translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Show splash screen on startup (default: 1)</source>\n+        <translation>Show splash screen on startup (default: 1)</translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Choose data directory on startup (default: 0)</source>\n+        <translation>Choose data directory on startup (default: 0)</translation>\n+    </message>\n+</context>\n+<context>\n+    <name>Intro</name>\n+    <message>\n+        <location filename=\"../forms/intro.ui\" line=\"+14\"/>\n+        <source>Welcome</source>\n+        <translation>Welcome</translation>\n+    </message>\n+    <message>\n+        <location line=\"+9\"/>\n+        <source>Welcome to Bitcoin Core.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+26\"/>\n+        <source>As this is the first time the program is launched, you can choose where Bitcoin Core will store its data.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+10\"/>\n+        <source>Bitcoin Core will download and store a copy of the Bitcoin block chain. At least %1GB of data will be stored in this directory, and it will grow over time. The wallet will also be stored in this directory.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+10\"/>\n+        <source>Use the default data directory</source>\n+        <translation>Use the default data directory</translation>\n+    </message>\n+    <message>\n+        <location line=\"+7\"/>\n+        <source>Use a custom data directory:</source>\n+        <translation>Use a custom data directory:</translation>\n+    </message>\n+    <message>\n+        <location filename=\"../intro.cpp\" line=\"+85\"/>\n+        <source>Bitcoin</source>\n+        <translation type=\"unfinished\">Bitcoin</translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Error: Specified data directory &quot;%1&quot; can not be created.</source>\n+        <translation type=\"unfinished\">Error: Specified data directory &quot;%1&quot; can not be created.</translation>\n+    </message>\n+    <message>\n+        <location line=\"+19\"/>\n+        <source>Error</source>\n+        <translation>Error</translation>\n+    </message>\n+    <message>\n+        <location line=\"+9\"/>\n+        <source>GB of free space available</source>\n+        <translation>GB of free space available</translation>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>(of %1GB needed)</source>\n+        <translation>(of %1GB needed)</translation>\n+    </message>\n+</context>\n+<context>\n+    <name>OpenURIDialog</name>\n+    <message>\n+        <location filename=\"../forms/openuridialog.ui\" line=\"+14\"/>\n+        <source>Open URI</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+6\"/>\n+        <source>Open payment request from URI or file</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+9\"/>\n+        <source>URI:</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+11\"/>\n+        <source>Select payment request file</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location filename=\"../openuridialog.cpp\" line=\"+47\"/>\n+        <source>Select payment request file to open</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+</context>\n+<context>\n+    <name>OptionsDialog</name>\n+    <message>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"+14\"/>\n+        <source>Options</source>\n+        <translation>Options</translation>\n+    </message>\n+    <message>\n+        <location line=\"+16\"/>\n+        <source>&amp;Main</source>\n+        <translation>&amp;Main</translation>\n+    </message>\n+    <message>\n+        <location line=\"+6\"/>\n+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB.</source>\n+        <translation>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB.</translation>\n+    </message>\n+    <message>\n+        <location line=\"+15\"/>\n+        <source>Pay transaction &amp;fee</source>\n+        <translation>Pay transaction &amp;fee</translation>\n+    </message>\n+    <message>\n+        <location line=\"+31\"/>\n+        <source>Automatically start Bitcoin after logging in to the system.</source>\n+        <translation>Automatically start Bitcoin after logging in to the system.</translation>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>&amp;Start Bitcoin on system login</source>\n+        <translation>&amp;Start Bitcoin on system login</translation>\n+    </message>\n+    <message>\n+        <location line=\"+35\"/>\n+        <source>Reset all client options to default.</source>\n+        <translation>Reset all client options to default.</translation>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>&amp;Reset Options</source>\n+        <translation>&amp;Reset Options</translation>\n+    </message>\n+    <message>\n+        <location line=\"+13\"/>\n         <source>&amp;Network</source>\n         <translation>&amp;Network</translation>\n     </message>\n@@ -1060,6 +1389,16 @@ Address: %4\n         <source>&amp;Display addresses in transaction list</source>\n         <translation>&amp;Display addresses in transaction list</translation>\n     </message>\n+    <message>\n+        <location line=\"+7\"/>\n+        <source>Whether to show coin control features or not.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>Display coin &amp;control features (experts only)</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n     <message>\n         <location line=\"+71\"/>\n         <source>&amp;OK</source>\n@@ -1076,12 +1415,12 @@ Address: %4\n         <translation>&amp;Apply</translation>\n     </message>\n     <message>\n-        <location filename=\"../optionsdialog.cpp\" line=\"+58\"/>\n+        <location filename=\"../optionsdialog.cpp\" line=\"+63\"/>\n         <source>default</source>\n         <translation>default</translation>\n     </message>\n     <message>\n-        <location line=\"+130\"/>\n+        <location line=\"+131\"/>\n         <source>Confirm options reset</source>\n         <translation>Confirm options reset</translation>\n     </message>\n@@ -1122,17 +1461,17 @@ Address: %4\n     </message>\n     <message>\n         <location line=\"+50\"/>\n-        <location line=\"+202\"/>\n+        <location line=\"+214\"/>\n         <source>The displayed information may be out of date. Your wallet automatically synchronizes with the Bitcoin network after a connection is established, but this process has not completed yet.</source>\n         <translation>The displayed information may be out of date. Your wallet automatically synchronizes with the Bitcoin network after a connection is established, but this process has not completed yet.</translation>\n     </message>\n     <message>\n-        <location line=\"-131\"/>\n+        <location line=\"-140\"/>\n         <source>Unconfirmed:</source>\n         <translation>Unconfirmed:</translation>\n     </message>\n     <message>\n-        <location line=\"-78\"/>\n+        <location line=\"-81\"/>\n         <source>Wallet</source>\n         <translation>Wallet</translation>\n     </message>\n@@ -1147,12 +1486,12 @@ Address: %4\n         <translation>Your current spendable balance</translation>\n     </message>\n     <message>\n-        <location line=\"+29\"/>\n+        <location line=\"+32\"/>\n         <source>Total of transactions that have yet to be confirmed, and do not yet count toward the spendable balance</source>\n         <translation>Total of transactions that have yet to be confirmed, and do not yet count toward the spendable balance</translation>\n     </message>\n     <message>\n-        <location line=\"+13\"/>\n+        <location line=\"+16\"/>\n         <source>Immature:</source>\n         <translation>Immature:</translation>\n     </message>\n@@ -1162,7 +1501,7 @@ Address: %4\n         <translation>Mined balance that has not yet matured</translation>\n     </message>\n     <message>\n-        <location line=\"+13\"/>\n+        <location line=\"+16\"/>\n         <source>Total:</source>\n         <translation>Total:</translation>\n     </message>\n@@ -1172,12 +1511,12 @@ Address: %4\n         <translation>Your current total balance</translation>\n     </message>\n     <message>\n-        <location line=\"+53\"/>\n+        <location line=\"+56\"/>\n         <source>&lt;b&gt;Recent transactions&lt;/b&gt;</source>\n         <translation>&lt;b&gt;Recent transactions&lt;/b&gt;</translation>\n     </message>\n     <message>\n-        <location filename=\"../overviewpage.cpp\" line=\"+116\"/>\n+        <location filename=\"../overviewpage.cpp\" line=\"+120\"/>\n         <location line=\"+1\"/>\n         <source>out of sync</source>\n         <translation>out of sync</translation>\n@@ -1186,7 +1525,7 @@ Address: %4\n <context>\n     <name>PaymentServer</name>\n     <message>\n-        <location filename=\"../paymentserver.cpp\" line=\"+392\"/>\n+        <location filename=\"../paymentserver.cpp\" line=\"+397\"/>\n         <source>URI handling</source>\n         <translation type=\"unfinished\">URI handling</translation>\n     </message>\n@@ -1196,23 +1535,29 @@ Address: %4\n         <translation type=\"unfinished\">URI can not be parsed! This can be caused by an invalid Bitcoin address or malformed URI parameters.</translation>\n     </message>\n     <message>\n-        <location line=\"+69\"/>\n+        <location line=\"+91\"/>\n         <source>Requested payment amount of %1 is too small (considered dust).</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n-        <location line=\"+37\"/>\n+        <location line=\"-204\"/>\n+        <location line=\"+195\"/>\n+        <location line=\"+13\"/>\n         <source>Payment request error</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+1\"/>\n-        <source>Insecure requests to custom payment scripts unsupported</source>\n+        <location line=\"-207\"/>\n+        <source>Cannot start bitcoin: click-to-pay handler</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+38\"/>\n+        <location line=\"+195\"/>\n+        <source>Unverified payment requests to custom payment scripts are unsupported.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+59\"/>\n         <source>Refund from %1</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -1222,7 +1567,7 @@ Address: %4\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+31\"/>\n+        <location line=\"+28\"/>\n         <source>Bad response from server %1</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -1232,8 +1577,8 @@ Address: %4\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"-58\"/>\n-        <location line=\"+30\"/>\n+        <location line=\"-55\"/>\n+        <location line=\"+27\"/>\n         <location line=\"+17\"/>\n         <source>Network request error</source>\n         <translation type=\"unfinished\"></translation>\n@@ -1242,9 +1587,8 @@ Address: %4\n <context>\n     <name>QObject</name>\n     <message>\n-        <location filename=\"../bitcoin.cpp\" line=\"+114\"/>\n+        <location filename=\"../bitcoin.cpp\" line=\"+119\"/>\n         <location line=\"+5\"/>\n-        <location filename=\"../intro.cpp\" line=\"-32\"/>\n         <source>Bitcoin</source>\n         <translation>Bitcoin</translation>\n     </message>\n@@ -1258,16 +1602,11 @@ Address: %4\n         <source>Error: Invalid combination of -regtest and -testnet.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n-    <message>\n-        <location filename=\"../intro.cpp\" line=\"+1\"/>\n-        <source>Error: Specified data directory &quot;%1&quot; can not be created.</source>\n-        <translation>Error: Specified data directory &quot;%1&quot; can not be created.</translation>\n-    </message>\n </context>\n <context>\n     <name>QRImageWidget</name>\n     <message>\n-        <location filename=\"../receiverequestdialog.cpp\" line=\"+32\"/>\n+        <location filename=\"../receiverequestdialog.cpp\" line=\"+36\"/>\n         <source>&amp;Save Image...</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -1283,8 +1622,8 @@ Address: %4\n     </message>\n     <message>\n         <location line=\"+0\"/>\n-        <source>PNG Images (*.png)</source>\n-        <translation type=\"unfinished\">PNG Images (*.png)</translation>\n+        <source>PNG Image (*.png)</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n </context>\n <context>\n@@ -1304,7 +1643,7 @@ Address: %4\n         <location line=\"+53\"/>\n         <location line=\"+23\"/>\n         <location line=\"+23\"/>\n-        <location filename=\"../rpcconsole.cpp\" line=\"+352\"/>\n+        <location filename=\"../rpcconsole.cpp\" line=\"+360\"/>\n         <source>N/A</source>\n         <translation>N/A</translation>\n     </message>\n@@ -1319,7 +1658,12 @@ Address: %4\n         <translation>&amp;Information</translation>\n     </message>\n     <message>\n-        <location line=\"+68\"/>\n+        <location line=\"-10\"/>\n+        <source>Debug window</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+78\"/>\n         <source>Using OpenSSL version</source>\n         <translation>Using OpenSSL version</translation>\n     </message>\n@@ -1374,12 +1718,7 @@ Address: %4\n         <translation>Command-line options</translation>\n     </message>\n     <message>\n-        <location line=\"+7\"/>\n-        <source>Show the Bitcoin-Qt help message to get a list with possible Bitcoin command-line options.</source>\n-        <translation>Show the Bitcoin-Qt help message to get a list with possible Bitcoin command-line options.</translation>\n-    </message>\n-    <message>\n-        <location line=\"+3\"/>\n+        <location line=\"+10\"/>\n         <source>&amp;Show</source>\n         <translation>&amp;Show</translation>\n     </message>\n@@ -1419,12 +1758,7 @@ Address: %4\n         <translation>Build date</translation>\n     </message>\n     <message>\n-        <location line=\"-104\"/>\n-        <source>Bitcoin - Debug window</source>\n-        <translation>Bitcoin - Debug window</translation>\n-    </message>\n-    <message>\n-        <location line=\"+25\"/>\n+        <location line=\"-79\"/>\n         <source>Bitcoin Core</source>\n         <translation>Bitcoin Core</translation>\n     </message>\n@@ -1439,7 +1773,12 @@ Address: %4\n         <translation>Open the Bitcoin debug log file from the current data directory. This can take a few seconds for large log files.</translation>\n     </message>\n     <message>\n-        <location line=\"+102\"/>\n+        <location line=\"+26\"/>\n+        <source>Show the Bitcoin-Core help message to get a list with possible Bitcoin command-line options.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+76\"/>\n         <source>Clear console</source>\n         <translation>Clear console</translation>\n     </message>\n@@ -1497,37 +1836,32 @@ Address: %4\n <context>\n     <name>ReceiveCoinsDialog</name>\n     <message>\n-        <location filename=\"../forms/receivecoinsdialog.ui\" line=\"+22\"/>\n+        <location filename=\"../forms/receivecoinsdialog.ui\" line=\"+83\"/>\n         <source>&amp;Amount:</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+16\"/>\n+        <location line=\"+19\"/>\n         <source>The amount to request</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+7\"/>\n+        <location line=\"-32\"/>\n         <source>&amp;Label:</source>\n         <translation type=\"unfinished\">&amp;Label:</translation>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n-        <source>The label to associate with the receiving address</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location line=\"+7\"/>\n+        <location line=\"-34\"/>\n         <source>&amp;Message:</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n+        <location line=\"+20\"/>\n         <source>The message to attach to payment request</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+14\"/>\n+        <location line=\"-37\"/>\n         <source>Reuse one of the previously used receiving addresses. Reusing addresses has security and privacy issues. Do not use this unless re-generating a payment request made before.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -1537,12 +1871,17 @@ Address: %4\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+7\"/>\n+        <location line=\"+27\"/>\n+        <source>The label to associate with the new receiving address</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+14\"/>\n         <source>Use this form to request payments. All fields are optional.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+17\"/>\n+        <location line=\"+56\"/>\n         <source>Clear all fields of the form.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -1556,6 +1895,31 @@ Address: %4\n         <source>&amp;Request payment</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n+    <message>\n+        <location line=\"+47\"/>\n+        <source>Previously requested payments</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+12\"/>\n+        <source>Show the selected request (does the same as double clicking an entry)</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>Show</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+11\"/>\n+        <source>Remove the selected entries from the list</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>Remove</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n </context>\n <context>\n     <name>ReceiveRequestDialog</name>\n@@ -1574,18 +1938,13 @@ Address: %4\n         <source>Copy &amp;Address</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n-    <message>\n-        <location line=\"+7\"/>\n-        <source>&amp;Copy Image</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n     <message>\n         <location line=\"+7\"/>\n         <source>&amp;Save Image...</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../receiverequestdialog.cpp\" line=\"+58\"/>\n+        <location filename=\"../receiverequestdialog.cpp\" line=\"+56\"/>\n         <source>Request payment to %1</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -1630,17 +1989,120 @@ Address: %4\n         <translation type=\"unfinished\">Error encoding URI into QR Code.</translation>\n     </message>\n </context>\n+<context>\n+    <name>RecentRequestsTableModel</name>\n+    <message>\n+        <location filename=\"../recentrequeststablemodel.cpp\" line=\"+14\"/>\n+        <source>Date</source>\n+        <translation type=\"unfinished\">Date</translation>\n+    </message>\n+    <message>\n+        <location line=\"+0\"/>\n+        <source>Label</source>\n+        <translation type=\"unfinished\">Label</translation>\n+    </message>\n+    <message>\n+        <location line=\"+0\"/>\n+        <source>Message</source>\n+        <translation type=\"unfinished\">Message</translation>\n+    </message>\n+    <message>\n+        <location line=\"+0\"/>\n+        <source>Amount</source>\n+        <translation type=\"unfinished\">Amount</translation>\n+    </message>\n+    <message>\n+        <location line=\"+36\"/>\n+        <source>(no label)</source>\n+        <translation type=\"unfinished\">(no label)</translation>\n+    </message>\n+    <message>\n+        <location line=\"+9\"/>\n+        <source>(no message)</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+</context>\n <context>\n     <name>SendCoinsDialog</name>\n     <message>\n         <location filename=\"../forms/sendcoinsdialog.ui\" line=\"+14\"/>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"+140\"/>\n-        <location line=\"+213\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"+381\"/>\n+        <location line=\"+81\"/>\n         <source>Send Coins</source>\n         <translation>Send Coins</translation>\n     </message>\n     <message>\n-        <location line=\"+50\"/>\n+        <location line=\"+76\"/>\n+        <source>Coin Control Features</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+20\"/>\n+        <source>Inputs...</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+7\"/>\n+        <source>automatically selected</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+19\"/>\n+        <source>Insufficient funds!</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+89\"/>\n+        <source>Quantity:</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+35\"/>\n+        <source>Bytes:</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+48\"/>\n+        <source>Amount:</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+32\"/>\n+        <source>Priority:</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+48\"/>\n+        <source>Fee:</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+32\"/>\n+        <source>Low Output:</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+48\"/>\n+        <source>After Fee:</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+32\"/>\n+        <source>Change:</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+44\"/>\n+        <source>If this is activated, but the change address is empty or invalid, change will be sent to a newly generated address.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>Custom change address</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+115\"/>\n         <source>Send to multiple recipients at once</source>\n         <translation>Send to multiple recipients at once</translation>\n     </message>\n@@ -1665,12 +2127,7 @@ Address: %4\n         <translation>Balance:</translation>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n-        <source>123.456 BTC</source>\n-        <translation>123.456 BTC</translation>\n-    </message>\n-    <message>\n-        <location line=\"+31\"/>\n+        <location line=\"+41\"/>\n         <source>Confirm the send action</source>\n         <translation>Confirm the send action</translation>\n     </message>\n@@ -1680,69 +2137,135 @@ Address: %4\n         <translation>S&amp;end</translation>\n     </message>\n     <message>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"-154\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"-229\"/>\n         <source>Confirm send coins</source>\n         <translation>Confirm send coins</translation>\n     </message>\n     <message>\n-        <location line=\"-90\"/>\n+        <location line=\"-74\"/>\n         <location line=\"+5\"/>\n         <location line=\"+5\"/>\n+        <location line=\"+4\"/>\n         <source>%1 to %2</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+26\"/>\n+        <location line=\"-136\"/>\n+        <source>Enter a Bitcoin address (e.g. 1NS17iag9jJgTHD1VXjvLCEnZuQ3rJDE9L)</source>\n+        <translation type=\"unfinished\">Enter a Bitcoin address (e.g. 1NS17iag9jJgTHD1VXjvLCEnZuQ3rJDE9L)</translation>\n+    </message>\n+    <message>\n+        <location line=\"+15\"/>\n+        <source>Copy quantity</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Copy amount</source>\n+        <translation type=\"unfinished\">Copy amount</translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Copy fee</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Copy after fee</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Copy bytes</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Copy priority</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Copy low output</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Copy change</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+170\"/>\n+        <source>Total Amount %1 (= %2)</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+2\"/>\n+        <source>or</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+202\"/>\n         <source>The recipient address is not valid, please recheck.</source>\n         <translation>The recipient address is not valid, please recheck.</translation>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n+        <location line=\"+3\"/>\n         <source>The amount to pay must be larger than 0.</source>\n         <translation>The amount to pay must be larger than 0.</translation>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n+        <location line=\"+3\"/>\n         <source>The amount exceeds your balance.</source>\n         <translation>The amount exceeds your balance.</translation>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n+        <location line=\"+3\"/>\n         <source>The total exceeds your balance when the %1 transaction fee is included.</source>\n         <translation>The total exceeds your balance when the %1 transaction fee is included.</translation>\n     </message>\n     <message>\n-        <location line=\"+5\"/>\n+        <location line=\"+3\"/>\n         <source>Duplicate address found, can only send to each address once per send operation.</source>\n         <translation>Duplicate address found, can only send to each address once per send operation.</translation>\n     </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>Transaction creation failed!</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n     <message>\n         <location line=\"+4\"/>\n-        <source>Error: Transaction creation failed!</source>\n-        <translation>Error: Transaction creation failed!</translation>\n+        <source>The transaction was rejected! This might happen if some of the coins in your wallet were already spent, such as if you used a copy of wallet.dat and coins were spent in the copy but not marked as spent here.</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+15\"/>\n-        <source>Are you sure you want to send?</source>\n+        <location line=\"+113\"/>\n+        <source>Warning: Invalid Bitcoin address</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+9\"/>\n-        <source>added as transaction fee</source>\n+        <location line=\"+13\"/>\n+        <source>(no label)</source>\n+        <translation type=\"unfinished\">(no label)</translation>\n+    </message>\n+    <message>\n+        <location line=\"+8\"/>\n+        <source>Warning: Unknown change address</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+6\"/>\n-        <source>Total Amount %1</source>\n+        <location line=\"-378\"/>\n+        <source>Are you sure you want to send?</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+20\"/>\n-        <source>Error: The transaction was rejected. This might happen if some of the coins in your wallet were already spent, such as if you used a copy of wallet.dat and coins were spent in the copy but not marked as spent here.</source>\n-        <translation>Error: The transaction was rejected. This might happen if some of the coins in your wallet were already spent, such as if you used a copy of wallet.dat and coins were spent in the copy but not marked as spent here.</translation>\n+        <location line=\"+9\"/>\n+        <source>added as transaction fee</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+144\"/>\n+        <location line=\"+170\"/>\n         <source>Payment request expired</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -1755,39 +2278,44 @@ Address: %4\n <context>\n     <name>SendCoinsEntry</name>\n     <message>\n-        <location filename=\"../forms/sendcoinsentry.ui\" line=\"+33\"/>\n-        <location line=\"+585\"/>\n+        <location filename=\"../forms/sendcoinsentry.ui\" line=\"+131\"/>\n+        <location line=\"+501\"/>\n+        <location line=\"+536\"/>\n         <source>A&amp;mount:</source>\n         <translation>A&amp;mount:</translation>\n     </message>\n     <message>\n-        <location line=\"-572\"/>\n-        <location line=\"+585\"/>\n+        <location line=\"-1132\"/>\n         <source>Pay &amp;To:</source>\n         <translation>Pay &amp;To:</translation>\n     </message>\n     <message>\n-        <location line=\"-551\"/>\n+        <location line=\"+18\"/>\n         <source>The address to send the payment to (e.g. 1NS17iag9jJgTHD1VXjvLCEnZuQ3rJDE9L)</source>\n         <translation>The address to send the payment to (e.g. 1NS17iag9jJgTHD1VXjvLCEnZuQ3rJDE9L)</translation>\n     </message>\n     <message>\n-        <location filename=\"../sendcoinsentry.cpp\" line=\"+28\"/>\n+        <location filename=\"../sendcoinsentry.cpp\" line=\"+30\"/>\n         <source>Enter a label for this address to add it to your address book</source>\n         <translation>Enter a label for this address to add it to your address book</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/sendcoinsentry.ui\" line=\"-18\"/>\n+        <location filename=\"../forms/sendcoinsentry.ui\" line=\"+57\"/>\n         <source>&amp;Label:</source>\n         <translation>&amp;Label:</translation>\n     </message>\n     <message>\n-        <location line=\"+28\"/>\n+        <location line=\"-50\"/>\n         <source>Choose previously used address</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n+        <location line=\"-40\"/>\n+        <source>This is a normal payment.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+50\"/>\n         <source>Alt+A</source>\n         <translation>Alt+A</translation>\n     </message>\n@@ -1803,16 +2331,35 @@ Address: %4\n     </message>\n     <message>\n         <location line=\"+7\"/>\n-        <source>Remove this recipient</source>\n-        <translation>Remove this recipient</translation>\n+        <location line=\"+504\"/>\n+        <location line=\"+536\"/>\n+        <source>Remove this entry</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+16\"/>\n+        <location line=\"-40\"/>\n+        <source>This is a verified payment request.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"-971\"/>\n         <source>Enter a label for this address to add it to the list of used addresses</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+465\"/>\n+        <location line=\"+439\"/>\n+        <source>This is an unverified payment request.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+18\"/>\n+        <location line=\"+532\"/>\n+        <source>Pay To:</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"-498\"/>\n+        <location line=\"+536\"/>\n         <source>Memo:</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -1933,7 +2480,7 @@ Address: %4\n         <translation>Reset all verify message fields</translation>\n     </message>\n     <message>\n-        <location filename=\"../signverifymessagedialog.cpp\" line=\"+27\"/>\n+        <location filename=\"../signverifymessagedialog.cpp\" line=\"+29\"/>\n         <location line=\"+3\"/>\n         <source>Enter a Bitcoin address (e.g. 1NS17iag9jJgTHD1VXjvLCEnZuQ3rJDE9L)</source>\n         <translation>Enter a Bitcoin address (e.g. 1NS17iag9jJgTHD1VXjvLCEnZuQ3rJDE9L)</translation>\n@@ -1949,7 +2496,7 @@ Address: %4\n         <translation>Enter Bitcoin signature</translation>\n     </message>\n     <message>\n-        <location line=\"+85\"/>\n+        <location line=\"+84\"/>\n         <location line=\"+81\"/>\n         <source>The entered address is invalid.</source>\n         <translation>The entered address is invalid.</translation>\n@@ -2018,9 +2565,14 @@ Address: %4\n <context>\n     <name>SplashScreen</name>\n     <message>\n-        <location filename=\"../splashscreen.cpp\" line=\"+23\"/>\n-        <source>The Bitcoin developers</source>\n-        <translation>The Bitcoin developers</translation>\n+        <location filename=\"../splashscreen.cpp\" line=\"+26\"/>\n+        <source>Bitcoin Core</source>\n+        <translation type=\"unfinished\">Bitcoin Core</translation>\n+    </message>\n+    <message>\n+        <location line=\"+2\"/>\n+        <source>The Bitcoin Core developers</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n         <location line=\"+1\"/>\n@@ -2031,15 +2583,15 @@ Address: %4\n <context>\n     <name>TrafficGraphWidget</name>\n     <message>\n-        <location filename=\"../trafficgraphwidget.cpp\" line=\"+75\"/>\n+        <location filename=\"../trafficgraphwidget.cpp\" line=\"+79\"/>\n         <source>KB/s</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n </context>\n <context>\n     <name>TransactionDesc</name>\n     <message>\n-        <location filename=\"../transactiondesc.cpp\" line=\"+22\"/>\n+        <location filename=\"../transactiondesc.cpp\" line=\"+28\"/>\n         <source>Open until %1</source>\n         <translation>Open until %1</translation>\n     </message>\n@@ -2240,7 +2792,7 @@ Address: %4\n <context>\n     <name>TransactionTableModel</name>\n     <message>\n-        <location filename=\"../transactiontablemodel.cpp\" line=\"+227\"/>\n+        <location filename=\"../transactiontablemodel.cpp\" line=\"+234\"/>\n         <source>Date</source>\n         <translation>Date</translation>\n     </message>\n@@ -2364,7 +2916,7 @@ Address: %4\n <context>\n     <name>TransactionView</name>\n     <message>\n-        <location filename=\"../transactionview.cpp\" line=\"+52\"/>\n+        <location filename=\"../transactionview.cpp\" line=\"+57\"/>\n         <location line=\"+16\"/>\n         <source>All</source>\n         <translation>All</translation>\n@@ -2425,12 +2977,12 @@ Address: %4\n         <translation>Other</translation>\n     </message>\n     <message>\n-        <location line=\"+7\"/>\n+        <location line=\"+6\"/>\n         <source>Enter address or label to search</source>\n         <translation>Enter address or label to search</translation>\n     </message>\n     <message>\n-        <location line=\"+7\"/>\n+        <location line=\"+6\"/>\n         <source>Min amount</source>\n         <translation>Min amount</translation>\n     </message>\n@@ -2465,17 +3017,37 @@ Address: %4\n         <translation>Show transaction details</translation>\n     </message>\n     <message>\n-        <location line=\"+143\"/>\n-        <source>Export Transaction Data</source>\n-        <translation>Export Transaction Data</translation>\n+        <location line=\"+142\"/>\n+        <source>Export Transaction History</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+1\"/>\n+        <location line=\"+19\"/>\n+        <source>Exporting Failed</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+0\"/>\n+        <source>There was an error trying to save the transaction history to %1.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+4\"/>\n+        <source>Exporting Successful</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+0\"/>\n+        <source>The transaction history was successfully saved to %1.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"-22\"/>\n         <source>Comma separated file (*.csv)</source>\n         <translation>Comma separated file (*.csv)</translation>\n     </message>\n     <message>\n-        <location line=\"+8\"/>\n+        <location line=\"+9\"/>\n         <source>Confirmed</source>\n         <translation>Confirmed</translation>\n     </message>\n@@ -2510,17 +3082,7 @@ Address: %4\n         <translation>ID</translation>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n-        <source>Error exporting</source>\n-        <translation>Error exporting</translation>\n-    </message>\n-    <message>\n-        <location line=\"+0\"/>\n-        <source>Could not write to file %1.</source>\n-        <translation>Could not write to file %1.</translation>\n-    </message>\n-    <message>\n-        <location line=\"+100\"/>\n+        <location line=\"+107\"/>\n         <source>Range:</source>\n         <translation>Range:</translation>\n     </message>\n@@ -2530,18 +3092,26 @@ Address: %4\n         <translation>to</translation>\n     </message>\n </context>\n+<context>\n+    <name>WalletFrame</name>\n+    <message>\n+        <location filename=\"../walletframe.cpp\" line=\"+26\"/>\n+        <source>No wallet has been loaded.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+</context>\n <context>\n     <name>WalletModel</name>\n     <message>\n-        <location filename=\"../walletmodel.cpp\" line=\"+218\"/>\n+        <location filename=\"../walletmodel.cpp\" line=\"+245\"/>\n         <source>Send Coins</source>\n         <translation>Send Coins</translation>\n     </message>\n </context>\n <context>\n     <name>WalletView</name>\n     <message>\n-        <location filename=\"../walletview.cpp\" line=\"+46\"/>\n+        <location filename=\"../walletview.cpp\" line=\"+43\"/>\n         <source>&amp;Export</source>\n         <translation>&amp;Export</translation>\n     </message>\n@@ -2551,65 +3121,60 @@ Address: %4\n         <translation>Export the data in the current tab to a file</translation>\n     </message>\n     <message>\n-        <location line=\"+183\"/>\n+        <location line=\"+181\"/>\n         <source>Backup Wallet</source>\n         <translation>Backup Wallet</translation>\n     </message>\n     <message>\n-        <location line=\"+0\"/>\n+        <location line=\"+1\"/>\n         <source>Wallet Data (*.dat)</source>\n         <translation>Wallet Data (*.dat)</translation>\n     </message>\n     <message>\n-        <location line=\"+3\"/>\n+        <location line=\"+6\"/>\n         <source>Backup Failed</source>\n         <translation>Backup Failed</translation>\n     </message>\n     <message>\n         <location line=\"+0\"/>\n-        <source>There was an error trying to save the wallet data to the new location.</source>\n-        <translation>There was an error trying to save the wallet data to the new location.</translation>\n+        <source>There was an error trying to save the wallet data to %1.</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n         <location line=\"+4\"/>\n-        <source>Backup Successful</source>\n-        <translation>Backup Successful</translation>\n+        <source>The wallet data was successfully saved to %1.</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n         <location line=\"+0\"/>\n-        <source>The wallet data was successfully saved to the new location.</source>\n-        <translation>The wallet data was successfully saved to the new location.</translation>\n+        <source>Backup Successful</source>\n+        <translation>Backup Successful</translation>\n     </message>\n </context>\n <context>\n     <name>bitcoin-core</name>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"+102\"/>\n-        <source>Bitcoin version</source>\n-        <translation>Bitcoin version</translation>\n-    </message>\n-    <message>\n-        <location line=\"+107\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"+217\"/>\n         <source>Usage:</source>\n         <translation>Usage:</translation>\n     </message>\n     <message>\n-        <location line=\"-55\"/>\n+        <location line=\"-54\"/>\n         <source>List commands</source>\n         <translation>List commands</translation>\n     </message>\n     <message>\n-        <location line=\"-13\"/>\n+        <location line=\"-14\"/>\n         <source>Get help for a command</source>\n         <translation>Get help for a command</translation>\n     </message>\n     <message>\n-        <location line=\"+25\"/>\n+        <location line=\"+26\"/>\n         <source>Options:</source>\n         <translation>Options:</translation>\n     </message>\n     <message>\n-        <location line=\"+24\"/>\n+        <location line=\"+23\"/>\n         <source>Specify configuration file (default: bitcoin.conf)</source>\n         <translation>Specify configuration file (default: bitcoin.conf)</translation>\n     </message>\n@@ -2629,7 +3194,7 @@ Address: %4\n         <translation>Set database cache size in megabytes (default: 25)</translation>\n     </message>\n     <message>\n-        <location line=\"-28\"/>\n+        <location line=\"-27\"/>\n         <source>Listen for connections on &lt;port&gt; (default: 8333 or testnet: 18333)</source>\n         <translation>Listen for connections on &lt;port&gt; (default: 8333 or testnet: 18333)</translation>\n     </message>\n@@ -2639,7 +3204,7 @@ Address: %4\n         <translation>Maintain at most &lt;n&gt; connections to peers (default: 125)</translation>\n     </message>\n     <message>\n-        <location line=\"-49\"/>\n+        <location line=\"-50\"/>\n         <source>Connect to a node to retrieve peer addresses, and disconnect</source>\n         <translation>Connect to a node to retrieve peer addresses, and disconnect</translation>\n     </message>\n@@ -2654,7 +3219,7 @@ Address: %4\n         <translation>Threshold for disconnecting misbehaving peers (default: 100)</translation>\n     </message>\n     <message>\n-        <location line=\"-142\"/>\n+        <location line=\"-147\"/>\n         <source>Number of seconds to keep misbehaving peers from reconnecting (default: 86400)</source>\n         <translation>Number of seconds to keep misbehaving peers from reconnecting (default: 86400)</translation>\n     </message>\n@@ -2669,7 +3234,7 @@ Address: %4\n         <translation>Listen for JSON-RPC connections on &lt;port&gt; (default: 8332 or testnet: 18332)</translation>\n     </message>\n     <message>\n-        <location line=\"+40\"/>\n+        <location line=\"+45\"/>\n         <source>Accept command line and JSON-RPC commands</source>\n         <translation>Accept command line and JSON-RPC commands</translation>\n     </message>\n@@ -2679,17 +3244,17 @@ Address: %4\n         <translation>Run in the background as a daemon and accept commands</translation>\n     </message>\n     <message>\n-        <location line=\"+40\"/>\n+        <location line=\"+39\"/>\n         <source>Use the test network</source>\n         <translation>Use the test network</translation>\n     </message>\n     <message>\n-        <location line=\"-118\"/>\n+        <location line=\"-117\"/>\n         <source>Accept connections from outside (default: 1 if no -proxy or -connect)</source>\n         <translation>Accept connections from outside (default: 1 if no -proxy or -connect)</translation>\n     </message>\n     <message>\n-        <location line=\"-87\"/>\n+        <location line=\"-92\"/>\n         <source>%s, you must set a rpcpassword in the configuration file:\n %s\n It is recommended you use the following random password:\n@@ -2754,17 +3319,17 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)</translation>\n     </message>\n     <message>\n-        <location line=\"+11\"/>\n-        <source>Set maximum size of high-priority/low-fee transactions in bytes (default: 27000)</source>\n-        <translation>Set maximum size of high-priority/low-fee transactions in bytes (default: 27000)</translation>\n-    </message>\n-    <message>\n-        <location line=\"+6\"/>\n+        <location line=\"+18\"/>\n         <source>This is a pre-release test build - use at your own risk - do not use for mining or merchant applications</source>\n         <translation>This is a pre-release test build - use at your own risk - do not use for mining or merchant applications</translation>\n     </message>\n     <message>\n         <location line=\"+5\"/>\n+        <source>Use separate SOCKS5 proxy to reach peers via Tor hidden services (default: -proxy)</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n         <source>Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.</source>\n         <translation>Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.</translation>\n     </message>\n@@ -2794,17 +3359,27 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>Warning: wallet.dat corrupt, data salvaged! Original wallet.dat saved as wallet.{timestamp}.bak in %s; if your balance or transactions are incorrect you should restore from a backup.</translation>\n     </message>\n     <message>\n-        <location line=\"+14\"/>\n+        <location line=\"+9\"/>\n+        <source>&lt;category&gt; can be:</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+6\"/>\n         <source>Attempt to recover private keys from a corrupt wallet.dat</source>\n         <translation>Attempt to recover private keys from a corrupt wallet.dat</translation>\n     </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Bitcoin Core Daemon</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n     <message>\n         <location line=\"+1\"/>\n         <source>Bitcoin RPC client version</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+2\"/>\n+        <location line=\"+1\"/>\n         <source>Block creation options:</source>\n         <translation>Block creation options:</translation>\n     </message>\n@@ -2814,7 +3389,12 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>Connect only to the specified node(s)</translation>\n     </message>\n     <message>\n-        <location line=\"+2\"/>\n+        <location line=\"+1\"/>\n+        <source>Connect through SOCKS proxy</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n         <source>Connect to JSON-RPC on &lt;port&gt; (default: 8332 or testnet: 18332)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -2924,7 +3504,12 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>Failed to write undo data</translation>\n     </message>\n     <message>\n-        <location line=\"+2\"/>\n+        <location line=\"+1\"/>\n+        <source>Fee per kB to add to transactions you send</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n         <source>Find peers using DNS lookup (default: 1 unless -connect)</source>\n         <translation>Find peers using DNS lookup (default: 1 unless -connect)</translation>\n     </message>\n@@ -2943,6 +3528,11 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <source>How thorough the block verification is (0-4, default: 3)</source>\n         <translation>How thorough the block verification is (0-4, default: 3)</translation>\n     </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>If &lt;category&gt; is not supplied, output all debugging information.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n     <message>\n         <location line=\"+2\"/>\n         <source>Incorrect or no genesis block found. Wrong datadir for network?</source>\n@@ -2959,17 +3549,37 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>Not enough file descriptors available.</translation>\n     </message>\n     <message>\n-        <location line=\"+8\"/>\n+        <location line=\"+5\"/>\n+        <source>Prepend debug output with timestamp (default: 1)</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>RPC client options:</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n         <source>Rebuild block chain index from current blk000??.dat files</source>\n         <translation>Rebuild block chain index from current blk000??.dat files</translation>\n     </message>\n     <message>\n-        <location line=\"+6\"/>\n+        <location line=\"+5\"/>\n+        <source>Select SOCKS version for -proxy (4 or 5, default: 5)</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n         <source>Send command to Bitcoin server</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n+        <location line=\"+8\"/>\n+        <source>Set maximum block size in bytes (default: %d)</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+2\"/>\n         <source>Set the number of threads to service RPC calls (default: 4)</source>\n         <translation>Set the number of threads to service RPC calls (default: 4)</translation>\n     </message>\n@@ -2989,7 +3599,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+8\"/>\n+        <location line=\"+7\"/>\n         <source>Verifying blocks...</source>\n         <translation>Verifying blocks...</translation>\n     </message>\n@@ -2998,13 +3608,23 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <source>Verifying wallet...</source>\n         <translation>Verifying wallet...</translation>\n     </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Wait for RPC server to start</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n     <message>\n         <location line=\"+1\"/>\n         <source>Wallet %s resides outside data directory %s</source>\n         <translation>Wallet %s resides outside data directory %s</translation>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n+        <location line=\"+3\"/>\n+        <source>Warning: Deprecated argument -debugnet ignored, use -debug=net</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+2\"/>\n         <source>You need to rebuild the database using -reindex to change -txindex</source>\n         <translation>You need to rebuild the database using -reindex to change -txindex</translation>\n     </message>\n@@ -3014,17 +3634,27 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>Imports blocks from external blk000??.dat file</translation>\n     </message>\n     <message>\n-        <location line=\"-98\"/>\n+        <location line=\"-104\"/>\n         <source>Execute command when a relevant alert is received or we see a really long fork (%s in cmd is replaced by message)</source>\n         <translation>Execute command when a relevant alert is received or we see a really long fork (%s in cmd is replaced by message)</translation>\n     </message>\n     <message>\n-        <location line=\"+17\"/>\n+        <location line=\"+14\"/>\n+        <source>Output debugging information (default: 0, supplying &lt;category&gt; is optional)</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+2\"/>\n+        <source>Set maximum size of high-priority/low-fee transactions in bytes (default: %d)</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+2\"/>\n         <source>Set the number of script verification threads (up to 16, 0 = auto, &lt;0 = leave that many cores free, default: 0)</source>\n         <translation>Set the number of script verification threads (up to 16, 0 = auto, &lt;0 = leave that many cores free, default: 0)</translation>\n     </message>\n     <message>\n-        <location line=\"+83\"/>\n+        <location line=\"+88\"/>\n         <source>Information</source>\n         <translation>Information</translation>\n     </message>\n@@ -3064,32 +3694,12 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>Only connect to nodes in network &lt;net&gt; (IPv4, IPv6 or Tor)</translation>\n     </message>\n     <message>\n-        <location line=\"+2\"/>\n-        <source>Output extra debugging information. Implies all other -debug* options</source>\n-        <translation>Output extra debugging information. Implies all other -debug* options</translation>\n-    </message>\n-    <message>\n-        <location line=\"+1\"/>\n-        <source>Output extra network debugging information</source>\n-        <translation>Output extra network debugging information</translation>\n-    </message>\n-    <message>\n-        <location line=\"+2\"/>\n-        <source>Prepend debug output with timestamp</source>\n-        <translation>Prepend debug output with timestamp</translation>\n-    </message>\n-    <message>\n-        <location line=\"+5\"/>\n+        <location line=\"+9\"/>\n         <source>SSL options: (see the Bitcoin Wiki for SSL setup instructions)</source>\n         <translation>SSL options: (see the Bitcoin Wiki for SSL setup instructions)</translation>\n     </message>\n     <message>\n-        <location line=\"+1\"/>\n-        <source>Select the version of socks proxy to use (4-5, default: 5)</source>\n-        <translation>Select the version of socks proxy to use (4-5, default: 5)</translation>\n-    </message>\n-    <message>\n-        <location line=\"+3\"/>\n+        <location line=\"+4\"/>\n         <source>Send trace/debug info to console instead of debug.log file</source>\n         <translation>Send trace/debug info to console instead of debug.log file</translation>\n     </message>\n@@ -3099,12 +3709,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>Send trace/debug info to debugger</translation>\n     </message>\n     <message>\n-        <location line=\"+5\"/>\n-        <source>Set maximum block size in bytes (default: 250000)</source>\n-        <translation>Set maximum block size in bytes (default: 250000)</translation>\n-    </message>\n-    <message>\n-        <location line=\"+1\"/>\n+        <location line=\"+6\"/>\n         <source>Set minimum block size in bytes (default: 0)</source>\n         <translation>Set minimum block size in bytes (default: 0)</translation>\n     </message>\n@@ -3153,38 +3758,38 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <source>Use UPnP to map the listening port (default: 1 when listening)</source>\n         <translation>Use UPnP to map the listening port (default: 1 when listening)</translation>\n     </message>\n-    <message>\n-        <location line=\"+1\"/>\n-        <source>Use proxy to reach tor hidden services (default: same as -proxy)</source>\n-        <translation>Use proxy to reach tor hidden services (default: same as -proxy)</translation>\n-    </message>\n     <message>\n         <location line=\"+2\"/>\n         <source>Username for JSON-RPC connections</source>\n         <translation>Username for JSON-RPC connections</translation>\n     </message>\n     <message>\n-        <location line=\"+5\"/>\n+        <location line=\"+6\"/>\n         <source>Warning</source>\n         <translation>Warning</translation>\n     </message>\n     <message>\n-        <location line=\"+1\"/>\n+        <location line=\"+2\"/>\n         <source>Warning: This version is obsolete, upgrade required!</source>\n         <translation>Warning: This version is obsolete, upgrade required!</translation>\n     </message>\n     <message>\n         <location line=\"+2\"/>\n+        <source>version</source>\n+        <translation type=\"unfinished\">version</translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n         <source>wallet.dat corrupt, salvage failed</source>\n         <translation>wallet.dat corrupt, salvage failed</translation>\n     </message>\n     <message>\n-        <location line=\"-54\"/>\n+        <location line=\"-57\"/>\n         <source>Password for JSON-RPC connections</source>\n         <translation>Password for JSON-RPC connections</translation>\n     </message>\n     <message>\n-        <location line=\"-70\"/>\n+        <location line=\"-69\"/>\n         <source>Allow JSON-RPC connections from specified IP address</source>\n         <translation>Allow JSON-RPC connections from specified IP address</translation>\n     </message>\n@@ -3194,12 +3799,12 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>Send commands to node running on &lt;ip&gt; (default: 127.0.0.1)</translation>\n     </message>\n     <message>\n-        <location line=\"-126\"/>\n+        <location line=\"-131\"/>\n         <source>Execute command when the best block changes (%s in cmd is replaced by block hash)</source>\n         <translation>Execute command when the best block changes (%s in cmd is replaced by block hash)</translation>\n     </message>\n     <message>\n-        <location line=\"+155\"/>\n+        <location line=\"+160\"/>\n         <source>Upgrade wallet to latest format</source>\n         <translation>Upgrade wallet to latest format</translation>\n     </message>\n@@ -3239,22 +3844,17 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>Unable to bind to %s on this computer (bind returned error %d, %s)</translation>\n     </message>\n     <message>\n-        <location line=\"-95\"/>\n-        <source>Connect through socks proxy</source>\n-        <translation>Connect through socks proxy</translation>\n-    </message>\n-    <message>\n-        <location line=\"-11\"/>\n+        <location line=\"-106\"/>\n         <source>Allow DNS lookups for -addnode, -seednode and -connect</source>\n         <translation>Allow DNS lookups for -addnode, -seednode and -connect</translation>\n     </message>\n     <message>\n-        <location line=\"+58\"/>\n+        <location line=\"+59\"/>\n         <source>Loading addresses...</source>\n         <translation>Loading addresses...</translation>\n     </message>\n     <message>\n-        <location line=\"-36\"/>\n+        <location line=\"-37\"/>\n         <source>Error loading wallet.dat: Wallet corrupted</source>\n         <translation>Error loading wallet.dat: Wallet corrupted</translation>\n     </message>\n@@ -3274,12 +3874,12 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>Error loading wallet.dat</translation>\n     </message>\n     <message>\n-        <location line=\"+30\"/>\n+        <location line=\"+31\"/>\n         <source>Invalid -proxy address: &apos;%s&apos;</source>\n         <translation>Invalid -proxy address: &apos;%s&apos;</translation>\n     </message>\n     <message>\n-        <location line=\"+57\"/>\n+        <location line=\"+56\"/>\n         <source>Unknown network specified in -onlynet: &apos;%s&apos;</source>\n         <translation>Unknown network specified in -onlynet: &apos;%s&apos;</translation>\n     </message>\n@@ -3299,7 +3899,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>Cannot resolve -externalip address: &apos;%s&apos;</translation>\n     </message>\n     <message>\n-        <location line=\"+46\"/>\n+        <location line=\"+47\"/>\n         <source>Invalid amount for -paytxfee=&lt;amount&gt;: &apos;%s&apos;</source>\n         <translation>Invalid amount for -paytxfee=&lt;amount&gt;: &apos;%s&apos;</translation>\n     </message>\n@@ -3319,27 +3919,22 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>Loading block index...</translation>\n     </message>\n     <message>\n-        <location line=\"-60\"/>\n+        <location line=\"-61\"/>\n         <source>Add a node to connect to and attempt to keep the connection open</source>\n         <translation>Add a node to connect to and attempt to keep the connection open</translation>\n     </message>\n     <message>\n-        <location line=\"-28\"/>\n+        <location line=\"-32\"/>\n         <source>Unable to bind to %s on this computer. Bitcoin is probably already running.</source>\n         <translation>Unable to bind to %s on this computer. Bitcoin is probably already running.</translation>\n     </message>\n     <message>\n-        <location line=\"+69\"/>\n-        <source>Fee per KB to add to transactions you send</source>\n-        <translation>Fee per KB to add to transactions you send</translation>\n-    </message>\n-    <message>\n-        <location line=\"+20\"/>\n+        <location line=\"+94\"/>\n         <source>Loading wallet...</source>\n         <translation>Loading wallet...</translation>\n     </message>\n     <message>\n-        <location line=\"-54\"/>\n+        <location line=\"-55\"/>\n         <source>Cannot downgrade wallet</source>\n         <translation>Cannot downgrade wallet</translation>\n     </message>\n@@ -3369,7 +3964,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>Error</translation>\n     </message>\n     <message>\n-        <location line=\"-33\"/>\n+        <location line=\"-34\"/>\n         <source>You must set rpcpassword=&lt;password&gt; in the configuration file:\n %s\n If the file does not exist, create it with owner-readable-only file permissions.</source>"
      }
    ]
  },
  {
    "sha": "93a7861d719ac8b4ec57cf89c3e2d423ba7f18e1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5M2E3ODYxZDcxOWFjOGI0ZWM1N2NmODljM2UyZDQyM2JhN2YxOGUx",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-16T11:26:04Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-16T11:26:20Z"
      },
      "message": "Merge pull request #3425\n\n88ba264 qt: Update English language file for translators (Wladimir J. van der Laan)",
      "tree": {
        "sha": "ff0d871056426653bd70bdbed4178ebdf227540b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ff0d871056426653bd70bdbed4178ebdf227540b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/93a7861d719ac8b4ec57cf89c3e2d423ba7f18e1",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJSruNcAAoJEHSBCwEjRsmm6HEH/Rzv9KyYUyYuoYgWnqi8YeVC\nUIosCMqWRksfm7lhPzUWXS+X16ac35foxC55csVmwUII2FPTHXcY3rYLr2iFoTHl\nVW/cJITSH1Fl2fGvfzwghytK0fAoKlEhlSIl2/dOYE7wIWfeTMiqIPG8MVu6vQi3\ndyG6XywKYXooKfTYEn1BrPk3ZA5aSUjBfN2py5JyfekFZbquCN6uJNEQIDoaclsZ\nVNuZIxo4RHLmadm0ekcf38NljBnUZMW8BvOc02hZaDxE3UiGgUtnQET+b/dar2vj\npJCS6FXUUkPY4BAIlOivUZhPuUv/x6xR6y0jElYBl1NTMlSu0RQI7bUFhujVLVU=\n=VlOu\n-----END PGP SIGNATURE-----",
        "payload": "tree ff0d871056426653bd70bdbed4178ebdf227540b\nparent 2ed38d11a8fb133406201469bfd4fa9e8c926a8a\nparent 88ba2643f0b95ef38f27727ee7be6489edfd8718\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1387193164 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1387193180 +0100\n\nMerge pull request #3425\n\n88ba264 qt: Update English language file for translators (Wladimir J. van der Laan)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/93a7861d719ac8b4ec57cf89c3e2d423ba7f18e1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/93a7861d719ac8b4ec57cf89c3e2d423ba7f18e1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/93a7861d719ac8b4ec57cf89c3e2d423ba7f18e1/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2ed38d11a8fb133406201469bfd4fa9e8c926a8a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2ed38d11a8fb133406201469bfd4fa9e8c926a8a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2ed38d11a8fb133406201469bfd4fa9e8c926a8a"
      },
      {
        "sha": "88ba2643f0b95ef38f27727ee7be6489edfd8718",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/88ba2643f0b95ef38f27727ee7be6489edfd8718",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/88ba2643f0b95ef38f27727ee7be6489edfd8718"
      }
    ],
    "stats": {
      "total": 1474,
      "additions": 1038,
      "deletions": 436
    },
    "files": [
      {
        "sha": "183a98061d04f76b64817402100b1c492d135c31",
        "filename": "src/qt/bitcoinstrings.cpp",
        "status": "modified",
        "additions": 18,
        "deletions": 11,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/93a7861d719ac8b4ec57cf89c3e2d423ba7f18e1/src/qt/bitcoinstrings.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/93a7861d719ac8b4ec57cf89c3e2d423ba7f18e1/src/qt/bitcoinstrings.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoinstrings.cpp?ref=93a7861d719ac8b4ec57cf89c3e2d423ba7f18e1",
        "patch": "@@ -61,8 +61,9 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Number of seconds to keep misbehaving peers from reconnecting (default: \"\n \"86400)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n-\"Set maximum size of high-priority/low-fee transactions in bytes (default: \"\n-\"27000)\"),\n+\"Output debugging information (default: 0, supplying <category> is optional)\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n+\"Set maximum size of high-priority/low-fee transactions in bytes (default: %d)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Set the number of script verification threads (up to 16, 0 = auto, <0 = \"\n \"leave that many cores free, default: 0)\"),\n@@ -72,6 +73,9 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Unable to bind to %s on this computer. Bitcoin is probably already running.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n+\"Use separate SOCKS5 proxy to reach peers via Tor hidden services (default: -\"\n+\"proxy)\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Warning: -paytxfee is set very high! This is the transaction fee you will \"\n \"pay if you send a transaction.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n@@ -95,21 +99,22 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"%s\\n\"\n \"If the file does not exist, create it with owner-readable-only file \"\n \"permissions.\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"<category> can be:\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Accept command line and JSON-RPC commands\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Accept connections from outside (default: 1 if no -proxy or -connect)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Add a node to connect to and attempt to keep the connection open\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Allow DNS lookups for -addnode, -seednode and -connect\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Allow JSON-RPC connections from specified IP address\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Attempt to recover private keys from a corrupt wallet.dat\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Bitcoin Core Daemon\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Bitcoin RPC client version\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Bitcoin version\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Block creation options:\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Cannot downgrade wallet\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Cannot resolve -bind address: '%s'\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Cannot resolve -externalip address: '%s'\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Cannot write default address\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Connect only to the specified node(s)\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Connect through socks proxy\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Connect through SOCKS proxy\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Connect to JSON-RPC on <port> (default: 8332 or testnet: 18332)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Connect to a node to retrieve peer addresses, and disconnect\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Corrupted block database detected\"),\n@@ -138,12 +143,13 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Failed to write file info\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Failed to write to coin database\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Failed to write transaction index\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Failed to write undo data\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Fee per KB to add to transactions you send\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Fee per kB to add to transactions you send\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Find peers using DNS lookup (default: 1 unless -connect)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Generate coins (default: 0)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Get help for a command\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"How many blocks to check at startup (default: 288, 0 = all)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"How thorough the block verification is (0-4, default: 3)\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"If <category> is not supplied, output all debugging information.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Imports blocks from external blk000??.dat file\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Incorrect or no genesis block found. Wrong datadir for network?\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Information\"),\n@@ -167,16 +173,15 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Not enough file descriptors available.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Only accept block chain matching built-in checkpoints (default: 1)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Only connect to nodes in network <net> (IPv4, IPv6 or Tor)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Options:\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Output extra debugging information. Implies all other -debug* options\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Output extra network debugging information\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Password for JSON-RPC connections\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Prepend debug output with timestamp\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Prepend debug output with timestamp (default: 1)\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"RPC client options:\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Rebuild block chain index from current blk000??.dat files\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Rescan the block chain for missing wallet transactions\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Rescanning...\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Run in the background as a daemon and accept commands\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"SSL options: (see the Bitcoin Wiki for SSL setup instructions)\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Select the version of socks proxy to use (4-5, default: 5)\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Select SOCKS version for -proxy (4 or 5, default: 5)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Send command to Bitcoin server\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Send commands to node running on <ip> (default: 127.0.0.1)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Send trace/debug info to console instead of debug.log file\"),\n@@ -185,7 +190,7 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Server certificate file (default: server.cert\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Server private key (default: server.pem)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Set database cache size in megabytes (default: 25)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Set key pool size to <n> (default: 100)\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Set maximum block size in bytes (default: 250000)\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Set maximum block size in bytes (default: %d)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Set minimum block size in bytes (default: 0)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Set the number of threads to service RPC calls (default: 4)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Shrink debug.log file on client startup (default: 1 when no -debug)\"),\n@@ -213,15 +218,17 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Usage:\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Use OpenSSL (https) for JSON-RPC connections\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Use UPnP to map the listening port (default: 0)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Use UPnP to map the listening port (default: 1 when listening)\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Use proxy to reach tor hidden services (default: same as -proxy)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Use the test network\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Username for JSON-RPC connections\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Verifying blocks...\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Verifying wallet...\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Wait for RPC server to start\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Wallet %s resides outside data directory %s\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Wallet needed to be rewritten: restart Bitcoin to complete\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Warning\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Warning: Deprecated argument -debugnet ignored, use -debug=net\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Warning: This version is obsolete, upgrade required!\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"You need to rebuild the database using -reindex to change -txindex\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"version\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"wallet.dat corrupt, salvage failed\"),\n };"
      },
      {
        "sha": "368a4d600318c8ed33f1bc295adfcae7ff4cc80a",
        "filename": "src/qt/locale/bitcoin_en.ts",
        "status": "modified",
        "additions": 1020,
        "deletions": 425,
        "changes": 1445,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/93a7861d719ac8b4ec57cf89c3e2d423ba7f18e1/src/qt/locale/bitcoin_en.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/93a7861d719ac8b4ec57cf89c3e2d423ba7f18e1/src/qt/locale/bitcoin_en.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_en.ts?ref=93a7861d719ac8b4ec57cf89c3e2d423ba7f18e1",
        "patch": "@@ -5,13 +5,13 @@\n     <name>AboutDialog</name>\n     <message>\n         <location filename=\"../forms/aboutdialog.ui\" line=\"+14\"/>\n-        <source>About Bitcoin</source>\n-        <translation>About Bitcoin</translation>\n+        <source>About Bitcoin Core</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n         <location line=\"+39\"/>\n-        <source>&lt;b&gt;Bitcoin&lt;/b&gt; version</source>\n-        <translation>&lt;b&gt;Bitcoin&lt;/b&gt; version</translation>\n+        <source>&lt;b&gt;Bitcoin Core&lt;/b&gt; version</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n         <location line=\"+57\"/>\n@@ -29,7 +29,7 @@ Distributed under the MIT/X11 software license, see the accompanying file COPYIN\n This product includes software developed by the OpenSSL Project for use in the OpenSSL Toolkit (http://www.openssl.org/) and cryptographic software written by Eric Young (eay@cryptsoft.com) and UPnP software written by Thomas Bernard.</translation>\n     </message>\n     <message>\n-        <location filename=\"../aboutdialog.cpp\" line=\"+14\"/>\n+        <location filename=\"../aboutdialog.cpp\" line=\"+19\"/>\n         <source>Copyright</source>\n         <translation>Copyright</translation>\n     </message>\n@@ -72,7 +72,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../addressbookpage.cpp\" line=\"+72\"/>\n+        <location filename=\"../addressbookpage.cpp\" line=\"+74\"/>\n         <source>&amp;Copy Address</source>\n         <translation>&amp;Copy Address</translation>\n     </message>\n@@ -142,7 +142,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation>&amp;Edit</translation>\n     </message>\n     <message>\n-        <location line=\"+197\"/>\n+        <location line=\"+194\"/>\n         <source>Export Address List</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -165,7 +165,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n <context>\n     <name>AddressTableModel</name>\n     <message>\n-        <location filename=\"../addresstablemodel.cpp\" line=\"+164\"/>\n+        <location filename=\"../addresstablemodel.cpp\" line=\"+168\"/>\n         <source>Label</source>\n         <translation>Label</translation>\n     </message>\n@@ -203,7 +203,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation>Repeat new passphrase</translation>\n     </message>\n     <message>\n-        <location filename=\"../askpassphrasedialog.cpp\" line=\"+34\"/>\n+        <location filename=\"../askpassphrasedialog.cpp\" line=\"+40\"/>\n         <source>Enter the new passphrase to the wallet.&lt;br/&gt;Please use a passphrase of &lt;b&gt;10 or more random characters&lt;/b&gt;, or &lt;b&gt;eight or more words&lt;/b&gt;.</source>\n         <translation>Enter the new passphrase to the wallet.&lt;br/&gt;Please use a passphrase of &lt;b&gt;10 or more random characters&lt;/b&gt;, or &lt;b&gt;eight or more words&lt;/b&gt;.</translation>\n     </message>\n@@ -324,17 +324,17 @@ This product includes software developed by the OpenSSL Project for use in the O\n <context>\n     <name>BitcoinGUI</name>\n     <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"+250\"/>\n+        <location filename=\"../bitcoingui.cpp\" line=\"+260\"/>\n         <source>Sign &amp;message...</source>\n         <translation>Sign &amp;message...</translation>\n     </message>\n     <message>\n-        <location line=\"+254\"/>\n+        <location line=\"+290\"/>\n         <source>Synchronizing with network...</source>\n         <translation>Synchronizing with network...</translation>\n     </message>\n     <message>\n-        <location line=\"-324\"/>\n+        <location line=\"-360\"/>\n         <source>&amp;Overview</source>\n         <translation>&amp;Overview</translation>\n     </message>\n@@ -400,7 +400,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation>&amp;Change Passphrase...</translation>\n     </message>\n     <message>\n-        <location line=\"+259\"/>\n+        <location line=\"+295\"/>\n         <source>Importing blocks from disk...</source>\n         <translation>Importing blocks from disk...</translation>\n     </message>\n@@ -410,7 +410,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation>Reindexing blocks on disk...</translation>\n     </message>\n     <message>\n-        <location line=\"-322\"/>\n+        <location line=\"-358\"/>\n         <source>Send coins to a Bitcoin address</source>\n         <translation>Send coins to a Bitcoin address</translation>\n     </message>\n@@ -445,20 +445,18 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation>&amp;Verify message...</translation>\n     </message>\n     <message>\n-        <location line=\"-180\"/>\n-        <location line=\"+6\"/>\n-        <location line=\"+513\"/>\n+        <location line=\"+375\"/>\n         <source>Bitcoin</source>\n         <translation>Bitcoin</translation>\n     </message>\n     <message>\n-        <location line=\"-519\"/>\n-        <location line=\"+6\"/>\n+        <location line=\"-563\"/>\n+        <location line=\"+10\"/>\n         <source>Wallet</source>\n         <translation>Wallet</translation>\n     </message>\n     <message>\n-        <location line=\"+109\"/>\n+        <location line=\"+113\"/>\n         <source>&amp;Send</source>\n         <translation>&amp;Send</translation>\n     </message>\n@@ -468,13 +466,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation>&amp;Receive</translation>\n     </message>\n     <message>\n-        <location line=\"+28\"/>\n-        <location line=\"+2\"/>\n-        <source>&amp;About Bitcoin</source>\n-        <translation>&amp;About Bitcoin</translation>\n-    </message>\n-    <message>\n-        <location line=\"+14\"/>\n+        <location line=\"+44\"/>\n         <location line=\"+2\"/>\n         <source>&amp;Show / Hide</source>\n         <translation>&amp;Show / Hide</translation>\n@@ -500,12 +492,12 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation>Verify messages to ensure they were signed with specified Bitcoin addresses</translation>\n     </message>\n     <message>\n-        <location line=\"+35\"/>\n+        <location line=\"+39\"/>\n         <source>&amp;File</source>\n         <translation>&amp;File</translation>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n+        <location line=\"+11\"/>\n         <source>&amp;Settings</source>\n         <translation>&amp;Settings</translation>\n     </message>\n@@ -520,18 +512,30 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation>Tabs toolbar</translation>\n     </message>\n     <message>\n-        <location line=\"-235\"/>\n-        <location line=\"+294\"/>\n+        <location line=\"-244\"/>\n+        <location line=\"+321\"/>\n         <source>[testnet]</source>\n         <translation>[testnet]</translation>\n     </message>\n     <message>\n-        <location line=\"-177\"/>\n+        <location line=\"-331\"/>\n+        <location line=\"+10\"/>\n+        <source>Bitcoin Core</source>\n+        <translation type=\"unfinished\">Bitcoin Core</translation>\n+    </message>\n+    <message>\n+        <location line=\"+121\"/>\n         <source>Request payments (generates QR codes and bitcoin: URIs)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+63\"/>\n+        <location line=\"+27\"/>\n+        <location line=\"+2\"/>\n+        <source>&amp;About Bitcoin Core</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+34\"/>\n         <source>&amp;Used sending addresses...</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -551,13 +555,23 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+106\"/>\n+        <location line=\"+2\"/>\n+        <source>Open URI...</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Open a bitcoin: URI or payment request</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+126\"/>\n         <location line=\"+5\"/>\n         <source>Bitcoin client</source>\n         <translation>Bitcoin client</translation>\n     </message>\n     <message numerus=\"yes\">\n-        <location line=\"+120\"/>\n+        <location line=\"+133\"/>\n         <source>%n active connection(s) to Bitcoin network</source>\n         <translation>\n             <numerusform>%n active connection to Bitcoin network</numerusform>\n@@ -677,17 +691,7 @@ Address: %4\n </translation>\n     </message>\n     <message>\n-        <location line=\"+34\"/>\n-        <source>URI handling</source>\n-        <translation>URI handling</translation>\n-    </message>\n-    <message>\n-        <location line=\"+0\"/>\n-        <source>URI can not be parsed! This can be caused by an invalid Bitcoin address or malformed URI parameters.</source>\n-        <translation>URI can not be parsed! This can be caused by an invalid Bitcoin address or malformed URI parameters.</translation>\n-    </message>\n-    <message>\n-        <location line=\"+45\"/>\n+        <location line=\"+67\"/>\n         <source>Wallet is &lt;b&gt;encrypted&lt;/b&gt; and currently &lt;b&gt;unlocked&lt;/b&gt;</source>\n         <translation>Wallet is &lt;b&gt;encrypted&lt;/b&gt; and currently &lt;b&gt;unlocked&lt;/b&gt;</translation>\n     </message>\n@@ -697,256 +701,581 @@ Address: %4\n         <translation>Wallet is &lt;b&gt;encrypted&lt;/b&gt; and currently &lt;b&gt;locked&lt;/b&gt;</translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoin.cpp\" line=\"+110\"/>\n+        <location filename=\"../bitcoin.cpp\" line=\"+116\"/>\n         <source>A fatal error occurred. Bitcoin can no longer continue safely and will quit.</source>\n         <translation>A fatal error occurred. Bitcoin can no longer continue safely and will quit.</translation>\n     </message>\n </context>\n <context>\n     <name>ClientModel</name>\n     <message>\n-        <location filename=\"../clientmodel.cpp\" line=\"+115\"/>\n+        <location filename=\"../clientmodel.cpp\" line=\"+119\"/>\n         <source>Network Alert</source>\n         <translation>Network Alert</translation>\n     </message>\n </context>\n <context>\n-    <name>EditAddressDialog</name>\n+    <name>CoinControlDialog</name>\n     <message>\n-        <location filename=\"../forms/editaddressdialog.ui\" line=\"+14\"/>\n-        <source>Edit Address</source>\n-        <translation>Edit Address</translation>\n+        <location filename=\"../forms/coincontroldialog.ui\" line=\"+14\"/>\n+        <source>Coin Control Address Selection</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+11\"/>\n-        <source>&amp;Label</source>\n-        <translation>&amp;Label</translation>\n+        <location line=\"+34\"/>\n+        <source>Quantity:</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n-        <source>The label associated with this address list entry</source>\n+        <location line=\"+29\"/>\n+        <source>Bytes:</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+17\"/>\n-        <source>The address associated with this address list entry. This can only be modified for sending addresses.</source>\n+        <location line=\"+45\"/>\n+        <source>Amount:</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"-10\"/>\n-        <source>&amp;Address</source>\n-        <translation>&amp;Address</translation>\n+        <location line=\"+29\"/>\n+        <source>Priority:</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../editaddressdialog.cpp\" line=\"+21\"/>\n-        <source>New receiving address</source>\n-        <translation>New receiving address</translation>\n+        <location line=\"+45\"/>\n+        <source>Fee:</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n-        <source>New sending address</source>\n-        <translation>New sending address</translation>\n+        <location line=\"+32\"/>\n+        <source>Low Output:</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+3\"/>\n-        <source>Edit receiving address</source>\n-        <translation>Edit receiving address</translation>\n+        <location line=\"+48\"/>\n+        <source>After Fee:</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n-        <source>Edit sending address</source>\n-        <translation>Edit sending address</translation>\n+        <location line=\"+32\"/>\n+        <source>Change:</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+76\"/>\n-        <source>The entered address &quot;%1&quot; is already in the address book.</source>\n-        <translation>The entered address &quot;%1&quot; is already in the address book.</translation>\n+        <location line=\"+63\"/>\n+        <source>(un)select all</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"-5\"/>\n-        <source>The entered address &quot;%1&quot; is not a valid Bitcoin address.</source>\n-        <translation>The entered address &quot;%1&quot; is not a valid Bitcoin address.</translation>\n+        <location line=\"+13\"/>\n+        <source>Tree mode</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+16\"/>\n+        <source>List mode</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+52\"/>\n+        <source>Amount</source>\n+        <translation type=\"unfinished\">Amount</translation>\n     </message>\n     <message>\n         <location line=\"+10\"/>\n-        <source>Could not unlock wallet.</source>\n-        <translation>Could not unlock wallet.</translation>\n+        <source>Address</source>\n+        <translation type=\"unfinished\">Address</translation>\n     </message>\n     <message>\n         <location line=\"+5\"/>\n-        <source>New key generation failed.</source>\n-        <translation>New key generation failed.</translation>\n+        <source>Date</source>\n+        <translation type=\"unfinished\">Date</translation>\n     </message>\n-</context>\n-<context>\n-    <name>FreespaceChecker</name>\n     <message>\n-        <location filename=\"../intro.cpp\" line=\"+61\"/>\n-        <source>A new data directory will be created.</source>\n-        <translation>A new data directory will be created.</translation>\n+        <location line=\"+5\"/>\n+        <source>Confirmations</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+22\"/>\n-        <source>name</source>\n-        <translation>name</translation>\n+        <location line=\"+3\"/>\n+        <source>Confirmed</source>\n+        <translation type=\"unfinished\">Confirmed</translation>\n     </message>\n     <message>\n-        <location line=\"+2\"/>\n-        <source>Directory already exists. Add %1 if you intend to create a new directory here.</source>\n-        <translation>Directory already exists. Add %1 if you intend to create a new directory here.</translation>\n+        <location line=\"+5\"/>\n+        <source>Priority</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+3\"/>\n-        <source>Path already exists, and is not a directory.</source>\n-        <translation>Path already exists, and is not a directory.</translation>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"+42\"/>\n+        <source>Copy address</source>\n+        <translation type=\"unfinished\">Copy address</translation>\n     </message>\n     <message>\n-        <location line=\"+7\"/>\n-        <source>Cannot create data directory here.</source>\n-        <translation>Cannot create data directory here.</translation>\n+        <location line=\"+1\"/>\n+        <source>Copy label</source>\n+        <translation type=\"unfinished\">Copy label</translation>\n     </message>\n-</context>\n-<context>\n-    <name>GUIUtil::HelpMessageBox</name>\n     <message>\n-        <location filename=\"../guiutil.cpp\" line=\"+558\"/>\n-        <location line=\"+13\"/>\n-        <source>Bitcoin-Qt</source>\n-        <translation>Bitcoin-Qt</translation>\n+        <location line=\"+1\"/>\n+        <location line=\"+26\"/>\n+        <source>Copy amount</source>\n+        <translation type=\"unfinished\">Copy amount</translation>\n     </message>\n     <message>\n-        <location line=\"-13\"/>\n-        <source>version</source>\n-        <translation>version</translation>\n+        <location line=\"-25\"/>\n+        <source>Copy transaction ID</source>\n+        <translation type=\"unfinished\">Copy transaction ID</translation>\n     </message>\n     <message>\n-        <location line=\"+2\"/>\n-        <source>Usage:</source>\n-        <translation>Usage:</translation>\n+        <location line=\"+1\"/>\n+        <source>Lock unspent</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n         <location line=\"+1\"/>\n-        <source>command-line options</source>\n-        <translation>command-line options</translation>\n+        <source>Unlock unspent</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n-        <source>UI options</source>\n-        <translation>UI options</translation>\n+        <location line=\"+22\"/>\n+        <source>Copy quantity</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+1\"/>\n-        <source>Set language, for example &quot;de_DE&quot; (default: system locale)</source>\n-        <translation>Set language, for example &quot;de_DE&quot; (default: system locale)</translation>\n+        <location line=\"+2\"/>\n+        <source>Copy fee</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n         <location line=\"+1\"/>\n-        <source>Start minimized</source>\n-        <translation>Start minimized</translation>\n+        <source>Copy after fee</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n         <location line=\"+1\"/>\n-        <source>Show splash screen on startup (default: 1)</source>\n-        <translation>Show splash screen on startup (default: 1)</translation>\n+        <source>Copy bytes</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n         <location line=\"+1\"/>\n-        <source>Choose data directory on startup (default: 0)</source>\n-        <translation>Choose data directory on startup (default: 0)</translation>\n+        <source>Copy priority</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n-</context>\n-<context>\n-    <name>Intro</name>\n     <message>\n-        <location filename=\"../forms/intro.ui\" line=\"+14\"/>\n-        <source>Welcome</source>\n-        <translation>Welcome</translation>\n+        <location line=\"+1\"/>\n+        <source>Copy low output</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+9\"/>\n-        <source>Welcome to Bitcoin-Qt.</source>\n-        <translation>Welcome to Bitcoin-Qt.</translation>\n+        <location line=\"+1\"/>\n+        <source>Copy change</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+26\"/>\n-        <source>As this is the first time the program is launched, you can choose where Bitcoin-Qt will store its data.</source>\n-        <translation>As this is the first time the program is launched, you can choose where Bitcoin-Qt will store its data.</translation>\n+        <location line=\"+323\"/>\n+        <source>highest</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n-        <source>Bitcoin-Qt will download and store a copy of the Bitcoin block chain. At least %1GB of data will be stored in this directory, and it will grow over time. The wallet will also be stored in this directory.</source>\n-        <translation>Bitcoin-Qt will download and store a copy of the Bitcoin block chain. At least %1GB of data will be stored in this directory, and it will grow over time. The wallet will also be stored in this directory.</translation>\n+        <location line=\"+1\"/>\n+        <source>higher</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n-        <source>Use the default data directory</source>\n-        <translation>Use the default data directory</translation>\n+        <location line=\"+1\"/>\n+        <source>high</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+7\"/>\n-        <source>Use a custom data directory:</source>\n-        <translation>Use a custom data directory:</translation>\n+        <location line=\"+1\"/>\n+        <source>medium-high</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../intro.cpp\" line=\"+105\"/>\n-        <source>Error</source>\n-        <translation>Error</translation>\n+        <location line=\"+1\"/>\n+        <source>medium</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+9\"/>\n-        <source>GB of free space available</source>\n-        <translation>GB of free space available</translation>\n+        <location line=\"+4\"/>\n+        <source>low-medium</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+3\"/>\n-        <source>(of %1GB needed)</source>\n-        <translation>(of %1GB needed)</translation>\n+        <location line=\"+1\"/>\n+        <source>low</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n-</context>\n-<context>\n-    <name>OptionsDialog</name>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"+14\"/>\n-        <source>Options</source>\n-        <translation>Options</translation>\n+        <location line=\"+1\"/>\n+        <source>lower</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+16\"/>\n-        <source>&amp;Main</source>\n-        <translation>&amp;Main</translation>\n+        <location line=\"+1\"/>\n+        <source>lowest</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+6\"/>\n-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB.</source>\n-        <translation>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB.</translation>\n+        <location line=\"+11\"/>\n+        <source>(%1 locked)</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+15\"/>\n-        <source>Pay transaction &amp;fee</source>\n-        <translation>Pay transaction &amp;fee</translation>\n+        <location line=\"+171\"/>\n+        <source>Dust</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+31\"/>\n-        <source>Automatically start Bitcoin after logging in to the system.</source>\n-        <translation>Automatically start Bitcoin after logging in to the system.</translation>\n+        <location line=\"+0\"/>\n+        <source>yes</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+3\"/>\n-        <source>&amp;Start Bitcoin on system login</source>\n-        <translation>&amp;Start Bitcoin on system login</translation>\n+        <location line=\"+0\"/>\n+        <source>no</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+35\"/>\n-        <source>Reset all client options to default.</source>\n-        <translation>Reset all client options to default.</translation>\n+        <location line=\"+10\"/>\n+        <source>This label turns red, if the transaction size is greater than 1000 bytes.</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+3\"/>\n-        <source>&amp;Reset Options</source>\n-        <translation>&amp;Reset Options</translation>\n+        <location line=\"+1\"/>\n+        <location line=\"+5\"/>\n+        <source>This means a fee of at least %1 per kB is required.</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+13\"/>\n+        <location line=\"-4\"/>\n+        <source>Can vary +/- 1 byte per input.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+2\"/>\n+        <source>Transactions with higher priority are more likely to get included into a block.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>This label turns red, if the priority is smaller than &quot;medium&quot;</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>This label turns red, if any recipient receives an amount smaller than %1.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <location line=\"+4\"/>\n+        <source>This means a fee of at least %1 is required.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"-3\"/>\n+        <source>Amounts below 0.546 times the minimum relay fee are shown as dust.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+2\"/>\n+        <source>This label turns red, if the change is smaller than %1.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+43\"/>\n+        <location line=\"+66\"/>\n+        <source>(no label)</source>\n+        <translation type=\"unfinished\">(no label)</translation>\n+    </message>\n+    <message>\n+        <location line=\"-9\"/>\n+        <source>change from %1 (%2)</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>(change)</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+</context>\n+<context>\n+    <name>EditAddressDialog</name>\n+    <message>\n+        <location filename=\"../forms/editaddressdialog.ui\" line=\"+14\"/>\n+        <source>Edit Address</source>\n+        <translation>Edit Address</translation>\n+    </message>\n+    <message>\n+        <location line=\"+11\"/>\n+        <source>&amp;Label</source>\n+        <translation>&amp;Label</translation>\n+    </message>\n+    <message>\n+        <location line=\"+10\"/>\n+        <source>The label associated with this address list entry</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+17\"/>\n+        <source>The address associated with this address list entry. This can only be modified for sending addresses.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"-10\"/>\n+        <source>&amp;Address</source>\n+        <translation>&amp;Address</translation>\n+    </message>\n+    <message>\n+        <location filename=\"../editaddressdialog.cpp\" line=\"+25\"/>\n+        <source>New receiving address</source>\n+        <translation>New receiving address</translation>\n+    </message>\n+    <message>\n+        <location line=\"+4\"/>\n+        <source>New sending address</source>\n+        <translation>New sending address</translation>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>Edit receiving address</source>\n+        <translation>Edit receiving address</translation>\n+    </message>\n+    <message>\n+        <location line=\"+4\"/>\n+        <source>Edit sending address</source>\n+        <translation>Edit sending address</translation>\n+    </message>\n+    <message>\n+        <location line=\"+76\"/>\n+        <source>The entered address &quot;%1&quot; is already in the address book.</source>\n+        <translation>The entered address &quot;%1&quot; is already in the address book.</translation>\n+    </message>\n+    <message>\n+        <location line=\"-5\"/>\n+        <source>The entered address &quot;%1&quot; is not a valid Bitcoin address.</source>\n+        <translation>The entered address &quot;%1&quot; is not a valid Bitcoin address.</translation>\n+    </message>\n+    <message>\n+        <location line=\"+10\"/>\n+        <source>Could not unlock wallet.</source>\n+        <translation>Could not unlock wallet.</translation>\n+    </message>\n+    <message>\n+        <location line=\"+5\"/>\n+        <source>New key generation failed.</source>\n+        <translation>New key generation failed.</translation>\n+    </message>\n+</context>\n+<context>\n+    <name>FreespaceChecker</name>\n+    <message>\n+        <location filename=\"../intro.cpp\" line=\"+65\"/>\n+        <source>A new data directory will be created.</source>\n+        <translation>A new data directory will be created.</translation>\n+    </message>\n+    <message>\n+        <location line=\"+22\"/>\n+        <source>name</source>\n+        <translation>name</translation>\n+    </message>\n+    <message>\n+        <location line=\"+2\"/>\n+        <source>Directory already exists. Add %1 if you intend to create a new directory here.</source>\n+        <translation>Directory already exists. Add %1 if you intend to create a new directory here.</translation>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>Path already exists, and is not a directory.</source>\n+        <translation>Path already exists, and is not a directory.</translation>\n+    </message>\n+    <message>\n+        <location line=\"+7\"/>\n+        <source>Cannot create data directory here.</source>\n+        <translation>Cannot create data directory here.</translation>\n+    </message>\n+</context>\n+<context>\n+    <name>GUIUtil::HelpMessageBox</name>\n+    <message>\n+        <location filename=\"../guiutil.cpp\" line=\"+597\"/>\n+        <source>version</source>\n+        <translation>version</translation>\n+    </message>\n+    <message>\n+        <location line=\"+0\"/>\n+        <location line=\"+13\"/>\n+        <source>Bitcoin Core</source>\n+        <translation type=\"unfinished\">Bitcoin Core</translation>\n+    </message>\n+    <message>\n+        <location line=\"-11\"/>\n+        <source>Usage:</source>\n+        <translation>Usage:</translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>command-line options</source>\n+        <translation>command-line options</translation>\n+    </message>\n+    <message>\n+        <location line=\"+4\"/>\n+        <source>UI options</source>\n+        <translation>UI options</translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Set language, for example &quot;de_DE&quot; (default: system locale)</source>\n+        <translation>Set language, for example &quot;de_DE&quot; (default: system locale)</translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Start minimized</source>\n+        <translation>Start minimized</translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Show splash screen on startup (default: 1)</source>\n+        <translation>Show splash screen on startup (default: 1)</translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Choose data directory on startup (default: 0)</source>\n+        <translation>Choose data directory on startup (default: 0)</translation>\n+    </message>\n+</context>\n+<context>\n+    <name>Intro</name>\n+    <message>\n+        <location filename=\"../forms/intro.ui\" line=\"+14\"/>\n+        <source>Welcome</source>\n+        <translation>Welcome</translation>\n+    </message>\n+    <message>\n+        <location line=\"+9\"/>\n+        <source>Welcome to Bitcoin Core.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+26\"/>\n+        <source>As this is the first time the program is launched, you can choose where Bitcoin Core will store its data.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+10\"/>\n+        <source>Bitcoin Core will download and store a copy of the Bitcoin block chain. At least %1GB of data will be stored in this directory, and it will grow over time. The wallet will also be stored in this directory.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+10\"/>\n+        <source>Use the default data directory</source>\n+        <translation>Use the default data directory</translation>\n+    </message>\n+    <message>\n+        <location line=\"+7\"/>\n+        <source>Use a custom data directory:</source>\n+        <translation>Use a custom data directory:</translation>\n+    </message>\n+    <message>\n+        <location filename=\"../intro.cpp\" line=\"+85\"/>\n+        <source>Bitcoin</source>\n+        <translation type=\"unfinished\">Bitcoin</translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Error: Specified data directory &quot;%1&quot; can not be created.</source>\n+        <translation type=\"unfinished\">Error: Specified data directory &quot;%1&quot; can not be created.</translation>\n+    </message>\n+    <message>\n+        <location line=\"+19\"/>\n+        <source>Error</source>\n+        <translation>Error</translation>\n+    </message>\n+    <message>\n+        <location line=\"+9\"/>\n+        <source>GB of free space available</source>\n+        <translation>GB of free space available</translation>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>(of %1GB needed)</source>\n+        <translation>(of %1GB needed)</translation>\n+    </message>\n+</context>\n+<context>\n+    <name>OpenURIDialog</name>\n+    <message>\n+        <location filename=\"../forms/openuridialog.ui\" line=\"+14\"/>\n+        <source>Open URI</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+6\"/>\n+        <source>Open payment request from URI or file</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+9\"/>\n+        <source>URI:</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+11\"/>\n+        <source>Select payment request file</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location filename=\"../openuridialog.cpp\" line=\"+47\"/>\n+        <source>Select payment request file to open</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+</context>\n+<context>\n+    <name>OptionsDialog</name>\n+    <message>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"+14\"/>\n+        <source>Options</source>\n+        <translation>Options</translation>\n+    </message>\n+    <message>\n+        <location line=\"+16\"/>\n+        <source>&amp;Main</source>\n+        <translation>&amp;Main</translation>\n+    </message>\n+    <message>\n+        <location line=\"+6\"/>\n+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB.</source>\n+        <translation>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB.</translation>\n+    </message>\n+    <message>\n+        <location line=\"+15\"/>\n+        <source>Pay transaction &amp;fee</source>\n+        <translation>Pay transaction &amp;fee</translation>\n+    </message>\n+    <message>\n+        <location line=\"+31\"/>\n+        <source>Automatically start Bitcoin after logging in to the system.</source>\n+        <translation>Automatically start Bitcoin after logging in to the system.</translation>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>&amp;Start Bitcoin on system login</source>\n+        <translation>&amp;Start Bitcoin on system login</translation>\n+    </message>\n+    <message>\n+        <location line=\"+35\"/>\n+        <source>Reset all client options to default.</source>\n+        <translation>Reset all client options to default.</translation>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>&amp;Reset Options</source>\n+        <translation>&amp;Reset Options</translation>\n+    </message>\n+    <message>\n+        <location line=\"+13\"/>\n         <source>&amp;Network</source>\n         <translation>&amp;Network</translation>\n     </message>\n@@ -1060,6 +1389,16 @@ Address: %4\n         <source>&amp;Display addresses in transaction list</source>\n         <translation>&amp;Display addresses in transaction list</translation>\n     </message>\n+    <message>\n+        <location line=\"+7\"/>\n+        <source>Whether to show coin control features or not.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>Display coin &amp;control features (experts only)</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n     <message>\n         <location line=\"+71\"/>\n         <source>&amp;OK</source>\n@@ -1076,12 +1415,12 @@ Address: %4\n         <translation>&amp;Apply</translation>\n     </message>\n     <message>\n-        <location filename=\"../optionsdialog.cpp\" line=\"+58\"/>\n+        <location filename=\"../optionsdialog.cpp\" line=\"+63\"/>\n         <source>default</source>\n         <translation>default</translation>\n     </message>\n     <message>\n-        <location line=\"+130\"/>\n+        <location line=\"+131\"/>\n         <source>Confirm options reset</source>\n         <translation>Confirm options reset</translation>\n     </message>\n@@ -1122,17 +1461,17 @@ Address: %4\n     </message>\n     <message>\n         <location line=\"+50\"/>\n-        <location line=\"+202\"/>\n+        <location line=\"+214\"/>\n         <source>The displayed information may be out of date. Your wallet automatically synchronizes with the Bitcoin network after a connection is established, but this process has not completed yet.</source>\n         <translation>The displayed information may be out of date. Your wallet automatically synchronizes with the Bitcoin network after a connection is established, but this process has not completed yet.</translation>\n     </message>\n     <message>\n-        <location line=\"-131\"/>\n+        <location line=\"-140\"/>\n         <source>Unconfirmed:</source>\n         <translation>Unconfirmed:</translation>\n     </message>\n     <message>\n-        <location line=\"-78\"/>\n+        <location line=\"-81\"/>\n         <source>Wallet</source>\n         <translation>Wallet</translation>\n     </message>\n@@ -1147,12 +1486,12 @@ Address: %4\n         <translation>Your current spendable balance</translation>\n     </message>\n     <message>\n-        <location line=\"+29\"/>\n+        <location line=\"+32\"/>\n         <source>Total of transactions that have yet to be confirmed, and do not yet count toward the spendable balance</source>\n         <translation>Total of transactions that have yet to be confirmed, and do not yet count toward the spendable balance</translation>\n     </message>\n     <message>\n-        <location line=\"+13\"/>\n+        <location line=\"+16\"/>\n         <source>Immature:</source>\n         <translation>Immature:</translation>\n     </message>\n@@ -1162,7 +1501,7 @@ Address: %4\n         <translation>Mined balance that has not yet matured</translation>\n     </message>\n     <message>\n-        <location line=\"+13\"/>\n+        <location line=\"+16\"/>\n         <source>Total:</source>\n         <translation>Total:</translation>\n     </message>\n@@ -1172,12 +1511,12 @@ Address: %4\n         <translation>Your current total balance</translation>\n     </message>\n     <message>\n-        <location line=\"+53\"/>\n+        <location line=\"+56\"/>\n         <source>&lt;b&gt;Recent transactions&lt;/b&gt;</source>\n         <translation>&lt;b&gt;Recent transactions&lt;/b&gt;</translation>\n     </message>\n     <message>\n-        <location filename=\"../overviewpage.cpp\" line=\"+116\"/>\n+        <location filename=\"../overviewpage.cpp\" line=\"+120\"/>\n         <location line=\"+1\"/>\n         <source>out of sync</source>\n         <translation>out of sync</translation>\n@@ -1186,7 +1525,7 @@ Address: %4\n <context>\n     <name>PaymentServer</name>\n     <message>\n-        <location filename=\"../paymentserver.cpp\" line=\"+392\"/>\n+        <location filename=\"../paymentserver.cpp\" line=\"+397\"/>\n         <source>URI handling</source>\n         <translation type=\"unfinished\">URI handling</translation>\n     </message>\n@@ -1196,23 +1535,29 @@ Address: %4\n         <translation type=\"unfinished\">URI can not be parsed! This can be caused by an invalid Bitcoin address or malformed URI parameters.</translation>\n     </message>\n     <message>\n-        <location line=\"+69\"/>\n+        <location line=\"+91\"/>\n         <source>Requested payment amount of %1 is too small (considered dust).</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n-        <location line=\"+37\"/>\n+        <location line=\"-204\"/>\n+        <location line=\"+195\"/>\n+        <location line=\"+13\"/>\n         <source>Payment request error</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+1\"/>\n-        <source>Insecure requests to custom payment scripts unsupported</source>\n+        <location line=\"-207\"/>\n+        <source>Cannot start bitcoin: click-to-pay handler</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+38\"/>\n+        <location line=\"+195\"/>\n+        <source>Unverified payment requests to custom payment scripts are unsupported.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+59\"/>\n         <source>Refund from %1</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -1222,7 +1567,7 @@ Address: %4\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+31\"/>\n+        <location line=\"+28\"/>\n         <source>Bad response from server %1</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -1232,8 +1577,8 @@ Address: %4\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"-58\"/>\n-        <location line=\"+30\"/>\n+        <location line=\"-55\"/>\n+        <location line=\"+27\"/>\n         <location line=\"+17\"/>\n         <source>Network request error</source>\n         <translation type=\"unfinished\"></translation>\n@@ -1242,9 +1587,8 @@ Address: %4\n <context>\n     <name>QObject</name>\n     <message>\n-        <location filename=\"../bitcoin.cpp\" line=\"+114\"/>\n+        <location filename=\"../bitcoin.cpp\" line=\"+119\"/>\n         <location line=\"+5\"/>\n-        <location filename=\"../intro.cpp\" line=\"-32\"/>\n         <source>Bitcoin</source>\n         <translation>Bitcoin</translation>\n     </message>\n@@ -1258,16 +1602,11 @@ Address: %4\n         <source>Error: Invalid combination of -regtest and -testnet.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n-    <message>\n-        <location filename=\"../intro.cpp\" line=\"+1\"/>\n-        <source>Error: Specified data directory &quot;%1&quot; can not be created.</source>\n-        <translation>Error: Specified data directory &quot;%1&quot; can not be created.</translation>\n-    </message>\n </context>\n <context>\n     <name>QRImageWidget</name>\n     <message>\n-        <location filename=\"../receiverequestdialog.cpp\" line=\"+32\"/>\n+        <location filename=\"../receiverequestdialog.cpp\" line=\"+36\"/>\n         <source>&amp;Save Image...</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -1283,8 +1622,8 @@ Address: %4\n     </message>\n     <message>\n         <location line=\"+0\"/>\n-        <source>PNG Images (*.png)</source>\n-        <translation type=\"unfinished\">PNG Images (*.png)</translation>\n+        <source>PNG Image (*.png)</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n </context>\n <context>\n@@ -1304,7 +1643,7 @@ Address: %4\n         <location line=\"+53\"/>\n         <location line=\"+23\"/>\n         <location line=\"+23\"/>\n-        <location filename=\"../rpcconsole.cpp\" line=\"+352\"/>\n+        <location filename=\"../rpcconsole.cpp\" line=\"+360\"/>\n         <source>N/A</source>\n         <translation>N/A</translation>\n     </message>\n@@ -1319,7 +1658,12 @@ Address: %4\n         <translation>&amp;Information</translation>\n     </message>\n     <message>\n-        <location line=\"+68\"/>\n+        <location line=\"-10\"/>\n+        <source>Debug window</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+78\"/>\n         <source>Using OpenSSL version</source>\n         <translation>Using OpenSSL version</translation>\n     </message>\n@@ -1374,12 +1718,7 @@ Address: %4\n         <translation>Command-line options</translation>\n     </message>\n     <message>\n-        <location line=\"+7\"/>\n-        <source>Show the Bitcoin-Qt help message to get a list with possible Bitcoin command-line options.</source>\n-        <translation>Show the Bitcoin-Qt help message to get a list with possible Bitcoin command-line options.</translation>\n-    </message>\n-    <message>\n-        <location line=\"+3\"/>\n+        <location line=\"+10\"/>\n         <source>&amp;Show</source>\n         <translation>&amp;Show</translation>\n     </message>\n@@ -1419,12 +1758,7 @@ Address: %4\n         <translation>Build date</translation>\n     </message>\n     <message>\n-        <location line=\"-104\"/>\n-        <source>Bitcoin - Debug window</source>\n-        <translation>Bitcoin - Debug window</translation>\n-    </message>\n-    <message>\n-        <location line=\"+25\"/>\n+        <location line=\"-79\"/>\n         <source>Bitcoin Core</source>\n         <translation>Bitcoin Core</translation>\n     </message>\n@@ -1439,7 +1773,12 @@ Address: %4\n         <translation>Open the Bitcoin debug log file from the current data directory. This can take a few seconds for large log files.</translation>\n     </message>\n     <message>\n-        <location line=\"+102\"/>\n+        <location line=\"+26\"/>\n+        <source>Show the Bitcoin-Core help message to get a list with possible Bitcoin command-line options.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+76\"/>\n         <source>Clear console</source>\n         <translation>Clear console</translation>\n     </message>\n@@ -1497,37 +1836,32 @@ Address: %4\n <context>\n     <name>ReceiveCoinsDialog</name>\n     <message>\n-        <location filename=\"../forms/receivecoinsdialog.ui\" line=\"+22\"/>\n+        <location filename=\"../forms/receivecoinsdialog.ui\" line=\"+83\"/>\n         <source>&amp;Amount:</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+16\"/>\n+        <location line=\"+19\"/>\n         <source>The amount to request</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+7\"/>\n+        <location line=\"-32\"/>\n         <source>&amp;Label:</source>\n         <translation type=\"unfinished\">&amp;Label:</translation>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n-        <source>The label to associate with the receiving address</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location line=\"+7\"/>\n+        <location line=\"-34\"/>\n         <source>&amp;Message:</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n+        <location line=\"+20\"/>\n         <source>The message to attach to payment request</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+14\"/>\n+        <location line=\"-37\"/>\n         <source>Reuse one of the previously used receiving addresses. Reusing addresses has security and privacy issues. Do not use this unless re-generating a payment request made before.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -1537,12 +1871,17 @@ Address: %4\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+7\"/>\n+        <location line=\"+27\"/>\n+        <source>The label to associate with the new receiving address</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+14\"/>\n         <source>Use this form to request payments. All fields are optional.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+17\"/>\n+        <location line=\"+56\"/>\n         <source>Clear all fields of the form.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -1556,6 +1895,31 @@ Address: %4\n         <source>&amp;Request payment</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n+    <message>\n+        <location line=\"+47\"/>\n+        <source>Previously requested payments</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+12\"/>\n+        <source>Show the selected request (does the same as double clicking an entry)</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>Show</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+11\"/>\n+        <source>Remove the selected entries from the list</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>Remove</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n </context>\n <context>\n     <name>ReceiveRequestDialog</name>\n@@ -1574,18 +1938,13 @@ Address: %4\n         <source>Copy &amp;Address</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n-    <message>\n-        <location line=\"+7\"/>\n-        <source>&amp;Copy Image</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n     <message>\n         <location line=\"+7\"/>\n         <source>&amp;Save Image...</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../receiverequestdialog.cpp\" line=\"+58\"/>\n+        <location filename=\"../receiverequestdialog.cpp\" line=\"+56\"/>\n         <source>Request payment to %1</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -1630,17 +1989,120 @@ Address: %4\n         <translation type=\"unfinished\">Error encoding URI into QR Code.</translation>\n     </message>\n </context>\n+<context>\n+    <name>RecentRequestsTableModel</name>\n+    <message>\n+        <location filename=\"../recentrequeststablemodel.cpp\" line=\"+14\"/>\n+        <source>Date</source>\n+        <translation type=\"unfinished\">Date</translation>\n+    </message>\n+    <message>\n+        <location line=\"+0\"/>\n+        <source>Label</source>\n+        <translation type=\"unfinished\">Label</translation>\n+    </message>\n+    <message>\n+        <location line=\"+0\"/>\n+        <source>Message</source>\n+        <translation type=\"unfinished\">Message</translation>\n+    </message>\n+    <message>\n+        <location line=\"+0\"/>\n+        <source>Amount</source>\n+        <translation type=\"unfinished\">Amount</translation>\n+    </message>\n+    <message>\n+        <location line=\"+36\"/>\n+        <source>(no label)</source>\n+        <translation type=\"unfinished\">(no label)</translation>\n+    </message>\n+    <message>\n+        <location line=\"+9\"/>\n+        <source>(no message)</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+</context>\n <context>\n     <name>SendCoinsDialog</name>\n     <message>\n         <location filename=\"../forms/sendcoinsdialog.ui\" line=\"+14\"/>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"+140\"/>\n-        <location line=\"+213\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"+381\"/>\n+        <location line=\"+81\"/>\n         <source>Send Coins</source>\n         <translation>Send Coins</translation>\n     </message>\n     <message>\n-        <location line=\"+50\"/>\n+        <location line=\"+76\"/>\n+        <source>Coin Control Features</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+20\"/>\n+        <source>Inputs...</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+7\"/>\n+        <source>automatically selected</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+19\"/>\n+        <source>Insufficient funds!</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+89\"/>\n+        <source>Quantity:</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+35\"/>\n+        <source>Bytes:</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+48\"/>\n+        <source>Amount:</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+32\"/>\n+        <source>Priority:</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+48\"/>\n+        <source>Fee:</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+32\"/>\n+        <source>Low Output:</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+48\"/>\n+        <source>After Fee:</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+32\"/>\n+        <source>Change:</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+44\"/>\n+        <source>If this is activated, but the change address is empty or invalid, change will be sent to a newly generated address.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>Custom change address</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+115\"/>\n         <source>Send to multiple recipients at once</source>\n         <translation>Send to multiple recipients at once</translation>\n     </message>\n@@ -1665,12 +2127,7 @@ Address: %4\n         <translation>Balance:</translation>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n-        <source>123.456 BTC</source>\n-        <translation>123.456 BTC</translation>\n-    </message>\n-    <message>\n-        <location line=\"+31\"/>\n+        <location line=\"+41\"/>\n         <source>Confirm the send action</source>\n         <translation>Confirm the send action</translation>\n     </message>\n@@ -1680,69 +2137,135 @@ Address: %4\n         <translation>S&amp;end</translation>\n     </message>\n     <message>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"-154\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"-229\"/>\n         <source>Confirm send coins</source>\n         <translation>Confirm send coins</translation>\n     </message>\n     <message>\n-        <location line=\"-90\"/>\n+        <location line=\"-74\"/>\n         <location line=\"+5\"/>\n         <location line=\"+5\"/>\n+        <location line=\"+4\"/>\n         <source>%1 to %2</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+26\"/>\n+        <location line=\"-136\"/>\n+        <source>Enter a Bitcoin address (e.g. 1NS17iag9jJgTHD1VXjvLCEnZuQ3rJDE9L)</source>\n+        <translation type=\"unfinished\">Enter a Bitcoin address (e.g. 1NS17iag9jJgTHD1VXjvLCEnZuQ3rJDE9L)</translation>\n+    </message>\n+    <message>\n+        <location line=\"+15\"/>\n+        <source>Copy quantity</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Copy amount</source>\n+        <translation type=\"unfinished\">Copy amount</translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Copy fee</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Copy after fee</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Copy bytes</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Copy priority</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Copy low output</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Copy change</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+170\"/>\n+        <source>Total Amount %1 (= %2)</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+2\"/>\n+        <source>or</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+202\"/>\n         <source>The recipient address is not valid, please recheck.</source>\n         <translation>The recipient address is not valid, please recheck.</translation>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n+        <location line=\"+3\"/>\n         <source>The amount to pay must be larger than 0.</source>\n         <translation>The amount to pay must be larger than 0.</translation>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n+        <location line=\"+3\"/>\n         <source>The amount exceeds your balance.</source>\n         <translation>The amount exceeds your balance.</translation>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n+        <location line=\"+3\"/>\n         <source>The total exceeds your balance when the %1 transaction fee is included.</source>\n         <translation>The total exceeds your balance when the %1 transaction fee is included.</translation>\n     </message>\n     <message>\n-        <location line=\"+5\"/>\n+        <location line=\"+3\"/>\n         <source>Duplicate address found, can only send to each address once per send operation.</source>\n         <translation>Duplicate address found, can only send to each address once per send operation.</translation>\n     </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>Transaction creation failed!</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n     <message>\n         <location line=\"+4\"/>\n-        <source>Error: Transaction creation failed!</source>\n-        <translation>Error: Transaction creation failed!</translation>\n+        <source>The transaction was rejected! This might happen if some of the coins in your wallet were already spent, such as if you used a copy of wallet.dat and coins were spent in the copy but not marked as spent here.</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+15\"/>\n-        <source>Are you sure you want to send?</source>\n+        <location line=\"+113\"/>\n+        <source>Warning: Invalid Bitcoin address</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+9\"/>\n-        <source>added as transaction fee</source>\n+        <location line=\"+13\"/>\n+        <source>(no label)</source>\n+        <translation type=\"unfinished\">(no label)</translation>\n+    </message>\n+    <message>\n+        <location line=\"+8\"/>\n+        <source>Warning: Unknown change address</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+6\"/>\n-        <source>Total Amount %1</source>\n+        <location line=\"-378\"/>\n+        <source>Are you sure you want to send?</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+20\"/>\n-        <source>Error: The transaction was rejected. This might happen if some of the coins in your wallet were already spent, such as if you used a copy of wallet.dat and coins were spent in the copy but not marked as spent here.</source>\n-        <translation>Error: The transaction was rejected. This might happen if some of the coins in your wallet were already spent, such as if you used a copy of wallet.dat and coins were spent in the copy but not marked as spent here.</translation>\n+        <location line=\"+9\"/>\n+        <source>added as transaction fee</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+144\"/>\n+        <location line=\"+170\"/>\n         <source>Payment request expired</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -1755,39 +2278,44 @@ Address: %4\n <context>\n     <name>SendCoinsEntry</name>\n     <message>\n-        <location filename=\"../forms/sendcoinsentry.ui\" line=\"+33\"/>\n-        <location line=\"+585\"/>\n+        <location filename=\"../forms/sendcoinsentry.ui\" line=\"+131\"/>\n+        <location line=\"+501\"/>\n+        <location line=\"+536\"/>\n         <source>A&amp;mount:</source>\n         <translation>A&amp;mount:</translation>\n     </message>\n     <message>\n-        <location line=\"-572\"/>\n-        <location line=\"+585\"/>\n+        <location line=\"-1132\"/>\n         <source>Pay &amp;To:</source>\n         <translation>Pay &amp;To:</translation>\n     </message>\n     <message>\n-        <location line=\"-551\"/>\n+        <location line=\"+18\"/>\n         <source>The address to send the payment to (e.g. 1NS17iag9jJgTHD1VXjvLCEnZuQ3rJDE9L)</source>\n         <translation>The address to send the payment to (e.g. 1NS17iag9jJgTHD1VXjvLCEnZuQ3rJDE9L)</translation>\n     </message>\n     <message>\n-        <location filename=\"../sendcoinsentry.cpp\" line=\"+28\"/>\n+        <location filename=\"../sendcoinsentry.cpp\" line=\"+30\"/>\n         <source>Enter a label for this address to add it to your address book</source>\n         <translation>Enter a label for this address to add it to your address book</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/sendcoinsentry.ui\" line=\"-18\"/>\n+        <location filename=\"../forms/sendcoinsentry.ui\" line=\"+57\"/>\n         <source>&amp;Label:</source>\n         <translation>&amp;Label:</translation>\n     </message>\n     <message>\n-        <location line=\"+28\"/>\n+        <location line=\"-50\"/>\n         <source>Choose previously used address</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n+        <location line=\"-40\"/>\n+        <source>This is a normal payment.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+50\"/>\n         <source>Alt+A</source>\n         <translation>Alt+A</translation>\n     </message>\n@@ -1803,16 +2331,35 @@ Address: %4\n     </message>\n     <message>\n         <location line=\"+7\"/>\n-        <source>Remove this recipient</source>\n-        <translation>Remove this recipient</translation>\n+        <location line=\"+504\"/>\n+        <location line=\"+536\"/>\n+        <source>Remove this entry</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+16\"/>\n+        <location line=\"-40\"/>\n+        <source>This is a verified payment request.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"-971\"/>\n         <source>Enter a label for this address to add it to the list of used addresses</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+465\"/>\n+        <location line=\"+439\"/>\n+        <source>This is an unverified payment request.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+18\"/>\n+        <location line=\"+532\"/>\n+        <source>Pay To:</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"-498\"/>\n+        <location line=\"+536\"/>\n         <source>Memo:</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -1933,7 +2480,7 @@ Address: %4\n         <translation>Reset all verify message fields</translation>\n     </message>\n     <message>\n-        <location filename=\"../signverifymessagedialog.cpp\" line=\"+27\"/>\n+        <location filename=\"../signverifymessagedialog.cpp\" line=\"+29\"/>\n         <location line=\"+3\"/>\n         <source>Enter a Bitcoin address (e.g. 1NS17iag9jJgTHD1VXjvLCEnZuQ3rJDE9L)</source>\n         <translation>Enter a Bitcoin address (e.g. 1NS17iag9jJgTHD1VXjvLCEnZuQ3rJDE9L)</translation>\n@@ -1949,7 +2496,7 @@ Address: %4\n         <translation>Enter Bitcoin signature</translation>\n     </message>\n     <message>\n-        <location line=\"+85\"/>\n+        <location line=\"+84\"/>\n         <location line=\"+81\"/>\n         <source>The entered address is invalid.</source>\n         <translation>The entered address is invalid.</translation>\n@@ -2018,9 +2565,14 @@ Address: %4\n <context>\n     <name>SplashScreen</name>\n     <message>\n-        <location filename=\"../splashscreen.cpp\" line=\"+23\"/>\n-        <source>The Bitcoin developers</source>\n-        <translation>The Bitcoin developers</translation>\n+        <location filename=\"../splashscreen.cpp\" line=\"+26\"/>\n+        <source>Bitcoin Core</source>\n+        <translation type=\"unfinished\">Bitcoin Core</translation>\n+    </message>\n+    <message>\n+        <location line=\"+2\"/>\n+        <source>The Bitcoin Core developers</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n         <location line=\"+1\"/>\n@@ -2031,15 +2583,15 @@ Address: %4\n <context>\n     <name>TrafficGraphWidget</name>\n     <message>\n-        <location filename=\"../trafficgraphwidget.cpp\" line=\"+75\"/>\n+        <location filename=\"../trafficgraphwidget.cpp\" line=\"+79\"/>\n         <source>KB/s</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n </context>\n <context>\n     <name>TransactionDesc</name>\n     <message>\n-        <location filename=\"../transactiondesc.cpp\" line=\"+22\"/>\n+        <location filename=\"../transactiondesc.cpp\" line=\"+28\"/>\n         <source>Open until %1</source>\n         <translation>Open until %1</translation>\n     </message>\n@@ -2240,7 +2792,7 @@ Address: %4\n <context>\n     <name>TransactionTableModel</name>\n     <message>\n-        <location filename=\"../transactiontablemodel.cpp\" line=\"+227\"/>\n+        <location filename=\"../transactiontablemodel.cpp\" line=\"+234\"/>\n         <source>Date</source>\n         <translation>Date</translation>\n     </message>\n@@ -2364,7 +2916,7 @@ Address: %4\n <context>\n     <name>TransactionView</name>\n     <message>\n-        <location filename=\"../transactionview.cpp\" line=\"+52\"/>\n+        <location filename=\"../transactionview.cpp\" line=\"+57\"/>\n         <location line=\"+16\"/>\n         <source>All</source>\n         <translation>All</translation>\n@@ -2425,12 +2977,12 @@ Address: %4\n         <translation>Other</translation>\n     </message>\n     <message>\n-        <location line=\"+7\"/>\n+        <location line=\"+6\"/>\n         <source>Enter address or label to search</source>\n         <translation>Enter address or label to search</translation>\n     </message>\n     <message>\n-        <location line=\"+7\"/>\n+        <location line=\"+6\"/>\n         <source>Min amount</source>\n         <translation>Min amount</translation>\n     </message>\n@@ -2465,17 +3017,37 @@ Address: %4\n         <translation>Show transaction details</translation>\n     </message>\n     <message>\n-        <location line=\"+143\"/>\n-        <source>Export Transaction Data</source>\n-        <translation>Export Transaction Data</translation>\n+        <location line=\"+142\"/>\n+        <source>Export Transaction History</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+1\"/>\n+        <location line=\"+19\"/>\n+        <source>Exporting Failed</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+0\"/>\n+        <source>There was an error trying to save the transaction history to %1.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+4\"/>\n+        <source>Exporting Successful</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+0\"/>\n+        <source>The transaction history was successfully saved to %1.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"-22\"/>\n         <source>Comma separated file (*.csv)</source>\n         <translation>Comma separated file (*.csv)</translation>\n     </message>\n     <message>\n-        <location line=\"+8\"/>\n+        <location line=\"+9\"/>\n         <source>Confirmed</source>\n         <translation>Confirmed</translation>\n     </message>\n@@ -2510,17 +3082,7 @@ Address: %4\n         <translation>ID</translation>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n-        <source>Error exporting</source>\n-        <translation>Error exporting</translation>\n-    </message>\n-    <message>\n-        <location line=\"+0\"/>\n-        <source>Could not write to file %1.</source>\n-        <translation>Could not write to file %1.</translation>\n-    </message>\n-    <message>\n-        <location line=\"+100\"/>\n+        <location line=\"+107\"/>\n         <source>Range:</source>\n         <translation>Range:</translation>\n     </message>\n@@ -2530,18 +3092,26 @@ Address: %4\n         <translation>to</translation>\n     </message>\n </context>\n+<context>\n+    <name>WalletFrame</name>\n+    <message>\n+        <location filename=\"../walletframe.cpp\" line=\"+26\"/>\n+        <source>No wallet has been loaded.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+</context>\n <context>\n     <name>WalletModel</name>\n     <message>\n-        <location filename=\"../walletmodel.cpp\" line=\"+218\"/>\n+        <location filename=\"../walletmodel.cpp\" line=\"+245\"/>\n         <source>Send Coins</source>\n         <translation>Send Coins</translation>\n     </message>\n </context>\n <context>\n     <name>WalletView</name>\n     <message>\n-        <location filename=\"../walletview.cpp\" line=\"+46\"/>\n+        <location filename=\"../walletview.cpp\" line=\"+43\"/>\n         <source>&amp;Export</source>\n         <translation>&amp;Export</translation>\n     </message>\n@@ -2551,65 +3121,60 @@ Address: %4\n         <translation>Export the data in the current tab to a file</translation>\n     </message>\n     <message>\n-        <location line=\"+183\"/>\n+        <location line=\"+181\"/>\n         <source>Backup Wallet</source>\n         <translation>Backup Wallet</translation>\n     </message>\n     <message>\n-        <location line=\"+0\"/>\n+        <location line=\"+1\"/>\n         <source>Wallet Data (*.dat)</source>\n         <translation>Wallet Data (*.dat)</translation>\n     </message>\n     <message>\n-        <location line=\"+3\"/>\n+        <location line=\"+6\"/>\n         <source>Backup Failed</source>\n         <translation>Backup Failed</translation>\n     </message>\n     <message>\n         <location line=\"+0\"/>\n-        <source>There was an error trying to save the wallet data to the new location.</source>\n-        <translation>There was an error trying to save the wallet data to the new location.</translation>\n+        <source>There was an error trying to save the wallet data to %1.</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n         <location line=\"+4\"/>\n-        <source>Backup Successful</source>\n-        <translation>Backup Successful</translation>\n+        <source>The wallet data was successfully saved to %1.</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n         <location line=\"+0\"/>\n-        <source>The wallet data was successfully saved to the new location.</source>\n-        <translation>The wallet data was successfully saved to the new location.</translation>\n+        <source>Backup Successful</source>\n+        <translation>Backup Successful</translation>\n     </message>\n </context>\n <context>\n     <name>bitcoin-core</name>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"+102\"/>\n-        <source>Bitcoin version</source>\n-        <translation>Bitcoin version</translation>\n-    </message>\n-    <message>\n-        <location line=\"+107\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"+217\"/>\n         <source>Usage:</source>\n         <translation>Usage:</translation>\n     </message>\n     <message>\n-        <location line=\"-55\"/>\n+        <location line=\"-54\"/>\n         <source>List commands</source>\n         <translation>List commands</translation>\n     </message>\n     <message>\n-        <location line=\"-13\"/>\n+        <location line=\"-14\"/>\n         <source>Get help for a command</source>\n         <translation>Get help for a command</translation>\n     </message>\n     <message>\n-        <location line=\"+25\"/>\n+        <location line=\"+26\"/>\n         <source>Options:</source>\n         <translation>Options:</translation>\n     </message>\n     <message>\n-        <location line=\"+24\"/>\n+        <location line=\"+23\"/>\n         <source>Specify configuration file (default: bitcoin.conf)</source>\n         <translation>Specify configuration file (default: bitcoin.conf)</translation>\n     </message>\n@@ -2629,7 +3194,7 @@ Address: %4\n         <translation>Set database cache size in megabytes (default: 25)</translation>\n     </message>\n     <message>\n-        <location line=\"-28\"/>\n+        <location line=\"-27\"/>\n         <source>Listen for connections on &lt;port&gt; (default: 8333 or testnet: 18333)</source>\n         <translation>Listen for connections on &lt;port&gt; (default: 8333 or testnet: 18333)</translation>\n     </message>\n@@ -2639,7 +3204,7 @@ Address: %4\n         <translation>Maintain at most &lt;n&gt; connections to peers (default: 125)</translation>\n     </message>\n     <message>\n-        <location line=\"-49\"/>\n+        <location line=\"-50\"/>\n         <source>Connect to a node to retrieve peer addresses, and disconnect</source>\n         <translation>Connect to a node to retrieve peer addresses, and disconnect</translation>\n     </message>\n@@ -2654,7 +3219,7 @@ Address: %4\n         <translation>Threshold for disconnecting misbehaving peers (default: 100)</translation>\n     </message>\n     <message>\n-        <location line=\"-142\"/>\n+        <location line=\"-147\"/>\n         <source>Number of seconds to keep misbehaving peers from reconnecting (default: 86400)</source>\n         <translation>Number of seconds to keep misbehaving peers from reconnecting (default: 86400)</translation>\n     </message>\n@@ -2669,7 +3234,7 @@ Address: %4\n         <translation>Listen for JSON-RPC connections on &lt;port&gt; (default: 8332 or testnet: 18332)</translation>\n     </message>\n     <message>\n-        <location line=\"+40\"/>\n+        <location line=\"+45\"/>\n         <source>Accept command line and JSON-RPC commands</source>\n         <translation>Accept command line and JSON-RPC commands</translation>\n     </message>\n@@ -2679,17 +3244,17 @@ Address: %4\n         <translation>Run in the background as a daemon and accept commands</translation>\n     </message>\n     <message>\n-        <location line=\"+40\"/>\n+        <location line=\"+39\"/>\n         <source>Use the test network</source>\n         <translation>Use the test network</translation>\n     </message>\n     <message>\n-        <location line=\"-118\"/>\n+        <location line=\"-117\"/>\n         <source>Accept connections from outside (default: 1 if no -proxy or -connect)</source>\n         <translation>Accept connections from outside (default: 1 if no -proxy or -connect)</translation>\n     </message>\n     <message>\n-        <location line=\"-87\"/>\n+        <location line=\"-92\"/>\n         <source>%s, you must set a rpcpassword in the configuration file:\n %s\n It is recommended you use the following random password:\n@@ -2754,17 +3319,17 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)</translation>\n     </message>\n     <message>\n-        <location line=\"+11\"/>\n-        <source>Set maximum size of high-priority/low-fee transactions in bytes (default: 27000)</source>\n-        <translation>Set maximum size of high-priority/low-fee transactions in bytes (default: 27000)</translation>\n-    </message>\n-    <message>\n-        <location line=\"+6\"/>\n+        <location line=\"+18\"/>\n         <source>This is a pre-release test build - use at your own risk - do not use for mining or merchant applications</source>\n         <translation>This is a pre-release test build - use at your own risk - do not use for mining or merchant applications</translation>\n     </message>\n     <message>\n         <location line=\"+5\"/>\n+        <source>Use separate SOCKS5 proxy to reach peers via Tor hidden services (default: -proxy)</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n         <source>Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.</source>\n         <translation>Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.</translation>\n     </message>\n@@ -2794,17 +3359,27 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>Warning: wallet.dat corrupt, data salvaged! Original wallet.dat saved as wallet.{timestamp}.bak in %s; if your balance or transactions are incorrect you should restore from a backup.</translation>\n     </message>\n     <message>\n-        <location line=\"+14\"/>\n+        <location line=\"+9\"/>\n+        <source>&lt;category&gt; can be:</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+6\"/>\n         <source>Attempt to recover private keys from a corrupt wallet.dat</source>\n         <translation>Attempt to recover private keys from a corrupt wallet.dat</translation>\n     </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Bitcoin Core Daemon</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n     <message>\n         <location line=\"+1\"/>\n         <source>Bitcoin RPC client version</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+2\"/>\n+        <location line=\"+1\"/>\n         <source>Block creation options:</source>\n         <translation>Block creation options:</translation>\n     </message>\n@@ -2814,7 +3389,12 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>Connect only to the specified node(s)</translation>\n     </message>\n     <message>\n-        <location line=\"+2\"/>\n+        <location line=\"+1\"/>\n+        <source>Connect through SOCKS proxy</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n         <source>Connect to JSON-RPC on &lt;port&gt; (default: 8332 or testnet: 18332)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -2924,7 +3504,12 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>Failed to write undo data</translation>\n     </message>\n     <message>\n-        <location line=\"+2\"/>\n+        <location line=\"+1\"/>\n+        <source>Fee per kB to add to transactions you send</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n         <source>Find peers using DNS lookup (default: 1 unless -connect)</source>\n         <translation>Find peers using DNS lookup (default: 1 unless -connect)</translation>\n     </message>\n@@ -2943,6 +3528,11 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <source>How thorough the block verification is (0-4, default: 3)</source>\n         <translation>How thorough the block verification is (0-4, default: 3)</translation>\n     </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>If &lt;category&gt; is not supplied, output all debugging information.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n     <message>\n         <location line=\"+2\"/>\n         <source>Incorrect or no genesis block found. Wrong datadir for network?</source>\n@@ -2959,17 +3549,37 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>Not enough file descriptors available.</translation>\n     </message>\n     <message>\n-        <location line=\"+8\"/>\n+        <location line=\"+5\"/>\n+        <source>Prepend debug output with timestamp (default: 1)</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>RPC client options:</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n         <source>Rebuild block chain index from current blk000??.dat files</source>\n         <translation>Rebuild block chain index from current blk000??.dat files</translation>\n     </message>\n     <message>\n-        <location line=\"+6\"/>\n+        <location line=\"+5\"/>\n+        <source>Select SOCKS version for -proxy (4 or 5, default: 5)</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n         <source>Send command to Bitcoin server</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n+        <location line=\"+8\"/>\n+        <source>Set maximum block size in bytes (default: %d)</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+2\"/>\n         <source>Set the number of threads to service RPC calls (default: 4)</source>\n         <translation>Set the number of threads to service RPC calls (default: 4)</translation>\n     </message>\n@@ -2989,7 +3599,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+8\"/>\n+        <location line=\"+7\"/>\n         <source>Verifying blocks...</source>\n         <translation>Verifying blocks...</translation>\n     </message>\n@@ -2998,13 +3608,23 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <source>Verifying wallet...</source>\n         <translation>Verifying wallet...</translation>\n     </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Wait for RPC server to start</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n     <message>\n         <location line=\"+1\"/>\n         <source>Wallet %s resides outside data directory %s</source>\n         <translation>Wallet %s resides outside data directory %s</translation>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n+        <location line=\"+3\"/>\n+        <source>Warning: Deprecated argument -debugnet ignored, use -debug=net</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+2\"/>\n         <source>You need to rebuild the database using -reindex to change -txindex</source>\n         <translation>You need to rebuild the database using -reindex to change -txindex</translation>\n     </message>\n@@ -3014,17 +3634,27 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>Imports blocks from external blk000??.dat file</translation>\n     </message>\n     <message>\n-        <location line=\"-98\"/>\n+        <location line=\"-104\"/>\n         <source>Execute command when a relevant alert is received or we see a really long fork (%s in cmd is replaced by message)</source>\n         <translation>Execute command when a relevant alert is received or we see a really long fork (%s in cmd is replaced by message)</translation>\n     </message>\n     <message>\n-        <location line=\"+17\"/>\n+        <location line=\"+14\"/>\n+        <source>Output debugging information (default: 0, supplying &lt;category&gt; is optional)</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+2\"/>\n+        <source>Set maximum size of high-priority/low-fee transactions in bytes (default: %d)</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+2\"/>\n         <source>Set the number of script verification threads (up to 16, 0 = auto, &lt;0 = leave that many cores free, default: 0)</source>\n         <translation>Set the number of script verification threads (up to 16, 0 = auto, &lt;0 = leave that many cores free, default: 0)</translation>\n     </message>\n     <message>\n-        <location line=\"+83\"/>\n+        <location line=\"+88\"/>\n         <source>Information</source>\n         <translation>Information</translation>\n     </message>\n@@ -3064,32 +3694,12 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>Only connect to nodes in network &lt;net&gt; (IPv4, IPv6 or Tor)</translation>\n     </message>\n     <message>\n-        <location line=\"+2\"/>\n-        <source>Output extra debugging information. Implies all other -debug* options</source>\n-        <translation>Output extra debugging information. Implies all other -debug* options</translation>\n-    </message>\n-    <message>\n-        <location line=\"+1\"/>\n-        <source>Output extra network debugging information</source>\n-        <translation>Output extra network debugging information</translation>\n-    </message>\n-    <message>\n-        <location line=\"+2\"/>\n-        <source>Prepend debug output with timestamp</source>\n-        <translation>Prepend debug output with timestamp</translation>\n-    </message>\n-    <message>\n-        <location line=\"+5\"/>\n+        <location line=\"+9\"/>\n         <source>SSL options: (see the Bitcoin Wiki for SSL setup instructions)</source>\n         <translation>SSL options: (see the Bitcoin Wiki for SSL setup instructions)</translation>\n     </message>\n     <message>\n-        <location line=\"+1\"/>\n-        <source>Select the version of socks proxy to use (4-5, default: 5)</source>\n-        <translation>Select the version of socks proxy to use (4-5, default: 5)</translation>\n-    </message>\n-    <message>\n-        <location line=\"+3\"/>\n+        <location line=\"+4\"/>\n         <source>Send trace/debug info to console instead of debug.log file</source>\n         <translation>Send trace/debug info to console instead of debug.log file</translation>\n     </message>\n@@ -3099,12 +3709,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>Send trace/debug info to debugger</translation>\n     </message>\n     <message>\n-        <location line=\"+5\"/>\n-        <source>Set maximum block size in bytes (default: 250000)</source>\n-        <translation>Set maximum block size in bytes (default: 250000)</translation>\n-    </message>\n-    <message>\n-        <location line=\"+1\"/>\n+        <location line=\"+6\"/>\n         <source>Set minimum block size in bytes (default: 0)</source>\n         <translation>Set minimum block size in bytes (default: 0)</translation>\n     </message>\n@@ -3153,38 +3758,38 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <source>Use UPnP to map the listening port (default: 1 when listening)</source>\n         <translation>Use UPnP to map the listening port (default: 1 when listening)</translation>\n     </message>\n-    <message>\n-        <location line=\"+1\"/>\n-        <source>Use proxy to reach tor hidden services (default: same as -proxy)</source>\n-        <translation>Use proxy to reach tor hidden services (default: same as -proxy)</translation>\n-    </message>\n     <message>\n         <location line=\"+2\"/>\n         <source>Username for JSON-RPC connections</source>\n         <translation>Username for JSON-RPC connections</translation>\n     </message>\n     <message>\n-        <location line=\"+5\"/>\n+        <location line=\"+6\"/>\n         <source>Warning</source>\n         <translation>Warning</translation>\n     </message>\n     <message>\n-        <location line=\"+1\"/>\n+        <location line=\"+2\"/>\n         <source>Warning: This version is obsolete, upgrade required!</source>\n         <translation>Warning: This version is obsolete, upgrade required!</translation>\n     </message>\n     <message>\n         <location line=\"+2\"/>\n+        <source>version</source>\n+        <translation type=\"unfinished\">version</translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n         <source>wallet.dat corrupt, salvage failed</source>\n         <translation>wallet.dat corrupt, salvage failed</translation>\n     </message>\n     <message>\n-        <location line=\"-54\"/>\n+        <location line=\"-57\"/>\n         <source>Password for JSON-RPC connections</source>\n         <translation>Password for JSON-RPC connections</translation>\n     </message>\n     <message>\n-        <location line=\"-70\"/>\n+        <location line=\"-69\"/>\n         <source>Allow JSON-RPC connections from specified IP address</source>\n         <translation>Allow JSON-RPC connections from specified IP address</translation>\n     </message>\n@@ -3194,12 +3799,12 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>Send commands to node running on &lt;ip&gt; (default: 127.0.0.1)</translation>\n     </message>\n     <message>\n-        <location line=\"-126\"/>\n+        <location line=\"-131\"/>\n         <source>Execute command when the best block changes (%s in cmd is replaced by block hash)</source>\n         <translation>Execute command when the best block changes (%s in cmd is replaced by block hash)</translation>\n     </message>\n     <message>\n-        <location line=\"+155\"/>\n+        <location line=\"+160\"/>\n         <source>Upgrade wallet to latest format</source>\n         <translation>Upgrade wallet to latest format</translation>\n     </message>\n@@ -3239,22 +3844,17 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>Unable to bind to %s on this computer (bind returned error %d, %s)</translation>\n     </message>\n     <message>\n-        <location line=\"-95\"/>\n-        <source>Connect through socks proxy</source>\n-        <translation>Connect through socks proxy</translation>\n-    </message>\n-    <message>\n-        <location line=\"-11\"/>\n+        <location line=\"-106\"/>\n         <source>Allow DNS lookups for -addnode, -seednode and -connect</source>\n         <translation>Allow DNS lookups for -addnode, -seednode and -connect</translation>\n     </message>\n     <message>\n-        <location line=\"+58\"/>\n+        <location line=\"+59\"/>\n         <source>Loading addresses...</source>\n         <translation>Loading addresses...</translation>\n     </message>\n     <message>\n-        <location line=\"-36\"/>\n+        <location line=\"-37\"/>\n         <source>Error loading wallet.dat: Wallet corrupted</source>\n         <translation>Error loading wallet.dat: Wallet corrupted</translation>\n     </message>\n@@ -3274,12 +3874,12 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>Error loading wallet.dat</translation>\n     </message>\n     <message>\n-        <location line=\"+30\"/>\n+        <location line=\"+31\"/>\n         <source>Invalid -proxy address: &apos;%s&apos;</source>\n         <translation>Invalid -proxy address: &apos;%s&apos;</translation>\n     </message>\n     <message>\n-        <location line=\"+57\"/>\n+        <location line=\"+56\"/>\n         <source>Unknown network specified in -onlynet: &apos;%s&apos;</source>\n         <translation>Unknown network specified in -onlynet: &apos;%s&apos;</translation>\n     </message>\n@@ -3299,7 +3899,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>Cannot resolve -externalip address: &apos;%s&apos;</translation>\n     </message>\n     <message>\n-        <location line=\"+46\"/>\n+        <location line=\"+47\"/>\n         <source>Invalid amount for -paytxfee=&lt;amount&gt;: &apos;%s&apos;</source>\n         <translation>Invalid amount for -paytxfee=&lt;amount&gt;: &apos;%s&apos;</translation>\n     </message>\n@@ -3319,27 +3919,22 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>Loading block index...</translation>\n     </message>\n     <message>\n-        <location line=\"-60\"/>\n+        <location line=\"-61\"/>\n         <source>Add a node to connect to and attempt to keep the connection open</source>\n         <translation>Add a node to connect to and attempt to keep the connection open</translation>\n     </message>\n     <message>\n-        <location line=\"-28\"/>\n+        <location line=\"-32\"/>\n         <source>Unable to bind to %s on this computer. Bitcoin is probably already running.</source>\n         <translation>Unable to bind to %s on this computer. Bitcoin is probably already running.</translation>\n     </message>\n     <message>\n-        <location line=\"+69\"/>\n-        <source>Fee per KB to add to transactions you send</source>\n-        <translation>Fee per KB to add to transactions you send</translation>\n-    </message>\n-    <message>\n-        <location line=\"+20\"/>\n+        <location line=\"+94\"/>\n         <source>Loading wallet...</source>\n         <translation>Loading wallet...</translation>\n     </message>\n     <message>\n-        <location line=\"-54\"/>\n+        <location line=\"-55\"/>\n         <source>Cannot downgrade wallet</source>\n         <translation>Cannot downgrade wallet</translation>\n     </message>\n@@ -3369,7 +3964,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>Error</translation>\n     </message>\n     <message>\n-        <location line=\"-33\"/>\n+        <location line=\"-34\"/>\n         <source>You must set rpcpassword=&lt;password&gt; in the configuration file:\n %s\n If the file does not exist, create it with owner-readable-only file permissions.</source>"
      }
    ]
  },
  {
    "sha": "16ec9044d1f2eda7c5c86fcb73c839e17fb35db3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxNmVjOTA0NGQxZjJlZGE3YzVjODZmY2I3M2M4MzllMTdmYjM1ZGIz",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-16T16:17:39Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-16T16:36:04Z"
      },
      "message": "Don't create empty transactions when reading corrupted wallet\n\nThe current transaction loading code is not exception safe.\nAn exception during deserialization causes an empty transaction\nto be left behind in the wallet.\n\nFix this by building the transaction separately and adding\nit only to the wallet at the end.\n\nFixes #3333.",
      "tree": {
        "sha": "9f7e2e34445fc56cee7530dc2ba545314235525c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9f7e2e34445fc56cee7530dc2ba545314235525c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/16ec9044d1f2eda7c5c86fcb73c839e17fb35db3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/16ec9044d1f2eda7c5c86fcb73c839e17fb35db3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/16ec9044d1f2eda7c5c86fcb73c839e17fb35db3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/16ec9044d1f2eda7c5c86fcb73c839e17fb35db3/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "93a7861d719ac8b4ec57cf89c3e2d423ba7f18e1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/93a7861d719ac8b4ec57cf89c3e2d423ba7f18e1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/93a7861d719ac8b4ec57cf89c3e2d423ba7f18e1"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 2,
      "deletions": 4
    },
    "files": [
      {
        "sha": "9c5bddba60761b60d8a4ec780f704a412e9ea5bc",
        "filename": "src/walletdb.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 4,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/16ec9044d1f2eda7c5c86fcb73c839e17fb35db3/src/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/16ec9044d1f2eda7c5c86fcb73c839e17fb35db3/src/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/walletdb.cpp?ref=16ec9044d1f2eda7c5c86fcb73c839e17fb35db3",
        "patch": "@@ -357,16 +357,13 @@ ReadKeyValue(CWallet* pwallet, CDataStream& ssKey, CDataStream& ssValue,\n         {\n             uint256 hash;\n             ssKey >> hash;\n-            CWalletTx& wtx = pwallet->mapWallet[hash];\n+            CWalletTx wtx;\n             ssValue >> wtx;\n             CValidationState state;\n             if (CheckTransaction(wtx, state) && (wtx.GetHash() == hash) && state.IsValid())\n                 wtx.BindWallet(pwallet);\n             else\n-            {\n-                pwallet->mapWallet.erase(hash);\n                 return false;\n-            }\n \n             // Undo serialize changes in 31600\n             if (31404 <= wtx.fTimeReceivedIsTxTime && wtx.fTimeReceivedIsTxTime <= 31703)\n@@ -391,6 +388,7 @@ ReadKeyValue(CWallet* pwallet, CDataStream& ssKey, CDataStream& ssValue,\n             if (wtx.nOrderPos == -1)\n                 wss.fAnyUnordered = true;\n \n+            pwallet->mapWallet[hash] = wtx;\n             //// debug print\n             //LogPrintf(\"LoadWallet  %s\\n\", wtx.GetHash().ToString().c_str());\n             //LogPrintf(\" %12\"PRId64\"  %s  %s  %s\\n\","
      }
    ]
  },
  {
    "sha": "1ad26362c92c7d5678c24df85fd7b9ab1d3d34fe",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxYWQyNjM2MmM5MmM3ZDU2NzhjMjRkZjg1ZmQ3YjlhYjFkM2QzNGZl",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-16T17:13:31Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-16T17:51:30Z"
      },
      "message": "qt: Prevent non-functional GUI from popping up during Init\n\nWhen a InitError or InitWarning happens, the\nGUI pops up but is unusable (until Init finishes).\n\nThis is caused by showNormalIfMinimized. Add a message\nflag to skip this call for Init errors or warnings.",
      "tree": {
        "sha": "7bc3446ccc10fe5c571b4b0bcbe148e715543c7d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7bc3446ccc10fe5c571b4b0bcbe148e715543c7d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1ad26362c92c7d5678c24df85fd7b9ab1d3d34fe",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1ad26362c92c7d5678c24df85fd7b9ab1d3d34fe",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1ad26362c92c7d5678c24df85fd7b9ab1d3d34fe",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1ad26362c92c7d5678c24df85fd7b9ab1d3d34fe/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "93a7861d719ac8b4ec57cf89c3e2d423ba7f18e1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/93a7861d719ac8b4ec57cf89c3e2d423ba7f18e1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/93a7861d719ac8b4ec57cf89c3e2d423ba7f18e1"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 9,
      "deletions": 4
    },
    "files": [
      {
        "sha": "d6026aa3fef8f311e3cfe5102e2a81d23330efea",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1ad26362c92c7d5678c24df85fd7b9ab1d3d34fe/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1ad26362c92c7d5678c24df85fd7b9ab1d3d34fe/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=1ad26362c92c7d5678c24df85fd7b9ab1d3d34fe",
        "patch": "@@ -164,13 +164,13 @@ void HandleSIGHUP(int)\n \n bool static InitError(const std::string &str)\n {\n-    uiInterface.ThreadSafeMessageBox(str, \"\", CClientUIInterface::MSG_ERROR);\n+    uiInterface.ThreadSafeMessageBox(str, \"\", CClientUIInterface::MSG_ERROR | CClientUIInterface::NOSHOWGUI);\n     return false;\n }\n \n bool static InitWarning(const std::string &str)\n {\n-    uiInterface.ThreadSafeMessageBox(str, \"\", CClientUIInterface::MSG_WARNING);\n+    uiInterface.ThreadSafeMessageBox(str, \"\", CClientUIInterface::MSG_WARNING | CClientUIInterface::NOSHOWGUI);\n     return true;\n }\n "
      },
      {
        "sha": "048ac070ad4b29be0f6e84fdf3c7b5627c54ba12",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 2,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1ad26362c92c7d5678c24df85fd7b9ab1d3d34fe/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1ad26362c92c7d5678c24df85fd7b9ab1d3d34fe/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=1ad26362c92c7d5678c24df85fd7b9ab1d3d34fe",
        "patch": "@@ -681,8 +681,11 @@ void BitcoinGUI::message(const QString &title, const QString &message, unsigned\n         if (!(buttons = (QMessageBox::StandardButton)(style & CClientUIInterface::BTN_MASK)))\n             buttons = QMessageBox::Ok;\n \n-        // Ensure we get users attention\n-        showNormalIfMinimized();\n+        // Ensure we get users attention, but only if main window is visible\n+        // as we don't want to pop up the main window for messages that happen before\n+        // initialization is finished.\n+        if(!(style & CClientUIInterface::NOSHOWGUI))\n+            showNormalIfMinimized();\n         QMessageBox mBox((QMessageBox::Icon)nMBoxIcon, strTitle, message, buttons, this);\n         int r = mBox.exec();\n         if (ret != NULL)"
      },
      {
        "sha": "83341af96c814d209b7523574af9f848c78f4bf0",
        "filename": "src/ui_interface.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1ad26362c92c7d5678c24df85fd7b9ab1d3d34fe/src/ui_interface.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1ad26362c92c7d5678c24df85fd7b9ab1d3d34fe/src/ui_interface.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/ui_interface.h?ref=1ad26362c92c7d5678c24df85fd7b9ab1d3d34fe",
        "patch": "@@ -62,6 +62,8 @@ class CClientUIInterface\n \n         /** Force blocking, modal message box dialog (not just OS notification) */\n         MODAL               = 0x10000000U,\n+        /** Don't bring GUI to foreground. Use for messages during initialization */\n+        NOSHOWGUI           = 0x20000000U,\n \n         /** Predefined combinations for certain default usage cases */\n         MSG_INFORMATION = ICON_INFORMATION,"
      }
    ]
  },
  {
    "sha": "ba4ceb15d618d0d248c8edf14cb74d404a2bdce9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiYTRjZWIxNWQ2MThkMGQyNDhjOGVkZjE0Y2I3NGQ0MDRhMmJkY2U5",
    "commit": {
      "author": {
        "name": "Lake Denman",
        "email": "lake@lakedenman.com",
        "date": "2013-12-16T20:38:11Z"
      },
      "committer": {
        "name": "Lake Denman",
        "email": "lake@lakedenman.com",
        "date": "2013-12-16T20:38:11Z"
      },
      "message": "Fix typo in unit-tests.md",
      "tree": {
        "sha": "3d40e20b165611a51f44995c4510c5a9bce4c234",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3d40e20b165611a51f44995c4510c5a9bce4c234"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ba4ceb15d618d0d248c8edf14cb74d404a2bdce9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ba4ceb15d618d0d248c8edf14cb74d404a2bdce9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ba4ceb15d618d0d248c8edf14cb74d404a2bdce9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ba4ceb15d618d0d248c8edf14cb74d404a2bdce9/comments",
    "author": {
      "login": "ldenman",
      "id": 1603,
      "node_id": "MDQ6VXNlcjE2MDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1603?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ldenman",
      "html_url": "https://github.com/ldenman",
      "followers_url": "https://api.github.com/users/ldenman/followers",
      "following_url": "https://api.github.com/users/ldenman/following{/other_user}",
      "gists_url": "https://api.github.com/users/ldenman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ldenman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ldenman/subscriptions",
      "organizations_url": "https://api.github.com/users/ldenman/orgs",
      "repos_url": "https://api.github.com/users/ldenman/repos",
      "events_url": "https://api.github.com/users/ldenman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ldenman/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ldenman",
      "id": 1603,
      "node_id": "MDQ6VXNlcjE2MDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1603?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ldenman",
      "html_url": "https://github.com/ldenman",
      "followers_url": "https://api.github.com/users/ldenman/followers",
      "following_url": "https://api.github.com/users/ldenman/following{/other_user}",
      "gists_url": "https://api.github.com/users/ldenman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ldenman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ldenman/subscriptions",
      "organizations_url": "https://api.github.com/users/ldenman/orgs",
      "repos_url": "https://api.github.com/users/ldenman/repos",
      "events_url": "https://api.github.com/users/ldenman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ldenman/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "93a7861d719ac8b4ec57cf89c3e2d423ba7f18e1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/93a7861d719ac8b4ec57cf89c3e2d423ba7f18e1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/93a7861d719ac8b4ec57cf89c3e2d423ba7f18e1"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "f1d3a8bc50646bebb7762f51234bdd1501ae83fd",
        "filename": "doc/unit-tests.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ba4ceb15d618d0d248c8edf14cb74d404a2bdce9/doc/unit-tests.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ba4ceb15d618d0d248c8edf14cb74d404a2bdce9/doc/unit-tests.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/unit-tests.md?ref=ba4ceb15d618d0d248c8edf14cb74d404a2bdce9",
        "patch": "@@ -12,7 +12,7 @@ To add more bitcoind tests, add `BOOST_AUTO_TEST_CASE` functions to the existing\n .cpp files in the test/ directory or add new .cpp files that\n implement new BOOST_AUTO_TEST_SUITE sections.\n \n-To run the bitcoin-qt tests manualy, launch src/qt/test/bitcoin-qt_test\n+To run the bitcoin-qt tests manually, launch src/qt/test/bitcoin-qt_test\n \n To add more bitcoin-qt tests, add them to the `src/qt/test/` directory and\n the `src/qt/test/test_main.cpp` file."
      }
    ]
  },
  {
    "sha": "3743b80528b867cfe142f2c07aee31d92a1e13cb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNzQzYjgwNTI4Yjg2N2NmZTE0MmYyYzA3YWVlMzFkOTJhMWUxM2Ni",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2013-12-16T20:47:24Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2013-12-16T20:47:24Z"
      },
      "message": "Merge pull request #3430 from ldenman/patch-1\n\nFix typo in unit-tests.md",
      "tree": {
        "sha": "3d40e20b165611a51f44995c4510c5a9bce4c234",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3d40e20b165611a51f44995c4510c5a9bce4c234"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3743b80528b867cfe142f2c07aee31d92a1e13cb",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3743b80528b867cfe142f2c07aee31d92a1e13cb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3743b80528b867cfe142f2c07aee31d92a1e13cb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3743b80528b867cfe142f2c07aee31d92a1e13cb/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "93a7861d719ac8b4ec57cf89c3e2d423ba7f18e1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/93a7861d719ac8b4ec57cf89c3e2d423ba7f18e1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/93a7861d719ac8b4ec57cf89c3e2d423ba7f18e1"
      },
      {
        "sha": "ba4ceb15d618d0d248c8edf14cb74d404a2bdce9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ba4ceb15d618d0d248c8edf14cb74d404a2bdce9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ba4ceb15d618d0d248c8edf14cb74d404a2bdce9"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "f1d3a8bc50646bebb7762f51234bdd1501ae83fd",
        "filename": "doc/unit-tests.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3743b80528b867cfe142f2c07aee31d92a1e13cb/doc/unit-tests.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3743b80528b867cfe142f2c07aee31d92a1e13cb/doc/unit-tests.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/unit-tests.md?ref=3743b80528b867cfe142f2c07aee31d92a1e13cb",
        "patch": "@@ -12,7 +12,7 @@ To add more bitcoind tests, add `BOOST_AUTO_TEST_CASE` functions to the existing\n .cpp files in the test/ directory or add new .cpp files that\n implement new BOOST_AUTO_TEST_SUITE sections.\n \n-To run the bitcoin-qt tests manualy, launch src/qt/test/bitcoin-qt_test\n+To run the bitcoin-qt tests manually, launch src/qt/test/bitcoin-qt_test\n \n To add more bitcoin-qt tests, add them to the `src/qt/test/` directory and\n the `src/qt/test/test_main.cpp` file."
      }
    ]
  },
  {
    "sha": "131c3db8fbc2cf26e5fd86904562ff750310acea",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxMzFjM2RiOGZiYzJjZjI2ZTVmZDg2OTA0NTYyZmY3NTAzMTBhY2Vh",
    "commit": {
      "author": {
        "name": "Lake Denman",
        "email": "lake@lakedenman.com",
        "date": "2013-12-16T20:49:34Z"
      },
      "committer": {
        "name": "Lake Denman",
        "email": "lake@lakedenman.com",
        "date": "2013-12-16T20:49:34Z"
      },
      "message": "Fix typos in spendfrom README",
      "tree": {
        "sha": "c1b96393c1c6806c0977cec9b64deccdbdb5fc17",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c1b96393c1c6806c0977cec9b64deccdbdb5fc17"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/131c3db8fbc2cf26e5fd86904562ff750310acea",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/131c3db8fbc2cf26e5fd86904562ff750310acea",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/131c3db8fbc2cf26e5fd86904562ff750310acea",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/131c3db8fbc2cf26e5fd86904562ff750310acea/comments",
    "author": {
      "login": "ldenman",
      "id": 1603,
      "node_id": "MDQ6VXNlcjE2MDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1603?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ldenman",
      "html_url": "https://github.com/ldenman",
      "followers_url": "https://api.github.com/users/ldenman/followers",
      "following_url": "https://api.github.com/users/ldenman/following{/other_user}",
      "gists_url": "https://api.github.com/users/ldenman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ldenman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ldenman/subscriptions",
      "organizations_url": "https://api.github.com/users/ldenman/orgs",
      "repos_url": "https://api.github.com/users/ldenman/repos",
      "events_url": "https://api.github.com/users/ldenman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ldenman/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ldenman",
      "id": 1603,
      "node_id": "MDQ6VXNlcjE2MDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1603?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ldenman",
      "html_url": "https://github.com/ldenman",
      "followers_url": "https://api.github.com/users/ldenman/followers",
      "following_url": "https://api.github.com/users/ldenman/following{/other_user}",
      "gists_url": "https://api.github.com/users/ldenman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ldenman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ldenman/subscriptions",
      "organizations_url": "https://api.github.com/users/ldenman/orgs",
      "repos_url": "https://api.github.com/users/ldenman/repos",
      "events_url": "https://api.github.com/users/ldenman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ldenman/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3743b80528b867cfe142f2c07aee31d92a1e13cb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3743b80528b867cfe142f2c07aee31d92a1e13cb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3743b80528b867cfe142f2c07aee31d92a1e13cb"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "c0a9c9ccf93d335a7092e383ff8a59ae410e549d",
        "filename": "contrib/spendfrom/README.md",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/131c3db8fbc2cf26e5fd86904562ff750310acea/contrib/spendfrom/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/131c3db8fbc2cf26e5fd86904562ff750310acea/contrib/spendfrom/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/spendfrom/README.md?ref=131c3db8fbc2cf26e5fd86904562ff750310acea",
        "patch": "@@ -15,7 +15,7 @@ With arguments, sends coins received by the `FROMADDRESS` addresses to the `TOAD\n \n ### Notes ###\n \n-- You may explictly specify how much fee to pay (a fee more than 1% of the amount\n+- You may explicitly specify how much fee to pay (a fee more than 1% of the amount\n will fail,  though, to prevent bitcoin-losing accidents). Spendfrom may fail if\n it thinks the transaction would never be confirmed (if the amount being sent is\n too small, or if the transaction is too many bytes for the fee).\n@@ -25,7 +25,7 @@ too small, or if the transaction is too many bytes for the fee).\n \n - If `--datadir` is not specified, the default datadir is used.\n \n-- The `--dry_run` option will just create and sign the the transaction and print\n+- The `--dry_run` option will just create and sign the transaction and print\n the transaction data (as hexadecimal), instead of broadcasting it.\n \n - If the transaction is created and broadcast successfully, a transaction id"
      }
    ]
  },
  {
    "sha": "46469d0f8610587c472d6c627baad327aeda5b49",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0NjQ2OWQwZjg2MTA1ODdjNDcyZDZjNjI3YmFhZDMyN2FlZGE1YjQ5",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2013-12-16T22:36:22Z"
      },
      "committer": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2013-12-16T22:36:22Z"
      },
      "message": "some more small re-branding changes (Bitcoin Core)",
      "tree": {
        "sha": "d3417cdb58e4347de8930b01cd5f15fa8cf06f86",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d3417cdb58e4347de8930b01cd5f15fa8cf06f86"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/46469d0f8610587c472d6c627baad327aeda5b49",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/46469d0f8610587c472d6c627baad327aeda5b49",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/46469d0f8610587c472d6c627baad327aeda5b49",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/46469d0f8610587c472d6c627baad327aeda5b49/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "3743b80528b867cfe142f2c07aee31d92a1e13cb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3743b80528b867cfe142f2c07aee31d92a1e13cb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3743b80528b867cfe142f2c07aee31d92a1e13cb"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "f577a6e05ca5cdbd5755e47fd7be94fa0f986dbe",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/46469d0f8610587c472d6c627baad327aeda5b49/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/46469d0f8610587c472d6c627baad327aeda5b49/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=46469d0f8610587c472d6c627baad327aeda5b49",
        "patch": "@@ -858,8 +858,8 @@ bool AppInit2(boost::thread_group& threadGroup, bool fForceServer)\n         }\n     }\n \n-    // as LoadBlockIndex can take several minutes, it's possible the user\n-    // requested to kill bitcoin-qt during the last operation. If so, exit.\n+    // As LoadBlockIndex can take several minutes, it's possible the user\n+    // requested to kill the GUI during the last operation. If so, exit.\n     // As the program has not fully started yet, Shutdown() is possibly overkill.\n     if (fRequestShutdown)\n     {"
      },
      {
        "sha": "83e51b275e01f2017ebad50647b65ad09da6b1f6",
        "filename": "src/qt/forms/rpcconsole.ui",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/46469d0f8610587c472d6c627baad327aeda5b49/src/qt/forms/rpcconsole.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/46469d0f8610587c472d6c627baad327aeda5b49/src/qt/forms/rpcconsole.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/rpcconsole.ui?ref=46469d0f8610587c472d6c627baad327aeda5b49",
        "patch": "@@ -36,7 +36,7 @@\n           </font>\n          </property>\n          <property name=\"text\">\n-          <string>Bitcoin Core</string>\n+          <string>General</string>\n          </property>\n         </widget>\n        </item>"
      },
      {
        "sha": "b87498402d4887d8ad95cdd6323d63b7e0d8d68d",
        "filename": "src/qt/guiutil.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/46469d0f8610587c472d6c627baad327aeda5b49/src/qt/guiutil.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/46469d0f8610587c472d6c627baad327aeda5b49/src/qt/guiutil.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.cpp?ref=46469d0f8610587c472d6c627baad327aeda5b49",
        "patch": "@@ -594,7 +594,7 @@ void restoreWindowGeometry(const QString& strSetting, const QSize& defaultSize,\n HelpMessageBox::HelpMessageBox(QWidget *parent) :\n     QMessageBox(parent)\n {\n-    header = tr(\"Bitcoin Core\") + tr(\"version\") + \" \" +\n+    header = tr(\"Bitcoin Core\") + \" \" + tr(\"version\") + \" \" +\n         QString::fromStdString(FormatFullVersion()) + \"\\n\\n\" +\n         tr(\"Usage:\") + \"\\n\" +\n         \"  bitcoin-qt [\" + tr(\"command-line options\") + \"]                     \" + \"\\n\";"
      }
    ]
  },
  {
    "sha": "8f5fd9449738e95d8c9dc27e9ddb9b7305b24564",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4ZjVmZDk0NDk3MzhlOTVkOGM5ZGMyN2U5ZGRiOWI3MzA1YjI0NTY0",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-17T06:29:44Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-17T06:29:53Z"
      },
      "message": "Merge pull request #3434\n\n46469d0 some more small re-branding changes (Bitcoin Core) (Philip Kaufmann)",
      "tree": {
        "sha": "d3417cdb58e4347de8930b01cd5f15fa8cf06f86",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d3417cdb58e4347de8930b01cd5f15fa8cf06f86"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8f5fd9449738e95d8c9dc27e9ddb9b7305b24564",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJSr+9hAAoJEHSBCwEjRsmmQxkH/RIoEJroyOoYgkeY1EW5/znx\nr4s8sPLq3/fgm8iBdfNEUN7+9t+f/IS/rq+/dLpux4x8lOyTL+kjsZV40shH7Mvw\ngwry6HcbH7hDX8H8EAA+XwtAYi97xpfN4Ish2O4Kdo4ZYaOf3NjPcV1HwTtXjKA7\nPXVplVQLyn/nN2ofxGjdM+O09RyVhKF+HDz3AGZ2jVgiRNlRr7G7HB87LsipRAkj\n5kOPmSe1yqc1XwuESrVeUzvo89GUbbGzYyXV5whzvUrEoMz69zqQOY1MfBjdono3\nVNoG31bGzlIcylBGcw9dIrAmykklhP0RvpLy4WDGLxM2XotEr9aYwIRKxPrUehQ=\n=C02X\n-----END PGP SIGNATURE-----",
        "payload": "tree d3417cdb58e4347de8930b01cd5f15fa8cf06f86\nparent 3743b80528b867cfe142f2c07aee31d92a1e13cb\nparent 46469d0f8610587c472d6c627baad327aeda5b49\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1387261784 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1387261793 +0100\n\nMerge pull request #3434\n\n46469d0 some more small re-branding changes (Bitcoin Core) (Philip Kaufmann)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8f5fd9449738e95d8c9dc27e9ddb9b7305b24564",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8f5fd9449738e95d8c9dc27e9ddb9b7305b24564",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8f5fd9449738e95d8c9dc27e9ddb9b7305b24564/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3743b80528b867cfe142f2c07aee31d92a1e13cb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3743b80528b867cfe142f2c07aee31d92a1e13cb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3743b80528b867cfe142f2c07aee31d92a1e13cb"
      },
      {
        "sha": "46469d0f8610587c472d6c627baad327aeda5b49",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/46469d0f8610587c472d6c627baad327aeda5b49",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/46469d0f8610587c472d6c627baad327aeda5b49"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "f577a6e05ca5cdbd5755e47fd7be94fa0f986dbe",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8f5fd9449738e95d8c9dc27e9ddb9b7305b24564/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8f5fd9449738e95d8c9dc27e9ddb9b7305b24564/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=8f5fd9449738e95d8c9dc27e9ddb9b7305b24564",
        "patch": "@@ -858,8 +858,8 @@ bool AppInit2(boost::thread_group& threadGroup, bool fForceServer)\n         }\n     }\n \n-    // as LoadBlockIndex can take several minutes, it's possible the user\n-    // requested to kill bitcoin-qt during the last operation. If so, exit.\n+    // As LoadBlockIndex can take several minutes, it's possible the user\n+    // requested to kill the GUI during the last operation. If so, exit.\n     // As the program has not fully started yet, Shutdown() is possibly overkill.\n     if (fRequestShutdown)\n     {"
      },
      {
        "sha": "83e51b275e01f2017ebad50647b65ad09da6b1f6",
        "filename": "src/qt/forms/rpcconsole.ui",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8f5fd9449738e95d8c9dc27e9ddb9b7305b24564/src/qt/forms/rpcconsole.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8f5fd9449738e95d8c9dc27e9ddb9b7305b24564/src/qt/forms/rpcconsole.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/rpcconsole.ui?ref=8f5fd9449738e95d8c9dc27e9ddb9b7305b24564",
        "patch": "@@ -36,7 +36,7 @@\n           </font>\n          </property>\n          <property name=\"text\">\n-          <string>Bitcoin Core</string>\n+          <string>General</string>\n          </property>\n         </widget>\n        </item>"
      },
      {
        "sha": "b87498402d4887d8ad95cdd6323d63b7e0d8d68d",
        "filename": "src/qt/guiutil.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8f5fd9449738e95d8c9dc27e9ddb9b7305b24564/src/qt/guiutil.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8f5fd9449738e95d8c9dc27e9ddb9b7305b24564/src/qt/guiutil.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.cpp?ref=8f5fd9449738e95d8c9dc27e9ddb9b7305b24564",
        "patch": "@@ -594,7 +594,7 @@ void restoreWindowGeometry(const QString& strSetting, const QSize& defaultSize,\n HelpMessageBox::HelpMessageBox(QWidget *parent) :\n     QMessageBox(parent)\n {\n-    header = tr(\"Bitcoin Core\") + tr(\"version\") + \" \" +\n+    header = tr(\"Bitcoin Core\") + \" \" + tr(\"version\") + \" \" +\n         QString::fromStdString(FormatFullVersion()) + \"\\n\\n\" +\n         tr(\"Usage:\") + \"\\n\" +\n         \"  bitcoin-qt [\" + tr(\"command-line options\") + \"]                     \" + \"\\n\";"
      }
    ]
  },
  {
    "sha": "a549842499e8aebcb1a9846eeaef9d02c32b1de6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNTQ5ODQyNDk5ZThhZWJjYjFhOTg0NmVlYWVmOWQwMmMzMmIxZGU2",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-17T06:30:40Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-17T06:30:48Z"
      },
      "message": "Merge pull request #3431\n\n131c3db Fix typos in spendfrom README (Lake Denman)",
      "tree": {
        "sha": "cc1f7cd99e39227c0d74f9be984074d93ef3b90e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cc1f7cd99e39227c0d74f9be984074d93ef3b90e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a549842499e8aebcb1a9846eeaef9d02c32b1de6",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJSr++YAAoJEHSBCwEjRsmm1HsH/23t2ea4njbAPvQrePdksyoy\n6lWXS8gz7C6GxArFO6fkH8r1hSdRrmnSuWRXnaWHJTezHkriBDBnCbKIrwRi7WSe\nYugk1+g5jgwEOcvYyc2bxoVtiOFkRHNpQL/KbUMz8m780yhm55BI352M04lF87mU\nholeRbDBNtAhHSArh4yuPcItqWAjhIKyYzr9xNE7/9vtopwpMTAI6TF+naJQMEXQ\nOB4taRLfeNs5Rr23iXomZ8XjSy/wX1sgKk/Rx/FhD4M1xKmtN6xF/vjOhkpzL/zn\nUx09MTihoAIh4YxB2CseEIICygdOw/L49CAfwYiUGNqEvDqbUzUVcwzpZM3xUEQ=\n=OaTJ\n-----END PGP SIGNATURE-----",
        "payload": "tree cc1f7cd99e39227c0d74f9be984074d93ef3b90e\nparent 8f5fd9449738e95d8c9dc27e9ddb9b7305b24564\nparent 131c3db8fbc2cf26e5fd86904562ff750310acea\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1387261840 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1387261848 +0100\n\nMerge pull request #3431\n\n131c3db Fix typos in spendfrom README (Lake Denman)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a549842499e8aebcb1a9846eeaef9d02c32b1de6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a549842499e8aebcb1a9846eeaef9d02c32b1de6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a549842499e8aebcb1a9846eeaef9d02c32b1de6/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8f5fd9449738e95d8c9dc27e9ddb9b7305b24564",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8f5fd9449738e95d8c9dc27e9ddb9b7305b24564",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8f5fd9449738e95d8c9dc27e9ddb9b7305b24564"
      },
      {
        "sha": "131c3db8fbc2cf26e5fd86904562ff750310acea",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/131c3db8fbc2cf26e5fd86904562ff750310acea",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/131c3db8fbc2cf26e5fd86904562ff750310acea"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "c0a9c9ccf93d335a7092e383ff8a59ae410e549d",
        "filename": "contrib/spendfrom/README.md",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a549842499e8aebcb1a9846eeaef9d02c32b1de6/contrib/spendfrom/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a549842499e8aebcb1a9846eeaef9d02c32b1de6/contrib/spendfrom/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/spendfrom/README.md?ref=a549842499e8aebcb1a9846eeaef9d02c32b1de6",
        "patch": "@@ -15,7 +15,7 @@ With arguments, sends coins received by the `FROMADDRESS` addresses to the `TOAD\n \n ### Notes ###\n \n-- You may explictly specify how much fee to pay (a fee more than 1% of the amount\n+- You may explicitly specify how much fee to pay (a fee more than 1% of the amount\n will fail,  though, to prevent bitcoin-losing accidents). Spendfrom may fail if\n it thinks the transaction would never be confirmed (if the amount being sent is\n too small, or if the transaction is too many bytes for the fee).\n@@ -25,7 +25,7 @@ too small, or if the transaction is too many bytes for the fee).\n \n - If `--datadir` is not specified, the default datadir is used.\n \n-- The `--dry_run` option will just create and sign the the transaction and print\n+- The `--dry_run` option will just create and sign the transaction and print\n the transaction data (as hexadecimal), instead of broadcasting it.\n \n - If the transaction is created and broadcast successfully, a transaction id"
      }
    ]
  },
  {
    "sha": "6c1bf199ca25809b0e6323a4dcbe5be97ce84cd9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2YzFiZjE5OWNhMjU4MDliMGU2MzIzYTRkY2JlNWJlOTdjZTg0Y2Q5",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2013-12-16T21:54:02Z"
      },
      "committer": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2013-12-17T06:56:40Z"
      },
      "message": "[Qt] style-police, add missing license headers\n\n- add missing license headers in Mac files\n- small code formating cleanups",
      "tree": {
        "sha": "6537dffb2445b11ff7b368d29547f07e659e098a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6537dffb2445b11ff7b368d29547f07e659e098a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6c1bf199ca25809b0e6323a4dcbe5be97ce84cd9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6c1bf199ca25809b0e6323a4dcbe5be97ce84cd9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6c1bf199ca25809b0e6323a4dcbe5be97ce84cd9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6c1bf199ca25809b0e6323a4dcbe5be97ce84cd9/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "3743b80528b867cfe142f2c07aee31d92a1e13cb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3743b80528b867cfe142f2c07aee31d92a1e13cb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3743b80528b867cfe142f2c07aee31d92a1e13cb"
      }
    ],
    "stats": {
      "total": 31,
      "additions": 21,
      "deletions": 10
    },
    "files": [
      {
        "sha": "1698595188d3d4978e727fb00e23285ec8d3062f",
        "filename": "src/qt/bitcoinamountfield.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6c1bf199ca25809b0e6323a4dcbe5be97ce84cd9/src/qt/bitcoinamountfield.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6c1bf199ca25809b0e6323a4dcbe5be97ce84cd9/src/qt/bitcoinamountfield.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoinamountfield.cpp?ref=6c1bf199ca25809b0e6323a4dcbe5be97ce84cd9",
        "patch": "@@ -14,8 +14,10 @@\n #include <QKeyEvent>\n #include <qmath.h> // for qPow()\n \n-BitcoinAmountField::BitcoinAmountField(QWidget *parent):\n-        QWidget(parent), amount(0), currentUnit(-1)\n+BitcoinAmountField::BitcoinAmountField(QWidget *parent) :\n+    QWidget(parent),\n+    amount(0),\n+    currentUnit(-1)\n {\n     amount = new QDoubleSpinBox(this);\n     amount->setLocale(QLocale::c());"
      },
      {
        "sha": "46982cc339cfa9d1a9a9e33cdc8053dc1b1009fd",
        "filename": "src/qt/editaddressdialog.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6c1bf199ca25809b0e6323a4dcbe5be97ce84cd9/src/qt/editaddressdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6c1bf199ca25809b0e6323a4dcbe5be97ce84cd9/src/qt/editaddressdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/editaddressdialog.cpp?ref=6c1bf199ca25809b0e6323a4dcbe5be97ce84cd9",
        "patch": "@@ -13,7 +13,10 @@\n \n EditAddressDialog::EditAddressDialog(Mode mode, QWidget *parent) :\n     QDialog(parent),\n-    ui(new Ui::EditAddressDialog), mapper(0), mode(mode), model(0)\n+    ui(new Ui::EditAddressDialog),\n+    mapper(0),\n+    mode(mode),\n+    model(0)\n {\n     ui->setupUi(this);\n "
      },
      {
        "sha": "64291c9188aa9b46f082c07741747451aa2cdc09",
        "filename": "src/qt/macdockiconhandler.mm",
        "status": "modified",
        "additions": 6,
        "deletions": 2,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6c1bf199ca25809b0e6323a4dcbe5be97ce84cd9/src/qt/macdockiconhandler.mm",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6c1bf199ca25809b0e6323a4dcbe5be97ce84cd9/src/qt/macdockiconhandler.mm",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/macdockiconhandler.mm?ref=6c1bf199ca25809b0e6323a4dcbe5be97ce84cd9",
        "patch": "@@ -1,9 +1,13 @@\n+// Copyright (c) 2011-2013 The Bitcoin Core developers\n+// Distributed under the MIT/X11 software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n #include \"macdockiconhandler.h\"\n \n+#include <QImageWriter>\n #include <QMenu>\n-#include <QWidget>\n #include <QTemporaryFile>\n-#include <QImageWriter>\n+#include <QWidget>\n \n #undef slots\n #include <Cocoa/Cocoa.h>"
      },
      {
        "sha": "8a4c94cc5c523f517760bb92f46a736440f2c29c",
        "filename": "src/qt/macnotificationhandler.mm",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6c1bf199ca25809b0e6323a4dcbe5be97ce84cd9/src/qt/macnotificationhandler.mm",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6c1bf199ca25809b0e6323a4dcbe5be97ce84cd9/src/qt/macnotificationhandler.mm",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/macnotificationhandler.mm?ref=6c1bf199ca25809b0e6323a4dcbe5be97ce84cd9",
        "patch": "@@ -1,3 +1,7 @@\n+// Copyright (c) 2011-2013 The Bitcoin Core developers\n+// Distributed under the MIT/X11 software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n #include \"macnotificationhandler.h\"\n \n #undef slots"
      },
      {
        "sha": "ed4b04d36128f2bd66c0c30cdf01c7603e7f41cf",
        "filename": "src/qt/receivecoinsdialog.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6c1bf199ca25809b0e6323a4dcbe5be97ce84cd9/src/qt/receivecoinsdialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6c1bf199ca25809b0e6323a4dcbe5be97ce84cd9/src/qt/receivecoinsdialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/receivecoinsdialog.h?ref=6c1bf199ca25809b0e6323a4dcbe5be97ce84cd9",
        "patch": "@@ -13,6 +13,7 @@ namespace Ui {\n }\n class WalletModel;\n class OptionsModel;\n+\n QT_BEGIN_NAMESPACE\n class QModelIndex;\n QT_END_NAMESPACE"
      },
      {
        "sha": "f08342b83eaa4df1603e4962d36e8cbaf65de59d",
        "filename": "src/qt/walletmodel.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6c1bf199ca25809b0e6323a4dcbe5be97ce84cd9/src/qt/walletmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6c1bf199ca25809b0e6323a4dcbe5be97ce84cd9/src/qt/walletmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.cpp?ref=6c1bf199ca25809b0e6323a4dcbe5be97ce84cd9",
        "patch": "@@ -6,8 +6,8 @@\n \n #include \"addresstablemodel.h\"\n #include \"guiconstants.h\"\n-#include \"transactiontablemodel.h\"\n #include \"recentrequeststablemodel.h\"\n+#include \"transactiontablemodel.h\"\n \n #include \"base58.h\"\n #include \"db.h\""
      },
      {
        "sha": "4ec014437cd01a715877a8b856b6c8f03ffed305",
        "filename": "src/qt/walletmodel.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6c1bf199ca25809b0e6323a4dcbe5be97ce84cd9/src/qt/walletmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6c1bf199ca25809b0e6323a4dcbe5be97ce84cd9/src/qt/walletmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.h?ref=6c1bf199ca25809b0e6323a4dcbe5be97ce84cd9",
        "patch": "@@ -17,8 +17,8 @@\n \n class AddressTableModel;\n class OptionsModel;\n-class TransactionTableModel;\n class RecentRequestsTableModel;\n+class TransactionTableModel;\n class WalletModelTransaction;\n \n class CCoinControl;"
      },
      {
        "sha": "b7e85bcd11a628b6198be4df3800b229c3f0d60c",
        "filename": "src/qt/walletmodeltransaction.h",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6c1bf199ca25809b0e6323a4dcbe5be97ce84cd9/src/qt/walletmodeltransaction.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6c1bf199ca25809b0e6323a4dcbe5be97ce84cd9/src/qt/walletmodeltransaction.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodeltransaction.h?ref=6c1bf199ca25809b0e6323a4dcbe5be97ce84cd9",
        "patch": "@@ -39,9 +39,6 @@ class WalletModelTransaction\n     CWalletTx *walletTransaction;\n     CReserveKey *keyChange;\n     qint64 fee;\n-\n-public slots:\n-\n };\n \n #endif // WALLETMODELTRANSACTION_H"
      }
    ]
  },
  {
    "sha": "9c6546c90e3f2b93102d06614dffd5ee05db7c93",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5YzY1NDZjOTBlM2YyYjkzMTAyZDA2NjE0ZGZmZDVlZTA1ZGI3Yzkz",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-17T07:47:30Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-17T07:47:30Z"
      },
      "message": "Rebrand README.md\n\nHow could I forgot this file...",
      "tree": {
        "sha": "34aeb9202258664b8d4e00de27ac8411729b38a9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/34aeb9202258664b8d4e00de27ac8411729b38a9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9c6546c90e3f2b93102d06614dffd5ee05db7c93",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9c6546c90e3f2b93102d06614dffd5ee05db7c93",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9c6546c90e3f2b93102d06614dffd5ee05db7c93",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9c6546c90e3f2b93102d06614dffd5ee05db7c93/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a549842499e8aebcb1a9846eeaef9d02c32b1de6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a549842499e8aebcb1a9846eeaef9d02c32b1de6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a549842499e8aebcb1a9846eeaef9d02c32b1de6"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 5,
      "deletions": 5
    },
    "files": [
      {
        "sha": "ea5c57625f6e44f4d12cc931899156c610b263fd",
        "filename": "README.md",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9c6546c90e3f2b93102d06614dffd5ee05db7c93/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9c6546c90e3f2b93102d06614dffd5ee05db7c93/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/README.md?ref=9c6546c90e3f2b93102d06614dffd5ee05db7c93",
        "patch": "@@ -1,26 +1,26 @@\n-Bitcoin integration/staging tree\n+Bitcoin Core integration/staging tree\n ================================\n \n http://www.bitcoin.org\n \n-Copyright (c) 2009-2013 Bitcoin Developers\n+Copyright (c) 2009-2013 Bitcoin Core Developers\n \n What is Bitcoin?\n ----------------\n \n Bitcoin is an experimental new digital currency that enables instant payments to\n anyone, anywhere in the world. Bitcoin uses peer-to-peer technology to operate\n with no central authority: managing transactions and issuing money are carried\n-out collectively by the network. Bitcoin is also the name of the open source\n+out collectively by the network. Bitcoin Core is the name of open source\n software which enables the use of this currency.\n \n For more information, as well as an immediately useable, binary version of\n-the Bitcoin client software, see http://www.bitcoin.org.\n+the Bitcoin Core software, see http://www.bitcoin.org/en/download.\n \n License\n -------\n \n-Bitcoin is released under the terms of the MIT license. See [COPYING](COPYING) for more\n+Bitcoin Core is released under the terms of the MIT license. See [COPYING](COPYING) for more\n information or see http://opensource.org/licenses/MIT.\n \n Development process"
      }
    ]
  },
  {
    "sha": "cf920b657d11b0913ef5b16d0a07ff860ae36aaf",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjZjkyMGI2NTdkMTFiMDkxM2VmNWIxNmQwYTA3ZmY4NjBhZTM2YWFm",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-17T08:50:18Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-17T08:50:39Z"
      },
      "message": "Merge pull request #3405\n\n55c6890 Squashed 'src/leveldb/' changes from 936b461..e991315 (Pieter Wuille)",
      "tree": {
        "sha": "a264d3b70d47acf8f7dbff57d22c926cfdb85d19",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a264d3b70d47acf8f7dbff57d22c926cfdb85d19"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cf920b657d11b0913ef5b16d0a07ff860ae36aaf",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJSsBBfAAoJEHSBCwEjRsmm/fIIALAl8mpIWvD8HPfBFcpInE9O\n1wWDPh6jXU51N70/Mt/cJRKzS0W1vNKnnJr/vJe78kPZv6MJSShGtRzOJ78maj/j\n5IOfgom+FXDFe8Pc/o2v4s0bxZXNXPumlMUB4Z7vXYaGq6zB23CemJ49cR2aadj2\ng1FZslFYkmCWWackW3yuBHHUvArEPDcpzZgyHzKV4KZtq4/uM5dbgQ8fWicSpheu\nVIiw5jZGP0almgBzohKhPcbLdfEh4vnJu1TXl+AQLiwf3IGCxwHFqSdZgQ2FkSTG\nryHGtxlEb9/Re0YrlMx0ct7sYpujWB9FAfkUhq/9tWhXjv775GhrTZydiK6hhA8=\n=soV1\n-----END PGP SIGNATURE-----",
        "payload": "tree a264d3b70d47acf8f7dbff57d22c926cfdb85d19\nparent a549842499e8aebcb1a9846eeaef9d02c32b1de6\nparent ed873a301eeff8c021ba57c78fb702fd2b6f0452\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1387270218 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1387270239 +0100\n\nMerge pull request #3405\n\n55c6890 Squashed 'src/leveldb/' changes from 936b461..e991315 (Pieter Wuille)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cf920b657d11b0913ef5b16d0a07ff860ae36aaf",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cf920b657d11b0913ef5b16d0a07ff860ae36aaf",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cf920b657d11b0913ef5b16d0a07ff860ae36aaf/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a549842499e8aebcb1a9846eeaef9d02c32b1de6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a549842499e8aebcb1a9846eeaef9d02c32b1de6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a549842499e8aebcb1a9846eeaef9d02c32b1de6"
      },
      {
        "sha": "ed873a301eeff8c021ba57c78fb702fd2b6f0452",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ed873a301eeff8c021ba57c78fb702fd2b6f0452",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ed873a301eeff8c021ba57c78fb702fd2b6f0452"
      }
    ],
    "stats": {
      "total": 813,
      "additions": 448,
      "deletions": 365
    },
    "files": [
      {
        "sha": "2439d7a45299f2aadc9bb99512c1aaa6300b02a7",
        "filename": "src/leveldb/AUTHORS",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cf920b657d11b0913ef5b16d0a07ff860ae36aaf/src/leveldb/AUTHORS",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cf920b657d11b0913ef5b16d0a07ff860ae36aaf/src/leveldb/AUTHORS",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/AUTHORS?ref=cf920b657d11b0913ef5b16d0a07ff860ae36aaf",
        "patch": "@@ -9,3 +9,4 @@ Sanjay Ghemawat <sanjay@google.com>\n \n # Partial list of contributors:\n Kevin Regan <kevin.d.regan@gmail.com>\n+Johan Bilien <jobi@litl.com>"
      },
      {
        "sha": "344ff2972a57dd6925b96ca47b5f3c9c6bfdf7e1",
        "filename": "src/leveldb/Makefile",
        "status": "modified",
        "additions": 7,
        "deletions": 3,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cf920b657d11b0913ef5b16d0a07ff860ae36aaf/src/leveldb/Makefile",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cf920b657d11b0913ef5b16d0a07ff860ae36aaf/src/leveldb/Makefile",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/Makefile?ref=cf920b657d11b0913ef5b16d0a07ff860ae36aaf",
        "patch": "@@ -44,6 +44,7 @@ TESTS = \\\n \tfilename_test \\\n \tfilter_block_test \\\n \tissue178_test \\\n+\tissue200_test \\\n \tlog_test \\\n \tmemenv_test \\\n \tskiplist_test \\\n@@ -71,7 +72,7 @@ SHARED = $(SHARED1)\n else\n # Update db.h if you change these.\n SHARED_MAJOR = 1\n-SHARED_MINOR = 13\n+SHARED_MINOR = 15\n SHARED1 = libleveldb.$(PLATFORM_SHARED_EXT)\n SHARED2 = $(SHARED1).$(SHARED_MAJOR)\n SHARED3 = $(SHARED1).$(SHARED_MAJOR).$(SHARED_MINOR)\n@@ -154,6 +155,9 @@ filter_block_test: table/filter_block_test.o $(LIBOBJECTS) $(TESTHARNESS)\n issue178_test: issues/issue178_test.o $(LIBOBJECTS) $(TESTHARNESS)\n \t$(CXX) $(LDFLAGS) issues/issue178_test.o $(LIBOBJECTS) $(TESTHARNESS) -o $@ $(LIBS)\n \n+issue200_test: issues/issue200_test.o $(LIBOBJECTS) $(TESTHARNESS)\n+\t$(CXX) $(LDFLAGS) issues/issue200_test.o $(LIBOBJECTS) $(TESTHARNESS) -o $@ $(LIBS)\n+\n log_test: db/log_test.o $(LIBOBJECTS) $(TESTHARNESS)\n \t$(CXX) $(LDFLAGS) db/log_test.o $(LIBOBJECTS) $(TESTHARNESS) -o $@ $(LIBS)\n \n@@ -191,14 +195,14 @@ IOSVERSION=$(shell defaults read $(PLATFORMSROOT)/iPhoneOS.platform/version CFBu\n \tmkdir -p ios-x86/$(dir $@)\n \t$(CXX) $(CXXFLAGS) -isysroot $(SIMULATORROOT)/SDKs/iPhoneSimulator$(IOSVERSION).sdk -arch i686 -c $< -o ios-x86/$@\n \tmkdir -p ios-arm/$(dir $@)\n-\t$(DEVICEROOT)/usr/bin/$(CXX) $(CXXFLAGS) -isysroot $(DEVICEROOT)/SDKs/iPhoneOS$(IOSVERSION).sdk -arch armv6 -arch armv7 -c $< -o ios-arm/$@\n+\txcrun -sdk iphoneos $(CXX) $(CXXFLAGS) -isysroot $(DEVICEROOT)/SDKs/iPhoneOS$(IOSVERSION).sdk -arch armv6 -arch armv7 -c $< -o ios-arm/$@\n \tlipo ios-x86/$@ ios-arm/$@ -create -output $@\n \n .c.o:\n \tmkdir -p ios-x86/$(dir $@)\n \t$(CC) $(CFLAGS) -isysroot $(SIMULATORROOT)/SDKs/iPhoneSimulator$(IOSVERSION).sdk -arch i686 -c $< -o ios-x86/$@\n \tmkdir -p ios-arm/$(dir $@)\n-\t$(DEVICEROOT)/usr/bin/$(CC) $(CFLAGS) -isysroot $(DEVICEROOT)/SDKs/iPhoneOS$(IOSVERSION).sdk -arch armv6 -arch armv7 -c $< -o ios-arm/$@\n+\txcrun -sdk iphoneos $(CC) $(CFLAGS) -isysroot $(DEVICEROOT)/SDKs/iPhoneOS$(IOSVERSION).sdk -arch armv6 -arch armv7 -c $< -o ios-arm/$@\n \tlipo ios-x86/$@ ios-arm/$@ -create -output $@\n \n else"
      },
      {
        "sha": "85b1ce02241a2e336cefff28c1ccb28b22ff09e9",
        "filename": "src/leveldb/build_detect_platform",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cf920b657d11b0913ef5b16d0a07ff860ae36aaf/src/leveldb/build_detect_platform",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cf920b657d11b0913ef5b16d0a07ff860ae36aaf/src/leveldb/build_detect_platform",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/build_detect_platform?ref=cf920b657d11b0913ef5b16d0a07ff860ae36aaf",
        "patch": "@@ -137,6 +137,16 @@ case \"$TARGET_OS\" in\n         # man ld: +h internal_name\n         PLATFORM_SHARED_LDFLAGS=\"-shared -Wl,+h -Wl,\"\n         ;;\n+    IOS)\n+        PLATFORM=IOS\n+        COMMON_FLAGS=\"$MEMCMP_FLAG -DOS_MACOSX\"\n+        [ -z \"$INSTALL_PATH\" ] && INSTALL_PATH=`pwd`\n+        PORT_FILE=port/port_posix.cc\n+        PLATFORM_SHARED_EXT=\n+        PLATFORM_SHARED_LDFLAGS=\n+        PLATFORM_SHARED_CFLAGS=\n+        PLATFORM_SHARED_VERSIONED=\n+        ;;\n     OS_WINDOWS_CROSSCOMPILE | NATIVE_WINDOWS)\n         PLATFORM=OS_WINDOWS\n         COMMON_FLAGS=\"-fno-builtin-memcmp -D_REENTRANT -DOS_WINDOWS -DLEVELDB_PLATFORM_WINDOWS -DWINVER=0x0500 -D__USE_MINGW_ANSI_STDIO=1\""
      },
      {
        "sha": "96afc68913ce23ff83ffbf0fa94610b4f30f182e",
        "filename": "src/leveldb/db/corruption_test.cc",
        "status": "modified",
        "additions": 24,
        "deletions": 2,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cf920b657d11b0913ef5b16d0a07ff860ae36aaf/src/leveldb/db/corruption_test.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cf920b657d11b0913ef5b16d0a07ff860ae36aaf/src/leveldb/db/corruption_test.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/corruption_test.cc?ref=cf920b657d11b0913ef5b16d0a07ff860ae36aaf",
        "patch": "@@ -75,7 +75,13 @@ class CorruptionTest {\n       Slice key = Key(i, &key_space);\n       batch.Clear();\n       batch.Put(key, Value(i, &value_space));\n-      ASSERT_OK(db_->Write(WriteOptions(), &batch));\n+      WriteOptions options;\n+      // Corrupt() doesn't work without this sync on windows; stat reports 0 for\n+      // the file size.\n+      if (i == n - 1) {\n+        options.sync = true;\n+      }\n+      ASSERT_OK(db_->Write(options, &batch));\n     }\n   }\n \n@@ -125,7 +131,7 @@ class CorruptionTest {\n     FileType type;\n     std::string fname;\n     int picked_number = -1;\n-    for (int i = 0; i < filenames.size(); i++) {\n+    for (size_t i = 0; i < filenames.size(); i++) {\n       if (ParseFileName(filenames[i], &number, &type) &&\n           type == filetype &&\n           int(number) > picked_number) {  // Pick latest file\n@@ -238,6 +244,22 @@ TEST(CorruptionTest, TableFile) {\n   Check(90, 99);\n }\n \n+TEST(CorruptionTest, TableFileRepair) {\n+  options_.block_size = 2 * kValueSize;  // Limit scope of corruption\n+  options_.paranoid_checks = true;\n+  Reopen();\n+  Build(100);\n+  DBImpl* dbi = reinterpret_cast<DBImpl*>(db_);\n+  dbi->TEST_CompactMemTable();\n+  dbi->TEST_CompactRange(0, NULL, NULL);\n+  dbi->TEST_CompactRange(1, NULL, NULL);\n+\n+  Corrupt(kTableFile, 100, 1);\n+  RepairDB();\n+  Reopen();\n+  Check(95, 99);\n+}\n+\n TEST(CorruptionTest, TableFileIndexData) {\n   Build(10000);  // Enough to build multiple Tables\n   DBImpl* dbi = reinterpret_cast<DBImpl*>(db_);"
      },
      {
        "sha": "fc46d89693ee72c534e9e936e4643089b9845069",
        "filename": "src/leveldb/db/db_bench.cc",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cf920b657d11b0913ef5b16d0a07ff860ae36aaf/src/leveldb/db/db_bench.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cf920b657d11b0913ef5b16d0a07ff860ae36aaf/src/leveldb/db/db_bench.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/db_bench.cc?ref=cf920b657d11b0913ef5b16d0a07ff860ae36aaf",
        "patch": "@@ -128,7 +128,7 @@ class RandomGenerator {\n     pos_ = 0;\n   }\n \n-  Slice Generate(int len) {\n+  Slice Generate(size_t len) {\n     if (pos_ + len > data_.size()) {\n       pos_ = 0;\n       assert(len < data_.size());\n@@ -139,11 +139,11 @@ class RandomGenerator {\n };\n \n static Slice TrimSpace(Slice s) {\n-  int start = 0;\n+  size_t start = 0;\n   while (start < s.size() && isspace(s[start])) {\n     start++;\n   }\n-  int limit = s.size();\n+  size_t limit = s.size();\n   while (limit > start && isspace(s[limit-1])) {\n     limit--;\n   }\n@@ -399,7 +399,7 @@ class Benchmark {\n     heap_counter_(0) {\n     std::vector<std::string> files;\n     Env::Default()->GetChildren(FLAGS_db, &files);\n-    for (int i = 0; i < files.size(); i++) {\n+    for (size_t i = 0; i < files.size(); i++) {\n       if (Slice(files[i]).starts_with(\"heap-\")) {\n         Env::Default()->DeleteFile(std::string(FLAGS_db) + \"/\" + files[i]);\n       }"
      },
      {
        "sha": "faf5e7d7ba2bd6781d501f90e81966da8ac6a7e9",
        "filename": "src/leveldb/db/db_impl.cc",
        "status": "modified",
        "additions": 57,
        "deletions": 42,
        "changes": 99,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cf920b657d11b0913ef5b16d0a07ff860ae36aaf/src/leveldb/db/db_impl.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cf920b657d11b0913ef5b16d0a07ff860ae36aaf/src/leveldb/db/db_impl.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/db_impl.cc?ref=cf920b657d11b0913ef5b16d0a07ff860ae36aaf",
        "patch": "@@ -133,8 +133,7 @@ DBImpl::DBImpl(const Options& raw_options, const std::string& dbname)\n       seed_(0),\n       tmp_batch_(new WriteBatch),\n       bg_compaction_scheduled_(false),\n-      manual_compaction_(NULL),\n-      consecutive_compaction_errors_(0) {\n+      manual_compaction_(NULL) {\n   mem_->Ref();\n   has_imm_.Release_Store(NULL);\n \n@@ -217,6 +216,12 @@ void DBImpl::MaybeIgnoreError(Status* s) const {\n }\n \n void DBImpl::DeleteObsoleteFiles() {\n+  if (!bg_error_.ok()) {\n+    // After a background error, we don't know whether a new version may\n+    // or may not have been committed, so we cannot safely garbage collect.\n+    return;\n+  }\n+\n   // Make a set of all of the live files\n   std::set<uint64_t> live = pending_outputs_;\n   versions_->AddLiveFiles(&live);\n@@ -495,7 +500,7 @@ Status DBImpl::WriteLevel0Table(MemTable* mem, VersionEdit* edit,\n   return s;\n }\n \n-Status DBImpl::CompactMemTable() {\n+void DBImpl::CompactMemTable() {\n   mutex_.AssertHeld();\n   assert(imm_ != NULL);\n \n@@ -523,9 +528,9 @@ Status DBImpl::CompactMemTable() {\n     imm_ = NULL;\n     has_imm_.Release_Store(NULL);\n     DeleteObsoleteFiles();\n+  } else {\n+    RecordBackgroundError(s);\n   }\n-\n-  return s;\n }\n \n void DBImpl::CompactRange(const Slice* begin, const Slice* end) {\n@@ -568,16 +573,18 @@ void DBImpl::TEST_CompactRange(int level, const Slice* begin,const Slice* end) {\n   }\n \n   MutexLock l(&mutex_);\n-  while (!manual.done) {\n-    while (manual_compaction_ != NULL) {\n-      bg_cv_.Wait();\n-    }\n-    manual_compaction_ = &manual;\n-    MaybeScheduleCompaction();\n-    while (manual_compaction_ == &manual) {\n+  while (!manual.done && !shutting_down_.Acquire_Load() && bg_error_.ok()) {\n+    if (manual_compaction_ == NULL) {  // Idle\n+      manual_compaction_ = &manual;\n+      MaybeScheduleCompaction();\n+    } else {  // Running either my compaction or another compaction.\n       bg_cv_.Wait();\n     }\n   }\n+  if (manual_compaction_ == &manual) {\n+    // Cancel my manual compaction since we aborted early for some reason.\n+    manual_compaction_ = NULL;\n+  }\n }\n \n Status DBImpl::TEST_CompactMemTable() {\n@@ -596,12 +603,22 @@ Status DBImpl::TEST_CompactMemTable() {\n   return s;\n }\n \n+void DBImpl::RecordBackgroundError(const Status& s) {\n+  mutex_.AssertHeld();\n+  if (bg_error_.ok()) {\n+    bg_error_ = s;\n+    bg_cv_.SignalAll();\n+  }\n+}\n+\n void DBImpl::MaybeScheduleCompaction() {\n   mutex_.AssertHeld();\n   if (bg_compaction_scheduled_) {\n     // Already scheduled\n   } else if (shutting_down_.Acquire_Load()) {\n     // DB is being deleted; no more background compactions\n+  } else if (!bg_error_.ok()) {\n+    // Already got an error; no more changes\n   } else if (imm_ == NULL &&\n              manual_compaction_ == NULL &&\n              !versions_->NeedsCompaction()) {\n@@ -619,30 +636,12 @@ void DBImpl::BGWork(void* db) {\n void DBImpl::BackgroundCall() {\n   MutexLock l(&mutex_);\n   assert(bg_compaction_scheduled_);\n-  if (!shutting_down_.Acquire_Load()) {\n-    Status s = BackgroundCompaction();\n-    if (s.ok()) {\n-      // Success\n-      consecutive_compaction_errors_ = 0;\n-    } else if (shutting_down_.Acquire_Load()) {\n-      // Error most likely due to shutdown; do not wait\n-    } else {\n-      // Wait a little bit before retrying background compaction in\n-      // case this is an environmental problem and we do not want to\n-      // chew up resources for failed compactions for the duration of\n-      // the problem.\n-      bg_cv_.SignalAll();  // In case a waiter can proceed despite the error\n-      Log(options_.info_log, \"Waiting after background compaction error: %s\",\n-          s.ToString().c_str());\n-      mutex_.Unlock();\n-      ++consecutive_compaction_errors_;\n-      int seconds_to_sleep = 1;\n-      for (int i = 0; i < 3 && i < consecutive_compaction_errors_ - 1; ++i) {\n-        seconds_to_sleep *= 2;\n-      }\n-      env_->SleepForMicroseconds(seconds_to_sleep * 1000000);\n-      mutex_.Lock();\n-    }\n+  if (shutting_down_.Acquire_Load()) {\n+    // No more background work when shutting down.\n+  } else if (!bg_error_.ok()) {\n+    // No more background work after a background error.\n+  } else {\n+    BackgroundCompaction();\n   }\n \n   bg_compaction_scheduled_ = false;\n@@ -653,11 +652,12 @@ void DBImpl::BackgroundCall() {\n   bg_cv_.SignalAll();\n }\n \n-Status DBImpl::BackgroundCompaction() {\n+void DBImpl::BackgroundCompaction() {\n   mutex_.AssertHeld();\n \n   if (imm_ != NULL) {\n-    return CompactMemTable();\n+    CompactMemTable();\n+    return;\n   }\n \n   Compaction* c;\n@@ -691,6 +691,9 @@ Status DBImpl::BackgroundCompaction() {\n     c->edit()->AddFile(c->level() + 1, f->number, f->file_size,\n                        f->smallest, f->largest);\n     status = versions_->LogAndApply(c->edit(), &mutex_);\n+    if (!status.ok()) {\n+      RecordBackgroundError(status);\n+    }\n     VersionSet::LevelSummaryStorage tmp;\n     Log(options_.info_log, \"Moved #%lld to level-%d %lld bytes %s: %s\\n\",\n         static_cast<unsigned long long>(f->number),\n@@ -701,6 +704,9 @@ Status DBImpl::BackgroundCompaction() {\n   } else {\n     CompactionState* compact = new CompactionState(c);\n     status = DoCompactionWork(compact);\n+    if (!status.ok()) {\n+      RecordBackgroundError(status);\n+    }\n     CleanupCompaction(compact);\n     c->ReleaseInputs();\n     DeleteObsoleteFiles();\n@@ -714,9 +720,6 @@ Status DBImpl::BackgroundCompaction() {\n   } else {\n     Log(options_.info_log,\n         \"Compaction error: %s\", status.ToString().c_str());\n-    if (options_.paranoid_checks && bg_error_.ok()) {\n-      bg_error_ = status;\n-    }\n   }\n \n   if (is_manual) {\n@@ -732,7 +735,6 @@ Status DBImpl::BackgroundCompaction() {\n     }\n     manual_compaction_ = NULL;\n   }\n-  return status;\n }\n \n void DBImpl::CleanupCompaction(CompactionState* compact) {\n@@ -1002,6 +1004,9 @@ Status DBImpl::DoCompactionWork(CompactionState* compact) {\n   if (status.ok()) {\n     status = InstallCompactionResults(compact);\n   }\n+  if (!status.ok()) {\n+    RecordBackgroundError(status);\n+  }\n   VersionSet::LevelSummaryStorage tmp;\n   Log(options_.info_log,\n       \"compacted to: %s\", versions_->LevelSummary(&tmp));\n@@ -1185,13 +1190,23 @@ Status DBImpl::Write(const WriteOptions& options, WriteBatch* my_batch) {\n     {\n       mutex_.Unlock();\n       status = log_->AddRecord(WriteBatchInternal::Contents(updates));\n+      bool sync_error = false;\n       if (status.ok() && options.sync) {\n         status = logfile_->Sync();\n+        if (!status.ok()) {\n+          sync_error = true;\n+        }\n       }\n       if (status.ok()) {\n         status = WriteBatchInternal::InsertInto(updates, mem_);\n       }\n       mutex_.Lock();\n+      if (sync_error) {\n+        // The state of the log file is indeterminate: the log record we\n+        // just added may or may not show up when the DB is re-opened.\n+        // So we force the DB into a mode where all future writes fail.\n+        RecordBackgroundError(status);\n+      }\n     }\n     if (updates == tmp_batch_) tmp_batch_->Clear();\n "
      },
      {
        "sha": "cfc998164af60d9a5a9fb388e36bf56fbb74bf16",
        "filename": "src/leveldb/db/db_impl.h",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cf920b657d11b0913ef5b16d0a07ff860ae36aaf/src/leveldb/db/db_impl.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cf920b657d11b0913ef5b16d0a07ff860ae36aaf/src/leveldb/db/db_impl.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/db_impl.h?ref=cf920b657d11b0913ef5b16d0a07ff860ae36aaf",
        "patch": "@@ -87,8 +87,8 @@ class DBImpl : public DB {\n \n   // Compact the in-memory write buffer to disk.  Switches to a new\n   // log-file/memtable and writes a new descriptor iff successful.\n-  Status CompactMemTable()\n-      EXCLUSIVE_LOCKS_REQUIRED(mutex_);\n+  // Errors are recorded in bg_error_.\n+  void CompactMemTable() EXCLUSIVE_LOCKS_REQUIRED(mutex_);\n \n   Status RecoverLogFile(uint64_t log_number,\n                         VersionEdit* edit,\n@@ -102,10 +102,12 @@ class DBImpl : public DB {\n       EXCLUSIVE_LOCKS_REQUIRED(mutex_);\n   WriteBatch* BuildBatchGroup(Writer** last_writer);\n \n+  void RecordBackgroundError(const Status& s);\n+\n   void MaybeScheduleCompaction() EXCLUSIVE_LOCKS_REQUIRED(mutex_);\n   static void BGWork(void* db);\n   void BackgroundCall();\n-  Status BackgroundCompaction() EXCLUSIVE_LOCKS_REQUIRED(mutex_);\n+  void  BackgroundCompaction() EXCLUSIVE_LOCKS_REQUIRED(mutex_);\n   void CleanupCompaction(CompactionState* compact)\n       EXCLUSIVE_LOCKS_REQUIRED(mutex_);\n   Status DoCompactionWork(CompactionState* compact)\n@@ -170,7 +172,6 @@ class DBImpl : public DB {\n \n   // Have we encountered a background error in paranoid mode?\n   Status bg_error_;\n-  int consecutive_compaction_errors_;\n \n   // Per level compaction stats.  stats_[level] stores the stats for\n   // compactions that produced data for the specified \"level\"."
      },
      {
        "sha": "3b2035e9e3c2dce2b895d2f7fd03df646c166eb7",
        "filename": "src/leveldb/db/db_iter.cc",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cf920b657d11b0913ef5b16d0a07ff860ae36aaf/src/leveldb/db/db_iter.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cf920b657d11b0913ef5b16d0a07ff860ae36aaf/src/leveldb/db/db_iter.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/db_iter.cc?ref=cf920b657d11b0913ef5b16d0a07ff860ae36aaf",
        "patch": "@@ -161,12 +161,13 @@ void DBIter::Next() {\n       saved_key_.clear();\n       return;\n     }\n+    // saved_key_ already contains the key to skip past.\n+  } else {\n+    // Store in saved_key_ the current key so we skip it below.\n+    SaveKey(ExtractUserKey(iter_->key()), &saved_key_);\n   }\n \n-  // Temporarily use saved_key_ as storage for key to skip.\n-  std::string* skip = &saved_key_;\n-  SaveKey(ExtractUserKey(iter_->key()), skip);\n-  FindNextUserEntry(true, skip);\n+  FindNextUserEntry(true, &saved_key_);\n }\n \n void DBIter::FindNextUserEntry(bool skipping, std::string* skip) {"
      },
      {
        "sha": "280b01c14b593cbdf86a30b3d323308730d3fa2f",
        "filename": "src/leveldb/db/db_test.cc",
        "status": "modified",
        "additions": 89,
        "deletions": 53,
        "changes": 142,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cf920b657d11b0913ef5b16d0a07ff860ae36aaf/src/leveldb/db/db_test.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cf920b657d11b0913ef5b16d0a07ff860ae36aaf/src/leveldb/db/db_test.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/db_test.cc?ref=cf920b657d11b0913ef5b16d0a07ff860ae36aaf",
        "patch": "@@ -57,8 +57,11 @@ void DelayMilliseconds(int millis) {\n // Special Env used to delay background operations\n class SpecialEnv : public EnvWrapper {\n  public:\n-  // sstable Sync() calls are blocked while this pointer is non-NULL.\n-  port::AtomicPointer delay_sstable_sync_;\n+  // sstable/log Sync() calls are blocked while this pointer is non-NULL.\n+  port::AtomicPointer delay_data_sync_;\n+\n+  // sstable/log Sync() calls return an error.\n+  port::AtomicPointer data_sync_error_;\n \n   // Simulate no-space errors while this pointer is non-NULL.\n   port::AtomicPointer no_space_;\n@@ -75,11 +78,9 @@ class SpecialEnv : public EnvWrapper {\n   bool count_random_reads_;\n   AtomicCounter random_read_counter_;\n \n-  AtomicCounter sleep_counter_;\n-  AtomicCounter sleep_time_counter_;\n-\n   explicit SpecialEnv(Env* base) : EnvWrapper(base) {\n-    delay_sstable_sync_.Release_Store(NULL);\n+    delay_data_sync_.Release_Store(NULL);\n+    data_sync_error_.Release_Store(NULL);\n     no_space_.Release_Store(NULL);\n     non_writable_.Release_Store(NULL);\n     count_random_reads_ = false;\n@@ -88,17 +89,17 @@ class SpecialEnv : public EnvWrapper {\n   }\n \n   Status NewWritableFile(const std::string& f, WritableFile** r) {\n-    class SSTableFile : public WritableFile {\n+    class DataFile : public WritableFile {\n      private:\n       SpecialEnv* env_;\n       WritableFile* base_;\n \n      public:\n-      SSTableFile(SpecialEnv* env, WritableFile* base)\n+      DataFile(SpecialEnv* env, WritableFile* base)\n           : env_(env),\n             base_(base) {\n       }\n-      ~SSTableFile() { delete base_; }\n+      ~DataFile() { delete base_; }\n       Status Append(const Slice& data) {\n         if (env_->no_space_.Acquire_Load() != NULL) {\n           // Drop writes on the floor\n@@ -110,7 +111,10 @@ class SpecialEnv : public EnvWrapper {\n       Status Close() { return base_->Close(); }\n       Status Flush() { return base_->Flush(); }\n       Status Sync() {\n-        while (env_->delay_sstable_sync_.Acquire_Load() != NULL) {\n+        if (env_->data_sync_error_.Acquire_Load() != NULL) {\n+          return Status::IOError(\"simulated data sync error\");\n+        }\n+        while (env_->delay_data_sync_.Acquire_Load() != NULL) {\n           DelayMilliseconds(100);\n         }\n         return base_->Sync();\n@@ -147,8 +151,9 @@ class SpecialEnv : public EnvWrapper {\n \n     Status s = target()->NewWritableFile(f, r);\n     if (s.ok()) {\n-      if (strstr(f.c_str(), \".sst\") != NULL) {\n-        *r = new SSTableFile(this, *r);\n+      if (strstr(f.c_str(), \".ldb\") != NULL ||\n+          strstr(f.c_str(), \".log\") != NULL) {\n+        *r = new DataFile(this, *r);\n       } else if (strstr(f.c_str(), \"MANIFEST\") != NULL) {\n         *r = new ManifestFile(this, *r);\n       }\n@@ -179,12 +184,6 @@ class SpecialEnv : public EnvWrapper {\n     }\n     return s;\n   }\n-\n-  virtual void SleepForMicroseconds(int micros) {\n-    sleep_counter_.Increment();\n-    sleep_time_counter_.IncrementBy(micros);\n-  }\n-\n };\n \n class DBTest {\n@@ -322,7 +321,7 @@ class DBTest {\n     }\n \n     // Check reverse iteration results are the reverse of forward results\n-    int matched = 0;\n+    size_t matched = 0;\n     for (iter->SeekToLast(); iter->Valid(); iter->Prev()) {\n       ASSERT_LT(matched, forward.size());\n       ASSERT_EQ(IterStatus(iter), forward[forward.size() - matched - 1]);\n@@ -484,6 +483,24 @@ class DBTest {\n     }\n     return false;\n   }\n+\n+  // Returns number of files renamed.\n+  int RenameLDBToSST() {\n+    std::vector<std::string> filenames;\n+    ASSERT_OK(env_->GetChildren(dbname_, &filenames));\n+    uint64_t number;\n+    FileType type;\n+    int files_renamed = 0;\n+    for (size_t i = 0; i < filenames.size(); i++) {\n+      if (ParseFileName(filenames[i], &number, &type) && type == kTableFile) {\n+        const std::string from = TableFileName(dbname_, number);\n+        const std::string to = SSTTableFileName(dbname_, number);\n+        ASSERT_OK(env_->RenameFile(from, to));\n+        files_renamed++;\n+      }\n+    }\n+    return files_renamed;\n+  }\n };\n \n TEST(DBTest, Empty) {\n@@ -525,11 +542,11 @@ TEST(DBTest, GetFromImmutableLayer) {\n     ASSERT_OK(Put(\"foo\", \"v1\"));\n     ASSERT_EQ(\"v1\", Get(\"foo\"));\n \n-    env_->delay_sstable_sync_.Release_Store(env_);   // Block sync calls\n+    env_->delay_data_sync_.Release_Store(env_);      // Block sync calls\n     Put(\"k1\", std::string(100000, 'x'));             // Fill memtable\n     Put(\"k2\", std::string(100000, 'y'));             // Trigger compaction\n     ASSERT_EQ(\"v1\", Get(\"foo\"));\n-    env_->delay_sstable_sync_.Release_Store(NULL);   // Release sync calls\n+    env_->delay_data_sync_.Release_Store(NULL);      // Release sync calls\n   } while (ChangeOptions());\n }\n \n@@ -1516,41 +1533,13 @@ TEST(DBTest, NoSpace) {\n   Compact(\"a\", \"z\");\n   const int num_files = CountFiles();\n   env_->no_space_.Release_Store(env_);   // Force out-of-space errors\n-  env_->sleep_counter_.Reset();\n-  for (int i = 0; i < 5; i++) {\n+  for (int i = 0; i < 10; i++) {\n     for (int level = 0; level < config::kNumLevels-1; level++) {\n       dbfull()->TEST_CompactRange(level, NULL, NULL);\n     }\n   }\n   env_->no_space_.Release_Store(NULL);\n   ASSERT_LT(CountFiles(), num_files + 3);\n-\n-  // Check that compaction attempts slept after errors\n-  ASSERT_GE(env_->sleep_counter_.Read(), 5);\n-}\n-\n-TEST(DBTest, ExponentialBackoff) {\n-  Options options = CurrentOptions();\n-  options.env = env_;\n-  Reopen(&options);\n-\n-  ASSERT_OK(Put(\"foo\", \"v1\"));\n-  ASSERT_EQ(\"v1\", Get(\"foo\"));\n-  Compact(\"a\", \"z\");\n-  env_->non_writable_.Release_Store(env_);  // Force errors for new files\n-  env_->sleep_counter_.Reset();\n-  env_->sleep_time_counter_.Reset();\n-  for (int i = 0; i < 5; i++) {\n-    dbfull()->TEST_CompactRange(2, NULL, NULL);\n-  }\n-  env_->non_writable_.Release_Store(NULL);\n-\n-  // Wait for compaction to finish\n-  DelayMilliseconds(1000);\n-\n-  ASSERT_GE(env_->sleep_counter_.Read(), 5);\n-  ASSERT_LT(env_->sleep_counter_.Read(), 10);\n-  ASSERT_GE(env_->sleep_time_counter_.Read(), 10e6);\n }\n \n TEST(DBTest, NonWritableFileSystem) {\n@@ -1573,6 +1562,37 @@ TEST(DBTest, NonWritableFileSystem) {\n   env_->non_writable_.Release_Store(NULL);\n }\n \n+TEST(DBTest, WriteSyncError) {\n+  // Check that log sync errors cause the DB to disallow future writes.\n+\n+  // (a) Cause log sync calls to fail\n+  Options options = CurrentOptions();\n+  options.env = env_;\n+  Reopen(&options);\n+  env_->data_sync_error_.Release_Store(env_);\n+\n+  // (b) Normal write should succeed\n+  WriteOptions w;\n+  ASSERT_OK(db_->Put(w, \"k1\", \"v1\"));\n+  ASSERT_EQ(\"v1\", Get(\"k1\"));\n+\n+  // (c) Do a sync write; should fail\n+  w.sync = true;\n+  ASSERT_TRUE(!db_->Put(w, \"k2\", \"v2\").ok());\n+  ASSERT_EQ(\"v1\", Get(\"k1\"));\n+  ASSERT_EQ(\"NOT_FOUND\", Get(\"k2\"));\n+\n+  // (d) make sync behave normally\n+  env_->data_sync_error_.Release_Store(NULL);\n+\n+  // (e) Do a non-sync write; should fail\n+  w.sync = false;\n+  ASSERT_TRUE(!db_->Put(w, \"k3\", \"v3\").ok());\n+  ASSERT_EQ(\"v1\", Get(\"k1\"));\n+  ASSERT_EQ(\"NOT_FOUND\", Get(\"k2\"));\n+  ASSERT_EQ(\"NOT_FOUND\", Get(\"k3\"));\n+}\n+\n TEST(DBTest, ManifestWriteError) {\n   // Test for the following problem:\n   // (a) Compaction produces file F\n@@ -1632,6 +1652,22 @@ TEST(DBTest, MissingSSTFile) {\n       << s.ToString();\n }\n \n+TEST(DBTest, StillReadSST) {\n+  ASSERT_OK(Put(\"foo\", \"bar\"));\n+  ASSERT_EQ(\"bar\", Get(\"foo\"));\n+\n+  // Dump the memtable to disk.\n+  dbfull()->TEST_CompactMemTable();\n+  ASSERT_EQ(\"bar\", Get(\"foo\"));\n+  Close();\n+  ASSERT_GT(RenameLDBToSST(), 0);\n+  Options options = CurrentOptions();\n+  options.paranoid_checks = true;\n+  Status s = TryReopen(&options);\n+  ASSERT_TRUE(s.ok());\n+  ASSERT_EQ(\"bar\", Get(\"foo\"));\n+}\n+\n TEST(DBTest, FilesDeletedAfterCompaction) {\n   ASSERT_OK(Put(\"foo\", \"v2\"));\n   Compact(\"a\", \"z\");\n@@ -1663,7 +1699,7 @@ TEST(DBTest, BloomFilter) {\n   dbfull()->TEST_CompactMemTable();\n \n   // Prevent auto compactions triggered by seeks\n-  env_->delay_sstable_sync_.Release_Store(env_);\n+  env_->delay_data_sync_.Release_Store(env_);\n \n   // Lookup present keys.  Should rarely read from small sstable.\n   env_->random_read_counter_.Reset();\n@@ -1684,7 +1720,7 @@ TEST(DBTest, BloomFilter) {\n   fprintf(stderr, \"%d missing => %d reads\\n\", N, reads);\n   ASSERT_LE(reads, 3*N/100);\n \n-  env_->delay_sstable_sync_.Release_Store(NULL);\n+  env_->delay_data_sync_.Release_Store(NULL);\n   Close();\n   delete options.block_cache;\n   delete options.filter_policy;\n@@ -1744,7 +1780,7 @@ static void MTThreadBody(void* arg) {\n         ASSERT_EQ(k, key);\n         ASSERT_GE(w, 0);\n         ASSERT_LT(w, kNumThreads);\n-        ASSERT_LE(c, reinterpret_cast<uintptr_t>(\n+        ASSERT_LE(static_cast<uintptr_t>(c), reinterpret_cast<uintptr_t>(\n             t->state->counter[w].Acquire_Load()));\n       }\n     }"
      },
      {
        "sha": "da32946d9924619ebc936e0dc3131907a323a847",
        "filename": "src/leveldb/db/filename.cc",
        "status": "modified",
        "additions": 7,
        "deletions": 2,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cf920b657d11b0913ef5b16d0a07ff860ae36aaf/src/leveldb/db/filename.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cf920b657d11b0913ef5b16d0a07ff860ae36aaf/src/leveldb/db/filename.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/filename.cc?ref=cf920b657d11b0913ef5b16d0a07ff860ae36aaf",
        "patch": "@@ -30,6 +30,11 @@ std::string LogFileName(const std::string& name, uint64_t number) {\n }\n \n std::string TableFileName(const std::string& name, uint64_t number) {\n+  assert(number > 0);\n+  return MakeFileName(name, number, \"ldb\");\n+}\n+\n+std::string SSTTableFileName(const std::string& name, uint64_t number) {\n   assert(number > 0);\n   return MakeFileName(name, number, \"sst\");\n }\n@@ -71,7 +76,7 @@ std::string OldInfoLogFileName(const std::string& dbname) {\n //    dbname/LOG\n //    dbname/LOG.old\n //    dbname/MANIFEST-[0-9]+\n-//    dbname/[0-9]+.(log|sst)\n+//    dbname/[0-9]+.(log|sst|ldb)\n bool ParseFileName(const std::string& fname,\n                    uint64_t* number,\n                    FileType* type) {\n@@ -106,7 +111,7 @@ bool ParseFileName(const std::string& fname,\n     Slice suffix = rest;\n     if (suffix == Slice(\".log\")) {\n       *type = kLogFile;\n-    } else if (suffix == Slice(\".sst\")) {\n+    } else if (suffix == Slice(\".sst\") || suffix == Slice(\".ldb\")) {\n       *type = kTableFile;\n     } else if (suffix == Slice(\".dbtmp\")) {\n       *type = kTempFile;"
      },
      {
        "sha": "87a752605d14abc2a0e3b715d412bf36ce2cdd86",
        "filename": "src/leveldb/db/filename.h",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cf920b657d11b0913ef5b16d0a07ff860ae36aaf/src/leveldb/db/filename.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cf920b657d11b0913ef5b16d0a07ff860ae36aaf/src/leveldb/db/filename.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/filename.h?ref=cf920b657d11b0913ef5b16d0a07ff860ae36aaf",
        "patch": "@@ -37,6 +37,11 @@ extern std::string LogFileName(const std::string& dbname, uint64_t number);\n // \"dbname\".\n extern std::string TableFileName(const std::string& dbname, uint64_t number);\n \n+// Return the legacy file name for an sstable with the specified number\n+// in the db named by \"dbname\". The result will be prefixed with\n+// \"dbname\".\n+extern std::string SSTTableFileName(const std::string& dbname, uint64_t number);\n+\n // Return the name of the descriptor file for the db named by\n // \"dbname\" and the specified incarnation number.  The result will be\n // prefixed with \"dbname\"."
      },
      {
        "sha": "a32556deaff78326e68e65b848b9ec5077067a4a",
        "filename": "src/leveldb/db/filename_test.cc",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cf920b657d11b0913ef5b16d0a07ff860ae36aaf/src/leveldb/db/filename_test.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cf920b657d11b0913ef5b16d0a07ff860ae36aaf/src/leveldb/db/filename_test.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/filename_test.cc?ref=cf920b657d11b0913ef5b16d0a07ff860ae36aaf",
        "patch": "@@ -27,6 +27,7 @@ TEST(FileNameTest, Parse) {\n     { \"100.log\",            100,   kLogFile },\n     { \"0.log\",              0,     kLogFile },\n     { \"0.sst\",              0,     kTableFile },\n+    { \"0.ldb\",              0,     kTableFile },\n     { \"CURRENT\",            0,     kCurrentFile },\n     { \"LOCK\",               0,     kDBLockFile },\n     { \"MANIFEST-2\",         2,     kDescriptorFile },"
      },
      {
        "sha": "96c9b37af14c6d48ced42368bf2e29f42ca319d8",
        "filename": "src/leveldb/db/repair.cc",
        "status": "modified",
        "additions": 116,
        "deletions": 43,
        "changes": 159,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cf920b657d11b0913ef5b16d0a07ff860ae36aaf/src/leveldb/db/repair.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cf920b657d11b0913ef5b16d0a07ff860ae36aaf/src/leveldb/db/repair.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/repair.cc?ref=cf920b657d11b0913ef5b16d0a07ff860ae36aaf",
        "patch": "@@ -244,60 +244,133 @@ class Repairer {\n   void ExtractMetaData() {\n     std::vector<TableInfo> kept;\n     for (size_t i = 0; i < table_numbers_.size(); i++) {\n-      TableInfo t;\n-      t.meta.number = table_numbers_[i];\n-      Status status = ScanTable(&t);\n-      if (!status.ok()) {\n-        std::string fname = TableFileName(dbname_, table_numbers_[i]);\n-        Log(options_.info_log, \"Table #%llu: ignoring %s\",\n-            (unsigned long long) table_numbers_[i],\n-            status.ToString().c_str());\n-        ArchiveFile(fname);\n-      } else {\n-        tables_.push_back(t);\n-      }\n+      ScanTable(table_numbers_[i]);\n     }\n   }\n \n-  Status ScanTable(TableInfo* t) {\n-    std::string fname = TableFileName(dbname_, t->meta.number);\n+  Iterator* NewTableIterator(const FileMetaData& meta) {\n+    // Same as compaction iterators: if paranoid_checks are on, turn\n+    // on checksum verification.\n+    ReadOptions r;\n+    r.verify_checksums = options_.paranoid_checks;\n+    return table_cache_->NewIterator(r, meta.number, meta.file_size);\n+  }\n+\n+  void ScanTable(uint64_t number) {\n+    TableInfo t;\n+    t.meta.number = number;\n+    std::string fname = TableFileName(dbname_, number);\n+    Status status = env_->GetFileSize(fname, &t.meta.file_size);\n+    if (!status.ok()) {\n+      // Try alternate file name.\n+      fname = SSTTableFileName(dbname_, number);\n+      Status s2 = env_->GetFileSize(fname, &t.meta.file_size);\n+      if (s2.ok()) {\n+        status = Status::OK();\n+      }\n+    }\n+    if (!status.ok()) {\n+      ArchiveFile(TableFileName(dbname_, number));\n+      ArchiveFile(SSTTableFileName(dbname_, number));\n+      Log(options_.info_log, \"Table #%llu: dropped: %s\",\n+          (unsigned long long) t.meta.number,\n+          status.ToString().c_str());\n+      return;\n+    }\n+\n+    // Extract metadata by scanning through table.\n     int counter = 0;\n-    Status status = env_->GetFileSize(fname, &t->meta.file_size);\n-    if (status.ok()) {\n-      Iterator* iter = table_cache_->NewIterator(\n-          ReadOptions(), t->meta.number, t->meta.file_size);\n-      bool empty = true;\n-      ParsedInternalKey parsed;\n-      t->max_sequence = 0;\n-      for (iter->SeekToFirst(); iter->Valid(); iter->Next()) {\n-        Slice key = iter->key();\n-        if (!ParseInternalKey(key, &parsed)) {\n-          Log(options_.info_log, \"Table #%llu: unparsable key %s\",\n-              (unsigned long long) t->meta.number,\n-              EscapeString(key).c_str());\n-          continue;\n-        }\n+    Iterator* iter = NewTableIterator(t.meta);\n+    bool empty = true;\n+    ParsedInternalKey parsed;\n+    t.max_sequence = 0;\n+    for (iter->SeekToFirst(); iter->Valid(); iter->Next()) {\n+      Slice key = iter->key();\n+      if (!ParseInternalKey(key, &parsed)) {\n+        Log(options_.info_log, \"Table #%llu: unparsable key %s\",\n+            (unsigned long long) t.meta.number,\n+            EscapeString(key).c_str());\n+        continue;\n+      }\n \n-        counter++;\n-        if (empty) {\n-          empty = false;\n-          t->meta.smallest.DecodeFrom(key);\n-        }\n-        t->meta.largest.DecodeFrom(key);\n-        if (parsed.sequence > t->max_sequence) {\n-          t->max_sequence = parsed.sequence;\n-        }\n+      counter++;\n+      if (empty) {\n+        empty = false;\n+        t.meta.smallest.DecodeFrom(key);\n       }\n-      if (!iter->status().ok()) {\n-        status = iter->status();\n+      t.meta.largest.DecodeFrom(key);\n+      if (parsed.sequence > t.max_sequence) {\n+        t.max_sequence = parsed.sequence;\n       }\n-      delete iter;\n     }\n+    if (!iter->status().ok()) {\n+      status = iter->status();\n+    }\n+    delete iter;\n     Log(options_.info_log, \"Table #%llu: %d entries %s\",\n-        (unsigned long long) t->meta.number,\n+        (unsigned long long) t.meta.number,\n         counter,\n         status.ToString().c_str());\n-    return status;\n+\n+    if (status.ok()) {\n+      tables_.push_back(t);\n+    } else {\n+      RepairTable(fname, t);  // RepairTable archives input file.\n+    }\n+  }\n+\n+  void RepairTable(const std::string& src, TableInfo t) {\n+    // We will copy src contents to a new table and then rename the\n+    // new table over the source.\n+\n+    // Create builder.\n+    std::string copy = TableFileName(dbname_, next_file_number_++);\n+    WritableFile* file;\n+    Status s = env_->NewWritableFile(copy, &file);\n+    if (!s.ok()) {\n+      return;\n+    }\n+    TableBuilder* builder = new TableBuilder(options_, file);\n+\n+    // Copy data.\n+    Iterator* iter = NewTableIterator(t.meta);\n+    int counter = 0;\n+    for (iter->SeekToFirst(); iter->Valid(); iter->Next()) {\n+      builder->Add(iter->key(), iter->value());\n+      counter++;\n+    }\n+    delete iter;\n+\n+    ArchiveFile(src);\n+    if (counter == 0) {\n+      builder->Abandon();  // Nothing to save\n+    } else {\n+      s = builder->Finish();\n+      if (s.ok()) {\n+        t.meta.file_size = builder->FileSize();\n+      }\n+    }\n+    delete builder;\n+    builder = NULL;\n+\n+    if (s.ok()) {\n+      s = file->Close();\n+    }\n+    delete file;\n+    file = NULL;\n+\n+    if (counter > 0 && s.ok()) {\n+      std::string orig = TableFileName(dbname_, t.meta.number);\n+      s = env_->RenameFile(copy, orig);\n+      if (s.ok()) {\n+        Log(options_.info_log, \"Table #%llu: %d entries repaired\",\n+            (unsigned long long) t.meta.number, counter);\n+        tables_.push_back(t);\n+      }\n+    }\n+    if (!s.ok()) {\n+      env_->DeleteFile(copy);\n+    }\n   }\n \n   Status WriteDescriptor() {"
      },
      {
        "sha": "e3d82cd3ea2d89d11ca6ca06b5ce7d5b7068a358",
        "filename": "src/leveldb/db/table_cache.cc",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cf920b657d11b0913ef5b16d0a07ff860ae36aaf/src/leveldb/db/table_cache.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cf920b657d11b0913ef5b16d0a07ff860ae36aaf/src/leveldb/db/table_cache.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/table_cache.cc?ref=cf920b657d11b0913ef5b16d0a07ff860ae36aaf",
        "patch": "@@ -54,6 +54,12 @@ Status TableCache::FindTable(uint64_t file_number, uint64_t file_size,\n     RandomAccessFile* file = NULL;\n     Table* table = NULL;\n     s = env_->NewRandomAccessFile(fname, &file);\n+    if (!s.ok()) {\n+      std::string old_fname = SSTTableFileName(dbname_, file_number);\n+      if (env_->NewRandomAccessFile(old_fname, &file).ok()) {\n+        s = Status::OK();\n+      }\n+    }\n     if (s.ok()) {\n       s = Table::Open(*options_, file, file_size, &table);\n     }"
      },
      {
        "sha": "517edd3b18b7a4a1a40605728a05ffb185976f52",
        "filename": "src/leveldb/db/version_set.cc",
        "status": "modified",
        "additions": 0,
        "deletions": 33,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cf920b657d11b0913ef5b16d0a07ff860ae36aaf/src/leveldb/db/version_set.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cf920b657d11b0913ef5b16d0a07ff860ae36aaf/src/leveldb/db/version_set.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/version_set.cc?ref=cf920b657d11b0913ef5b16d0a07ff860ae36aaf",
        "patch": "@@ -876,21 +876,13 @@ Status VersionSet::LogAndApply(VersionEdit* edit, port::Mutex* mu) {\n       }\n       if (!s.ok()) {\n         Log(options_->info_log, \"MANIFEST write: %s\\n\", s.ToString().c_str());\n-        if (ManifestContains(record)) {\n-          Log(options_->info_log,\n-              \"MANIFEST contains log record despite error; advancing to new \"\n-              \"version to prevent mismatch between in-memory and logged state\");\n-          s = Status::OK();\n-        }\n       }\n     }\n \n     // If we just created a new descriptor file, install it by writing a\n     // new CURRENT file that points to it.\n     if (s.ok() && !new_manifest_file.empty()) {\n       s = SetCurrentFile(env_, dbname_, manifest_file_number_);\n-      // No need to double-check MANIFEST in case of error since it\n-      // will be discarded below.\n     }\n \n     mu->Lock();\n@@ -1124,31 +1116,6 @@ const char* VersionSet::LevelSummary(LevelSummaryStorage* scratch) const {\n   return scratch->buffer;\n }\n \n-// Return true iff the manifest contains the specified record.\n-bool VersionSet::ManifestContains(const std::string& record) const {\n-  std::string fname = DescriptorFileName(dbname_, manifest_file_number_);\n-  Log(options_->info_log, \"ManifestContains: checking %s\\n\", fname.c_str());\n-  SequentialFile* file = NULL;\n-  Status s = env_->NewSequentialFile(fname, &file);\n-  if (!s.ok()) {\n-    Log(options_->info_log, \"ManifestContains: %s\\n\", s.ToString().c_str());\n-    return false;\n-  }\n-  log::Reader reader(file, NULL, true/*checksum*/, 0);\n-  Slice r;\n-  std::string scratch;\n-  bool result = false;\n-  while (reader.ReadRecord(&r, &scratch)) {\n-    if (r == Slice(record)) {\n-      result = true;\n-      break;\n-    }\n-  }\n-  delete file;\n-  Log(options_->info_log, \"ManifestContains: result = %d\\n\", result ? 1 : 0);\n-  return result;\n-}\n-\n uint64_t VersionSet::ApproximateOffsetOf(Version* v, const InternalKey& ikey) {\n   uint64_t result = 0;\n   for (int level = 0; level < config::kNumLevels; level++) {"
      },
      {
        "sha": "8dc14b8e01c9bab3468ea338ca3c02bd703bf890",
        "filename": "src/leveldb/db/version_set.h",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cf920b657d11b0913ef5b16d0a07ff860ae36aaf/src/leveldb/db/version_set.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cf920b657d11b0913ef5b16d0a07ff860ae36aaf/src/leveldb/db/version_set.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/version_set.h?ref=cf920b657d11b0913ef5b16d0a07ff860ae36aaf",
        "patch": "@@ -292,8 +292,6 @@ class VersionSet {\n \n   void AppendVersion(Version* v);\n \n-  bool ManifestContains(const std::string& record) const;\n-\n   Env* const env_;\n   const std::string dbname_;\n   const Options* const options_;"
      },
      {
        "sha": "28817fe0da5a42cff4c7721ffa039a0b89e6a723",
        "filename": "src/leveldb/doc/impl.html",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cf920b657d11b0913ef5b16d0a07ff860ae36aaf/src/leveldb/doc/impl.html",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cf920b657d11b0913ef5b16d0a07ff860ae36aaf/src/leveldb/doc/impl.html",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/doc/impl.html?ref=cf920b657d11b0913ef5b16d0a07ff860ae36aaf",
        "patch": "@@ -11,7 +11,7 @@ <h1>Files</h1>\n \n The implementation of leveldb is similar in spirit to the\n representation of a single\n-<a href=\"http://labs.google.com/papers/bigtable.html\">\n+<a href=\"http://research.google.com/archive/bigtable.html\">\n Bigtable tablet (section 5.3)</a>.\n However the organization of the files that make up the representation\n is somewhat different and is explained below."
      },
      {
        "sha": "5ffb29d52644f796c8be1f218890bb431a0a6499",
        "filename": "src/leveldb/include/leveldb/db.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cf920b657d11b0913ef5b16d0a07ff860ae36aaf/src/leveldb/include/leveldb/db.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cf920b657d11b0913ef5b16d0a07ff860ae36aaf/src/leveldb/include/leveldb/db.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/include/leveldb/db.h?ref=cf920b657d11b0913ef5b16d0a07ff860ae36aaf",
        "patch": "@@ -14,7 +14,7 @@ namespace leveldb {\n \n // Update Makefile if you change these\n static const int kMajorVersion = 1;\n-static const int kMinorVersion = 13;\n+static const int kMinorVersion = 15;\n \n struct Options;\n struct ReadOptions;"
      },
      {
        "sha": "b2072d02c1c129aabe2962f18ac3f3c23929d009",
        "filename": "src/leveldb/include/leveldb/env.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cf920b657d11b0913ef5b16d0a07ff860ae36aaf/src/leveldb/include/leveldb/env.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cf920b657d11b0913ef5b16d0a07ff860ae36aaf/src/leveldb/include/leveldb/env.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/include/leveldb/env.h?ref=cf920b657d11b0913ef5b16d0a07ff860ae36aaf",
        "patch": "@@ -13,9 +13,9 @@\n #ifndef STORAGE_LEVELDB_INCLUDE_ENV_H_\n #define STORAGE_LEVELDB_INCLUDE_ENV_H_\n \n-#include <cstdarg>\n #include <string>\n #include <vector>\n+#include <stdarg.h>\n #include <stdint.h>\n #include \"leveldb/status.h\"\n "
      },
      {
        "sha": "1cec79f4433ac1c7ba361860c113e7b250b87e03",
        "filename": "src/leveldb/issues/issue200_test.cc",
        "status": "added",
        "additions": 59,
        "deletions": 0,
        "changes": 59,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cf920b657d11b0913ef5b16d0a07ff860ae36aaf/src/leveldb/issues/issue200_test.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cf920b657d11b0913ef5b16d0a07ff860ae36aaf/src/leveldb/issues/issue200_test.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/issues/issue200_test.cc?ref=cf920b657d11b0913ef5b16d0a07ff860ae36aaf",
        "patch": "@@ -0,0 +1,59 @@\n+// Copyright (c) 2013 The LevelDB Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style license that can be\n+// found in the LICENSE file. See the AUTHORS file for names of contributors.\n+\n+// Test for issue 200: when iterator switches direction from backward\n+// to forward, the current key can be yielded unexpectedly if a new\n+// mutation has been added just before the current key.\n+\n+#include \"leveldb/db.h\"\n+#include \"util/testharness.h\"\n+\n+namespace leveldb {\n+\n+class Issue200 { };\n+\n+TEST(Issue200, Test) {\n+  // Get rid of any state from an old run.\n+  std::string dbpath = test::TmpDir() + \"/leveldb_issue200_test\";\n+  DestroyDB(dbpath, Options());\n+\n+  DB *db;\n+  Options options;\n+  options.create_if_missing = true;\n+  ASSERT_OK(DB::Open(options, dbpath, &db));\n+\n+  WriteOptions write_options;\n+  ASSERT_OK(db->Put(write_options, \"1\", \"b\"));\n+  ASSERT_OK(db->Put(write_options, \"2\", \"c\"));\n+  ASSERT_OK(db->Put(write_options, \"3\", \"d\"));\n+  ASSERT_OK(db->Put(write_options, \"4\", \"e\"));\n+  ASSERT_OK(db->Put(write_options, \"5\", \"f\"));\n+\n+  ReadOptions read_options;\n+  Iterator *iter = db->NewIterator(read_options);\n+\n+  // Add an element that should not be reflected in the iterator.\n+  ASSERT_OK(db->Put(write_options, \"25\", \"cd\"));\n+\n+  iter->Seek(\"5\");\n+  ASSERT_EQ(iter->key().ToString(), \"5\");\n+  iter->Prev();\n+  ASSERT_EQ(iter->key().ToString(), \"4\");\n+  iter->Prev();\n+  ASSERT_EQ(iter->key().ToString(), \"3\");\n+  iter->Next();\n+  ASSERT_EQ(iter->key().ToString(), \"4\");\n+  iter->Next();\n+  ASSERT_EQ(iter->key().ToString(), \"5\");\n+\n+  delete iter;\n+  delete db;\n+  DestroyDB(dbpath, options);\n+}\n+\n+}  // namespace leveldb\n+\n+int main(int argc, char** argv) {\n+  return leveldb::test::RunAllTests();\n+}"
      },
      {
        "sha": "a9866b2302fd42dc889e5cf49869727e85658a8b",
        "filename": "src/leveldb/port/atomic_pointer.h",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cf920b657d11b0913ef5b16d0a07ff860ae36aaf/src/leveldb/port/atomic_pointer.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cf920b657d11b0913ef5b16d0a07ff860ae36aaf/src/leveldb/port/atomic_pointer.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/port/atomic_pointer.h?ref=cf920b657d11b0913ef5b16d0a07ff860ae36aaf",
        "patch": "@@ -50,6 +50,13 @@ namespace port {\n // http://msdn.microsoft.com/en-us/library/ms684208(v=vs.85).aspx\n #define LEVELDB_HAVE_MEMORY_BARRIER\n \n+// Mac OS\n+#elif defined(OS_MACOSX)\n+inline void MemoryBarrier() {\n+  OSMemoryBarrier();\n+}\n+#define LEVELDB_HAVE_MEMORY_BARRIER\n+\n // Gcc on x86\n #elif defined(ARCH_CPU_X86_FAMILY) && defined(__GNUC__)\n inline void MemoryBarrier() {\n@@ -68,13 +75,6 @@ inline void MemoryBarrier() {\n }\n #define LEVELDB_HAVE_MEMORY_BARRIER\n \n-// Mac OS\n-#elif defined(OS_MACOSX)\n-inline void MemoryBarrier() {\n-  OSMemoryBarrier();\n-}\n-#define LEVELDB_HAVE_MEMORY_BARRIER\n-\n // ARM Linux\n #elif defined(ARCH_CPU_ARM_FAMILY) && defined(__linux__)\n typedef void (*LinuxKernelMemoryBarrierFunc)(void);"
      },
      {
        "sha": "8c4a4741f223e28cbdebfcbb7f220b7e665dbb43",
        "filename": "src/leveldb/table/filter_block_test.cc",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cf920b657d11b0913ef5b16d0a07ff860ae36aaf/src/leveldb/table/filter_block_test.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cf920b657d11b0913ef5b16d0a07ff860ae36aaf/src/leveldb/table/filter_block_test.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/table/filter_block_test.cc?ref=cf920b657d11b0913ef5b16d0a07ff860ae36aaf",
        "patch": "@@ -29,7 +29,7 @@ class TestHashFilter : public FilterPolicy {\n \n   virtual bool KeyMayMatch(const Slice& key, const Slice& filter) const {\n     uint32_t h = Hash(key.data(), key.size(), 1);\n-    for (int i = 0; i + 4 <= filter.size(); i += 4) {\n+    for (size_t i = 0; i + 4 <= filter.size(); i += 4) {\n       if (h == DecodeFixed32(filter.data() + i)) {\n         return true;\n       }"
      },
      {
        "sha": "9367f714924d2c070f1b5513945d6bb0c939e159",
        "filename": "src/leveldb/util/arena.cc",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cf920b657d11b0913ef5b16d0a07ff860ae36aaf/src/leveldb/util/arena.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cf920b657d11b0913ef5b16d0a07ff860ae36aaf/src/leveldb/util/arena.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/util/arena.cc?ref=cf920b657d11b0913ef5b16d0a07ff860ae36aaf",
        "patch": "@@ -40,7 +40,7 @@ char* Arena::AllocateFallback(size_t bytes) {\n }\n \n char* Arena::AllocateAligned(size_t bytes) {\n-  const int align = sizeof(void*);    // We'll align to pointer size\n+  const int align = (sizeof(void*) > 8) ? sizeof(void*) : 8;\n   assert((align & (align-1)) == 0);   // Pointer size should be a power of 2\n   size_t current_mod = reinterpret_cast<uintptr_t>(alloc_ptr_) & (align-1);\n   size_t slop = (current_mod == 0 ? 0 : align - current_mod);"
      },
      {
        "sha": "73bbf1cb9bfb51b71302574c840cf4a5a50aeb83",
        "filename": "src/leveldb/util/arena.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cf920b657d11b0913ef5b16d0a07ff860ae36aaf/src/leveldb/util/arena.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cf920b657d11b0913ef5b16d0a07ff860ae36aaf/src/leveldb/util/arena.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/util/arena.h?ref=cf920b657d11b0913ef5b16d0a07ff860ae36aaf",
        "patch": "@@ -5,9 +5,9 @@\n #ifndef STORAGE_LEVELDB_UTIL_ARENA_H_\n #define STORAGE_LEVELDB_UTIL_ARENA_H_\n \n-#include <cstddef>\n #include <vector>\n #include <assert.h>\n+#include <stddef.h>\n #include <stdint.h>\n \n namespace leveldb {"
      },
      {
        "sha": "58e870ec4459ee5092c4d665ca94628a7e0c6db7",
        "filename": "src/leveldb/util/arena_test.cc",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cf920b657d11b0913ef5b16d0a07ff860ae36aaf/src/leveldb/util/arena_test.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cf920b657d11b0913ef5b16d0a07ff860ae36aaf/src/leveldb/util/arena_test.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/util/arena_test.cc?ref=cf920b657d11b0913ef5b16d0a07ff860ae36aaf",
        "patch": "@@ -40,7 +40,7 @@ TEST(ArenaTest, Simple) {\n       r = arena.Allocate(s);\n     }\n \n-    for (int b = 0; b < s; b++) {\n+    for (size_t b = 0; b < s; b++) {\n       // Fill the \"i\"th allocation with a known bit pattern\n       r[b] = i % 256;\n     }\n@@ -51,10 +51,10 @@ TEST(ArenaTest, Simple) {\n       ASSERT_LE(arena.MemoryUsage(), bytes * 1.10);\n     }\n   }\n-  for (int i = 0; i < allocated.size(); i++) {\n+  for (size_t i = 0; i < allocated.size(); i++) {\n     size_t num_bytes = allocated[i].first;\n     const char* p = allocated[i].second;\n-    for (int b = 0; b < num_bytes; b++) {\n+    for (size_t b = 0; b < num_bytes; b++) {\n       // Check the \"i\"th allocation for the known bit pattern\n       ASSERT_EQ(int(p[b]) & 0xff, i % 256);\n     }"
      },
      {
        "sha": "77fb1b315958f0539dab9b465073a9bbb0b52af9",
        "filename": "src/leveldb/util/bloom_test.cc",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cf920b657d11b0913ef5b16d0a07ff860ae36aaf/src/leveldb/util/bloom_test.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cf920b657d11b0913ef5b16d0a07ff860ae36aaf/src/leveldb/util/bloom_test.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/util/bloom_test.cc?ref=cf920b657d11b0913ef5b16d0a07ff860ae36aaf",
        "patch": "@@ -126,7 +126,8 @@ TEST(BloomTest, VaryingLengths) {\n     }\n     Build();\n \n-    ASSERT_LE(FilterSize(), (length * 10 / 8) + 40) << length;\n+    ASSERT_LE(FilterSize(), static_cast<size_t>((length * 10 / 8) + 40))\n+        << length;\n \n     // All added keys must match\n     for (int i = 0; i < length; i++) {"
      },
      {
        "sha": "521541ea61bb6037984be50208b4a2a849ead554",
        "filename": "src/leveldb/util/coding_test.cc",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cf920b657d11b0913ef5b16d0a07ff860ae36aaf/src/leveldb/util/coding_test.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cf920b657d11b0913ef5b16d0a07ff860ae36aaf/src/leveldb/util/coding_test.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/util/coding_test.cc?ref=cf920b657d11b0913ef5b16d0a07ff860ae36aaf",
        "patch": "@@ -112,13 +112,13 @@ TEST(Coding, Varint64) {\n   }\n \n   std::string s;\n-  for (int i = 0; i < values.size(); i++) {\n+  for (size_t i = 0; i < values.size(); i++) {\n     PutVarint64(&s, values[i]);\n   }\n \n   const char* p = s.data();\n   const char* limit = p + s.size();\n-  for (int i = 0; i < values.size(); i++) {\n+  for (size_t i = 0; i < values.size(); i++) {\n     ASSERT_TRUE(p < limit);\n     uint64_t actual;\n     const char* start = p;\n@@ -143,7 +143,7 @@ TEST(Coding, Varint32Truncation) {\n   std::string s;\n   PutVarint32(&s, large_value);\n   uint32_t result;\n-  for (int len = 0; len < s.size() - 1; len++) {\n+  for (size_t len = 0; len < s.size() - 1; len++) {\n     ASSERT_TRUE(GetVarint32Ptr(s.data(), s.data() + len, &result) == NULL);\n   }\n   ASSERT_TRUE(GetVarint32Ptr(s.data(), s.data() + s.size(), &result) != NULL);\n@@ -162,7 +162,7 @@ TEST(Coding, Varint64Truncation) {\n   std::string s;\n   PutVarint64(&s, large_value);\n   uint64_t result;\n-  for (int len = 0; len < s.size() - 1; len++) {\n+  for (size_t len = 0; len < s.size() - 1; len++) {\n     ASSERT_TRUE(GetVarint64Ptr(s.data(), s.data() + len, &result) == NULL);\n   }\n   ASSERT_TRUE(GetVarint64Ptr(s.data(), s.data() + s.size(), &result) != NULL);"
      },
      {
        "sha": "93eadb1a4f5c7c148146a61270d45286df9e8292",
        "filename": "src/leveldb/util/env_posix.cc",
        "status": "modified",
        "additions": 27,
        "deletions": 149,
        "changes": 176,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cf920b657d11b0913ef5b16d0a07ff860ae36aaf/src/leveldb/util/env_posix.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cf920b657d11b0913ef5b16d0a07ff860ae36aaf/src/leveldb/util/env_posix.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/util/env_posix.cc?ref=cf920b657d11b0913ef5b16d0a07ff860ae36aaf",
        "patch": "@@ -176,147 +176,43 @@ class PosixMmapReadableFile: public RandomAccessFile {\n   }\n };\n \n-// We preallocate up to an extra megabyte and use memcpy to append new\n-// data to the file.  This is safe since we either properly close the\n-// file before reading from it, or for log files, the reading code\n-// knows enough to skip zero suffixes.\n-class PosixMmapFile : public WritableFile {\n+class PosixWritableFile : public WritableFile {\n  private:\n   std::string filename_;\n-  int fd_;\n-  size_t page_size_;\n-  size_t map_size_;       // How much extra memory to map at a time\n-  char* base_;            // The mapped region\n-  char* limit_;           // Limit of the mapped region\n-  char* dst_;             // Where to write next  (in range [base_,limit_])\n-  char* last_sync_;       // Where have we synced up to\n-  uint64_t file_offset_;  // Offset of base_ in file\n-\n-  // Have we done an munmap of unsynced data?\n-  bool pending_sync_;\n-\n-  // Roundup x to a multiple of y\n-  static size_t Roundup(size_t x, size_t y) {\n-    return ((x + y - 1) / y) * y;\n-  }\n-\n-  size_t TruncateToPageBoundary(size_t s) {\n-    s -= (s & (page_size_ - 1));\n-    assert((s % page_size_) == 0);\n-    return s;\n-  }\n-\n-  bool UnmapCurrentRegion() {\n-    bool result = true;\n-    if (base_ != NULL) {\n-      if (last_sync_ < limit_) {\n-        // Defer syncing this data until next Sync() call, if any\n-        pending_sync_ = true;\n-      }\n-      if (munmap(base_, limit_ - base_) != 0) {\n-        result = false;\n-      }\n-      file_offset_ += limit_ - base_;\n-      base_ = NULL;\n-      limit_ = NULL;\n-      last_sync_ = NULL;\n-      dst_ = NULL;\n-\n-      // Increase the amount we map the next time, but capped at 1MB\n-      if (map_size_ < (1<<20)) {\n-        map_size_ *= 2;\n-      }\n-    }\n-    return result;\n-  }\n-\n-  bool MapNewRegion() {\n-    assert(base_ == NULL);\n-    if (ftruncate(fd_, file_offset_ + map_size_) < 0) {\n-      return false;\n-    }\n-    void* ptr = mmap(NULL, map_size_, PROT_READ | PROT_WRITE, MAP_SHARED,\n-                     fd_, file_offset_);\n-    if (ptr == MAP_FAILED) {\n-      return false;\n-    }\n-    base_ = reinterpret_cast<char*>(ptr);\n-    limit_ = base_ + map_size_;\n-    dst_ = base_;\n-    last_sync_ = base_;\n-    return true;\n-  }\n+  FILE* file_;\n \n  public:\n-  PosixMmapFile(const std::string& fname, int fd, size_t page_size)\n-      : filename_(fname),\n-        fd_(fd),\n-        page_size_(page_size),\n-        map_size_(Roundup(65536, page_size)),\n-        base_(NULL),\n-        limit_(NULL),\n-        dst_(NULL),\n-        last_sync_(NULL),\n-        file_offset_(0),\n-        pending_sync_(false) {\n-    assert((page_size & (page_size - 1)) == 0);\n-  }\n-\n-\n-  ~PosixMmapFile() {\n-    if (fd_ >= 0) {\n-      PosixMmapFile::Close();\n+  PosixWritableFile(const std::string& fname, FILE* f)\n+      : filename_(fname), file_(f) { }\n+\n+  ~PosixWritableFile() {\n+    if (file_ != NULL) {\n+      // Ignoring any potential errors\n+      fclose(file_);\n     }\n   }\n \n   virtual Status Append(const Slice& data) {\n-    const char* src = data.data();\n-    size_t left = data.size();\n-    while (left > 0) {\n-      assert(base_ <= dst_);\n-      assert(dst_ <= limit_);\n-      size_t avail = limit_ - dst_;\n-      if (avail == 0) {\n-        if (!UnmapCurrentRegion() ||\n-            !MapNewRegion()) {\n-          return IOError(filename_, errno);\n-        }\n-      }\n-\n-      size_t n = (left <= avail) ? left : avail;\n-      memcpy(dst_, src, n);\n-      dst_ += n;\n-      src += n;\n-      left -= n;\n+    size_t r = fwrite_unlocked(data.data(), 1, data.size(), file_);\n+    if (r != data.size()) {\n+      return IOError(filename_, errno);\n     }\n     return Status::OK();\n   }\n \n   virtual Status Close() {\n-    Status s;\n-    size_t unused = limit_ - dst_;\n-    if (!UnmapCurrentRegion()) {\n-      s = IOError(filename_, errno);\n-    } else if (unused > 0) {\n-      // Trim the extra space at the end of the file\n-      if (ftruncate(fd_, file_offset_ - unused) < 0) {\n-        s = IOError(filename_, errno);\n-      }\n-    }\n-\n-    if (close(fd_) < 0) {\n-      if (s.ok()) {\n-        s = IOError(filename_, errno);\n-      }\n+    Status result;\n+    if (fclose(file_) != 0) {\n+      result = IOError(filename_, errno);\n     }\n-\n-    fd_ = -1;\n-    base_ = NULL;\n-    limit_ = NULL;\n-    return s;\n+    file_ = NULL;\n+    return result;\n   }\n \n   virtual Status Flush() {\n+    if (fflush_unlocked(file_) != 0) {\n+      return IOError(filename_, errno);\n+    }\n     return Status::OK();\n   }\n \n@@ -353,26 +249,10 @@ class PosixMmapFile : public WritableFile {\n     if (!s.ok()) {\n       return s;\n     }\n-\n-    if (pending_sync_) {\n-      // Some unmapped data was not synced\n-      pending_sync_ = false;\n-      if (fdatasync(fd_) < 0) {\n-        s = IOError(filename_, errno);\n-      }\n+    if (fflush_unlocked(file_) != 0 ||\n+        fdatasync(fileno(file_)) != 0) {\n+      s = Status::IOError(filename_, strerror(errno));\n     }\n-\n-    if (dst_ > last_sync_) {\n-      // Find the beginnings of the pages that contain the first and last\n-      // bytes to be synced.\n-      size_t p1 = TruncateToPageBoundary(last_sync_ - base_);\n-      size_t p2 = TruncateToPageBoundary(dst_ - base_ - 1);\n-      last_sync_ = dst_;\n-      if (msync(base_ + p1, p2 - p1 + page_size_, MS_SYNC) < 0) {\n-        s = IOError(filename_, errno);\n-      }\n-    }\n-\n     return s;\n   }\n };\n@@ -463,12 +343,12 @@ class PosixEnv : public Env {\n   virtual Status NewWritableFile(const std::string& fname,\n                                  WritableFile** result) {\n     Status s;\n-    const int fd = open(fname.c_str(), O_CREAT | O_RDWR | O_TRUNC, 0644);\n-    if (fd < 0) {\n+    FILE* f = fopen(fname.c_str(), \"w\");\n+    if (f == NULL) {\n       *result = NULL;\n       s = IOError(fname, errno);\n     } else {\n-      *result = new PosixMmapFile(fname, fd, page_size_);\n+      *result = new PosixWritableFile(fname, f);\n     }\n     return s;\n   }\n@@ -631,7 +511,6 @@ class PosixEnv : public Env {\n     return NULL;\n   }\n \n-  size_t page_size_;\n   pthread_mutex_t mu_;\n   pthread_cond_t bgsignal_;\n   pthread_t bgthread_;\n@@ -646,8 +525,7 @@ class PosixEnv : public Env {\n   MmapLimiter mmap_limit_;\n };\n \n-PosixEnv::PosixEnv() : page_size_(getpagesize()),\n-                       started_bgthread_(false) {\n+PosixEnv::PosixEnv() : started_bgthread_(false) {\n   PthreadCall(\"mutex_init\", pthread_mutex_init(&mu_, NULL));\n   PthreadCall(\"cvar_init\", pthread_cond_init(&bgsignal_, NULL));\n }"
      },
      {
        "sha": "402fab34d77349d4f16ff8fb9b9fb147bc158bf5",
        "filename": "src/leveldb/util/testharness.cc",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cf920b657d11b0913ef5b16d0a07ff860ae36aaf/src/leveldb/util/testharness.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cf920b657d11b0913ef5b16d0a07ff860ae36aaf/src/leveldb/util/testharness.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/util/testharness.cc?ref=cf920b657d11b0913ef5b16d0a07ff860ae36aaf",
        "patch": "@@ -38,7 +38,7 @@ int RunAllTests() {\n \n   int num = 0;\n   if (tests != NULL) {\n-    for (int i = 0; i < tests->size(); i++) {\n+    for (size_t i = 0; i < tests->size(); i++) {\n       const Test& t = (*tests)[i];\n       if (matcher != NULL) {\n         std::string name = t.base;"
      },
      {
        "sha": "bee56bf75f1b02c6f91bee984e56d90f6ee5d42f",
        "filename": "src/leveldb/util/testutil.cc",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cf920b657d11b0913ef5b16d0a07ff860ae36aaf/src/leveldb/util/testutil.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cf920b657d11b0913ef5b16d0a07ff860ae36aaf/src/leveldb/util/testutil.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/util/testutil.cc?ref=cf920b657d11b0913ef5b16d0a07ff860ae36aaf",
        "patch": "@@ -32,7 +32,7 @@ std::string RandomKey(Random* rnd, int len) {\n \n \n extern Slice CompressibleString(Random* rnd, double compressed_fraction,\n-                                int len, std::string* dst) {\n+                                size_t len, std::string* dst) {\n   int raw = static_cast<int>(len * compressed_fraction);\n   if (raw < 1) raw = 1;\n   std::string raw_data;"
      },
      {
        "sha": "adad3fc1eacb7cf3a1bc5bb934c127a4749d82ed",
        "filename": "src/leveldb/util/testutil.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cf920b657d11b0913ef5b16d0a07ff860ae36aaf/src/leveldb/util/testutil.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cf920b657d11b0913ef5b16d0a07ff860ae36aaf/src/leveldb/util/testutil.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/util/testutil.h?ref=cf920b657d11b0913ef5b16d0a07ff860ae36aaf",
        "patch": "@@ -24,7 +24,7 @@ extern std::string RandomKey(Random* rnd, int len);\n // \"N*compressed_fraction\" bytes and return a Slice that references\n // the generated data.\n extern Slice CompressibleString(Random* rnd, double compressed_fraction,\n-                                int len, std::string* dst);\n+                                size_t len, std::string* dst);\n \n // A wrapper that allows injection of errors.\n class ErrorEnv : public EnvWrapper {"
      }
    ]
  },
  {
    "sha": "5ac8b6eeaac38ef3bdeaa91d614f559a6bacd8b6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1YWM4YjZlZWFhYzM4ZWYzYmRlYWE5MWQ2MTRmNTU5YTZiYWNkOGI2",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-17T09:09:14Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-17T09:09:28Z"
      },
      "message": "Merge pull request #3435\n\n9c6546c Rebrand README.md (Wladimir J. van der Laan)",
      "tree": {
        "sha": "a60a11aabcb6ada243f7327be66d32dd9b23702f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a60a11aabcb6ada243f7327be66d32dd9b23702f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5ac8b6eeaac38ef3bdeaa91d614f559a6bacd8b6",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJSsBTIAAoJEHSBCwEjRsmmRnEIAJ1nSWX7wF+3PNzBhKohEQXp\nYTSSupZJgXFZ996zqqtovH8JtJcgFRKM/5IqNJf6Xgjlkl49MvL2AlKS1+Lk6q/o\nas+5UrklRc47xdxlbqd4y95q5fUwdQjBh92A26ZgAVvzm+FwmpyGrWG6leyuvvjr\ngEs0iATgdPlLdc3ynFdWc+6jDfNuqN7nXPhAeKUurPfQdRwbgAKybCui/h2512Wn\nJERhkvfcDp9zKIKj290QQyXeqY9FcFazXR57+008nzbbG2/dUmUJSwZl9T2YdUvz\n5FAe3UkOk2tEXVbzeLm8RvhgP2MCQ6PVPUGHtXIRLbvw7j8qfmSH/5ZsMj9bxHM=\n=Tq4h\n-----END PGP SIGNATURE-----",
        "payload": "tree a60a11aabcb6ada243f7327be66d32dd9b23702f\nparent cf920b657d11b0913ef5b16d0a07ff860ae36aaf\nparent 9c6546c90e3f2b93102d06614dffd5ee05db7c93\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1387271354 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1387271368 +0100\n\nMerge pull request #3435\n\n9c6546c Rebrand README.md (Wladimir J. van der Laan)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5ac8b6eeaac38ef3bdeaa91d614f559a6bacd8b6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5ac8b6eeaac38ef3bdeaa91d614f559a6bacd8b6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5ac8b6eeaac38ef3bdeaa91d614f559a6bacd8b6/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cf920b657d11b0913ef5b16d0a07ff860ae36aaf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cf920b657d11b0913ef5b16d0a07ff860ae36aaf",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cf920b657d11b0913ef5b16d0a07ff860ae36aaf"
      },
      {
        "sha": "9c6546c90e3f2b93102d06614dffd5ee05db7c93",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9c6546c90e3f2b93102d06614dffd5ee05db7c93",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9c6546c90e3f2b93102d06614dffd5ee05db7c93"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 5,
      "deletions": 5
    },
    "files": [
      {
        "sha": "ea5c57625f6e44f4d12cc931899156c610b263fd",
        "filename": "README.md",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5ac8b6eeaac38ef3bdeaa91d614f559a6bacd8b6/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5ac8b6eeaac38ef3bdeaa91d614f559a6bacd8b6/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/README.md?ref=5ac8b6eeaac38ef3bdeaa91d614f559a6bacd8b6",
        "patch": "@@ -1,26 +1,26 @@\n-Bitcoin integration/staging tree\n+Bitcoin Core integration/staging tree\n ================================\n \n http://www.bitcoin.org\n \n-Copyright (c) 2009-2013 Bitcoin Developers\n+Copyright (c) 2009-2013 Bitcoin Core Developers\n \n What is Bitcoin?\n ----------------\n \n Bitcoin is an experimental new digital currency that enables instant payments to\n anyone, anywhere in the world. Bitcoin uses peer-to-peer technology to operate\n with no central authority: managing transactions and issuing money are carried\n-out collectively by the network. Bitcoin is also the name of the open source\n+out collectively by the network. Bitcoin Core is the name of open source\n software which enables the use of this currency.\n \n For more information, as well as an immediately useable, binary version of\n-the Bitcoin client software, see http://www.bitcoin.org.\n+the Bitcoin Core software, see http://www.bitcoin.org/en/download.\n \n License\n -------\n \n-Bitcoin is released under the terms of the MIT license. See [COPYING](COPYING) for more\n+Bitcoin Core is released under the terms of the MIT license. See [COPYING](COPYING) for more\n information or see http://opensource.org/licenses/MIT.\n \n Development process"
      }
    ]
  },
  {
    "sha": "c8af33aa7568c450edffe15c4863895c20bac54f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjOGFmMzNhYTc1NjhjNDUwZWRmZmUxNWM0ODYzODk1YzIwYmFjNTRm",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-17T10:50:26Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-17T10:51:49Z"
      },
      "message": "Fix heading in README.md",
      "tree": {
        "sha": "d103b2a8eca32f73f6502ec1bde865c47489997f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d103b2a8eca32f73f6502ec1bde865c47489997f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c8af33aa7568c450edffe15c4863895c20bac54f",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJSsCzHAAoJEHSBCwEjRsmmIwIH/RrZzxIAe/W2N8hRW573uhnC\nSNFwBsF+GM6Zj9mREz8781+5+akpMQtO3TP2FjYtN8K9qdXLpMj7ntjGnyl5uFbT\nP/5qKkFH0QjI29fbbuWnDkH8Js/lTFMx6PfeyjcfBSedZ2r9ifp1w+PTJAn0lSc0\ny7ooqnzP7PzgCMqyewXSG6+MStK1x0gIPWpVHkBNnAGkeWYR2Jrkgq1wLOHkGp7w\nuneZdaydC45MMQJd43bmOcLf4RJFXwa6CRP8uI6Uf0h/2wWbLRRlQNk5yhxW5hi1\n7FYe8Mdq5LDuKVAoo55rorXtgdaUS+fo//uGr06D9QoqvBpfdJJQcDotimcVvVI=\n=u3PX\n-----END PGP SIGNATURE-----",
        "payload": "tree d103b2a8eca32f73f6502ec1bde865c47489997f\nparent 5ac8b6eeaac38ef3bdeaa91d614f559a6bacd8b6\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1387277426 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1387277509 +0100\n\nFix heading in README.md\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c8af33aa7568c450edffe15c4863895c20bac54f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c8af33aa7568c450edffe15c4863895c20bac54f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c8af33aa7568c450edffe15c4863895c20bac54f/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5ac8b6eeaac38ef3bdeaa91d614f559a6bacd8b6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5ac8b6eeaac38ef3bdeaa91d614f559a6bacd8b6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5ac8b6eeaac38ef3bdeaa91d614f559a6bacd8b6"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "e55526bf3f6368515e7f143c39dda92038157432",
        "filename": "README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c8af33aa7568c450edffe15c4863895c20bac54f/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c8af33aa7568c450edffe15c4863895c20bac54f/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/README.md?ref=c8af33aa7568c450edffe15c4863895c20bac54f",
        "patch": "@@ -1,5 +1,5 @@\n Bitcoin Core integration/staging tree\n-================================\n+=====================================\n \n http://www.bitcoin.org\n "
      }
    ]
  },
  {
    "sha": "97203994a41fd52cefeecd30cab40bebfb9f3bbd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5NzIwMzk5NGE0MWZkNTJjZWZlZWNkMzBjYWI0MGJlYmZiOWYzYmJk",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-18T06:26:45Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-18T06:27:05Z"
      },
      "message": "Merge pull request #3381\n\n7df07b3 [Qt] fix RecentRequestsTableModel function ambiuguity (Philip Kaufmann)",
      "tree": {
        "sha": "7c4e4110f53a563e899386442061109b4cdfafcb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7c4e4110f53a563e899386442061109b4cdfafcb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/97203994a41fd52cefeecd30cab40bebfb9f3bbd",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJSsUA5AAoJEHSBCwEjRsmmyp0H/iIO8+40Cy5eaA0NbHAVmIgl\nvsUlJxEjzD5ZZx7W3FgufP7S2AtLWLzYbRRuR2tbwZ4mb4l0Q2rBgU7MUMBDcV9Y\nOPxY4plZhksTeRErdkb4oqkv9Ykvj0/vxqD5h3ZyBoNws0DodquBFZQ0tz5YxZdp\nFmkNfhGwSEZnfMiwCd2/kO2dig1rxxAcULsyDfOFC49EzAyCrlAocfJ7gQzl99+t\ni/5naREvzcGuRfXE1AZuwqlobY7Z862V4640b87mLykO6BKh+5QFWS/C8Bigw+MI\n6HwfH4dXfgKeppVhK+B6MK5pNbakW1Z1yVnZNrKHb7z6REJtGMbsvffy9LJd2ls=\n=GGzg\n-----END PGP SIGNATURE-----",
        "payload": "tree 7c4e4110f53a563e899386442061109b4cdfafcb\nparent c8af33aa7568c450edffe15c4863895c20bac54f\nparent 7df07b3f456958288fe6787be6bee503d5dbb034\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1387348005 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1387348025 +0100\n\nMerge pull request #3381\n\n7df07b3 [Qt] fix RecentRequestsTableModel function ambiuguity (Philip Kaufmann)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/97203994a41fd52cefeecd30cab40bebfb9f3bbd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/97203994a41fd52cefeecd30cab40bebfb9f3bbd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/97203994a41fd52cefeecd30cab40bebfb9f3bbd/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c8af33aa7568c450edffe15c4863895c20bac54f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c8af33aa7568c450edffe15c4863895c20bac54f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c8af33aa7568c450edffe15c4863895c20bac54f"
      },
      {
        "sha": "7df07b3f456958288fe6787be6bee503d5dbb034",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7df07b3f456958288fe6787be6bee503d5dbb034",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7df07b3f456958288fe6787be6bee503d5dbb034"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 14,
      "deletions": 6
    },
    "files": [
      {
        "sha": "86c29dd02b00399c638c00eae10ceaa2c1862af5",
        "filename": "src/qt/recentrequeststablemodel.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 3,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/97203994a41fd52cefeecd30cab40bebfb9f3bbd/src/qt/recentrequeststablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/97203994a41fd52cefeecd30cab40bebfb9f3bbd/src/qt/recentrequeststablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/recentrequeststablemodel.cpp?ref=97203994a41fd52cefeecd30cab40bebfb9f3bbd",
        "patch": "@@ -3,13 +3,16 @@\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #include \"recentrequeststablemodel.h\"\n-#include \"guiutil.h\"\n+\n #include \"bitcoinunits.h\"\n+#include \"guiutil.h\"\n #include \"optionsmodel.h\"\n \n-RecentRequestsTableModel::RecentRequestsTableModel(CWallet *wallet, WalletModel *parent):\n+RecentRequestsTableModel::RecentRequestsTableModel(CWallet *wallet, WalletModel *parent) :\n     walletModel(parent)\n {\n+    Q_UNUSED(wallet);\n+\n     /* These columns must match the indices in the ColumnIndex enumeration */\n     columns << tr(\"Date\") << tr(\"Label\") << tr(\"Message\") << tr(\"Amount\");\n }\n@@ -22,12 +25,14 @@ RecentRequestsTableModel::~RecentRequestsTableModel()\n int RecentRequestsTableModel::rowCount(const QModelIndex &parent) const\n {\n     Q_UNUSED(parent);\n+\n     return list.length();\n }\n \n int RecentRequestsTableModel::columnCount(const QModelIndex &parent) const\n {\n     Q_UNUSED(parent);\n+\n     return columns.length();\n }\n \n@@ -88,12 +93,15 @@ QVariant RecentRequestsTableModel::headerData(int section, Qt::Orientation orien\n \n QModelIndex RecentRequestsTableModel::index(int row, int column, const QModelIndex &parent) const\n {\n-    return createIndex(row, column, 0);\n+    Q_UNUSED(parent);\n+\n+    return createIndex(row, column);\n }\n \n bool RecentRequestsTableModel::removeRows(int row, int count, const QModelIndex &parent)\n {\n     Q_UNUSED(parent);\n+\n     if(count > 0 && row >= 0 && (row+count) <= list.size())\n     {\n         beginRemoveRows(parent, row, row + count - 1);"
      },
      {
        "sha": "3aab7b0a48e79b04e71ec3b2491302a446d118b7",
        "filename": "src/qt/recentrequeststablemodel.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/97203994a41fd52cefeecd30cab40bebfb9f3bbd/src/qt/recentrequeststablemodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/97203994a41fd52cefeecd30cab40bebfb9f3bbd/src/qt/recentrequeststablemodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/recentrequeststablemodel.h?ref=97203994a41fd52cefeecd30cab40bebfb9f3bbd",
        "patch": "@@ -5,12 +5,12 @@\n #ifndef RECENTREQUESTSTABLEMODEL_H\n #define RECENTREQUESTSTABLEMODEL_H\n \n+#include \"walletmodel.h\"\n+\n #include <QAbstractTableModel>\n #include <QStringList>\n #include <QDateTime>\n \n-#include \"walletmodel.h\"\n-\n class CWallet;\n \n struct RecentRequestEntry\n@@ -27,7 +27,7 @@ class RecentRequestsTableModel: public QAbstractTableModel\n     Q_OBJECT\n \n public:\n-    explicit RecentRequestsTableModel(CWallet *wallet, WalletModel *parent = 0);\n+    explicit RecentRequestsTableModel(CWallet *wallet, WalletModel *parent);\n     ~RecentRequestsTableModel();\n \n     enum ColumnIndex {"
      }
    ]
  },
  {
    "sha": "03d9dd47f67923571bd2f11574de8b4d8d7fc75d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowM2Q5ZGQ0N2Y2NzkyMzU3MWJkMmYxMTU3NGRlOGI0ZDhkN2ZjNzVk",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-18T07:15:10Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-18T07:15:18Z"
      },
      "message": "Merge pull request #3424\n\n06eb2f2 Seperate out wallet options in help message (Wladimir J. van der Laan)",
      "tree": {
        "sha": "0460aa19eb9f9174b042c96801f9034c4a6e5a3b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0460aa19eb9f9174b042c96801f9034c4a6e5a3b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/03d9dd47f67923571bd2f11574de8b4d8d7fc75d",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJSsUuGAAoJEHSBCwEjRsmmqMsH/3F5DtEQSUq9us3rXJ+M9NmE\n1zL7ND/s68RnlFkzUMsC47ZQtyNIpub9JvRFtPc7JX0kKf4bg+B07gV4y+brZXrH\noqjQD6VSZgpZ2fYLOv4ul5Q/oyXudAEuvFtkT0Ws9wjxn8hM0sFylcc3FlZOWYuF\nFTodFWVScX6nZ8i46e89WAA597iu9j/PONKPGNHuoIOyayk4+LwPLPHiqUctLTZt\noumFSL3ozzaTwbD9vwO8IolJz37FM+F5oRgFe6lvdpEBU3ur8JoLhylD/NOh8oea\nm7Sb3ARSxB53LFp5pLNVw6T91D5GKVxKtVfYK/5YqZIdOk0yawZhrudKRivDIp0=\n=lCCn\n-----END PGP SIGNATURE-----",
        "payload": "tree 0460aa19eb9f9174b042c96801f9034c4a6e5a3b\nparent 97203994a41fd52cefeecd30cab40bebfb9f3bbd\nparent 06eb2f215b0780a6deb5b37a1782cc707d64f474\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1387350910 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1387350918 +0100\n\nMerge pull request #3424\n\n06eb2f2 Seperate out wallet options in help message (Wladimir J. van der Laan)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/03d9dd47f67923571bd2f11574de8b4d8d7fc75d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/03d9dd47f67923571bd2f11574de8b4d8d7fc75d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/03d9dd47f67923571bd2f11574de8b4d8d7fc75d/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "97203994a41fd52cefeecd30cab40bebfb9f3bbd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/97203994a41fd52cefeecd30cab40bebfb9f3bbd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/97203994a41fd52cefeecd30cab40bebfb9f3bbd"
      },
      {
        "sha": "06eb2f215b0780a6deb5b37a1782cc707d64f474",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/06eb2f215b0780a6deb5b37a1782cc707d64f474",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/06eb2f215b0780a6deb5b37a1782cc707d64f474"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 10,
      "deletions": 9
    },
    "files": [
      {
        "sha": "22ee0cfc08531cc7c248d12be02d4cff0cc26419",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 9,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/03d9dd47f67923571bd2f11574de8b4d8d7fc75d/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/03d9dd47f67923571bd2f11574de8b4d8d7fc75d/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=03d9dd47f67923571bd2f11574de8b4d8d7fc75d",
        "patch": "@@ -194,10 +194,8 @@ std::string HelpMessage(HelpMessageMode hmm)\n     strUsage += \"  -conf=<file>           \" + _(\"Specify configuration file (default: bitcoin.conf)\") + \"\\n\";\n     strUsage += \"  -datadir=<dir>         \" + _(\"Specify data directory\") + \"\\n\";\n     strUsage += \"  -testnet               \" + _(\"Use the test network\") + \"\\n\";\n-\n     strUsage += \"  -pid=<file>            \" + _(\"Specify pid file (default: bitcoind.pid)\") + \"\\n\";\n     strUsage += \"  -gen                   \" + _(\"Generate coins (default: 0)\") + \"\\n\";\n-    strUsage += \"  -wallet=<file>         \" + _(\"Specify wallet file (within data directory)\") + \"\\n\";\n     strUsage += \"  -dbcache=<n>           \" + _(\"Set database cache size in megabytes (default: 25)\") + \"\\n\";\n     strUsage += \"  -timeout=<n>           \" + _(\"Specify connection timeout in milliseconds (default: 5000)\") + \"\\n\";\n     strUsage += \"  -proxy=<ip:port>       \" + _(\"Connect through SOCKS proxy\") + \"\\n\";\n@@ -227,7 +225,6 @@ std::string HelpMessage(HelpMessageMode hmm)\n     strUsage += \"  -upnp                  \" + _(\"Use UPnP to map the listening port (default: 0)\") + \"\\n\";\n #endif\n #endif\n-    strUsage += \"  -paytxfee=<amt>        \" + _(\"Fee per kB to add to transactions you send\") + \"\\n\";\n     strUsage += \"  -debug=<category>      \" + _(\"Output debugging information (default: 0, supplying <category> is optional)\") + \"\\n\";\n     strUsage +=                               _(\"If <category> is not supplied, output all debugging information.\") + \"\\n\";\n     strUsage +=                               _(\"<category> can be:\");\n@@ -264,23 +261,27 @@ std::string HelpMessage(HelpMessageMode hmm)\n     strUsage += \"  -rpcuser=<user>        \" + _(\"Username for JSON-RPC connections\") + \"\\n\";\n     strUsage += \"  -rpcpassword=<pw>      \" + _(\"Password for JSON-RPC connections\") + \"\\n\";\n     strUsage += \"  -rpcport=<port>        \" + _(\"Listen for JSON-RPC connections on <port> (default: 8332 or testnet: 18332)\") + \"\\n\";\n-\n     strUsage += \"  -rpcallowip=<ip>       \" + _(\"Allow JSON-RPC connections from specified IP address\") + \"\\n\";\n     strUsage += \"  -rpcthreads=<n>        \" + _(\"Set the number of threads to service RPC calls (default: 4)\") + \"\\n\";\n     strUsage += \"  -blocknotify=<cmd>     \" + _(\"Execute command when the best block changes (%s in cmd is replaced by block hash)\") + \"\\n\";\n-    strUsage += \"  -walletnotify=<cmd>    \" + _(\"Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)\") + \"\\n\";\n     strUsage += \"  -alertnotify=<cmd>     \" + _(\"Execute command when a relevant alert is received or we see a really long fork (%s in cmd is replaced by message)\") + \"\\n\";\n-    strUsage += \"  -upgradewallet         \" + _(\"Upgrade wallet to latest format\") + \"\\n\";\n     strUsage += \"  -keypool=<n>           \" + _(\"Set key pool size to <n> (default: 100)\") + \"\\n\";\n-    strUsage += \"  -rescan                \" + _(\"Rescan the block chain for missing wallet transactions\") + \"\\n\";\n-    strUsage += \"  -salvagewallet         \" + _(\"Attempt to recover private keys from a corrupt wallet.dat\") + \"\\n\";\n     strUsage += \"  -checkblocks=<n>       \" + _(\"How many blocks to check at startup (default: 288, 0 = all)\") + \"\\n\";\n     strUsage += \"  -checklevel=<n>        \" + _(\"How thorough the block verification is (0-4, default: 3)\") + \"\\n\";\n     strUsage += \"  -txindex               \" + _(\"Maintain a full transaction index (default: 0)\") + \"\\n\";\n     strUsage += \"  -loadblock=<file>      \" + _(\"Imports blocks from external blk000??.dat file\") + \"\\n\";\n     strUsage += \"  -reindex               \" + _(\"Rebuild block chain index from current blk000??.dat files\") + \"\\n\";\n     strUsage += \"  -par=<n>               \" + _(\"Set the number of script verification threads (up to 16, 0 = auto, <0 = leave that many cores free, default: 0)\") + \"\\n\";\n-\n+#ifdef ENABLE_WALLET\n+    strUsage += \"\\n\" + _(\"Wallet options:\") + \"\\n\";\n+    strUsage += \"  -disablewallet         \" + _(\"Do not load the wallet and disable wallet RPC calls\") + \"\\n\";\n+    strUsage += \"  -paytxfee=<amt>        \" + _(\"Fee per kB to add to transactions you send\") + \"\\n\";\n+    strUsage += \"  -rescan                \" + _(\"Rescan the block chain for missing wallet transactions\") + \"\\n\";\n+    strUsage += \"  -salvagewallet         \" + _(\"Attempt to recover private keys from a corrupt wallet.dat\") + \"\\n\";\n+    strUsage += \"  -upgradewallet         \" + _(\"Upgrade wallet to latest format\") + \"\\n\";\n+    strUsage += \"  -wallet=<file>         \" + _(\"Specify wallet file (within data directory)\") + \"\\n\";\n+    strUsage += \"  -walletnotify=<cmd>    \" + _(\"Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)\") + \"\\n\";\n+#endif\n     strUsage += \"\\n\" + _(\"Block creation options:\") + \"\\n\";\n     strUsage += \"  -blockminsize=<n>      \" + _(\"Set minimum block size in bytes (default: 0)\") + \"\\n\";\n     strUsage += \"  -blockmaxsize=<n>      \" + strprintf(_(\"Set maximum block size in bytes (default: %d)\"), DEFAULT_BLOCK_MAX_SIZE) + \"\\n\";"
      }
    ]
  },
  {
    "sha": "57fdd68aaccbc845e2efca3a7b535832132fcf43",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1N2ZkZDY4YWFjY2JjODQ1ZTJlZmNhM2E3YjUzNTgzMjEzMmZjZjQz",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-18T07:56:21Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-18T07:56:37Z"
      },
      "message": "Merge pull request #3415\n\n4a61c39 qt: status WalletModel::Aborted is no longer used (Wladimir J. van der Laan)\nca2c83d Remove unused ThreadSafeAskFee from ui_interface (Wladimir J. van der Laan)\n37e67d3 Remove unused ThreadSafeHandleURI from ui_interface (Wladimir J. van der Laan)",
      "tree": {
        "sha": "d53e724b8060c6776ddf81f6afce08dc0128ef72",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d53e724b8060c6776ddf81f6afce08dc0128ef72"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/57fdd68aaccbc845e2efca3a7b535832132fcf43",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJSsVU1AAoJEHSBCwEjRsmmI/kH/ilMQ5bWX0pIgmIYRLIgBVn8\n7tTMd1xS0wNYwJT2Rc/pYXEYboTvYuJfwSXyKBt3qOCxBTJ85mN64vdC+hYb3JW+\ngUVvCwYaVyZDvY/KLeCBBGGtJWvkSWFMOLMhRuhoRY2PBJfpIrs3iZAzm1NoD1Gy\nZostE6powJAPkYUXwRBdezmPP2+NGhw8GWiqQfr0q38MgIGqIaozKtAFtw28RS2j\n1UhDB3shcgvUABeBkoDA9zixhABORaVa9uoP35+zR+9UwVEoOUqJjuDwiQucPOKb\nIpB/taMOkvozVhioLxJCU+ZN+i0WyPtnQvTn/tuGb2GRM06do9rq+n4onatkhHQ=\n=5Y3k\n-----END PGP SIGNATURE-----",
        "payload": "tree d53e724b8060c6776ddf81f6afce08dc0128ef72\nparent 03d9dd47f67923571bd2f11574de8b4d8d7fc75d\nparent 4a61c39456b553f7de8ccc019276d40aff10dac0\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1387353381 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1387353397 +0100\n\nMerge pull request #3415\n\n4a61c39 qt: status WalletModel::Aborted is no longer used (Wladimir J. van der Laan)\nca2c83d Remove unused ThreadSafeAskFee from ui_interface (Wladimir J. van der Laan)\n37e67d3 Remove unused ThreadSafeHandleURI from ui_interface (Wladimir J. van der Laan)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/57fdd68aaccbc845e2efca3a7b535832132fcf43",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/57fdd68aaccbc845e2efca3a7b535832132fcf43",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/57fdd68aaccbc845e2efca3a7b535832132fcf43/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "03d9dd47f67923571bd2f11574de8b4d8d7fc75d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/03d9dd47f67923571bd2f11574de8b4d8d7fc75d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/03d9dd47f67923571bd2f11574de8b4d8d7fc75d"
      },
      {
        "sha": "4a61c39456b553f7de8ccc019276d40aff10dac0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4a61c39456b553f7de8ccc019276d40aff10dac0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4a61c39456b553f7de8ccc019276d40aff10dac0"
      }
    ],
    "stats": {
      "total": 64,
      "additions": 8,
      "deletions": 56
    },
    "files": [
      {
        "sha": "b74452d4c6df01aa8c1761a2021c31ad32db9adf",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 17,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57fdd68aaccbc845e2efca3a7b535832132fcf43/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57fdd68aaccbc845e2efca3a7b535832132fcf43/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=57fdd68aaccbc845e2efca3a7b535832132fcf43",
        "patch": "@@ -74,22 +74,6 @@ static bool ThreadSafeMessageBox(const std::string& message, const std::string&\n     }\n }\n \n-static bool ThreadSafeAskFee(int64_t nFeeRequired)\n-{\n-    if(!guiref)\n-        return false;\n-    if(nFeeRequired < CTransaction::nMinTxFee || nFeeRequired <= nTransactionFee || fDaemon)\n-        return true;\n-\n-    bool payFee = false;\n-\n-    QMetaObject::invokeMethod(guiref, \"askFee\", GUIUtil::blockingGUIThreadConnection(),\n-                               Q_ARG(qint64, nFeeRequired),\n-                               Q_ARG(bool*, &payFee));\n-\n-    return payFee;\n-}\n-\n static void InitMessage(const std::string &message)\n {\n     if(splashref)\n@@ -262,7 +246,6 @@ int main(int argc, char *argv[])\n \n     // Subscribe to global signals from core\n     uiInterface.ThreadSafeMessageBox.connect(ThreadSafeMessageBox);\n-    uiInterface.ThreadSafeAskFee.connect(ThreadSafeAskFee);\n     uiInterface.InitMessage.connect(InitMessage);\n     uiInterface.Translate.connect(Translate);\n "
      },
      {
        "sha": "2c40310de0f4cf711b97c9256916619db77f574d",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 13,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57fdd68aaccbc845e2efca3a7b535832132fcf43/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57fdd68aaccbc845e2efca3a7b535832132fcf43/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=57fdd68aaccbc845e2efca3a7b535832132fcf43",
        "patch": "@@ -726,19 +726,6 @@ void BitcoinGUI::closeEvent(QCloseEvent *event)\n     QMainWindow::closeEvent(event);\n }\n \n-void BitcoinGUI::askFee(qint64 nFeeRequired, bool *payFee)\n-{\n-    if (!clientModel || !clientModel->getOptionsModel())\n-        return;\n-\n-    QString strMessage = tr(\"This transaction is over the size limit. You can still send it for a fee of %1, \"\n-        \"which goes to the nodes that process your transaction and helps to support the network. \"\n-        \"Do you want to pay the fee?\").arg(BitcoinUnits::formatWithUnit(clientModel->getOptionsModel()->getDisplayUnit(), nFeeRequired));\n-    QMessageBox::StandardButton retval = QMessageBox::question(this, tr(\"Confirm transaction fee\"), strMessage,\n-        QMessageBox::Yes | QMessageBox::Cancel, QMessageBox::Yes);\n-    *payFee = (retval == QMessageBox::Yes);\n-}\n-\n void BitcoinGUI::incomingTransaction(const QString& date, int unit, qint64 amount, const QString& type, const QString& address)\n {\n     // On new transaction, make an info balloon"
      },
      {
        "sha": "75c61d2a8a7baa3841ffaec62c9daf5e191cb8c0",
        "filename": "src/qt/bitcoingui.h",
        "status": "modified",
        "additions": 0,
        "deletions": 10,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57fdd68aaccbc845e2efca3a7b535832132fcf43/src/qt/bitcoingui.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57fdd68aaccbc845e2efca3a7b535832132fcf43/src/qt/bitcoingui.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.h?ref=57fdd68aaccbc845e2efca3a7b535832132fcf43",
        "patch": "@@ -135,16 +135,6 @@ public slots:\n     */\n     void message(const QString &title, const QString &message, unsigned int style, bool *ret = NULL);\n \n-    /** Asks the user whether to pay the transaction fee or to cancel the transaction.\n-       It is currently not possible to pass a return value to another thread through\n-       BlockingQueuedConnection, so an indirected pointer is used.\n-       https://bugreports.qt-project.org/browse/QTBUG-10440\n-\n-      @param[in] nFeeRequired       the required fee\n-      @param[out] payFee            true to pay the fee, false to not pay the fee\n-    */\n-    void askFee(qint64 nFeeRequired, bool *payFee);\n-\n     bool handlePaymentRequest(const SendCoinsRecipient& recipient);\n \n     /** Show incoming transaction notification for new transactions. */"
      },
      {
        "sha": "4bf5c3c47983e8ec9f06267cf7dd4df1b6826683",
        "filename": "src/qt/sendcoinsdialog.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57fdd68aaccbc845e2efca3a7b535832132fcf43/src/qt/sendcoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57fdd68aaccbc845e2efca3a7b535832132fcf43/src/qt/sendcoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.cpp?ref=57fdd68aaccbc845e2efca3a7b535832132fcf43",
        "patch": "@@ -452,9 +452,8 @@ void SendCoinsDialog::processSendCoinsReturn(const WalletModel::SendCoinsReturn\n         msgParams.first = tr(\"The transaction was rejected! This might happen if some of the coins in your wallet were already spent, such as if you used a copy of wallet.dat and coins were spent in the copy but not marked as spent here.\");\n         msgParams.second = CClientUIInterface::MSG_ERROR;\n         break;\n-    // OK and Aborted are included to prevent a compiler warning.\n+    // included to prevent a compiler warning.\n     case WalletModel::OK:\n-    case WalletModel::Aborted:\n     default:\n         return;\n     }"
      },
      {
        "sha": "642021df1a27b00206015ff700847b299931a2dc",
        "filename": "src/qt/walletmodel.h",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57fdd68aaccbc845e2efca3a7b535832132fcf43/src/qt/walletmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57fdd68aaccbc845e2efca3a7b535832132fcf43/src/qt/walletmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.h?ref=57fdd68aaccbc845e2efca3a7b535832132fcf43",
        "patch": "@@ -75,8 +75,7 @@ class WalletModel : public QObject\n         AmountWithFeeExceedsBalance,\n         DuplicateAddress,\n         TransactionCreationFailed, // Error returned when wallet is still locked\n-        TransactionCommitFailed,\n-        Aborted\n+        TransactionCommitFailed\n     };\n \n     enum EncryptionStatus\n@@ -103,7 +102,7 @@ class WalletModel : public QObject\n     // Return status record for SendCoins, contains error id + information\n     struct SendCoinsReturn\n     {\n-        SendCoinsReturn(StatusCode status = Aborted):\n+        SendCoinsReturn(StatusCode status = OK):\n             status(status) {}\n         StatusCode status;\n     };"
      },
      {
        "sha": "9b9fb614f730709ca2df39bd79510c31bd4eab5f",
        "filename": "src/ui_interface.h",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57fdd68aaccbc845e2efca3a7b535832132fcf43/src/ui_interface.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57fdd68aaccbc845e2efca3a7b535832132fcf43/src/ui_interface.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/ui_interface.h?ref=57fdd68aaccbc845e2efca3a7b535832132fcf43",
        "patch": "@@ -75,9 +75,6 @@ class CClientUIInterface\n     /** Ask the user whether they want to pay a fee or not. */\n     boost::signals2::signal<bool (int64_t nFeeRequired), boost::signals2::last_value<bool> > ThreadSafeAskFee;\n \n-    /** Handle a URL passed at the command line. */\n-    boost::signals2::signal<void (const std::string& strURI)> ThreadSafeHandleURI;\n-\n     /** Progress message during initialization. */\n     boost::signals2::signal<void (const std::string &message)> InitMessage;\n "
      },
      {
        "sha": "3c3d890e2ed09dc0aef59b8098782f73b4871c5c",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 6,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57fdd68aaccbc845e2efca3a7b535832132fcf43/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57fdd68aaccbc845e2efca3a7b535832132fcf43/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=57fdd68aaccbc845e2efca3a7b535832132fcf43",
        "patch": "@@ -1434,7 +1434,7 @@ bool CWallet::CommitTransaction(CWalletTx& wtxNew, CReserveKey& reservekey)\n \n \n \n-string CWallet::SendMoney(CScript scriptPubKey, int64_t nValue, CWalletTx& wtxNew, bool fAskFee)\n+string CWallet::SendMoney(CScript scriptPubKey, int64_t nValue, CWalletTx& wtxNew)\n {\n     CReserveKey reservekey(this);\n     int64_t nFeeRequired;\n@@ -1454,9 +1454,6 @@ string CWallet::SendMoney(CScript scriptPubKey, int64_t nValue, CWalletTx& wtxNe\n         return strError;\n     }\n \n-    if (fAskFee && !uiInterface.ThreadSafeAskFee(nFeeRequired))\n-        return \"ABORTED\";\n-\n     if (!CommitTransaction(wtxNew, reservekey))\n         return _(\"Error: The transaction was rejected! This might happen if some of the coins in your wallet were already spent, such as if you used a copy of wallet.dat and coins were spent in the copy but not marked as spent here.\");\n \n@@ -1465,7 +1462,7 @@ string CWallet::SendMoney(CScript scriptPubKey, int64_t nValue, CWalletTx& wtxNe\n \n \n \n-string CWallet::SendMoneyToDestination(const CTxDestination& address, int64_t nValue, CWalletTx& wtxNew, bool fAskFee)\n+string CWallet::SendMoneyToDestination(const CTxDestination& address, int64_t nValue, CWalletTx& wtxNew)\n {\n     // Check amount\n     if (nValue <= 0)\n@@ -1477,7 +1474,7 @@ string CWallet::SendMoneyToDestination(const CTxDestination& address, int64_t nV\n     CScript scriptPubKey;\n     scriptPubKey.SetDestination(address);\n \n-    return SendMoney(scriptPubKey, nValue, wtxNew, fAskFee);\n+    return SendMoney(scriptPubKey, nValue, wtxNew);\n }\n \n "
      },
      {
        "sha": "8e879c5e1a34865dca5b11f705cb2b5127b1a480",
        "filename": "src/wallet.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57fdd68aaccbc845e2efca3a7b535832132fcf43/src/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57fdd68aaccbc845e2efca3a7b535832132fcf43/src/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.h?ref=57fdd68aaccbc845e2efca3a7b535832132fcf43",
        "patch": "@@ -217,8 +217,8 @@ class CWallet : public CCryptoKeyStore, public CWalletInterface\n     bool CreateTransaction(CScript scriptPubKey, int64_t nValue,\n                            CWalletTx& wtxNew, CReserveKey& reservekey, int64_t& nFeeRet, std::string& strFailReason, const CCoinControl *coinControl = NULL);\n     bool CommitTransaction(CWalletTx& wtxNew, CReserveKey& reservekey);\n-    std::string SendMoney(CScript scriptPubKey, int64_t nValue, CWalletTx& wtxNew, bool fAskFee=false);\n-    std::string SendMoneyToDestination(const CTxDestination &address, int64_t nValue, CWalletTx& wtxNew, bool fAskFee=false);\n+    std::string SendMoney(CScript scriptPubKey, int64_t nValue, CWalletTx& wtxNew);\n+    std::string SendMoneyToDestination(const CTxDestination &address, int64_t nValue, CWalletTx& wtxNew);\n \n     bool NewKeyPool();\n     bool TopUpKeyPool(unsigned int kpSize = 0);"
      }
    ]
  },
  {
    "sha": "a5824bb3c6424189e50070b6c278497532cdcd5e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNTgyNGJiM2M2NDI0MTg5ZTUwMDcwYjZjMjc4NDk3NTMyY2RjZDVl",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-18T10:27:03Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-18T10:27:14Z"
      },
      "message": "Merge pull request #3433\n\n6c1bf19 [Qt] style-police, add missing license headers (Philip Kaufmann)",
      "tree": {
        "sha": "5d325d75ef180d518fef0258d655a9163d6ac0b6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5d325d75ef180d518fef0258d655a9163d6ac0b6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a5824bb3c6424189e50070b6c278497532cdcd5e",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJSsXiCAAoJEHSBCwEjRsmmkd8H/RJ+O+1+qGBojAZjeK9YBsXz\nT2brIU057Suv++ZkGOpAtLDh/t2w0nC29tLzx5+9yeXX7wHYp4VInhS/O7jzdM+/\nsYeykgkX67ZXrXRuLu2s19MU5xoveMnE/Rk4yoqqRG9X7pDQENrL0ehrFJDgkGgG\nO7GNAC20RnVPVmYh7t2ySmLZY53G5IFCiaOOfCv8QCGBmN3xr23UdqNozf7PAtGs\n3Uc8FROVM9M9y28BhIdHeoZbzx8ez1J4AByRyKSRddzCJyHvUvQ5KxXqL5fIGUzT\nBZVyVLu8oCkU633FK6QujgqdeQOhu84WrDbdllDM2bj3u0YXpx1bCQwdOixHCM4=\n=vEM4\n-----END PGP SIGNATURE-----",
        "payload": "tree 5d325d75ef180d518fef0258d655a9163d6ac0b6\nparent 57fdd68aaccbc845e2efca3a7b535832132fcf43\nparent 6c1bf199ca25809b0e6323a4dcbe5be97ce84cd9\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1387362423 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1387362434 +0100\n\nMerge pull request #3433\n\n6c1bf19 [Qt] style-police, add missing license headers (Philip Kaufmann)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a5824bb3c6424189e50070b6c278497532cdcd5e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a5824bb3c6424189e50070b6c278497532cdcd5e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a5824bb3c6424189e50070b6c278497532cdcd5e/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "57fdd68aaccbc845e2efca3a7b535832132fcf43",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/57fdd68aaccbc845e2efca3a7b535832132fcf43",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/57fdd68aaccbc845e2efca3a7b535832132fcf43"
      },
      {
        "sha": "6c1bf199ca25809b0e6323a4dcbe5be97ce84cd9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6c1bf199ca25809b0e6323a4dcbe5be97ce84cd9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6c1bf199ca25809b0e6323a4dcbe5be97ce84cd9"
      }
    ],
    "stats": {
      "total": 31,
      "additions": 21,
      "deletions": 10
    },
    "files": [
      {
        "sha": "1698595188d3d4978e727fb00e23285ec8d3062f",
        "filename": "src/qt/bitcoinamountfield.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a5824bb3c6424189e50070b6c278497532cdcd5e/src/qt/bitcoinamountfield.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a5824bb3c6424189e50070b6c278497532cdcd5e/src/qt/bitcoinamountfield.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoinamountfield.cpp?ref=a5824bb3c6424189e50070b6c278497532cdcd5e",
        "patch": "@@ -14,8 +14,10 @@\n #include <QKeyEvent>\n #include <qmath.h> // for qPow()\n \n-BitcoinAmountField::BitcoinAmountField(QWidget *parent):\n-        QWidget(parent), amount(0), currentUnit(-1)\n+BitcoinAmountField::BitcoinAmountField(QWidget *parent) :\n+    QWidget(parent),\n+    amount(0),\n+    currentUnit(-1)\n {\n     amount = new QDoubleSpinBox(this);\n     amount->setLocale(QLocale::c());"
      },
      {
        "sha": "46982cc339cfa9d1a9a9e33cdc8053dc1b1009fd",
        "filename": "src/qt/editaddressdialog.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a5824bb3c6424189e50070b6c278497532cdcd5e/src/qt/editaddressdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a5824bb3c6424189e50070b6c278497532cdcd5e/src/qt/editaddressdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/editaddressdialog.cpp?ref=a5824bb3c6424189e50070b6c278497532cdcd5e",
        "patch": "@@ -13,7 +13,10 @@\n \n EditAddressDialog::EditAddressDialog(Mode mode, QWidget *parent) :\n     QDialog(parent),\n-    ui(new Ui::EditAddressDialog), mapper(0), mode(mode), model(0)\n+    ui(new Ui::EditAddressDialog),\n+    mapper(0),\n+    mode(mode),\n+    model(0)\n {\n     ui->setupUi(this);\n "
      },
      {
        "sha": "64291c9188aa9b46f082c07741747451aa2cdc09",
        "filename": "src/qt/macdockiconhandler.mm",
        "status": "modified",
        "additions": 6,
        "deletions": 2,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a5824bb3c6424189e50070b6c278497532cdcd5e/src/qt/macdockiconhandler.mm",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a5824bb3c6424189e50070b6c278497532cdcd5e/src/qt/macdockiconhandler.mm",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/macdockiconhandler.mm?ref=a5824bb3c6424189e50070b6c278497532cdcd5e",
        "patch": "@@ -1,9 +1,13 @@\n+// Copyright (c) 2011-2013 The Bitcoin Core developers\n+// Distributed under the MIT/X11 software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n #include \"macdockiconhandler.h\"\n \n+#include <QImageWriter>\n #include <QMenu>\n-#include <QWidget>\n #include <QTemporaryFile>\n-#include <QImageWriter>\n+#include <QWidget>\n \n #undef slots\n #include <Cocoa/Cocoa.h>"
      },
      {
        "sha": "8a4c94cc5c523f517760bb92f46a736440f2c29c",
        "filename": "src/qt/macnotificationhandler.mm",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a5824bb3c6424189e50070b6c278497532cdcd5e/src/qt/macnotificationhandler.mm",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a5824bb3c6424189e50070b6c278497532cdcd5e/src/qt/macnotificationhandler.mm",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/macnotificationhandler.mm?ref=a5824bb3c6424189e50070b6c278497532cdcd5e",
        "patch": "@@ -1,3 +1,7 @@\n+// Copyright (c) 2011-2013 The Bitcoin Core developers\n+// Distributed under the MIT/X11 software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n #include \"macnotificationhandler.h\"\n \n #undef slots"
      },
      {
        "sha": "ed4b04d36128f2bd66c0c30cdf01c7603e7f41cf",
        "filename": "src/qt/receivecoinsdialog.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a5824bb3c6424189e50070b6c278497532cdcd5e/src/qt/receivecoinsdialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a5824bb3c6424189e50070b6c278497532cdcd5e/src/qt/receivecoinsdialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/receivecoinsdialog.h?ref=a5824bb3c6424189e50070b6c278497532cdcd5e",
        "patch": "@@ -13,6 +13,7 @@ namespace Ui {\n }\n class WalletModel;\n class OptionsModel;\n+\n QT_BEGIN_NAMESPACE\n class QModelIndex;\n QT_END_NAMESPACE"
      },
      {
        "sha": "f08342b83eaa4df1603e4962d36e8cbaf65de59d",
        "filename": "src/qt/walletmodel.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a5824bb3c6424189e50070b6c278497532cdcd5e/src/qt/walletmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a5824bb3c6424189e50070b6c278497532cdcd5e/src/qt/walletmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.cpp?ref=a5824bb3c6424189e50070b6c278497532cdcd5e",
        "patch": "@@ -6,8 +6,8 @@\n \n #include \"addresstablemodel.h\"\n #include \"guiconstants.h\"\n-#include \"transactiontablemodel.h\"\n #include \"recentrequeststablemodel.h\"\n+#include \"transactiontablemodel.h\"\n \n #include \"base58.h\"\n #include \"db.h\""
      },
      {
        "sha": "1a4d25615a6936770476bce845ebd27aa7267571",
        "filename": "src/qt/walletmodel.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a5824bb3c6424189e50070b6c278497532cdcd5e/src/qt/walletmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a5824bb3c6424189e50070b6c278497532cdcd5e/src/qt/walletmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.h?ref=a5824bb3c6424189e50070b6c278497532cdcd5e",
        "patch": "@@ -17,8 +17,8 @@\n \n class AddressTableModel;\n class OptionsModel;\n-class TransactionTableModel;\n class RecentRequestsTableModel;\n+class TransactionTableModel;\n class WalletModelTransaction;\n \n class CCoinControl;"
      },
      {
        "sha": "b7e85bcd11a628b6198be4df3800b229c3f0d60c",
        "filename": "src/qt/walletmodeltransaction.h",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a5824bb3c6424189e50070b6c278497532cdcd5e/src/qt/walletmodeltransaction.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a5824bb3c6424189e50070b6c278497532cdcd5e/src/qt/walletmodeltransaction.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodeltransaction.h?ref=a5824bb3c6424189e50070b6c278497532cdcd5e",
        "patch": "@@ -39,9 +39,6 @@ class WalletModelTransaction\n     CWalletTx *walletTransaction;\n     CReserveKey *keyChange;\n     qint64 fee;\n-\n-public slots:\n-\n };\n \n #endif // WALLETMODELTRANSACTION_H"
      }
    ]
  },
  {
    "sha": "636a42bd0e208d1d49dab6a95e23863736823883",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2MzZhNDJiZDBlMjA4ZDFkNDlkYWI2YTk1ZTIzODYzNzM2ODIzODgz",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-18T12:43:59Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-18T12:46:10Z"
      },
      "message": "Remove ui_interface ThreadSafeAskFee residue\n\nMissed these in ca2c83d (#3415).",
      "tree": {
        "sha": "e1d725507e79b1995ea08f43c1bc95cb304fbd85",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e1d725507e79b1995ea08f43c1bc95cb304fbd85"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/636a42bd0e208d1d49dab6a95e23863736823883",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJSsZkZAAoJEHSBCwEjRsmmzlcH/3xeI6LN1NAAbifsPJWMG9f7\n4xuPFf8WemRC6M46W1VAT8o7pobjdsKJRv+tiMCxPYJhxD+Aq2DNvoXR1tqVCbTv\nedV2hYmonmeuPhtQrfq2txRTHuvBgJkHXn6ghGFx5/xuvhsZjn3v+Nx0GcxzaKYE\np/z0U3ZpRhL3kbnRGN12OmxJRnszN2BjaJlHTSRTQaxL4Z4QsDM5/rHIleku6Qts\nNUrLxNlXrfFdeYmCp1UI9c5MaZB/QSMd7TGiKBPjYWl0WQxvoNToTKBguX7B+TKw\neW44oBcdVi2lr6UVDvmDkaj8bPc5UkwFP1EkQsYizmxHnQ6TcYIUUGmTzx4tQ3U=\n=fkJU\n-----END PGP SIGNATURE-----",
        "payload": "tree e1d725507e79b1995ea08f43c1bc95cb304fbd85\nparent a5824bb3c6424189e50070b6c278497532cdcd5e\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1387370639 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1387370770 +0100\n\nRemove ui_interface ThreadSafeAskFee residue\n\nMissed these in ca2c83d (#3415).\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/636a42bd0e208d1d49dab6a95e23863736823883",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/636a42bd0e208d1d49dab6a95e23863736823883",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/636a42bd0e208d1d49dab6a95e23863736823883/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a5824bb3c6424189e50070b6c278497532cdcd5e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a5824bb3c6424189e50070b6c278497532cdcd5e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a5824bb3c6424189e50070b6c278497532cdcd5e"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 0,
      "deletions": 9
    },
    "files": [
      {
        "sha": "86954f3c34c91431f6db87138ce184fe3a6c4304",
        "filename": "src/noui.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/636a42bd0e208d1d49dab6a95e23863736823883/src/noui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/636a42bd0e208d1d49dab6a95e23863736823883/src/noui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/noui.cpp?ref=636a42bd0e208d1d49dab6a95e23863736823883",
        "patch": "@@ -34,11 +34,6 @@ static bool noui_ThreadSafeMessageBox(const std::string& message, const std::str\n     return false;\n }\n \n-static bool noui_ThreadSafeAskFee(int64_t /*nFeeRequired*/)\n-{\n-    return true;\n-}\n-\n static void noui_InitMessage(const std::string &message)\n {\n     LogPrintf(\"init message: %s\\n\", message.c_str());\n@@ -48,6 +43,5 @@ void noui_connect()\n {\n     // Connect bitcoind signal handlers\n     uiInterface.ThreadSafeMessageBox.connect(noui_ThreadSafeMessageBox);\n-    uiInterface.ThreadSafeAskFee.connect(noui_ThreadSafeAskFee);\n     uiInterface.InitMessage.connect(noui_InitMessage);\n }"
      },
      {
        "sha": "a14ed6781435df01889962ec4b5aacf01230faf7",
        "filename": "src/ui_interface.h",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/636a42bd0e208d1d49dab6a95e23863736823883/src/ui_interface.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/636a42bd0e208d1d49dab6a95e23863736823883/src/ui_interface.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/ui_interface.h?ref=636a42bd0e208d1d49dab6a95e23863736823883",
        "patch": "@@ -72,9 +72,6 @@ class CClientUIInterface\n     /** Show message box. */\n     boost::signals2::signal<bool (const std::string& message, const std::string& caption, unsigned int style), boost::signals2::last_value<bool> > ThreadSafeMessageBox;\n \n-    /** Ask the user whether they want to pay a fee or not. */\n-    boost::signals2::signal<bool (int64_t nFeeRequired), boost::signals2::last_value<bool> > ThreadSafeAskFee;\n-\n     /** Progress message during initialization. */\n     boost::signals2::signal<void (const std::string &message)> InitMessage;\n "
      }
    ]
  },
  {
    "sha": "19a5676280370148492cf59a5103584cf37893ac",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxOWE1Njc2MjgwMzcwMTQ4NDkyY2Y1OWE1MTAzNTg0Y2YzNzg5M2Fj",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-19T08:09:51Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-19T08:46:11Z"
      },
      "message": "Use mutex pointer instead of name for AssertLockHeld\n\nThis makes it useable for non-global locks such as the wallet and\nkeystore locks.",
      "tree": {
        "sha": "cc3212d12ff9799fc0d5633b289d1832cb0915d0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cc3212d12ff9799fc0d5633b289d1832cb0915d0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/19a5676280370148492cf59a5103584cf37893ac",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/19a5676280370148492cf59a5103584cf37893ac",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/19a5676280370148492cf59a5103584cf37893ac",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/19a5676280370148492cf59a5103584cf37893ac/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "636a42bd0e208d1d49dab6a95e23863736823883",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/636a42bd0e208d1d49dab6a95e23863736823883",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/636a42bd0e208d1d49dab6a95e23863736823883"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 7,
      "deletions": 6
    },
    "files": [
      {
        "sha": "174c9934531ca0433bdc8dcdde7b14455abfbeae",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/19a5676280370148492cf59a5103584cf37893ac/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/19a5676280370148492cf59a5103584cf37893ac/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=19a5676280370148492cf59a5103584cf37893ac",
        "patch": "@@ -2238,7 +2238,7 @@ void PushGetBlocks(CNode* pnode, CBlockIndex* pindexBegin, uint256 hashEnd)\n \n bool ProcessBlock(CValidationState &state, CNode* pfrom, CBlock* pblock, CDiskBlockPos *dbp)\n {\n-    AssertLockHeld(\"cs_main\");\n+    AssertLockHeld(cs_main);\n \n     // Check for duplicate\n     uint256 hash = pblock->GetHash();"
      },
      {
        "sha": "b57d8c3c00afdfd1ed7c85434fc701d139e5b337",
        "filename": "src/sync.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/19a5676280370148492cf59a5103584cf37893ac/src/sync.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/19a5676280370148492cf59a5103584cf37893ac/src/sync.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/sync.cpp?ref=19a5676280370148492cf59a5103584cf37893ac",
        "patch": "@@ -136,11 +136,11 @@ std::string LocksHeld()\n     return result;\n }\n \n-void AssertLockHeld(std::string strName)\n+void AssertLockHeldInternal(const char *pszName, const char* pszFile, int nLine, void *cs)\n {\n     BOOST_FOREACH(const PAIRTYPE(void*, CLockLocation)&i, *lockstack)\n-        if (i.second.MutexName() == strName) return;\n-    LogPrintf(\"Lock %s not held; locks held:\\n%s\", strName.c_str(), LocksHeld().c_str());\n+        if (i.first == cs) return;\n+    LogPrintf(\"Lock %s not held in %s:%i; locks held:\\n%s\", pszName, pszFile, nLine, LocksHeld().c_str());\n     assert(0);\n }\n "
      },
      {
        "sha": "077ed59b89460248737be42695674493fc8113bd",
        "filename": "src/sync.h",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/19a5676280370148492cf59a5103584cf37893ac/src/sync.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/19a5676280370148492cf59a5103584cf37893ac/src/sync.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/sync.h?ref=19a5676280370148492cf59a5103584cf37893ac",
        "patch": "@@ -88,12 +88,13 @@ typedef AnnotatedMixin<boost::mutex> CWaitableCriticalSection;\n void EnterCritical(const char* pszName, const char* pszFile, int nLine, void* cs, bool fTry = false);\n void LeaveCritical();\n std::string LocksHeld();\n-void AssertLockHeld(std::string strName);\n+void AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, void *cs);\n #else\n void static inline EnterCritical(const char* pszName, const char* pszFile, int nLine, void* cs, bool fTry = false) {}\n void static inline LeaveCritical() {}\n-void static inline AssertLockHeld(std::string) {}\n+void static inline AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, void *cs) {}\n #endif\n+#define AssertLockHeld(cs) AssertLockHeldInternal(#cs, __FILE__, __LINE__, &cs)\n \n #ifdef DEBUG_LOCKCONTENTION\n void PrintLockContention(const char* pszName, const char* pszFile, int nLine);"
      }
    ]
  },
  {
    "sha": "956916806a932b3502d8a1add410fd393c005df0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5NTY5MTY4MDZhOTMyYjM1MDJkOGExYWRkNDEwZmQzOTNjMDA1ZGYw",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-12T07:07:59Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-19T08:46:11Z"
      },
      "message": "Document cs_wallet lock and add AssertLockHeld\n\nAdd locking assertions to wallet to all methods that\naccess internal fields and do not aquire the cs_wallet mutex.",
      "tree": {
        "sha": "8e7de16c6066e6698966456e93aef0c089b39cec",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8e7de16c6066e6698966456e93aef0c089b39cec"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/956916806a932b3502d8a1add410fd393c005df0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/956916806a932b3502d8a1add410fd393c005df0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/956916806a932b3502d8a1add410fd393c005df0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/956916806a932b3502d8a1add410fd393c005df0/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "19a5676280370148492cf59a5103584cf37893ac",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/19a5676280370148492cf59a5103584cf37893ac",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/19a5676280370148492cf59a5103584cf37893ac"
      }
    ],
    "stats": {
      "total": 31,
      "additions": 28,
      "deletions": 3
    },
    "files": [
      {
        "sha": "6601575d881bd5e5937da491ecbe89f2a77d8e0f",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/956916806a932b3502d8a1add410fd393c005df0/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/956916806a932b3502d8a1add410fd393c005df0/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=956916806a932b3502d8a1add410fd393c005df0",
        "patch": "@@ -33,6 +33,7 @@ struct CompareValueOnly\n \n CPubKey CWallet::GenerateNewKey()\n {\n+    AssertLockHeld(cs_wallet); // mapKeyMetadata\n     bool fCompressed = CanSupportFeature(FEATURE_COMPRPUBKEY); // default to compressed public keys if we want 0.6.0 wallets\n \n     RandAddSeedPerfmon();\n@@ -58,6 +59,7 @@ CPubKey CWallet::GenerateNewKey()\n \n bool CWallet::AddKeyPubKey(const CKey& secret, const CPubKey &pubkey)\n {\n+    AssertLockHeld(cs_wallet); // mapKeyMetadata\n     if (!CCryptoKeyStore::AddKeyPubKey(secret, pubkey))\n         return false;\n     if (!fFileBacked)\n@@ -93,6 +95,7 @@ bool CWallet::AddCryptedKey(const CPubKey &vchPubKey,\n \n bool CWallet::LoadKeyMetadata(const CPubKey &pubkey, const CKeyMetadata &meta)\n {\n+    AssertLockHeld(cs_wallet); // mapKeyMetadata\n     if (meta.nCreateTime && (!nTimeFirstKey || meta.nCreateTime < nTimeFirstKey))\n         nTimeFirstKey = meta.nCreateTime;\n \n@@ -200,6 +203,7 @@ class CCorruptAddress\n \n bool CWallet::SetMinVersion(enum WalletFeature nVersion, CWalletDB* pwalletdbIn, bool fExplicit)\n {\n+    AssertLockHeld(cs_wallet); // nWalletVersion\n     if (nWalletVersion >= nVersion)\n         return true;\n \n@@ -233,6 +237,7 @@ bool CWallet::SetMinVersion(enum WalletFeature nVersion, CWalletDB* pwalletdbIn,\n \n bool CWallet::SetMaxVersion(int nVersion)\n {\n+    AssertLockHeld(cs_wallet); // nWalletVersion, nWalletMaxVersion\n     // cannot downgrade below current version\n     if (nWalletVersion > nVersion)\n         return false;\n@@ -325,6 +330,7 @@ bool CWallet::EncryptWallet(const SecureString& strWalletPassphrase)\n \n int64_t CWallet::IncOrderPosNext(CWalletDB *pwalletdb)\n {\n+    AssertLockHeld(cs_wallet); // nOrderPosNext\n     int64_t nRet = nOrderPosNext++;\n     if (pwalletdb) {\n         pwalletdb->WriteOrderPosNext(nOrderPosNext);\n@@ -336,6 +342,7 @@ int64_t CWallet::IncOrderPosNext(CWalletDB *pwalletdb)\n \n CWallet::TxItems CWallet::OrderedTxItems(std::list<CAccountingEntry>& acentries, std::string strAccount)\n {\n+    AssertLockHeld(cs_wallet); // mapWallet\n     CWalletDB walletdb(strWalletFile);\n \n     // First: get all CWalletTx and CAccountingEntry into a sorted-by-order multimap.\n@@ -1482,6 +1489,7 @@ string CWallet::SendMoneyToDestination(const CTxDestination& address, int64_t nV\n \n DBErrors CWallet::LoadWallet(bool& fFirstRunRet)\n {\n+    AssertLockHeld(cs_wallet); // setKeyPool\n     if (!fFileBacked)\n         return DB_LOAD_OK;\n     fFirstRunRet = false;\n@@ -1507,6 +1515,7 @@ DBErrors CWallet::LoadWallet(bool& fFirstRunRet)\n \n bool CWallet::SetAddressBook(const CTxDestination& address, const string& strName, const string& strPurpose)\n {\n+    AssertLockHeld(cs_wallet); // mapAddressBook\n     std::map<CTxDestination, CAddressBookData>::iterator mi = mapAddressBook.find(address);\n     mapAddressBook[address].name = strName;\n     if (!strPurpose.empty()) /* update purpose only if requested */\n@@ -1523,6 +1532,7 @@ bool CWallet::SetAddressBook(const CTxDestination& address, const string& strNam\n \n bool CWallet::DelAddressBook(const CTxDestination& address)\n {\n+    AssertLockHeld(cs_wallet); // mapAddressBook\n     mapAddressBook.erase(address);\n     NotifyAddressBookChanged(this, address, \"\", ::IsMine(*this, address), \"\", CT_DELETED);\n     if (!fFileBacked)\n@@ -1736,6 +1746,7 @@ std::map<CTxDestination, int64_t> CWallet::GetAddressBalances()\n \n set< set<CTxDestination> > CWallet::GetAddressGroupings()\n {\n+    AssertLockHeld(cs_wallet); // mapWallet\n     set< set<CTxDestination> > groupings;\n     set<CTxDestination> grouping;\n \n@@ -1828,6 +1839,7 @@ set< set<CTxDestination> > CWallet::GetAddressGroupings()\n \n set<CTxDestination> CWallet::GetAccountAddresses(string strAccount) const\n {\n+    AssertLockHeld(cs_wallet); // mapWallet\n     set<CTxDestination> result;\n     BOOST_FOREACH(const PAIRTYPE(CTxDestination, CAddressBookData)& item, mapAddressBook)\n     {\n@@ -1909,28 +1921,33 @@ void CWallet::UpdatedTransaction(const uint256 &hashTx)\n \n void CWallet::LockCoin(COutPoint& output)\n {\n+    AssertLockHeld(cs_wallet); // setLockedCoins\n     setLockedCoins.insert(output);\n }\n \n void CWallet::UnlockCoin(COutPoint& output)\n {\n+    AssertLockHeld(cs_wallet); // setLockedCoins\n     setLockedCoins.erase(output);\n }\n \n void CWallet::UnlockAllCoins()\n {\n+    AssertLockHeld(cs_wallet); // setLockedCoins\n     setLockedCoins.clear();\n }\n \n bool CWallet::IsLockedCoin(uint256 hash, unsigned int n) const\n {\n+    AssertLockHeld(cs_wallet); // setLockedCoins\n     COutPoint outpt(hash, n);\n \n     return (setLockedCoins.count(outpt) > 0);\n }\n \n void CWallet::ListLockedCoins(std::vector<COutPoint>& vOutpts)\n {\n+    AssertLockHeld(cs_wallet); // setLockedCoins\n     for (std::set<COutPoint>::iterator it = setLockedCoins.begin();\n          it != setLockedCoins.end(); it++) {\n         COutPoint outpt = (*it);\n@@ -1939,6 +1956,7 @@ void CWallet::ListLockedCoins(std::vector<COutPoint>& vOutpts)\n }\n \n void CWallet::GetKeyBirthTimes(std::map<CKeyID, int64_t> &mapKeyBirth) const {\n+    AssertLockHeld(cs_wallet); // mapKeyMetadata\n     mapKeyBirth.clear();\n \n     // get birth times for keys with metadata"
      },
      {
        "sha": "feb5cbf0c7d8daea30cb571bd4149c8bf57588f0",
        "filename": "src/wallet.h",
        "status": "modified",
        "additions": 10,
        "deletions": 3,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/956916806a932b3502d8a1add410fd393c005df0/src/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/956916806a932b3502d8a1add410fd393c005df0/src/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.h?ref=956916806a932b3502d8a1add410fd393c005df0",
        "patch": "@@ -102,6 +102,11 @@ class CWallet : public CCryptoKeyStore, public CWalletInterface\n     int64_t nLastResend;\n \n public:\n+    /// Main wallet lock.\n+    /// This lock protects all the fields added by CWallet\n+    ///   except for:\n+    ///      fFileBacked (immutable after instantiation)\n+    ///      strWalletFile (immutable after instantiation)\n     mutable CCriticalSection cs_wallet;\n \n     bool fFileBacked;\n@@ -151,10 +156,11 @@ class CWallet : public CCryptoKeyStore, public CWalletInterface\n     int64_t nTimeFirstKey;\n \n     // check whether we are allowed to upgrade (or already support) to the named feature\n-    bool CanSupportFeature(enum WalletFeature wf) { return nWalletMaxVersion >= wf; }\n+    bool CanSupportFeature(enum WalletFeature wf) { AssertLockHeld(cs_wallet); return nWalletMaxVersion >= wf; }\n \n     void AvailableCoins(std::vector<COutput>& vCoins, bool fOnlyConfirmed=true, const CCoinControl *coinControl = NULL) const;\n     bool SelectCoinsMinConf(int64_t nTargetValue, int nConfMine, int nConfTheirs, std::vector<COutput> vCoins, std::set<std::pair<const CWalletTx*,unsigned int> >& setCoinsRet, int64_t& nValueRet) const;\n+\n     bool IsLockedCoin(uint256 hash, unsigned int n) const;\n     void LockCoin(COutPoint& output);\n     void UnlockCoin(COutPoint& output);\n@@ -171,7 +177,7 @@ class CWallet : public CCryptoKeyStore, public CWalletInterface\n     // Load metadata (used by LoadWallet)\n     bool LoadKeyMetadata(const CPubKey &pubkey, const CKeyMetadata &metadata);\n \n-    bool LoadMinVersion(int nVersion) { nWalletVersion = nVersion; nWalletMaxVersion = std::max(nWalletMaxVersion, nVersion); return true; }\n+    bool LoadMinVersion(int nVersion) { AssertLockHeld(cs_wallet); nWalletVersion = nVersion; nWalletMaxVersion = std::max(nWalletMaxVersion, nVersion); return true; }\n \n     // Adds an encrypted key to the store, and saves it to disk.\n     bool AddCryptedKey(const CPubKey &vchPubKey, const std::vector<unsigned char> &vchCryptedSecret);\n@@ -320,6 +326,7 @@ class CWallet : public CCryptoKeyStore, public CWalletInterface\n \n     unsigned int GetKeyPoolSize()\n     {\n+        AssertLockHeld(cs_wallet); // setKeyPool\n         return setKeyPool.size();\n     }\n \n@@ -332,7 +339,7 @@ class CWallet : public CCryptoKeyStore, public CWalletInterface\n     bool SetMaxVersion(int nVersion);\n \n     // get the current wallet format (the oldest client version guaranteed to understand this wallet)\n-    int GetVersion() { return nWalletVersion; }\n+    int GetVersion() { AssertLockHeld(cs_wallet); return nWalletVersion; }\n \n     /** Address book entry changed.\n      * @note called with lock cs_wallet held."
      }
    ]
  },
  {
    "sha": "012ca1c9e4f21e0414f965cb812ecb1f2ddb4f67",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowMTJjYTFjOWU0ZjIxZTA0MTRmOTY1Y2I4MTJlY2IxZjJkZGI0ZjY3",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-19T08:58:06Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-19T09:00:58Z"
      },
      "message": "LoadWallet: acquire cs_wallet mutex before clearing setKeyPool\n\nMake the function mutex-aware, to prevent having to lock cs_wallet\nat the call site in Init.",
      "tree": {
        "sha": "a9cfb699a58ad9d201e739fa8523b93592a40f27",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a9cfb699a58ad9d201e739fa8523b93592a40f27"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/012ca1c9e4f21e0414f965cb812ecb1f2ddb4f67",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/012ca1c9e4f21e0414f965cb812ecb1f2ddb4f67",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/012ca1c9e4f21e0414f965cb812ecb1f2ddb4f67",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/012ca1c9e4f21e0414f965cb812ecb1f2ddb4f67/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "956916806a932b3502d8a1add410fd393c005df0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/956916806a932b3502d8a1add410fd393c005df0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/956916806a932b3502d8a1add410fd393c005df0"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "cfaa0d6b9f4a6ca9ef64da2f5f21f62aec558c11",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/012ca1c9e4f21e0414f965cb812ecb1f2ddb4f67/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/012ca1c9e4f21e0414f965cb812ecb1f2ddb4f67/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=012ca1c9e4f21e0414f965cb812ecb1f2ddb4f67",
        "patch": "@@ -1489,7 +1489,6 @@ string CWallet::SendMoneyToDestination(const CTxDestination& address, int64_t nV\n \n DBErrors CWallet::LoadWallet(bool& fFirstRunRet)\n {\n-    AssertLockHeld(cs_wallet); // setKeyPool\n     if (!fFileBacked)\n         return DB_LOAD_OK;\n     fFirstRunRet = false;\n@@ -1498,6 +1497,7 @@ DBErrors CWallet::LoadWallet(bool& fFirstRunRet)\n     {\n         if (CDB::Rewrite(strWalletFile, \"\\x04pool\"))\n         {\n+            LOCK(cs_wallet);\n             setKeyPool.clear();\n             // Note: can't top-up keypool here, because wallet is locked.\n             // User will be prompted to unlock wallet the next operation"
      }
    ]
  },
  {
    "sha": "285cf7a1a6cb660b57cbc75f63e49736b51d705e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyODVjZjdhMWE2Y2I2NjBiNTdjYmM3NWY2M2U0OTczNmI1MWQ3MDVl",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-19T09:10:42Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-19T09:11:13Z"
      },
      "message": "Merge pull request #3412\n\nc3a7f51 Move `verifymessage` from rpcwallet to rpcmisc (Wladimir J. van der Laan)\n723a03d Move `createmultisig` from rpcwallet to rpcmisc (Wladimir J. van der Laan)\n452955f Move `validateaddress` from rpcwallet to rpcmisc (Wladimir J. van der Laan)\ncd7fa8b Move `nTransactionFee` from main.cpp to wallet.cpp (Wladimir J. van der Laan)\na943bde Move `settxfee` from rpcblockchain to rpcwallet (Wladimir J. van der Laan)\n16bc9aa Move `getinfo` from rpcnet to rpcmisc (Wladimir J. van der Laan)\n652e156 add new RPC implementation file `rpcmisc.cpp` (Wladimir J. van der Laan)",
      "tree": {
        "sha": "28118ab1913f7e4d0093be8750a8246ea3244e58",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/28118ab1913f7e4d0093be8750a8246ea3244e58"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/285cf7a1a6cb660b57cbc75f63e49736b51d705e",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJSsrgxAAoJEHSBCwEjRsmmlagIAK6nsmHal535ZQW6bLE1Y+l9\n8JcNaCIVdeEi3xSBrOgt/t83Hyx62+q8EvQIuP2Z68H3e1nF5H6Ng0t161lPUqtp\nHUcZ50VBxJ2ATUA17tyrUhAPTIQr+prGtqH+rhDDTTnIYhJ6KR4/ugU/mAJyRTqk\nX2zM2bFZ9MPQT95zHonD28Zu2eSEEYMD7KkvLBbHrEwliYuO3wx4mQNpTVZ3Sqd4\nESA+5thdCNTHPLDFrB62ABZ1IBYY/ykQwa08xN1pRVeNuAWQigVS5csvRmpblOrE\nae8A0Vw0SoF9FucSkWHwXoc93JD8sIgJODMuw49AQkJWbb/pWs+NmwgAACSENjU=\n=diBh\n-----END PGP SIGNATURE-----",
        "payload": "tree 28118ab1913f7e4d0093be8750a8246ea3244e58\nparent 636a42bd0e208d1d49dab6a95e23863736823883\nparent c3a7f516e7ba9f39537ded149d8eb756c836fa2e\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1387444242 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1387444273 +0100\n\nMerge pull request #3412\n\nc3a7f51 Move `verifymessage` from rpcwallet to rpcmisc (Wladimir J. van der Laan)\n723a03d Move `createmultisig` from rpcwallet to rpcmisc (Wladimir J. van der Laan)\n452955f Move `validateaddress` from rpcwallet to rpcmisc (Wladimir J. van der Laan)\ncd7fa8b Move `nTransactionFee` from main.cpp to wallet.cpp (Wladimir J. van der Laan)\na943bde Move `settxfee` from rpcblockchain to rpcwallet (Wladimir J. van der Laan)\n16bc9aa Move `getinfo` from rpcnet to rpcmisc (Wladimir J. van der Laan)\n652e156 add new RPC implementation file `rpcmisc.cpp` (Wladimir J. van der Laan)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/285cf7a1a6cb660b57cbc75f63e49736b51d705e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/285cf7a1a6cb660b57cbc75f63e49736b51d705e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/285cf7a1a6cb660b57cbc75f63e49736b51d705e/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "636a42bd0e208d1d49dab6a95e23863736823883",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/636a42bd0e208d1d49dab6a95e23863736823883",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/636a42bd0e208d1d49dab6a95e23863736823883"
      },
      {
        "sha": "c3a7f516e7ba9f39537ded149d8eb756c836fa2e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c3a7f516e7ba9f39537ded149d8eb756c836fa2e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c3a7f516e7ba9f39537ded149d8eb756c836fa2e"
      }
    ],
    "stats": {
      "total": 695,
      "additions": 366,
      "deletions": 329
    },
    "files": [
      {
        "sha": "5ce1c8e1b630f9d8ff4a9e0f001a5fb734e7ae61",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/285cf7a1a6cb660b57cbc75f63e49736b51d705e/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/285cf7a1a6cb660b57cbc75f63e49736b51d705e/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=285cf7a1a6cb660b57cbc75f63e49736b51d705e",
        "patch": "@@ -53,6 +53,7 @@ libbitcoin_server_a_SOURCES = \\\n   noui.cpp \\\n   rpcblockchain.cpp \\\n   rpcmining.cpp \\\n+  rpcmisc.cpp \\\n   rpcnet.cpp \\\n   rpcrawtransaction.cpp \\\n   txdb.cpp \\"
      },
      {
        "sha": "a0b9f89f2352ef5f5f45db0aaea9fed911e928f8",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/285cf7a1a6cb660b57cbc75f63e49736b51d705e/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/285cf7a1a6cb660b57cbc75f63e49736b51d705e/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=285cf7a1a6cb660b57cbc75f63e49736b51d705e",
        "patch": "@@ -535,6 +535,7 @@ bool AppInit2(boost::thread_group& threadGroup, bool fForceServer)\n             return InitError(strprintf(_(\"Invalid amount for -minrelaytxfee=<amount>: '%s'\"), mapArgs[\"-minrelaytxfee\"].c_str()));\n     }\n \n+#ifdef ENABLE_WALLET\n     if (mapArgs.count(\"-paytxfee\"))\n     {\n         if (!ParseMoney(mapArgs[\"-paytxfee\"], nTransactionFee))\n@@ -543,7 +544,6 @@ bool AppInit2(boost::thread_group& threadGroup, bool fForceServer)\n             InitWarning(_(\"Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.\"));\n     }\n \n-#ifdef ENABLE_WALLET\n     strWalletFile = GetArg(\"-wallet\", \"wallet.dat\");\n #endif\n     // ********************************************************* Step 4: application initialization: dir lock, daemonize, pidfile, debug log"
      },
      {
        "sha": "e3f9fdd84325d2ba2b61d134954ad7dcfedac0b7",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/285cf7a1a6cb660b57cbc75f63e49736b51d705e/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/285cf7a1a6cb660b57cbc75f63e49736b51d705e/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=285cf7a1a6cb660b57cbc75f63e49736b51d705e",
        "patch": "@@ -67,9 +67,6 @@ CScript COINBASE_FLAGS;\n \n const string strMessageMagic = \"Bitcoin Signed Message:\\n\";\n \n-// Settings\n-int64_t nTransactionFee = 0;\n-\n // Internal stuff\n namespace {\n struct CBlockIndexWorkComparator"
      },
      {
        "sha": "f3f9acb6390301bacf3ad854b7c37418c425a444",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/285cf7a1a6cb660b57cbc75f63e49736b51d705e/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/285cf7a1a6cb660b57cbc75f63e49736b51d705e/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=285cf7a1a6cb660b57cbc75f63e49736b51d705e",
        "patch": "@@ -96,9 +96,6 @@ extern bool fTxIndex;\n extern unsigned int nCoinCacheSize;\n extern bool fHaveGUI;\n \n-// Settings\n-extern int64_t nTransactionFee;\n-\n // Minimum disk space required - used in CheckDiskSpace()\n static const uint64_t nMinDiskSpace = 52428800;\n "
      },
      {
        "sha": "2f04a71ec0fd0e665b78fee6d6cf51c508209b78",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/285cf7a1a6cb660b57cbc75f63e49736b51d705e/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/285cf7a1a6cb660b57cbc75f63e49736b51d705e/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=285cf7a1a6cb660b57cbc75f63e49736b51d705e",
        "patch": "@@ -17,6 +17,7 @@\n #include \"main.h\"\n #include \"ui_interface.h\"\n #include \"util.h\"\n+#include \"wallet.h\"\n \n #include <stdint.h>\n "
      },
      {
        "sha": "363f432d6272d43cd658b9d7f43067097cd58e20",
        "filename": "src/qt/optionsmodel.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/285cf7a1a6cb660b57cbc75f63e49736b51d705e/src/qt/optionsmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/285cf7a1a6cb660b57cbc75f63e49736b51d705e/src/qt/optionsmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsmodel.cpp?ref=285cf7a1a6cb660b57cbc75f63e49736b51d705e",
        "patch": "@@ -14,6 +14,7 @@\n #include \"init.h\"\n #include \"main.h\"\n #include \"net.h\"\n+#include \"wallet.h\"\n #include \"walletdb.h\"\n \n #include <QSettings>"
      },
      {
        "sha": "661deffb195304d3537d2925e70a4456d56398ce",
        "filename": "src/rpcblockchain.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 24,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/285cf7a1a6cb660b57cbc75f63e49736b51d705e/src/rpcblockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/285cf7a1a6cb660b57cbc75f63e49736b51d705e/src/rpcblockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcblockchain.cpp?ref=285cf7a1a6cb660b57cbc75f63e49736b51d705e",
        "patch": "@@ -127,30 +127,6 @@ Value getdifficulty(const Array& params, bool fHelp)\n }\n \n \n-Value settxfee(const Array& params, bool fHelp)\n-{\n-    if (fHelp || params.size() < 1 || params.size() > 1)\n-        throw runtime_error(\n-            \"settxfee amount\\n\"\n-            \"\\nSet the transaction fee. 'amount' is a real and is rounded to the nearest 0.00000001\\n\"\n-            \"\\nArguments:\\n\"\n-            \"1. amount         (numeric, required) The transaction fee in btc rounded to the nearest 0.00000001\\n\"\n-            \"\\nResult\\n\"\n-            \"true|false        (boolean) Returns true if successful\\n\"\n-            \"\\nExamples:\\n\"\n-            + HelpExampleCli(\"settxfee\", \"0.00001\")\n-            + HelpExampleRpc(\"settxfee\", \"0.00001\")\n-        );\n-\n-    // Amount\n-    int64_t nAmount = 0;\n-    if (params[0].get_real() != 0.0)\n-        nAmount = AmountFromValue(params[0]);        // rejects 0.0 amounts\n-\n-    nTransactionFee = nAmount;\n-    return true;\n-}\n-\n Value getrawmempool(const Array& params, bool fHelp)\n {\n     if (fHelp || params.size() > 1)"
      },
      {
        "sha": "c61cc4192b6c7ebd4eb88d52900efc3fa67c669a",
        "filename": "src/rpcmisc.cpp",
        "status": "added",
        "additions": 326,
        "deletions": 0,
        "changes": 326,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/285cf7a1a6cb660b57cbc75f63e49736b51d705e/src/rpcmisc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/285cf7a1a6cb660b57cbc75f63e49736b51d705e/src/rpcmisc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcmisc.cpp?ref=285cf7a1a6cb660b57cbc75f63e49736b51d705e",
        "patch": "@@ -0,0 +1,326 @@\n+// Copyright (c) 2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2013 The Bitcoin developers\n+// Distributed under the MIT/X11 software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"base58.h\"\n+#include \"rpcserver.h\"\n+#include \"init.h\"\n+#include \"main.h\"\n+#include \"net.h\"\n+#include \"netbase.h\"\n+#include \"util.h\"\n+#ifdef ENABLE_WALLET\n+#include \"wallet.h\"\n+#include \"walletdb.h\"\n+#endif\n+\n+#include <stdint.h>\n+\n+#include <boost/assign/list_of.hpp>\n+#include \"json/json_spirit_utils.h\"\n+#include \"json/json_spirit_value.h\"\n+\n+using namespace std;\n+using namespace boost;\n+using namespace boost::assign;\n+using namespace json_spirit;\n+\n+Value getinfo(const Array& params, bool fHelp)\n+{\n+    if (fHelp || params.size() != 0)\n+        throw runtime_error(\n+            \"getinfo\\n\"\n+            \"Returns an object containing various state info.\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"version\\\": xxxxx,           (numeric) the server version\\n\"\n+            \"  \\\"protocolversion\\\": xxxxx,   (numeric) the protocol version\\n\"\n+            \"  \\\"walletversion\\\": xxxxx,     (numeric) the wallet version\\n\"\n+            \"  \\\"balance\\\": xxxxxxx,         (numeric) the total bitcoin balance of the wallet\\n\"\n+            \"  \\\"blocks\\\": xxxxxx,           (numeric) the current number of blocks processed in the server\\n\"\n+            \"  \\\"timeoffset\\\": xxxxx,        (numeric) the time offset\\n\"\n+            \"  \\\"connections\\\": xxxxx,       (numeric) the number of connections\\n\"\n+            \"  \\\"proxy\\\": \\\"host:port\\\",     (string, optional) the proxy used by the server\\n\"\n+            \"  \\\"difficulty\\\": xxxxxx,       (numeric) the current difficulty\\n\"\n+            \"  \\\"testnet\\\": true|false,      (boolean) if the server is using testnet or not\\n\"\n+            \"  \\\"keypoololdest\\\": xxxxxx,    (numeric) the timestamp (seconds since GMT epoch) of the oldest pre-generated key in the key pool\\n\"\n+            \"  \\\"keypoolsize\\\": xxxx,        (numeric) how many new keys are pre-generated\\n\"\n+            \"  \\\"paytxfee\\\": x.xxxx,         (numeric) the transaction fee set in btc\\n\"\n+            \"  \\\"unlocked_until\\\": ttt,      (numeric) the timestamp in seconds since epoch (midnight Jan 1 1970 GMT) that the wallet is unlocked for transfers, or 0 if the wallet is locked\\n\"\n+            \"  \\\"errors\\\": \\\"...\\\"           (string) any error messages\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getinfo\", \"\")\n+            + HelpExampleRpc(\"getinfo\", \"\")\n+        );\n+\n+    proxyType proxy;\n+    GetProxy(NET_IPV4, proxy);\n+\n+    Object obj;\n+    obj.push_back(Pair(\"version\",       (int)CLIENT_VERSION));\n+    obj.push_back(Pair(\"protocolversion\",(int)PROTOCOL_VERSION));\n+#ifdef ENABLE_WALLET\n+    if (pwalletMain) {\n+        obj.push_back(Pair(\"walletversion\", pwalletMain->GetVersion()));\n+        obj.push_back(Pair(\"balance\",       ValueFromAmount(pwalletMain->GetBalance())));\n+    }\n+#endif\n+    obj.push_back(Pair(\"blocks\",        (int)chainActive.Height()));\n+    obj.push_back(Pair(\"timeoffset\",    (boost::int64_t)GetTimeOffset()));\n+    obj.push_back(Pair(\"connections\",   (int)vNodes.size()));\n+    obj.push_back(Pair(\"proxy\",         (proxy.first.IsValid() ? proxy.first.ToStringIPPort() : string())));\n+    obj.push_back(Pair(\"difficulty\",    (double)GetDifficulty()));\n+    obj.push_back(Pair(\"testnet\",       TestNet()));\n+#ifdef ENABLE_WALLET\n+    if (pwalletMain) {\n+        obj.push_back(Pair(\"keypoololdest\", (boost::int64_t)pwalletMain->GetOldestKeyPoolTime()));\n+        obj.push_back(Pair(\"keypoolsize\",   (int)pwalletMain->GetKeyPoolSize()));\n+    }\n+    obj.push_back(Pair(\"paytxfee\",      ValueFromAmount(nTransactionFee)));\n+    if (pwalletMain && pwalletMain->IsCrypted())\n+        obj.push_back(Pair(\"unlocked_until\", (boost::int64_t)nWalletUnlockTime));\n+#endif\n+    obj.push_back(Pair(\"errors\",        GetWarnings(\"statusbar\")));\n+    return obj;\n+}\n+\n+#ifdef ENABLE_WALLET\n+class DescribeAddressVisitor : public boost::static_visitor<Object>\n+{\n+public:\n+    Object operator()(const CNoDestination &dest) const { return Object(); }\n+\n+    Object operator()(const CKeyID &keyID) const {\n+        Object obj;\n+        CPubKey vchPubKey;\n+        pwalletMain->GetPubKey(keyID, vchPubKey);\n+        obj.push_back(Pair(\"isscript\", false));\n+        obj.push_back(Pair(\"pubkey\", HexStr(vchPubKey)));\n+        obj.push_back(Pair(\"iscompressed\", vchPubKey.IsCompressed()));\n+        return obj;\n+    }\n+\n+    Object operator()(const CScriptID &scriptID) const {\n+        Object obj;\n+        obj.push_back(Pair(\"isscript\", true));\n+        CScript subscript;\n+        pwalletMain->GetCScript(scriptID, subscript);\n+        std::vector<CTxDestination> addresses;\n+        txnouttype whichType;\n+        int nRequired;\n+        ExtractDestinations(subscript, whichType, addresses, nRequired);\n+        obj.push_back(Pair(\"script\", GetTxnOutputType(whichType)));\n+        obj.push_back(Pair(\"hex\", HexStr(subscript.begin(), subscript.end())));\n+        Array a;\n+        BOOST_FOREACH(const CTxDestination& addr, addresses)\n+            a.push_back(CBitcoinAddress(addr).ToString());\n+        obj.push_back(Pair(\"addresses\", a));\n+        if (whichType == TX_MULTISIG)\n+            obj.push_back(Pair(\"sigsrequired\", nRequired));\n+        return obj;\n+    }\n+};\n+#endif\n+\n+Value validateaddress(const Array& params, bool fHelp)\n+{\n+    if (fHelp || params.size() != 1)\n+        throw runtime_error(\n+            \"validateaddress \\\"bitcoinaddress\\\"\\n\"\n+            \"\\nReturn information about the given bitcoin address.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"bitcoinaddress\\\"     (string, required) The bitcoin address to validate\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"isvalid\\\" : true|false,         (boolean) If the address is valid or not. If not, this is the only property returned.\\n\"\n+            \"  \\\"address\\\" : \\\"bitcoinaddress\\\", (string) The bitcoin address validated\\n\"\n+            \"  \\\"ismine\\\" : true|false,          (boolean) If the address is yours or not\\n\"\n+            \"  \\\"isscript\\\" : true|false,        (boolean) If the key is a script\\n\"\n+            \"  \\\"pubkey\\\" : \\\"publickeyhex\\\",    (string) The hex value of the raw public key\\n\"\n+            \"  \\\"iscompressed\\\" : true|false,    (boolean) If the address is compressed\\n\"\n+            \"  \\\"account\\\" : \\\"account\\\"         (string) The account associated with the address, \\\"\\\" is the default account\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"validateaddress\", \"\\\"1PSSGeFHDnKNxiEyFrD1wcEaHr9hrQDDWc\\\"\")\n+            + HelpExampleRpc(\"validateaddress\", \"\\\"1PSSGeFHDnKNxiEyFrD1wcEaHr9hrQDDWc\\\"\")\n+        );\n+\n+    CBitcoinAddress address(params[0].get_str());\n+    bool isValid = address.IsValid();\n+\n+    Object ret;\n+    ret.push_back(Pair(\"isvalid\", isValid));\n+    if (isValid)\n+    {\n+        CTxDestination dest = address.Get();\n+        string currentAddress = address.ToString();\n+        ret.push_back(Pair(\"address\", currentAddress));\n+#ifdef ENABLE_WALLET\n+        bool fMine = pwalletMain ? IsMine(*pwalletMain, dest) : false;\n+        ret.push_back(Pair(\"ismine\", fMine));\n+        if (fMine) {\n+            Object detail = boost::apply_visitor(DescribeAddressVisitor(), dest);\n+            ret.insert(ret.end(), detail.begin(), detail.end());\n+        }\n+        if (pwalletMain && pwalletMain->mapAddressBook.count(dest))\n+            ret.push_back(Pair(\"account\", pwalletMain->mapAddressBook[dest].name));\n+#endif\n+    }\n+    return ret;\n+}\n+\n+//\n+// Used by addmultisigaddress / createmultisig:\n+//\n+CScript _createmultisig(const Array& params)\n+{\n+    int nRequired = params[0].get_int();\n+    const Array& keys = params[1].get_array();\n+\n+    // Gather public keys\n+    if (nRequired < 1)\n+        throw runtime_error(\"a multisignature address must require at least one key to redeem\");\n+    if ((int)keys.size() < nRequired)\n+        throw runtime_error(\n+            strprintf(\"not enough keys supplied \"\n+                      \"(got %\"PRIszu\" keys, but need at least %d to redeem)\", keys.size(), nRequired));\n+    std::vector<CPubKey> pubkeys;\n+    pubkeys.resize(keys.size());\n+    for (unsigned int i = 0; i < keys.size(); i++)\n+    {\n+        const std::string& ks = keys[i].get_str();\n+#ifdef ENABLE_WALLET\n+        // Case 1: Bitcoin address and we have full public key:\n+        CBitcoinAddress address(ks);\n+        if (pwalletMain && address.IsValid())\n+        {\n+            CKeyID keyID;\n+            if (!address.GetKeyID(keyID))\n+                throw runtime_error(\n+                    strprintf(\"%s does not refer to a key\",ks.c_str()));\n+            CPubKey vchPubKey;\n+            if (!pwalletMain->GetPubKey(keyID, vchPubKey))\n+                throw runtime_error(\n+                    strprintf(\"no full public key for address %s\",ks.c_str()));\n+            if (!vchPubKey.IsFullyValid())\n+                throw runtime_error(\" Invalid public key: \"+ks);\n+            pubkeys[i] = vchPubKey;\n+        }\n+\n+        // Case 2: hex public key\n+        else\n+#endif\n+        if (IsHex(ks))\n+        {\n+            CPubKey vchPubKey(ParseHex(ks));\n+            if (!vchPubKey.IsFullyValid())\n+                throw runtime_error(\" Invalid public key: \"+ks);\n+            pubkeys[i] = vchPubKey;\n+        }\n+        else\n+        {\n+            throw runtime_error(\" Invalid public key: \"+ks);\n+        }\n+    }\n+    CScript result;\n+    result.SetMultisig(nRequired, pubkeys);\n+    return result;\n+}\n+\n+Value createmultisig(const Array& params, bool fHelp)\n+{\n+    if (fHelp || params.size() < 2 || params.size() > 2)\n+    {\n+        string msg = \"createmultisig nrequired [\\\"key\\\",...]\\n\"\n+            \"\\nCreates a multi-signature address with n signature of m keys required.\\n\"\n+            \"It returns a json object with the address and redeemScript.\\n\"\n+\n+            \"\\nArguments:\\n\"\n+            \"1. nrequired      (numeric, required) The number of required signatures out of the n keys or addresses.\\n\"\n+            \"2. \\\"keys\\\"       (string, required) A json array of keys which are bitcoin addresses or hex-encoded public keys\\n\"\n+            \"     [\\n\"\n+            \"       \\\"key\\\"    (string) bitcoin address or hex-encoded public key\\n\"\n+            \"       ,...\\n\"\n+            \"     ]\\n\"\n+\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"address\\\":\\\"multisigaddress\\\",  (string) The value of the new multisig address.\\n\"\n+            \"  \\\"redeemScript\\\":\\\"script\\\"       (string) The string value of the hex-encoded redemption script.\\n\"\n+            \"}\\n\"\n+\n+            \"\\nExamples:\\n\"\n+            \"\\nCreate a multisig address from 2 addresses\\n\"\n+            + HelpExampleCli(\"createmultisig\", \"2 \\\"[\\\\\\\"16sSauSf5pF2UkUwvKGq4qjNRzBZYqgEL5\\\\\\\",\\\\\\\"171sgjn4YtPu27adkKGrdDwzRTxnRkBfKV\\\\\\\"]\\\"\") +\n+            \"\\nAs a json rpc call\\n\"\n+            + HelpExampleRpc(\"icreatemultisig\", \"2, \\\"[\\\\\\\"16sSauSf5pF2UkUwvKGq4qjNRzBZYqgEL5\\\\\\\",\\\\\\\"171sgjn4YtPu27adkKGrdDwzRTxnRkBfKV\\\\\\\"]\\\"\")\n+        ;\n+        throw runtime_error(msg);\n+    }\n+\n+    // Construct using pay-to-script-hash:\n+    CScript inner = _createmultisig(params);\n+    CScriptID innerID = inner.GetID();\n+    CBitcoinAddress address(innerID);\n+\n+    Object result;\n+    result.push_back(Pair(\"address\", address.ToString()));\n+    result.push_back(Pair(\"redeemScript\", HexStr(inner.begin(), inner.end())));\n+\n+    return result;\n+}\n+\n+Value verifymessage(const Array& params, bool fHelp)\n+{\n+    if (fHelp || params.size() != 3)\n+        throw runtime_error(\n+            \"verifymessage \\\"bitcoinaddress\\\" \\\"signature\\\" \\\"message\\\"\\n\"\n+            \"\\nVerify a signed message\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"bitcoinaddress\\\"  (string, required) The bitcoin address to use for the signature.\\n\"\n+            \"2. \\\"signature\\\"       (string, required) The signature provided by the signer in base 64 encoding (see signmessage).\\n\"\n+            \"3. \\\"message\\\"         (string, required) The message that was signed.\\n\"\n+            \"\\nResult:\\n\"\n+            \"true|false   (boolean) If the signature is verified or not.\\n\"\n+            \"\\nExamples:\\n\"\n+            \"\\nUnlock the wallet for 30 seconds\\n\"\n+            + HelpExampleCli(\"walletpassphrase\", \"\\\"mypassphrase\\\" 30\") +\n+            \"\\nCreate the signature\\n\"\n+            + HelpExampleCli(\"signmessage\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\" \\\"my message\\\"\") +\n+            \"\\nVerify the signature\\n\"\n+            + HelpExampleCli(\"verifymessage\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\" \\\"signature\\\" \\\"my message\\\"\") +\n+            \"\\nAs json rpc\\n\"\n+            + HelpExampleRpc(\"verifymessage\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\", \\\"signature\\\", \\\"my message\\\"\")\n+        );\n+\n+    string strAddress  = params[0].get_str();\n+    string strSign     = params[1].get_str();\n+    string strMessage  = params[2].get_str();\n+\n+    CBitcoinAddress addr(strAddress);\n+    if (!addr.IsValid())\n+        throw JSONRPCError(RPC_TYPE_ERROR, \"Invalid address\");\n+\n+    CKeyID keyID;\n+    if (!addr.GetKeyID(keyID))\n+        throw JSONRPCError(RPC_TYPE_ERROR, \"Address does not refer to key\");\n+\n+    bool fInvalid = false;\n+    vector<unsigned char> vchSig = DecodeBase64(strSign.c_str(), &fInvalid);\n+\n+    if (fInvalid)\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Malformed base64 encoding\");\n+\n+    CHashWriter ss(SER_GETHASH, 0);\n+    ss << strMessageMagic;\n+    ss << strMessage;\n+\n+    CPubKey pubkey;\n+    if (!pubkey.RecoverCompact(ss.GetHash(), vchSig))\n+        return false;\n+\n+    return (pubkey.GetID() == keyID);\n+}\n+"
      },
      {
        "sha": "06ae7070c3d3b45127ca263294aabbfa1c192df3",
        "filename": "src/rpcnet.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 62,
        "changes": 62,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/285cf7a1a6cb660b57cbc75f63e49736b51d705e/src/rpcnet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/285cf7a1a6cb660b57cbc75f63e49736b51d705e/src/rpcnet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcnet.cpp?ref=285cf7a1a6cb660b57cbc75f63e49736b51d705e",
        "patch": "@@ -338,65 +338,3 @@ Value getnettotals(const Array& params, bool fHelp)\n     obj.push_back(Pair(\"timemillis\", static_cast<boost::int64_t>(GetTimeMillis())));\n     return obj;\n }\n-\n-Value getinfo(const Array& params, bool fHelp)\n-{\n-    if (fHelp || params.size() != 0)\n-        throw runtime_error(\n-            \"getinfo\\n\"\n-            \"Returns an object containing various state info.\\n\"\n-            \"\\nResult:\\n\"\n-            \"{\\n\"\n-            \"  \\\"version\\\": xxxxx,           (numeric) the server version\\n\"\n-            \"  \\\"protocolversion\\\": xxxxx,   (numeric) the protocol version\\n\"\n-            \"  \\\"walletversion\\\": xxxxx,     (numeric) the wallet version\\n\"\n-            \"  \\\"balance\\\": xxxxxxx,         (numeric) the total bitcoin balance of the wallet\\n\"\n-            \"  \\\"blocks\\\": xxxxxx,           (numeric) the current number of blocks processed in the server\\n\"\n-            \"  \\\"timeoffset\\\": xxxxx,        (numeric) the time offset\\n\"\n-            \"  \\\"connections\\\": xxxxx,       (numeric) the number of connections\\n\"\n-            \"  \\\"proxy\\\": \\\"host:port\\\",     (string, optional) the proxy used by the server\\n\"\n-            \"  \\\"difficulty\\\": xxxxxx,       (numeric) the current difficulty\\n\"\n-            \"  \\\"testnet\\\": true|false,      (boolean) if the server is using testnet or not\\n\"\n-            \"  \\\"keypoololdest\\\": xxxxxx,    (numeric) the timestamp (seconds since GMT epoch) of the oldest pre-generated key in the key pool\\n\"\n-            \"  \\\"keypoolsize\\\": xxxx,        (numeric) how many new keys are pre-generated\\n\"\n-            \"  \\\"paytxfee\\\": x.xxxx,         (numeric) the transaction fee set in btc\\n\"\n-            \"  \\\"unlocked_until\\\": ttt,      (numeric) the timestamp in seconds since epoch (midnight Jan 1 1970 GMT) that the wallet is unlocked for transfers, or 0 if the wallet is locked\\n\"\n-            \"  \\\"errors\\\": \\\"...\\\"           (string) any error messages\\n\"\n-            \"}\\n\"\n-            \"\\nExamples:\\n\"\n-            + HelpExampleCli(\"getinfo\", \"\")\n-            + HelpExampleRpc(\"getinfo\", \"\")\n-        );\n-\n-    proxyType proxy;\n-    GetProxy(NET_IPV4, proxy);\n-\n-    Object obj;\n-    obj.push_back(Pair(\"version\",       (int)CLIENT_VERSION));\n-    obj.push_back(Pair(\"protocolversion\",(int)PROTOCOL_VERSION));\n-#ifdef ENABLE_WALLET\n-    if (pwalletMain) {\n-        obj.push_back(Pair(\"walletversion\", pwalletMain->GetVersion()));\n-        obj.push_back(Pair(\"balance\",       ValueFromAmount(pwalletMain->GetBalance())));\n-    }\n-#endif\n-    obj.push_back(Pair(\"blocks\",        (int)chainActive.Height()));\n-    obj.push_back(Pair(\"timeoffset\",    (boost::int64_t)GetTimeOffset()));\n-    obj.push_back(Pair(\"connections\",   (int)vNodes.size()));\n-    obj.push_back(Pair(\"proxy\",         (proxy.first.IsValid() ? proxy.first.ToStringIPPort() : string())));\n-    obj.push_back(Pair(\"difficulty\",    (double)GetDifficulty()));\n-    obj.push_back(Pair(\"testnet\",       TestNet()));\n-#ifdef ENABLE_WALLET\n-    if (pwalletMain) {\n-        obj.push_back(Pair(\"keypoololdest\", (boost::int64_t)pwalletMain->GetOldestKeyPoolTime()));\n-        obj.push_back(Pair(\"keypoolsize\",   (int)pwalletMain->GetKeyPoolSize()));\n-    }\n-#endif\n-    obj.push_back(Pair(\"paytxfee\",      ValueFromAmount(nTransactionFee)));\n-#ifdef ENABLE_WALLET\n-    if (pwalletMain && pwalletMain->IsCrypted())\n-        obj.push_back(Pair(\"unlocked_until\", (boost::int64_t)nWalletUnlockTime));\n-#endif\n-    obj.push_back(Pair(\"errors\",        GetWarnings(\"statusbar\")));\n-    return obj;\n-}"
      },
      {
        "sha": "d1fa81628c25f5f97c431ff98994d755e25f6fbb",
        "filename": "src/rpcserver.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/285cf7a1a6cb660b57cbc75f63e49736b51d705e/src/rpcserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/285cf7a1a6cb660b57cbc75f63e49736b51d705e/src/rpcserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.cpp?ref=285cf7a1a6cb660b57cbc75f63e49736b51d705e",
        "patch": "@@ -237,7 +237,6 @@ static const CRPCCommand vRPCCommands[] =\n     { \"getrawmempool\",          &getrawmempool,          true,      false,      false },\n     { \"getblock\",               &getblock,               false,     false,      false },\n     { \"getblockhash\",           &getblockhash,           false,     false,      false },\n-    { \"settxfee\",               &settxfee,               false,     false,      true },\n     { \"getrawtransaction\",      &getrawtransaction,      false,     false,      false },\n     { \"createrawtransaction\",   &createrawtransaction,   false,     false,      false },\n     { \"decoderawtransaction\",   &decoderawtransaction,   false,     false,      false },\n@@ -253,6 +252,9 @@ static const CRPCCommand vRPCCommands[] =\n     { \"getmininginfo\",          &getmininginfo,          true,      false,      false },\n     { \"getblocktemplate\",       &getblocktemplate,       true,      false,      false },\n     { \"submitblock\",            &submitblock,            false,     false,      false },\n+    { \"validateaddress\",        &validateaddress,        true,      false,      false },\n+    { \"createmultisig\",         &createmultisig,         true,      true ,      false },\n+    { \"verifymessage\",          &verifymessage,          false,     false,      false },\n \n #ifdef ENABLE_WALLET\n     /* Wallet */\n@@ -273,18 +275,15 @@ static const CRPCCommand vRPCCommands[] =\n     { \"walletpassphrasechange\", &walletpassphrasechange, false,     false,      true },\n     { \"walletlock\",             &walletlock,             true,      false,      true },\n     { \"encryptwallet\",          &encryptwallet,          false,     false,      true },\n-    { \"validateaddress\",        &validateaddress,        true,      false,      false },\n     { \"getbalance\",             &getbalance,             false,     false,      true },\n     { \"move\",                   &movecmd,                false,     false,      true },\n     { \"sendfrom\",               &sendfrom,               false,     false,      true },\n     { \"sendmany\",               &sendmany,               false,     false,      true },\n     { \"addmultisigaddress\",     &addmultisigaddress,     false,     false,      true },\n-    { \"createmultisig\",         &createmultisig,         true,      true ,      false },\n     { \"gettransaction\",         &gettransaction,         false,     false,      true },\n     { \"listtransactions\",       &listtransactions,       false,     false,      true },\n     { \"listaddressgroupings\",   &listaddressgroupings,   false,     false,      true },\n     { \"signmessage\",            &signmessage,            false,     false,      true },\n-    { \"verifymessage\",          &verifymessage,          false,     false,      false },\n     { \"listaccounts\",           &listaccounts,           false,     false,      true },\n     { \"listsinceblock\",         &listsinceblock,         false,     false,      true },\n     { \"dumpprivkey\",            &dumpprivkey,            true,      false,      true },\n@@ -294,6 +293,7 @@ static const CRPCCommand vRPCCommands[] =\n     { \"listunspent\",            &listunspent,            false,     false,      true },\n     { \"lockunspent\",            &lockunspent,            false,     false,      true },\n     { \"listlockunspent\",        &listlockunspent,        false,     false,      true },\n+    { \"settxfee\",               &settxfee,               false,     false,      true },\n \n     /* Wallet-enabled mining */\n     { \"getgenerate\",            &getgenerate,            true,      false,      false },"
      },
      {
        "sha": "32db0b46aa0ae01f3dcabf651db25b9c402fd3cd",
        "filename": "src/rpcwallet.cpp",
        "status": "modified",
        "additions": 27,
        "deletions": 232,
        "changes": 259,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/285cf7a1a6cb660b57cbc75f63e49736b51d705e/src/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/285cf7a1a6cb660b57cbc75f63e49736b51d705e/src/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.cpp?ref=285cf7a1a6cb660b57cbc75f63e49736b51d705e",
        "patch": "@@ -441,59 +441,6 @@ Value signmessage(const Array& params, bool fHelp)\n     return EncodeBase64(&vchSig[0], vchSig.size());\n }\n \n-Value verifymessage(const Array& params, bool fHelp)\n-{\n-    if (fHelp || params.size() != 3)\n-        throw runtime_error(\n-            \"verifymessage \\\"bitcoinaddress\\\" \\\"signature\\\" \\\"message\\\"\\n\"\n-            \"\\nVerify a signed message\\n\"\n-            \"\\nArguments:\\n\"\n-            \"1. \\\"bitcoinaddress\\\"  (string, required) The bitcoin address to use for the signature.\\n\"\n-            \"2. \\\"signature\\\"       (string, required) The signature provided by the signer in base 64 encoding (see signmessage).\\n\"\n-            \"3. \\\"message\\\"         (string, required) The message that was signed.\\n\"\n-            \"\\nResult:\\n\"\n-            \"true|false   (boolean) If the signature is verified or not.\\n\"\n-            \"\\nExamples:\\n\"\n-            \"\\nUnlock the wallet for 30 seconds\\n\"\n-            + HelpExampleCli(\"walletpassphrase\", \"\\\"mypassphrase\\\" 30\") +\n-            \"\\nCreate the signature\\n\"\n-            + HelpExampleCli(\"signmessage\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\" \\\"my message\\\"\") +\n-            \"\\nVerify the signature\\n\"\n-            + HelpExampleCli(\"verifymessage\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\" \\\"signature\\\" \\\"my message\\\"\") +\n-            \"\\nAs json rpc\\n\"\n-            + HelpExampleRpc(\"verifymessage\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\", \\\"signature\\\", \\\"my message\\\"\")\n-        );\n-\n-    string strAddress  = params[0].get_str();\n-    string strSign     = params[1].get_str();\n-    string strMessage  = params[2].get_str();\n-\n-    CBitcoinAddress addr(strAddress);\n-    if (!addr.IsValid())\n-        throw JSONRPCError(RPC_TYPE_ERROR, \"Invalid address\");\n-\n-    CKeyID keyID;\n-    if (!addr.GetKeyID(keyID))\n-        throw JSONRPCError(RPC_TYPE_ERROR, \"Address does not refer to key\");\n-\n-    bool fInvalid = false;\n-    vector<unsigned char> vchSig = DecodeBase64(strSign.c_str(), &fInvalid);\n-\n-    if (fInvalid)\n-        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Malformed base64 encoding\");\n-\n-    CHashWriter ss(SER_GETHASH, 0);\n-    ss << strMessageMagic;\n-    ss << strMessage;\n-\n-    CPubKey pubkey;\n-    if (!pubkey.RecoverCompact(ss.GetHash(), vchSig))\n-        return false;\n-\n-    return (pubkey.GetID() == keyID);\n-}\n-\n-\n Value getreceivedbyaddress(const Array& params, bool fHelp)\n {\n     if (fHelp || params.size() < 1 || params.size() > 2)\n@@ -907,61 +854,8 @@ Value sendmany(const Array& params, bool fHelp)\n     return wtx.GetHash().GetHex();\n }\n \n-//\n-// Used by addmultisigaddress / createmultisig:\n-//\n-static CScript _createmultisig(const Array& params)\n-{\n-    int nRequired = params[0].get_int();\n-    const Array& keys = params[1].get_array();\n-\n-    // Gather public keys\n-    if (nRequired < 1)\n-        throw runtime_error(\"a multisignature address must require at least one key to redeem\");\n-    if ((int)keys.size() < nRequired)\n-        throw runtime_error(\n-            strprintf(\"not enough keys supplied \"\n-                      \"(got %\"PRIszu\" keys, but need at least %d to redeem)\", keys.size(), nRequired));\n-    std::vector<CPubKey> pubkeys;\n-    pubkeys.resize(keys.size());\n-    for (unsigned int i = 0; i < keys.size(); i++)\n-    {\n-        const std::string& ks = keys[i].get_str();\n-\n-        // Case 1: Bitcoin address and we have full public key:\n-        CBitcoinAddress address(ks);\n-        if (pwalletMain && address.IsValid())\n-        {\n-            CKeyID keyID;\n-            if (!address.GetKeyID(keyID))\n-                throw runtime_error(\n-                    strprintf(\"%s does not refer to a key\",ks.c_str()));\n-            CPubKey vchPubKey;\n-            if (!pwalletMain->GetPubKey(keyID, vchPubKey))\n-                throw runtime_error(\n-                    strprintf(\"no full public key for address %s\",ks.c_str()));\n-            if (!vchPubKey.IsFullyValid())\n-                throw runtime_error(\" Invalid public key: \"+ks);\n-            pubkeys[i] = vchPubKey;\n-        }\n-\n-        // Case 2: hex public key\n-        else if (IsHex(ks))\n-        {\n-            CPubKey vchPubKey(ParseHex(ks));\n-            if (!vchPubKey.IsFullyValid())\n-                throw runtime_error(\" Invalid public key: \"+ks);\n-            pubkeys[i] = vchPubKey;\n-        }\n-        else\n-        {\n-            throw runtime_error(\" Invalid public key: \"+ks);\n-        }\n-    }\n-    CScript result;\n-    result.SetMultisig(nRequired, pubkeys);\n-    return result;\n-}\n+// Defined in rpcmisc.cpp\n+extern CScript _createmultisig(const Array& params);\n \n Value addmultisigaddress(const Array& params, bool fHelp)\n {\n@@ -1006,49 +900,6 @@ Value addmultisigaddress(const Array& params, bool fHelp)\n     return CBitcoinAddress(innerID).ToString();\n }\n \n-Value createmultisig(const Array& params, bool fHelp)\n-{\n-    if (fHelp || params.size() < 2 || params.size() > 2)\n-    {\n-        string msg = \"createmultisig nrequired [\\\"key\\\",...]\\n\"\n-            \"\\nCreates a multi-signature address with n signature of m keys required.\\n\"\n-            \"It returns a json object with the address and redeemScript.\\n\"\n-\n-            \"\\nArguments:\\n\"\n-            \"1. nrequired      (numeric, required) The number of required signatures out of the n keys or addresses.\\n\"\n-            \"2. \\\"keys\\\"       (string, required) A json array of keys which are bitcoin addresses or hex-encoded public keys\\n\"\n-            \"     [\\n\"\n-            \"       \\\"key\\\"    (string) bitcoin address or hex-encoded public key\\n\"\n-            \"       ,...\\n\"\n-            \"     ]\\n\"\n-\n-            \"\\nResult:\\n\"\n-            \"{\\n\"\n-            \"  \\\"address\\\":\\\"multisigaddress\\\",  (string) The value of the new multisig address.\\n\"\n-            \"  \\\"redeemScript\\\":\\\"script\\\"       (string) The string value of the hex-encoded redemption script.\\n\"\n-            \"}\\n\"\n-\n-            \"\\nExamples:\\n\"\n-            \"\\nCreate a multisig address from 2 addresses\\n\"\n-            + HelpExampleCli(\"createmultisig\", \"2 \\\"[\\\\\\\"16sSauSf5pF2UkUwvKGq4qjNRzBZYqgEL5\\\\\\\",\\\\\\\"171sgjn4YtPu27adkKGrdDwzRTxnRkBfKV\\\\\\\"]\\\"\") +\n-            \"\\nAs a json rpc call\\n\"\n-            + HelpExampleRpc(\"icreatemultisig\", \"2, \\\"[\\\\\\\"16sSauSf5pF2UkUwvKGq4qjNRzBZYqgEL5\\\\\\\",\\\\\\\"171sgjn4YtPu27adkKGrdDwzRTxnRkBfKV\\\\\\\"]\\\"\")\n-        ;\n-        throw runtime_error(msg);\n-    }\n-\n-    // Construct using pay-to-script-hash:\n-    CScript inner = _createmultisig(params);\n-    CScriptID innerID = inner.GetID();\n-    CBitcoinAddress address(innerID);\n-\n-    Object result;\n-    result.push_back(Pair(\"address\", address.ToString()));\n-    result.push_back(Pair(\"redeemScript\", HexStr(inner.begin(), inner.end())));\n-\n-    return result;\n-}\n-\n \n struct tallyitem\n {\n@@ -1862,87 +1713,6 @@ Value encryptwallet(const Array& params, bool fHelp)\n     return \"wallet encrypted; Bitcoin server stopping, restart to run with encrypted wallet. The keypool has been flushed, you need to make a new backup.\";\n }\n \n-class DescribeAddressVisitor : public boost::static_visitor<Object>\n-{\n-public:\n-    Object operator()(const CNoDestination &dest) const { return Object(); }\n-\n-    Object operator()(const CKeyID &keyID) const {\n-        Object obj;\n-        CPubKey vchPubKey;\n-        pwalletMain->GetPubKey(keyID, vchPubKey);\n-        obj.push_back(Pair(\"isscript\", false));\n-        obj.push_back(Pair(\"pubkey\", HexStr(vchPubKey)));\n-        obj.push_back(Pair(\"iscompressed\", vchPubKey.IsCompressed()));\n-        return obj;\n-    }\n-\n-    Object operator()(const CScriptID &scriptID) const {\n-        Object obj;\n-        obj.push_back(Pair(\"isscript\", true));\n-        CScript subscript;\n-        pwalletMain->GetCScript(scriptID, subscript);\n-        std::vector<CTxDestination> addresses;\n-        txnouttype whichType;\n-        int nRequired;\n-        ExtractDestinations(subscript, whichType, addresses, nRequired);\n-        obj.push_back(Pair(\"script\", GetTxnOutputType(whichType)));\n-        obj.push_back(Pair(\"hex\", HexStr(subscript.begin(), subscript.end())));\n-        Array a;\n-        BOOST_FOREACH(const CTxDestination& addr, addresses)\n-            a.push_back(CBitcoinAddress(addr).ToString());\n-        obj.push_back(Pair(\"addresses\", a));\n-        if (whichType == TX_MULTISIG)\n-            obj.push_back(Pair(\"sigsrequired\", nRequired));\n-        return obj;\n-    }\n-};\n-\n-Value validateaddress(const Array& params, bool fHelp)\n-{\n-    if (fHelp || params.size() != 1)\n-        throw runtime_error(\n-            \"validateaddress \\\"bitcoinaddress\\\"\\n\"\n-            \"\\nReturn information about the given bitcoin address.\\n\"\n-            \"\\nArguments:\\n\"\n-            \"1. \\\"bitcoinaddress\\\"     (string, required) The bitcoin address to validate\\n\"\n-            \"\\nResult:\\n\"\n-            \"{\\n\"\n-            \"  \\\"isvalid\\\" : true|false,         (boolean) If the address is valid or not. If not, this is the only property returned.\\n\"\n-            \"  \\\"address\\\" : \\\"bitcoinaddress\\\", (string) The bitcoin address validated\\n\"\n-            \"  \\\"ismine\\\" : true|false,          (boolean) If the address is yours or not\\n\"\n-            \"  \\\"isscript\\\" : true|false,        (boolean) If the key is a script\\n\"\n-            \"  \\\"pubkey\\\" : \\\"publickeyhex\\\",    (string) The hex value of the raw public key\\n\"\n-            \"  \\\"iscompressed\\\" : true|false,    (boolean) If the address is compressed\\n\"\n-            \"  \\\"account\\\" : \\\"account\\\"         (string) The account associated with the address, \\\"\\\" is the default account\\n\"\n-            \"}\\n\"\n-            \"\\nExamples:\\n\"\n-            + HelpExampleCli(\"validateaddress\", \"\\\"1PSSGeFHDnKNxiEyFrD1wcEaHr9hrQDDWc\\\"\")\n-            + HelpExampleRpc(\"validateaddress\", \"\\\"1PSSGeFHDnKNxiEyFrD1wcEaHr9hrQDDWc\\\"\")\n-        );\n-\n-    CBitcoinAddress address(params[0].get_str());\n-    bool isValid = address.IsValid();\n-\n-    Object ret;\n-    ret.push_back(Pair(\"isvalid\", isValid));\n-    if (isValid)\n-    {\n-        CTxDestination dest = address.Get();\n-        string currentAddress = address.ToString();\n-        ret.push_back(Pair(\"address\", currentAddress));\n-        bool fMine = pwalletMain ? IsMine(*pwalletMain, dest) : false;\n-        ret.push_back(Pair(\"ismine\", fMine));\n-        if (fMine) {\n-            Object detail = boost::apply_visitor(DescribeAddressVisitor(), dest);\n-            ret.insert(ret.end(), detail.begin(), detail.end());\n-        }\n-        if (pwalletMain && pwalletMain->mapAddressBook.count(dest))\n-            ret.push_back(Pair(\"account\", pwalletMain->mapAddressBook[dest].name));\n-    }\n-    return ret;\n-}\n-\n Value lockunspent(const Array& params, bool fHelp)\n {\n     if (fHelp || params.size() < 1 || params.size() > 2)\n@@ -2066,3 +1836,28 @@ Value listlockunspent(const Array& params, bool fHelp)\n     return ret;\n }\n \n+Value settxfee(const Array& params, bool fHelp)\n+{\n+    if (fHelp || params.size() < 1 || params.size() > 1)\n+        throw runtime_error(\n+            \"settxfee amount\\n\"\n+            \"\\nSet the transaction fee. 'amount' is a real and is rounded to the nearest 0.00000001\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. amount         (numeric, required) The transaction fee in btc rounded to the nearest 0.00000001\\n\"\n+            \"\\nResult\\n\"\n+            \"true|false        (boolean) Returns true if successful\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"settxfee\", \"0.00001\")\n+            + HelpExampleRpc(\"settxfee\", \"0.00001\")\n+        );\n+\n+    // Amount\n+    int64_t nAmount = 0;\n+    if (params[0].get_real() != 0.0)\n+        nAmount = AmountFromValue(params[0]);        // rejects 0.0 amounts\n+\n+    nTransactionFee = nAmount;\n+    return true;\n+}\n+\n+"
      },
      {
        "sha": "76a83082aeb6bf26d0303e73f92eb95862379958",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/285cf7a1a6cb660b57cbc75f63e49736b51d705e/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/285cf7a1a6cb660b57cbc75f63e49736b51d705e/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=285cf7a1a6cb660b57cbc75f63e49736b51d705e",
        "patch": "@@ -16,6 +16,8 @@\n \n using namespace std;\n \n+// Settings\n+int64_t nTransactionFee = 0;\n \n //////////////////////////////////////////////////////////////////////////////\n //"
      },
      {
        "sha": "99f6293b1e853786cb87df2c936d1d8938e9f59c",
        "filename": "src/wallet.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/285cf7a1a6cb660b57cbc75f63e49736b51d705e/src/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/285cf7a1a6cb660b57cbc75f63e49736b51d705e/src/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.h?ref=285cf7a1a6cb660b57cbc75f63e49736b51d705e",
        "patch": "@@ -23,6 +23,9 @@\n #include <utility>\n #include <vector>\n \n+// Settings\n+extern int64_t nTransactionFee;\n+\n class CAccountingEntry;\n class CCoinControl;\n class COutput;"
      }
    ]
  },
  {
    "sha": "df840de5daef60a253e4d84d14ff72bb7188a6c0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkZjg0MGRlNWRhZWY2MGEyNTNlNGQ4NGQxNGZmNzJiYjcxODhhNmMw",
    "commit": {
      "author": {
        "name": "Thomas Holenstein",
        "email": "thomas.holenstein@gmail.com",
        "date": "2013-12-18T19:46:43Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-19T09:46:41Z"
      },
      "message": "Make bitcoin compile without wallet if \"db_cxx.h\" is not present\n\nMoved includes of \"db.h\" into #ifdef ENABLE_WALLET blocks or remove\nthem.",
      "tree": {
        "sha": "c9953453f4edcce02a5d18685ffd66e6e489693b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c9953453f4edcce02a5d18685ffd66e6e489693b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/df840de5daef60a253e4d84d14ff72bb7188a6c0",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJSssCEAAoJEHSBCwEjRsmmGqsH/0+zeHTWZLuytQpA+telBFMz\npV/pw/XY3DITESdT7SlxCGNKn67WXGrWbqnWqV84EkFj0s/ExP8LG8O9Ky6HLco1\nqnwhR/NTJWfIJhP8X7Q/ZudlK4QZrkFv20fI0AeKFFVc8DS9iZ5om86De0/ddma3\nAILA+GGu9R20cxZrM6JAs2RT6JHi6m6hDl2tuw/FhaF+dlFZDcvlmQhvrgNKUWa8\nIIuOJbh+4nm5rF2d5dz/lfsaAjyLPLIULylnfAtoKocqoyur/aIjtoojRIwAR0/m\nzXCbRPWdagZ5MyHf7rcc4iH35Z7HSVQLqqwV6OInbpxzAZNE90i8+ogt801ryHk=\n=K+mX\n-----END PGP SIGNATURE-----",
        "payload": "tree c9953453f4edcce02a5d18685ffd66e6e489693b\nparent 285cf7a1a6cb660b57cbc75f63e49736b51d705e\nauthor Thomas Holenstein <thomas.holenstein@gmail.com> 1387396003 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1387446401 +0100\n\nMake bitcoin compile without wallet if \"db_cxx.h\" is not present\n\nMoved includes of \"db.h\" into #ifdef ENABLE_WALLET blocks or remove\nthem.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/df840de5daef60a253e4d84d14ff72bb7188a6c0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/df840de5daef60a253e4d84d14ff72bb7188a6c0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/df840de5daef60a253e4d84d14ff72bb7188a6c0/comments",
    "author": {
      "login": "tholenst",
      "id": 4568264,
      "node_id": "MDQ6VXNlcjQ1NjgyNjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4568264?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tholenst",
      "html_url": "https://github.com/tholenst",
      "followers_url": "https://api.github.com/users/tholenst/followers",
      "following_url": "https://api.github.com/users/tholenst/following{/other_user}",
      "gists_url": "https://api.github.com/users/tholenst/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tholenst/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tholenst/subscriptions",
      "organizations_url": "https://api.github.com/users/tholenst/orgs",
      "repos_url": "https://api.github.com/users/tholenst/repos",
      "events_url": "https://api.github.com/users/tholenst/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tholenst/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "285cf7a1a6cb660b57cbc75f63e49736b51d705e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/285cf7a1a6cb660b57cbc75f63e49736b51d705e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/285cf7a1a6cb660b57cbc75f63e49736b51d705e"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 7,
      "deletions": 7
    },
    "files": [
      {
        "sha": "28f6e08f9a8967cd60ca6c7d2f8614ad269b9dbb",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df840de5daef60a253e4d84d14ff72bb7188a6c0/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df840de5daef60a253e4d84d14ff72bb7188a6c0/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=df840de5daef60a253e4d84d14ff72bb7188a6c0",
        "patch": "@@ -10,7 +10,6 @@\n #include \"init.h\"\n \n #include \"addrman.h\"\n-#include \"db.h\"\n #include \"checkpoints.h\"\n #include \"main.h\"\n #include \"miner.h\"\n@@ -20,6 +19,7 @@\n #include \"ui_interface.h\"\n #include \"util.h\"\n #ifdef ENABLE_WALLET\n+#include \"db.h\"\n #include \"wallet.h\"\n #include \"walletdb.h\"\n #endif"
      },
      {
        "sha": "21a9fa256b606c9ca6de8328ec4a057217c00f6b",
        "filename": "src/miner.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df840de5daef60a253e4d84d14ff72bb7188a6c0/src/miner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df840de5daef60a253e4d84d14ff72bb7188a6c0/src/miner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.cpp?ref=df840de5daef60a253e4d84d14ff72bb7188a6c0",
        "patch": "@@ -8,8 +8,9 @@\n #include \"core.h\"\n #include \"main.h\"\n #include \"net.h\"\n+#ifdef ENABLE_WALLET\n #include \"wallet.h\"\n-\n+#endif\n //////////////////////////////////////////////////////////////////////////////\n //\n // BitcoinMiner"
      },
      {
        "sha": "ab39be60b5fc3915dcd43799c0cd0dcff1ae3912",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df840de5daef60a253e4d84d14ff72bb7188a6c0/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df840de5daef60a253e4d84d14ff72bb7188a6c0/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=df840de5daef60a253e4d84d14ff72bb7188a6c0",
        "patch": "@@ -12,7 +12,6 @@\n #include \"addrman.h\"\n #include \"chainparams.h\"\n #include \"core.h\"\n-#include \"db.h\"\n #include \"ui_interface.h\"\n \n #ifdef WIN32"
      },
      {
        "sha": "1a8462fdea5ecdf883c78da72bffe1642600a864",
        "filename": "src/rpcmining.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df840de5daef60a253e4d84d14ff72bb7188a6c0/src/rpcmining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df840de5daef60a253e4d84d14ff72bb7188a6c0/src/rpcmining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcmining.cpp?ref=df840de5daef60a253e4d84d14ff72bb7188a6c0",
        "patch": "@@ -5,13 +5,14 @@\n \n #include \"rpcserver.h\"\n #include \"chainparams.h\"\n-#include \"db.h\"\n #include \"init.h\"\n #include \"net.h\"\n #include \"main.h\"\n #include \"miner.h\"\n+#ifdef ENABLE_WALLET\n+#include \"db.h\"\n #include \"wallet.h\"\n-\n+#endif\n #include <stdint.h>\n \n #include \"json/json_spirit_utils.h\""
      },
      {
        "sha": "8e3091d5555506d509545d29101daa0b05d9224e",
        "filename": "src/test/miner_tests.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df840de5daef60a253e4d84d14ff72bb7188a6c0/src/test/miner_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df840de5daef60a253e4d84d14ff72bb7188a6c0/src/test/miner_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/miner_tests.cpp?ref=df840de5daef60a253e4d84d14ff72bb7188a6c0",
        "patch": "@@ -4,7 +4,6 @@\n #include \"miner.h\"\n #include \"uint256.h\"\n #include \"util.h\"\n-#include \"wallet.h\"\n \n #include <boost/test/unit_test.hpp>\n "
      },
      {
        "sha": "667bdfb62eeb847184065a91a3d4c1c40bc26f7a",
        "filename": "src/test/test_bitcoin.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df840de5daef60a253e4d84d14ff72bb7188a6c0/src/test/test_bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df840de5daef60a253e4d84d14ff72bb7188a6c0/src/test/test_bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/test_bitcoin.cpp?ref=df840de5daef60a253e4d84d14ff72bb7188a6c0",
        "patch": "@@ -2,12 +2,12 @@\n \n \n \n-#include \"db.h\"\n #include \"main.h\"\n #include \"txdb.h\"\n #include \"ui_interface.h\"\n #include \"util.h\"\n #ifdef ENABLE_WALLET\n+#include \"db.h\"\n #include \"wallet.h\"\n #endif\n "
      }
    ]
  },
  {
    "sha": "d2b6de031f1c56e92c14ae865c066abb90b3f2b8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkMmI2ZGUwMzFmMWM1NmU5MmMxNGFlODY1YzA2NmFiYjkwYjNmMmI4",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-20T08:33:44Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-20T08:33:44Z"
      },
      "message": "qt: Make sure overviewpage button is pressed at startup\n\nDue to walletframe changes, the overview page button is no longer\nautomatically selected at startup even though the overview page is shown.",
      "tree": {
        "sha": "b55d543902b106552c49b4f3fa16dff760ea40b9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b55d543902b106552c49b4f3fa16dff760ea40b9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d2b6de031f1c56e92c14ae865c066abb90b3f2b8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d2b6de031f1c56e92c14ae865c066abb90b3f2b8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d2b6de031f1c56e92c14ae865c066abb90b3f2b8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d2b6de031f1c56e92c14ae865c066abb90b3f2b8/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "df840de5daef60a253e4d84d14ff72bb7188a6c0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/df840de5daef60a253e4d84d14ff72bb7188a6c0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/df840de5daef60a253e4d84d14ff72bb7188a6c0"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 3,
      "deletions": 0
    },
    "files": [
      {
        "sha": "2d0f51a3fbf52aa1656de8042504d6422103c262",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d2b6de031f1c56e92c14ae865c066abb90b3f2b8/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d2b6de031f1c56e92c14ae865c066abb90b3f2b8/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=d2b6de031f1c56e92c14ae865c066abb90b3f2b8",
        "patch": "@@ -215,6 +215,8 @@ void BitcoinGUI::createActions(bool fIsTestnet)\n     historyAction->setShortcut(QKeySequence(Qt::ALT + Qt::Key_4));\n     tabGroup->addAction(historyAction);\n \n+    // These showNormalIfMinimized are needed because Send Coins and Receive Coins\n+    // can be triggered from the tray menu, and need to show the GUI to be useful.\n     connect(overviewAction, SIGNAL(triggered()), this, SLOT(showNormalIfMinimized()));\n     connect(overviewAction, SIGNAL(triggered()), this, SLOT(gotoOverviewPage()));\n     connect(sendCoinsAction, SIGNAL(triggered()), this, SLOT(showNormalIfMinimized()));\n@@ -331,6 +333,7 @@ void BitcoinGUI::createToolBars()\n     toolbar->addAction(sendCoinsAction);\n     toolbar->addAction(receiveCoinsAction);\n     toolbar->addAction(historyAction);\n+    overviewAction->setChecked(true);\n }\n \n void BitcoinGUI::setClientModel(ClientModel *clientModel)"
      }
    ]
  },
  {
    "sha": "cc661b4d7fbcd235a015003753c551741236e509",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjYzY2MWI0ZDdmYmNkMjM1YTAxNTAwMzc1M2M1NTE3NDEyMzZlNTA5",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-20T08:35:03Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-20T08:35:10Z"
      },
      "message": "Merge pull request #3438\n\nd2b6de0 qt: Make sure overviewpage button is pressed at startup (Wladimir J. van der Laan)",
      "tree": {
        "sha": "b55d543902b106552c49b4f3fa16dff760ea40b9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b55d543902b106552c49b4f3fa16dff760ea40b9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cc661b4d7fbcd235a015003753c551741236e509",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJStAE+AAoJEHSBCwEjRsmmr1YIAJUKm6e3kCcGABNlP5sBT6hY\numuK81nbn+X9TB/R6ln4/xmHpOIPKadfnY9BJy4zQ/EPAn16grAu54gmknY+faYw\nE2I5BptfPi5iUvKOOlPh6KGijrrZLuBs8s21qr1ChjfVc0+GTQTv8r0pNKUXJefO\npbDJgXaOgbGXmfFIGneLEzETHmZXq4nejYLxVf+blI8bjFiZQPT9+lcw4u5+ju2+\n+KRy5UoaCj7I8pI9T2m1Js+qGv9/a9L6tXwboJL4yywmb3dce8iNGUBG41iNCmO/\nCer4OyiB+2e92PgSUsmb4SDkI/wLgn2bXydpy8+HsceT5X9ebrsnzwpqm3OlL04=\n=r/j5\n-----END PGP SIGNATURE-----",
        "payload": "tree b55d543902b106552c49b4f3fa16dff760ea40b9\nparent df840de5daef60a253e4d84d14ff72bb7188a6c0\nparent d2b6de031f1c56e92c14ae865c066abb90b3f2b8\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1387528503 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1387528510 +0100\n\nMerge pull request #3438\n\nd2b6de0 qt: Make sure overviewpage button is pressed at startup (Wladimir J. van der Laan)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cc661b4d7fbcd235a015003753c551741236e509",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cc661b4d7fbcd235a015003753c551741236e509",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cc661b4d7fbcd235a015003753c551741236e509/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "df840de5daef60a253e4d84d14ff72bb7188a6c0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/df840de5daef60a253e4d84d14ff72bb7188a6c0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/df840de5daef60a253e4d84d14ff72bb7188a6c0"
      },
      {
        "sha": "d2b6de031f1c56e92c14ae865c066abb90b3f2b8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d2b6de031f1c56e92c14ae865c066abb90b3f2b8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d2b6de031f1c56e92c14ae865c066abb90b3f2b8"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 3,
      "deletions": 0
    },
    "files": [
      {
        "sha": "2d0f51a3fbf52aa1656de8042504d6422103c262",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cc661b4d7fbcd235a015003753c551741236e509/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cc661b4d7fbcd235a015003753c551741236e509/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=cc661b4d7fbcd235a015003753c551741236e509",
        "patch": "@@ -215,6 +215,8 @@ void BitcoinGUI::createActions(bool fIsTestnet)\n     historyAction->setShortcut(QKeySequence(Qt::ALT + Qt::Key_4));\n     tabGroup->addAction(historyAction);\n \n+    // These showNormalIfMinimized are needed because Send Coins and Receive Coins\n+    // can be triggered from the tray menu, and need to show the GUI to be useful.\n     connect(overviewAction, SIGNAL(triggered()), this, SLOT(showNormalIfMinimized()));\n     connect(overviewAction, SIGNAL(triggered()), this, SLOT(gotoOverviewPage()));\n     connect(sendCoinsAction, SIGNAL(triggered()), this, SLOT(showNormalIfMinimized()));\n@@ -331,6 +333,7 @@ void BitcoinGUI::createToolBars()\n     toolbar->addAction(sendCoinsAction);\n     toolbar->addAction(receiveCoinsAction);\n     toolbar->addAction(historyAction);\n+    overviewAction->setChecked(true);\n }\n \n void BitcoinGUI::setClientModel(ClientModel *clientModel)"
      }
    ]
  },
  {
    "sha": "2ea980a77cc28374a55aa1fdce953f9b570e0857",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyZWE5ODBhNzdjYzI4Mzc0YTU1YWExZmRjZTk1M2Y5YjU3MGUwODU3",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-18T08:45:36Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-20T10:18:50Z"
      },
      "message": "qt: Treat regtest as testnet\n\nNo need to do anything special in the GUI for regtest mode,\nbut do treat it at testnet not mainnet to prevent confusion.",
      "tree": {
        "sha": "d904a6f5126430fe329509904b2274b3c9dfa74f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d904a6f5126430fe329509904b2274b3c9dfa74f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2ea980a77cc28374a55aa1fdce953f9b570e0857",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2ea980a77cc28374a55aa1fdce953f9b570e0857",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2ea980a77cc28374a55aa1fdce953f9b570e0857",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2ea980a77cc28374a55aa1fdce953f9b570e0857/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "57fdd68aaccbc845e2efca3a7b535832132fcf43",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/57fdd68aaccbc845e2efca3a7b535832132fcf43",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/57fdd68aaccbc845e2efca3a7b535832132fcf43"
      }
    ],
    "stats": {
      "total": 55,
      "additions": 32,
      "deletions": 23
    },
    "files": [
      {
        "sha": "122cf9b0b2ef34b84913aaa5fd07a32e718c2007",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2ea980a77cc28374a55aa1fdce953f9b570e0857/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2ea980a77cc28374a55aa1fdce953f9b570e0857/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=2ea980a77cc28374a55aa1fdce953f9b570e0857",
        "patch": "@@ -197,9 +197,10 @@ int main(int argc, char *argv[])\n \n     // Application identification (must be set before OptionsModel is initialized,\n     // as it is used to locate QSettings)\n+    bool isaTestNet = TestNet() || RegTest();\n     QApplication::setOrganizationName(\"Bitcoin\");\n     QApplication::setOrganizationDomain(\"bitcoin.org\");\n-    if (TestNet()) // Separate UI settings for testnet\n+    if (isaTestNet) // Separate UI settings for testnets\n         QApplication::setApplicationName(\"Bitcoin-Qt-testnet\");\n     else\n         QApplication::setApplicationName(\"Bitcoin-Qt\");\n@@ -230,7 +231,7 @@ int main(int argc, char *argv[])\n     PaymentServer* paymentServer = new PaymentServer(&app);\n \n     // User language is set up: pick a data directory\n-    Intro::pickDataDirectory(TestNet());\n+    Intro::pickDataDirectory(isaTestNet);\n \n     // Install global event filter that makes sure that long tooltips can be word-wrapped\n     app.installEventFilter(new GUIUtil::ToolTipToRichTextFilter(TOOLTIP_WRAP_THRESHOLD, &app));\n@@ -258,7 +259,7 @@ int main(int argc, char *argv[])\n         return 1;\n     }\n \n-    SplashScreen splash(QPixmap(), 0);\n+    SplashScreen splash(QPixmap(), 0, isaTestNet);\n     if (GetBoolArg(\"-splash\", true) && !GetBoolArg(\"-min\", false))\n     {\n         splash.show();\n@@ -280,7 +281,7 @@ int main(int argc, char *argv[])\n \n         boost::thread_group threadGroup;\n \n-        BitcoinGUI window(TestNet(), 0);\n+        BitcoinGUI window(isaTestNet, 0);\n         guiref = &window;\n \n         QTimer* pollShutdownTimer = new QTimer(guiref);"
      },
      {
        "sha": "f273b9ea461e392b52663f642b80a68c70bb81ec",
        "filename": "src/qt/clientmodel.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 2,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2ea980a77cc28374a55aa1fdce953f9b570e0857/src/qt/clientmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2ea980a77cc28374a55aa1fdce953f9b570e0857/src/qt/clientmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.cpp?ref=2ea980a77cc28374a55aa1fdce953f9b570e0857",
        "patch": "@@ -123,9 +123,12 @@ void ClientModel::updateAlert(const QString &hash, int status)\n     emit alertsChanged(getStatusBarWarnings());\n }\n \n-bool ClientModel::isTestNet() const\n+QString ClientModel::getNetworkName() const\n {\n-    return TestNet();\n+    QString netname(QString::fromStdString(Params().DataDir()));\n+    if(netname.isEmpty())\n+        netname = \"main\";\n+    return netname;\n }\n \n bool ClientModel::inInitialBlockDownload() const"
      },
      {
        "sha": "ca735f14ce420ac400ebd498eade8a276b1bf9bb",
        "filename": "src/qt/clientmodel.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2ea980a77cc28374a55aa1fdce953f9b570e0857/src/qt/clientmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2ea980a77cc28374a55aa1fdce953f9b570e0857/src/qt/clientmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.h?ref=2ea980a77cc28374a55aa1fdce953f9b570e0857",
        "patch": "@@ -46,8 +46,8 @@ class ClientModel : public QObject\n     double getVerificationProgress() const;\n     QDateTime getLastBlockDate() const;\n \n-    //! Return true if client connected to testnet\n-    bool isTestNet() const;\n+    //! Return network (main, testnet3, regtest)\n+    QString getNetworkName() const;\n     //! Return true if core is doing initial block download\n     bool inInitialBlockDownload() const;\n     //! Return true if core is importing blocks"
      },
      {
        "sha": "69504f3159826da3302393c22f3ac475cc128982",
        "filename": "src/qt/forms/rpcconsole.ui",
        "status": "modified",
        "additions": 15,
        "deletions": 9,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2ea980a77cc28374a55aa1fdce953f9b570e0857/src/qt/forms/rpcconsole.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2ea980a77cc28374a55aa1fdce953f9b570e0857/src/qt/forms/rpcconsole.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/rpcconsole.ui?ref=2ea980a77cc28374a55aa1fdce953f9b570e0857",
        "patch": "@@ -172,14 +172,14 @@\n         </widget>\n        </item>\n        <item row=\"7\" column=\"0\">\n-        <widget class=\"QLabel\" name=\"label_7\">\n+        <widget class=\"QLabel\" name=\"label_8\">\n          <property name=\"text\">\n-          <string>Number of connections</string>\n+          <string>Name</string>\n          </property>\n         </widget>\n        </item>\n        <item row=\"7\" column=\"1\">\n-        <widget class=\"QLabel\" name=\"numberOfConnections\">\n+        <widget class=\"QLabel\" name=\"networkName\">\n          <property name=\"cursor\">\n           <cursorShape>IBeamCursor</cursorShape>\n          </property>\n@@ -195,19 +195,25 @@\n         </widget>\n        </item>\n        <item row=\"8\" column=\"0\">\n-        <widget class=\"QLabel\" name=\"label_8\">\n+        <widget class=\"QLabel\" name=\"label_7\">\n          <property name=\"text\">\n-          <string>On testnet</string>\n+          <string>Number of connections</string>\n          </property>\n         </widget>\n        </item>\n        <item row=\"8\" column=\"1\">\n-        <widget class=\"QCheckBox\" name=\"isTestNet\">\n-         <property name=\"enabled\">\n-          <bool>false</bool>\n+        <widget class=\"QLabel\" name=\"numberOfConnections\">\n+         <property name=\"cursor\">\n+          <cursorShape>IBeamCursor</cursorShape>\n          </property>\n          <property name=\"text\">\n-          <string/>\n+          <string>N/A</string>\n+         </property>\n+         <property name=\"textFormat\">\n+          <enum>Qt::PlainText</enum>\n+         </property>\n+         <property name=\"textInteractionFlags\">\n+          <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n          </property>\n         </widget>\n        </item>"
      },
      {
        "sha": "a8470572dde3c72bf75bf5292d85887967e9815f",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2ea980a77cc28374a55aa1fdce953f9b570e0857/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2ea980a77cc28374a55aa1fdce953f9b570e0857/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=2ea980a77cc28374a55aa1fdce953f9b570e0857",
        "patch": "@@ -284,7 +284,7 @@ void RPCConsole::setClientModel(ClientModel *model)\n         ui->buildDate->setText(model->formatBuildDate());\n         ui->startupTime->setText(model->formatClientStartupTime());\n \n-        ui->isTestNet->setChecked(model->isTestNet());\n+        ui->networkName->setText(model->getNetworkName());\n     }\n }\n "
      },
      {
        "sha": "6fb834c0455bb2868f5fb39a3fb0507b47c95d53",
        "filename": "src/qt/splashscreen.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 4,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2ea980a77cc28374a55aa1fdce953f9b570e0857/src/qt/splashscreen.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2ea980a77cc28374a55aa1fdce953f9b570e0857/src/qt/splashscreen.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/splashscreen.cpp?ref=2ea980a77cc28374a55aa1fdce953f9b570e0857",
        "patch": "@@ -4,14 +4,13 @@\n \n #include \"splashscreen.h\"\n \n-#include \"chainparams.h\"\n #include \"clientversion.h\"\n #include \"util.h\"\n \n #include <QApplication>\n #include <QPainter>\n \n-SplashScreen::SplashScreen(const QPixmap &pixmap, Qt::WindowFlags f) :\n+SplashScreen::SplashScreen(const QPixmap &pixmap, Qt::WindowFlags f, bool isTestNet) :\n     QSplashScreen(pixmap, f)\n {\n     // set reference point, paddings\n@@ -32,7 +31,7 @@ SplashScreen::SplashScreen(const QPixmap &pixmap, Qt::WindowFlags f) :\n \n     // load the bitmap for writing some text over it\n     QPixmap newPixmap;\n-    if(TestNet()) {\n+    if(isTestNet) {\n         newPixmap     = QPixmap(\":/images/splash_testnet\");\n     }\n     else {\n@@ -72,7 +71,7 @@ SplashScreen::SplashScreen(const QPixmap &pixmap, Qt::WindowFlags f) :\n     pixPaint.drawText(newPixmap.width()-titleTextWidth-paddingRight,paddingTop+titleCopyrightVSpace,copyrightText);\n \n     // draw testnet string if testnet is on\n-    if(TestNet()) {\n+    if(isTestNet) {\n         QFont boldFont = QFont(font, 10*fontFactor);\n         boldFont.setWeight(QFont::Bold);\n         pixPaint.setFont(boldFont);"
      },
      {
        "sha": "070e376c958c78804790839f1234431c884bfc5d",
        "filename": "src/qt/splashscreen.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2ea980a77cc28374a55aa1fdce953f9b570e0857/src/qt/splashscreen.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2ea980a77cc28374a55aa1fdce953f9b570e0857/src/qt/splashscreen.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/splashscreen.h?ref=2ea980a77cc28374a55aa1fdce953f9b570e0857",
        "patch": "@@ -14,7 +14,7 @@ class SplashScreen : public QSplashScreen\n     Q_OBJECT\n \n public:\n-    explicit SplashScreen(const QPixmap &pixmap = QPixmap(), Qt::WindowFlags f = 0);\n+    explicit SplashScreen(const QPixmap &pixmap, Qt::WindowFlags f, bool isTestNet);\n };\n \n #endif // SPLASHSCREEN_H"
      }
    ]
  },
  {
    "sha": "326b5bb9d0e371e7636d1484b9b006e766fd4af0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozMjZiNWJiOWQwZTM3MWU3NjM2ZDE0ODRiOWIwMDZlNzY2ZmQ0YWYw",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-20T10:20:01Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-20T10:20:36Z"
      },
      "message": "Merge pull request #3437\n\n2ea980a qt: Treat regtest as testnet (Wladimir J. van der Laan)",
      "tree": {
        "sha": "47cfc28f1bffab7434f5dace04d5ec176b1e6cd2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/47cfc28f1bffab7434f5dace04d5ec176b1e6cd2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/326b5bb9d0e371e7636d1484b9b006e766fd4af0",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJStBn0AAoJEHSBCwEjRsmmpyoIAJ0dEG19KLPhg95U5wbcBygs\nM5uAd+5cHR12gamk/bxwrmjxnzQOPOWrB/uRwn3cCFbOSPEIjYlZMuCt7wy0BN9R\nHO4hZpTOmPyUITG7XdEc4kaRJm4jLUUxKQrC80Ja4J3XbjMJhw1UE8Wiw9ZrHeMH\ndQWAy56XMKDoZYR/ze/hVo9+rM/fwKbbAbjsK2LFyJ9au8eX01GVBb5YV8UA9049\n/7gq28z8VgeVKGpm61IYZEmjtSn79wOIcCNmg1VS7PJYesS4LtxT+GMgDI+lO50R\nITV6JQWkemCT+rQD9fMrKpXJvod9uL9APnvr7GrBf5rVSJOW2ZHBZWifH9JtXp8=\n=4YDa\n-----END PGP SIGNATURE-----",
        "payload": "tree 47cfc28f1bffab7434f5dace04d5ec176b1e6cd2\nparent cc661b4d7fbcd235a015003753c551741236e509\nparent 2ea980a77cc28374a55aa1fdce953f9b570e0857\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1387534801 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1387534836 +0100\n\nMerge pull request #3437\n\n2ea980a qt: Treat regtest as testnet (Wladimir J. van der Laan)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/326b5bb9d0e371e7636d1484b9b006e766fd4af0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/326b5bb9d0e371e7636d1484b9b006e766fd4af0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/326b5bb9d0e371e7636d1484b9b006e766fd4af0/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cc661b4d7fbcd235a015003753c551741236e509",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cc661b4d7fbcd235a015003753c551741236e509",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cc661b4d7fbcd235a015003753c551741236e509"
      },
      {
        "sha": "2ea980a77cc28374a55aa1fdce953f9b570e0857",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2ea980a77cc28374a55aa1fdce953f9b570e0857",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2ea980a77cc28374a55aa1fdce953f9b570e0857"
      }
    ],
    "stats": {
      "total": 55,
      "additions": 32,
      "deletions": 23
    },
    "files": [
      {
        "sha": "657b42d16a8c717592484f8052a9ea36896bd7fa",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/326b5bb9d0e371e7636d1484b9b006e766fd4af0/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/326b5bb9d0e371e7636d1484b9b006e766fd4af0/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=326b5bb9d0e371e7636d1484b9b006e766fd4af0",
        "patch": "@@ -198,9 +198,10 @@ int main(int argc, char *argv[])\n \n     // Application identification (must be set before OptionsModel is initialized,\n     // as it is used to locate QSettings)\n+    bool isaTestNet = TestNet() || RegTest();\n     QApplication::setOrganizationName(\"Bitcoin\");\n     QApplication::setOrganizationDomain(\"bitcoin.org\");\n-    if (TestNet()) // Separate UI settings for testnet\n+    if (isaTestNet) // Separate UI settings for testnets\n         QApplication::setApplicationName(\"Bitcoin-Qt-testnet\");\n     else\n         QApplication::setApplicationName(\"Bitcoin-Qt\");\n@@ -231,7 +232,7 @@ int main(int argc, char *argv[])\n     PaymentServer* paymentServer = new PaymentServer(&app);\n \n     // User language is set up: pick a data directory\n-    Intro::pickDataDirectory(TestNet());\n+    Intro::pickDataDirectory(isaTestNet);\n \n     // Install global event filter that makes sure that long tooltips can be word-wrapped\n     app.installEventFilter(new GUIUtil::ToolTipToRichTextFilter(TOOLTIP_WRAP_THRESHOLD, &app));\n@@ -259,7 +260,7 @@ int main(int argc, char *argv[])\n         return 1;\n     }\n \n-    SplashScreen splash(QPixmap(), 0);\n+    SplashScreen splash(QPixmap(), 0, isaTestNet);\n     if (GetBoolArg(\"-splash\", true) && !GetBoolArg(\"-min\", false))\n     {\n         splash.show();\n@@ -281,7 +282,7 @@ int main(int argc, char *argv[])\n \n         boost::thread_group threadGroup;\n \n-        BitcoinGUI window(TestNet(), 0);\n+        BitcoinGUI window(isaTestNet, 0);\n         guiref = &window;\n \n         QTimer* pollShutdownTimer = new QTimer(guiref);"
      },
      {
        "sha": "f273b9ea461e392b52663f642b80a68c70bb81ec",
        "filename": "src/qt/clientmodel.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 2,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/326b5bb9d0e371e7636d1484b9b006e766fd4af0/src/qt/clientmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/326b5bb9d0e371e7636d1484b9b006e766fd4af0/src/qt/clientmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.cpp?ref=326b5bb9d0e371e7636d1484b9b006e766fd4af0",
        "patch": "@@ -123,9 +123,12 @@ void ClientModel::updateAlert(const QString &hash, int status)\n     emit alertsChanged(getStatusBarWarnings());\n }\n \n-bool ClientModel::isTestNet() const\n+QString ClientModel::getNetworkName() const\n {\n-    return TestNet();\n+    QString netname(QString::fromStdString(Params().DataDir()));\n+    if(netname.isEmpty())\n+        netname = \"main\";\n+    return netname;\n }\n \n bool ClientModel::inInitialBlockDownload() const"
      },
      {
        "sha": "ca735f14ce420ac400ebd498eade8a276b1bf9bb",
        "filename": "src/qt/clientmodel.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/326b5bb9d0e371e7636d1484b9b006e766fd4af0/src/qt/clientmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/326b5bb9d0e371e7636d1484b9b006e766fd4af0/src/qt/clientmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.h?ref=326b5bb9d0e371e7636d1484b9b006e766fd4af0",
        "patch": "@@ -46,8 +46,8 @@ class ClientModel : public QObject\n     double getVerificationProgress() const;\n     QDateTime getLastBlockDate() const;\n \n-    //! Return true if client connected to testnet\n-    bool isTestNet() const;\n+    //! Return network (main, testnet3, regtest)\n+    QString getNetworkName() const;\n     //! Return true if core is doing initial block download\n     bool inInitialBlockDownload() const;\n     //! Return true if core is importing blocks"
      },
      {
        "sha": "69504f3159826da3302393c22f3ac475cc128982",
        "filename": "src/qt/forms/rpcconsole.ui",
        "status": "modified",
        "additions": 15,
        "deletions": 9,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/326b5bb9d0e371e7636d1484b9b006e766fd4af0/src/qt/forms/rpcconsole.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/326b5bb9d0e371e7636d1484b9b006e766fd4af0/src/qt/forms/rpcconsole.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/rpcconsole.ui?ref=326b5bb9d0e371e7636d1484b9b006e766fd4af0",
        "patch": "@@ -172,14 +172,14 @@\n         </widget>\n        </item>\n        <item row=\"7\" column=\"0\">\n-        <widget class=\"QLabel\" name=\"label_7\">\n+        <widget class=\"QLabel\" name=\"label_8\">\n          <property name=\"text\">\n-          <string>Number of connections</string>\n+          <string>Name</string>\n          </property>\n         </widget>\n        </item>\n        <item row=\"7\" column=\"1\">\n-        <widget class=\"QLabel\" name=\"numberOfConnections\">\n+        <widget class=\"QLabel\" name=\"networkName\">\n          <property name=\"cursor\">\n           <cursorShape>IBeamCursor</cursorShape>\n          </property>\n@@ -195,19 +195,25 @@\n         </widget>\n        </item>\n        <item row=\"8\" column=\"0\">\n-        <widget class=\"QLabel\" name=\"label_8\">\n+        <widget class=\"QLabel\" name=\"label_7\">\n          <property name=\"text\">\n-          <string>On testnet</string>\n+          <string>Number of connections</string>\n          </property>\n         </widget>\n        </item>\n        <item row=\"8\" column=\"1\">\n-        <widget class=\"QCheckBox\" name=\"isTestNet\">\n-         <property name=\"enabled\">\n-          <bool>false</bool>\n+        <widget class=\"QLabel\" name=\"numberOfConnections\">\n+         <property name=\"cursor\">\n+          <cursorShape>IBeamCursor</cursorShape>\n          </property>\n          <property name=\"text\">\n-          <string/>\n+          <string>N/A</string>\n+         </property>\n+         <property name=\"textFormat\">\n+          <enum>Qt::PlainText</enum>\n+         </property>\n+         <property name=\"textInteractionFlags\">\n+          <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n          </property>\n         </widget>\n        </item>"
      },
      {
        "sha": "a8470572dde3c72bf75bf5292d85887967e9815f",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/326b5bb9d0e371e7636d1484b9b006e766fd4af0/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/326b5bb9d0e371e7636d1484b9b006e766fd4af0/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=326b5bb9d0e371e7636d1484b9b006e766fd4af0",
        "patch": "@@ -284,7 +284,7 @@ void RPCConsole::setClientModel(ClientModel *model)\n         ui->buildDate->setText(model->formatBuildDate());\n         ui->startupTime->setText(model->formatClientStartupTime());\n \n-        ui->isTestNet->setChecked(model->isTestNet());\n+        ui->networkName->setText(model->getNetworkName());\n     }\n }\n "
      },
      {
        "sha": "6fb834c0455bb2868f5fb39a3fb0507b47c95d53",
        "filename": "src/qt/splashscreen.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 4,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/326b5bb9d0e371e7636d1484b9b006e766fd4af0/src/qt/splashscreen.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/326b5bb9d0e371e7636d1484b9b006e766fd4af0/src/qt/splashscreen.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/splashscreen.cpp?ref=326b5bb9d0e371e7636d1484b9b006e766fd4af0",
        "patch": "@@ -4,14 +4,13 @@\n \n #include \"splashscreen.h\"\n \n-#include \"chainparams.h\"\n #include \"clientversion.h\"\n #include \"util.h\"\n \n #include <QApplication>\n #include <QPainter>\n \n-SplashScreen::SplashScreen(const QPixmap &pixmap, Qt::WindowFlags f) :\n+SplashScreen::SplashScreen(const QPixmap &pixmap, Qt::WindowFlags f, bool isTestNet) :\n     QSplashScreen(pixmap, f)\n {\n     // set reference point, paddings\n@@ -32,7 +31,7 @@ SplashScreen::SplashScreen(const QPixmap &pixmap, Qt::WindowFlags f) :\n \n     // load the bitmap for writing some text over it\n     QPixmap newPixmap;\n-    if(TestNet()) {\n+    if(isTestNet) {\n         newPixmap     = QPixmap(\":/images/splash_testnet\");\n     }\n     else {\n@@ -72,7 +71,7 @@ SplashScreen::SplashScreen(const QPixmap &pixmap, Qt::WindowFlags f) :\n     pixPaint.drawText(newPixmap.width()-titleTextWidth-paddingRight,paddingTop+titleCopyrightVSpace,copyrightText);\n \n     // draw testnet string if testnet is on\n-    if(TestNet()) {\n+    if(isTestNet) {\n         QFont boldFont = QFont(font, 10*fontFactor);\n         boldFont.setWeight(QFont::Bold);\n         pixPaint.setFont(boldFont);"
      },
      {
        "sha": "070e376c958c78804790839f1234431c884bfc5d",
        "filename": "src/qt/splashscreen.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/326b5bb9d0e371e7636d1484b9b006e766fd4af0/src/qt/splashscreen.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/326b5bb9d0e371e7636d1484b9b006e766fd4af0/src/qt/splashscreen.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/splashscreen.h?ref=326b5bb9d0e371e7636d1484b9b006e766fd4af0",
        "patch": "@@ -14,7 +14,7 @@ class SplashScreen : public QSplashScreen\n     Q_OBJECT\n \n public:\n-    explicit SplashScreen(const QPixmap &pixmap = QPixmap(), Qt::WindowFlags f = 0);\n+    explicit SplashScreen(const QPixmap &pixmap, Qt::WindowFlags f, bool isTestNet);\n };\n \n #endif // SPLASHSCREEN_H"
      }
    ]
  },
  {
    "sha": "23981b1f47a6b1ace419934a07282c5a15441f94",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyMzk4MWIxZjQ3YTZiMWFjZTQxOTkzNGEwNzI4MmM1YTE1NDQxZjk0",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-20T13:42:52Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-20T13:43:01Z"
      },
      "message": "Merge pull request #3369\n\n6027b46 Add rpc command 'getunconfirmedbalance' to obtain total unconfirmed balance (Michael Bauer)",
      "tree": {
        "sha": "82c53bae3b6ca8600af531ebc94f755d8693da8a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/82c53bae3b6ca8600af531ebc94f755d8693da8a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/23981b1f47a6b1ace419934a07282c5a15441f94",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJStEllAAoJEHSBCwEjRsmmIY0H+QHf9cMo6OYjJRbfGMigom91\nrxXl+oi6jioiuM9SX3++9zk0O+vDQLBOHJsZE9BhEiQMDuTXFfwG4Ozy17ui6vn6\nwNtMua/ISzyMDF/i9k5NCZoyQ8652z6ZEp2+ouspkdysP1aJlO1dZErHtk8Pzggl\nNU/2UoqTxOadb5V3aAYE9PZcjv143HUpMiztMNvbtbNbg5kfFQD++kzWLaBNOgD6\nSohMFiqkKCmF8GvNvbRcxDLj7k9a5PgcNrH61Ul4c9Zb/7kNRpIUSpRnJnXMq2AI\n30n6x/qW71ZNmc88hxcZVg3VVEQ4MV5wNdTDxWpk+zi20wSkdCJ+Gvk714nBhXY=\n=We/U\n-----END PGP SIGNATURE-----",
        "payload": "tree 82c53bae3b6ca8600af531ebc94f755d8693da8a\nparent 326b5bb9d0e371e7636d1484b9b006e766fd4af0\nparent 6027b460e40e7769930d0e89f18f011fa0f6c262\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1387546972 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1387546981 +0100\n\nMerge pull request #3369\n\n6027b46 Add rpc command 'getunconfirmedbalance' to obtain total unconfirmed balance (Michael Bauer)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/23981b1f47a6b1ace419934a07282c5a15441f94",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/23981b1f47a6b1ace419934a07282c5a15441f94",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/23981b1f47a6b1ace419934a07282c5a15441f94/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "326b5bb9d0e371e7636d1484b9b006e766fd4af0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/326b5bb9d0e371e7636d1484b9b006e766fd4af0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/326b5bb9d0e371e7636d1484b9b006e766fd4af0"
      },
      {
        "sha": "6027b460e40e7769930d0e89f18f011fa0f6c262",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6027b460e40e7769930d0e89f18f011fa0f6c262",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6027b460e40e7769930d0e89f18f011fa0f6c262"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 11,
      "deletions": 0
    },
    "files": [
      {
        "sha": "9f2100a8d7a3f3c5cd3bce3c2551617e5de373fd",
        "filename": "src/rpcserver.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/23981b1f47a6b1ace419934a07282c5a15441f94/src/rpcserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/23981b1f47a6b1ace419934a07282c5a15441f94/src/rpcserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.cpp?ref=23981b1f47a6b1ace419934a07282c5a15441f94",
        "patch": "@@ -276,6 +276,7 @@ static const CRPCCommand vRPCCommands[] =\n     { \"walletlock\",             &walletlock,             true,      false,      true },\n     { \"encryptwallet\",          &encryptwallet,          false,     false,      true },\n     { \"getbalance\",             &getbalance,             false,     false,      true },\n+    { \"getunconfirmedbalance\",  &getunconfirmedbalance,  false,     false,      true },\n     { \"move\",                   &movecmd,                false,     false,      true },\n     { \"sendfrom\",               &sendfrom,               false,     false,      true },\n     { \"sendmany\",               &sendmany,               false,     false,      true },"
      },
      {
        "sha": "9087be9e8885d9d1746bd9f3088e14512efcd295",
        "filename": "src/rpcserver.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/23981b1f47a6b1ace419934a07282c5a15441f94/src/rpcserver.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/23981b1f47a6b1ace419934a07282c5a15441f94/src/rpcserver.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.h?ref=23981b1f47a6b1ace419934a07282c5a15441f94",
        "patch": "@@ -135,6 +135,7 @@ extern json_spirit::Value verifymessage(const json_spirit::Array& params, bool f\n extern json_spirit::Value getreceivedbyaddress(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value getreceivedbyaccount(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value getbalance(const json_spirit::Array& params, bool fHelp);\n+extern json_spirit::Value getunconfirmedbalance(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value movecmd(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value sendfrom(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value sendmany(const json_spirit::Array& params, bool fHelp);"
      },
      {
        "sha": "8ad5c9c51d8f636a586181bf9f89c557fa433f48",
        "filename": "src/rpcwallet.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/23981b1f47a6b1ace419934a07282c5a15441f94/src/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/23981b1f47a6b1ace419934a07282c5a15441f94/src/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.cpp?ref=23981b1f47a6b1ace419934a07282c5a15441f94",
        "patch": "@@ -646,6 +646,15 @@ Value getbalance(const Array& params, bool fHelp)\n     return ValueFromAmount(nBalance);\n }\n \n+Value getunconfirmedbalance(const Array &params, bool fHelp)\n+{\n+    if (fHelp || params.size() > 0)\n+        throw runtime_error(\n+                \"getunconfirmedbalance\\n\"\n+                \"Returns the server's total unconfirmed balance\\n\");\n+    return ValueFromAmount(pwalletMain->GetUnconfirmedBalance());\n+}\n+\n \n Value movecmd(const Array& params, bool fHelp)\n {"
      }
    ]
  },
  {
    "sha": "f498d43ee2ebc1507ca0d649af6bffd1b3182646",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmNDk4ZDQzZWUyZWJjMTUwN2NhMGQ2NDlhZjZiZmZkMWIzMTgyNjQ2",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-20T14:03:27Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-20T14:03:41Z"
      },
      "message": "Merge pull request #3416\n\n9e9056c Remove -logtodebugger (Wladimir J. van der Laan)",
      "tree": {
        "sha": "3e8b9ebd9193fe6d080f673d87519a0a037b7290",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3e8b9ebd9193fe6d080f673d87519a0a037b7290"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f498d43ee2ebc1507ca0d649af6bffd1b3182646",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJStE49AAoJEHSBCwEjRsmmZuMH/A7hFkoSmWFUlVv+Tw9Om4LN\neJETVzF1EeduPdmjJ2XpoqbHONtJI/ekaoi1uj0JFot/sqaFL36LYxJKg0FAinJV\nrcwH+BF8sU8csMsSBqxPgMo8pp4aovmSJCFBehRFDF2QAloXgFrvry/d0ZgU70v1\ndLlYBG5aQ2CBTb4LVWK4HzkQSwKrkLFDekg/iPxtW7NlfFCr0G3AB9vMOrDNO2UM\nPGYOwSBCnLEFW2KfFNNQypWvC9JFrZgZxZ3bx7w+k57wyEgfiPo9tNNbUQUFEkE7\n2h/MnJDEL+uBiWb9g5tdds2rFLg90u/Xj/4mSO6L6tizL7Gl3dItBX0A3BItjZ8=\n=mnmC\n-----END PGP SIGNATURE-----",
        "payload": "tree 3e8b9ebd9193fe6d080f673d87519a0a037b7290\nparent 23981b1f47a6b1ace419934a07282c5a15441f94\nparent 9e9056cd1a05e5868025553d2a8cb3e47cf45045\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1387548207 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1387548221 +0100\n\nMerge pull request #3416\n\n9e9056c Remove -logtodebugger (Wladimir J. van der Laan)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f498d43ee2ebc1507ca0d649af6bffd1b3182646",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f498d43ee2ebc1507ca0d649af6bffd1b3182646",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f498d43ee2ebc1507ca0d649af6bffd1b3182646/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "23981b1f47a6b1ace419934a07282c5a15441f94",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/23981b1f47a6b1ace419934a07282c5a15441f94",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/23981b1f47a6b1ace419934a07282c5a15441f94"
      },
      {
        "sha": "9e9056cd1a05e5868025553d2a8cb3e47cf45045",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9e9056cd1a05e5868025553d2a8cb3e47cf45045",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9e9056cd1a05e5868025553d2a8cb3e47cf45045"
      }
    ],
    "stats": {
      "total": 36,
      "additions": 4,
      "deletions": 32
    },
    "files": [
      {
        "sha": "c568b1a1c2377a4f4956df9ec6cc641f1a1398b6",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f498d43ee2ebc1507ca0d649af6bffd1b3182646/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f498d43ee2ebc1507ca0d649af6bffd1b3182646/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=f498d43ee2ebc1507ca0d649af6bffd1b3182646",
        "patch": "@@ -242,10 +242,6 @@ std::string HelpMessage(HelpMessageMode hmm)\n     strUsage += \"  -printtoconsole        \" + _(\"Send trace/debug info to console instead of debug.log file\") + \"\\n\";\n     strUsage += \"  -regtest               \" + _(\"Enter regression test mode, which uses a special chain in which blocks can be \"\n                                                 \"solved instantly. This is intended for regression testing tools and app development.\") + \"\\n\";\n-#ifdef WIN32\n-    strUsage += \"  -printtodebugger       \" + _(\"Send trace/debug info to debugger\") + \"\\n\";\n-#endif\n-\n     if (hmm == HMM_BITCOIN_QT)\n     {\n         strUsage += \"  -server                \" + _(\"Accept command line and JSON-RPC commands\") + \"\\n\";\n@@ -493,7 +489,6 @@ bool AppInit2(boost::thread_group& threadGroup, bool fForceServer)\n         fServer = GetBoolArg(\"-server\", false);\n \n     fPrintToConsole = GetBoolArg(\"-printtoconsole\", false);\n-    fPrintToDebugger = GetBoolArg(\"-printtodebugger\", false);\n     fLogTimestamps = GetBoolArg(\"-logtimestamps\", true);\n #ifdef ENABLE_WALLET\n     bool fDisableWallet = GetBoolArg(\"-disablewallet\", false);"
      },
      {
        "sha": "96d0712403dce502afe18972777b705a6ffa0922",
        "filename": "src/test/test_bitcoin.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f498d43ee2ebc1507ca0d649af6bffd1b3182646/src/test/test_bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f498d43ee2ebc1507ca0d649af6bffd1b3182646/src/test/test_bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/test_bitcoin.cpp?ref=f498d43ee2ebc1507ca0d649af6bffd1b3182646",
        "patch": "@@ -26,7 +26,7 @@ struct TestingSetup {\n     boost::thread_group threadGroup;\n \n     TestingSetup() {\n-        fPrintToDebugger = true; // don't want to write to debug.log file\n+        fPrintToDebugLog = false; // don't want to write to debug.log file\n         noui_connect();\n #ifdef ENABLE_WALLET\n         bitdb.MakeMock();"
      },
      {
        "sha": "280798f2fb33e1dfc63c718269dc766e79833c78",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 25,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f498d43ee2ebc1507ca0d649af6bffd1b3182646/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f498d43ee2ebc1507ca0d649af6bffd1b3182646/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=f498d43ee2ebc1507ca0d649af6bffd1b3182646",
        "patch": "@@ -88,7 +88,7 @@ map<string, string> mapArgs;\n map<string, vector<string> > mapMultiArgs;\n bool fDebug = false;\n bool fPrintToConsole = false;\n-bool fPrintToDebugger = false;\n+bool fPrintToDebugLog = true;\n bool fDaemon = false;\n bool fServer = false;\n string strMiscWarning;\n@@ -270,7 +270,7 @@ int LogPrint(const char* category, const char* pszFormat, ...)\n         ret += vprintf(pszFormat, arg_ptr);\n         va_end(arg_ptr);\n     }\n-    else if (!fPrintToDebugger)\n+    else if (fPrintToDebugLog)\n     {\n         static bool fStartedNewLine = true;\n         boost::call_once(&DebugPrintInit, debugPrintInitFlag);\n@@ -302,29 +302,6 @@ int LogPrint(const char* category, const char* pszFormat, ...)\n         va_end(arg_ptr);\n     }\n \n-#ifdef WIN32\n-    if (fPrintToDebugger)\n-    {\n-        // accumulate and output a line at a time\n-        static std::string buffer;\n-\n-        boost::mutex::scoped_lock scoped_lock(*mutexDebugLog);\n-\n-        va_list arg_ptr;\n-        va_start(arg_ptr, pszFormat);\n-        buffer += vstrprintf(pszFormat, arg_ptr);\n-        va_end(arg_ptr);\n-\n-        int line_start = 0, line_end;\n-        while((line_end = buffer.find('\\n', line_start)) != -1)\n-        {\n-            OutputDebugStringA(buffer.substr(line_start, line_end - line_start).c_str());\n-            line_start = line_end + 1;\n-            ret += line_end-line_start;\n-        }\n-        buffer.erase(0, line_start);\n-    }\n-#endif\n     return ret;\n }\n "
      },
      {
        "sha": "3922872e06a53af555dc819726411149b71f06f8",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f498d43ee2ebc1507ca0d649af6bffd1b3182646/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f498d43ee2ebc1507ca0d649af6bffd1b3182646/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=f498d43ee2ebc1507ca0d649af6bffd1b3182646",
        "patch": "@@ -120,7 +120,7 @@ extern std::map<std::string, std::string> mapArgs;\n extern std::map<std::string, std::vector<std::string> > mapMultiArgs;\n extern bool fDebug;\n extern bool fPrintToConsole;\n-extern bool fPrintToDebugger;\n+extern bool fPrintToDebugLog;\n extern bool fDaemon;\n extern bool fServer;\n extern std::string strMiscWarning;"
      }
    ]
  },
  {
    "sha": "3c955993a47d0cb440d7a43be0d85e7f80217d8c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozYzk1NTk5M2E0N2QwY2I0NDBkN2E0M2JlMGQ4NWU3ZjgwMjE3ZDhj",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2013-12-18T12:31:25Z"
      },
      "committer": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2013-12-20T14:44:14Z"
      },
      "message": "init: add better formating for some command-line options",
      "tree": {
        "sha": "18100e05c1f928f1b5ab4d5fd70963bdd8c69740",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/18100e05c1f928f1b5ab4d5fd70963bdd8c69740"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3c955993a47d0cb440d7a43be0d85e7f80217d8c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3c955993a47d0cb440d7a43be0d85e7f80217d8c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3c955993a47d0cb440d7a43be0d85e7f80217d8c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3c955993a47d0cb440d7a43be0d85e7f80217d8c/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "f498d43ee2ebc1507ca0d649af6bffd1b3182646",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f498d43ee2ebc1507ca0d649af6bffd1b3182646",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f498d43ee2ebc1507ca0d649af6bffd1b3182646"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "b5d784dc587083efbd425a269717c3b2bffe0369",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c955993a47d0cb440d7a43be0d85e7f80217d8c/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c955993a47d0cb440d7a43be0d85e7f80217d8c/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=3c955993a47d0cb440d7a43be0d85e7f80217d8c",
        "patch": "@@ -226,8 +226,8 @@ std::string HelpMessage(HelpMessageMode hmm)\n #endif\n #endif\n     strUsage += \"  -debug=<category>      \" + _(\"Output debugging information (default: 0, supplying <category> is optional)\") + \"\\n\";\n-    strUsage +=                               _(\"If <category> is not supplied, output all debugging information.\") + \"\\n\";\n-    strUsage +=                               _(\"<category> can be:\");\n+    strUsage += \"                         \" + _(\"If <category> is not supplied, output all debugging information.\") + \"\\n\";\n+    strUsage += \"                         \" + _(\"<category> can be:\");\n     strUsage +=                                 \" addrman, alert, coindb, db, lock, rand, rpc, selectcoins, mempool, net\"; // Don't translate these and qt below\n     if (hmm == HMM_BITCOIN_QT)\n     {\n@@ -240,8 +240,8 @@ std::string HelpMessage(HelpMessageMode hmm)\n     strUsage += \"  -logtimestamps         \" + _(\"Prepend debug output with timestamp (default: 1)\") + \"\\n\";\n     strUsage += \"  -shrinkdebugfile       \" + _(\"Shrink debug.log file on client startup (default: 1 when no -debug)\") + \"\\n\";\n     strUsage += \"  -printtoconsole        \" + _(\"Send trace/debug info to console instead of debug.log file\") + \"\\n\";\n-    strUsage += \"  -regtest               \" + _(\"Enter regression test mode, which uses a special chain in which blocks can be \"\n-                                                \"solved instantly. This is intended for regression testing tools and app development.\") + \"\\n\";\n+    strUsage += \"  -regtest               \" + _(\"Enter regression test mode, which uses a special chain in which blocks can be solved instantly.\") + \"\\n\";\n+    strUsage += \"                         \" + _(\"This is intended for regression testing tools and app development.\") + \"\\n\";\n     if (hmm == HMM_BITCOIN_QT)\n     {\n         strUsage += \"  -server                \" + _(\"Accept command line and JSON-RPC commands\") + \"\\n\";"
      }
    ]
  },
  {
    "sha": "3380713af5f47efba48fcbd153013e57c9004ded",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozMzgwNzEzYWY1ZjQ3ZWZiYTQ4ZmNiZDE1MzAxM2U1N2M5MDA0ZGVk",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2013-12-11T14:12:13Z"
      },
      "committer": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2013-12-20T14:50:21Z"
      },
      "message": "[Qt] coin control change address handling update\n\n- re-work change address handling so that default is CNoDestination(),\n  until a verified and known change address was entered (easier code flow)\n- add a missing NULL pointer check for adresstablemodel\n- add a missing text when opening coin control address selection for\n  priority and ensure the label is black\n- add a missing . at the end of a sentence",
      "tree": {
        "sha": "b303762c2889ce901e9edf6be279a3240e7d8f96",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b303762c2889ce901e9edf6be279a3240e7d8f96"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3380713af5f47efba48fcbd153013e57c9004ded",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3380713af5f47efba48fcbd153013e57c9004ded",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3380713af5f47efba48fcbd153013e57c9004ded",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3380713af5f47efba48fcbd153013e57c9004ded/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "f498d43ee2ebc1507ca0d649af6bffd1b3182646",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f498d43ee2ebc1507ca0d649af6bffd1b3182646",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f498d43ee2ebc1507ca0d649af6bffd1b3182646"
      }
    ],
    "stats": {
      "total": 69,
      "additions": 35,
      "deletions": 34
    },
    "files": [
      {
        "sha": "e1a9140f456eff2084b8aa7018a063bb0c6d9de2",
        "filename": "src/qt/coincontroldialog.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3380713af5f47efba48fcbd153013e57c9004ded/src/qt/coincontroldialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3380713af5f47efba48fcbd153013e57c9004ded/src/qt/coincontroldialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/coincontroldialog.cpp?ref=3380713af5f47efba48fcbd153013e57c9004ded",
        "patch": "@@ -449,7 +449,7 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n         }\n     }\n \n-    QString sPriorityLabel      = \"\";\n+    QString sPriorityLabel      = tr(\"none\");\n     int64_t nAmount             = 0;\n     int64_t nPayFee             = 0;\n     int64_t nAfterFee           = 0;\n@@ -593,18 +593,18 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n     l8->setText(BitcoinUnits::formatWithUnit(nDisplayUnit, nChange));        // Change\n \n     // turn labels \"red\"\n-    l5->setStyleSheet((nBytes >= 1000) ? \"color:red;\" : \"\");                // Bytes >= 1000\n-    l6->setStyleSheet((!AllowFree(dPriority)) ? \"color:red;\" : \"\");         // Priority < \"medium\"\n-    l7->setStyleSheet((fLowOutput) ? \"color:red;\" : \"\");                    // Low Output = \"yes\"\n-    l8->setStyleSheet((nChange > 0 && nChange < CENT) ? \"color:red;\" : \"\"); // Change < 0.01BTC\n+    l5->setStyleSheet((nBytes >= 1000) ? \"color:red;\" : \"\");                            // Bytes >= 1000\n+    l6->setStyleSheet((dPriority > 0 && !AllowFree(dPriority)) ? \"color:red;\" : \"\");    // Priority < \"medium\"\n+    l7->setStyleSheet((fLowOutput) ? \"color:red;\" : \"\");                                // Low Output = \"yes\"\n+    l8->setStyleSheet((nChange > 0 && nChange < CENT) ? \"color:red;\" : \"\");             // Change < 0.01BTC\n \n     // tool tips\n     QString toolTip1 = tr(\"This label turns red, if the transaction size is greater than 1000 bytes.\") + \"<br /><br />\";\n     toolTip1 += tr(\"This means a fee of at least %1 per kB is required.\").arg(BitcoinUnits::formatWithUnit(nDisplayUnit, CTransaction::nMinTxFee)) + \"<br /><br />\";\n     toolTip1 += tr(\"Can vary +/- 1 byte per input.\");\n \n     QString toolTip2 = tr(\"Transactions with higher priority are more likely to get included into a block.\") + \"<br /><br />\";\n-    toolTip2 += tr(\"This label turns red, if the priority is smaller than \\\"medium\\\"\") + \"<br /><br />\";\n+    toolTip2 += tr(\"This label turns red, if the priority is smaller than \\\"medium\\\".\") + \"<br /><br />\";\n     toolTip2 += tr(\"This means a fee of at least %1 per kB is required.\").arg(BitcoinUnits::formatWithUnit(nDisplayUnit, CTransaction::nMinTxFee));\n \n     QString toolTip3 = tr(\"This label turns red, if any recipient receives an amount smaller than %1.\").arg(BitcoinUnits::formatWithUnit(nDisplayUnit, CENT)) + \"<br /><br />\";"
      },
      {
        "sha": "92be835c566fe10575763f51b7b6bcce69bca2f0",
        "filename": "src/qt/sendcoinsdialog.cpp",
        "status": "modified",
        "additions": 29,
        "deletions": 28,
        "changes": 57,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3380713af5f47efba48fcbd153013e57c9004ded/src/qt/sendcoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3380713af5f47efba48fcbd153013e57c9004ded/src/qt/sendcoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.cpp?ref=3380713af5f47efba48fcbd153013e57c9004ded",
        "patch": "@@ -546,44 +546,45 @@ void SendCoinsDialog::coinControlChangeChecked(int state)\n // Coin Control: custom change address changed\n void SendCoinsDialog::coinControlChangeEdited(const QString& text)\n {\n-    if (model)\n+    if (model && model->getAddressTableModel())\n     {\n-        CoinControlDialog::coinControl->destChange = CBitcoinAddress(text.toStdString()).Get();\n+        // Default to no change address until verified\n+        CoinControlDialog::coinControl->destChange = CNoDestination();\n+        ui->labelCoinControlChangeLabel->setStyleSheet(\"QLabel{color:red;}\");\n+\n+        CBitcoinAddress addr = CBitcoinAddress(text.toStdString());\n \n-        // label for the change address\n-        ui->labelCoinControlChangeLabel->setStyleSheet(\"QLabel{color:black;}\");\n-        if (text.isEmpty())\n+        if (text.isEmpty()) // Nothing entered\n+        {\n             ui->labelCoinControlChangeLabel->setText(\"\");\n-        else if (!CBitcoinAddress(text.toStdString()).IsValid())\n+        }\n+        else if (!addr.IsValid()) // Invalid address\n         {\n-            // invalid change address\n-            CoinControlDialog::coinControl->destChange = CNoDestination();\n-\n             ui->lineEditCoinControlChange->setValid(false);\n-            ui->labelCoinControlChangeLabel->setStyleSheet(\"QLabel{color:red;}\");\n             ui->labelCoinControlChangeLabel->setText(tr(\"Warning: Invalid Bitcoin address\"));\n         }\n-        else\n+        else // Valid address\n         {\n-            QString associatedLabel = model->getAddressTableModel()->labelForAddress(text);\n-            if (!associatedLabel.isEmpty())\n-                ui->labelCoinControlChangeLabel->setText(associatedLabel);\n-            else\n+            CPubKey pubkey;\n+            CKeyID keyid;\n+            addr.GetKeyID(keyid);\n+            if (!model->getPubKey(keyid, pubkey)) // Unknown change address\n             {\n-                CPubKey pubkey;\n-                CKeyID keyid;\n-                CBitcoinAddress(text.toStdString()).GetKeyID(keyid);\n-                if (model->getPubKey(keyid, pubkey))\n-                    ui->labelCoinControlChangeLabel->setText(tr(\"(no label)\"));\n+                ui->lineEditCoinControlChange->setValid(false);\n+                ui->labelCoinControlChangeLabel->setText(tr(\"Warning: Unknown change address\"));\n+            }\n+            else // Known change address\n+            {\n+                ui->labelCoinControlChangeLabel->setStyleSheet(\"QLabel{color:black;}\");\n+\n+                // Query label\n+                QString associatedLabel = model->getAddressTableModel()->labelForAddress(text);\n+                if (!associatedLabel.isEmpty())\n+                    ui->labelCoinControlChangeLabel->setText(associatedLabel);\n                 else\n-                {\n-                    // unknown change address\n-                    CoinControlDialog::coinControl->destChange = CNoDestination();\n-\n-                    ui->lineEditCoinControlChange->setValid(false);\n-                    ui->labelCoinControlChangeLabel->setStyleSheet(\"QLabel{color:red;}\");\n-                    ui->labelCoinControlChangeLabel->setText(tr(\"Warning: Unknown change address\"));\n-                }\n+                    ui->labelCoinControlChangeLabel->setText(tr(\"(no label)\"));\n+\n+                CoinControlDialog::coinControl->destChange = addr.Get();\n             }\n         }\n     }"
      }
    ]
  },
  {
    "sha": "9e508b55885ba747dce2e3fd5ef4c05572cda0b0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ZTUwOGI1NTg4NWJhNzQ3ZGNlMmUzZmQ1ZWY0YzA1NTcyY2RhMGIw",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-20T14:47:34Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-20T14:57:37Z"
      },
      "message": "Merge pull request #3439\n\n3c95599 init: add better formating for some command-line options (Philip Kaufmann)",
      "tree": {
        "sha": "18100e05c1f928f1b5ab4d5fd70963bdd8c69740",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/18100e05c1f928f1b5ab4d5fd70963bdd8c69740"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9e508b55885ba747dce2e3fd5ef4c05572cda0b0",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJStFrhAAoJEHSBCwEjRsmmsBYH/1sPoBj5oQ6KAxGxvoIrUxp+\nivl19pXj3ctj/7mbnnJQiO/tRUuBVVakL8cHIm6dJ457R7BA4dzjhU87Anm0B4IY\n/xNHjgkMrYIT1a90bjF1dLHHnlFy6S1El2l9GckZJ4CA5tQ5RvbzxRFqWnQ/WIJ6\nZ+vF6Q6KPAzppCSQBZJFuZ1UCQdK6UKdmEfG5On+cNWtUGnYDa35Klu7hEwgG5RL\nKw/KGYCgZ8K3DxN8IyOp2ocaVy0rxpN7YMTKm1gZMieTyWiWwGbuiNiSfH6OGgky\n4oWXrRg1/QPgV0oJTQVoJ+us8qBDK9gUu0XnU54kDCylPAlLkLY0wQwM/ILUOh8=\n=h8/Z\n-----END PGP SIGNATURE-----",
        "payload": "tree 18100e05c1f928f1b5ab4d5fd70963bdd8c69740\nparent f498d43ee2ebc1507ca0d649af6bffd1b3182646\nparent 3c955993a47d0cb440d7a43be0d85e7f80217d8c\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1387550854 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1387551457 +0100\n\nMerge pull request #3439\n\n3c95599 init: add better formating for some command-line options (Philip Kaufmann)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9e508b55885ba747dce2e3fd5ef4c05572cda0b0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9e508b55885ba747dce2e3fd5ef4c05572cda0b0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9e508b55885ba747dce2e3fd5ef4c05572cda0b0/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f498d43ee2ebc1507ca0d649af6bffd1b3182646",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f498d43ee2ebc1507ca0d649af6bffd1b3182646",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f498d43ee2ebc1507ca0d649af6bffd1b3182646"
      },
      {
        "sha": "3c955993a47d0cb440d7a43be0d85e7f80217d8c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3c955993a47d0cb440d7a43be0d85e7f80217d8c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3c955993a47d0cb440d7a43be0d85e7f80217d8c"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "b5d784dc587083efbd425a269717c3b2bffe0369",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e508b55885ba747dce2e3fd5ef4c05572cda0b0/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e508b55885ba747dce2e3fd5ef4c05572cda0b0/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=9e508b55885ba747dce2e3fd5ef4c05572cda0b0",
        "patch": "@@ -226,8 +226,8 @@ std::string HelpMessage(HelpMessageMode hmm)\n #endif\n #endif\n     strUsage += \"  -debug=<category>      \" + _(\"Output debugging information (default: 0, supplying <category> is optional)\") + \"\\n\";\n-    strUsage +=                               _(\"If <category> is not supplied, output all debugging information.\") + \"\\n\";\n-    strUsage +=                               _(\"<category> can be:\");\n+    strUsage += \"                         \" + _(\"If <category> is not supplied, output all debugging information.\") + \"\\n\";\n+    strUsage += \"                         \" + _(\"<category> can be:\");\n     strUsage +=                                 \" addrman, alert, coindb, db, lock, rand, rpc, selectcoins, mempool, net\"; // Don't translate these and qt below\n     if (hmm == HMM_BITCOIN_QT)\n     {\n@@ -240,8 +240,8 @@ std::string HelpMessage(HelpMessageMode hmm)\n     strUsage += \"  -logtimestamps         \" + _(\"Prepend debug output with timestamp (default: 1)\") + \"\\n\";\n     strUsage += \"  -shrinkdebugfile       \" + _(\"Shrink debug.log file on client startup (default: 1 when no -debug)\") + \"\\n\";\n     strUsage += \"  -printtoconsole        \" + _(\"Send trace/debug info to console instead of debug.log file\") + \"\\n\";\n-    strUsage += \"  -regtest               \" + _(\"Enter regression test mode, which uses a special chain in which blocks can be \"\n-                                                \"solved instantly. This is intended for regression testing tools and app development.\") + \"\\n\";\n+    strUsage += \"  -regtest               \" + _(\"Enter regression test mode, which uses a special chain in which blocks can be solved instantly.\") + \"\\n\";\n+    strUsage += \"                         \" + _(\"This is intended for regression testing tools and app development.\") + \"\\n\";\n     if (hmm == HMM_BITCOIN_QT)\n     {\n         strUsage += \"  -server                \" + _(\"Accept command line and JSON-RPC commands\") + \"\\n\";"
      }
    ]
  },
  {
    "sha": "8b9adca4461d0cb6bdfca7b74228d430b9b9d116",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4YjlhZGNhNDQ2MWQwY2I2YmRmY2E3Yjc0MjI4ZDQzMGI5YjlkMTE2",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-20T10:48:22Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-20T15:07:33Z"
      },
      "message": "Allow `-noserver` with bitcoind\n\nAllow running bitcoind without server.\n\n- Default to -server mode (of course) for bitcoind with SoftSetBoolArg\n- Remove fForceServer argument from AppInit2\n- Move fDaemon to a static variable in bitcoind",
      "tree": {
        "sha": "8c808c370f97b626bc9318a7ece95de2a6525435",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8c808c370f97b626bc9318a7ece95de2a6525435"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8b9adca4461d0cb6bdfca7b74228d430b9b9d116",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8b9adca4461d0cb6bdfca7b74228d430b9b9d116",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8b9adca4461d0cb6bdfca7b74228d430b9b9d116",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8b9adca4461d0cb6bdfca7b74228d430b9b9d116/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9e508b55885ba747dce2e3fd5ef4c05572cda0b0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9e508b55885ba747dce2e3fd5ef4c05572cda0b0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9e508b55885ba747dce2e3fd5ef4c05572cda0b0"
      }
    ],
    "stats": {
      "total": 28,
      "additions": 11,
      "deletions": 17
    },
    "files": [
      {
        "sha": "5d872188443d3f10604f92c56138660531049779",
        "filename": "src/bitcoind.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8b9adca4461d0cb6bdfca7b74228d430b9b9d116/src/bitcoind.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8b9adca4461d0cb6bdfca7b74228d430b9b9d116/src/bitcoind.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoind.cpp?ref=8b9adca4461d0cb6bdfca7b74228d430b9b9d116",
        "patch": "@@ -30,6 +30,8 @@\n  * Use the buttons <code>Namespaces</code>, <code>Classes</code> or <code>Files</code> at the top of the page to start navigating the code.\n  */\n \n+static bool fDaemon;\n+\n void DetectShutdownThread(boost::thread_group* threadGroup)\n {\n     bool fShutdown = ShutdownRequested();\n@@ -108,6 +110,8 @@ bool AppInit(int argc, char* argv[])\n         fDaemon = GetBoolArg(\"-daemon\", false);\n         if (fDaemon)\n         {\n+            fprintf(stdout, \"Bitcoin server starting\\n\");\n+\n             // Daemonize\n             pid_t pid = fork();\n             if (pid < 0)\n@@ -127,9 +131,10 @@ bool AppInit(int argc, char* argv[])\n                 fprintf(stderr, \"Error: setsid() returned %d errno %d\\n\", sid, errno);\n         }\n #endif\n+        SoftSetBoolArg(\"-server\", true);\n \n         detectShutdownThread = new boost::thread(boost::bind(&DetectShutdownThread, &threadGroup));\n-        fRet = AppInit2(threadGroup, true);\n+        fRet = AppInit2(threadGroup);\n     }\n     catch (std::exception& e) {\n         PrintExceptionContinue(&e, \"AppInit()\");"
      },
      {
        "sha": "275985604ede17deafabfad2b5ba0d7aa68bd100",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 13,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8b9adca4461d0cb6bdfca7b74228d430b9b9d116/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8b9adca4461d0cb6bdfca7b74228d430b9b9d116/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=8b9adca4461d0cb6bdfca7b74228d430b9b9d116",
        "patch": "@@ -242,10 +242,7 @@ std::string HelpMessage(HelpMessageMode hmm)\n     strUsage += \"  -printtoconsole        \" + _(\"Send trace/debug info to console instead of debug.log file\") + \"\\n\";\n     strUsage += \"  -regtest               \" + _(\"Enter regression test mode, which uses a special chain in which blocks can be solved instantly.\") + \"\\n\";\n     strUsage += \"                         \" + _(\"This is intended for regression testing tools and app development.\") + \"\\n\";\n-    if (hmm == HMM_BITCOIN_QT)\n-    {\n-        strUsage += \"  -server                \" + _(\"Accept command line and JSON-RPC commands\") + \"\\n\";\n-    }\n+    strUsage += \"  -server                \" + _(\"Accept command line and JSON-RPC commands\") + \"\\n\";\n \n     if (hmm == HMM_BITCOIND)\n     {\n@@ -356,7 +353,7 @@ void ThreadImport(std::vector<boost::filesystem::path> vImportFiles)\n /** Initialize bitcoin.\n  *  @pre Parameters should be parsed and config file should be read.\n  */\n-bool AppInit2(boost::thread_group& threadGroup, bool fForceServer)\n+bool AppInit2(boost::thread_group& threadGroup)\n {\n     // ********************************************************* Step 1: setup\n #ifdef _MSC_VER\n@@ -483,11 +480,7 @@ bool AppInit2(boost::thread_group& threadGroup, bool fForceServer)\n     else if (nScriptCheckThreads > MAX_SCRIPTCHECK_THREADS)\n         nScriptCheckThreads = MAX_SCRIPTCHECK_THREADS;\n \n-    if (fDaemon || fForceServer)\n-        fServer = true;\n-    else\n-        fServer = GetBoolArg(\"-server\", false);\n-\n+    fServer = GetBoolArg(\"-server\", false);\n     fPrintToConsole = GetBoolArg(\"-printtoconsole\", false);\n     fLogTimestamps = GetBoolArg(\"-logtimestamps\", true);\n #ifdef ENABLE_WALLET\n@@ -569,9 +562,6 @@ bool AppInit2(boost::thread_group& threadGroup, bool fForceServer)\n     LogPrintf(\"Using at most %i connections (%i file descriptors available)\\n\", nMaxConnections, nFD);\n     std::ostringstream strErrors;\n \n-    if (fDaemon)\n-        fprintf(stdout, \"Bitcoin server starting\\n\");\n-\n     if (nScriptCheckThreads) {\n         LogPrintf(\"Using %u threads for script verification\\n\", nScriptCheckThreads);\n         for (int i=0; i<nScriptCheckThreads-1; i++)"
      },
      {
        "sha": "2f56923055354ef96a094151a61310b5a21aa419",
        "filename": "src/init.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8b9adca4461d0cb6bdfca7b74228d430b9b9d116/src/init.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8b9adca4461d0cb6bdfca7b74228d430b9b9d116/src/init.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.h?ref=8b9adca4461d0cb6bdfca7b74228d430b9b9d116",
        "patch": "@@ -20,7 +20,7 @@ extern CWallet* pwalletMain;\n void StartShutdown();\n bool ShutdownRequested();\n void Shutdown();\n-bool AppInit2(boost::thread_group& threadGroup, bool fForceServer);\n+bool AppInit2(boost::thread_group& threadGroup);\n \n /* The help message mode determines what help message to show */\n enum HelpMessageMode"
      },
      {
        "sha": "9565d3ef7a83876d2cfe8d236768d39f68af5313",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8b9adca4461d0cb6bdfca7b74228d430b9b9d116/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8b9adca4461d0cb6bdfca7b74228d430b9b9d116/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=8b9adca4461d0cb6bdfca7b74228d430b9b9d116",
        "patch": "@@ -289,7 +289,7 @@ int main(int argc, char *argv[])\n         QObject::connect(pollShutdownTimer, SIGNAL(timeout()), guiref, SLOT(detectShutdown()));\n         pollShutdownTimer->start(200);\n \n-        if(AppInit2(threadGroup, false))\n+        if(AppInit2(threadGroup))\n         {\n             {\n                 // Put this in a block, so that the Model objects are cleaned up before"
      },
      {
        "sha": "c6a1318fd78d26cc304c29451f2c15fef9748dc7",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8b9adca4461d0cb6bdfca7b74228d430b9b9d116/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8b9adca4461d0cb6bdfca7b74228d430b9b9d116/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=8b9adca4461d0cb6bdfca7b74228d430b9b9d116",
        "patch": "@@ -121,7 +121,6 @@ extern std::map<std::string, std::vector<std::string> > mapMultiArgs;\n extern bool fDebug;\n extern bool fPrintToConsole;\n extern bool fPrintToDebugLog;\n-extern bool fDaemon;\n extern bool fServer;\n extern std::string strMiscWarning;\n extern bool fNoListen;"
      }
    ]
  },
  {
    "sha": "365350140a19459b3c763245339e062d1ae0d733",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNjUzNTAxNDBhMTk0NTliM2M3NjMyNDUzMzllMDYyZDFhZTBkNzMz",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-20T15:13:11Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-20T15:23:33Z"
      },
      "message": "Merge pull request #3391\n\n3380713 [Qt] coin control change address handling update (Philip Kaufmann)",
      "tree": {
        "sha": "6260359c7f6b00e6be2a44ae8c7b3458eea501c6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6260359c7f6b00e6be2a44ae8c7b3458eea501c6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/365350140a19459b3c763245339e062d1ae0d733",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJStGD1AAoJEHSBCwEjRsmm/LYH/jlReHIkfhxkfwLwCYqqNbuT\nUsqMVLgIyuO5ePF/BVZxGE/Oa89wRqeBjUtforkaIIVrFcUJok7tv+wgUEQ3Gp+y\nvPCV/jKZYiz6vgvwwPMsI+hXXOXzl+95dBEtAPMUkxnL2+MNONbOca/MSDL4ro5q\nVw9Qnwh4Gqueu2OI35yeHm+b6/AL94mgLLrqcrCPLE+nNO9LUBEyduZh+C8MgSOL\njTRdD+eTZ9Uvg4MlGYXn+yvSIMSZuBSCzBZ9OWnkTiXlwmU3i0O7zpb/wmXll+YK\nWSpxJnSo6wWctEx50Z/SRxLB1it3joJ6uvSZD1gv5KlqXZy/kqbvWgx9iHL3qPY=\n=AO51\n-----END PGP SIGNATURE-----",
        "payload": "tree 6260359c7f6b00e6be2a44ae8c7b3458eea501c6\nparent 9e508b55885ba747dce2e3fd5ef4c05572cda0b0\nparent 3380713af5f47efba48fcbd153013e57c9004ded\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1387552391 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1387553013 +0100\n\nMerge pull request #3391\n\n3380713 [Qt] coin control change address handling update (Philip Kaufmann)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/365350140a19459b3c763245339e062d1ae0d733",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/365350140a19459b3c763245339e062d1ae0d733",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/365350140a19459b3c763245339e062d1ae0d733/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9e508b55885ba747dce2e3fd5ef4c05572cda0b0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9e508b55885ba747dce2e3fd5ef4c05572cda0b0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9e508b55885ba747dce2e3fd5ef4c05572cda0b0"
      },
      {
        "sha": "3380713af5f47efba48fcbd153013e57c9004ded",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3380713af5f47efba48fcbd153013e57c9004ded",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3380713af5f47efba48fcbd153013e57c9004ded"
      }
    ],
    "stats": {
      "total": 69,
      "additions": 35,
      "deletions": 34
    },
    "files": [
      {
        "sha": "e1a9140f456eff2084b8aa7018a063bb0c6d9de2",
        "filename": "src/qt/coincontroldialog.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/365350140a19459b3c763245339e062d1ae0d733/src/qt/coincontroldialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/365350140a19459b3c763245339e062d1ae0d733/src/qt/coincontroldialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/coincontroldialog.cpp?ref=365350140a19459b3c763245339e062d1ae0d733",
        "patch": "@@ -449,7 +449,7 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n         }\n     }\n \n-    QString sPriorityLabel      = \"\";\n+    QString sPriorityLabel      = tr(\"none\");\n     int64_t nAmount             = 0;\n     int64_t nPayFee             = 0;\n     int64_t nAfterFee           = 0;\n@@ -593,18 +593,18 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n     l8->setText(BitcoinUnits::formatWithUnit(nDisplayUnit, nChange));        // Change\n \n     // turn labels \"red\"\n-    l5->setStyleSheet((nBytes >= 1000) ? \"color:red;\" : \"\");                // Bytes >= 1000\n-    l6->setStyleSheet((!AllowFree(dPriority)) ? \"color:red;\" : \"\");         // Priority < \"medium\"\n-    l7->setStyleSheet((fLowOutput) ? \"color:red;\" : \"\");                    // Low Output = \"yes\"\n-    l8->setStyleSheet((nChange > 0 && nChange < CENT) ? \"color:red;\" : \"\"); // Change < 0.01BTC\n+    l5->setStyleSheet((nBytes >= 1000) ? \"color:red;\" : \"\");                            // Bytes >= 1000\n+    l6->setStyleSheet((dPriority > 0 && !AllowFree(dPriority)) ? \"color:red;\" : \"\");    // Priority < \"medium\"\n+    l7->setStyleSheet((fLowOutput) ? \"color:red;\" : \"\");                                // Low Output = \"yes\"\n+    l8->setStyleSheet((nChange > 0 && nChange < CENT) ? \"color:red;\" : \"\");             // Change < 0.01BTC\n \n     // tool tips\n     QString toolTip1 = tr(\"This label turns red, if the transaction size is greater than 1000 bytes.\") + \"<br /><br />\";\n     toolTip1 += tr(\"This means a fee of at least %1 per kB is required.\").arg(BitcoinUnits::formatWithUnit(nDisplayUnit, CTransaction::nMinTxFee)) + \"<br /><br />\";\n     toolTip1 += tr(\"Can vary +/- 1 byte per input.\");\n \n     QString toolTip2 = tr(\"Transactions with higher priority are more likely to get included into a block.\") + \"<br /><br />\";\n-    toolTip2 += tr(\"This label turns red, if the priority is smaller than \\\"medium\\\"\") + \"<br /><br />\";\n+    toolTip2 += tr(\"This label turns red, if the priority is smaller than \\\"medium\\\".\") + \"<br /><br />\";\n     toolTip2 += tr(\"This means a fee of at least %1 per kB is required.\").arg(BitcoinUnits::formatWithUnit(nDisplayUnit, CTransaction::nMinTxFee));\n \n     QString toolTip3 = tr(\"This label turns red, if any recipient receives an amount smaller than %1.\").arg(BitcoinUnits::formatWithUnit(nDisplayUnit, CENT)) + \"<br /><br />\";"
      },
      {
        "sha": "92be835c566fe10575763f51b7b6bcce69bca2f0",
        "filename": "src/qt/sendcoinsdialog.cpp",
        "status": "modified",
        "additions": 29,
        "deletions": 28,
        "changes": 57,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/365350140a19459b3c763245339e062d1ae0d733/src/qt/sendcoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/365350140a19459b3c763245339e062d1ae0d733/src/qt/sendcoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.cpp?ref=365350140a19459b3c763245339e062d1ae0d733",
        "patch": "@@ -546,44 +546,45 @@ void SendCoinsDialog::coinControlChangeChecked(int state)\n // Coin Control: custom change address changed\n void SendCoinsDialog::coinControlChangeEdited(const QString& text)\n {\n-    if (model)\n+    if (model && model->getAddressTableModel())\n     {\n-        CoinControlDialog::coinControl->destChange = CBitcoinAddress(text.toStdString()).Get();\n+        // Default to no change address until verified\n+        CoinControlDialog::coinControl->destChange = CNoDestination();\n+        ui->labelCoinControlChangeLabel->setStyleSheet(\"QLabel{color:red;}\");\n+\n+        CBitcoinAddress addr = CBitcoinAddress(text.toStdString());\n \n-        // label for the change address\n-        ui->labelCoinControlChangeLabel->setStyleSheet(\"QLabel{color:black;}\");\n-        if (text.isEmpty())\n+        if (text.isEmpty()) // Nothing entered\n+        {\n             ui->labelCoinControlChangeLabel->setText(\"\");\n-        else if (!CBitcoinAddress(text.toStdString()).IsValid())\n+        }\n+        else if (!addr.IsValid()) // Invalid address\n         {\n-            // invalid change address\n-            CoinControlDialog::coinControl->destChange = CNoDestination();\n-\n             ui->lineEditCoinControlChange->setValid(false);\n-            ui->labelCoinControlChangeLabel->setStyleSheet(\"QLabel{color:red;}\");\n             ui->labelCoinControlChangeLabel->setText(tr(\"Warning: Invalid Bitcoin address\"));\n         }\n-        else\n+        else // Valid address\n         {\n-            QString associatedLabel = model->getAddressTableModel()->labelForAddress(text);\n-            if (!associatedLabel.isEmpty())\n-                ui->labelCoinControlChangeLabel->setText(associatedLabel);\n-            else\n+            CPubKey pubkey;\n+            CKeyID keyid;\n+            addr.GetKeyID(keyid);\n+            if (!model->getPubKey(keyid, pubkey)) // Unknown change address\n             {\n-                CPubKey pubkey;\n-                CKeyID keyid;\n-                CBitcoinAddress(text.toStdString()).GetKeyID(keyid);\n-                if (model->getPubKey(keyid, pubkey))\n-                    ui->labelCoinControlChangeLabel->setText(tr(\"(no label)\"));\n+                ui->lineEditCoinControlChange->setValid(false);\n+                ui->labelCoinControlChangeLabel->setText(tr(\"Warning: Unknown change address\"));\n+            }\n+            else // Known change address\n+            {\n+                ui->labelCoinControlChangeLabel->setStyleSheet(\"QLabel{color:black;}\");\n+\n+                // Query label\n+                QString associatedLabel = model->getAddressTableModel()->labelForAddress(text);\n+                if (!associatedLabel.isEmpty())\n+                    ui->labelCoinControlChangeLabel->setText(associatedLabel);\n                 else\n-                {\n-                    // unknown change address\n-                    CoinControlDialog::coinControl->destChange = CNoDestination();\n-\n-                    ui->lineEditCoinControlChange->setValid(false);\n-                    ui->labelCoinControlChangeLabel->setStyleSheet(\"QLabel{color:red;}\");\n-                    ui->labelCoinControlChangeLabel->setText(tr(\"Warning: Unknown change address\"));\n-                }\n+                    ui->labelCoinControlChangeLabel->setText(tr(\"(no label)\"));\n+\n+                CoinControlDialog::coinControl->destChange = addr.Get();\n             }\n         }\n     }"
      }
    ]
  },
  {
    "sha": "5fe19d640e50373ddaa810e5bfff9764d9ac549e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ZmUxOWQ2NDBlNTAzNzNkZGFhODEwZTViZmZmOTc2NGQ5YWM1NDll",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-20T16:12:39Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-20T16:12:39Z"
      },
      "message": "qt: make wallet test consistent\n\nAdd a function `WaitBlocks` to wait for blocks to propagate to all three\nnodes, and use this instead of waiting a fixed time of one second.\n\nFixes #3445.",
      "tree": {
        "sha": "72a53ad596e73a0113d2008eeacc1571fb4547f5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/72a53ad596e73a0113d2008eeacc1571fb4547f5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5fe19d640e50373ddaa810e5bfff9764d9ac549e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5fe19d640e50373ddaa810e5bfff9764d9ac549e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5fe19d640e50373ddaa810e5bfff9764d9ac549e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5fe19d640e50373ddaa810e5bfff9764d9ac549e/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "365350140a19459b3c763245339e062d1ae0d733",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/365350140a19459b3c763245339e062d1ae0d733",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/365350140a19459b3c763245339e062d1ae0d733"
      }
    ],
    "stats": {
      "total": 31,
      "additions": 26,
      "deletions": 5
    },
    "files": [
      {
        "sha": "e4e3953748ac2eddc3a8f7e4213489095b8c0951",
        "filename": "qa/rpc-tests/util.sh",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5fe19d640e50373ddaa810e5bfff9764d9ac549e/qa/rpc-tests/util.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5fe19d640e50373ddaa810e5bfff9764d9ac549e/qa/rpc-tests/util.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/util.sh?ref=5fe19d640e50373ddaa810e5bfff9764d9ac549e",
        "patch": "@@ -82,3 +82,9 @@ function CreateTxn1 {\n function SendRawTxn {\n   $CLI $1 sendrawtransaction $2\n }\n+\n+# Use: GetBlocks <datadir>\n+# returns number of blocks from getinfo\n+function GetBlocks {\n+    ExtractKey blocks \"$( $CLI $1 getinfo )\"\n+}"
      },
      {
        "sha": "118809a26554cc80688d56f06e9182bc6a740276",
        "filename": "qa/rpc-tests/wallet.sh",
        "status": "modified",
        "additions": 20,
        "deletions": 5,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5fe19d640e50373ddaa810e5bfff9764d9ac549e/qa/rpc-tests/wallet.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5fe19d640e50373ddaa810e5bfff9764d9ac549e/qa/rpc-tests/wallet.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/wallet.sh?ref=5fe19d640e50373ddaa810e5bfff9764d9ac549e",
        "patch": "@@ -37,12 +37,27 @@ B3PID=$!\n \n trap \"kill -9 $B1PID $B2PID $B3PID; rm -rf $D\" EXIT\n \n+# Wait until all three nodes are at the same block number\n+function WaitBlocks {\n+    while :\n+    do\n+        sleep 1\n+        BLOCKS1=$( GetBlocks $B1ARGS )\n+        BLOCKS2=$( GetBlocks $B2ARGS )\n+        BLOCKS3=$( GetBlocks $B3ARGS )\n+        if (( $BLOCKS1 == $BLOCKS2 && $BLOCKS2 == $BLOCKS3 ))\n+        then\n+            break\n+        fi\n+    done\n+}\n+\n # 1 block, 50 XBT each == 50 XBT\n $CLI $B1ARGS setgenerate true 1\n-sleep 1  # sleep is necessary to let block broadcast\n+WaitBlocks\n # 101 blocks, 1 mature == 50 XBT\n $CLI $B2ARGS setgenerate true 101\n-sleep 1\n+WaitBlocks\n \n CheckBalance $B1ARGS 50\n CheckBalance $B2ARGS 50\n@@ -56,11 +71,11 @@ Send $B1ARGS $B3ARGS 10\n # Have B1 mine a new block, and mature it\n # to recover transaction fees\n $CLI $B1ARGS setgenerate true 1\n-sleep 1\n+WaitBlocks\n \n # Have B2 mine 100 blocks so B1's block is mature:\n $CLI $B2ARGS setgenerate true 100\n-sleep 1\n+WaitBlocks\n \n # B1 should end up with 100 XBT in block rewards plus fees,\n # minus the 21 XBT sent to B3:\n@@ -77,7 +92,7 @@ RAWTXID2=$(SendRawTxn $B2ARGS $RAW2)\n \n # Have B2 mine a block to confirm transactions:\n $CLI $B2ARGS setgenerate true 1\n-sleep 1 # allow time for block to be relayed\n+WaitBlocks\n \n # Check balances after confirmation\n CheckBalance $B1ARGS 0"
      }
    ]
  },
  {
    "sha": "96e5f61d6c53299d1d7d7428a943c4db2ecf73c9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5NmU1ZjYxZDZjNTMyOTlkMWQ3ZDc0MjhhOTQzYzRkYjJlY2Y3M2M5",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2013-12-20T17:58:15Z"
      },
      "committer": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2013-12-20T17:58:15Z"
      },
      "message": "extend std::exception logging in txdb.cpp",
      "tree": {
        "sha": "da59761ccb7f15af7755d26ee1764a5040a8919a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/da59761ccb7f15af7755d26ee1764a5040a8919a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/96e5f61d6c53299d1d7d7428a943c4db2ecf73c9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/96e5f61d6c53299d1d7d7428a943c4db2ecf73c9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/96e5f61d6c53299d1d7d7428a943c4db2ecf73c9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/96e5f61d6c53299d1d7d7428a943c4db2ecf73c9/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "365350140a19459b3c763245339e062d1ae0d733",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/365350140a19459b3c763245339e062d1ae0d733",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/365350140a19459b3c763245339e062d1ae0d733"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 6,
      "deletions": 6
    },
    "files": [
      {
        "sha": "6ed0d187859f7ef377a1f22d1fe1eea2ae023248",
        "filename": "src/txdb.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96e5f61d6c53299d1d7d7428a943c4db2ecf73c9/src/txdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96e5f61d6c53299d1d7d7428a943c4db2ecf73c9/src/txdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txdb.cpp?ref=96e5f61d6c53299d1d7d7428a943c4db2ecf73c9",
        "patch": "@@ -26,8 +26,8 @@ void static BatchWriteHashBestChain(CLevelDBBatch &batch, const uint256 &hash) {\n CCoinsViewDB::CCoinsViewDB(size_t nCacheSize, bool fMemory, bool fWipe) : db(GetDataDir() / \"chainstate\", nCacheSize, fMemory, fWipe) {\n }\n \n-bool CCoinsViewDB::GetCoins(const uint256 &txid, CCoins &coins) { \n-    return db.Read(make_pair('c', txid), coins); \n+bool CCoinsViewDB::GetCoins(const uint256 &txid, CCoins &coins) {\n+    return db.Read(make_pair('c', txid), coins);\n }\n \n bool CCoinsViewDB::SetCoins(const uint256 &txid, const CCoins &coins) {\n@@ -37,7 +37,7 @@ bool CCoinsViewDB::SetCoins(const uint256 &txid, const CCoins &coins) {\n }\n \n bool CCoinsViewDB::HaveCoins(const uint256 &txid) {\n-    return db.Exists(make_pair('c', txid)); \n+    return db.Exists(make_pair('c', txid));\n }\n \n uint256 CCoinsViewDB::GetBestBlock() {\n@@ -131,7 +131,7 @@ bool CCoinsViewDB::GetStats(CCoinsStats &stats) {\n                 ssKey >> txhash;\n                 ss << txhash;\n                 ss << VARINT(coins.nVersion);\n-                ss << (coins.fCoinBase ? 'c' : 'n'); \n+                ss << (coins.fCoinBase ? 'c' : 'n');\n                 ss << VARINT(coins.nHeight);\n                 stats.nTransactions++;\n                 for (unsigned int i=0; i<coins.vout.size(); i++) {\n@@ -148,7 +148,7 @@ bool CCoinsViewDB::GetStats(CCoinsStats &stats) {\n             }\n             pcursor->Next();\n         } catch (std::exception &e) {\n-            return error(\"%s() : deserialize error\", __PRETTY_FUNCTION__);\n+            return error(\"%s : Deserialize or I/O error - %s\", __PRETTY_FUNCTION__, e.what());\n         }\n     }\n     delete pcursor;\n@@ -226,7 +226,7 @@ bool CBlockTreeDB::LoadBlockIndexGuts()\n                 break; // if shutdown requested or finished loading block index\n             }\n         } catch (std::exception &e) {\n-            return error(\"%s() : deserialize error\", __PRETTY_FUNCTION__);\n+            return error(\"%s : Deserialize or I/O error - %s\", __PRETTY_FUNCTION__, e.what());\n         }\n     }\n     delete pcursor;"
      }
    ]
  },
  {
    "sha": "f46babc8c8271b1f25d35ae3c2f5257ae9159336",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmNDZiYWJjOGM4MjcxYjFmMjVkMzVhZTNjMmY1MjU3YWU5MTU5MzM2",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-21T09:21:54Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-21T09:22:01Z"
      },
      "message": "Merge pull request #3451\n\n5fe19d6 qt: make wallet test consistent (Wladimir J. van der Laan)",
      "tree": {
        "sha": "72a53ad596e73a0113d2008eeacc1571fb4547f5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/72a53ad596e73a0113d2008eeacc1571fb4547f5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f46babc8c8271b1f25d35ae3c2f5257ae9159336",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJStV25AAoJEHSBCwEjRsmmIHwH/24jdc79wsjE/JcAM4QmvZnA\nyQrL9gBt2ZOwCwSINaiC9GkrkR/Y4A3h+SFukhSZlABjcfQL+ADvKRo4cMALeHcl\nF1VFtdc3NTcm/4/Lhha4HupZVr51rJBy2pRdF/b8jiqbwMweRb+WtBVxb5PbQQ1Z\nQwwkO9ZlO/FNu3k3ofZYPQQMih67qNk3LejclOAKG7t6MSfY0vL7dVKQ7j2PFQH0\nbiLNRWuPIpZBNK2vZ2UVuFnmGgqb0b99BVL0qoitd/pBcuXcpA4IfUtLS/qCSUD4\nuGzDEUYw4KGch41ahy+AncM1nx0dkbGfk5gCH9C3/6/IrBYvvwGSOTFBeqEstTc=\n=ieiN\n-----END PGP SIGNATURE-----",
        "payload": "tree 72a53ad596e73a0113d2008eeacc1571fb4547f5\nparent 365350140a19459b3c763245339e062d1ae0d733\nparent 5fe19d640e50373ddaa810e5bfff9764d9ac549e\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1387617714 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1387617721 +0100\n\nMerge pull request #3451\n\n5fe19d6 qt: make wallet test consistent (Wladimir J. van der Laan)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f46babc8c8271b1f25d35ae3c2f5257ae9159336",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f46babc8c8271b1f25d35ae3c2f5257ae9159336",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f46babc8c8271b1f25d35ae3c2f5257ae9159336/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "365350140a19459b3c763245339e062d1ae0d733",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/365350140a19459b3c763245339e062d1ae0d733",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/365350140a19459b3c763245339e062d1ae0d733"
      },
      {
        "sha": "5fe19d640e50373ddaa810e5bfff9764d9ac549e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5fe19d640e50373ddaa810e5bfff9764d9ac549e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5fe19d640e50373ddaa810e5bfff9764d9ac549e"
      }
    ],
    "stats": {
      "total": 31,
      "additions": 26,
      "deletions": 5
    },
    "files": [
      {
        "sha": "e4e3953748ac2eddc3a8f7e4213489095b8c0951",
        "filename": "qa/rpc-tests/util.sh",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f46babc8c8271b1f25d35ae3c2f5257ae9159336/qa/rpc-tests/util.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f46babc8c8271b1f25d35ae3c2f5257ae9159336/qa/rpc-tests/util.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/util.sh?ref=f46babc8c8271b1f25d35ae3c2f5257ae9159336",
        "patch": "@@ -82,3 +82,9 @@ function CreateTxn1 {\n function SendRawTxn {\n   $CLI $1 sendrawtransaction $2\n }\n+\n+# Use: GetBlocks <datadir>\n+# returns number of blocks from getinfo\n+function GetBlocks {\n+    ExtractKey blocks \"$( $CLI $1 getinfo )\"\n+}"
      },
      {
        "sha": "118809a26554cc80688d56f06e9182bc6a740276",
        "filename": "qa/rpc-tests/wallet.sh",
        "status": "modified",
        "additions": 20,
        "deletions": 5,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f46babc8c8271b1f25d35ae3c2f5257ae9159336/qa/rpc-tests/wallet.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f46babc8c8271b1f25d35ae3c2f5257ae9159336/qa/rpc-tests/wallet.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/wallet.sh?ref=f46babc8c8271b1f25d35ae3c2f5257ae9159336",
        "patch": "@@ -37,12 +37,27 @@ B3PID=$!\n \n trap \"kill -9 $B1PID $B2PID $B3PID; rm -rf $D\" EXIT\n \n+# Wait until all three nodes are at the same block number\n+function WaitBlocks {\n+    while :\n+    do\n+        sleep 1\n+        BLOCKS1=$( GetBlocks $B1ARGS )\n+        BLOCKS2=$( GetBlocks $B2ARGS )\n+        BLOCKS3=$( GetBlocks $B3ARGS )\n+        if (( $BLOCKS1 == $BLOCKS2 && $BLOCKS2 == $BLOCKS3 ))\n+        then\n+            break\n+        fi\n+    done\n+}\n+\n # 1 block, 50 XBT each == 50 XBT\n $CLI $B1ARGS setgenerate true 1\n-sleep 1  # sleep is necessary to let block broadcast\n+WaitBlocks\n # 101 blocks, 1 mature == 50 XBT\n $CLI $B2ARGS setgenerate true 101\n-sleep 1\n+WaitBlocks\n \n CheckBalance $B1ARGS 50\n CheckBalance $B2ARGS 50\n@@ -56,11 +71,11 @@ Send $B1ARGS $B3ARGS 10\n # Have B1 mine a new block, and mature it\n # to recover transaction fees\n $CLI $B1ARGS setgenerate true 1\n-sleep 1\n+WaitBlocks\n \n # Have B2 mine 100 blocks so B1's block is mature:\n $CLI $B2ARGS setgenerate true 100\n-sleep 1\n+WaitBlocks\n \n # B1 should end up with 100 XBT in block rewards plus fees,\n # minus the 21 XBT sent to B3:\n@@ -77,7 +92,7 @@ RAWTXID2=$(SendRawTxn $B2ARGS $RAW2)\n \n # Have B2 mine a block to confirm transactions:\n $CLI $B2ARGS setgenerate true 1\n-sleep 1 # allow time for block to be relayed\n+WaitBlocks\n \n # Check balances after confirmation\n CheckBalance $B1ARGS 0"
      }
    ]
  },
  {
    "sha": "d78f35a909aac7c4456cee24bad2125205288d16",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkNzhmMzVhOTA5YWFjN2M0NDU2Y2VlMjRiYWQyMTI1MjA1Mjg4ZDE2",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-23T06:16:56Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-23T06:49:32Z"
      },
      "message": "Explicitly ensure that wallet is unlocked in `importprivkey`\n\nThis makes for a more useful error reply (fixes #957).",
      "tree": {
        "sha": "e2c8e3c061cdbc8630920a25526f7fff48466cb6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e2c8e3c061cdbc8630920a25526f7fff48466cb6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d78f35a909aac7c4456cee24bad2125205288d16",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d78f35a909aac7c4456cee24bad2125205288d16",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d78f35a909aac7c4456cee24bad2125205288d16",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d78f35a909aac7c4456cee24bad2125205288d16/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f46babc8c8271b1f25d35ae3c2f5257ae9159336",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f46babc8c8271b1f25d35ae3c2f5257ae9159336",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f46babc8c8271b1f25d35ae3c2f5257ae9159336"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 2,
      "deletions": 0
    },
    "files": [
      {
        "sha": "c801b284cb8ad813977b58f2a48fa7527617fc75",
        "filename": "src/rpcdump.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d78f35a909aac7c4456cee24bad2125205288d16/src/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d78f35a909aac7c4456cee24bad2125205288d16/src/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcdump.cpp?ref=d78f35a909aac7c4456cee24bad2125205288d16",
        "patch": "@@ -86,6 +86,8 @@ Value importprivkey(const Array& params, bool fHelp)\n             + HelpExampleRpc(\"importprivkey\", \"\\\"mykey\\\", \\\"testing\\\", false\")\n         );\n \n+    EnsureWalletIsUnlocked();\n+\n     string strSecret = params[0].get_str();\n     string strLabel = \"\";\n     if (params.size() > 1)"
      }
    ]
  },
  {
    "sha": "362755d01817891defcbae696d34f0ff8266a1d0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNjI3NTVkMDE4MTc4OTFkZWZjYmFlNjk2ZDM0ZjBmZjgyNjZhMWQw",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-23T08:52:55Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-23T08:53:30Z"
      },
      "message": "Merge pull request #3427\n\n1ad2636 qt: Prevent non-functional GUI from popping up during Init (Wladimir J. van der Laan)",
      "tree": {
        "sha": "e8af54f2d8a7cbc93d33ca29ef56689a58113411",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e8af54f2d8a7cbc93d33ca29ef56689a58113411"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/362755d01817891defcbae696d34f0ff8266a1d0",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJSt/oKAAoJEHSBCwEjRsmmRiIH/jqqy/YpUdWHBb5sD/EVtGTe\nZdD8mkUWE13osI88tpVS/5Jc0YGzNYbKi/7mlqIr1o76StIsUUP7P4qM3YlJjwdn\nsIXq+Gj8qFx8Ra+25bxruRrYfye7M8cQNeO1/+0uDZq9tmgLVwlyaUZV40De77+O\nm61X/vdvPu6NyX7p77AGD7OaauHK2AAZMs06fipuYe83BF2xAcH/BUeioCXS2IOi\nN+pLXt4J1spDpNMgEpMo7h/GT6H68UMEbeZARWfpTCJkxEG4A1A20I1Nj6n/bdx8\nN74Oc/r0XFCQa/Db2vzhCmt6DDL9/YtxPD33zMeT8T4a60UaLUITrIWQilM3rlU=\n=McN+\n-----END PGP SIGNATURE-----",
        "payload": "tree e8af54f2d8a7cbc93d33ca29ef56689a58113411\nparent f46babc8c8271b1f25d35ae3c2f5257ae9159336\nparent 1ad26362c92c7d5678c24df85fd7b9ab1d3d34fe\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1387788775 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1387788810 +0100\n\nMerge pull request #3427\n\n1ad2636 qt: Prevent non-functional GUI from popping up during Init (Wladimir J. van der Laan)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/362755d01817891defcbae696d34f0ff8266a1d0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/362755d01817891defcbae696d34f0ff8266a1d0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/362755d01817891defcbae696d34f0ff8266a1d0/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f46babc8c8271b1f25d35ae3c2f5257ae9159336",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f46babc8c8271b1f25d35ae3c2f5257ae9159336",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f46babc8c8271b1f25d35ae3c2f5257ae9159336"
      },
      {
        "sha": "1ad26362c92c7d5678c24df85fd7b9ab1d3d34fe",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1ad26362c92c7d5678c24df85fd7b9ab1d3d34fe",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1ad26362c92c7d5678c24df85fd7b9ab1d3d34fe"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 9,
      "deletions": 4
    },
    "files": [
      {
        "sha": "6b100ce148a5f4e03c64149042525aa9b4b03b78",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/362755d01817891defcbae696d34f0ff8266a1d0/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/362755d01817891defcbae696d34f0ff8266a1d0/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=362755d01817891defcbae696d34f0ff8266a1d0",
        "patch": "@@ -164,13 +164,13 @@ void HandleSIGHUP(int)\n \n bool static InitError(const std::string &str)\n {\n-    uiInterface.ThreadSafeMessageBox(str, \"\", CClientUIInterface::MSG_ERROR);\n+    uiInterface.ThreadSafeMessageBox(str, \"\", CClientUIInterface::MSG_ERROR | CClientUIInterface::NOSHOWGUI);\n     return false;\n }\n \n bool static InitWarning(const std::string &str)\n {\n-    uiInterface.ThreadSafeMessageBox(str, \"\", CClientUIInterface::MSG_WARNING);\n+    uiInterface.ThreadSafeMessageBox(str, \"\", CClientUIInterface::MSG_WARNING | CClientUIInterface::NOSHOWGUI);\n     return true;\n }\n "
      },
      {
        "sha": "6be5a64015a6bf6199230bac098b2b8c969dca81",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 2,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/362755d01817891defcbae696d34f0ff8266a1d0/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/362755d01817891defcbae696d34f0ff8266a1d0/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=362755d01817891defcbae696d34f0ff8266a1d0",
        "patch": "@@ -684,8 +684,11 @@ void BitcoinGUI::message(const QString &title, const QString &message, unsigned\n         if (!(buttons = (QMessageBox::StandardButton)(style & CClientUIInterface::BTN_MASK)))\n             buttons = QMessageBox::Ok;\n \n-        // Ensure we get users attention\n-        showNormalIfMinimized();\n+        // Ensure we get users attention, but only if main window is visible\n+        // as we don't want to pop up the main window for messages that happen before\n+        // initialization is finished.\n+        if(!(style & CClientUIInterface::NOSHOWGUI))\n+            showNormalIfMinimized();\n         QMessageBox mBox((QMessageBox::Icon)nMBoxIcon, strTitle, message, buttons, this);\n         int r = mBox.exec();\n         if (ret != NULL)"
      },
      {
        "sha": "677d097fa4a566dcabf0e6c624ad39a807b72231",
        "filename": "src/ui_interface.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/362755d01817891defcbae696d34f0ff8266a1d0/src/ui_interface.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/362755d01817891defcbae696d34f0ff8266a1d0/src/ui_interface.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/ui_interface.h?ref=362755d01817891defcbae696d34f0ff8266a1d0",
        "patch": "@@ -62,6 +62,8 @@ class CClientUIInterface\n \n         /** Force blocking, modal message box dialog (not just OS notification) */\n         MODAL               = 0x10000000U,\n+        /** Don't bring GUI to foreground. Use for messages during initialization */\n+        NOSHOWGUI           = 0x20000000U,\n \n         /** Predefined combinations for certain default usage cases */\n         MSG_INFORMATION = ICON_INFORMATION,"
      }
    ]
  },
  {
    "sha": "086d7ec2b8c6ee352af820fe57908d43ec86f586",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowODZkN2VjMmI4YzZlZTM1MmFmODIwZmU1NzkwOGQ0M2VjODZmNTg2",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-24T08:41:48Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-24T08:43:05Z"
      },
      "message": "Merge pull request #3457\n\nd78f35a Explicitly ensure that wallet is unlocked in `importprivkey` (Wladimir J. van der Laan)",
      "tree": {
        "sha": "e33cd661f70d6dc1b1e13ec564254e6ee338d3eb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e33cd661f70d6dc1b1e13ec564254e6ee338d3eb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/086d7ec2b8c6ee352af820fe57908d43ec86f586",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJSuUkZAAoJEHSBCwEjRsmmjEMIAK+ItadySn9yLuO+6Y8sp4aP\no3yqANZURSmNM95lLMak5jSm2EnGRLuULKJVjMx/crVwcvKarhR6WU2OTRcGyTxv\neksv9smoMp9PYfyhv34O32lQyklErIA/8SeKuRArM79u+FbGN/Va2SObevQJ2njN\nzBdjxOTQlb302H7apSpRBwTyGSMAiOiUPKVO8BsX2M6j9QUaezOf5lb2a2AzHjIu\nqerZjyrc818p+gS9Yb2meId2fFtr5iT8jIwdqICDjTcqbQx6CKsXO+8mfMLoGG8R\nejKKfOP4m4ausRHdtN3dfVHUeZhr96H1xp1jYt4Uf7qermC/AmvuXuRMCQjss00=\n=gRoD\n-----END PGP SIGNATURE-----",
        "payload": "tree e33cd661f70d6dc1b1e13ec564254e6ee338d3eb\nparent 362755d01817891defcbae696d34f0ff8266a1d0\nparent d78f35a909aac7c4456cee24bad2125205288d16\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1387874508 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1387874585 +0100\n\nMerge pull request #3457\n\nd78f35a Explicitly ensure that wallet is unlocked in `importprivkey` (Wladimir J. van der Laan)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/086d7ec2b8c6ee352af820fe57908d43ec86f586",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/086d7ec2b8c6ee352af820fe57908d43ec86f586",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/086d7ec2b8c6ee352af820fe57908d43ec86f586/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "362755d01817891defcbae696d34f0ff8266a1d0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/362755d01817891defcbae696d34f0ff8266a1d0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/362755d01817891defcbae696d34f0ff8266a1d0"
      },
      {
        "sha": "d78f35a909aac7c4456cee24bad2125205288d16",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d78f35a909aac7c4456cee24bad2125205288d16",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d78f35a909aac7c4456cee24bad2125205288d16"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 2,
      "deletions": 0
    },
    "files": [
      {
        "sha": "c801b284cb8ad813977b58f2a48fa7527617fc75",
        "filename": "src/rpcdump.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/086d7ec2b8c6ee352af820fe57908d43ec86f586/src/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/086d7ec2b8c6ee352af820fe57908d43ec86f586/src/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcdump.cpp?ref=086d7ec2b8c6ee352af820fe57908d43ec86f586",
        "patch": "@@ -86,6 +86,8 @@ Value importprivkey(const Array& params, bool fHelp)\n             + HelpExampleRpc(\"importprivkey\", \"\\\"mykey\\\", \\\"testing\\\", false\")\n         );\n \n+    EnsureWalletIsUnlocked();\n+\n     string strSecret = params[0].get_str();\n     string strLabel = \"\";\n     if (params.size() > 1)"
      }
    ]
  },
  {
    "sha": "6e7792003b5c520fcc81d223f07471d690594081",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ZTc3OTIwMDNiNWM1MjBmY2M4MWQyMjNmMDc0NzFkNjkwNTk0MDgx",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-24T09:06:10Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-24T09:06:58Z"
      },
      "message": "Merge pull request #3453\n\n96e5f61 extend std::exception logging in txdb.cpp (Philip Kaufmann)",
      "tree": {
        "sha": "bf0b6cb7819af555448a4cc159220c349360e3db",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bf0b6cb7819af555448a4cc159220c349360e3db"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6e7792003b5c520fcc81d223f07471d690594081",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJSuU6yAAoJEHSBCwEjRsmmOF8H/RZnfMziqkuE/FDEZQtMehJJ\nil8lrG9VvKP0hup8Blkz/CL7tdfeCRn6t6+pXyhmKJNE0o9b+oRI3E3u7Jg9FzXH\nNyf9E03+uzv0Zq0A4KYHXEDVD8FEOsaxJ6/8svKhSRqNPcW2i4lWAGd/pFDN1GrS\nw8i2XPOOJDeuLHxfJ2OX2BjM9YGkCTXaYM8bvVRXYvcwMJwRhCh/O2rGsYl7le99\n7UO3Fy2vb5YU4vRBzB1rVZ1sGBp3KFHO39pqxyRNmh0oVWLiHyN5TXTcms2Yqus8\nm/vaWGTCebFWV5E/o/HHZ8GTf/cCVHc3yU7a7aN4RLfsH4mr3f5IvE5OU+OqC1I=\n=KYtS\n-----END PGP SIGNATURE-----",
        "payload": "tree bf0b6cb7819af555448a4cc159220c349360e3db\nparent 086d7ec2b8c6ee352af820fe57908d43ec86f586\nparent 96e5f61d6c53299d1d7d7428a943c4db2ecf73c9\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1387875970 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1387876018 +0100\n\nMerge pull request #3453\n\n96e5f61 extend std::exception logging in txdb.cpp (Philip Kaufmann)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6e7792003b5c520fcc81d223f07471d690594081",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6e7792003b5c520fcc81d223f07471d690594081",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6e7792003b5c520fcc81d223f07471d690594081/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "086d7ec2b8c6ee352af820fe57908d43ec86f586",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/086d7ec2b8c6ee352af820fe57908d43ec86f586",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/086d7ec2b8c6ee352af820fe57908d43ec86f586"
      },
      {
        "sha": "96e5f61d6c53299d1d7d7428a943c4db2ecf73c9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/96e5f61d6c53299d1d7d7428a943c4db2ecf73c9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/96e5f61d6c53299d1d7d7428a943c4db2ecf73c9"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 6,
      "deletions": 6
    },
    "files": [
      {
        "sha": "6ed0d187859f7ef377a1f22d1fe1eea2ae023248",
        "filename": "src/txdb.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e7792003b5c520fcc81d223f07471d690594081/src/txdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e7792003b5c520fcc81d223f07471d690594081/src/txdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txdb.cpp?ref=6e7792003b5c520fcc81d223f07471d690594081",
        "patch": "@@ -26,8 +26,8 @@ void static BatchWriteHashBestChain(CLevelDBBatch &batch, const uint256 &hash) {\n CCoinsViewDB::CCoinsViewDB(size_t nCacheSize, bool fMemory, bool fWipe) : db(GetDataDir() / \"chainstate\", nCacheSize, fMemory, fWipe) {\n }\n \n-bool CCoinsViewDB::GetCoins(const uint256 &txid, CCoins &coins) { \n-    return db.Read(make_pair('c', txid), coins); \n+bool CCoinsViewDB::GetCoins(const uint256 &txid, CCoins &coins) {\n+    return db.Read(make_pair('c', txid), coins);\n }\n \n bool CCoinsViewDB::SetCoins(const uint256 &txid, const CCoins &coins) {\n@@ -37,7 +37,7 @@ bool CCoinsViewDB::SetCoins(const uint256 &txid, const CCoins &coins) {\n }\n \n bool CCoinsViewDB::HaveCoins(const uint256 &txid) {\n-    return db.Exists(make_pair('c', txid)); \n+    return db.Exists(make_pair('c', txid));\n }\n \n uint256 CCoinsViewDB::GetBestBlock() {\n@@ -131,7 +131,7 @@ bool CCoinsViewDB::GetStats(CCoinsStats &stats) {\n                 ssKey >> txhash;\n                 ss << txhash;\n                 ss << VARINT(coins.nVersion);\n-                ss << (coins.fCoinBase ? 'c' : 'n'); \n+                ss << (coins.fCoinBase ? 'c' : 'n');\n                 ss << VARINT(coins.nHeight);\n                 stats.nTransactions++;\n                 for (unsigned int i=0; i<coins.vout.size(); i++) {\n@@ -148,7 +148,7 @@ bool CCoinsViewDB::GetStats(CCoinsStats &stats) {\n             }\n             pcursor->Next();\n         } catch (std::exception &e) {\n-            return error(\"%s() : deserialize error\", __PRETTY_FUNCTION__);\n+            return error(\"%s : Deserialize or I/O error - %s\", __PRETTY_FUNCTION__, e.what());\n         }\n     }\n     delete pcursor;\n@@ -226,7 +226,7 @@ bool CBlockTreeDB::LoadBlockIndexGuts()\n                 break; // if shutdown requested or finished loading block index\n             }\n         } catch (std::exception &e) {\n-            return error(\"%s() : deserialize error\", __PRETTY_FUNCTION__);\n+            return error(\"%s : Deserialize or I/O error - %s\", __PRETTY_FUNCTION__, e.what());\n         }\n     }\n     delete pcursor;"
      }
    ]
  },
  {
    "sha": "e85e19be06c59529bfda100729e8ef3148349952",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplODVlMTliZTA2YzU5NTI5YmZkYTEwMDcyOWU4ZWYzMTQ4MzQ5OTUy",
    "commit": {
      "author": {
        "name": "Thomas Holenstein",
        "email": "thomas.holenstein@gmail.com",
        "date": "2013-12-21T15:50:49Z"
      },
      "committer": {
        "name": "Thomas Holenstein",
        "email": "thomas.holenstein@gmail.com",
        "date": "2013-12-25T10:07:21Z"
      },
      "message": "Changed Get64(.) to GetLow64()\n\nThe function Get64(.) has a bug in case the width is not divisible by 64.\nSince it is only ever used as Get64(0) this simply changes it to this\nspecial case. Additionally, an assert is added, and a cast to prevent\na compiler error.",
      "tree": {
        "sha": "c1be2bb3178a5e9a9eadd61cded2067094f83271",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c1be2bb3178a5e9a9eadd61cded2067094f83271"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e85e19be06c59529bfda100729e8ef3148349952",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e85e19be06c59529bfda100729e8ef3148349952",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e85e19be06c59529bfda100729e8ef3148349952",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e85e19be06c59529bfda100729e8ef3148349952/comments",
    "author": {
      "login": "tholenst",
      "id": 4568264,
      "node_id": "MDQ6VXNlcjQ1NjgyNjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4568264?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tholenst",
      "html_url": "https://github.com/tholenst",
      "followers_url": "https://api.github.com/users/tholenst/followers",
      "following_url": "https://api.github.com/users/tholenst/following{/other_user}",
      "gists_url": "https://api.github.com/users/tholenst/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tholenst/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tholenst/subscriptions",
      "organizations_url": "https://api.github.com/users/tholenst/orgs",
      "repos_url": "https://api.github.com/users/tholenst/repos",
      "events_url": "https://api.github.com/users/tholenst/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tholenst/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "tholenst",
      "id": 4568264,
      "node_id": "MDQ6VXNlcjQ1NjgyNjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4568264?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tholenst",
      "html_url": "https://github.com/tholenst",
      "followers_url": "https://api.github.com/users/tholenst/followers",
      "following_url": "https://api.github.com/users/tholenst/following{/other_user}",
      "gists_url": "https://api.github.com/users/tholenst/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tholenst/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tholenst/subscriptions",
      "organizations_url": "https://api.github.com/users/tholenst/orgs",
      "repos_url": "https://api.github.com/users/tholenst/repos",
      "events_url": "https://api.github.com/users/tholenst/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tholenst/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6e7792003b5c520fcc81d223f07471d690594081",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6e7792003b5c520fcc81d223f07471d690594081",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6e7792003b5c520fcc81d223f07471d690594081"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 8,
      "deletions": 7
    },
    "files": [
      {
        "sha": "46b4a94938055dcb36b91af22a181d16b5f5adce",
        "filename": "src/addrman.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e85e19be06c59529bfda100729e8ef3148349952/src/addrman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e85e19be06c59529bfda100729e8ef3148349952/src/addrman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrman.cpp?ref=e85e19be06c59529bfda100729e8ef3148349952",
        "patch": "@@ -14,12 +14,12 @@ int CAddrInfo::GetTriedBucket(const std::vector<unsigned char> &nKey) const\n     CDataStream ss1(SER_GETHASH, 0);\n     std::vector<unsigned char> vchKey = GetKey();\n     ss1 << nKey << vchKey;\n-    uint64_t hash1 = Hash(ss1.begin(), ss1.end()).Get64();\n+    uint64_t hash1 = Hash(ss1.begin(), ss1.end()).GetLow64();\n \n     CDataStream ss2(SER_GETHASH, 0);\n     std::vector<unsigned char> vchGroupKey = GetGroup();\n     ss2 << nKey << vchGroupKey << (hash1 % ADDRMAN_TRIED_BUCKETS_PER_GROUP);\n-    uint64_t hash2 = Hash(ss2.begin(), ss2.end()).Get64();\n+    uint64_t hash2 = Hash(ss2.begin(), ss2.end()).GetLow64();\n     return hash2 % ADDRMAN_TRIED_BUCKET_COUNT;\n }\n \n@@ -29,11 +29,11 @@ int CAddrInfo::GetNewBucket(const std::vector<unsigned char> &nKey, const CNetAd\n     std::vector<unsigned char> vchGroupKey = GetGroup();\n     std::vector<unsigned char> vchSourceGroupKey = src.GetGroup();\n     ss1 << nKey << vchGroupKey << vchSourceGroupKey;\n-    uint64_t hash1 = Hash(ss1.begin(), ss1.end()).Get64();\n+    uint64_t hash1 = Hash(ss1.begin(), ss1.end()).GetLow64();\n \n     CDataStream ss2(SER_GETHASH, 0);\n     ss2 << nKey << vchSourceGroupKey << (hash1 % ADDRMAN_NEW_BUCKETS_PER_SOURCE_GROUP);\n-    uint64_t hash2 = Hash(ss2.begin(), ss2.end()).Get64();\n+    uint64_t hash2 = Hash(ss2.begin(), ss2.end()).GetLow64();\n     return hash2 % ADDRMAN_NEW_BUCKET_COUNT;\n }\n "
      },
      {
        "sha": "c19d82ceb54ae53d7f5b43bf5aff4d238443c499",
        "filename": "src/uint256.h",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e85e19be06c59529bfda100729e8ef3148349952/src/uint256.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e85e19be06c59529bfda100729e8ef3148349952/src/uint256.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/uint256.h?ref=e85e19be06c59529bfda100729e8ef3148349952",
        "patch": "@@ -203,7 +203,7 @@ class base_uint\n     {\n         // prefix operator\n         int i = 0;\n-        while (--pn[i] == -1 && i < WIDTH-1)\n+        while (--pn[i] == (uint32_t)-1 && i < WIDTH-1)\n             i++;\n         return *this;\n     }\n@@ -370,9 +370,10 @@ class base_uint\n         return sizeof(pn);\n     }\n \n-    uint64_t Get64(int n=0) const\n+    uint64_t GetLow64() const\n     {\n-        return pn[2*n] | (uint64_t)pn[2*n+1] << 32;\n+        assert(WIDTH >= 2);\n+        return pn[0] | (uint64_t)pn[1] << 32;\n     }\n \n //    unsigned int GetSerializeSize(int nType=0, int nVersion=PROTOCOL_VERSION) const"
      }
    ]
  },
  {
    "sha": "daa6b20e29f3926a16d4da6962ff00b74623fc6b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkYWE2YjIwZTI5ZjM5MjZhMTZkNGRhNjk2MmZmMDBiNzQ2MjNmYzZi",
    "commit": {
      "author": {
        "name": "Thomas Holenstein",
        "email": "thomas.holenstein@gmail.com",
        "date": "2013-12-21T15:54:43Z"
      },
      "committer": {
        "name": "Thomas Holenstein",
        "email": "thomas.holenstein@gmail.com",
        "date": "2013-12-25T10:07:21Z"
      },
      "message": "Unittests for uint256.h\n\nUnit tests for uint256.h. The file uint160_tests.cpp is no longer\nneeded. The ad-hoc tests which were in uint256.h are also no longer\nneeded. The new tests achieve 100% coverage.",
      "tree": {
        "sha": "e2a653501b515319d63b1c4ddddd61498204d17c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e2a653501b515319d63b1c4ddddd61498204d17c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/daa6b20e29f3926a16d4da6962ff00b74623fc6b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/daa6b20e29f3926a16d4da6962ff00b74623fc6b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/daa6b20e29f3926a16d4da6962ff00b74623fc6b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/daa6b20e29f3926a16d4da6962ff00b74623fc6b/comments",
    "author": {
      "login": "tholenst",
      "id": 4568264,
      "node_id": "MDQ6VXNlcjQ1NjgyNjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4568264?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tholenst",
      "html_url": "https://github.com/tholenst",
      "followers_url": "https://api.github.com/users/tholenst/followers",
      "following_url": "https://api.github.com/users/tholenst/following{/other_user}",
      "gists_url": "https://api.github.com/users/tholenst/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tholenst/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tholenst/subscriptions",
      "organizations_url": "https://api.github.com/users/tholenst/orgs",
      "repos_url": "https://api.github.com/users/tholenst/repos",
      "events_url": "https://api.github.com/users/tholenst/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tholenst/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "tholenst",
      "id": 4568264,
      "node_id": "MDQ6VXNlcjQ1NjgyNjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4568264?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tholenst",
      "html_url": "https://github.com/tholenst",
      "followers_url": "https://api.github.com/users/tholenst/followers",
      "following_url": "https://api.github.com/users/tholenst/following{/other_user}",
      "gists_url": "https://api.github.com/users/tholenst/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tholenst/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tholenst/subscriptions",
      "organizations_url": "https://api.github.com/users/tholenst/orgs",
      "repos_url": "https://api.github.com/users/tholenst/repos",
      "events_url": "https://api.github.com/users/tholenst/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tholenst/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e85e19be06c59529bfda100729e8ef3148349952",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e85e19be06c59529bfda100729e8ef3148349952",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e85e19be06c59529bfda100729e8ef3148349952"
      }
    ],
    "stats": {
      "total": 806,
      "additions": 620,
      "deletions": 186
    },
    "files": [
      {
        "sha": "384616e89755c59eddaebff1d82eca4bf5dea5ea",
        "filename": "src/test/Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/daa6b20e29f3926a16d4da6962ff00b74623fc6b/src/test/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/daa6b20e29f3926a16d4da6962ff00b74623fc6b/src/test/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/Makefile.am?ref=daa6b20e29f3926a16d4da6962ff00b74623fc6b",
        "patch": "@@ -34,7 +34,7 @@ test_bitcoin_SOURCES = alert_tests.cpp \\\n   key_tests.cpp miner_tests.cpp mruset_tests.cpp multisig_tests.cpp \\\n   netbase_tests.cpp pmt_tests.cpp rpc_tests.cpp script_P2SH_tests.cpp \\\n   script_tests.cpp serialize_tests.cpp sigopcount_tests.cpp test_bitcoin.cpp \\\n-  transaction_tests.cpp uint160_tests.cpp uint256_tests.cpp util_tests.cpp \\\n+  transaction_tests.cpp uint256_tests.cpp util_tests.cpp \\\n   sighash_tests.cpp $(JSON_TEST_FILES) $(RAW_TEST_FILES)\n \n if ENABLE_WALLET"
      },
      {
        "sha": "87418fabec44b41d78334e66182b4794c8b38547",
        "filename": "src/test/uint160_tests.cpp",
        "status": "removed",
        "additions": 0,
        "deletions": 20,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e85e19be06c59529bfda100729e8ef3148349952/src/test/uint160_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e85e19be06c59529bfda100729e8ef3148349952/src/test/uint160_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/uint160_tests.cpp?ref=e85e19be06c59529bfda100729e8ef3148349952",
        "patch": "@@ -1,20 +0,0 @@\n-#include \"uint256.h\"\n-\n-#include <stdint.h>\n-\n-#include <boost/test/unit_test.hpp>\n-\n-BOOST_AUTO_TEST_SUITE(uint160_tests)\n-\n-BOOST_AUTO_TEST_CASE(uint160_equality)\n-{\n-    uint160 num1 = 10;\n-    uint160 num2 = 11;\n-    BOOST_CHECK(num1+1 == num2);\n-\n-    uint64_t num3 = 10;\n-    BOOST_CHECK(num1 == num3);\n-    BOOST_CHECK(num1+num2 == num3+num2);\n-}\n-\n-BOOST_AUTO_TEST_SUITE_END()"
      },
      {
        "sha": "368484fdff525859d14ed8441c1c13e41828ce3d",
        "filename": "src/test/uint256_tests.cpp",
        "status": "modified",
        "additions": 619,
        "deletions": 15,
        "changes": 634,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/daa6b20e29f3926a16d4da6962ff00b74623fc6b/src/test/uint256_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/daa6b20e29f3926a16d4da6962ff00b74623fc6b/src/test/uint256_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/uint256_tests.cpp?ref=daa6b20e29f3926a16d4da6962ff00b74623fc6b",
        "patch": "@@ -1,29 +1,633 @@\n+#include <boost/test/unit_test.hpp>\n+#include <stdint.h>\n+#include <sstream>\n+#include <iomanip>\n+#include <limits>\n+#include <cmath>\n #include \"uint256.h\"\n #include <string>\n+#include \"version.h\"\n \n-#include <stdint.h>\n+BOOST_AUTO_TEST_SUITE(uint256_tests)\n+ \n+const unsigned char R1Array[] = \n+    \"\\x9c\\x52\\x4a\\xdb\\xcf\\x56\\x11\\x12\\x2b\\x29\\x12\\x5e\\x5d\\x35\\xd2\\xd2\"\n+    \"\\x22\\x81\\xaa\\xb5\\x33\\xf0\\x08\\x32\\xd5\\x56\\xb1\\xf9\\xea\\xe5\\x1d\\x7d\";\n+const char R1ArrayHex[] = \"7D1DE5EAF9B156D53208F033B5AA8122D2d2355d5e12292b121156cfdb4a529c\";\n+const double R1Ldouble = 0.4887374590559308955; // R1L equals roughly R1Ldouble * 2^256\n+const double R1Sdouble = 0.7096329412477836074; \n+const uint256 R1L = uint256(std::vector<unsigned char>(R1Array,R1Array+32));\n+const uint160 R1S = uint160(std::vector<unsigned char>(R1Array,R1Array+20));\n+const uint64_t R1LLow64 = 0x121156cfdb4a529cULL;\n \n-#include <boost/test/unit_test.hpp>\n+const unsigned char R2Array[] = \n+    \"\\x70\\x32\\x1d\\x7c\\x47\\xa5\\x6b\\x40\\x26\\x7e\\x0a\\xc3\\xa6\\x9c\\xb6\\xbf\"\n+    \"\\x13\\x30\\x47\\xa3\\x19\\x2d\\xda\\x71\\x49\\x13\\x72\\xf0\\xb4\\xca\\x81\\xd7\";\n+const uint256 R2L = uint256(std::vector<unsigned char>(R2Array,R2Array+32));\n+const uint160 R2S = uint160(std::vector<unsigned char>(R2Array,R2Array+20));\n \n-BOOST_AUTO_TEST_SUITE(uint256_tests)\n+const char R1LplusR2L[] = \"549FB09FEA236A1EA3E31D4D58F1B1369288D204211CA751527CFC175767850C\";\n+\n+const unsigned char ZeroArray[] = \n+    \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n+    \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\";\n+const uint256 ZeroL = uint256(std::vector<unsigned char>(ZeroArray,ZeroArray+32));\n+const uint160 ZeroS = uint160(std::vector<unsigned char>(ZeroArray,ZeroArray+20));\n+                             \n+const unsigned char OneArray[] = \n+    \"\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n+    \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\";\n+const uint256 OneL = uint256(std::vector<unsigned char>(OneArray,OneArray+32));\n+const uint160 OneS = uint160(std::vector<unsigned char>(OneArray,OneArray+20));\n+\n+const unsigned char MaxArray[] = \n+    \"\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\"\n+    \"\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\";\n+const uint256 MaxL = uint256(std::vector<unsigned char>(MaxArray,MaxArray+32));\n+const uint160 MaxS = uint160(std::vector<unsigned char>(MaxArray,MaxArray+20));\n+\n+const uint256 HalfL = (OneL << 255);\n+const uint160 HalfS = (OneS << 159);\n+std::string ArrayToString(const unsigned char A[], unsigned int width)\n+{\n+    std::stringstream Stream;\n+    Stream << std::hex;\n+    for (unsigned int i = 0; i < width; ++i) \n+    {\n+        Stream<<std::setw(2)<<std::setfill('0')<<(unsigned int)A[width-i-1];\n+    }       \n+    return Stream.str();\n+}\n \n-BOOST_AUTO_TEST_CASE(uint256_equality)\n+BOOST_AUTO_TEST_CASE( basics ) // constructors, equality, inequality\n {\n-    uint256 num1 = 10;\n-    uint256 num2 = 11;\n-    BOOST_CHECK(num1+1 == num2);\n+    BOOST_CHECK(1 == 0+1);\n+    // constructor uint256(vector<char>):\n+    BOOST_CHECK(R1L.ToString() == ArrayToString(R1Array,32));\n+    BOOST_CHECK(R1S.ToString() == ArrayToString(R1Array,20));\n+    BOOST_CHECK(R2L.ToString() == ArrayToString(R2Array,32));\n+    BOOST_CHECK(R2S.ToString() == ArrayToString(R2Array,20));\n+    BOOST_CHECK(ZeroL.ToString() == ArrayToString(ZeroArray,32));\n+    BOOST_CHECK(ZeroS.ToString() == ArrayToString(ZeroArray,20));\n+    BOOST_CHECK(OneL.ToString() == ArrayToString(OneArray,32));\n+    BOOST_CHECK(OneS.ToString() == ArrayToString(OneArray,20));\n+    BOOST_CHECK(MaxL.ToString() == ArrayToString(MaxArray,32));\n+    BOOST_CHECK(MaxS.ToString() == ArrayToString(MaxArray,20));\n+    BOOST_CHECK(OneL.ToString() != ArrayToString(ZeroArray,32));\n+    BOOST_CHECK(OneS.ToString() != ArrayToString(ZeroArray,20));\n+\n+    // == and !=\n+    BOOST_CHECK(R1L != R2L && R1S != R2S);\n+    BOOST_CHECK(ZeroL != OneL && ZeroS != OneS);\n+    BOOST_CHECK(OneL != ZeroL && OneS != ZeroS);\n+    BOOST_CHECK(MaxL != ZeroL && MaxS != ZeroS);\n+    BOOST_CHECK(~MaxL == ZeroL && ~MaxS == ZeroS);\n+    BOOST_CHECK( ((R1L ^ R2L) ^ R1L) == R2L);\n+    BOOST_CHECK( ((R1S ^ R2S) ^ R1S) == R2S);\n+    \n+    uint64_t Tmp64 = 0xc4dab720d9c7acaaULL;\n+    for (unsigned int i = 0; i < 256; ++i) \n+    {\n+        BOOST_CHECK(ZeroL != (OneL << i)); \n+        BOOST_CHECK((OneL << i) != ZeroL); \n+        BOOST_CHECK(R1L != (R1L ^ (OneL << i)));\n+        BOOST_CHECK(((uint256(Tmp64) ^ (OneL << i) ) != Tmp64 ));\n+    }\n+    BOOST_CHECK(ZeroL == (OneL << 256)); \n+\n+    for (unsigned int i = 0; i < 160; ++i) \n+    {\n+        BOOST_CHECK(ZeroS != (OneS << i)); \n+        BOOST_CHECK((OneS << i) != ZeroS); \n+        BOOST_CHECK(R1S != (R1S ^ (OneS << i)));\n+        BOOST_CHECK(((uint160(Tmp64) ^ (OneS << i) ) != Tmp64 ));\n+    }\n+    BOOST_CHECK(ZeroS == (OneS << 256)); \n+\n+    // String Constructor and Copy Constructor\n+    BOOST_CHECK(uint256(\"0x\"+R1L.ToString()) == R1L);\n+    BOOST_CHECK(uint256(\"0x\"+R2L.ToString()) == R2L);\n+    BOOST_CHECK(uint256(\"0x\"+ZeroL.ToString()) == ZeroL);\n+    BOOST_CHECK(uint256(\"0x\"+OneL.ToString()) == OneL);\n+    BOOST_CHECK(uint256(\"0x\"+MaxL.ToString()) == MaxL);\n+    BOOST_CHECK(uint256(R1L.ToString()) == R1L);\n+    BOOST_CHECK(uint256(\"   0x\"+R1L.ToString()+\"   \") == R1L);\n+    BOOST_CHECK(uint256(\"\") == ZeroL);\n+    BOOST_CHECK(R1L == uint256(R1ArrayHex));\n+    BOOST_CHECK(uint256(R1L) == R1L);\n+    BOOST_CHECK((uint256(R1L^R2L)^R2L) == R1L);\n+    BOOST_CHECK(uint256(ZeroL) == ZeroL);\n+    BOOST_CHECK(uint256(OneL) == OneL);\n+\n+    BOOST_CHECK(uint160(\"0x\"+R1S.ToString()) == R1S);\n+    BOOST_CHECK(uint160(\"0x\"+R2S.ToString()) == R2S);\n+    BOOST_CHECK(uint160(\"0x\"+ZeroS.ToString()) == ZeroS);\n+    BOOST_CHECK(uint160(\"0x\"+OneS.ToString()) == OneS);\n+    BOOST_CHECK(uint160(\"0x\"+MaxS.ToString()) == MaxS);\n+    BOOST_CHECK(uint160(R1S.ToString()) == R1S);\n+    BOOST_CHECK(uint160(\"   0x\"+R1S.ToString()+\"   \") == R1S); \n+    BOOST_CHECK(uint160(\"\") == ZeroS);\n+    BOOST_CHECK(R1S == uint160(R1ArrayHex));\n+\n+    BOOST_CHECK(uint160(R1S) == R1S);\n+    BOOST_CHECK((uint160(R1S^R2S)^R2S) == R1S);\n+    BOOST_CHECK(uint160(ZeroS) == ZeroS);\n+    BOOST_CHECK(uint160(OneS) == OneS);\n+\n+    // uint64_t constructor\n+    BOOST_CHECK( (R1L & uint256(\"0xffffffffffffffff\")) == uint256(R1LLow64));\n+    BOOST_CHECK(ZeroL == uint256(0));\n+    BOOST_CHECK(OneL == uint256(1));\n+    BOOST_CHECK(uint256(\"0xffffffffffffffff\") = uint256(0xffffffffffffffffULL));\n+    BOOST_CHECK( (R1S & uint160(\"0xffffffffffffffff\")) == uint160(R1LLow64));\n+    BOOST_CHECK(ZeroS == uint160(0));\n+    BOOST_CHECK(OneS == uint160(1));\n+    BOOST_CHECK(uint160(\"0xffffffffffffffff\") = uint160(0xffffffffffffffffULL));\n+\n+    // Assignment (from base_uint)\n+    uint256 tmpL = ~ZeroL; BOOST_CHECK(tmpL == ~ZeroL);\n+    tmpL = ~OneL; BOOST_CHECK(tmpL == ~OneL);\n+    tmpL = ~R1L; BOOST_CHECK(tmpL == ~R1L);\n+    tmpL = ~R2L; BOOST_CHECK(tmpL == ~R2L);\n+    tmpL = ~MaxL; BOOST_CHECK(tmpL == ~MaxL);\n+    uint160 tmpS = ~ZeroS; BOOST_CHECK(tmpS == ~ZeroS);\n+    tmpS = ~OneS; BOOST_CHECK(tmpS == ~OneS);\n+    tmpS = ~R1S; BOOST_CHECK(tmpS == ~R1S);\n+    tmpS = ~R2S; BOOST_CHECK(tmpS == ~R2S);\n+    tmpS = ~MaxS; BOOST_CHECK(tmpS == ~MaxS);\n \n-    uint64_t num3 = 10;\n-    BOOST_CHECK(num1 == num3);\n-    BOOST_CHECK(num1+num2 == num3+num2);\n+    // Wrong length must give 0\n+    BOOST_CHECK(uint256(std::vector<unsigned char>(OneArray,OneArray+31)) == 0);\n+    BOOST_CHECK(uint256(std::vector<unsigned char>(OneArray,OneArray+20)) == 0);\n+    BOOST_CHECK(uint160(std::vector<unsigned char>(OneArray,OneArray+32)) == 0);\n+    BOOST_CHECK(uint160(std::vector<unsigned char>(OneArray,OneArray+19)) == 0);\n }\n \n-BOOST_AUTO_TEST_CASE(uint256_hex)\n+void shiftArrayRight(unsigned char* to, const unsigned char* from, unsigned int arrayLength, unsigned int bitsToShift) \n {\n-    std::string hexStr = \"d35583ed493a5eee756931353144f558e6a9ab3ad6024a63ced7f10daf7faad9\";\n-    uint256 num1;\n-    num1.SetHex(hexStr);\n-    BOOST_CHECK(num1.GetHex() == hexStr);\n+    for (unsigned int T=0; T < arrayLength; ++T) \n+    {\n+        unsigned int F = (T+bitsToShift/8);\n+        if (F < arrayLength) \n+            to[T]  = from[F] >> (bitsToShift%8);\n+        else\n+            to[T] = 0;\n+        if (F + 1 < arrayLength) \n+            to[T] |= from[(F+1)] << (8-bitsToShift%8);\n+    }\n+}\n+\n+void shiftArrayLeft(unsigned char* to, const unsigned char* from, unsigned int arrayLength, unsigned int bitsToShift) \n+{\n+    for (unsigned int T=0; T < arrayLength; ++T) \n+    {\n+        if (T >= bitsToShift/8) \n+        {\n+            unsigned int F = T-bitsToShift/8;\n+            to[T]  = from[F] << (bitsToShift%8);\n+            if (T >= bitsToShift/8+1)\n+                to[T] |= from[F-1] >> (8-bitsToShift%8);\n+        }\n+        else {\n+            to[T] = 0;\n+        }\n+    }\n+}\n+\n+BOOST_AUTO_TEST_CASE( shifts ) { // \"<<\"  \">>\"  \"<<=\"  \">>=\"\n+    unsigned char TmpArray[32];\n+    uint256 TmpL;\n+    for (unsigned int i = 0; i < 256; ++i)\n+    {\n+        shiftArrayLeft(TmpArray, OneArray, 32, i);\n+        BOOST_CHECK(uint256(std::vector<unsigned char>(TmpArray,TmpArray+32)) == (OneL << i));\n+        TmpL = OneL; TmpL <<= i;\n+        BOOST_CHECK(TmpL == (OneL << i));\n+        BOOST_CHECK((HalfL >> (255-i)) == (OneL << i));\n+        TmpL = HalfL; TmpL >>= (255-i);\n+        BOOST_CHECK(TmpL == (OneL << i));\n+                    \n+        shiftArrayLeft(TmpArray, R1Array, 32, i);\n+        BOOST_CHECK(uint256(std::vector<unsigned char>(TmpArray,TmpArray+32)) == (R1L << i));\n+        TmpL = R1L; TmpL <<= i;\n+        BOOST_CHECK(TmpL == (R1L << i));\n+\n+        shiftArrayRight(TmpArray, R1Array, 32, i);\n+        BOOST_CHECK(uint256(std::vector<unsigned char>(TmpArray,TmpArray+32)) == (R1L >> i)); \n+        TmpL = R1L; TmpL >>= i;\n+        BOOST_CHECK(TmpL == (R1L >> i));\n+\n+        shiftArrayLeft(TmpArray, MaxArray, 32, i);\n+        BOOST_CHECK(uint256(std::vector<unsigned char>(TmpArray,TmpArray+32)) == (MaxL << i));\n+        TmpL = MaxL; TmpL <<= i;\n+        BOOST_CHECK(TmpL == (MaxL << i));\n+\n+        shiftArrayRight(TmpArray, MaxArray, 32, i);\n+        BOOST_CHECK(uint256(std::vector<unsigned char>(TmpArray,TmpArray+32)) == (MaxL >> i));\n+        TmpL = MaxL; TmpL >>= i;\n+        BOOST_CHECK(TmpL == (MaxL >> i));\n+    }\n+    uint256 c1L = uint256(0x0123456789abcdefULL);\n+    uint256 c2L = c1L << 128;\n+    for (unsigned int i = 0; i < 128; ++i) {\n+        BOOST_CHECK((c1L << i) == (c2L >> (128-i)));\n+    }\n+    for (unsigned int i = 128; i < 256; ++i) {\n+        BOOST_CHECK((c1L << i) == (c2L << (i-128)));\n+    }\n+\n+    uint160 TmpS;\n+    for (unsigned int i = 0; i < 160; ++i)\n+    {\n+        shiftArrayLeft(TmpArray, OneArray, 20, i);\n+        BOOST_CHECK(uint160(std::vector<unsigned char>(TmpArray,TmpArray+20)) == (OneS << i));\n+        TmpS = OneS; TmpS <<= i;\n+        BOOST_CHECK(TmpS == (OneS << i));\n+        BOOST_CHECK((HalfS >> (159-i)) == (OneS << i));\n+        TmpS = HalfS; TmpS >>= (159-i);\n+        BOOST_CHECK(TmpS == (OneS << i));\n+                    \n+        shiftArrayLeft(TmpArray, R1Array, 20, i);\n+        BOOST_CHECK(uint160(std::vector<unsigned char>(TmpArray,TmpArray+20)) == (R1S << i));\n+        TmpS = R1S; TmpS <<= i;\n+        BOOST_CHECK(TmpS == (R1S << i));\n+\n+        shiftArrayRight(TmpArray, R1Array, 20, i);\n+        BOOST_CHECK(uint160(std::vector<unsigned char>(TmpArray,TmpArray+20)) == (R1S >> i)); \n+        TmpS = R1S; TmpS >>= i;\n+        BOOST_CHECK(TmpS == (R1S >> i));\n+\n+        shiftArrayLeft(TmpArray, MaxArray, 20, i);\n+        BOOST_CHECK(uint160(std::vector<unsigned char>(TmpArray,TmpArray+20)) == (MaxS << i));\n+        TmpS = MaxS; TmpS <<= i;\n+        BOOST_CHECK(TmpS == (MaxS << i));\n+\n+        shiftArrayRight(TmpArray, MaxArray, 20, i);\n+        BOOST_CHECK(uint160(std::vector<unsigned char>(TmpArray,TmpArray+20)) == (MaxS >> i));\n+        TmpS = MaxS; TmpS >>= i;\n+        BOOST_CHECK(TmpS == (MaxS >> i));\n+    }\n+    uint160 c1S = uint160(0x0123456789abcdefULL);\n+    uint160 c2S = c1S << 80;\n+    for (unsigned int i = 0; i < 80; ++i) {\n+        BOOST_CHECK((c1S << i) == (c2S >> (80-i)));\n+    }\n+    for (unsigned int i = 80; i < 160; ++i) {\n+        BOOST_CHECK((c1S << i) == (c2S << (i-80)));\n+    }\n+}\n+\n+BOOST_AUTO_TEST_CASE( unaryOperators ) // !    ~    -\n+{\n+    BOOST_CHECK(!ZeroL);  BOOST_CHECK(!ZeroS);\n+    BOOST_CHECK(!(!OneL));BOOST_CHECK(!(!OneS));\n+    for (unsigned int i = 0; i < 256; ++i) \n+        BOOST_CHECK(!(!(OneL<<i)));\n+    for (unsigned int i = 0; i < 160; ++i) \n+        BOOST_CHECK(!(!(OneS<<i)));\n+    BOOST_CHECK(!(!R1L));BOOST_CHECK(!(!R1S));\n+    BOOST_CHECK(!(!R2S));BOOST_CHECK(!(!R2S)); \n+    BOOST_CHECK(!(!MaxL));BOOST_CHECK(!(!MaxS));\n+\n+    BOOST_CHECK(~ZeroL == MaxL); BOOST_CHECK(~ZeroS == MaxS);\n+\n+    unsigned char TmpArray[32];\n+    for (unsigned int i = 0; i < 32; ++i) { TmpArray[i] = ~R1Array[i]; } \n+    BOOST_CHECK(uint256(std::vector<unsigned char>(TmpArray,TmpArray+32)) == (~R1L));\n+    BOOST_CHECK(uint160(std::vector<unsigned char>(TmpArray,TmpArray+20)) == (~R1S));\n+\n+    BOOST_CHECK(-ZeroL == ZeroL); BOOST_CHECK(-ZeroS == ZeroS);\n+    BOOST_CHECK(-R1L == (~R1L)+1);\n+    BOOST_CHECK(-R1S == (~R1S)+1);\n+    for (unsigned int i = 0; i < 256; ++i) \n+        BOOST_CHECK(-(OneL<<i) == (MaxL << i));\n+    for (unsigned int i = 0; i < 160; ++i) \n+        BOOST_CHECK(-(OneS<<i) == (MaxS << i));\n+}\n+\n+\n+// Check if doing _A_ _OP_ _B_ results in the same as applying _OP_ onto each\n+// element of Aarray and Barray, and then converting the result into a uint256.\n+#define CHECKBITWISEOPERATOR(_A_,_B_,_OP_)                              \\\n+    for (unsigned int i = 0; i < 32; ++i) { TmpArray[i] = _A_##Array[i] _OP_ _B_##Array[i]; } \\\n+    BOOST_CHECK(uint256(std::vector<unsigned char>(TmpArray,TmpArray+32)) == (_A_##L _OP_ _B_##L)); \\\n+    for (unsigned int i = 0; i < 20; ++i) { TmpArray[i] = _A_##Array[i] _OP_ _B_##Array[i]; } \\\n+    BOOST_CHECK(uint160(std::vector<unsigned char>(TmpArray,TmpArray+20)) == (_A_##S _OP_ _B_##S));\n+\n+#define CHECKASSIGNMENTOPERATOR(_A_,_B_,_OP_)                           \\\n+    TmpL = _A_##L; TmpL _OP_##= _B_##L; BOOST_CHECK(TmpL == (_A_##L _OP_ _B_##L)); \\\n+    TmpS = _A_##S; TmpS _OP_##= _B_##S; BOOST_CHECK(TmpS == (_A_##S _OP_ _B_##S));\n+\n+BOOST_AUTO_TEST_CASE( bitwiseOperators ) \n+{\n+    unsigned char TmpArray[32];\n+    \n+    CHECKBITWISEOPERATOR(R1,R2,|)\n+    CHECKBITWISEOPERATOR(R1,R2,^)\n+    CHECKBITWISEOPERATOR(R1,R2,&)\n+    CHECKBITWISEOPERATOR(R1,Zero,|)\n+    CHECKBITWISEOPERATOR(R1,Zero,^)\n+    CHECKBITWISEOPERATOR(R1,Zero,&)\n+    CHECKBITWISEOPERATOR(R1,Max,|)\n+    CHECKBITWISEOPERATOR(R1,Max,^)\n+    CHECKBITWISEOPERATOR(R1,Max,&)\n+    CHECKBITWISEOPERATOR(Zero,R1,|)\n+    CHECKBITWISEOPERATOR(Zero,R1,^)\n+    CHECKBITWISEOPERATOR(Zero,R1,&)\n+    CHECKBITWISEOPERATOR(Max,R1,|)\n+    CHECKBITWISEOPERATOR(Max,R1,^)\n+    CHECKBITWISEOPERATOR(Max,R1,&)\n+\n+    uint256 TmpL;\n+    uint160 TmpS;\n+    CHECKASSIGNMENTOPERATOR(R1,R2,|)\n+    CHECKASSIGNMENTOPERATOR(R1,R2,^)\n+    CHECKASSIGNMENTOPERATOR(R1,R2,&)\n+    CHECKASSIGNMENTOPERATOR(R1,Zero,|)\n+    CHECKASSIGNMENTOPERATOR(R1,Zero,^)\n+    CHECKASSIGNMENTOPERATOR(R1,Zero,&)\n+    CHECKASSIGNMENTOPERATOR(R1,Max,|)\n+    CHECKASSIGNMENTOPERATOR(R1,Max,^)\n+    CHECKASSIGNMENTOPERATOR(R1,Max,&)\n+    CHECKASSIGNMENTOPERATOR(Zero,R1,|)\n+    CHECKASSIGNMENTOPERATOR(Zero,R1,^)\n+    CHECKASSIGNMENTOPERATOR(Zero,R1,&)\n+    CHECKASSIGNMENTOPERATOR(Max,R1,|)\n+    CHECKASSIGNMENTOPERATOR(Max,R1,^)\n+    CHECKASSIGNMENTOPERATOR(Max,R1,&)\n+\n+    uint64_t Tmp64 = 0xe1db685c9a0b47a2ULL; \n+    TmpL = R1L; TmpL |= Tmp64;  BOOST_CHECK(TmpL == (R1L | uint256(Tmp64)));\n+    TmpS = R1S; TmpS |= Tmp64;  BOOST_CHECK(TmpS == (R1S | uint160(Tmp64)));\n+    TmpL = R1L; TmpL |= 0; BOOST_CHECK(TmpL == R1L);\n+    TmpS = R1S; TmpS |= 0; BOOST_CHECK(TmpS == R1S);\n+    TmpL ^= 0; BOOST_CHECK(TmpL == R1L);\n+    TmpS ^= 0; BOOST_CHECK(TmpS == R1S);\n+    TmpL ^= Tmp64;  BOOST_CHECK(TmpL == (R1L ^ uint256(Tmp64)));\n+    TmpS ^= Tmp64;  BOOST_CHECK(TmpS == (R1S ^ uint160(Tmp64)));\n+}\n+\n+BOOST_AUTO_TEST_CASE( comparison ) // <= >= < >\n+{\n+    uint256 TmpL;\n+    for (unsigned int i = 0; i < 256; ++i) {\n+        TmpL= OneL<< i;\n+        BOOST_CHECK( TmpL >= ZeroL && TmpL > ZeroL && ZeroL < TmpL && ZeroL <= TmpL);\n+        BOOST_CHECK( TmpL >= 0 && TmpL > 0 && 0 < TmpL && 0 <= TmpL);\n+        TmpL |= R1L;\n+        BOOST_CHECK( TmpL >= R1L ); BOOST_CHECK( (TmpL == R1L) != (TmpL > R1L)); BOOST_CHECK( (TmpL == R1L) || !( TmpL <= R1L));\n+        BOOST_CHECK( R1L <= TmpL ); BOOST_CHECK( (R1L == TmpL) != (R1L < TmpL)); BOOST_CHECK( (TmpL == R1L) || !( R1L >= TmpL));\n+        BOOST_CHECK(! (TmpL < R1L)); BOOST_CHECK(! (R1L > TmpL));\n+    }\n+    uint160 TmpS;\n+    for (unsigned int i = 0; i < 160; ++i) {\n+        TmpS= OneS<< i;\n+        BOOST_CHECK( TmpS >= ZeroS && TmpS > ZeroS && ZeroS < TmpS && ZeroS <= TmpS);\n+        BOOST_CHECK( TmpS >= 0 && TmpS > 0 && 0 < TmpS && 0 <= TmpS);\n+        TmpS |= R1S;\n+        BOOST_CHECK( TmpS >= R1S ); BOOST_CHECK( (TmpS == R1S) != (TmpS > R1S)); BOOST_CHECK( (TmpS == R1S) || !( TmpS <= R1S));\n+        BOOST_CHECK( R1S <= TmpS ); BOOST_CHECK( (R1S == TmpS) != (R1S < TmpS)); BOOST_CHECK( (TmpS == R1S) || !( R1S >= TmpS));\n+        BOOST_CHECK(! (TmpS < R1S)); BOOST_CHECK(! (R1S > TmpS));\n+    }\n+}\n+\n+BOOST_AUTO_TEST_CASE( plusMinus ) \n+{\n+    uint256 TmpL = 0;\n+    BOOST_CHECK(R1L+R2L == uint256(R1LplusR2L));\n+    TmpL += R1L;\n+    BOOST_CHECK(TmpL == R1L);\n+    TmpL += R2L;\n+    BOOST_CHECK(TmpL == R1L + R2L);\n+    BOOST_CHECK(OneL+MaxL == ZeroL);\n+    BOOST_CHECK(MaxL+OneL == ZeroL);\n+    for (unsigned int i = 1; i < 256; ++i) {\n+        BOOST_CHECK( (MaxL >> i) + OneL == (HalfL >> (i-1)) );\n+        BOOST_CHECK( OneL + (MaxL >> i) == (HalfL >> (i-1)) );\n+        TmpL = (MaxL>>i); TmpL += OneL;\n+        BOOST_CHECK( TmpL == (HalfL >> (i-1)) );\n+        TmpL = (MaxL>>i); TmpL += 1;\n+        BOOST_CHECK( TmpL == (HalfL >> (i-1)) );\n+        TmpL = (MaxL>>i); \n+        BOOST_CHECK( TmpL++ == (MaxL>>i) );\n+        BOOST_CHECK( TmpL == (HalfL >> (i-1)));\n+    }\n+    BOOST_CHECK(uint256(0xbedc77e27940a7ULL) + 0xee8d836fce66fbULL == uint256(0xbedc77e27940a7ULL + 0xee8d836fce66fbULL));\n+    TmpL = uint256(0xbedc77e27940a7ULL); TmpL += 0xee8d836fce66fbULL;\n+    BOOST_CHECK(TmpL == uint256(0xbedc77e27940a7ULL+0xee8d836fce66fbULL));\n+    TmpL -= 0xee8d836fce66fbULL;  BOOST_CHECK(TmpL == 0xbedc77e27940a7ULL);\n+    TmpL = R1L;\n+    BOOST_CHECK(++TmpL == R1L+1);\n+\n+    BOOST_CHECK(R1L -(-R2L) == R1L+R2L);\n+    BOOST_CHECK(R1L -(-OneL) == R1L+OneL);\n+    BOOST_CHECK(R1L - OneL == R1L+(-OneL));\n+    for (unsigned int i = 1; i < 256; ++i) {\n+        BOOST_CHECK((MaxL>>i) - (-OneL)  == (HalfL >> (i-1)));\n+        BOOST_CHECK((HalfL >> (i-1)) - OneL == (MaxL>>i));\n+        TmpL = (HalfL >> (i-1));\n+        BOOST_CHECK(TmpL-- == (HalfL >> (i-1)));\n+        BOOST_CHECK(TmpL == (MaxL >> i));\n+        TmpL = (HalfL >> (i-1));\n+        BOOST_CHECK(--TmpL == (MaxL >> i));\n+    }\n+    TmpL = R1L;\n+    BOOST_CHECK(--TmpL == R1L-1);\n+\n+    // 160-bit; copy-pasted\n+    uint160 TmpS = 0;\n+    BOOST_CHECK(R1S+R2S == uint160(R1LplusR2L));\n+    TmpS += R1S;\n+    BOOST_CHECK(TmpS == R1S);\n+    TmpS += R2S;\n+    BOOST_CHECK(TmpS == R1S + R2S);\n+    BOOST_CHECK(OneS+MaxS == ZeroS);\n+    BOOST_CHECK(MaxS+OneS == ZeroS);\n+    for (unsigned int i = 1; i < 160; ++i) {\n+        BOOST_CHECK( (MaxS >> i) + OneS == (HalfS >> (i-1)) );\n+        BOOST_CHECK( OneS + (MaxS >> i) == (HalfS >> (i-1)) );\n+        TmpS = (MaxS>>i); TmpS += OneS;\n+        BOOST_CHECK( TmpS == (HalfS >> (i-1)) );\n+        TmpS = (MaxS>>i); TmpS += 1;\n+        BOOST_CHECK( TmpS == (HalfS >> (i-1)) );\n+        TmpS = (MaxS>>i); \n+        BOOST_CHECK( TmpS++ == (MaxS>>i) );\n+        BOOST_CHECK( TmpS == (HalfS >> (i-1)));\n+    }\n+    BOOST_CHECK(uint160(0xbedc77e27940a7ULL) + 0xee8d836fce66fbULL == uint160(0xbedc77e27940a7ULL + 0xee8d836fce66fbULL));\n+    TmpS = uint160(0xbedc77e27940a7ULL); TmpS += 0xee8d836fce66fbULL;\n+    BOOST_CHECK(TmpS == uint160(0xbedc77e27940a7ULL+0xee8d836fce66fbULL));\n+    TmpS -= 0xee8d836fce66fbULL;  BOOST_CHECK(TmpS == 0xbedc77e27940a7ULL);\n+    TmpS = R1S;\n+    BOOST_CHECK(++TmpS == R1S+1);\n+\n+    BOOST_CHECK(R1S -(-R2S) == R1S+R2S);\n+    BOOST_CHECK(R1S -(-OneS) == R1S+OneS);\n+    BOOST_CHECK(R1S - OneS == R1S+(-OneS));\n+    for (unsigned int i = 1; i < 160; ++i) {\n+        BOOST_CHECK((MaxS>>i) - (-OneS)  == (HalfS >> (i-1)));\n+        BOOST_CHECK((HalfS >> (i-1)) - OneS == (MaxS>>i));\n+        TmpS = (HalfS >> (i-1));\n+        BOOST_CHECK(TmpS-- == (HalfS >> (i-1)));\n+        BOOST_CHECK(TmpS == (MaxS >> i));\n+        TmpS = (HalfS >> (i-1));\n+        BOOST_CHECK(--TmpS == (MaxS >> i));\n+    }\n+    TmpS = R1S;\n+    BOOST_CHECK(--TmpS == R1S-1);\n+\n+}\n+\n+bool almostEqual(double d1, double d2) \n+{\n+    return fabs(d1-d2) <= 4*fabs(d1)*std::numeric_limits<double>::epsilon();\n+}\n+\n+BOOST_AUTO_TEST_CASE( methods ) // GetHex SetHex begin() end() size() GetLow64 GetSerializeSize, Serialize, Unserialize\n+{\n+    BOOST_CHECK(R1L.GetHex() == R1L.ToString());\n+    BOOST_CHECK(R2L.GetHex() == R2L.ToString());\n+    BOOST_CHECK(OneL.GetHex() == OneL.ToString());\n+    BOOST_CHECK(MaxL.GetHex() == MaxL.ToString());\n+    uint256 TmpL(R1L);\n+    BOOST_CHECK(TmpL == R1L);\n+    TmpL.SetHex(R2L.ToString());   BOOST_CHECK(TmpL == R2L);\n+    TmpL.SetHex(ZeroL.ToString()); BOOST_CHECK(TmpL == 0);\n+    TmpL.SetHex(HalfL.ToString()); BOOST_CHECK(TmpL == HalfL);\n+\n+    TmpL.SetHex(R1L.ToString());\n+    BOOST_CHECK(memcmp(R1L.begin(), R1Array, 32)==0);\n+    BOOST_CHECK(memcmp(TmpL.begin(), R1Array, 32)==0);\n+    BOOST_CHECK(memcmp(R2L.begin(), R2Array, 32)==0);\n+    BOOST_CHECK(memcmp(ZeroL.begin(), ZeroArray, 32)==0);\n+    BOOST_CHECK(memcmp(OneL.begin(), OneArray, 32)==0);\n+    BOOST_CHECK(R1L.size() == 32);\n+    BOOST_CHECK(R2L.size() == 32);\n+    BOOST_CHECK(ZeroL.size() == 32);\n+    BOOST_CHECK(MaxL.size() == 32);\n+    BOOST_CHECK(R1L.begin() + 32 == R1L.end());\n+    BOOST_CHECK(R2L.begin() + 32 == R2L.end());\n+    BOOST_CHECK(OneL.begin() + 32 == OneL.end());\n+    BOOST_CHECK(MaxL.begin() + 32 == MaxL.end());\n+    BOOST_CHECK(TmpL.begin() + 32 == TmpL.end());\n+    BOOST_CHECK(R1L.GetLow64()  == R1LLow64);\n+    BOOST_CHECK(HalfL.GetLow64() ==0x0000000000000000ULL);\n+    BOOST_CHECK(OneL.GetLow64() ==0x0000000000000001ULL);\n+    BOOST_CHECK(R1L.GetSerializeSize(0,PROTOCOL_VERSION) == 32);\n+    BOOST_CHECK(ZeroL.GetSerializeSize(0,PROTOCOL_VERSION) == 32);\n+\n+    std::stringstream ss;\n+    R1L.Serialize(ss,0,PROTOCOL_VERSION);\n+    BOOST_CHECK(ss.str() == std::string(R1Array,R1Array+32));\n+    TmpL.Unserialize(ss,0,PROTOCOL_VERSION);\n+    BOOST_CHECK(R1L == TmpL);\n+    ss.str(\"\");\n+    ZeroL.Serialize(ss,0,PROTOCOL_VERSION);\n+    BOOST_CHECK(ss.str() == std::string(ZeroArray,ZeroArray+32));\n+    TmpL.Unserialize(ss,0,PROTOCOL_VERSION);\n+    BOOST_CHECK(ZeroL == TmpL);\n+    ss.str(\"\");\n+    MaxL.Serialize(ss,0,PROTOCOL_VERSION);\n+    BOOST_CHECK(ss.str() == std::string(MaxArray,MaxArray+32));\n+    TmpL.Unserialize(ss,0,PROTOCOL_VERSION);\n+    BOOST_CHECK(MaxL == TmpL);\n+    ss.str(\"\");\n+\n+    BOOST_CHECK(R1S.GetHex() == R1S.ToString());\n+    BOOST_CHECK(R2S.GetHex() == R2S.ToString());\n+    BOOST_CHECK(OneS.GetHex() == OneS.ToString());\n+    BOOST_CHECK(MaxS.GetHex() == MaxS.ToString());\n+    uint160 TmpS(R1S);\n+    BOOST_CHECK(TmpS == R1S);\n+    TmpS.SetHex(R2S.ToString());   BOOST_CHECK(TmpS == R2S);\n+    TmpS.SetHex(ZeroS.ToString()); BOOST_CHECK(TmpS == 0);\n+    TmpS.SetHex(HalfS.ToString()); BOOST_CHECK(TmpS == HalfS);\n+\n+    TmpS.SetHex(R1S.ToString());\n+    BOOST_CHECK(memcmp(R1S.begin(), R1Array, 20)==0);\n+    BOOST_CHECK(memcmp(TmpS.begin(), R1Array, 20)==0);\n+    BOOST_CHECK(memcmp(R2S.begin(), R2Array, 20)==0);\n+    BOOST_CHECK(memcmp(ZeroS.begin(), ZeroArray, 20)==0);\n+    BOOST_CHECK(memcmp(OneS.begin(), OneArray, 20)==0);\n+    BOOST_CHECK(R1S.size() == 20);\n+    BOOST_CHECK(R2S.size() == 20);\n+    BOOST_CHECK(ZeroS.size() == 20);\n+    BOOST_CHECK(MaxS.size() == 20);\n+    BOOST_CHECK(R1S.begin() + 20 == R1S.end());\n+    BOOST_CHECK(R2S.begin() + 20 == R2S.end());\n+    BOOST_CHECK(OneS.begin() + 20 == OneS.end());\n+    BOOST_CHECK(MaxS.begin() + 20 == MaxS.end());\n+    BOOST_CHECK(TmpS.begin() + 20 == TmpS.end());\n+    BOOST_CHECK(R1S.GetLow64()  == R1LLow64);\n+    BOOST_CHECK(HalfS.GetLow64() ==0x0000000000000000ULL); \n+    BOOST_CHECK(OneS.GetLow64() ==0x0000000000000001ULL);\n+    BOOST_CHECK(R1S.GetSerializeSize(0,PROTOCOL_VERSION) == 20);\n+    BOOST_CHECK(ZeroS.GetSerializeSize(0,PROTOCOL_VERSION) == 20);\n+\n+    R1S.Serialize(ss,0,PROTOCOL_VERSION);\n+    BOOST_CHECK(ss.str() == std::string(R1Array,R1Array+20));\n+    TmpS.Unserialize(ss,0,PROTOCOL_VERSION);\n+    BOOST_CHECK(R1S == TmpS);\n+    ss.str(\"\");\n+    ZeroS.Serialize(ss,0,PROTOCOL_VERSION);\n+    BOOST_CHECK(ss.str() == std::string(ZeroArray,ZeroArray+20));\n+    TmpS.Unserialize(ss,0,PROTOCOL_VERSION);\n+    BOOST_CHECK(ZeroS == TmpS);\n+    ss.str(\"\");\n+    MaxS.Serialize(ss,0,PROTOCOL_VERSION);\n+    BOOST_CHECK(ss.str() == std::string(MaxArray,MaxArray+20));\n+    TmpS.Unserialize(ss,0,PROTOCOL_VERSION);\n+    BOOST_CHECK(MaxS == TmpS);\n+    ss.str(\"\");\n+    \n+    for (unsigned int i = 0; i < 255; ++i) \n+    {\n+        BOOST_CHECK((OneL << i).getdouble() == ldexp(1.0,i));\n+        if (i < 160) BOOST_CHECK((OneS << i).getdouble() == ldexp(1.0,i));\n+    }\n+    BOOST_CHECK(ZeroL.getdouble() == 0.0);\n+    BOOST_CHECK(ZeroS.getdouble() == 0.0);\n+    for (int i = 256; i > 53; --i) \n+        BOOST_CHECK(almostEqual((R1L>>(256-i)).getdouble(), ldexp(R1Ldouble,i)));\n+    for (int i = 160; i > 53; --i) \n+        BOOST_CHECK(almostEqual((R1S>>(160-i)).getdouble(), ldexp(R1Sdouble,i)));\n+    uint64_t R1L64part = (R1L>>192).GetLow64();\n+    uint64_t R1S64part = (R1S>>96).GetLow64();\n+    for (int i = 53; i > 0; --i) // doubles can store all integers in {0,...,2^54-1} exactly\n+    {\n+        BOOST_CHECK((R1L>>(256-i)).getdouble() == (double)(R1L64part >> (64-i)));\n+        BOOST_CHECK((R1S>>(160-i)).getdouble() == (double)(R1S64part >> (64-i)));\n+    }\n+}\n+\n+BOOST_AUTO_TEST_CASE( getmaxcoverage ) // some more tests just to get 100% coverage\n+{\n+    // ~R1L give a base_uint<256>\n+    BOOST_CHECK((~~R1L >> 10) == (R1L >> 10)); BOOST_CHECK((~~R1S >> 10) == (R1S >> 10));\n+    BOOST_CHECK((~~R1L << 10) == (R1L << 10)); BOOST_CHECK((~~R1S << 10) == (R1S << 10));\n+    BOOST_CHECK(!(~~R1L < R1L)); BOOST_CHECK(!(~~R1S < R1S)); \n+    BOOST_CHECK(~~R1L <= R1L); BOOST_CHECK(~~R1S <= R1S); \n+    BOOST_CHECK(!(~~R1L > R1L)); BOOST_CHECK(!(~~R1S > R1S)); \n+    BOOST_CHECK(~~R1L >= R1L); BOOST_CHECK(~~R1S >= R1S); \n+    BOOST_CHECK(!(R1L < ~~R1L)); BOOST_CHECK(!(R1S < ~~R1S)); \n+    BOOST_CHECK(R1L <= ~~R1L); BOOST_CHECK(R1S <= ~~R1S); \n+    BOOST_CHECK(!(R1L > ~~R1L)); BOOST_CHECK(!(R1S > ~~R1S)); \n+    BOOST_CHECK(R1L >= ~~R1L); BOOST_CHECK(R1S >= ~~R1S); \n+    \n+    BOOST_CHECK(~~R1L + R2L == R1L + ~~R2L);\n+    BOOST_CHECK(~~R1S + R2S == R1S + ~~R2S);\n+    BOOST_CHECK(~~R1L - R2L == R1L - ~~R2L);\n+    BOOST_CHECK(~~R1S - R2S == R1S - ~~R2S);\n+    BOOST_CHECK(~R1L != R1L); BOOST_CHECK(R1L != ~R1L); \n+    BOOST_CHECK(~R1S != R1S); BOOST_CHECK(R1S != ~R1S); \n+    unsigned char TmpArray[32];\n+    CHECKBITWISEOPERATOR(~R1,R2,|)\n+    CHECKBITWISEOPERATOR(~R1,R2,^)\n+    CHECKBITWISEOPERATOR(~R1,R2,&)\n+    CHECKBITWISEOPERATOR(R1,~R2,|)\n+    CHECKBITWISEOPERATOR(R1,~R2,^)\n+    CHECKBITWISEOPERATOR(R1,~R2,&)\n }\n \n BOOST_AUTO_TEST_SUITE_END()\n+"
      },
      {
        "sha": "ba903bc8fc61d8e68a765050f4a0c79b1f714185",
        "filename": "src/uint256.h",
        "status": "modified",
        "additions": 0,
        "deletions": 150,
        "changes": 150,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/daa6b20e29f3926a16d4da6962ff00b74623fc6b/src/uint256.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/daa6b20e29f3926a16d4da6962ff00b74623fc6b/src/uint256.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/uint256.h?ref=daa6b20e29f3926a16d4da6962ff00b74623fc6b",
        "patch": "@@ -19,9 +19,6 @@ inline signed char HexDigit(char c)\n     return p_util_hexdigit[(unsigned char)c];\n }\n \n-inline int Testuint256AdHoc(std::vector<std::string> vArg);\n-\n-\n /** Base class without constructors for uint256 and uint160.\n  * This makes the compiler let you use it in a union.\n  */\n@@ -399,7 +396,6 @@ class base_uint\n \n     friend class uint160;\n     friend class uint256;\n-    friend inline int Testuint256AdHoc(std::vector<std::string> vArg);\n };\n \n typedef base_uint<160> base_uint160;\n@@ -526,9 +522,6 @@ inline const uint160 operator-(const uint160& a, const uint160& b)           { r\n \n \n \n-\n-\n-\n //////////////////////////////////////////////////////////////////////////////\n //\n // uint256\n@@ -639,147 +632,4 @@ inline const uint256 operator|(const uint256& a, const uint256& b)      { return\n inline const uint256 operator+(const uint256& a, const uint256& b)      { return (base_uint256)a +  (base_uint256)b; }\n inline const uint256 operator-(const uint256& a, const uint256& b)      { return (base_uint256)a -  (base_uint256)b; }\n \n-\n-\n-\n-\n-\n-\n-\n-\n-\n-#ifdef TEST_UINT256\n-\n-inline int Testuint256AdHoc(std::vector<std::string> vArg)\n-{\n-    uint256 g(0);\n-\n-\n-    LogPrintf(\"%s\\n\", g.ToString().c_str());\n-    g--;  LogPrintf(\"g--\\n\");\n-    LogPrintf(\"%s\\n\", g.ToString().c_str());\n-    g--;  LogPrintf(\"g--\\n\");\n-    LogPrintf(\"%s\\n\", g.ToString().c_str());\n-    g++;  LogPrintf(\"g++\\n\");\n-    LogPrintf(\"%s\\n\", g.ToString().c_str());\n-    g++;  LogPrintf(\"g++\\n\");\n-    LogPrintf(\"%s\\n\", g.ToString().c_str());\n-    g++;  LogPrintf(\"g++\\n\");\n-    LogPrintf(\"%s\\n\", g.ToString().c_str());\n-    g++;  LogPrintf(\"g++\\n\");\n-    LogPrintf(\"%s\\n\", g.ToString().c_str());\n-\n-\n-\n-    uint256 a(7);\n-    LogPrintf(\"a=7\\n\");\n-    LogPrintf(\"%s\\n\", a.ToString().c_str());\n-\n-    uint256 b;\n-    LogPrintf(\"b undefined\\n\");\n-    LogPrintf(\"%s\\n\", b.ToString().c_str());\n-    int c = 3;\n-\n-    a = c;\n-    a.pn[3] = 15;\n-    LogPrintf(\"%s\\n\", a.ToString().c_str());\n-    uint256 k(c);\n-\n-    a = 5;\n-    a.pn[3] = 15;\n-    LogPrintf(\"%s\\n\", a.ToString().c_str());\n-    b = 1;\n-    b <<= 52;\n-\n-    a |= b;\n-\n-    a ^= 0x500;\n-\n-    LogPrintf(\"a %s\\n\", a.ToString().c_str());\n-\n-    a = a | b | (uint256)0x1000;\n-\n-\n-    LogPrintf(\"a %s\\n\", a.ToString().c_str());\n-    LogPrintf(\"b %s\\n\", b.ToString().c_str());\n-\n-    a = 0xfffffffe;\n-    a.pn[4] = 9;\n-\n-    LogPrintf(\"%s\\n\", a.ToString().c_str());\n-    a++;\n-    LogPrintf(\"%s\\n\", a.ToString().c_str());\n-    a++;\n-    LogPrintf(\"%s\\n\", a.ToString().c_str());\n-    a++;\n-    LogPrintf(\"%s\\n\", a.ToString().c_str());\n-    a++;\n-    LogPrintf(\"%s\\n\", a.ToString().c_str());\n-\n-    a--;\n-    LogPrintf(\"%s\\n\", a.ToString().c_str());\n-    a--;\n-    LogPrintf(\"%s\\n\", a.ToString().c_str());\n-    a--;\n-    LogPrintf(\"%s\\n\", a.ToString().c_str());\n-    uint256 d = a--;\n-    LogPrintf(\"%s\\n\", d.ToString().c_str());\n-    LogPrintf(\"%s\\n\", a.ToString().c_str());\n-    a--;\n-    LogPrintf(\"%s\\n\", a.ToString().c_str());\n-    a--;\n-    LogPrintf(\"%s\\n\", a.ToString().c_str());\n-\n-    d = a;\n-\n-    LogPrintf(\"%s\\n\", d.ToString().c_str());\n-    for (int i = uint256::WIDTH-1; i >= 0; i--) LogPrintf(\"%08x\", d.pn[i]); LogPrintf(\"\\n\");\n-\n-    uint256 neg = d;\n-    neg = ~neg;\n-    LogPrintf(\"%s\\n\", neg.ToString().c_str());\n-\n-\n-    uint256 e = uint256(\"0xABCDEF123abcdef12345678909832180000011111111\");\n-    LogPrintf(\"\\n\");\n-    LogPrintf(\"%s\\n\", e.ToString().c_str());\n-\n-\n-    LogPrintf(\"\\n\");\n-    uint256 x1 = uint256(\"0xABCDEF123abcdef12345678909832180000011111111\");\n-    uint256 x2;\n-    LogPrintf(\"%s\\n\", x1.ToString().c_str());\n-    for (int i = 0; i < 270; i += 4)\n-    {\n-        x2 = x1 << i;\n-        LogPrintf(\"%s\\n\", x2.ToString().c_str());\n-    }\n-\n-    LogPrintf(\"\\n\");\n-    LogPrintf(\"%s\\n\", x1.ToString().c_str());\n-    for (int i = 0; i < 270; i += 4)\n-    {\n-        x2 = x1;\n-        x2 >>= i;\n-        LogPrintf(\"%s\\n\", x2.ToString().c_str());\n-    }\n-\n-\n-    for (int i = 0; i < 100; i++)\n-    {\n-        uint256 k = (~uint256(0) >> i);\n-        LogPrintf(\"%s\\n\", k.ToString().c_str());\n-    }\n-\n-    for (int i = 0; i < 100; i++)\n-    {\n-        uint256 k = (~uint256(0) << i);\n-        LogPrintf(\"%s\\n\", k.ToString().c_str());\n-    }\n-\n-    return (0);\n-}\n-\n-#endif\n-\n #endif"
      }
    ]
  },
  {
    "sha": "4d46da20ead35c4bdb56eac722b3fd224d50bddc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0ZDQ2ZGEyMGVhZDM1YzRiZGI1NmVhYzcyMmIzZmQyMjRkNTBiZGRj",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2013-12-17T23:03:43Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2013-12-28T06:09:37Z"
      },
      "message": "Update debian/",
      "tree": {
        "sha": "d582e81369be33ccbc72f9f6c8d01b9808732ef6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d582e81369be33ccbc72f9f6c8d01b9808732ef6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4d46da20ead35c4bdb56eac722b3fd224d50bddc",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4d46da20ead35c4bdb56eac722b3fd224d50bddc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4d46da20ead35c4bdb56eac722b3fd224d50bddc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4d46da20ead35c4bdb56eac722b3fd224d50bddc/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6e7792003b5c520fcc81d223f07471d690594081",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6e7792003b5c520fcc81d223f07471d690594081",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6e7792003b5c520fcc81d223f07471d690594081"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 9,
      "deletions": 2
    },
    "files": [
      {
        "sha": "61e1aca6ad0ce17519af59f6da4afdd9521b79a8",
        "filename": "contrib/debian/bitcoin-qt.desktop",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4d46da20ead35c4bdb56eac722b3fd224d50bddc/contrib/debian/bitcoin-qt.desktop",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4d46da20ead35c4bdb56eac722b3fd224d50bddc/contrib/debian/bitcoin-qt.desktop",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoin-qt.desktop?ref=4d46da20ead35c4bdb56eac722b3fd224d50bddc",
        "patch": "@@ -4,9 +4,9 @@ Name=Bitcoin\n Comment=Bitcoin P2P Cryptocurrency\n Comment[fr]=Bitcoin, monnaie virtuelle cryptographique pair \u00e0 pair\n Comment[tr]=Bitcoin, e\u015ften e\u015fe kriptografik sanal para birimi\n-Exec=/usr/bin/bitcoin-qt %u\n+Exec=bitcoin-qt %u\n Terminal=false\n Type=Application\n-Icon=/usr/share/pixmaps/bitcoin128.png\n+Icon=bitcoin128\n MimeType=x-scheme-handler/bitcoin;\n Categories=Office;Finance;"
      },
      {
        "sha": "95b9ad31a36bc5b76455420bca509b040efb3fa5",
        "filename": "contrib/debian/changelog",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4d46da20ead35c4bdb56eac722b3fd224d50bddc/contrib/debian/changelog",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4d46da20ead35c4bdb56eac722b3fd224d50bddc/contrib/debian/changelog",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/changelog?ref=4d46da20ead35c4bdb56eac722b3fd224d50bddc",
        "patch": "@@ -1,3 +1,10 @@\n+bitcoin (0.8.6-precise1) precise; urgency=medium\n+\n+  * New upstream release.\n+  * Make .desktop paths non-fixed (suggested by prusnak@github)\n+\n+ -- Matt Corallo <matt@bluematt.me>  Fri, 13 Dec 2013 13:31:00 -0400\n+\n bitcoin (0.8.5-precise1) precise; urgency=medium\n \n   * New upstream release."
      }
    ]
  },
  {
    "sha": "aec55a073def2e6d5d11ae0e8ca5efb48c9cb0fe",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphZWM1NWEwNzNkZWYyZTZkNWQxMWFlMGU4Y2E1ZWZiNDhjOWNiMGZl",
    "commit": {
      "author": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2013-12-29T11:14:06Z"
      },
      "committer": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2013-12-29T11:14:06Z"
      },
      "message": "\"getnetworkhashps\" with defaults was yielding \"0\", the hashrate is not 0.\n\nThis was broken in 4c6d41b8b653ef90639b1a32f6aab0bb1cef90c5.",
      "tree": {
        "sha": "8472dcf98b2aca2517008382c27bd9575a98b1ae",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8472dcf98b2aca2517008382c27bd9575a98b1ae"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/aec55a073def2e6d5d11ae0e8ca5efb48c9cb0fe",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/aec55a073def2e6d5d11ae0e8ca5efb48c9cb0fe",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/aec55a073def2e6d5d11ae0e8ca5efb48c9cb0fe",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/aec55a073def2e6d5d11ae0e8ca5efb48c9cb0fe/comments",
    "author": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6e7792003b5c520fcc81d223f07471d690594081",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6e7792003b5c520fcc81d223f07471d690594081",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6e7792003b5c520fcc81d223f07471d690594081"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 4,
      "deletions": 1
    },
    "files": [
      {
        "sha": "564f0401f1036870d9e96bc663756416f01622c9",
        "filename": "src/rpcmining.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/aec55a073def2e6d5d11ae0e8ca5efb48c9cb0fe/src/rpcmining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/aec55a073def2e6d5d11ae0e8ca5efb48c9cb0fe/src/rpcmining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcmining.cpp?ref=aec55a073def2e6d5d11ae0e8ca5efb48c9cb0fe",
        "patch": "@@ -55,7 +55,10 @@ void ShutdownRPCMining()\n // or from the last difficulty change if 'lookup' is nonpositive.\n // If 'height' is nonnegative, compute the estimate at the time when a given block was found.\n Value GetNetworkHashPS(int lookup, int height) {\n-    CBlockIndex *pb = chainActive[height];\n+    CBlockIndex *pb = chainActive.Tip();\n+\n+    if (height >= 0 && height < chainActive.Height())\n+        pb = chainActive[height];\n \n     if (pb == NULL || !pb->nHeight)\n         return 0;"
      }
    ]
  },
  {
    "sha": "340bff34b7fda69358d959fae26baa0cd90f32d3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNDBiZmYzNGI3ZmRhNjkzNThkOTU5ZmFlMjZiYWEwY2Q5MGYzMmQz",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-02T08:32:03Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-02T08:36:46Z"
      },
      "message": "ui: Better tab order in send coins entry\n\nPressing <tab> after entering a label now brings the focus to the\naddress entry, instead of the row of buttons. In my experience this\nis more useful, as I usually want to paste an address after\nentering the label.\n\nThe buttons are mostly useless anyway:\n\n- Choosing a previously used address should be discouraged\n\n- When I'm already using the keyboard the 'paste address' button is\nuseless - just use the Ctrl-V. Maybe it would be an idea to remove it\ncompletely\n\n- I usually don't want to remove the entry I'm typing now! So makes\nsense to have it at the end of the tab chain.",
      "tree": {
        "sha": "8a510b3c2952031dc080fad21e30765bbc1f55e3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8a510b3c2952031dc080fad21e30765bbc1f55e3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/340bff34b7fda69358d959fae26baa0cd90f32d3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/340bff34b7fda69358d959fae26baa0cd90f32d3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/340bff34b7fda69358d959fae26baa0cd90f32d3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/340bff34b7fda69358d959fae26baa0cd90f32d3/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6e7792003b5c520fcc81d223f07471d690594081",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6e7792003b5c520fcc81d223f07471d690594081",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6e7792003b5c520fcc81d223f07471d690594081"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 4,
      "deletions": 3
    },
    "files": [
      {
        "sha": "3f5d0cda3a686ee40b5b6cda73319837b3d0c45e",
        "filename": "src/qt/sendcoinsentry.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/340bff34b7fda69358d959fae26baa0cd90f32d3/src/qt/sendcoinsentry.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/340bff34b7fda69358d959fae26baa0cd90f32d3/src/qt/sendcoinsentry.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsentry.cpp?ref=340bff34b7fda69358d959fae26baa0cd90f32d3",
        "patch": "@@ -155,11 +155,12 @@ SendCoinsRecipient SendCoinsEntry::getValue()\n QWidget *SendCoinsEntry::setupTabChain(QWidget *prev)\n {\n     QWidget::setTabOrder(prev, ui->payTo);\n-    QWidget::setTabOrder(ui->payTo, ui->addressBookButton);\n+    QWidget::setTabOrder(ui->payTo, ui->addAsLabel);\n+    QWidget *w = ui->payAmount->setupTabChain(ui->addAsLabel);\n+    QWidget::setTabOrder(w, ui->addressBookButton);\n     QWidget::setTabOrder(ui->addressBookButton, ui->pasteButton);\n     QWidget::setTabOrder(ui->pasteButton, ui->deleteButton);\n-    QWidget::setTabOrder(ui->deleteButton, ui->addAsLabel);\n-    return ui->payAmount->setupTabChain(ui->addAsLabel);\n+    return ui->deleteButton;\n }\n \n void SendCoinsEntry::setValue(const SendCoinsRecipient &value)"
      }
    ]
  },
  {
    "sha": "cdc11b3228a833f32640f1d81314f5fe92cf945b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjZGMxMWIzMjI4YTgzM2YzMjY0MGYxZDgxMzE0ZjVmZTkyY2Y5NDVi",
    "commit": {
      "author": {
        "name": "Christian Decker",
        "email": "decker.christian@gmail.com",
        "date": "2014-01-01T18:53:04Z"
      },
      "committer": {
        "name": "Christian Decker",
        "email": "decker.christian@gmail.com",
        "date": "2014-01-03T13:01:39Z"
      },
      "message": "Added new DNS seed from bitcoinstats.com.",
      "tree": {
        "sha": "0c66a6db7ea0640354faa98022ab8aeec8b3db92",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0c66a6db7ea0640354faa98022ab8aeec8b3db92"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cdc11b3228a833f32640f1d81314f5fe92cf945b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cdc11b3228a833f32640f1d81314f5fe92cf945b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cdc11b3228a833f32640f1d81314f5fe92cf945b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cdc11b3228a833f32640f1d81314f5fe92cf945b/comments",
    "author": {
      "login": "cdecker",
      "id": 120117,
      "node_id": "MDQ6VXNlcjEyMDExNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/120117?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cdecker",
      "html_url": "https://github.com/cdecker",
      "followers_url": "https://api.github.com/users/cdecker/followers",
      "following_url": "https://api.github.com/users/cdecker/following{/other_user}",
      "gists_url": "https://api.github.com/users/cdecker/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cdecker/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cdecker/subscriptions",
      "organizations_url": "https://api.github.com/users/cdecker/orgs",
      "repos_url": "https://api.github.com/users/cdecker/repos",
      "events_url": "https://api.github.com/users/cdecker/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cdecker/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "cdecker",
      "id": 120117,
      "node_id": "MDQ6VXNlcjEyMDExNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/120117?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cdecker",
      "html_url": "https://github.com/cdecker",
      "followers_url": "https://api.github.com/users/cdecker/followers",
      "following_url": "https://api.github.com/users/cdecker/following{/other_user}",
      "gists_url": "https://api.github.com/users/cdecker/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cdecker/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cdecker/subscriptions",
      "organizations_url": "https://api.github.com/users/cdecker/orgs",
      "repos_url": "https://api.github.com/users/cdecker/repos",
      "events_url": "https://api.github.com/users/cdecker/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cdecker/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6e7792003b5c520fcc81d223f07471d690594081",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6e7792003b5c520fcc81d223f07471d690594081",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6e7792003b5c520fcc81d223f07471d690594081"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 1,
      "deletions": 0
    },
    "files": [
      {
        "sha": "d3d6b98d8049550ed07212a3a62ae1148023518d",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cdc11b3228a833f32640f1d81314f5fe92cf945b/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cdc11b3228a833f32640f1d81314f5fe92cf945b/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=cdc11b3228a833f32640f1d81314f5fe92cf945b",
        "patch": "@@ -143,6 +143,7 @@ class CMainParams : public CChainParams {\n         vSeeds.push_back(CDNSSeedData(\"bitcoin.sipa.be\", \"seed.bitcoin.sipa.be\"));\n         vSeeds.push_back(CDNSSeedData(\"bluematt.me\", \"dnsseed.bluematt.me\"));\n         vSeeds.push_back(CDNSSeedData(\"dashjr.org\", \"dnsseed.bitcoin.dashjr.org\"));\n+        vSeeds.push_back(CDNSSeedData(\"bitcoinstats.com\", \"seed.bitcoinstats.com\"));\n         vSeeds.push_back(CDNSSeedData(\"xf2.org\", \"bitseed.xf2.org\"));\n \n         base58Prefixes[PUBKEY_ADDRESS] = list_of(0);"
      }
    ]
  },
  {
    "sha": "e8837b384dc045a0b970b19a64844d11e2da99b3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplODgzN2IzODRkYzA0NWEwYjk3MGIxOWE2NDg0NGQxMWUyZGE5OWIz",
    "commit": {
      "author": {
        "name": "Jeff Garzik",
        "email": "jgarzik@bitpay.com",
        "date": "2014-01-03T14:53:08Z"
      },
      "committer": {
        "name": "Jeff Garzik",
        "email": "jgarzik@bitpay.com",
        "date": "2014-01-03T14:53:08Z"
      },
      "message": "Merge pull request #3481 from cdecker/bitcoinstats_seed\n\nAdded new DNS seed from bitcoinstats.com.",
      "tree": {
        "sha": "0c66a6db7ea0640354faa98022ab8aeec8b3db92",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0c66a6db7ea0640354faa98022ab8aeec8b3db92"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e8837b384dc045a0b970b19a64844d11e2da99b3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e8837b384dc045a0b970b19a64844d11e2da99b3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e8837b384dc045a0b970b19a64844d11e2da99b3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e8837b384dc045a0b970b19a64844d11e2da99b3/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "6e7792003b5c520fcc81d223f07471d690594081",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6e7792003b5c520fcc81d223f07471d690594081",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6e7792003b5c520fcc81d223f07471d690594081"
      },
      {
        "sha": "cdc11b3228a833f32640f1d81314f5fe92cf945b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cdc11b3228a833f32640f1d81314f5fe92cf945b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cdc11b3228a833f32640f1d81314f5fe92cf945b"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 1,
      "deletions": 0
    },
    "files": [
      {
        "sha": "d3d6b98d8049550ed07212a3a62ae1148023518d",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e8837b384dc045a0b970b19a64844d11e2da99b3/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e8837b384dc045a0b970b19a64844d11e2da99b3/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=e8837b384dc045a0b970b19a64844d11e2da99b3",
        "patch": "@@ -143,6 +143,7 @@ class CMainParams : public CChainParams {\n         vSeeds.push_back(CDNSSeedData(\"bitcoin.sipa.be\", \"seed.bitcoin.sipa.be\"));\n         vSeeds.push_back(CDNSSeedData(\"bluematt.me\", \"dnsseed.bluematt.me\"));\n         vSeeds.push_back(CDNSSeedData(\"dashjr.org\", \"dnsseed.bitcoin.dashjr.org\"));\n+        vSeeds.push_back(CDNSSeedData(\"bitcoinstats.com\", \"seed.bitcoinstats.com\"));\n         vSeeds.push_back(CDNSSeedData(\"xf2.org\", \"bitseed.xf2.org\"));\n \n         base58Prefixes[PUBKEY_ADDRESS] = list_of(0);"
      }
    ]
  },
  {
    "sha": "51947e49720e821e8b619f8e402fb2644e598d59",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1MTk0N2U0OTcyMGU4MjFlOGI2MTlmOGU0MDJmYjI2NDRlNTk4ZDU5",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-04T12:13:19Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-04T12:13:37Z"
      },
      "message": "Merge pull request #3480\n\n340bff3 ui: Better tab order in send coins entry (Wladimir J. van der Laan)",
      "tree": {
        "sha": "bbe91211dac9762996140a2fd0486d3ca2d8ba72",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bbe91211dac9762996140a2fd0486d3ca2d8ba72"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/51947e49720e821e8b619f8e402fb2644e598d59",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJSx/rxAAoJEHSBCwEjRsmmPhAIAL4BZz9zLQG3j0C3393m5JeW\nebeh4Eed0cNg8CnfjT2xDaHdU4OM1gimq1fapCJmJNn5qXEeaUmPugRdSb7G6ht5\nV86bS4blTCGsLp4driwWYKfyvyxvTyTUi8xFYBqxqGLnkRIt8MjaI97NTDzufiPC\nPc1AlO7JzIaVWflFvjLW19D7Weob/UXYTNUhufS5er4dBzETrQ+XQfiJkGXQVLy9\nIyJgJZ7tgeGW1aiuLc/JoZ/k7PGZQ/ToCfMMTqevlYo/vkwSWf550s1pH2Ut0wNn\nrtcnfhAukB77IN2gu4ZJdARKrNZtm34w3y68f/F62k7FijL8jn4+xtGl9xQLoGg=\n=oXQM\n-----END PGP SIGNATURE-----",
        "payload": "tree bbe91211dac9762996140a2fd0486d3ca2d8ba72\nparent e8837b384dc045a0b970b19a64844d11e2da99b3\nparent 340bff34b7fda69358d959fae26baa0cd90f32d3\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1388837599 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1388837617 +0100\n\nMerge pull request #3480\n\n340bff3 ui: Better tab order in send coins entry (Wladimir J. van der Laan)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/51947e49720e821e8b619f8e402fb2644e598d59",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/51947e49720e821e8b619f8e402fb2644e598d59",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/51947e49720e821e8b619f8e402fb2644e598d59/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e8837b384dc045a0b970b19a64844d11e2da99b3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e8837b384dc045a0b970b19a64844d11e2da99b3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e8837b384dc045a0b970b19a64844d11e2da99b3"
      },
      {
        "sha": "340bff34b7fda69358d959fae26baa0cd90f32d3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/340bff34b7fda69358d959fae26baa0cd90f32d3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/340bff34b7fda69358d959fae26baa0cd90f32d3"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 4,
      "deletions": 3
    },
    "files": [
      {
        "sha": "3f5d0cda3a686ee40b5b6cda73319837b3d0c45e",
        "filename": "src/qt/sendcoinsentry.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/51947e49720e821e8b619f8e402fb2644e598d59/src/qt/sendcoinsentry.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/51947e49720e821e8b619f8e402fb2644e598d59/src/qt/sendcoinsentry.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsentry.cpp?ref=51947e49720e821e8b619f8e402fb2644e598d59",
        "patch": "@@ -155,11 +155,12 @@ SendCoinsRecipient SendCoinsEntry::getValue()\n QWidget *SendCoinsEntry::setupTabChain(QWidget *prev)\n {\n     QWidget::setTabOrder(prev, ui->payTo);\n-    QWidget::setTabOrder(ui->payTo, ui->addressBookButton);\n+    QWidget::setTabOrder(ui->payTo, ui->addAsLabel);\n+    QWidget *w = ui->payAmount->setupTabChain(ui->addAsLabel);\n+    QWidget::setTabOrder(w, ui->addressBookButton);\n     QWidget::setTabOrder(ui->addressBookButton, ui->pasteButton);\n     QWidget::setTabOrder(ui->pasteButton, ui->deleteButton);\n-    QWidget::setTabOrder(ui->deleteButton, ui->addAsLabel);\n-    return ui->payAmount->setupTabChain(ui->addAsLabel);\n+    return ui->deleteButton;\n }\n \n void SendCoinsEntry::setValue(const SendCoinsRecipient &value)"
      }
    ]
  },
  {
    "sha": "16403b42759205461918c652fdc5b71c422c44a2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxNjQwM2I0Mjc1OTIwNTQ2MTkxOGM2NTJmZGM1YjcxYzQyMmM0NGEy",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-05T09:41:20Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-05T09:43:10Z"
      },
      "message": "Merge pull request #3474\n\naec55a0 \"getnetworkhashps\" with defaults was yielding \"0\", the hashrate is not 0. (Gregory Maxwell)",
      "tree": {
        "sha": "d6637cf5549a06256516fd9c2267d8c6362590a5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d6637cf5549a06256516fd9c2267d8c6362590a5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/16403b42759205461918c652fdc5b71c422c44a2",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJSySkuAAoJEHSBCwEjRsmm22wH/34j0KviOhtiTemwGV0hzz4E\nK73ZII7vv2GuD8pJSbusAYh8DuiTNO8MhpfxkD3L0pHd5B56pNB6z1wR02DzQPS3\no9pXY01ynhTanZDXubfZT118zcWvogAEBTVH0SGUHYLAsdcLpndGZuy1Gs6i5Ysf\n7fPvcbFENCb72rHE0wvWVBUwnz3CIaLclQjs1uzU6k/qg9fer9IjeIG0Jzjj8z0A\n5i9aXroilM/cEJ51ixb/Bhrcvsl/oL8dm+qhvaKZw4RD771hBdVyuhJMCxq5jkv7\naWRxB+Tjmpl8ngH1Hhkm3HKOa6B5HuMTvzFInBiTGekrXD2mmuzB+9Y/uxICT54=\n=7Q8v\n-----END PGP SIGNATURE-----",
        "payload": "tree d6637cf5549a06256516fd9c2267d8c6362590a5\nparent 51947e49720e821e8b619f8e402fb2644e598d59\nparent aec55a073def2e6d5d11ae0e8ca5efb48c9cb0fe\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1388914880 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1388914990 +0100\n\nMerge pull request #3474\n\naec55a0 \"getnetworkhashps\" with defaults was yielding \"0\", the hashrate is not 0. (Gregory Maxwell)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/16403b42759205461918c652fdc5b71c422c44a2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/16403b42759205461918c652fdc5b71c422c44a2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/16403b42759205461918c652fdc5b71c422c44a2/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "51947e49720e821e8b619f8e402fb2644e598d59",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/51947e49720e821e8b619f8e402fb2644e598d59",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/51947e49720e821e8b619f8e402fb2644e598d59"
      },
      {
        "sha": "aec55a073def2e6d5d11ae0e8ca5efb48c9cb0fe",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/aec55a073def2e6d5d11ae0e8ca5efb48c9cb0fe",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/aec55a073def2e6d5d11ae0e8ca5efb48c9cb0fe"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 4,
      "deletions": 1
    },
    "files": [
      {
        "sha": "564f0401f1036870d9e96bc663756416f01622c9",
        "filename": "src/rpcmining.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/16403b42759205461918c652fdc5b71c422c44a2/src/rpcmining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/16403b42759205461918c652fdc5b71c422c44a2/src/rpcmining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcmining.cpp?ref=16403b42759205461918c652fdc5b71c422c44a2",
        "patch": "@@ -55,7 +55,10 @@ void ShutdownRPCMining()\n // or from the last difficulty change if 'lookup' is nonpositive.\n // If 'height' is nonnegative, compute the estimate at the time when a given block was found.\n Value GetNetworkHashPS(int lookup, int height) {\n-    CBlockIndex *pb = chainActive[height];\n+    CBlockIndex *pb = chainActive.Tip();\n+\n+    if (height >= 0 && height < chainActive.Height())\n+        pb = chainActive[height];\n \n     if (pb == NULL || !pb->nHeight)\n         return 0;"
      }
    ]
  },
  {
    "sha": "2102ab9f5cb542e6727e0f25e670d8549aa1bf1a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyMTAyYWI5ZjVjYjU0MmU2NzI3ZTBmMjVlNjcwZDg1NDlhYTFiZjFh",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-05T11:37:51Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-05T11:55:03Z"
      },
      "message": "ui: Fix GUI initialization order\n\nFixes at least #3478.\n\nSplits and documents the phases:\n1. Parse command-line options. These take precedence over anything else.\n2. Basic Qt initialization (not dependent on parameters or configuration)\n3. Application identification\n4. Initialization of translations\n5. Now that settings and translations are available, ask user for data directory\n6. Determine availability of data directory and parse bitcoin.conf\n7. URI IPC sending\n8. Main GUI initialization\n\nSplits command line parsing logic from ipcSendCommandLine into\nipcParseCommandLine, as isTestNet() can only be overridden in the early\nstages before choosing a data directory. Sending however needs to happen\nafter choosing a data directory.",
      "tree": {
        "sha": "cad487646827981bacb34d1d102c143eb6e858f8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cad487646827981bacb34d1d102c143eb6e858f8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2102ab9f5cb542e6727e0f25e670d8549aa1bf1a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2102ab9f5cb542e6727e0f25e670d8549aa1bf1a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2102ab9f5cb542e6727e0f25e670d8549aa1bf1a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2102ab9f5cb542e6727e0f25e670d8549aa1bf1a/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "16403b42759205461918c652fdc5b71c422c44a2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/16403b42759205461918c652fdc5b71c422c44a2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/16403b42759205461918c652fdc5b71c422c44a2"
      }
    ],
    "stats": {
      "total": 105,
      "additions": 64,
      "deletions": 41
    },
    "files": [
      {
        "sha": "cd74fb4cef803429d1eb56a0a84053bbf8f50514",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 46,
        "deletions": 36,
        "changes": 82,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2102ab9f5cb542e6727e0f25e670d8549aa1bf1a/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2102ab9f5cb542e6727e0f25e670d8549aa1bf1a/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=2102ab9f5cb542e6727e0f25e670d8549aa1bf1a",
        "patch": "@@ -161,22 +161,23 @@ void DebugMessageHandler(QtMsgType type, const QMessageLogContext& context, cons\n #ifndef BITCOIN_QT_TEST\n int main(int argc, char *argv[])\n {\n-    bool fMissingDatadir = false;\n     bool fSelParFromCLFailed = false;\n-\n+    /// 1. Parse command-line options. These take precedence over anything else.\n     // Command-line options take precedence:\n     ParseParameters(argc, argv);\n-    // ... then bitcoin.conf:\n-    if (!boost::filesystem::is_directory(GetDataDir(false))) {\n-        fMissingDatadir = true;\n-    } else {\n-        ReadConfigFile(mapArgs, mapMultiArgs);\n-    }\n     // Check for -testnet or -regtest parameter (TestNet() calls are only valid after this clause)\n     if (!SelectParamsFromCommandLine()) {\n         fSelParFromCLFailed = true;\n     }\n+    // Parse URIs on command line -- this can affect TestNet() / RegTest() mode\n+    if (!PaymentServer::ipcParseCommandLine(argc, argv))\n+        exit(0);\n+\n+    bool isaTestNet = TestNet() || RegTest();\n+\n+    // Do not refer to data directory yet, this can be overridden by Intro::pickDataDirectory\n \n+    /// 2. Basic Qt initialization (not dependent on parameters or configuration)\n #if QT_VERSION < 0x050000\n     // Internal string conversion is all UTF-8\n     QTextCodec::setCodecForTr(QTextCodec::codecForName(\"UTF-8\"));\n@@ -196,44 +197,62 @@ int main(int argc, char *argv[])\n     // Register meta types used for QMetaObject::invokeMethod\n     qRegisterMetaType< bool* >();\n \n-    // Application identification (must be set before OptionsModel is initialized,\n-    // as it is used to locate QSettings)\n-    bool isaTestNet = TestNet() || RegTest();\n+    /// 3. Application identification\n+    // must be set before OptionsModel is initialized or translations are loaded,\n+    // as it is used to locate QSettings\n     QApplication::setOrganizationName(\"Bitcoin\");\n     QApplication::setOrganizationDomain(\"bitcoin.org\");\n     if (isaTestNet) // Separate UI settings for testnets\n         QApplication::setApplicationName(\"Bitcoin-Qt-testnet\");\n     else\n         QApplication::setApplicationName(\"Bitcoin-Qt\");\n \n+    /// 4. Initialization of translations, so that intro dialog is in user's language\n     // Now that QSettings are accessible, initialize translations\n     QTranslator qtTranslatorBase, qtTranslator, translatorBase, translator;\n     initTranslations(qtTranslatorBase, qtTranslator, translatorBase, translator);\n \n-    // Do this early as we don't want to bother initializing if we are just calling IPC\n-    // ... but do it after creating app and setting up translations, so errors are\n-    // translated properly.\n-    if (PaymentServer::ipcSendCommandLine(argc, argv))\n-        exit(0);\n-\n-    // Now that translations are initialized check for errors and allow a translatable error message\n-    if (fMissingDatadir) {\n-        QMessageBox::critical(0, QObject::tr(\"Bitcoin\"),\n-                              QObject::tr(\"Error: Specified data directory \\\"%1\\\" does not exist.\").arg(QString::fromStdString(mapArgs[\"-datadir\"])));\n+    // Show help message immediately after parsing command-line options (for \"-lang\") and setting locale,\n+    // but before showing splash screen.\n+    if (mapArgs.count(\"-?\") || mapArgs.count(\"--help\"))\n+    {\n+        GUIUtil::HelpMessageBox help;\n+        help.showOrPrint();\n         return 1;\n     }\n-    else if (fSelParFromCLFailed) {\n+    // Now that translations are initialized, check for earlier errors and show a translatable error message\n+    if (fSelParFromCLFailed) {\n         QMessageBox::critical(0, QObject::tr(\"Bitcoin\"), QObject::tr(\"Error: Invalid combination of -regtest and -testnet.\"));\n         return 1;\n     }\n \n+    /// 5. Now that settings and translations are available, ask user for data directory\n+    // User language is set up: pick a data directory\n+    Intro::pickDataDirectory(isaTestNet);\n+\n+    /// 6. Determine availability of data directory and parse bitcoin.conf\n+    if (!boost::filesystem::is_directory(GetDataDir(false)))\n+    {\n+        QMessageBox::critical(0, QObject::tr(\"Bitcoin\"),\n+                              QObject::tr(\"Error: Specified data directory \\\"%1\\\" does not exist.\").arg(QString::fromStdString(mapArgs[\"-datadir\"])));\n+        return 1;\n+    }\n+    ReadConfigFile(mapArgs, mapMultiArgs);\n+\n+    /// 7. URI IPC sending\n+    // - Do this early as we don't want to bother initializing if we are just calling IPC\n+    // - Do this *after* setting up the data directory, as the data directory hash is used in the name\n+    // of the server.\n+    // - Do this after creating app and setting up translations, so errors are\n+    // translated properly.\n+    if (PaymentServer::ipcSendCommandLine())\n+        exit(0);\n+\n     // Start up the payment server early, too, so impatient users that click on\n     // bitcoin: links repeatedly have their payment requests routed to this process:\n     PaymentServer* paymentServer = new PaymentServer(&app);\n \n-    // User language is set up: pick a data directory\n-    Intro::pickDataDirectory(isaTestNet);\n-\n+    /// 8. Main GUI initialization\n     // Install global event filter that makes sure that long tooltips can be word-wrapped\n     app.installEventFilter(new GUIUtil::ToolTipToRichTextFilter(TOOLTIP_WRAP_THRESHOLD, &app));\n     // Install qDebug() message handler to route to debug.log\n@@ -242,24 +261,15 @@ int main(int argc, char *argv[])\n #else\n     qInstallMessageHandler(DebugMessageHandler);\n #endif\n-\n-    // ... now GUI settings:\n+    // Load GUI settings from QSettings\n     OptionsModel optionsModel;\n \n     // Subscribe to global signals from core\n     uiInterface.ThreadSafeMessageBox.connect(ThreadSafeMessageBox);\n     uiInterface.InitMessage.connect(InitMessage);\n     uiInterface.Translate.connect(Translate);\n \n-    // Show help message immediately after parsing command-line options (for \"-lang\") and setting locale,\n-    // but before showing splash screen.\n-    if (mapArgs.count(\"-?\") || mapArgs.count(\"--help\"))\n-    {\n-        GUIUtil::HelpMessageBox help;\n-        help.showOrPrint();\n-        return 1;\n-    }\n-\n+    // Show splash screen if appropriate\n     SplashScreen splash(QPixmap(), 0, isaTestNet);\n     if (GetBoolArg(\"-splash\", true) && !GetBoolArg(\"-min\", false))\n     {"
      },
      {
        "sha": "5f7ccf7093af9b8f2acb9bdcecffd1da81c01074",
        "filename": "src/qt/intro.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2102ab9f5cb542e6727e0f25e670d8549aa1bf1a/src/qt/intro.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2102ab9f5cb542e6727e0f25e670d8549aa1bf1a/src/qt/intro.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/intro.cpp?ref=2102ab9f5cb542e6727e0f25e670d8549aa1bf1a",
        "patch": "@@ -148,7 +148,7 @@ QString Intro::getDefaultDataDirectory()\n \n void Intro::pickDataDirectory(bool fIsTestnet)\n {\n-    namespace fs = boost::filesystem;;\n+    namespace fs = boost::filesystem;\n     QSettings settings;\n     /* If data directory provided on command line, no need to look at settings\n        or show a picking dialog */"
      },
      {
        "sha": "3d6f5de754cadfc56481e18a59c49f5d305b7c59",
        "filename": "src/qt/paymentserver.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 3,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2102ab9f5cb542e6727e0f25e670d8549aa1bf1a/src/qt/paymentserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2102ab9f5cb542e6727e0f25e670d8549aa1bf1a/src/qt/paymentserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/paymentserver.cpp?ref=2102ab9f5cb542e6727e0f25e670d8549aa1bf1a",
        "patch": "@@ -180,10 +180,8 @@ void PaymentServer::LoadRootCAs(X509_STORE* _store)\n // and the items in savedPaymentRequest will be handled\n // when uiReady() is called.\n //\n-bool PaymentServer::ipcSendCommandLine(int argc, char* argv[])\n+bool PaymentServer::ipcParseCommandLine(int argc, char* argv[])\n {\n-    bool fResult = false;\n-\n     for (int i = 1; i < argc; i++)\n     {\n         QString arg(argv[i]);\n@@ -226,7 +224,18 @@ bool PaymentServer::ipcSendCommandLine(int argc, char* argv[])\n             qDebug() << \"PaymentServer::ipcSendCommandLine : Payment request file does not exist: \" << arg;\n         }\n     }\n+    return true;\n+}\n \n+//\n+// Sending to the server is done synchronously, at startup.\n+// If the server isn't already running, startup continues,\n+// and the items in savedPaymentRequest will be handled\n+// when uiReady() is called.\n+//\n+bool PaymentServer::ipcSendCommandLine()\n+{\n+    bool fResult = false;\n     foreach (const QString& r, savedPaymentRequests)\n     {\n         QLocalSocket* socket = new QLocalSocket();"
      },
      {
        "sha": "5ee85f7db41b38a9a08aa9840dca31018f8668e4",
        "filename": "src/qt/paymentserver.h",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2102ab9f5cb542e6727e0f25e670d8549aa1bf1a/src/qt/paymentserver.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2102ab9f5cb542e6727e0f25e670d8549aa1bf1a/src/qt/paymentserver.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/paymentserver.h?ref=2102ab9f5cb542e6727e0f25e670d8549aa1bf1a",
        "patch": "@@ -56,12 +56,16 @@ class PaymentServer : public QObject\n     Q_OBJECT\n \n public:\n+    // Parse URIs on command line\n+    // Returns false on error\n+    static bool ipcParseCommandLine(int argc, char *argv[]);\n+\n     // Returns true if there were URIs on the command line\n     // which were successfully sent to an already-running\n     // process.\n     // Note: if a payment request is given, SelectParams(MAIN/TESTNET)\n     // will be called so we startup in the right mode.\n-    static bool ipcSendCommandLine(int argc, char *argv[]);\n+    static bool ipcSendCommandLine();\n \n     // parent should be QApplication object\n     PaymentServer(QObject* parent, bool startLocalServer = true);"
      }
    ]
  },
  {
    "sha": "a867f4556b5bd2dcc211a275513d49ac12405f19",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphODY3ZjQ1NTZiNWJkMmRjYzIxMWEyNzU1MTNkNDlhYzEyNDA1ZjE5",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-06T09:19:35Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-06T09:23:25Z"
      },
      "message": "Merge pull request #3468\n\n4d46da2 Update debian/ (Matt Corallo)",
      "tree": {
        "sha": "c4463f8dc4a594ba918ebdb4e5be416111f9bf4a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c4463f8dc4a594ba918ebdb4e5be416111f9bf4a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a867f4556b5bd2dcc211a275513d49ac12405f19",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJSynYNAAoJEHSBCwEjRsmmr70IAKla034MddRGg9J+NNM4OTPY\nKNQMXX63P+l8OAmEm3bHEx2EDshbDGsJXx+LSNDJakQLf/oFmlfKXxxNKp3xfY3i\nwHYJGuD+9zAt+dyJ6F2pGDd4vy32m7vxWyOW8G3Tf1GXRFbRH4ZqWvm30mM72aXp\n/e7AjkGJ2OpDWRl5wz0YHlXWJWT35XbV7rbOrcd0TQjk/7q7JuzGveBxCWajZyd6\ndIZosR9kjDEa2WE1+vLJ/Miod6B9rRU7e33s+v+pWCJCR0gT3IUYuX16ttUiXVJ5\nVYez0msP6gknK8FvqUMQg78J6sZKjeqoPVQgH16oJhsSdVDdPWRn5uCC4FQ7lLE=\n=3xBm\n-----END PGP SIGNATURE-----",
        "payload": "tree c4463f8dc4a594ba918ebdb4e5be416111f9bf4a\nparent 16403b42759205461918c652fdc5b71c422c44a2\nparent 4d46da20ead35c4bdb56eac722b3fd224d50bddc\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1388999975 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1389000205 +0100\n\nMerge pull request #3468\n\n4d46da2 Update debian/ (Matt Corallo)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a867f4556b5bd2dcc211a275513d49ac12405f19",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a867f4556b5bd2dcc211a275513d49ac12405f19",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a867f4556b5bd2dcc211a275513d49ac12405f19/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "16403b42759205461918c652fdc5b71c422c44a2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/16403b42759205461918c652fdc5b71c422c44a2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/16403b42759205461918c652fdc5b71c422c44a2"
      },
      {
        "sha": "4d46da20ead35c4bdb56eac722b3fd224d50bddc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4d46da20ead35c4bdb56eac722b3fd224d50bddc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4d46da20ead35c4bdb56eac722b3fd224d50bddc"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 9,
      "deletions": 2
    },
    "files": [
      {
        "sha": "61e1aca6ad0ce17519af59f6da4afdd9521b79a8",
        "filename": "contrib/debian/bitcoin-qt.desktop",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a867f4556b5bd2dcc211a275513d49ac12405f19/contrib/debian/bitcoin-qt.desktop",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a867f4556b5bd2dcc211a275513d49ac12405f19/contrib/debian/bitcoin-qt.desktop",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoin-qt.desktop?ref=a867f4556b5bd2dcc211a275513d49ac12405f19",
        "patch": "@@ -4,9 +4,9 @@ Name=Bitcoin\n Comment=Bitcoin P2P Cryptocurrency\n Comment[fr]=Bitcoin, monnaie virtuelle cryptographique pair \u00e0 pair\n Comment[tr]=Bitcoin, e\u015ften e\u015fe kriptografik sanal para birimi\n-Exec=/usr/bin/bitcoin-qt %u\n+Exec=bitcoin-qt %u\n Terminal=false\n Type=Application\n-Icon=/usr/share/pixmaps/bitcoin128.png\n+Icon=bitcoin128\n MimeType=x-scheme-handler/bitcoin;\n Categories=Office;Finance;"
      },
      {
        "sha": "95b9ad31a36bc5b76455420bca509b040efb3fa5",
        "filename": "contrib/debian/changelog",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a867f4556b5bd2dcc211a275513d49ac12405f19/contrib/debian/changelog",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a867f4556b5bd2dcc211a275513d49ac12405f19/contrib/debian/changelog",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/changelog?ref=a867f4556b5bd2dcc211a275513d49ac12405f19",
        "patch": "@@ -1,3 +1,10 @@\n+bitcoin (0.8.6-precise1) precise; urgency=medium\n+\n+  * New upstream release.\n+  * Make .desktop paths non-fixed (suggested by prusnak@github)\n+\n+ -- Matt Corallo <matt@bluematt.me>  Fri, 13 Dec 2013 13:31:00 -0400\n+\n bitcoin (0.8.5-precise1) precise; urgency=medium\n \n   * New upstream release."
      }
    ]
  },
  {
    "sha": "ab086e0bd39b6d010c040c9bf4d781400fc7b9f8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphYjA4NmUwYmQzOWI2ZDAxMGMwNDBjOWJmNGQ3ODE0MDBmYzdiOWY4",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-06T09:27:17Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-06T09:29:08Z"
      },
      "message": "Merge pull request #3422\n\ndaa6b20 Unittests for uint256.h (Thomas Holenstein)\ne85e19b Changed Get64(.) to GetLow64() (Thomas Holenstein)",
      "tree": {
        "sha": "95daef41f0c8eba5ed51dc6b7135d780dac50647",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/95daef41f0c8eba5ed51dc6b7135d780dac50647"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ab086e0bd39b6d010c040c9bf4d781400fc7b9f8",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJSyndkAAoJEHSBCwEjRsmmP/cH/1PNaFxkGHN27e/MeQMRZPvI\n0CROFNuLm3ozrtIimu7clGWL9l7Eq3Mq511mcCIs46eyVTHA1BPHjGE3vXjEQ1eW\nib1fi+BSPGPoiNBC40XJUI7vm9ixDhpaRYAjE2EivbwbaqBQZOkUJ+7EM4+scMzb\ngrdEn8yUyD9Hp9KWmWtCLNEYGg/j+eiCvKWw4sPw9/P6l6ma15x2lXrWYEIjDP4i\ncBeKOab1NO3o2ANhT2L4tz2hGbrUBJJQNUqM6yQsUNM1HLtJsN4TnBi/l9YIVn/t\n+Sm82Nsqa9CdlMS0ykKZZMtTCQvxdx8fyVWLhHZB3U/cmB1Mgk93zoz9azZmfu0=\n=NWts\n-----END PGP SIGNATURE-----",
        "payload": "tree 95daef41f0c8eba5ed51dc6b7135d780dac50647\nparent a867f4556b5bd2dcc211a275513d49ac12405f19\nparent daa6b20e29f3926a16d4da6962ff00b74623fc6b\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1389000437 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1389000548 +0100\n\nMerge pull request #3422\n\ndaa6b20 Unittests for uint256.h (Thomas Holenstein)\ne85e19b Changed Get64(.) to GetLow64() (Thomas Holenstein)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ab086e0bd39b6d010c040c9bf4d781400fc7b9f8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ab086e0bd39b6d010c040c9bf4d781400fc7b9f8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ab086e0bd39b6d010c040c9bf4d781400fc7b9f8/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a867f4556b5bd2dcc211a275513d49ac12405f19",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a867f4556b5bd2dcc211a275513d49ac12405f19",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a867f4556b5bd2dcc211a275513d49ac12405f19"
      },
      {
        "sha": "daa6b20e29f3926a16d4da6962ff00b74623fc6b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/daa6b20e29f3926a16d4da6962ff00b74623fc6b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/daa6b20e29f3926a16d4da6962ff00b74623fc6b"
      }
    ],
    "stats": {
      "total": 821,
      "additions": 628,
      "deletions": 193
    },
    "files": [
      {
        "sha": "46b4a94938055dcb36b91af22a181d16b5f5adce",
        "filename": "src/addrman.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ab086e0bd39b6d010c040c9bf4d781400fc7b9f8/src/addrman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ab086e0bd39b6d010c040c9bf4d781400fc7b9f8/src/addrman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrman.cpp?ref=ab086e0bd39b6d010c040c9bf4d781400fc7b9f8",
        "patch": "@@ -14,12 +14,12 @@ int CAddrInfo::GetTriedBucket(const std::vector<unsigned char> &nKey) const\n     CDataStream ss1(SER_GETHASH, 0);\n     std::vector<unsigned char> vchKey = GetKey();\n     ss1 << nKey << vchKey;\n-    uint64_t hash1 = Hash(ss1.begin(), ss1.end()).Get64();\n+    uint64_t hash1 = Hash(ss1.begin(), ss1.end()).GetLow64();\n \n     CDataStream ss2(SER_GETHASH, 0);\n     std::vector<unsigned char> vchGroupKey = GetGroup();\n     ss2 << nKey << vchGroupKey << (hash1 % ADDRMAN_TRIED_BUCKETS_PER_GROUP);\n-    uint64_t hash2 = Hash(ss2.begin(), ss2.end()).Get64();\n+    uint64_t hash2 = Hash(ss2.begin(), ss2.end()).GetLow64();\n     return hash2 % ADDRMAN_TRIED_BUCKET_COUNT;\n }\n \n@@ -29,11 +29,11 @@ int CAddrInfo::GetNewBucket(const std::vector<unsigned char> &nKey, const CNetAd\n     std::vector<unsigned char> vchGroupKey = GetGroup();\n     std::vector<unsigned char> vchSourceGroupKey = src.GetGroup();\n     ss1 << nKey << vchGroupKey << vchSourceGroupKey;\n-    uint64_t hash1 = Hash(ss1.begin(), ss1.end()).Get64();\n+    uint64_t hash1 = Hash(ss1.begin(), ss1.end()).GetLow64();\n \n     CDataStream ss2(SER_GETHASH, 0);\n     ss2 << nKey << vchSourceGroupKey << (hash1 % ADDRMAN_NEW_BUCKETS_PER_SOURCE_GROUP);\n-    uint64_t hash2 = Hash(ss2.begin(), ss2.end()).Get64();\n+    uint64_t hash2 = Hash(ss2.begin(), ss2.end()).GetLow64();\n     return hash2 % ADDRMAN_NEW_BUCKET_COUNT;\n }\n "
      },
      {
        "sha": "384616e89755c59eddaebff1d82eca4bf5dea5ea",
        "filename": "src/test/Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ab086e0bd39b6d010c040c9bf4d781400fc7b9f8/src/test/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ab086e0bd39b6d010c040c9bf4d781400fc7b9f8/src/test/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/Makefile.am?ref=ab086e0bd39b6d010c040c9bf4d781400fc7b9f8",
        "patch": "@@ -34,7 +34,7 @@ test_bitcoin_SOURCES = alert_tests.cpp \\\n   key_tests.cpp miner_tests.cpp mruset_tests.cpp multisig_tests.cpp \\\n   netbase_tests.cpp pmt_tests.cpp rpc_tests.cpp script_P2SH_tests.cpp \\\n   script_tests.cpp serialize_tests.cpp sigopcount_tests.cpp test_bitcoin.cpp \\\n-  transaction_tests.cpp uint160_tests.cpp uint256_tests.cpp util_tests.cpp \\\n+  transaction_tests.cpp uint256_tests.cpp util_tests.cpp \\\n   sighash_tests.cpp $(JSON_TEST_FILES) $(RAW_TEST_FILES)\n \n if ENABLE_WALLET"
      },
      {
        "sha": "87418fabec44b41d78334e66182b4794c8b38547",
        "filename": "src/test/uint160_tests.cpp",
        "status": "removed",
        "additions": 0,
        "deletions": 20,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a867f4556b5bd2dcc211a275513d49ac12405f19/src/test/uint160_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a867f4556b5bd2dcc211a275513d49ac12405f19/src/test/uint160_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/uint160_tests.cpp?ref=a867f4556b5bd2dcc211a275513d49ac12405f19",
        "patch": "@@ -1,20 +0,0 @@\n-#include \"uint256.h\"\n-\n-#include <stdint.h>\n-\n-#include <boost/test/unit_test.hpp>\n-\n-BOOST_AUTO_TEST_SUITE(uint160_tests)\n-\n-BOOST_AUTO_TEST_CASE(uint160_equality)\n-{\n-    uint160 num1 = 10;\n-    uint160 num2 = 11;\n-    BOOST_CHECK(num1+1 == num2);\n-\n-    uint64_t num3 = 10;\n-    BOOST_CHECK(num1 == num3);\n-    BOOST_CHECK(num1+num2 == num3+num2);\n-}\n-\n-BOOST_AUTO_TEST_SUITE_END()"
      },
      {
        "sha": "368484fdff525859d14ed8441c1c13e41828ce3d",
        "filename": "src/test/uint256_tests.cpp",
        "status": "modified",
        "additions": 619,
        "deletions": 15,
        "changes": 634,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ab086e0bd39b6d010c040c9bf4d781400fc7b9f8/src/test/uint256_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ab086e0bd39b6d010c040c9bf4d781400fc7b9f8/src/test/uint256_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/uint256_tests.cpp?ref=ab086e0bd39b6d010c040c9bf4d781400fc7b9f8",
        "patch": "@@ -1,29 +1,633 @@\n+#include <boost/test/unit_test.hpp>\n+#include <stdint.h>\n+#include <sstream>\n+#include <iomanip>\n+#include <limits>\n+#include <cmath>\n #include \"uint256.h\"\n #include <string>\n+#include \"version.h\"\n \n-#include <stdint.h>\n+BOOST_AUTO_TEST_SUITE(uint256_tests)\n+ \n+const unsigned char R1Array[] = \n+    \"\\x9c\\x52\\x4a\\xdb\\xcf\\x56\\x11\\x12\\x2b\\x29\\x12\\x5e\\x5d\\x35\\xd2\\xd2\"\n+    \"\\x22\\x81\\xaa\\xb5\\x33\\xf0\\x08\\x32\\xd5\\x56\\xb1\\xf9\\xea\\xe5\\x1d\\x7d\";\n+const char R1ArrayHex[] = \"7D1DE5EAF9B156D53208F033B5AA8122D2d2355d5e12292b121156cfdb4a529c\";\n+const double R1Ldouble = 0.4887374590559308955; // R1L equals roughly R1Ldouble * 2^256\n+const double R1Sdouble = 0.7096329412477836074; \n+const uint256 R1L = uint256(std::vector<unsigned char>(R1Array,R1Array+32));\n+const uint160 R1S = uint160(std::vector<unsigned char>(R1Array,R1Array+20));\n+const uint64_t R1LLow64 = 0x121156cfdb4a529cULL;\n \n-#include <boost/test/unit_test.hpp>\n+const unsigned char R2Array[] = \n+    \"\\x70\\x32\\x1d\\x7c\\x47\\xa5\\x6b\\x40\\x26\\x7e\\x0a\\xc3\\xa6\\x9c\\xb6\\xbf\"\n+    \"\\x13\\x30\\x47\\xa3\\x19\\x2d\\xda\\x71\\x49\\x13\\x72\\xf0\\xb4\\xca\\x81\\xd7\";\n+const uint256 R2L = uint256(std::vector<unsigned char>(R2Array,R2Array+32));\n+const uint160 R2S = uint160(std::vector<unsigned char>(R2Array,R2Array+20));\n \n-BOOST_AUTO_TEST_SUITE(uint256_tests)\n+const char R1LplusR2L[] = \"549FB09FEA236A1EA3E31D4D58F1B1369288D204211CA751527CFC175767850C\";\n+\n+const unsigned char ZeroArray[] = \n+    \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n+    \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\";\n+const uint256 ZeroL = uint256(std::vector<unsigned char>(ZeroArray,ZeroArray+32));\n+const uint160 ZeroS = uint160(std::vector<unsigned char>(ZeroArray,ZeroArray+20));\n+                             \n+const unsigned char OneArray[] = \n+    \"\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n+    \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\";\n+const uint256 OneL = uint256(std::vector<unsigned char>(OneArray,OneArray+32));\n+const uint160 OneS = uint160(std::vector<unsigned char>(OneArray,OneArray+20));\n+\n+const unsigned char MaxArray[] = \n+    \"\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\"\n+    \"\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\";\n+const uint256 MaxL = uint256(std::vector<unsigned char>(MaxArray,MaxArray+32));\n+const uint160 MaxS = uint160(std::vector<unsigned char>(MaxArray,MaxArray+20));\n+\n+const uint256 HalfL = (OneL << 255);\n+const uint160 HalfS = (OneS << 159);\n+std::string ArrayToString(const unsigned char A[], unsigned int width)\n+{\n+    std::stringstream Stream;\n+    Stream << std::hex;\n+    for (unsigned int i = 0; i < width; ++i) \n+    {\n+        Stream<<std::setw(2)<<std::setfill('0')<<(unsigned int)A[width-i-1];\n+    }       \n+    return Stream.str();\n+}\n \n-BOOST_AUTO_TEST_CASE(uint256_equality)\n+BOOST_AUTO_TEST_CASE( basics ) // constructors, equality, inequality\n {\n-    uint256 num1 = 10;\n-    uint256 num2 = 11;\n-    BOOST_CHECK(num1+1 == num2);\n+    BOOST_CHECK(1 == 0+1);\n+    // constructor uint256(vector<char>):\n+    BOOST_CHECK(R1L.ToString() == ArrayToString(R1Array,32));\n+    BOOST_CHECK(R1S.ToString() == ArrayToString(R1Array,20));\n+    BOOST_CHECK(R2L.ToString() == ArrayToString(R2Array,32));\n+    BOOST_CHECK(R2S.ToString() == ArrayToString(R2Array,20));\n+    BOOST_CHECK(ZeroL.ToString() == ArrayToString(ZeroArray,32));\n+    BOOST_CHECK(ZeroS.ToString() == ArrayToString(ZeroArray,20));\n+    BOOST_CHECK(OneL.ToString() == ArrayToString(OneArray,32));\n+    BOOST_CHECK(OneS.ToString() == ArrayToString(OneArray,20));\n+    BOOST_CHECK(MaxL.ToString() == ArrayToString(MaxArray,32));\n+    BOOST_CHECK(MaxS.ToString() == ArrayToString(MaxArray,20));\n+    BOOST_CHECK(OneL.ToString() != ArrayToString(ZeroArray,32));\n+    BOOST_CHECK(OneS.ToString() != ArrayToString(ZeroArray,20));\n+\n+    // == and !=\n+    BOOST_CHECK(R1L != R2L && R1S != R2S);\n+    BOOST_CHECK(ZeroL != OneL && ZeroS != OneS);\n+    BOOST_CHECK(OneL != ZeroL && OneS != ZeroS);\n+    BOOST_CHECK(MaxL != ZeroL && MaxS != ZeroS);\n+    BOOST_CHECK(~MaxL == ZeroL && ~MaxS == ZeroS);\n+    BOOST_CHECK( ((R1L ^ R2L) ^ R1L) == R2L);\n+    BOOST_CHECK( ((R1S ^ R2S) ^ R1S) == R2S);\n+    \n+    uint64_t Tmp64 = 0xc4dab720d9c7acaaULL;\n+    for (unsigned int i = 0; i < 256; ++i) \n+    {\n+        BOOST_CHECK(ZeroL != (OneL << i)); \n+        BOOST_CHECK((OneL << i) != ZeroL); \n+        BOOST_CHECK(R1L != (R1L ^ (OneL << i)));\n+        BOOST_CHECK(((uint256(Tmp64) ^ (OneL << i) ) != Tmp64 ));\n+    }\n+    BOOST_CHECK(ZeroL == (OneL << 256)); \n+\n+    for (unsigned int i = 0; i < 160; ++i) \n+    {\n+        BOOST_CHECK(ZeroS != (OneS << i)); \n+        BOOST_CHECK((OneS << i) != ZeroS); \n+        BOOST_CHECK(R1S != (R1S ^ (OneS << i)));\n+        BOOST_CHECK(((uint160(Tmp64) ^ (OneS << i) ) != Tmp64 ));\n+    }\n+    BOOST_CHECK(ZeroS == (OneS << 256)); \n+\n+    // String Constructor and Copy Constructor\n+    BOOST_CHECK(uint256(\"0x\"+R1L.ToString()) == R1L);\n+    BOOST_CHECK(uint256(\"0x\"+R2L.ToString()) == R2L);\n+    BOOST_CHECK(uint256(\"0x\"+ZeroL.ToString()) == ZeroL);\n+    BOOST_CHECK(uint256(\"0x\"+OneL.ToString()) == OneL);\n+    BOOST_CHECK(uint256(\"0x\"+MaxL.ToString()) == MaxL);\n+    BOOST_CHECK(uint256(R1L.ToString()) == R1L);\n+    BOOST_CHECK(uint256(\"   0x\"+R1L.ToString()+\"   \") == R1L);\n+    BOOST_CHECK(uint256(\"\") == ZeroL);\n+    BOOST_CHECK(R1L == uint256(R1ArrayHex));\n+    BOOST_CHECK(uint256(R1L) == R1L);\n+    BOOST_CHECK((uint256(R1L^R2L)^R2L) == R1L);\n+    BOOST_CHECK(uint256(ZeroL) == ZeroL);\n+    BOOST_CHECK(uint256(OneL) == OneL);\n+\n+    BOOST_CHECK(uint160(\"0x\"+R1S.ToString()) == R1S);\n+    BOOST_CHECK(uint160(\"0x\"+R2S.ToString()) == R2S);\n+    BOOST_CHECK(uint160(\"0x\"+ZeroS.ToString()) == ZeroS);\n+    BOOST_CHECK(uint160(\"0x\"+OneS.ToString()) == OneS);\n+    BOOST_CHECK(uint160(\"0x\"+MaxS.ToString()) == MaxS);\n+    BOOST_CHECK(uint160(R1S.ToString()) == R1S);\n+    BOOST_CHECK(uint160(\"   0x\"+R1S.ToString()+\"   \") == R1S); \n+    BOOST_CHECK(uint160(\"\") == ZeroS);\n+    BOOST_CHECK(R1S == uint160(R1ArrayHex));\n+\n+    BOOST_CHECK(uint160(R1S) == R1S);\n+    BOOST_CHECK((uint160(R1S^R2S)^R2S) == R1S);\n+    BOOST_CHECK(uint160(ZeroS) == ZeroS);\n+    BOOST_CHECK(uint160(OneS) == OneS);\n+\n+    // uint64_t constructor\n+    BOOST_CHECK( (R1L & uint256(\"0xffffffffffffffff\")) == uint256(R1LLow64));\n+    BOOST_CHECK(ZeroL == uint256(0));\n+    BOOST_CHECK(OneL == uint256(1));\n+    BOOST_CHECK(uint256(\"0xffffffffffffffff\") = uint256(0xffffffffffffffffULL));\n+    BOOST_CHECK( (R1S & uint160(\"0xffffffffffffffff\")) == uint160(R1LLow64));\n+    BOOST_CHECK(ZeroS == uint160(0));\n+    BOOST_CHECK(OneS == uint160(1));\n+    BOOST_CHECK(uint160(\"0xffffffffffffffff\") = uint160(0xffffffffffffffffULL));\n+\n+    // Assignment (from base_uint)\n+    uint256 tmpL = ~ZeroL; BOOST_CHECK(tmpL == ~ZeroL);\n+    tmpL = ~OneL; BOOST_CHECK(tmpL == ~OneL);\n+    tmpL = ~R1L; BOOST_CHECK(tmpL == ~R1L);\n+    tmpL = ~R2L; BOOST_CHECK(tmpL == ~R2L);\n+    tmpL = ~MaxL; BOOST_CHECK(tmpL == ~MaxL);\n+    uint160 tmpS = ~ZeroS; BOOST_CHECK(tmpS == ~ZeroS);\n+    tmpS = ~OneS; BOOST_CHECK(tmpS == ~OneS);\n+    tmpS = ~R1S; BOOST_CHECK(tmpS == ~R1S);\n+    tmpS = ~R2S; BOOST_CHECK(tmpS == ~R2S);\n+    tmpS = ~MaxS; BOOST_CHECK(tmpS == ~MaxS);\n \n-    uint64_t num3 = 10;\n-    BOOST_CHECK(num1 == num3);\n-    BOOST_CHECK(num1+num2 == num3+num2);\n+    // Wrong length must give 0\n+    BOOST_CHECK(uint256(std::vector<unsigned char>(OneArray,OneArray+31)) == 0);\n+    BOOST_CHECK(uint256(std::vector<unsigned char>(OneArray,OneArray+20)) == 0);\n+    BOOST_CHECK(uint160(std::vector<unsigned char>(OneArray,OneArray+32)) == 0);\n+    BOOST_CHECK(uint160(std::vector<unsigned char>(OneArray,OneArray+19)) == 0);\n }\n \n-BOOST_AUTO_TEST_CASE(uint256_hex)\n+void shiftArrayRight(unsigned char* to, const unsigned char* from, unsigned int arrayLength, unsigned int bitsToShift) \n {\n-    std::string hexStr = \"d35583ed493a5eee756931353144f558e6a9ab3ad6024a63ced7f10daf7faad9\";\n-    uint256 num1;\n-    num1.SetHex(hexStr);\n-    BOOST_CHECK(num1.GetHex() == hexStr);\n+    for (unsigned int T=0; T < arrayLength; ++T) \n+    {\n+        unsigned int F = (T+bitsToShift/8);\n+        if (F < arrayLength) \n+            to[T]  = from[F] >> (bitsToShift%8);\n+        else\n+            to[T] = 0;\n+        if (F + 1 < arrayLength) \n+            to[T] |= from[(F+1)] << (8-bitsToShift%8);\n+    }\n+}\n+\n+void shiftArrayLeft(unsigned char* to, const unsigned char* from, unsigned int arrayLength, unsigned int bitsToShift) \n+{\n+    for (unsigned int T=0; T < arrayLength; ++T) \n+    {\n+        if (T >= bitsToShift/8) \n+        {\n+            unsigned int F = T-bitsToShift/8;\n+            to[T]  = from[F] << (bitsToShift%8);\n+            if (T >= bitsToShift/8+1)\n+                to[T] |= from[F-1] >> (8-bitsToShift%8);\n+        }\n+        else {\n+            to[T] = 0;\n+        }\n+    }\n+}\n+\n+BOOST_AUTO_TEST_CASE( shifts ) { // \"<<\"  \">>\"  \"<<=\"  \">>=\"\n+    unsigned char TmpArray[32];\n+    uint256 TmpL;\n+    for (unsigned int i = 0; i < 256; ++i)\n+    {\n+        shiftArrayLeft(TmpArray, OneArray, 32, i);\n+        BOOST_CHECK(uint256(std::vector<unsigned char>(TmpArray,TmpArray+32)) == (OneL << i));\n+        TmpL = OneL; TmpL <<= i;\n+        BOOST_CHECK(TmpL == (OneL << i));\n+        BOOST_CHECK((HalfL >> (255-i)) == (OneL << i));\n+        TmpL = HalfL; TmpL >>= (255-i);\n+        BOOST_CHECK(TmpL == (OneL << i));\n+                    \n+        shiftArrayLeft(TmpArray, R1Array, 32, i);\n+        BOOST_CHECK(uint256(std::vector<unsigned char>(TmpArray,TmpArray+32)) == (R1L << i));\n+        TmpL = R1L; TmpL <<= i;\n+        BOOST_CHECK(TmpL == (R1L << i));\n+\n+        shiftArrayRight(TmpArray, R1Array, 32, i);\n+        BOOST_CHECK(uint256(std::vector<unsigned char>(TmpArray,TmpArray+32)) == (R1L >> i)); \n+        TmpL = R1L; TmpL >>= i;\n+        BOOST_CHECK(TmpL == (R1L >> i));\n+\n+        shiftArrayLeft(TmpArray, MaxArray, 32, i);\n+        BOOST_CHECK(uint256(std::vector<unsigned char>(TmpArray,TmpArray+32)) == (MaxL << i));\n+        TmpL = MaxL; TmpL <<= i;\n+        BOOST_CHECK(TmpL == (MaxL << i));\n+\n+        shiftArrayRight(TmpArray, MaxArray, 32, i);\n+        BOOST_CHECK(uint256(std::vector<unsigned char>(TmpArray,TmpArray+32)) == (MaxL >> i));\n+        TmpL = MaxL; TmpL >>= i;\n+        BOOST_CHECK(TmpL == (MaxL >> i));\n+    }\n+    uint256 c1L = uint256(0x0123456789abcdefULL);\n+    uint256 c2L = c1L << 128;\n+    for (unsigned int i = 0; i < 128; ++i) {\n+        BOOST_CHECK((c1L << i) == (c2L >> (128-i)));\n+    }\n+    for (unsigned int i = 128; i < 256; ++i) {\n+        BOOST_CHECK((c1L << i) == (c2L << (i-128)));\n+    }\n+\n+    uint160 TmpS;\n+    for (unsigned int i = 0; i < 160; ++i)\n+    {\n+        shiftArrayLeft(TmpArray, OneArray, 20, i);\n+        BOOST_CHECK(uint160(std::vector<unsigned char>(TmpArray,TmpArray+20)) == (OneS << i));\n+        TmpS = OneS; TmpS <<= i;\n+        BOOST_CHECK(TmpS == (OneS << i));\n+        BOOST_CHECK((HalfS >> (159-i)) == (OneS << i));\n+        TmpS = HalfS; TmpS >>= (159-i);\n+        BOOST_CHECK(TmpS == (OneS << i));\n+                    \n+        shiftArrayLeft(TmpArray, R1Array, 20, i);\n+        BOOST_CHECK(uint160(std::vector<unsigned char>(TmpArray,TmpArray+20)) == (R1S << i));\n+        TmpS = R1S; TmpS <<= i;\n+        BOOST_CHECK(TmpS == (R1S << i));\n+\n+        shiftArrayRight(TmpArray, R1Array, 20, i);\n+        BOOST_CHECK(uint160(std::vector<unsigned char>(TmpArray,TmpArray+20)) == (R1S >> i)); \n+        TmpS = R1S; TmpS >>= i;\n+        BOOST_CHECK(TmpS == (R1S >> i));\n+\n+        shiftArrayLeft(TmpArray, MaxArray, 20, i);\n+        BOOST_CHECK(uint160(std::vector<unsigned char>(TmpArray,TmpArray+20)) == (MaxS << i));\n+        TmpS = MaxS; TmpS <<= i;\n+        BOOST_CHECK(TmpS == (MaxS << i));\n+\n+        shiftArrayRight(TmpArray, MaxArray, 20, i);\n+        BOOST_CHECK(uint160(std::vector<unsigned char>(TmpArray,TmpArray+20)) == (MaxS >> i));\n+        TmpS = MaxS; TmpS >>= i;\n+        BOOST_CHECK(TmpS == (MaxS >> i));\n+    }\n+    uint160 c1S = uint160(0x0123456789abcdefULL);\n+    uint160 c2S = c1S << 80;\n+    for (unsigned int i = 0; i < 80; ++i) {\n+        BOOST_CHECK((c1S << i) == (c2S >> (80-i)));\n+    }\n+    for (unsigned int i = 80; i < 160; ++i) {\n+        BOOST_CHECK((c1S << i) == (c2S << (i-80)));\n+    }\n+}\n+\n+BOOST_AUTO_TEST_CASE( unaryOperators ) // !    ~    -\n+{\n+    BOOST_CHECK(!ZeroL);  BOOST_CHECK(!ZeroS);\n+    BOOST_CHECK(!(!OneL));BOOST_CHECK(!(!OneS));\n+    for (unsigned int i = 0; i < 256; ++i) \n+        BOOST_CHECK(!(!(OneL<<i)));\n+    for (unsigned int i = 0; i < 160; ++i) \n+        BOOST_CHECK(!(!(OneS<<i)));\n+    BOOST_CHECK(!(!R1L));BOOST_CHECK(!(!R1S));\n+    BOOST_CHECK(!(!R2S));BOOST_CHECK(!(!R2S)); \n+    BOOST_CHECK(!(!MaxL));BOOST_CHECK(!(!MaxS));\n+\n+    BOOST_CHECK(~ZeroL == MaxL); BOOST_CHECK(~ZeroS == MaxS);\n+\n+    unsigned char TmpArray[32];\n+    for (unsigned int i = 0; i < 32; ++i) { TmpArray[i] = ~R1Array[i]; } \n+    BOOST_CHECK(uint256(std::vector<unsigned char>(TmpArray,TmpArray+32)) == (~R1L));\n+    BOOST_CHECK(uint160(std::vector<unsigned char>(TmpArray,TmpArray+20)) == (~R1S));\n+\n+    BOOST_CHECK(-ZeroL == ZeroL); BOOST_CHECK(-ZeroS == ZeroS);\n+    BOOST_CHECK(-R1L == (~R1L)+1);\n+    BOOST_CHECK(-R1S == (~R1S)+1);\n+    for (unsigned int i = 0; i < 256; ++i) \n+        BOOST_CHECK(-(OneL<<i) == (MaxL << i));\n+    for (unsigned int i = 0; i < 160; ++i) \n+        BOOST_CHECK(-(OneS<<i) == (MaxS << i));\n+}\n+\n+\n+// Check if doing _A_ _OP_ _B_ results in the same as applying _OP_ onto each\n+// element of Aarray and Barray, and then converting the result into a uint256.\n+#define CHECKBITWISEOPERATOR(_A_,_B_,_OP_)                              \\\n+    for (unsigned int i = 0; i < 32; ++i) { TmpArray[i] = _A_##Array[i] _OP_ _B_##Array[i]; } \\\n+    BOOST_CHECK(uint256(std::vector<unsigned char>(TmpArray,TmpArray+32)) == (_A_##L _OP_ _B_##L)); \\\n+    for (unsigned int i = 0; i < 20; ++i) { TmpArray[i] = _A_##Array[i] _OP_ _B_##Array[i]; } \\\n+    BOOST_CHECK(uint160(std::vector<unsigned char>(TmpArray,TmpArray+20)) == (_A_##S _OP_ _B_##S));\n+\n+#define CHECKASSIGNMENTOPERATOR(_A_,_B_,_OP_)                           \\\n+    TmpL = _A_##L; TmpL _OP_##= _B_##L; BOOST_CHECK(TmpL == (_A_##L _OP_ _B_##L)); \\\n+    TmpS = _A_##S; TmpS _OP_##= _B_##S; BOOST_CHECK(TmpS == (_A_##S _OP_ _B_##S));\n+\n+BOOST_AUTO_TEST_CASE( bitwiseOperators ) \n+{\n+    unsigned char TmpArray[32];\n+    \n+    CHECKBITWISEOPERATOR(R1,R2,|)\n+    CHECKBITWISEOPERATOR(R1,R2,^)\n+    CHECKBITWISEOPERATOR(R1,R2,&)\n+    CHECKBITWISEOPERATOR(R1,Zero,|)\n+    CHECKBITWISEOPERATOR(R1,Zero,^)\n+    CHECKBITWISEOPERATOR(R1,Zero,&)\n+    CHECKBITWISEOPERATOR(R1,Max,|)\n+    CHECKBITWISEOPERATOR(R1,Max,^)\n+    CHECKBITWISEOPERATOR(R1,Max,&)\n+    CHECKBITWISEOPERATOR(Zero,R1,|)\n+    CHECKBITWISEOPERATOR(Zero,R1,^)\n+    CHECKBITWISEOPERATOR(Zero,R1,&)\n+    CHECKBITWISEOPERATOR(Max,R1,|)\n+    CHECKBITWISEOPERATOR(Max,R1,^)\n+    CHECKBITWISEOPERATOR(Max,R1,&)\n+\n+    uint256 TmpL;\n+    uint160 TmpS;\n+    CHECKASSIGNMENTOPERATOR(R1,R2,|)\n+    CHECKASSIGNMENTOPERATOR(R1,R2,^)\n+    CHECKASSIGNMENTOPERATOR(R1,R2,&)\n+    CHECKASSIGNMENTOPERATOR(R1,Zero,|)\n+    CHECKASSIGNMENTOPERATOR(R1,Zero,^)\n+    CHECKASSIGNMENTOPERATOR(R1,Zero,&)\n+    CHECKASSIGNMENTOPERATOR(R1,Max,|)\n+    CHECKASSIGNMENTOPERATOR(R1,Max,^)\n+    CHECKASSIGNMENTOPERATOR(R1,Max,&)\n+    CHECKASSIGNMENTOPERATOR(Zero,R1,|)\n+    CHECKASSIGNMENTOPERATOR(Zero,R1,^)\n+    CHECKASSIGNMENTOPERATOR(Zero,R1,&)\n+    CHECKASSIGNMENTOPERATOR(Max,R1,|)\n+    CHECKASSIGNMENTOPERATOR(Max,R1,^)\n+    CHECKASSIGNMENTOPERATOR(Max,R1,&)\n+\n+    uint64_t Tmp64 = 0xe1db685c9a0b47a2ULL; \n+    TmpL = R1L; TmpL |= Tmp64;  BOOST_CHECK(TmpL == (R1L | uint256(Tmp64)));\n+    TmpS = R1S; TmpS |= Tmp64;  BOOST_CHECK(TmpS == (R1S | uint160(Tmp64)));\n+    TmpL = R1L; TmpL |= 0; BOOST_CHECK(TmpL == R1L);\n+    TmpS = R1S; TmpS |= 0; BOOST_CHECK(TmpS == R1S);\n+    TmpL ^= 0; BOOST_CHECK(TmpL == R1L);\n+    TmpS ^= 0; BOOST_CHECK(TmpS == R1S);\n+    TmpL ^= Tmp64;  BOOST_CHECK(TmpL == (R1L ^ uint256(Tmp64)));\n+    TmpS ^= Tmp64;  BOOST_CHECK(TmpS == (R1S ^ uint160(Tmp64)));\n+}\n+\n+BOOST_AUTO_TEST_CASE( comparison ) // <= >= < >\n+{\n+    uint256 TmpL;\n+    for (unsigned int i = 0; i < 256; ++i) {\n+        TmpL= OneL<< i;\n+        BOOST_CHECK( TmpL >= ZeroL && TmpL > ZeroL && ZeroL < TmpL && ZeroL <= TmpL);\n+        BOOST_CHECK( TmpL >= 0 && TmpL > 0 && 0 < TmpL && 0 <= TmpL);\n+        TmpL |= R1L;\n+        BOOST_CHECK( TmpL >= R1L ); BOOST_CHECK( (TmpL == R1L) != (TmpL > R1L)); BOOST_CHECK( (TmpL == R1L) || !( TmpL <= R1L));\n+        BOOST_CHECK( R1L <= TmpL ); BOOST_CHECK( (R1L == TmpL) != (R1L < TmpL)); BOOST_CHECK( (TmpL == R1L) || !( R1L >= TmpL));\n+        BOOST_CHECK(! (TmpL < R1L)); BOOST_CHECK(! (R1L > TmpL));\n+    }\n+    uint160 TmpS;\n+    for (unsigned int i = 0; i < 160; ++i) {\n+        TmpS= OneS<< i;\n+        BOOST_CHECK( TmpS >= ZeroS && TmpS > ZeroS && ZeroS < TmpS && ZeroS <= TmpS);\n+        BOOST_CHECK( TmpS >= 0 && TmpS > 0 && 0 < TmpS && 0 <= TmpS);\n+        TmpS |= R1S;\n+        BOOST_CHECK( TmpS >= R1S ); BOOST_CHECK( (TmpS == R1S) != (TmpS > R1S)); BOOST_CHECK( (TmpS == R1S) || !( TmpS <= R1S));\n+        BOOST_CHECK( R1S <= TmpS ); BOOST_CHECK( (R1S == TmpS) != (R1S < TmpS)); BOOST_CHECK( (TmpS == R1S) || !( R1S >= TmpS));\n+        BOOST_CHECK(! (TmpS < R1S)); BOOST_CHECK(! (R1S > TmpS));\n+    }\n+}\n+\n+BOOST_AUTO_TEST_CASE( plusMinus ) \n+{\n+    uint256 TmpL = 0;\n+    BOOST_CHECK(R1L+R2L == uint256(R1LplusR2L));\n+    TmpL += R1L;\n+    BOOST_CHECK(TmpL == R1L);\n+    TmpL += R2L;\n+    BOOST_CHECK(TmpL == R1L + R2L);\n+    BOOST_CHECK(OneL+MaxL == ZeroL);\n+    BOOST_CHECK(MaxL+OneL == ZeroL);\n+    for (unsigned int i = 1; i < 256; ++i) {\n+        BOOST_CHECK( (MaxL >> i) + OneL == (HalfL >> (i-1)) );\n+        BOOST_CHECK( OneL + (MaxL >> i) == (HalfL >> (i-1)) );\n+        TmpL = (MaxL>>i); TmpL += OneL;\n+        BOOST_CHECK( TmpL == (HalfL >> (i-1)) );\n+        TmpL = (MaxL>>i); TmpL += 1;\n+        BOOST_CHECK( TmpL == (HalfL >> (i-1)) );\n+        TmpL = (MaxL>>i); \n+        BOOST_CHECK( TmpL++ == (MaxL>>i) );\n+        BOOST_CHECK( TmpL == (HalfL >> (i-1)));\n+    }\n+    BOOST_CHECK(uint256(0xbedc77e27940a7ULL) + 0xee8d836fce66fbULL == uint256(0xbedc77e27940a7ULL + 0xee8d836fce66fbULL));\n+    TmpL = uint256(0xbedc77e27940a7ULL); TmpL += 0xee8d836fce66fbULL;\n+    BOOST_CHECK(TmpL == uint256(0xbedc77e27940a7ULL+0xee8d836fce66fbULL));\n+    TmpL -= 0xee8d836fce66fbULL;  BOOST_CHECK(TmpL == 0xbedc77e27940a7ULL);\n+    TmpL = R1L;\n+    BOOST_CHECK(++TmpL == R1L+1);\n+\n+    BOOST_CHECK(R1L -(-R2L) == R1L+R2L);\n+    BOOST_CHECK(R1L -(-OneL) == R1L+OneL);\n+    BOOST_CHECK(R1L - OneL == R1L+(-OneL));\n+    for (unsigned int i = 1; i < 256; ++i) {\n+        BOOST_CHECK((MaxL>>i) - (-OneL)  == (HalfL >> (i-1)));\n+        BOOST_CHECK((HalfL >> (i-1)) - OneL == (MaxL>>i));\n+        TmpL = (HalfL >> (i-1));\n+        BOOST_CHECK(TmpL-- == (HalfL >> (i-1)));\n+        BOOST_CHECK(TmpL == (MaxL >> i));\n+        TmpL = (HalfL >> (i-1));\n+        BOOST_CHECK(--TmpL == (MaxL >> i));\n+    }\n+    TmpL = R1L;\n+    BOOST_CHECK(--TmpL == R1L-1);\n+\n+    // 160-bit; copy-pasted\n+    uint160 TmpS = 0;\n+    BOOST_CHECK(R1S+R2S == uint160(R1LplusR2L));\n+    TmpS += R1S;\n+    BOOST_CHECK(TmpS == R1S);\n+    TmpS += R2S;\n+    BOOST_CHECK(TmpS == R1S + R2S);\n+    BOOST_CHECK(OneS+MaxS == ZeroS);\n+    BOOST_CHECK(MaxS+OneS == ZeroS);\n+    for (unsigned int i = 1; i < 160; ++i) {\n+        BOOST_CHECK( (MaxS >> i) + OneS == (HalfS >> (i-1)) );\n+        BOOST_CHECK( OneS + (MaxS >> i) == (HalfS >> (i-1)) );\n+        TmpS = (MaxS>>i); TmpS += OneS;\n+        BOOST_CHECK( TmpS == (HalfS >> (i-1)) );\n+        TmpS = (MaxS>>i); TmpS += 1;\n+        BOOST_CHECK( TmpS == (HalfS >> (i-1)) );\n+        TmpS = (MaxS>>i); \n+        BOOST_CHECK( TmpS++ == (MaxS>>i) );\n+        BOOST_CHECK( TmpS == (HalfS >> (i-1)));\n+    }\n+    BOOST_CHECK(uint160(0xbedc77e27940a7ULL) + 0xee8d836fce66fbULL == uint160(0xbedc77e27940a7ULL + 0xee8d836fce66fbULL));\n+    TmpS = uint160(0xbedc77e27940a7ULL); TmpS += 0xee8d836fce66fbULL;\n+    BOOST_CHECK(TmpS == uint160(0xbedc77e27940a7ULL+0xee8d836fce66fbULL));\n+    TmpS -= 0xee8d836fce66fbULL;  BOOST_CHECK(TmpS == 0xbedc77e27940a7ULL);\n+    TmpS = R1S;\n+    BOOST_CHECK(++TmpS == R1S+1);\n+\n+    BOOST_CHECK(R1S -(-R2S) == R1S+R2S);\n+    BOOST_CHECK(R1S -(-OneS) == R1S+OneS);\n+    BOOST_CHECK(R1S - OneS == R1S+(-OneS));\n+    for (unsigned int i = 1; i < 160; ++i) {\n+        BOOST_CHECK((MaxS>>i) - (-OneS)  == (HalfS >> (i-1)));\n+        BOOST_CHECK((HalfS >> (i-1)) - OneS == (MaxS>>i));\n+        TmpS = (HalfS >> (i-1));\n+        BOOST_CHECK(TmpS-- == (HalfS >> (i-1)));\n+        BOOST_CHECK(TmpS == (MaxS >> i));\n+        TmpS = (HalfS >> (i-1));\n+        BOOST_CHECK(--TmpS == (MaxS >> i));\n+    }\n+    TmpS = R1S;\n+    BOOST_CHECK(--TmpS == R1S-1);\n+\n+}\n+\n+bool almostEqual(double d1, double d2) \n+{\n+    return fabs(d1-d2) <= 4*fabs(d1)*std::numeric_limits<double>::epsilon();\n+}\n+\n+BOOST_AUTO_TEST_CASE( methods ) // GetHex SetHex begin() end() size() GetLow64 GetSerializeSize, Serialize, Unserialize\n+{\n+    BOOST_CHECK(R1L.GetHex() == R1L.ToString());\n+    BOOST_CHECK(R2L.GetHex() == R2L.ToString());\n+    BOOST_CHECK(OneL.GetHex() == OneL.ToString());\n+    BOOST_CHECK(MaxL.GetHex() == MaxL.ToString());\n+    uint256 TmpL(R1L);\n+    BOOST_CHECK(TmpL == R1L);\n+    TmpL.SetHex(R2L.ToString());   BOOST_CHECK(TmpL == R2L);\n+    TmpL.SetHex(ZeroL.ToString()); BOOST_CHECK(TmpL == 0);\n+    TmpL.SetHex(HalfL.ToString()); BOOST_CHECK(TmpL == HalfL);\n+\n+    TmpL.SetHex(R1L.ToString());\n+    BOOST_CHECK(memcmp(R1L.begin(), R1Array, 32)==0);\n+    BOOST_CHECK(memcmp(TmpL.begin(), R1Array, 32)==0);\n+    BOOST_CHECK(memcmp(R2L.begin(), R2Array, 32)==0);\n+    BOOST_CHECK(memcmp(ZeroL.begin(), ZeroArray, 32)==0);\n+    BOOST_CHECK(memcmp(OneL.begin(), OneArray, 32)==0);\n+    BOOST_CHECK(R1L.size() == 32);\n+    BOOST_CHECK(R2L.size() == 32);\n+    BOOST_CHECK(ZeroL.size() == 32);\n+    BOOST_CHECK(MaxL.size() == 32);\n+    BOOST_CHECK(R1L.begin() + 32 == R1L.end());\n+    BOOST_CHECK(R2L.begin() + 32 == R2L.end());\n+    BOOST_CHECK(OneL.begin() + 32 == OneL.end());\n+    BOOST_CHECK(MaxL.begin() + 32 == MaxL.end());\n+    BOOST_CHECK(TmpL.begin() + 32 == TmpL.end());\n+    BOOST_CHECK(R1L.GetLow64()  == R1LLow64);\n+    BOOST_CHECK(HalfL.GetLow64() ==0x0000000000000000ULL);\n+    BOOST_CHECK(OneL.GetLow64() ==0x0000000000000001ULL);\n+    BOOST_CHECK(R1L.GetSerializeSize(0,PROTOCOL_VERSION) == 32);\n+    BOOST_CHECK(ZeroL.GetSerializeSize(0,PROTOCOL_VERSION) == 32);\n+\n+    std::stringstream ss;\n+    R1L.Serialize(ss,0,PROTOCOL_VERSION);\n+    BOOST_CHECK(ss.str() == std::string(R1Array,R1Array+32));\n+    TmpL.Unserialize(ss,0,PROTOCOL_VERSION);\n+    BOOST_CHECK(R1L == TmpL);\n+    ss.str(\"\");\n+    ZeroL.Serialize(ss,0,PROTOCOL_VERSION);\n+    BOOST_CHECK(ss.str() == std::string(ZeroArray,ZeroArray+32));\n+    TmpL.Unserialize(ss,0,PROTOCOL_VERSION);\n+    BOOST_CHECK(ZeroL == TmpL);\n+    ss.str(\"\");\n+    MaxL.Serialize(ss,0,PROTOCOL_VERSION);\n+    BOOST_CHECK(ss.str() == std::string(MaxArray,MaxArray+32));\n+    TmpL.Unserialize(ss,0,PROTOCOL_VERSION);\n+    BOOST_CHECK(MaxL == TmpL);\n+    ss.str(\"\");\n+\n+    BOOST_CHECK(R1S.GetHex() == R1S.ToString());\n+    BOOST_CHECK(R2S.GetHex() == R2S.ToString());\n+    BOOST_CHECK(OneS.GetHex() == OneS.ToString());\n+    BOOST_CHECK(MaxS.GetHex() == MaxS.ToString());\n+    uint160 TmpS(R1S);\n+    BOOST_CHECK(TmpS == R1S);\n+    TmpS.SetHex(R2S.ToString());   BOOST_CHECK(TmpS == R2S);\n+    TmpS.SetHex(ZeroS.ToString()); BOOST_CHECK(TmpS == 0);\n+    TmpS.SetHex(HalfS.ToString()); BOOST_CHECK(TmpS == HalfS);\n+\n+    TmpS.SetHex(R1S.ToString());\n+    BOOST_CHECK(memcmp(R1S.begin(), R1Array, 20)==0);\n+    BOOST_CHECK(memcmp(TmpS.begin(), R1Array, 20)==0);\n+    BOOST_CHECK(memcmp(R2S.begin(), R2Array, 20)==0);\n+    BOOST_CHECK(memcmp(ZeroS.begin(), ZeroArray, 20)==0);\n+    BOOST_CHECK(memcmp(OneS.begin(), OneArray, 20)==0);\n+    BOOST_CHECK(R1S.size() == 20);\n+    BOOST_CHECK(R2S.size() == 20);\n+    BOOST_CHECK(ZeroS.size() == 20);\n+    BOOST_CHECK(MaxS.size() == 20);\n+    BOOST_CHECK(R1S.begin() + 20 == R1S.end());\n+    BOOST_CHECK(R2S.begin() + 20 == R2S.end());\n+    BOOST_CHECK(OneS.begin() + 20 == OneS.end());\n+    BOOST_CHECK(MaxS.begin() + 20 == MaxS.end());\n+    BOOST_CHECK(TmpS.begin() + 20 == TmpS.end());\n+    BOOST_CHECK(R1S.GetLow64()  == R1LLow64);\n+    BOOST_CHECK(HalfS.GetLow64() ==0x0000000000000000ULL); \n+    BOOST_CHECK(OneS.GetLow64() ==0x0000000000000001ULL);\n+    BOOST_CHECK(R1S.GetSerializeSize(0,PROTOCOL_VERSION) == 20);\n+    BOOST_CHECK(ZeroS.GetSerializeSize(0,PROTOCOL_VERSION) == 20);\n+\n+    R1S.Serialize(ss,0,PROTOCOL_VERSION);\n+    BOOST_CHECK(ss.str() == std::string(R1Array,R1Array+20));\n+    TmpS.Unserialize(ss,0,PROTOCOL_VERSION);\n+    BOOST_CHECK(R1S == TmpS);\n+    ss.str(\"\");\n+    ZeroS.Serialize(ss,0,PROTOCOL_VERSION);\n+    BOOST_CHECK(ss.str() == std::string(ZeroArray,ZeroArray+20));\n+    TmpS.Unserialize(ss,0,PROTOCOL_VERSION);\n+    BOOST_CHECK(ZeroS == TmpS);\n+    ss.str(\"\");\n+    MaxS.Serialize(ss,0,PROTOCOL_VERSION);\n+    BOOST_CHECK(ss.str() == std::string(MaxArray,MaxArray+20));\n+    TmpS.Unserialize(ss,0,PROTOCOL_VERSION);\n+    BOOST_CHECK(MaxS == TmpS);\n+    ss.str(\"\");\n+    \n+    for (unsigned int i = 0; i < 255; ++i) \n+    {\n+        BOOST_CHECK((OneL << i).getdouble() == ldexp(1.0,i));\n+        if (i < 160) BOOST_CHECK((OneS << i).getdouble() == ldexp(1.0,i));\n+    }\n+    BOOST_CHECK(ZeroL.getdouble() == 0.0);\n+    BOOST_CHECK(ZeroS.getdouble() == 0.0);\n+    for (int i = 256; i > 53; --i) \n+        BOOST_CHECK(almostEqual((R1L>>(256-i)).getdouble(), ldexp(R1Ldouble,i)));\n+    for (int i = 160; i > 53; --i) \n+        BOOST_CHECK(almostEqual((R1S>>(160-i)).getdouble(), ldexp(R1Sdouble,i)));\n+    uint64_t R1L64part = (R1L>>192).GetLow64();\n+    uint64_t R1S64part = (R1S>>96).GetLow64();\n+    for (int i = 53; i > 0; --i) // doubles can store all integers in {0,...,2^54-1} exactly\n+    {\n+        BOOST_CHECK((R1L>>(256-i)).getdouble() == (double)(R1L64part >> (64-i)));\n+        BOOST_CHECK((R1S>>(160-i)).getdouble() == (double)(R1S64part >> (64-i)));\n+    }\n+}\n+\n+BOOST_AUTO_TEST_CASE( getmaxcoverage ) // some more tests just to get 100% coverage\n+{\n+    // ~R1L give a base_uint<256>\n+    BOOST_CHECK((~~R1L >> 10) == (R1L >> 10)); BOOST_CHECK((~~R1S >> 10) == (R1S >> 10));\n+    BOOST_CHECK((~~R1L << 10) == (R1L << 10)); BOOST_CHECK((~~R1S << 10) == (R1S << 10));\n+    BOOST_CHECK(!(~~R1L < R1L)); BOOST_CHECK(!(~~R1S < R1S)); \n+    BOOST_CHECK(~~R1L <= R1L); BOOST_CHECK(~~R1S <= R1S); \n+    BOOST_CHECK(!(~~R1L > R1L)); BOOST_CHECK(!(~~R1S > R1S)); \n+    BOOST_CHECK(~~R1L >= R1L); BOOST_CHECK(~~R1S >= R1S); \n+    BOOST_CHECK(!(R1L < ~~R1L)); BOOST_CHECK(!(R1S < ~~R1S)); \n+    BOOST_CHECK(R1L <= ~~R1L); BOOST_CHECK(R1S <= ~~R1S); \n+    BOOST_CHECK(!(R1L > ~~R1L)); BOOST_CHECK(!(R1S > ~~R1S)); \n+    BOOST_CHECK(R1L >= ~~R1L); BOOST_CHECK(R1S >= ~~R1S); \n+    \n+    BOOST_CHECK(~~R1L + R2L == R1L + ~~R2L);\n+    BOOST_CHECK(~~R1S + R2S == R1S + ~~R2S);\n+    BOOST_CHECK(~~R1L - R2L == R1L - ~~R2L);\n+    BOOST_CHECK(~~R1S - R2S == R1S - ~~R2S);\n+    BOOST_CHECK(~R1L != R1L); BOOST_CHECK(R1L != ~R1L); \n+    BOOST_CHECK(~R1S != R1S); BOOST_CHECK(R1S != ~R1S); \n+    unsigned char TmpArray[32];\n+    CHECKBITWISEOPERATOR(~R1,R2,|)\n+    CHECKBITWISEOPERATOR(~R1,R2,^)\n+    CHECKBITWISEOPERATOR(~R1,R2,&)\n+    CHECKBITWISEOPERATOR(R1,~R2,|)\n+    CHECKBITWISEOPERATOR(R1,~R2,^)\n+    CHECKBITWISEOPERATOR(R1,~R2,&)\n }\n \n BOOST_AUTO_TEST_SUITE_END()\n+"
      },
      {
        "sha": "ba903bc8fc61d8e68a765050f4a0c79b1f714185",
        "filename": "src/uint256.h",
        "status": "modified",
        "additions": 4,
        "deletions": 153,
        "changes": 157,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ab086e0bd39b6d010c040c9bf4d781400fc7b9f8/src/uint256.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ab086e0bd39b6d010c040c9bf4d781400fc7b9f8/src/uint256.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/uint256.h?ref=ab086e0bd39b6d010c040c9bf4d781400fc7b9f8",
        "patch": "@@ -19,9 +19,6 @@ inline signed char HexDigit(char c)\n     return p_util_hexdigit[(unsigned char)c];\n }\n \n-inline int Testuint256AdHoc(std::vector<std::string> vArg);\n-\n-\n /** Base class without constructors for uint256 and uint160.\n  * This makes the compiler let you use it in a union.\n  */\n@@ -203,7 +200,7 @@ class base_uint\n     {\n         // prefix operator\n         int i = 0;\n-        while (--pn[i] == -1 && i < WIDTH-1)\n+        while (--pn[i] == (uint32_t)-1 && i < WIDTH-1)\n             i++;\n         return *this;\n     }\n@@ -370,9 +367,10 @@ class base_uint\n         return sizeof(pn);\n     }\n \n-    uint64_t Get64(int n=0) const\n+    uint64_t GetLow64() const\n     {\n-        return pn[2*n] | (uint64_t)pn[2*n+1] << 32;\n+        assert(WIDTH >= 2);\n+        return pn[0] | (uint64_t)pn[1] << 32;\n     }\n \n //    unsigned int GetSerializeSize(int nType=0, int nVersion=PROTOCOL_VERSION) const\n@@ -398,7 +396,6 @@ class base_uint\n \n     friend class uint160;\n     friend class uint256;\n-    friend inline int Testuint256AdHoc(std::vector<std::string> vArg);\n };\n \n typedef base_uint<160> base_uint160;\n@@ -525,9 +522,6 @@ inline const uint160 operator-(const uint160& a, const uint160& b)           { r\n \n \n \n-\n-\n-\n //////////////////////////////////////////////////////////////////////////////\n //\n // uint256\n@@ -638,147 +632,4 @@ inline const uint256 operator|(const uint256& a, const uint256& b)      { return\n inline const uint256 operator+(const uint256& a, const uint256& b)      { return (base_uint256)a +  (base_uint256)b; }\n inline const uint256 operator-(const uint256& a, const uint256& b)      { return (base_uint256)a -  (base_uint256)b; }\n \n-\n-\n-\n-\n-\n-\n-\n-\n-\n-#ifdef TEST_UINT256\n-\n-inline int Testuint256AdHoc(std::vector<std::string> vArg)\n-{\n-    uint256 g(0);\n-\n-\n-    LogPrintf(\"%s\\n\", g.ToString().c_str());\n-    g--;  LogPrintf(\"g--\\n\");\n-    LogPrintf(\"%s\\n\", g.ToString().c_str());\n-    g--;  LogPrintf(\"g--\\n\");\n-    LogPrintf(\"%s\\n\", g.ToString().c_str());\n-    g++;  LogPrintf(\"g++\\n\");\n-    LogPrintf(\"%s\\n\", g.ToString().c_str());\n-    g++;  LogPrintf(\"g++\\n\");\n-    LogPrintf(\"%s\\n\", g.ToString().c_str());\n-    g++;  LogPrintf(\"g++\\n\");\n-    LogPrintf(\"%s\\n\", g.ToString().c_str());\n-    g++;  LogPrintf(\"g++\\n\");\n-    LogPrintf(\"%s\\n\", g.ToString().c_str());\n-\n-\n-\n-    uint256 a(7);\n-    LogPrintf(\"a=7\\n\");\n-    LogPrintf(\"%s\\n\", a.ToString().c_str());\n-\n-    uint256 b;\n-    LogPrintf(\"b undefined\\n\");\n-    LogPrintf(\"%s\\n\", b.ToString().c_str());\n-    int c = 3;\n-\n-    a = c;\n-    a.pn[3] = 15;\n-    LogPrintf(\"%s\\n\", a.ToString().c_str());\n-    uint256 k(c);\n-\n-    a = 5;\n-    a.pn[3] = 15;\n-    LogPrintf(\"%s\\n\", a.ToString().c_str());\n-    b = 1;\n-    b <<= 52;\n-\n-    a |= b;\n-\n-    a ^= 0x500;\n-\n-    LogPrintf(\"a %s\\n\", a.ToString().c_str());\n-\n-    a = a | b | (uint256)0x1000;\n-\n-\n-    LogPrintf(\"a %s\\n\", a.ToString().c_str());\n-    LogPrintf(\"b %s\\n\", b.ToString().c_str());\n-\n-    a = 0xfffffffe;\n-    a.pn[4] = 9;\n-\n-    LogPrintf(\"%s\\n\", a.ToString().c_str());\n-    a++;\n-    LogPrintf(\"%s\\n\", a.ToString().c_str());\n-    a++;\n-    LogPrintf(\"%s\\n\", a.ToString().c_str());\n-    a++;\n-    LogPrintf(\"%s\\n\", a.ToString().c_str());\n-    a++;\n-    LogPrintf(\"%s\\n\", a.ToString().c_str());\n-\n-    a--;\n-    LogPrintf(\"%s\\n\", a.ToString().c_str());\n-    a--;\n-    LogPrintf(\"%s\\n\", a.ToString().c_str());\n-    a--;\n-    LogPrintf(\"%s\\n\", a.ToString().c_str());\n-    uint256 d = a--;\n-    LogPrintf(\"%s\\n\", d.ToString().c_str());\n-    LogPrintf(\"%s\\n\", a.ToString().c_str());\n-    a--;\n-    LogPrintf(\"%s\\n\", a.ToString().c_str());\n-    a--;\n-    LogPrintf(\"%s\\n\", a.ToString().c_str());\n-\n-    d = a;\n-\n-    LogPrintf(\"%s\\n\", d.ToString().c_str());\n-    for (int i = uint256::WIDTH-1; i >= 0; i--) LogPrintf(\"%08x\", d.pn[i]); LogPrintf(\"\\n\");\n-\n-    uint256 neg = d;\n-    neg = ~neg;\n-    LogPrintf(\"%s\\n\", neg.ToString().c_str());\n-\n-\n-    uint256 e = uint256(\"0xABCDEF123abcdef12345678909832180000011111111\");\n-    LogPrintf(\"\\n\");\n-    LogPrintf(\"%s\\n\", e.ToString().c_str());\n-\n-\n-    LogPrintf(\"\\n\");\n-    uint256 x1 = uint256(\"0xABCDEF123abcdef12345678909832180000011111111\");\n-    uint256 x2;\n-    LogPrintf(\"%s\\n\", x1.ToString().c_str());\n-    for (int i = 0; i < 270; i += 4)\n-    {\n-        x2 = x1 << i;\n-        LogPrintf(\"%s\\n\", x2.ToString().c_str());\n-    }\n-\n-    LogPrintf(\"\\n\");\n-    LogPrintf(\"%s\\n\", x1.ToString().c_str());\n-    for (int i = 0; i < 270; i += 4)\n-    {\n-        x2 = x1;\n-        x2 >>= i;\n-        LogPrintf(\"%s\\n\", x2.ToString().c_str());\n-    }\n-\n-\n-    for (int i = 0; i < 100; i++)\n-    {\n-        uint256 k = (~uint256(0) >> i);\n-        LogPrintf(\"%s\\n\", k.ToString().c_str());\n-    }\n-\n-    for (int i = 0; i < 100; i++)\n-    {\n-        uint256 k = (~uint256(0) << i);\n-        LogPrintf(\"%s\\n\", k.ToString().c_str());\n-    }\n-\n-    return (0);\n-}\n-\n-#endif\n-\n #endif"
      }
    ]
  },
  {
    "sha": "7aedb914762eaf25f954790c50f9561103fee4b8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3YWVkYjkxNDc2MmVhZjI1Zjk1NDc5MGM1MGY5NTYxMTAzZmVlNGI4",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-06T09:33:19Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-06T09:34:01Z"
      },
      "message": "Merge pull request #3401\n\n012ca1c LoadWallet: acquire cs_wallet mutex before clearing setKeyPool (Wladimir J. van der Laan)\n9569168 Document cs_wallet lock and add AssertLockHeld (Wladimir J. van der Laan)\n19a5676 Use mutex pointer instead of name for AssertLockHeld (Wladimir J. van der Laan)",
      "tree": {
        "sha": "e9b693e5f7da9936da44f8d204456d7d0ea671be",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e9b693e5f7da9936da44f8d204456d7d0ea671be"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7aedb914762eaf25f954790c50f9561103fee4b8",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJSyniJAAoJEHSBCwEjRsmmZ30H/3K424sescAHqC+BAlVmOpDF\nRjYUiFakby2OeEPkvhr99utdfSnNxrBBNPQ2seN/ADIyF0gHx3WA2X+ZHu4bsPaQ\n2fxwPNo5COMEL6WtqxOjLNodIREcpb0F2ztbIEtlrxAV/iZRK+6luAhupvPk4mEm\nnDvwtmm0pI0j43l38HZq3oneGC6pPG5jPT/LhulI3cGaMaAD19uZ7B9SOBH8KLH5\nOAPw700dp7jfMhAJkFF5yJcy3Zkes+L8sS9X0ejst+c78Vgx/PAq3XlcKbFs3meY\nPEzDJOLrywXWP8d59xo03xJFqIPS0+2sIIwGmOXYQ/m6PZHY3VSJCXtwTgyXH0w=\n=Ksc2\n-----END PGP SIGNATURE-----",
        "payload": "tree e9b693e5f7da9936da44f8d204456d7d0ea671be\nparent ab086e0bd39b6d010c040c9bf4d781400fc7b9f8\nparent 012ca1c9e4f21e0414f965cb812ecb1f2ddb4f67\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1389000799 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1389000841 +0100\n\nMerge pull request #3401\n\n012ca1c LoadWallet: acquire cs_wallet mutex before clearing setKeyPool (Wladimir J. van der Laan)\n9569168 Document cs_wallet lock and add AssertLockHeld (Wladimir J. van der Laan)\n19a5676 Use mutex pointer instead of name for AssertLockHeld (Wladimir J. van der Laan)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7aedb914762eaf25f954790c50f9561103fee4b8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7aedb914762eaf25f954790c50f9561103fee4b8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7aedb914762eaf25f954790c50f9561103fee4b8/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ab086e0bd39b6d010c040c9bf4d781400fc7b9f8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ab086e0bd39b6d010c040c9bf4d781400fc7b9f8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ab086e0bd39b6d010c040c9bf4d781400fc7b9f8"
      },
      {
        "sha": "012ca1c9e4f21e0414f965cb812ecb1f2ddb4f67",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/012ca1c9e4f21e0414f965cb812ecb1f2ddb4f67",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/012ca1c9e4f21e0414f965cb812ecb1f2ddb4f67"
      }
    ],
    "stats": {
      "total": 44,
      "additions": 35,
      "deletions": 9
    },
    "files": [
      {
        "sha": "017a0768d508d85244c35935ec44bc92c3ffef84",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7aedb914762eaf25f954790c50f9561103fee4b8/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7aedb914762eaf25f954790c50f9561103fee4b8/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=7aedb914762eaf25f954790c50f9561103fee4b8",
        "patch": "@@ -2235,7 +2235,7 @@ void PushGetBlocks(CNode* pnode, CBlockIndex* pindexBegin, uint256 hashEnd)\n \n bool ProcessBlock(CValidationState &state, CNode* pfrom, CBlock* pblock, CDiskBlockPos *dbp)\n {\n-    AssertLockHeld(\"cs_main\");\n+    AssertLockHeld(cs_main);\n \n     // Check for duplicate\n     uint256 hash = pblock->GetHash();"
      },
      {
        "sha": "b57d8c3c00afdfd1ed7c85434fc701d139e5b337",
        "filename": "src/sync.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7aedb914762eaf25f954790c50f9561103fee4b8/src/sync.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7aedb914762eaf25f954790c50f9561103fee4b8/src/sync.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/sync.cpp?ref=7aedb914762eaf25f954790c50f9561103fee4b8",
        "patch": "@@ -136,11 +136,11 @@ std::string LocksHeld()\n     return result;\n }\n \n-void AssertLockHeld(std::string strName)\n+void AssertLockHeldInternal(const char *pszName, const char* pszFile, int nLine, void *cs)\n {\n     BOOST_FOREACH(const PAIRTYPE(void*, CLockLocation)&i, *lockstack)\n-        if (i.second.MutexName() == strName) return;\n-    LogPrintf(\"Lock %s not held; locks held:\\n%s\", strName.c_str(), LocksHeld().c_str());\n+        if (i.first == cs) return;\n+    LogPrintf(\"Lock %s not held in %s:%i; locks held:\\n%s\", pszName, pszFile, nLine, LocksHeld().c_str());\n     assert(0);\n }\n "
      },
      {
        "sha": "077ed59b89460248737be42695674493fc8113bd",
        "filename": "src/sync.h",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7aedb914762eaf25f954790c50f9561103fee4b8/src/sync.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7aedb914762eaf25f954790c50f9561103fee4b8/src/sync.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/sync.h?ref=7aedb914762eaf25f954790c50f9561103fee4b8",
        "patch": "@@ -88,12 +88,13 @@ typedef AnnotatedMixin<boost::mutex> CWaitableCriticalSection;\n void EnterCritical(const char* pszName, const char* pszFile, int nLine, void* cs, bool fTry = false);\n void LeaveCritical();\n std::string LocksHeld();\n-void AssertLockHeld(std::string strName);\n+void AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, void *cs);\n #else\n void static inline EnterCritical(const char* pszName, const char* pszFile, int nLine, void* cs, bool fTry = false) {}\n void static inline LeaveCritical() {}\n-void static inline AssertLockHeld(std::string) {}\n+void static inline AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, void *cs) {}\n #endif\n+#define AssertLockHeld(cs) AssertLockHeldInternal(#cs, __FILE__, __LINE__, &cs)\n \n #ifdef DEBUG_LOCKCONTENTION\n void PrintLockContention(const char* pszName, const char* pszFile, int nLine);"
      },
      {
        "sha": "9065ba848335fe5e98b40fb4445c6f643946f93f",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7aedb914762eaf25f954790c50f9561103fee4b8/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7aedb914762eaf25f954790c50f9561103fee4b8/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=7aedb914762eaf25f954790c50f9561103fee4b8",
        "patch": "@@ -35,6 +35,7 @@ struct CompareValueOnly\n \n CPubKey CWallet::GenerateNewKey()\n {\n+    AssertLockHeld(cs_wallet); // mapKeyMetadata\n     bool fCompressed = CanSupportFeature(FEATURE_COMPRPUBKEY); // default to compressed public keys if we want 0.6.0 wallets\n \n     RandAddSeedPerfmon();\n@@ -60,6 +61,7 @@ CPubKey CWallet::GenerateNewKey()\n \n bool CWallet::AddKeyPubKey(const CKey& secret, const CPubKey &pubkey)\n {\n+    AssertLockHeld(cs_wallet); // mapKeyMetadata\n     if (!CCryptoKeyStore::AddKeyPubKey(secret, pubkey))\n         return false;\n     if (!fFileBacked)\n@@ -95,6 +97,7 @@ bool CWallet::AddCryptedKey(const CPubKey &vchPubKey,\n \n bool CWallet::LoadKeyMetadata(const CPubKey &pubkey, const CKeyMetadata &meta)\n {\n+    AssertLockHeld(cs_wallet); // mapKeyMetadata\n     if (meta.nCreateTime && (!nTimeFirstKey || meta.nCreateTime < nTimeFirstKey))\n         nTimeFirstKey = meta.nCreateTime;\n \n@@ -202,6 +205,7 @@ class CCorruptAddress\n \n bool CWallet::SetMinVersion(enum WalletFeature nVersion, CWalletDB* pwalletdbIn, bool fExplicit)\n {\n+    AssertLockHeld(cs_wallet); // nWalletVersion\n     if (nWalletVersion >= nVersion)\n         return true;\n \n@@ -235,6 +239,7 @@ bool CWallet::SetMinVersion(enum WalletFeature nVersion, CWalletDB* pwalletdbIn,\n \n bool CWallet::SetMaxVersion(int nVersion)\n {\n+    AssertLockHeld(cs_wallet); // nWalletVersion, nWalletMaxVersion\n     // cannot downgrade below current version\n     if (nWalletVersion > nVersion)\n         return false;\n@@ -327,6 +332,7 @@ bool CWallet::EncryptWallet(const SecureString& strWalletPassphrase)\n \n int64_t CWallet::IncOrderPosNext(CWalletDB *pwalletdb)\n {\n+    AssertLockHeld(cs_wallet); // nOrderPosNext\n     int64_t nRet = nOrderPosNext++;\n     if (pwalletdb) {\n         pwalletdb->WriteOrderPosNext(nOrderPosNext);\n@@ -338,6 +344,7 @@ int64_t CWallet::IncOrderPosNext(CWalletDB *pwalletdb)\n \n CWallet::TxItems CWallet::OrderedTxItems(std::list<CAccountingEntry>& acentries, std::string strAccount)\n {\n+    AssertLockHeld(cs_wallet); // mapWallet\n     CWalletDB walletdb(strWalletFile);\n \n     // First: get all CWalletTx and CAccountingEntry into a sorted-by-order multimap.\n@@ -1492,6 +1499,7 @@ DBErrors CWallet::LoadWallet(bool& fFirstRunRet)\n     {\n         if (CDB::Rewrite(strWalletFile, \"\\x04pool\"))\n         {\n+            LOCK(cs_wallet);\n             setKeyPool.clear();\n             // Note: can't top-up keypool here, because wallet is locked.\n             // User will be prompted to unlock wallet the next operation\n@@ -1509,6 +1517,7 @@ DBErrors CWallet::LoadWallet(bool& fFirstRunRet)\n \n bool CWallet::SetAddressBook(const CTxDestination& address, const string& strName, const string& strPurpose)\n {\n+    AssertLockHeld(cs_wallet); // mapAddressBook\n     std::map<CTxDestination, CAddressBookData>::iterator mi = mapAddressBook.find(address);\n     mapAddressBook[address].name = strName;\n     if (!strPurpose.empty()) /* update purpose only if requested */\n@@ -1525,6 +1534,7 @@ bool CWallet::SetAddressBook(const CTxDestination& address, const string& strNam\n \n bool CWallet::DelAddressBook(const CTxDestination& address)\n {\n+    AssertLockHeld(cs_wallet); // mapAddressBook\n     mapAddressBook.erase(address);\n     NotifyAddressBookChanged(this, address, \"\", ::IsMine(*this, address), \"\", CT_DELETED);\n     if (!fFileBacked)\n@@ -1738,6 +1748,7 @@ std::map<CTxDestination, int64_t> CWallet::GetAddressBalances()\n \n set< set<CTxDestination> > CWallet::GetAddressGroupings()\n {\n+    AssertLockHeld(cs_wallet); // mapWallet\n     set< set<CTxDestination> > groupings;\n     set<CTxDestination> grouping;\n \n@@ -1830,6 +1841,7 @@ set< set<CTxDestination> > CWallet::GetAddressGroupings()\n \n set<CTxDestination> CWallet::GetAccountAddresses(string strAccount) const\n {\n+    AssertLockHeld(cs_wallet); // mapWallet\n     set<CTxDestination> result;\n     BOOST_FOREACH(const PAIRTYPE(CTxDestination, CAddressBookData)& item, mapAddressBook)\n     {\n@@ -1911,28 +1923,33 @@ void CWallet::UpdatedTransaction(const uint256 &hashTx)\n \n void CWallet::LockCoin(COutPoint& output)\n {\n+    AssertLockHeld(cs_wallet); // setLockedCoins\n     setLockedCoins.insert(output);\n }\n \n void CWallet::UnlockCoin(COutPoint& output)\n {\n+    AssertLockHeld(cs_wallet); // setLockedCoins\n     setLockedCoins.erase(output);\n }\n \n void CWallet::UnlockAllCoins()\n {\n+    AssertLockHeld(cs_wallet); // setLockedCoins\n     setLockedCoins.clear();\n }\n \n bool CWallet::IsLockedCoin(uint256 hash, unsigned int n) const\n {\n+    AssertLockHeld(cs_wallet); // setLockedCoins\n     COutPoint outpt(hash, n);\n \n     return (setLockedCoins.count(outpt) > 0);\n }\n \n void CWallet::ListLockedCoins(std::vector<COutPoint>& vOutpts)\n {\n+    AssertLockHeld(cs_wallet); // setLockedCoins\n     for (std::set<COutPoint>::iterator it = setLockedCoins.begin();\n          it != setLockedCoins.end(); it++) {\n         COutPoint outpt = (*it);\n@@ -1941,6 +1958,7 @@ void CWallet::ListLockedCoins(std::vector<COutPoint>& vOutpts)\n }\n \n void CWallet::GetKeyBirthTimes(std::map<CKeyID, int64_t> &mapKeyBirth) const {\n+    AssertLockHeld(cs_wallet); // mapKeyMetadata\n     mapKeyBirth.clear();\n \n     // get birth times for keys with metadata"
      },
      {
        "sha": "e4452a30933fc2b837d66f17ce6f300dd03a08d9",
        "filename": "src/wallet.h",
        "status": "modified",
        "additions": 10,
        "deletions": 3,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7aedb914762eaf25f954790c50f9561103fee4b8/src/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7aedb914762eaf25f954790c50f9561103fee4b8/src/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.h?ref=7aedb914762eaf25f954790c50f9561103fee4b8",
        "patch": "@@ -105,6 +105,11 @@ class CWallet : public CCryptoKeyStore, public CWalletInterface\n     int64_t nLastResend;\n \n public:\n+    /// Main wallet lock.\n+    /// This lock protects all the fields added by CWallet\n+    ///   except for:\n+    ///      fFileBacked (immutable after instantiation)\n+    ///      strWalletFile (immutable after instantiation)\n     mutable CCriticalSection cs_wallet;\n \n     bool fFileBacked;\n@@ -154,10 +159,11 @@ class CWallet : public CCryptoKeyStore, public CWalletInterface\n     int64_t nTimeFirstKey;\n \n     // check whether we are allowed to upgrade (or already support) to the named feature\n-    bool CanSupportFeature(enum WalletFeature wf) { return nWalletMaxVersion >= wf; }\n+    bool CanSupportFeature(enum WalletFeature wf) { AssertLockHeld(cs_wallet); return nWalletMaxVersion >= wf; }\n \n     void AvailableCoins(std::vector<COutput>& vCoins, bool fOnlyConfirmed=true, const CCoinControl *coinControl = NULL) const;\n     bool SelectCoinsMinConf(int64_t nTargetValue, int nConfMine, int nConfTheirs, std::vector<COutput> vCoins, std::set<std::pair<const CWalletTx*,unsigned int> >& setCoinsRet, int64_t& nValueRet) const;\n+\n     bool IsLockedCoin(uint256 hash, unsigned int n) const;\n     void LockCoin(COutPoint& output);\n     void UnlockCoin(COutPoint& output);\n@@ -174,7 +180,7 @@ class CWallet : public CCryptoKeyStore, public CWalletInterface\n     // Load metadata (used by LoadWallet)\n     bool LoadKeyMetadata(const CPubKey &pubkey, const CKeyMetadata &metadata);\n \n-    bool LoadMinVersion(int nVersion) { nWalletVersion = nVersion; nWalletMaxVersion = std::max(nWalletMaxVersion, nVersion); return true; }\n+    bool LoadMinVersion(int nVersion) { AssertLockHeld(cs_wallet); nWalletVersion = nVersion; nWalletMaxVersion = std::max(nWalletMaxVersion, nVersion); return true; }\n \n     // Adds an encrypted key to the store, and saves it to disk.\n     bool AddCryptedKey(const CPubKey &vchPubKey, const std::vector<unsigned char> &vchCryptedSecret);\n@@ -323,6 +329,7 @@ class CWallet : public CCryptoKeyStore, public CWalletInterface\n \n     unsigned int GetKeyPoolSize()\n     {\n+        AssertLockHeld(cs_wallet); // setKeyPool\n         return setKeyPool.size();\n     }\n \n@@ -335,7 +342,7 @@ class CWallet : public CCryptoKeyStore, public CWalletInterface\n     bool SetMaxVersion(int nVersion);\n \n     // get the current wallet format (the oldest client version guaranteed to understand this wallet)\n-    int GetVersion() { return nWalletVersion; }\n+    int GetVersion() { AssertLockHeld(cs_wallet); return nWalletVersion; }\n \n     /** Address book entry changed.\n      * @note called with lock cs_wallet held."
      }
    ]
  },
  {
    "sha": "4757e923185d48c3169bc2d216db88484f036455",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0NzU3ZTkyMzE4NWQ0OGMzMTY5YmMyZDIxNmRiODg0ODRmMDM2NDU1",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-12T09:12:27Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-06T09:34:33Z"
      },
      "message": "qt: add missing cs_wallet lock in AddressTableModel::setData\n\nduplicate check in AddressTableModel::setData accesses\nwallet data structure as well as SetAddressBook without proper LOCK, fix this.",
      "tree": {
        "sha": "33ef0c0f63b558468cb318b82d7f432cc2ba2ed5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/33ef0c0f63b558468cb318b82d7f432cc2ba2ed5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4757e923185d48c3169bc2d216db88484f036455",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4757e923185d48c3169bc2d216db88484f036455",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4757e923185d48c3169bc2d216db88484f036455",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4757e923185d48c3169bc2d216db88484f036455/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7aedb914762eaf25f954790c50f9561103fee4b8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7aedb914762eaf25f954790c50f9561103fee4b8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7aedb914762eaf25f954790c50f9561103fee4b8"
      }
    ],
    "stats": {
      "total": 37,
      "additions": 17,
      "deletions": 20
    },
    "files": [
      {
        "sha": "2987e5fddaf65998526fb747dae09f4f36efe301",
        "filename": "src/qt/addresstablemodel.cpp",
        "status": "modified",
        "additions": 17,
        "deletions": 20,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4757e923185d48c3169bc2d216db88484f036455/src/qt/addresstablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4757e923185d48c3169bc2d216db88484f036455/src/qt/addresstablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/addresstablemodel.cpp?ref=4757e923185d48c3169bc2d216db88484f036455",
        "patch": "@@ -244,49 +244,46 @@ bool AddressTableModel::setData(const QModelIndex &index, const QVariant &value,\n \n     if(role == Qt::EditRole)\n     {\n-        switch(index.column())\n+        LOCK(wallet->cs_wallet); /* For SetAddressBook / DelAddressBook */\n+        CTxDestination curAddress = CBitcoinAddress(rec->address.toStdString()).Get();\n+        if(index.column() == Label)\n         {\n-        case Label:\n             // Do nothing, if old label == new label\n             if(rec->label == value.toString())\n             {\n                 editStatus = NO_CHANGES;\n                 return false;\n             }\n-            wallet->SetAddressBook(CBitcoinAddress(rec->address.toStdString()).Get(), value.toString().toStdString(), strPurpose);\n-            break;\n-        case Address:\n-            // Do nothing, if old address == new address\n-            if(CBitcoinAddress(rec->address.toStdString()) == CBitcoinAddress(value.toString().toStdString()))\n+            wallet->SetAddressBook(curAddress, value.toString().toStdString(), strPurpose);\n+        } else if(index.column() == Address) {\n+            CTxDestination newAddress = CBitcoinAddress(value.toString().toStdString()).Get();\n+            // Refuse to set invalid address, set error status and return false\n+            if(boost::get<CNoDestination>(&newAddress))\n             {\n-                editStatus = NO_CHANGES;\n+                editStatus = INVALID_ADDRESS;\n                 return false;\n             }\n-            // Refuse to set invalid address, set error status and return false\n-            else if(!walletModel->validateAddress(value.toString()))\n+            // Do nothing, if old address == new address\n+            else if(newAddress == curAddress)\n             {\n-                editStatus = INVALID_ADDRESS;\n+                editStatus = NO_CHANGES;\n                 return false;\n             }\n             // Check for duplicate addresses to prevent accidental deletion of addresses, if you try\n             // to paste an existing address over another address (with a different label)\n-            else if(wallet->mapAddressBook.count(CBitcoinAddress(value.toString().toStdString()).Get()))\n+            else if(wallet->mapAddressBook.count(newAddress))\n             {\n                 editStatus = DUPLICATE_ADDRESS;\n                 return false;\n             }\n             // Double-check that we're not overwriting a receiving address\n             else if(rec->type == AddressTableEntry::Sending)\n             {\n-                {\n-                    LOCK(wallet->cs_wallet);\n-                    // Remove old entry\n-                    wallet->DelAddressBook(CBitcoinAddress(rec->address.toStdString()).Get());\n-                    // Add new entry with new address\n-                    wallet->SetAddressBook(CBitcoinAddress(value.toString().toStdString()).Get(), rec->label.toStdString(), strPurpose);\n-                }\n+                // Remove old entry\n+                wallet->DelAddressBook(curAddress);\n+                // Add new entry with new address\n+                wallet->SetAddressBook(newAddress, rec->label.toStdString(), strPurpose);\n             }\n-            break;\n         }\n         return true;\n     }"
      }
    ]
  },
  {
    "sha": "aaf8d157082ec0aec03c734ab3368fa8e2c4556c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphYWY4ZDE1NzA4MmVjMGFlYzAzYzczNGFiMzM2OGZhOGUyYzQ1NTZj",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-15T12:37:10Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-06T09:34:34Z"
      },
      "message": "qt: Add missing LOCKs for locked coin functions\n\nThese don't aquire the wallet lock internally, so the caller has to do\nit.",
      "tree": {
        "sha": "9bce04ee4343ea2becb02c5ff4af987a18bd4e0c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9bce04ee4343ea2becb02c5ff4af987a18bd4e0c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/aaf8d157082ec0aec03c734ab3368fa8e2c4556c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/aaf8d157082ec0aec03c734ab3368fa8e2c4556c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/aaf8d157082ec0aec03c734ab3368fa8e2c4556c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/aaf8d157082ec0aec03c734ab3368fa8e2c4556c/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4757e923185d48c3169bc2d216db88484f036455",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4757e923185d48c3169bc2d216db88484f036455",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4757e923185d48c3169bc2d216db88484f036455"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 4,
      "deletions": 0
    },
    "files": [
      {
        "sha": "78bc170623ac5fa860bc559451b76c8a40e23f9b",
        "filename": "src/qt/walletmodel.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/aaf8d157082ec0aec03c734ab3368fa8e2c4556c/src/qt/walletmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/aaf8d157082ec0aec03c734ab3368fa8e2c4556c/src/qt/walletmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.cpp?ref=aaf8d157082ec0aec03c734ab3368fa8e2c4556c",
        "patch": "@@ -531,20 +531,24 @@ void WalletModel::listCoins(std::map<QString, std::vector<COutput> >& mapCoins)\n \n bool WalletModel::isLockedCoin(uint256 hash, unsigned int n) const\n {\n+    LOCK(wallet->cs_wallet);\n     return wallet->IsLockedCoin(hash, n);\n }\n \n void WalletModel::lockCoin(COutPoint& output)\n {\n+    LOCK(wallet->cs_wallet);\n     wallet->LockCoin(output);\n }\n \n void WalletModel::unlockCoin(COutPoint& output)\n {\n+    LOCK(wallet->cs_wallet);\n     wallet->UnlockCoin(output);\n }\n \n void WalletModel::listLockedCoins(std::vector<COutPoint>& vOutpts)\n {\n+    LOCK(wallet->cs_wallet);\n     wallet->ListLockedCoins(vOutpts);\n }"
      }
    ]
  },
  {
    "sha": "28352af0606cea00cd80e8f353bda02fadf2222c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyODM1MmFmMDYwNmNlYTAwY2Q4MGU4ZjM1M2JkYTAyZmFkZjIyMjJj",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-15T12:54:07Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-06T12:36:24Z"
      },
      "message": "qt: protect SetAddressBook with cs_wallet lock everywhere",
      "tree": {
        "sha": "14ea955b09dd4d9bf86f5de2be590457a3d39690",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/14ea955b09dd4d9bf86f5de2be590457a3d39690"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/28352af0606cea00cd80e8f353bda02fadf2222c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/28352af0606cea00cd80e8f353bda02fadf2222c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/28352af0606cea00cd80e8f353bda02fadf2222c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/28352af0606cea00cd80e8f353bda02fadf2222c/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "aaf8d157082ec0aec03c734ab3368fa8e2c4556c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/aaf8d157082ec0aec03c734ab3368fa8e2c4556c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/aaf8d157082ec0aec03c734ab3368fa8e2c4556c"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 1,
      "deletions": 0
    },
    "files": [
      {
        "sha": "cfa87c16bab883c8596a87316be0cb61b2dd51a3",
        "filename": "src/qt/paymentserver.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/28352af0606cea00cd80e8f353bda02fadf2222c/src/qt/paymentserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/28352af0606cea00cd80e8f353bda02fadf2222c/src/qt/paymentserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/paymentserver.cpp?ref=28352af0606cea00cd80e8f353bda02fadf2222c",
        "patch": "@@ -548,6 +548,7 @@ void PaymentServer::fetchPaymentACK(CWallet* wallet, SendCoinsRecipient recipien\n     else {\n         CPubKey newKey;\n         if (wallet->GetKeyFromPool(newKey)) {\n+            LOCK(wallet->cs_wallet); // SetAddressBook\n             CKeyID keyID = newKey.GetID();\n             wallet->SetAddressBook(keyID, strAccount, \"refund\");\n "
      }
    ]
  },
  {
    "sha": "d31ad26550403d9ed8d5aedd0f65d610b55d9497",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkMzFhZDI2NTUwNDAzZDllZDhkNWFlZGQwZjY1ZDYxMGI1NWQ5NDk3",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-06T11:58:06Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-06T12:36:24Z"
      },
      "message": "qt: Add missing lock in WalletModel::listCoins\n\nAnother problem detected by cs_wallet lock detection (#3401).",
      "tree": {
        "sha": "f8002c42fa4062606197564710595654a7be42ba",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f8002c42fa4062606197564710595654a7be42ba"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d31ad26550403d9ed8d5aedd0f65d610b55d9497",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d31ad26550403d9ed8d5aedd0f65d610b55d9497",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d31ad26550403d9ed8d5aedd0f65d610b55d9497",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d31ad26550403d9ed8d5aedd0f65d610b55d9497/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "28352af0606cea00cd80e8f353bda02fadf2222c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/28352af0606cea00cd80e8f353bda02fadf2222c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/28352af0606cea00cd80e8f353bda02fadf2222c"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 1,
      "deletions": 0
    },
    "files": [
      {
        "sha": "6f3e3b0aaf3325af607254a627cb26c5cd58d334",
        "filename": "src/qt/walletmodel.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d31ad26550403d9ed8d5aedd0f65d610b55d9497/src/qt/walletmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d31ad26550403d9ed8d5aedd0f65d610b55d9497/src/qt/walletmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.cpp?ref=d31ad26550403d9ed8d5aedd0f65d610b55d9497",
        "patch": "@@ -502,6 +502,7 @@ void WalletModel::listCoins(std::map<QString, std::vector<COutput> >& mapCoins)\n     std::vector<COutput> vCoins;\n     wallet->AvailableCoins(vCoins);\n \n+    LOCK(wallet->cs_wallet); // ListLockedCoins, mapWallet\n     std::vector<COutPoint> vLockedCoins;\n     wallet->ListLockedCoins(vLockedCoins);\n "
      }
    ]
  },
  {
    "sha": "37d30ec3cf51aa332ce95ecf52fdd3e8e3d7228b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozN2QzMGVjM2NmNTFhYTMzMmNlOTVlY2Y1MmZkZDNlOGUzZDcyMjhi",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-06T12:36:51Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-06T12:37:12Z"
      },
      "message": "Merge pull request #3413\n\nd31ad26 qt: Add missing lock in WalletModel::listCoins (Wladimir J. van der Laan)\n28352af qt: protect SetAddressBook with cs_wallet lock everywhere (Wladimir J. van der Laan)\naaf8d15 qt: Add missing LOCKs for locked coin functions (Wladimir J. van der Laan)\n4757e92 qt: add missing cs_wallet lock in AddressTableModel::setData (Wladimir J. van der Laan)",
      "tree": {
        "sha": "f8002c42fa4062606197564710595654a7be42ba",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f8002c42fa4062606197564710595654a7be42ba"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/37d30ec3cf51aa332ce95ecf52fdd3e8e3d7228b",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJSyqN4AAoJEHSBCwEjRsmm6hYH/2qYwIKrBbOC54ts2Zq9O1pc\nML8HA2dlwKEjYBpX1+RB330xyLRcB5NEkhpb8Ds6mExng8ZHa28MhxSJ947IYg5I\nigO9og0ddSLzqWu7/Ep/+N6j7GRiTVGZkEtOAATnHJHAlWhiW2d+QLHsXZnVb9Xt\n+U0x6nWl43OCMUeOc3bcYcHImXgjJQqvi2aXtNFnDzJpZjoBraAXu6ZXs00B9JaQ\nIJmVuXZq1EcfDuuAQC0H3MSYiaJ43WsgmXEADyl7Ag6oZyTE6EtALhqK0wEjoGH7\nCHkeIMuF7yUqHzcHC2f1Km7mNIXmbDha9YEDGg8TWvPkJ3pOoIKR+DnrYcgFbTk=\n=anaO\n-----END PGP SIGNATURE-----",
        "payload": "tree f8002c42fa4062606197564710595654a7be42ba\nparent 7aedb914762eaf25f954790c50f9561103fee4b8\nparent d31ad26550403d9ed8d5aedd0f65d610b55d9497\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1389011811 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1389011832 +0100\n\nMerge pull request #3413\n\nd31ad26 qt: Add missing lock in WalletModel::listCoins (Wladimir J. van der Laan)\n28352af qt: protect SetAddressBook with cs_wallet lock everywhere (Wladimir J. van der Laan)\naaf8d15 qt: Add missing LOCKs for locked coin functions (Wladimir J. van der Laan)\n4757e92 qt: add missing cs_wallet lock in AddressTableModel::setData (Wladimir J. van der Laan)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/37d30ec3cf51aa332ce95ecf52fdd3e8e3d7228b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/37d30ec3cf51aa332ce95ecf52fdd3e8e3d7228b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/37d30ec3cf51aa332ce95ecf52fdd3e8e3d7228b/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7aedb914762eaf25f954790c50f9561103fee4b8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7aedb914762eaf25f954790c50f9561103fee4b8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7aedb914762eaf25f954790c50f9561103fee4b8"
      },
      {
        "sha": "d31ad26550403d9ed8d5aedd0f65d610b55d9497",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d31ad26550403d9ed8d5aedd0f65d610b55d9497",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d31ad26550403d9ed8d5aedd0f65d610b55d9497"
      }
    ],
    "stats": {
      "total": 43,
      "additions": 23,
      "deletions": 20
    },
    "files": [
      {
        "sha": "2987e5fddaf65998526fb747dae09f4f36efe301",
        "filename": "src/qt/addresstablemodel.cpp",
        "status": "modified",
        "additions": 17,
        "deletions": 20,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/37d30ec3cf51aa332ce95ecf52fdd3e8e3d7228b/src/qt/addresstablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/37d30ec3cf51aa332ce95ecf52fdd3e8e3d7228b/src/qt/addresstablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/addresstablemodel.cpp?ref=37d30ec3cf51aa332ce95ecf52fdd3e8e3d7228b",
        "patch": "@@ -244,49 +244,46 @@ bool AddressTableModel::setData(const QModelIndex &index, const QVariant &value,\n \n     if(role == Qt::EditRole)\n     {\n-        switch(index.column())\n+        LOCK(wallet->cs_wallet); /* For SetAddressBook / DelAddressBook */\n+        CTxDestination curAddress = CBitcoinAddress(rec->address.toStdString()).Get();\n+        if(index.column() == Label)\n         {\n-        case Label:\n             // Do nothing, if old label == new label\n             if(rec->label == value.toString())\n             {\n                 editStatus = NO_CHANGES;\n                 return false;\n             }\n-            wallet->SetAddressBook(CBitcoinAddress(rec->address.toStdString()).Get(), value.toString().toStdString(), strPurpose);\n-            break;\n-        case Address:\n-            // Do nothing, if old address == new address\n-            if(CBitcoinAddress(rec->address.toStdString()) == CBitcoinAddress(value.toString().toStdString()))\n+            wallet->SetAddressBook(curAddress, value.toString().toStdString(), strPurpose);\n+        } else if(index.column() == Address) {\n+            CTxDestination newAddress = CBitcoinAddress(value.toString().toStdString()).Get();\n+            // Refuse to set invalid address, set error status and return false\n+            if(boost::get<CNoDestination>(&newAddress))\n             {\n-                editStatus = NO_CHANGES;\n+                editStatus = INVALID_ADDRESS;\n                 return false;\n             }\n-            // Refuse to set invalid address, set error status and return false\n-            else if(!walletModel->validateAddress(value.toString()))\n+            // Do nothing, if old address == new address\n+            else if(newAddress == curAddress)\n             {\n-                editStatus = INVALID_ADDRESS;\n+                editStatus = NO_CHANGES;\n                 return false;\n             }\n             // Check for duplicate addresses to prevent accidental deletion of addresses, if you try\n             // to paste an existing address over another address (with a different label)\n-            else if(wallet->mapAddressBook.count(CBitcoinAddress(value.toString().toStdString()).Get()))\n+            else if(wallet->mapAddressBook.count(newAddress))\n             {\n                 editStatus = DUPLICATE_ADDRESS;\n                 return false;\n             }\n             // Double-check that we're not overwriting a receiving address\n             else if(rec->type == AddressTableEntry::Sending)\n             {\n-                {\n-                    LOCK(wallet->cs_wallet);\n-                    // Remove old entry\n-                    wallet->DelAddressBook(CBitcoinAddress(rec->address.toStdString()).Get());\n-                    // Add new entry with new address\n-                    wallet->SetAddressBook(CBitcoinAddress(value.toString().toStdString()).Get(), rec->label.toStdString(), strPurpose);\n-                }\n+                // Remove old entry\n+                wallet->DelAddressBook(curAddress);\n+                // Add new entry with new address\n+                wallet->SetAddressBook(newAddress, rec->label.toStdString(), strPurpose);\n             }\n-            break;\n         }\n         return true;\n     }"
      },
      {
        "sha": "cfa87c16bab883c8596a87316be0cb61b2dd51a3",
        "filename": "src/qt/paymentserver.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/37d30ec3cf51aa332ce95ecf52fdd3e8e3d7228b/src/qt/paymentserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/37d30ec3cf51aa332ce95ecf52fdd3e8e3d7228b/src/qt/paymentserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/paymentserver.cpp?ref=37d30ec3cf51aa332ce95ecf52fdd3e8e3d7228b",
        "patch": "@@ -548,6 +548,7 @@ void PaymentServer::fetchPaymentACK(CWallet* wallet, SendCoinsRecipient recipien\n     else {\n         CPubKey newKey;\n         if (wallet->GetKeyFromPool(newKey)) {\n+            LOCK(wallet->cs_wallet); // SetAddressBook\n             CKeyID keyID = newKey.GetID();\n             wallet->SetAddressBook(keyID, strAccount, \"refund\");\n "
      },
      {
        "sha": "6f3e3b0aaf3325af607254a627cb26c5cd58d334",
        "filename": "src/qt/walletmodel.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/37d30ec3cf51aa332ce95ecf52fdd3e8e3d7228b/src/qt/walletmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/37d30ec3cf51aa332ce95ecf52fdd3e8e3d7228b/src/qt/walletmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.cpp?ref=37d30ec3cf51aa332ce95ecf52fdd3e8e3d7228b",
        "patch": "@@ -502,6 +502,7 @@ void WalletModel::listCoins(std::map<QString, std::vector<COutput> >& mapCoins)\n     std::vector<COutput> vCoins;\n     wallet->AvailableCoins(vCoins);\n \n+    LOCK(wallet->cs_wallet); // ListLockedCoins, mapWallet\n     std::vector<COutPoint> vLockedCoins;\n     wallet->ListLockedCoins(vLockedCoins);\n \n@@ -531,20 +532,24 @@ void WalletModel::listCoins(std::map<QString, std::vector<COutput> >& mapCoins)\n \n bool WalletModel::isLockedCoin(uint256 hash, unsigned int n) const\n {\n+    LOCK(wallet->cs_wallet);\n     return wallet->IsLockedCoin(hash, n);\n }\n \n void WalletModel::lockCoin(COutPoint& output)\n {\n+    LOCK(wallet->cs_wallet);\n     wallet->LockCoin(output);\n }\n \n void WalletModel::unlockCoin(COutPoint& output)\n {\n+    LOCK(wallet->cs_wallet);\n     wallet->UnlockCoin(output);\n }\n \n void WalletModel::listLockedCoins(std::vector<COutPoint>& vOutpts)\n {\n+    LOCK(wallet->cs_wallet);\n     wallet->ListLockedCoins(vOutpts);\n }"
      }
    ]
  },
  {
    "sha": "7e08e29117546aae66b0b418b2044f77b70b312f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3ZTA4ZTI5MTE3NTQ2YWFlNjZiMGI0MThiMjA0NGY3N2I3MGIzMTJm",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2014-01-06T14:09:26Z"
      },
      "committer": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2014-01-06T14:09:26Z"
      },
      "message": "better std::exception logging for block/undo files",
      "tree": {
        "sha": "d948534e625e8c630f22cdd72c4a59dcb59000bb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d948534e625e8c630f22cdd72c4a59dcb59000bb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7e08e29117546aae66b0b418b2044f77b70b312f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7e08e29117546aae66b0b418b2044f77b70b312f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7e08e29117546aae66b0b418b2044f77b70b312f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7e08e29117546aae66b0b418b2044f77b70b312f/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "37d30ec3cf51aa332ce95ecf52fdd3e8e3d7228b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/37d30ec3cf51aa332ce95ecf52fdd3e8e3d7228b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/37d30ec3cf51aa332ce95ecf52fdd3e8e3d7228b"
      }
    ],
    "stats": {
      "total": 26,
      "additions": 13,
      "deletions": 13
    },
    "files": [
      {
        "sha": "05a5b9b857ff6e6268093f2ebd925222bbf7ec43",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7e08e29117546aae66b0b418b2044f77b70b312f/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7e08e29117546aae66b0b418b2044f77b70b312f/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=7e08e29117546aae66b0b418b2044f77b70b312f",
        "patch": "@@ -878,11 +878,11 @@ bool GetTransaction(const uint256 &hash, CTransaction &txOut, uint256 &hashBlock\n                     fseek(file, postx.nTxOffset, SEEK_CUR);\n                     file >> txOut;\n                 } catch (std::exception &e) {\n-                    return error(\"%s() : deserialize or I/O error\", __PRETTY_FUNCTION__);\n+                    return error(\"%s : Deserialize or I/O error - %s\", __PRETTY_FUNCTION__, e.what());\n                 }\n                 hashBlock = header.GetHash();\n                 if (txOut.GetHash() != hash)\n-                    return error(\"%s() : txid mismatch\", __PRETTY_FUNCTION__);\n+                    return error(\"%s : txid mismatch\", __PRETTY_FUNCTION__);\n                 return true;\n             }\n         }\n@@ -931,7 +931,7 @@ bool WriteBlockToDisk(CBlock& block, CDiskBlockPos& pos)\n     // Open history file to append\n     CAutoFile fileout = CAutoFile(OpenBlockFile(pos), SER_DISK, CLIENT_VERSION);\n     if (!fileout)\n-        return error(\"WriteBlockToDisk() : OpenBlockFile failed\");\n+        return error(\"WriteBlockToDisk : OpenBlockFile failed\");\n \n     // Write index header\n     unsigned int nSize = fileout.GetSerializeSize(block);\n@@ -940,7 +940,7 @@ bool WriteBlockToDisk(CBlock& block, CDiskBlockPos& pos)\n     // Write block\n     long fileOutPos = ftell(fileout);\n     if (fileOutPos < 0)\n-        return error(\"WriteBlockToDisk() : ftell failed\");\n+        return error(\"WriteBlockToDisk : ftell failed\");\n     pos.nPos = (unsigned int)fileOutPos;\n     fileout << block;\n \n@@ -959,19 +959,19 @@ bool ReadBlockFromDisk(CBlock& block, const CDiskBlockPos& pos)\n     // Open history file to read\n     CAutoFile filein = CAutoFile(OpenBlockFile(pos, true), SER_DISK, CLIENT_VERSION);\n     if (!filein)\n-        return error(\"ReadBlockFromDisk(CBlock&, CDiskBlockPos&) : OpenBlockFile failed\");\n+        return error(\"ReadBlockFromDisk : OpenBlockFile failed\");\n \n     // Read block\n     try {\n         filein >> block;\n     }\n     catch (std::exception &e) {\n-        return error(\"%s() : deserialize or I/O error\", __PRETTY_FUNCTION__);\n+        return error(\"%s : Deserialize or I/O error - %s\", __PRETTY_FUNCTION__, e.what());\n     }\n \n     // Check the header\n     if (!CheckProofOfWork(block.GetHash(), block.nBits))\n-        return error(\"ReadBlockFromDisk(CBlock&, CDiskBlockPos&) : errors in block header\");\n+        return error(\"ReadBlockFromDisk : Errors in block header\");\n \n     return true;\n }\n@@ -2852,7 +2852,7 @@ bool LoadExternalBlockFile(FILE* fileIn, CDiskBlockPos *dbp)\n                         break;\n                 }\n             } catch (std::exception &e) {\n-                LogPrintf(\"%s() : Deserialize or I/O error caught during load\\n\", __PRETTY_FUNCTION__);\n+                LogPrintf(\"%s : Deserialize or I/O error - %s\", __PRETTY_FUNCTION__, e.what());\n             }\n         }\n         fclose(fileIn);"
      },
      {
        "sha": "60e733b23ae9de83e1110a13b2347398544e036f",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7e08e29117546aae66b0b418b2044f77b70b312f/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7e08e29117546aae66b0b418b2044f77b70b312f/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=7e08e29117546aae66b0b418b2044f77b70b312f",
        "patch": "@@ -336,7 +336,7 @@ class CBlockUndo\n         // Open history file to append\n         CAutoFile fileout = CAutoFile(OpenUndoFile(pos), SER_DISK, CLIENT_VERSION);\n         if (!fileout)\n-            return error(\"CBlockUndo::WriteToDisk() : OpenUndoFile failed\");\n+            return error(\"CBlockUndo::WriteToDisk : OpenUndoFile failed\");\n \n         // Write index header\n         unsigned int nSize = fileout.GetSerializeSize(*this);\n@@ -345,7 +345,7 @@ class CBlockUndo\n         // Write undo data\n         long fileOutPos = ftell(fileout);\n         if (fileOutPos < 0)\n-            return error(\"CBlockUndo::WriteToDisk() : ftell failed\");\n+            return error(\"CBlockUndo::WriteToDisk : ftell failed\");\n         pos.nPos = (unsigned int)fileOutPos;\n         fileout << *this;\n \n@@ -368,7 +368,7 @@ class CBlockUndo\n         // Open history file to read\n         CAutoFile filein = CAutoFile(OpenUndoFile(pos, true), SER_DISK, CLIENT_VERSION);\n         if (!filein)\n-            return error(\"CBlockUndo::ReadFromDisk() : OpenBlockFile failed\");\n+            return error(\"CBlockUndo::ReadFromDisk : OpenBlockFile failed\");\n \n         // Read block\n         uint256 hashChecksum;\n@@ -377,15 +377,15 @@ class CBlockUndo\n             filein >> hashChecksum;\n         }\n         catch (std::exception &e) {\n-            return error(\"%s() : deserialize or I/O error\", __PRETTY_FUNCTION__);\n+            return error(\"%s : Deserialize or I/O error - %s\", __PRETTY_FUNCTION__, e.what());\n         }\n \n         // Verify checksum\n         CHashWriter hasher(SER_GETHASH, PROTOCOL_VERSION);\n         hasher << hashBlock;\n         hasher << *this;\n         if (hashChecksum != hasher.GetHash())\n-            return error(\"CBlockUndo::ReadFromDisk() : checksum mismatch\");\n+            return error(\"CBlockUndo::ReadFromDisk : Checksum mismatch\");\n \n         return true;\n     }"
      }
    ]
  },
  {
    "sha": "2a7201570bd645f2b2b78544498e961bbc9a15a8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyYTcyMDE1NzBiZDY0NWYyYjJiNzg1NDQ0OThlOTYxYmJjOWExNWE4",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-06T14:10:21Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-06T14:10:21Z"
      },
      "message": "qt: Remove unused method OptionsModel::getTransactionFee",
      "tree": {
        "sha": "28a43602ea3bfa562d832fbc44081875f43541aa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/28a43602ea3bfa562d832fbc44081875f43541aa"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2a7201570bd645f2b2b78544498e961bbc9a15a8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2a7201570bd645f2b2b78544498e961bbc9a15a8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2a7201570bd645f2b2b78544498e961bbc9a15a8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2a7201570bd645f2b2b78544498e961bbc9a15a8/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "37d30ec3cf51aa332ce95ecf52fdd3e8e3d7228b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/37d30ec3cf51aa332ce95ecf52fdd3e8e3d7228b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/37d30ec3cf51aa332ce95ecf52fdd3e8e3d7228b"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 0,
      "deletions": 6
    },
    "files": [
      {
        "sha": "b64b0dff8b9181e1b35b06735d8cb2e15b13addf",
        "filename": "src/qt/optionsmodel.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2a7201570bd645f2b2b78544498e961bbc9a15a8/src/qt/optionsmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2a7201570bd645f2b2b78544498e961bbc9a15a8/src/qt/optionsmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsmodel.cpp?ref=2a7201570bd645f2b2b78544498e961bbc9a15a8",
        "patch": "@@ -307,11 +307,6 @@ bool OptionsModel::setData(const QModelIndex & index, const QVariant & value, in\n     return successful;\n }\n \n-qint64 OptionsModel::getTransactionFee()\n-{\n-    return (qint64) nTransactionFee;\n-}\n-\n bool OptionsModel::getProxySettings(QString& proxyIP, quint16 &proxyPort) const\n {\n     std::string proxy = GetArg(\"-proxy\", \"\");"
      },
      {
        "sha": "a50153c7686b0ffdf00ae1e9dc8615b196b041ad",
        "filename": "src/qt/optionsmodel.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2a7201570bd645f2b2b78544498e961bbc9a15a8/src/qt/optionsmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2a7201570bd645f2b2b78544498e961bbc9a15a8/src/qt/optionsmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsmodel.h?ref=2a7201570bd645f2b2b78544498e961bbc9a15a8",
        "patch": "@@ -48,7 +48,6 @@ class OptionsModel : public QAbstractListModel\n     bool setData(const QModelIndex & index, const QVariant & value, int role = Qt::EditRole);\n \n     /* Explicit getters */\n-    qint64 getTransactionFee();\n     bool getMinimizeToTray() { return fMinimizeToTray; }\n     bool getMinimizeOnClose() { return fMinimizeOnClose; }\n     int getDisplayUnit() { return nDisplayUnit; }"
      }
    ]
  },
  {
    "sha": "65515c0d05678334a52f686eaaa2bac1ff285a5a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2NTUxNWMwZDA1Njc4MzM0YTUyZjY4NmVhYWEyYmFjMWZmMjg1YTVh",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-06T15:06:46Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-06T15:06:52Z"
      },
      "message": "Merge pull request #3489\n\n2a72015 qt: Remove unused method OptionsModel::getTransactionFee (Wladimir J. van der Laan)",
      "tree": {
        "sha": "28a43602ea3bfa562d832fbc44081875f43541aa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/28a43602ea3bfa562d832fbc44081875f43541aa"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/65515c0d05678334a52f686eaaa2bac1ff285a5a",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJSysaMAAoJEHSBCwEjRsmmQhAH/30c4dVzo5vM/fJ6fUZmHXmf\nrKivtiIpFv70nbLMBkd5cjPqQkXAy9YZmq8xPVCoAvXiL1tfqOz5DbaO/mjHPfIE\nJIUanUA1Ql6/vgqHc1qrV6qyL76RDgEhUf/h05XpSw7NBgeK6wX/oZQOcRNkiaOn\nXj4TvyzxHCtzrX9VPnnW8+JlAAyf6m8TCCUpr8nB0aVZbus9WHnzRP5k65AxeK/l\nqZ+97nWHgozavr1nFV/hCdfcch8TSdpIFUNYp4OorS2Ewd6IhYby9/8pjrJTxQQr\nYMJgcHe/9aHc75zzWL/85mQGQObarK8NSmW1UZ6YPeM8GAp+7WjDkdxBwUbF8zA=\n=+XHT\n-----END PGP SIGNATURE-----",
        "payload": "tree 28a43602ea3bfa562d832fbc44081875f43541aa\nparent 37d30ec3cf51aa332ce95ecf52fdd3e8e3d7228b\nparent 2a7201570bd645f2b2b78544498e961bbc9a15a8\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1389020806 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1389020812 +0100\n\nMerge pull request #3489\n\n2a72015 qt: Remove unused method OptionsModel::getTransactionFee (Wladimir J. van der Laan)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/65515c0d05678334a52f686eaaa2bac1ff285a5a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/65515c0d05678334a52f686eaaa2bac1ff285a5a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/65515c0d05678334a52f686eaaa2bac1ff285a5a/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "37d30ec3cf51aa332ce95ecf52fdd3e8e3d7228b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/37d30ec3cf51aa332ce95ecf52fdd3e8e3d7228b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/37d30ec3cf51aa332ce95ecf52fdd3e8e3d7228b"
      },
      {
        "sha": "2a7201570bd645f2b2b78544498e961bbc9a15a8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2a7201570bd645f2b2b78544498e961bbc9a15a8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2a7201570bd645f2b2b78544498e961bbc9a15a8"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 0,
      "deletions": 6
    },
    "files": [
      {
        "sha": "b64b0dff8b9181e1b35b06735d8cb2e15b13addf",
        "filename": "src/qt/optionsmodel.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/65515c0d05678334a52f686eaaa2bac1ff285a5a/src/qt/optionsmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/65515c0d05678334a52f686eaaa2bac1ff285a5a/src/qt/optionsmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsmodel.cpp?ref=65515c0d05678334a52f686eaaa2bac1ff285a5a",
        "patch": "@@ -307,11 +307,6 @@ bool OptionsModel::setData(const QModelIndex & index, const QVariant & value, in\n     return successful;\n }\n \n-qint64 OptionsModel::getTransactionFee()\n-{\n-    return (qint64) nTransactionFee;\n-}\n-\n bool OptionsModel::getProxySettings(QString& proxyIP, quint16 &proxyPort) const\n {\n     std::string proxy = GetArg(\"-proxy\", \"\");"
      },
      {
        "sha": "a50153c7686b0ffdf00ae1e9dc8615b196b041ad",
        "filename": "src/qt/optionsmodel.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/65515c0d05678334a52f686eaaa2bac1ff285a5a/src/qt/optionsmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/65515c0d05678334a52f686eaaa2bac1ff285a5a/src/qt/optionsmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsmodel.h?ref=65515c0d05678334a52f686eaaa2bac1ff285a5a",
        "patch": "@@ -48,7 +48,6 @@ class OptionsModel : public QAbstractListModel\n     bool setData(const QModelIndex & index, const QVariant & value, int role = Qt::EditRole);\n \n     /* Explicit getters */\n-    qint64 getTransactionFee();\n     bool getMinimizeToTray() { return fMinimizeToTray; }\n     bool getMinimizeOnClose() { return fMinimizeOnClose; }\n     int getDisplayUnit() { return nDisplayUnit; }"
      }
    ]
  },
  {
    "sha": "7e195e8459ad741368db6bb574981fccb1707268",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3ZTE5NWU4NDU5YWQ3NDEzNjhkYjZiYjU3NDk4MWZjY2IxNzA3MjY4",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2013-12-03T08:10:10Z"
      },
      "committer": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2014-01-06T15:19:04Z"
      },
      "message": "[Qt] massive options/settings rework (no core changes)\n\n- add new options for database cache and script verification threads\n- add label which displays options that are overridden by command-line\n  parameters\n- proxy settings are not applied on-the-fly anymore and require a client\n  restart (ApplyProxySettings() was removed and was not working very well\n  anyway)\n- re-work options reset and require a client shutdown (as it is much\n  easier to do it this way without having to mess with what can be changed\n  on-the-fly and what needs a restart anyway)\n- options reset now writes default values for every single option\n- when changing an option which requires a client restart display a 10\n  second warning message in statusLabel (via a QTimer)\n- when applying the changes via ok change that to a persistent message,\n  which is displayed even after closing optionsdialog and re-open it, when\n  no client restart was made\n- remove dialog boxes used when changing language or proxy settings\n- add setRestartRequired() and isRestartRequired() to OptionsModel and\n  use the set function when updating options to signal OptionsDialog\n  when a restart is needed\n- resize optionsdialog a little and add some min sizes for certain GUI\n  elements\n- remove apply button from optionsdialog\n- save and restore optionsdialog window position\n- update nTransactionFee in QSettings with a set -paytxfee value when\n  opening optionsdialog (I'm not sure about this yet, perhaps revert to\n  not updating QSettings and just display current -paytxfee value in\n  optionsdialog.)",
      "tree": {
        "sha": "d14b125aac61867a028af5dab191926789848182",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d14b125aac61867a028af5dab191926789848182"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7e195e8459ad741368db6bb574981fccb1707268",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7e195e8459ad741368db6bb574981fccb1707268",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7e195e8459ad741368db6bb574981fccb1707268",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7e195e8459ad741368db6bb574981fccb1707268/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "65515c0d05678334a52f686eaaa2bac1ff285a5a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/65515c0d05678334a52f686eaaa2bac1ff285a5a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/65515c0d05678334a52f686eaaa2bac1ff285a5a"
      }
    ],
    "stats": {
      "total": 682,
      "additions": 441,
      "deletions": 241
    },
    "files": [
      {
        "sha": "9056ab7696717dee2cdf5e819e6b70b6ecb6a4ce",
        "filename": "src/qt/forms/optionsdialog.ui",
        "status": "modified",
        "additions": 175,
        "deletions": 44,
        "changes": 219,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7e195e8459ad741368db6bb574981fccb1707268/src/qt/forms/optionsdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7e195e8459ad741368db6bb574981fccb1707268/src/qt/forms/optionsdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/optionsdialog.ui?ref=7e195e8459ad741368db6bb574981fccb1707268",
        "patch": "@@ -6,8 +6,8 @@\n    <rect>\n     <x>0</x>\n     <y>0</y>\n-    <width>540</width>\n-    <height>380</height>\n+    <width>560</width>\n+    <height>400</height>\n    </rect>\n   </property>\n   <property name=\"windowTitle\">\n@@ -19,9 +19,6 @@\n   <layout class=\"QVBoxLayout\" name=\"verticalLayout\">\n    <item>\n     <widget class=\"QTabWidget\" name=\"tabWidget\">\n-     <property name=\"tabPosition\">\n-      <enum>QTabWidget::North</enum>\n-     </property>\n      <property name=\"currentIndex\">\n       <number>0</number>\n      </property>\n@@ -86,21 +83,44 @@\n          </property>\n         </widget>\n        </item>\n-       <item>\n-        <spacer name=\"verticalSpacer_Main\">\n-         <property name=\"orientation\">\n-          <enum>Qt::Vertical</enum>\n-         </property>\n-         <property name=\"sizeHint\" stdset=\"0\">\n-          <size>\n-           <width>20</width>\n-           <height>40</height>\n-          </size>\n-         </property>\n-        </spacer>\n-       </item>\n        <item>\n         <layout class=\"QHBoxLayout\" name=\"horizontalLayout_2_Main\">\n+         <item>\n+          <widget class=\"QLabel\" name=\"databaseCacheLabel\">\n+           <property name=\"text\">\n+            <string>Size of &amp;database cache</string>\n+           </property>\n+           <property name=\"textFormat\">\n+            <enum>Qt::PlainText</enum>\n+           </property>\n+           <property name=\"buddy\">\n+            <cstring>databaseCache</cstring>\n+           </property>\n+          </widget>\n+         </item>\n+         <item>\n+          <widget class=\"QSpinBox\" name=\"databaseCache\">\n+           <property name=\"toolTip\">\n+            <string>Set database cache size in megabytes (default: 25)</string>\n+           </property>\n+           <property name=\"maximum\">\n+            <number>1024</number>\n+           </property>\n+           <property name=\"value\">\n+            <number>25</number>\n+           </property>\n+          </widget>\n+         </item>\n+         <item>\n+          <widget class=\"QLabel\" name=\"databaseCacheUnitLabel\">\n+           <property name=\"text\">\n+            <string>MB</string>\n+           </property>\n+           <property name=\"textFormat\">\n+            <enum>Qt::PlainText</enum>\n+           </property>\n+          </widget>\n+         </item>\n          <item>\n           <spacer name=\"horizontalSpacer_2_Main\">\n            <property name=\"orientation\">\n@@ -114,21 +134,64 @@\n            </property>\n           </spacer>\n          </item>\n+        </layout>\n+       </item>\n+       <item>\n+        <layout class=\"QHBoxLayout\" name=\"horizontalLayout_3_Main\">\n+         <item>\n+          <widget class=\"QLabel\" name=\"threadsScriptVerifLabel\">\n+           <property name=\"text\">\n+            <string>Number of script &amp;verification threads</string>\n+           </property>\n+           <property name=\"textFormat\">\n+            <enum>Qt::PlainText</enum>\n+           </property>\n+           <property name=\"buddy\">\n+            <cstring>threadsScriptVerif</cstring>\n+           </property>\n+          </widget>\n+         </item>\n          <item>\n-          <widget class=\"QPushButton\" name=\"resetButton\">\n+          <widget class=\"QSpinBox\" name=\"threadsScriptVerif\">\n            <property name=\"toolTip\">\n-            <string>Reset all client options to default.</string>\n+            <string>Set the number of script verification threads (up to 16, 0 = auto, &lt;0 = leave that many cores free, default: 0)</string>\n            </property>\n-           <property name=\"text\">\n-            <string>&amp;Reset Options</string>\n+           <property name=\"minimum\">\n+            <number>-16</number>\n            </property>\n-           <property name=\"autoDefault\">\n-            <bool>false</bool>\n+           <property name=\"maximum\">\n+            <number>16</number>\n            </property>\n           </widget>\n          </item>\n+         <item>\n+          <spacer name=\"horizontalSpacer_3_Main\">\n+           <property name=\"orientation\">\n+            <enum>Qt::Horizontal</enum>\n+           </property>\n+           <property name=\"sizeHint\" stdset=\"0\">\n+            <size>\n+             <width>40</width>\n+             <height>20</height>\n+            </size>\n+           </property>\n+          </spacer>\n+         </item>\n         </layout>\n        </item>\n+       <item>\n+        <spacer name=\"verticalSpacer_Main\">\n+         <property name=\"orientation\">\n+          <enum>Qt::Vertical</enum>\n+         </property>\n+         <property name=\"sizeHint\" stdset=\"0\">\n+          <size>\n+           <width>20</width>\n+           <height>40</height>\n+          </size>\n+         </property>\n+        </spacer>\n+       </item>\n       </layout>\n      </widget>\n      <widget class=\"QWidget\" name=\"tabNetwork\">\n@@ -149,15 +212,15 @@\n        <item>\n         <widget class=\"QCheckBox\" name=\"connectSocks\">\n          <property name=\"toolTip\">\n-          <string>Connect to the Bitcoin network through a SOCKS proxy (e.g. when connecting through Tor).</string>\n+          <string>Connect to the Bitcoin network through a SOCKS proxy.</string>\n          </property>\n          <property name=\"text\">\n-          <string>&amp;Connect through SOCKS proxy:</string>\n+          <string>&amp;Connect through SOCKS proxy (default proxy):</string>\n          </property>\n         </widget>\n        </item>\n        <item>\n-        <layout class=\"QHBoxLayout\" name=\"horizontalLayout_Network\">\n+        <layout class=\"QHBoxLayout\" name=\"horizontalLayout_1_Network\">\n          <item>\n           <widget class=\"QLabel\" name=\"proxyIpLabel\">\n            <property name=\"text\">\n@@ -173,14 +236,20 @@\n          </item>\n          <item>\n           <widget class=\"QValidatedLineEdit\" name=\"proxyIp\">\n+           <property name=\"minimumSize\">\n+            <size>\n+             <width>140</width>\n+             <height>0</height>\n+            </size>\n+           </property>\n            <property name=\"maximumSize\">\n             <size>\n              <width>140</width>\n              <height>16777215</height>\n             </size>\n            </property>\n            <property name=\"toolTip\">\n-            <string>IP address of the proxy (e.g. 127.0.0.1)</string>\n+            <string>IP address of the proxy (e.g. IPv4: 127.0.0.1 / IPv6: ::1)</string>\n            </property>\n           </widget>\n          </item>\n@@ -199,6 +268,12 @@\n          </item>\n          <item>\n           <widget class=\"QLineEdit\" name=\"proxyPort\">\n+           <property name=\"minimumSize\">\n+            <size>\n+             <width>55</width>\n+             <height>0</height>\n+            </size>\n+           </property>\n            <property name=\"maximumSize\">\n             <size>\n              <width>55</width>\n@@ -231,7 +306,7 @@\n           </widget>\n          </item>\n          <item>\n-          <spacer name=\"horizontalSpacer_Network\">\n+          <spacer name=\"horizontalSpacer_1_Network\">\n            <property name=\"orientation\">\n             <enum>Qt::Horizontal</enum>\n            </property>\n@@ -390,8 +465,67 @@\n      </widget>\n     </widget>\n    </item>\n+   <item>\n+    <widget class=\"QFrame\" name=\"frame\">\n+     <layout class=\"QVBoxLayout\" name=\"verticalLayout_Bottom\">\n+      <item>\n+       <layout class=\"QHBoxLayout\" name=\"horizontalLayout_Bottom\">\n+        <item>\n+         <widget class=\"QLabel\" name=\"overriddenByCommandLineInfoLabel\">\n+          <property name=\"text\">\n+           <string>Active command-line options that override above options: </string>\n+          </property>\n+          <property name=\"textFormat\">\n+           <enum>Qt::PlainText</enum>\n+          </property>\n+         </widget>\n+        </item>\n+        <item>\n+         <spacer name=\"horizontalSpacer_Bottom\">\n+          <property name=\"orientation\">\n+           <enum>Qt::Horizontal</enum>\n+          </property>\n+          <property name=\"sizeHint\" stdset=\"0\">\n+           <size>\n+            <width>40</width>\n+            <height>20</height>\n+           </size>\n+          </property>\n+         </spacer>\n+        </item>\n+       </layout>\n+      </item>\n+      <item>\n+       <widget class=\"QLabel\" name=\"overriddenByCommandLineLabel\">\n+        <property name=\"text\">\n+         <string/>\n+        </property>\n+        <property name=\"textFormat\">\n+         <enum>Qt::PlainText</enum>\n+        </property>\n+        <property name=\"wordWrap\">\n+         <bool>true</bool>\n+        </property>\n+       </widget>\n+      </item>\n+     </layout>\n+    </widget>\n+   </item>\n    <item>\n     <layout class=\"QHBoxLayout\" name=\"horizontalLayout_Buttons\">\n+     <item>\n+      <widget class=\"QPushButton\" name=\"resetButton\">\n+       <property name=\"toolTip\">\n+        <string>Reset all client options to default.</string>\n+       </property>\n+       <property name=\"text\">\n+        <string>&amp;Reset Options</string>\n+       </property>\n+       <property name=\"autoDefault\">\n+        <bool>false</bool>\n+       </property>\n+      </widget>\n+     </item>\n      <item>\n       <spacer name=\"horizontalSpacer_1\">\n        <property name=\"orientation\">\n@@ -407,6 +541,12 @@\n      </item>\n      <item>\n       <widget class=\"QLabel\" name=\"statusLabel\">\n+       <property name=\"minimumSize\">\n+        <size>\n+         <width>200</width>\n+         <height>0</height>\n+        </size>\n+       </property>\n        <property name=\"font\">\n         <font>\n          <weight>75</weight>\n@@ -454,16 +594,6 @@\n        </property>\n       </widget>\n      </item>\n-     <item>\n-      <widget class=\"QPushButton\" name=\"applyButton\">\n-       <property name=\"text\">\n-        <string>&amp;Apply</string>\n-       </property>\n-       <property name=\"autoDefault\">\n-        <bool>false</bool>\n-       </property>\n-      </widget>\n-     </item>\n     </layout>\n    </item>\n   </layout>\n@@ -473,17 +603,18 @@\n    <class>BitcoinAmountField</class>\n    <extends>QLineEdit</extends>\n    <header>bitcoinamountfield.h</header>\n-  </customwidget>\n-  <customwidget>\n-   <class>QValueComboBox</class>\n-   <extends>QComboBox</extends>\n-   <header>qvaluecombobox.h</header>\n+   <container>1</container>\n   </customwidget>\n   <customwidget>\n    <class>QValidatedLineEdit</class>\n    <extends>QLineEdit</extends>\n    <header>qvalidatedlineedit.h</header>\n   </customwidget>\n+  <customwidget>\n+   <class>QValueComboBox</class>\n+   <extends>QComboBox</extends>\n+   <header>qvaluecombobox.h</header>\n+  </customwidget>\n  </customwidgets>\n  <resources/>\n  <connections/>"
      },
      {
        "sha": "d024e3b7aa6375c50cde3fa69313716d7625a15e",
        "filename": "src/qt/optionsdialog.cpp",
        "status": "modified",
        "additions": 64,
        "deletions": 68,
        "changes": 132,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7e195e8459ad741368db6bb574981fccb1707268/src/qt/optionsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7e195e8459ad741368db6bb574981fccb1707268/src/qt/optionsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsdialog.cpp?ref=7e195e8459ad741368db6bb574981fccb1707268",
        "patch": "@@ -10,6 +10,7 @@\n #include \"ui_optionsdialog.h\"\n \n #include \"bitcoinunits.h\"\n+#include \"guiutil.h\"\n #include \"monitoreddatamapper.h\"\n #include \"optionsmodel.h\"\n \n@@ -19,17 +20,20 @@\n #include <QIntValidator>\n #include <QLocale>\n #include <QMessageBox>\n+#include <QTimer>\n \n OptionsDialog::OptionsDialog(QWidget *parent) :\n     QDialog(parent),\n     ui(new Ui::OptionsDialog),\n     model(0),\n     mapper(0),\n-    fRestartWarningDisplayed_Proxy(false),\n-    fRestartWarningDisplayed_Lang(false),\n     fProxyIpValid(true)\n {\n     ui->setupUi(this);\n+    GUIUtil::restoreWindowGeometry(\"nOptionsDialogWindow\", this->size(), this);\n+\n+    /* Main elements init */\n+    ui->databaseCache->setMaximum(sizeof(void*) > 4 ? 4096 : 1024);\n \n     /* Network elements init */\n #ifndef USE_UPNP\n@@ -40,6 +44,7 @@ OptionsDialog::OptionsDialog(QWidget *parent) :\n     ui->proxyPort->setEnabled(false);\n     ui->proxyPort->setValidator(new QIntValidator(1, 65535, this));\n \n+    /** SOCKS version is only selectable for default proxy and is always 5 for IPv6 and Tor */\n     ui->socksVersion->setEnabled(false);\n     ui->socksVersion->addItem(\"5\", 5);\n     ui->socksVersion->addItem(\"4\", 4);\n@@ -95,16 +100,13 @@ OptionsDialog::OptionsDialog(QWidget *parent) :\n     mapper->setSubmitPolicy(QDataWidgetMapper::ManualSubmit);\n     mapper->setOrientation(Qt::Vertical);\n \n-    /* enable apply button when data modified */\n-    connect(mapper, SIGNAL(viewModified()), this, SLOT(enableApplyButton()));\n-    /* disable apply button when new data loaded */\n-    connect(mapper, SIGNAL(currentIndexChanged(int)), this, SLOT(disableApplyButton()));\n     /* setup/change UI elements when proxy IP is invalid/valid */\n-    connect(this, SIGNAL(proxyIpValid(QValidatedLineEdit *, bool)), this, SLOT(handleProxyIpValid(QValidatedLineEdit *, bool)));\n+    connect(this, SIGNAL(proxyIpChecks(QValidatedLineEdit *, int)), this, SLOT(doProxyIpChecks(QValidatedLineEdit *, int)));\n }\n \n OptionsDialog::~OptionsDialog()\n {\n+    GUIUtil::saveWindowGeometry(\"nOptionsDialogWindow\", this);\n     delete ui;\n }\n \n@@ -114,6 +116,15 @@ void OptionsDialog::setModel(OptionsModel *model)\n \n     if(model)\n     {\n+        /* check if client restart is needed and show persistent message */\n+        if (model->isRestartRequired())\n+            showRestartWarning(true);\n+\n+        QString strLabel = model->getOverriddenByCommandLine();\n+        if (strLabel.isEmpty())\n+            strLabel = tr(\"none\");\n+        ui->overriddenByCommandLineLabel->setText(strLabel);\n+\n         connect(model, SIGNAL(displayUnitChanged(int)), this, SLOT(updateDisplayUnit()));\n \n         mapper->setModel(model);\n@@ -124,18 +135,24 @@ void OptionsDialog::setModel(OptionsModel *model)\n     /* update the display unit, to not use the default (\"BTC\") */\n     updateDisplayUnit();\n \n-    /* warn only when language selection changes by user action (placed here so init via mapper doesn't trigger this) */\n-    connect(ui->lang, SIGNAL(valueChanged()), this, SLOT(showRestartWarning_Lang()));\n+    /* warn when one of the following settings changes by user action (placed here so init via mapper doesn't trigger them) */\n \n-    /* disable apply button after settings are loaded as there is nothing to save */\n-    disableApplyButton();\n+    /* Main */\n+    connect(ui->databaseCache, SIGNAL(valueChanged(int)), this, SLOT(showRestartWarning()));\n+    connect(ui->threadsScriptVerif, SIGNAL(valueChanged(int)), this, SLOT(showRestartWarning()));\n+    /* Network */\n+    connect(ui->connectSocks, SIGNAL(clicked(bool)), this, SLOT(showRestartWarning()));\n+    /* Display */\n+    connect(ui->lang, SIGNAL(valueChanged()), this, SLOT(showRestartWarning()));\n }\n \n void OptionsDialog::setMapper()\n {\n     /* Main */\n     mapper->addMapping(ui->transactionFee, OptionsModel::Fee);\n     mapper->addMapping(ui->bitcoinAtStartup, OptionsModel::StartAtStartup);\n+    mapper->addMapping(ui->threadsScriptVerif, OptionsModel::ThreadsScriptVerif);\n+    mapper->addMapping(ui->databaseCache, OptionsModel::DatabaseCache);\n \n     /* Network */\n     mapper->addMapping(ui->mapPortUpnp, OptionsModel::MapPortUPnP);\n@@ -158,31 +175,20 @@ void OptionsDialog::setMapper()\n     mapper->addMapping(ui->coinControlFeatures, OptionsModel::CoinControlFeatures);\n }\n \n-void OptionsDialog::enableApplyButton()\n-{\n-    ui->applyButton->setEnabled(true);\n-}\n-\n-void OptionsDialog::disableApplyButton()\n-{\n-    ui->applyButton->setEnabled(false);\n-}\n-\n-void OptionsDialog::enableSaveButtons()\n+void OptionsDialog::enableOkButton()\n {\n-    /* prevent enabling of the save buttons when data modified, if there is an invalid proxy address present */\n+    /* prevent enabling of the OK button when data modified, if there is an invalid proxy address present */\n     if(fProxyIpValid)\n-        setSaveButtonState(true);\n+        setOkButtonState(true);\n }\n \n-void OptionsDialog::disableSaveButtons()\n+void OptionsDialog::disableOkButton()\n {\n-    setSaveButtonState(false);\n+    setOkButtonState(false);\n }\n \n-void OptionsDialog::setSaveButtonState(bool fState)\n+void OptionsDialog::setOkButtonState(bool fState)\n {\n-    ui->applyButton->setEnabled(fState);\n     ui->okButton->setEnabled(fState);\n }\n \n@@ -192,24 +198,15 @@ void OptionsDialog::on_resetButton_clicked()\n     {\n         // confirmation dialog\n         QMessageBox::StandardButton btnRetVal = QMessageBox::question(this, tr(\"Confirm options reset\"),\n-            tr(\"Some settings may require a client restart to take effect.\") + \"<br><br>\" + tr(\"Do you want to proceed?\"),\n+            tr(\"Client restart required to activate changes.\") + \"<br><br>\" + tr(\"Client will be shutdown, do you want to proceed?\"),\n             QMessageBox::Yes | QMessageBox::Cancel, QMessageBox::Cancel);\n \n         if(btnRetVal == QMessageBox::Cancel)\n             return;\n \n-        disableApplyButton();\n-\n-        /* disable restart warning messages display */\n-        fRestartWarningDisplayed_Lang = fRestartWarningDisplayed_Proxy = true;\n-\n-        /* reset all options and save the default values (QSettings) */\n+        /* reset all options and close Bitcoin-Qt */\n         model->Reset();\n-        mapper->toFirst();\n-        mapper->submit();\n-\n-        /* re-enable restart warning messages display */\n-        fRestartWarningDisplayed_Lang = fRestartWarningDisplayed_Proxy = false;\n+        QApplication::quit();\n     }\n }\n \n@@ -224,28 +221,26 @@ void OptionsDialog::on_cancelButton_clicked()\n     reject();\n }\n \n-void OptionsDialog::on_applyButton_clicked()\n+void OptionsDialog::showRestartWarning(bool fPersistent)\n {\n-    mapper->submit();\n-    disableApplyButton();\n-}\n+    ui->statusLabel->setStyleSheet(\"QLabel { color: red; }\");\n \n-void OptionsDialog::showRestartWarning_Proxy()\n-{\n-    if(!fRestartWarningDisplayed_Proxy)\n+    if(fPersistent)\n+    {\n+        ui->statusLabel->setText(tr(\"Client restart required to activate changes.\"));\n+    }\n+    else\n     {\n-        QMessageBox::warning(this, tr(\"Warning\"), tr(\"This setting will take effect after restarting Bitcoin.\"), QMessageBox::Ok);\n-        fRestartWarningDisplayed_Proxy = true;\n+        ui->statusLabel->setText(tr(\"This change would require a client restart.\"));\n+        // clear non-persistent status label after 10 seconds\n+        // Todo: should perhaps be a class attribute, if we extend the use of statusLabel\n+        QTimer::singleShot(10000, this, SLOT(clearStatusLabel()));\n     }\n }\n \n-void OptionsDialog::showRestartWarning_Lang()\n+void OptionsDialog::clearStatusLabel()\n {\n-    if(!fRestartWarningDisplayed_Lang)\n-    {\n-        QMessageBox::warning(this, tr(\"Warning\"), tr(\"This setting will take effect after restarting Bitcoin.\"), QMessageBox::Ok);\n-        fRestartWarningDisplayed_Lang = true;\n-    }\n+    ui->statusLabel->clear();\n }\n \n void OptionsDialog::updateDisplayUnit()\n@@ -257,22 +252,25 @@ void OptionsDialog::updateDisplayUnit()\n     }\n }\n \n-void OptionsDialog::handleProxyIpValid(QValidatedLineEdit *object, bool fState)\n+void OptionsDialog::doProxyIpChecks(QValidatedLineEdit *pUiProxyIp, int nProxyPort)\n {\n-    // this is used in a check before re-enabling the save buttons\n-    fProxyIpValid = fState;\n+    Q_UNUSED(nProxyPort);\n \n-    if(fProxyIpValid)\n+    const std::string strAddrProxy = pUiProxyIp->text().toStdString();\n+    CService addrProxy;\n+\n+    /* Check for a valid IPv4 / IPv6 address */\n+    if (!(fProxyIpValid = LookupNumeric(strAddrProxy.c_str(), addrProxy)))\n     {\n-        enableSaveButtons();\n-        ui->statusLabel->clear();\n+        disableOkButton();\n+        pUiProxyIp->setValid(false);\n+        ui->statusLabel->setStyleSheet(\"QLabel { color: red; }\");\n+        ui->statusLabel->setText(tr(\"The supplied proxy address is invalid.\"));\n     }\n     else\n     {\n-        disableSaveButtons();\n-        object->setValid(fProxyIpValid);\n-        ui->statusLabel->setStyleSheet(\"QLabel { color: red; }\");\n-        ui->statusLabel->setText(tr(\"The supplied proxy address is invalid.\"));\n+        enableOkButton();\n+        ui->statusLabel->clear();\n     }\n }\n \n@@ -282,9 +280,7 @@ bool OptionsDialog::eventFilter(QObject *object, QEvent *event)\n     {\n         if(object == ui->proxyIp)\n         {\n-            CService addr;\n-            /* Check proxyIp for a valid IPv4/IPv6 address and emit the proxyIpValid signal */\n-            emit proxyIpValid(ui->proxyIp, LookupNumeric(ui->proxyIp->text().toStdString().c_str(), addr));\n+            emit proxyIpChecks(ui->proxyIp, ui->proxyPort->text().toInt());\n         }\n     }\n     return QDialog::eventFilter(object, event);"
      },
      {
        "sha": "6b62069660ff292ed66eae01b29b79842a4d6796",
        "filename": "src/qt/optionsdialog.h",
        "status": "modified",
        "additions": 10,
        "deletions": 17,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7e195e8459ad741368db6bb574981fccb1707268/src/qt/optionsdialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7e195e8459ad741368db6bb574981fccb1707268/src/qt/optionsdialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsdialog.h?ref=7e195e8459ad741368db6bb574981fccb1707268",
        "patch": "@@ -31,35 +31,28 @@ class OptionsDialog : public QDialog\n     bool eventFilter(QObject *object, QEvent *event);\n \n private slots:\n-    /* enable only apply button */\n-    void enableApplyButton();\n-    /* disable only apply button */\n-    void disableApplyButton();\n-    /* enable apply button and OK button */\n-    void enableSaveButtons();\n-    /* disable apply button and OK button */\n-    void disableSaveButtons();\n-    /* set apply button and OK button state (enabled / disabled) */\n-    void setSaveButtonState(bool fState);\n+    /* enable OK button */\n+    void enableOkButton();\n+    /* disable OK button */\n+    void disableOkButton();\n+    /* set OK button state (enabled / disabled) */\n+    void setOkButtonState(bool fState);\n     void on_resetButton_clicked();\n     void on_okButton_clicked();\n     void on_cancelButton_clicked();\n-    void on_applyButton_clicked();\n \n-    void showRestartWarning_Proxy();\n-    void showRestartWarning_Lang();\n+    void showRestartWarning(bool fPersistent = false);\n+    void clearStatusLabel();\n     void updateDisplayUnit();\n-    void handleProxyIpValid(QValidatedLineEdit *object, bool fState);\n+    void doProxyIpChecks(QValidatedLineEdit *pUiProxyIp, int nProxyPort);\n \n signals:\n-    void proxyIpValid(QValidatedLineEdit *object, bool fValid);\n+    void proxyIpChecks(QValidatedLineEdit *pUiProxyIp, int nProxyPort);\n \n private:\n     Ui::OptionsDialog *ui;\n     OptionsModel *model;\n     MonitoredDataMapper *mapper;\n-    bool fRestartWarningDisplayed_Proxy;\n-    bool fRestartWarningDisplayed_Lang;\n     bool fProxyIpValid;\n };\n "
      },
      {
        "sha": "c7817a94a8eeaaa62a62378820828a6976724d5b",
        "filename": "src/qt/optionsmodel.cpp",
        "status": "modified",
        "additions": 179,
        "deletions": 108,
        "changes": 287,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7e195e8459ad741368db6bb574981fccb1707268/src/qt/optionsmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7e195e8459ad741368db6bb574981fccb1707268/src/qt/optionsmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsmodel.cpp?ref=7e195e8459ad741368db6bb574981fccb1707268",
        "patch": "@@ -18,86 +18,122 @@\n #include \"walletdb.h\"\n \n #include <QSettings>\n+#include <QStringList>\n \n OptionsModel::OptionsModel(QObject *parent) :\n     QAbstractListModel(parent)\n {\n     Init();\n }\n \n-bool static ApplyProxySettings()\n-{\n-    QSettings settings;\n-    CService addrProxy(settings.value(\"addrProxy\", \"127.0.0.1:9050\").toString().toStdString());\n-    int nSocksVersion(settings.value(\"nSocksVersion\", 5).toInt());\n-    if (!settings.value(\"fUseProxy\", false).toBool()) {\n-        addrProxy = CService();\n-        nSocksVersion = 0;\n-        return false;\n-    }\n-    if (nSocksVersion && !addrProxy.IsValid())\n-        return false;\n-    if (!IsLimited(NET_IPV4))\n-        SetProxy(NET_IPV4, addrProxy, nSocksVersion);\n-    if (nSocksVersion > 4) {\n-#ifdef USE_IPV6\n-        if (!IsLimited(NET_IPV6))\n-            SetProxy(NET_IPV6, addrProxy, nSocksVersion);\n-#endif\n-        SetNameProxy(addrProxy, nSocksVersion);\n-    }\n-    return true;\n-}\n-\n+// Writes all missing QSettings with their default values\n void OptionsModel::Init()\n {\n     QSettings settings;\n \n+    // Ensure restart flag is unset on client startup\n+    setRestartRequired(false);\n+\n     // These are Qt-only settings:\n-    nDisplayUnit = settings.value(\"nDisplayUnit\", BitcoinUnits::BTC).toInt();\n+\n+    // Window\n+    if (!settings.contains(\"fMinimizeToTray\"))\n+        settings.setValue(\"fMinimizeToTray\", false);\n+    fMinimizeToTray = settings.value(\"fMinimizeToTray\").toBool();\n+\n+    if (!settings.contains(\"fMinimizeOnClose\"))\n+        settings.setValue(\"fMinimizeOnClose\", false);\n+    fMinimizeOnClose = settings.value(\"fMinimizeOnClose\").toBool();\n+\n+    // Display\n+    if (!settings.contains(\"nDisplayUnit\"))\n+        settings.setValue(\"nDisplayUnit\", BitcoinUnits::BTC);\n+    nDisplayUnit = settings.value(\"nDisplayUnit\").toInt();\n+\n+    if (!settings.contains(\"bDisplayAddresses\"))\n+        settings.setValue(\"bDisplayAddresses\", false);\n     bDisplayAddresses = settings.value(\"bDisplayAddresses\", false).toBool();\n-    fMinimizeToTray = settings.value(\"fMinimizeToTray\", false).toBool();\n-    fMinimizeOnClose = settings.value(\"fMinimizeOnClose\", false).toBool();\n-    nTransactionFee = settings.value(\"nTransactionFee\").toLongLong();\n-    language = settings.value(\"language\", \"\").toString();\n+\n+    if (!settings.contains(\"fCoinControlFeatures\"))\n+        settings.setValue(\"fCoinControlFeatures\", false);\n     fCoinControlFeatures = settings.value(\"fCoinControlFeatures\", false).toBool();\n \n-    // These are shared with core Bitcoin; we want\n-    // command-line options to override the GUI settings:\n-    if (settings.contains(\"fUseUPnP\"))\n-        SoftSetBoolArg(\"-upnp\", settings.value(\"fUseUPnP\").toBool());\n-    if (settings.contains(\"addrProxy\") && settings.value(\"fUseProxy\").toBool())\n-        SoftSetArg(\"-proxy\", settings.value(\"addrProxy\").toString().toStdString());\n-    if (settings.contains(\"nSocksVersion\") && settings.value(\"fUseProxy\").toBool())\n-        SoftSetArg(\"-socks\", settings.value(\"nSocksVersion\").toString().toStdString());\n-    if (!language.isEmpty())\n-        SoftSetArg(\"-lang\", language.toStdString());\n+    // These are shared with the core or have a command-line parameter\n+    // and we want command-line parameters to overwrite the GUI settings.\n+    //\n+    // If setting doesn't exist create it with defaults.\n+    //\n+    // If SoftSetArg() or SoftSetBoolArg() return false we were overridden\n+    // by command-line and show this in the UI.\n+\n+    // Main\n+    if (!settings.contains(\"nTransactionFee\"))\n+        settings.setValue(\"nTransactionFee\", 0);\n+\n+    if (!settings.contains(\"nDatabaseCache\"))\n+        settings.setValue(\"nDatabaseCache\", 25);\n+    if (!SoftSetArg(\"-dbcache\", settings.value(\"nDatabaseCache\").toString().toStdString()))\n+        strOverriddenByCommandLine += \"-dbcache \";\n+\n+    if (!settings.contains(\"nThreadsScriptVerif\"))\n+        settings.setValue(\"nThreadsScriptVerif\", 0);\n+    if (!SoftSetArg(\"-par\", settings.value(\"nThreadsScriptVerif\").toString().toStdString()))\n+        strOverriddenByCommandLine += \"-par \";\n+\n+    // Network\n+    if (!settings.contains(\"fUseUPnP\"))\n+#ifdef USE_UPNP\n+        settings.setValue(\"fUseUPnP\", true);\n+#else\n+        settings.setValue(\"fUseUPnP\", false);\n+#endif\t\n+    if (!SoftSetBoolArg(\"-upnp\", settings.value(\"fUseUPnP\").toBool()))\n+        strOverriddenByCommandLine += \"-upnp \";\n+\n+    if (!settings.contains(\"fUseProxy\"))\n+        settings.setValue(\"fUseProxy\", false);\n+    if (!settings.contains(\"addrProxy\"))\n+        settings.setValue(\"addrProxy\", \"127.0.0.1:9050\");\n+    // Only try to set -proxy, if user has enabled fUseProxy\n+    if (settings.value(\"fUseProxy\").toBool() && !SoftSetArg(\"-proxy\", settings.value(\"addrProxy\").toString().toStdString()))\n+        strOverriddenByCommandLine += \"-proxy \";\n+    if (!settings.contains(\"nSocksVersion\"))\n+        settings.setValue(\"nSocksVersion\", 5);\n+    // Only try to set -socks, if user has enabled fUseProxy\n+    if (settings.value(\"fUseProxy\").toBool() && !SoftSetArg(\"-socks\", settings.value(\"nSocksVersion\").toString().toStdString()))\n+        strOverriddenByCommandLine += \"-socks \";\n+\n+    // Display\n+    if (!settings.contains(\"language\"))\n+        settings.setValue(\"language\", \"\");\n+    if (!SoftSetArg(\"-lang\", settings.value(\"language\").toString().toStdString()))\n+        strOverriddenByCommandLine += \"-lang\";\n+\n+    language = settings.value(\"language\").toString();\n }\n \n void OptionsModel::Reset()\n {\n     QSettings settings;\n \n-    // Remove all entries in this QSettings object\n+    // Remove all entries from our QSettings object\n     settings.clear();\n \n     // default setting for OptionsModel::StartAtStartup - disabled\n     if (GUIUtil::GetStartOnSystemStartup())\n         GUIUtil::SetStartOnSystemStartup(false);\n \n-    // Re-Init to get default values\n-    Init();\n-\n     // Ensure Upgrade() is not running again by setting the bImportFinished flag\n     settings.setValue(\"bImportFinished\", true);\n }\n \n-bool OptionsModel::Upgrade()\n+void OptionsModel::Upgrade()\n {\n     QSettings settings;\n \n+    // Already upgraded\n     if (settings.contains(\"bImportFinished\"))\n-        return false; // Already upgraded\n+        return;\n \n     settings.setValue(\"bImportFinished\", true);\n \n@@ -145,18 +181,16 @@ bool OptionsModel::Upgrade()\n             walletdb.EraseSetting(\"addrProxy\");\n         }\n     }\n-    ApplyProxySettings();\n-    Init();\n \n-    return true;\n+    Init();\n }\n \n-\n int OptionsModel::rowCount(const QModelIndex & parent) const\n {\n     return OptionIDRowCount;\n }\n \n+// read QSettings values and return them\n QVariant OptionsModel::data(const QModelIndex & index, int role) const\n {\n     if(role == Qt::EditRole)\n@@ -165,59 +199,63 @@ QVariant OptionsModel::data(const QModelIndex & index, int role) const\n         switch(index.row())\n         {\n         case StartAtStartup:\n-            return QVariant(GUIUtil::GetStartOnSystemStartup());\n+            return GUIUtil::GetStartOnSystemStartup();\n         case MinimizeToTray:\n-            return QVariant(fMinimizeToTray);\n+            return fMinimizeToTray;\n         case MapPortUPnP:\n #ifdef USE_UPNP\n-            return settings.value(\"fUseUPnP\", GetBoolArg(\"-upnp\", true));\n+            return settings.value(\"fUseUPnP\");\n #else\n-            return QVariant(false);\n+            return false;\n #endif\n         case MinimizeOnClose:\n-            return QVariant(fMinimizeOnClose);\n-        case ProxyUse: {\n-            proxyType proxy;\n-            return QVariant(GetProxy(NET_IPV4, proxy));\n-        }\n+            return fMinimizeOnClose;\n+\n+        // default proxy\n+        case ProxyUse:\n+            return settings.value(\"fUseProxy\", false);\n         case ProxyIP: {\n-            proxyType proxy;\n-            if (GetProxy(NET_IPV4, proxy))\n-                return QVariant(QString::fromStdString(proxy.first.ToStringIP()));\n-            else\n-                return QVariant(QString::fromStdString(\"127.0.0.1\"));\n+            // contains IP at index 0 and port at index 1\n+            QStringList strlIpPort = settings.value(\"addrProxy\").toString().split(\":\", QString::SkipEmptyParts);\n+            return strlIpPort.at(0);\n         }\n         case ProxyPort: {\n-            proxyType proxy;\n-            if (GetProxy(NET_IPV4, proxy))\n-                return QVariant(proxy.first.GetPort());\n-            else\n-                return QVariant(9050);\n-        }\n-        case ProxySocksVersion: {\n-            proxyType proxy;\n-            if (GetProxy(NET_IPV4, proxy))\n-                return QVariant(proxy.second);\n-            else\n-                return QVariant(5);\n+            // contains IP at index 0 and port at index 1\n+            QStringList strlIpPort = settings.value(\"addrProxy\").toString().split(\":\", QString::SkipEmptyParts);\n+            return strlIpPort.at(1);\n         }\n+        case ProxySocksVersion:\n+            return settings.value(\"nSocksVersion\", 5);\n+\n         case Fee:\n-            return QVariant((qint64) nTransactionFee);\n+            // Attention: Init() is called before nTransactionFee is set in AppInit2()!\n+            // To ensure we can change the fee on-the-fly update our QSetting when\n+            // opening OptionsDialog, which queries Fee via the mapper.\n+            if (nTransactionFee != settings.value(\"nTransactionFee\").toLongLong())\n+                settings.setValue(\"nTransactionFee\", (qint64)nTransactionFee);\n+            // Todo: Consider to revert back to use just nTransactionFee here, if we don't want\n+            // -paytxfee to update our QSettings!\n+            return settings.value(\"nTransactionFee\");\n         case DisplayUnit:\n-            return QVariant(nDisplayUnit);\n+            return nDisplayUnit;\n         case DisplayAddresses:\n-            return QVariant(bDisplayAddresses);\n+            return bDisplayAddresses;\n         case Language:\n-            return settings.value(\"language\", \"\");\n+            return settings.value(\"language\");\n         case CoinControlFeatures:\n-            return QVariant(fCoinControlFeatures);\n+            return fCoinControlFeatures;\n+        case DatabaseCache:\n+            return settings.value(\"nDatabaseCache\");\n+        case ThreadsScriptVerif:\n+            return settings.value(\"nThreadsScriptVerif\");\n         default:\n             return QVariant();\n         }\n     }\n     return QVariant();\n }\n \n+// write QSettings values\n bool OptionsModel::setData(const QModelIndex & index, const QVariant & value, int role)\n {\n     bool successful = true; /* set to false on parse error */\n@@ -233,52 +271,58 @@ bool OptionsModel::setData(const QModelIndex & index, const QVariant & value, in\n             fMinimizeToTray = value.toBool();\n             settings.setValue(\"fMinimizeToTray\", fMinimizeToTray);\n             break;\n-        case MapPortUPnP:\n+        case MapPortUPnP: // core option - can be changed on-the-fly\n             settings.setValue(\"fUseUPnP\", value.toBool());\n             MapPort(value.toBool());\n             break;\n         case MinimizeOnClose:\n             fMinimizeOnClose = value.toBool();\n             settings.setValue(\"fMinimizeOnClose\", fMinimizeOnClose);\n             break;\n+\n+        // default proxy\n         case ProxyUse:\n-            settings.setValue(\"fUseProxy\", value.toBool());\n-            successful = ApplyProxySettings();\n+            if (settings.value(\"fUseProxy\") != value) {\n+                settings.setValue(\"fUseProxy\", value.toBool());\n+                setRestartRequired(true);\n+            }\n             break;\n         case ProxyIP: {\n-            proxyType proxy;\n-            proxy.first = CService(\"127.0.0.1\", 9050);\n-            GetProxy(NET_IPV4, proxy);\n-\n-            CNetAddr addr(value.toString().toStdString());\n-            proxy.first.SetIP(addr);\n-            settings.setValue(\"addrProxy\", proxy.first.ToStringIPPort().c_str());\n-            successful = ApplyProxySettings();\n+            // contains current IP at index 0 and current port at index 1\n+            QStringList strlIpPort = settings.value(\"addrProxy\").toString().split(\":\", QString::SkipEmptyParts);\n+            // if that key doesn't exist or has a changed IP\n+            if (!settings.contains(\"addrProxy\") || strlIpPort.at(0) != value.toString()) {\n+                // construct new value from new IP and current port\n+                QString strNewValue = value.toString() + \":\" + strlIpPort.at(1);\n+                settings.setValue(\"addrProxy\", strNewValue);\n+                setRestartRequired(true);\n+            }\n         }\n         break;\n         case ProxyPort: {\n-            proxyType proxy;\n-            proxy.first = CService(\"127.0.0.1\", 9050);\n-            GetProxy(NET_IPV4, proxy);\n-\n-            proxy.first.SetPort(value.toInt());\n-            settings.setValue(\"addrProxy\", proxy.first.ToStringIPPort().c_str());\n-            successful = ApplyProxySettings();\n+            // contains current IP at index 0 and current port at index 1\n+            QStringList strlIpPort = settings.value(\"addrProxy\").toString().split(\":\", QString::SkipEmptyParts);\n+            // if that key doesn't exist or has a changed port\n+            if (!settings.contains(\"addrProxy\") || strlIpPort.at(1) != value.toString()) {\n+                // construct new value from current IP and new port\n+                QString strNewValue = strlIpPort.at(0) + \":\" + value.toString();\n+                settings.setValue(\"addrProxy\", strNewValue);\n+                setRestartRequired(true);\n+            }\n         }\n         break;\n         case ProxySocksVersion: {\n-            proxyType proxy;\n-            proxy.second = 5;\n-            GetProxy(NET_IPV4, proxy);\n-\n-            proxy.second = value.toInt();\n-            settings.setValue(\"nSocksVersion\", proxy.second);\n-            successful = ApplyProxySettings();\n+            if (settings.value(\"nSocksVersion\") != value) {\n+                settings.setValue(\"nSocksVersion\", value.toInt());\n+                setRestartRequired(true);\n+            }\n         }\n         break;\n-        case Fee:\n+\n+        case Fee: // core option - can be changed on-the-fly\n+            // Todo: Add is valid check  and warn via message, if not\n             nTransactionFee = value.toLongLong();\n-            settings.setValue(\"nTransactionFee\", (qint64) nTransactionFee);\n+            settings.setValue(\"nTransactionFee\", (qint64)nTransactionFee);\n             emit transactionFeeChanged(nTransactionFee);\n             break;\n         case DisplayUnit:\n@@ -291,13 +335,28 @@ bool OptionsModel::setData(const QModelIndex & index, const QVariant & value, in\n             settings.setValue(\"bDisplayAddresses\", bDisplayAddresses);\n             break;\n         case Language:\n-            settings.setValue(\"language\", value);\n+            if (settings.value(\"language\") != value) {\n+                settings.setValue(\"language\", value);\n+                setRestartRequired(true);\n+            }\n             break;\n         case CoinControlFeatures:\n             fCoinControlFeatures = value.toBool();\n             settings.setValue(\"fCoinControlFeatures\", fCoinControlFeatures);\n             emit coinControlFeaturesChanged(fCoinControlFeatures);\n             break;\n+        case DatabaseCache:\n+            if (settings.value(\"nDatabaseCache\") != value) {\n+                settings.setValue(\"nDatabaseCache\", value);\n+                setRestartRequired(true);\n+            }\n+            break;\n+        case ThreadsScriptVerif:\n+            if (settings.value(\"nThreadsScriptVerif\") != value) {\n+                settings.setValue(\"nThreadsScriptVerif\", value);\n+                setRestartRequired(true);\n+            }\n+            break;\n         default:\n             break;\n         }\n@@ -317,3 +376,15 @@ bool OptionsModel::getProxySettings(QString& proxyIP, quint16 &proxyPort) const\n     proxyPort = addrProxy.GetPort();\n     return true;\n }\n+\n+void OptionsModel::setRestartRequired(bool fRequired)\n+{\n+    QSettings settings;\n+    return settings.setValue(\"fRestartRequired\", fRequired);\n+}\n+\n+bool OptionsModel::isRestartRequired()\n+{\n+    QSettings settings;\n+    return settings.value(\"fRestartRequired\", false).toBool();\n+}"
      },
      {
        "sha": "d05cb46746075ff8b0166884d135d7271c5a1e9d",
        "filename": "src/qt/optionsmodel.h",
        "status": "modified",
        "additions": 13,
        "deletions": 4,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7e195e8459ad741368db6bb574981fccb1707268/src/qt/optionsmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7e195e8459ad741368db6bb574981fccb1707268/src/qt/optionsmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsmodel.h?ref=7e195e8459ad741368db6bb574981fccb1707268",
        "patch": "@@ -34,14 +34,16 @@ class OptionsModel : public QAbstractListModel\n         DisplayAddresses,       // bool\n         Language,               // QString\n         CoinControlFeatures,    // bool\n+        ThreadsScriptVerif,     // int\n+        DatabaseCache,          // int\n         OptionIDRowCount,\n     };\n \n     void Init();\n     void Reset();\n \n     /* Migrate settings from wallet.dat after app initialization */\n-    bool Upgrade(); /* returns true if settings upgraded */\n+    void Upgrade();\n \n     int rowCount(const QModelIndex & parent = QModelIndex()) const;\n     QVariant data(const QModelIndex & index, int role = Qt::DisplayRole) const;\n@@ -52,17 +54,24 @@ class OptionsModel : public QAbstractListModel\n     bool getMinimizeOnClose() { return fMinimizeOnClose; }\n     int getDisplayUnit() { return nDisplayUnit; }\n     bool getDisplayAddresses() { return bDisplayAddresses; }\n-    QString getLanguage() { return language; }\n     bool getProxySettings(QString& proxyIP, quint16 &proxyPort) const;\n     bool getCoinControlFeatures() { return fCoinControlFeatures; }\n+    const QString& getOverriddenByCommandLine() { return strOverriddenByCommandLine; }\n+\n+    /* Restart flag helper */\n+    void setRestartRequired(bool fRequired);\n+    bool isRestartRequired();\n \n private:\n-    int nDisplayUnit;\n-    bool bDisplayAddresses;\n+    /* Qt-only settings */\n     bool fMinimizeToTray;\n     bool fMinimizeOnClose;\n     QString language;\n+    int nDisplayUnit;\n+    bool bDisplayAddresses;\n     bool fCoinControlFeatures;\n+    /* settings that were overriden by command-line */\n+    QString strOverriddenByCommandLine;\n \n signals:\n     void displayUnitChanged(int unit);"
      }
    ]
  },
  {
    "sha": "04f58ffd9d2deed7f3ba872e242d967a550ff1d6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNGY1OGZmZDlkMmRlZWQ3ZjNiYTg3MmUyNDJkOTY3YTU1MGZmMWQ2",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-06T15:30:19Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-06T15:30:19Z"
      },
      "message": "qt: Better status text for mined transactions\n\nFixes ancient issue #614.",
      "tree": {
        "sha": "cf15631d0e46fbb4da3502ab70408bd3e8021762",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cf15631d0e46fbb4da3502ab70408bd3e8021762"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/04f58ffd9d2deed7f3ba872e242d967a550ff1d6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/04f58ffd9d2deed7f3ba872e242d967a550ff1d6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/04f58ffd9d2deed7f3ba872e242d967a550ff1d6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/04f58ffd9d2deed7f3ba872e242d967a550ff1d6/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "65515c0d05678334a52f686eaaa2bac1ff285a5a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/65515c0d05678334a52f686eaaa2bac1ff285a5a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/65515c0d05678334a52f686eaaa2bac1ff285a5a"
      }
    ],
    "stats": {
      "total": 44,
      "additions": 23,
      "deletions": 21
    },
    "files": [
      {
        "sha": "b29be7e0cbc129e5b309545a9e009019e3df905d",
        "filename": "src/qt/transactiontablemodel.cpp",
        "status": "modified",
        "additions": 23,
        "deletions": 21,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/04f58ffd9d2deed7f3ba872e242d967a550ff1d6/src/qt/transactiontablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/04f58ffd9d2deed7f3ba872e242d967a550ff1d6/src/qt/transactiontablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactiontablemodel.cpp?ref=04f58ffd9d2deed7f3ba872e242d967a550ff1d6",
        "patch": "@@ -285,38 +285,40 @@ QString TransactionTableModel::formatTxStatus(const TransactionRecord *wtx) cons\n {\n     QString status;\n \n-    switch(wtx->status.status)\n-    {\n-    case TransactionStatus::OpenUntilBlock:\n-        status = tr(\"Open for %n more block(s)\",\"\",wtx->status.open_for);\n-        break;\n-    case TransactionStatus::OpenUntilDate:\n-        status = tr(\"Open until %1\").arg(GUIUtil::dateTimeStr(wtx->status.open_for));\n-        break;\n-    case TransactionStatus::Offline:\n-        status = tr(\"Offline (%1 confirmations)\").arg(wtx->status.depth);\n-        break;\n-    case TransactionStatus::Unconfirmed:\n-        status = tr(\"Unconfirmed (%1 of %2 confirmations)\").arg(wtx->status.depth).arg(TransactionRecord::NumConfirmations);\n-        break;\n-    case TransactionStatus::HaveConfirmations:\n-        status = tr(\"Confirmed (%1 confirmations)\").arg(wtx->status.depth);\n-        break;\n-    }\n     if(wtx->type == TransactionRecord::Generated)\n     {\n         switch(wtx->status.maturity)\n         {\n         case TransactionStatus::Immature:\n-            status += \"\\n\" + tr(\"Mined balance will be available when it matures in %n more block(s)\", \"\", wtx->status.matures_in);\n+            status = tr(\"Immature (%1 confirmations, will be available after %2)\").arg(wtx->status.depth).arg(wtx->status.depth + wtx->status.matures_in);\n             break;\n         case TransactionStatus::Mature:\n+            status = tr(\"Confirmed (%1 confirmations)\").arg(wtx->status.depth);\n             break;\n         case TransactionStatus::MaturesWarning:\n-            status += \"\\n\" + tr(\"This block was not received by any other nodes and will probably not be accepted!\");\n+            status = tr(\"This block was not received by any other nodes and will probably not be accepted!\");\n             break;\n         case TransactionStatus::NotAccepted:\n-            status += \"\\n\" + tr(\"Generated but not accepted\");\n+            status = tr(\"Generated but not accepted\");\n+            break;\n+        }\n+    } else {\n+        switch(wtx->status.status)\n+        {\n+        case TransactionStatus::OpenUntilBlock:\n+            status = tr(\"Open for %n more block(s)\",\"\",wtx->status.open_for);\n+            break;\n+        case TransactionStatus::OpenUntilDate:\n+            status = tr(\"Open until %1\").arg(GUIUtil::dateTimeStr(wtx->status.open_for));\n+            break;\n+        case TransactionStatus::Offline:\n+            status = tr(\"Offline (%1 confirmations)\").arg(wtx->status.depth);\n+            break;\n+        case TransactionStatus::Unconfirmed:\n+            status = tr(\"Unconfirmed (%1 of %2 confirmations)\").arg(wtx->status.depth).arg(TransactionRecord::NumConfirmations);\n+            break;\n+        case TransactionStatus::HaveConfirmations:\n+            status = tr(\"Confirmed (%1 confirmations)\").arg(wtx->status.depth);\n             break;\n         }\n     }"
      }
    ]
  },
  {
    "sha": "d696820b45d9b6be1c21a65f2c8ed3b260938cb7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkNjk2ODIwYjQ1ZDliNmJlMWMyMWE2NWYyYzhlZDNiMjYwOTM4Y2I3",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-07T08:09:31Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-07T08:12:56Z"
      },
      "message": "build: Correctly put boost at end of LDADD\n\nThis fixes linking issues when statically linking\n(thanks @imwuzhh).",
      "tree": {
        "sha": "3602f6d9377dc812798c4a2e8d52c42b66a03fb9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3602f6d9377dc812798c4a2e8d52c42b66a03fb9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d696820b45d9b6be1c21a65f2c8ed3b260938cb7",
      "comment_count": 1,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJSy7czAAoJEHSBCwEjRsmmrsQIAMSPV4Yyb3Ciyw0jSd9kw0Jy\n3owod6yqLUC53wU9QWS08OzY205cbtD3ChzD3Ul6xQd6BnioGK4t/Rpm/QZINv3U\np1MCxXRWw2Wh9NO6q+rf5UXwatjM6avhUtPRnV70FFJyu/K+pDBR02v+Cy6cE9n6\ndH4emNtI/1SoE8FjlcjmpoA7YHrAzg+/bNZBDLglheji2YMXZxdcf1bVD24MM8Ej\nUpR7ttWfDxnCEI6Ft02OgxHF9AzsMl6A3BojX/e3VmtMqAGQ3wGJouzDtak5JgHy\nIDRft87ilD5e/6fVFq45Yjxe+beEFoxZV6ozGBjz8U5TCgXFgkpIS1VqNahpFAc=\n=sdZC\n-----END PGP SIGNATURE-----",
        "payload": "tree 3602f6d9377dc812798c4a2e8d52c42b66a03fb9\nparent 65515c0d05678334a52f686eaaa2bac1ff285a5a\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1389082171 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1389082376 +0100\n\nbuild: Correctly put boost at end of LDADD\n\nThis fixes linking issues when statically linking\n(thanks @imwuzhh).\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d696820b45d9b6be1c21a65f2c8ed3b260938cb7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d696820b45d9b6be1c21a65f2c8ed3b260938cb7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d696820b45d9b6be1c21a65f2c8ed3b260938cb7/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "65515c0d05678334a52f686eaaa2bac1ff285a5a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/65515c0d05678334a52f686eaaa2bac1ff285a5a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/65515c0d05678334a52f686eaaa2bac1ff285a5a"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 2,
      "deletions": 3
    },
    "files": [
      {
        "sha": "85d7c3c9c664624c142f6d7c942f8ad1c0dd771a",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d696820b45d9b6be1c21a65f2c8ed3b260938cb7/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d696820b45d9b6be1c21a65f2c8ed3b260938cb7/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=d696820b45d9b6be1c21a65f2c8ed3b260938cb7",
        "patch": "@@ -93,8 +93,7 @@ nodist_libbitcoin_common_a_SOURCES = $(top_srcdir)/src/obj/build.h\n #\n \n # bitcoind binary #\n-bitcoind_LDADD = libbitcoin_server.a libbitcoin_cli.a libbitcoin_common.a leveldb/libleveldb.a leveldb/libmemenv.a \\\n-  $(BOOST_LIBS)\n+bitcoind_LDADD = libbitcoin_server.a libbitcoin_cli.a libbitcoin_common.a leveldb/libleveldb.a leveldb/libmemenv.a\n if ENABLE_WALLET\n bitcoind_LDADD += libbitcoin_wallet.a\n endif\n@@ -106,7 +105,7 @@ bitcoind_SOURCES += bitcoind-res.rc\n endif\n \n AM_CPPFLAGS += $(BDB_CPPFLAGS)\n-bitcoind_LDADD += $(BDB_LIBS)\n+bitcoind_LDADD += $(BOOST_LIBS) $(BDB_LIBS)\n \n # bitcoin-cli binary #\n bitcoin_cli_LDADD = libbitcoin_cli.a libbitcoin_common.a $(BOOST_LIBS)"
      }
    ]
  },
  {
    "sha": "549e69a558a045829d2910c5d172e91f49101a31",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NDllNjlhNTU4YTA0NTgyOWQyOTEwYzVkMTcyZTkxZjQ5MTAxYTMx",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-08T13:35:02Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-08T13:42:07Z"
      },
      "message": "Merge pull request #3449\n\n8b9adca Allow `-noserver` with bitcoind (Wladimir J. van der Laan)",
      "tree": {
        "sha": "307aa78abcf9d1f5c76e061c597029722aa283fd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/307aa78abcf9d1f5c76e061c597029722aa283fd"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/549e69a558a045829d2910c5d172e91f49101a31",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJSzVWvAAoJEHSBCwEjRsmmjuEIAKPTQ2g/fTGUxytCEj3S0aKC\nWQh9N/wl3fbQD0N46ERiPpr85zTrWbcXqGtmOcQE7wLdOd13JZNvPYOrknWDpOVW\ndb9nmTFksJQ9hvmtYNkQUtVRshFuxE66UK5ouIZQbKgPlqvsbnU0wPaTK9DbqxAI\nZP/1+wwLMxsa8pnorYydX1QYmzIqP9fPsFUsBvYQ+GGh7/L2TMzbxeAGue8sKg6V\nv7mC3ljNBYwew3AQLgI5K9zZDELMjbQSxFe1adooLVLggmbecDudRb0De5yLaOl1\nyKDY32wvCpS/wi1KBXSLJoZQuM2v/rVILNJUWuyr2M9b1dLXmWD/Cuk0fJG2qbc=\n=+qN/\n-----END PGP SIGNATURE-----",
        "payload": "tree 307aa78abcf9d1f5c76e061c597029722aa283fd\nparent d696820b45d9b6be1c21a65f2c8ed3b260938cb7\nparent 8b9adca4461d0cb6bdfca7b74228d430b9b9d116\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1389188102 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1389188527 +0100\n\nMerge pull request #3449\n\n8b9adca Allow `-noserver` with bitcoind (Wladimir J. van der Laan)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/549e69a558a045829d2910c5d172e91f49101a31",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/549e69a558a045829d2910c5d172e91f49101a31",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/549e69a558a045829d2910c5d172e91f49101a31/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d696820b45d9b6be1c21a65f2c8ed3b260938cb7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d696820b45d9b6be1c21a65f2c8ed3b260938cb7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d696820b45d9b6be1c21a65f2c8ed3b260938cb7"
      },
      {
        "sha": "8b9adca4461d0cb6bdfca7b74228d430b9b9d116",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8b9adca4461d0cb6bdfca7b74228d430b9b9d116",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8b9adca4461d0cb6bdfca7b74228d430b9b9d116"
      }
    ],
    "stats": {
      "total": 28,
      "additions": 11,
      "deletions": 17
    },
    "files": [
      {
        "sha": "5d872188443d3f10604f92c56138660531049779",
        "filename": "src/bitcoind.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/549e69a558a045829d2910c5d172e91f49101a31/src/bitcoind.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/549e69a558a045829d2910c5d172e91f49101a31/src/bitcoind.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoind.cpp?ref=549e69a558a045829d2910c5d172e91f49101a31",
        "patch": "@@ -30,6 +30,8 @@\n  * Use the buttons <code>Namespaces</code>, <code>Classes</code> or <code>Files</code> at the top of the page to start navigating the code.\n  */\n \n+static bool fDaemon;\n+\n void DetectShutdownThread(boost::thread_group* threadGroup)\n {\n     bool fShutdown = ShutdownRequested();\n@@ -108,6 +110,8 @@ bool AppInit(int argc, char* argv[])\n         fDaemon = GetBoolArg(\"-daemon\", false);\n         if (fDaemon)\n         {\n+            fprintf(stdout, \"Bitcoin server starting\\n\");\n+\n             // Daemonize\n             pid_t pid = fork();\n             if (pid < 0)\n@@ -127,9 +131,10 @@ bool AppInit(int argc, char* argv[])\n                 fprintf(stderr, \"Error: setsid() returned %d errno %d\\n\", sid, errno);\n         }\n #endif\n+        SoftSetBoolArg(\"-server\", true);\n \n         detectShutdownThread = new boost::thread(boost::bind(&DetectShutdownThread, &threadGroup));\n-        fRet = AppInit2(threadGroup, true);\n+        fRet = AppInit2(threadGroup);\n     }\n     catch (std::exception& e) {\n         PrintExceptionContinue(&e, \"AppInit()\");"
      },
      {
        "sha": "20279bf7333db95aacc88e763de50b0f763d6369",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 13,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/549e69a558a045829d2910c5d172e91f49101a31/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/549e69a558a045829d2910c5d172e91f49101a31/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=549e69a558a045829d2910c5d172e91f49101a31",
        "patch": "@@ -242,10 +242,7 @@ std::string HelpMessage(HelpMessageMode hmm)\n     strUsage += \"  -printtoconsole        \" + _(\"Send trace/debug info to console instead of debug.log file\") + \"\\n\";\n     strUsage += \"  -regtest               \" + _(\"Enter regression test mode, which uses a special chain in which blocks can be solved instantly.\") + \"\\n\";\n     strUsage += \"                         \" + _(\"This is intended for regression testing tools and app development.\") + \"\\n\";\n-    if (hmm == HMM_BITCOIN_QT)\n-    {\n-        strUsage += \"  -server                \" + _(\"Accept command line and JSON-RPC commands\") + \"\\n\";\n-    }\n+    strUsage += \"  -server                \" + _(\"Accept command line and JSON-RPC commands\") + \"\\n\";\n \n     if (hmm == HMM_BITCOIND)\n     {\n@@ -356,7 +353,7 @@ void ThreadImport(std::vector<boost::filesystem::path> vImportFiles)\n /** Initialize bitcoin.\n  *  @pre Parameters should be parsed and config file should be read.\n  */\n-bool AppInit2(boost::thread_group& threadGroup, bool fForceServer)\n+bool AppInit2(boost::thread_group& threadGroup)\n {\n     // ********************************************************* Step 1: setup\n #ifdef _MSC_VER\n@@ -483,11 +480,7 @@ bool AppInit2(boost::thread_group& threadGroup, bool fForceServer)\n     else if (nScriptCheckThreads > MAX_SCRIPTCHECK_THREADS)\n         nScriptCheckThreads = MAX_SCRIPTCHECK_THREADS;\n \n-    if (fDaemon || fForceServer)\n-        fServer = true;\n-    else\n-        fServer = GetBoolArg(\"-server\", false);\n-\n+    fServer = GetBoolArg(\"-server\", false);\n     fPrintToConsole = GetBoolArg(\"-printtoconsole\", false);\n     fLogTimestamps = GetBoolArg(\"-logtimestamps\", true);\n #ifdef ENABLE_WALLET\n@@ -569,9 +562,6 @@ bool AppInit2(boost::thread_group& threadGroup, bool fForceServer)\n     LogPrintf(\"Using at most %i connections (%i file descriptors available)\\n\", nMaxConnections, nFD);\n     std::ostringstream strErrors;\n \n-    if (fDaemon)\n-        fprintf(stdout, \"Bitcoin server starting\\n\");\n-\n     if (nScriptCheckThreads) {\n         LogPrintf(\"Using %u threads for script verification\\n\", nScriptCheckThreads);\n         for (int i=0; i<nScriptCheckThreads-1; i++)"
      },
      {
        "sha": "2f56923055354ef96a094151a61310b5a21aa419",
        "filename": "src/init.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/549e69a558a045829d2910c5d172e91f49101a31/src/init.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/549e69a558a045829d2910c5d172e91f49101a31/src/init.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.h?ref=549e69a558a045829d2910c5d172e91f49101a31",
        "patch": "@@ -20,7 +20,7 @@ extern CWallet* pwalletMain;\n void StartShutdown();\n bool ShutdownRequested();\n void Shutdown();\n-bool AppInit2(boost::thread_group& threadGroup, bool fForceServer);\n+bool AppInit2(boost::thread_group& threadGroup);\n \n /* The help message mode determines what help message to show */\n enum HelpMessageMode"
      },
      {
        "sha": "9565d3ef7a83876d2cfe8d236768d39f68af5313",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/549e69a558a045829d2910c5d172e91f49101a31/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/549e69a558a045829d2910c5d172e91f49101a31/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=549e69a558a045829d2910c5d172e91f49101a31",
        "patch": "@@ -289,7 +289,7 @@ int main(int argc, char *argv[])\n         QObject::connect(pollShutdownTimer, SIGNAL(timeout()), guiref, SLOT(detectShutdown()));\n         pollShutdownTimer->start(200);\n \n-        if(AppInit2(threadGroup, false))\n+        if(AppInit2(threadGroup))\n         {\n             {\n                 // Put this in a block, so that the Model objects are cleaned up before"
      },
      {
        "sha": "c6a1318fd78d26cc304c29451f2c15fef9748dc7",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/549e69a558a045829d2910c5d172e91f49101a31/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/549e69a558a045829d2910c5d172e91f49101a31/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=549e69a558a045829d2910c5d172e91f49101a31",
        "patch": "@@ -121,7 +121,6 @@ extern std::map<std::string, std::vector<std::string> > mapMultiArgs;\n extern bool fDebug;\n extern bool fPrintToConsole;\n extern bool fPrintToDebugLog;\n-extern bool fDaemon;\n extern bool fServer;\n extern std::string strMiscWarning;\n extern bool fNoListen;"
      }
    ]
  },
  {
    "sha": "6d697e9fa45b3f3bf67d79cc3d17717b68a43825",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ZDY5N2U5ZmE0NWIzZjNiZjY3ZDc5Y2MzZDE3NzE3YjY4YTQzODI1",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-08T17:31:24Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-08T17:48:39Z"
      },
      "message": "qt: Update translations\n\nUpdate current translations, and add new languages:\n\n- es_MX: Spanish (Mexico)\n- pam: Kapampangan\n\nAlso update translation process for autoconf-based build system.",
      "tree": {
        "sha": "c23affc1b4755681f5549ae331cad734dd4e132e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c23affc1b4755681f5549ae331cad734dd4e132e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6d697e9fa45b3f3bf67d79cc3d17717b68a43825",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJSzY95AAoJEHSBCwEjRsmmY8YIAKdKEmCRNHGKtxxyeNbtov4p\n4Ks0rCWVlvvR7oNz0S54W9izKJA6jWJo0MuliESrPahjbr6u8l/qiJU3Yr6UvEYE\nFovFNAjgui1wEAGdq60rv6QuMtw5/apOdxa5BT8kpShfNEMEGEuQAESoZRtpXiwV\nssrzrozLSoEP4uP+Cq2r0dztcz7pyoCI924d9gsazAbqfGzlSS9poelwN5B/sAs+\nWQS6oyvfUUjsrKM8LX34SHALQN3UL/BKX8YQgZx6zXr1j6NDbBeK3+IBJ6qrP+NL\nd/UeXv+k9/ksrzNcZfgIY1YyGktx26rhXGfXnAi6Z7hlnLZ0YeCyKN/DRQzuSmg=\n=Af4M\n-----END PGP SIGNATURE-----",
        "payload": "tree c23affc1b4755681f5549ae331cad734dd4e132e\nparent 549e69a558a045829d2910c5d172e91f49101a31\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1389202284 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1389203319 +0100\n\nqt: Update translations\n\nUpdate current translations, and add new languages:\n\n- es_MX: Spanish (Mexico)\n- pam: Kapampangan\n\nAlso update translation process for autoconf-based build system.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6d697e9fa45b3f3bf67d79cc3d17717b68a43825",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6d697e9fa45b3f3bf67d79cc3d17717b68a43825",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6d697e9fa45b3f3bf67d79cc3d17717b68a43825/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "549e69a558a045829d2910c5d172e91f49101a31",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/549e69a558a045829d2910c5d172e91f49101a31",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/549e69a558a045829d2910c5d172e91f49101a31"
      }
    ],
    "stats": {
      "total": 38492,
      "additions": 29430,
      "deletions": 9062
    },
    "files": [
      {
        "sha": "9fb76228683767126ba26847f961d64fe8dfded8",
        "filename": "doc/translation_process.md",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6d697e9fa45b3f3bf67d79cc3d17717b68a43825/doc/translation_process.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6d697e9fa45b3f3bf67d79cc3d17717b68a43825/doc/translation_process.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/translation_process.md?ref=6d697e9fa45b3f3bf67d79cc3d17717b68a43825",
        "patch": "@@ -100,5 +100,7 @@ It is also possible to directly download new translations one by one from the Tr\n \n 1. `tx pull -a`\n 2. update `src/qt/bitcoin.qrc` manually or via\n-   `ls src/qt/locale/*ts|xargs -n1 basename|sed 's/\\(bitcoin_\\(.*\\)\\).ts/<file alias=\"\\2\">locale/\\1.qm<\\/file>/'`\n-3. `git add` new translations from `src/qt/locale/`\n+   `ls src/qt/locale/*ts|xargs -n1 basename|sed 's/\\(bitcoin_\\(.*\\)\\).ts/<file alias=\"\\2\">locale\\/\\1.qm<\\/file>/'`\n+3. update `src/qt/Makefile.am` manually or via\n+   `ls src/qt/locale/*ts|xargs -n1 basename|sed 's/\\(bitcoin_\\(.*\\)\\).ts/  locale\\/\\1.ts \\\\/'`\n+4. `git add` new translations from `src/qt/locale/`"
      },
      {
        "sha": "863274e80cf4dd6d1cdebac295dabae8c191620c",
        "filename": "src/qt/Makefile.am",
        "status": "modified",
        "additions": 5,
        "deletions": 2,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6d697e9fa45b3f3bf67d79cc3d17717b68a43825/src/qt/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6d697e9fa45b3f3bf67d79cc3d17717b68a43825/src/qt/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/Makefile.am?ref=6d697e9fa45b3f3bf67d79cc3d17717b68a43825",
        "patch": "@@ -11,7 +11,8 @@ SUBDIRS = $(BUILD_TEST_QT)\n DIST_SUBDIRS = test\n \n # bitcoin qt core #\n-QT_TS = locale/bitcoin_ach.ts \\\n+QT_TS = \\\n+  locale/bitcoin_ach.ts \\\n   locale/bitcoin_af_ZA.ts \\\n   locale/bitcoin_ar.ts \\\n   locale/bitcoin_be_BY.ts \\\n@@ -22,12 +23,13 @@ QT_TS = locale/bitcoin_ach.ts \\\n   locale/bitcoin_cs.ts \\\n   locale/bitcoin_cy.ts \\\n   locale/bitcoin_da.ts \\\n-  locale/bitcoin_de.ts \\\n   locale/bitcoin_de_AT.ts \\\n+  locale/bitcoin_de.ts \\\n   locale/bitcoin_el_GR.ts \\\n   locale/bitcoin_en.ts \\\n   locale/bitcoin_eo.ts \\\n   locale/bitcoin_es_CL.ts \\\n+  locale/bitcoin_es_MX.ts \\\n   locale/bitcoin_es.ts \\\n   locale/bitcoin_et.ts \\\n   locale/bitcoin_eu_ES.ts \\\n@@ -53,6 +55,7 @@ QT_TS = locale/bitcoin_ach.ts \\\n   locale/bitcoin_ms_MY.ts \\\n   locale/bitcoin_nb.ts \\\n   locale/bitcoin_nl.ts \\\n+  locale/bitcoin_pam.ts \\\n   locale/bitcoin_pl.ts \\\n   locale/bitcoin_pt_BR.ts \\\n   locale/bitcoin_pt_PT.ts \\"
      },
      {
        "sha": "3c3220c2b37af046022e642e4a59c2d1ffcdfc06",
        "filename": "src/qt/bitcoin.qrc",
        "status": "modified",
        "additions": 9,
        "deletions": 4,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6d697e9fa45b3f3bf67d79cc3d17717b68a43825/src/qt/bitcoin.qrc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6d697e9fa45b3f3bf67d79cc3d17717b68a43825/src/qt/bitcoin.qrc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.qrc?ref=6d697e9fa45b3f3bf67d79cc3d17717b68a43825",
        "patch": "@@ -56,24 +56,27 @@\n         <file alias=\"be_BY\">locale/bitcoin_be_BY.qm</file>\n         <file alias=\"bg\">locale/bitcoin_bg.qm</file>\n         <file alias=\"bs\">locale/bitcoin_bs.qm</file>\n-        <file alias=\"ca\">locale/bitcoin_ca.qm</file>\n         <file alias=\"ca_ES\">locale/bitcoin_ca_ES.qm</file>\n+        <file alias=\"ca\">locale/bitcoin_ca.qm</file>\n         <file alias=\"cs\">locale/bitcoin_cs.qm</file>\n         <file alias=\"cy\">locale/bitcoin_cy.qm</file>\n         <file alias=\"da\">locale/bitcoin_da.qm</file>\n+        <file alias=\"de_AT\">locale/bitcoin_de_AT.qm</file>\n         <file alias=\"de\">locale/bitcoin_de.qm</file>\n         <file alias=\"el_GR\">locale/bitcoin_el_GR.qm</file>\n         <file alias=\"en\">locale/bitcoin_en.qm</file>\n         <file alias=\"eo\">locale/bitcoin_eo.qm</file>\n-        <file alias=\"es\">locale/bitcoin_es.qm</file>\n         <file alias=\"es_CL\">locale/bitcoin_es_CL.qm</file>\n+        <file alias=\"es_MX\">locale/bitcoin_es_MX.qm</file>\n+        <file alias=\"es\">locale/bitcoin_es.qm</file>\n         <file alias=\"et\">locale/bitcoin_et.qm</file>\n         <file alias=\"eu_ES\">locale/bitcoin_eu_ES.qm</file>\n-        <file alias=\"fa\">locale/bitcoin_fa.qm</file>\n         <file alias=\"fa_IR\">locale/bitcoin_fa_IR.qm</file>\n+        <file alias=\"fa\">locale/bitcoin_fa.qm</file>\n         <file alias=\"fi\">locale/bitcoin_fi.qm</file>\n-        <file alias=\"fr\">locale/bitcoin_fr.qm</file>\n         <file alias=\"fr_CA\">locale/bitcoin_fr_CA.qm</file>\n+        <file alias=\"fr\">locale/bitcoin_fr.qm</file>\n+        <file alias=\"gl\">locale/bitcoin_gl.qm</file>\n         <file alias=\"gu_IN\">locale/bitcoin_gu_IN.qm</file>\n         <file alias=\"he\">locale/bitcoin_he.qm</file>\n         <file alias=\"hi_IN\">locale/bitcoin_hi_IN.qm</file>\n@@ -90,12 +93,14 @@\n         <file alias=\"ms_MY\">locale/bitcoin_ms_MY.qm</file>\n         <file alias=\"nb\">locale/bitcoin_nb.qm</file>\n         <file alias=\"nl\">locale/bitcoin_nl.qm</file>\n+        <file alias=\"pam\">locale/bitcoin_pam.qm</file>\n         <file alias=\"pl\">locale/bitcoin_pl.qm</file>\n         <file alias=\"pt_BR\">locale/bitcoin_pt_BR.qm</file>\n         <file alias=\"pt_PT\">locale/bitcoin_pt_PT.qm</file>\n         <file alias=\"ro_RO\">locale/bitcoin_ro_RO.qm</file>\n         <file alias=\"ru\">locale/bitcoin_ru.qm</file>\n         <file alias=\"sk\">locale/bitcoin_sk.qm</file>\n+        <file alias=\"sl_SI\">locale/bitcoin_sl_SI.qm</file>\n         <file alias=\"sq\">locale/bitcoin_sq.qm</file>\n         <file alias=\"sr\">locale/bitcoin_sr.qm</file>\n         <file alias=\"sv\">locale/bitcoin_sv.qm</file>"
      },
      {
        "sha": "0c44a90bc2a0dfe14d4d0e41bbe9a45aa716df86",
        "filename": "src/qt/locale/bitcoin_af_ZA.ts",
        "status": "modified",
        "additions": 1008,
        "deletions": 413,
        "changes": 1421,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6d697e9fa45b3f3bf67d79cc3d17717b68a43825/src/qt/locale/bitcoin_af_ZA.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6d697e9fa45b3f3bf67d79cc3d17717b68a43825/src/qt/locale/bitcoin_af_ZA.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_af_ZA.ts?ref=6d697e9fa45b3f3bf67d79cc3d17717b68a43825",
        "patch": "@@ -3,13 +3,13 @@\n     <name>AboutDialog</name>\n     <message>\n         <location filename=\"../forms/aboutdialog.ui\" line=\"+14\"/>\n-        <source>About Bitcoin</source>\n+        <source>About Bitcoin Core</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <location line=\"+39\"/>\n-        <source>&lt;b&gt;Bitcoin&lt;/b&gt; version</source>\n-        <translation>&lt;b&gt;Bitcoin&lt;/b&gt; weergawe</translation>\n+        <source>&lt;b&gt;Bitcoin Core&lt;/b&gt; version</source>\n+        <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <location line=\"+57\"/>\n@@ -22,7 +22,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location filename=\"../aboutdialog.cpp\" line=\"+14\"/>\n+        <location filename=\"../aboutdialog.cpp\" line=\"+19\"/>\n         <source>Copyright</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -65,7 +65,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location filename=\"../addressbookpage.cpp\" line=\"+72\"/>\n+        <location filename=\"../addressbookpage.cpp\" line=\"+74\"/>\n         <source>&amp;Copy Address</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -135,7 +135,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+197\"/>\n+        <location line=\"+194\"/>\n         <source>Export Address List</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -158,7 +158,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n <context>\n     <name>AddressTableModel</name>\n     <message>\n-        <location filename=\"../addresstablemodel.cpp\" line=\"+164\"/>\n+        <location filename=\"../addresstablemodel.cpp\" line=\"+168\"/>\n         <source>Label</source>\n         <translation>Etiket</translation>\n     </message>\n@@ -196,7 +196,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation>Herhaal nuwe wagwoord</translation>\n     </message>\n     <message>\n-        <location filename=\"../askpassphrasedialog.cpp\" line=\"+34\"/>\n+        <location filename=\"../askpassphrasedialog.cpp\" line=\"+40\"/>\n         <source>Enter the new passphrase to the wallet.&lt;br/&gt;Please use a passphrase of &lt;b&gt;10 or more random characters&lt;/b&gt;, or &lt;b&gt;eight or more words&lt;/b&gt;.</source>\n         <translation>Tik die nuwe wagwoord vir die beursie in.&lt;br/&gt;Gebruik asseblief &apos;n wagwoord van &lt;b&gt;ten minste 10 ewekansige karakters&lt;/b&gt;, of &lt;b&gt;agt (8) of meer woorde.&lt;/b&gt;</translation>\n     </message>\n@@ -317,17 +317,17 @@ This product includes software developed by the OpenSSL Project for use in the O\n <context>\n     <name>BitcoinGUI</name>\n     <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"+250\"/>\n+        <location filename=\"../bitcoingui.cpp\" line=\"+260\"/>\n         <source>Sign &amp;message...</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+254\"/>\n+        <location line=\"+290\"/>\n         <source>Synchronizing with network...</source>\n         <translation>Sinchroniseer met die netwerk ...</translation>\n     </message>\n     <message>\n-        <location line=\"-324\"/>\n+        <location line=\"-360\"/>\n         <source>&amp;Overview</source>\n         <translation>&amp;Oorsig</translation>\n     </message>\n@@ -393,7 +393,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+259\"/>\n+        <location line=\"+295\"/>\n         <source>Importing blocks from disk...</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -403,7 +403,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-322\"/>\n+        <location line=\"-358\"/>\n         <source>Send coins to a Bitcoin address</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -438,20 +438,18 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-180\"/>\n-        <location line=\"+6\"/>\n-        <location line=\"+513\"/>\n+        <location line=\"+375\"/>\n         <source>Bitcoin</source>\n         <translation>Bitcoin</translation>\n     </message>\n     <message>\n-        <location line=\"-519\"/>\n-        <location line=\"+6\"/>\n+        <location line=\"-563\"/>\n+        <location line=\"+10\"/>\n         <source>Wallet</source>\n         <translation>Beursie</translation>\n     </message>\n     <message>\n-        <location line=\"+109\"/>\n+        <location line=\"+113\"/>\n         <source>&amp;Send</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -461,13 +459,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+28\"/>\n-        <location line=\"+2\"/>\n-        <source>&amp;About Bitcoin</source>\n-        <translation type=\"unfinished\"/>\n-    </message>\n-    <message>\n-        <location line=\"+14\"/>\n+        <location line=\"+44\"/>\n         <location line=\"+2\"/>\n         <source>&amp;Show / Hide</source>\n         <translation type=\"unfinished\"/>\n@@ -493,12 +485,12 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+35\"/>\n+        <location line=\"+39\"/>\n         <source>&amp;File</source>\n         <translation>&amp;L\u00eaer</translation>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n+        <location line=\"+11\"/>\n         <source>&amp;Settings</source>\n         <translation>&amp;Instellings</translation>\n     </message>\n@@ -513,18 +505,30 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation>Blad nutsbalk</translation>\n     </message>\n     <message>\n-        <location line=\"-235\"/>\n-        <location line=\"+294\"/>\n+        <location line=\"-244\"/>\n+        <location line=\"+321\"/>\n         <source>[testnet]</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-177\"/>\n+        <location line=\"-331\"/>\n+        <location line=\"+10\"/>\n+        <source>Bitcoin Core</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+121\"/>\n         <source>Request payments (generates QR codes and bitcoin: URIs)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+63\"/>\n+        <location line=\"+27\"/>\n+        <location line=\"+2\"/>\n+        <source>&amp;About Bitcoin Core</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+34\"/>\n         <source>&amp;Used sending addresses...</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -544,13 +548,23 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+106\"/>\n+        <location line=\"+2\"/>\n+        <source>Open URI...</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Open a bitcoin: URI or payment request</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+126\"/>\n         <location line=\"+5\"/>\n         <source>Bitcoin client</source>\n         <translation>Bitcoin klient</translation>\n     </message>\n     <message numerus=\"yes\">\n-        <location line=\"+120\"/>\n+        <location line=\"+133\"/>\n         <source>%n active connection(s) to Bitcoin network</source>\n         <translation type=\"unfinished\"><numerusform></numerusform><numerusform></numerusform></translation>\n     </message>\n@@ -654,17 +668,7 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+34\"/>\n-        <source>URI handling</source>\n-        <translation type=\"unfinished\"/>\n-    </message>\n-    <message>\n-        <location line=\"+0\"/>\n-        <source>URI can not be parsed! This can be caused by an invalid Bitcoin address or malformed URI parameters.</source>\n-        <translation type=\"unfinished\"/>\n-    </message>\n-    <message>\n-        <location line=\"+45\"/>\n+        <location line=\"+67\"/>\n         <source>Wallet is &lt;b&gt;encrypted&lt;/b&gt; and currently &lt;b&gt;unlocked&lt;/b&gt;</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -674,322 +678,647 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location filename=\"../bitcoin.cpp\" line=\"+110\"/>\n+        <location filename=\"../bitcoin.cpp\" line=\"+116\"/>\n         <source>A fatal error occurred. Bitcoin can no longer continue safely and will quit.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n </context>\n <context>\n     <name>ClientModel</name>\n     <message>\n-        <location filename=\"../clientmodel.cpp\" line=\"+115\"/>\n+        <location filename=\"../clientmodel.cpp\" line=\"+119\"/>\n         <source>Network Alert</source>\n         <translation type=\"unfinished\"/>\n     </message>\n </context>\n <context>\n-    <name>EditAddressDialog</name>\n+    <name>CoinControlDialog</name>\n     <message>\n-        <location filename=\"../forms/editaddressdialog.ui\" line=\"+14\"/>\n-        <source>Edit Address</source>\n+        <location filename=\"../forms/coincontroldialog.ui\" line=\"+14\"/>\n+        <source>Coin Control Address Selection</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+11\"/>\n-        <source>&amp;Label</source>\n+        <location line=\"+34\"/>\n+        <source>Quantity:</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n-        <source>The label associated with this address list entry</source>\n+        <location line=\"+29\"/>\n+        <source>Bytes:</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+17\"/>\n-        <source>The address associated with this address list entry. This can only be modified for sending addresses.</source>\n+        <location line=\"+45\"/>\n+        <source>Amount:</source>\n+        <translation>Bedrag:</translation>\n+    </message>\n+    <message>\n+        <location line=\"+29\"/>\n+        <source>Priority:</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-10\"/>\n-        <source>&amp;Address</source>\n+        <location line=\"+45\"/>\n+        <source>Fee:</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location filename=\"../editaddressdialog.cpp\" line=\"+21\"/>\n-        <source>New receiving address</source>\n-        <translation>Nuwe ontvangende adres</translation>\n+        <location line=\"+32\"/>\n+        <source>Low Output:</source>\n+        <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n-        <source>New sending address</source>\n-        <translation>Nuwe stuurende adres</translation>\n+        <location line=\"+48\"/>\n+        <source>After Fee:</source>\n+        <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+3\"/>\n-        <source>Edit receiving address</source>\n-        <translation>Wysig ontvangende adres</translation>\n+        <location line=\"+32\"/>\n+        <source>Change:</source>\n+        <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n-        <source>Edit sending address</source>\n-        <translation>Wysig stuurende adres</translation>\n+        <location line=\"+63\"/>\n+        <source>(un)select all</source>\n+        <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+76\"/>\n-        <source>The entered address &quot;%1&quot; is already in the address book.</source>\n+        <location line=\"+13\"/>\n+        <source>Tree mode</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-5\"/>\n-        <source>The entered address &quot;%1&quot; is not a valid Bitcoin address.</source>\n+        <location line=\"+16\"/>\n+        <source>List mode</source>\n         <translation type=\"unfinished\"/>\n     </message>\n+    <message>\n+        <location line=\"+52\"/>\n+        <source>Amount</source>\n+        <translation>Bedrag</translation>\n+    </message>\n     <message>\n         <location line=\"+10\"/>\n-        <source>Could not unlock wallet.</source>\n-        <translation>Kon nie die beursie oopsluit nie.</translation>\n+        <source>Address</source>\n+        <translation>Adres</translation>\n     </message>\n     <message>\n         <location line=\"+5\"/>\n-        <source>New key generation failed.</source>\n-        <translation type=\"unfinished\"/>\n+        <source>Date</source>\n+        <translation>Datum</translation>\n     </message>\n-</context>\n-<context>\n-    <name>FreespaceChecker</name>\n     <message>\n-        <location filename=\"../intro.cpp\" line=\"+61\"/>\n-        <source>A new data directory will be created.</source>\n+        <location line=\"+5\"/>\n+        <source>Confirmations</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+22\"/>\n-        <source>name</source>\n+        <location line=\"+3\"/>\n+        <source>Confirmed</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+2\"/>\n-        <source>Directory already exists. Add %1 if you intend to create a new directory here.</source>\n+        <location line=\"+5\"/>\n+        <source>Priority</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+3\"/>\n-        <source>Path already exists, and is not a directory.</source>\n-        <translation type=\"unfinished\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"+42\"/>\n+        <source>Copy address</source>\n+        <translation>Maak kopie van adres</translation>\n     </message>\n     <message>\n-        <location line=\"+7\"/>\n-        <source>Cannot create data directory here.</source>\n+        <location line=\"+1\"/>\n+        <source>Copy label</source>\n         <translation type=\"unfinished\"/>\n     </message>\n-</context>\n-<context>\n-    <name>GUIUtil::HelpMessageBox</name>\n     <message>\n-        <location filename=\"../guiutil.cpp\" line=\"+558\"/>\n-        <location line=\"+13\"/>\n-        <source>Bitcoin-Qt</source>\n-        <translation type=\"unfinished\"/>\n+        <location line=\"+1\"/>\n+        <location line=\"+26\"/>\n+        <source>Copy amount</source>\n+        <translation>Kopieer bedrag</translation>\n     </message>\n     <message>\n-        <location line=\"-13\"/>\n-        <source>version</source>\n+        <location line=\"-25\"/>\n+        <source>Copy transaction ID</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+2\"/>\n-        <source>Usage:</source>\n-        <translation>Gebruik:</translation>\n+        <location line=\"+1\"/>\n+        <source>Lock unspent</source>\n+        <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <location line=\"+1\"/>\n-        <source>command-line options</source>\n+        <source>Unlock unspent</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n-        <source>UI options</source>\n+        <location line=\"+22\"/>\n+        <source>Copy quantity</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+1\"/>\n-        <source>Set language, for example &quot;de_DE&quot; (default: system locale)</source>\n+        <location line=\"+2\"/>\n+        <source>Copy fee</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <location line=\"+1\"/>\n-        <source>Start minimized</source>\n+        <source>Copy after fee</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <location line=\"+1\"/>\n-        <source>Show splash screen on startup (default: 1)</source>\n+        <source>Copy bytes</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <location line=\"+1\"/>\n-        <source>Choose data directory on startup (default: 0)</source>\n+        <source>Copy priority</source>\n         <translation type=\"unfinished\"/>\n     </message>\n-</context>\n-<context>\n-    <name>Intro</name>\n     <message>\n-        <location filename=\"../forms/intro.ui\" line=\"+14\"/>\n-        <source>Welcome</source>\n+        <location line=\"+1\"/>\n+        <source>Copy low output</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+9\"/>\n-        <source>Welcome to Bitcoin-Qt.</source>\n+        <location line=\"+1\"/>\n+        <source>Copy change</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+26\"/>\n-        <source>As this is the first time the program is launched, you can choose where Bitcoin-Qt will store its data.</source>\n+        <location line=\"+323\"/>\n+        <source>highest</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n-        <source>Bitcoin-Qt will download and store a copy of the Bitcoin block chain. At least %1GB of data will be stored in this directory, and it will grow over time. The wallet will also be stored in this directory.</source>\n+        <location line=\"+1\"/>\n+        <source>higher</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n-        <source>Use the default data directory</source>\n+        <location line=\"+1\"/>\n+        <source>high</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+7\"/>\n-        <source>Use a custom data directory:</source>\n+        <location line=\"+1\"/>\n+        <source>medium-high</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location filename=\"../intro.cpp\" line=\"+105\"/>\n-        <source>Error</source>\n+        <location line=\"+1\"/>\n+        <source>medium</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+9\"/>\n-        <source>GB of free space available</source>\n+        <location line=\"+4\"/>\n+        <source>low-medium</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+3\"/>\n-        <source>(of %1GB needed)</source>\n+        <location line=\"+1\"/>\n+        <source>low</source>\n         <translation type=\"unfinished\"/>\n     </message>\n-</context>\n-<context>\n-    <name>OptionsDialog</name>\n-    <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"+14\"/>\n-        <source>Options</source>\n-        <translation>Opsies</translation>\n-    </message>\n     <message>\n-        <location line=\"+16\"/>\n-        <source>&amp;Main</source>\n+        <location line=\"+1\"/>\n+        <source>lower</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+6\"/>\n-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB.</source>\n+        <location line=\"+1\"/>\n+        <source>lowest</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+15\"/>\n-        <source>Pay transaction &amp;fee</source>\n+        <location line=\"+11\"/>\n+        <source>(%1 locked)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+31\"/>\n-        <source>Automatically start Bitcoin after logging in to the system.</source>\n+        <location line=\"+171\"/>\n+        <source>Dust</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+3\"/>\n-        <source>&amp;Start Bitcoin on system login</source>\n+        <location line=\"+0\"/>\n+        <source>yes</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+35\"/>\n-        <source>Reset all client options to default.</source>\n+        <location line=\"+0\"/>\n+        <source>no</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+3\"/>\n-        <source>&amp;Reset Options</source>\n+        <location line=\"+10\"/>\n+        <source>This label turns red, if the transaction size is greater than 1000 bytes.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+13\"/>\n-        <source>&amp;Network</source>\n+        <location line=\"+1\"/>\n+        <location line=\"+5\"/>\n+        <source>This means a fee of at least %1 per kB is required.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+6\"/>\n-        <source>Automatically open the Bitcoin client port on the router. This only works when your router supports UPnP and it is enabled.</source>\n+        <location line=\"-4\"/>\n+        <source>Can vary +/- 1 byte per input.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+3\"/>\n-        <source>Map port using &amp;UPnP</source>\n+        <location line=\"+2\"/>\n+        <source>Transactions with higher priority are more likely to get included into a block.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+7\"/>\n-        <source>Connect to the Bitcoin network through a SOCKS proxy (e.g. when connecting through Tor).</source>\n+        <location line=\"+1\"/>\n+        <source>This label turns red, if the priority is smaller than &quot;medium&quot;</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <location line=\"+3\"/>\n-        <source>&amp;Connect through SOCKS proxy:</source>\n+        <source>This label turns red, if any recipient receives an amount smaller than %1.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+9\"/>\n-        <source>Proxy &amp;IP:</source>\n+        <location line=\"+1\"/>\n+        <location line=\"+4\"/>\n+        <source>This means a fee of at least %1 is required.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+19\"/>\n-        <source>IP address of the proxy (e.g. 127.0.0.1)</source>\n+        <location line=\"-3\"/>\n+        <source>Amounts below 0.546 times the minimum relay fee are shown as dust.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+7\"/>\n-        <source>&amp;Port:</source>\n+        <location line=\"+2\"/>\n+        <source>This label turns red, if the change is smaller than %1.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+19\"/>\n-        <source>Port of the proxy (e.g. 9050)</source>\n+        <location line=\"+43\"/>\n+        <location line=\"+66\"/>\n+        <source>(no label)</source>\n+        <translation>(geen etiket)</translation>\n+    </message>\n+    <message>\n+        <location line=\"-9\"/>\n+        <source>change from %1 (%2)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+7\"/>\n-        <source>SOCKS &amp;Version:</source>\n+        <location line=\"+1\"/>\n+        <source>(change)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n+</context>\n+<context>\n+    <name>EditAddressDialog</name>\n     <message>\n-        <location line=\"+13\"/>\n-        <source>SOCKS version of the proxy (e.g. 5)</source>\n+        <location filename=\"../forms/editaddressdialog.ui\" line=\"+14\"/>\n+        <source>Edit Address</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+36\"/>\n-        <source>&amp;Window</source>\n+        <location line=\"+11\"/>\n+        <source>&amp;Label</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+6\"/>\n-        <source>Show only a tray icon after minimizing the window.</source>\n+        <location line=\"+10\"/>\n+        <source>The label associated with this address list entry</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+3\"/>\n-        <source>&amp;Minimize to the tray instead of the taskbar</source>\n+        <location line=\"+17\"/>\n+        <source>The address associated with this address list entry. This can only be modified for sending addresses.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"-10\"/>\n+        <source>&amp;Address</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location filename=\"../editaddressdialog.cpp\" line=\"+25\"/>\n+        <source>New receiving address</source>\n+        <translation>Nuwe ontvangende adres</translation>\n+    </message>\n+    <message>\n+        <location line=\"+4\"/>\n+        <source>New sending address</source>\n+        <translation>Nuwe stuurende adres</translation>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>Edit receiving address</source>\n+        <translation>Wysig ontvangende adres</translation>\n+    </message>\n+    <message>\n+        <location line=\"+4\"/>\n+        <source>Edit sending address</source>\n+        <translation>Wysig stuurende adres</translation>\n+    </message>\n+    <message>\n+        <location line=\"+76\"/>\n+        <source>The entered address &quot;%1&quot; is already in the address book.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"-5\"/>\n+        <source>The entered address &quot;%1&quot; is not a valid Bitcoin address.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+10\"/>\n+        <source>Could not unlock wallet.</source>\n+        <translation>Kon nie die beursie oopsluit nie.</translation>\n+    </message>\n+    <message>\n+        <location line=\"+5\"/>\n+        <source>New key generation failed.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+</context>\n+<context>\n+    <name>FreespaceChecker</name>\n+    <message>\n+        <location filename=\"../intro.cpp\" line=\"+65\"/>\n+        <source>A new data directory will be created.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+22\"/>\n+        <source>name</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+2\"/>\n+        <source>Directory already exists. Add %1 if you intend to create a new directory here.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>Path already exists, and is not a directory.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+7\"/>\n+        <source>Cannot create data directory here.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+</context>\n+<context>\n+    <name>GUIUtil::HelpMessageBox</name>\n+    <message>\n+        <location filename=\"../guiutil.cpp\" line=\"+597\"/>\n+        <source>version</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+0\"/>\n+        <location line=\"+13\"/>\n+        <source>Bitcoin Core</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"-11\"/>\n+        <source>Usage:</source>\n+        <translation>Gebruik:</translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>command-line options</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+4\"/>\n+        <source>UI options</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Set language, for example &quot;de_DE&quot; (default: system locale)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Start minimized</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Show splash screen on startup (default: 1)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Choose data directory on startup (default: 0)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+</context>\n+<context>\n+    <name>Intro</name>\n+    <message>\n+        <location filename=\"../forms/intro.ui\" line=\"+14\"/>\n+        <source>Welcome</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+9\"/>\n+        <source>Welcome to Bitcoin Core.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+26\"/>\n+        <source>As this is the first time the program is launched, you can choose where Bitcoin Core will store its data.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+10\"/>\n+        <source>Bitcoin Core will download and store a copy of the Bitcoin block chain. At least %1GB of data will be stored in this directory, and it will grow over time. The wallet will also be stored in this directory.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+10\"/>\n+        <source>Use the default data directory</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+7\"/>\n+        <source>Use a custom data directory:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location filename=\"../intro.cpp\" line=\"+85\"/>\n+        <source>Bitcoin</source>\n+        <translation>Bitcoin</translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Error: Specified data directory &quot;%1&quot; can not be created.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+19\"/>\n+        <source>Error</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+9\"/>\n+        <source>GB of free space available</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>(of %1GB needed)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+</context>\n+<context>\n+    <name>OpenURIDialog</name>\n+    <message>\n+        <location filename=\"../forms/openuridialog.ui\" line=\"+14\"/>\n+        <source>Open URI</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+6\"/>\n+        <source>Open payment request from URI or file</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+9\"/>\n+        <source>URI:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+11\"/>\n+        <source>Select payment request file</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location filename=\"../openuridialog.cpp\" line=\"+47\"/>\n+        <source>Select payment request file to open</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+</context>\n+<context>\n+    <name>OptionsDialog</name>\n+    <message>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"+14\"/>\n+        <source>Options</source>\n+        <translation>Opsies</translation>\n+    </message>\n+    <message>\n+        <location line=\"+16\"/>\n+        <source>&amp;Main</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+6\"/>\n+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+15\"/>\n+        <source>Pay transaction &amp;fee</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+31\"/>\n+        <source>Automatically start Bitcoin after logging in to the system.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>&amp;Start Bitcoin on system login</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+35\"/>\n+        <source>Reset all client options to default.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>&amp;Reset Options</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+13\"/>\n+        <source>&amp;Network</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+6\"/>\n+        <source>Automatically open the Bitcoin client port on the router. This only works when your router supports UPnP and it is enabled.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>Map port using &amp;UPnP</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+7\"/>\n+        <source>Connect to the Bitcoin network through a SOCKS proxy (e.g. when connecting through Tor).</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>&amp;Connect through SOCKS proxy:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+9\"/>\n+        <source>Proxy &amp;IP:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+19\"/>\n+        <source>IP address of the proxy (e.g. 127.0.0.1)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+7\"/>\n+        <source>&amp;Port:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+19\"/>\n+        <source>Port of the proxy (e.g. 9050)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+7\"/>\n+        <source>SOCKS &amp;Version:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+13\"/>\n+        <source>SOCKS version of the proxy (e.g. 5)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+36\"/>\n+        <source>&amp;Window</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+6\"/>\n+        <source>Show only a tray icon after minimizing the window.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>&amp;Minimize to the tray instead of the taskbar</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n@@ -1037,6 +1366,16 @@ Address: %4\n         <source>&amp;Display addresses in transaction list</source>\n         <translation type=\"unfinished\"/>\n     </message>\n+    <message>\n+        <location line=\"+7\"/>\n+        <source>Whether to show coin control features or not.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>Display coin &amp;control features (experts only)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n     <message>\n         <location line=\"+71\"/>\n         <source>&amp;OK</source>\n@@ -1053,12 +1392,12 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location filename=\"../optionsdialog.cpp\" line=\"+58\"/>\n+        <location filename=\"../optionsdialog.cpp\" line=\"+63\"/>\n         <source>default</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+130\"/>\n+        <location line=\"+131\"/>\n         <source>Confirm options reset</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1099,17 +1438,17 @@ Address: %4\n     </message>\n     <message>\n         <location line=\"+50\"/>\n-        <location line=\"+202\"/>\n+        <location line=\"+214\"/>\n         <source>The displayed information may be out of date. Your wallet automatically synchronizes with the Bitcoin network after a connection is established, but this process has not completed yet.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-131\"/>\n+        <location line=\"-140\"/>\n         <source>Unconfirmed:</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-78\"/>\n+        <location line=\"-81\"/>\n         <source>Wallet</source>\n         <translation>Beursie</translation>\n     </message>\n@@ -1124,12 +1463,12 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+29\"/>\n+        <location line=\"+32\"/>\n         <source>Total of transactions that have yet to be confirmed, and do not yet count toward the spendable balance</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+13\"/>\n+        <location line=\"+16\"/>\n         <source>Immature:</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1139,7 +1478,7 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+13\"/>\n+        <location line=\"+16\"/>\n         <source>Total:</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1149,12 +1488,12 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+53\"/>\n+        <location line=\"+56\"/>\n         <source>&lt;b&gt;Recent transactions&lt;/b&gt;</source>\n         <translation>&lt;b&gt;Onlangse transaksies&lt;/b&gt;</translation>\n     </message>\n     <message>\n-        <location filename=\"../overviewpage.cpp\" line=\"+116\"/>\n+        <location filename=\"../overviewpage.cpp\" line=\"+120\"/>\n         <location line=\"+1\"/>\n         <source>out of sync</source>\n         <translation type=\"unfinished\"/>\n@@ -1163,7 +1502,7 @@ Address: %4\n <context>\n     <name>PaymentServer</name>\n     <message>\n-        <location filename=\"../paymentserver.cpp\" line=\"+392\"/>\n+        <location filename=\"../paymentserver.cpp\" line=\"+397\"/>\n         <source>URI handling</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1173,23 +1512,29 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+69\"/>\n+        <location line=\"+91\"/>\n         <source>Requested payment amount of %1 is too small (considered dust).</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n-        <location line=\"+37\"/>\n+        <location line=\"-204\"/>\n+        <location line=\"+195\"/>\n+        <location line=\"+13\"/>\n         <source>Payment request error</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+1\"/>\n-        <source>Insecure requests to custom payment scripts unsupported</source>\n+        <location line=\"-207\"/>\n+        <source>Cannot start bitcoin: click-to-pay handler</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+38\"/>\n+        <location line=\"+195\"/>\n+        <source>Unverified payment requests to custom payment scripts are unsupported.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+59\"/>\n         <source>Refund from %1</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1199,7 +1544,7 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+31\"/>\n+        <location line=\"+28\"/>\n         <source>Bad response from server %1</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1209,8 +1554,8 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-58\"/>\n-        <location line=\"+30\"/>\n+        <location line=\"-55\"/>\n+        <location line=\"+27\"/>\n         <location line=\"+17\"/>\n         <source>Network request error</source>\n         <translation type=\"unfinished\"/>\n@@ -1219,11 +1564,10 @@ Address: %4\n <context>\n     <name>QObject</name>\n     <message>\n-        <location filename=\"../bitcoin.cpp\" line=\"+114\"/>\n+        <location filename=\"../bitcoin.cpp\" line=\"+119\"/>\n         <location line=\"+5\"/>\n-        <location filename=\"../intro.cpp\" line=\"-32\"/>\n         <source>Bitcoin</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>Bitcoin</translation>\n     </message>\n     <message>\n         <location line=\"-4\"/>\n@@ -1235,16 +1579,11 @@ Address: %4\n         <source>Error: Invalid combination of -regtest and -testnet.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n-    <message>\n-        <location filename=\"../intro.cpp\" line=\"+1\"/>\n-        <source>Error: Specified data directory &quot;%1&quot; can not be created.</source>\n-        <translation type=\"unfinished\"/>\n-    </message>\n </context>\n <context>\n     <name>QRImageWidget</name>\n     <message>\n-        <location filename=\"../receiverequestdialog.cpp\" line=\"+32\"/>\n+        <location filename=\"../receiverequestdialog.cpp\" line=\"+36\"/>\n         <source>&amp;Save Image...</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1260,7 +1599,7 @@ Address: %4\n     </message>\n     <message>\n         <location line=\"+0\"/>\n-        <source>PNG Images (*.png)</source>\n+        <source>PNG Image (*.png)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n </context>\n@@ -1281,7 +1620,7 @@ Address: %4\n         <location line=\"+53\"/>\n         <location line=\"+23\"/>\n         <location line=\"+23\"/>\n-        <location filename=\"../rpcconsole.cpp\" line=\"+352\"/>\n+        <location filename=\"../rpcconsole.cpp\" line=\"+360\"/>\n         <source>N/A</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1296,7 +1635,12 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+68\"/>\n+        <location line=\"-10\"/>\n+        <source>Debug window</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+78\"/>\n         <source>Using OpenSSL version</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1351,12 +1695,7 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+7\"/>\n-        <source>Show the Bitcoin-Qt help message to get a list with possible Bitcoin command-line options.</source>\n-        <translation type=\"unfinished\"/>\n-    </message>\n-    <message>\n-        <location line=\"+3\"/>\n+        <location line=\"+10\"/>\n         <source>&amp;Show</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1396,12 +1735,7 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-104\"/>\n-        <source>Bitcoin - Debug window</source>\n-        <translation type=\"unfinished\"/>\n-    </message>\n-    <message>\n-        <location line=\"+25\"/>\n+        <location line=\"-79\"/>\n         <source>Bitcoin Core</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1416,7 +1750,12 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+102\"/>\n+        <location line=\"+26\"/>\n+        <source>Show the Bitcoin-Core help message to get a list with possible Bitcoin command-line options.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+76\"/>\n         <source>Clear console</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1474,37 +1813,32 @@ Address: %4\n <context>\n     <name>ReceiveCoinsDialog</name>\n     <message>\n-        <location filename=\"../forms/receivecoinsdialog.ui\" line=\"+22\"/>\n+        <location filename=\"../forms/receivecoinsdialog.ui\" line=\"+83\"/>\n         <source>&amp;Amount:</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+16\"/>\n+        <location line=\"+19\"/>\n         <source>The amount to request</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+7\"/>\n+        <location line=\"-32\"/>\n         <source>&amp;Label:</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n-        <source>The label to associate with the receiving address</source>\n-        <translation type=\"unfinished\"/>\n-    </message>\n-    <message>\n-        <location line=\"+7\"/>\n+        <location line=\"-34\"/>\n         <source>&amp;Message:</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n+        <location line=\"+20\"/>\n         <source>The message to attach to payment request</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+14\"/>\n+        <location line=\"-37\"/>\n         <source>Reuse one of the previously used receiving addresses. Reusing addresses has security and privacy issues. Do not use this unless re-generating a payment request made before.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1514,12 +1848,17 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+7\"/>\n+        <location line=\"+27\"/>\n+        <source>The label to associate with the new receiving address</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+14\"/>\n         <source>Use this form to request payments. All fields are optional.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+17\"/>\n+        <location line=\"+56\"/>\n         <source>Clear all fields of the form.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1533,6 +1872,31 @@ Address: %4\n         <source>&amp;Request payment</source>\n         <translation type=\"unfinished\"/>\n     </message>\n+    <message>\n+        <location line=\"+47\"/>\n+        <source>Previously requested payments</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+12\"/>\n+        <source>Show the selected request (does the same as double clicking an entry)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>Show</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+11\"/>\n+        <source>Remove the selected entries from the list</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>Remove</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n </context>\n <context>\n     <name>ReceiveRequestDialog</name>\n@@ -1551,18 +1915,13 @@ Address: %4\n         <source>Copy &amp;Address</source>\n         <translation type=\"unfinished\"/>\n     </message>\n-    <message>\n-        <location line=\"+7\"/>\n-        <source>&amp;Copy Image</source>\n-        <translation type=\"unfinished\"/>\n-    </message>\n     <message>\n         <location line=\"+7\"/>\n         <source>&amp;Save Image...</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location filename=\"../receiverequestdialog.cpp\" line=\"+58\"/>\n+        <location filename=\"../receiverequestdialog.cpp\" line=\"+56\"/>\n         <source>Request payment to %1</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1607,17 +1966,120 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n </context>\n+<context>\n+    <name>RecentRequestsTableModel</name>\n+    <message>\n+        <location filename=\"../recentrequeststablemodel.cpp\" line=\"+14\"/>\n+        <source>Date</source>\n+        <translation>Datum</translation>\n+    </message>\n+    <message>\n+        <location line=\"+0\"/>\n+        <source>Label</source>\n+        <translation>Etiket</translation>\n+    </message>\n+    <message>\n+        <location line=\"+0\"/>\n+        <source>Message</source>\n+        <translation>Boodskap</translation>\n+    </message>\n+    <message>\n+        <location line=\"+0\"/>\n+        <source>Amount</source>\n+        <translation>Bedrag</translation>\n+    </message>\n+    <message>\n+        <location line=\"+36\"/>\n+        <source>(no label)</source>\n+        <translation>(geen etiket)</translation>\n+    </message>\n+    <message>\n+        <location line=\"+9\"/>\n+        <source>(no message)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+</context>\n <context>\n     <name>SendCoinsDialog</name>\n     <message>\n         <location filename=\"../forms/sendcoinsdialog.ui\" line=\"+14\"/>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"+140\"/>\n-        <location line=\"+213\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"+381\"/>\n+        <location line=\"+81\"/>\n         <source>Send Coins</source>\n         <translation>Stuur Munstukke</translation>\n     </message>\n     <message>\n-        <location line=\"+50\"/>\n+        <location line=\"+76\"/>\n+        <source>Coin Control Features</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+20\"/>\n+        <source>Inputs...</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+7\"/>\n+        <source>automatically selected</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+19\"/>\n+        <source>Insufficient funds!</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+89\"/>\n+        <source>Quantity:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+35\"/>\n+        <source>Bytes:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+48\"/>\n+        <source>Amount:</source>\n+        <translation>Bedrag:</translation>\n+    </message>\n+    <message>\n+        <location line=\"+32\"/>\n+        <source>Priority:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+48\"/>\n+        <source>Fee:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+32\"/>\n+        <source>Low Output:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+48\"/>\n+        <source>After Fee:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+32\"/>\n+        <source>Change:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+44\"/>\n+        <source>If this is activated, but the change address is empty or invalid, change will be sent to a newly generated address.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>Custom change address</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+115\"/>\n         <source>Send to multiple recipients at once</source>\n         <translation>Stuur aan vele ontvangers op eens</translation>\n     </message>\n@@ -1642,12 +2104,7 @@ Address: %4\n         <translation>Balans:</translation>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n-        <source>123.456 BTC</source>\n-        <translation>123.456 BTC</translation>\n-    </message>\n-    <message>\n-        <location line=\"+31\"/>\n+        <location line=\"+41\"/>\n         <source>Confirm the send action</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1657,69 +2114,135 @@ Address: %4\n         <translation>S&amp;tuur</translation>\n     </message>\n     <message>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"-154\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"-229\"/>\n         <source>Confirm send coins</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-90\"/>\n+        <location line=\"-74\"/>\n         <location line=\"+5\"/>\n         <location line=\"+5\"/>\n+        <location line=\"+4\"/>\n         <source>%1 to %2</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+26\"/>\n+        <location line=\"-136\"/>\n+        <source>Enter a Bitcoin address (e.g. 1NS17iag9jJgTHD1VXjvLCEnZuQ3rJDE9L)</source>\n+        <translation>Die adres waarheen die betaling gestuur moet word (b.v. 1NS17iag9jJgTHD1VXjvLCEnZuQ3rJDE9L)</translation>\n+    </message>\n+    <message>\n+        <location line=\"+15\"/>\n+        <source>Copy quantity</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Copy amount</source>\n+        <translation>Kopieer bedrag</translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Copy fee</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Copy after fee</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Copy bytes</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Copy priority</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Copy low output</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Copy change</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+170\"/>\n+        <source>Total Amount %1 (= %2)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+2\"/>\n+        <source>or</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+202\"/>\n         <source>The recipient address is not valid, please recheck.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n+        <location line=\"+3\"/>\n         <source>The amount to pay must be larger than 0.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n+        <location line=\"+3\"/>\n         <source>The amount exceeds your balance.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n+        <location line=\"+3\"/>\n         <source>The total exceeds your balance when the %1 transaction fee is included.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+5\"/>\n+        <location line=\"+3\"/>\n         <source>Duplicate address found, can only send to each address once per send operation.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>Transaction creation failed!</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n     <message>\n         <location line=\"+4\"/>\n-        <source>Error: Transaction creation failed!</source>\n+        <source>The transaction was rejected! This might happen if some of the coins in your wallet were already spent, such as if you used a copy of wallet.dat and coins were spent in the copy but not marked as spent here.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+15\"/>\n-        <source>Are you sure you want to send?</source>\n+        <location line=\"+113\"/>\n+        <source>Warning: Invalid Bitcoin address</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+9\"/>\n-        <source>added as transaction fee</source>\n+        <location line=\"+13\"/>\n+        <source>(no label)</source>\n+        <translation>(geen etiket)</translation>\n+    </message>\n+    <message>\n+        <location line=\"+8\"/>\n+        <source>Warning: Unknown change address</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+6\"/>\n-        <source>Total Amount %1</source>\n+        <location line=\"-378\"/>\n+        <source>Are you sure you want to send?</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+20\"/>\n-        <source>Error: The transaction was rejected. This might happen if some of the coins in your wallet were already spent, such as if you used a copy of wallet.dat and coins were spent in the copy but not marked as spent here.</source>\n+        <location line=\"+9\"/>\n+        <source>added as transaction fee</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+144\"/>\n+        <location line=\"+170\"/>\n         <source>Payment request expired</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1732,39 +2255,44 @@ Address: %4\n <context>\n     <name>SendCoinsEntry</name>\n     <message>\n-        <location filename=\"../forms/sendcoinsentry.ui\" line=\"+33\"/>\n-        <location line=\"+585\"/>\n+        <location filename=\"../forms/sendcoinsentry.ui\" line=\"+131\"/>\n+        <location line=\"+501\"/>\n+        <location line=\"+536\"/>\n         <source>A&amp;mount:</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-572\"/>\n-        <location line=\"+585\"/>\n+        <location line=\"-1132\"/>\n         <source>Pay &amp;To:</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-551\"/>\n+        <location line=\"+18\"/>\n         <source>The address to send the payment to (e.g. 1NS17iag9jJgTHD1VXjvLCEnZuQ3rJDE9L)</source>\n         <translation>Die adres waarheen die betaling gestuur moet word (b.v. 1H7wyVL5HCNoVFyyBJSDojwyxcCChU7TPA)</translation>\n     </message>\n     <message>\n-        <location filename=\"../sendcoinsentry.cpp\" line=\"+28\"/>\n+        <location filename=\"../sendcoinsentry.cpp\" line=\"+30\"/>\n         <source>Enter a label for this address to add it to your address book</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location filename=\"../forms/sendcoinsentry.ui\" line=\"-18\"/>\n+        <location filename=\"../forms/sendcoinsentry.ui\" line=\"+57\"/>\n         <source>&amp;Label:</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+28\"/>\n+        <location line=\"-50\"/>\n         <source>Choose previously used address</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n+        <location line=\"-40\"/>\n+        <source>This is a normal payment.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+50\"/>\n         <source>Alt+A</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1780,16 +2308,35 @@ Address: %4\n     </message>\n     <message>\n         <location line=\"+7\"/>\n-        <source>Remove this recipient</source>\n-        <translation>Verwyder die ontvanger</translation>\n+        <location line=\"+504\"/>\n+        <location line=\"+536\"/>\n+        <source>Remove this entry</source>\n+        <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+16\"/>\n+        <location line=\"-40\"/>\n+        <source>This is a verified payment request.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"-971\"/>\n         <source>Enter a label for this address to add it to the list of used addresses</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+465\"/>\n+        <location line=\"+439\"/>\n+        <source>This is an unverified payment request.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+18\"/>\n+        <location line=\"+532\"/>\n+        <source>Pay To:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"-498\"/>\n+        <location line=\"+536\"/>\n         <source>Memo:</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1910,7 +2457,7 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location filename=\"../signverifymessagedialog.cpp\" line=\"+27\"/>\n+        <location filename=\"../signverifymessagedialog.cpp\" line=\"+29\"/>\n         <location line=\"+3\"/>\n         <source>Enter a Bitcoin address (e.g. 1NS17iag9jJgTHD1VXjvLCEnZuQ3rJDE9L)</source>\n         <translation>Die adres waarheen die betaling gestuur moet word (b.v. 1NS17iag9jJgTHD1VXjvLCEnZuQ3rJDE9L)</translation>\n@@ -1926,7 +2473,7 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+85\"/>\n+        <location line=\"+84\"/>\n         <location line=\"+81\"/>\n         <source>The entered address is invalid.</source>\n         <translation type=\"unfinished\"/>\n@@ -1995,8 +2542,13 @@ Address: %4\n <context>\n     <name>SplashScreen</name>\n     <message>\n-        <location filename=\"../splashscreen.cpp\" line=\"+23\"/>\n-        <source>The Bitcoin developers</source>\n+        <location filename=\"../splashscreen.cpp\" line=\"+26\"/>\n+        <source>Bitcoin Core</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+2\"/>\n+        <source>The Bitcoin Core developers</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n@@ -2008,15 +2560,15 @@ Address: %4\n <context>\n     <name>TrafficGraphWidget</name>\n     <message>\n-        <location filename=\"../trafficgraphwidget.cpp\" line=\"+75\"/>\n+        <location filename=\"../trafficgraphwidget.cpp\" line=\"+79\"/>\n         <source>KB/s</source>\n         <translation type=\"unfinished\"/>\n     </message>\n </context>\n <context>\n     <name>TransactionDesc</name>\n     <message>\n-        <location filename=\"../transactiondesc.cpp\" line=\"+22\"/>\n+        <location filename=\"../transactiondesc.cpp\" line=\"+28\"/>\n         <source>Open until %1</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2208,7 +2760,7 @@ Address: %4\n <context>\n     <name>TransactionTableModel</name>\n     <message>\n-        <location filename=\"../transactiontablemodel.cpp\" line=\"+227\"/>\n+        <location filename=\"../transactiontablemodel.cpp\" line=\"+234\"/>\n         <source>Date</source>\n         <translation>Datum</translation>\n     </message>\n@@ -2285,7 +2837,7 @@ Address: %4\n     <message>\n         <location line=\"+2\"/>\n         <source>Payment to yourself</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>Betalings Aan/na jouself</translation>\n     </message>\n     <message>\n         <location line=\"+2\"/>\n@@ -2326,7 +2878,7 @@ Address: %4\n <context>\n     <name>TransactionView</name>\n     <message>\n-        <location filename=\"../transactionview.cpp\" line=\"+52\"/>\n+        <location filename=\"../transactionview.cpp\" line=\"+57\"/>\n         <location line=\"+16\"/>\n         <source>All</source>\n         <translation>Alles</translation>\n@@ -2387,12 +2939,12 @@ Address: %4\n         <translation>Ander</translation>\n     </message>\n     <message>\n-        <location line=\"+7\"/>\n+        <location line=\"+6\"/>\n         <source>Enter address or label to search</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+7\"/>\n+        <location line=\"+6\"/>\n         <source>Min amount</source>\n         <translation>Min bedrag</translation>\n     </message>\n@@ -2427,17 +2979,37 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+143\"/>\n-        <source>Export Transaction Data</source>\n+        <location line=\"+142\"/>\n+        <source>Export Transaction History</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+1\"/>\n+        <location line=\"+19\"/>\n+        <source>Exporting Failed</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+0\"/>\n+        <source>There was an error trying to save the transaction history to %1.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+4\"/>\n+        <source>Exporting Successful</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+0\"/>\n+        <source>The transaction history was successfully saved to %1.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"-22\"/>\n         <source>Comma separated file (*.csv)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+8\"/>\n+        <location line=\"+9\"/>\n         <source>Confirmed</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2472,17 +3044,7 @@ Address: %4\n         <translation>ID</translation>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n-        <source>Error exporting</source>\n-        <translation>Fout uitvoering</translation>\n-    </message>\n-    <message>\n-        <location line=\"+0\"/>\n-        <source>Could not write to file %1.</source>\n-        <translation>Kon nie na die %1 l\u00eaer skryf nie</translation>\n-    </message>\n-    <message>\n-        <location line=\"+100\"/>\n+        <location line=\"+107\"/>\n         <source>Range:</source>\n         <translation>Reeks:</translation>\n     </message>\n@@ -2492,18 +3054,26 @@ Address: %4\n         <translation>aan</translation>\n     </message>\n </context>\n+<context>\n+    <name>WalletFrame</name>\n+    <message>\n+        <location filename=\"../walletframe.cpp\" line=\"+26\"/>\n+        <source>No wallet has been loaded.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+</context>\n <context>\n     <name>WalletModel</name>\n     <message>\n-        <location filename=\"../walletmodel.cpp\" line=\"+218\"/>\n+        <location filename=\"../walletmodel.cpp\" line=\"+245\"/>\n         <source>Send Coins</source>\n         <translation>Stuur Munstukke</translation>\n     </message>\n </context>\n <context>\n     <name>WalletView</name>\n     <message>\n-        <location filename=\"../walletview.cpp\" line=\"+46\"/>\n+        <location filename=\"../walletview.cpp\" line=\"+43\"/>\n         <source>&amp;Export</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2513,65 +3083,60 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+183\"/>\n+        <location line=\"+181\"/>\n         <source>Backup Wallet</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+0\"/>\n+        <location line=\"+1\"/>\n         <source>Wallet Data (*.dat)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+3\"/>\n+        <location line=\"+6\"/>\n         <source>Backup Failed</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <location line=\"+0\"/>\n-        <source>There was an error trying to save the wallet data to the new location.</source>\n+        <source>There was an error trying to save the wallet data to %1.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <location line=\"+4\"/>\n-        <source>Backup Successful</source>\n+        <source>The wallet data was successfully saved to %1.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <location line=\"+0\"/>\n-        <source>The wallet data was successfully saved to the new location.</source>\n+        <source>Backup Successful</source>\n         <translation type=\"unfinished\"/>\n     </message>\n </context>\n <context>\n     <name>bitcoin-core</name>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"+102\"/>\n-        <source>Bitcoin version</source>\n-        <translation>Bitcoin weergawe</translation>\n-    </message>\n-    <message>\n-        <location line=\"+107\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"+217\"/>\n         <source>Usage:</source>\n         <translation>Gebruik:</translation>\n     </message>\n     <message>\n-        <location line=\"-55\"/>\n+        <location line=\"-54\"/>\n         <source>List commands</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-13\"/>\n+        <location line=\"-14\"/>\n         <source>Get help for a command</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+25\"/>\n+        <location line=\"+26\"/>\n         <source>Options:</source>\n         <translation>Opsies:</translation>\n     </message>\n     <message>\n-        <location line=\"+24\"/>\n+        <location line=\"+23\"/>\n         <source>Specify configuration file (default: bitcoin.conf)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2591,7 +3156,7 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-28\"/>\n+        <location line=\"-27\"/>\n         <source>Listen for connections on &lt;port&gt; (default: 8333 or testnet: 18333)</source>\n         <translation>Luister vir konneksies op &lt;port&gt; (standaard: 8333 of testnet: 18333)</translation>\n     </message>\n@@ -2601,7 +3166,7 @@ Address: %4\n         <translation>Onderhou op die meeste &lt;n&gt; konneksies na eweknie\u00eb (standaard: 125)</translation>\n     </message>\n     <message>\n-        <location line=\"-49\"/>\n+        <location line=\"-50\"/>\n         <source>Connect to a node to retrieve peer addresses, and disconnect</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2616,7 +3181,7 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-142\"/>\n+        <location line=\"-147\"/>\n         <source>Number of seconds to keep misbehaving peers from reconnecting (default: 86400)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2631,7 +3196,7 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+40\"/>\n+        <location line=\"+45\"/>\n         <source>Accept command line and JSON-RPC commands</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2641,17 +3206,17 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+40\"/>\n+        <location line=\"+39\"/>\n         <source>Use the test network</source>\n         <translation>Gebruik die toets netwerk</translation>\n     </message>\n     <message>\n-        <location line=\"-118\"/>\n+        <location line=\"-117\"/>\n         <source>Accept connections from outside (default: 1 if no -proxy or -connect)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-87\"/>\n+        <location line=\"-92\"/>\n         <source>%s, you must set a rpcpassword in the configuration file:\n %s\n It is recommended you use the following random password:\n@@ -2706,17 +3271,17 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+11\"/>\n-        <source>Set maximum size of high-priority/low-fee transactions in bytes (default: 27000)</source>\n+        <location line=\"+18\"/>\n+        <source>This is a pre-release test build - use at your own risk - do not use for mining or merchant applications</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+6\"/>\n-        <source>This is a pre-release test build - use at your own risk - do not use for mining or merchant applications</source>\n+        <location line=\"+5\"/>\n+        <source>Use separate SOCKS5 proxy to reach peers via Tor hidden services (default: -proxy)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+5\"/>\n+        <location line=\"+3\"/>\n         <source>Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2746,17 +3311,27 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+14\"/>\n+        <location line=\"+9\"/>\n+        <source>&lt;category&gt; can be:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+6\"/>\n         <source>Attempt to recover private keys from a corrupt wallet.dat</source>\n         <translation type=\"unfinished\"/>\n     </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Bitcoin Core Daemon</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n     <message>\n         <location line=\"+1\"/>\n         <source>Bitcoin RPC client version</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+2\"/>\n+        <location line=\"+1\"/>\n         <source>Block creation options:</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2766,7 +3341,12 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+2\"/>\n+        <location line=\"+1\"/>\n+        <source>Connect through SOCKS proxy</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n         <source>Connect to JSON-RPC on &lt;port&gt; (default: 8332 or testnet: 18332)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2876,7 +3456,12 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+2\"/>\n+        <location line=\"+1\"/>\n+        <source>Fee per kB to add to transactions you send</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n         <source>Find peers using DNS lookup (default: 1 unless -connect)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2895,6 +3480,11 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <source>How thorough the block verification is (0-4, default: 3)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>If &lt;category&gt; is not supplied, output all debugging information.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n     <message>\n         <location line=\"+2\"/>\n         <source>Incorrect or no genesis block found. Wrong datadir for network?</source>\n@@ -2911,17 +3501,37 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+8\"/>\n+        <location line=\"+5\"/>\n+        <source>Prepend debug output with timestamp (default: 1)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>RPC client options:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n         <source>Rebuild block chain index from current blk000??.dat files</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+6\"/>\n+        <location line=\"+5\"/>\n+        <source>Select SOCKS version for -proxy (4 or 5, default: 5)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n         <source>Send command to Bitcoin server</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n+        <location line=\"+8\"/>\n+        <source>Set maximum block size in bytes (default: %d)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+2\"/>\n         <source>Set the number of threads to service RPC calls (default: 4)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2941,7 +3551,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+8\"/>\n+        <location line=\"+7\"/>\n         <source>Verifying blocks...</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2950,13 +3560,23 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <source>Verifying wallet...</source>\n         <translation type=\"unfinished\"/>\n     </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Wait for RPC server to start</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n     <message>\n         <location line=\"+1\"/>\n         <source>Wallet %s resides outside data directory %s</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n+        <location line=\"+3\"/>\n+        <source>Warning: Deprecated argument -debugnet ignored, use -debug=net</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+2\"/>\n         <source>You need to rebuild the database using -reindex to change -txindex</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2966,17 +3586,27 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-98\"/>\n+        <location line=\"-104\"/>\n         <source>Execute command when a relevant alert is received or we see a really long fork (%s in cmd is replaced by message)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+17\"/>\n+        <location line=\"+14\"/>\n+        <source>Output debugging information (default: 0, supplying &lt;category&gt; is optional)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+2\"/>\n+        <source>Set maximum size of high-priority/low-fee transactions in bytes (default: %d)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+2\"/>\n         <source>Set the number of script verification threads (up to 16, 0 = auto, &lt;0 = leave that many cores free, default: 0)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+83\"/>\n+        <location line=\"+88\"/>\n         <source>Information</source>\n         <translation>Informasie</translation>\n     </message>\n@@ -3016,32 +3646,12 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+2\"/>\n-        <source>Output extra debugging information. Implies all other -debug* options</source>\n-        <translation type=\"unfinished\"/>\n-    </message>\n-    <message>\n-        <location line=\"+1\"/>\n-        <source>Output extra network debugging information</source>\n-        <translation type=\"unfinished\"/>\n-    </message>\n-    <message>\n-        <location line=\"+2\"/>\n-        <source>Prepend debug output with timestamp</source>\n-        <translation type=\"unfinished\"/>\n-    </message>\n-    <message>\n-        <location line=\"+5\"/>\n+        <location line=\"+9\"/>\n         <source>SSL options: (see the Bitcoin Wiki for SSL setup instructions)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+1\"/>\n-        <source>Select the version of socks proxy to use (4-5, default: 5)</source>\n-        <translation type=\"unfinished\"/>\n-    </message>\n-    <message>\n-        <location line=\"+3\"/>\n+        <location line=\"+4\"/>\n         <source>Send trace/debug info to console instead of debug.log file</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -3051,12 +3661,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+5\"/>\n-        <source>Set maximum block size in bytes (default: 250000)</source>\n-        <translation type=\"unfinished\"/>\n-    </message>\n-    <message>\n-        <location line=\"+1\"/>\n+        <location line=\"+6\"/>\n         <source>Set minimum block size in bytes (default: 0)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -3105,38 +3710,38 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <source>Use UPnP to map the listening port (default: 1 when listening)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n-    <message>\n-        <location line=\"+1\"/>\n-        <source>Use proxy to reach tor hidden services (default: same as -proxy)</source>\n-        <translation type=\"unfinished\"/>\n-    </message>\n     <message>\n         <location line=\"+2\"/>\n         <source>Username for JSON-RPC connections</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+5\"/>\n+        <location line=\"+6\"/>\n         <source>Warning</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+1\"/>\n+        <location line=\"+2\"/>\n         <source>Warning: This version is obsolete, upgrade required!</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <location line=\"+2\"/>\n+        <source>version</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n         <source>wallet.dat corrupt, salvage failed</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-54\"/>\n+        <location line=\"-57\"/>\n         <source>Password for JSON-RPC connections</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-70\"/>\n+        <location line=\"-69\"/>\n         <source>Allow JSON-RPC connections from specified IP address</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -3146,12 +3751,12 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-126\"/>\n+        <location line=\"-131\"/>\n         <source>Execute command when the best block changes (%s in cmd is replaced by block hash)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+155\"/>\n+        <location line=\"+160\"/>\n         <source>Upgrade wallet to latest format</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -3191,22 +3796,17 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-95\"/>\n-        <source>Connect through socks proxy</source>\n-        <translation type=\"unfinished\"/>\n-    </message>\n-    <message>\n-        <location line=\"-11\"/>\n+        <location line=\"-106\"/>\n         <source>Allow DNS lookups for -addnode, -seednode and -connect</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+58\"/>\n+        <location line=\"+59\"/>\n         <source>Loading addresses...</source>\n         <translation>Laai adresse...</translation>\n     </message>\n     <message>\n-        <location line=\"-36\"/>\n+        <location line=\"-37\"/>\n         <source>Error loading wallet.dat: Wallet corrupted</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -3226,12 +3826,12 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+30\"/>\n+        <location line=\"+31\"/>\n         <source>Invalid -proxy address: &apos;%s&apos;</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+57\"/>\n+        <location line=\"+56\"/>\n         <source>Unknown network specified in -onlynet: &apos;%s&apos;</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -3251,7 +3851,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+46\"/>\n+        <location line=\"+47\"/>\n         <source>Invalid amount for -paytxfee=&lt;amount&gt;: &apos;%s&apos;</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -3271,27 +3871,22 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>Laai blok indeks...</translation>\n     </message>\n     <message>\n-        <location line=\"-60\"/>\n+        <location line=\"-61\"/>\n         <source>Add a node to connect to and attempt to keep the connection open</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-28\"/>\n+        <location line=\"-32\"/>\n         <source>Unable to bind to %s on this computer. Bitcoin is probably already running.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+69\"/>\n-        <source>Fee per KB to add to transactions you send</source>\n-        <translation type=\"unfinished\"/>\n-    </message>\n-    <message>\n-        <location line=\"+20\"/>\n+        <location line=\"+94\"/>\n         <source>Loading wallet...</source>\n         <translation>Laai beursie...</translation>\n     </message>\n     <message>\n-        <location line=\"-54\"/>\n+        <location line=\"-55\"/>\n         <source>Cannot downgrade wallet</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -3321,7 +3916,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>Fout</translation>\n     </message>\n     <message>\n-        <location line=\"-33\"/>\n+        <location line=\"-34\"/>\n         <source>You must set rpcpassword=&lt;password&gt; in the configuration file:\n %s\n If the file does not exist, create it with owner-readable-only file permissions.</source>"
      },
      {
        "sha": "b1b9f7f4b52250f3372b0cb1336f0cde8abf19f2",
        "filename": "src/qt/locale/bitcoin_be_BY.ts",
        "status": "modified",
        "additions": 1053,
        "deletions": 454,
        "changes": 1507,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6d697e9fa45b3f3bf67d79cc3d17717b68a43825/src/qt/locale/bitcoin_be_BY.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6d697e9fa45b3f3bf67d79cc3d17717b68a43825/src/qt/locale/bitcoin_be_BY.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_be_BY.ts?ref=6d697e9fa45b3f3bf67d79cc3d17717b68a43825",
        "patch": "@@ -3,13 +3,13 @@\n     <name>AboutDialog</name>\n     <message>\n         <location filename=\"../forms/aboutdialog.ui\" line=\"+14\"/>\n-        <source>About Bitcoin</source>\n-        <translation>\u0410\u0431 \u0411\u0456\u0442\u043a\u043e\u0439\u043d</translation>\n+        <source>About Bitcoin Core</source>\n+        <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <location line=\"+39\"/>\n-        <source>&lt;b&gt;Bitcoin&lt;/b&gt; version</source>\n-        <translation>\u0412\u0435\u0440\u0441\u0456\u044f &lt;b&gt;Bitcoin&lt;/b&gt;</translation>\n+        <source>&lt;b&gt;Bitcoin Core&lt;/b&gt; version</source>\n+        <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <location line=\"+57\"/>\n@@ -22,7 +22,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location filename=\"../aboutdialog.cpp\" line=\"+14\"/>\n+        <location filename=\"../aboutdialog.cpp\" line=\"+19\"/>\n         <source>Copyright</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -65,7 +65,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location filename=\"../addressbookpage.cpp\" line=\"+72\"/>\n+        <location filename=\"../addressbookpage.cpp\" line=\"+74\"/>\n         <source>&amp;Copy Address</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -82,7 +82,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n     <message>\n         <location line=\"+3\"/>\n         <source>&amp;Export</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u042d\u043a\u0441\u043f\u0430\u0440\u0442</translation>\n     </message>\n     <message>\n         <location line=\"-27\"/>\n@@ -135,7 +135,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+197\"/>\n+        <location line=\"+194\"/>\n         <source>Export Address List</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -158,7 +158,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n <context>\n     <name>AddressTableModel</name>\n     <message>\n-        <location filename=\"../addresstablemodel.cpp\" line=\"+164\"/>\n+        <location filename=\"../addresstablemodel.cpp\" line=\"+168\"/>\n         <source>Label</source>\n         <translation>\u041f\u0430\u0437\u043d\u0430\u043a\u0430</translation>\n     </message>\n@@ -196,7 +196,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation>\u041f\u0430\u045e\u0442\u0430\u0440\u044b\u0446\u0435 \u043d\u043e\u0432\u0443\u044e \u043a\u043e\u0434\u0430\u0432\u0443\u044e \u0444\u0440\u0430\u0437\u0443</translation>\n     </message>\n     <message>\n-        <location filename=\"../askpassphrasedialog.cpp\" line=\"+34\"/>\n+        <location filename=\"../askpassphrasedialog.cpp\" line=\"+40\"/>\n         <source>Enter the new passphrase to the wallet.&lt;br/&gt;Please use a passphrase of &lt;b&gt;10 or more random characters&lt;/b&gt;, or &lt;b&gt;eight or more words&lt;/b&gt;.</source>\n         <translation>\u0423\u0432\u044f\u0434\u0437\u0456\u0446\u0435 \u043d\u043e\u0432\u0443\u044e \u043a\u043e\u0434\u0430\u0432\u0443\u044e \u0444\u0440\u0430\u0437\u0443 \u0434\u043b\u044f \u0433\u0430\u043c\u0430\u043d\u0446\u0430. &lt;br/&gt;\u041a\u0430\u043b\u0456 \u043b\u0430\u0441\u043a\u0430, \u045e\u0436\u044b\u0432\u0430\u0439\u0446\u0435 \u043f\u0430\u0440\u043e\u043b\u044c &lt;b&gt;\u043d\u0435 \u043c\u0435\u043d\u044c\u0448\u0430 \u0437\u0430 10 \u0430\u0434\u0432\u043e\u043b\u044c\u043d\u044b\u0445 \u0441\u0456\u043c\u0432\u0430\u043b\u0430\u045e&lt;/b&gt;, \u0446\u0456 &lt;b&gt;\u0431\u043e\u043b\u0435\u0439 \u0432\u0430\u0441\u044c\u043c\u0456 \u0441\u043b\u043e\u045e&lt;/b&gt;.</translation>\n     </message>\n@@ -228,7 +228,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n     <message>\n         <location line=\"+3\"/>\n         <source>Change passphrase</source>\n-        <translation>\u0417\u043c\u044f\u043d\u0456\u0446\u044c \u043f\u0430\u0440\u043e\u043b\u044c\u043d\u0443\u044e \u0444\u0440\u0430\u0437\u0443</translation>\n+        <translation>\u0417\u043c\u044f\u043d\u0456\u0446\u044c \u043f\u0430\u0440\u043e\u043b\u044c</translation>\n     </message>\n     <message>\n         <location line=\"+1\"/>\n@@ -270,7 +270,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n     <message>\n         <location line=\"-56\"/>\n         <source>Bitcoin will close now to finish the encryption process. Remember that encrypting your wallet cannot fully protect your bitcoins from being stolen by malware infecting your computer.</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>Bitcoin \u0437\u0430\u0447\u044b\u043d\u044f\u0435\u0446\u0446\u0430 \u0434\u0437\u0435\u043b\u044f \u0437\u0430\u0432\u044f\u0440\u0448\u044d\u043d\u043d\u044f \u043f\u0440\u0430\u0446\u044d\u0441\u0441\u0430 \u0448\u044b\u0444\u0440\u0430\u0432\u0430\u043d\u043d\u044f. \u041f\u0430\u043c\u044f\u0442\u0430\u0439\u0446\u0435, \u0448\u0442\u043e \u0448\u044b\u0444\u0440\u0430\u0432\u0430\u043d\u043d\u0435 \u0433\u0430\u043c\u0430\u043d\u0446\u0430 \u0446\u0430\u043b\u043a\u0430\u043c \u0430\u0431\u0430\u0440\u0430\u043d\u044f\u0435 \u0432\u0430\u0448\u044b\u044f \u0441\u0440\u043e\u0434\u043a\u0456 \u0430\u0434 \u0441\u043a\u0440\u0430\u0434\u0430\u043d\u043d\u044f \u0448\u043a\u043e\u0434\u043d\u044b\u043c\u0456 \u043f\u0440\u0430\u0433\u0440\u0430\u043c\u0430\u043c\u0456 \u044f\u043a\u0456\u044f \u043c\u043e\u0433\u0443\u0446\u044c \u043f\u0440\u0430\u043d\u0456\u043a\u043d\u0443\u0446\u044c \u0443 \u0432\u0430\u0448 \u043a\u0430\u043c\u043f&apos;\u044e\u0442\u0430\u0440.</translation>\n     </message>\n     <message>\n         <location line=\"+13\"/>\n@@ -283,7 +283,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n     <message>\n         <location line=\"-54\"/>\n         <source>Wallet encryption failed due to an internal error. Your wallet was not encrypted.</source>\n-        <translation>\u0428\u044b\u0444\u0440\u0430\u0432\u0430\u043d\u043d\u0435 \u0433\u0430\u043c\u0430\u043d\u0446\u0430 \u043d\u0435 \u0430\u0434\u0431\u044b\u043b\u043e\u0441\u044f \u0437-\u0437\u0430 \u0443\u043d\u0443\u0442\u0440\u0430\u043d\u0430\u0439 \u043f\u0430\u043c\u044b\u043b\u043a\u0456. \u0413\u0430\u043c\u0430\u043d\u0435\u0446 \u043d\u0435\u0437\u0430\u0448\u044b\u0444\u0440\u0430\u0432\u0430\u043d\u044b.</translation>\n+        <translation>\u0428\u044b\u0444\u0440\u0430\u0432\u0430\u043d\u043d\u0435 \u0433\u0430\u043c\u0430\u043d\u0446\u0430 \u043d\u0435 \u0430\u0434\u0431\u044b\u043b\u043e\u0441\u044f \u0437-\u0437\u0430 \u045e\u043d\u0443\u0442\u0440\u0430\u043d\u0430\u0439 \u043f\u0430\u043c\u044b\u043b\u043a\u0456. \u0413\u0430\u043c\u0430\u043d\u0435\u0446 \u043d\u0435\u0437\u0430\u0448\u044b\u0444\u0440\u0430\u0432\u0430\u043d\u044b.</translation>\n     </message>\n     <message>\n         <location line=\"+7\"/>\n@@ -317,17 +317,17 @@ This product includes software developed by the OpenSSL Project for use in the O\n <context>\n     <name>BitcoinGUI</name>\n     <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"+250\"/>\n+        <location filename=\"../bitcoingui.cpp\" line=\"+260\"/>\n         <source>Sign &amp;message...</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+254\"/>\n+        <location line=\"+290\"/>\n         <source>Synchronizing with network...</source>\n-        <translation>\u0421\u0456\u043d\u0445\u0440\u0430\u043d\u0456\u0437\u0430\u0446\u044b\u044f \u0437 \u0441\u0435\u0446\u0456\u0432\u0430\u043c</translation>\n+        <translation>\u0421\u0456\u043d\u0445\u0440\u0430\u043d\u0456\u0437\u0430\u0446\u044b\u044f \u0437 \u0441\u0435\u0446\u0456\u0432\u0430\u043c...</translation>\n     </message>\n     <message>\n-        <location line=\"-324\"/>\n+        <location line=\"-360\"/>\n         <source>&amp;Overview</source>\n         <translation>\u0410\u0433\u043b\u044f\u0434</translation>\n     </message>\n@@ -365,12 +365,12 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <location line=\"+3\"/>\n         <location line=\"+2\"/>\n         <source>About &amp;Qt</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0410\u0431 Qt</translation>\n     </message>\n     <message>\n         <location line=\"+2\"/>\n         <source>Show information about Qt</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u041f\u0430\u043a\u0430\u0437\u0430\u0446\u044c \u0456\u043d\u0444\u0430\u0440\u043c\u0430\u0446\u044b\u044e \u0430\u0431 Qt</translation>\n     </message>\n     <message>\n         <location line=\"+2\"/>\n@@ -393,7 +393,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+259\"/>\n+        <location line=\"+295\"/>\n         <source>Importing blocks from disk...</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -403,7 +403,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-322\"/>\n+        <location line=\"-358\"/>\n         <source>Send coins to a Bitcoin address</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -415,7 +415,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n     <message>\n         <location line=\"+12\"/>\n         <source>Backup wallet to another location</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0417\u0440\u0430\u0431\u0456\u0446\u0435 \u043a\u043e\u043f\u0456\u044e \u0433\u0430\u043c\u0430\u043d\u0446\u0430 \u045e \u0456\u043d\u0448\u0430\u0435 \u043c\u0435\u0441\u0446\u0430</translation>\n     </message>\n     <message>\n         <location line=\"+2\"/>\n@@ -438,20 +438,18 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-180\"/>\n-        <location line=\"+6\"/>\n-        <location line=\"+513\"/>\n+        <location line=\"+375\"/>\n         <source>Bitcoin</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-519\"/>\n-        <location line=\"+6\"/>\n+        <location line=\"-563\"/>\n+        <location line=\"+10\"/>\n         <source>Wallet</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+109\"/>\n+        <location line=\"+113\"/>\n         <source>&amp;Send</source>\n         <translation>\u0414\u0430\u0441\u043b\u0430\u0446\u044c</translation>\n     </message>\n@@ -461,13 +459,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation>\u0410\u0442\u0440\u044b\u043c\u0430\u0446\u044c</translation>\n     </message>\n     <message>\n-        <location line=\"+28\"/>\n-        <location line=\"+2\"/>\n-        <source>&amp;About Bitcoin</source>\n-        <translation type=\"unfinished\"/>\n-    </message>\n-    <message>\n-        <location line=\"+14\"/>\n+        <location line=\"+44\"/>\n         <location line=\"+2\"/>\n         <source>&amp;Show / Hide</source>\n         <translation type=\"unfinished\"/>\n@@ -493,12 +485,12 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+35\"/>\n+        <location line=\"+39\"/>\n         <source>&amp;File</source>\n         <translation>\u0424&amp;\u0430\u0439\u043b</translation>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n+        <location line=\"+11\"/>\n         <source>&amp;Settings</source>\n         <translation>\u041d\u0430\u043b\u0430\u0434\u043a\u0456</translation>\n     </message>\n@@ -513,18 +505,30 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-235\"/>\n-        <location line=\"+294\"/>\n+        <location line=\"-244\"/>\n+        <location line=\"+321\"/>\n         <source>[testnet]</source>\n         <translation>[testnet]</translation>\n     </message>\n     <message>\n-        <location line=\"-177\"/>\n+        <location line=\"-331\"/>\n+        <location line=\"+10\"/>\n+        <source>Bitcoin Core</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+121\"/>\n         <source>Request payments (generates QR codes and bitcoin: URIs)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+63\"/>\n+        <location line=\"+27\"/>\n+        <location line=\"+2\"/>\n+        <source>&amp;About Bitcoin Core</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+34\"/>\n         <source>&amp;Used sending addresses...</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -544,13 +548,23 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+106\"/>\n+        <location line=\"+2\"/>\n+        <source>Open URI...</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Open a bitcoin: URI or payment request</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+126\"/>\n         <location line=\"+5\"/>\n         <source>Bitcoin client</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>Bitcoin \u043a\u043b\u0456\u0435\u043d\u0442</translation>\n     </message>\n     <message numerus=\"yes\">\n-        <location line=\"+120\"/>\n+        <location line=\"+133\"/>\n         <source>%n active connection(s) to Bitcoin network</source>\n         <translation><numerusform>%n \u0430\u043a\u0442\u044b\u045e\u043d\u0430\u0435 \u0437\u043b\u0443\u0447\u044d\u043d\u043d\u0435 \u0437 Bitcoin-\u0441\u0435\u0446\u0456\u0432\u0430\u043c</numerusform><numerusform>%n \u0430\u043a\u0442\u044b\u045e\u043d\u044b\u0445 \u0437\u043b\u0443\u0447\u044d\u043d\u043d\u044f\u045e \u0437 Bitcoin-\u0441\u0435\u0446\u0456\u0432\u0430\u043c</numerusform></translation>\n     </message>\n@@ -602,7 +616,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n     <message>\n         <location line=\"+27\"/>\n         <source>Error</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u041f\u0430\u043c\u044b\u043b\u043a\u0430</translation>\n     </message>\n     <message>\n         <location line=\"+3\"/>\n@@ -642,7 +656,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n     <message>\n         <location line=\"+0\"/>\n         <source>Incoming transaction</source>\n-        <translation>\u0423\u0432\u0430\u0445\u043e\u0434\u043d\u044b\u044f \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u044b\u0456</translation>\n+        <translation>\u041f\u0440\u044b\u043d\u044f\u0442\u044b\u044f \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u044b\u0456</translation>\n     </message>\n     <message>\n         <location line=\"+1\"/>\n@@ -651,20 +665,14 @@ Amount: %2\n Type: %3\n Address: %4\n </source>\n-        <translation type=\"unfinished\"/>\n-    </message>\n-    <message>\n-        <location line=\"+34\"/>\n-        <source>URI handling</source>\n-        <translation type=\"unfinished\"/>\n-    </message>\n-    <message>\n-        <location line=\"+0\"/>\n-        <source>URI can not be parsed! This can be caused by an invalid Bitcoin address or malformed URI parameters.</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0414\u0430\u0442\u0430: %1\n+\u041a\u043e\u043b\u044c\u043a\u0430\u0441\u0446\u044c: %2\n+\u0422\u044b\u043f: %3\n+\u0410\u0434\u0440\u0430\u0441: %4\n+</translation>\n     </message>\n     <message>\n-        <location line=\"+45\"/>\n+        <location line=\"+67\"/>\n         <source>Wallet is &lt;b&gt;encrypted&lt;/b&gt; and currently &lt;b&gt;unlocked&lt;/b&gt;</source>\n         <translation>\u0413\u0430\u043c\u0430\u043d\u0435\u0446 &lt;b&gt;\u0437\u0430\u0448\u044b\u0444\u0440\u0430\u0432\u0430\u043d\u044b&lt;/b&gt; \u0456 \u0437\u0430\u0440\u0430\u0437 &lt;b&gt;\u0440\u0430\u0437\u0431\u043b\u0430\u043a\u0430\u0432\u0430\u043d\u044b&lt;/b&gt;</translation>\n     </message>\n@@ -674,297 +682,622 @@ Address: %4\n         <translation>\u0413\u0430\u043c\u0430\u043d\u0435\u0446 &lt;b&gt;\u0437\u0430\u0448\u044b\u0444\u0440\u0430\u0432\u0430\u043d\u044b&lt;/b&gt; \u0456 \u0437\u0430\u0440\u0430\u0437 &lt;b&gt;\u0437\u0430\u0431\u043b\u0430\u043a\u0430\u0432\u0430\u043d\u044b&lt;/b&gt;</translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoin.cpp\" line=\"+110\"/>\n+        <location filename=\"../bitcoin.cpp\" line=\"+116\"/>\n         <source>A fatal error occurred. Bitcoin can no longer continue safely and will quit.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n </context>\n <context>\n     <name>ClientModel</name>\n     <message>\n-        <location filename=\"../clientmodel.cpp\" line=\"+115\"/>\n+        <location filename=\"../clientmodel.cpp\" line=\"+119\"/>\n         <source>Network Alert</source>\n         <translation type=\"unfinished\"/>\n     </message>\n </context>\n <context>\n-    <name>EditAddressDialog</name>\n+    <name>CoinControlDialog</name>\n     <message>\n-        <location filename=\"../forms/editaddressdialog.ui\" line=\"+14\"/>\n-        <source>Edit Address</source>\n-        <translation>\u0420\u044d\u0434\u0430\u0433\u0430\u0432\u0430\u0446\u044c \u0410\u0434\u0440\u0430\u0441</translation>\n+        <location filename=\"../forms/coincontroldialog.ui\" line=\"+14\"/>\n+        <source>Coin Control Address Selection</source>\n+        <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+11\"/>\n-        <source>&amp;Label</source>\n-        <translation>\u041f\u0430\u0437\u043d\u0430\u043a\u0430</translation>\n+        <location line=\"+34\"/>\n+        <source>Quantity:</source>\n+        <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n-        <source>The label associated with this address list entry</source>\n+        <location line=\"+29\"/>\n+        <source>Bytes:</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+17\"/>\n-        <source>The address associated with this address list entry. This can only be modified for sending addresses.</source>\n+        <location line=\"+45\"/>\n+        <source>Amount:</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-10\"/>\n-        <source>&amp;Address</source>\n-        <translation>\u0410\u0434\u0440\u0430\u0441</translation>\n+        <location line=\"+29\"/>\n+        <source>Priority:</source>\n+        <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location filename=\"../editaddressdialog.cpp\" line=\"+21\"/>\n-        <source>New receiving address</source>\n-        <translation>\u041d\u043e\u0432\u044b \u0430\u0434\u0440\u0430\u0441 \u0434\u043b\u044f \u0430\u0442\u0440\u044b\u043c\u0430\u043d\u043d\u044f</translation>\n+        <location line=\"+45\"/>\n+        <source>Fee:</source>\n+        <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n-        <source>New sending address</source>\n-        <translation>\u041d\u043e\u0432\u044b \u0430\u0434\u0440\u0430\u0441 \u0434\u043b\u044f \u0434\u0430\u0441\u044b\u043b\u0430\u043d\u043d\u044f</translation>\n+        <location line=\"+32\"/>\n+        <source>Low Output:</source>\n+        <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+3\"/>\n-        <source>Edit receiving address</source>\n-        <translation>\u0420\u044d\u0434\u0430\u0433\u0430\u0432\u0430\u0446\u044c \u0430\u0434\u0440\u0430\u0441 \u043f\u0440\u044b\u043c\u0430\u043d\u043d\u044f</translation>\n+        <location line=\"+48\"/>\n+        <source>After Fee:</source>\n+        <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n-        <source>Edit sending address</source>\n-        <translation>\u0420\u044d\u0434\u0430\u0433\u0430\u0432\u0430\u0446\u044c \u0430\u0434\u0440\u0430\u0441 \u0434\u0430\u0441\u044b\u043b\u0430\u043d\u043d\u044f</translation>\n+        <location line=\"+32\"/>\n+        <source>Change:</source>\n+        <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+76\"/>\n-        <source>The entered address &quot;%1&quot; is already in the address book.</source>\n-        <translation>\u0423\u0432\u0435\u0434\u0437\u0435\u043d\u044b \u0430\u0434\u0440\u0430\u0441 &quot;%1&quot; \u0443\u0436\u043e \u045e \u043a\u043d\u0456\u0433\u0435 \u0430\u0434\u0440\u0430\u0441\u043e\u045e</translation>\n+        <location line=\"+63\"/>\n+        <source>(un)select all</source>\n+        <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-5\"/>\n-        <source>The entered address &quot;%1&quot; is not a valid Bitcoin address.</source>\n+        <location line=\"+13\"/>\n+        <source>Tree mode</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+16\"/>\n+        <source>List mode</source>\n         <translation type=\"unfinished\"/>\n     </message>\n+    <message>\n+        <location line=\"+52\"/>\n+        <source>Amount</source>\n+        <translation>\u041a\u043e\u043b\u044c\u043a\u0430\u0441\u0446\u044c</translation>\n+    </message>\n     <message>\n         <location line=\"+10\"/>\n-        <source>Could not unlock wallet.</source>\n-        <translation>\u041d\u0435\u043c\u0430\u0433\u0447\u044b\u043c\u0430 \u0440\u0430\u0437\u0431\u043b\u0430\u043a\u0430\u0432\u0430\u0446\u044c \u0433\u0430\u043c\u0430\u043d\u0435\u0446</translation>\n+        <source>Address</source>\n+        <translation>\u0410\u0434\u0440\u0430\u0441</translation>\n     </message>\n     <message>\n         <location line=\"+5\"/>\n-        <source>New key generation failed.</source>\n-        <translation>\u0413\u0435\u043d\u0435\u0440\u0430\u0446\u044b\u044f \u043d\u043e\u0432\u0430\u0433\u0430 \u043a\u043b\u044e\u0447\u0430 \u043d\u044f\u045e\u0434\u0430\u043b\u0430\u044f</translation>\n+        <source>Date</source>\n+        <translation>\u0414\u0430\u0442\u0430</translation>\n     </message>\n-</context>\n-<context>\n-    <name>FreespaceChecker</name>\n     <message>\n-        <location filename=\"../intro.cpp\" line=\"+61\"/>\n-        <source>A new data directory will be created.</source>\n+        <location line=\"+5\"/>\n+        <source>Confirmations</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+22\"/>\n-        <source>name</source>\n-        <translation type=\"unfinished\"/>\n+        <location line=\"+3\"/>\n+        <source>Confirmed</source>\n+        <translation>\u041f\u0430\u0446\u0432\u0435\u0440\u0434\u0436\u0430\u043d\u0430</translation>\n     </message>\n     <message>\n-        <location line=\"+2\"/>\n-        <source>Directory already exists. Add %1 if you intend to create a new directory here.</source>\n+        <location line=\"+5\"/>\n+        <source>Priority</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+3\"/>\n-        <source>Path already exists, and is not a directory.</source>\n-        <translation type=\"unfinished\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"+42\"/>\n+        <source>Copy address</source>\n+        <translation>\u041a\u0430\u043f\u0456\u044f\u0432\u0430\u0446\u044c \u0430\u0434\u0440\u0430\u0441</translation>\n     </message>\n     <message>\n-        <location line=\"+7\"/>\n-        <source>Cannot create data directory here.</source>\n-        <translation type=\"unfinished\"/>\n+        <location line=\"+1\"/>\n+        <source>Copy label</source>\n+        <translation>\u041a\u0430\u043f\u0456\u044f\u0432\u0430\u0446\u044c \u043f\u0430\u0437\u043d\u0430\u043a\u0443</translation>\n     </message>\n-</context>\n-<context>\n-    <name>GUIUtil::HelpMessageBox</name>\n     <message>\n-        <location filename=\"../guiutil.cpp\" line=\"+558\"/>\n-        <location line=\"+13\"/>\n-        <source>Bitcoin-Qt</source>\n-        <translation type=\"unfinished\"/>\n+        <location line=\"+1\"/>\n+        <location line=\"+26\"/>\n+        <source>Copy amount</source>\n+        <translation>\u041a\u0430\u043f\u0456\u044f\u0432\u0430\u0446\u044c \u043a\u043e\u043b\u044c\u043a\u0430\u0441\u0446\u044c</translation>\n     </message>\n     <message>\n-        <location line=\"-13\"/>\n-        <source>version</source>\n-        <translation type=\"unfinished\"/>\n+        <location line=\"-25\"/>\n+        <source>Copy transaction ID</source>\n+        <translation>\u041a\u0430\u043f\u0456\u044f\u0432\u0430\u0446\u044c ID \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u044b\u0456</translation>\n     </message>\n     <message>\n-        <location line=\"+2\"/>\n-        <source>Usage:</source>\n-        <translation>\u0423\u0436\u044b\u0432\u0430\u043d\u043d\u0435:</translation>\n+        <location line=\"+1\"/>\n+        <source>Lock unspent</source>\n+        <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <location line=\"+1\"/>\n-        <source>command-line options</source>\n+        <source>Unlock unspent</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n-        <source>UI options</source>\n+        <location line=\"+22\"/>\n+        <source>Copy quantity</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+2\"/>\n+        <source>Copy fee</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <location line=\"+1\"/>\n-        <source>Set language, for example &quot;de_DE&quot; (default: system locale)</source>\n+        <source>Copy after fee</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <location line=\"+1\"/>\n-        <source>Start minimized</source>\n+        <source>Copy bytes</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <location line=\"+1\"/>\n-        <source>Show splash screen on startup (default: 1)</source>\n+        <source>Copy priority</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <location line=\"+1\"/>\n-        <source>Choose data directory on startup (default: 0)</source>\n+        <source>Copy low output</source>\n         <translation type=\"unfinished\"/>\n     </message>\n-</context>\n-<context>\n-    <name>Intro</name>\n     <message>\n-        <location filename=\"../forms/intro.ui\" line=\"+14\"/>\n-        <source>Welcome</source>\n+        <location line=\"+1\"/>\n+        <source>Copy change</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+9\"/>\n-        <source>Welcome to Bitcoin-Qt.</source>\n+        <location line=\"+323\"/>\n+        <source>highest</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+26\"/>\n-        <source>As this is the first time the program is launched, you can choose where Bitcoin-Qt will store its data.</source>\n+        <location line=\"+1\"/>\n+        <source>higher</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n-        <source>Bitcoin-Qt will download and store a copy of the Bitcoin block chain. At least %1GB of data will be stored in this directory, and it will grow over time. The wallet will also be stored in this directory.</source>\n+        <location line=\"+1\"/>\n+        <source>high</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n-        <source>Use the default data directory</source>\n+        <location line=\"+1\"/>\n+        <source>medium-high</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+7\"/>\n-        <source>Use a custom data directory:</source>\n+        <location line=\"+1\"/>\n+        <source>medium</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location filename=\"../intro.cpp\" line=\"+105\"/>\n-        <source>Error</source>\n+        <location line=\"+4\"/>\n+        <source>low-medium</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+9\"/>\n-        <source>GB of free space available</source>\n+        <location line=\"+1\"/>\n+        <source>low</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+3\"/>\n-        <source>(of %1GB needed)</source>\n+        <location line=\"+1\"/>\n+        <source>lower</source>\n         <translation type=\"unfinished\"/>\n     </message>\n-</context>\n-<context>\n-    <name>OptionsDialog</name>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"+14\"/>\n-        <source>Options</source>\n-        <translation>\u041e\u043f\u0446\u044b\u0456</translation>\n+        <location line=\"+1\"/>\n+        <source>lowest</source>\n+        <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+16\"/>\n-        <source>&amp;Main</source>\n+        <location line=\"+11\"/>\n+        <source>(%1 locked)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+6\"/>\n-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB.</source>\n+        <location line=\"+171\"/>\n+        <source>Dust</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+15\"/>\n-        <source>Pay transaction &amp;fee</source>\n+        <location line=\"+0\"/>\n+        <source>yes</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+31\"/>\n-        <source>Automatically start Bitcoin after logging in to the system.</source>\n+        <location line=\"+0\"/>\n+        <source>no</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+3\"/>\n-        <source>&amp;Start Bitcoin on system login</source>\n+        <location line=\"+10\"/>\n+        <source>This label turns red, if the transaction size is greater than 1000 bytes.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+35\"/>\n-        <source>Reset all client options to default.</source>\n+        <location line=\"+1\"/>\n+        <location line=\"+5\"/>\n+        <source>This means a fee of at least %1 per kB is required.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+3\"/>\n-        <source>&amp;Reset Options</source>\n+        <location line=\"-4\"/>\n+        <source>Can vary +/- 1 byte per input.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+13\"/>\n-        <source>&amp;Network</source>\n+        <location line=\"+2\"/>\n+        <source>Transactions with higher priority are more likely to get included into a block.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+6\"/>\n-        <source>Automatically open the Bitcoin client port on the router. This only works when your router supports UPnP and it is enabled.</source>\n+        <location line=\"+1\"/>\n+        <source>This label turns red, if the priority is smaller than &quot;medium&quot;</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <location line=\"+3\"/>\n-        <source>Map port using &amp;UPnP</source>\n+        <source>This label turns red, if any recipient receives an amount smaller than %1.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+7\"/>\n-        <source>Connect to the Bitcoin network through a SOCKS proxy (e.g. when connecting through Tor).</source>\n+        <location line=\"+1\"/>\n+        <location line=\"+4\"/>\n+        <source>This means a fee of at least %1 is required.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+3\"/>\n-        <source>&amp;Connect through SOCKS proxy:</source>\n+        <location line=\"-3\"/>\n+        <source>Amounts below 0.546 times the minimum relay fee are shown as dust.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+9\"/>\n-        <source>Proxy &amp;IP:</source>\n+        <location line=\"+2\"/>\n+        <source>This label turns red, if the change is smaller than %1.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+19\"/>\n-        <source>IP address of the proxy (e.g. 127.0.0.1)</source>\n-        <translation type=\"unfinished\"/>\n+        <location line=\"+43\"/>\n+        <location line=\"+66\"/>\n+        <source>(no label)</source>\n+        <translation>\u043d\u0435\u043f\u0430\u0437\u043d\u0430\u0447\u0430\u043d\u044b</translation>\n     </message>\n     <message>\n-        <location line=\"+7\"/>\n-        <source>&amp;Port:</source>\n+        <location line=\"-9\"/>\n+        <source>change from %1 (%2)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+19\"/>\n-        <source>Port of the proxy (e.g. 9050)</source>\n+        <location line=\"+1\"/>\n+        <source>(change)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+</context>\n+<context>\n+    <name>EditAddressDialog</name>\n+    <message>\n+        <location filename=\"../forms/editaddressdialog.ui\" line=\"+14\"/>\n+        <source>Edit Address</source>\n+        <translation>\u0420\u044d\u0434\u0430\u0433\u0430\u0432\u0430\u0446\u044c \u0410\u0434\u0440\u0430\u0441</translation>\n+    </message>\n+    <message>\n+        <location line=\"+11\"/>\n+        <source>&amp;Label</source>\n+        <translation>\u041f\u0430\u0437\u043d\u0430\u043a\u0430</translation>\n+    </message>\n+    <message>\n+        <location line=\"+10\"/>\n+        <source>The label associated with this address list entry</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+17\"/>\n+        <source>The address associated with this address list entry. This can only be modified for sending addresses.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"-10\"/>\n+        <source>&amp;Address</source>\n+        <translation>\u0410\u0434\u0440\u0430\u0441</translation>\n+    </message>\n+    <message>\n+        <location filename=\"../editaddressdialog.cpp\" line=\"+25\"/>\n+        <source>New receiving address</source>\n+        <translation>\u041d\u043e\u0432\u044b \u0430\u0434\u0440\u0430\u0441 \u0434\u043b\u044f \u0430\u0442\u0440\u044b\u043c\u0430\u043d\u043d\u044f</translation>\n+    </message>\n+    <message>\n+        <location line=\"+4\"/>\n+        <source>New sending address</source>\n+        <translation>\u041d\u043e\u0432\u044b \u0430\u0434\u0440\u0430\u0441 \u0434\u043b\u044f \u0434\u0430\u0441\u044b\u043b\u0430\u043d\u043d\u044f</translation>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>Edit receiving address</source>\n+        <translation>\u0420\u044d\u0434\u0430\u0433\u0430\u0432\u0430\u0446\u044c \u0430\u0434\u0440\u0430\u0441 \u043f\u0440\u044b\u043c\u0430\u043d\u043d\u044f</translation>\n+    </message>\n+    <message>\n+        <location line=\"+4\"/>\n+        <source>Edit sending address</source>\n+        <translation>\u0420\u044d\u0434\u0430\u0433\u0430\u0432\u0430\u0446\u044c \u0430\u0434\u0440\u0430\u0441 \u0434\u0430\u0441\u044b\u043b\u0430\u043d\u043d\u044f</translation>\n+    </message>\n+    <message>\n+        <location line=\"+76\"/>\n+        <source>The entered address &quot;%1&quot; is already in the address book.</source>\n+        <translation>\u0423\u0432\u0435\u0434\u0437\u0435\u043d\u044b \u0430\u0434\u0440\u0430\u0441 &quot;%1&quot; \u0443\u0436\u043e \u045e \u043a\u043d\u0456\u0433\u0435 \u0430\u0434\u0440\u0430\u0441\u043e\u045e</translation>\n+    </message>\n+    <message>\n+        <location line=\"-5\"/>\n+        <source>The entered address &quot;%1&quot; is not a valid Bitcoin address.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+10\"/>\n+        <source>Could not unlock wallet.</source>\n+        <translation>\u041d\u0435\u043c\u0430\u0433\u0447\u044b\u043c\u0430 \u0440\u0430\u0437\u0431\u043b\u0430\u043a\u0430\u0432\u0430\u0446\u044c \u0433\u0430\u043c\u0430\u043d\u0435\u0446</translation>\n+    </message>\n+    <message>\n+        <location line=\"+5\"/>\n+        <source>New key generation failed.</source>\n+        <translation>\u0413\u0435\u043d\u0435\u0440\u0430\u0446\u044b\u044f \u043d\u043e\u0432\u0430\u0433\u0430 \u043a\u043b\u044e\u0447\u0430 \u043d\u044f\u045e\u0434\u0430\u043b\u0430\u044f</translation>\n+    </message>\n+</context>\n+<context>\n+    <name>FreespaceChecker</name>\n+    <message>\n+        <location filename=\"../intro.cpp\" line=\"+65\"/>\n+        <source>A new data directory will be created.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+22\"/>\n+        <source>name</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+2\"/>\n+        <source>Directory already exists. Add %1 if you intend to create a new directory here.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>Path already exists, and is not a directory.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+7\"/>\n+        <source>Cannot create data directory here.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+</context>\n+<context>\n+    <name>GUIUtil::HelpMessageBox</name>\n+    <message>\n+        <location filename=\"../guiutil.cpp\" line=\"+597\"/>\n+        <source>version</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+0\"/>\n+        <location line=\"+13\"/>\n+        <source>Bitcoin Core</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"-11\"/>\n+        <source>Usage:</source>\n+        <translation>\u0423\u0436\u044b\u0432\u0430\u043d\u043d\u0435:</translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>command-line options</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+4\"/>\n+        <source>UI options</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Set language, for example &quot;de_DE&quot; (default: system locale)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Start minimized</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Show splash screen on startup (default: 1)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Choose data directory on startup (default: 0)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+</context>\n+<context>\n+    <name>Intro</name>\n+    <message>\n+        <location filename=\"../forms/intro.ui\" line=\"+14\"/>\n+        <source>Welcome</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+9\"/>\n+        <source>Welcome to Bitcoin Core.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+26\"/>\n+        <source>As this is the first time the program is launched, you can choose where Bitcoin Core will store its data.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+10\"/>\n+        <source>Bitcoin Core will download and store a copy of the Bitcoin block chain. At least %1GB of data will be stored in this directory, and it will grow over time. The wallet will also be stored in this directory.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+10\"/>\n+        <source>Use the default data directory</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+7\"/>\n+        <source>Use a custom data directory:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location filename=\"../intro.cpp\" line=\"+85\"/>\n+        <source>Bitcoin</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Error: Specified data directory &quot;%1&quot; can not be created.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+19\"/>\n+        <source>Error</source>\n+        <translation>\u041f\u0430\u043c\u044b\u043b\u043a\u0430</translation>\n+    </message>\n+    <message>\n+        <location line=\"+9\"/>\n+        <source>GB of free space available</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>(of %1GB needed)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+</context>\n+<context>\n+    <name>OpenURIDialog</name>\n+    <message>\n+        <location filename=\"../forms/openuridialog.ui\" line=\"+14\"/>\n+        <source>Open URI</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+6\"/>\n+        <source>Open payment request from URI or file</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+9\"/>\n+        <source>URI:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+11\"/>\n+        <source>Select payment request file</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location filename=\"../openuridialog.cpp\" line=\"+47\"/>\n+        <source>Select payment request file to open</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+</context>\n+<context>\n+    <name>OptionsDialog</name>\n+    <message>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"+14\"/>\n+        <source>Options</source>\n+        <translation>\u041e\u043f\u0446\u044b\u0456</translation>\n+    </message>\n+    <message>\n+        <location line=\"+16\"/>\n+        <source>&amp;Main</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+6\"/>\n+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+15\"/>\n+        <source>Pay transaction &amp;fee</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+31\"/>\n+        <source>Automatically start Bitcoin after logging in to the system.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>&amp;Start Bitcoin on system login</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+35\"/>\n+        <source>Reset all client options to default.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>&amp;Reset Options</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+13\"/>\n+        <source>&amp;Network</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+6\"/>\n+        <source>Automatically open the Bitcoin client port on the router. This only works when your router supports UPnP and it is enabled.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>Map port using &amp;UPnP</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+7\"/>\n+        <source>Connect to the Bitcoin network through a SOCKS proxy (e.g. when connecting through Tor).</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>&amp;Connect through SOCKS proxy:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+9\"/>\n+        <source>Proxy &amp;IP:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+19\"/>\n+        <source>IP address of the proxy (e.g. 127.0.0.1)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+7\"/>\n+        <source>&amp;Port:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+19\"/>\n+        <source>Port of the proxy (e.g. 9050)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n@@ -1028,13 +1361,23 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+9\"/>\n-        <source>Whether to show Bitcoin addresses in the transaction list or not.</source>\n+        <location line=\"+9\"/>\n+        <source>Whether to show Bitcoin addresses in the transaction list or not.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>&amp;Display addresses in transaction list</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+7\"/>\n+        <source>Whether to show coin control features or not.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <location line=\"+3\"/>\n-        <source>&amp;Display addresses in transaction list</source>\n+        <source>Display coin &amp;control features (experts only)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n@@ -1053,12 +1396,12 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location filename=\"../optionsdialog.cpp\" line=\"+58\"/>\n+        <location filename=\"../optionsdialog.cpp\" line=\"+63\"/>\n         <source>default</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+130\"/>\n+        <location line=\"+131\"/>\n         <source>Confirm options reset</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1099,17 +1442,17 @@ Address: %4\n     </message>\n     <message>\n         <location line=\"+50\"/>\n-        <location line=\"+202\"/>\n+        <location line=\"+214\"/>\n         <source>The displayed information may be out of date. Your wallet automatically synchronizes with the Bitcoin network after a connection is established, but this process has not completed yet.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-131\"/>\n+        <location line=\"-140\"/>\n         <source>Unconfirmed:</source>\n         <translation>\u041d\u0435\u043f\u0430\u0446\u0432\u0435\u0440\u0434\u0436\u0430\u043d\u0430:</translation>\n     </message>\n     <message>\n-        <location line=\"-78\"/>\n+        <location line=\"-81\"/>\n         <source>Wallet</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1124,12 +1467,12 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+29\"/>\n+        <location line=\"+32\"/>\n         <source>Total of transactions that have yet to be confirmed, and do not yet count toward the spendable balance</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+13\"/>\n+        <location line=\"+16\"/>\n         <source>Immature:</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1139,7 +1482,7 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+13\"/>\n+        <location line=\"+16\"/>\n         <source>Total:</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1149,12 +1492,12 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+53\"/>\n+        <location line=\"+56\"/>\n         <source>&lt;b&gt;Recent transactions&lt;/b&gt;</source>\n         <translation>&lt;b&gt;\u041d\u044f\u0434\u0430\u045e\u043d\u0456\u044f \u0442\u0440\u0430\u043d\u0437\u0430\u0446\u0446\u044b\u0456&lt;/b&gt;</translation>\n     </message>\n     <message>\n-        <location filename=\"../overviewpage.cpp\" line=\"+116\"/>\n+        <location filename=\"../overviewpage.cpp\" line=\"+120\"/>\n         <location line=\"+1\"/>\n         <source>out of sync</source>\n         <translation type=\"unfinished\"/>\n@@ -1163,7 +1506,7 @@ Address: %4\n <context>\n     <name>PaymentServer</name>\n     <message>\n-        <location filename=\"../paymentserver.cpp\" line=\"+392\"/>\n+        <location filename=\"../paymentserver.cpp\" line=\"+397\"/>\n         <source>URI handling</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1173,23 +1516,29 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+69\"/>\n+        <location line=\"+91\"/>\n         <source>Requested payment amount of %1 is too small (considered dust).</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n-        <location line=\"+37\"/>\n+        <location line=\"-204\"/>\n+        <location line=\"+195\"/>\n+        <location line=\"+13\"/>\n         <source>Payment request error</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+1\"/>\n-        <source>Insecure requests to custom payment scripts unsupported</source>\n+        <location line=\"-207\"/>\n+        <source>Cannot start bitcoin: click-to-pay handler</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+38\"/>\n+        <location line=\"+195\"/>\n+        <source>Unverified payment requests to custom payment scripts are unsupported.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+59\"/>\n         <source>Refund from %1</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1199,7 +1548,7 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+31\"/>\n+        <location line=\"+28\"/>\n         <source>Bad response from server %1</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1209,8 +1558,8 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-58\"/>\n-        <location line=\"+30\"/>\n+        <location line=\"-55\"/>\n+        <location line=\"+27\"/>\n         <location line=\"+17\"/>\n         <source>Network request error</source>\n         <translation type=\"unfinished\"/>\n@@ -1219,9 +1568,8 @@ Address: %4\n <context>\n     <name>QObject</name>\n     <message>\n-        <location filename=\"../bitcoin.cpp\" line=\"+114\"/>\n+        <location filename=\"../bitcoin.cpp\" line=\"+119\"/>\n         <location line=\"+5\"/>\n-        <location filename=\"../intro.cpp\" line=\"-32\"/>\n         <source>Bitcoin</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1235,16 +1583,11 @@ Address: %4\n         <source>Error: Invalid combination of -regtest and -testnet.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n-    <message>\n-        <location filename=\"../intro.cpp\" line=\"+1\"/>\n-        <source>Error: Specified data directory &quot;%1&quot; can not be created.</source>\n-        <translation type=\"unfinished\"/>\n-    </message>\n </context>\n <context>\n     <name>QRImageWidget</name>\n     <message>\n-        <location filename=\"../receiverequestdialog.cpp\" line=\"+32\"/>\n+        <location filename=\"../receiverequestdialog.cpp\" line=\"+36\"/>\n         <source>&amp;Save Image...</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1260,7 +1603,7 @@ Address: %4\n     </message>\n     <message>\n         <location line=\"+0\"/>\n-        <source>PNG Images (*.png)</source>\n+        <source>PNG Image (*.png)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n </context>\n@@ -1281,7 +1624,7 @@ Address: %4\n         <location line=\"+53\"/>\n         <location line=\"+23\"/>\n         <location line=\"+23\"/>\n-        <location filename=\"../rpcconsole.cpp\" line=\"+352\"/>\n+        <location filename=\"../rpcconsole.cpp\" line=\"+360\"/>\n         <source>N/A</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1296,7 +1639,12 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+68\"/>\n+        <location line=\"-10\"/>\n+        <source>Debug window</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+78\"/>\n         <source>Using OpenSSL version</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1351,12 +1699,7 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+7\"/>\n-        <source>Show the Bitcoin-Qt help message to get a list with possible Bitcoin command-line options.</source>\n-        <translation type=\"unfinished\"/>\n-    </message>\n-    <message>\n-        <location line=\"+3\"/>\n+        <location line=\"+10\"/>\n         <source>&amp;Show</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1396,12 +1739,7 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-104\"/>\n-        <source>Bitcoin - Debug window</source>\n-        <translation type=\"unfinished\"/>\n-    </message>\n-    <message>\n-        <location line=\"+25\"/>\n+        <location line=\"-79\"/>\n         <source>Bitcoin Core</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1416,7 +1754,12 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+102\"/>\n+        <location line=\"+26\"/>\n+        <source>Show the Bitcoin-Core help message to get a list with possible Bitcoin command-line options.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+76\"/>\n         <source>Clear console</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1474,37 +1817,32 @@ Address: %4\n <context>\n     <name>ReceiveCoinsDialog</name>\n     <message>\n-        <location filename=\"../forms/receivecoinsdialog.ui\" line=\"+22\"/>\n+        <location filename=\"../forms/receivecoinsdialog.ui\" line=\"+83\"/>\n         <source>&amp;Amount:</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+16\"/>\n+        <location line=\"+19\"/>\n         <source>The amount to request</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+7\"/>\n+        <location line=\"-32\"/>\n         <source>&amp;Label:</source>\n         <translation>\u041f\u0430\u0437\u043d\u0430\u043a\u0430:</translation>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n-        <source>The label to associate with the receiving address</source>\n-        <translation type=\"unfinished\"/>\n-    </message>\n-    <message>\n-        <location line=\"+7\"/>\n+        <location line=\"-34\"/>\n         <source>&amp;Message:</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n+        <location line=\"+20\"/>\n         <source>The message to attach to payment request</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+14\"/>\n+        <location line=\"-37\"/>\n         <source>Reuse one of the previously used receiving addresses. Reusing addresses has security and privacy issues. Do not use this unless re-generating a payment request made before.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1514,12 +1852,17 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+7\"/>\n+        <location line=\"+27\"/>\n+        <source>The label to associate with the new receiving address</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+14\"/>\n         <source>Use this form to request payments. All fields are optional.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+17\"/>\n+        <location line=\"+56\"/>\n         <source>Clear all fields of the form.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1533,6 +1876,31 @@ Address: %4\n         <source>&amp;Request payment</source>\n         <translation type=\"unfinished\"/>\n     </message>\n+    <message>\n+        <location line=\"+47\"/>\n+        <source>Previously requested payments</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+12\"/>\n+        <source>Show the selected request (does the same as double clicking an entry)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>Show</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+11\"/>\n+        <source>Remove the selected entries from the list</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>Remove</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n </context>\n <context>\n     <name>ReceiveRequestDialog</name>\n@@ -1551,18 +1919,13 @@ Address: %4\n         <source>Copy &amp;Address</source>\n         <translation type=\"unfinished\"/>\n     </message>\n-    <message>\n-        <location line=\"+7\"/>\n-        <source>&amp;Copy Image</source>\n-        <translation type=\"unfinished\"/>\n-    </message>\n     <message>\n         <location line=\"+7\"/>\n         <source>&amp;Save Image...</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location filename=\"../receiverequestdialog.cpp\" line=\"+58\"/>\n+        <location filename=\"../receiverequestdialog.cpp\" line=\"+56\"/>\n         <source>Request payment to %1</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1607,19 +1970,122 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n </context>\n+<context>\n+    <name>RecentRequestsTableModel</name>\n+    <message>\n+        <location filename=\"../recentrequeststablemodel.cpp\" line=\"+14\"/>\n+        <source>Date</source>\n+        <translation>\u0414\u0430\u0442\u0430</translation>\n+    </message>\n+    <message>\n+        <location line=\"+0\"/>\n+        <source>Label</source>\n+        <translation>\u041f\u0430\u0437\u043d\u0430\u043a\u0430</translation>\n+    </message>\n+    <message>\n+        <location line=\"+0\"/>\n+        <source>Message</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+0\"/>\n+        <source>Amount</source>\n+        <translation>\u041a\u043e\u043b\u044c\u043a\u0430\u0441\u0446\u044c</translation>\n+    </message>\n+    <message>\n+        <location line=\"+36\"/>\n+        <source>(no label)</source>\n+        <translation>\u043d\u0435\u043f\u0430\u0437\u043d\u0430\u0447\u0430\u043d\u044b</translation>\n+    </message>\n+    <message>\n+        <location line=\"+9\"/>\n+        <source>(no message)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+</context>\n <context>\n     <name>SendCoinsDialog</name>\n     <message>\n         <location filename=\"../forms/sendcoinsdialog.ui\" line=\"+14\"/>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"+140\"/>\n-        <location line=\"+213\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"+381\"/>\n+        <location line=\"+81\"/>\n         <source>Send Coins</source>\n         <translation>\u0414\u0430\u0441\u043b\u0430\u0446\u044c \u041c\u0430\u043d\u0435\u0442\u044b</translation>\n     </message>\n     <message>\n-        <location line=\"+50\"/>\n+        <location line=\"+76\"/>\n+        <source>Coin Control Features</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+20\"/>\n+        <source>Inputs...</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+7\"/>\n+        <source>automatically selected</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+19\"/>\n+        <source>Insufficient funds!</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+89\"/>\n+        <source>Quantity:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+35\"/>\n+        <source>Bytes:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+48\"/>\n+        <source>Amount:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+32\"/>\n+        <source>Priority:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+48\"/>\n+        <source>Fee:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+32\"/>\n+        <source>Low Output:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+48\"/>\n+        <source>After Fee:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+32\"/>\n+        <source>Change:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+44\"/>\n+        <source>If this is activated, but the change address is empty or invalid, change will be sent to a newly generated address.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>Custom change address</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+115\"/>\n         <source>Send to multiple recipients at once</source>\n-        <translation>\u0414\u0430\u0441\u043b\u0430\u0446\u044c \u043d\u0435\u043a\u0430\u043b\u044c\u043a\u0456\u043c \u0430\u0442\u0440\u044b\u043c\u0430\u043b\u044c\u043d\u0456\u043a\u0430\u043c \u0430\u0434\u0440\u0430\u0437\u0443</translation>\n+        <translation>\u0414\u0430\u0441\u043b\u0430\u0446\u044c \u0430\u0434\u0440\u0430\u0437\u0443 \u043d\u0435\u043a\u0430\u043b\u044c\u043a\u0456\u043c \u0430\u0442\u0440\u044b\u043c\u0430\u043b\u044c\u043d\u0456\u043a\u0430\u043c</translation>\n     </message>\n     <message>\n         <location line=\"+3\"/>\n@@ -1642,12 +2108,7 @@ Address: %4\n         <translation>\u0411\u0430\u043b\u0430\u043d\u0441:</translation>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n-        <source>123.456 BTC</source>\n-        <translation>123.456 BTC</translation>\n-    </message>\n-    <message>\n-        <location line=\"+31\"/>\n+        <location line=\"+41\"/>\n         <source>Confirm the send action</source>\n         <translation>\u041f\u0430\u0446\u0432\u0435\u0440\u0434\u0437\u0456\u0446\u044c \u0434\u0430\u0441\u044b\u043b\u0430\u043d\u043d\u0435</translation>\n     </message>\n@@ -1657,69 +2118,135 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"-154\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"-229\"/>\n         <source>Confirm send coins</source>\n         <translation>\u041f\u0430\u0446\u0432\u0435\u0440\u0434\u0437\u0456\u0446\u044c \u0434\u0430\u0441\u044b\u043b\u0430\u043d\u043d\u0435 \u043c\u0430\u043d\u0435\u0442</translation>\n     </message>\n     <message>\n-        <location line=\"-90\"/>\n+        <location line=\"-74\"/>\n         <location line=\"+5\"/>\n         <location line=\"+5\"/>\n+        <location line=\"+4\"/>\n         <source>%1 to %2</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+26\"/>\n+        <location line=\"-136\"/>\n+        <source>Enter a Bitcoin address (e.g. 1NS17iag9jJgTHD1VXjvLCEnZuQ3rJDE9L)</source>\n+        <translation>\u0423\u0432\u044f\u0434\u0437\u0456\u0446\u0435 \u0411\u0456\u0442\u043a\u043e\u0439\u043d-\u0430\u0434\u0440\u0430\u0441 (\u045e\u0437\u043e\u0440 1NS17iag9jJgTHD1VXjvLCEnZuQ3rJDE9L)</translation>\n+    </message>\n+    <message>\n+        <location line=\"+15\"/>\n+        <source>Copy quantity</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Copy amount</source>\n+        <translation>\u041a\u0430\u043f\u0456\u044f\u0432\u0430\u0446\u044c \u043a\u043e\u043b\u044c\u043a\u0430\u0441\u0446\u044c</translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Copy fee</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Copy after fee</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Copy bytes</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Copy priority</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Copy low output</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Copy change</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+170\"/>\n+        <source>Total Amount %1 (= %2)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+2\"/>\n+        <source>or</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+202\"/>\n         <source>The recipient address is not valid, please recheck.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n+        <location line=\"+3\"/>\n         <source>The amount to pay must be larger than 0.</source>\n-        <translation>\u041a\u043e\u043b\u044c\u043a\u0430\u0441\u0446\u044c \u043c\u0430\u0435 \u0431\u044b\u0446\u044c \u0431\u043e\u043b\u044c\u0448 \u0437\u0430 0.</translation>\n+        <translation>\u0412\u0435\u043b\u0456\u0447\u044b\u043d\u044f \u043f\u043b\u0430\u0446\u044f\u0436\u0443 \u043c\u0430\u0435 \u0431\u044b\u0446\u044c \u0431\u043e\u043b\u044c\u0448 \u0437\u0430 0.</translation>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n+        <location line=\"+3\"/>\n         <source>The amount exceeds your balance.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n+        <location line=\"+3\"/>\n         <source>The total exceeds your balance when the %1 transaction fee is included.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+5\"/>\n+        <location line=\"+3\"/>\n         <source>Duplicate address found, can only send to each address once per send operation.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>Transaction creation failed!</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n     <message>\n         <location line=\"+4\"/>\n-        <source>Error: Transaction creation failed!</source>\n+        <source>The transaction was rejected! This might happen if some of the coins in your wallet were already spent, such as if you used a copy of wallet.dat and coins were spent in the copy but not marked as spent here.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+15\"/>\n-        <source>Are you sure you want to send?</source>\n+        <location line=\"+113\"/>\n+        <source>Warning: Invalid Bitcoin address</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+9\"/>\n-        <source>added as transaction fee</source>\n+        <location line=\"+13\"/>\n+        <source>(no label)</source>\n+        <translation>\u043d\u0435\u043f\u0430\u0437\u043d\u0430\u0447\u0430\u043d\u044b</translation>\n+    </message>\n+    <message>\n+        <location line=\"+8\"/>\n+        <source>Warning: Unknown change address</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+6\"/>\n-        <source>Total Amount %1</source>\n+        <location line=\"-378\"/>\n+        <source>Are you sure you want to send?</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+20\"/>\n-        <source>Error: The transaction was rejected. This might happen if some of the coins in your wallet were already spent, such as if you used a copy of wallet.dat and coins were spent in the copy but not marked as spent here.</source>\n+        <location line=\"+9\"/>\n+        <source>added as transaction fee</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+144\"/>\n+        <location line=\"+170\"/>\n         <source>Payment request expired</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1732,39 +2259,44 @@ Address: %4\n <context>\n     <name>SendCoinsEntry</name>\n     <message>\n-        <location filename=\"../forms/sendcoinsentry.ui\" line=\"+33\"/>\n-        <location line=\"+585\"/>\n+        <location filename=\"../forms/sendcoinsentry.ui\" line=\"+131\"/>\n+        <location line=\"+501\"/>\n+        <location line=\"+536\"/>\n         <source>A&amp;mount:</source>\n         <translation>\u041a\u043e\u043b\u044c\u043a\u0430\u0441\u0446\u044c:</translation>\n     </message>\n     <message>\n-        <location line=\"-572\"/>\n-        <location line=\"+585\"/>\n+        <location line=\"-1132\"/>\n         <source>Pay &amp;To:</source>\n         <translation>\u0417\u0430\u043f\u043b\u0430\u0446\u0456\u0446\u044c \u0434\u0430:</translation>\n     </message>\n     <message>\n-        <location line=\"-551\"/>\n+        <location line=\"+18\"/>\n         <source>The address to send the payment to (e.g. 1NS17iag9jJgTHD1VXjvLCEnZuQ3rJDE9L)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location filename=\"../sendcoinsentry.cpp\" line=\"+28\"/>\n+        <location filename=\"../sendcoinsentry.cpp\" line=\"+30\"/>\n         <source>Enter a label for this address to add it to your address book</source>\n         <translation>\u0423\u0432\u044f\u0434\u0437\u0456\u0446\u0435 \u043f\u0430\u0437\u043d\u0430\u043a\u0443 \u0433\u044d\u0442\u0430\u043c\u0443 \u0430\u0434\u0440\u0430\u0441\u0443, \u043a\u0430\u0431 \u0434\u0430\u0434\u0430\u0446\u044c \u044f\u0433\u043e \u045e \u0430\u0434\u0440\u0430\u0441\u043d\u0443\u044e \u043a\u043d\u0456\u0433\u0443</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/sendcoinsentry.ui\" line=\"-18\"/>\n+        <location filename=\"../forms/sendcoinsentry.ui\" line=\"+57\"/>\n         <source>&amp;Label:</source>\n         <translation>\u041f\u0430\u0437\u043d\u0430\u043a\u0430:</translation>\n     </message>\n     <message>\n-        <location line=\"+28\"/>\n+        <location line=\"-50\"/>\n         <source>Choose previously used address</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n+        <location line=\"-40\"/>\n+        <source>This is a normal payment.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+50\"/>\n         <source>Alt+A</source>\n         <translation>Alt+A</translation>\n     </message>\n@@ -1780,16 +2312,35 @@ Address: %4\n     </message>\n     <message>\n         <location line=\"+7\"/>\n-        <source>Remove this recipient</source>\n-        <translation>\u0412\u044b\u0434\u0430\u043b\u0456\u0446\u044c \u0433\u044d\u0442\u0430\u0433\u0430 \u0430\u0442\u044b\u043c\u0430\u043b\u044c\u043d\u0456\u043a\u0430</translation>\n+        <location line=\"+504\"/>\n+        <location line=\"+536\"/>\n+        <source>Remove this entry</source>\n+        <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+16\"/>\n+        <location line=\"-40\"/>\n+        <source>This is a verified payment request.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"-971\"/>\n         <source>Enter a label for this address to add it to the list of used addresses</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+465\"/>\n+        <location line=\"+439\"/>\n+        <source>This is an unverified payment request.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+18\"/>\n+        <location line=\"+532\"/>\n+        <source>Pay To:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"-498\"/>\n+        <location line=\"+536\"/>\n         <source>Memo:</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1910,7 +2461,7 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location filename=\"../signverifymessagedialog.cpp\" line=\"+27\"/>\n+        <location filename=\"../signverifymessagedialog.cpp\" line=\"+29\"/>\n         <location line=\"+3\"/>\n         <source>Enter a Bitcoin address (e.g. 1NS17iag9jJgTHD1VXjvLCEnZuQ3rJDE9L)</source>\n         <translation>\u0423\u0432\u044f\u0434\u0437\u0456\u0446\u0435 \u0411\u0456\u0442\u043a\u043e\u0439\u043d-\u0430\u0434\u0440\u0430\u0441 (\u045e\u0437\u043e\u0440 1NS17iag9jJgTHD1VXjvLCEnZuQ3rJDE9L)</translation>\n@@ -1926,7 +2477,7 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+85\"/>\n+        <location line=\"+84\"/>\n         <location line=\"+81\"/>\n         <source>The entered address is invalid.</source>\n         <translation type=\"unfinished\"/>\n@@ -1995,8 +2546,13 @@ Address: %4\n <context>\n     <name>SplashScreen</name>\n     <message>\n-        <location filename=\"../splashscreen.cpp\" line=\"+23\"/>\n-        <source>The Bitcoin developers</source>\n+        <location filename=\"../splashscreen.cpp\" line=\"+26\"/>\n+        <source>Bitcoin Core</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+2\"/>\n+        <source>The Bitcoin Core developers</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n@@ -2008,15 +2564,15 @@ Address: %4\n <context>\n     <name>TrafficGraphWidget</name>\n     <message>\n-        <location filename=\"../trafficgraphwidget.cpp\" line=\"+75\"/>\n+        <location filename=\"../trafficgraphwidget.cpp\" line=\"+79\"/>\n         <source>KB/s</source>\n         <translation type=\"unfinished\"/>\n     </message>\n </context>\n <context>\n     <name>TransactionDesc</name>\n     <message>\n-        <location filename=\"../transactiondesc.cpp\" line=\"+22\"/>\n+        <location filename=\"../transactiondesc.cpp\" line=\"+28\"/>\n         <source>Open until %1</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2208,7 +2764,7 @@ Address: %4\n <context>\n     <name>TransactionTableModel</name>\n     <message>\n-        <location filename=\"../transactiontablemodel.cpp\" line=\"+227\"/>\n+        <location filename=\"../transactiontablemodel.cpp\" line=\"+234\"/>\n         <source>Date</source>\n         <translation>\u0414\u0430\u0442\u0430</translation>\n     </message>\n@@ -2260,7 +2816,7 @@ Address: %4\n     <message>\n         <location line=\"+5\"/>\n         <source>This block was not received by any other nodes and will probably not be accepted!</source>\n-        <translation>\u0413\u044d\u0442\u044b \u0431\u043b\u043e\u043a \u043d\u0435 \u0431\u044b\u045e \u043f\u0440\u044b\u043d\u044f\u0442\u044b \u0456\u043d\u0448\u044b\u043c\u0456 \u0432\u0443\u0437\u043b\u0430\u043c\u0456 \u0456 \u043c\u0430\u0433\u0447\u044b\u043c\u0430 \u043d\u0435 \u0431\u0443\u0434\u0437\u0435 \u043f\u0440\u044b\u043d\u044f\u0442\u044b!</translation>\n+        <translation>\u0413\u044d\u0442\u044b \u0431\u043b\u043e\u043a \u043d\u0435 \u0431\u044b\u045e \u043f\u0440\u044b\u043d\u044f\u0442\u044b \u0456\u043d\u0448\u044b\u043c\u0456 \u0432\u0443\u0437\u043b\u0430\u043c\u0456 \u0456 \u043c\u0430\u0433\u0447\u044b\u043c\u0430 \u043d\u0435 \u0431\u0443\u0434\u0437\u0435 \u045e\u0445\u0432\u0430\u043b\u0435\u043d\u044b!</translation>\n     </message>\n     <message>\n         <location line=\"+3\"/>\n@@ -2275,12 +2831,12 @@ Address: %4\n     <message>\n         <location line=\"+2\"/>\n         <source>Received from</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u041f\u0440\u044b\u043d\u044f\u0442\u0430 \u0430\u0434</translation>\n     </message>\n     <message>\n         <location line=\"+3\"/>\n         <source>Sent to</source>\n-        <translation>\u0414\u0430\u0441\u043b\u0430\u0446\u044c \u0434\u0430</translation>\n+        <translation>\u0414\u0430\u0441\u043b\u0430\u043d\u0430 \u0434\u0430</translation>\n     </message>\n     <message>\n         <location line=\"+2\"/>\n@@ -2326,7 +2882,7 @@ Address: %4\n <context>\n     <name>TransactionView</name>\n     <message>\n-        <location filename=\"../transactionview.cpp\" line=\"+52\"/>\n+        <location filename=\"../transactionview.cpp\" line=\"+57\"/>\n         <location line=\"+16\"/>\n         <source>All</source>\n         <translation>\u0423\u0441\u0451</translation>\n@@ -2369,7 +2925,7 @@ Address: %4\n     <message>\n         <location line=\"+2\"/>\n         <source>Sent to</source>\n-        <translation>\u0414\u0430\u0441\u043b\u0430\u0446\u044c \u0434\u0430</translation>\n+        <translation>\u0414\u0430\u0441\u043b\u0430\u043d\u0430 \u0434\u0430</translation>\n     </message>\n     <message>\n         <location line=\"+2\"/>\n@@ -2387,12 +2943,12 @@ Address: %4\n         <translation>\u0406\u043d\u0448\u044b\u044f</translation>\n     </message>\n     <message>\n-        <location line=\"+7\"/>\n+        <location line=\"+6\"/>\n         <source>Enter address or label to search</source>\n         <translation>\u0423\u0432\u044f\u0434\u0437\u0456\u0446\u0435 \u0430\u0434\u0440\u0430\u0441 \u0446\u0456 \u043f\u0430\u0437\u043d\u0430\u043a\u0443 \u0434\u043b\u044f \u043f\u043e\u0448\u0443\u043a\u0443</translation>\n     </message>\n     <message>\n-        <location line=\"+7\"/>\n+        <location line=\"+6\"/>\n         <source>Min amount</source>\n         <translation>\u041c\u0456\u043d. \u043a\u043e\u043b\u044c\u043a\u0430\u0441\u0446\u044c</translation>\n     </message>\n@@ -2409,7 +2965,7 @@ Address: %4\n     <message>\n         <location line=\"+1\"/>\n         <source>Copy amount</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u041a\u0430\u043f\u0456\u044f\u0432\u0430\u0446\u044c \u043a\u043e\u043b\u044c\u043a\u0430\u0441\u0446\u044c</translation>\n     </message>\n     <message>\n         <location line=\"+1\"/>\n@@ -2427,19 +2983,39 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+143\"/>\n-        <source>Export Transaction Data</source>\n-        <translation>\u042d\u043a\u0441\u043f\u0430\u0440\u0442\u0430\u0432\u0430\u0446\u044c \u0417\u0432\u0435\u0441\u0442\u043a\u0456 \u0422\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u044b\u0456</translation>\n+        <location line=\"+142\"/>\n+        <source>Export Transaction History</source>\n+        <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+1\"/>\n+        <location line=\"+19\"/>\n+        <source>Exporting Failed</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+0\"/>\n+        <source>There was an error trying to save the transaction history to %1.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+4\"/>\n+        <source>Exporting Successful</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+0\"/>\n+        <source>The transaction history was successfully saved to %1.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"-22\"/>\n         <source>Comma separated file (*.csv)</source>\n         <translation>\u041a\u043e\u0441\u043a\u0430\u043c\u0456 \u043f\u0430\u0434\u0437\u0435\u043b\u0435\u043d\u044b \u0444\u0430\u0439\u043b (*.csv)</translation>\n     </message>\n     <message>\n-        <location line=\"+8\"/>\n+        <location line=\"+9\"/>\n         <source>Confirmed</source>\n-        <translation>\u041f\u0446\u0432\u0435\u0440\u0434\u0436\u0430\u043d\u0430</translation>\n+        <translation>\u041f\u0430\u0446\u0432\u0435\u0440\u0434\u0436\u0430\u043d\u0430</translation>\n     </message>\n     <message>\n         <location line=\"+1\"/>\n@@ -2472,17 +3048,7 @@ Address: %4\n         <translation>ID</translation>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n-        <source>Error exporting</source>\n-        <translation>\u041f\u0430\u043c\u044b\u043b\u043a\u0430 \u044d\u043a\u0441\u043f\u0430\u0440\u0442\u0430\u0432\u0430\u043d\u043d\u044f</translation>\n-    </message>\n-    <message>\n-        <location line=\"+0\"/>\n-        <source>Could not write to file %1.</source>\n-        <translation>\u041d\u0435\u043c\u0430\u0433\u0447\u044b\u043c\u0430 \u0437\u0430\u043f\u0456\u0441\u0430\u0446\u044c \u0443 \u0444\u0430\u0439\u043b %1</translation>\n-    </message>\n-    <message>\n-        <location line=\"+100\"/>\n+        <location line=\"+107\"/>\n         <source>Range:</source>\n         <translation>\u041f\u0440\u0430\u043c\u0435\u0436\u0430\u043a:</translation>\n     </message>\n@@ -2492,86 +3058,89 @@ Address: %4\n         <translation>\u0434\u0430</translation>\n     </message>\n </context>\n+<context>\n+    <name>WalletFrame</name>\n+    <message>\n+        <location filename=\"../walletframe.cpp\" line=\"+26\"/>\n+        <source>No wallet has been loaded.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+</context>\n <context>\n     <name>WalletModel</name>\n     <message>\n-        <location filename=\"../walletmodel.cpp\" line=\"+218\"/>\n+        <location filename=\"../walletmodel.cpp\" line=\"+245\"/>\n         <source>Send Coins</source>\n         <translation>\u0414\u0430\u0441\u043b\u0430\u0446\u044c \u041c\u0430\u043d\u0435\u0442\u044b</translation>\n     </message>\n </context>\n <context>\n     <name>WalletView</name>\n     <message>\n-        <location filename=\"../walletview.cpp\" line=\"+46\"/>\n+        <location filename=\"../walletview.cpp\" line=\"+43\"/>\n         <source>&amp;Export</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u042d\u043a\u0441\u043f\u0430\u0440\u0442</translation>\n     </message>\n     <message>\n         <location line=\"+1\"/>\n         <source>Export the data in the current tab to a file</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+183\"/>\n+        <location line=\"+181\"/>\n         <source>Backup Wallet</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+0\"/>\n+        <location line=\"+1\"/>\n         <source>Wallet Data (*.dat)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+3\"/>\n+        <location line=\"+6\"/>\n         <source>Backup Failed</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <location line=\"+0\"/>\n-        <source>There was an error trying to save the wallet data to the new location.</source>\n+        <source>There was an error trying to save the wallet data to %1.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <location line=\"+4\"/>\n-        <source>Backup Successful</source>\n+        <source>The wallet data was successfully saved to %1.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <location line=\"+0\"/>\n-        <source>The wallet data was successfully saved to the new location.</source>\n+        <source>Backup Successful</source>\n         <translation type=\"unfinished\"/>\n     </message>\n </context>\n <context>\n     <name>bitcoin-core</name>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"+102\"/>\n-        <source>Bitcoin version</source>\n-        <translation>\u0412\u0435\u0440\u0441\u0456\u044f \u0411\u0456\u0442\u043a\u043e\u0439\u043d</translation>\n-    </message>\n-    <message>\n-        <location line=\"+107\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"+217\"/>\n         <source>Usage:</source>\n         <translation>\u0423\u0436\u044b\u0432\u0430\u043d\u043d\u0435:</translation>\n     </message>\n     <message>\n-        <location line=\"-55\"/>\n+        <location line=\"-54\"/>\n         <source>List commands</source>\n         <translation>\u0421\u043f\u0456\u0441 \u043a\u0430\u043c\u0430\u043d\u0434</translation>\n     </message>\n     <message>\n-        <location line=\"-13\"/>\n+        <location line=\"-14\"/>\n         <source>Get help for a command</source>\n         <translation>\u0410\u0442\u0440\u044b\u043c\u0430\u0446\u044c \u0434\u0430\u043f\u0430\u043c\u043e\u0433\u0443 \u0434\u043b\u044f \u043a\u0430\u043c\u0430\u043d\u0434\u044b</translation>\n     </message>\n     <message>\n-        <location line=\"+25\"/>\n+        <location line=\"+26\"/>\n         <source>Options:</source>\n-        <translation>\u041e\u043f\u0446\u044b\u0456</translation>\n+        <translation>\u041e\u043f\u0446\u044b\u0456:</translation>\n     </message>\n     <message>\n-        <location line=\"+24\"/>\n+        <location line=\"+23\"/>\n         <source>Specify configuration file (default: bitcoin.conf)</source>\n         <translation>\u0412\u044b\u0437\u043d\u0430\u0447\u044b\u0446\u044c \u043a\u0430\u043d\u0444\u0456\u0433\u0443\u0440\u0430\u0446\u044b\u0439\u043d\u044b \u0444\u0430\u0439\u043b (\u0437\u044b\u0445\u043e\u0434\u043d\u0430: bitcoin.conf)</translation>\n     </message>\n@@ -2588,20 +3157,20 @@ Address: %4\n     <message>\n         <location line=\"-9\"/>\n         <source>Set database cache size in megabytes (default: 25)</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u041f\u0430\u0437\u043d\u0430\u0447\u044b\u0446\u044c \u043f\u0430\u043c\u0435\u0440 \u043a\u044d\u0448\u0443 \u0431\u0430\u0437\u044b \u0437\u0432\u0435\u0441\u0442\u0430\u043a \u0443 \u043c\u0435\u0433\u0430\u0431\u0430\u0439\u0442\u0430\u0445 (\u0442\u044b\u043f\u043e\u0432\u0430: 25)</translation>\n     </message>\n     <message>\n-        <location line=\"-28\"/>\n+        <location line=\"-27\"/>\n         <source>Listen for connections on &lt;port&gt; (default: 8333 or testnet: 18333)</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0421\u043b\u0443\u0445\u0430\u0446\u044c \u0437\u043b\u0443\u0447\u044d\u043d\u043d\u0456 \u043d\u0430 &lt;port&gt; (\u0437\u044b\u0445\u043e\u0434\u043d\u0430: 8333 \u0446\u0456 testnet: 18333)</translation>\n     </message>\n     <message>\n         <location line=\"+5\"/>\n         <source>Maintain at most &lt;n&gt; connections to peers (default: 125)</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0422\u0440\u044b\u043c\u0430\u0446\u044c \u043d\u0435 \u0431\u043e\u043b\u044c\u0448 \u0437\u0430 &lt;n&gt; \u0437\u043b\u0443\u0447\u044d\u043d\u043d\u044f\u045e \u043d\u0430 \u0430\u0441\u043e\u0431\u0443 (\u0437\u044b\u0445\u043e\u0434\u043d\u0430: 125)</translation>\n     </message>\n     <message>\n-        <location line=\"-49\"/>\n+        <location line=\"-50\"/>\n         <source>Connect to a node to retrieve peer addresses, and disconnect</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2613,12 +3182,12 @@ Address: %4\n     <message>\n         <location line=\"+4\"/>\n         <source>Threshold for disconnecting misbehaving peers (default: 100)</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u041f\u0430\u0440\u043e\u0433 \u0434\u043b\u044f \u0430\u0434\u043b\u0443\u0447\u044d\u043d\u043d\u044f \u0437\u043b\u0430\u045e\u043c\u044b\u0441\u043d\u044b\u0445 \u043a\u0430\u0440\u044b\u0441\u0442\u0430\u043b\u044c\u043d\u0456\u043a\u0430\u045e (\u0442\u044b\u043f\u043e\u0432\u0430: 100)</translation>\n     </message>\n     <message>\n-        <location line=\"-142\"/>\n+        <location line=\"-147\"/>\n         <source>Number of seconds to keep misbehaving peers from reconnecting (default: 86400)</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u041a\u043e\u043b\u044c\u043a\u0430\u0441\u0446\u044c \u0441\u0435\u043a\u0443\u043d\u0434 \u0434\u043b\u044f \u045e\u0441\u0442\u0440\u044b\u043c\u0430\u043d\u043d\u044f \u0430\u0441\u043e\u0431\u0430\u045e \u0434\u0430 \u043f\u0435\u0440\u0430\u0434\u0430\u043b\u0443\u0447\u044d\u043d\u043d\u044f (\u0437\u0430\u0445\u043e\u0434\u043d\u0430: 86400)</translation>\n     </message>\n     <message>\n         <location line=\"-33\"/>\n@@ -2631,7 +3200,7 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+40\"/>\n+        <location line=\"+45\"/>\n         <source>Accept command line and JSON-RPC commands</source>\n         <translation>\u041f\u0440\u044b\u043c\u0430\u0446\u044c \u043a\u0430\u043c\u0430\u043d\u0434\u043d\u044b \u0440\u0430\u0434\u043e\u043a \u0456 JSON-RPC \u043a\u0430\u043c\u0430\u043d\u0434\u044b</translation>\n     </message>\n@@ -2641,17 +3210,17 @@ Address: %4\n         <translation>\u0417\u0430\u043f\u0443\u0441\u0446\u0456\u0446\u044c \u0443 \u0444\u043e\u043d\u0435 \u044f\u043a \u0434\u044d\u043c\u0430\u043d \u0456 \u043f\u0440\u044b\u043c\u0430\u0446\u044c \u043a\u0430\u043c\u0430\u043d\u0434\u044b</translation>\n     </message>\n     <message>\n-        <location line=\"+40\"/>\n+        <location line=\"+39\"/>\n         <source>Use the test network</source>\n         <translation>\u0423\u0436\u044b\u0432\u0430\u0446\u044c \u0442\u044d\u0441\u0442\u0430\u0432\u0430\u0435 \u0441\u0435\u0446\u0456\u0432\u0430</translation>\n     </message>\n     <message>\n-        <location line=\"-118\"/>\n+        <location line=\"-117\"/>\n         <source>Accept connections from outside (default: 1 if no -proxy or -connect)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-87\"/>\n+        <location line=\"-92\"/>\n         <source>%s, you must set a rpcpassword in the configuration file:\n %s\n It is recommended you use the following random password:\n@@ -2706,17 +3275,17 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+11\"/>\n-        <source>Set maximum size of high-priority/low-fee transactions in bytes (default: 27000)</source>\n+        <location line=\"+18\"/>\n+        <source>This is a pre-release test build - use at your own risk - do not use for mining or merchant applications</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+6\"/>\n-        <source>This is a pre-release test build - use at your own risk - do not use for mining or merchant applications</source>\n+        <location line=\"+5\"/>\n+        <source>Use separate SOCKS5 proxy to reach peers via Tor hidden services (default: -proxy)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+5\"/>\n+        <location line=\"+3\"/>\n         <source>Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2746,17 +3315,27 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+14\"/>\n+        <location line=\"+9\"/>\n+        <source>&lt;category&gt; can be:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+6\"/>\n         <source>Attempt to recover private keys from a corrupt wallet.dat</source>\n         <translation type=\"unfinished\"/>\n     </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Bitcoin Core Daemon</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n     <message>\n         <location line=\"+1\"/>\n         <source>Bitcoin RPC client version</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+2\"/>\n+        <location line=\"+1\"/>\n         <source>Block creation options:</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2766,7 +3345,12 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+2\"/>\n+        <location line=\"+1\"/>\n+        <source>Connect through SOCKS proxy</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n         <source>Connect to JSON-RPC on &lt;port&gt; (default: 8332 or testnet: 18332)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2876,7 +3460,12 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+2\"/>\n+        <location line=\"+1\"/>\n+        <source>Fee per kB to add to transactions you send</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n         <source>Find peers using DNS lookup (default: 1 unless -connect)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2895,6 +3484,11 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <source>How thorough the block verification is (0-4, default: 3)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>If &lt;category&gt; is not supplied, output all debugging information.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n     <message>\n         <location line=\"+2\"/>\n         <source>Incorrect or no genesis block found. Wrong datadir for network?</source>\n@@ -2911,17 +3505,37 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+8\"/>\n+        <location line=\"+5\"/>\n+        <source>Prepend debug output with timestamp (default: 1)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>RPC client options:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n         <source>Rebuild block chain index from current blk000??.dat files</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+6\"/>\n+        <location line=\"+5\"/>\n+        <source>Select SOCKS version for -proxy (4 or 5, default: 5)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n         <source>Send command to Bitcoin server</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n+        <location line=\"+8\"/>\n+        <source>Set maximum block size in bytes (default: %d)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+2\"/>\n         <source>Set the number of threads to service RPC calls (default: 4)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2941,7 +3555,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+8\"/>\n+        <location line=\"+7\"/>\n         <source>Verifying blocks...</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2950,13 +3564,23 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <source>Verifying wallet...</source>\n         <translation type=\"unfinished\"/>\n     </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Wait for RPC server to start</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n     <message>\n         <location line=\"+1\"/>\n         <source>Wallet %s resides outside data directory %s</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n+        <location line=\"+3\"/>\n+        <source>Warning: Deprecated argument -debugnet ignored, use -debug=net</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+2\"/>\n         <source>You need to rebuild the database using -reindex to change -txindex</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2966,17 +3590,27 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-98\"/>\n+        <location line=\"-104\"/>\n         <source>Execute command when a relevant alert is received or we see a really long fork (%s in cmd is replaced by message)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+17\"/>\n+        <location line=\"+14\"/>\n+        <source>Output debugging information (default: 0, supplying &lt;category&gt; is optional)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+2\"/>\n+        <source>Set maximum size of high-priority/low-fee transactions in bytes (default: %d)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+2\"/>\n         <source>Set the number of script verification threads (up to 16, 0 = auto, &lt;0 = leave that many cores free, default: 0)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+83\"/>\n+        <location line=\"+88\"/>\n         <source>Information</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -3016,47 +3650,22 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+2\"/>\n-        <source>Output extra debugging information. Implies all other -debug* options</source>\n-        <translation type=\"unfinished\"/>\n-    </message>\n-    <message>\n-        <location line=\"+1\"/>\n-        <source>Output extra network debugging information</source>\n-        <translation type=\"unfinished\"/>\n-    </message>\n-    <message>\n-        <location line=\"+2\"/>\n-        <source>Prepend debug output with timestamp</source>\n-        <translation type=\"unfinished\"/>\n-    </message>\n-    <message>\n-        <location line=\"+5\"/>\n+        <location line=\"+9\"/>\n         <source>SSL options: (see the Bitcoin Wiki for SSL setup instructions)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+1\"/>\n-        <source>Select the version of socks proxy to use (4-5, default: 5)</source>\n-        <translation type=\"unfinished\"/>\n-    </message>\n-    <message>\n-        <location line=\"+3\"/>\n+        <location line=\"+4\"/>\n         <source>Send trace/debug info to console instead of debug.log file</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0421\u043b\u0430\u0446\u044c trace/debug \u0437\u0432\u0435\u0441\u0442\u043a\u0456 \u045e \u043a\u0430\u043d\u0441\u043e\u043b\u044c \u0437\u0430\u043c\u0435\u0441\u0442 \u0444\u0430\u0439\u043b\u0430 debug.log</translation>\n     </message>\n     <message>\n         <location line=\"+1\"/>\n         <source>Send trace/debug info to debugger</source>\n-        <translation type=\"unfinished\"/>\n-    </message>\n-    <message>\n-        <location line=\"+5\"/>\n-        <source>Set maximum block size in bytes (default: 250000)</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0421\u043b\u0430\u0446\u044c trace/debug \u0437\u0432\u0435\u0441\u0442\u043a\u0456 \u045e \u0430\u0434\u043b\u0430\u0434\u0447\u044b\u043a</translation>\n     </message>\n     <message>\n-        <location line=\"+1\"/>\n+        <location line=\"+6\"/>\n         <source>Set minimum block size in bytes (default: 0)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -3105,60 +3714,60 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <source>Use UPnP to map the listening port (default: 1 when listening)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n-    <message>\n-        <location line=\"+1\"/>\n-        <source>Use proxy to reach tor hidden services (default: same as -proxy)</source>\n-        <translation type=\"unfinished\"/>\n-    </message>\n     <message>\n         <location line=\"+2\"/>\n         <source>Username for JSON-RPC connections</source>\n-        <translation>\u0406\u043c\u044f \u043a\u0430\u0440\u044b\u0441\u0442\u0430\u043b\u044c\u043d\u0438\u043a\u0430 \u043b\u043e\u044f JSON-RPC \u0437\u043b\u0443\u0447\u044d\u043d\u043d\u044f\u045e</translation>\n+        <translation>\u0406\u043c\u044f \u043a\u0430\u0440\u044b\u0441\u0442\u0430\u043b\u044c\u043d\u0438\u043a\u0430 \u0434\u043b\u044f JSON-RPC \u0437\u043b\u0443\u0447\u044d\u043d\u043d\u044f\u045e</translation>\n     </message>\n     <message>\n-        <location line=\"+5\"/>\n+        <location line=\"+6\"/>\n         <source>Warning</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+1\"/>\n+        <location line=\"+2\"/>\n         <source>Warning: This version is obsolete, upgrade required!</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <location line=\"+2\"/>\n+        <source>version</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n         <source>wallet.dat corrupt, salvage failed</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-54\"/>\n+        <location line=\"-57\"/>\n         <source>Password for JSON-RPC connections</source>\n         <translation>\u041f\u0430\u0440\u043e\u043b\u044c \u0434\u043b\u044f JSON-RPC \u0437\u043b\u0443\u0447\u044d\u043d\u043d\u044f\u045e</translation>\n     </message>\n     <message>\n-        <location line=\"-70\"/>\n+        <location line=\"-69\"/>\n         <source>Allow JSON-RPC connections from specified IP address</source>\n-        <translation>\u0414\u0430\u0437\u0432\u043e\u043b\u0456\u0446\u044c  JSON-RPC \u0437\u043b\u0443\u0447\u044d\u043d\u043d\u0456 \u0437 \u043f\u043e\u045e\u043d\u0430\u0433\u0430 IP \u0430\u0434\u0440\u0430\u0441\u0443</translation>\n+        <translation>\u0414\u0430\u0437\u0432\u043e\u043b\u0456\u0446\u044c  JSON-RPC \u0437\u043b\u0443\u0447\u044d\u043d\u043d\u0456 \u0437 \u043f\u044d\u045e\u043d\u0430\u0433\u0430 IP \u0430\u0434\u0440\u0430\u0441\u0443</translation>\n     </message>\n     <message>\n         <location line=\"+79\"/>\n         <source>Send commands to node running on &lt;ip&gt; (default: 127.0.0.1)</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0410\u0434\u043f\u0440\u0430\u045e\u043b\u044f\u0446\u044c \u043a\u0430\u043c\u0430\u043d\u0434\u044b \u0432\u0443\u0437\u043b\u0443 \u043d\u0430 &lt;ip&gt; (\u0437\u044b\u0445\u043e\u0434\u043d\u0430: 127.0.0.1)</translation>\n     </message>\n     <message>\n-        <location line=\"-126\"/>\n+        <location line=\"-131\"/>\n         <source>Execute command when the best block changes (%s in cmd is replaced by block hash)</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0412\u044b\u043a\u0430\u043d\u0430\u0446\u044c \u043a\u0430\u043c\u0430\u043d\u0434\u0443 \u043a\u0430\u043b\u0456 \u043b\u0435\u043f\u0448\u044b \u0431\u043b\u043e\u043a \u0437\u043c\u0435\u043d\u0456\u0446\u0446\u0430 (%s \u0437\u0430\u043c\u044f\u043d\u044f\u0435\u0446\u0446\u0430 \u043d\u0430 \u0445\u044d\u0448 \u0431\u043b\u043e\u043a\u0430)</translation>\n     </message>\n     <message>\n-        <location line=\"+155\"/>\n+        <location line=\"+160\"/>\n         <source>Upgrade wallet to latest format</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0410\u0431\u043d\u0430\u0432\u0456\u0446\u044c \u0433\u0430\u043c\u0430\u043d\u0435\u0446 \u043d\u0430 \u043d\u043e\u0432\u044b \u0444\u0430\u0440\u043c\u0430\u0442</translation>\n     </message>\n     <message>\n         <location line=\"-23\"/>\n         <source>Set key pool size to &lt;n&gt; (default: 100)</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0423\u0441\u0442\u0430\u043d\u0430\u0432\u0456\u0446\u044c \u043f\u0430\u043c\u0435\u0440 \u0444\u043e\u043d\u0434\u0430 \u043a\u043b\u044e\u0447\u043e\u045e \u0443 &lt;n&gt; (\u0442\u044b\u043f\u043e\u0432\u0430: 100)</translation>\n     </message>\n     <message>\n         <location line=\"-12\"/>\n@@ -3173,7 +3782,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n     <message>\n         <location line=\"-29\"/>\n         <source>Server certificate file (default: server.cert)</source>\n-        <translation>\u0424\u0430\u0439\u043b-\u0441\u0435\u0440\u0442\u044b\u0446\u0456\u043a\u0430\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 (\u0437\u044b\u0445\u043e\u0434\u043d\u0430: server.cert)</translation>\n+        <translation>\u0424\u0430\u0439\u043b-\u0441\u0435\u0440\u0442\u044b\u0444\u0456\u043a\u0430\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 (\u0437\u044b\u0445\u043e\u0434\u043d\u0430: server.cert)</translation>\n     </message>\n     <message>\n         <location line=\"+1\"/>\n@@ -3191,47 +3800,42 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-95\"/>\n-        <source>Connect through socks proxy</source>\n-        <translation type=\"unfinished\"/>\n-    </message>\n-    <message>\n-        <location line=\"-11\"/>\n+        <location line=\"-106\"/>\n         <source>Allow DNS lookups for -addnode, -seednode and -connect</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+58\"/>\n+        <location line=\"+59\"/>\n         <source>Loading addresses...</source>\n         <translation>\u0417\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u043c \u0430\u0434\u0440\u0430\u0441\u044b...</translation>\n     </message>\n     <message>\n-        <location line=\"-36\"/>\n+        <location line=\"-37\"/>\n         <source>Error loading wallet.dat: Wallet corrupted</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u041f\u0430\u043c\u044b\u043b\u043a\u0430 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0456 wallet.dat: \u0433\u0430\u043c\u0430\u043d\u0435\u0446 \u043f\u0430\u0448\u043a\u043e\u0434\u0436\u0430\u043d\u044b</translation>\n     </message>\n     <message>\n         <location line=\"+1\"/>\n         <source>Error loading wallet.dat: Wallet requires newer version of Bitcoin</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u041f\u0430\u043c\u044b\u043b\u043a\u0430 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0456 wallet.dat: \u0433\u0430\u043c\u0430\u043d\u0435\u0446 \u043f\u0430\u0442\u0440\u0430\u0431\u0443\u0435 \u043d\u043e\u0432\u0443\u044e \u0432\u0435\u0440\u0441\u0456\u044e Bitcoin</translation>\n     </message>\n     <message>\n         <location line=\"+98\"/>\n         <source>Wallet needed to be rewritten: restart Bitcoin to complete</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0413\u0430\u043c\u0430\u043d\u0435\u0446 \u043c\u0430\u0435 \u0431\u044b\u0446\u044c \u043f\u0435\u0440\u0430\u0437\u0430\u043f\u0456\u0441\u0430\u043d\u044b: \u043f\u0430\u0442\u0440\u044d\u0431\u043d\u044b \u043f\u0435\u0440\u0430\u0437\u0430\u043f\u0443\u0441\u043a Bitcoin \u0434\u043b\u044f \u0432\u044b\u043a\u0430\u043d\u0430\u043d\u043d\u044f</translation>\n     </message>\n     <message>\n         <location line=\"-100\"/>\n         <source>Error loading wallet.dat</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u041f\u0430\u043c\u044b\u043b\u043a\u0430 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0456 wallet.dat</translation>\n     </message>\n     <message>\n-        <location line=\"+30\"/>\n+        <location line=\"+31\"/>\n         <source>Invalid -proxy address: &apos;%s&apos;</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+57\"/>\n+        <location line=\"+56\"/>\n         <source>Unknown network specified in -onlynet: &apos;%s&apos;</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -3251,47 +3855,42 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+46\"/>\n+        <location line=\"+47\"/>\n         <source>Invalid amount for -paytxfee=&lt;amount&gt;: &apos;%s&apos;</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <location line=\"+1\"/>\n         <source>Invalid amount</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u041f\u0430\u043c\u044b\u043b\u043a\u043e\u0432\u0430\u044f \u043a\u043e\u043b\u044c\u043a\u0430\u0441\u0446\u044c</translation>\n     </message>\n     <message>\n         <location line=\"-6\"/>\n         <source>Insufficient funds</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u041d\u0435\u0434\u0430\u0441\u0442\u0430\u0442\u043a\u043e\u0432\u0430 \u0441\u0440\u043e\u0434\u043a\u0430\u045e</translation>\n     </message>\n     <message>\n         <location line=\"+10\"/>\n         <source>Loading block index...</source>\n         <translation>\u0417\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u043c \u0456\u043d\u0434\u044d\u043a\u0441 \u0431\u043b\u043e\u043a\u0430\u045e...</translation>\n     </message>\n     <message>\n-        <location line=\"-60\"/>\n+        <location line=\"-61\"/>\n         <source>Add a node to connect to and attempt to keep the connection open</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-28\"/>\n+        <location line=\"-32\"/>\n         <source>Unable to bind to %s on this computer. Bitcoin is probably already running.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+69\"/>\n-        <source>Fee per KB to add to transactions you send</source>\n-        <translation type=\"unfinished\"/>\n-    </message>\n-    <message>\n-        <location line=\"+20\"/>\n+        <location line=\"+94\"/>\n         <source>Loading wallet...</source>\n         <translation>\u0417\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u043c \u0433\u0430\u043c\u0430\u043d\u0435\u0446...</translation>\n     </message>\n     <message>\n-        <location line=\"-54\"/>\n+        <location line=\"-55\"/>\n         <source>Cannot downgrade wallet</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -3318,10 +3917,10 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n     <message>\n         <location line=\"-77\"/>\n         <source>Error</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u041f\u0430\u043c\u044b\u043b\u043a\u0430</translation>\n     </message>\n     <message>\n-        <location line=\"-33\"/>\n+        <location line=\"-34\"/>\n         <source>You must set rpcpassword=&lt;password&gt; in the configuration file:\n %s\n If the file does not exist, create it with owner-readable-only file permissions.</source>"
      },
      {
        "sha": "6b849e23ea02280301a23a479a615e5fabd76430",
        "filename": "src/qt/locale/bitcoin_bs.ts",
        "status": "modified",
        "additions": 1027,
        "deletions": 432,
        "changes": 1459,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6d697e9fa45b3f3bf67d79cc3d17717b68a43825/src/qt/locale/bitcoin_bs.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6d697e9fa45b3f3bf67d79cc3d17717b68a43825/src/qt/locale/bitcoin_bs.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_bs.ts?ref=6d697e9fa45b3f3bf67d79cc3d17717b68a43825",
        "patch": "@@ -3,13 +3,13 @@\n     <name>AboutDialog</name>\n     <message>\n         <location filename=\"../forms/aboutdialog.ui\" line=\"+14\"/>\n-        <source>About Bitcoin</source>\n-        <translation>O Bitcoinu</translation>\n+        <source>About Bitcoin Core</source>\n+        <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <location line=\"+39\"/>\n-        <source>&lt;b&gt;Bitcoin&lt;/b&gt; version</source>\n-        <translation>&lt;b&gt;Bitcoin&lt;/b&gt; verzija</translation>\n+        <source>&lt;b&gt;Bitcoin Core&lt;/b&gt; version</source>\n+        <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <location line=\"+57\"/>\n@@ -22,7 +22,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location filename=\"../aboutdialog.cpp\" line=\"+14\"/>\n+        <location filename=\"../aboutdialog.cpp\" line=\"+19\"/>\n         <source>Copyright</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -65,7 +65,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location filename=\"../addressbookpage.cpp\" line=\"+72\"/>\n+        <location filename=\"../addressbookpage.cpp\" line=\"+74\"/>\n         <source>&amp;Copy Address</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -135,7 +135,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+197\"/>\n+        <location line=\"+194\"/>\n         <source>Export Address List</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -158,7 +158,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n <context>\n     <name>AddressTableModel</name>\n     <message>\n-        <location filename=\"../addresstablemodel.cpp\" line=\"+164\"/>\n+        <location filename=\"../addresstablemodel.cpp\" line=\"+168\"/>\n         <source>Label</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -196,7 +196,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location filename=\"../askpassphrasedialog.cpp\" line=\"+34\"/>\n+        <location filename=\"../askpassphrasedialog.cpp\" line=\"+40\"/>\n         <source>Enter the new passphrase to the wallet.&lt;br/&gt;Please use a passphrase of &lt;b&gt;10 or more random characters&lt;/b&gt;, or &lt;b&gt;eight or more words&lt;/b&gt;.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -317,17 +317,17 @@ This product includes software developed by the OpenSSL Project for use in the O\n <context>\n     <name>BitcoinGUI</name>\n     <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"+250\"/>\n+        <location filename=\"../bitcoingui.cpp\" line=\"+260\"/>\n         <source>Sign &amp;message...</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+254\"/>\n+        <location line=\"+290\"/>\n         <source>Synchronizing with network...</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-324\"/>\n+        <location line=\"-360\"/>\n         <source>&amp;Overview</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -393,7 +393,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+259\"/>\n+        <location line=\"+295\"/>\n         <source>Importing blocks from disk...</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -403,7 +403,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-322\"/>\n+        <location line=\"-358\"/>\n         <source>Send coins to a Bitcoin address</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -438,20 +438,18 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-180\"/>\n-        <location line=\"+6\"/>\n-        <location line=\"+513\"/>\n+        <location line=\"+375\"/>\n         <source>Bitcoin</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>Bitcoin</translation>\n     </message>\n     <message>\n-        <location line=\"-519\"/>\n-        <location line=\"+6\"/>\n+        <location line=\"-563\"/>\n+        <location line=\"+10\"/>\n         <source>Wallet</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+109\"/>\n+        <location line=\"+113\"/>\n         <source>&amp;Send</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -461,13 +459,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+28\"/>\n-        <location line=\"+2\"/>\n-        <source>&amp;About Bitcoin</source>\n-        <translation type=\"unfinished\"/>\n-    </message>\n-    <message>\n-        <location line=\"+14\"/>\n+        <location line=\"+44\"/>\n         <location line=\"+2\"/>\n         <source>&amp;Show / Hide</source>\n         <translation type=\"unfinished\"/>\n@@ -493,12 +485,12 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+35\"/>\n+        <location line=\"+39\"/>\n         <source>&amp;File</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n+        <location line=\"+11\"/>\n         <source>&amp;Settings</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -513,18 +505,30 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-235\"/>\n-        <location line=\"+294\"/>\n+        <location line=\"-244\"/>\n+        <location line=\"+321\"/>\n         <source>[testnet]</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-177\"/>\n+        <location line=\"-331\"/>\n+        <location line=\"+10\"/>\n+        <source>Bitcoin Core</source>\n+        <translation>Bitcoin Jezrga</translation>\n+    </message>\n+    <message>\n+        <location line=\"+121\"/>\n         <source>Request payments (generates QR codes and bitcoin: URIs)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+63\"/>\n+        <location line=\"+27\"/>\n+        <location line=\"+2\"/>\n+        <source>&amp;About Bitcoin Core</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+34\"/>\n         <source>&amp;Used sending addresses...</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -544,13 +548,23 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+106\"/>\n+        <location line=\"+2\"/>\n+        <source>Open URI...</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Open a bitcoin: URI or payment request</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+126\"/>\n         <location line=\"+5\"/>\n         <source>Bitcoin client</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message numerus=\"yes\">\n-        <location line=\"+120\"/>\n+        <location line=\"+133\"/>\n         <source>%n active connection(s) to Bitcoin network</source>\n         <translation type=\"unfinished\"><numerusform></numerusform><numerusform></numerusform><numerusform></numerusform></translation>\n     </message>\n@@ -654,17 +668,7 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+34\"/>\n-        <source>URI handling</source>\n-        <translation type=\"unfinished\"/>\n-    </message>\n-    <message>\n-        <location line=\"+0\"/>\n-        <source>URI can not be parsed! This can be caused by an invalid Bitcoin address or malformed URI parameters.</source>\n-        <translation type=\"unfinished\"/>\n-    </message>\n-    <message>\n-        <location line=\"+45\"/>\n+        <location line=\"+67\"/>\n         <source>Wallet is &lt;b&gt;encrypted&lt;/b&gt; and currently &lt;b&gt;unlocked&lt;/b&gt;</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -674,352 +678,677 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location filename=\"../bitcoin.cpp\" line=\"+110\"/>\n+        <location filename=\"../bitcoin.cpp\" line=\"+116\"/>\n         <source>A fatal error occurred. Bitcoin can no longer continue safely and will quit.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n </context>\n <context>\n     <name>ClientModel</name>\n     <message>\n-        <location filename=\"../clientmodel.cpp\" line=\"+115\"/>\n+        <location filename=\"../clientmodel.cpp\" line=\"+119\"/>\n         <source>Network Alert</source>\n         <translation type=\"unfinished\"/>\n     </message>\n </context>\n <context>\n-    <name>EditAddressDialog</name>\n+    <name>CoinControlDialog</name>\n     <message>\n-        <location filename=\"../forms/editaddressdialog.ui\" line=\"+14\"/>\n-        <source>Edit Address</source>\n+        <location filename=\"../forms/coincontroldialog.ui\" line=\"+14\"/>\n+        <source>Coin Control Address Selection</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+11\"/>\n-        <source>&amp;Label</source>\n+        <location line=\"+34\"/>\n+        <source>Quantity:</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n-        <source>The label associated with this address list entry</source>\n+        <location line=\"+29\"/>\n+        <source>Bytes:</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+17\"/>\n-        <source>The address associated with this address list entry. This can only be modified for sending addresses.</source>\n+        <location line=\"+45\"/>\n+        <source>Amount:</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-10\"/>\n-        <source>&amp;Address</source>\n+        <location line=\"+29\"/>\n+        <source>Priority:</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location filename=\"../editaddressdialog.cpp\" line=\"+21\"/>\n-        <source>New receiving address</source>\n+        <location line=\"+45\"/>\n+        <source>Fee:</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n-        <source>New sending address</source>\n+        <location line=\"+32\"/>\n+        <source>Low Output:</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+3\"/>\n-        <source>Edit receiving address</source>\n+        <location line=\"+48\"/>\n+        <source>After Fee:</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n-        <source>Edit sending address</source>\n+        <location line=\"+32\"/>\n+        <source>Change:</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+76\"/>\n-        <source>The entered address &quot;%1&quot; is already in the address book.</source>\n+        <location line=\"+63\"/>\n+        <source>(un)select all</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-5\"/>\n-        <source>The entered address &quot;%1&quot; is not a valid Bitcoin address.</source>\n+        <location line=\"+13\"/>\n+        <source>Tree mode</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n-        <source>Could not unlock wallet.</source>\n+        <location line=\"+16\"/>\n+        <source>List mode</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+5\"/>\n-        <source>New key generation failed.</source>\n+        <location line=\"+52\"/>\n+        <source>Amount</source>\n         <translation type=\"unfinished\"/>\n     </message>\n-</context>\n-<context>\n-    <name>FreespaceChecker</name>\n     <message>\n-        <location filename=\"../intro.cpp\" line=\"+61\"/>\n-        <source>A new data directory will be created.</source>\n+        <location line=\"+10\"/>\n+        <source>Address</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+22\"/>\n-        <source>name</source>\n+        <location line=\"+5\"/>\n+        <source>Date</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+2\"/>\n-        <source>Directory already exists. Add %1 if you intend to create a new directory here.</source>\n+        <location line=\"+5\"/>\n+        <source>Confirmations</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <location line=\"+3\"/>\n-        <source>Path already exists, and is not a directory.</source>\n+        <source>Confirmed</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+7\"/>\n-        <source>Cannot create data directory here.</source>\n+        <location line=\"+5\"/>\n+        <source>Priority</source>\n         <translation type=\"unfinished\"/>\n     </message>\n-</context>\n-<context>\n-    <name>GUIUtil::HelpMessageBox</name>\n     <message>\n-        <location filename=\"../guiutil.cpp\" line=\"+558\"/>\n-        <location line=\"+13\"/>\n-        <source>Bitcoin-Qt</source>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"+42\"/>\n+        <source>Copy address</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-13\"/>\n-        <source>version</source>\n+        <location line=\"+1\"/>\n+        <source>Copy label</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+2\"/>\n-        <source>Usage:</source>\n+        <location line=\"+1\"/>\n+        <location line=\"+26\"/>\n+        <source>Copy amount</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+1\"/>\n-        <source>command-line options</source>\n+        <location line=\"-25\"/>\n+        <source>Copy transaction ID</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n-        <source>UI options</source>\n+        <location line=\"+1\"/>\n+        <source>Lock unspent</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <location line=\"+1\"/>\n-        <source>Set language, for example &quot;de_DE&quot; (default: system locale)</source>\n+        <source>Unlock unspent</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+1\"/>\n-        <source>Start minimized</source>\n+        <location line=\"+22\"/>\n+        <source>Copy quantity</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+2\"/>\n+        <source>Copy fee</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <location line=\"+1\"/>\n-        <source>Show splash screen on startup (default: 1)</source>\n+        <source>Copy after fee</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <location line=\"+1\"/>\n-        <source>Choose data directory on startup (default: 0)</source>\n+        <source>Copy bytes</source>\n         <translation type=\"unfinished\"/>\n     </message>\n-</context>\n-<context>\n-    <name>Intro</name>\n     <message>\n-        <location filename=\"../forms/intro.ui\" line=\"+14\"/>\n-        <source>Welcome</source>\n+        <location line=\"+1\"/>\n+        <source>Copy priority</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+9\"/>\n-        <source>Welcome to Bitcoin-Qt.</source>\n+        <location line=\"+1\"/>\n+        <source>Copy low output</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+26\"/>\n-        <source>As this is the first time the program is launched, you can choose where Bitcoin-Qt will store its data.</source>\n+        <location line=\"+1\"/>\n+        <source>Copy change</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n-        <source>Bitcoin-Qt will download and store a copy of the Bitcoin block chain. At least %1GB of data will be stored in this directory, and it will grow over time. The wallet will also be stored in this directory.</source>\n+        <location line=\"+323\"/>\n+        <source>highest</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n-        <source>Use the default data directory</source>\n+        <location line=\"+1\"/>\n+        <source>higher</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+7\"/>\n-        <source>Use a custom data directory:</source>\n+        <location line=\"+1\"/>\n+        <source>high</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location filename=\"../intro.cpp\" line=\"+105\"/>\n-        <source>Error</source>\n+        <location line=\"+1\"/>\n+        <source>medium-high</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+9\"/>\n-        <source>GB of free space available</source>\n+        <location line=\"+1\"/>\n+        <source>medium</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+3\"/>\n-        <source>(of %1GB needed)</source>\n+        <location line=\"+4\"/>\n+        <source>low-medium</source>\n         <translation type=\"unfinished\"/>\n     </message>\n-</context>\n-<context>\n-    <name>OptionsDialog</name>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"+14\"/>\n-        <source>Options</source>\n+        <location line=\"+1\"/>\n+        <source>low</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+16\"/>\n-        <source>&amp;Main</source>\n+        <location line=\"+1\"/>\n+        <source>lower</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+6\"/>\n-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB.</source>\n+        <location line=\"+1\"/>\n+        <source>lowest</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+15\"/>\n-        <source>Pay transaction &amp;fee</source>\n+        <location line=\"+11\"/>\n+        <source>(%1 locked)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+31\"/>\n-        <source>Automatically start Bitcoin after logging in to the system.</source>\n+        <location line=\"+171\"/>\n+        <source>Dust</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+3\"/>\n-        <source>&amp;Start Bitcoin on system login</source>\n+        <location line=\"+0\"/>\n+        <source>yes</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+35\"/>\n-        <source>Reset all client options to default.</source>\n+        <location line=\"+0\"/>\n+        <source>no</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+3\"/>\n-        <source>&amp;Reset Options</source>\n+        <location line=\"+10\"/>\n+        <source>This label turns red, if the transaction size is greater than 1000 bytes.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+13\"/>\n-        <source>&amp;Network</source>\n+        <location line=\"+1\"/>\n+        <location line=\"+5\"/>\n+        <source>This means a fee of at least %1 per kB is required.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+6\"/>\n-        <source>Automatically open the Bitcoin client port on the router. This only works when your router supports UPnP and it is enabled.</source>\n+        <location line=\"-4\"/>\n+        <source>Can vary +/- 1 byte per input.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+3\"/>\n-        <source>Map port using &amp;UPnP</source>\n+        <location line=\"+2\"/>\n+        <source>Transactions with higher priority are more likely to get included into a block.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+7\"/>\n-        <source>Connect to the Bitcoin network through a SOCKS proxy (e.g. when connecting through Tor).</source>\n+        <location line=\"+1\"/>\n+        <source>This label turns red, if the priority is smaller than &quot;medium&quot;</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <location line=\"+3\"/>\n-        <source>&amp;Connect through SOCKS proxy:</source>\n+        <source>This label turns red, if any recipient receives an amount smaller than %1.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+9\"/>\n-        <source>Proxy &amp;IP:</source>\n+        <location line=\"+1\"/>\n+        <location line=\"+4\"/>\n+        <source>This means a fee of at least %1 is required.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+19\"/>\n-        <source>IP address of the proxy (e.g. 127.0.0.1)</source>\n+        <location line=\"-3\"/>\n+        <source>Amounts below 0.546 times the minimum relay fee are shown as dust.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+7\"/>\n-        <source>&amp;Port:</source>\n+        <location line=\"+2\"/>\n+        <source>This label turns red, if the change is smaller than %1.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+19\"/>\n-        <source>Port of the proxy (e.g. 9050)</source>\n+        <location line=\"+43\"/>\n+        <location line=\"+66\"/>\n+        <source>(no label)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+7\"/>\n-        <source>SOCKS &amp;Version:</source>\n+        <location line=\"-9\"/>\n+        <source>change from %1 (%2)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+13\"/>\n-        <source>SOCKS version of the proxy (e.g. 5)</source>\n+        <location line=\"+1\"/>\n+        <source>(change)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n+</context>\n+<context>\n+    <name>EditAddressDialog</name>\n     <message>\n-        <location line=\"+36\"/>\n-        <source>&amp;Window</source>\n+        <location filename=\"../forms/editaddressdialog.ui\" line=\"+14\"/>\n+        <source>Edit Address</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+6\"/>\n-        <source>Show only a tray icon after minimizing the window.</source>\n+        <location line=\"+11\"/>\n+        <source>&amp;Label</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+3\"/>\n-        <source>&amp;Minimize to the tray instead of the taskbar</source>\n+        <location line=\"+10\"/>\n+        <source>The label associated with this address list entry</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+7\"/>\n-        <source>Minimize instead of exit the application when the window is closed. When this option is enabled, the application will be closed only after selecting Quit in the menu.</source>\n+        <location line=\"+17\"/>\n+        <source>The address associated with this address list entry. This can only be modified for sending addresses.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+3\"/>\n-        <source>M&amp;inimize on close</source>\n+        <location line=\"-10\"/>\n+        <source>&amp;Address</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+21\"/>\n-        <source>&amp;Display</source>\n+        <location filename=\"../editaddressdialog.cpp\" line=\"+25\"/>\n+        <source>New receiving address</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+8\"/>\n-        <source>User Interface &amp;language:</source>\n+        <location line=\"+4\"/>\n+        <source>New sending address</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+13\"/>\n-        <source>The user interface language can be set here. This setting will take effect after restarting Bitcoin.</source>\n+        <location line=\"+3\"/>\n+        <source>Edit receiving address</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+11\"/>\n-        <source>&amp;Unit to show amounts in:</source>\n+        <location line=\"+4\"/>\n+        <source>Edit sending address</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+76\"/>\n+        <source>The entered address &quot;%1&quot; is already in the address book.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"-5\"/>\n+        <source>The entered address &quot;%1&quot; is not a valid Bitcoin address.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+10\"/>\n+        <source>Could not unlock wallet.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+5\"/>\n+        <source>New key generation failed.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+</context>\n+<context>\n+    <name>FreespaceChecker</name>\n+    <message>\n+        <location filename=\"../intro.cpp\" line=\"+65\"/>\n+        <source>A new data directory will be created.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+22\"/>\n+        <source>name</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+2\"/>\n+        <source>Directory already exists. Add %1 if you intend to create a new directory here.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>Path already exists, and is not a directory.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+7\"/>\n+        <source>Cannot create data directory here.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+</context>\n+<context>\n+    <name>GUIUtil::HelpMessageBox</name>\n+    <message>\n+        <location filename=\"../guiutil.cpp\" line=\"+597\"/>\n+        <source>version</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+0\"/>\n+        <location line=\"+13\"/>\n+        <source>Bitcoin Core</source>\n+        <translation>Bitcoin Jezrga</translation>\n+    </message>\n+    <message>\n+        <location line=\"-11\"/>\n+        <source>Usage:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>command-line options</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+4\"/>\n+        <source>UI options</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Set language, for example &quot;de_DE&quot; (default: system locale)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Start minimized</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Show splash screen on startup (default: 1)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Choose data directory on startup (default: 0)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+</context>\n+<context>\n+    <name>Intro</name>\n+    <message>\n+        <location filename=\"../forms/intro.ui\" line=\"+14\"/>\n+        <source>Welcome</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+9\"/>\n+        <source>Welcome to Bitcoin Core.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+26\"/>\n+        <source>As this is the first time the program is launched, you can choose where Bitcoin Core will store its data.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+10\"/>\n+        <source>Bitcoin Core will download and store a copy of the Bitcoin block chain. At least %1GB of data will be stored in this directory, and it will grow over time. The wallet will also be stored in this directory.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+10\"/>\n+        <source>Use the default data directory</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+7\"/>\n+        <source>Use a custom data directory:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location filename=\"../intro.cpp\" line=\"+85\"/>\n+        <source>Bitcoin</source>\n+        <translation>Bitcoin</translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Error: Specified data directory &quot;%1&quot; can not be created.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+19\"/>\n+        <source>Error</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+9\"/>\n+        <source>GB of free space available</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>(of %1GB needed)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+</context>\n+<context>\n+    <name>OpenURIDialog</name>\n+    <message>\n+        <location filename=\"../forms/openuridialog.ui\" line=\"+14\"/>\n+        <source>Open URI</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+6\"/>\n+        <source>Open payment request from URI or file</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+9\"/>\n+        <source>URI:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+11\"/>\n+        <source>Select payment request file</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location filename=\"../openuridialog.cpp\" line=\"+47\"/>\n+        <source>Select payment request file to open</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+</context>\n+<context>\n+    <name>OptionsDialog</name>\n+    <message>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"+14\"/>\n+        <source>Options</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+16\"/>\n+        <source>&amp;Main</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+6\"/>\n+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+15\"/>\n+        <source>Pay transaction &amp;fee</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+31\"/>\n+        <source>Automatically start Bitcoin after logging in to the system.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>&amp;Start Bitcoin on system login</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+35\"/>\n+        <source>Reset all client options to default.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>&amp;Reset Options</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+13\"/>\n+        <source>&amp;Network</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+6\"/>\n+        <source>Automatically open the Bitcoin client port on the router. This only works when your router supports UPnP and it is enabled.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>Map port using &amp;UPnP</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+7\"/>\n+        <source>Connect to the Bitcoin network through a SOCKS proxy (e.g. when connecting through Tor).</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>&amp;Connect through SOCKS proxy:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+9\"/>\n+        <source>Proxy &amp;IP:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+19\"/>\n+        <source>IP address of the proxy (e.g. 127.0.0.1)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+7\"/>\n+        <source>&amp;Port:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+19\"/>\n+        <source>Port of the proxy (e.g. 9050)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+7\"/>\n+        <source>SOCKS &amp;Version:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+13\"/>\n+        <source>SOCKS version of the proxy (e.g. 5)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+36\"/>\n+        <source>&amp;Window</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+6\"/>\n+        <source>Show only a tray icon after minimizing the window.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>&amp;Minimize to the tray instead of the taskbar</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+7\"/>\n+        <source>Minimize instead of exit the application when the window is closed. When this option is enabled, the application will be closed only after selecting Quit in the menu.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>M&amp;inimize on close</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+21\"/>\n+        <source>&amp;Display</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+8\"/>\n+        <source>User Interface &amp;language:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+13\"/>\n+        <source>The user interface language can be set here. This setting will take effect after restarting Bitcoin.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+11\"/>\n+        <source>&amp;Unit to show amounts in:</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n@@ -1034,7 +1363,17 @@ Address: %4\n     </message>\n     <message>\n         <location line=\"+3\"/>\n-        <source>&amp;Display addresses in transaction list</source>\n+        <source>&amp;Display addresses in transaction list</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+7\"/>\n+        <source>Whether to show coin control features or not.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>Display coin &amp;control features (experts only)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n@@ -1053,12 +1392,12 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location filename=\"../optionsdialog.cpp\" line=\"+58\"/>\n+        <location filename=\"../optionsdialog.cpp\" line=\"+63\"/>\n         <source>default</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+130\"/>\n+        <location line=\"+131\"/>\n         <source>Confirm options reset</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1099,17 +1438,17 @@ Address: %4\n     </message>\n     <message>\n         <location line=\"+50\"/>\n-        <location line=\"+202\"/>\n+        <location line=\"+214\"/>\n         <source>The displayed information may be out of date. Your wallet automatically synchronizes with the Bitcoin network after a connection is established, but this process has not completed yet.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-131\"/>\n+        <location line=\"-140\"/>\n         <source>Unconfirmed:</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-78\"/>\n+        <location line=\"-81\"/>\n         <source>Wallet</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1124,12 +1463,12 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+29\"/>\n+        <location line=\"+32\"/>\n         <source>Total of transactions that have yet to be confirmed, and do not yet count toward the spendable balance</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+13\"/>\n+        <location line=\"+16\"/>\n         <source>Immature:</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1139,7 +1478,7 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+13\"/>\n+        <location line=\"+16\"/>\n         <source>Total:</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1149,12 +1488,12 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+53\"/>\n+        <location line=\"+56\"/>\n         <source>&lt;b&gt;Recent transactions&lt;/b&gt;</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location filename=\"../overviewpage.cpp\" line=\"+116\"/>\n+        <location filename=\"../overviewpage.cpp\" line=\"+120\"/>\n         <location line=\"+1\"/>\n         <source>out of sync</source>\n         <translation type=\"unfinished\"/>\n@@ -1163,7 +1502,7 @@ Address: %4\n <context>\n     <name>PaymentServer</name>\n     <message>\n-        <location filename=\"../paymentserver.cpp\" line=\"+392\"/>\n+        <location filename=\"../paymentserver.cpp\" line=\"+397\"/>\n         <source>URI handling</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1173,23 +1512,29 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+69\"/>\n+        <location line=\"+91\"/>\n         <source>Requested payment amount of %1 is too small (considered dust).</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n-        <location line=\"+37\"/>\n+        <location line=\"-204\"/>\n+        <location line=\"+195\"/>\n+        <location line=\"+13\"/>\n         <source>Payment request error</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+1\"/>\n-        <source>Insecure requests to custom payment scripts unsupported</source>\n+        <location line=\"-207\"/>\n+        <source>Cannot start bitcoin: click-to-pay handler</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+38\"/>\n+        <location line=\"+195\"/>\n+        <source>Unverified payment requests to custom payment scripts are unsupported.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+59\"/>\n         <source>Refund from %1</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1199,7 +1544,7 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+31\"/>\n+        <location line=\"+28\"/>\n         <source>Bad response from server %1</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1209,8 +1554,8 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-58\"/>\n-        <location line=\"+30\"/>\n+        <location line=\"-55\"/>\n+        <location line=\"+27\"/>\n         <location line=\"+17\"/>\n         <source>Network request error</source>\n         <translation type=\"unfinished\"/>\n@@ -1219,11 +1564,10 @@ Address: %4\n <context>\n     <name>QObject</name>\n     <message>\n-        <location filename=\"../bitcoin.cpp\" line=\"+114\"/>\n+        <location filename=\"../bitcoin.cpp\" line=\"+119\"/>\n         <location line=\"+5\"/>\n-        <location filename=\"../intro.cpp\" line=\"-32\"/>\n         <source>Bitcoin</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>Bitcoin</translation>\n     </message>\n     <message>\n         <location line=\"-4\"/>\n@@ -1235,16 +1579,11 @@ Address: %4\n         <source>Error: Invalid combination of -regtest and -testnet.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n-    <message>\n-        <location filename=\"../intro.cpp\" line=\"+1\"/>\n-        <source>Error: Specified data directory &quot;%1&quot; can not be created.</source>\n-        <translation type=\"unfinished\"/>\n-    </message>\n </context>\n <context>\n     <name>QRImageWidget</name>\n     <message>\n-        <location filename=\"../receiverequestdialog.cpp\" line=\"+32\"/>\n+        <location filename=\"../receiverequestdialog.cpp\" line=\"+36\"/>\n         <source>&amp;Save Image...</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1260,7 +1599,7 @@ Address: %4\n     </message>\n     <message>\n         <location line=\"+0\"/>\n-        <source>PNG Images (*.png)</source>\n+        <source>PNG Image (*.png)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n </context>\n@@ -1281,7 +1620,7 @@ Address: %4\n         <location line=\"+53\"/>\n         <location line=\"+23\"/>\n         <location line=\"+23\"/>\n-        <location filename=\"../rpcconsole.cpp\" line=\"+352\"/>\n+        <location filename=\"../rpcconsole.cpp\" line=\"+360\"/>\n         <source>N/A</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1296,7 +1635,12 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+68\"/>\n+        <location line=\"-10\"/>\n+        <source>Debug window</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+78\"/>\n         <source>Using OpenSSL version</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1351,12 +1695,7 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+7\"/>\n-        <source>Show the Bitcoin-Qt help message to get a list with possible Bitcoin command-line options.</source>\n-        <translation type=\"unfinished\"/>\n-    </message>\n-    <message>\n-        <location line=\"+3\"/>\n+        <location line=\"+10\"/>\n         <source>&amp;Show</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1396,14 +1735,9 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-104\"/>\n-        <source>Bitcoin - Debug window</source>\n-        <translation type=\"unfinished\"/>\n-    </message>\n-    <message>\n-        <location line=\"+25\"/>\n+        <location line=\"-79\"/>\n         <source>Bitcoin Core</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>Bitcoin Jezrga</translation>\n     </message>\n     <message>\n         <location line=\"+279\"/>\n@@ -1416,7 +1750,12 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+102\"/>\n+        <location line=\"+26\"/>\n+        <source>Show the Bitcoin-Core help message to get a list with possible Bitcoin command-line options.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+76\"/>\n         <source>Clear console</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1474,37 +1813,32 @@ Address: %4\n <context>\n     <name>ReceiveCoinsDialog</name>\n     <message>\n-        <location filename=\"../forms/receivecoinsdialog.ui\" line=\"+22\"/>\n+        <location filename=\"../forms/receivecoinsdialog.ui\" line=\"+83\"/>\n         <source>&amp;Amount:</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+16\"/>\n+        <location line=\"+19\"/>\n         <source>The amount to request</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+7\"/>\n+        <location line=\"-32\"/>\n         <source>&amp;Label:</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n-        <source>The label to associate with the receiving address</source>\n-        <translation type=\"unfinished\"/>\n-    </message>\n-    <message>\n-        <location line=\"+7\"/>\n+        <location line=\"-34\"/>\n         <source>&amp;Message:</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n+        <location line=\"+20\"/>\n         <source>The message to attach to payment request</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+14\"/>\n+        <location line=\"-37\"/>\n         <source>Reuse one of the previously used receiving addresses. Reusing addresses has security and privacy issues. Do not use this unless re-generating a payment request made before.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1514,12 +1848,17 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+7\"/>\n+        <location line=\"+27\"/>\n+        <source>The label to associate with the new receiving address</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+14\"/>\n         <source>Use this form to request payments. All fields are optional.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+17\"/>\n+        <location line=\"+56\"/>\n         <source>Clear all fields of the form.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1533,6 +1872,31 @@ Address: %4\n         <source>&amp;Request payment</source>\n         <translation type=\"unfinished\"/>\n     </message>\n+    <message>\n+        <location line=\"+47\"/>\n+        <source>Previously requested payments</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+12\"/>\n+        <source>Show the selected request (does the same as double clicking an entry)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>Show</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+11\"/>\n+        <source>Remove the selected entries from the list</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>Remove</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n </context>\n <context>\n     <name>ReceiveRequestDialog</name>\n@@ -1551,18 +1915,13 @@ Address: %4\n         <source>Copy &amp;Address</source>\n         <translation type=\"unfinished\"/>\n     </message>\n-    <message>\n-        <location line=\"+7\"/>\n-        <source>&amp;Copy Image</source>\n-        <translation type=\"unfinished\"/>\n-    </message>\n     <message>\n         <location line=\"+7\"/>\n         <source>&amp;Save Image...</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location filename=\"../receiverequestdialog.cpp\" line=\"+58\"/>\n+        <location filename=\"../receiverequestdialog.cpp\" line=\"+56\"/>\n         <source>Request payment to %1</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1607,17 +1966,120 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n </context>\n+<context>\n+    <name>RecentRequestsTableModel</name>\n+    <message>\n+        <location filename=\"../recentrequeststablemodel.cpp\" line=\"+14\"/>\n+        <source>Date</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+0\"/>\n+        <source>Label</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+0\"/>\n+        <source>Message</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+0\"/>\n+        <source>Amount</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+36\"/>\n+        <source>(no label)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+9\"/>\n+        <source>(no message)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+</context>\n <context>\n     <name>SendCoinsDialog</name>\n     <message>\n         <location filename=\"../forms/sendcoinsdialog.ui\" line=\"+14\"/>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"+140\"/>\n-        <location line=\"+213\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"+381\"/>\n+        <location line=\"+81\"/>\n         <source>Send Coins</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+50\"/>\n+        <location line=\"+76\"/>\n+        <source>Coin Control Features</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+20\"/>\n+        <source>Inputs...</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+7\"/>\n+        <source>automatically selected</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+19\"/>\n+        <source>Insufficient funds!</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+89\"/>\n+        <source>Quantity:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+35\"/>\n+        <source>Bytes:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+48\"/>\n+        <source>Amount:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+32\"/>\n+        <source>Priority:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+48\"/>\n+        <source>Fee:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+32\"/>\n+        <source>Low Output:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+48\"/>\n+        <source>After Fee:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+32\"/>\n+        <source>Change:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+44\"/>\n+        <source>If this is activated, but the change address is empty or invalid, change will be sent to a newly generated address.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>Custom change address</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+115\"/>\n         <source>Send to multiple recipients at once</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1642,12 +2104,7 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n-        <source>123.456 BTC</source>\n-        <translation type=\"unfinished\"/>\n-    </message>\n-    <message>\n-        <location line=\"+31\"/>\n+        <location line=\"+41\"/>\n         <source>Confirm the send action</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1657,49 +2114,125 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"-154\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"-229\"/>\n         <source>Confirm send coins</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-90\"/>\n+        <location line=\"-74\"/>\n         <location line=\"+5\"/>\n         <location line=\"+5\"/>\n+        <location line=\"+4\"/>\n         <source>%1 to %2</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+26\"/>\n+        <location line=\"-136\"/>\n+        <source>Enter a Bitcoin address (e.g. 1NS17iag9jJgTHD1VXjvLCEnZuQ3rJDE9L)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+15\"/>\n+        <source>Copy quantity</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Copy amount</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Copy fee</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Copy after fee</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Copy bytes</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Copy priority</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Copy low output</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Copy change</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+170\"/>\n+        <source>Total Amount %1 (= %2)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+2\"/>\n+        <source>or</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+202\"/>\n         <source>The recipient address is not valid, please recheck.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n+        <location line=\"+3\"/>\n         <source>The amount to pay must be larger than 0.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>The amount exceeds your balance.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>The total exceeds your balance when the %1 transaction fee is included.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>Duplicate address found, can only send to each address once per send operation.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>Transaction creation failed!</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n     <message>\n         <location line=\"+4\"/>\n-        <source>The amount exceeds your balance.</source>\n+        <source>The transaction was rejected! This might happen if some of the coins in your wallet were already spent, such as if you used a copy of wallet.dat and coins were spent in the copy but not marked as spent here.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n-        <source>The total exceeds your balance when the %1 transaction fee is included.</source>\n+        <location line=\"+113\"/>\n+        <source>Warning: Invalid Bitcoin address</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+5\"/>\n-        <source>Duplicate address found, can only send to each address once per send operation.</source>\n+        <location line=\"+13\"/>\n+        <source>(no label)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n-        <source>Error: Transaction creation failed!</source>\n+        <location line=\"+8\"/>\n+        <source>Warning: Unknown change address</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+15\"/>\n+        <location line=\"-378\"/>\n         <source>Are you sure you want to send?</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1709,17 +2242,7 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+6\"/>\n-        <source>Total Amount %1</source>\n-        <translation type=\"unfinished\"/>\n-    </message>\n-    <message>\n-        <location line=\"+20\"/>\n-        <source>Error: The transaction was rejected. This might happen if some of the coins in your wallet were already spent, such as if you used a copy of wallet.dat and coins were spent in the copy but not marked as spent here.</source>\n-        <translation type=\"unfinished\"/>\n-    </message>\n-    <message>\n-        <location line=\"+144\"/>\n+        <location line=\"+170\"/>\n         <source>Payment request expired</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1732,42 +2255,47 @@ Address: %4\n <context>\n     <name>SendCoinsEntry</name>\n     <message>\n-        <location filename=\"../forms/sendcoinsentry.ui\" line=\"+33\"/>\n-        <location line=\"+585\"/>\n+        <location filename=\"../forms/sendcoinsentry.ui\" line=\"+131\"/>\n+        <location line=\"+501\"/>\n+        <location line=\"+536\"/>\n         <source>A&amp;mount:</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-572\"/>\n-        <location line=\"+585\"/>\n+        <location line=\"-1132\"/>\n         <source>Pay &amp;To:</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-551\"/>\n+        <location line=\"+18\"/>\n         <source>The address to send the payment to (e.g. 1NS17iag9jJgTHD1VXjvLCEnZuQ3rJDE9L)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location filename=\"../sendcoinsentry.cpp\" line=\"+28\"/>\n+        <location filename=\"../sendcoinsentry.cpp\" line=\"+30\"/>\n         <source>Enter a label for this address to add it to your address book</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location filename=\"../forms/sendcoinsentry.ui\" line=\"-18\"/>\n+        <location filename=\"../forms/sendcoinsentry.ui\" line=\"+57\"/>\n         <source>&amp;Label:</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+28\"/>\n+        <location line=\"-50\"/>\n         <source>Choose previously used address</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n-        <source>Alt+A</source>\n+        <location line=\"-40\"/>\n+        <source>This is a normal payment.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n+    <message>\n+        <location line=\"+50\"/>\n+        <source>Alt+A</source>\n+        <translation>Alt+A</translation>\n+    </message>\n     <message>\n         <location line=\"+7\"/>\n         <source>Paste address from clipboard</source>\n@@ -1776,20 +2304,39 @@ Address: %4\n     <message>\n         <location line=\"+10\"/>\n         <source>Alt+P</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>Alt+P</translation>\n     </message>\n     <message>\n         <location line=\"+7\"/>\n-        <source>Remove this recipient</source>\n+        <location line=\"+504\"/>\n+        <location line=\"+536\"/>\n+        <source>Remove this entry</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+16\"/>\n+        <location line=\"-40\"/>\n+        <source>This is a verified payment request.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"-971\"/>\n         <source>Enter a label for this address to add it to the list of used addresses</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+465\"/>\n+        <location line=\"+439\"/>\n+        <source>This is an unverified payment request.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+18\"/>\n+        <location line=\"+532\"/>\n+        <source>Pay To:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"-498\"/>\n+        <location line=\"+536\"/>\n         <source>Memo:</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1831,7 +2378,7 @@ Address: %4\n         <location line=\"-203\"/>\n         <location line=\"+213\"/>\n         <source>Alt+A</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>Alt+A</translation>\n     </message>\n     <message>\n         <location line=\"-203\"/>\n@@ -1841,7 +2388,7 @@ Address: %4\n     <message>\n         <location line=\"+10\"/>\n         <source>Alt+P</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>Alt+P</translation>\n     </message>\n     <message>\n         <location line=\"+12\"/>\n@@ -1910,7 +2457,7 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location filename=\"../signverifymessagedialog.cpp\" line=\"+27\"/>\n+        <location filename=\"../signverifymessagedialog.cpp\" line=\"+29\"/>\n         <location line=\"+3\"/>\n         <source>Enter a Bitcoin address (e.g. 1NS17iag9jJgTHD1VXjvLCEnZuQ3rJDE9L)</source>\n         <translation type=\"unfinished\"/>\n@@ -1926,7 +2473,7 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+85\"/>\n+        <location line=\"+84\"/>\n         <location line=\"+81\"/>\n         <source>The entered address is invalid.</source>\n         <translation type=\"unfinished\"/>\n@@ -1995,8 +2542,13 @@ Address: %4\n <context>\n     <name>SplashScreen</name>\n     <message>\n-        <location filename=\"../splashscreen.cpp\" line=\"+23\"/>\n-        <source>The Bitcoin developers</source>\n+        <location filename=\"../splashscreen.cpp\" line=\"+26\"/>\n+        <source>Bitcoin Core</source>\n+        <translation>Bitcoin Jezrga</translation>\n+    </message>\n+    <message>\n+        <location line=\"+2\"/>\n+        <source>The Bitcoin Core developers</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n@@ -2008,15 +2560,15 @@ Address: %4\n <context>\n     <name>TrafficGraphWidget</name>\n     <message>\n-        <location filename=\"../trafficgraphwidget.cpp\" line=\"+75\"/>\n+        <location filename=\"../trafficgraphwidget.cpp\" line=\"+79\"/>\n         <source>KB/s</source>\n         <translation type=\"unfinished\"/>\n     </message>\n </context>\n <context>\n     <name>TransactionDesc</name>\n     <message>\n-        <location filename=\"../transactiondesc.cpp\" line=\"+22\"/>\n+        <location filename=\"../transactiondesc.cpp\" line=\"+28\"/>\n         <source>Open until %1</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2208,7 +2760,7 @@ Address: %4\n <context>\n     <name>TransactionTableModel</name>\n     <message>\n-        <location filename=\"../transactiontablemodel.cpp\" line=\"+227\"/>\n+        <location filename=\"../transactiontablemodel.cpp\" line=\"+234\"/>\n         <source>Date</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2326,15 +2878,15 @@ Address: %4\n <context>\n     <name>TransactionView</name>\n     <message>\n-        <location filename=\"../transactionview.cpp\" line=\"+52\"/>\n+        <location filename=\"../transactionview.cpp\" line=\"+57\"/>\n         <location line=\"+16\"/>\n         <source>All</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>Sve</translation>\n     </message>\n     <message>\n         <location line=\"-15\"/>\n         <source>Today</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>Danas</translation>\n     </message>\n     <message>\n         <location line=\"+1\"/>\n@@ -2344,17 +2896,17 @@ Address: %4\n     <message>\n         <location line=\"+1\"/>\n         <source>This month</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>Ovaj mjesec</translation>\n     </message>\n     <message>\n         <location line=\"+1\"/>\n         <source>Last month</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>Pro\u0161li mjesec</translation>\n     </message>\n     <message>\n         <location line=\"+1\"/>\n         <source>This year</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>Ove godine</translation>\n     </message>\n     <message>\n         <location line=\"+1\"/>\n@@ -2387,12 +2939,12 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+7\"/>\n+        <location line=\"+6\"/>\n         <source>Enter address or label to search</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+7\"/>\n+        <location line=\"+6\"/>\n         <source>Min amount</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2427,17 +2979,37 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+143\"/>\n-        <source>Export Transaction Data</source>\n+        <location line=\"+142\"/>\n+        <source>Export Transaction History</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+1\"/>\n+        <location line=\"+19\"/>\n+        <source>Exporting Failed</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+0\"/>\n+        <source>There was an error trying to save the transaction history to %1.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+4\"/>\n+        <source>Exporting Successful</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+0\"/>\n+        <source>The transaction history was successfully saved to %1.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"-22\"/>\n         <source>Comma separated file (*.csv)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+8\"/>\n+        <location line=\"+9\"/>\n         <source>Confirmed</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2472,17 +3044,7 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n-        <source>Error exporting</source>\n-        <translation type=\"unfinished\"/>\n-    </message>\n-    <message>\n-        <location line=\"+0\"/>\n-        <source>Could not write to file %1.</source>\n-        <translation type=\"unfinished\"/>\n-    </message>\n-    <message>\n-        <location line=\"+100\"/>\n+        <location line=\"+107\"/>\n         <source>Range:</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2492,18 +3054,26 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n </context>\n+<context>\n+    <name>WalletFrame</name>\n+    <message>\n+        <location filename=\"../walletframe.cpp\" line=\"+26\"/>\n+        <source>No wallet has been loaded.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+</context>\n <context>\n     <name>WalletModel</name>\n     <message>\n-        <location filename=\"../walletmodel.cpp\" line=\"+218\"/>\n+        <location filename=\"../walletmodel.cpp\" line=\"+245\"/>\n         <source>Send Coins</source>\n         <translation type=\"unfinished\"/>\n     </message>\n </context>\n <context>\n     <name>WalletView</name>\n     <message>\n-        <location filename=\"../walletview.cpp\" line=\"+46\"/>\n+        <location filename=\"../walletview.cpp\" line=\"+43\"/>\n         <source>&amp;Export</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2513,65 +3083,60 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+183\"/>\n+        <location line=\"+181\"/>\n         <source>Backup Wallet</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+0\"/>\n+        <location line=\"+1\"/>\n         <source>Wallet Data (*.dat)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+3\"/>\n+        <location line=\"+6\"/>\n         <source>Backup Failed</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <location line=\"+0\"/>\n-        <source>There was an error trying to save the wallet data to the new location.</source>\n+        <source>There was an error trying to save the wallet data to %1.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <location line=\"+4\"/>\n-        <source>Backup Successful</source>\n+        <source>The wallet data was successfully saved to %1.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <location line=\"+0\"/>\n-        <source>The wallet data was successfully saved to the new location.</source>\n+        <source>Backup Successful</source>\n         <translation type=\"unfinished\"/>\n     </message>\n </context>\n <context>\n     <name>bitcoin-core</name>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"+102\"/>\n-        <source>Bitcoin version</source>\n-        <translation type=\"unfinished\"/>\n-    </message>\n-    <message>\n-        <location line=\"+107\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"+217\"/>\n         <source>Usage:</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-55\"/>\n+        <location line=\"-54\"/>\n         <source>List commands</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-13\"/>\n+        <location line=\"-14\"/>\n         <source>Get help for a command</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+25\"/>\n+        <location line=\"+26\"/>\n         <source>Options:</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+24\"/>\n+        <location line=\"+23\"/>\n         <source>Specify configuration file (default: bitcoin.conf)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2591,7 +3156,7 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-28\"/>\n+        <location line=\"-27\"/>\n         <source>Listen for connections on &lt;port&gt; (default: 8333 or testnet: 18333)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2601,7 +3166,7 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-49\"/>\n+        <location line=\"-50\"/>\n         <source>Connect to a node to retrieve peer addresses, and disconnect</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2616,7 +3181,7 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-142\"/>\n+        <location line=\"-147\"/>\n         <source>Number of seconds to keep misbehaving peers from reconnecting (default: 86400)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2631,7 +3196,7 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+40\"/>\n+        <location line=\"+45\"/>\n         <source>Accept command line and JSON-RPC commands</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2641,17 +3206,17 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+40\"/>\n+        <location line=\"+39\"/>\n         <source>Use the test network</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-118\"/>\n+        <location line=\"-117\"/>\n         <source>Accept connections from outside (default: 1 if no -proxy or -connect)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-87\"/>\n+        <location line=\"-92\"/>\n         <source>%s, you must set a rpcpassword in the configuration file:\n %s\n It is recommended you use the following random password:\n@@ -2706,17 +3271,17 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+11\"/>\n-        <source>Set maximum size of high-priority/low-fee transactions in bytes (default: 27000)</source>\n+        <location line=\"+18\"/>\n+        <source>This is a pre-release test build - use at your own risk - do not use for mining or merchant applications</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+6\"/>\n-        <source>This is a pre-release test build - use at your own risk - do not use for mining or merchant applications</source>\n+        <location line=\"+5\"/>\n+        <source>Use separate SOCKS5 proxy to reach peers via Tor hidden services (default: -proxy)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+5\"/>\n+        <location line=\"+3\"/>\n         <source>Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2746,17 +3311,27 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+14\"/>\n+        <location line=\"+9\"/>\n+        <source>&lt;category&gt; can be:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+6\"/>\n         <source>Attempt to recover private keys from a corrupt wallet.dat</source>\n         <translation type=\"unfinished\"/>\n     </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Bitcoin Core Daemon</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n     <message>\n         <location line=\"+1\"/>\n         <source>Bitcoin RPC client version</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+2\"/>\n+        <location line=\"+1\"/>\n         <source>Block creation options:</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2766,7 +3341,12 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+2\"/>\n+        <location line=\"+1\"/>\n+        <source>Connect through SOCKS proxy</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n         <source>Connect to JSON-RPC on &lt;port&gt; (default: 8332 or testnet: 18332)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2876,7 +3456,12 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+2\"/>\n+        <location line=\"+1\"/>\n+        <source>Fee per kB to add to transactions you send</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n         <source>Find peers using DNS lookup (default: 1 unless -connect)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2895,6 +3480,11 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <source>How thorough the block verification is (0-4, default: 3)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>If &lt;category&gt; is not supplied, output all debugging information.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n     <message>\n         <location line=\"+2\"/>\n         <source>Incorrect or no genesis block found. Wrong datadir for network?</source>\n@@ -2911,17 +3501,37 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+8\"/>\n+        <location line=\"+5\"/>\n+        <source>Prepend debug output with timestamp (default: 1)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>RPC client options:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n         <source>Rebuild block chain index from current blk000??.dat files</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+6\"/>\n+        <location line=\"+5\"/>\n+        <source>Select SOCKS version for -proxy (4 or 5, default: 5)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n         <source>Send command to Bitcoin server</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n+        <location line=\"+8\"/>\n+        <source>Set maximum block size in bytes (default: %d)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+2\"/>\n         <source>Set the number of threads to service RPC calls (default: 4)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2941,7 +3551,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+8\"/>\n+        <location line=\"+7\"/>\n         <source>Verifying blocks...</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2950,13 +3560,23 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <source>Verifying wallet...</source>\n         <translation type=\"unfinished\"/>\n     </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Wait for RPC server to start</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n     <message>\n         <location line=\"+1\"/>\n         <source>Wallet %s resides outside data directory %s</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n+        <location line=\"+3\"/>\n+        <source>Warning: Deprecated argument -debugnet ignored, use -debug=net</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+2\"/>\n         <source>You need to rebuild the database using -reindex to change -txindex</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2966,17 +3586,27 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-98\"/>\n+        <location line=\"-104\"/>\n         <source>Execute command when a relevant alert is received or we see a really long fork (%s in cmd is replaced by message)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+17\"/>\n+        <location line=\"+14\"/>\n+        <source>Output debugging information (default: 0, supplying &lt;category&gt; is optional)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+2\"/>\n+        <source>Set maximum size of high-priority/low-fee transactions in bytes (default: %d)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+2\"/>\n         <source>Set the number of script verification threads (up to 16, 0 = auto, &lt;0 = leave that many cores free, default: 0)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+83\"/>\n+        <location line=\"+88\"/>\n         <source>Information</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -3016,32 +3646,12 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+2\"/>\n-        <source>Output extra debugging information. Implies all other -debug* options</source>\n-        <translation type=\"unfinished\"/>\n-    </message>\n-    <message>\n-        <location line=\"+1\"/>\n-        <source>Output extra network debugging information</source>\n-        <translation type=\"unfinished\"/>\n-    </message>\n-    <message>\n-        <location line=\"+2\"/>\n-        <source>Prepend debug output with timestamp</source>\n-        <translation type=\"unfinished\"/>\n-    </message>\n-    <message>\n-        <location line=\"+5\"/>\n+        <location line=\"+9\"/>\n         <source>SSL options: (see the Bitcoin Wiki for SSL setup instructions)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+1\"/>\n-        <source>Select the version of socks proxy to use (4-5, default: 5)</source>\n-        <translation type=\"unfinished\"/>\n-    </message>\n-    <message>\n-        <location line=\"+3\"/>\n+        <location line=\"+4\"/>\n         <source>Send trace/debug info to console instead of debug.log file</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -3051,12 +3661,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+5\"/>\n-        <source>Set maximum block size in bytes (default: 250000)</source>\n-        <translation type=\"unfinished\"/>\n-    </message>\n-    <message>\n-        <location line=\"+1\"/>\n+        <location line=\"+6\"/>\n         <source>Set minimum block size in bytes (default: 0)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -3105,38 +3710,38 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <source>Use UPnP to map the listening port (default: 1 when listening)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n-    <message>\n-        <location line=\"+1\"/>\n-        <source>Use proxy to reach tor hidden services (default: same as -proxy)</source>\n-        <translation type=\"unfinished\"/>\n-    </message>\n     <message>\n         <location line=\"+2\"/>\n         <source>Username for JSON-RPC connections</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+5\"/>\n+        <location line=\"+6\"/>\n         <source>Warning</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+1\"/>\n+        <location line=\"+2\"/>\n         <source>Warning: This version is obsolete, upgrade required!</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <location line=\"+2\"/>\n+        <source>version</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n         <source>wallet.dat corrupt, salvage failed</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-54\"/>\n+        <location line=\"-57\"/>\n         <source>Password for JSON-RPC connections</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-70\"/>\n+        <location line=\"-69\"/>\n         <source>Allow JSON-RPC connections from specified IP address</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -3146,12 +3751,12 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-126\"/>\n+        <location line=\"-131\"/>\n         <source>Execute command when the best block changes (%s in cmd is replaced by block hash)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+155\"/>\n+        <location line=\"+160\"/>\n         <source>Upgrade wallet to latest format</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -3191,22 +3796,17 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-95\"/>\n-        <source>Connect through socks proxy</source>\n-        <translation type=\"unfinished\"/>\n-    </message>\n-    <message>\n-        <location line=\"-11\"/>\n+        <location line=\"-106\"/>\n         <source>Allow DNS lookups for -addnode, -seednode and -connect</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+58\"/>\n+        <location line=\"+59\"/>\n         <source>Loading addresses...</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-36\"/>\n+        <location line=\"-37\"/>\n         <source>Error loading wallet.dat: Wallet corrupted</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -3226,12 +3826,12 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+30\"/>\n+        <location line=\"+31\"/>\n         <source>Invalid -proxy address: &apos;%s&apos;</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+57\"/>\n+        <location line=\"+56\"/>\n         <source>Unknown network specified in -onlynet: &apos;%s&apos;</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -3251,7 +3851,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+46\"/>\n+        <location line=\"+47\"/>\n         <source>Invalid amount for -paytxfee=&lt;amount&gt;: &apos;%s&apos;</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -3271,27 +3871,22 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-60\"/>\n+        <location line=\"-61\"/>\n         <source>Add a node to connect to and attempt to keep the connection open</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-28\"/>\n+        <location line=\"-32\"/>\n         <source>Unable to bind to %s on this computer. Bitcoin is probably already running.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+69\"/>\n-        <source>Fee per KB to add to transactions you send</source>\n-        <translation type=\"unfinished\"/>\n-    </message>\n-    <message>\n-        <location line=\"+20\"/>\n+        <location line=\"+94\"/>\n         <source>Loading wallet...</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-54\"/>\n+        <location line=\"-55\"/>\n         <source>Cannot downgrade wallet</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -3321,7 +3916,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-33\"/>\n+        <location line=\"-34\"/>\n         <source>You must set rpcpassword=&lt;password&gt; in the configuration file:\n %s\n If the file does not exist, create it with owner-readable-only file permissions.</source>"
      },
      {
        "sha": "c26dbb198539c332e9efd3a4bcec0e3a5b44d100",
        "filename": "src/qt/locale/bitcoin_de_AT.ts",
        "status": "modified",
        "additions": 1007,
        "deletions": 412,
        "changes": 1419,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6d697e9fa45b3f3bf67d79cc3d17717b68a43825/src/qt/locale/bitcoin_de_AT.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6d697e9fa45b3f3bf67d79cc3d17717b68a43825/src/qt/locale/bitcoin_de_AT.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_de_AT.ts?ref=6d697e9fa45b3f3bf67d79cc3d17717b68a43825",
        "patch": "@@ -3,13 +3,13 @@\n     <name>AboutDialog</name>\n     <message>\n         <location filename=\"../forms/aboutdialog.ui\" line=\"+14\"/>\n-        <source>About Bitcoin</source>\n-        <translation>Iwa Bitcoin</translation>\n+        <source>About Bitcoin Core</source>\n+        <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <location line=\"+39\"/>\n-        <source>&lt;b&gt;Bitcoin&lt;/b&gt; version</source>\n-        <translation>&lt;b&gt;Bitcoin&lt;/b&gt; Veasion</translation>\n+        <source>&lt;b&gt;Bitcoin Core&lt;/b&gt; version</source>\n+        <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <location line=\"+57\"/>\n@@ -22,7 +22,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location filename=\"../aboutdialog.cpp\" line=\"+14\"/>\n+        <location filename=\"../aboutdialog.cpp\" line=\"+19\"/>\n         <source>Copyright</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -65,7 +65,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location filename=\"../addressbookpage.cpp\" line=\"+72\"/>\n+        <location filename=\"../addressbookpage.cpp\" line=\"+74\"/>\n         <source>&amp;Copy Address</source>\n         <translation>Adress &amp;Kopian</translation>\n     </message>\n@@ -135,7 +135,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation>&amp;\u00c4ndan</translation>\n     </message>\n     <message>\n-        <location line=\"+197\"/>\n+        <location line=\"+194\"/>\n         <source>Export Address List</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -158,7 +158,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n <context>\n     <name>AddressTableModel</name>\n     <message>\n-        <location filename=\"../addresstablemodel.cpp\" line=\"+164\"/>\n+        <location filename=\"../addresstablemodel.cpp\" line=\"+168\"/>\n         <source>Label</source>\n         <translation>Titl</translation>\n     </message>\n@@ -196,7 +196,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation>Und des gleiche noamoi</translation>\n     </message>\n     <message>\n-        <location filename=\"../askpassphrasedialog.cpp\" line=\"+34\"/>\n+        <location filename=\"../askpassphrasedialog.cpp\" line=\"+40\"/>\n         <source>Enter the new passphrase to the wallet.&lt;br/&gt;Please use a passphrase of &lt;b&gt;10 or more random characters&lt;/b&gt;, or &lt;b&gt;eight or more words&lt;/b&gt;.</source>\n         <translation>A neix Geheimwuat fias Beasl vagebn.&lt;br/&gt;Vawend dabei entweda &lt;b&gt;10 (oda mea) zuf\u00f6lliche Zeichn&lt;/b&gt; (oiso Buchstobn, Ziffan, Sondazeichn), oda &lt;b&gt;ocht (oda mea) gaunze Weata&lt;/b&gt;.</translation>\n     </message>\n@@ -317,17 +317,17 @@ This product includes software developed by the OpenSSL Project for use in the O\n <context>\n     <name>BitcoinGUI</name>\n     <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"+250\"/>\n+        <location filename=\"../bitcoingui.cpp\" line=\"+260\"/>\n         <source>Sign &amp;message...</source>\n         <translation>A M\u00f6dung untaschreim...</translation>\n     </message>\n     <message>\n-        <location line=\"+254\"/>\n+        <location line=\"+290\"/>\n         <source>Synchronizing with network...</source>\n         <translation>Obgleichn midm Netz...</translation>\n     </message>\n     <message>\n-        <location line=\"-324\"/>\n+        <location line=\"-360\"/>\n         <source>&amp;Overview</source>\n         <translation>&amp;Iwasicht</translation>\n     </message>\n@@ -393,7 +393,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation>&amp;Geheimwuat \u00e4ndan...</translation>\n     </message>\n     <message>\n-        <location line=\"+259\"/>\n+        <location line=\"+295\"/>\n         <source>Importing blocks from disk...</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -403,7 +403,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-322\"/>\n+        <location line=\"-358\"/>\n         <source>Send coins to a Bitcoin address</source>\n         <translation>Schick Zasta aun a Bitcoin Adress</translation>\n     </message>\n@@ -438,20 +438,18 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation>&amp;Untaschrift tscheckn...</translation>\n     </message>\n     <message>\n-        <location line=\"-180\"/>\n-        <location line=\"+6\"/>\n-        <location line=\"+513\"/>\n+        <location line=\"+375\"/>\n         <source>Bitcoin</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>Bitcoin</translation>\n     </message>\n     <message>\n-        <location line=\"-519\"/>\n-        <location line=\"+6\"/>\n+        <location line=\"-563\"/>\n+        <location line=\"+10\"/>\n         <source>Wallet</source>\n         <translation>Beasl</translation>\n     </message>\n     <message>\n-        <location line=\"+109\"/>\n+        <location line=\"+113\"/>\n         <source>&amp;Send</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -461,13 +459,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+28\"/>\n-        <location line=\"+2\"/>\n-        <source>&amp;About Bitcoin</source>\n-        <translation type=\"unfinished\"/>\n-    </message>\n-    <message>\n-        <location line=\"+14\"/>\n+        <location line=\"+44\"/>\n         <location line=\"+2\"/>\n         <source>&amp;Show / Hide</source>\n         <translation type=\"unfinished\"/>\n@@ -493,12 +485,12 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+35\"/>\n+        <location line=\"+39\"/>\n         <source>&amp;File</source>\n         <translation>&amp;Datei</translation>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n+        <location line=\"+11\"/>\n         <source>&amp;Settings</source>\n         <translation>&amp;Eist\u00f6llungen</translation>\n     </message>\n@@ -513,18 +505,30 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation>Karteireita Werkzeigleistn</translation>\n     </message>\n     <message>\n-        <location line=\"-235\"/>\n-        <location line=\"+294\"/>\n+        <location line=\"-244\"/>\n+        <location line=\"+321\"/>\n         <source>[testnet]</source>\n         <translation>[testnetz]</translation>\n     </message>\n     <message>\n-        <location line=\"-177\"/>\n+        <location line=\"-331\"/>\n+        <location line=\"+10\"/>\n+        <source>Bitcoin Core</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+121\"/>\n         <source>Request payments (generates QR codes and bitcoin: URIs)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+63\"/>\n+        <location line=\"+27\"/>\n+        <location line=\"+2\"/>\n+        <source>&amp;About Bitcoin Core</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+34\"/>\n         <source>&amp;Used sending addresses...</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -544,13 +548,23 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+106\"/>\n+        <location line=\"+2\"/>\n+        <source>Open URI...</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Open a bitcoin: URI or payment request</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+126\"/>\n         <location line=\"+5\"/>\n         <source>Bitcoin client</source>\n         <translation>Bitcoin Klient</translation>\n     </message>\n     <message numerus=\"yes\">\n-        <location line=\"+120\"/>\n+        <location line=\"+133\"/>\n         <source>%n active connection(s) to Bitcoin network</source>\n         <translation><numerusform>%n aktive Vabindung zum Netz</numerusform><numerusform>%n aktive Vabindungen zum Netz</numerusform></translation>\n     </message>\n@@ -658,17 +672,7 @@ Wohin: %4\n </translation>\n     </message>\n     <message>\n-        <location line=\"+34\"/>\n-        <source>URI handling</source>\n-        <translation>URI Behaundlung</translation>\n-    </message>\n-    <message>\n-        <location line=\"+0\"/>\n-        <source>URI can not be parsed! This can be caused by an invalid Bitcoin address or malformed URI parameters.</source>\n-        <translation>De URI is a Kas! Meglichaweis is de Bitcoin Adress foisch, oda hoit sunst wos vamuakst.</translation>\n-    </message>\n-    <message>\n-        <location line=\"+45\"/>\n+        <location line=\"+67\"/>\n         <source>Wallet is &lt;b&gt;encrypted&lt;/b&gt; and currently &lt;b&gt;unlocked&lt;/b&gt;</source>\n         <translation>&apos;s Beasl is &lt;b&gt;vaschlisslt&lt;/b&gt; und deazeit grod &lt;b&gt;aufgschpeat&lt;/b&gt;</translation>\n     </message>\n@@ -678,269 +682,594 @@ Wohin: %4\n         <translation>&apos;s Beasl is &lt;b&gt;vaschlisslt&lt;/b&gt; und deazeit grod &lt;b&gt;zuagschpeat&lt;/b&gt;</translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoin.cpp\" line=\"+110\"/>\n+        <location filename=\"../bitcoin.cpp\" line=\"+116\"/>\n         <source>A fatal error occurred. Bitcoin can no longer continue safely and will quit.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n </context>\n <context>\n     <name>ClientModel</name>\n     <message>\n-        <location filename=\"../clientmodel.cpp\" line=\"+115\"/>\n+        <location filename=\"../clientmodel.cpp\" line=\"+119\"/>\n         <source>Network Alert</source>\n         <translation>Netz Alarm</translation>\n     </message>\n </context>\n <context>\n-    <name>EditAddressDialog</name>\n+    <name>CoinControlDialog</name>\n     <message>\n-        <location filename=\"../forms/editaddressdialog.ui\" line=\"+14\"/>\n-        <source>Edit Address</source>\n-        <translation>Adress \u00e4ndan</translation>\n+        <location filename=\"../forms/coincontroldialog.ui\" line=\"+14\"/>\n+        <source>Coin Control Address Selection</source>\n+        <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+11\"/>\n-        <source>&amp;Label</source>\n-        <translation>&amp;Titl</translation>\n+        <location line=\"+34\"/>\n+        <source>Quantity:</source>\n+        <translation>Quantit\u00e4t:</translation>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n-        <source>The label associated with this address list entry</source>\n+        <location line=\"+29\"/>\n+        <source>Bytes:</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+17\"/>\n-        <source>The address associated with this address list entry. This can only be modified for sending addresses.</source>\n+        <location line=\"+45\"/>\n+        <source>Amount:</source>\n+        <translation>Betrog:</translation>\n+    </message>\n+    <message>\n+        <location line=\"+29\"/>\n+        <source>Priority:</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-10\"/>\n-        <source>&amp;Address</source>\n-        <translation>&amp;Adress</translation>\n+        <location line=\"+45\"/>\n+        <source>Fee:</source>\n+        <translation>Geb\u00fchr:</translation>\n     </message>\n     <message>\n-        <location filename=\"../editaddressdialog.cpp\" line=\"+21\"/>\n-        <source>New receiving address</source>\n-        <translation>Neiche Empfaungsadress</translation>\n+        <location line=\"+32\"/>\n+        <source>Low Output:</source>\n+        <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n-        <source>New sending address</source>\n-        <translation>Neiche Z\u00fc\u00fc-Adress</translation>\n+        <location line=\"+48\"/>\n+        <source>After Fee:</source>\n+        <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+3\"/>\n-        <source>Edit receiving address</source>\n-        <translation>Empfaungs-Adress \u00e4ndan</translation>\n+        <location line=\"+32\"/>\n+        <source>Change:</source>\n+        <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n-        <source>Edit sending address</source>\n-        <translation>Z\u00fc\u00fc-Adress \u00e4ndan</translation>\n+        <location line=\"+63\"/>\n+        <source>(un)select all</source>\n+        <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+76\"/>\n-        <source>The entered address &quot;%1&quot; is already in the address book.</source>\n-        <translation>De eingebene Adress &quot;%1&quot; gibts eh scho im Adressbiachl.</translation>\n+        <location line=\"+13\"/>\n+        <source>Tree mode</source>\n+        <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-5\"/>\n-        <source>The entered address &quot;%1&quot; is not a valid Bitcoin address.</source>\n-        <translation>De eingebane Adress &quot;%1&quot; is a Kas.</translation>\n+        <location line=\"+16\"/>\n+        <source>List mode</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+52\"/>\n+        <source>Amount</source>\n+        <translation>Betrog</translation>\n     </message>\n     <message>\n         <location line=\"+10\"/>\n-        <source>Could not unlock wallet.</source>\n-        <translation>&apos;s Aufspean vom Beasl is f\u00f6hgschlogn.</translation>\n+        <source>Address</source>\n+        <translation>Adress</translation>\n     </message>\n     <message>\n         <location line=\"+5\"/>\n-        <source>New key generation failed.</source>\n-        <translation>Neicha Schlissl hod ned eazeigt weadn kennan.</translation>\n+        <source>Date</source>\n+        <translation>Waunn</translation>\n     </message>\n-</context>\n-<context>\n-    <name>FreespaceChecker</name>\n     <message>\n-        <location filename=\"../intro.cpp\" line=\"+61\"/>\n-        <source>A new data directory will be created.</source>\n+        <location line=\"+5\"/>\n+        <source>Confirmations</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+22\"/>\n-        <source>name</source>\n-        <translation type=\"unfinished\"/>\n+        <location line=\"+3\"/>\n+        <source>Confirmed</source>\n+        <translation>Bscht\u00e4tigt</translation>\n     </message>\n     <message>\n-        <location line=\"+2\"/>\n-        <source>Directory already exists. Add %1 if you intend to create a new directory here.</source>\n+        <location line=\"+5\"/>\n+        <source>Priority</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+3\"/>\n-        <source>Path already exists, and is not a directory.</source>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"+42\"/>\n+        <source>Copy address</source>\n+        <translation>Adress in&apos; Puffa kopian</translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Copy label</source>\n+        <translation>Titl in&apos; Puffa kopian</translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <location line=\"+26\"/>\n+        <source>Copy amount</source>\n+        <translation>Betrog in&apos; Puffa kopian</translation>\n+    </message>\n+    <message>\n+        <location line=\"-25\"/>\n+        <source>Copy transaction ID</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+7\"/>\n-        <source>Cannot create data directory here.</source>\n+        <location line=\"+1\"/>\n+        <source>Lock unspent</source>\n         <translation type=\"unfinished\"/>\n     </message>\n-</context>\n-<context>\n-    <name>GUIUtil::HelpMessageBox</name>\n     <message>\n-        <location filename=\"../guiutil.cpp\" line=\"+558\"/>\n-        <location line=\"+13\"/>\n-        <source>Bitcoin-Qt</source>\n-        <translation>Bitcoin-Qt</translation>\n+        <location line=\"+1\"/>\n+        <source>Unlock unspent</source>\n+        <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-13\"/>\n-        <source>version</source>\n-        <translation>veasion</translation>\n+        <location line=\"+22\"/>\n+        <source>Copy quantity</source>\n+        <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <location line=\"+2\"/>\n-        <source>Usage:</source>\n-        <translation>Vawendung:</translation>\n+        <source>Copy fee</source>\n+        <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <location line=\"+1\"/>\n-        <source>command-line options</source>\n-        <translation>Kommandozeiln-Optionen</translation>\n+        <source>Copy after fee</source>\n+        <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n-        <source>UI options</source>\n-        <translation>UI Optionen</translation>\n+        <location line=\"+1\"/>\n+        <source>Copy bytes</source>\n+        <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <location line=\"+1\"/>\n-        <source>Set language, for example &quot;de_DE&quot; (default: system locale)</source>\n-        <translation>de Sproch, am Bestn &quot;de_AT&quot; (sunsta: de Standard-Sproch auf dera Maschin)</translation>\n+        <source>Copy priority</source>\n+        <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <location line=\"+1\"/>\n-        <source>Start minimized</source>\n-        <translation>Mid minimiatn Fensta startn</translation>\n+        <source>Copy low output</source>\n+        <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <location line=\"+1\"/>\n-        <source>Show splash screen on startup (default: 1)</source>\n-        <translation>Zeig a Willkommens-Fensterl beim Starten (waunn ned aundas aungebm: 1)</translation>\n+        <source>Copy change</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+323\"/>\n+        <source>highest</source>\n+        <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <location line=\"+1\"/>\n-        <source>Choose data directory on startup (default: 0)</source>\n+        <source>higher</source>\n         <translation type=\"unfinished\"/>\n     </message>\n-</context>\n-<context>\n-    <name>Intro</name>\n     <message>\n-        <location filename=\"../forms/intro.ui\" line=\"+14\"/>\n-        <source>Welcome</source>\n+        <location line=\"+1\"/>\n+        <source>high</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+9\"/>\n-        <source>Welcome to Bitcoin-Qt.</source>\n+        <location line=\"+1\"/>\n+        <source>medium-high</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+26\"/>\n-        <source>As this is the first time the program is launched, you can choose where Bitcoin-Qt will store its data.</source>\n+        <location line=\"+1\"/>\n+        <source>medium</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n-        <source>Bitcoin-Qt will download and store a copy of the Bitcoin block chain. At least %1GB of data will be stored in this directory, and it will grow over time. The wallet will also be stored in this directory.</source>\n+        <location line=\"+4\"/>\n+        <source>low-medium</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n-        <source>Use the default data directory</source>\n+        <location line=\"+1\"/>\n+        <source>low</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+7\"/>\n-        <source>Use a custom data directory:</source>\n+        <location line=\"+1\"/>\n+        <source>lower</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location filename=\"../intro.cpp\" line=\"+105\"/>\n-        <source>Error</source>\n-        <translation>F\u00f6hla</translation>\n+        <location line=\"+1\"/>\n+        <source>lowest</source>\n+        <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+9\"/>\n-        <source>GB of free space available</source>\n+        <location line=\"+11\"/>\n+        <source>(%1 locked)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+3\"/>\n-        <source>(of %1GB needed)</source>\n+        <location line=\"+171\"/>\n+        <source>Dust</source>\n         <translation type=\"unfinished\"/>\n     </message>\n-</context>\n-<context>\n-    <name>OptionsDialog</name>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"+14\"/>\n-        <source>Options</source>\n-        <translation>Eist\u00f6llungen</translation>\n+        <location line=\"+0\"/>\n+        <source>yes</source>\n+        <translation>ja</translation>\n     </message>\n     <message>\n-        <location line=\"+16\"/>\n-        <source>&amp;Main</source>\n-        <translation>&amp;Masta</translation>\n+        <location line=\"+0\"/>\n+        <source>no</source>\n+        <translation>nein</translation>\n     </message>\n     <message>\n-        <location line=\"+6\"/>\n-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB.</source>\n+        <location line=\"+10\"/>\n+        <source>This label turns red, if the transaction size is greater than 1000 bytes.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+15\"/>\n-        <source>Pay transaction &amp;fee</source>\n-        <translation>Iwaweisungs-Geb\u00fchrn zoin</translation>\n+        <location line=\"+1\"/>\n+        <location line=\"+5\"/>\n+        <source>This means a fee of at least %1 per kB is required.</source>\n+        <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+31\"/>\n-        <source>Automatically start Bitcoin after logging in to the system.</source>\n-        <translation>Bitcoin automatisch nochm Einloggn starten.</translation>\n+        <location line=\"-4\"/>\n+        <source>Can vary +/- 1 byte per input.</source>\n+        <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+3\"/>\n-        <source>&amp;Start Bitcoin on system login</source>\n-        <translation>Bitcoin beim System-Einloggen starten</translation>\n+        <location line=\"+2\"/>\n+        <source>Transactions with higher priority are more likely to get included into a block.</source>\n+        <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+35\"/>\n-        <source>Reset all client options to default.</source>\n+        <location line=\"+1\"/>\n+        <source>This label turns red, if the priority is smaller than &quot;medium&quot;</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <location line=\"+3\"/>\n-        <source>&amp;Reset Options</source>\n+        <source>This label turns red, if any recipient receives an amount smaller than %1.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+13\"/>\n-        <source>&amp;Network</source>\n-        <translation>&amp;Netzwerk</translation>\n+        <location line=\"+1\"/>\n+        <location line=\"+4\"/>\n+        <source>This means a fee of at least %1 is required.</source>\n+        <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+6\"/>\n-        <source>Automatically open the Bitcoin client port on the router. This only works when your router supports UPnP and it is enabled.</source>\n-        <translation>Automatisch den Router fia &apos;n Bitcoin port eist\u00f6lln. Des geht nur, waunn da Router UPnP kaunn und waunns des durtn aa eigschoitn is.</translation>\n+        <location line=\"-3\"/>\n+        <source>Amounts below 0.546 times the minimum relay fee are shown as dust.</source>\n+        <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+3\"/>\n-        <source>Map port using &amp;UPnP</source>\n-        <translation>Port mit UPnP zuweisen</translation>\n-    </message>\n+        <location line=\"+2\"/>\n+        <source>This label turns red, if the change is smaller than %1.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+43\"/>\n+        <location line=\"+66\"/>\n+        <source>(no label)</source>\n+        <translation>nixda</translation>\n+    </message>\n+    <message>\n+        <location line=\"-9\"/>\n+        <source>change from %1 (%2)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>(change)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+</context>\n+<context>\n+    <name>EditAddressDialog</name>\n+    <message>\n+        <location filename=\"../forms/editaddressdialog.ui\" line=\"+14\"/>\n+        <source>Edit Address</source>\n+        <translation>Adress \u00e4ndan</translation>\n+    </message>\n+    <message>\n+        <location line=\"+11\"/>\n+        <source>&amp;Label</source>\n+        <translation>&amp;Titl</translation>\n+    </message>\n+    <message>\n+        <location line=\"+10\"/>\n+        <source>The label associated with this address list entry</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+17\"/>\n+        <source>The address associated with this address list entry. This can only be modified for sending addresses.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"-10\"/>\n+        <source>&amp;Address</source>\n+        <translation>&amp;Adress</translation>\n+    </message>\n+    <message>\n+        <location filename=\"../editaddressdialog.cpp\" line=\"+25\"/>\n+        <source>New receiving address</source>\n+        <translation>Neiche Empfaungsadress</translation>\n+    </message>\n+    <message>\n+        <location line=\"+4\"/>\n+        <source>New sending address</source>\n+        <translation>Neiche Z\u00fc\u00fc-Adress</translation>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>Edit receiving address</source>\n+        <translation>Empfaungs-Adress \u00e4ndan</translation>\n+    </message>\n+    <message>\n+        <location line=\"+4\"/>\n+        <source>Edit sending address</source>\n+        <translation>Z\u00fc\u00fc-Adress \u00e4ndan</translation>\n+    </message>\n+    <message>\n+        <location line=\"+76\"/>\n+        <source>The entered address &quot;%1&quot; is already in the address book.</source>\n+        <translation>De eingebene Adress &quot;%1&quot; gibts eh scho im Adressbiachl.</translation>\n+    </message>\n+    <message>\n+        <location line=\"-5\"/>\n+        <source>The entered address &quot;%1&quot; is not a valid Bitcoin address.</source>\n+        <translation>De eingebane Adress &quot;%1&quot; is a Kas.</translation>\n+    </message>\n+    <message>\n+        <location line=\"+10\"/>\n+        <source>Could not unlock wallet.</source>\n+        <translation>&apos;s Aufspean vom Beasl is f\u00f6hgschlogn.</translation>\n+    </message>\n+    <message>\n+        <location line=\"+5\"/>\n+        <source>New key generation failed.</source>\n+        <translation>Neicha Schlissl hod ned eazeigt weadn kennan.</translation>\n+    </message>\n+</context>\n+<context>\n+    <name>FreespaceChecker</name>\n+    <message>\n+        <location filename=\"../intro.cpp\" line=\"+65\"/>\n+        <source>A new data directory will be created.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+22\"/>\n+        <source>name</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+2\"/>\n+        <source>Directory already exists. Add %1 if you intend to create a new directory here.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>Path already exists, and is not a directory.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+7\"/>\n+        <source>Cannot create data directory here.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+</context>\n+<context>\n+    <name>GUIUtil::HelpMessageBox</name>\n+    <message>\n+        <location filename=\"../guiutil.cpp\" line=\"+597\"/>\n+        <source>version</source>\n+        <translation>veasion</translation>\n+    </message>\n+    <message>\n+        <location line=\"+0\"/>\n+        <location line=\"+13\"/>\n+        <source>Bitcoin Core</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"-11\"/>\n+        <source>Usage:</source>\n+        <translation>Vawendung:</translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>command-line options</source>\n+        <translation>Kommandozeiln-Optionen</translation>\n+    </message>\n+    <message>\n+        <location line=\"+4\"/>\n+        <source>UI options</source>\n+        <translation>UI Optionen</translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Set language, for example &quot;de_DE&quot; (default: system locale)</source>\n+        <translation>de Sproch, am Bestn &quot;de_AT&quot; (sunsta: de Standard-Sproch auf dera Maschin)</translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Start minimized</source>\n+        <translation>Mid minimiatn Fensta startn</translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Show splash screen on startup (default: 1)</source>\n+        <translation>Zeig a Willkommens-Fensterl beim Starten (waunn ned aundas aungebm: 1)</translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Choose data directory on startup (default: 0)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+</context>\n+<context>\n+    <name>Intro</name>\n+    <message>\n+        <location filename=\"../forms/intro.ui\" line=\"+14\"/>\n+        <source>Welcome</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+9\"/>\n+        <source>Welcome to Bitcoin Core.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+26\"/>\n+        <source>As this is the first time the program is launched, you can choose where Bitcoin Core will store its data.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+10\"/>\n+        <source>Bitcoin Core will download and store a copy of the Bitcoin block chain. At least %1GB of data will be stored in this directory, and it will grow over time. The wallet will also be stored in this directory.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+10\"/>\n+        <source>Use the default data directory</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+7\"/>\n+        <source>Use a custom data directory:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location filename=\"../intro.cpp\" line=\"+85\"/>\n+        <source>Bitcoin</source>\n+        <translation>Bitcoin</translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Error: Specified data directory &quot;%1&quot; can not be created.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+19\"/>\n+        <source>Error</source>\n+        <translation>F\u00f6hla</translation>\n+    </message>\n+    <message>\n+        <location line=\"+9\"/>\n+        <source>GB of free space available</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>(of %1GB needed)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+</context>\n+<context>\n+    <name>OpenURIDialog</name>\n+    <message>\n+        <location filename=\"../forms/openuridialog.ui\" line=\"+14\"/>\n+        <source>Open URI</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+6\"/>\n+        <source>Open payment request from URI or file</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+9\"/>\n+        <source>URI:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+11\"/>\n+        <source>Select payment request file</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location filename=\"../openuridialog.cpp\" line=\"+47\"/>\n+        <source>Select payment request file to open</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+</context>\n+<context>\n+    <name>OptionsDialog</name>\n+    <message>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"+14\"/>\n+        <source>Options</source>\n+        <translation>Eist\u00f6llungen</translation>\n+    </message>\n+    <message>\n+        <location line=\"+16\"/>\n+        <source>&amp;Main</source>\n+        <translation>&amp;Masta</translation>\n+    </message>\n+    <message>\n+        <location line=\"+6\"/>\n+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+15\"/>\n+        <source>Pay transaction &amp;fee</source>\n+        <translation>Iwaweisungs-Geb\u00fchrn zoin</translation>\n+    </message>\n+    <message>\n+        <location line=\"+31\"/>\n+        <source>Automatically start Bitcoin after logging in to the system.</source>\n+        <translation>Bitcoin automatisch nochm Einloggn starten.</translation>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>&amp;Start Bitcoin on system login</source>\n+        <translation>Bitcoin beim System-Einloggen starten</translation>\n+    </message>\n+    <message>\n+        <location line=\"+35\"/>\n+        <source>Reset all client options to default.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>&amp;Reset Options</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+13\"/>\n+        <source>&amp;Network</source>\n+        <translation>&amp;Netzwerk</translation>\n+    </message>\n+    <message>\n+        <location line=\"+6\"/>\n+        <source>Automatically open the Bitcoin client port on the router. This only works when your router supports UPnP and it is enabled.</source>\n+        <translation>Automatisch den Router fia &apos;n Bitcoin port eist\u00f6lln. Des geht nur, waunn da Router UPnP kaunn und waunns des durtn aa eigschoitn is.</translation>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>Map port using &amp;UPnP</source>\n+        <translation>Port mit UPnP zuweisen</translation>\n+    </message>\n     <message>\n         <location line=\"+7\"/>\n         <source>Connect to the Bitcoin network through a SOCKS proxy (e.g. when connecting through Tor).</source>\n@@ -1041,6 +1370,16 @@ Wohin: %4\n         <source>&amp;Display addresses in transaction list</source>\n         <translation>Zeig Adressn in a Iwaweisungslistn</translation>\n     </message>\n+    <message>\n+        <location line=\"+7\"/>\n+        <source>Whether to show coin control features or not.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>Display coin &amp;control features (experts only)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n     <message>\n         <location line=\"+71\"/>\n         <source>&amp;OK</source>\n@@ -1057,12 +1396,12 @@ Wohin: %4\n         <translation>&amp;Jo, genau!</translation>\n     </message>\n     <message>\n-        <location filename=\"../optionsdialog.cpp\" line=\"+58\"/>\n+        <location filename=\"../optionsdialog.cpp\" line=\"+63\"/>\n         <source>default</source>\n         <translation>sunsta</translation>\n     </message>\n     <message>\n-        <location line=\"+130\"/>\n+        <location line=\"+131\"/>\n         <source>Confirm options reset</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1103,17 +1442,17 @@ Wohin: %4\n     </message>\n     <message>\n         <location line=\"+50\"/>\n-        <location line=\"+202\"/>\n+        <location line=\"+214\"/>\n         <source>The displayed information may be out of date. Your wallet automatically synchronizes with the Bitcoin network after a connection is established, but this process has not completed yet.</source>\n         <translation>De aunzeigtn Datn san meglichaweis ned aktu\u00f6. Dei Beasl gleicht si automatisch mitm Netz au, soboid a Vabindung aufrecht is, owa soweit samma no ned.</translation>\n     </message>\n     <message>\n-        <location line=\"-131\"/>\n+        <location line=\"-140\"/>\n         <source>Unconfirmed:</source>\n         <translation>Ger\u00fcchteweis:</translation>\n     </message>\n     <message>\n-        <location line=\"-78\"/>\n+        <location line=\"-81\"/>\n         <source>Wallet</source>\n         <translation>Beasl</translation>\n     </message>\n@@ -1128,12 +1467,12 @@ Wohin: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+29\"/>\n+        <location line=\"+32\"/>\n         <source>Total of transactions that have yet to be confirmed, and do not yet count toward the spendable balance</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+13\"/>\n+        <location line=\"+16\"/>\n         <source>Immature:</source>\n         <translation>Unreif:</translation>\n     </message>\n@@ -1143,7 +1482,7 @@ Wohin: %4\n         <translation>Gschiafta Betrog, dea no ned reif is</translation>\n     </message>\n     <message>\n-        <location line=\"+13\"/>\n+        <location line=\"+16\"/>\n         <source>Total:</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1153,12 +1492,12 @@ Wohin: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+53\"/>\n+        <location line=\"+56\"/>\n         <source>&lt;b&gt;Recent transactions&lt;/b&gt;</source>\n         <translation>&lt;b&gt;unl\u00e4ngste Iwaweisungen&lt;/b&gt;</translation>\n     </message>\n     <message>\n-        <location filename=\"../overviewpage.cpp\" line=\"+116\"/>\n+        <location filename=\"../overviewpage.cpp\" line=\"+120\"/>\n         <location line=\"+1\"/>\n         <source>out of sync</source>\n         <translation>nimma atku\u00f6</translation>\n@@ -1167,7 +1506,7 @@ Wohin: %4\n <context>\n     <name>PaymentServer</name>\n     <message>\n-        <location filename=\"../paymentserver.cpp\" line=\"+392\"/>\n+        <location filename=\"../paymentserver.cpp\" line=\"+397\"/>\n         <source>URI handling</source>\n         <translation>URI Behaundlung</translation>\n     </message>\n@@ -1177,23 +1516,29 @@ Wohin: %4\n         <translation>De URI is a Kas! Meglichaweis is de Bitcoin Adress foisch, oda hoit sunst wos vamuakst.</translation>\n     </message>\n     <message>\n-        <location line=\"+69\"/>\n+        <location line=\"+91\"/>\n         <source>Requested payment amount of %1 is too small (considered dust).</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n-        <location line=\"+37\"/>\n+        <location line=\"-204\"/>\n+        <location line=\"+195\"/>\n+        <location line=\"+13\"/>\n         <source>Payment request error</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+1\"/>\n-        <source>Insecure requests to custom payment scripts unsupported</source>\n+        <location line=\"-207\"/>\n+        <source>Cannot start bitcoin: click-to-pay handler</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+38\"/>\n+        <location line=\"+195\"/>\n+        <source>Unverified payment requests to custom payment scripts are unsupported.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+59\"/>\n         <source>Refund from %1</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1203,7 +1548,7 @@ Wohin: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+31\"/>\n+        <location line=\"+28\"/>\n         <source>Bad response from server %1</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1213,8 +1558,8 @@ Wohin: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-58\"/>\n-        <location line=\"+30\"/>\n+        <location line=\"-55\"/>\n+        <location line=\"+27\"/>\n         <location line=\"+17\"/>\n         <source>Network request error</source>\n         <translation type=\"unfinished\"/>\n@@ -1223,11 +1568,10 @@ Wohin: %4\n <context>\n     <name>QObject</name>\n     <message>\n-        <location filename=\"../bitcoin.cpp\" line=\"+114\"/>\n+        <location filename=\"../bitcoin.cpp\" line=\"+119\"/>\n         <location line=\"+5\"/>\n-        <location filename=\"../intro.cpp\" line=\"-32\"/>\n         <source>Bitcoin</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>Bitcoin</translation>\n     </message>\n     <message>\n         <location line=\"-4\"/>\n@@ -1239,16 +1583,11 @@ Wohin: %4\n         <source>Error: Invalid combination of -regtest and -testnet.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n-    <message>\n-        <location filename=\"../intro.cpp\" line=\"+1\"/>\n-        <source>Error: Specified data directory &quot;%1&quot; can not be created.</source>\n-        <translation type=\"unfinished\"/>\n-    </message>\n </context>\n <context>\n     <name>QRImageWidget</name>\n     <message>\n-        <location filename=\"../receiverequestdialog.cpp\" line=\"+32\"/>\n+        <location filename=\"../receiverequestdialog.cpp\" line=\"+36\"/>\n         <source>&amp;Save Image...</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1264,8 +1603,8 @@ Wohin: %4\n     </message>\n     <message>\n         <location line=\"+0\"/>\n-        <source>PNG Images (*.png)</source>\n-        <translation>PNG B\u00fcda (*.png)</translation>\n+        <source>PNG Image (*.png)</source>\n+        <translation type=\"unfinished\"/>\n     </message>\n </context>\n <context>\n@@ -1285,7 +1624,7 @@ Wohin: %4\n         <location line=\"+53\"/>\n         <location line=\"+23\"/>\n         <location line=\"+23\"/>\n-        <location filename=\"../rpcconsole.cpp\" line=\"+352\"/>\n+        <location filename=\"../rpcconsole.cpp\" line=\"+360\"/>\n         <source>N/A</source>\n         <translation>Nix</translation>\n     </message>\n@@ -1300,7 +1639,12 @@ Wohin: %4\n         <translation>&amp;Information</translation>\n     </message>\n     <message>\n-        <location line=\"+68\"/>\n+        <location line=\"-10\"/>\n+        <source>Debug window</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+78\"/>\n         <source>Using OpenSSL version</source>\n         <translation>Vawend OpenSSL in a Version</translation>\n     </message>\n@@ -1355,12 +1699,7 @@ Wohin: %4\n         <translation>Kommandozeilen Optionen</translation>\n     </message>\n     <message>\n-        <location line=\"+7\"/>\n-        <source>Show the Bitcoin-Qt help message to get a list with possible Bitcoin command-line options.</source>\n-        <translation>Zeig die Bitcoin-QT H\u00fcfe-M\u00f6dung fiara Listn mit de Kommandozeilen-Optionen.</translation>\n-    </message>\n-    <message>\n-        <location line=\"+3\"/>\n+        <location line=\"+10\"/>\n         <source>&amp;Show</source>\n         <translation>&amp;Zeig</translation>\n     </message>\n@@ -1387,7 +1726,7 @@ Wohin: %4\n     <message>\n         <location line=\"+64\"/>\n         <source>In:</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>In:</translation>\n     </message>\n     <message>\n         <location line=\"+80\"/>\n@@ -1400,12 +1739,7 @@ Wohin: %4\n         <translation>Programm-Iwasetzunszeitpunkt</translation>\n     </message>\n     <message>\n-        <location line=\"-104\"/>\n-        <source>Bitcoin - Debug window</source>\n-        <translation type=\"unfinished\"/>\n-    </message>\n-    <message>\n-        <location line=\"+25\"/>\n+        <location line=\"-79\"/>\n         <source>Bitcoin Core</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1420,7 +1754,12 @@ Wohin: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+102\"/>\n+        <location line=\"+26\"/>\n+        <source>Show the Bitcoin-Core help message to get a list with possible Bitcoin command-line options.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+76\"/>\n         <source>Clear console</source>\n         <translation>Konsole leermochn</translation>\n     </message>\n@@ -1478,37 +1817,32 @@ Wohin: %4\n <context>\n     <name>ReceiveCoinsDialog</name>\n     <message>\n-        <location filename=\"../forms/receivecoinsdialog.ui\" line=\"+22\"/>\n+        <location filename=\"../forms/receivecoinsdialog.ui\" line=\"+83\"/>\n         <source>&amp;Amount:</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+16\"/>\n+        <location line=\"+19\"/>\n         <source>The amount to request</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+7\"/>\n+        <location line=\"-32\"/>\n         <source>&amp;Label:</source>\n         <translation>&amp;Titl:</translation>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n-        <source>The label to associate with the receiving address</source>\n-        <translation type=\"unfinished\"/>\n-    </message>\n-    <message>\n-        <location line=\"+7\"/>\n+        <location line=\"-34\"/>\n         <source>&amp;Message:</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n+        <location line=\"+20\"/>\n         <source>The message to attach to payment request</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+14\"/>\n+        <location line=\"-37\"/>\n         <source>Reuse one of the previously used receiving addresses. Reusing addresses has security and privacy issues. Do not use this unless re-generating a payment request made before.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1518,12 +1852,17 @@ Wohin: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+7\"/>\n+        <location line=\"+27\"/>\n+        <source>The label to associate with the new receiving address</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+14\"/>\n         <source>Use this form to request payments. All fields are optional.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+17\"/>\n+        <location line=\"+56\"/>\n         <source>Clear all fields of the form.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1537,6 +1876,31 @@ Wohin: %4\n         <source>&amp;Request payment</source>\n         <translation type=\"unfinished\"/>\n     </message>\n+    <message>\n+        <location line=\"+47\"/>\n+        <source>Previously requested payments</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+12\"/>\n+        <source>Show the selected request (does the same as double clicking an entry)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>Show</source>\n+        <translation>Zeig</translation>\n+    </message>\n+    <message>\n+        <location line=\"+11\"/>\n+        <source>Remove the selected entries from the list</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>Remove</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n </context>\n <context>\n     <name>ReceiveRequestDialog</name>\n@@ -1555,18 +1919,13 @@ Wohin: %4\n         <source>Copy &amp;Address</source>\n         <translation type=\"unfinished\"/>\n     </message>\n-    <message>\n-        <location line=\"+7\"/>\n-        <source>&amp;Copy Image</source>\n-        <translation type=\"unfinished\"/>\n-    </message>\n     <message>\n         <location line=\"+7\"/>\n         <source>&amp;Save Image...</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location filename=\"../receiverequestdialog.cpp\" line=\"+58\"/>\n+        <location filename=\"../receiverequestdialog.cpp\" line=\"+56\"/>\n         <source>Request payment to %1</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1611,17 +1970,120 @@ Wohin: %4\n         <translation>F\u00f6hla beim Eazeign vo an QR-B\u00fcderl fia de URI.</translation>\n     </message>\n </context>\n+<context>\n+    <name>RecentRequestsTableModel</name>\n+    <message>\n+        <location filename=\"../recentrequeststablemodel.cpp\" line=\"+14\"/>\n+        <source>Date</source>\n+        <translation>Waunn</translation>\n+    </message>\n+    <message>\n+        <location line=\"+0\"/>\n+        <source>Label</source>\n+        <translation>Titl</translation>\n+    </message>\n+    <message>\n+        <location line=\"+0\"/>\n+        <source>Message</source>\n+        <translation>M\u00f6dung</translation>\n+    </message>\n+    <message>\n+        <location line=\"+0\"/>\n+        <source>Amount</source>\n+        <translation>Betrog</translation>\n+    </message>\n+    <message>\n+        <location line=\"+36\"/>\n+        <source>(no label)</source>\n+        <translation>nixda</translation>\n+    </message>\n+    <message>\n+        <location line=\"+9\"/>\n+        <source>(no message)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+</context>\n <context>\n     <name>SendCoinsDialog</name>\n     <message>\n         <location filename=\"../forms/sendcoinsdialog.ui\" line=\"+14\"/>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"+140\"/>\n-        <location line=\"+213\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"+381\"/>\n+        <location line=\"+81\"/>\n         <source>Send Coins</source>\n         <translation>Vaschick Zasta</translation>\n     </message>\n     <message>\n-        <location line=\"+50\"/>\n+        <location line=\"+76\"/>\n+        <source>Coin Control Features</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+20\"/>\n+        <source>Inputs...</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+7\"/>\n+        <source>automatically selected</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+19\"/>\n+        <source>Insufficient funds!</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+89\"/>\n+        <source>Quantity:</source>\n+        <translation>Quantit\u00e4t:</translation>\n+    </message>\n+    <message>\n+        <location line=\"+35\"/>\n+        <source>Bytes:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+48\"/>\n+        <source>Amount:</source>\n+        <translation>Betrog:</translation>\n+    </message>\n+    <message>\n+        <location line=\"+32\"/>\n+        <source>Priority:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+48\"/>\n+        <source>Fee:</source>\n+        <translation>Geb\u00fchr:</translation>\n+    </message>\n+    <message>\n+        <location line=\"+32\"/>\n+        <source>Low Output:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+48\"/>\n+        <source>After Fee:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+32\"/>\n+        <source>Change:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+44\"/>\n+        <source>If this is activated, but the change address is empty or invalid, change will be sent to a newly generated address.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>Custom change address</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+115\"/>\n         <source>Send to multiple recipients at once</source>\n         <translation>Vaschick Zasta glei aun mehrare auf aamoi</translation>\n     </message>\n@@ -1646,12 +2108,7 @@ Wohin: %4\n         <translation>Kontostaund:</translation>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n-        <source>123.456 BTC</source>\n-        <translation>123.456 BTC</translation>\n-    </message>\n-    <message>\n-        <location line=\"+31\"/>\n+        <location line=\"+41\"/>\n         <source>Confirm the send action</source>\n         <translation>Bscht\u00e4tige de Iwaweisung</translation>\n     </message>\n@@ -1661,69 +2118,135 @@ Wohin: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"-154\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"-229\"/>\n         <source>Confirm send coins</source>\n         <translation>Iwaweisung bscht\u00e4tign</translation>\n     </message>\n     <message>\n-        <location line=\"-90\"/>\n+        <location line=\"-74\"/>\n         <location line=\"+5\"/>\n         <location line=\"+5\"/>\n+        <location line=\"+4\"/>\n         <source>%1 to %2</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+26\"/>\n+        <location line=\"-136\"/>\n+        <source>Enter a Bitcoin address (e.g. 1NS17iag9jJgTHD1VXjvLCEnZuQ3rJDE9L)</source>\n+        <translation>Gib a Bitcoin-Adress ei (sowos wia: 1NS17iag9jJgTHD1VXjvLCEnZuQ3rJDE9L)</translation>\n+    </message>\n+    <message>\n+        <location line=\"+15\"/>\n+        <source>Copy quantity</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Copy amount</source>\n+        <translation>Betrog in&apos; Puffa kopian</translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Copy fee</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Copy after fee</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Copy bytes</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Copy priority</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Copy low output</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Copy change</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+170\"/>\n+        <source>Total Amount %1 (= %2)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+2\"/>\n+        <source>or</source>\n+        <translation>oder</translation>\n+    </message>\n+    <message>\n+        <location line=\"+202\"/>\n         <source>The recipient address is not valid, please recheck.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n+        <location line=\"+3\"/>\n         <source>The amount to pay must be larger than 0.</source>\n         <translation>Waunnst nix vaschickn w\u00fcst, daunn loss&apos; hoit bleibm.</translation>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n+        <location line=\"+3\"/>\n         <source>The amount exceeds your balance.</source>\n         <translation>Des is mea ois wost host.</translation>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n+        <location line=\"+3\"/>\n         <source>The total exceeds your balance when the %1 transaction fee is included.</source>\n         <translation>Ois zsamm und de Spesn vo %1 dazua is mea ois wost host.</translation>\n     </message>\n     <message>\n-        <location line=\"+5\"/>\n+        <location line=\"+3\"/>\n         <source>Duplicate address found, can only send to each address once per send operation.</source>\n         <translation>A doppete Adress gfundn. (A jede Adress derfs immanua amoi in ana Iwaweisung gebm)</translation>\n     </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>Transaction creation failed!</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n     <message>\n         <location line=\"+4\"/>\n-        <source>Error: Transaction creation failed!</source>\n+        <source>The transaction was rejected! This might happen if some of the coins in your wallet were already spent, such as if you used a copy of wallet.dat and coins were spent in the copy but not marked as spent here.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+15\"/>\n-        <source>Are you sure you want to send?</source>\n+        <location line=\"+113\"/>\n+        <source>Warning: Invalid Bitcoin address</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+9\"/>\n-        <source>added as transaction fee</source>\n+        <location line=\"+13\"/>\n+        <source>(no label)</source>\n+        <translation>nixda</translation>\n+    </message>\n+    <message>\n+        <location line=\"+8\"/>\n+        <source>Warning: Unknown change address</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+6\"/>\n-        <source>Total Amount %1</source>\n+        <location line=\"-378\"/>\n+        <source>Are you sure you want to send?</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+20\"/>\n-        <source>Error: The transaction was rejected. This might happen if some of the coins in your wallet were already spent, such as if you used a copy of wallet.dat and coins were spent in the copy but not marked as spent here.</source>\n-        <translation>De Iwaweisung is obgwiesn wuadn. Des kau passian, waunnst M\u00fcnzn scho ausgebn host, zum Beisp\u00fc mit ana Kopie vom Beasl, w\u00e4hrend des Beasl hia no nix davon waas.</translation>\n+        <location line=\"+9\"/>\n+        <source>added as transaction fee</source>\n+        <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+144\"/>\n+        <location line=\"+170\"/>\n         <source>Payment request expired</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1736,39 +2259,44 @@ Wohin: %4\n <context>\n     <name>SendCoinsEntry</name>\n     <message>\n-        <location filename=\"../forms/sendcoinsentry.ui\" line=\"+33\"/>\n-        <location line=\"+585\"/>\n+        <location filename=\"../forms/sendcoinsentry.ui\" line=\"+131\"/>\n+        <location line=\"+501\"/>\n+        <location line=\"+536\"/>\n         <source>A&amp;mount:</source>\n         <translation>&amp;Betrog:</translation>\n     </message>\n     <message>\n-        <location line=\"-572\"/>\n-        <location line=\"+585\"/>\n+        <location line=\"-1132\"/>\n         <source>Pay &amp;To:</source>\n         <translation>wo&amp;hin:</translation>\n     </message>\n     <message>\n-        <location line=\"-551\"/>\n+        <location line=\"+18\"/>\n         <source>The address to send the payment to (e.g. 1NS17iag9jJgTHD1VXjvLCEnZuQ3rJDE9L)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location filename=\"../sendcoinsentry.cpp\" line=\"+28\"/>\n+        <location filename=\"../sendcoinsentry.cpp\" line=\"+30\"/>\n         <source>Enter a label for this address to add it to your address book</source>\n         <translation>Gib an Titl fia de neiche Adress</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/sendcoinsentry.ui\" line=\"-18\"/>\n+        <location filename=\"../forms/sendcoinsentry.ui\" line=\"+57\"/>\n         <source>&amp;Label:</source>\n         <translation>&amp;Titl:</translation>\n     </message>\n     <message>\n-        <location line=\"+28\"/>\n+        <location line=\"-50\"/>\n         <source>Choose previously used address</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n+        <location line=\"-40\"/>\n+        <source>This is a normal payment.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+50\"/>\n         <source>Alt+A</source>\n         <translation>Alt+A</translation>\n     </message>\n@@ -1784,16 +2312,35 @@ Wohin: %4\n     </message>\n     <message>\n         <location line=\"+7\"/>\n-        <source>Remove this recipient</source>\n-        <translation>Na, dea kriagt do nix</translation>\n+        <location line=\"+504\"/>\n+        <location line=\"+536\"/>\n+        <source>Remove this entry</source>\n+        <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+16\"/>\n+        <location line=\"-40\"/>\n+        <source>This is a verified payment request.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"-971\"/>\n         <source>Enter a label for this address to add it to the list of used addresses</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+465\"/>\n+        <location line=\"+439\"/>\n+        <source>This is an unverified payment request.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+18\"/>\n+        <location line=\"+532\"/>\n+        <source>Pay To:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"-498\"/>\n+        <location line=\"+536\"/>\n         <source>Memo:</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1914,7 +2461,7 @@ Wohin: %4\n         <translation>Olle F\u00f6da zrucksetzn</translation>\n     </message>\n     <message>\n-        <location filename=\"../signverifymessagedialog.cpp\" line=\"+27\"/>\n+        <location filename=\"../signverifymessagedialog.cpp\" line=\"+29\"/>\n         <location line=\"+3\"/>\n         <source>Enter a Bitcoin address (e.g. 1NS17iag9jJgTHD1VXjvLCEnZuQ3rJDE9L)</source>\n         <translation>Gib a Bitcoin-Adress ei (sowos wia: 1NS17iag9jJgTHD1VXjvLCEnZuQ3rJDE9L)</translation>\n@@ -1930,7 +2477,7 @@ Wohin: %4\n         <translation>Gib de Untaschrift ei</translation>\n     </message>\n     <message>\n-        <location line=\"+85\"/>\n+        <location line=\"+84\"/>\n         <location line=\"+81\"/>\n         <source>The entered address is invalid.</source>\n         <translation>De eingebane Adress is a Kas.</translation>\n@@ -1999,8 +2546,13 @@ Wohin: %4\n <context>\n     <name>SplashScreen</name>\n     <message>\n-        <location filename=\"../splashscreen.cpp\" line=\"+23\"/>\n-        <source>The Bitcoin developers</source>\n+        <location filename=\"../splashscreen.cpp\" line=\"+26\"/>\n+        <source>Bitcoin Core</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+2\"/>\n+        <source>The Bitcoin Core developers</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n@@ -2012,15 +2564,15 @@ Wohin: %4\n <context>\n     <name>TrafficGraphWidget</name>\n     <message>\n-        <location filename=\"../trafficgraphwidget.cpp\" line=\"+75\"/>\n+        <location filename=\"../trafficgraphwidget.cpp\" line=\"+79\"/>\n         <source>KB/s</source>\n         <translation type=\"unfinished\"/>\n     </message>\n </context>\n <context>\n     <name>TransactionDesc</name>\n     <message>\n-        <location filename=\"../transactiondesc.cpp\" line=\"+22\"/>\n+        <location filename=\"../transactiondesc.cpp\" line=\"+28\"/>\n         <source>Open until %1</source>\n         <translation>Offn bis %1</translation>\n     </message>\n@@ -2212,7 +2764,7 @@ Wohin: %4\n <context>\n     <name>TransactionTableModel</name>\n     <message>\n-        <location filename=\"../transactiontablemodel.cpp\" line=\"+227\"/>\n+        <location filename=\"../transactiontablemodel.cpp\" line=\"+234\"/>\n         <source>Date</source>\n         <translation>Waunn</translation>\n     </message>\n@@ -2330,7 +2882,7 @@ Wohin: %4\n <context>\n     <name>TransactionView</name>\n     <message>\n-        <location filename=\"../transactionview.cpp\" line=\"+52\"/>\n+        <location filename=\"../transactionview.cpp\" line=\"+57\"/>\n         <location line=\"+16\"/>\n         <source>All</source>\n         <translation>Ois</translation>\n@@ -2391,12 +2943,12 @@ Wohin: %4\n         <translation>Aundare</translation>\n     </message>\n     <message>\n-        <location line=\"+7\"/>\n+        <location line=\"+6\"/>\n         <source>Enter address or label to search</source>\n         <translation>Suach noch ana Adress oda an Titl</translation>\n     </message>\n     <message>\n-        <location line=\"+7\"/>\n+        <location line=\"+6\"/>\n         <source>Min amount</source>\n         <translation>klaaansta Betrog</translation>\n     </message>\n@@ -2431,17 +2983,37 @@ Wohin: %4\n         <translation>Zeig de Einzlheitn vo da Iwaweisung</translation>\n     </message>\n     <message>\n-        <location line=\"+143\"/>\n-        <source>Export Transaction Data</source>\n-        <translation>Iwaweisungsdatn speichan</translation>\n+        <location line=\"+142\"/>\n+        <source>Export Transaction History</source>\n+        <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+1\"/>\n+        <location line=\"+19\"/>\n+        <source>Exporting Failed</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+0\"/>\n+        <source>There was an error trying to save the transaction history to %1.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+4\"/>\n+        <source>Exporting Successful</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+0\"/>\n+        <source>The transaction history was successfully saved to %1.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"-22\"/>\n         <source>Comma separated file (*.csv)</source>\n         <translation>Beistrich &apos;trennte Weate (*.csv)</translation>\n     </message>\n     <message>\n-        <location line=\"+8\"/>\n+        <location line=\"+9\"/>\n         <source>Confirmed</source>\n         <translation>Bscht\u00e4tigt</translation>\n     </message>\n@@ -2476,17 +3048,7 @@ Wohin: %4\n         <translation>Nr</translation>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n-        <source>Error exporting</source>\n-        <translation>F\u00f6hla beim Speichan</translation>\n-    </message>\n-    <message>\n-        <location line=\"+0\"/>\n-        <source>Could not write to file %1.</source>\n-        <translation>Hob ned in de Datei %1 einespeichan kennan.</translation>\n-    </message>\n-    <message>\n-        <location line=\"+100\"/>\n+        <location line=\"+107\"/>\n         <source>Range:</source>\n         <translation>Bereich:</translation>\n     </message>\n@@ -2496,18 +3058,26 @@ Wohin: %4\n         <translation>bis</translation>\n     </message>\n </context>\n+<context>\n+    <name>WalletFrame</name>\n+    <message>\n+        <location filename=\"../walletframe.cpp\" line=\"+26\"/>\n+        <source>No wallet has been loaded.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+</context>\n <context>\n     <name>WalletModel</name>\n     <message>\n-        <location filename=\"../walletmodel.cpp\" line=\"+218\"/>\n+        <location filename=\"../walletmodel.cpp\" line=\"+245\"/>\n         <source>Send Coins</source>\n         <translation>Vaschick Zasta</translation>\n     </message>\n </context>\n <context>\n     <name>WalletView</name>\n     <message>\n-        <location filename=\"../walletview.cpp\" line=\"+46\"/>\n+        <location filename=\"../walletview.cpp\" line=\"+43\"/>\n         <source>&amp;Export</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2517,65 +3087,60 @@ Wohin: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+183\"/>\n+        <location line=\"+181\"/>\n         <source>Backup Wallet</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+0\"/>\n+        <location line=\"+1\"/>\n         <source>Wallet Data (*.dat)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+3\"/>\n+        <location line=\"+6\"/>\n         <source>Backup Failed</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <location line=\"+0\"/>\n-        <source>There was an error trying to save the wallet data to the new location.</source>\n+        <source>There was an error trying to save the wallet data to %1.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <location line=\"+4\"/>\n-        <source>Backup Successful</source>\n+        <source>The wallet data was successfully saved to %1.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <location line=\"+0\"/>\n-        <source>The wallet data was successfully saved to the new location.</source>\n+        <source>Backup Successful</source>\n         <translation type=\"unfinished\"/>\n     </message>\n </context>\n <context>\n     <name>bitcoin-core</name>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"+102\"/>\n-        <source>Bitcoin version</source>\n-        <translation>Bitcoin Veasion</translation>\n-    </message>\n-    <message>\n-        <location line=\"+107\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"+217\"/>\n         <source>Usage:</source>\n         <translation>Vawendung:</translation>\n     </message>\n     <message>\n-        <location line=\"-55\"/>\n+        <location line=\"-54\"/>\n         <source>List commands</source>\n         <translation>Kommandos aunzeign</translation>\n     </message>\n     <message>\n-        <location line=\"-13\"/>\n+        <location line=\"-14\"/>\n         <source>Get help for a command</source>\n         <translation>H\u00fcfe fiara Kommando</translation>\n     </message>\n     <message>\n-        <location line=\"+25\"/>\n+        <location line=\"+26\"/>\n         <source>Options:</source>\n         <translation>Eist\u00f6llungen:</translation>\n     </message>\n     <message>\n-        <location line=\"+24\"/>\n+        <location line=\"+23\"/>\n         <source>Specify configuration file (default: bitcoin.conf)</source>\n         <translation>Gib de Konfigurationsdatei aun (sunsta: bitcoin.conf)</translation>\n     </message>\n@@ -2595,7 +3160,7 @@ Wohin: %4\n         <translation>Zwischnspeichagre\u00df fia de Datenbank in megabeits (sunsta: 25)</translation>\n     </message>\n     <message>\n-        <location line=\"-28\"/>\n+        <location line=\"-27\"/>\n         <source>Listen for connections on &lt;port&gt; (default: 8333 or testnet: 18333)</source>\n         <translation>Auf Vabindungen am &lt;port&gt; lauschn (sunsta: 8333 bzw. testnet: 18333)</translation>\n     </message>\n@@ -2605,7 +3170,7 @@ Wohin: %4\n         <translation>Hechstns &lt;n&gt; Vabindungen zu aundare Netz-Knotn aufrecht eahoitn (sunsta: 125)</translation>\n     </message>\n     <message>\n-        <location line=\"-49\"/>\n+        <location line=\"-50\"/>\n         <source>Connect to a node to retrieve peer addresses, and disconnect</source>\n         <translation>Vabind di mid an Netz-Knotn, owa frog nua noch aundare Knotn, danoch vap\u00e4ulisia di wieda</translation>\n     </message>\n@@ -2620,7 +3185,7 @@ Wohin: %4\n         <translation>Geduidsfodnst\u00e4rke gegniwa deppate Netz-Knotn (sunsta: 100)</translation>\n     </message>\n     <message>\n-        <location line=\"-142\"/>\n+        <location line=\"-147\"/>\n         <source>Number of seconds to keep misbehaving peers from reconnecting (default: 86400)</source>\n         <translation>Waunn Geduidsfodn amoi grissn, daunn wia long bis wieda guat (sunsta: 86400)</translation>\n     </message>\n@@ -2635,7 +3200,7 @@ Wohin: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+40\"/>\n+        <location line=\"+45\"/>\n         <source>Accept command line and JSON-RPC commands</source>\n         <translation>Hob a Uawaschl offn fia de Kommandozeuln und JSON-RPC Bef\u00f6hle</translation>\n     </message>\n@@ -2645,17 +3210,17 @@ Wohin: %4\n         <translation>Ois D\u00e4mon im Hintagrund laafn und auf Bef\u00f6hle lauschn</translation>\n     </message>\n     <message>\n-        <location line=\"+40\"/>\n+        <location line=\"+39\"/>\n         <source>Use the test network</source>\n         <translation>Des Test-Netz vawenden</translation>\n     </message>\n     <message>\n-        <location line=\"-118\"/>\n+        <location line=\"-117\"/>\n         <source>Accept connections from outside (default: 1 if no -proxy or -connect)</source>\n         <translation>Nimm Vabindungen vo aussn aun (waunn nix aungebn is, g\u00fct 1, aussa waunn -proxy oda -connect optionen aungebm san)</translation>\n     </message>\n     <message>\n-        <location line=\"-87\"/>\n+        <location line=\"-92\"/>\n         <source>%s, you must set a rpcpassword in the configuration file:\n %s\n It is recommended you use the following random password:\n@@ -2710,17 +3275,17 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>A programmal startn, waunn si a unbst\u00e4tigte Iwaweisung \u00e4ndat. (a %s wiad dabei duachn Iwaweisungs-Hash easetzt)</translation>\n     </message>\n     <message>\n-        <location line=\"+11\"/>\n-        <source>Set maximum size of high-priority/low-fee transactions in bytes (default: 27000)</source>\n+        <location line=\"+18\"/>\n+        <source>This is a pre-release test build - use at your own risk - do not use for mining or merchant applications</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+6\"/>\n-        <source>This is a pre-release test build - use at your own risk - do not use for mining or merchant applications</source>\n+        <location line=\"+5\"/>\n+        <source>Use separate SOCKS5 proxy to reach peers via Tor hidden services (default: -proxy)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+5\"/>\n+        <location line=\"+3\"/>\n         <source>Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2750,17 +3315,27 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+14\"/>\n+        <location line=\"+9\"/>\n+        <source>&lt;category&gt; can be:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+6\"/>\n         <source>Attempt to recover private keys from a corrupt wallet.dat</source>\n         <translation type=\"unfinished\"/>\n     </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Bitcoin Core Daemon</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n     <message>\n         <location line=\"+1\"/>\n         <source>Bitcoin RPC client version</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+2\"/>\n+        <location line=\"+1\"/>\n         <source>Block creation options:</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2770,7 +3345,12 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>Nur mit de aungebanen Netz-Knotn vabindn.</translation>\n     </message>\n     <message>\n-        <location line=\"+2\"/>\n+        <location line=\"+1\"/>\n+        <source>Connect through SOCKS proxy</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n         <source>Connect to JSON-RPC on &lt;port&gt; (default: 8332 or testnet: 18332)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2880,7 +3460,12 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+2\"/>\n+        <location line=\"+1\"/>\n+        <source>Fee per kB to add to transactions you send</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n         <source>Find peers using DNS lookup (default: 1 unless -connect)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2899,6 +3484,11 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <source>How thorough the block verification is (0-4, default: 3)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>If &lt;category&gt; is not supplied, output all debugging information.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n     <message>\n         <location line=\"+2\"/>\n         <source>Incorrect or no genesis block found. Wrong datadir for network?</source>\n@@ -2915,17 +3505,37 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+8\"/>\n+        <location line=\"+5\"/>\n+        <source>Prepend debug output with timestamp (default: 1)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>RPC client options:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n         <source>Rebuild block chain index from current blk000??.dat files</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+6\"/>\n+        <location line=\"+5\"/>\n+        <source>Select SOCKS version for -proxy (4 or 5, default: 5)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n         <source>Send command to Bitcoin server</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n+        <location line=\"+8\"/>\n+        <source>Set maximum block size in bytes (default: %d)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+2\"/>\n         <source>Set the number of threads to service RPC calls (default: 4)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2945,7 +3555,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+8\"/>\n+        <location line=\"+7\"/>\n         <source>Verifying blocks...</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2954,13 +3564,23 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <source>Verifying wallet...</source>\n         <translation type=\"unfinished\"/>\n     </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Wait for RPC server to start</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n     <message>\n         <location line=\"+1\"/>\n         <source>Wallet %s resides outside data directory %s</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n+        <location line=\"+3\"/>\n+        <source>Warning: Deprecated argument -debugnet ignored, use -debug=net</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+2\"/>\n         <source>You need to rebuild the database using -reindex to change -txindex</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2970,17 +3590,27 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-98\"/>\n+        <location line=\"-104\"/>\n         <source>Execute command when a relevant alert is received or we see a really long fork (%s in cmd is replaced by message)</source>\n         <translation>A programmal startn, waunn de Alarmglockn leitn, oda waunn de Block-Kettn oag vazweigt. (a %s wiad dabei duach a Nochricht easetzt)</translation>\n     </message>\n     <message>\n-        <location line=\"+17\"/>\n+        <location line=\"+14\"/>\n+        <source>Output debugging information (default: 0, supplying &lt;category&gt; is optional)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+2\"/>\n+        <source>Set maximum size of high-priority/low-fee transactions in bytes (default: %d)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+2\"/>\n         <source>Set the number of script verification threads (up to 16, 0 = auto, &lt;0 = leave that many cores free, default: 0)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+83\"/>\n+        <location line=\"+88\"/>\n         <source>Information</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -3020,32 +3650,12 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+2\"/>\n-        <source>Output extra debugging information. Implies all other -debug* options</source>\n-        <translation type=\"unfinished\"/>\n-    </message>\n-    <message>\n-        <location line=\"+1\"/>\n-        <source>Output extra network debugging information</source>\n-        <translation type=\"unfinished\"/>\n-    </message>\n-    <message>\n-        <location line=\"+2\"/>\n-        <source>Prepend debug output with timestamp</source>\n-        <translation>Fia Protokoi-Eintr\u00e4ge imma vuan dazuaschreibn, waunns passiat san</translation>\n-    </message>\n-    <message>\n-        <location line=\"+5\"/>\n+        <location line=\"+9\"/>\n         <source>SSL options: (see the Bitcoin Wiki for SSL setup instructions)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+1\"/>\n-        <source>Select the version of socks proxy to use (4-5, default: 5)</source>\n-        <translation>W\u00f6che Version vom Sockn-Proxy gwinscht is (4 oda 5; waunn nix, daunn 5)</translation>\n-    </message>\n-    <message>\n-        <location line=\"+3\"/>\n+        <location line=\"+4\"/>\n         <source>Send trace/debug info to console instead of debug.log file</source>\n         <translation>Protokoi anstott in de Datei debug.log liawa direkt aussaschreibn</translation>\n     </message>\n@@ -3055,12 +3665,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>Protokoi zum Debugger schickn</translation>\n     </message>\n     <message>\n-        <location line=\"+5\"/>\n-        <source>Set maximum block size in bytes (default: 250000)</source>\n-        <translation type=\"unfinished\"/>\n-    </message>\n-    <message>\n-        <location line=\"+1\"/>\n+        <location line=\"+6\"/>\n         <source>Set minimum block size in bytes (default: 0)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -3109,38 +3714,38 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <source>Use UPnP to map the listening port (default: 1 when listening)</source>\n         <translation>Vawend UPnP um den Lausch-Port zuzuweisn (wenn nix aungebm is: 1, wenns Lauschn eigschoitn is)</translation>\n     </message>\n-    <message>\n-        <location line=\"+1\"/>\n-        <source>Use proxy to reach tor hidden services (default: same as -proxy)</source>\n-        <translation type=\"unfinished\"/>\n-    </message>\n     <message>\n         <location line=\"+2\"/>\n         <source>Username for JSON-RPC connections</source>\n         <translation>Benutza fia JSON-RPC Vabindungen</translation>\n     </message>\n     <message>\n-        <location line=\"+5\"/>\n+        <location line=\"+6\"/>\n         <source>Warning</source>\n         <translation>Pass auf</translation>\n     </message>\n     <message>\n-        <location line=\"+1\"/>\n+        <location line=\"+2\"/>\n         <source>Warning: This version is obsolete, upgrade required!</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <location line=\"+2\"/>\n+        <source>version</source>\n+        <translation>veasion</translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n         <source>wallet.dat corrupt, salvage failed</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-54\"/>\n+        <location line=\"-57\"/>\n         <source>Password for JSON-RPC connections</source>\n         <translation>Geheimwuat fia JSON-RPC Vabindungen</translation>\n     </message>\n     <message>\n-        <location line=\"-70\"/>\n+        <location line=\"-69\"/>\n         <source>Allow JSON-RPC connections from specified IP address</source>\n         <translation>JSON-RPC Bef\u00f6hle nua vo da aungebanen Netz-Adress ealaubn</translation>\n     </message>\n@@ -3150,12 +3755,12 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>Bef\u00f6hle zum Netz-Knotn mit da &lt;ip&gt;-Adress schickn (sunsta: 127.0.0.1)</translation>\n     </message>\n     <message>\n-        <location line=\"-126\"/>\n+        <location line=\"-131\"/>\n         <source>Execute command when the best block changes (%s in cmd is replaced by block hash)</source>\n         <translation>A programmal startn, waunn si wos am bestn Block \u00e4ndat. (a %s wiad dabei duachn Block-Hash easetzt)</translation>\n     </message>\n     <message>\n-        <location line=\"+155\"/>\n+        <location line=\"+160\"/>\n         <source>Upgrade wallet to latest format</source>\n         <translation>&apos;s Beasl ins neichaste Foamat bringan</translation>\n     </message>\n@@ -3195,22 +3800,17 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>Kaun mi ned aun %s auf dera Maschin draunh\u00e4ngan (bind returned error %d, %s)</translation>\n     </message>\n     <message>\n-        <location line=\"-95\"/>\n-        <source>Connect through socks proxy</source>\n-        <translation>Iwa an sockn-Zwischns\u00f6awa vabindn</translation>\n-    </message>\n-    <message>\n-        <location line=\"-11\"/>\n+        <location line=\"-106\"/>\n         <source>Allow DNS lookups for -addnode, -seednode and -connect</source>\n         <translation>Ealaub DNS nochfrogn fia -addnode, -seednode und -connect</translation>\n     </message>\n     <message>\n-        <location line=\"+58\"/>\n+        <location line=\"+59\"/>\n         <source>Loading addresses...</source>\n         <translation>Adressbiachl lodn...</translation>\n     </message>\n     <message>\n-        <location line=\"-36\"/>\n+        <location line=\"-37\"/>\n         <source>Error loading wallet.dat: Wallet corrupted</source>\n         <translation>F\u00f6hla beim Lodn vom Beasl: &apos;s Beasl is leida hinnich</translation>\n     </message>\n@@ -3230,12 +3830,12 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>F\u00f6hla beim Lodn vom Beasl (wallet.dat)</translation>\n     </message>\n     <message>\n-        <location line=\"+30\"/>\n+        <location line=\"+31\"/>\n         <source>Invalid -proxy address: &apos;%s&apos;</source>\n         <translation>Ung\u00fcltige &quot;-proxy&quot; Adress: &apos;%s&apos;</translation>\n     </message>\n     <message>\n-        <location line=\"+57\"/>\n+        <location line=\"+56\"/>\n         <source>Unknown network specified in -onlynet: &apos;%s&apos;</source>\n         <translation>Des Netzwerk in -onlynet is a Kas: &apos;%s&apos;</translation>\n     </message>\n@@ -3255,7 +3855,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>Kaunn de -externalip Adressn ned aufl\u00f6sn: &apos;%s&apos;</translation>\n     </message>\n     <message>\n-        <location line=\"+46\"/>\n+        <location line=\"+47\"/>\n         <source>Invalid amount for -paytxfee=&lt;amount&gt;: &apos;%s&apos;</source>\n         <translation>Da Betrog fia -paytxfee=&lt;amount&gt; is a Kas: &apos;%s&apos;</translation>\n     </message>\n@@ -3275,27 +3875,22 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>Block index lodn...</translation>\n     </message>\n     <message>\n-        <location line=\"-60\"/>\n+        <location line=\"-61\"/>\n         <source>Add a node to connect to and attempt to keep the connection open</source>\n         <translation>An Netz-Knotn aufnehman, und bei da Staungan hoitn</translation>\n     </message>\n     <message>\n-        <location line=\"-28\"/>\n+        <location line=\"-32\"/>\n         <source>Unable to bind to %s on this computer. Bitcoin is probably already running.</source>\n         <translation>Konnt mi ned aun %s auf dera Maschin aunh\u00e4ngan. Meglichaweis rennt des Programmal scho.</translation>\n     </message>\n     <message>\n-        <location line=\"+69\"/>\n-        <source>Fee per KB to add to transactions you send</source>\n-        <translation>Geb\u00fchr pro Kilobeit fia oogschickte Iwaweisungen</translation>\n-    </message>\n-    <message>\n-        <location line=\"+20\"/>\n+        <location line=\"+94\"/>\n         <source>Loading wallet...</source>\n         <translation>Beasl lodn...</translation>\n     </message>\n     <message>\n-        <location line=\"-54\"/>\n+        <location line=\"-55\"/>\n         <source>Cannot downgrade wallet</source>\n         <translation>Zrucksteign geht nimma beim Beasl</translation>\n     </message>\n@@ -3325,7 +3920,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>F\u00f6hla</translation>\n     </message>\n     <message>\n-        <location line=\"-33\"/>\n+        <location line=\"-34\"/>\n         <source>You must set rpcpassword=&lt;password&gt; in the configuration file:\n %s\n If the file does not exist, create it with owner-readable-only file permissions.</source>"
      },
      {
        "sha": "d5afe854b0e92fd351e0b97ca3be17c7a198207e",
        "filename": "src/qt/locale/bitcoin_es.ts",
        "status": "modified",
        "additions": 915,
        "deletions": 320,
        "changes": 1235,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6d697e9fa45b3f3bf67d79cc3d17717b68a43825/src/qt/locale/bitcoin_es.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6d697e9fa45b3f3bf67d79cc3d17717b68a43825/src/qt/locale/bitcoin_es.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_es.ts?ref=6d697e9fa45b3f3bf67d79cc3d17717b68a43825",
        "patch": "@@ -3,13 +3,13 @@\n     <name>AboutDialog</name>\n     <message>\n         <location filename=\"../forms/aboutdialog.ui\" line=\"+14\"/>\n-        <source>About Bitcoin</source>\n-        <translation>Acerca de Bitcoin</translation>\n+        <source>About Bitcoin Core</source>\n+        <translation>Acerca del N\u00facleo de Bitcoin</translation>\n     </message>\n     <message>\n         <location line=\"+39\"/>\n-        <source>&lt;b&gt;Bitcoin&lt;/b&gt; version</source>\n-        <translation>Versi\u00f3n de &lt;b&gt;Bitcoin&lt;/b&gt;</translation>\n+        <source>&lt;b&gt;Bitcoin Core&lt;/b&gt; version</source>\n+        <translation>Versi\u00f3n del &lt;b&gt;N\u00facleo de Bitcoin&lt;b&gt;</translation>\n     </message>\n     <message>\n         <location line=\"+57\"/>\n@@ -30,7 +30,7 @@ el OpenSSL Toolkit (http://www.openssl.org/) y software criptogr\u00e1fico escrito p\n Eric Young (eay@cryptsoft.com) y el software UPnP escrito por Thomas Bernard.</translation>\n     </message>\n     <message>\n-        <location filename=\"../aboutdialog.cpp\" line=\"+14\"/>\n+        <location filename=\"../aboutdialog.cpp\" line=\"+19\"/>\n         <source>Copyright</source>\n         <translation>Copyright</translation>\n     </message>\n@@ -73,7 +73,7 @@ Eric Young (eay@cryptsoft.com) y el software UPnP escrito por Thomas Bernard.</t\n         <translation>&amp;Cerrar</translation>\n     </message>\n     <message>\n-        <location filename=\"../addressbookpage.cpp\" line=\"+72\"/>\n+        <location filename=\"../addressbookpage.cpp\" line=\"+74\"/>\n         <source>&amp;Copy Address</source>\n         <translation>&amp;Copiar direcci\u00f3n</translation>\n     </message>\n@@ -143,7 +143,7 @@ Eric Young (eay@cryptsoft.com) y el software UPnP escrito por Thomas Bernard.</t\n         <translation>&amp;Editar</translation>\n     </message>\n     <message>\n-        <location line=\"+197\"/>\n+        <location line=\"+194\"/>\n         <source>Export Address List</source>\n         <translation>Exportar la lista de direcciones </translation>\n     </message>\n@@ -166,7 +166,7 @@ Eric Young (eay@cryptsoft.com) y el software UPnP escrito por Thomas Bernard.</t\n <context>\n     <name>AddressTableModel</name>\n     <message>\n-        <location filename=\"../addresstablemodel.cpp\" line=\"+164\"/>\n+        <location filename=\"../addresstablemodel.cpp\" line=\"+168\"/>\n         <source>Label</source>\n         <translation>Etiqueta</translation>\n     </message>\n@@ -204,7 +204,7 @@ Eric Young (eay@cryptsoft.com) y el software UPnP escrito por Thomas Bernard.</t\n         <translation>Repita la nueva contrase\u00f1a</translation>\n     </message>\n     <message>\n-        <location filename=\"../askpassphrasedialog.cpp\" line=\"+34\"/>\n+        <location filename=\"../askpassphrasedialog.cpp\" line=\"+40\"/>\n         <source>Enter the new passphrase to the wallet.&lt;br/&gt;Please use a passphrase of &lt;b&gt;10 or more random characters&lt;/b&gt;, or &lt;b&gt;eight or more words&lt;/b&gt;.</source>\n         <translation>Introduzca la nueva contrase\u00f1a del monedero.&lt;br/&gt;Por favor elija una con &lt;b&gt;10 o m\u00e1s caracteres aleatorios&lt;/b&gt;, u &lt;b&gt;ocho o m\u00e1s palabras&lt;/b&gt;.</translation>\n     </message>\n@@ -325,17 +325,17 @@ Eric Young (eay@cryptsoft.com) y el software UPnP escrito por Thomas Bernard.</t\n <context>\n     <name>BitcoinGUI</name>\n     <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"+250\"/>\n+        <location filename=\"../bitcoingui.cpp\" line=\"+260\"/>\n         <source>Sign &amp;message...</source>\n         <translation>Firmar &amp;mensaje...</translation>\n     </message>\n     <message>\n-        <location line=\"+254\"/>\n+        <location line=\"+290\"/>\n         <source>Synchronizing with network...</source>\n         <translation>Sincronizando con la red\u2026</translation>\n     </message>\n     <message>\n-        <location line=\"-324\"/>\n+        <location line=\"-360\"/>\n         <source>&amp;Overview</source>\n         <translation>&amp;Vista general</translation>\n     </message>\n@@ -401,7 +401,7 @@ Eric Young (eay@cryptsoft.com) y el software UPnP escrito por Thomas Bernard.</t\n         <translation>&amp;Cambiar la contrase\u00f1a\u2026</translation>\n     </message>\n     <message>\n-        <location line=\"+259\"/>\n+        <location line=\"+295\"/>\n         <source>Importing blocks from disk...</source>\n         <translation>Importando bloques de disco...</translation>\n     </message>\n@@ -411,7 +411,7 @@ Eric Young (eay@cryptsoft.com) y el software UPnP escrito por Thomas Bernard.</t\n         <translation>Reindexando bloques en disco...</translation>\n     </message>\n     <message>\n-        <location line=\"-322\"/>\n+        <location line=\"-358\"/>\n         <source>Send coins to a Bitcoin address</source>\n         <translation>Enviar monedas a una direcci\u00f3n Bitcoin</translation>\n     </message>\n@@ -446,20 +446,18 @@ Eric Young (eay@cryptsoft.com) y el software UPnP escrito por Thomas Bernard.</t\n         <translation>&amp;Verificar mensaje...</translation>\n     </message>\n     <message>\n-        <location line=\"-180\"/>\n-        <location line=\"+6\"/>\n-        <location line=\"+513\"/>\n+        <location line=\"+375\"/>\n         <source>Bitcoin</source>\n         <translation>Bitcoin</translation>\n     </message>\n     <message>\n-        <location line=\"-519\"/>\n-        <location line=\"+6\"/>\n+        <location line=\"-563\"/>\n+        <location line=\"+10\"/>\n         <source>Wallet</source>\n         <translation>Monedero</translation>\n     </message>\n     <message>\n-        <location line=\"+109\"/>\n+        <location line=\"+113\"/>\n         <source>&amp;Send</source>\n         <translation>&amp;Enviar</translation>\n     </message>\n@@ -469,13 +467,7 @@ Eric Young (eay@cryptsoft.com) y el software UPnP escrito por Thomas Bernard.</t\n         <translation>&amp;Recibir</translation>\n     </message>\n     <message>\n-        <location line=\"+28\"/>\n-        <location line=\"+2\"/>\n-        <source>&amp;About Bitcoin</source>\n-        <translation>&amp;Acerca de Bitcoin</translation>\n-    </message>\n-    <message>\n-        <location line=\"+14\"/>\n+        <location line=\"+44\"/>\n         <location line=\"+2\"/>\n         <source>&amp;Show / Hide</source>\n         <translation>Mo&amp;strar/ocultar</translation>\n@@ -501,12 +493,12 @@ Eric Young (eay@cryptsoft.com) y el software UPnP escrito por Thomas Bernard.</t\n         <translation>Verificar mensajes comprobando que est\u00e1n firmados con direcciones Bitcoin concretas</translation>\n     </message>\n     <message>\n-        <location line=\"+35\"/>\n+        <location line=\"+39\"/>\n         <source>&amp;File</source>\n         <translation>&amp;Archivo</translation>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n+        <location line=\"+11\"/>\n         <source>&amp;Settings</source>\n         <translation>&amp;Configuraci\u00f3n</translation>\n     </message>\n@@ -521,18 +513,30 @@ Eric Young (eay@cryptsoft.com) y el software UPnP escrito por Thomas Bernard.</t\n         <translation>Barra de pesta\u00f1as</translation>\n     </message>\n     <message>\n-        <location line=\"-235\"/>\n-        <location line=\"+294\"/>\n+        <location line=\"-244\"/>\n+        <location line=\"+321\"/>\n         <source>[testnet]</source>\n         <translation>[testnet]</translation>\n     </message>\n     <message>\n-        <location line=\"-177\"/>\n+        <location line=\"-331\"/>\n+        <location line=\"+10\"/>\n+        <source>Bitcoin Core</source>\n+        <translation>N\u00facleo de Bitcoin</translation>\n+    </message>\n+    <message>\n+        <location line=\"+121\"/>\n         <source>Request payments (generates QR codes and bitcoin: URIs)</source>\n         <translation>Solicitar pagos (genera codigo QR y URL&apos;s de Bitcoin)</translation>\n     </message>\n     <message>\n-        <location line=\"+63\"/>\n+        <location line=\"+27\"/>\n+        <location line=\"+2\"/>\n+        <source>&amp;About Bitcoin Core</source>\n+        <translation>&amp;Acerca del N\u00facleo de Bitcoin</translation>\n+    </message>\n+    <message>\n+        <location line=\"+34\"/>\n         <source>&amp;Used sending addresses...</source>\n         <translation>Direcciones para enviar &amp;usadas...</translation>\n     </message>\n@@ -552,13 +556,23 @@ Eric Young (eay@cryptsoft.com) y el software UPnP escrito por Thomas Bernard.</t\n         <translation>Muestra la lista de direcciones de recepci\u00f3n y etiquetas</translation>\n     </message>\n     <message>\n-        <location line=\"+106\"/>\n+        <location line=\"+2\"/>\n+        <source>Open URI...</source>\n+        <translation>Abrir URI...</translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Open a bitcoin: URI or payment request</source>\n+        <translation>Abrir un bitcoin: URI o petici\u00f3n de pago</translation>\n+    </message>\n+    <message>\n+        <location line=\"+126\"/>\n         <location line=\"+5\"/>\n         <source>Bitcoin client</source>\n         <translation>Cliente Bitcoin</translation>\n     </message>\n     <message numerus=\"yes\">\n-        <location line=\"+120\"/>\n+        <location line=\"+133\"/>\n         <source>%n active connection(s) to Bitcoin network</source>\n         <translation><numerusform>%n conexi\u00f3n activa hacia la red Bitcoin</numerusform><numerusform>%n conexiones activas hacia la red Bitcoin</numerusform></translation>\n     </message>\n@@ -666,17 +680,7 @@ Direcci\u00f3n: %4\n </translation>\n     </message>\n     <message>\n-        <location line=\"+34\"/>\n-        <source>URI handling</source>\n-        <translation>Gesti\u00f3n de URI</translation>\n-    </message>\n-    <message>\n-        <location line=\"+0\"/>\n-        <source>URI can not be parsed! This can be caused by an invalid Bitcoin address or malformed URI parameters.</source>\n-        <translation>\u00a1No se puede interpretar la URI! Esto puede deberse a una direcci\u00f3n Bitcoin inv\u00e1lida o a par\u00e1metros de URI mal formados.</translation>\n-    </message>\n-    <message>\n-        <location line=\"+45\"/>\n+        <location line=\"+67\"/>\n         <source>Wallet is &lt;b&gt;encrypted&lt;/b&gt; and currently &lt;b&gt;unlocked&lt;/b&gt;</source>\n         <translation>El monedero est\u00e1 &lt;b&gt;cifrado&lt;/b&gt; y actualmente &lt;b&gt;desbloqueado&lt;/b&gt;</translation>\n     </message>\n@@ -686,19 +690,306 @@ Direcci\u00f3n: %4\n         <translation>El monedero est\u00e1 &lt;b&gt;cifrado&lt;/b&gt; y actualmente &lt;b&gt;bloqueado&lt;/b&gt;</translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoin.cpp\" line=\"+110\"/>\n+        <location filename=\"../bitcoin.cpp\" line=\"+116\"/>\n         <source>A fatal error occurred. Bitcoin can no longer continue safely and will quit.</source>\n         <translation>Ha ocurrido un error cr\u00edtico. Bitcoin ya no puede continuar con seguridad y se cerrar\u00e1.</translation>\n     </message>\n </context>\n <context>\n     <name>ClientModel</name>\n     <message>\n-        <location filename=\"../clientmodel.cpp\" line=\"+115\"/>\n+        <location filename=\"../clientmodel.cpp\" line=\"+119\"/>\n         <source>Network Alert</source>\n         <translation>Alerta de red</translation>\n     </message>\n </context>\n+<context>\n+    <name>CoinControlDialog</name>\n+    <message>\n+        <location filename=\"../forms/coincontroldialog.ui\" line=\"+14\"/>\n+        <source>Coin Control Address Selection</source>\n+        <translation>Selecci\u00f3n de la direcci\u00f3n de control de la moneda</translation>\n+    </message>\n+    <message>\n+        <location line=\"+34\"/>\n+        <source>Quantity:</source>\n+        <translation>Cantidad:</translation>\n+    </message>\n+    <message>\n+        <location line=\"+29\"/>\n+        <source>Bytes:</source>\n+        <translation>Bytes:</translation>\n+    </message>\n+    <message>\n+        <location line=\"+45\"/>\n+        <source>Amount:</source>\n+        <translation>Cuant\u00eda:</translation>\n+    </message>\n+    <message>\n+        <location line=\"+29\"/>\n+        <source>Priority:</source>\n+        <translation>Prioridad:</translation>\n+    </message>\n+    <message>\n+        <location line=\"+45\"/>\n+        <source>Fee:</source>\n+        <translation>Tasa:</translation>\n+    </message>\n+    <message>\n+        <location line=\"+32\"/>\n+        <source>Low Output:</source>\n+        <translation>Env\u00edo peque\u00f1o:</translation>\n+    </message>\n+    <message>\n+        <location line=\"+48\"/>\n+        <source>After Fee:</source>\n+        <translation>Despu\u00e9s de tasas:</translation>\n+    </message>\n+    <message>\n+        <location line=\"+32\"/>\n+        <source>Change:</source>\n+        <translation>Cambio:</translation>\n+    </message>\n+    <message>\n+        <location line=\"+63\"/>\n+        <source>(un)select all</source>\n+        <translation>(des)selecciona todos</translation>\n+    </message>\n+    <message>\n+        <location line=\"+13\"/>\n+        <source>Tree mode</source>\n+        <translation>Modo arbol</translation>\n+    </message>\n+    <message>\n+        <location line=\"+16\"/>\n+        <source>List mode</source>\n+        <translation>Modo lista</translation>\n+    </message>\n+    <message>\n+        <location line=\"+52\"/>\n+        <source>Amount</source>\n+        <translation>Cantidad</translation>\n+    </message>\n+    <message>\n+        <location line=\"+10\"/>\n+        <source>Address</source>\n+        <translation>Direcci\u00f3n</translation>\n+    </message>\n+    <message>\n+        <location line=\"+5\"/>\n+        <source>Date</source>\n+        <translation>Fecha</translation>\n+    </message>\n+    <message>\n+        <location line=\"+5\"/>\n+        <source>Confirmations</source>\n+        <translation>Confirmaciones</translation>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>Confirmed</source>\n+        <translation>Confirmado</translation>\n+    </message>\n+    <message>\n+        <location line=\"+5\"/>\n+        <source>Priority</source>\n+        <translation>Prioridad</translation>\n+    </message>\n+    <message>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"+42\"/>\n+        <source>Copy address</source>\n+        <translation>Copiar direcci\u00f3n</translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Copy label</source>\n+        <translation>Copiar etiqueta</translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <location line=\"+26\"/>\n+        <source>Copy amount</source>\n+        <translation>Copiar cuant\u00eda</translation>\n+    </message>\n+    <message>\n+        <location line=\"-25\"/>\n+        <source>Copy transaction ID</source>\n+        <translation>Copiar identificador de transacci\u00f3n</translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Lock unspent</source>\n+        <translation>Bloquear lo no gastado</translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Unlock unspent</source>\n+        <translation>Desbloquear lo no gastado</translation>\n+    </message>\n+    <message>\n+        <location line=\"+22\"/>\n+        <source>Copy quantity</source>\n+        <translation>Copiar cantidad</translation>\n+    </message>\n+    <message>\n+        <location line=\"+2\"/>\n+        <source>Copy fee</source>\n+        <translation>Copiar donaci\u00f3n</translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Copy after fee</source>\n+        <translation>Copiar despu\u00e9s de aplicar donaci\u00f3n</translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Copy bytes</source>\n+        <translation>Copiar bytes</translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Copy priority</source>\n+        <translation>Copiar prioridad</translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Copy low output</source>\n+        <translation>Copiar env\u00edo peque\u00f1o</translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Copy change</source>\n+        <translation>Copiar cambio</translation>\n+    </message>\n+    <message>\n+        <location line=\"+323\"/>\n+        <source>highest</source>\n+        <translation>lo m\u00e1s alto</translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>higher</source>\n+        <translation>m\u00e1s alto</translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>high</source>\n+        <translation>alto</translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>medium-high</source>\n+        <translation>medio-alto</translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>medium</source>\n+        <translation>medio</translation>\n+    </message>\n+    <message>\n+        <location line=\"+4\"/>\n+        <source>low-medium</source>\n+        <translation>bajo-medio</translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>low</source>\n+        <translation>bajo</translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>lower</source>\n+        <translation>m\u00e1s bajo</translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>lowest</source>\n+        <translation>lo m\u00e1s bajo</translation>\n+    </message>\n+    <message>\n+        <location line=\"+11\"/>\n+        <source>(%1 locked)</source>\n+        <translation>(%1 bloqueado)</translation>\n+    </message>\n+    <message>\n+        <location line=\"+171\"/>\n+        <source>Dust</source>\n+        <translation>Basura</translation>\n+    </message>\n+    <message>\n+        <location line=\"+0\"/>\n+        <source>yes</source>\n+        <translation>si</translation>\n+    </message>\n+    <message>\n+        <location line=\"+0\"/>\n+        <source>no</source>\n+        <translation>no</translation>\n+    </message>\n+    <message>\n+        <location line=\"+10\"/>\n+        <source>This label turns red, if the transaction size is greater than 1000 bytes.</source>\n+        <translation>Esta etiqueta se torna roja si el tama\u00f1o de la transaci\u00f3n es mayor a 1000 bytes.</translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <location line=\"+5\"/>\n+        <source>This means a fee of at least %1 per kB is required.</source>\n+        <translation>Esto implica que se requiere una tarifa de al menos %1 por kB</translation>\n+    </message>\n+    <message>\n+        <location line=\"-4\"/>\n+        <source>Can vary +/- 1 byte per input.</source>\n+        <translation>Puede variar +/- 1 byte por entrada.</translation>\n+    </message>\n+    <message>\n+        <location line=\"+2\"/>\n+        <source>Transactions with higher priority are more likely to get included into a block.</source>\n+        <translation>Las transacciones con alta prioridad son m\u00e1s propensas a ser incluidas dentro de un bloque.</translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>This label turns red, if the priority is smaller than &quot;medium&quot;</source>\n+        <translation>Esta etiqueta se torna roja si la prioridad es menor a &quot;media&quot;</translation>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>This label turns red, if any recipient receives an amount smaller than %1.</source>\n+        <translation>Esta etiqueta se torna roja si cualquier destinatario recibe una cantidad menor a %1.</translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <location line=\"+4\"/>\n+        <source>This means a fee of at least %1 is required.</source>\n+        <translation>Esto significa que se necesita una tarifa de al menos %1.</translation>\n+    </message>\n+    <message>\n+        <location line=\"-3\"/>\n+        <source>Amounts below 0.546 times the minimum relay fee are shown as dust.</source>\n+        <translation>Cantidades por debajo de 0.546 veces la tasa ser\u00e1n mostradas como basura</translation>\n+    </message>\n+    <message>\n+        <location line=\"+2\"/>\n+        <source>This label turns red, if the change is smaller than %1.</source>\n+        <translation>Esta etiqueta se vuelve roja si la cantidad de monedas es menor a %1</translation>\n+    </message>\n+    <message>\n+        <location line=\"+43\"/>\n+        <location line=\"+66\"/>\n+        <source>(no label)</source>\n+        <translation>(sin etiqueta)</translation>\n+    </message>\n+    <message>\n+        <location line=\"-9\"/>\n+        <source>change from %1 (%2)</source>\n+        <translation>Enviar desde %1 (%2)</translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>(change)</source>\n+        <translation>(cambio)</translation>\n+    </message>\n+</context>\n <context>\n     <name>EditAddressDialog</name>\n     <message>\n@@ -727,7 +1018,7 @@ Direcci\u00f3n: %4\n         <translation>&amp;Direcci\u00f3n</translation>\n     </message>\n     <message>\n-        <location filename=\"../editaddressdialog.cpp\" line=\"+21\"/>\n+        <location filename=\"../editaddressdialog.cpp\" line=\"+25\"/>\n         <source>New receiving address</source>\n         <translation>Nueva direcci\u00f3n de recepci\u00f3n</translation>\n     </message>\n@@ -770,7 +1061,7 @@ Direcci\u00f3n: %4\n <context>\n     <name>FreespaceChecker</name>\n     <message>\n-        <location filename=\"../intro.cpp\" line=\"+61\"/>\n+        <location filename=\"../intro.cpp\" line=\"+65\"/>\n         <source>A new data directory will be created.</source>\n         <translation>Se crear\u00e1 un nuevo directorio de datos.</translation>\n     </message>\n@@ -798,18 +1089,18 @@ Direcci\u00f3n: %4\n <context>\n     <name>GUIUtil::HelpMessageBox</name>\n     <message>\n-        <location filename=\"../guiutil.cpp\" line=\"+558\"/>\n-        <location line=\"+13\"/>\n-        <source>Bitcoin-Qt</source>\n-        <translation>Bitcoin-Qt</translation>\n-    </message>\n-    <message>\n-        <location line=\"-13\"/>\n+        <location filename=\"../guiutil.cpp\" line=\"+597\"/>\n         <source>version</source>\n         <translation>versi\u00f3n</translation>\n     </message>\n     <message>\n-        <location line=\"+2\"/>\n+        <location line=\"+0\"/>\n+        <location line=\"+13\"/>\n+        <source>Bitcoin Core</source>\n+        <translation>N\u00facleo de Bitcoin</translation>\n+    </message>\n+    <message>\n+        <location line=\"-11\"/>\n         <source>Usage:</source>\n         <translation>Uso:</translation>\n     </message>\n@@ -853,17 +1144,17 @@ Direcci\u00f3n: %4\n     </message>\n     <message>\n         <location line=\"+9\"/>\n-        <source>Welcome to Bitcoin-Qt.</source>\n-        <translation>Bienvenido a Bitcoin-Qt.</translation>\n+        <source>Welcome to Bitcoin Core.</source>\n+        <translation>Bienvenido al N\u00facleo de Bitcoin</translation>\n     </message>\n     <message>\n         <location line=\"+26\"/>\n-        <source>As this is the first time the program is launched, you can choose where Bitcoin-Qt will store its data.</source>\n+        <source>As this is the first time the program is launched, you can choose where Bitcoin Core will store its data.</source>\n         <translation>Al ser la primera vez que se ejecuta el programa, puede elegir d\u00f3nde almacenar\u00e1 sus datos Bitcoin-Qt.</translation>\n     </message>\n     <message>\n         <location line=\"+10\"/>\n-        <source>Bitcoin-Qt will download and store a copy of the Bitcoin block chain. At least %1GB of data will be stored in this directory, and it will grow over time. The wallet will also be stored in this directory.</source>\n+        <source>Bitcoin Core will download and store a copy of the Bitcoin block chain. At least %1GB of data will be stored in this directory, and it will grow over time. The wallet will also be stored in this directory.</source>\n         <translation>Bitcoin-Qt va a descargar y guardar una copia de la cadena de bloques de Bitcoin. Se almacenar\u00e1 al menos %1GB de datos en este directorio, que ir\u00e1 creciendo con el tiempo. El monedero se guardar\u00e1 tambi\u00e9n en este directorio.</translation>\n     </message>\n     <message>\n@@ -877,7 +1168,17 @@ Direcci\u00f3n: %4\n         <translation>Utilice un directorio de datos personalizado:</translation>\n     </message>\n     <message>\n-        <location filename=\"../intro.cpp\" line=\"+105\"/>\n+        <location filename=\"../intro.cpp\" line=\"+85\"/>\n+        <source>Bitcoin</source>\n+        <translation>Bitcoin</translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Error: Specified data directory &quot;%1&quot; can not be created.</source>\n+        <translation>Error: No puede crearse el directorio de datos especificado &quot;%1&quot;.</translation>\n+    </message>\n+    <message>\n+        <location line=\"+19\"/>\n         <source>Error</source>\n         <translation>Error</translation>\n     </message>\n@@ -892,6 +1193,34 @@ Direcci\u00f3n: %4\n         <translation>(de los %1GB necesarios)</translation>\n     </message>\n </context>\n+<context>\n+    <name>OpenURIDialog</name>\n+    <message>\n+        <location filename=\"../forms/openuridialog.ui\" line=\"+14\"/>\n+        <source>Open URI</source>\n+        <translation>Abrir URI...</translation>\n+    </message>\n+    <message>\n+        <location line=\"+6\"/>\n+        <source>Open payment request from URI or file</source>\n+        <translation>El pago requiere una URI o archivo</translation>\n+    </message>\n+    <message>\n+        <location line=\"+9\"/>\n+        <source>URI:</source>\n+        <translation>URI:</translation>\n+    </message>\n+    <message>\n+        <location line=\"+11\"/>\n+        <source>Select payment request file</source>\n+        <translation>Seleccione archivo de sulicitud de pago</translation>\n+    </message>\n+    <message>\n+        <location filename=\"../openuridialog.cpp\" line=\"+47\"/>\n+        <source>Select payment request file to open</source>\n+        <translation>Abrir archivo de solicitud de pago</translation>\n+    </message>\n+</context>\n <context>\n     <name>OptionsDialog</name>\n     <message>\n@@ -1007,7 +1336,7 @@ Direcci\u00f3n: %4\n     <message>\n         <location line=\"+7\"/>\n         <source>Minimize instead of exit the application when the window is closed. When this option is enabled, the application will be closed only after selecting Quit in the menu.</source>\n-        <translation>Minimizar en lugar de salir de la aplicaci\u00f3n al cerrar la ventana.Cuando esta opci\u00f3n est\u00e1 activa, la aplicaci\u00f3n solo se puede cerrar seleccionando Salir desde el men\u00fa.</translation>\n+        <translation>Minimizar en lugar de salir de la aplicaci\u00f3n al cerrar la ventana. Cuando esta opci\u00f3n est\u00e1 activa, la aplicaci\u00f3n solo se puede cerrar seleccionando Salir desde el men\u00fa.</translation>\n     </message>\n     <message>\n         <location line=\"+3\"/>\n@@ -1049,6 +1378,16 @@ Direcci\u00f3n: %4\n         <source>&amp;Display addresses in transaction list</source>\n         <translation>&amp;Mostrar las direcciones en la lista de transacciones</translation>\n     </message>\n+    <message>\n+        <location line=\"+7\"/>\n+        <source>Whether to show coin control features or not.</source>\n+        <translation>Mostrar o no caracter\u00edsticas de control de moneda</translation>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>Display coin &amp;control features (experts only)</source>\n+        <translation>Mostrar moneda y caracter\u00edsticas de control (Avanzado)</translation>\n+    </message>\n     <message>\n         <location line=\"+71\"/>\n         <source>&amp;OK</source>\n@@ -1065,12 +1404,12 @@ Direcci\u00f3n: %4\n         <translation>&amp;Aplicar</translation>\n     </message>\n     <message>\n-        <location filename=\"../optionsdialog.cpp\" line=\"+58\"/>\n+        <location filename=\"../optionsdialog.cpp\" line=\"+63\"/>\n         <source>default</source>\n         <translation>predeterminado</translation>\n     </message>\n     <message>\n-        <location line=\"+130\"/>\n+        <location line=\"+131\"/>\n         <source>Confirm options reset</source>\n         <translation>Confirme el restablecimiento de las opciones</translation>\n     </message>\n@@ -1111,17 +1450,17 @@ Direcci\u00f3n: %4\n     </message>\n     <message>\n         <location line=\"+50\"/>\n-        <location line=\"+202\"/>\n+        <location line=\"+214\"/>\n         <source>The displayed information may be out of date. Your wallet automatically synchronizes with the Bitcoin network after a connection is established, but this process has not completed yet.</source>\n-        <translation>La informaci\u00f3n mostrada puede estar desactualizada. Su monedero se sincroniza autom\u00e1ticamente con la red Bitcoin despu\u00e9s de que se haya establecido una conexi\u00f3n , pero este proceso a\u00fan no se ha completado.</translation>\n+        <translation>La informaci\u00f3n mostrada puede estar desactualizada. Su monedero se sincroniza autom\u00e1ticamente con la red Bitcoin despu\u00e9s de que se haya establecido una conexi\u00f3n, pero este proceso a\u00fan no se ha completado.</translation>\n     </message>\n     <message>\n-        <location line=\"-131\"/>\n+        <location line=\"-140\"/>\n         <source>Unconfirmed:</source>\n         <translation>No confirmado(s):</translation>\n     </message>\n     <message>\n-        <location line=\"-78\"/>\n+        <location line=\"-81\"/>\n         <source>Wallet</source>\n         <translation>Monedero</translation>\n     </message>\n@@ -1136,12 +1475,12 @@ Direcci\u00f3n: %4\n         <translation>Su balance actual gastable</translation>\n     </message>\n     <message>\n-        <location line=\"+29\"/>\n+        <location line=\"+32\"/>\n         <source>Total of transactions that have yet to be confirmed, and do not yet count toward the spendable balance</source>\n         <translation>Total de transacciones que deben ser confirmadas, y que no cuentan con el balance gastable necesario</translation>\n     </message>\n     <message>\n-        <location line=\"+13\"/>\n+        <location line=\"+16\"/>\n         <source>Immature:</source>\n         <translation>No disponible:</translation>\n     </message>\n@@ -1151,7 +1490,7 @@ Direcci\u00f3n: %4\n         <translation>Saldo reci\u00e9n minado que a\u00fan no est\u00e1 disponible.</translation>\n     </message>\n     <message>\n-        <location line=\"+13\"/>\n+        <location line=\"+16\"/>\n         <source>Total:</source>\n         <translation>Total:</translation>\n     </message>\n@@ -1161,12 +1500,12 @@ Direcci\u00f3n: %4\n         <translation>Su balance actual total</translation>\n     </message>\n     <message>\n-        <location line=\"+53\"/>\n+        <location line=\"+56\"/>\n         <source>&lt;b&gt;Recent transactions&lt;/b&gt;</source>\n         <translation>&lt;b&gt;Movimientos recientes&lt;/b&gt;</translation>\n     </message>\n     <message>\n-        <location filename=\"../overviewpage.cpp\" line=\"+116\"/>\n+        <location filename=\"../overviewpage.cpp\" line=\"+120\"/>\n         <location line=\"+1\"/>\n         <source>out of sync</source>\n         <translation>desincronizado</translation>\n@@ -1175,7 +1514,7 @@ Direcci\u00f3n: %4\n <context>\n     <name>PaymentServer</name>\n     <message>\n-        <location filename=\"../paymentserver.cpp\" line=\"+392\"/>\n+        <location filename=\"../paymentserver.cpp\" line=\"+397\"/>\n         <source>URI handling</source>\n         <translation>Gesti\u00f3n de URI</translation>\n     </message>\n@@ -1185,23 +1524,29 @@ Direcci\u00f3n: %4\n         <translation>\u00a1No se puede interpretar la URI! Esto puede deberse a una direcci\u00f3n Bitcoin inv\u00e1lida o a par\u00e1metros de URI mal formados.</translation>\n     </message>\n     <message>\n-        <location line=\"+69\"/>\n+        <location line=\"+91\"/>\n         <source>Requested payment amount of %1 is too small (considered dust).</source>\n         <translation>La cantidad del pago solicitado (%1) es demasiado peque\u00f1a (considerada polvo).</translation>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n-        <location line=\"+37\"/>\n+        <location line=\"-204\"/>\n+        <location line=\"+195\"/>\n+        <location line=\"+13\"/>\n         <source>Payment request error</source>\n         <translation>Error en petici\u00f3n de pago</translation>\n     </message>\n     <message>\n-        <location line=\"+1\"/>\n-        <source>Insecure requests to custom payment scripts unsupported</source>\n+        <location line=\"-207\"/>\n+        <source>Cannot start bitcoin: click-to-pay handler</source>\n+        <translation>No se pudo iniciar bitcoin: manejador de pago-al-clic</translation>\n+    </message>\n+    <message>\n+        <location line=\"+195\"/>\n+        <source>Unverified payment requests to custom payment scripts are unsupported.</source>\n         <translation>No est\u00e1n soportadas las peticiones inseguras a scripts de pago personalizados</translation>\n     </message>\n     <message>\n-        <location line=\"+38\"/>\n+        <location line=\"+59\"/>\n         <source>Refund from %1</source>\n         <translation>Devoluci\u00f3n de %1</translation>\n     </message>\n@@ -1211,7 +1556,7 @@ Direcci\u00f3n: %4\n         <translation>Error en la comunicaci\u00f3n con %1: %2</translation>\n     </message>\n     <message>\n-        <location line=\"+31\"/>\n+        <location line=\"+28\"/>\n         <source>Bad response from server %1</source>\n         <translation>Respuesta err\u00f3nea del servidor %1</translation>\n     </message>\n@@ -1221,8 +1566,8 @@ Direcci\u00f3n: %4\n         <translation>Pago aceptado</translation>\n     </message>\n     <message>\n-        <location line=\"-58\"/>\n-        <location line=\"+30\"/>\n+        <location line=\"-55\"/>\n+        <location line=\"+27\"/>\n         <location line=\"+17\"/>\n         <source>Network request error</source>\n         <translation>Error en petici\u00f3n de red</translation>\n@@ -1231,9 +1576,8 @@ Direcci\u00f3n: %4\n <context>\n     <name>QObject</name>\n     <message>\n-        <location filename=\"../bitcoin.cpp\" line=\"+114\"/>\n+        <location filename=\"../bitcoin.cpp\" line=\"+119\"/>\n         <location line=\"+5\"/>\n-        <location filename=\"../intro.cpp\" line=\"-32\"/>\n         <source>Bitcoin</source>\n         <translation>Bitcoin</translation>\n     </message>\n@@ -1247,16 +1591,11 @@ Direcci\u00f3n: %4\n         <source>Error: Invalid combination of -regtest and -testnet.</source>\n         <translation>Error: Combinaci\u00f3n no v\u00e1lida de -regtest y -testnet.</translation>\n     </message>\n-    <message>\n-        <location filename=\"../intro.cpp\" line=\"+1\"/>\n-        <source>Error: Specified data directory &quot;%1&quot; can not be created.</source>\n-        <translation>Error: No puede crearse el directorio de datos especificado &quot;%1&quot;.</translation>\n-    </message>\n </context>\n <context>\n     <name>QRImageWidget</name>\n     <message>\n-        <location filename=\"../receiverequestdialog.cpp\" line=\"+32\"/>\n+        <location filename=\"../receiverequestdialog.cpp\" line=\"+36\"/>\n         <source>&amp;Save Image...</source>\n         <translation>Guardar Imagen...</translation>\n     </message>\n@@ -1272,7 +1611,7 @@ Direcci\u00f3n: %4\n     </message>\n     <message>\n         <location line=\"+0\"/>\n-        <source>PNG Images (*.png)</source>\n+        <source>PNG Image (*.png)</source>\n         <translation>Im\u00e1genes PNG (*.png)</translation>\n     </message>\n </context>\n@@ -1293,7 +1632,7 @@ Direcci\u00f3n: %4\n         <location line=\"+53\"/>\n         <location line=\"+23\"/>\n         <location line=\"+23\"/>\n-        <location filename=\"../rpcconsole.cpp\" line=\"+352\"/>\n+        <location filename=\"../rpcconsole.cpp\" line=\"+360\"/>\n         <source>N/A</source>\n         <translation>N/D</translation>\n     </message>\n@@ -1308,7 +1647,12 @@ Direcci\u00f3n: %4\n         <translation>&amp;Informaci\u00f3n</translation>\n     </message>\n     <message>\n-        <location line=\"+68\"/>\n+        <location line=\"-10\"/>\n+        <source>Debug window</source>\n+        <translation>Ventana de depuraci\u00f3n</translation>\n+    </message>\n+    <message>\n+        <location line=\"+78\"/>\n         <source>Using OpenSSL version</source>\n         <translation>Utilizando la versi\u00f3n OpenSSL</translation>\n     </message>\n@@ -1363,12 +1707,7 @@ Direcci\u00f3n: %4\n         <translation>Opciones de la l\u00ednea de \u00f3rdenes</translation>\n     </message>\n     <message>\n-        <location line=\"+7\"/>\n-        <source>Show the Bitcoin-Qt help message to get a list with possible Bitcoin command-line options.</source>\n-        <translation>Mostrar el mensaje de ayuda de Bitcoin-Qt que enumera las opciones disponibles de l\u00ednea de \u00f3rdenes para Bitcoin.</translation>\n-    </message>\n-    <message>\n-        <location line=\"+3\"/>\n+        <location line=\"+10\"/>\n         <source>&amp;Show</source>\n         <translation>&amp;Mostrar</translation>\n     </message>\n@@ -1408,12 +1747,7 @@ Direcci\u00f3n: %4\n         <translation>Fecha de compilaci\u00f3n</translation>\n     </message>\n     <message>\n-        <location line=\"-104\"/>\n-        <source>Bitcoin - Debug window</source>\n-        <translation>Bitcoin - Ventana de depuraci\u00f3n</translation>\n-    </message>\n-    <message>\n-        <location line=\"+25\"/>\n+        <location line=\"-79\"/>\n         <source>Bitcoin Core</source>\n         <translation>N\u00facleo de Bitcoin</translation>\n     </message>\n@@ -1428,7 +1762,12 @@ Direcci\u00f3n: %4\n         <translation>Abrir el archivo de registro de depuraci\u00f3n en el directorio actual de datos. Esto puede llevar varios segundos para archivos de registro grandes.</translation>\n     </message>\n     <message>\n-        <location line=\"+102\"/>\n+        <location line=\"+26\"/>\n+        <source>Show the Bitcoin-Core help message to get a list with possible Bitcoin command-line options.</source>\n+        <translation>Mostrar el mensaje de ayuda de Bitcoin-Qt que enumera las opciones disponibles de l\u00ednea de \u00f3rdenes para Bitcoin.</translation>\n+    </message>\n+    <message>\n+        <location line=\"+76\"/>\n         <source>Clear console</source>\n         <translation>Borrar consola</translation>\n     </message>\n@@ -1486,37 +1825,32 @@ Direcci\u00f3n: %4\n <context>\n     <name>ReceiveCoinsDialog</name>\n     <message>\n-        <location filename=\"../forms/receivecoinsdialog.ui\" line=\"+22\"/>\n+        <location filename=\"../forms/receivecoinsdialog.ui\" line=\"+83\"/>\n         <source>&amp;Amount:</source>\n         <translation>Cantidad</translation>\n     </message>\n     <message>\n-        <location line=\"+16\"/>\n+        <location line=\"+19\"/>\n         <source>The amount to request</source>\n         <translation>La cantidad a solicitar</translation>\n     </message>\n     <message>\n-        <location line=\"+7\"/>\n+        <location line=\"-32\"/>\n         <source>&amp;Label:</source>\n         <translation>&amp;Etiqueta:</translation>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n-        <source>The label to associate with the receiving address</source>\n-        <translation>La etiqueta a asociar con la direcci\u00f3n para recibir</translation>\n-    </message>\n-    <message>\n-        <location line=\"+7\"/>\n+        <location line=\"-34\"/>\n         <source>&amp;Message:</source>\n         <translation>Mensaje:</translation>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n+        <location line=\"+20\"/>\n         <source>The message to attach to payment request</source>\n         <translation>El mensaje a adjuntar a la solicitud de pago</translation>\n     </message>\n     <message>\n-        <location line=\"+14\"/>\n+        <location line=\"-37\"/>\n         <source>Reuse one of the previously used receiving addresses. Reusing addresses has security and privacy issues. Do not use this unless re-generating a payment request made before.</source>\n         <translation>Reutilizar una de las direcciones previamente usadas para recibir. Reutilizar direcciones tiene problemas de seguridad y privacidad. No lo uses a menos que antes regeneres una solicitud de pago.</translation>\n     </message>\n@@ -1526,12 +1860,17 @@ Direcci\u00f3n: %4\n         <translation>R&amp;eutilizar una direcci\u00f3n existente para recibir (no recomendado)</translation>\n     </message>\n     <message>\n-        <location line=\"+7\"/>\n+        <location line=\"+27\"/>\n+        <source>The label to associate with the new receiving address</source>\n+        <translation>La etiqueta a asociar con la direcci\u00f3n para recibir</translation>\n+    </message>\n+    <message>\n+        <location line=\"+14\"/>\n         <source>Use this form to request payments. All fields are optional.</source>\n         <translation>Utiliza este formulario para solicitar pagos. Todos los campos son opcionales.</translation>\n     </message>\n     <message>\n-        <location line=\"+17\"/>\n+        <location line=\"+56\"/>\n         <source>Clear all fields of the form.</source>\n         <translation>Limpiar todos los campos del formulario.</translation>\n     </message>\n@@ -1545,6 +1884,31 @@ Direcci\u00f3n: %4\n         <source>&amp;Request payment</source>\n         <translation>&amp;Solicitar pago</translation>\n     </message>\n+    <message>\n+        <location line=\"+47\"/>\n+        <source>Previously requested payments</source>\n+        <translation>Pagos solicitados anteriormente</translation>\n+    </message>\n+    <message>\n+        <location line=\"+12\"/>\n+        <source>Show the selected request (does the same as double clicking an entry)</source>\n+        <translation>Muestra la petici\u00f3n seleccionada (Tambi\u00e9n doble clic)</translation>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>Show</source>\n+        <translation>Mostrar</translation>\n+    </message>\n+    <message>\n+        <location line=\"+11\"/>\n+        <source>Remove the selected entries from the list</source>\n+        <translation>Borrar de la lista las direcci\u00f3nes actualmente seleccionadas</translation>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>Remove</source>\n+        <translation>Eliminar</translation>\n+    </message>\n </context>\n <context>\n     <name>ReceiveRequestDialog</name>\n@@ -1563,18 +1927,13 @@ Direcci\u00f3n: %4\n         <source>Copy &amp;Address</source>\n         <translation>Copiar &amp;Direcci\u00f3n</translation>\n     </message>\n-    <message>\n-        <location line=\"+7\"/>\n-        <source>&amp;Copy Image</source>\n-        <translation>Copiar imagen</translation>\n-    </message>\n     <message>\n         <location line=\"+7\"/>\n         <source>&amp;Save Image...</source>\n         <translation>Guardar Imagen...</translation>\n     </message>\n     <message>\n-        <location filename=\"../receiverequestdialog.cpp\" line=\"+58\"/>\n+        <location filename=\"../receiverequestdialog.cpp\" line=\"+56\"/>\n         <source>Request payment to %1</source>\n         <translation>Solicitar pago a %1</translation>\n     </message>\n@@ -1619,17 +1978,120 @@ Direcci\u00f3n: %4\n         <translation>Error al codificar la URI en el c\u00f3digo QR.</translation>\n     </message>\n </context>\n+<context>\n+    <name>RecentRequestsTableModel</name>\n+    <message>\n+        <location filename=\"../recentrequeststablemodel.cpp\" line=\"+14\"/>\n+        <source>Date</source>\n+        <translation>Fecha</translation>\n+    </message>\n+    <message>\n+        <location line=\"+0\"/>\n+        <source>Label</source>\n+        <translation>Etiqueta</translation>\n+    </message>\n+    <message>\n+        <location line=\"+0\"/>\n+        <source>Message</source>\n+        <translation>Mensaje</translation>\n+    </message>\n+    <message>\n+        <location line=\"+0\"/>\n+        <source>Amount</source>\n+        <translation>Cantidad</translation>\n+    </message>\n+    <message>\n+        <location line=\"+36\"/>\n+        <source>(no label)</source>\n+        <translation>(sin etiqueta)</translation>\n+    </message>\n+    <message>\n+        <location line=\"+9\"/>\n+        <source>(no message)</source>\n+        <translation>(Ningun mensaje)</translation>\n+    </message>\n+</context>\n <context>\n     <name>SendCoinsDialog</name>\n     <message>\n         <location filename=\"../forms/sendcoinsdialog.ui\" line=\"+14\"/>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"+140\"/>\n-        <location line=\"+213\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"+381\"/>\n+        <location line=\"+81\"/>\n         <source>Send Coins</source>\n         <translation>Enviar monedas</translation>\n     </message>\n     <message>\n-        <location line=\"+50\"/>\n+        <location line=\"+76\"/>\n+        <source>Coin Control Features</source>\n+        <translation>Caracter\u00edsticas de control de la moneda</translation>\n+    </message>\n+    <message>\n+        <location line=\"+20\"/>\n+        <source>Inputs...</source>\n+        <translation>Entradas...</translation>\n+    </message>\n+    <message>\n+        <location line=\"+7\"/>\n+        <source>automatically selected</source>\n+        <translation>Seleccionado automaticamente</translation>\n+    </message>\n+    <message>\n+        <location line=\"+19\"/>\n+        <source>Insufficient funds!</source>\n+        <translation>Fondos insuficientes!</translation>\n+    </message>\n+    <message>\n+        <location line=\"+89\"/>\n+        <source>Quantity:</source>\n+        <translation>Cantidad:</translation>\n+    </message>\n+    <message>\n+        <location line=\"+35\"/>\n+        <source>Bytes:</source>\n+        <translation>Bytes:</translation>\n+    </message>\n+    <message>\n+        <location line=\"+48\"/>\n+        <source>Amount:</source>\n+        <translation>Cuant\u00eda:</translation>\n+    </message>\n+    <message>\n+        <location line=\"+32\"/>\n+        <source>Priority:</source>\n+        <translation>Prioridad:</translation>\n+    </message>\n+    <message>\n+        <location line=\"+48\"/>\n+        <source>Fee:</source>\n+        <translation>Tasa:</translation>\n+    </message>\n+    <message>\n+        <location line=\"+32\"/>\n+        <source>Low Output:</source>\n+        <translation>Env\u00edo peque\u00f1o:</translation>\n+    </message>\n+    <message>\n+        <location line=\"+48\"/>\n+        <source>After Fee:</source>\n+        <translation>Despu\u00e9s de tasas:</translation>\n+    </message>\n+    <message>\n+        <location line=\"+32\"/>\n+        <source>Change:</source>\n+        <translation>Cambio:</translation>\n+    </message>\n+    <message>\n+        <location line=\"+44\"/>\n+        <source>If this is activated, but the change address is empty or invalid, change will be sent to a newly generated address.</source>\n+        <translation>Al activarse, si la direcci\u00f3n esta vac\u00eda o es inv\u00e1lida, las monedas ser\u00e1n enviadas a una nueva direcci\u00f3n generada.</translation>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>Custom change address</source>\n+        <translation>Direcci\u00f3n propia</translation>\n+    </message>\n+    <message>\n+        <location line=\"+115\"/>\n         <source>Send to multiple recipients at once</source>\n         <translation>Enviar a m\u00faltiples destinatarios de una vez</translation>\n     </message>\n@@ -1644,74 +2106,145 @@ Direcci\u00f3n: %4\n         <translation>Limpiar todos los campos del formulario</translation>\n     </message>\n     <message>\n-        <location line=\"+3\"/>\n-        <source>Clear &amp;All</source>\n-        <translation>Limpiar &amp;todo</translation>\n+        <location line=\"+3\"/>\n+        <source>Clear &amp;All</source>\n+        <translation>Limpiar &amp;todo</translation>\n+    </message>\n+    <message>\n+        <location line=\"+22\"/>\n+        <source>Balance:</source>\n+        <translation>Saldo:</translation>\n+    </message>\n+    <message>\n+        <location line=\"+41\"/>\n+        <source>Confirm the send action</source>\n+        <translation>Confirmar el env\u00edo</translation>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>S&amp;end</source>\n+        <translation>&amp;Enviar</translation>\n+    </message>\n+    <message>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"-229\"/>\n+        <source>Confirm send coins</source>\n+        <translation>Confirmar el env\u00edo de monedas</translation>\n+    </message>\n+    <message>\n+        <location line=\"-74\"/>\n+        <location line=\"+5\"/>\n+        <location line=\"+5\"/>\n+        <location line=\"+4\"/>\n+        <source>%1 to %2</source>\n+        <translation>%1 a %2</translation>\n+    </message>\n+    <message>\n+        <location line=\"-136\"/>\n+        <source>Enter a Bitcoin address (e.g. 1NS17iag9jJgTHD1VXjvLCEnZuQ3rJDE9L)</source>\n+        <translation>Introduzca una direcci\u00f3n Bitcoin (ej. 1NS17iag9jJgTHD1VXjvLCEnZuQ3rJDE9L)</translation>\n+    </message>\n+    <message>\n+        <location line=\"+15\"/>\n+        <source>Copy quantity</source>\n+        <translation>Copiar cantidad</translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Copy amount</source>\n+        <translation>Copiar cuant\u00eda</translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Copy fee</source>\n+        <translation>Copiar donaci\u00f3n</translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Copy after fee</source>\n+        <translation>Copiar despu\u00e9s de aplicar donaci\u00f3n</translation>\n     </message>\n     <message>\n-        <location line=\"+22\"/>\n-        <source>Balance:</source>\n-        <translation>Saldo:</translation>\n+        <location line=\"+1\"/>\n+        <source>Copy bytes</source>\n+        <translation>Copiar bytes</translation>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n-        <source>123.456 BTC</source>\n-        <translation>123.456 BTC</translation>\n+        <location line=\"+1\"/>\n+        <source>Copy priority</source>\n+        <translation>Copiar prioridad</translation>\n     </message>\n     <message>\n-        <location line=\"+31\"/>\n-        <source>Confirm the send action</source>\n-        <translation>Confirmar el env\u00edo</translation>\n+        <location line=\"+1\"/>\n+        <source>Copy low output</source>\n+        <translation>Copiar env\u00edo peque\u00f1o</translation>\n     </message>\n     <message>\n-        <location line=\"+3\"/>\n-        <source>S&amp;end</source>\n-        <translation>&amp;Enviar</translation>\n+        <location line=\"+1\"/>\n+        <source>Copy change</source>\n+        <translation>Copiar Cambio</translation>\n     </message>\n     <message>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"-154\"/>\n-        <source>Confirm send coins</source>\n-        <translation>Confirmar el env\u00edo de monedas</translation>\n+        <location line=\"+170\"/>\n+        <source>Total Amount %1 (= %2)</source>\n+        <translation>Cuant\u00eda Total %1 (=%2)</translation>\n     </message>\n     <message>\n-        <location line=\"-90\"/>\n-        <location line=\"+5\"/>\n-        <location line=\"+5\"/>\n-        <source>%1 to %2</source>\n-        <translation>%1 a %2</translation>\n+        <location line=\"+2\"/>\n+        <source>or</source>\n+        <translation>o</translation>\n     </message>\n     <message>\n-        <location line=\"+26\"/>\n+        <location line=\"+202\"/>\n         <source>The recipient address is not valid, please recheck.</source>\n         <translation>La direcci\u00f3n de recepci\u00f3n no es v\u00e1lida, compru\u00e9bela de nuevo.</translation>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n+        <location line=\"+3\"/>\n         <source>The amount to pay must be larger than 0.</source>\n         <translation>La cantidad por pagar tiene que ser mayor de 0.</translation>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n+        <location line=\"+3\"/>\n         <source>The amount exceeds your balance.</source>\n         <translation>La cantidad sobrepasa su saldo.</translation>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n+        <location line=\"+3\"/>\n         <source>The total exceeds your balance when the %1 transaction fee is included.</source>\n         <translation>El total sobrepasa su saldo cuando se incluye la tasa de env\u00edo de %1</translation>\n     </message>\n     <message>\n-        <location line=\"+5\"/>\n+        <location line=\"+3\"/>\n         <source>Duplicate address found, can only send to each address once per send operation.</source>\n         <translation>Se ha encontrado una direcci\u00f3n duplicada. Solo se puede enviar a cada direcci\u00f3n una vez por operaci\u00f3n de env\u00edo.</translation>\n     </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>Transaction creation failed!</source>\n+        <translation>\u00a1Ha fallado la creaci\u00f3n de la transacci\u00f3n!</translation>\n+    </message>\n     <message>\n         <location line=\"+4\"/>\n-        <source>Error: Transaction creation failed!</source>\n-        <translation>Error: \u00a1Ha fallado la creaci\u00f3n de la transacci\u00f3n!</translation>\n+        <source>The transaction was rejected! This might happen if some of the coins in your wallet were already spent, such as if you used a copy of wallet.dat and coins were spent in the copy but not marked as spent here.</source>\n+        <translation>La transacci\u00f3n fue rechazada. Esto puede haber ocurrido si alguna de las monedas ya estaba gastada o si ha usado una copia de wallet.dat y las monedas se gastaron en la copia pero no se han marcado como gastadas aqui.</translation>\n     </message>\n     <message>\n-        <location line=\"+15\"/>\n+        <location line=\"+113\"/>\n+        <source>Warning: Invalid Bitcoin address</source>\n+        <translation>Alerta: Direcci\u00f3n de Bitcoin inv\u00e1lida</translation>\n+    </message>\n+    <message>\n+        <location line=\"+13\"/>\n+        <source>(no label)</source>\n+        <translation>(sin etiqueta)</translation>\n+    </message>\n+    <message>\n+        <location line=\"+8\"/>\n+        <source>Warning: Unknown change address</source>\n+        <translation>Alerta: Direcci\u00f3n de Bitcoin inv\u00e1lida</translation>\n+    </message>\n+    <message>\n+        <location line=\"-378\"/>\n         <source>Are you sure you want to send?</source>\n         <translation>\u00bfEst\u00e1 seguro que desea enviar?</translation>\n     </message>\n@@ -1721,17 +2254,7 @@ Direcci\u00f3n: %4\n         <translation>a\u00f1adido como comisi\u00f3n de transacci\u00f3n</translation>\n     </message>\n     <message>\n-        <location line=\"+6\"/>\n-        <source>Total Amount %1</source>\n-        <translation>Monto Total 1%</translation>\n-    </message>\n-    <message>\n-        <location line=\"+20\"/>\n-        <source>Error: The transaction was rejected. This might happen if some of the coins in your wallet were already spent, such as if you used a copy of wallet.dat and coins were spent in the copy but not marked as spent here.</source>\n-        <translation>Error: transacci\u00f3n rechazada. Puede haber ocurrido si alguna de las monedas ya estaba gastada o si ha usado una copia de wallet.dat y las monedas se gastaron en la copia pero no se han marcado as\u00ed aqu\u00ed.</translation>\n-    </message>\n-    <message>\n-        <location line=\"+144\"/>\n+        <location line=\"+170\"/>\n         <source>Payment request expired</source>\n         <translation>Petici\u00f3n de pago expirada</translation>\n     </message>\n@@ -1744,39 +2267,44 @@ Direcci\u00f3n: %4\n <context>\n     <name>SendCoinsEntry</name>\n     <message>\n-        <location filename=\"../forms/sendcoinsentry.ui\" line=\"+33\"/>\n-        <location line=\"+585\"/>\n+        <location filename=\"../forms/sendcoinsentry.ui\" line=\"+131\"/>\n+        <location line=\"+501\"/>\n+        <location line=\"+536\"/>\n         <source>A&amp;mount:</source>\n         <translation>Ca&amp;ntidad:</translation>\n     </message>\n     <message>\n-        <location line=\"-572\"/>\n-        <location line=\"+585\"/>\n+        <location line=\"-1132\"/>\n         <source>Pay &amp;To:</source>\n         <translation>&amp;Pagar a:</translation>\n     </message>\n     <message>\n-        <location line=\"-551\"/>\n+        <location line=\"+18\"/>\n         <source>The address to send the payment to (e.g. 1NS17iag9jJgTHD1VXjvLCEnZuQ3rJDE9L)</source>\n         <translation>La direcci\u00f3n a la que enviar el pago (p. ej. 1NS17iag9jJgTHD1VXjvLCEnZuQ3rJDE9L)</translation>\n     </message>\n     <message>\n-        <location filename=\"../sendcoinsentry.cpp\" line=\"+28\"/>\n+        <location filename=\"../sendcoinsentry.cpp\" line=\"+30\"/>\n         <source>Enter a label for this address to add it to your address book</source>\n         <translation>Etiquete esta direcci\u00f3n para a\u00f1adirla a la libreta</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/sendcoinsentry.ui\" line=\"-18\"/>\n+        <location filename=\"../forms/sendcoinsentry.ui\" line=\"+57\"/>\n         <source>&amp;Label:</source>\n         <translation>&amp;Etiqueta:</translation>\n     </message>\n     <message>\n-        <location line=\"+28\"/>\n+        <location line=\"-50\"/>\n         <source>Choose previously used address</source>\n         <translation>Escoger direcciones previamente usadas</translation>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n+        <location line=\"-40\"/>\n+        <source>This is a normal payment.</source>\n+        <translation>Esto es un pago ordinario.</translation>\n+    </message>\n+    <message>\n+        <location line=\"+50\"/>\n         <source>Alt+A</source>\n         <translation>Alt+A</translation>\n     </message>\n@@ -1792,16 +2320,35 @@ Direcci\u00f3n: %4\n     </message>\n     <message>\n         <location line=\"+7\"/>\n-        <source>Remove this recipient</source>\n-        <translation>Eliminar destinatario</translation>\n+        <location line=\"+504\"/>\n+        <location line=\"+536\"/>\n+        <source>Remove this entry</source>\n+        <translation>Eliminar esta transacci\u00f3n</translation>\n     </message>\n     <message>\n-        <location line=\"+16\"/>\n+        <location line=\"-40\"/>\n+        <source>This is a verified payment request.</source>\n+        <translation>Esto es una petici\u00f3n de pago verificado.</translation>\n+    </message>\n+    <message>\n+        <location line=\"-971\"/>\n         <source>Enter a label for this address to add it to the list of used addresses</source>\n         <translation>Introduce una etiqueta para esta direcci\u00f3n para a\u00f1adirla a la lista de direcciones utilizadas</translation>\n     </message>\n     <message>\n-        <location line=\"+465\"/>\n+        <location line=\"+439\"/>\n+        <source>This is an unverified payment request.</source>\n+        <translation>Esto es una petici\u00f3n de pago no verificado.</translation>\n+    </message>\n+    <message>\n+        <location line=\"+18\"/>\n+        <location line=\"+532\"/>\n+        <source>Pay To:</source>\n+        <translation>Paga a:</translation>\n+    </message>\n+    <message>\n+        <location line=\"-498\"/>\n+        <location line=\"+536\"/>\n         <source>Memo:</source>\n         <translation>Memo:</translation>\n     </message>\n@@ -1922,7 +2469,7 @@ Direcci\u00f3n: %4\n         <translation>Limpiar todos los campos de la verificaci\u00f3n de mensaje</translation>\n     </message>\n     <message>\n-        <location filename=\"../signverifymessagedialog.cpp\" line=\"+27\"/>\n+        <location filename=\"../signverifymessagedialog.cpp\" line=\"+29\"/>\n         <location line=\"+3\"/>\n         <source>Enter a Bitcoin address (e.g. 1NS17iag9jJgTHD1VXjvLCEnZuQ3rJDE9L)</source>\n         <translation>Introduzca una direcci\u00f3n Bitcoin (ej. 1NS17iag9jJgTHD1VXjvLCEnZuQ3rJDE9L)</translation>\n@@ -1938,7 +2485,7 @@ Direcci\u00f3n: %4\n         <translation>Introduzca una firma Bitcoin</translation>\n     </message>\n     <message>\n-        <location line=\"+85\"/>\n+        <location line=\"+84\"/>\n         <location line=\"+81\"/>\n         <source>The entered address is invalid.</source>\n         <translation>La direcci\u00f3n introducida es inv\u00e1lida.</translation>\n@@ -2007,9 +2554,14 @@ Direcci\u00f3n: %4\n <context>\n     <name>SplashScreen</name>\n     <message>\n-        <location filename=\"../splashscreen.cpp\" line=\"+23\"/>\n-        <source>The Bitcoin developers</source>\n-        <translation>Los programadores Bitcoin</translation>\n+        <location filename=\"../splashscreen.cpp\" line=\"+26\"/>\n+        <source>Bitcoin Core</source>\n+        <translation>N\u00facleo de Bitcoin</translation>\n+    </message>\n+    <message>\n+        <location line=\"+2\"/>\n+        <source>The Bitcoin Core developers</source>\n+        <translation>Los desarrolladores del N\u00facleo de Bitcoin</translation>\n     </message>\n     <message>\n         <location line=\"+1\"/>\n@@ -2020,15 +2572,15 @@ Direcci\u00f3n: %4\n <context>\n     <name>TrafficGraphWidget</name>\n     <message>\n-        <location filename=\"../trafficgraphwidget.cpp\" line=\"+75\"/>\n+        <location filename=\"../trafficgraphwidget.cpp\" line=\"+79\"/>\n         <source>KB/s</source>\n         <translation>KB/s</translation>\n     </message>\n </context>\n <context>\n     <name>TransactionDesc</name>\n     <message>\n-        <location filename=\"../transactiondesc.cpp\" line=\"+22\"/>\n+        <location filename=\"../transactiondesc.cpp\" line=\"+28\"/>\n         <source>Open until %1</source>\n         <translation>Abierto hasta %1</translation>\n     </message>\n@@ -2220,7 +2772,7 @@ Direcci\u00f3n: %4\n <context>\n     <name>TransactionTableModel</name>\n     <message>\n-        <location filename=\"../transactiontablemodel.cpp\" line=\"+227\"/>\n+        <location filename=\"../transactiontablemodel.cpp\" line=\"+234\"/>\n         <source>Date</source>\n         <translation>Fecha</translation>\n     </message>\n@@ -2338,7 +2890,7 @@ Direcci\u00f3n: %4\n <context>\n     <name>TransactionView</name>\n     <message>\n-        <location filename=\"../transactionview.cpp\" line=\"+52\"/>\n+        <location filename=\"../transactionview.cpp\" line=\"+57\"/>\n         <location line=\"+16\"/>\n         <source>All</source>\n         <translation>Todo</translation>\n@@ -2399,12 +2951,12 @@ Direcci\u00f3n: %4\n         <translation>Otra</translation>\n     </message>\n     <message>\n-        <location line=\"+7\"/>\n+        <location line=\"+6\"/>\n         <source>Enter address or label to search</source>\n         <translation>Introduzca una direcci\u00f3n o etiqueta que buscar</translation>\n     </message>\n     <message>\n-        <location line=\"+7\"/>\n+        <location line=\"+6\"/>\n         <source>Min amount</source>\n         <translation>Cantidad m\u00ednima</translation>\n     </message>\n@@ -2439,17 +2991,37 @@ Direcci\u00f3n: %4\n         <translation>Mostrar detalles de la transacci\u00f3n</translation>\n     </message>\n     <message>\n-        <location line=\"+143\"/>\n-        <source>Export Transaction Data</source>\n-        <translation>Exportar datos de la transacci\u00f3n</translation>\n+        <location line=\"+142\"/>\n+        <source>Export Transaction History</source>\n+        <translation>Exportar historial de transacciones</translation>\n     </message>\n     <message>\n-        <location line=\"+1\"/>\n+        <location line=\"+19\"/>\n+        <source>Exporting Failed</source>\n+        <translation>Error exportando</translation>\n+    </message>\n+    <message>\n+        <location line=\"+0\"/>\n+        <source>There was an error trying to save the transaction history to %1.</source>\n+        <translation>Ha habido un error al intentar guardar la transacci\u00f3n con %1.</translation>\n+    </message>\n+    <message>\n+        <location line=\"+4\"/>\n+        <source>Exporting Successful</source>\n+        <translation>Exportaci\u00f3n finalizada</translation>\n+    </message>\n+    <message>\n+        <location line=\"+0\"/>\n+        <source>The transaction history was successfully saved to %1.</source>\n+        <translation>La transacci\u00f3n ha sido guardada en %1.</translation>\n+    </message>\n+    <message>\n+        <location line=\"-22\"/>\n         <source>Comma separated file (*.csv)</source>\n         <translation>Archivos de columnas separadas por coma (*.csv)</translation>\n     </message>\n     <message>\n-        <location line=\"+8\"/>\n+        <location line=\"+9\"/>\n         <source>Confirmed</source>\n         <translation>Confirmado</translation>\n     </message>\n@@ -2484,17 +3056,7 @@ Direcci\u00f3n: %4\n         <translation>ID</translation>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n-        <source>Error exporting</source>\n-        <translation>Error exportando</translation>\n-    </message>\n-    <message>\n-        <location line=\"+0\"/>\n-        <source>Could not write to file %1.</source>\n-        <translation>No se pudo escribir en el archivo %1.</translation>\n-    </message>\n-    <message>\n-        <location line=\"+100\"/>\n+        <location line=\"+107\"/>\n         <source>Range:</source>\n         <translation>Rango:</translation>\n     </message>\n@@ -2504,18 +3066,26 @@ Direcci\u00f3n: %4\n         <translation>para</translation>\n     </message>\n </context>\n+<context>\n+    <name>WalletFrame</name>\n+    <message>\n+        <location filename=\"../walletframe.cpp\" line=\"+26\"/>\n+        <source>No wallet has been loaded.</source>\n+        <translation>No se ha cargado ning\u00fan monedero</translation>\n+    </message>\n+</context>\n <context>\n     <name>WalletModel</name>\n     <message>\n-        <location filename=\"../walletmodel.cpp\" line=\"+218\"/>\n+        <location filename=\"../walletmodel.cpp\" line=\"+245\"/>\n         <source>Send Coins</source>\n         <translation>Enviar monedas</translation>\n     </message>\n </context>\n <context>\n     <name>WalletView</name>\n     <message>\n-        <location filename=\"../walletview.cpp\" line=\"+46\"/>\n+        <location filename=\"../walletview.cpp\" line=\"+43\"/>\n         <source>&amp;Export</source>\n         <translation>&amp;Exportar</translation>\n     </message>\n@@ -2525,68 +3095,63 @@ Direcci\u00f3n: %4\n         <translation>Exportar a un archivo los datos de esta pesta\u00f1a</translation>\n     </message>\n     <message>\n-        <location line=\"+183\"/>\n+        <location line=\"+181\"/>\n         <source>Backup Wallet</source>\n         <translation>Respaldo de monedero</translation>\n     </message>\n     <message>\n-        <location line=\"+0\"/>\n+        <location line=\"+1\"/>\n         <source>Wallet Data (*.dat)</source>\n         <translation>Datos de monedero (*.dat)</translation>\n     </message>\n     <message>\n-        <location line=\"+3\"/>\n+        <location line=\"+6\"/>\n         <source>Backup Failed</source>\n         <translation>Ha fallado el respaldo</translation>\n     </message>\n     <message>\n         <location line=\"+0\"/>\n-        <source>There was an error trying to save the wallet data to the new location.</source>\n-        <translation>Se ha producido un error al intentar guardar los datos del monedero en la nueva ubicaci\u00f3n.</translation>\n+        <source>There was an error trying to save the wallet data to %1.</source>\n+        <translation>Ha habido un error al intentar guardar los datos del monedero en %1.</translation>\n     </message>\n     <message>\n         <location line=\"+4\"/>\n-        <source>Backup Successful</source>\n-        <translation>Se ha completado con \u00e9xito la copia de respaldo</translation>\n+        <source>The wallet data was successfully saved to %1.</source>\n+        <translation>Los datos del monedero se han guardado con \u00e9xito en %1.</translation>\n     </message>\n     <message>\n         <location line=\"+0\"/>\n-        <source>The wallet data was successfully saved to the new location.</source>\n-        <translation>Los datos del monedero se han guardado con \u00e9xito en la nueva ubicaci\u00f3n.</translation>\n+        <source>Backup Successful</source>\n+        <translation>Se ha completado con \u00e9xito la copia de respaldo</translation>\n     </message>\n </context>\n <context>\n     <name>bitcoin-core</name>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"+102\"/>\n-        <source>Bitcoin version</source>\n-        <translation>Versi\u00f3n de Bitcoin</translation>\n-    </message>\n-    <message>\n-        <location line=\"+107\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"+217\"/>\n         <source>Usage:</source>\n         <translation>Uso:</translation>\n     </message>\n     <message>\n-        <location line=\"-55\"/>\n+        <location line=\"-54\"/>\n         <source>List commands</source>\n         <translation>Muestra comandos\n </translation>\n     </message>\n     <message>\n-        <location line=\"-13\"/>\n+        <location line=\"-14\"/>\n         <source>Get help for a command</source>\n         <translation>Recibir ayuda para un comando\n </translation>\n     </message>\n     <message>\n-        <location line=\"+25\"/>\n+        <location line=\"+26\"/>\n         <source>Options:</source>\n         <translation>Opciones:\n </translation>\n     </message>\n     <message>\n-        <location line=\"+24\"/>\n+        <location line=\"+23\"/>\n         <source>Specify configuration file (default: bitcoin.conf)</source>\n         <translation>Especificar archivo de configuraci\u00f3n (predeterminado: bitcoin.conf)\n </translation>\n@@ -2608,7 +3173,7 @@ Direcci\u00f3n: %4\n         <translation>Establecer el tama\u00f1o de cach\u00e9 de la base de datos en megabytes (predeterminado: 25)</translation>\n     </message>\n     <message>\n-        <location line=\"-28\"/>\n+        <location line=\"-27\"/>\n         <source>Listen for connections on &lt;port&gt; (default: 8333 or testnet: 18333)</source>\n         <translation>Escuchar conexiones en &lt;puerto&gt; (predeterminado: 8333 o testnet: 18333)</translation>\n     </message>\n@@ -2618,7 +3183,7 @@ Direcci\u00f3n: %4\n         <translation>Mantener como m\u00e1ximo &lt;n&gt; conexiones a pares (predeterminado: 125)</translation>\n     </message>\n     <message>\n-        <location line=\"-49\"/>\n+        <location line=\"-50\"/>\n         <source>Connect to a node to retrieve peer addresses, and disconnect</source>\n         <translation>Conectar a un nodo para obtener direcciones de pares y desconectar</translation>\n     </message>\n@@ -2633,7 +3198,7 @@ Direcci\u00f3n: %4\n         <translation>Umbral para la desconexi\u00f3n de pares con mal comportamiento (predeterminado: 100)</translation>\n     </message>\n     <message>\n-        <location line=\"-142\"/>\n+        <location line=\"-147\"/>\n         <source>Number of seconds to keep misbehaving peers from reconnecting (default: 86400)</source>\n         <translation>N\u00famero de segundos en que se evita la reconexi\u00f3n de pares con mal comportamiento (predeterminado: 86400)</translation>\n     </message>\n@@ -2648,30 +3213,30 @@ Direcci\u00f3n: %4\n         <translation>Escuchar conexiones JSON-RPC en &lt;puerto&gt; (predeterminado: 8332 o testnet:18332)</translation>\n     </message>\n     <message>\n-        <location line=\"+40\"/>\n+        <location line=\"+45\"/>\n         <source>Accept command line and JSON-RPC commands</source>\n         <translation>Aceptar comandos consola y JSON-RPC\n </translation>\n     </message>\n     <message>\n         <location line=\"+79\"/>\n         <source>Run in the background as a daemon and accept commands</source>\n-        <translation>Correr como demonio y aceptar comandos\n+        <translation>Ejecutar en segundo plano como daemon y aceptar comandos\n </translation>\n     </message>\n     <message>\n-        <location line=\"+40\"/>\n+        <location line=\"+39\"/>\n         <source>Use the test network</source>\n         <translation>Usar la red de pruebas\n </translation>\n     </message>\n     <message>\n-        <location line=\"-118\"/>\n+        <location line=\"-117\"/>\n         <source>Accept connections from outside (default: 1 if no -proxy or -connect)</source>\n         <translation>Aceptar conexiones desde el exterior (predeterminado: 1 si no -proxy o -connect)</translation>\n     </message>\n     <message>\n-        <location line=\"-87\"/>\n+        <location line=\"-92\"/>\n         <source>%s, you must set a rpcpassword in the configuration file:\n %s\n It is recommended you use the following random password:\n@@ -2736,17 +3301,17 @@ Por ejemplo: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>Ejecutar comando cuando una transacci\u00f3n del monedero cambia (%s en cmd se remplazar\u00e1 por TxID)</translation>\n     </message>\n     <message>\n-        <location line=\"+11\"/>\n-        <source>Set maximum size of high-priority/low-fee transactions in bytes (default: 27000)</source>\n-        <translation>Establecer el tama\u00f1o m\u00e1ximo de las transacciones de alta prioridad/comisi\u00f3n baja en bytes (predeterminado:27000)</translation>\n-    </message>\n-    <message>\n-        <location line=\"+6\"/>\n+        <location line=\"+18\"/>\n         <source>This is a pre-release test build - use at your own risk - do not use for mining or merchant applications</source>\n         <translation>Esta es una versi\u00f3n de pre-prueba - util\u00edcela bajo su propio riesgo. No la utilice para usos comerciales o de miner\u00eda.</translation>\n     </message>\n     <message>\n         <location line=\"+5\"/>\n+        <source>Use separate SOCKS5 proxy to reach peers via Tor hidden services (default: -proxy)</source>\n+        <translation>Usar distintos proxys SOCKS5 para comunicarse v\u00eda Tor de forma an\u00f3nima (Por defecto: -proxy)</translation>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n         <source>Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.</source>\n         <translation>Aviso: \u00a1-paytxfee tiene un valor muy alto! Esta es la comisi\u00f3n que pagar\u00e1 si env\u00eda una transacci\u00f3n.</translation>\n     </message>\n@@ -2776,17 +3341,27 @@ Por ejemplo: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>Aviso: \u00a1Recuperados datos de wallet.dat corrupto! El wallet.dat original se ha guardado como wallet.{timestamp}.bak en %s; si hubiera errores en su saldo o transacciones, deber\u00e1 restaurar una copia de seguridad.</translation>\n     </message>\n     <message>\n-        <location line=\"+14\"/>\n+        <location line=\"+9\"/>\n+        <source>&lt;category&gt; can be:</source>\n+        <translation>&lt;category&gt; puede ser:</translation>\n+    </message>\n+    <message>\n+        <location line=\"+6\"/>\n         <source>Attempt to recover private keys from a corrupt wallet.dat</source>\n         <translation>Intento de recuperar claves privadas de un wallet.dat corrupto</translation>\n     </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Bitcoin Core Daemon</source>\n+        <translation>Proceso Bitcoin-QT</translation>\n+    </message>\n     <message>\n         <location line=\"+1\"/>\n         <source>Bitcoin RPC client version</source>\n         <translation>Versi\u00f3n de cliente BitcoinROC</translation>\n     </message>\n     <message>\n-        <location line=\"+2\"/>\n+        <location line=\"+1\"/>\n         <source>Block creation options:</source>\n         <translation>Opciones de creaci\u00f3n de bloques:</translation>\n     </message>\n@@ -2796,7 +3371,12 @@ Por ejemplo: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>Conectar s\u00f3lo a los nodos (o nodo) especificados</translation>\n     </message>\n     <message>\n-        <location line=\"+2\"/>\n+        <location line=\"+1\"/>\n+        <source>Connect through SOCKS proxy</source>\n+        <translation>Conectar a trav\u00e9s de un proxy SOCKS</translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n         <source>Connect to JSON-RPC on &lt;port&gt; (default: 8332 or testnet: 18332)</source>\n         <translation>Conectar a JSON-RPC en &lt;puerto&gt; (predeterminado: 8332 o testnet: 18332)</translation>\n     </message>\n@@ -2906,7 +3486,12 @@ Por ejemplo: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>No se han podido escribir los datos de deshacer</translation>\n     </message>\n     <message>\n-        <location line=\"+2\"/>\n+        <location line=\"+1\"/>\n+        <source>Fee per kB to add to transactions you send</source>\n+        <translation>Donaci\u00f3n por KB a\u00f1adida a las transacciones que env\u00ede</translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n         <source>Find peers using DNS lookup (default: 1 unless -connect)</source>\n         <translation>Encontrar pares mediante b\u00fasqueda de DNS (predeterminado: 1 salvo con -connect)</translation>\n     </message>\n@@ -2925,6 +3510,11 @@ Por ejemplo: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <source>How thorough the block verification is (0-4, default: 3)</source>\n         <translation>Como es de exhaustiva la verificaci\u00f3n de bloques (0-4, por defecto 3)</translation>\n     </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>If &lt;category&gt; is not supplied, output all debugging information.</source>\n+        <translation>Si no se proporciona &lt;category&gt;, mostrar toda la depuraci\u00f3n</translation>\n+    </message>\n     <message>\n         <location line=\"+2\"/>\n         <source>Incorrect or no genesis block found. Wrong datadir for network?</source>\n@@ -2941,17 +3531,37 @@ Por ejemplo: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>No hay suficientes descriptores de archivo disponibles. </translation>\n     </message>\n     <message>\n-        <location line=\"+8\"/>\n+        <location line=\"+5\"/>\n+        <source>Prepend debug output with timestamp (default: 1)</source>\n+        <translation>Anteponer marca temporal a la informaci\u00f3n de depuraci\u00f3n (por defecto: 1)</translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>RPC client options:</source>\n+        <translation>Opciones para cliente RPC:</translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n         <source>Rebuild block chain index from current blk000??.dat files</source>\n         <translation>Reconstruir el \u00edndice de la cadena de bloques a partir de los archivos blk000??.dat actuales</translation>\n     </message>\n     <message>\n-        <location line=\"+6\"/>\n+        <location line=\"+5\"/>\n+        <source>Select SOCKS version for -proxy (4 or 5, default: 5)</source>\n+        <translation>Seleccionar version de SOCKS para -proxy (4 o 5, por defecto: 5)</translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n         <source>Send command to Bitcoin server</source>\n         <translation>Enviar comando a servidor Bitcoin</translation>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n+        <location line=\"+8\"/>\n+        <source>Set maximum block size in bytes (default: %d)</source>\n+        <translation>Establecer tama\u00f1o m\u00e1ximo de bloque en bytes (por defecto: %d)</translation>\n+    </message>\n+    <message>\n+        <location line=\"+2\"/>\n         <source>Set the number of threads to service RPC calls (default: 4)</source>\n         <translation>Establecer el n\u00famero de hilos para atender las llamadas RPC (predeterminado: 4)</translation>\n     </message>\n@@ -2971,7 +3581,7 @@ Por ejemplo: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>Uso (desaconsejado, usar bitcoin-cli)</translation>\n     </message>\n     <message>\n-        <location line=\"+8\"/>\n+        <location line=\"+7\"/>\n         <source>Verifying blocks...</source>\n         <translation>Verificando bloques...</translation>\n     </message>\n@@ -2980,13 +3590,23 @@ Por ejemplo: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <source>Verifying wallet...</source>\n         <translation>Verificando monedero...</translation>\n     </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Wait for RPC server to start</source>\n+        <translation>Espere a que se inicie el servidor RPC</translation>\n+    </message>\n     <message>\n         <location line=\"+1\"/>\n         <source>Wallet %s resides outside data directory %s</source>\n         <translation>El monedero %s se encuentra fuera del directorio de datos %s</translation>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n+        <location line=\"+3\"/>\n+        <source>Warning: Deprecated argument -debugnet ignored, use -debug=net</source>\n+        <translation>Aviso: Argumento -debugnet anticuado, utilice -debug=net</translation>\n+    </message>\n+    <message>\n+        <location line=\"+2\"/>\n         <source>You need to rebuild the database using -reindex to change -txindex</source>\n         <translation>Usted necesita reconstruir la base de datos utilizando -reindex para cambiar -txindex</translation>\n     </message>\n@@ -2996,17 +3616,27 @@ Por ejemplo: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>Importa los bloques desde un archivo blk000??.dat externo</translation>\n     </message>\n     <message>\n-        <location line=\"-98\"/>\n+        <location line=\"-104\"/>\n         <source>Execute command when a relevant alert is received or we see a really long fork (%s in cmd is replaced by message)</source>\n         <translation>Ejecutar un comando cuando se reciba una alerta importante o cuando veamos un fork demasiado largo (%s en cmd se reemplazar\u00e1 por el mensaje)</translation>\n     </message>\n     <message>\n-        <location line=\"+17\"/>\n+        <location line=\"+14\"/>\n+        <source>Output debugging information (default: 0, supplying &lt;category&gt; is optional)</source>\n+        <translation>Mostrar depuraci\u00f3n (por defecto: 0, proporcionar &lt;category&gt; es opcional)</translation>\n+    </message>\n+    <message>\n+        <location line=\"+2\"/>\n+        <source>Set maximum size of high-priority/low-fee transactions in bytes (default: %d)</source>\n+        <translation>Establecer tama\u00f1o m\u00e1ximo de las transacciones de alta prioridad/comisi\u00f3n baja en bytes (por defecto: %d)</translation>\n+    </message>\n+    <message>\n+        <location line=\"+2\"/>\n         <source>Set the number of script verification threads (up to 16, 0 = auto, &lt;0 = leave that many cores free, default: 0)</source>\n         <translation>Configura el n\u00famero de hilos para el script de verificaci\u00f3n (hasta 16, 0 = auto, &lt;0 = leave that many cores free, por fecto: 0)</translation>\n     </message>\n     <message>\n-        <location line=\"+83\"/>\n+        <location line=\"+88\"/>\n         <source>Information</source>\n         <translation>Informaci\u00f3n</translation>\n     </message>\n@@ -3046,32 +3676,12 @@ Por ejemplo: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>Conectarse solo a nodos de la red &lt;net&gt; (IPv4, IPv6 o Tor)</translation>\n     </message>\n     <message>\n-        <location line=\"+2\"/>\n-        <source>Output extra debugging information. Implies all other -debug* options</source>\n-        <translation>Mostrar informaci\u00f3n de depuraci\u00f3n adicional. Implica todos los dem\u00e1s opciones -debug*</translation>\n-    </message>\n-    <message>\n-        <location line=\"+1\"/>\n-        <source>Output extra network debugging information</source>\n-        <translation>Mostrar informaci\u00f3n de depuraci\u00f3n adicional</translation>\n-    </message>\n-    <message>\n-        <location line=\"+2\"/>\n-        <source>Prepend debug output with timestamp</source>\n-        <translation>Anteponer marca temporal a la informaci\u00f3n de depuraci\u00f3n</translation>\n-    </message>\n-    <message>\n-        <location line=\"+5\"/>\n+        <location line=\"+9\"/>\n         <source>SSL options: (see the Bitcoin Wiki for SSL setup instructions)</source>\n         <translation>Opciones SSL: (ver la Bitcoin Wiki para instrucciones de configuraci\u00f3n SSL)</translation>\n     </message>\n     <message>\n-        <location line=\"+1\"/>\n-        <source>Select the version of socks proxy to use (4-5, default: 5)</source>\n-        <translation>Elija la versi\u00f3n del proxy socks a usar (4-5, predeterminado: 5)</translation>\n-    </message>\n-    <message>\n-        <location line=\"+3\"/>\n+        <location line=\"+4\"/>\n         <source>Send trace/debug info to console instead of debug.log file</source>\n         <translation>Enviar informaci\u00f3n de trazas/depuraci\u00f3n a la consola en lugar de al archivo debug.log</translation>\n     </message>\n@@ -3081,12 +3691,7 @@ Por ejemplo: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>Enviar informaci\u00f3n de trazas/depuraci\u00f3n al depurador</translation>\n     </message>\n     <message>\n-        <location line=\"+5\"/>\n-        <source>Set maximum block size in bytes (default: 250000)</source>\n-        <translation>Establecer tama\u00f1o m\u00e1ximo de bloque en bytes (predeterminado: 250000)</translation>\n-    </message>\n-    <message>\n-        <location line=\"+1\"/>\n+        <location line=\"+6\"/>\n         <source>Set minimum block size in bytes (default: 0)</source>\n         <translation>Establecer tama\u00f1o m\u00ednimo de bloque en bytes (predeterminado: 0)</translation>\n     </message>\n@@ -3135,40 +3740,40 @@ Por ejemplo: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <source>Use UPnP to map the listening port (default: 1 when listening)</source>\n         <translation>Usar UPnP para asignar el puerto de escucha (predeterminado: 1 al escuchar)</translation>\n     </message>\n-    <message>\n-        <location line=\"+1\"/>\n-        <source>Use proxy to reach tor hidden services (default: same as -proxy)</source>\n-        <translation>Utilizar proxy para conectar a Tor servicios ocultos (predeterminado: igual que -proxy)</translation>\n-    </message>\n     <message>\n         <location line=\"+2\"/>\n         <source>Username for JSON-RPC connections</source>\n         <translation>Nombre de usuario para las conexiones JSON-RPC\n </translation>\n     </message>\n     <message>\n-        <location line=\"+5\"/>\n+        <location line=\"+6\"/>\n         <source>Warning</source>\n         <translation>Aviso</translation>\n     </message>\n     <message>\n-        <location line=\"+1\"/>\n+        <location line=\"+2\"/>\n         <source>Warning: This version is obsolete, upgrade required!</source>\n         <translation>Aviso: Esta versi\u00f3n es obsoleta, actualizaci\u00f3n necesaria!</translation>\n     </message>\n     <message>\n         <location line=\"+2\"/>\n+        <source>version</source>\n+        <translation>versi\u00f3n</translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n         <source>wallet.dat corrupt, salvage failed</source>\n         <translation>wallet.dat corrupto. Ha fallado la recuperaci\u00f3n.</translation>\n     </message>\n     <message>\n-        <location line=\"-54\"/>\n+        <location line=\"-57\"/>\n         <source>Password for JSON-RPC connections</source>\n         <translation>Contrase\u00f1a para las conexiones JSON-RPC\n </translation>\n     </message>\n     <message>\n-        <location line=\"-70\"/>\n+        <location line=\"-69\"/>\n         <source>Allow JSON-RPC connections from specified IP address</source>\n         <translation>Permitir conexiones JSON-RPC desde la direcci\u00f3n IP especificada\n </translation>\n@@ -3180,12 +3785,12 @@ Por ejemplo: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n </translation>\n     </message>\n     <message>\n-        <location line=\"-126\"/>\n+        <location line=\"-131\"/>\n         <source>Execute command when the best block changes (%s in cmd is replaced by block hash)</source>\n         <translation>Ejecutar un comando cuando cambia el mejor bloque (%s en cmd se sustituye por el hash de bloque)</translation>\n     </message>\n     <message>\n-        <location line=\"+155\"/>\n+        <location line=\"+160\"/>\n         <source>Upgrade wallet to latest format</source>\n         <translation>Actualizar el monedero al \u00faltimo formato</translation>\n     </message>\n@@ -3230,22 +3835,17 @@ Por ejemplo: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>No es posible conectar con %s en este sistema (bind ha dado el error %d, %s)</translation>\n     </message>\n     <message>\n-        <location line=\"-95\"/>\n-        <source>Connect through socks proxy</source>\n-        <translation>Conectar mediante proxy socks</translation>\n-    </message>\n-    <message>\n-        <location line=\"-11\"/>\n+        <location line=\"-106\"/>\n         <source>Allow DNS lookups for -addnode, -seednode and -connect</source>\n         <translation>Permitir b\u00fasquedas DNS para -addnode, -seednode y -connect</translation>\n     </message>\n     <message>\n-        <location line=\"+58\"/>\n+        <location line=\"+59\"/>\n         <source>Loading addresses...</source>\n         <translation>Cargando direcciones...</translation>\n     </message>\n     <message>\n-        <location line=\"-36\"/>\n+        <location line=\"-37\"/>\n         <source>Error loading wallet.dat: Wallet corrupted</source>\n         <translation>Error al cargar wallet.dat: el monedero est\u00e1 da\u00f1ado</translation>\n     </message>\n@@ -3265,12 +3865,12 @@ Por ejemplo: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>Error al cargar wallet.dat</translation>\n     </message>\n     <message>\n-        <location line=\"+30\"/>\n+        <location line=\"+31\"/>\n         <source>Invalid -proxy address: &apos;%s&apos;</source>\n         <translation>Direcci\u00f3n -proxy inv\u00e1lida: &apos;%s&apos;</translation>\n     </message>\n     <message>\n-        <location line=\"+57\"/>\n+        <location line=\"+56\"/>\n         <source>Unknown network specified in -onlynet: &apos;%s&apos;</source>\n         <translation>La red especificada en -onlynet &apos;%s&apos; es desconocida</translation>\n     </message>\n@@ -3290,7 +3890,7 @@ Por ejemplo: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>No se puede resolver la direcci\u00f3n de -externalip: &apos;%s&apos;</translation>\n     </message>\n     <message>\n-        <location line=\"+46\"/>\n+        <location line=\"+47\"/>\n         <source>Invalid amount for -paytxfee=&lt;amount&gt;: &apos;%s&apos;</source>\n         <translation>Cantidad inv\u00e1lida para -paytxfee=&lt;amount&gt;: &apos;%s&apos;</translation>\n     </message>\n@@ -3310,27 +3910,22 @@ Por ejemplo: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>Cargando el \u00edndice de bloques...</translation>\n     </message>\n     <message>\n-        <location line=\"-60\"/>\n+        <location line=\"-61\"/>\n         <source>Add a node to connect to and attempt to keep the connection open</source>\n         <translation>A\u00f1adir un nodo al que conectarse y tratar de mantener la conexi\u00f3n abierta</translation>\n     </message>\n     <message>\n-        <location line=\"-28\"/>\n+        <location line=\"-32\"/>\n         <source>Unable to bind to %s on this computer. Bitcoin is probably already running.</source>\n         <translation>No es posible conectar con %s en este sistema. Probablemente Bitcoin ya est\u00e1 ejecut\u00e1ndose.</translation>\n     </message>\n     <message>\n-        <location line=\"+69\"/>\n-        <source>Fee per KB to add to transactions you send</source>\n-        <translation>Tarifa por KB que a\u00f1adir a las transacciones que env\u00ede</translation>\n-    </message>\n-    <message>\n-        <location line=\"+20\"/>\n+        <location line=\"+94\"/>\n         <source>Loading wallet...</source>\n         <translation>Cargando monedero...</translation>\n     </message>\n     <message>\n-        <location line=\"-54\"/>\n+        <location line=\"-55\"/>\n         <source>Cannot downgrade wallet</source>\n         <translation>No se puede rebajar el monedero</translation>\n     </message>\n@@ -3360,7 +3955,7 @@ Por ejemplo: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>Error</translation>\n     </message>\n     <message>\n-        <location line=\"-33\"/>\n+        <location line=\"-34\"/>\n         <source>You must set rpcpassword=&lt;password&gt; in the configuration file:\n %s\n If the file does not exist, create it with owner-readable-only file permissions.</source>"
      },
      {
        "sha": "5530114fd7302222e424dd9f419ea0a8b74dbba7",
        "filename": "src/qt/locale/bitcoin_es_MX.ts",
        "status": "added",
        "additions": 3926,
        "deletions": 0,
        "changes": 3926,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6d697e9fa45b3f3bf67d79cc3d17717b68a43825/src/qt/locale/bitcoin_es_MX.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6d697e9fa45b3f3bf67d79cc3d17717b68a43825/src/qt/locale/bitcoin_es_MX.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_es_MX.ts?ref=6d697e9fa45b3f3bf67d79cc3d17717b68a43825"
      },
      {
        "sha": "faf665f8f2a3aa0597defe351d0989af6c440560",
        "filename": "src/qt/locale/bitcoin_fa_IR.ts",
        "status": "modified",
        "additions": 1016,
        "deletions": 422,
        "changes": 1438,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6d697e9fa45b3f3bf67d79cc3d17717b68a43825/src/qt/locale/bitcoin_fa_IR.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6d697e9fa45b3f3bf67d79cc3d17717b68a43825/src/qt/locale/bitcoin_fa_IR.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_fa_IR.ts?ref=6d697e9fa45b3f3bf67d79cc3d17717b68a43825",
        "patch": "@@ -3,13 +3,13 @@\n     <name>AboutDialog</name>\n     <message>\n         <location filename=\"../forms/aboutdialog.ui\" line=\"+14\"/>\n-        <source>About Bitcoin</source>\n-        <translation>\u062f\u0631 \u0645\u0648\u0631\u062f \u0628\u06cc\u062a\u06a9\u0648\u06cc\u06cc\u0646</translation>\n+        <source>About Bitcoin Core</source>\n+        <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <location line=\"+39\"/>\n-        <source>&lt;b&gt;Bitcoin&lt;/b&gt; version</source>\n-        <translation>&lt;b&gt;Bitcoin&lt;/b&gt; version</translation>\n+        <source>&lt;b&gt;Bitcoin Core&lt;/b&gt; version</source>\n+        <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <location line=\"+57\"/>\n@@ -22,7 +22,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location filename=\"../aboutdialog.cpp\" line=\"+14\"/>\n+        <location filename=\"../aboutdialog.cpp\" line=\"+19\"/>\n         <source>Copyright</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -65,7 +65,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location filename=\"../addressbookpage.cpp\" line=\"+72\"/>\n+        <location filename=\"../addressbookpage.cpp\" line=\"+74\"/>\n         <source>&amp;Copy Address</source>\n         <translation>\u0648 \u06a9\u067e\u06cc \u0622\u062f\u0631\u0633</translation>\n     </message>\n@@ -135,7 +135,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation>\u0648 \u0648\u06cc\u0631\u0627\u06cc\u0634</translation>\n     </message>\n     <message>\n-        <location line=\"+197\"/>\n+        <location line=\"+194\"/>\n         <source>Export Address List</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -158,7 +158,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n <context>\n     <name>AddressTableModel</name>\n     <message>\n-        <location filename=\"../addresstablemodel.cpp\" line=\"+164\"/>\n+        <location filename=\"../addresstablemodel.cpp\" line=\"+168\"/>\n         <source>Label</source>\n         <translation>\u0628\u0631\u0686\u0633\u0628</translation>\n     </message>\n@@ -196,7 +196,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation>\u0631\u0645\u0632/\u067e\u064e\u0633 \u0641\u0631\u0650\u06cc\u0632 \u0631\u0627 \u062f\u0648\u0628\u0627\u0631\u0647 \u0648\u0627\u0631\u062f \u06a9\u0646\u06cc\u062f</translation>\n     </message>\n     <message>\n-        <location filename=\"../askpassphrasedialog.cpp\" line=\"+34\"/>\n+        <location filename=\"../askpassphrasedialog.cpp\" line=\"+40\"/>\n         <source>Enter the new passphrase to the wallet.&lt;br/&gt;Please use a passphrase of &lt;b&gt;10 or more random characters&lt;/b&gt;, or &lt;b&gt;eight or more words&lt;/b&gt;.</source>\n         <translation>\u0631\u0645\u0632/\u067e\u064e\u0633 \u0641\u0631\u0650\u06cc\u0632 \u062c\u062f\u06cc\u062f \u0631\u0627 \u062f\u0631 wallet \u0648\u0627\u0631\u062f \u06a9\u0646\u06cc\u062f. \u0628\u0631\u0627\u06cc \u0627\u0646\u062a\u062e\u0627\u0628 \u0631\u0645\u0632/\u067e\u064e\u0633 \u0641\u0631\u0650\u06cc\u0632 \u0627\u0632 10 \u06a9\u0627\u0631\u0627\u06a9\u062a\u0631 \u062a\u0635\u0627\u062f\u0641\u06cc \u06cc\u0627 \u0628\u06cc\u0634\u062a\u0631 \u0648 \u06cc\u0627 \u0647\u0634\u062a \u06a9\u0644\u0645\u0647 \u06cc\u0627 \u0628\u06cc\u0634\u062a\u0631 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u06a9\u0646\u06cc\u062f. </translation>\n     </message>\n@@ -317,17 +317,17 @@ This product includes software developed by the OpenSSL Project for use in the O\n <context>\n     <name>BitcoinGUI</name>\n     <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"+250\"/>\n+        <location filename=\"../bitcoingui.cpp\" line=\"+260\"/>\n         <source>Sign &amp;message...</source>\n         <translation>\u0627\u0645\u0636\u0627 \u0648 \u067e\u06cc\u0627\u0645</translation>\n     </message>\n     <message>\n-        <location line=\"+254\"/>\n+        <location line=\"+290\"/>\n         <source>Synchronizing with network...</source>\n         <translation>\u0628\u0647 \u0631\u0648\u0632 \u0631\u0633\u0627\u0646\u06cc \u0628\u0627 \u0634\u0628\u06a9\u0647...</translation>\n     </message>\n     <message>\n-        <location line=\"-324\"/>\n+        <location line=\"-360\"/>\n         <source>&amp;Overview</source>\n         <translation>\u0648 \u0628\u0627\u0632\u0628\u06cc\u0646\u06cc</translation>\n     </message>\n@@ -393,7 +393,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation>\u062a\u063a\u06cc\u06cc\u0631 \u0631\u0645\u0632/\u067e\u064e\u0633 \u0641\u0631\u0650\u06cc\u0632</translation>\n     </message>\n     <message>\n-        <location line=\"+259\"/>\n+        <location line=\"+295\"/>\n         <source>Importing blocks from disk...</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -403,7 +403,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-322\"/>\n+        <location line=\"-358\"/>\n         <source>Send coins to a Bitcoin address</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -438,20 +438,18 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-180\"/>\n-        <location line=\"+6\"/>\n-        <location line=\"+513\"/>\n+        <location line=\"+375\"/>\n         <source>Bitcoin</source>\n         <translation>bitcoin</translation>\n     </message>\n     <message>\n-        <location line=\"-519\"/>\n-        <location line=\"+6\"/>\n+        <location line=\"-563\"/>\n+        <location line=\"+10\"/>\n         <source>Wallet</source>\n         <translation>\u06a9\u06cc\u0641 \u067e\u0648\u0644</translation>\n     </message>\n     <message>\n-        <location line=\"+109\"/>\n+        <location line=\"+113\"/>\n         <source>&amp;Send</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -461,13 +459,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+28\"/>\n-        <location line=\"+2\"/>\n-        <source>&amp;About Bitcoin</source>\n-        <translation>&amp;\u062f\u0631 \u0645\u0648\u0631\u062f \u0628\u06cc\u062a\u06a9\u0648\u06cc\u06cc\u0646</translation>\n-    </message>\n-    <message>\n-        <location line=\"+14\"/>\n+        <location line=\"+44\"/>\n         <location line=\"+2\"/>\n         <source>&amp;Show / Hide</source>\n         <translation>&amp;\u0646\u0645\u0627\u06cc\u0634/ \u0639\u062f\u0645 \u0646\u0645\u0627\u06cc\u0634 \u0648</translation>\n@@ -493,12 +485,12 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+35\"/>\n+        <location line=\"+39\"/>\n         <source>&amp;File</source>\n         <translation>\u0648 \u0641\u0627\u06cc\u0644</translation>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n+        <location line=\"+11\"/>\n         <source>&amp;Settings</source>\n         <translation>\u0648 \u062a\u0646\u0638\u06cc\u0645\u0627\u062a</translation>\n     </message>\n@@ -513,18 +505,30 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation>\u0646\u0648\u0627\u0631 \u0627\u0628\u0632\u0627\u0631</translation>\n     </message>\n     <message>\n-        <location line=\"-235\"/>\n-        <location line=\"+294\"/>\n+        <location line=\"-244\"/>\n+        <location line=\"+321\"/>\n         <source>[testnet]</source>\n         <translation>[testnet]</translation>\n     </message>\n     <message>\n-        <location line=\"-177\"/>\n+        <location line=\"-331\"/>\n+        <location line=\"+10\"/>\n+        <source>Bitcoin Core</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+121\"/>\n         <source>Request payments (generates QR codes and bitcoin: URIs)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+63\"/>\n+        <location line=\"+27\"/>\n+        <location line=\"+2\"/>\n+        <source>&amp;About Bitcoin Core</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+34\"/>\n         <source>&amp;Used sending addresses...</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -544,13 +548,23 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+106\"/>\n+        <location line=\"+2\"/>\n+        <source>Open URI...</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Open a bitcoin: URI or payment request</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+126\"/>\n         <location line=\"+5\"/>\n         <source>Bitcoin client</source>\n         <translation>\u0645\u0634\u062a\u0631\u06cc bitcoin</translation>\n     </message>\n     <message numerus=\"yes\">\n-        <location line=\"+120\"/>\n+        <location line=\"+133\"/>\n         <source>%n active connection(s) to Bitcoin network</source>\n         <translation><numerusform>%n \u0627\u0631\u062a\u0628\u0627\u0637 \u0641\u0639\u0627\u0644 \u0628\u0647 \u0634\u0628\u06a9\u0647 Bitcoin\n %n \u0627\u0631\u062a\u0628\u0627\u0637 \u0641\u0639\u0627\u0644 \u0628\u0647 \u0634\u0628\u06a9\u0647 Bitcoin</numerusform></translation>\n@@ -656,17 +670,7 @@ Address: %4\n </translation>\n     </message>\n     <message>\n-        <location line=\"+34\"/>\n-        <source>URI handling</source>\n-        <translation type=\"unfinished\"/>\n-    </message>\n-    <message>\n-        <location line=\"+0\"/>\n-        <source>URI can not be parsed! This can be caused by an invalid Bitcoin address or malformed URI parameters.</source>\n-        <translation type=\"unfinished\"/>\n-    </message>\n-    <message>\n-        <location line=\"+45\"/>\n+        <location line=\"+67\"/>\n         <source>Wallet is &lt;b&gt;encrypted&lt;/b&gt; and currently &lt;b&gt;unlocked&lt;/b&gt;</source>\n         <translation>wallet \u0631\u0645\u0632\u06af\u0630\u0627\u0631\u06cc \u0634\u062f \u0648 \u062f\u0631 \u062d\u0627\u0644 \u062d\u0627\u0636\u0631 \u0627\u0632 \u062d\u0627\u0644\u062a \u0642\u0641\u0644 \u062f\u0631 \u0622\u0645\u062f\u0647 \u0627\u0633\u062a</translation>\n     </message>\n@@ -676,308 +680,633 @@ Address: %4\n         <translation>wallet \u0631\u0645\u0632\u06af\u0630\u0627\u0631\u06cc \u0634\u062f \u0648 \u062f\u0631 \u062d\u0627\u0644 \u062d\u0627\u0636\u0631 \u0642\u0641\u0644 \u0627\u0633\u062a</translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoin.cpp\" line=\"+110\"/>\n+        <location filename=\"../bitcoin.cpp\" line=\"+116\"/>\n         <source>A fatal error occurred. Bitcoin can no longer continue safely and will quit.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n </context>\n <context>\n     <name>ClientModel</name>\n     <message>\n-        <location filename=\"../clientmodel.cpp\" line=\"+115\"/>\n+        <location filename=\"../clientmodel.cpp\" line=\"+119\"/>\n         <source>Network Alert</source>\n         <translation>\u0647\u0634\u062f\u0627\u0631 \u0634\u0628\u06a9\u0647</translation>\n     </message>\n </context>\n <context>\n-    <name>EditAddressDialog</name>\n+    <name>CoinControlDialog</name>\n     <message>\n-        <location filename=\"../forms/editaddressdialog.ui\" line=\"+14\"/>\n-        <source>Edit Address</source>\n-        <translation>\u0648\u06cc\u0631\u0627\u06cc\u0634 \u062d\u0633\u0627\u0628</translation>\n+        <location filename=\"../forms/coincontroldialog.ui\" line=\"+14\"/>\n+        <source>Coin Control Address Selection</source>\n+        <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+11\"/>\n-        <source>&amp;Label</source>\n-        <translation>\u0648 \u0628\u0631\u0686\u0633\u0628</translation>\n+        <location line=\"+34\"/>\n+        <source>Quantity:</source>\n+        <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n-        <source>The label associated with this address list entry</source>\n+        <location line=\"+29\"/>\n+        <source>Bytes:</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+17\"/>\n-        <source>The address associated with this address list entry. This can only be modified for sending addresses.</source>\n+        <location line=\"+45\"/>\n+        <source>Amount:</source>\n+        <translation>\u0645\u06cc\u0632\u0627\u0646 \u0648\u062c\u0647:</translation>\n+    </message>\n+    <message>\n+        <location line=\"+29\"/>\n+        <source>Priority:</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-10\"/>\n-        <source>&amp;Address</source>\n-        <translation>\u062d\u0633\u0627\u0628&amp;</translation>\n+        <location line=\"+45\"/>\n+        <source>Fee:</source>\n+        <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location filename=\"../editaddressdialog.cpp\" line=\"+21\"/>\n-        <source>New receiving address</source>\n-        <translation>\u062d\u0633\u0627\u0628 \u062f\u0631\u06cc\u0627\u0641\u062a \u06a9\u0646\u0646\u062f\u0647 \u062c\u062f\u06cc\u062f\n-</translation>\n+        <location line=\"+32\"/>\n+        <source>Low Output:</source>\n+        <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n-        <source>New sending address</source>\n-        <translation>\u062d\u0633\u0627\u0628 \u0627\u0631\u0633\u0627\u0644 \u06a9\u0646\u0646\u062f\u0647 \u062c\u062f\u06cc\u062f</translation>\n+        <location line=\"+48\"/>\n+        <source>After Fee:</source>\n+        <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+3\"/>\n-        <source>Edit receiving address</source>\n-        <translation>\u0648\u06cc\u0631\u0627\u06cc\u0634 \u062d\u0633\u0627\u0628 \u062f\u0631\u06cc\u0627\u0641\u062a \u06a9\u0646\u0646\u062f\u0647</translation>\n+        <location line=\"+32\"/>\n+        <source>Change:</source>\n+        <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n-        <source>Edit sending address</source>\n-        <translation>\u0648\u06cc\u0631\u0627\u06cc\u0634 \u062d\u0633\u0627\u0628 \u0627\u0631\u0633\u0627\u0644 \u06a9\u0646\u0646\u062f\u0647</translation>\n+        <location line=\"+63\"/>\n+        <source>(un)select all</source>\n+        <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+76\"/>\n-        <source>The entered address &quot;%1&quot; is already in the address book.</source>\n-        <translation>\u062d\u0633\u0627\u0628 \u0648\u0627\u0631\u062f \u0634\u062f\u0647 \u00ab1%\u00bb \u0627\u0632 \u067e\u06cc\u0634 \u062f\u0631 \u062f\u0641\u062a\u0631\u0686\u0647 \u062d\u0633\u0627\u0628 \u0647\u0627 \u0645\u0648\u062c\u0648\u062f \u0627\u0633\u062a.</translation>\n+        <location line=\"+13\"/>\n+        <source>Tree mode</source>\n+        <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-5\"/>\n-        <source>The entered address &quot;%1&quot; is not a valid Bitcoin address.</source>\n-        <translation>\u0622\u062f\u0631\u0633 \u0648\u0627\u0631\u062f \u0634\u062f\u0647 &quot;%1&quot; \u06cc\u06a9 \u0622\u062f\u0631\u0633 \u0635\u062d\u06cc\u062d \u0628\u0631\u0627\u06cc bitcoin \u0646\u0633\u0634\u062a</translation>\n+        <location line=\"+16\"/>\n+        <source>List mode</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+52\"/>\n+        <source>Amount</source>\n+        <translation>\u0645\u06cc\u0632\u0627\u0646</translation>\n     </message>\n     <message>\n         <location line=\"+10\"/>\n-        <source>Could not unlock wallet.</source>\n-        <translation>\u0639\u062f\u0645 \u062a\u0648\u0627\u0646\u06cc\u06cc \u0628\u0631\u0627\u06cc \u0642\u0641\u0644 \u06af\u0634\u0627\u06cc\u06cc wallet</translation>\n+        <source>Address</source>\n+        <translation>\u062d\u0633\u0627\u0628</translation>\n     </message>\n     <message>\n         <location line=\"+5\"/>\n-        <source>New key generation failed.</source>\n-        <translation>\u0639\u062f\u0645 \u062a\u0648\u0627\u0646\u06cc\u06cc \u062f\u0631 \u0627\u06cc\u062c\u0627\u062f \u06a9\u0644\u06cc\u062f \u062c\u062f\u06cc\u062f</translation>\n+        <source>Date</source>\n+        <translation>\u062a\u0627\u0631\u06cc\u062e</translation>\n     </message>\n-</context>\n-<context>\n-    <name>FreespaceChecker</name>\n     <message>\n-        <location filename=\"../intro.cpp\" line=\"+61\"/>\n-        <source>A new data directory will be created.</source>\n+        <location line=\"+5\"/>\n+        <source>Confirmations</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+22\"/>\n-        <source>name</source>\n-        <translation type=\"unfinished\"/>\n+        <location line=\"+3\"/>\n+        <source>Confirmed</source>\n+        <translation>\u062a\u0627\u06cc\u06cc\u062f \u0634\u062f\u0647</translation>\n     </message>\n     <message>\n-        <location line=\"+2\"/>\n-        <source>Directory already exists. Add %1 if you intend to create a new directory here.</source>\n+        <location line=\"+5\"/>\n+        <source>Priority</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+3\"/>\n-        <source>Path already exists, and is not a directory.</source>\n-        <translation type=\"unfinished\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"+42\"/>\n+        <source>Copy address</source>\n+        <translation>\u0622\u062f\u0631\u0633 \u0631\u0627 \u06a9\u067e\u06cc \u06a9\u0646\u06cc\u062f</translation>\n     </message>\n     <message>\n-        <location line=\"+7\"/>\n-        <source>Cannot create data directory here.</source>\n-        <translation type=\"unfinished\"/>\n+        <location line=\"+1\"/>\n+        <source>Copy label</source>\n+        <translation>\u0628\u0631\u0686\u0633\u0628 \u0631\u0627 \u06a9\u067e\u06cc \u06a9\u0646\u06cc\u062f</translation>\n     </message>\n-</context>\n-<context>\n-    <name>GUIUtil::HelpMessageBox</name>\n     <message>\n-        <location filename=\"../guiutil.cpp\" line=\"+558\"/>\n-        <location line=\"+13\"/>\n-        <source>Bitcoin-Qt</source>\n-        <translation type=\"unfinished\"/>\n+        <location line=\"+1\"/>\n+        <location line=\"+26\"/>\n+        <source>Copy amount</source>\n+        <translation>\u0645\u06cc\u0632\u0627\u0646 \u0648\u062c\u0647 \u06a9\u067e\u06cc \u0634\u0648\u062f</translation>\n     </message>\n     <message>\n-        <location line=\"-13\"/>\n-        <source>version</source>\n-        <translation>\u0646\u0633\u062e\u0647</translation>\n+        <location line=\"-25\"/>\n+        <source>Copy transaction ID</source>\n+        <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+2\"/>\n-        <source>Usage:</source>\n-        <translation>\u0645\u06cc\u0632\u0627\u0646 \u0627\u0633\u062a\u0641\u0627\u062f\u0647:</translation>\n+        <location line=\"+1\"/>\n+        <source>Lock unspent</source>\n+        <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <location line=\"+1\"/>\n-        <source>command-line options</source>\n+        <source>Unlock unspent</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n-        <source>UI options</source>\n+        <location line=\"+22\"/>\n+        <source>Copy quantity</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+1\"/>\n-        <source>Set language, for example &quot;de_DE&quot; (default: system locale)</source>\n+        <location line=\"+2\"/>\n+        <source>Copy fee</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <location line=\"+1\"/>\n-        <source>Start minimized</source>\n+        <source>Copy after fee</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <location line=\"+1\"/>\n-        <source>Show splash screen on startup (default: 1)</source>\n+        <source>Copy bytes</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <location line=\"+1\"/>\n-        <source>Choose data directory on startup (default: 0)</source>\n+        <source>Copy priority</source>\n         <translation type=\"unfinished\"/>\n     </message>\n-</context>\n-<context>\n-    <name>Intro</name>\n     <message>\n-        <location filename=\"../forms/intro.ui\" line=\"+14\"/>\n-        <source>Welcome</source>\n+        <location line=\"+1\"/>\n+        <source>Copy low output</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+9\"/>\n-        <source>Welcome to Bitcoin-Qt.</source>\n+        <location line=\"+1\"/>\n+        <source>Copy change</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+26\"/>\n-        <source>As this is the first time the program is launched, you can choose where Bitcoin-Qt will store its data.</source>\n+        <location line=\"+323\"/>\n+        <source>highest</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n-        <source>Bitcoin-Qt will download and store a copy of the Bitcoin block chain. At least %1GB of data will be stored in this directory, and it will grow over time. The wallet will also be stored in this directory.</source>\n+        <location line=\"+1\"/>\n+        <source>higher</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n-        <source>Use the default data directory</source>\n+        <location line=\"+1\"/>\n+        <source>high</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+7\"/>\n-        <source>Use a custom data directory:</source>\n+        <location line=\"+1\"/>\n+        <source>medium-high</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location filename=\"../intro.cpp\" line=\"+105\"/>\n-        <source>Error</source>\n-        <translation>\u062e\u0637\u0627</translation>\n-    </message>\n-    <message>\n-        <location line=\"+9\"/>\n-        <source>GB of free space available</source>\n+        <location line=\"+1\"/>\n+        <source>medium</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+3\"/>\n-        <source>(of %1GB needed)</source>\n+        <location line=\"+4\"/>\n+        <source>low-medium</source>\n         <translation type=\"unfinished\"/>\n     </message>\n-</context>\n-<context>\n-    <name>OptionsDialog</name>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"+14\"/>\n-        <source>Options</source>\n-        <translation>\u0627\u0646\u062a\u062e\u0627\u0628/\u0622\u067e\u0634\u0646</translation>\n+        <location line=\"+1\"/>\n+        <source>low</source>\n+        <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+16\"/>\n-        <source>&amp;Main</source>\n+        <location line=\"+1\"/>\n+        <source>lower</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+6\"/>\n-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB.</source>\n+        <location line=\"+1\"/>\n+        <source>lowest</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+15\"/>\n-        <source>Pay transaction &amp;fee</source>\n+        <location line=\"+11\"/>\n+        <source>(%1 locked)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+31\"/>\n-        <source>Automatically start Bitcoin after logging in to the system.</source>\n+        <location line=\"+171\"/>\n+        <source>Dust</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+3\"/>\n-        <source>&amp;Start Bitcoin on system login</source>\n+        <location line=\"+0\"/>\n+        <source>yes</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+35\"/>\n-        <source>Reset all client options to default.</source>\n+        <location line=\"+0\"/>\n+        <source>no</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+3\"/>\n-        <source>&amp;Reset Options</source>\n+        <location line=\"+10\"/>\n+        <source>This label turns red, if the transaction size is greater than 1000 bytes.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+13\"/>\n-        <source>&amp;Network</source>\n+        <location line=\"+1\"/>\n+        <location line=\"+5\"/>\n+        <source>This means a fee of at least %1 per kB is required.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+6\"/>\n-        <source>Automatically open the Bitcoin client port on the router. This only works when your router supports UPnP and it is enabled.</source>\n+        <location line=\"-4\"/>\n+        <source>Can vary +/- 1 byte per input.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+3\"/>\n-        <source>Map port using &amp;UPnP</source>\n+        <location line=\"+2\"/>\n+        <source>Transactions with higher priority are more likely to get included into a block.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+7\"/>\n-        <source>Connect to the Bitcoin network through a SOCKS proxy (e.g. when connecting through Tor).</source>\n+        <location line=\"+1\"/>\n+        <source>This label turns red, if the priority is smaller than &quot;medium&quot;</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <location line=\"+3\"/>\n-        <source>&amp;Connect through SOCKS proxy:</source>\n+        <source>This label turns red, if any recipient receives an amount smaller than %1.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+9\"/>\n-        <source>Proxy &amp;IP:</source>\n+        <location line=\"+1\"/>\n+        <location line=\"+4\"/>\n+        <source>This means a fee of at least %1 is required.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+19\"/>\n-        <source>IP address of the proxy (e.g. 127.0.0.1)</source>\n+        <location line=\"-3\"/>\n+        <source>Amounts below 0.546 times the minimum relay fee are shown as dust.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+7\"/>\n-        <source>&amp;Port:</source>\n+        <location line=\"+2\"/>\n+        <source>This label turns red, if the change is smaller than %1.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+19\"/>\n-        <source>Port of the proxy (e.g. 9050)</source>\n-        <translation type=\"unfinished\"/>\n+        <location line=\"+43\"/>\n+        <location line=\"+66\"/>\n+        <source>(no label)</source>\n+        <translation>(\u0628\u0631\u0686\u0633\u0628 \u0646\u062f\u0627\u0631\u062f)</translation>\n     </message>\n     <message>\n-        <location line=\"+7\"/>\n-        <source>SOCKS &amp;Version:</source>\n+        <location line=\"-9\"/>\n+        <source>change from %1 (%2)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+13\"/>\n-        <source>SOCKS version of the proxy (e.g. 5)</source>\n+        <location line=\"+1\"/>\n+        <source>(change)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+</context>\n+<context>\n+    <name>EditAddressDialog</name>\n+    <message>\n+        <location filename=\"../forms/editaddressdialog.ui\" line=\"+14\"/>\n+        <source>Edit Address</source>\n+        <translation>\u0648\u06cc\u0631\u0627\u06cc\u0634 \u062d\u0633\u0627\u0628</translation>\n+    </message>\n+    <message>\n+        <location line=\"+11\"/>\n+        <source>&amp;Label</source>\n+        <translation>\u0648 \u0628\u0631\u0686\u0633\u0628</translation>\n+    </message>\n+    <message>\n+        <location line=\"+10\"/>\n+        <source>The label associated with this address list entry</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+17\"/>\n+        <source>The address associated with this address list entry. This can only be modified for sending addresses.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"-10\"/>\n+        <source>&amp;Address</source>\n+        <translation>\u062d\u0633\u0627\u0628&amp;</translation>\n+    </message>\n+    <message>\n+        <location filename=\"../editaddressdialog.cpp\" line=\"+25\"/>\n+        <source>New receiving address</source>\n+        <translation>\u062d\u0633\u0627\u0628 \u062f\u0631\u06cc\u0627\u0641\u062a \u06a9\u0646\u0646\u062f\u0647 \u062c\u062f\u06cc\u062f\n+</translation>\n+    </message>\n+    <message>\n+        <location line=\"+4\"/>\n+        <source>New sending address</source>\n+        <translation>\u062d\u0633\u0627\u0628 \u0627\u0631\u0633\u0627\u0644 \u06a9\u0646\u0646\u062f\u0647 \u062c\u062f\u06cc\u062f</translation>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>Edit receiving address</source>\n+        <translation>\u0648\u06cc\u0631\u0627\u06cc\u0634 \u062d\u0633\u0627\u0628 \u062f\u0631\u06cc\u0627\u0641\u062a \u06a9\u0646\u0646\u062f\u0647</translation>\n+    </message>\n+    <message>\n+        <location line=\"+4\"/>\n+        <source>Edit sending address</source>\n+        <translation>\u0648\u06cc\u0631\u0627\u06cc\u0634 \u062d\u0633\u0627\u0628 \u0627\u0631\u0633\u0627\u0644 \u06a9\u0646\u0646\u062f\u0647</translation>\n+    </message>\n+    <message>\n+        <location line=\"+76\"/>\n+        <source>The entered address &quot;%1&quot; is already in the address book.</source>\n+        <translation>\u062d\u0633\u0627\u0628 \u0648\u0627\u0631\u062f \u0634\u062f\u0647 \u00ab1%\u00bb \u0627\u0632 \u067e\u06cc\u0634 \u062f\u0631 \u062f\u0641\u062a\u0631\u0686\u0647 \u062d\u0633\u0627\u0628 \u0647\u0627 \u0645\u0648\u062c\u0648\u062f \u0627\u0633\u062a.</translation>\n+    </message>\n+    <message>\n+        <location line=\"-5\"/>\n+        <source>The entered address &quot;%1&quot; is not a valid Bitcoin address.</source>\n+        <translation>\u0622\u062f\u0631\u0633 \u0648\u0627\u0631\u062f \u0634\u062f\u0647 &quot;%1&quot; \u06cc\u06a9 \u0622\u062f\u0631\u0633 \u0635\u062d\u06cc\u062d \u0628\u0631\u0627\u06cc bitcoin \u0646\u0633\u0634\u062a</translation>\n+    </message>\n+    <message>\n+        <location line=\"+10\"/>\n+        <source>Could not unlock wallet.</source>\n+        <translation>\u0639\u062f\u0645 \u062a\u0648\u0627\u0646\u06cc\u06cc \u0628\u0631\u0627\u06cc \u0642\u0641\u0644 \u06af\u0634\u0627\u06cc\u06cc wallet</translation>\n+    </message>\n+    <message>\n+        <location line=\"+5\"/>\n+        <source>New key generation failed.</source>\n+        <translation>\u0639\u062f\u0645 \u062a\u0648\u0627\u0646\u06cc\u06cc \u062f\u0631 \u0627\u06cc\u062c\u0627\u062f \u06a9\u0644\u06cc\u062f \u062c\u062f\u06cc\u062f</translation>\n+    </message>\n+</context>\n+<context>\n+    <name>FreespaceChecker</name>\n+    <message>\n+        <location filename=\"../intro.cpp\" line=\"+65\"/>\n+        <source>A new data directory will be created.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+22\"/>\n+        <source>name</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+2\"/>\n+        <source>Directory already exists. Add %1 if you intend to create a new directory here.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>Path already exists, and is not a directory.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+7\"/>\n+        <source>Cannot create data directory here.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+</context>\n+<context>\n+    <name>GUIUtil::HelpMessageBox</name>\n+    <message>\n+        <location filename=\"../guiutil.cpp\" line=\"+597\"/>\n+        <source>version</source>\n+        <translation>\u0646\u0633\u062e\u0647</translation>\n+    </message>\n+    <message>\n+        <location line=\"+0\"/>\n+        <location line=\"+13\"/>\n+        <source>Bitcoin Core</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"-11\"/>\n+        <source>Usage:</source>\n+        <translation>\u0645\u06cc\u0632\u0627\u0646 \u0627\u0633\u062a\u0641\u0627\u062f\u0647:</translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>command-line options</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+4\"/>\n+        <source>UI options</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Set language, for example &quot;de_DE&quot; (default: system locale)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Start minimized</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Show splash screen on startup (default: 1)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Choose data directory on startup (default: 0)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+</context>\n+<context>\n+    <name>Intro</name>\n+    <message>\n+        <location filename=\"../forms/intro.ui\" line=\"+14\"/>\n+        <source>Welcome</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+9\"/>\n+        <source>Welcome to Bitcoin Core.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+26\"/>\n+        <source>As this is the first time the program is launched, you can choose where Bitcoin Core will store its data.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+10\"/>\n+        <source>Bitcoin Core will download and store a copy of the Bitcoin block chain. At least %1GB of data will be stored in this directory, and it will grow over time. The wallet will also be stored in this directory.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+10\"/>\n+        <source>Use the default data directory</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+7\"/>\n+        <source>Use a custom data directory:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location filename=\"../intro.cpp\" line=\"+85\"/>\n+        <source>Bitcoin</source>\n+        <translation>bitcoin</translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Error: Specified data directory &quot;%1&quot; can not be created.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+19\"/>\n+        <source>Error</source>\n+        <translation>\u062e\u0637\u0627</translation>\n+    </message>\n+    <message>\n+        <location line=\"+9\"/>\n+        <source>GB of free space available</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>(of %1GB needed)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+</context>\n+<context>\n+    <name>OpenURIDialog</name>\n+    <message>\n+        <location filename=\"../forms/openuridialog.ui\" line=\"+14\"/>\n+        <source>Open URI</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+6\"/>\n+        <source>Open payment request from URI or file</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+9\"/>\n+        <source>URI:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+11\"/>\n+        <source>Select payment request file</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location filename=\"../openuridialog.cpp\" line=\"+47\"/>\n+        <source>Select payment request file to open</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+</context>\n+<context>\n+    <name>OptionsDialog</name>\n+    <message>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"+14\"/>\n+        <source>Options</source>\n+        <translation>\u0627\u0646\u062a\u062e\u0627\u0628/\u0622\u067e\u0634\u0646</translation>\n+    </message>\n+    <message>\n+        <location line=\"+16\"/>\n+        <source>&amp;Main</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+6\"/>\n+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+15\"/>\n+        <source>Pay transaction &amp;fee</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+31\"/>\n+        <source>Automatically start Bitcoin after logging in to the system.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>&amp;Start Bitcoin on system login</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+35\"/>\n+        <source>Reset all client options to default.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>&amp;Reset Options</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+13\"/>\n+        <source>&amp;Network</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+6\"/>\n+        <source>Automatically open the Bitcoin client port on the router. This only works when your router supports UPnP and it is enabled.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>Map port using &amp;UPnP</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+7\"/>\n+        <source>Connect to the Bitcoin network through a SOCKS proxy (e.g. when connecting through Tor).</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>&amp;Connect through SOCKS proxy:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+9\"/>\n+        <source>Proxy &amp;IP:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+19\"/>\n+        <source>IP address of the proxy (e.g. 127.0.0.1)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+7\"/>\n+        <source>&amp;Port:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+19\"/>\n+        <source>Port of the proxy (e.g. 9050)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+7\"/>\n+        <source>SOCKS &amp;Version:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+13\"/>\n+        <source>SOCKS version of the proxy (e.g. 5)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n@@ -1040,6 +1369,16 @@ Address: %4\n         <source>&amp;Display addresses in transaction list</source>\n         <translation>\u0648 \u0646\u0645\u0627\u06cc\u0634 \u0622\u062f\u0631\u0633\u0647\u0627 \u062f\u0631 \u0641\u0647\u0631\u0633\u062a \u062a\u0631\u0627\u06a9\u0646\u0634</translation>\n     </message>\n+    <message>\n+        <location line=\"+7\"/>\n+        <source>Whether to show coin control features or not.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>Display coin &amp;control features (experts only)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n     <message>\n         <location line=\"+71\"/>\n         <source>&amp;OK</source>\n@@ -1056,12 +1395,12 @@ Address: %4\n         <translation>\u0648 \u0628\u0647 \u06a9\u0627\u0631 \u06af\u0631\u0641\u062a\u0646</translation>\n     </message>\n     <message>\n-        <location filename=\"../optionsdialog.cpp\" line=\"+58\"/>\n+        <location filename=\"../optionsdialog.cpp\" line=\"+63\"/>\n         <source>default</source>\n         <translation>\u067e\u06cc\u0634 \u0641\u0631\u0636</translation>\n     </message>\n     <message>\n-        <location line=\"+130\"/>\n+        <location line=\"+131\"/>\n         <source>Confirm options reset</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1102,17 +1441,17 @@ Address: %4\n     </message>\n     <message>\n         <location line=\"+50\"/>\n-        <location line=\"+202\"/>\n+        <location line=\"+214\"/>\n         <source>The displayed information may be out of date. Your wallet automatically synchronizes with the Bitcoin network after a connection is established, but this process has not completed yet.</source>\n         <translation>\u0627\u0637\u0644\u0627\u0639\u0627\u062a \u0646\u0645\u0627\u06cc\u0634 \u062f\u0627\u062f\u0647 \u0634\u062f\u0647 \u0645\u0645\u06a9\u0646 \u0627\u0633\u062a \u0631\u0648\u0632\u0622\u0645\u062f \u0646\u0628\u0627\u0634\u062f. wallet \u0634\u0645\u0627 \u0628\u0647 \u0635\u0648\u0631\u062a \u062e\u0648\u062f\u06a9\u0627\u0631 \u0628\u0639\u062f \u0627\u0632 \u0628\u0631\u0642\u0631\u0627\u0631\u06cc \u0627\u062a\u0635\u0627\u0644 \u0628\u0627 \u0634\u0628\u06a9\u0647 bitcoin \u0628\u0647 \u0631\u0648\u0632 \u0645\u06cc \u0634\u0648\u062f \u0627\u0645\u0627 \u0627\u06cc\u0646 \u0641\u0631\u0627\u06cc\u0646\u062f \u0647\u0646\u0648\u0632 \u062a\u06a9\u0645\u06cc\u0644 \u0646\u0634\u062f\u0647 \u0627\u0633\u062a.</translation>\n     </message>\n     <message>\n-        <location line=\"-131\"/>\n+        <location line=\"-140\"/>\n         <source>Unconfirmed:</source>\n         <translation>\u062a\u0627\u06cc\u06cc\u062f \u0646\u0634\u062f\u0647</translation>\n     </message>\n     <message>\n-        <location line=\"-78\"/>\n+        <location line=\"-81\"/>\n         <source>Wallet</source>\n         <translation>\u06a9\u06cc\u0641 \u067e\u0648\u0644</translation>\n     </message>\n@@ -1127,12 +1466,12 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+29\"/>\n+        <location line=\"+32\"/>\n         <source>Total of transactions that have yet to be confirmed, and do not yet count toward the spendable balance</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+13\"/>\n+        <location line=\"+16\"/>\n         <source>Immature:</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1142,7 +1481,7 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+13\"/>\n+        <location line=\"+16\"/>\n         <source>Total:</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1152,12 +1491,12 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+53\"/>\n+        <location line=\"+56\"/>\n         <source>&lt;b&gt;Recent transactions&lt;/b&gt;</source>\n         <translation>\u062a\u0631\u0627\u06a9\u0646\u0634\u0647\u0627\u06cc \u0627\u062e\u06cc\u0631</translation>\n     </message>\n     <message>\n-        <location filename=\"../overviewpage.cpp\" line=\"+116\"/>\n+        <location filename=\"../overviewpage.cpp\" line=\"+120\"/>\n         <location line=\"+1\"/>\n         <source>out of sync</source>\n         <translation>\u062e\u0627\u0631\u062c \u0627\u0632 \u0631\u0648\u0632\u0622\u0645\u062f \u0633\u0627\u0632\u06cc</translation>\n@@ -1166,7 +1505,7 @@ Address: %4\n <context>\n     <name>PaymentServer</name>\n     <message>\n-        <location filename=\"../paymentserver.cpp\" line=\"+392\"/>\n+        <location filename=\"../paymentserver.cpp\" line=\"+397\"/>\n         <source>URI handling</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1176,23 +1515,29 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+69\"/>\n+        <location line=\"+91\"/>\n         <source>Requested payment amount of %1 is too small (considered dust).</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n-        <location line=\"+37\"/>\n+        <location line=\"-204\"/>\n+        <location line=\"+195\"/>\n+        <location line=\"+13\"/>\n         <source>Payment request error</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+1\"/>\n-        <source>Insecure requests to custom payment scripts unsupported</source>\n+        <location line=\"-207\"/>\n+        <source>Cannot start bitcoin: click-to-pay handler</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+38\"/>\n+        <location line=\"+195\"/>\n+        <source>Unverified payment requests to custom payment scripts are unsupported.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+59\"/>\n         <source>Refund from %1</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1202,7 +1547,7 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+31\"/>\n+        <location line=\"+28\"/>\n         <source>Bad response from server %1</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1212,8 +1557,8 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-58\"/>\n-        <location line=\"+30\"/>\n+        <location line=\"-55\"/>\n+        <location line=\"+27\"/>\n         <location line=\"+17\"/>\n         <source>Network request error</source>\n         <translation type=\"unfinished\"/>\n@@ -1222,9 +1567,8 @@ Address: %4\n <context>\n     <name>QObject</name>\n     <message>\n-        <location filename=\"../bitcoin.cpp\" line=\"+114\"/>\n+        <location filename=\"../bitcoin.cpp\" line=\"+119\"/>\n         <location line=\"+5\"/>\n-        <location filename=\"../intro.cpp\" line=\"-32\"/>\n         <source>Bitcoin</source>\n         <translation>bitcoin</translation>\n     </message>\n@@ -1238,16 +1582,11 @@ Address: %4\n         <source>Error: Invalid combination of -regtest and -testnet.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n-    <message>\n-        <location filename=\"../intro.cpp\" line=\"+1\"/>\n-        <source>Error: Specified data directory &quot;%1&quot; can not be created.</source>\n-        <translation type=\"unfinished\"/>\n-    </message>\n </context>\n <context>\n     <name>QRImageWidget</name>\n     <message>\n-        <location filename=\"../receiverequestdialog.cpp\" line=\"+32\"/>\n+        <location filename=\"../receiverequestdialog.cpp\" line=\"+36\"/>\n         <source>&amp;Save Image...</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1263,9 +1602,8 @@ Address: %4\n     </message>\n     <message>\n         <location line=\"+0\"/>\n-        <source>PNG Images (*.png)</source>\n-        <translation>\u062a\u0635\u0627\u0648\u06cc\u0631 \u0628\u0627 \u0641\u0631\u0645\u062a PNG\n-(*.png)</translation>\n+        <source>PNG Image (*.png)</source>\n+        <translation type=\"unfinished\"/>\n     </message>\n </context>\n <context>\n@@ -1285,7 +1623,7 @@ Address: %4\n         <location line=\"+53\"/>\n         <location line=\"+23\"/>\n         <location line=\"+23\"/>\n-        <location filename=\"../rpcconsole.cpp\" line=\"+352\"/>\n+        <location filename=\"../rpcconsole.cpp\" line=\"+360\"/>\n         <source>N/A</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1300,7 +1638,12 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+68\"/>\n+        <location line=\"-10\"/>\n+        <source>Debug window</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+78\"/>\n         <source>Using OpenSSL version</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1332,7 +1675,7 @@ Address: %4\n     <message>\n         <location line=\"+7\"/>\n         <source>Current number of blocks</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u062a\u0639\u062f\u0627\u062f \u0632\u0646\u062c\u06cc\u0631\u0647 \u0647\u0627\u06cc \u062d\u0627\u0636\u0631</translation>\n     </message>\n     <message>\n         <location line=\"+23\"/>\n@@ -1355,12 +1698,7 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+7\"/>\n-        <source>Show the Bitcoin-Qt help message to get a list with possible Bitcoin command-line options.</source>\n-        <translation type=\"unfinished\"/>\n-    </message>\n-    <message>\n-        <location line=\"+3\"/>\n+        <location line=\"+10\"/>\n         <source>&amp;Show</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1400,12 +1738,7 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-104\"/>\n-        <source>Bitcoin - Debug window</source>\n-        <translation type=\"unfinished\"/>\n-    </message>\n-    <message>\n-        <location line=\"+25\"/>\n+        <location line=\"-79\"/>\n         <source>Bitcoin Core</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1420,7 +1753,12 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+102\"/>\n+        <location line=\"+26\"/>\n+        <source>Show the Bitcoin-Core help message to get a list with possible Bitcoin command-line options.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+76\"/>\n         <source>Clear console</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1478,37 +1816,32 @@ Address: %4\n <context>\n     <name>ReceiveCoinsDialog</name>\n     <message>\n-        <location filename=\"../forms/receivecoinsdialog.ui\" line=\"+22\"/>\n+        <location filename=\"../forms/receivecoinsdialog.ui\" line=\"+83\"/>\n         <source>&amp;Amount:</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+16\"/>\n+        <location line=\"+19\"/>\n         <source>The amount to request</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+7\"/>\n+        <location line=\"-32\"/>\n         <source>&amp;Label:</source>\n         <translation>\u0648 \u0628\u0631\u0686\u0633\u0628</translation>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n-        <source>The label to associate with the receiving address</source>\n-        <translation type=\"unfinished\"/>\n-    </message>\n-    <message>\n-        <location line=\"+7\"/>\n+        <location line=\"-34\"/>\n         <source>&amp;Message:</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n+        <location line=\"+20\"/>\n         <source>The message to attach to payment request</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+14\"/>\n+        <location line=\"-37\"/>\n         <source>Reuse one of the previously used receiving addresses. Reusing addresses has security and privacy issues. Do not use this unless re-generating a payment request made before.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1518,12 +1851,17 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+7\"/>\n+        <location line=\"+27\"/>\n+        <source>The label to associate with the new receiving address</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+14\"/>\n         <source>Use this form to request payments. All fields are optional.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+17\"/>\n+        <location line=\"+56\"/>\n         <source>Clear all fields of the form.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1537,6 +1875,31 @@ Address: %4\n         <source>&amp;Request payment</source>\n         <translation type=\"unfinished\"/>\n     </message>\n+    <message>\n+        <location line=\"+47\"/>\n+        <source>Previously requested payments</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+12\"/>\n+        <source>Show the selected request (does the same as double clicking an entry)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>Show</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+11\"/>\n+        <source>Remove the selected entries from the list</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>Remove</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n </context>\n <context>\n     <name>ReceiveRequestDialog</name>\n@@ -1555,18 +1918,13 @@ Address: %4\n         <source>Copy &amp;Address</source>\n         <translation type=\"unfinished\"/>\n     </message>\n-    <message>\n-        <location line=\"+7\"/>\n-        <source>&amp;Copy Image</source>\n-        <translation type=\"unfinished\"/>\n-    </message>\n     <message>\n         <location line=\"+7\"/>\n         <source>&amp;Save Image...</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location filename=\"../receiverequestdialog.cpp\" line=\"+58\"/>\n+        <location filename=\"../receiverequestdialog.cpp\" line=\"+56\"/>\n         <source>Request payment to %1</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1611,17 +1969,120 @@ Address: %4\n         <translation>\u062e\u0637\u0627\u06cc \u062a\u0628\u062f\u06cc\u0644 URI \u0628\u0647 \u06a9\u062f QR</translation>\n     </message>\n </context>\n+<context>\n+    <name>RecentRequestsTableModel</name>\n+    <message>\n+        <location filename=\"../recentrequeststablemodel.cpp\" line=\"+14\"/>\n+        <source>Date</source>\n+        <translation>\u062a\u0627\u0631\u06cc\u062e</translation>\n+    </message>\n+    <message>\n+        <location line=\"+0\"/>\n+        <source>Label</source>\n+        <translation>\u0628\u0631\u0686\u0633\u0628</translation>\n+    </message>\n+    <message>\n+        <location line=\"+0\"/>\n+        <source>Message</source>\n+        <translation>\u067e\u06cc\u0627\u0645</translation>\n+    </message>\n+    <message>\n+        <location line=\"+0\"/>\n+        <source>Amount</source>\n+        <translation>\u0645\u06cc\u0632\u0627\u0646</translation>\n+    </message>\n+    <message>\n+        <location line=\"+36\"/>\n+        <source>(no label)</source>\n+        <translation>(\u0628\u0631\u0686\u0633\u0628 \u0646\u062f\u0627\u0631\u062f)</translation>\n+    </message>\n+    <message>\n+        <location line=\"+9\"/>\n+        <source>(no message)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+</context>\n <context>\n     <name>SendCoinsDialog</name>\n     <message>\n         <location filename=\"../forms/sendcoinsdialog.ui\" line=\"+14\"/>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"+140\"/>\n-        <location line=\"+213\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"+381\"/>\n+        <location line=\"+81\"/>\n         <source>Send Coins</source>\n         <translation>\u0633\u06a9\u0647 \u0647\u0627\u06cc \u0627\u0631\u0633\u0627\u0644\u06cc</translation>\n     </message>\n     <message>\n-        <location line=\"+50\"/>\n+        <location line=\"+76\"/>\n+        <source>Coin Control Features</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+20\"/>\n+        <source>Inputs...</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+7\"/>\n+        <source>automatically selected</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+19\"/>\n+        <source>Insufficient funds!</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+89\"/>\n+        <source>Quantity:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+35\"/>\n+        <source>Bytes:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+48\"/>\n+        <source>Amount:</source>\n+        <translation>\u0645\u06cc\u0632\u0627\u0646 \u0648\u062c\u0647:</translation>\n+    </message>\n+    <message>\n+        <location line=\"+32\"/>\n+        <source>Priority:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+48\"/>\n+        <source>Fee:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+32\"/>\n+        <source>Low Output:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+48\"/>\n+        <source>After Fee:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+32\"/>\n+        <source>Change:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+44\"/>\n+        <source>If this is activated, but the change address is empty or invalid, change will be sent to a newly generated address.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>Custom change address</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+115\"/>\n         <source>Send to multiple recipients at once</source>\n         <translation>\u0627\u0631\u0633\u0627\u0644 \u0647\u0645\u0632\u0645\u0627\u0646 \u0628\u0647 \u06af\u06cc\u0631\u0646\u062f\u0647 \u0647\u0627\u06cc \u0645\u062a\u0639\u062f\u062f</translation>\n     </message>\n@@ -1646,12 +2107,7 @@ Address: %4\n         <translation>\u0645\u0627\u0646\u062f\u0647 \u062d\u0633\u0627\u0628:</translation>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n-        <source>123.456 BTC</source>\n-        <translation>123.456 BTC</translation>\n-    </message>\n-    <message>\n-        <location line=\"+31\"/>\n+        <location line=\"+41\"/>\n         <source>Confirm the send action</source>\n         <translation>\u062a\u0627\u06cc\u06cc\u062f \u0639\u0645\u0644\u06cc\u0627\u062a \u0627\u0631\u0633\u0627\u0644 </translation>\n     </message>\n@@ -1661,69 +2117,135 @@ Address: %4\n         <translation>\u0648 \u0627\u0631\u0633\u0627\u0644</translation>\n     </message>\n     <message>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"-154\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"-229\"/>\n         <source>Confirm send coins</source>\n         <translation>\u062a\u0627\u06cc\u06cc\u062f \u0627\u0631\u0633\u0627\u0644 \u0628\u06cc\u062a \u06a9\u0648\u06cc\u0646 \u0647\u0627</translation>\n     </message>\n     <message>\n-        <location line=\"-90\"/>\n+        <location line=\"-74\"/>\n         <location line=\"+5\"/>\n         <location line=\"+5\"/>\n+        <location line=\"+4\"/>\n         <source>%1 to %2</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+26\"/>\n+        <location line=\"-136\"/>\n+        <source>Enter a Bitcoin address (e.g. 1NS17iag9jJgTHD1VXjvLCEnZuQ3rJDE9L)</source>\n+        <translation>\u06cc\u06a9 \u0622\u062f\u0631\u0633 bitcoin \u0648\u0627\u0631\u062f \u06a9\u0646\u06cc\u062f (\u0645\u062b\u0627\u0644 1NS17iag9jJgTHD1VXjvLCEnZuQ3rJDE9L)</translation>\n+    </message>\n+    <message>\n+        <location line=\"+15\"/>\n+        <source>Copy quantity</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Copy amount</source>\n+        <translation>\u0645\u06cc\u0632\u0627\u0646 \u0648\u062c\u0647 \u06a9\u067e\u06cc \u0634\u0648\u062f</translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Copy fee</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Copy after fee</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Copy bytes</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Copy priority</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Copy low output</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Copy change</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+170\"/>\n+        <source>Total Amount %1 (= %2)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+2\"/>\n+        <source>or</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+202\"/>\n         <source>The recipient address is not valid, please recheck.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n+        <location line=\"+3\"/>\n         <source>The amount to pay must be larger than 0.</source>\n         <translation>\u0645\u06cc\u0632\u0627\u0646 \u067e\u0631\u062f\u0627\u062e\u062a \u0628\u0627\u06cc\u062f \u0628\u06cc\u0634\u062a\u0631 \u0627\u0632 0 \u0628\u0627\u0634\u062f</translation>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n+        <location line=\"+3\"/>\n         <source>The amount exceeds your balance.</source>\n         <translation>\u0645\u0642\u062f\u0627\u0631 \u0645\u0648\u0631\u062f \u0646\u0638\u0631 \u0627\u0632 \u0645\u0627\u0646\u062f\u0647 \u062d\u0633\u0627\u0628 \u0628\u06cc\u0634\u062a\u0631 \u0627\u0633\u062a.</translation>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n+        <location line=\"+3\"/>\n         <source>The total exceeds your balance when the %1 transaction fee is included.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+5\"/>\n+        <location line=\"+3\"/>\n         <source>Duplicate address found, can only send to each address once per send operation.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>Transaction creation failed!</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n     <message>\n         <location line=\"+4\"/>\n-        <source>Error: Transaction creation failed!</source>\n+        <source>The transaction was rejected! This might happen if some of the coins in your wallet were already spent, such as if you used a copy of wallet.dat and coins were spent in the copy but not marked as spent here.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+15\"/>\n-        <source>Are you sure you want to send?</source>\n+        <location line=\"+113\"/>\n+        <source>Warning: Invalid Bitcoin address</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+9\"/>\n-        <source>added as transaction fee</source>\n+        <location line=\"+13\"/>\n+        <source>(no label)</source>\n+        <translation>(\u0628\u0631\u0686\u0633\u0628 \u0646\u062f\u0627\u0631\u062f)</translation>\n+    </message>\n+    <message>\n+        <location line=\"+8\"/>\n+        <source>Warning: Unknown change address</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+6\"/>\n-        <source>Total Amount %1</source>\n+        <location line=\"-378\"/>\n+        <source>Are you sure you want to send?</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+20\"/>\n-        <source>Error: The transaction was rejected. This might happen if some of the coins in your wallet were already spent, such as if you used a copy of wallet.dat and coins were spent in the copy but not marked as spent here.</source>\n-        <translation>\u062e\u0637\u0627: \u062a\u0631\u0627\u06a9\u0646\u0634 \u062a\u0627\u06cc\u06cc\u062f \u0646\u0634\u062f. \u0627\u06cc\u0646 \u062e\u0637\u0627 \u0645\u0645\u06a9\u0646 \u0627\u0633\u062a \u0628\u0647 \u0627\u06cc\u0646 \u062f\u0644\u06cc\u0644 \u0627\u062a\u0641\u0627\u0642 \u0628\u06cc\u0627\u0641\u062a\u062f \u06a9\u0647 \u0633\u06a9\u0647 \u0647\u0627\u06cc wallet \u0634\u0645\u0627 \u062e\u0631\u062c \u0634\u062f\u0647 \u0628\u0627\u0634\u0646\u062f \u0645\u062b\u0644\u0627 \u0627\u06af\u0631 wallet.dat \u0631\u0627 \u0645\u067e\u06cc \u06a9\u0631\u062f\u0647 \u0628\u0627\u0634\u06cc\u062f \u0648 \u0633\u06a9\u0647 \u0647\u0627\u06cc \u0634\u0645\u0627 \u062f\u0631 \u0622\u0646 \u06a9\u067e\u06cc \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0634\u062f\u0647 \u0628\u0627\u0634\u0646\u062f \u0627\u0645\u0627 \u062f\u0631 \u0627\u06cc\u0646\u062c\u0627 \u0646\u0645\u0627\u06cc\u0634 \u062f\u0627\u062f\u0647 \u0646\u0634\u062f\u0647 \u0627\u0646\u062f.</translation>\n+        <location line=\"+9\"/>\n+        <source>added as transaction fee</source>\n+        <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+144\"/>\n+        <location line=\"+170\"/>\n         <source>Payment request expired</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1736,39 +2258,44 @@ Address: %4\n <context>\n     <name>SendCoinsEntry</name>\n     <message>\n-        <location filename=\"../forms/sendcoinsentry.ui\" line=\"+33\"/>\n-        <location line=\"+585\"/>\n+        <location filename=\"../forms/sendcoinsentry.ui\" line=\"+131\"/>\n+        <location line=\"+501\"/>\n+        <location line=\"+536\"/>\n         <source>A&amp;mount:</source>\n         <translation>\u0648 \u0645\u06cc\u0632\u0627\u0646 \u0648\u062c\u0647</translation>\n     </message>\n     <message>\n-        <location line=\"-572\"/>\n-        <location line=\"+585\"/>\n+        <location line=\"-1132\"/>\n         <source>Pay &amp;To:</source>\n         <translation>\u067e\u0631\u062f\u0627\u062e\u062a \u0648 \u0628\u0647 \u0686\u0647 \u06a9\u0633\u06cc</translation>\n     </message>\n     <message>\n-        <location line=\"-551\"/>\n+        <location line=\"+18\"/>\n         <source>The address to send the payment to (e.g. 1NS17iag9jJgTHD1VXjvLCEnZuQ3rJDE9L)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location filename=\"../sendcoinsentry.cpp\" line=\"+28\"/>\n+        <location filename=\"../sendcoinsentry.cpp\" line=\"+30\"/>\n         <source>Enter a label for this address to add it to your address book</source>\n         <translation>\u06cc\u06a9 \u0628\u0631\u0686\u0633\u0628 \u0628\u0631\u0627\u06cc \u0627\u06cc\u0646 \u0622\u062f\u0631\u0633 \u0628\u0646\u0648\u06cc\u0633\u06cc\u062f \u062a\u0627 \u0628\u0647 \u062f\u0641\u062a\u0631\u0686\u0647 \u0622\u062f\u0631\u0633\u0647\u0627\u06cc \u0634\u0645\u0627 \u0627\u0636\u0627\u0641\u0647 \u0634\u0648\u062f</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/sendcoinsentry.ui\" line=\"-18\"/>\n+        <location filename=\"../forms/sendcoinsentry.ui\" line=\"+57\"/>\n         <source>&amp;Label:</source>\n         <translation>\u0648 \u0628\u0631\u0686\u0633\u0628</translation>\n     </message>\n     <message>\n-        <location line=\"+28\"/>\n+        <location line=\"-50\"/>\n         <source>Choose previously used address</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n+        <location line=\"-40\"/>\n+        <source>This is a normal payment.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+50\"/>\n         <source>Alt+A</source>\n         <translation>Alt \u0648 A</translation>\n     </message>\n@@ -1784,16 +2311,35 @@ Address: %4\n     </message>\n     <message>\n         <location line=\"+7\"/>\n-        <source>Remove this recipient</source>\n-        <translation>\u0627\u06cc\u0646 \u06af\u06cc\u0631\u0646\u062f\u0647 \u0631\u0627 \u062d\u0630\u0641 \u06a9\u0646</translation>\n+        <location line=\"+504\"/>\n+        <location line=\"+536\"/>\n+        <source>Remove this entry</source>\n+        <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+16\"/>\n+        <location line=\"-40\"/>\n+        <source>This is a verified payment request.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"-971\"/>\n         <source>Enter a label for this address to add it to the list of used addresses</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+465\"/>\n+        <location line=\"+439\"/>\n+        <source>This is an unverified payment request.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+18\"/>\n+        <location line=\"+532\"/>\n+        <source>Pay To:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"-498\"/>\n+        <location line=\"+536\"/>\n         <source>Memo:</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1914,7 +2460,7 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location filename=\"../signverifymessagedialog.cpp\" line=\"+27\"/>\n+        <location filename=\"../signverifymessagedialog.cpp\" line=\"+29\"/>\n         <location line=\"+3\"/>\n         <source>Enter a Bitcoin address (e.g. 1NS17iag9jJgTHD1VXjvLCEnZuQ3rJDE9L)</source>\n         <translation>\u06cc\u06a9 \u0622\u062f\u0631\u0633 bitcoin \u0648\u0627\u0631\u062f \u06a9\u0646\u06cc\u062f (\u0645\u062b\u0627\u0644 1NS17iag9jJgTHD1VXjvLCEnZuQ3rJDE9L)</translation>\n@@ -1930,7 +2476,7 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+85\"/>\n+        <location line=\"+84\"/>\n         <location line=\"+81\"/>\n         <source>The entered address is invalid.</source>\n         <translation type=\"unfinished\"/>\n@@ -1999,8 +2545,13 @@ Address: %4\n <context>\n     <name>SplashScreen</name>\n     <message>\n-        <location filename=\"../splashscreen.cpp\" line=\"+23\"/>\n-        <source>The Bitcoin developers</source>\n+        <location filename=\"../splashscreen.cpp\" line=\"+26\"/>\n+        <source>Bitcoin Core</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+2\"/>\n+        <source>The Bitcoin Core developers</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n@@ -2012,15 +2563,15 @@ Address: %4\n <context>\n     <name>TrafficGraphWidget</name>\n     <message>\n-        <location filename=\"../trafficgraphwidget.cpp\" line=\"+75\"/>\n+        <location filename=\"../trafficgraphwidget.cpp\" line=\"+79\"/>\n         <source>KB/s</source>\n         <translation type=\"unfinished\"/>\n     </message>\n </context>\n <context>\n     <name>TransactionDesc</name>\n     <message>\n-        <location filename=\"../transactiondesc.cpp\" line=\"+22\"/>\n+        <location filename=\"../transactiondesc.cpp\" line=\"+28\"/>\n         <source>Open until %1</source>\n         <translation>\u0628\u0627\u0632 \u06a9\u0646 \u062a\u0627 %1</translation>\n     </message>\n@@ -2212,7 +2763,7 @@ Address: %4\n <context>\n     <name>TransactionTableModel</name>\n     <message>\n-        <location filename=\"../transactiontablemodel.cpp\" line=\"+227\"/>\n+        <location filename=\"../transactiontablemodel.cpp\" line=\"+234\"/>\n         <source>Date</source>\n         <translation>\u062a\u0627\u0631\u06cc\u062e</translation>\n     </message>\n@@ -2330,7 +2881,7 @@ Address: %4\n <context>\n     <name>TransactionView</name>\n     <message>\n-        <location filename=\"../transactionview.cpp\" line=\"+52\"/>\n+        <location filename=\"../transactionview.cpp\" line=\"+57\"/>\n         <location line=\"+16\"/>\n         <source>All</source>\n         <translation>\u0647\u0645\u0647</translation>\n@@ -2391,12 +2942,12 @@ Address: %4\n         <translation>\u062f\u06cc\u06af\u0631</translation>\n     </message>\n     <message>\n-        <location line=\"+7\"/>\n+        <location line=\"+6\"/>\n         <source>Enter address or label to search</source>\n         <translation>\u0622\u062f\u0631\u0633 \u06cc\u0627 \u0628\u0631\u0686\u0633\u0628 \u0631\u0627 \u0628\u0631\u0627\u06cc \u062c\u0633\u062a\u062c\u0648 \u0648\u0627\u0631\u062f \u06a9\u0646\u06cc\u062f</translation>\n     </message>\n     <message>\n-        <location line=\"+7\"/>\n+        <location line=\"+6\"/>\n         <source>Min amount</source>\n         <translation>\u062d\u062f\u0627\u0642\u0644 \u0645\u06cc\u0632\u0627\u0646 \u0648\u062c\u0647</translation>\n     </message>\n@@ -2431,17 +2982,37 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+143\"/>\n-        <source>Export Transaction Data</source>\n-        <translation>\u062f\u0627\u062f\u0647 \u0647\u0627\u06cc \u062a\u0631\u0627\u06a9\u0646\u0634 \u0631\u0627 \u0635\u0627\u062f\u0631 \u06a9\u0646\u06cc\u062f</translation>\n+        <location line=\"+142\"/>\n+        <source>Export Transaction History</source>\n+        <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+1\"/>\n+        <location line=\"+19\"/>\n+        <source>Exporting Failed</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+0\"/>\n+        <source>There was an error trying to save the transaction history to %1.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+4\"/>\n+        <source>Exporting Successful</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+0\"/>\n+        <source>The transaction history was successfully saved to %1.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"-22\"/>\n         <source>Comma separated file (*.csv)</source>\n         <translation>Comma separated file (*.csv) \u0641\u0627\u06cc\u0644 \u062c\u062f\u0627\u06af\u0627\u0646\u0647 \u062f\u0633\u062a\u0648\u0631\u06cc</translation>\n     </message>\n     <message>\n-        <location line=\"+8\"/>\n+        <location line=\"+9\"/>\n         <source>Confirmed</source>\n         <translation>\u062a\u0627\u06cc\u06cc\u062f \u0634\u062f\u0647</translation>\n     </message>\n@@ -2476,17 +3047,7 @@ Address: %4\n         <translation>\u0634\u0646\u0627\u0633\u0647 \u06a9\u0627\u0631\u0628\u0631\u06cc</translation>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n-        <source>Error exporting</source>\n-        <translation>\u062e\u0637\u0627 \u062f\u0631 \u0627\u0631\u0633\u0627\u0644</translation>\n-    </message>\n-    <message>\n-        <location line=\"+0\"/>\n-        <source>Could not write to file %1.</source>\n-        <translation>\u0642\u0627\u0628\u0644 \u06a9\u067e\u06cc \u0628\u0647 \u0641\u0627\u06cc\u0644 \u0646\u06cc\u0633\u062a %1.</translation>\n-    </message>\n-    <message>\n-        <location line=\"+100\"/>\n+        <location line=\"+107\"/>\n         <source>Range:</source>\n         <translation>\u062f\u0627\u0645\u0646\u0647:</translation>\n     </message>\n@@ -2496,18 +3057,26 @@ Address: %4\n         <translation>\u0628\u0647</translation>\n     </message>\n </context>\n+<context>\n+    <name>WalletFrame</name>\n+    <message>\n+        <location filename=\"../walletframe.cpp\" line=\"+26\"/>\n+        <source>No wallet has been loaded.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+</context>\n <context>\n     <name>WalletModel</name>\n     <message>\n-        <location filename=\"../walletmodel.cpp\" line=\"+218\"/>\n+        <location filename=\"../walletmodel.cpp\" line=\"+245\"/>\n         <source>Send Coins</source>\n         <translation>\u0633\u06a9\u0647 \u0647\u0627\u06cc \u0627\u0631\u0633\u0627\u0644\u06cc</translation>\n     </message>\n </context>\n <context>\n     <name>WalletView</name>\n     <message>\n-        <location filename=\"../walletview.cpp\" line=\"+46\"/>\n+        <location filename=\"../walletview.cpp\" line=\"+43\"/>\n         <source>&amp;Export</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2517,65 +3086,60 @@ Address: %4\n         <translation>\u0635\u062f\u0648\u0631 \u062f\u0627\u062f\u0647 \u0646\u0648\u0627\u0631 \u062c\u0627\u0631\u06cc \u0628\u0647 \u06cc\u06a9 \u0641\u0627\u06cc\u0644</translation>\n     </message>\n     <message>\n-        <location line=\"+183\"/>\n+        <location line=\"+181\"/>\n         <source>Backup Wallet</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+0\"/>\n+        <location line=\"+1\"/>\n         <source>Wallet Data (*.dat)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+3\"/>\n+        <location line=\"+6\"/>\n         <source>Backup Failed</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <location line=\"+0\"/>\n-        <source>There was an error trying to save the wallet data to the new location.</source>\n+        <source>There was an error trying to save the wallet data to %1.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <location line=\"+4\"/>\n-        <source>Backup Successful</source>\n+        <source>The wallet data was successfully saved to %1.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <location line=\"+0\"/>\n-        <source>The wallet data was successfully saved to the new location.</source>\n+        <source>Backup Successful</source>\n         <translation type=\"unfinished\"/>\n     </message>\n </context>\n <context>\n     <name>bitcoin-core</name>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"+102\"/>\n-        <source>Bitcoin version</source>\n-        <translation>\u0646\u0633\u062e\u0647 bitcoin</translation>\n-    </message>\n-    <message>\n-        <location line=\"+107\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"+217\"/>\n         <source>Usage:</source>\n         <translation>\u0645\u06cc\u0632\u0627\u0646 \u0627\u0633\u062a\u0641\u0627\u062f\u0647:</translation>\n     </message>\n     <message>\n-        <location line=\"-55\"/>\n+        <location line=\"-54\"/>\n         <source>List commands</source>\n         <translation>\u0641\u0647\u0631\u0633\u062a \u062f\u0633\u062a\u0648\u0631\u0647\u0627</translation>\n     </message>\n     <message>\n-        <location line=\"-13\"/>\n+        <location line=\"-14\"/>\n         <source>Get help for a command</source>\n         <translation>\u062f\u0631\u062e\u0648\u0627\u0633\u062a \u06a9\u0645\u06a9 \u0628\u0631\u0627\u06cc \u06cc\u06a9 \u062f\u0633\u062a\u0648\u0631</translation>\n     </message>\n     <message>\n-        <location line=\"+25\"/>\n+        <location line=\"+26\"/>\n         <source>Options:</source>\n         <translation>\u0627\u0646\u062a\u062e\u0627\u0628\u0647\u0627:</translation>\n     </message>\n     <message>\n-        <location line=\"+24\"/>\n+        <location line=\"+23\"/>\n         <source>Specify configuration file (default: bitcoin.conf)</source>\n         <translation>\u0641\u0627\u06cc\u0644 \u067e\u06cc\u06a9\u0631\u0628\u0646\u062f\u06cc\u0650 \u0631\u0627 \u0645\u0634\u062e\u0635 \u06a9\u0646\u06cc\u062f (\u067e\u06cc\u0634 \u0641\u0631\u0636: bitcoin.conf)</translation>\n     </message>\n@@ -2595,7 +3159,7 @@ Address: %4\n         <translation>\u062d\u0627\u0641\u0638\u0647 \u0628\u0627\u0646\u06a9 \u062f\u0627\u062f\u0647 \u0631\u0627 \u0628\u0647 \u0645\u06af\u0627\u0628\u0627\u06cc\u062a \u062a\u0646\u0638\u06cc\u0645 \u06a9\u0646\u06cc\u062f (\u067e\u06cc\u0634 \u0641\u0631\u0636: 25)</translation>\n     </message>\n     <message>\n-        <location line=\"-28\"/>\n+        <location line=\"-27\"/>\n         <source>Listen for connections on &lt;port&gt; (default: 8333 or testnet: 18333)</source>\n         <translation>\u0627\u0631\u062a\u0628\u0627\u0637\u0627\u062a \u0631\u0627 \u062f\u0631 &lt;PORT&gt; \u0628\u0634\u0646\u0648\u06cc\u062f (\u067e\u06cc\u0634 \u0641\u0631\u0636: 8333 or testnet: 18333)</translation>\n     </message>\n@@ -2605,7 +3169,7 @@ Address: %4\n         <translation>\u0646\u06af\u0647\u062f\u0627\u0631\u06cc &lt;N&gt; \u0627\u0631\u062a\u0628\u0627\u0637\u0627\u062a \u0628\u0631\u0627\u06cc \u0642\u0631\u06cc\u0646\u0647 \u0633\u0627\u0632\u06cc  (\u067e\u06cc\u0634 \u0641\u0631\u0636:125)</translation>\n     </message>\n     <message>\n-        <location line=\"-49\"/>\n+        <location line=\"-50\"/>\n         <source>Connect to a node to retrieve peer addresses, and disconnect</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2620,7 +3184,7 @@ Address: %4\n         <translation>\u0622\u0633\u062a\u0627\u0646\u0647 \u0642\u0637\u0639 \u0628\u0631\u0627\u06cc \u0642\u0631\u06cc\u0646\u0647 \u0633\u0627\u0632\u06cc \u0627\u0634\u062a\u0628\u0627\u0647 (\u067e\u06cc\u0634 \u0641\u0631\u0636:100)</translation>\n     </message>\n     <message>\n-        <location line=\"-142\"/>\n+        <location line=\"-147\"/>\n         <source>Number of seconds to keep misbehaving peers from reconnecting (default: 86400)</source>\n         <translation>\u062a\u0639\u062f\u0627\u062f \u062b\u0627\u0646\u06cc\u0647 \u0647\u0627 \u0628\u0631\u0627\u06cc \u0627\u062a\u0635\u0627\u0644 \u062f\u0648\u0628\u0627\u0631\u0647 \u0642\u0631\u06cc\u0646\u0647 \u0647\u0627\u06cc \u0627\u0634\u062a\u0628\u0627\u0647 (\u067e\u06cc\u0634 \u0641\u0631\u0636:86400)</translation>\n     </message>\n@@ -2635,7 +3199,7 @@ Address: %4\n         <translation>\u0627\u0631\u062a\u0628\u0627\u0637\u0627\u062a\u0650 JSON-RPC  \u0631\u0627 \u062f\u0631 &lt;port&gt;  \u06af\u0648\u0634 \u06a9\u0646\u06cc\u062f (\u067e\u06cc\u0634 \u0641\u0631\u0636:8332)</translation>\n     </message>\n     <message>\n-        <location line=\"+40\"/>\n+        <location line=\"+45\"/>\n         <source>Accept command line and JSON-RPC commands</source>\n         <translation>command line  \u0648 JSON-RPC commands \u0631\u0627 \u0642\u0628\u0648\u0644 \u06a9\u0646\u06cc\u062f</translation>\n     </message>\n@@ -2645,17 +3209,17 @@ Address: %4\n         <translation>\u0628\u0647 \u0639\u0646\u0648\u0627\u0646 daemon \u0628\u06a9 \u06af\u0631\u0627\u0646\u062f \u0631\u0627 \u0627\u062c\u0631\u0627 \u06a9\u0646\u06cc\u062f \u0648 \u062f\u0633\u062a\u0648\u0631\u0627\u062a \u0631\u0627 \u0642\u0628\u0648\u0644 \u0646\u0645\u0627\u06cc\u06cc\u062f</translation>\n     </message>\n     <message>\n-        <location line=\"+40\"/>\n+        <location line=\"+39\"/>\n         <source>Use the test network</source>\n         <translation>\u0627\u0632 \u062a\u0633\u062a\u0650 \u0634\u0628\u06a9\u0647 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0646\u0645\u0627\u06cc\u06cc\u062f</translation>\n     </message>\n     <message>\n-        <location line=\"-118\"/>\n+        <location line=\"-117\"/>\n         <source>Accept connections from outside (default: 1 if no -proxy or -connect)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-87\"/>\n+        <location line=\"-92\"/>\n         <source>%s, you must set a rpcpassword in the configuration file:\n %s\n It is recommended you use the following random password:\n@@ -2710,17 +3274,17 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+11\"/>\n-        <source>Set maximum size of high-priority/low-fee transactions in bytes (default: 27000)</source>\n+        <location line=\"+18\"/>\n+        <source>This is a pre-release test build - use at your own risk - do not use for mining or merchant applications</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+6\"/>\n-        <source>This is a pre-release test build - use at your own risk - do not use for mining or merchant applications</source>\n+        <location line=\"+5\"/>\n+        <source>Use separate SOCKS5 proxy to reach peers via Tor hidden services (default: -proxy)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+5\"/>\n+        <location line=\"+3\"/>\n         <source>Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2750,17 +3314,27 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+14\"/>\n+        <location line=\"+9\"/>\n+        <source>&lt;category&gt; can be:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+6\"/>\n         <source>Attempt to recover private keys from a corrupt wallet.dat</source>\n         <translation type=\"unfinished\"/>\n     </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Bitcoin Core Daemon</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n     <message>\n         <location line=\"+1\"/>\n         <source>Bitcoin RPC client version</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+2\"/>\n+        <location line=\"+1\"/>\n         <source>Block creation options:</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2770,7 +3344,12 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+2\"/>\n+        <location line=\"+1\"/>\n+        <source>Connect through SOCKS proxy</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n         <source>Connect to JSON-RPC on &lt;port&gt; (default: 8332 or testnet: 18332)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2880,7 +3459,12 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+2\"/>\n+        <location line=\"+1\"/>\n+        <source>Fee per kB to add to transactions you send</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n         <source>Find peers using DNS lookup (default: 1 unless -connect)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2899,6 +3483,11 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <source>How thorough the block verification is (0-4, default: 3)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>If &lt;category&gt; is not supplied, output all debugging information.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n     <message>\n         <location line=\"+2\"/>\n         <source>Incorrect or no genesis block found. Wrong datadir for network?</source>\n@@ -2915,17 +3504,37 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+8\"/>\n+        <location line=\"+5\"/>\n+        <source>Prepend debug output with timestamp (default: 1)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>RPC client options:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n         <source>Rebuild block chain index from current blk000??.dat files</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+6\"/>\n+        <location line=\"+5\"/>\n+        <source>Select SOCKS version for -proxy (4 or 5, default: 5)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n         <source>Send command to Bitcoin server</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n+        <location line=\"+8\"/>\n+        <source>Set maximum block size in bytes (default: %d)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+2\"/>\n         <source>Set the number of threads to service RPC calls (default: 4)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2945,7 +3554,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+8\"/>\n+        <location line=\"+7\"/>\n         <source>Verifying blocks...</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2954,13 +3563,23 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <source>Verifying wallet...</source>\n         <translation type=\"unfinished\"/>\n     </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Wait for RPC server to start</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n     <message>\n         <location line=\"+1\"/>\n         <source>Wallet %s resides outside data directory %s</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n+        <location line=\"+3\"/>\n+        <source>Warning: Deprecated argument -debugnet ignored, use -debug=net</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+2\"/>\n         <source>You need to rebuild the database using -reindex to change -txindex</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2970,17 +3589,27 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-98\"/>\n+        <location line=\"-104\"/>\n         <source>Execute command when a relevant alert is received or we see a really long fork (%s in cmd is replaced by message)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+17\"/>\n+        <location line=\"+14\"/>\n+        <source>Output debugging information (default: 0, supplying &lt;category&gt; is optional)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+2\"/>\n+        <source>Set maximum size of high-priority/low-fee transactions in bytes (default: %d)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+2\"/>\n         <source>Set the number of script verification threads (up to 16, 0 = auto, &lt;0 = leave that many cores free, default: 0)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+83\"/>\n+        <location line=\"+88\"/>\n         <source>Information</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -3020,32 +3649,12 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+2\"/>\n-        <source>Output extra debugging information. Implies all other -debug* options</source>\n-        <translation type=\"unfinished\"/>\n-    </message>\n-    <message>\n-        <location line=\"+1\"/>\n-        <source>Output extra network debugging information</source>\n-        <translation type=\"unfinished\"/>\n-    </message>\n-    <message>\n-        <location line=\"+2\"/>\n-        <source>Prepend debug output with timestamp</source>\n-        <translation>\u0628\u0631\u0648\u0646\u062f\u0627\u062f \u0627\u0634\u06a9\u0627\u0644 \u0632\u062f\u0627\u06cc\u06cc \u0628\u0627 timestamp</translation>\n-    </message>\n-    <message>\n-        <location line=\"+5\"/>\n+        <location line=\"+9\"/>\n         <source>SSL options: (see the Bitcoin Wiki for SSL setup instructions)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+1\"/>\n-        <source>Select the version of socks proxy to use (4-5, default: 5)</source>\n-        <translation type=\"unfinished\"/>\n-    </message>\n-    <message>\n-        <location line=\"+3\"/>\n+        <location line=\"+4\"/>\n         <source>Send trace/debug info to console instead of debug.log file</source>\n         <translation>\u0627\u0631\u0633\u0627\u0644 \u0627\u0637\u0644\u0627\u0639\u0627\u062a \u067e\u06cc\u06af\u06cc\u0631\u06cc/\u062e\u0637\u0627\u06cc\u0627\u0628\u06cc \u0628\u0647 \u06a9\u0646\u0633\u0648\u0644 \u0628\u0647 \u062c\u0627\u06cc \u0627\u0631\u0633\u0627\u0644 \u0628\u0647 \u0641\u0627\u06cc\u0644 debug.log</translation>\n     </message>\n@@ -3055,12 +3664,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>\u0627\u0631\u0633\u0627\u0644 \u0627\u0637\u0627\u0639\u0627\u062a \u062e\u0637\u0627\u06cc\u0627\u0628\u06cc/\u067e\u06cc\u06af\u06cc\u0631\u06cc \u0628\u0647 \u0633\u06cc\u0633\u062a\u0645 \u062e\u0637\u0627\u06cc\u0627\u0628</translation>\n     </message>\n     <message>\n-        <location line=\"+5\"/>\n-        <source>Set maximum block size in bytes (default: 250000)</source>\n-        <translation type=\"unfinished\"/>\n-    </message>\n-    <message>\n-        <location line=\"+1\"/>\n+        <location line=\"+6\"/>\n         <source>Set minimum block size in bytes (default: 0)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -3109,38 +3713,38 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <source>Use UPnP to map the listening port (default: 1 when listening)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n-    <message>\n-        <location line=\"+1\"/>\n-        <source>Use proxy to reach tor hidden services (default: same as -proxy)</source>\n-        <translation type=\"unfinished\"/>\n-    </message>\n     <message>\n         <location line=\"+2\"/>\n         <source>Username for JSON-RPC connections</source>\n         <translation>\u0634\u0646\u0627\u0633\u0647 \u06a9\u0627\u0631\u0628\u0631\u06cc \u0628\u0631\u0627\u06cc \u0627\u0631\u062a\u0628\u0627\u0637\u0627\u062a\u0650 JSON-RPC</translation>\n     </message>\n     <message>\n-        <location line=\"+5\"/>\n+        <location line=\"+6\"/>\n         <source>Warning</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+1\"/>\n+        <location line=\"+2\"/>\n         <source>Warning: This version is obsolete, upgrade required!</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <location line=\"+2\"/>\n+        <source>version</source>\n+        <translation>\u0646\u0633\u062e\u0647</translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n         <source>wallet.dat corrupt, salvage failed</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-54\"/>\n+        <location line=\"-57\"/>\n         <source>Password for JSON-RPC connections</source>\n         <translation>\u0631\u0645\u0632 \u0628\u0631\u0627\u06cc \u0627\u0631\u062a\u0628\u0627\u0637\u0627\u062a\u0650 JSON-RPC</translation>\n     </message>\n     <message>\n-        <location line=\"-70\"/>\n+        <location line=\"-69\"/>\n         <source>Allow JSON-RPC connections from specified IP address</source>\n         <translation>\u0627\u0631\u062a\u0628\u0627\u0637\u0627\u062a\u0650 JSON-RPC  \u0631\u0627 \u0627\u0632 \u0622\u062f\u0631\u0633 \u0622\u06cc.\u067e\u06cc. \u0645\u0634\u062e\u0635\u06cc \u0628\u0631\u0642\u0631\u0627\u0631 \u06a9\u0646\u06cc\u062f.</translation>\n     </message>\n@@ -3150,12 +3754,12 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>\u062f\u0633\u062a\u0648\u0631\u0627\u062a \u0631\u0627 \u0628\u0647 \u06af\u0631\u0647 \u0627\u062c\u0631\u0627 \u0634\u062f\u0647 \u062f\u0631&lt;ip&gt; \u0627\u0631\u0633\u0627\u0644 \u06a9\u0646\u06cc\u062f (\u067e\u06cc\u0634 \u0641\u0631\u0636:127.0.0.1)</translation>\n     </message>\n     <message>\n-        <location line=\"-126\"/>\n+        <location line=\"-131\"/>\n         <source>Execute command when the best block changes (%s in cmd is replaced by block hash)</source>\n         <translation>\u062f\u0633\u062a\u0648\u0631 \u0631\u0627 \u0648\u0642\u062a\u06cc \u0628\u0647\u062a\u0631\u06cc\u0646 \u0628\u0644\u0627\u06a9 \u062a\u063a\u06cc\u06cc\u0631 \u06a9\u0631\u062f \u0627\u062c\u0631\u0627 \u06a9\u0646 (%s \u062f\u0631 \u062f\u0633\u062a\u0648\u0631 \u062a\u0648\u0633\u0637 block hash \u062c\u0627\u06cc\u06af\u0632\u06cc\u0646 \u0634\u062f\u0647 \u0627\u0633\u062a)</translation>\n     </message>\n     <message>\n-        <location line=\"+155\"/>\n+        <location line=\"+160\"/>\n         <source>Upgrade wallet to latest format</source>\n         <translation>wallet \u0631\u0627 \u0628\u0647 \u062c\u062f\u06cc\u062f\u062a\u0631\u06cc\u0646 \u0646\u0633\u062e\u0647 \u0631\u0648\u0632\u0622\u0645\u062f \u06a9\u0646\u06cc\u062f</translation>\n     </message>\n@@ -3195,22 +3799,17 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-95\"/>\n-        <source>Connect through socks proxy</source>\n-        <translation type=\"unfinished\"/>\n-    </message>\n-    <message>\n-        <location line=\"-11\"/>\n+        <location line=\"-106\"/>\n         <source>Allow DNS lookups for -addnode, -seednode and -connect</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+58\"/>\n+        <location line=\"+59\"/>\n         <source>Loading addresses...</source>\n         <translation>\u0644\u0648\u062f \u0634\u062f\u0646 \u0622\u062f\u0631\u0633\u0647\u0627..</translation>\n     </message>\n     <message>\n-        <location line=\"-36\"/>\n+        <location line=\"-37\"/>\n         <source>Error loading wallet.dat: Wallet corrupted</source>\n         <translation>\u062e\u0637\u0627 \u062f\u0631 \u0647\u0646\u06af\u0627\u0645 \u0644\u0648\u062f \u0634\u062f\u0646 wallet.dat: Wallet corrupted</translation>\n     </message>\n@@ -3230,12 +3829,12 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>\u062e\u0637\u0627 \u062f\u0631 \u0647\u0646\u06af\u0627\u0645 \u0644\u0648\u062f \u0634\u062f\u0646 wallet.dat</translation>\n     </message>\n     <message>\n-        <location line=\"+30\"/>\n+        <location line=\"+31\"/>\n         <source>Invalid -proxy address: &apos;%s&apos;</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+57\"/>\n+        <location line=\"+56\"/>\n         <source>Unknown network specified in -onlynet: &apos;%s&apos;</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -3255,7 +3854,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+46\"/>\n+        <location line=\"+47\"/>\n         <source>Invalid amount for -paytxfee=&lt;amount&gt;: &apos;%s&apos;</source>\n         <translation>\u0645\u06cc\u0632\u0627\u0646 \u0627\u0634\u062a\u0628\u0627\u0647 \u0627\u0633\u062a for -paytxfee=&lt;amount&gt;: &apos;%s&apos;</translation>\n     </message>\n@@ -3275,27 +3874,22 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>\u0644\u0648\u062f \u0634\u062f\u0646 \u0646\u0645\u0627\u06cc\u0647 \u0628\u0644\u0627\u06a9\u0647\u0627..</translation>\n     </message>\n     <message>\n-        <location line=\"-60\"/>\n+        <location line=\"-61\"/>\n         <source>Add a node to connect to and attempt to keep the connection open</source>\n         <translation>\u06cc\u06a9 \u06af\u0631\u0647 \u0628\u0631\u0627\u06cc \u0627\u062a\u0635\u0627\u0644 \u0627\u0636\u0627\u0641\u0647 \u06a9\u0646\u06cc\u062f \u0648 \u062a\u0644\u0627\u0634 \u06a9\u0646\u06cc\u062f \u062a\u0627 \u0627\u062a\u0635\u0627\u0644 \u0631\u0627 \u0628\u0627\u0632 \u0646\u06af\u0627\u0647 \u062f\u0627\u0631\u06cc\u062f</translation>\n     </message>\n     <message>\n-        <location line=\"-28\"/>\n+        <location line=\"-32\"/>\n         <source>Unable to bind to %s on this computer. Bitcoin is probably already running.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+69\"/>\n-        <source>Fee per KB to add to transactions you send</source>\n-        <translation>\u0647\u0632\u06cc\u0646\u0647 \u0628\u0631 \u0627\u0633\u0627\u0633 \u06a9\u06cc\u0644\u0648 \u0628\u0627\u06cc\u062a \u0628\u0631\u0627\u06cc \u0627\u0636\u0627\u0641\u0647 \u0634\u062f\u0646 \u0628\u0647 \u062a\u0631\u0627\u06a9\u0646\u0634\u06cc \u06a9\u0647 \u0627\u0631\u0633\u0627\u0644 \u06a9\u0631\u062f\u0647 \u0627\u06cc\u062f</translation>\n-    </message>\n-    <message>\n-        <location line=\"+20\"/>\n+        <location line=\"+94\"/>\n         <source>Loading wallet...</source>\n         <translation>wallet \u062f\u0631 \u062d\u0627\u0644 \u0644\u0648\u062f \u0634\u062f\u0646 \u0627\u0633\u062a...</translation>\n     </message>\n     <message>\n-        <location line=\"-54\"/>\n+        <location line=\"-55\"/>\n         <source>Cannot downgrade wallet</source>\n         <translation>\u0642\u0627\u0628\u0644\u06cc\u062a \u0628\u0631\u06af\u0634\u062a \u0628\u0647 \u0646\u0633\u062e\u0647 \u0642\u0628\u0644\u06cc \u0628\u0631\u0627\u06cc wallet \u0627\u0645\u06a9\u0627\u0646 \u067e\u0630\u06cc\u0631 \u0646\u06cc\u0633\u062a</translation>\n     </message>\n@@ -3325,7 +3919,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>\u062e\u0637\u0627</translation>\n     </message>\n     <message>\n-        <location line=\"-33\"/>\n+        <location line=\"-34\"/>\n         <source>You must set rpcpassword=&lt;password&gt; in the configuration file:\n %s\n If the file does not exist, create it with owner-readable-only file permissions.</source>"
      },
      {
        "sha": "84cb2414a36f7e464b4efda741ab25d18e46f0b2",
        "filename": "src/qt/locale/bitcoin_fr.ts",
        "status": "modified",
        "additions": 1061,
        "deletions": 466,
        "changes": 1527,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6d697e9fa45b3f3bf67d79cc3d17717b68a43825/src/qt/locale/bitcoin_fr.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6d697e9fa45b3f3bf67d79cc3d17717b68a43825/src/qt/locale/bitcoin_fr.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_fr.ts?ref=6d697e9fa45b3f3bf67d79cc3d17717b68a43825"
      },
      {
        "sha": "0adaef4e25f843621594183d447e13615609782d",
        "filename": "src/qt/locale/bitcoin_he.ts",
        "status": "modified",
        "additions": 1022,
        "deletions": 427,
        "changes": 1449,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6d697e9fa45b3f3bf67d79cc3d17717b68a43825/src/qt/locale/bitcoin_he.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6d697e9fa45b3f3bf67d79cc3d17717b68a43825/src/qt/locale/bitcoin_he.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_he.ts?ref=6d697e9fa45b3f3bf67d79cc3d17717b68a43825",
        "patch": "@@ -3,13 +3,13 @@\n     <name>AboutDialog</name>\n     <message>\n         <location filename=\"../forms/aboutdialog.ui\" line=\"+14\"/>\n-        <source>About Bitcoin</source>\n-        <translation>\u05d0\u05d5\u05d3\u05d5\u05ea \u05d1\u05d9\u05d8\u05e7\u05d5\u05d9\u05df</translation>\n+        <source>About Bitcoin Core</source>\n+        <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <location line=\"+39\"/>\n-        <source>&lt;b&gt;Bitcoin&lt;/b&gt; version</source>\n-        <translation>\u05d2\u05e8\u05e1\u05ea &lt;b&gt;\u05d1\u05d9\u05d8\u05e7\u05d5\u05d9\u05df&lt;/b&gt;</translation>\n+        <source>&lt;b&gt;Bitcoin Core&lt;/b&gt; version</source>\n+        <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <location line=\"+57\"/>\n@@ -27,7 +27,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n \u05d4\u05de\u05d5\u05e6\u05e8 \u05d4\u05d6\u05d4 \u05db\u05d5\u05dc\u05dc \u05ea\u05d5\u05db\u05e0\u05d4 \u05e9\u05e4\u05d5\u05ea\u05d7\u05d4 \u05e2&quot;\u05d9 \u05e4\u05e8\u05d5\u05d9\u05e7\u05d8 OpenSSL \u05dc\u05e9\u05d9\u05de\u05d5\u05e9 \u05d1\u05ea\u05d9\u05d1\u05ea \u05d4\u05db\u05dc\u05d9\u05dd OpenSSL (http://www.openssl.org/) \u05d5\u05ea\u05d5\u05db\u05e0\u05d4 \u05e7\u05e8\u05d9\u05e4\u05d8\u05d5\u05d2\u05e8\u05e4\u05d9\u05ea \u05e9\u05e0\u05db\u05ea\u05d1\u05d4 \u05e2&quot;\u05d9 \u05d0\u05e8\u05d9\u05e7 \u05d9\u05d0\u05e0\u05d2 (eay@cryptsoft.com) \u05d5\u05ea\u05d5\u05db\u05e0\u05ea UPnP \u05e9\u05e0\u05db\u05ea\u05d1\u05d4 \u05e2&quot;\u05d9 \u05ea\u05d5\u05de\u05e1 \u05d1\u05e8\u05e0\u05e8\u05d3.</translation>\n     </message>\n     <message>\n-        <location filename=\"../aboutdialog.cpp\" line=\"+14\"/>\n+        <location filename=\"../aboutdialog.cpp\" line=\"+19\"/>\n         <source>Copyright</source>\n         <translation>\u05d6\u05db\u05d5\u05d9\u05d5\u05ea \u05d9\u05d5\u05e6\u05e8\u05d9\u05dd</translation>\n     </message>\n@@ -52,7 +52,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n     <message>\n         <location line=\"+3\"/>\n         <source>&amp;New</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>&amp;\u05d7\u05d3\u05e9</translation>\n     </message>\n     <message>\n         <location line=\"+11\"/>\n@@ -70,7 +70,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location filename=\"../addressbookpage.cpp\" line=\"+72\"/>\n+        <location filename=\"../addressbookpage.cpp\" line=\"+74\"/>\n         <source>&amp;Copy Address</source>\n         <translation>\u05d4\u05e2\u05ea\u05e7 \u05db\u05ea\u05d5\u05d1\u05ea</translation>\n     </message>\n@@ -92,12 +92,12 @@ This product includes software developed by the OpenSSL Project for use in the O\n     <message>\n         <location line=\"-27\"/>\n         <source>&amp;Delete</source>\n-        <translation>\u05de\u05d7\u05e7</translation>\n+        <translation>&amp;\u05de\u05d7\u05e7</translation>\n     </message>\n     <message>\n         <location filename=\"../addressbookpage.cpp\" line=\"-30\"/>\n         <source>Choose the address to send coins to</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u05d1\u05d7\u05e8 \u05d0\u05ea \u05d4\u05db\u05ea\u05d5\u05d1\u05ea \u05d0\u05dc\u05d9\u05d4 \u05ea\u05e8\u05e6\u05d4 \u05dc\u05e9\u05dc\u05d5\u05d7 \u05d0\u05ea \u05d4\u05de\u05d8\u05d1\u05e2\u05d5\u05ea</translation>\n     </message>\n     <message>\n         <location line=\"+1\"/>\n@@ -112,12 +112,12 @@ This product includes software developed by the OpenSSL Project for use in the O\n     <message>\n         <location line=\"+6\"/>\n         <source>Sending addresses</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u05db\u05ea\u05d5\u05d1\u05ea \u05dc\u05e9\u05dc\u05d9\u05d7\u05d4</translation>\n     </message>\n     <message>\n         <location line=\"+1\"/>\n         <source>Receiving addresses</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u05e7\u05d1\u05dc \u05db\u05ea\u05d5\u05d1\u05d5\u05ea</translation>\n     </message>\n     <message>\n         <location line=\"+7\"/>\n@@ -140,7 +140,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation>\u05e2\u05e8\u05d9\u05db\u05d4</translation>\n     </message>\n     <message>\n-        <location line=\"+197\"/>\n+        <location line=\"+194\"/>\n         <source>Export Address List</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -163,7 +163,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n <context>\n     <name>AddressTableModel</name>\n     <message>\n-        <location filename=\"../addresstablemodel.cpp\" line=\"+164\"/>\n+        <location filename=\"../addresstablemodel.cpp\" line=\"+168\"/>\n         <source>Label</source>\n         <translation>\u05ea\u05d5\u05d9\u05ea</translation>\n     </message>\n@@ -201,7 +201,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation>\u05d7\u05d6\u05d5\u05e8 \u05e2\u05dc \u05d4\u05e1\u05d9\u05e1\u05de\u05d4 \u05d4\u05d7\u05d3\u05e9\u05d4</translation>\n     </message>\n     <message>\n-        <location filename=\"../askpassphrasedialog.cpp\" line=\"+34\"/>\n+        <location filename=\"../askpassphrasedialog.cpp\" line=\"+40\"/>\n         <source>Enter the new passphrase to the wallet.&lt;br/&gt;Please use a passphrase of &lt;b&gt;10 or more random characters&lt;/b&gt;, or &lt;b&gt;eight or more words&lt;/b&gt;.</source>\n         <translation>\u05d4\u05db\u05e0\u05e1 \u05d0\u05ea \u05d4\u05e1\u05d9\u05e1\u05de\u05d4 \u05d4\u05d7\u05d3\u05e9\u05d4 \u05dc\u05d0\u05e8\u05e0\u05e7. &lt;br/&gt;\u05d0\u05e0\u05d0 \u05d4\u05e9\u05ea\u05de\u05e9 \u05d1\u05e1\u05d9\u05e1\u05de\u05d4 \u05d4\u05de\u05db\u05d9\u05dc\u05d4 &lt;b&gt;10 \u05ea\u05d5\u05d9\u05dd \u05d0\u05e7\u05e8\u05d0\u05d9\u05d9\u05dd \u05d0\u05d5 \u05d9\u05d5\u05ea\u05e8&lt;/b&gt;, \u05d0\u05d5 &lt;b&gt;\u05e9\u05de\u05d5\u05e0\u05d4 \u05de\u05d9\u05dc\u05d9\u05dd \u05d0\u05d5 \u05d9\u05d5\u05ea\u05e8&lt;/b&gt;.</translation>\n     </message>\n@@ -322,17 +322,17 @@ This product includes software developed by the OpenSSL Project for use in the O\n <context>\n     <name>BitcoinGUI</name>\n     <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"+250\"/>\n+        <location filename=\"../bitcoingui.cpp\" line=\"+260\"/>\n         <source>Sign &amp;message...</source>\n         <translation>\u05d7\u05ea\u05d5\u05dd \u05e2\u05dc \u05d4\u05d5\u05d3\u05e2\u05d4</translation>\n     </message>\n     <message>\n-        <location line=\"+254\"/>\n+        <location line=\"+290\"/>\n         <source>Synchronizing with network...</source>\n         <translation>\u05de\u05e1\u05ea\u05e0\u05db\u05e8\u05df \u05e2\u05dd \u05d4\u05e8\u05e9\u05ea...</translation>\n     </message>\n     <message>\n-        <location line=\"-324\"/>\n+        <location line=\"-360\"/>\n         <source>&amp;Overview</source>\n         <translation>&amp;\u05e1\u05e7\u05d9\u05e8\u05d4</translation>\n     </message>\n@@ -398,7 +398,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation>\u05e9\u05e0\u05d4 \u05e1\u05d9\u05e1\u05de\u05d0</translation>\n     </message>\n     <message>\n-        <location line=\"+259\"/>\n+        <location line=\"+295\"/>\n         <source>Importing blocks from disk...</source>\n         <translation>\u05de\u05d9\u05d9\u05d1\u05d0 \u05d1\u05dc\u05d5\u05e7\u05d9\u05dd \u05de\u05d4\u05d3\u05d9\u05e1\u05e7...</translation>\n     </message>\n@@ -408,7 +408,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation>\u05de\u05d7\u05d3\u05e9 \u05d0\u05ea \u05d0\u05d9\u05e0\u05d3\u05e7\u05e1 \u05d4\u05d1\u05dc\u05d5\u05e7\u05d9\u05dd \u05d1\u05d3\u05d9\u05e1\u05e7...</translation>\n     </message>\n     <message>\n-        <location line=\"-322\"/>\n+        <location line=\"-358\"/>\n         <source>Send coins to a Bitcoin address</source>\n         <translation>\u05e9\u05dc\u05d7 \u05de\u05d8\u05d1\u05e2\u05d5\u05ea \u05dc\u05db\u05ea\u05d5\u05d1\u05ea \u05d1\u05d9\u05d8\u05e7\u05d5\u05d9\u05df</translation>\n     </message>\n@@ -443,36 +443,28 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation>\u05d0\u05de\u05ea \u05d4\u05d5\u05d3\u05e2\u05d4...</translation>\n     </message>\n     <message>\n-        <location line=\"-180\"/>\n-        <location line=\"+6\"/>\n-        <location line=\"+513\"/>\n+        <location line=\"+375\"/>\n         <source>Bitcoin</source>\n         <translation>\u05d1\u05d9\u05d8\u05e7\u05d5\u05d9\u05df</translation>\n     </message>\n     <message>\n-        <location line=\"-519\"/>\n-        <location line=\"+6\"/>\n+        <location line=\"-563\"/>\n+        <location line=\"+10\"/>\n         <source>Wallet</source>\n         <translation>\u05d0\u05e8\u05e0\u05e7</translation>\n     </message>\n     <message>\n-        <location line=\"+109\"/>\n+        <location line=\"+113\"/>\n         <source>&amp;Send</source>\n-        <translation>\u05d5\u05e9\u05dc\u05d7</translation>\n+        <translation>&amp;\u05e9\u05dc\u05d7</translation>\n     </message>\n     <message>\n         <location line=\"+7\"/>\n         <source>&amp;Receive</source>\n         <translation>\u05d5\u05e7\u05d1\u05dc</translation>\n     </message>\n     <message>\n-        <location line=\"+28\"/>\n-        <location line=\"+2\"/>\n-        <source>&amp;About Bitcoin</source>\n-        <translation>\u05d0\u05d5\u05d3\u05d5\u05ea \u05d1\u05d9\u05d8\u05e7\u05d5\u05d9\u05df</translation>\n-    </message>\n-    <message>\n-        <location line=\"+14\"/>\n+        <location line=\"+44\"/>\n         <location line=\"+2\"/>\n         <source>&amp;Show / Hide</source>\n         <translation>\u05d4\u05e6\u05d2 / \u05d4\u05e1\u05ea\u05e8</translation>\n@@ -498,12 +490,12 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation>\u05d0\u05de\u05ea \u05d4\u05d5\u05d3\u05e2\u05d5\u05ea \u05db\u05d3\u05d9 \u05dc\u05d4\u05d1\u05d8\u05d9\u05d7 \u05e9\u05d4\u05df \u05e0\u05d7\u05ea\u05de\u05d5 \u05e2\u05dd \u05db\u05ea\u05d5\u05d1\u05ea \u05d1\u05d9\u05d8\u05e7\u05d5\u05d9\u05df \u05de\u05e1\u05d5\u05d9\u05de\u05d5\u05ea</translation>\n     </message>\n     <message>\n-        <location line=\"+35\"/>\n+        <location line=\"+39\"/>\n         <source>&amp;File</source>\n         <translation>&amp;\u05e7\u05d5\u05d1\u05e5</translation>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n+        <location line=\"+11\"/>\n         <source>&amp;Settings</source>\n         <translation>\u05d4&amp;\u05d2\u05d3\u05e8\u05d5\u05ea</translation>\n     </message>\n@@ -518,25 +510,37 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation>\u05e1\u05e8\u05d2\u05dc \u05db\u05dc\u05d9\u05dd \u05d8\u05d0\u05d1\u05d9\u05dd</translation>\n     </message>\n     <message>\n-        <location line=\"-235\"/>\n-        <location line=\"+294\"/>\n+        <location line=\"-244\"/>\n+        <location line=\"+321\"/>\n         <source>[testnet]</source>\n         <translation>[\u05e8\u05e9\u05ea-\u05d1\u05d3\u05d9\u05e7\u05d4]</translation>\n     </message>\n     <message>\n-        <location line=\"-177\"/>\n+        <location line=\"-331\"/>\n+        <location line=\"+10\"/>\n+        <source>Bitcoin Core</source>\n+        <translation>\u05dc\u05d9\u05d1\u05ea \u05d1\u05d9\u05d8\u05e7\u05d5\u05d9\u05df</translation>\n+    </message>\n+    <message>\n+        <location line=\"+121\"/>\n         <source>Request payments (generates QR codes and bitcoin: URIs)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+63\"/>\n-        <source>&amp;Used sending addresses...</source>\n+        <location line=\"+27\"/>\n+        <location line=\"+2\"/>\n+        <source>&amp;About Bitcoin Core</source>\n         <translation type=\"unfinished\"/>\n     </message>\n+    <message>\n+        <location line=\"+34\"/>\n+        <source>&amp;Used sending addresses...</source>\n+        <translation>\u05db\u05ea\u05d5\u05d1\u05ea \u05dc\u05e9\u05dc\u05d9\u05d7\u05d4 \u05e9\u05d4\u05d9\u05d5 &amp;\u05d1\u05e9\u05d9\u05de\u05d5\u05e9...</translation>\n+    </message>\n     <message>\n         <location line=\"+1\"/>\n         <source>Show the list of used sending addresses and labels</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u05d4\u05e6\u05d2 \u05d0\u05ea \u05e8\u05e9\u05d9\u05de\u05ea \u05d4\u05db\u05ea\u05d5\u05d1\u05d5\u05ea \u05dc\u05e9\u05dc\u05d9\u05d7\u05d4 \u05e9\u05d4\u05d9\u05d5 \u05d1\u05e9\u05d9\u05de\u05d5\u05e9 \u05dc\u05e8\u05d1\u05d5\u05ea \u05d4\u05ea\u05d5\u05d5\u05d9\u05d5\u05ea</translation>\n     </message>\n     <message>\n         <location line=\"+1\"/>\n@@ -549,13 +553,23 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+106\"/>\n+        <location line=\"+2\"/>\n+        <source>Open URI...</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Open a bitcoin: URI or payment request</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+126\"/>\n         <location line=\"+5\"/>\n         <source>Bitcoin client</source>\n         <translation>\u05ea\u05d5\u05db\u05e0\u05ea \u05d1\u05d9\u05d8\u05e7\u05d5\u05d9\u05df</translation>\n     </message>\n     <message numerus=\"yes\">\n-        <location line=\"+120\"/>\n+        <location line=\"+133\"/>\n         <source>%n active connection(s) to Bitcoin network</source>\n         <translation><numerusform>\u05d7\u05d9\u05d1\u05d5\u05e8 \u05e4\u05e2\u05d9\u05dc \u05d0\u05d7\u05d3 \u05dc\u05e8\u05e9\u05ea \u05d4\u05d1\u05d9\u05d8\u05e7\u05d5\u05d9\u05df</numerusform><numerusform>%n \u05d7\u05d9\u05d1\u05d5\u05e8\u05d9\u05dd \u05e4\u05e2\u05d9\u05dc\u05d9\u05dd \u05dc\u05e8\u05e9\u05ea \u05d4\u05d1\u05d9\u05d8\u05e7\u05d5\u05d9\u05df</numerusform></translation>\n     </message>\n@@ -567,7 +581,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n     <message>\n         <location line=\"+12\"/>\n         <source>Processed %1 of %2 (estimated) blocks of transaction history.</source>\n-        <translation>1% \u05de\u05ea\u05d5\u05da 2% (\u05de\u05e9\u05d5\u05e2\u05e8) \u05d1\u05dc\u05d5\u05e7\u05d9\u05dd \u05e9\u05dc \u05d4\u05e1\u05d8\u05d5\u05e8\u05d9\u05d9\u05ea \u05e4\u05e2\u05d5\u05dc\u05ea \u05e2\u05d5\u05d1\u05d3\u05d5 </translation>\n+        <translation>%1 \u05de\u05ea\u05d5\u05da %2 (\u05de\u05e9\u05d5\u05e2\u05e8) \u05d1\u05dc\u05d5\u05e7\u05d9\u05dd \u05e9\u05dc \u05d4\u05e1\u05d8\u05d5\u05e8\u05d9\u05d9\u05ea \u05e4\u05e2\u05d5\u05dc\u05d5\u05ea \u05e2\u05d5\u05d1\u05d3\u05d5.</translation>\n     </message>\n     <message>\n         <location line=\"+4\"/>\n@@ -662,17 +676,7 @@ Address: %4\n \u05db\u05ea\u05d5\u05d1\u05ea: %4</translation>\n     </message>\n     <message>\n-        <location line=\"+34\"/>\n-        <source>URI handling</source>\n-        <translation>\u05ea\u05e4\u05e2\u05d5\u05dc URI</translation>\n-    </message>\n-    <message>\n-        <location line=\"+0\"/>\n-        <source>URI can not be parsed! This can be caused by an invalid Bitcoin address or malformed URI parameters.</source>\n-        <translation>\u05dc\u05d0 \u05e0\u05d9\u05ea\u05df \u05dc\u05e0\u05ea\u05d7 URI! \u05d6\u05d4 \u05d9\u05db\u05d5\u05dc \u05dc\u05d4\u05d9\u05d2\u05e8\u05dd \u05db\u05ea\u05d5\u05e6\u05d0\u05d4 \u05de\u05db\u05ea\u05d5\u05d1\u05ea \u05d1\u05d9\u05d8\u05e7\u05d5\u05d9\u05df \u05dc\u05d0 \u05ea\u05e7\u05d9\u05e0\u05d4 \u05d0\u05d5 \u05e4\u05e8\u05de\u05d8\u05e8\u05d9 URI \u05d7\u05e1\u05e8\u05d9 \u05e6\u05d5\u05e8\u05d4 \u05ea\u05e7\u05d9\u05e0\u05d4.</translation>\n-    </message>\n-    <message>\n-        <location line=\"+45\"/>\n+        <location line=\"+67\"/>\n         <source>Wallet is &lt;b&gt;encrypted&lt;/b&gt; and currently &lt;b&gt;unlocked&lt;/b&gt;</source>\n         <translation>\u05d4\u05d0\u05e8\u05e0\u05e7 &lt;b&gt;\u05de\u05d5\u05e6\u05e4\u05df&lt;/b&gt; \u05d5\u05db\u05e8\u05d2\u05e2 &lt;b&gt;\u05e4\u05ea\u05d5\u05d7&lt;/b&gt;</translation>\n     </message>\n@@ -682,241 +686,566 @@ Address: %4\n         <translation>\u05d4\u05d0\u05e8\u05e0\u05e7 &lt;b&gt;\u05de\u05d5\u05e6\u05e4\u05df&lt;/b&gt; \u05d5\u05db\u05e8\u05d2\u05e2 &lt;b&gt;\u05e0\u05e2\u05d5\u05dc&lt;/b&gt;</translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoin.cpp\" line=\"+110\"/>\n+        <location filename=\"../bitcoin.cpp\" line=\"+116\"/>\n         <source>A fatal error occurred. Bitcoin can no longer continue safely and will quit.</source>\n         <translation>\u05e9\u05d2\u05d9\u05d0\u05d4 \u05e1\u05d5\u05e4\u05e0\u05d9\u05ea \u05d0\u05d9\u05e8\u05e2\u05d4. \u05d1\u05d9\u05d8\u05e7\u05d5\u05d9\u05df \u05d0\u05d9\u05e0\u05d5 \u05d9\u05db\u05d5\u05dc \u05dc\u05d4\u05de\u05e9\u05d9\u05da \u05dc\u05e4\u05e2\u05d5\u05dc \u05d1\u05d1\u05d8\u05d7\u05d4 \u05d5\u05dc\u05db\u05df \u05d9\u05d9\u05e1\u05d2\u05e8.</translation>\n     </message>\n </context>\n <context>\n     <name>ClientModel</name>\n     <message>\n-        <location filename=\"../clientmodel.cpp\" line=\"+115\"/>\n+        <location filename=\"../clientmodel.cpp\" line=\"+119\"/>\n         <source>Network Alert</source>\n         <translation>\u05d0\u05d6\u05e2\u05e7\u05ea \u05e8\u05e9\u05ea</translation>\n     </message>\n </context>\n <context>\n-    <name>EditAddressDialog</name>\n+    <name>CoinControlDialog</name>\n     <message>\n-        <location filename=\"../forms/editaddressdialog.ui\" line=\"+14\"/>\n-        <source>Edit Address</source>\n-        <translation>\u05e2\u05e8\u05d5\u05da \u05db\u05ea\u05d5\u05d1\u05ea</translation>\n+        <location filename=\"../forms/coincontroldialog.ui\" line=\"+14\"/>\n+        <source>Coin Control Address Selection</source>\n+        <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+11\"/>\n-        <source>&amp;Label</source>\n-        <translation>\u05ea&amp;\u05d5\u05d9\u05ea</translation>\n+        <location line=\"+34\"/>\n+        <source>Quantity:</source>\n+        <translation>\u05db\u05de\u05d5\u05ea:</translation>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n-        <source>The label associated with this address list entry</source>\n+        <location line=\"+29\"/>\n+        <source>Bytes:</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+17\"/>\n-        <source>The address associated with this address list entry. This can only be modified for sending addresses.</source>\n-        <translation type=\"unfinished\"/>\n+        <location line=\"+45\"/>\n+        <source>Amount:</source>\n+        <translation>\u05db\u05de\u05d5\u05ea:</translation>\n     </message>\n     <message>\n-        <location line=\"-10\"/>\n-        <source>&amp;Address</source>\n-        <translation>&amp;\u05db\u05ea\u05d5\u05d1\u05ea</translation>\n+        <location line=\"+29\"/>\n+        <source>Priority:</source>\n+        <translation>\u05e7\u05d3\u05d9\u05de\u05d5\u05ea:</translation>\n     </message>\n     <message>\n-        <location filename=\"../editaddressdialog.cpp\" line=\"+21\"/>\n-        <source>New receiving address</source>\n-        <translation>\u05db\u05ea\u05d5\u05d1\u05ea \u05d7\u05d3\u05e9\u05d4 \u05dc\u05e7\u05d1\u05dc\u05d4</translation>\n+        <location line=\"+45\"/>\n+        <source>Fee:</source>\n+        <translation>\u05ea\u05e9\u05dc\u05d5\u05dd:</translation>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n-        <source>New sending address</source>\n-        <translation>\u05db\u05ea\u05d5\u05d1\u05ea \u05d7\u05d3\u05e9\u05d4 \u05dc\u05e9\u05dc\u05d9\u05d7\u05d4</translation>\n+        <location line=\"+32\"/>\n+        <source>Low Output:</source>\n+        <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+3\"/>\n-        <source>Edit receiving address</source>\n-        <translation>\u05e2\u05e8\u05d5\u05da \u05db\u05ea\u05d5\u05d1\u05ea \u05dc\u05e7\u05d1\u05dc\u05d4</translation>\n+        <location line=\"+48\"/>\n+        <source>After Fee:</source>\n+        <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n-        <source>Edit sending address</source>\n-        <translation>\u05e2\u05e8\u05d5\u05da \u05db\u05ea\u05d5\u05d1\u05ea \u05dc\u05e9\u05dc\u05d9\u05d7\u05d4</translation>\n+        <location line=\"+32\"/>\n+        <source>Change:</source>\n+        <translation>\u05e9\u05d9\u05e0\u05d5\u05d9:</translation>\n     </message>\n     <message>\n-        <location line=\"+76\"/>\n-        <source>The entered address &quot;%1&quot; is already in the address book.</source>\n-        <translation>\u05d4\u05db\u05ea\u05d5\u05d1\u05ea \u05e9\u05d4\u05db\u05e0\u05e1\u05ea &quot;%1&quot; \u05db\u05d1\u05e8 \u05e0\u05de\u05e6\u05d0\u05ea \u05d1\u05e4\u05e0\u05e7\u05e1 \u05d4\u05db\u05ea\u05d5\u05d1\u05d5\u05ea.</translation>\n+        <location line=\"+63\"/>\n+        <source>(un)select all</source>\n+        <translation>(\u05de\u05d7\u05e7)(\u05d1\u05d7\u05e8) \u05d4\u05db\u05dc</translation>\n     </message>\n     <message>\n-        <location line=\"-5\"/>\n-        <source>The entered address &quot;%1&quot; is not a valid Bitcoin address.</source>\n-        <translation>\u05d4\u05db\u05ea\u05d5\u05d1\u05ea \u05e9\u05d4\u05d5\u05db\u05e0\u05e1\u05d4 &quot;%1&quot; \u05d0\u05d9\u05e0\u05d4 \u05db\u05ea\u05d5\u05d1\u05ea \u05d1\u05d9\u05d8\u05e7\u05d5\u05d9\u05df \u05ea\u05e7\u05d9\u05e0\u05d4.</translation>\n+        <location line=\"+13\"/>\n+        <source>Tree mode</source>\n+        <translation>\u05de\u05e6\u05d1 \u05e2\u05e5</translation>\n+    </message>\n+    <message>\n+        <location line=\"+16\"/>\n+        <source>List mode</source>\n+        <translation>\u05de\u05e6\u05e8 \u05e8\u05e9\u05d9\u05de\u05d4</translation>\n+    </message>\n+    <message>\n+        <location line=\"+52\"/>\n+        <source>Amount</source>\n+        <translation>\u05db\u05de\u05d5\u05ea</translation>\n     </message>\n     <message>\n         <location line=\"+10\"/>\n-        <source>Could not unlock wallet.</source>\n-        <translation>\u05e4\u05ea\u05d9\u05d7\u05ea \u05d4\u05d0\u05e8\u05e0\u05e7 \u05e0\u05db\u05e9\u05dc\u05d4.</translation>\n+        <source>Address</source>\n+        <translation>\u05db\u05ea\u05d5\u05d1\u05ea</translation>\n     </message>\n     <message>\n         <location line=\"+5\"/>\n-        <source>New key generation failed.</source>\n-        <translation>\u05d9\u05e6\u05d9\u05e8\u05ea \u05de\u05e4\u05ea\u05d7 \u05d7\u05d3\u05e9 \u05e0\u05db\u05e9\u05dc\u05d4.</translation>\n+        <source>Date</source>\n+        <translation>\u05ea\u05d0\u05e8\u05d9\u05da</translation>\n     </message>\n-</context>\n-<context>\n-    <name>FreespaceChecker</name>\n     <message>\n-        <location filename=\"../intro.cpp\" line=\"+61\"/>\n-        <source>A new data directory will be created.</source>\n+        <location line=\"+5\"/>\n+        <source>Confirmations</source>\n+        <translation>\u05d0\u05d9\u05e9\u05d5\u05e8\u05d9\u05dd</translation>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>Confirmed</source>\n+        <translation>\u05de\u05d0\u05d5\u05e9\u05e8</translation>\n+    </message>\n+    <message>\n+        <location line=\"+5\"/>\n+        <source>Priority</source>\n+        <translation>\u05e7\u05d3\u05d9\u05de\u05d5\u05ea</translation>\n+    </message>\n+    <message>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"+42\"/>\n+        <source>Copy address</source>\n+        <translation>\u05d4\u05e2\u05ea\u05e7 \u05db\u05ea\u05d5\u05d1\u05ea</translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Copy label</source>\n+        <translation>\u05d4\u05e2\u05ea\u05e7 \u05ea\u05d5\u05d9\u05ea</translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <location line=\"+26\"/>\n+        <source>Copy amount</source>\n+        <translation>\u05d4\u05e2\u05ea\u05e7 \u05db\u05de\u05d5\u05ea</translation>\n+    </message>\n+    <message>\n+        <location line=\"-25\"/>\n+        <source>Copy transaction ID</source>\n+        <translation>\u05d4\u05e2\u05ea\u05e7 \u05de\u05d6\u05d4\u05d4 \u05e4\u05e2\u05d5\u05dc\u05d4</translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Lock unspent</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+22\"/>\n-        <source>name</source>\n+        <location line=\"+1\"/>\n+        <source>Unlock unspent</source>\n         <translation type=\"unfinished\"/>\n     </message>\n+    <message>\n+        <location line=\"+22\"/>\n+        <source>Copy quantity</source>\n+        <translation>\u05d4\u05e2\u05ea\u05e7 \u05db\u05de\u05d5\u05ea</translation>\n+    </message>\n     <message>\n         <location line=\"+2\"/>\n-        <source>Directory already exists. Add %1 if you intend to create a new directory here.</source>\n+        <source>Copy fee</source>\n+        <translation>\u05d4\u05e2\u05ea\u05e7 \u05de\u05d7\u05d9\u05e8</translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Copy after fee</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+3\"/>\n-        <source>Path already exists, and is not a directory.</source>\n+        <location line=\"+1\"/>\n+        <source>Copy bytes</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+7\"/>\n-        <source>Cannot create data directory here.</source>\n+        <location line=\"+1\"/>\n+        <source>Copy priority</source>\n+        <translation>\u05d4\u05e2\u05ea\u05e7 \u05e7\u05d3\u05d9\u05de\u05d5\u05ea</translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Copy low output</source>\n         <translation type=\"unfinished\"/>\n     </message>\n-</context>\n-<context>\n-    <name>GUIUtil::HelpMessageBox</name>\n     <message>\n-        <location filename=\"../guiutil.cpp\" line=\"+558\"/>\n-        <location line=\"+13\"/>\n-        <source>Bitcoin-Qt</source>\n-        <translation>Bitcoin-Qt</translation>\n+        <location line=\"+1\"/>\n+        <source>Copy change</source>\n+        <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"-13\"/>\n-        <source>version</source>\n-        <translation>\u05d2\u05e8\u05e1\u05d4</translation>\n+        <location line=\"+323\"/>\n+        <source>highest</source>\n+        <translation>\u05d4\u05db\u05d9 \u05d2\u05d1\u05d5\u05d4</translation>\n     </message>\n     <message>\n-        <location line=\"+2\"/>\n-        <source>Usage:</source>\n-        <translation>\u05e9\u05d9\u05de\u05d5\u05e9:</translation>\n+        <location line=\"+1\"/>\n+        <source>higher</source>\n+        <translation>\u05d2\u05d1\u05d5\u05d4\u05d4 \u05d9\u05d5\u05ea\u05e8</translation>\n     </message>\n     <message>\n         <location line=\"+1\"/>\n-        <source>command-line options</source>\n-        <translation>\u05d0\u05e4\u05e9\u05e8\u05d5\u05d9\u05d5\u05ea \u05e9\u05d5\u05e8\u05ea \u05e4\u05e7\u05d5\u05d3\u05d4</translation>\n+        <source>high</source>\n+        <translation>\u05d2\u05d1\u05d5\u05d4</translation>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n-        <source>UI options</source>\n-        <translation>\u05d0\u05e4\u05e9\u05e8\u05d5\u05d9\u05d5\u05ea \u05de\u05de\u05e9\u05e7</translation>\n+        <location line=\"+1\"/>\n+        <source>medium-high</source>\n+        <translation>\u05d1\u05e0\u05d5\u05e0\u05d9 \u05d2\u05d1\u05d5\u05d4</translation>\n     </message>\n     <message>\n         <location line=\"+1\"/>\n-        <source>Set language, for example &quot;de_DE&quot; (default: system locale)</source>\n-        <translation>\u05e7\u05d1\u05e2 \u05e9\u05e4\u05d4, \u05dc\u05de\u05e9\u05dc &quot;he_il&quot; (\u05d1\u05e8\u05d9\u05e8\u05ea \u05de\u05d7\u05d3\u05dc: \u05e9\u05e4\u05ea \u05d4\u05de\u05e2\u05e8\u05db\u05ea)</translation>\n+        <source>medium</source>\n+        <translation>\u05d1\u05d9\u05e0\u05d5\u05e0\u05d9</translation>\n+    </message>\n+    <message>\n+        <location line=\"+4\"/>\n+        <source>low-medium</source>\n+        <translation>\u05d1\u05d9\u05e0\u05d5\u05e0\u05d9 - \u05e0\u05de\u05d5\u05da</translation>\n     </message>\n     <message>\n         <location line=\"+1\"/>\n-        <source>Start minimized</source>\n-        <translation>\u05d4\u05ea\u05d7\u05dc \u05de\u05de\u05d5\u05d6\u05e2\u05e8</translation>\n+        <source>low</source>\n+        <translation>\u05e0\u05de\u05d5\u05da</translation>\n     </message>\n     <message>\n         <location line=\"+1\"/>\n-        <source>Show splash screen on startup (default: 1)</source>\n-        <translation>\u05d4\u05e6\u05d2 \u05de\u05e1\u05da \u05e4\u05ea\u05d9\u05d7\u05d4 \u05d1\u05e2\u05ea \u05d4\u05e4\u05e2\u05dc\u05d4 (\u05d1\u05e8\u05d9\u05e8\u05ea \u05de\u05d7\u05d3\u05dc: 1)</translation>\n+        <source>lower</source>\n+        <translation>\u05e0\u05de\u05d5\u05da \u05d9\u05d5\u05ea\u05e8</translation>\n     </message>\n     <message>\n         <location line=\"+1\"/>\n-        <source>Choose data directory on startup (default: 0)</source>\n-        <translation type=\"unfinished\"/>\n+        <source>lowest</source>\n+        <translation>\u05d4\u05db\u05d9 \u05e0\u05de\u05d5\u05da</translation>\n     </message>\n-</context>\n-<context>\n-    <name>Intro</name>\n     <message>\n-        <location filename=\"../forms/intro.ui\" line=\"+14\"/>\n-        <source>Welcome</source>\n+        <location line=\"+11\"/>\n+        <source>(%1 locked)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+9\"/>\n-        <source>Welcome to Bitcoin-Qt.</source>\n+        <location line=\"+171\"/>\n+        <source>Dust</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+26\"/>\n-        <source>As this is the first time the program is launched, you can choose where Bitcoin-Qt will store its data.</source>\n-        <translation type=\"unfinished\"/>\n+        <location line=\"+0\"/>\n+        <source>yes</source>\n+        <translation>\u05db\u05df</translation>\n+    </message>\n+    <message>\n+        <location line=\"+0\"/>\n+        <source>no</source>\n+        <translation>\u05dc\u05d0</translation>\n     </message>\n     <message>\n         <location line=\"+10\"/>\n-        <source>Bitcoin-Qt will download and store a copy of the Bitcoin block chain. At least %1GB of data will be stored in this directory, and it will grow over time. The wallet will also be stored in this directory.</source>\n+        <source>This label turns red, if the transaction size is greater than 1000 bytes.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n-        <source>Use the default data directory</source>\n+        <location line=\"+1\"/>\n+        <location line=\"+5\"/>\n+        <source>This means a fee of at least %1 per kB is required.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+7\"/>\n-        <source>Use a custom data directory:</source>\n+        <location line=\"-4\"/>\n+        <source>Can vary +/- 1 byte per input.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location filename=\"../intro.cpp\" line=\"+105\"/>\n-        <source>Error</source>\n-        <translation>\u05e9\u05d2\u05d9\u05d0\u05d4</translation>\n+        <location line=\"+2\"/>\n+        <source>Transactions with higher priority are more likely to get included into a block.</source>\n+        <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+9\"/>\n-        <source>GB of free space available</source>\n+        <location line=\"+1\"/>\n+        <source>This label turns red, if the priority is smaller than &quot;medium&quot;</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <location line=\"+3\"/>\n-        <source>(of %1GB needed)</source>\n+        <source>This label turns red, if any recipient receives an amount smaller than %1.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n-</context>\n-<context>\n-    <name>OptionsDialog</name>\n     <message>\n-        <location filename=\"../forms/optionsdialog.ui\" line=\"+14\"/>\n-        <source>Options</source>\n-        <translation>\u05d0\u05e4\u05e9\u05e8\u05d5\u05d9\u05d5\u05ea</translation>\n+        <location line=\"+1\"/>\n+        <location line=\"+4\"/>\n+        <source>This means a fee of at least %1 is required.</source>\n+        <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+16\"/>\n-        <source>&amp;Main</source>\n-        <translation>\u05e8\u05d0\u05e9\u05d9</translation>\n+        <location line=\"-3\"/>\n+        <source>Amounts below 0.546 times the minimum relay fee are shown as dust.</source>\n+        <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+6\"/>\n-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB.</source>\n-        <translation>\u05e2\u05de\u05dc\u05ea \u05e4\u05e2\u05d5\u05dc\u05d4 \u05d0\u05d5\u05e4\u05e6\u05d9\u05d5\u05e0\u05dc\u05d9\u05ea \u05dc\u05db\u05dc kB \u05ea\u05d1\u05d8\u05d9\u05d7 \u05e9\u05d4\u05e4\u05e2\u05d5\u05dc\u05d4 \u05e9\u05dc\u05da \u05ea\u05e2\u05d5\u05d1\u05d3 \u05d1\u05d6\u05e8\u05d9\u05d6\u05d5\u05ea. \u05e8\u05d5\u05d1 \u05d4\u05e4\u05e2\u05d5\u05dc\u05d5\u05ea \u05d4\u05df 1 kB. \u05de\u05d5\u05de\u05dc\u05e6\u05ea \u05e2\u05de\u05dc\u05d4 \u05d1\u05e1\u05da 0.01.</translation>\n+        <location line=\"+2\"/>\n+        <source>This label turns red, if the change is smaller than %1.</source>\n+        <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+15\"/>\n-        <source>Pay transaction &amp;fee</source>\n-        <translation>\u05e9\u05dc\u05dd &amp;\u05e2\u05de\u05dc\u05ea \u05e4\u05e2\u05d5\u05dc\u05d4</translation>\n+        <location line=\"+43\"/>\n+        <location line=\"+66\"/>\n+        <source>(no label)</source>\n+        <translation>(\u05dc\u05dc\u05d0 \u05ea\u05d5\u05d9\u05ea)</translation>\n     </message>\n     <message>\n-        <location line=\"+31\"/>\n-        <source>Automatically start Bitcoin after logging in to the system.</source>\n-        <translation>\u05d4\u05e4\u05e2\u05dc \u05d0\u05ea \u05d1\u05d9\u05d8\u05e7\u05d5\u05d9\u05df \u05d1\u05d0\u05d5\u05e4\u05df \u05e2\u05e6\u05de\u05d0\u05d9 \u05dc\u05d0\u05d7\u05e8 \u05d4\u05ea\u05d7\u05d1\u05e8\u05d5\u05ea \u05dc\u05de\u05e2\u05e8\u05db\u05ea.</translation>\n+        <location line=\"-9\"/>\n+        <source>change from %1 (%2)</source>\n+        <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+3\"/>\n+        <location line=\"+1\"/>\n+        <source>(change)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+</context>\n+<context>\n+    <name>EditAddressDialog</name>\n+    <message>\n+        <location filename=\"../forms/editaddressdialog.ui\" line=\"+14\"/>\n+        <source>Edit Address</source>\n+        <translation>\u05e2\u05e8\u05d5\u05da \u05db\u05ea\u05d5\u05d1\u05ea</translation>\n+    </message>\n+    <message>\n+        <location line=\"+11\"/>\n+        <source>&amp;Label</source>\n+        <translation>\u05ea&amp;\u05d5\u05d9\u05ea</translation>\n+    </message>\n+    <message>\n+        <location line=\"+10\"/>\n+        <source>The label associated with this address list entry</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+17\"/>\n+        <source>The address associated with this address list entry. This can only be modified for sending addresses.</source>\n+        <translation>\u05d4\u05db\u05ea\u05d5\u05d1\u05ea \u05d4\u05de\u05e9\u05d5\u05d9\u05db\u05ea \u05e2\u05dd \u05e8\u05e9\u05d5\u05de\u05d4 \u05d6\u05d5 \u05d1\u05e8\u05e9\u05d9\u05de\u05ea \u05d4\u05db\u05ea\u05d5\u05d1\u05d5\u05ea. \u05e0\u05d9\u05ea\u05df \u05dc\u05e9\u05e0\u05d5\u05ea \u05d6\u05d0\u05ea \u05e8\u05e7 \u05e2\u05d1\u05d5\u05e8 \u05db\u05ea\u05d5\u05d1\u05d5\u05ea \u05dc\u05e9\u05dc\u05d9\u05d7\u05d4.</translation>\n+    </message>\n+    <message>\n+        <location line=\"-10\"/>\n+        <source>&amp;Address</source>\n+        <translation>&amp;\u05db\u05ea\u05d5\u05d1\u05ea</translation>\n+    </message>\n+    <message>\n+        <location filename=\"../editaddressdialog.cpp\" line=\"+25\"/>\n+        <source>New receiving address</source>\n+        <translation>\u05db\u05ea\u05d5\u05d1\u05ea \u05d7\u05d3\u05e9\u05d4 \u05dc\u05e7\u05d1\u05dc\u05d4</translation>\n+    </message>\n+    <message>\n+        <location line=\"+4\"/>\n+        <source>New sending address</source>\n+        <translation>\u05db\u05ea\u05d5\u05d1\u05ea \u05d7\u05d3\u05e9\u05d4 \u05dc\u05e9\u05dc\u05d9\u05d7\u05d4</translation>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>Edit receiving address</source>\n+        <translation>\u05e2\u05e8\u05d5\u05da \u05db\u05ea\u05d5\u05d1\u05ea \u05dc\u05e7\u05d1\u05dc\u05d4</translation>\n+    </message>\n+    <message>\n+        <location line=\"+4\"/>\n+        <source>Edit sending address</source>\n+        <translation>\u05e2\u05e8\u05d5\u05da \u05db\u05ea\u05d5\u05d1\u05ea \u05dc\u05e9\u05dc\u05d9\u05d7\u05d4</translation>\n+    </message>\n+    <message>\n+        <location line=\"+76\"/>\n+        <source>The entered address &quot;%1&quot; is already in the address book.</source>\n+        <translation>\u05d4\u05db\u05ea\u05d5\u05d1\u05ea \u05e9\u05d4\u05db\u05e0\u05e1\u05ea &quot;%1&quot; \u05db\u05d1\u05e8 \u05e0\u05de\u05e6\u05d0\u05ea \u05d1\u05e4\u05e0\u05e7\u05e1 \u05d4\u05db\u05ea\u05d5\u05d1\u05d5\u05ea.</translation>\n+    </message>\n+    <message>\n+        <location line=\"-5\"/>\n+        <source>The entered address &quot;%1&quot; is not a valid Bitcoin address.</source>\n+        <translation>\u05d4\u05db\u05ea\u05d5\u05d1\u05ea \u05e9\u05d4\u05d5\u05db\u05e0\u05e1\u05d4 &quot;%1&quot; \u05d0\u05d9\u05e0\u05d4 \u05db\u05ea\u05d5\u05d1\u05ea \u05d1\u05d9\u05d8\u05e7\u05d5\u05d9\u05df \u05ea\u05e7\u05d9\u05e0\u05d4.</translation>\n+    </message>\n+    <message>\n+        <location line=\"+10\"/>\n+        <source>Could not unlock wallet.</source>\n+        <translation>\u05e4\u05ea\u05d9\u05d7\u05ea \u05d4\u05d0\u05e8\u05e0\u05e7 \u05e0\u05db\u05e9\u05dc\u05d4.</translation>\n+    </message>\n+    <message>\n+        <location line=\"+5\"/>\n+        <source>New key generation failed.</source>\n+        <translation>\u05d9\u05e6\u05d9\u05e8\u05ea \u05de\u05e4\u05ea\u05d7 \u05d7\u05d3\u05e9 \u05e0\u05db\u05e9\u05dc\u05d4.</translation>\n+    </message>\n+</context>\n+<context>\n+    <name>FreespaceChecker</name>\n+    <message>\n+        <location filename=\"../intro.cpp\" line=\"+65\"/>\n+        <source>A new data directory will be created.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+22\"/>\n+        <source>name</source>\n+        <translation>\u05e9\u05dd</translation>\n+    </message>\n+    <message>\n+        <location line=\"+2\"/>\n+        <source>Directory already exists. Add %1 if you intend to create a new directory here.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>Path already exists, and is not a directory.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+7\"/>\n+        <source>Cannot create data directory here.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+</context>\n+<context>\n+    <name>GUIUtil::HelpMessageBox</name>\n+    <message>\n+        <location filename=\"../guiutil.cpp\" line=\"+597\"/>\n+        <source>version</source>\n+        <translation>\u05d2\u05e8\u05e1\u05d4</translation>\n+    </message>\n+    <message>\n+        <location line=\"+0\"/>\n+        <location line=\"+13\"/>\n+        <source>Bitcoin Core</source>\n+        <translation>\u05dc\u05d9\u05d1\u05ea \u05d1\u05d9\u05d8\u05e7\u05d5\u05d9\u05df</translation>\n+    </message>\n+    <message>\n+        <location line=\"-11\"/>\n+        <source>Usage:</source>\n+        <translation>\u05e9\u05d9\u05de\u05d5\u05e9:</translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>command-line options</source>\n+        <translation>\u05d0\u05e4\u05e9\u05e8\u05d5\u05d9\u05d5\u05ea \u05e9\u05d5\u05e8\u05ea \u05e4\u05e7\u05d5\u05d3\u05d4</translation>\n+    </message>\n+    <message>\n+        <location line=\"+4\"/>\n+        <source>UI options</source>\n+        <translation>\u05d0\u05e4\u05e9\u05e8\u05d5\u05d9\u05d5\u05ea \u05de\u05de\u05e9\u05e7</translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Set language, for example &quot;de_DE&quot; (default: system locale)</source>\n+        <translation>\u05e7\u05d1\u05e2 \u05e9\u05e4\u05d4, \u05dc\u05de\u05e9\u05dc &quot;he_il&quot; (\u05d1\u05e8\u05d9\u05e8\u05ea \u05de\u05d7\u05d3\u05dc: \u05e9\u05e4\u05ea \u05d4\u05de\u05e2\u05e8\u05db\u05ea)</translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Start minimized</source>\n+        <translation>\u05d4\u05ea\u05d7\u05dc \u05de\u05de\u05d5\u05d6\u05e2\u05e8</translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Show splash screen on startup (default: 1)</source>\n+        <translation>\u05d4\u05e6\u05d2 \u05de\u05e1\u05da \u05e4\u05ea\u05d9\u05d7\u05d4 \u05d1\u05e2\u05ea \u05d4\u05e4\u05e2\u05dc\u05d4 (\u05d1\u05e8\u05d9\u05e8\u05ea \u05de\u05d7\u05d3\u05dc: 1)</translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Choose data directory on startup (default: 0)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+</context>\n+<context>\n+    <name>Intro</name>\n+    <message>\n+        <location filename=\"../forms/intro.ui\" line=\"+14\"/>\n+        <source>Welcome</source>\n+        <translation>\u05d1\u05e8\u05d5\u05da \u05d1\u05d5\u05d0\u05da</translation>\n+    </message>\n+    <message>\n+        <location line=\"+9\"/>\n+        <source>Welcome to Bitcoin Core.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+26\"/>\n+        <source>As this is the first time the program is launched, you can choose where Bitcoin Core will store its data.</source>\n+        <translation>\u05de\u05db\u05d9\u05d5\u05d5\u05df \u05e9\u05d6\u05d0\u05ea \u05d4\u05e4\u05e2\u05dd \u05d4\u05e8\u05d0\u05e9\u05d5\u05e0\u05d4 \u05e9\u05d4\u05ea\u05d5\u05db\u05e0\u05d4 \u05d4\u05d5\u05e4\u05e2\u05dc\u05d4 \u05ea\u05d5\u05db\u05dc \u05dc\u05d1\u05d7\u05d5\u05e8 \u05d0\u05d9\u05e4\u05d4 \u05d1\u05d9\u05d8\u05e7\u05d5\u05d9\u05d9\u05df \u05e7\u05d5\u05e8 \u05ea\u05d0\u05db\u05e1\u05df \u05d0\u05ea </translation>\n+    </message>\n+    <message>\n+        <location line=\"+10\"/>\n+        <source>Bitcoin Core will download and store a copy of the Bitcoin block chain. At least %1GB of data will be stored in this directory, and it will grow over time. The wallet will also be stored in this directory.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+10\"/>\n+        <source>Use the default data directory</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+7\"/>\n+        <source>Use a custom data directory:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location filename=\"../intro.cpp\" line=\"+85\"/>\n+        <source>Bitcoin</source>\n+        <translation>\u05d1\u05d9\u05d8\u05e7\u05d5\u05d9\u05df</translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Error: Specified data directory &quot;%1&quot; can not be created.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+19\"/>\n+        <source>Error</source>\n+        <translation>\u05e9\u05d2\u05d9\u05d0\u05d4</translation>\n+    </message>\n+    <message>\n+        <location line=\"+9\"/>\n+        <source>GB of free space available</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>(of %1GB needed)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+</context>\n+<context>\n+    <name>OpenURIDialog</name>\n+    <message>\n+        <location filename=\"../forms/openuridialog.ui\" line=\"+14\"/>\n+        <source>Open URI</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+6\"/>\n+        <source>Open payment request from URI or file</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+9\"/>\n+        <source>URI:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+11\"/>\n+        <source>Select payment request file</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location filename=\"../openuridialog.cpp\" line=\"+47\"/>\n+        <source>Select payment request file to open</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+</context>\n+<context>\n+    <name>OptionsDialog</name>\n+    <message>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"+14\"/>\n+        <source>Options</source>\n+        <translation>\u05d0\u05e4\u05e9\u05e8\u05d5\u05d9\u05d5\u05ea</translation>\n+    </message>\n+    <message>\n+        <location line=\"+16\"/>\n+        <source>&amp;Main</source>\n+        <translation>\u05e8\u05d0\u05e9\u05d9</translation>\n+    </message>\n+    <message>\n+        <location line=\"+6\"/>\n+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB.</source>\n+        <translation>\u05e2\u05de\u05dc\u05ea \u05e4\u05e2\u05d5\u05dc\u05d4 \u05d0\u05d5\u05e4\u05e6\u05d9\u05d5\u05e0\u05dc\u05d9\u05ea \u05dc\u05db\u05dc kB \u05ea\u05d1\u05d8\u05d9\u05d7 \u05e9\u05d4\u05e4\u05e2\u05d5\u05dc\u05d4 \u05e9\u05dc\u05da \u05ea\u05e2\u05d5\u05d1\u05d3 \u05d1\u05d6\u05e8\u05d9\u05d6\u05d5\u05ea. \u05e8\u05d5\u05d1 \u05d4\u05e4\u05e2\u05d5\u05dc\u05d5\u05ea \u05d4\u05df 1 kB. \u05de\u05d5\u05de\u05dc\u05e6\u05ea \u05e2\u05de\u05dc\u05d4 \u05d1\u05e1\u05da 0.01.</translation>\n+    </message>\n+    <message>\n+        <location line=\"+15\"/>\n+        <source>Pay transaction &amp;fee</source>\n+        <translation>\u05e9\u05dc\u05dd &amp;\u05e2\u05de\u05dc\u05ea \u05e4\u05e2\u05d5\u05dc\u05d4</translation>\n+    </message>\n+    <message>\n+        <location line=\"+31\"/>\n+        <source>Automatically start Bitcoin after logging in to the system.</source>\n+        <translation>\u05d4\u05e4\u05e2\u05dc \u05d0\u05ea \u05d1\u05d9\u05d8\u05e7\u05d5\u05d9\u05df \u05d1\u05d0\u05d5\u05e4\u05df \u05e2\u05e6\u05de\u05d0\u05d9 \u05dc\u05d0\u05d7\u05e8 \u05d4\u05ea\u05d7\u05d1\u05e8\u05d5\u05ea \u05dc\u05de\u05e2\u05e8\u05db\u05ea.</translation>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n         <source>&amp;Start Bitcoin on system login</source>\n         <translation>\u05d4\u05ea\u05d7\u05dc \u05d0\u05ea \u05d1\u05d9\u05d8\u05e7\u05d5\u05d9\u05df \u05d1\u05e2\u05ea \u05d4\u05ea\u05d7\u05d1\u05e8\u05d5\u05ea \u05dc\u05de\u05e2\u05e8\u05db\u05ea</translation>\n     </message>\n@@ -1045,6 +1374,16 @@ Address: %4\n         <source>&amp;Display addresses in transaction list</source>\n         <translation>\u05d4\u05e6\u05d2 \u05db\u05ea\u05d5\u05d1\u05d5\u05ea \u05d1\u05e8\u05e9\u05d9\u05de\u05ea \u05d4\u05e4\u05e2\u05d5\u05dc\u05d5\u05ea</translation>\n     </message>\n+    <message>\n+        <location line=\"+7\"/>\n+        <source>Whether to show coin control features or not.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>Display coin &amp;control features (experts only)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n     <message>\n         <location line=\"+71\"/>\n         <source>&amp;OK</source>\n@@ -1061,12 +1400,12 @@ Address: %4\n         <translation>\u05d9\u05d9\u05e9\u05d5\u05dd</translation>\n     </message>\n     <message>\n-        <location filename=\"../optionsdialog.cpp\" line=\"+58\"/>\n+        <location filename=\"../optionsdialog.cpp\" line=\"+63\"/>\n         <source>default</source>\n         <translation>\u05d1\u05e8\u05d9\u05e8\u05ea \u05de\u05d7\u05d3\u05dc</translation>\n     </message>\n     <message>\n-        <location line=\"+130\"/>\n+        <location line=\"+131\"/>\n         <source>Confirm options reset</source>\n         <translation>\u05d0\u05e9\u05e8 \u05d0\u05ea \u05d0\u05d9\u05e4\u05d5\u05e1 \u05d4\u05d0\u05e4\u05e9\u05e8\u05d5\u05d9\u05d5\u05ea</translation>\n     </message>\n@@ -1107,37 +1446,37 @@ Address: %4\n     </message>\n     <message>\n         <location line=\"+50\"/>\n-        <location line=\"+202\"/>\n+        <location line=\"+214\"/>\n         <source>The displayed information may be out of date. Your wallet automatically synchronizes with the Bitcoin network after a connection is established, but this process has not completed yet.</source>\n         <translation>\u05d4\u05de\u05d9\u05d3\u05e2 \u05d4\u05de\u05d5\u05e6\u05d2 \u05e2\u05e9\u05d5\u05d9 \u05dc\u05d4\u05d9\u05d5\u05ea \u05de\u05d9\u05d5\u05e9\u05df. \u05d4\u05d0\u05e8\u05e0\u05e7 \u05e9\u05dc\u05da \u05de\u05e1\u05ea\u05e0\u05db\u05e8\u05df \u05d1\u05d0\u05d5\u05e4\u05df \u05d0\u05d5\u05d8\u05d5\u05de\u05d8\u05d9 \u05e2\u05dd \u05e8\u05e9\u05ea \u05d4\u05d1\u05d9\u05d8\u05e7\u05d5\u05d9\u05df \u05dc\u05d0\u05d7\u05e8 \u05db\u05d9\u05e0\u05d5\u05df \u05d7\u05d9\u05d1\u05d5\u05e8, \u05d0\u05da \u05d4\u05ea\u05d4\u05dc\u05d9\u05da \u05d8\u05e8\u05dd \u05d4\u05e1\u05ea\u05d9\u05d9\u05dd.</translation>\n     </message>\n     <message>\n-        <location line=\"-131\"/>\n+        <location line=\"-140\"/>\n         <source>Unconfirmed:</source>\n         <translation>\u05de\u05de\u05ea\u05d9\u05df \u05dc\u05d0\u05d9\u05e9\u05d5\u05e8:</translation>\n     </message>\n     <message>\n-        <location line=\"-78\"/>\n+        <location line=\"-81\"/>\n         <source>Wallet</source>\n         <translation>\u05d0\u05e8\u05e0\u05e7</translation>\n     </message>\n     <message>\n         <location line=\"+49\"/>\n         <source>Confirmed:</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u05de\u05d0\u05d5\u05e9\u05e8:</translation>\n     </message>\n     <message>\n         <location line=\"+16\"/>\n         <source>Your current spendable balance</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+29\"/>\n+        <location line=\"+32\"/>\n         <source>Total of transactions that have yet to be confirmed, and do not yet count toward the spendable balance</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+13\"/>\n+        <location line=\"+16\"/>\n         <source>Immature:</source>\n         <translation>\u05dc\u05d0 \u05d1\u05e9\u05dc:</translation>\n     </message>\n@@ -1147,22 +1486,22 @@ Address: %4\n         <translation>\u05de\u05d0\u05d6\u05df \u05e9\u05e0\u05db\u05e8\u05d4 \u05d5\u05d8\u05e8\u05dd \u05d4\u05d1\u05e9\u05d9\u05dc</translation>\n     </message>\n     <message>\n-        <location line=\"+13\"/>\n+        <location line=\"+16\"/>\n         <source>Total:</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u05e1\u05da \u05d4\u05db\u05d5\u05dc:</translation>\n     </message>\n     <message>\n         <location line=\"+16\"/>\n         <source>Your current total balance</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u05e1\u05da \u05db\u05dc \u05d4\u05d9\u05ea\u05e8\u05d4 \u05d4\u05e0\u05d5\u05db\u05d7\u05d9\u05ea \u05e9\u05dc\u05da</translation>\n     </message>\n     <message>\n-        <location line=\"+53\"/>\n+        <location line=\"+56\"/>\n         <source>&lt;b&gt;Recent transactions&lt;/b&gt;</source>\n         <translation>&lt;b&gt;\u05e4\u05e2\u05d5\u05dc\u05d5\u05ea \u05d0\u05d7\u05e8\u05d5\u05e0\u05d5\u05ea&lt;/b&gt;</translation>\n     </message>\n     <message>\n-        <location filename=\"../overviewpage.cpp\" line=\"+116\"/>\n+        <location filename=\"../overviewpage.cpp\" line=\"+120\"/>\n         <location line=\"+1\"/>\n         <source>out of sync</source>\n         <translation>\u05dc\u05d0 \u05de\u05e1\u05d5\u05e0\u05db\u05e8\u05df</translation>\n@@ -1171,7 +1510,7 @@ Address: %4\n <context>\n     <name>PaymentServer</name>\n     <message>\n-        <location filename=\"../paymentserver.cpp\" line=\"+392\"/>\n+        <location filename=\"../paymentserver.cpp\" line=\"+397\"/>\n         <source>URI handling</source>\n         <translation>\u05ea\u05e4\u05e2\u05d5\u05dc URI</translation>\n     </message>\n@@ -1181,23 +1520,29 @@ Address: %4\n         <translation>\u05dc\u05d0 \u05e0\u05d9\u05ea\u05df \u05dc\u05e0\u05ea\u05d7 URI! \u05d6\u05d4 \u05d9\u05db\u05d5\u05dc \u05dc\u05d4\u05d9\u05d2\u05e8\u05dd \u05db\u05ea\u05d5\u05e6\u05d0\u05d4 \u05de\u05db\u05ea\u05d5\u05d1\u05ea \u05d1\u05d9\u05d8\u05e7\u05d5\u05d9\u05df \u05dc\u05d0 \u05ea\u05e7\u05d9\u05e0\u05d4 \u05d0\u05d5 \u05e4\u05e8\u05de\u05d8\u05e8\u05d9 URI \u05d7\u05e1\u05e8\u05d9 \u05e6\u05d5\u05e8\u05d4 \u05ea\u05e7\u05d9\u05e0\u05d4.</translation>\n     </message>\n     <message>\n-        <location line=\"+69\"/>\n+        <location line=\"+91\"/>\n         <source>Requested payment amount of %1 is too small (considered dust).</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n-        <location line=\"+37\"/>\n+        <location line=\"-204\"/>\n+        <location line=\"+195\"/>\n+        <location line=\"+13\"/>\n         <source>Payment request error</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u05e9\u05d2\u05d9\u05d0\u05d4 \u05d1\u05d1\u05e7\u05e9\u05ea \u05ea\u05e9\u05dc\u05d5\u05dd</translation>\n     </message>\n     <message>\n-        <location line=\"+1\"/>\n-        <source>Insecure requests to custom payment scripts unsupported</source>\n+        <location line=\"-207\"/>\n+        <source>Cannot start bitcoin: click-to-pay handler</source>\n+        <translation>\u05dc\u05d0 \u05e0\u05d9\u05ea\u05df \u05dc\u05d4\u05ea\u05d7\u05d9\u05dc \u05d0\u05ea \u05d1\u05d9\u05d8\u05e7\u05d5\u05d9\u05df: \u05de\u05e4\u05e2\u05d9\u05dc \u05dc\u05d7\u05e5-\u05dc\u05ea\u05e9\u05dc\u05d5\u05dd </translation>\n+    </message>\n+    <message>\n+        <location line=\"+195\"/>\n+        <source>Unverified payment requests to custom payment scripts are unsupported.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+38\"/>\n+        <location line=\"+59\"/>\n         <source>Refund from %1</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1207,29 +1552,28 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+31\"/>\n+        <location line=\"+28\"/>\n         <source>Bad response from server %1</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <location line=\"+32\"/>\n         <source>Payment acknowledged</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u05d4\u05ea\u05e9\u05dc\u05d5\u05dd \u05d4\u05ea\u05e7\u05d1\u05dc</translation>\n     </message>\n     <message>\n-        <location line=\"-58\"/>\n-        <location line=\"+30\"/>\n+        <location line=\"-55\"/>\n+        <location line=\"+27\"/>\n         <location line=\"+17\"/>\n         <source>Network request error</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u05e9\u05d2\u05d9\u05d0\u05ea \u05d1\u05e7\u05e9\u05ea \u05e9\u05e8\u05ea</translation>\n     </message>\n </context>\n <context>\n     <name>QObject</name>\n     <message>\n-        <location filename=\"../bitcoin.cpp\" line=\"+114\"/>\n+        <location filename=\"../bitcoin.cpp\" line=\"+119\"/>\n         <location line=\"+5\"/>\n-        <location filename=\"../intro.cpp\" line=\"-32\"/>\n         <source>Bitcoin</source>\n         <translation>\u05d1\u05d9\u05d8\u05e7\u05d5\u05d9\u05df</translation>\n     </message>\n@@ -1243,16 +1587,11 @@ Address: %4\n         <source>Error: Invalid combination of -regtest and -testnet.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n-    <message>\n-        <location filename=\"../intro.cpp\" line=\"+1\"/>\n-        <source>Error: Specified data directory &quot;%1&quot; can not be created.</source>\n-        <translation type=\"unfinished\"/>\n-    </message>\n </context>\n <context>\n     <name>QRImageWidget</name>\n     <message>\n-        <location filename=\"../receiverequestdialog.cpp\" line=\"+32\"/>\n+        <location filename=\"../receiverequestdialog.cpp\" line=\"+36\"/>\n         <source>&amp;Save Image...</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1268,8 +1607,8 @@ Address: %4\n     </message>\n     <message>\n         <location line=\"+0\"/>\n-        <source>PNG Images (*.png)</source>\n-        <translation>\u05ea\u05de\u05d5\u05e0\u05d5\u05ea PNG (*.png)</translation>\n+        <source>PNG Image (*.png)</source>\n+        <translation type=\"unfinished\"/>\n     </message>\n </context>\n <context>\n@@ -1289,7 +1628,7 @@ Address: %4\n         <location line=\"+53\"/>\n         <location line=\"+23\"/>\n         <location line=\"+23\"/>\n-        <location filename=\"../rpcconsole.cpp\" line=\"+352\"/>\n+        <location filename=\"../rpcconsole.cpp\" line=\"+360\"/>\n         <source>N/A</source>\n         <translation>N/A</translation>\n     </message>\n@@ -1304,7 +1643,12 @@ Address: %4\n         <translation>\u05de\u05d9\u05d3\u05e2</translation>\n     </message>\n     <message>\n-        <location line=\"+68\"/>\n+        <location line=\"-10\"/>\n+        <source>Debug window</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+78\"/>\n         <source>Using OpenSSL version</source>\n         <translation>\u05de\u05e9\u05ea\u05de\u05e9 \u05d1-OpenSSL \u05d2\u05e8\u05e1\u05d4</translation>\n     </message>\n@@ -1359,12 +1703,7 @@ Address: %4\n         <translation>\u05d0\u05e4\u05e9\u05e8\u05d5\u05d9\u05d5\u05ea \u05e9\u05d5\u05e8\u05ea \u05e4\u05e7\u05d5\u05d3\u05d4</translation>\n     </message>\n     <message>\n-        <location line=\"+7\"/>\n-        <source>Show the Bitcoin-Qt help message to get a list with possible Bitcoin command-line options.</source>\n-        <translation>\u05d4\u05e6\u05d2 \u05d0\u05ea \u05d4\u05d5\u05d3\u05e2\u05d4 \u05d4\u05e2\u05d6\u05e8\u05d4 \u05e9\u05dc bitcoin-qt \u05db\u05d3\u05d9 \u05dc\u05e7\u05d1\u05dc \u05e8\u05e9\u05d9\u05de\u05d4 \u05e9\u05dc \u05d0\u05e4\u05e9\u05e8\u05d5\u05d9\u05d5\u05ea \u05e9\u05d5\u05e8\u05ea \u05e4\u05e7\u05d5\u05d3\u05d4 \u05e9\u05dc \u05d1\u05d9\u05d8\u05e7\u05d5\u05d9\u05df.</translation>\n-    </message>\n-    <message>\n-        <location line=\"+3\"/>\n+        <location line=\"+10\"/>\n         <source>&amp;Show</source>\n         <translation>\u05d4\u05e6\u05d2</translation>\n     </message>\n@@ -1404,12 +1743,7 @@ Address: %4\n         <translation>\u05ea\u05d0\u05e8\u05d9\u05da \u05d1\u05e0\u05d9\u05d4</translation>\n     </message>\n     <message>\n-        <location line=\"-104\"/>\n-        <source>Bitcoin - Debug window</source>\n-        <translation>\u05d1\u05d9\u05d8\u05e7\u05d5\u05d9\u05df - \u05d7\u05dc\u05d5\u05df \u05e0\u05d9\u05e4\u05d5\u05d9</translation>\n-    </message>\n-    <message>\n-        <location line=\"+25\"/>\n+        <location line=\"-79\"/>\n         <source>Bitcoin Core</source>\n         <translation>\u05dc\u05d9\u05d1\u05ea \u05d1\u05d9\u05d8\u05e7\u05d5\u05d9\u05df</translation>\n     </message>\n@@ -1424,7 +1758,12 @@ Address: %4\n         <translation>\u05e4\u05ea\u05d7 \u05d0\u05ea \u05e7\u05d5\u05d1\u05e5 \u05d9\u05d5\u05de\u05df \u05d4\u05e0\u05d9\u05e4\u05d5\u05d9 \u05de\u05ea\u05d9\u05e7\u05d9\u05d9\u05ea \u05d4\u05e0\u05ea\u05d5\u05e0\u05d9\u05dd \u05d4\u05e0\u05d5\u05db\u05d7\u05d9\u05ea. \u05d6\u05d4 \u05e2\u05e9\u05d5\u05d9 \u05dc\u05e7\u05d7\u05ea \u05de\u05e1\u05e4\u05e8 \u05e9\u05e0\u05d9\u05d5\u05ea \u05e2\u05d1\u05d5\u05e8 \u05e7\u05d5\u05d1\u05e6\u05d9 \u05d9\u05d5\u05de\u05df \u05d2\u05d3\u05d5\u05dc\u05d9\u05dd.</translation>\n     </message>\n     <message>\n-        <location line=\"+102\"/>\n+        <location line=\"+26\"/>\n+        <source>Show the Bitcoin-Core help message to get a list with possible Bitcoin command-line options.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+76\"/>\n         <source>Clear console</source>\n         <translation>\u05e0\u05e7\u05d4 \u05dc\u05d5\u05d7 \u05d1\u05e7\u05e8\u05d4</translation>\n     </message>\n@@ -1466,12 +1805,12 @@ Address: %4\n     <message>\n         <location line=\"+7\"/>\n         <source>%1 m</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>1% \u05d3\u05e7\u05d5\u05ea</translation>\n     </message>\n     <message>\n         <location line=\"+5\"/>\n         <source>%1 h</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>%1 \u05e9\u05e2\u05d5\u05ea</translation>\n     </message>\n     <message>\n         <location line=\"+2\"/>\n@@ -1482,37 +1821,32 @@ Address: %4\n <context>\n     <name>ReceiveCoinsDialog</name>\n     <message>\n-        <location filename=\"../forms/receivecoinsdialog.ui\" line=\"+22\"/>\n+        <location filename=\"../forms/receivecoinsdialog.ui\" line=\"+83\"/>\n         <source>&amp;Amount:</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+16\"/>\n+        <location line=\"+19\"/>\n         <source>The amount to request</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u05db\u05de\u05d5\u05ea \u05d4\u05d1\u05e7\u05e9\u05d4</translation>\n     </message>\n     <message>\n-        <location line=\"+7\"/>\n+        <location line=\"-32\"/>\n         <source>&amp;Label:</source>\n         <translation>\u05ea&amp;\u05d5\u05d9\u05ea:</translation>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n-        <source>The label to associate with the receiving address</source>\n-        <translation type=\"unfinished\"/>\n-    </message>\n-    <message>\n-        <location line=\"+7\"/>\n+        <location line=\"-34\"/>\n         <source>&amp;Message:</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n+        <location line=\"+20\"/>\n         <source>The message to attach to payment request</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+14\"/>\n+        <location line=\"-37\"/>\n         <source>Reuse one of the previously used receiving addresses. Reusing addresses has security and privacy issues. Do not use this unless re-generating a payment request made before.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1522,25 +1856,55 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+7\"/>\n+        <location line=\"+27\"/>\n+        <source>The label to associate with the new receiving address</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+14\"/>\n         <source>Use this form to request payments. All fields are optional.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+17\"/>\n+        <location line=\"+56\"/>\n         <source>Clear all fields of the form.</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u05e0\u05e7\u05d4 \u05d0\u05ea \u05db\u05dc \u05d4\u05e9\u05d3\u05d5\u05ea</translation>\n     </message>\n     <message>\n         <location line=\"+3\"/>\n         <source>Clear</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u05e0\u05e7\u05d4</translation>\n     </message>\n     <message>\n         <location line=\"+36\"/>\n         <source>&amp;Request payment</source>\n         <translation type=\"unfinished\"/>\n     </message>\n+    <message>\n+        <location line=\"+47\"/>\n+        <source>Previously requested payments</source>\n+        <translation>\u05d1\u05e7\u05e9\u05d5\u05ea \u05ea\u05e9\u05dc\u05d5\u05dd \u05d9\u05e9\u05e0\u05d5\u05ea</translation>\n+    </message>\n+    <message>\n+        <location line=\"+12\"/>\n+        <source>Show the selected request (does the same as double clicking an entry)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>Show</source>\n+        <translation>\u05d4\u05e6\u05d2</translation>\n+    </message>\n+    <message>\n+        <location line=\"+11\"/>\n+        <source>Remove the selected entries from the list</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>Remove</source>\n+        <translation>\u05d4\u05e1\u05e8</translation>\n+    </message>\n </context>\n <context>\n     <name>ReceiveRequestDialog</name>\n@@ -1559,25 +1923,20 @@ Address: %4\n         <source>Copy &amp;Address</source>\n         <translation type=\"unfinished\"/>\n     </message>\n-    <message>\n-        <location line=\"+7\"/>\n-        <source>&amp;Copy Image</source>\n-        <translation type=\"unfinished\"/>\n-    </message>\n     <message>\n         <location line=\"+7\"/>\n         <source>&amp;Save Image...</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location filename=\"../receiverequestdialog.cpp\" line=\"+58\"/>\n+        <location filename=\"../receiverequestdialog.cpp\" line=\"+56\"/>\n         <source>Request payment to %1</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <location line=\"+6\"/>\n         <source>Payment information</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u05d0\u05e0\u05e4\u05e8\u05d5\u05de\u05e6\u05d9\u05d9\u05d4 \u05e2\u05dc \u05d4\u05ea\u05e9\u05dc\u05d5\u05dd</translation>\n     </message>\n     <message>\n         <location line=\"+1\"/>\n@@ -1615,17 +1974,120 @@ Address: %4\n         <translation>\u05e9\u05d2\u05d9\u05d0\u05d4 \u05d1\u05e7\u05d9\u05d3\u05d5\u05d3 URI \u05dc\u05e7\u05d5\u05d3 QR</translation>\n     </message>\n </context>\n+<context>\n+    <name>RecentRequestsTableModel</name>\n+    <message>\n+        <location filename=\"../recentrequeststablemodel.cpp\" line=\"+14\"/>\n+        <source>Date</source>\n+        <translation>\u05ea\u05d0\u05e8\u05d9\u05da</translation>\n+    </message>\n+    <message>\n+        <location line=\"+0\"/>\n+        <source>Label</source>\n+        <translation>\u05ea\u05d5\u05d9\u05ea</translation>\n+    </message>\n+    <message>\n+        <location line=\"+0\"/>\n+        <source>Message</source>\n+        <translation>\u05d4\u05d5\u05d3\u05e2\u05d4</translation>\n+    </message>\n+    <message>\n+        <location line=\"+0\"/>\n+        <source>Amount</source>\n+        <translation>\u05db\u05de\u05d5\u05ea</translation>\n+    </message>\n+    <message>\n+        <location line=\"+36\"/>\n+        <source>(no label)</source>\n+        <translation>(\u05dc\u05dc\u05d0 \u05ea\u05d5\u05d9\u05ea)</translation>\n+    </message>\n+    <message>\n+        <location line=\"+9\"/>\n+        <source>(no message)</source>\n+        <translation>(\u05d0\u05d9\u05df \u05d4\u05d5\u05d3\u05e2\u05d5\u05ea)</translation>\n+    </message>\n+</context>\n <context>\n     <name>SendCoinsDialog</name>\n     <message>\n         <location filename=\"../forms/sendcoinsdialog.ui\" line=\"+14\"/>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"+140\"/>\n-        <location line=\"+213\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"+381\"/>\n+        <location line=\"+81\"/>\n         <source>Send Coins</source>\n         <translation>\u05e9\u05dc\u05d7 \u05de\u05d8\u05d1\u05e2\u05d5\u05ea</translation>\n     </message>\n     <message>\n-        <location line=\"+50\"/>\n+        <location line=\"+76\"/>\n+        <source>Coin Control Features</source>\n+        <translation>\u05d4</translation>\n+    </message>\n+    <message>\n+        <location line=\"+20\"/>\n+        <source>Inputs...</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+7\"/>\n+        <source>automatically selected</source>\n+        <translation>\u05e0\u05d1\u05d7\u05e8 \u05d0\u05d5\u05d8\u05d5\u05de\u05d0\u05d8\u05d9\u05ea</translation>\n+    </message>\n+    <message>\n+        <location line=\"+19\"/>\n+        <source>Insufficient funds!</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+89\"/>\n+        <source>Quantity:</source>\n+        <translation>\u05db\u05de\u05d5\u05ea:</translation>\n+    </message>\n+    <message>\n+        <location line=\"+35\"/>\n+        <source>Bytes:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+48\"/>\n+        <source>Amount:</source>\n+        <translation>\u05db\u05de\u05d5\u05ea:</translation>\n+    </message>\n+    <message>\n+        <location line=\"+32\"/>\n+        <source>Priority:</source>\n+        <translation>\u05e7\u05d3\u05d9\u05de\u05d5\u05ea:</translation>\n+    </message>\n+    <message>\n+        <location line=\"+48\"/>\n+        <source>Fee:</source>\n+        <translation>\u05ea\u05e9\u05dc\u05d5\u05dd:</translation>\n+    </message>\n+    <message>\n+        <location line=\"+32\"/>\n+        <source>Low Output:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+48\"/>\n+        <source>After Fee:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+32\"/>\n+        <source>Change:</source>\n+        <translation>\u05e9\u05d9\u05e0\u05d5\u05d9:</translation>\n+    </message>\n+    <message>\n+        <location line=\"+44\"/>\n+        <source>If this is activated, but the change address is empty or invalid, change will be sent to a newly generated address.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>Custom change address</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+115\"/>\n         <source>Send to multiple recipients at once</source>\n         <translation>\u05e9\u05dc\u05d7 \u05dc\u05de\u05e1\u05e4\u05e8 \u05de\u05e7\u05d1\u05dc\u05d9\u05dd \u05d1\u05d5-\u05d6\u05de\u05e0\u05d9\u05ea</translation>\n     </message>\n@@ -1637,7 +2099,7 @@ Address: %4\n     <message>\n         <location line=\"+20\"/>\n         <source>Clear all fields of the form.</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u05e0\u05e7\u05d4 \u05d0\u05ea \u05db\u05dc \u05d4\u05e9\u05d3\u05d5\u05ea</translation>\n     </message>\n     <message>\n         <location line=\"+3\"/>\n@@ -1650,12 +2112,7 @@ Address: %4\n         <translation>\u05d9\u05ea\u05e8\u05d4:</translation>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n-        <source>123.456 BTC</source>\n-        <translation>123.456 \u05d1\u05d9\u05d8\u05e7\u05d5\u05d9\u05df</translation>\n-    </message>\n-    <message>\n-        <location line=\"+31\"/>\n+        <location line=\"+41\"/>\n         <source>Confirm the send action</source>\n         <translation>\u05d0\u05e9\u05e8 \u05d0\u05ea \u05e4\u05e2\u05d5\u05dc\u05ea \u05d4\u05e9\u05dc\u05d9\u05d7\u05d4</translation>\n     </message>\n@@ -1665,69 +2122,135 @@ Address: %4\n         <translation>\u05e9\u05dc\u05d7</translation>\n     </message>\n     <message>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"-154\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"-229\"/>\n         <source>Confirm send coins</source>\n         <translation>\u05d0\u05e9\u05e8 \u05e9\u05dc\u05d9\u05d7\u05ea \u05de\u05d8\u05d1\u05e2\u05d5\u05ea</translation>\n     </message>\n     <message>\n-        <location line=\"-90\"/>\n+        <location line=\"-74\"/>\n         <location line=\"+5\"/>\n         <location line=\"+5\"/>\n+        <location line=\"+4\"/>\n         <source>%1 to %2</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+26\"/>\n+        <location line=\"-136\"/>\n+        <source>Enter a Bitcoin address (e.g. 1NS17iag9jJgTHD1VXjvLCEnZuQ3rJDE9L)</source>\n+        <translation>\u05d4\u05db\u05e0\u05e1 \u05db\u05ea\u05d5\u05d1\u05ea \u05d1\u05d9\u05d8\u05e7\u05d5\u05d9\u05df (\u05dc\u05de\u05e9\u05dc 1NS17iag9jJgTHD1VXjvLCEnZuQ3rJDE9L)</translation>\n+    </message>\n+    <message>\n+        <location line=\"+15\"/>\n+        <source>Copy quantity</source>\n+        <translation>\u05d4\u05e2\u05ea\u05e7 \u05db\u05de\u05d5\u05ea</translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Copy amount</source>\n+        <translation>\u05d4\u05e2\u05ea\u05e7 \u05db\u05de\u05d5\u05ea</translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Copy fee</source>\n+        <translation>\u05d4\u05e2\u05ea\u05e7 \u05de\u05d7\u05d9\u05e8</translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Copy after fee</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Copy bytes</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Copy priority</source>\n+        <translation>\u05d4\u05e2\u05ea\u05e7 \u05e7\u05d3\u05d9\u05de\u05d5\u05ea</translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Copy low output</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Copy change</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+170\"/>\n+        <source>Total Amount %1 (= %2)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+2\"/>\n+        <source>or</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+202\"/>\n         <source>The recipient address is not valid, please recheck.</source>\n         <translation>\u05db\u05ea\u05d5\u05d1\u05ea \u05d4\u05de\u05e7\u05d1\u05dc \u05d0\u05d9\u05e0\u05d4 \u05ea\u05e7\u05d9\u05e0\u05d4, \u05d0\u05e0\u05d0 \u05d1\u05d3\u05d5\u05e7 \u05e9\u05e0\u05d9\u05ea.</translation>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n+        <location line=\"+3\"/>\n         <source>The amount to pay must be larger than 0.</source>\n         <translation>\u05d4\u05db\u05de\u05d5\u05ea \u05dc\u05e9\u05dc\u05dd \u05d7\u05d9\u05d9\u05d1\u05ea \u05dc\u05d4\u05d9\u05d5\u05ea \u05d2\u05d3\u05d5\u05dc\u05d4 \u05de-0.</translation>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n+        <location line=\"+3\"/>\n         <source>The amount exceeds your balance.</source>\n         <translation>\u05d4\u05db\u05de\u05d5\u05ea \u05e2\u05d5\u05dc\u05d4 \u05e2\u05dc \u05d4\u05de\u05d0\u05d6\u05df \u05e9\u05dc\u05da.</translation>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n+        <location line=\"+3\"/>\n         <source>The total exceeds your balance when the %1 transaction fee is included.</source>\n         <translation>\u05d4\u05db\u05de\u05d5\u05ea \u05d4\u05db\u05d5\u05dc\u05dc\u05ea, \u05d5\u05d1\u05db\u05dc\u05dc\u05d4 \u05e2\u05de\u05dc\u05ea \u05e4\u05e2\u05d5\u05dc\u05d4 \u05d1\u05e1\u05da %1, \u05e2\u05d5\u05dc\u05d4 \u05e2\u05dc \u05d4\u05de\u05d0\u05d6\u05df \u05e9\u05dc\u05da.</translation>\n     </message>\n     <message>\n-        <location line=\"+5\"/>\n+        <location line=\"+3\"/>\n         <source>Duplicate address found, can only send to each address once per send operation.</source>\n         <translation>\u05db\u05ea\u05d5\u05d1\u05ea \u05db\u05e4\u05d5\u05dc\u05d4 \u05e0\u05de\u05e6\u05d0\u05d4, \u05e0\u05d9\u05ea\u05df \u05dc\u05e9\u05dc\u05d5\u05d7 \u05dc\u05db\u05dc \u05db\u05ea\u05d5\u05d1\u05ea \u05e8\u05e7 \u05e4\u05e2\u05dd \u05d0\u05d7\u05ea \u05d1\u05db\u05dc \u05e4\u05e2\u05d5\u05dc\u05ea \u05e9\u05dc\u05d9\u05d7\u05d4.</translation>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n-        <source>Error: Transaction creation failed!</source>\n-        <translation>\u05e9\u05d2\u05d9\u05d0\u05d4: \u05d9\u05e6\u05d9\u05e8\u05ea \u05d4\u05e4\u05e2\u05d5\u05dc\u05d4 \u05e0\u05db\u05e9\u05dc\u05d4!</translation>\n+        <location line=\"+3\"/>\n+        <source>Transaction creation failed!</source>\n+        <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+15\"/>\n-        <source>Are you sure you want to send?</source>\n+        <location line=\"+4\"/>\n+        <source>The transaction was rejected! This might happen if some of the coins in your wallet were already spent, such as if you used a copy of wallet.dat and coins were spent in the copy but not marked as spent here.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+9\"/>\n-        <source>added as transaction fee</source>\n+        <location line=\"+113\"/>\n+        <source>Warning: Invalid Bitcoin address</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+6\"/>\n-        <source>Total Amount %1</source>\n+        <location line=\"+13\"/>\n+        <source>(no label)</source>\n+        <translation>(\u05dc\u05dc\u05d0 \u05ea\u05d5\u05d9\u05ea)</translation>\n+    </message>\n+    <message>\n+        <location line=\"+8\"/>\n+        <source>Warning: Unknown change address</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+20\"/>\n-        <source>Error: The transaction was rejected. This might happen if some of the coins in your wallet were already spent, such as if you used a copy of wallet.dat and coins were spent in the copy but not marked as spent here.</source>\n-        <translation>\u05e9\u05d2\u05d9\u05d0\u05d4: \u05d4\u05e4\u05e2\u05d5\u05dc\u05d4 \u05e0\u05d3\u05d7\u05ea\u05d4. \u05d6\u05d4 \u05e2\u05e9\u05d5\u05d9 \u05dc\u05e7\u05e8\u05d5\u05ea \u05e2\u05dd \u05d7\u05dc\u05e7 \u05de\u05d4\u05de\u05d8\u05d1\u05e2\u05d5\u05ea \u05d1\u05d0\u05e8\u05e0\u05e7 \u05e9\u05dc\u05da \u05db\u05d1\u05e8 \u05e0\u05d5\u05e6\u05dc\u05d5, \u05dc\u05de\u05e9\u05dc \u05d0\u05dd \u05d4\u05e9\u05ea\u05de\u05e9\u05ea \u05d1\u05e2\u05d5\u05ea\u05e7 \u05e9\u05dc wallet.dat \u05d5\u05de\u05d8\u05d1\u05e2\u05d5\u05ea \u05e0\u05d5\u05e6\u05dc\u05d5 \u05d1\u05e2\u05d5\u05ea\u05e7 \u05d0\u05da \u05dc\u05d0 \u05e1\u05d5\u05de\u05e0\u05d5 \u05db\u05de\u05e0\u05d5\u05e6\u05dc\u05d5\u05ea \u05db\u05d0\u05df.</translation>\n+        <location line=\"-378\"/>\n+        <source>Are you sure you want to send?</source>\n+        <translation>\u05d4\u05d0\u05dd \u05d0\u05db\u05df \u05dc\u05e9\u05dc\u05d5\u05d7?</translation>\n+    </message>\n+    <message>\n+        <location line=\"+9\"/>\n+        <source>added as transaction fee</source>\n+        <translation>\u05d4\u05d5\u05e1\u05e3 \u05de\u05d7\u05d9\u05e8 \u05d8\u05d9\u05e4\u05d5\u05dc</translation>\n     </message>\n     <message>\n-        <location line=\"+144\"/>\n+        <location line=\"+170\"/>\n         <source>Payment request expired</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -1740,39 +2263,44 @@ Address: %4\n <context>\n     <name>SendCoinsEntry</name>\n     <message>\n-        <location filename=\"../forms/sendcoinsentry.ui\" line=\"+33\"/>\n-        <location line=\"+585\"/>\n+        <location filename=\"../forms/sendcoinsentry.ui\" line=\"+131\"/>\n+        <location line=\"+501\"/>\n+        <location line=\"+536\"/>\n         <source>A&amp;mount:</source>\n         <translation>\u05db&amp;\u05de\u05d5\u05ea:</translation>\n     </message>\n     <message>\n-        <location line=\"-572\"/>\n-        <location line=\"+585\"/>\n+        <location line=\"-1132\"/>\n         <source>Pay &amp;To:</source>\n         <translation>\u05e9\u05dc\u05dd &amp;\u05dc:</translation>\n     </message>\n     <message>\n-        <location line=\"-551\"/>\n+        <location line=\"+18\"/>\n         <source>The address to send the payment to (e.g. 1NS17iag9jJgTHD1VXjvLCEnZuQ3rJDE9L)</source>\n         <translation>\u05d4\u05db\u05ea\u05d5\u05d1\u05ea \u05e9\u05d0\u05dc\u05d9\u05d4 \u05d9\u05e9\u05dc\u05d7 \u05d4\u05ea\u05e9\u05dc\u05d5\u05dd (\u05dc\u05de\u05e9\u05dc 1NS17iag9jJgTHD1VXjvLCEnZuQ3rJDE9L)</translation>\n     </message>\n     <message>\n-        <location filename=\"../sendcoinsentry.cpp\" line=\"+28\"/>\n+        <location filename=\"../sendcoinsentry.cpp\" line=\"+30\"/>\n         <source>Enter a label for this address to add it to your address book</source>\n         <translation>\u05d4\u05db\u05e0\u05e1 \u05ea\u05d5\u05d9\u05ea \u05dc\u05db\u05ea\u05d5\u05d1\u05ea \u05d4\u05d6\u05d0\u05ea \u05db\u05d3\u05d9 \u05dc\u05d4\u05db\u05e0\u05d9\u05e1 \u05dc\u05e4\u05e0\u05e7\u05e1 \u05d4\u05db\u05ea\u05d5\u05d1\u05d5\u05ea</translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/sendcoinsentry.ui\" line=\"-18\"/>\n+        <location filename=\"../forms/sendcoinsentry.ui\" line=\"+57\"/>\n         <source>&amp;Label:</source>\n         <translation>\u05ea&amp;\u05d5\u05d9\u05ea:</translation>\n     </message>\n     <message>\n-        <location line=\"+28\"/>\n+        <location line=\"-50\"/>\n         <source>Choose previously used address</source>\n+        <translation>\u05d1\u05d7\u05e8 \u05db\u05ea\u05d5\u05d1\u05ea \u05e9\u05d4\u05d9\u05d9\u05ea\u05d4 \u05d1\u05e9\u05d9\u05de\u05d5\u05e9</translation>\n+    </message>\n+    <message>\n+        <location line=\"-40\"/>\n+        <source>This is a normal payment.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n+        <location line=\"+50\"/>\n         <source>Alt+A</source>\n         <translation>Alt+A</translation>\n     </message>\n@@ -1788,19 +2316,38 @@ Address: %4\n     </message>\n     <message>\n         <location line=\"+7\"/>\n-        <source>Remove this recipient</source>\n-        <translation>\u05d4\u05e1\u05e8 \u05d0\u05ea \u05d4\u05de\u05e7\u05d1\u05dc \u05d4\u05d6\u05d4</translation>\n+        <location line=\"+504\"/>\n+        <location line=\"+536\"/>\n+        <source>Remove this entry</source>\n+        <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+16\"/>\n+        <location line=\"-40\"/>\n+        <source>This is a verified payment request.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"-971\"/>\n         <source>Enter a label for this address to add it to the list of used addresses</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+465\"/>\n-        <source>Memo:</source>\n+        <location line=\"+439\"/>\n+        <source>This is an unverified payment request.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n+    <message>\n+        <location line=\"+18\"/>\n+        <location line=\"+532\"/>\n+        <source>Pay To:</source>\n+        <translation>\u05ea\u05e9\u05dc\u05d5\u05dd \u05dc:</translation>\n+    </message>\n+    <message>\n+        <location line=\"-498\"/>\n+        <location line=\"+536\"/>\n+        <source>Memo:</source>\n+        <translation>\u05ea\u05d6\u05db\u05d5\u05e8\u05ea:</translation>\n+    </message>\n     <message>\n         <location filename=\"../sendcoinsentry.cpp\" line=\"+1\"/>\n         <source>Enter a Bitcoin address (e.g. 1NS17iag9jJgTHD1VXjvLCEnZuQ3rJDE9L)</source>\n@@ -1833,7 +2380,7 @@ Address: %4\n         <location line=\"+10\"/>\n         <location line=\"+213\"/>\n         <source>Choose previously used address</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u05d1\u05d7\u05e8 \u05db\u05ea\u05d5\u05d1\u05ea \u05e9\u05d4\u05d9\u05d9\u05ea\u05d4 \u05d1\u05e9\u05d9\u05de\u05d5\u05e9</translation>\n     </message>\n     <message>\n         <location line=\"-203\"/>\n@@ -1918,7 +2465,7 @@ Address: %4\n         <translation>\u05d0\u05e4\u05e1 \u05d0\u05ea \u05db\u05dc \u05e9\u05d3\u05d5\u05ea \u05d0\u05d9\u05de\u05d5\u05ea \u05d4\u05d5\u05d3\u05e2\u05d4</translation>\n     </message>\n     <message>\n-        <location filename=\"../signverifymessagedialog.cpp\" line=\"+27\"/>\n+        <location filename=\"../signverifymessagedialog.cpp\" line=\"+29\"/>\n         <location line=\"+3\"/>\n         <source>Enter a Bitcoin address (e.g. 1NS17iag9jJgTHD1VXjvLCEnZuQ3rJDE9L)</source>\n         <translation>\u05d4\u05db\u05e0\u05e1 \u05db\u05ea\u05d5\u05d1\u05ea \u05d1\u05d9\u05d8\u05e7\u05d5\u05d9\u05df (\u05dc\u05de\u05e9\u05dc 1NS17iag9jJgTHD1VXjvLCEnZuQ3rJDE9L)</translation>\n@@ -1934,7 +2481,7 @@ Address: %4\n         <translation>\u05d4\u05db\u05e0\u05e1 \u05d7\u05ea\u05d9\u05de\u05ea \u05d1\u05d9\u05d8\u05e7\u05d5\u05d9\u05df</translation>\n     </message>\n     <message>\n-        <location line=\"+85\"/>\n+        <location line=\"+84\"/>\n         <location line=\"+81\"/>\n         <source>The entered address is invalid.</source>\n         <translation>\u05d4\u05db\u05ea\u05d5\u05d1\u05ea \u05e9\u05d4\u05d5\u05db\u05e0\u05e1\u05d4 \u05d0\u05d9\u05e0\u05d4 \u05ea\u05e7\u05d9\u05e0\u05d4.</translation>\n@@ -2003,9 +2550,14 @@ Address: %4\n <context>\n     <name>SplashScreen</name>\n     <message>\n-        <location filename=\"../splashscreen.cpp\" line=\"+23\"/>\n-        <source>The Bitcoin developers</source>\n-        <translation>\u05de\u05e4\u05ea\u05d7\u05d9 \u05d1\u05d9\u05d8\u05e7\u05d5\u05d9\u05df</translation>\n+        <location filename=\"../splashscreen.cpp\" line=\"+26\"/>\n+        <source>Bitcoin Core</source>\n+        <translation>\u05dc\u05d9\u05d1\u05ea \u05d1\u05d9\u05d8\u05e7\u05d5\u05d9\u05df</translation>\n+    </message>\n+    <message>\n+        <location line=\"+2\"/>\n+        <source>The Bitcoin Core developers</source>\n+        <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <location line=\"+1\"/>\n@@ -2016,15 +2568,15 @@ Address: %4\n <context>\n     <name>TrafficGraphWidget</name>\n     <message>\n-        <location filename=\"../trafficgraphwidget.cpp\" line=\"+75\"/>\n+        <location filename=\"../trafficgraphwidget.cpp\" line=\"+79\"/>\n         <source>KB/s</source>\n         <translation type=\"unfinished\"/>\n     </message>\n </context>\n <context>\n     <name>TransactionDesc</name>\n     <message>\n-        <location filename=\"../transactiondesc.cpp\" line=\"+22\"/>\n+        <location filename=\"../transactiondesc.cpp\" line=\"+28\"/>\n         <source>Open until %1</source>\n         <translation>\u05e4\u05ea\u05d5\u05d7 \u05e2\u05d3 %1</translation>\n     </message>\n@@ -2216,7 +2768,7 @@ Address: %4\n <context>\n     <name>TransactionTableModel</name>\n     <message>\n-        <location filename=\"../transactiontablemodel.cpp\" line=\"+227\"/>\n+        <location filename=\"../transactiontablemodel.cpp\" line=\"+234\"/>\n         <source>Date</source>\n         <translation>\u05ea\u05d0\u05e8\u05d9\u05da</translation>\n     </message>\n@@ -2334,7 +2886,7 @@ Address: %4\n <context>\n     <name>TransactionView</name>\n     <message>\n-        <location filename=\"../transactionview.cpp\" line=\"+52\"/>\n+        <location filename=\"../transactionview.cpp\" line=\"+57\"/>\n         <location line=\"+16\"/>\n         <source>All</source>\n         <translation>\u05d4\u05db\u05dc</translation>\n@@ -2395,12 +2947,12 @@ Address: %4\n         <translation>\u05d0\u05d7\u05e8</translation>\n     </message>\n     <message>\n-        <location line=\"+7\"/>\n+        <location line=\"+6\"/>\n         <source>Enter address or label to search</source>\n         <translation>\u05d4\u05db\u05e0\u05e1 \u05db\u05ea\u05d5\u05d1\u05ea \u05d0\u05d5 \u05ea\u05d5\u05d9\u05ea \u05dc\u05d7\u05e4\u05e9</translation>\n     </message>\n     <message>\n-        <location line=\"+7\"/>\n+        <location line=\"+6\"/>\n         <source>Min amount</source>\n         <translation>\u05db\u05de\u05d5\u05ea \u05de\u05d6\u05e2\u05e8\u05d9\u05ea</translation>\n     </message>\n@@ -2435,17 +2987,37 @@ Address: %4\n         <translation>\u05d4\u05e6\u05d2 \u05e4\u05e8\u05d8\u05d9 \u05e4\u05e2\u05d5\u05dc\u05d4</translation>\n     </message>\n     <message>\n-        <location line=\"+143\"/>\n-        <source>Export Transaction Data</source>\n-        <translation>\u05d9\u05e6\u05d5\u05d0 \u05e0\u05ea\u05d5\u05e0\u05d9 \u05e4\u05e2\u05d5\u05dc\u05d5\u05ea</translation>\n+        <location line=\"+142\"/>\n+        <source>Export Transaction History</source>\n+        <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+1\"/>\n+        <location line=\"+19\"/>\n+        <source>Exporting Failed</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+0\"/>\n+        <source>There was an error trying to save the transaction history to %1.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+4\"/>\n+        <source>Exporting Successful</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+0\"/>\n+        <source>The transaction history was successfully saved to %1.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"-22\"/>\n         <source>Comma separated file (*.csv)</source>\n         <translation>\u05e7\u05d5\u05d1\u05e5 \u05de\u05d5\u05e4\u05e8\u05d3 \u05d1\u05e4\u05e1\u05d9\u05e7\u05d9\u05dd (*.csv)</translation>\n     </message>\n     <message>\n-        <location line=\"+8\"/>\n+        <location line=\"+9\"/>\n         <source>Confirmed</source>\n         <translation>\u05de\u05d0\u05d5\u05e9\u05e8</translation>\n     </message>\n@@ -2480,17 +3052,7 @@ Address: %4\n         <translation>\u05de\u05d6\u05d4\u05d4</translation>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n-        <source>Error exporting</source>\n-        <translation>\u05e9\u05d2\u05d9\u05d0\u05d4 \u05d1\u05d9\u05e6\u05d5\u05d0</translation>\n-    </message>\n-    <message>\n-        <location line=\"+0\"/>\n-        <source>Could not write to file %1.</source>\n-        <translation>\u05dc\u05d0 \u05de\u05e1\u05d5\u05d2\u05dc \u05dc\u05db\u05ea\u05d5\u05d1 \u05dc\u05e7\u05d5\u05d1\u05e5 %1.</translation>\n-    </message>\n-    <message>\n-        <location line=\"+100\"/>\n+        <location line=\"+107\"/>\n         <source>Range:</source>\n         <translation>\u05d8\u05d5\u05d5\u05d7:</translation>\n     </message>\n@@ -2500,18 +3062,26 @@ Address: %4\n         <translation>\u05d0\u05dc</translation>\n     </message>\n </context>\n+<context>\n+    <name>WalletFrame</name>\n+    <message>\n+        <location filename=\"../walletframe.cpp\" line=\"+26\"/>\n+        <source>No wallet has been loaded.</source>\n+        <translation>\u05dc\u05d0 \u05e0\u05d8\u05e2\u05df \u05d0\u05e8\u05e0\u05e7</translation>\n+    </message>\n+</context>\n <context>\n     <name>WalletModel</name>\n     <message>\n-        <location filename=\"../walletmodel.cpp\" line=\"+218\"/>\n+        <location filename=\"../walletmodel.cpp\" line=\"+245\"/>\n         <source>Send Coins</source>\n         <translation>\u05e9\u05dc\u05d7 \u05de\u05d8\u05d1\u05e2\u05d5\u05ea</translation>\n     </message>\n </context>\n <context>\n     <name>WalletView</name>\n     <message>\n-        <location filename=\"../walletview.cpp\" line=\"+46\"/>\n+        <location filename=\"../walletview.cpp\" line=\"+43\"/>\n         <source>&amp;Export</source>\n         <translation>&amp;\u05d9\u05d9\u05e6\u05d0</translation>\n     </message>\n@@ -2521,65 +3091,60 @@ Address: %4\n         <translation>\u05d9\u05e6\u05d5\u05d0 \u05d4\u05e0\u05ea\u05d5\u05e0\u05d9\u05dd \u05d1\u05d8\u05d0\u05d1 \u05d4\u05e0\u05d5\u05db\u05d7\u05d9 \u05dc\u05e7\u05d5\u05d1\u05e5</translation>\n     </message>\n     <message>\n-        <location line=\"+183\"/>\n+        <location line=\"+181\"/>\n         <source>Backup Wallet</source>\n         <translation>\u05d2\u05d1\u05d4 \u05d0\u05e8\u05e0\u05e7</translation>\n     </message>\n     <message>\n-        <location line=\"+0\"/>\n+        <location line=\"+1\"/>\n         <source>Wallet Data (*.dat)</source>\n         <translation>\u05e0\u05ea\u05d5\u05e0\u05d9 \u05d0\u05e8\u05e0\u05e7 (*.dat)</translation>\n     </message>\n     <message>\n-        <location line=\"+3\"/>\n+        <location line=\"+6\"/>\n         <source>Backup Failed</source>\n         <translation>\u05d2\u05d9\u05d1\u05d5\u05d9 \u05e0\u05db\u05e9\u05dc</translation>\n     </message>\n     <message>\n         <location line=\"+0\"/>\n-        <source>There was an error trying to save the wallet data to the new location.</source>\n-        <translation>\u05d4\u05d9\u05d9\u05ea\u05d4 \u05e9\u05d2\u05d9\u05d0\u05d4 \u05d1\u05e0\u05e1\u05d9\u05d5\u05df \u05dc\u05e9\u05de\u05d5\u05e8 \u05d0\u05ea \u05d4\u05de\u05d9\u05d3\u05e2 \u05d4\u05d0\u05e8\u05e0\u05e7 \u05dc\u05de\u05d9\u05e7\u05d5\u05dd \u05d4\u05d7\u05d3\u05e9.</translation>\n+        <source>There was an error trying to save the wallet data to %1.</source>\n+        <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <location line=\"+4\"/>\n-        <source>Backup Successful</source>\n-        <translation>\u05d2\u05d9\u05d1\u05d5\u05d9 \u05d4\u05d5\u05e9\u05dc\u05dd \u05d1\u05d4\u05e6\u05dc\u05d7\u05d4</translation>\n+        <source>The wallet data was successfully saved to %1.</source>\n+        <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <location line=\"+0\"/>\n-        <source>The wallet data was successfully saved to the new location.</source>\n-        <translation>\u05e0\u05ea\u05d5\u05e0\u05d9 \u05d4\u05d0\u05e8\u05e0\u05e7 \u05e0\u05e9\u05de\u05e8\u05d5 \u05d1\u05d4\u05e6\u05dc\u05d7\u05d4 \u05d1\u05de\u05e7\u05d5\u05dd \u05d4\u05d7\u05d3\u05e9.</translation>\n+        <source>Backup Successful</source>\n+        <translation>\u05d2\u05d9\u05d1\u05d5\u05d9 \u05d4\u05d5\u05e9\u05dc\u05dd \u05d1\u05d4\u05e6\u05dc\u05d7\u05d4</translation>\n     </message>\n </context>\n <context>\n     <name>bitcoin-core</name>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"+102\"/>\n-        <source>Bitcoin version</source>\n-        <translation>\u05d2\u05e8\u05e1\u05ea \u05d1\u05d9\u05d8\u05e7\u05d5\u05d9\u05df</translation>\n-    </message>\n-    <message>\n-        <location line=\"+107\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"+217\"/>\n         <source>Usage:</source>\n         <translation>\u05e9\u05d9\u05de\u05d5\u05e9:</translation>\n     </message>\n     <message>\n-        <location line=\"-55\"/>\n+        <location line=\"-54\"/>\n         <source>List commands</source>\n         <translation>\u05e8\u05e9\u05d9\u05de\u05ea \u05e4\u05e7\u05d5\u05d3\u05d5\u05ea</translation>\n     </message>\n     <message>\n-        <location line=\"-13\"/>\n+        <location line=\"-14\"/>\n         <source>Get help for a command</source>\n         <translation>\u05e7\u05d1\u05dc \u05e2\u05d6\u05e8\u05d4 \u05e2\u05d1\u05d5\u05e8 \u05e4\u05e7\u05d5\u05d3\u05d4</translation>\n     </message>\n     <message>\n-        <location line=\"+25\"/>\n+        <location line=\"+26\"/>\n         <source>Options:</source>\n         <translation>\u05d0\u05e4\u05e9\u05e8\u05d5\u05d9\u05d5\u05ea:</translation>\n     </message>\n     <message>\n-        <location line=\"+24\"/>\n+        <location line=\"+23\"/>\n         <source>Specify configuration file (default: bitcoin.conf)</source>\n         <translation>\u05e6\u05d9\u05d9\u05df \u05e7\u05d5\u05d1\u05e5 \u05d4\u05d2\u05d3\u05e8\u05d5\u05ea (\u05d1\u05e8\u05d9\u05e8\u05ea \u05de\u05d7\u05d3\u05dc: bitcoin.conf)</translation>\n     </message>\n@@ -2599,7 +3164,7 @@ Address: %4\n         <translation>\u05e7\u05d1\u05e2 \u05d0\u05ea \u05d2\u05d5\u05d3\u05dc \u05d4\u05de\u05d8\u05de\u05d5\u05df \u05e9\u05dc \u05de\u05e1\u05d3 \u05d4\u05e0\u05ea\u05d5\u05e0\u05d9\u05dd \u05d1\u05de\u05d2\u05d4\u05d1\u05d9\u05d9\u05d8 (\u05d1\u05e8\u05d9\u05e8\u05ea \u05de\u05d7\u05d3\u05dc: 25)</translation>\n     </message>\n     <message>\n-        <location line=\"-28\"/>\n+        <location line=\"-27\"/>\n         <source>Listen for connections on &lt;port&gt; (default: 8333 or testnet: 18333)</source>\n         <translation>\u05d4\u05d0\u05d6\u05df \u05dc\u05d7\u05d9\u05d1\u05d5\u05e8\u05d9\u05dd \u05d1&lt;\u05e4\u05d5\u05e8\u05d8&gt; (\u05d1\u05e8\u05d9\u05e8\u05ea \u05de\u05d7\u05d3\u05dc: 8333 \u05d0\u05d5 \u05d1\u05e8\u05e9\u05ea \u05d4\u05d1\u05d3\u05d9\u05e7\u05d4: 18333)</translation>\n     </message>\n@@ -2609,7 +3174,7 @@ Address: %4\n         <translation>\u05d4\u05d7\u05d6\u05e7 \u05dc\u05db\u05dc \u05d4\u05d9\u05d5\u05ea\u05e8 &lt;n&gt; \u05d7\u05d9\u05d1\u05d5\u05e8\u05d9\u05dd \u05dc\u05e2\u05de\u05d9\u05ea\u05d9\u05dd (\u05d1\u05e8\u05d9\u05e8\u05ea \u05de\u05d7\u05d3\u05dc: 125)</translation>\n     </message>\n     <message>\n-        <location line=\"-49\"/>\n+        <location line=\"-50\"/>\n         <source>Connect to a node to retrieve peer addresses, and disconnect</source>\n         <translation>\u05d4\u05ea\u05d7\u05d1\u05e8 \u05dc\u05e6\u05d5\u05de\u05ea \u05db\u05d3\u05d9 \u05dc\u05d3\u05dc\u05d5\u05ea \u05db\u05ea\u05d5\u05d1\u05d5\u05ea \u05e2\u05de\u05d9\u05ea\u05d9\u05dd, \u05d5\u05d0\u05d6 \u05d4\u05ea\u05e0\u05ea\u05e7</translation>\n     </message>\n@@ -2624,7 +3189,7 @@ Address: %4\n         <translation>\u05e1\u05e3 \u05dc\u05d4\u05ea\u05e0\u05ea\u05e7\u05d5\u05ea \u05de\u05e2\u05de\u05d9\u05ea\u05d9\u05dd \u05d4\u05e0\u05d5\u05d4\u05d2\u05d9\u05dd \u05e9\u05dc\u05d0 \u05db\u05d4\u05dc\u05db\u05d4 (\u05d1\u05e8\u05d9\u05e8\u05ea \u05de\u05d7\u05d3\u05dc: 100)</translation>\n     </message>\n     <message>\n-        <location line=\"-142\"/>\n+        <location line=\"-147\"/>\n         <source>Number of seconds to keep misbehaving peers from reconnecting (default: 86400)</source>\n         <translation>\u05de\u05e1\u05e4\u05e8 \u05e9\u05e0\u05d9\u05d5\u05ea \u05dc\u05de\u05e0\u05d5\u05e2 \u05de\u05e2\u05de\u05d9\u05ea\u05d9\u05dd \u05d4\u05e0\u05d5\u05d4\u05d2\u05d9\u05dd \u05e9\u05dc\u05d0 \u05db\u05d4\u05dc\u05db\u05d4 \u05de\u05dc\u05d4\u05ea\u05d7\u05d1\u05e8 \u05de\u05d7\u05d3\u05e9 (\u05d1\u05e8\u05d9\u05e8\u05ea \u05de\u05d7\u05d3\u05dc: 86400)</translation>\n     </message>\n@@ -2639,7 +3204,7 @@ Address: %4\n         <translation>\u05d4\u05d0\u05d6\u05df \u05dc\u05d7\u05d9\u05d1\u05d5\u05e8\u05d9 JSON-RPC \u05d1- &lt;port&gt; (\u05d1\u05e8\u05d9\u05e8\u05ea \u05de\u05d7\u05d3\u05dc: 8332 \u05d0\u05d5 \u05e8\u05e9\u05ea \u05d1\u05d3\u05d9\u05e7\u05d4: 18332)</translation>\n     </message>\n     <message>\n-        <location line=\"+40\"/>\n+        <location line=\"+45\"/>\n         <source>Accept command line and JSON-RPC commands</source>\n         <translation>\u05e7\u05d1\u05dc \u05e4\u05e7\u05d5\u05d3\u05d5\u05ea \u05de\u05e9\u05d5\u05e8\u05ea \u05d4\u05e4\u05e7\u05d5\u05d3\u05d4 \u05d5- JSON-RPC</translation>\n     </message>\n@@ -2649,17 +3214,17 @@ Address: %4\n         <translation>\u05e8\u05d5\u05e5 \u05d1\u05e8\u05e7\u05e2 \u05db\u05d3\u05d9\u05de\u05d5\u05df \u05d5\u05e7\u05d1\u05dc \u05e4\u05e7\u05d5\u05d3\u05d5\u05ea</translation>\n     </message>\n     <message>\n-        <location line=\"+40\"/>\n+        <location line=\"+39\"/>\n         <source>Use the test network</source>\n         <translation>\u05d4\u05e9\u05ea\u05de\u05e9 \u05d1\u05e8\u05e9\u05ea \u05d4\u05d1\u05d3\u05d9\u05e7\u05d4</translation>\n     </message>\n     <message>\n-        <location line=\"-118\"/>\n+        <location line=\"-117\"/>\n         <source>Accept connections from outside (default: 1 if no -proxy or -connect)</source>\n         <translation>\u05e7\u05d1\u05dc \u05d7\u05d9\u05d1\u05d5\u05e8\u05d9\u05dd \u05de\u05d1\u05d7\u05d5\u05e5 (\u05d1\u05e8\u05d9\u05e8\u05ea \u05de\u05d7\u05d3\u05dc: 1 \u05dc\u05dc\u05d0 -proxy \u05d0\u05d5 -connect)</translation>\n     </message>\n     <message>\n-        <location line=\"-87\"/>\n+        <location line=\"-92\"/>\n         <source>%s, you must set a rpcpassword in the configuration file:\n %s\n It is recommended you use the following random password:\n@@ -2724,17 +3289,17 @@ rpcpassword=%s\n         <translation>\u05d1\u05e6\u05e2 \u05e4\u05e7\u05d5\u05d3\u05d4 \u05db\u05d0\u05e9\u05e8 \u05e4\u05e2\u05d5\u05dc\u05ea \u05d0\u05e8\u05e0\u05e7 \u05de\u05e9\u05ea\u05e0\u05d4 (%s \u05d1 cmd \u05d9\u05d5\u05d7\u05dc\u05e3 \u05d1 TxID)</translation>\n     </message>\n     <message>\n-        <location line=\"+11\"/>\n-        <source>Set maximum size of high-priority/low-fee transactions in bytes (default: 27000)</source>\n-        <translation>\u05e7\u05d1\u05e2 \u05d2\u05d5\u05d3\u05dc \u05de\u05e7\u05e1\u05d9\u05de\u05dc\u05d9 \u05e2\u05d1\u05d5\u05e8 \u05e4\u05e2\u05d5\u05dc\u05d5\u05ea \u05e2\u05d3\u05d9\u05e4\u05d5\u05ea \u05d2\u05d1\u05d5\u05d4\u05d4/\u05e2\u05de\u05dc\u05d4 \u05e0\u05de\u05d5\u05db\u05d4 \u05d1\u05d1\u05ea\u05d9\u05dd (\u05d1\u05e8\u05d9\u05e8\u05ea \u05de\u05d7\u05d3\u05dc: 27000)</translation>\n-    </message>\n-    <message>\n-        <location line=\"+6\"/>\n+        <location line=\"+18\"/>\n         <source>This is a pre-release test build - use at your own risk - do not use for mining or merchant applications</source>\n         <translation>\u05d6\u05d5\u05d4\u05d9 \u05d1\u05e0\u05d9\u05d9\u05ea \u05e0\u05d9\u05e1\u05d9\u05d5\u05df \u05d8\u05e8\u05d5\u05dd-\u05e9\u05d7\u05e8\u05d5\u05e8 - \u05d4\u05e9\u05d9\u05de\u05d5\u05e9 \u05d1\u05d4 \u05e2\u05dc \u05d0\u05d7\u05e8\u05d9\u05d5\u05ea\u05da - \u05d0\u05d9\u05df \u05dc\u05d4\u05e9\u05ea\u05de\u05e9 \u05dc\u05e6\u05d5\u05e8\u05da \u05db\u05e8\u05d9\u05d4 \u05d0\u05d5 \u05d9\u05d9\u05e9\u05d5\u05de\u05d9 \u05de\u05e1\u05d7\u05e8</translation>\n     </message>\n     <message>\n         <location line=\"+5\"/>\n+        <source>Use separate SOCKS5 proxy to reach peers via Tor hidden services (default: -proxy)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n         <source>Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.</source>\n         <translation>\u05d0\u05d6\u05d4\u05e8\u05d4: -paytxfee \u05e0\u05e7\u05d1\u05e2 \u05dc\u05e2\u05e8\u05da \u05de\u05d0\u05d3 \u05d2\u05d1\u05d5\u05d4! \u05d6\u05d5\u05d4\u05d9 \u05e2\u05de\u05dc\u05ea \u05d4\u05e4\u05e2\u05d5\u05dc\u05d4 \u05e9\u05ea\u05e9\u05dc\u05dd \u05d0\u05dd \u05d0\u05ea\u05d4 \u05e9\u05d5\u05dc\u05d7 \u05e4\u05e2\u05d5\u05dc\u05d4.</translation>\n     </message>\n@@ -2764,17 +3329,27 @@ rpcpassword=%s\n         <translation>\u05d0\u05d6\u05d4\u05e8\u05d4: \u05e7\u05d5\u05d1\u05e5 wallet.dat \u05de\u05d5\u05e9\u05d7\u05ea, \u05d4\u05de\u05d9\u05d3\u05e2 \u05d7\u05d5\u05dc\u05e5! \u05e7\u05d5\u05d1\u05e5 wallet.dat \u05d4\u05de\u05e7\u05d5\u05e8\u05d7 \u05e0\u05e9\u05de\u05e8 \u05db - wallet.{timestamp}.bak \u05d1 - %s; \u05d0\u05dd \u05d4\u05de\u05d0\u05d6\u05df \u05d0\u05d5 \u05d4\u05e4\u05e2\u05d5\u05dc\u05d5\u05ea \u05e9\u05d2\u05d5\u05d9\u05d9\u05dd \u05e2\u05dc\u05d9\u05da \u05dc\u05e9\u05d7\u05d6\u05e8 \u05d2\u05d9\u05d1\u05d5\u05d9.</translation>\n     </message>\n     <message>\n-        <location line=\"+14\"/>\n+        <location line=\"+9\"/>\n+        <source>&lt;category&gt; can be:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+6\"/>\n         <source>Attempt to recover private keys from a corrupt wallet.dat</source>\n         <translation>\u05e0\u05e1\u05d4 \u05dc\u05e9\u05d7\u05d6\u05e8 \u05de\u05e4\u05ea\u05d7\u05d5\u05ea \u05e4\u05e8\u05d8\u05d9\u05d9\u05dd \u05de\u05e7\u05d5\u05d1\u05e5 wallet.dat \u05de\u05d5\u05e9\u05d7\u05ea.</translation>\n     </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Bitcoin Core Daemon</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n     <message>\n         <location line=\"+1\"/>\n         <source>Bitcoin RPC client version</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+2\"/>\n+        <location line=\"+1\"/>\n         <source>Block creation options:</source>\n         <translation>\u05d0\u05e4\u05e9\u05e8\u05d5\u05d9\u05d5\u05ea \u05d9\u05e6\u05d9\u05e8\u05ea \u05d1\u05dc\u05d5\u05e7:</translation>\n     </message>\n@@ -2784,7 +3359,12 @@ rpcpassword=%s\n         <translation>\u05d4\u05ea\u05d7\u05d1\u05e8 \u05e8\u05e7 \u05dc\u05e6\u05de\u05ea\u05d9\u05dd \u05d4\u05de\u05e6\u05d5\u05d9\u05e0\u05d9\u05dd</translation>\n     </message>\n     <message>\n-        <location line=\"+2\"/>\n+        <location line=\"+1\"/>\n+        <source>Connect through SOCKS proxy</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n         <source>Connect to JSON-RPC on &lt;port&gt; (default: 8332 or testnet: 18332)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2894,7 +3474,12 @@ rpcpassword=%s\n         <translation>\u05db\u05ea\u05d9\u05d1\u05ea \u05e0\u05ea\u05d5\u05e0\u05d9 \u05d1\u05d9\u05d8\u05d5\u05dc \u05e0\u05db\u05e9\u05dc\u05d4</translation>\n     </message>\n     <message>\n-        <location line=\"+2\"/>\n+        <location line=\"+1\"/>\n+        <source>Fee per kB to add to transactions you send</source>\n+        <translation>\u05e2\u05de\u05dc\u05d4 \u05dc\u05db\u05dc kB \u05dc\u05d4\u05d5\u05e1\u05d9\u05e3 \u05dc\u05e4\u05e2\u05d5\u05dc\u05d5\u05ea \u05e9\u05d0\u05ea\u05d4 \u05e9\u05d5\u05dc\u05d7</translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n         <source>Find peers using DNS lookup (default: 1 unless -connect)</source>\n         <translation>\u05de\u05e6\u05d0 \u05e2\u05de\u05d9\u05ea\u05d9\u05dd \u05e2&quot;\u05d9 \u05d7\u05d9\u05e4\u05d5\u05e9 DNS (\u05d1\u05e8\u05d9\u05e8\u05ea \u05de\u05d7\u05d3\u05dc: 1 \u05dc\u05dc\u05d0 -connect)</translation>\n     </message>\n@@ -2913,6 +3498,11 @@ rpcpassword=%s\n         <source>How thorough the block verification is (0-4, default: 3)</source>\n         <translation>\u05de\u05d9\u05d3\u05ea \u05d4\u05d9\u05e1\u05d5\u05d3\u05d9\u05d5\u05ea \u05e9\u05dc \u05d0\u05d9\u05de\u05d5\u05ea \u05d4\u05d1\u05dc\u05d5\u05e7\u05d9\u05dd (0-4, \u05d1\u05e8\u05d9\u05e8\u05ea \u05de\u05d7\u05d3\u05dc: 3)</translation>\n     </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>If &lt;category&gt; is not supplied, output all debugging information.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n     <message>\n         <location line=\"+2\"/>\n         <source>Incorrect or no genesis block found. Wrong datadir for network?</source>\n@@ -2929,17 +3519,37 @@ rpcpassword=%s\n         <translation>\u05d0\u05d9\u05df \u05de\u05e1\u05e4\u05d9\u05e7 \u05de\u05d9\u05d3\u05e2 \u05e2\u05dc \u05d4\u05e7\u05d5\u05d1\u05e5</translation>\n     </message>\n     <message>\n-        <location line=\"+8\"/>\n+        <location line=\"+5\"/>\n+        <source>Prepend debug output with timestamp (default: 1)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>RPC client options:</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n         <source>Rebuild block chain index from current blk000??.dat files</source>\n         <translation>\u05d1\u05e0\u05d4 \u05de\u05d7\u05d3\u05e9 \u05d0\u05ea \u05d0\u05d9\u05e0\u05d3\u05e7 \u05e9\u05e8\u05e9\u05e8\u05ea \u05d4\u05d1\u05dc\u05d5\u05e7\u05d9\u05dd \u05de\u05e7\u05d1\u05e6\u05d9 \u05d4-blk000??.dat \u05d4\u05e0\u05d5\u05db\u05d7\u05d9\u05d9\u05dd.</translation>\n     </message>\n     <message>\n-        <location line=\"+6\"/>\n+        <location line=\"+5\"/>\n+        <source>Select SOCKS version for -proxy (4 or 5, default: 5)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n         <source>Send command to Bitcoin server</source>\n+        <translation>\u05e9\u05dc\u05d9\u05d7\u05ea \u05e4\u05e7\u05d5\u05d3\u05d4 \u05dc\u05e9\u05e8\u05ea \u05d4\u05d1\u05d9\u05d8\u05e7\u05d5\u05d9\u05df</translation>\n+    </message>\n+    <message>\n+        <location line=\"+8\"/>\n+        <source>Set maximum block size in bytes (default: %d)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n+        <location line=\"+2\"/>\n         <source>Set the number of threads to service RPC calls (default: 4)</source>\n         <translation>\u05e7\u05d1\u05e2 \u05d0\u05ea \u05de\u05e1\u05e4\u05e8 \u05ea\u05d4\u05dc\u05d9\u05db\u05d5\u05e0\u05d9 \u05dc\u05e9\u05d9\u05e8\u05d5\u05ea \u05e7\u05e8\u05d9\u05d0\u05d5\u05ea RPC (\u05d1\u05e8\u05d9\u05e8\u05ea \u05de\u05d7\u05d3\u05dc: 4)</translation>\n     </message>\n@@ -2951,15 +3561,15 @@ rpcpassword=%s\n     <message>\n         <location line=\"+2\"/>\n         <source>Start Bitcoin server</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u05d4\u05e4\u05e2\u05dc \u05d1\u05d9\u05d8\u05e7\u05d5\u05d9\u05df \u05e1\u05e8\u05d5\u05d5\u05e8</translation>\n     </message>\n     <message>\n         <location line=\"+12\"/>\n         <source>Usage (deprecated, use bitcoin-cli):</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+8\"/>\n+        <location line=\"+7\"/>\n         <source>Verifying blocks...</source>\n         <translation>\u05de\u05d0\u05de\u05ea \u05d0\u05ea \u05e9\u05dc\u05de\u05d5\u05ea \u05de\u05e1\u05d3 \u05d4\u05e0\u05ea\u05d5\u05e0\u05d9\u05dd...</translation>\n     </message>\n@@ -2968,13 +3578,23 @@ rpcpassword=%s\n         <source>Verifying wallet...</source>\n         <translation>\u05de\u05d0\u05de\u05ea \u05d0\u05ea \u05d9\u05d5\u05e9\u05e8\u05ea \u05d4\u05d0\u05e8\u05e0\u05e7...</translation>\n     </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Wait for RPC server to start</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n     <message>\n         <location line=\"+1\"/>\n         <source>Wallet %s resides outside data directory %s</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n+        <location line=\"+3\"/>\n+        <source>Warning: Deprecated argument -debugnet ignored, use -debug=net</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+2\"/>\n         <source>You need to rebuild the database using -reindex to change -txindex</source>\n         <translation type=\"unfinished\"/>\n     </message>\n@@ -2984,17 +3604,27 @@ rpcpassword=%s\n         <translation>\u05de\u05d9\u05d9\u05d1\u05d0 \u05d1\u05dc\u05d5\u05e7\u05d9\u05dd \u05de\u05e7\u05d5\u05d1\u05e6\u05d9 blk000??.dat \u05d7\u05d9\u05e6\u05d5\u05e0\u05d9\u05d9\u05dd</translation>\n     </message>\n     <message>\n-        <location line=\"-98\"/>\n+        <location line=\"-104\"/>\n         <source>Execute command when a relevant alert is received or we see a really long fork (%s in cmd is replaced by message)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <location line=\"+17\"/>\n+        <location line=\"+14\"/>\n+        <source>Output debugging information (default: 0, supplying &lt;category&gt; is optional)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+2\"/>\n+        <source>Set maximum size of high-priority/low-fee transactions in bytes (default: %d)</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <location line=\"+2\"/>\n         <source>Set the number of script verification threads (up to 16, 0 = auto, &lt;0 = leave that many cores free, default: 0)</source>\n         <translation>\u05e7\u05d1\u05e2 \u05d0\u05ea \u05de\u05e1\u05e4\u05e8 \u05ea\u05d4\u05dc\u05d9\u05db\u05d5\u05e0\u05d9 \u05d0\u05d9\u05de\u05d5\u05ea \u05d4\u05e1\u05e7\u05e8\u05d9\u05e4\u05d8\u05d9\u05dd (1-16, 0 = \u05d0\u05d5\u05d8\u05d5\u05de\u05d8\u05d9, \u05d1\u05e8\u05d9\u05e8\u05ea \u05de\u05d7\u05d3\u05dc: 0)</translation>\n     </message>\n     <message>\n-        <location line=\"+83\"/>\n+        <location line=\"+88\"/>\n         <source>Information</source>\n         <translation>\u05de\u05d9\u05d3\u05e2</translation>\n     </message>\n@@ -3034,32 +3664,12 @@ rpcpassword=%s\n         <translation>\u05d4\u05ea\u05d7\u05d1\u05e8 \u05e8\u05e7 \u05dc\u05e6\u05de\u05ea\u05d9\u05dd \u05d1\u05e8\u05e9\u05ea &lt;net&gt; (IPv4, IPv6 \u05d0\u05d5 Tor)</translation>\n     </message>\n     <message>\n-        <location line=\"+2\"/>\n-        <source>Output extra debugging information. Implies all other -debug* options</source>\n-        <translation>\u05e4\u05dc\u05d5\u05d8 \u05de\u05d9\u05d3\u05e2 \u05e0\u05d9\u05e4\u05d5\u05d9 \u05e0\u05d5\u05e1\u05e3. \u05e0\u05d5\u05d1\u05e2 \u05de\u05db\u05da \u05db\u05dc \u05d0\u05e4\u05e9\u05e8\u05d5\u05d9\u05d5\u05ea -debug* \u05d4\u05d0\u05d7\u05e8\u05d5\u05ea.</translation>\n-    </message>\n-    <message>\n-        <location line=\"+1\"/>\n-        <source>Output extra network debugging information</source>\n-        <translation>\u05e4\u05dc\u05d5\u05d8 \u05de\u05d9\u05d3\u05e2 \u05e0\u05d5\u05e1\u05e3 \u05dc\u05e0\u05d9\u05e4\u05d5\u05d9 \u05e9\u05d2\u05d9\u05d0\u05d5\u05ea \u05d1\u05e8\u05e9\u05ea.</translation>\n-    </message>\n-    <message>\n-        <location line=\"+2\"/>\n-        <source>Prepend debug output with timestamp</source>\n-        <translation>\u05d4\u05d5\u05e1\u05e3 \u05d7\u05d5\u05ea\u05de\u05ea \u05d6\u05de\u05df \u05dc\u05e4\u05e0\u05d9 \u05e4\u05dc\u05d8 \u05d3\u05d9\u05d1\u05d0\u05d2</translation>\n-    </message>\n-    <message>\n-        <location line=\"+5\"/>\n+        <location line=\"+9\"/>\n         <source>SSL options: (see the Bitcoin Wiki for SSL setup instructions)</source>\n         <translation>\u05d0\u05e4\u05e9\u05e8\u05d5\u05d9\u05d5\u05ea SSL: (\u05e8\u05d0\u05d4 \u05d0\u05ea \u05d4\u05d5\u05d9\u05e7\u05d9 \u05e9\u05dc \u05d1\u05d9\u05d8\u05e7\u05d5\u05d9\u05df \u05e2\u05d1\u05d5\u05e8 \u05d4\u05d5\u05e8\u05d0\u05d5\u05ea \u05d4\u05d2\u05d3\u05e8\u05ea SSL)</translation>\n     </message>\n     <message>\n-        <location line=\"+1\"/>\n-        <source>Select the version of socks proxy to use (4-5, default: 5)</source>\n-        <translation>\u05d1\u05d7\u05e8 \u05d0\u05ea \u05d2\u05e8\u05e1\u05ea \u05e4\u05e8\u05d5\u05e7\u05e1\u05d9 SOCKS \u05dc\u05d4\u05e9\u05ea\u05de\u05e9 \u05d1\u05d4 (4-5, \u05d1\u05e8\u05d9\u05e8\u05ea \u05de\u05d7\u05d3\u05dc: 5)</translation>\n-    </message>\n-    <message>\n-        <location line=\"+3\"/>\n+        <location line=\"+4\"/>\n         <source>Send trace/debug info to console instead of debug.log file</source>\n         <translation>\u05e9\u05dc\u05d7 \u05de\u05d9\u05d3\u05e2 \u05d3\u05d9\u05d1\u05d0\u05d2 \u05d5\u05e2\u05e7\u05d1\u05d4 \u05dc\u05e7\u05d5\u05e0\u05e1\u05d5\u05dc\u05d4 \u05d1\u05de\u05e7\u05d5\u05dd \u05dc\u05e7\u05d5\u05d1\u05e5 debug.log</translation>\n     </message>\n@@ -3069,12 +3679,7 @@ rpcpassword=%s\n         <translation>\u05e9\u05dc\u05d7 \u05de\u05d9\u05d3\u05e2 \u05d3\u05d9\u05d1\u05d0\u05d2 \u05d5\u05e2\u05e7\u05d1\u05d4 \u05dc\u05db\u05dc\u05d9 \u05d3\u05d9\u05d1\u05d0\u05d2</translation>\n     </message>\n     <message>\n-        <location line=\"+5\"/>\n-        <source>Set maximum block size in bytes (default: 250000)</source>\n-        <translation>\u05e7\u05d1\u05e2 \u05d0\u05ea \u05d2\u05d3\u05d5\u05dc \u05d4\u05d1\u05dc\u05d5\u05e7 \u05d4\u05de\u05d9\u05e8\u05d1\u05d9 \u05d1\u05d1\u05ea\u05d9\u05dd (\u05d1\u05e8\u05d9\u05e8\u05ea \u05de\u05d7\u05d3\u05dc: 250000)</translation>\n-    </message>\n-    <message>\n-        <location line=\"+1\"/>\n+        <location line=\"+6\"/>\n         <source>Set minimum block size in bytes (default: 0)</source>\n         <translation>\u05e7\u05d1\u05e2 \u05d0\u05ea \u05d2\u05d5\u05d3\u05dc \u05d4\u05d1\u05dc\u05d5\u05e7 \u05d4\u05de\u05d9\u05e0\u05d9\u05de\u05dc\u05d9 \u05d1\u05d1\u05ea\u05d9\u05dd (\u05d1\u05e8\u05d9\u05e8\u05ea \u05de\u05d7\u05d3\u05dc: 0)</translation>\n     </message>\n@@ -3123,38 +3728,38 @@ rpcpassword=%s\n         <source>Use UPnP to map the listening port (default: 1 when listening)</source>\n         <translation>\u05d4\u05e9\u05ea\u05de\u05e9 \u05d1-UPnP \u05db\u05d3\u05d9 \u05dc\u05de\u05e4\u05d5\u05ea \u05d0\u05ea \u05d4\u05e4\u05d5\u05e8\u05d8 \u05dc\u05d4\u05d0\u05d6\u05e0\u05d4 (\u05d1\u05e8\u05d9\u05e8\u05ea \u05de\u05d7\u05d3\u05dc: 1 \u05d1\u05e2\u05ea \u05d4\u05d0\u05d6\u05e0\u05d4)</translation>\n     </message>\n-    <message>\n-        <location line=\"+1\"/>\n-        <source>Use proxy to reach tor hidden services (default: same as -proxy)</source>\n-        <translation>\u05d4\u05e9\u05ea\u05de\u05e9 \u05d1\u05e4\u05e8\u05d5\u05e7\u05e1\u05d9 \u05db\u05d3\u05d9 \u05dc\u05d4\u05d2\u05d9\u05e2 \u05dc\u05e9\u05d9\u05e8\u05d5\u05ea\u05d9\u05dd \u05d7\u05d1\u05d5\u05d9\u05d9\u05dd \u05d1-tor (\u05d1\u05e8\u05d9\u05e8\u05ea \u05de\u05d7\u05d3\u05dc: \u05db\u05de\u05d5 \u05d1- -proxy)</translation>\n-    </message>\n     <message>\n         <location line=\"+2\"/>\n         <source>Username for JSON-RPC connections</source>\n         <translation>\u05e9\u05dd \u05de\u05e9\u05ea\u05de\u05e9 \u05dc\u05d7\u05d9\u05d1\u05d5\u05e8\u05d9 JSON-RPC</translation>\n     </message>\n     <message>\n-        <location line=\"+5\"/>\n+        <location line=\"+6\"/>\n         <source>Warning</source>\n         <translation>\u05d0\u05d6\u05d4\u05e8\u05d4</translation>\n     </message>\n     <message>\n-        <location line=\"+1\"/>\n+        <location line=\"+2\"/>\n         <source>Warning: This version is obsolete, upgrade required!</source>\n         <translation>\u05d0\u05d6\u05d4\u05e8\u05d4: \u05d4\u05d2\u05e8\u05e1\u05d4 \u05d4\u05d6\u05d0\u05ea \u05de\u05d9\u05d5\u05e9\u05e0\u05ea, \u05d9\u05e9 \u05e6\u05d5\u05e8\u05da \u05d1\u05e9\u05d3\u05e8\u05d5\u05d2!</translation>\n     </message>\n     <message>\n         <location line=\"+2\"/>\n+        <source>version</source>\n+        <translation>\u05d2\u05e8\u05e1\u05d4</translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n         <source>wallet.dat corrupt, salvage failed</source>\n         <translation>\u05e7\u05d5\u05d1\u05e5 wallet.dat \u05de\u05d5\u05e9\u05d7\u05ea, \u05d4\u05d7\u05d9\u05dc\u05d5\u05e5 \u05e0\u05db\u05e9\u05dc</translation>\n     </message>\n     <message>\n-        <location line=\"-54\"/>\n+        <location line=\"-57\"/>\n         <source>Password for JSON-RPC connections</source>\n         <translation>\u05e1\u05d9\u05e1\u05de\u05d4 \u05dc\u05d7\u05d9\u05d1\u05d5\u05e8\u05d9 JSON-RPC</translation>\n     </message>\n     <message>\n-        <location line=\"-70\"/>\n+        <location line=\"-69\"/>\n         <source>Allow JSON-RPC connections from specified IP address</source>\n         <translation>\u05d0\u05e4\u05e9\u05e8 \u05d7\u05d9\u05d1\u05d5\u05e8\u05d9 JSON-RPC \u05de\u05db\u05ea\u05d5\u05d1\u05ea \u05d4\u05d0\u05d9\u05e0\u05d8\u05e8\u05e0\u05d8 \u05d4\u05de\u05e6\u05d5\u05d9\u05e0\u05ea</translation>\n     </message>\n@@ -3164,12 +3769,12 @@ rpcpassword=%s\n         <translation>\u05e9\u05dc\u05d7 \u05e4\u05e7\u05d5\u05d3\u05d5\u05ea \u05dc\u05e6\u05d5\u05de\u05ea \u05d1-&lt;ip&gt; (\u05d1\u05e8\u05d9\u05e8\u05ea \u05de\u05d7\u05d3\u05dc: 127.0.0.1)</translation>\n     </message>\n     <message>\n-        <location line=\"-126\"/>\n+        <location line=\"-131\"/>\n         <source>Execute command when the best block changes (%s in cmd is replaced by block hash)</source>\n         <translation>\u05d1\u05e6\u05e2 \u05e4\u05e7\u05d5\u05d3\u05d4 \u05d6\u05d5 \u05db\u05e9\u05d4\u05d1\u05dc\u05d5\u05e7 \u05d4\u05d8\u05d5\u05d1 \u05d1\u05d9\u05d5\u05ea\u05e8 \u05de\u05e9\u05ea\u05e0\u05d4 (%s \u05d1\u05e4\u05e7\u05d5\u05d3\u05d4 \u05d9\u05d5\u05d7\u05dc\u05e3 \u05d1\u05d2\u05d9\u05d1\u05d5\u05d1 \u05d4\u05d1\u05dc\u05d5\u05e7)</translation>\n     </message>\n     <message>\n-        <location line=\"+155\"/>\n+        <location line=\"+160\"/>\n         <source>Upgrade wallet to latest format</source>\n         <translation>\u05e9\u05d3\u05e8\u05d2 \u05d0\u05ea \u05d4\u05d0\u05e8\u05e0\u05e7 \u05dc\u05e4\u05d5\u05e8\u05de\u05d8 \u05d4\u05e2\u05d3\u05db\u05e0\u05d9</translation>\n     </message>\n@@ -3209,22 +3814,17 @@ rpcpassword=%s\n         <translation>\u05dc\u05d0 \u05de\u05e1\u05d5\u05d2\u05dc \u05dc\u05e7\u05e9\u05d5\u05e8 \u05dc-%s \u05d1\u05de\u05d7\u05e9\u05d1 \u05d6\u05d4 (\u05d4\u05e7\u05e9\u05d9\u05e8\u05d4 \u05d4\u05d7\u05d6\u05d9\u05e8\u05d4 \u05e9\u05d2\u05d9\u05d0\u05d4 %d, %s)</translation>\n     </message>\n     <message>\n-        <location line=\"-95\"/>\n-        <source>Connect through socks proxy</source>\n-        <translation>\u05d4\u05ea\u05d7\u05d1\u05e8 \u05d3\u05e8\u05da \u05e4\u05e8\u05d5\u05e7\u05e1\u05d9 SOCKS</translation>\n-    </message>\n-    <message>\n-        <location line=\"-11\"/>\n+        <location line=\"-106\"/>\n         <source>Allow DNS lookups for -addnode, -seednode and -connect</source>\n         <translation>\u05d0\u05e4\u05e9\u05e8 \u05d1\u05d3\u05d9\u05e7\u05ea DNS \u05e2\u05d1\u05d5\u05e8 -addnode, -seednode \u05d5- -connect</translation>\n     </message>\n     <message>\n-        <location line=\"+58\"/>\n+        <location line=\"+59\"/>\n         <source>Loading addresses...</source>\n         <translation>\u05d8\u05d5\u05e2\u05df \u05db\u05ea\u05d5\u05d1\u05d5\u05ea...</translation>\n     </message>\n     <message>\n-        <location line=\"-36\"/>\n+        <location line=\"-37\"/>\n         <source>Error loading wallet.dat: Wallet corrupted</source>\n         <translation>\u05e9\u05d2\u05d9\u05d0\u05d4 \u05d1\u05d8\u05e2\u05d9\u05e0\u05ea \u05d4\u05e7\u05d5\u05d1\u05e5 wallet.dat: \u05d4\u05d0\u05e8\u05e0\u05e7 \u05de\u05d5\u05e9\u05d7\u05ea</translation>\n     </message>\n@@ -3244,12 +3844,12 @@ rpcpassword=%s\n         <translation>\u05e9\u05d2\u05d9\u05d0\u05d4 \u05d1\u05d8\u05e2\u05d9\u05e0\u05ea \u05d4\u05e7\u05d5\u05d1\u05e5 wallet.dat</translation>\n     </message>\n     <message>\n-        <location line=\"+30\"/>\n+        <location line=\"+31\"/>\n         <source>Invalid -proxy address: &apos;%s&apos;</source>\n         <translation>\u05db\u05ea\u05d5\u05d1\u05ea -proxy \u05dc\u05d0 \u05ea\u05e7\u05d9\u05e0\u05d4: &apos;%s&apos;</translation>\n     </message>\n     <message>\n-        <location line=\"+57\"/>\n+        <location line=\"+56\"/>\n         <source>Unknown network specified in -onlynet: &apos;%s&apos;</source>\n         <translation>\u05e8\u05e9\u05ea \u05dc\u05d0 \u05d9\u05d3\u05d5\u05e2\u05d4 \u05e6\u05d5\u05d9\u05e0\u05d4 \u05d1- -onlynet: &apos;%s&apos;</translation>\n     </message>\n@@ -3269,7 +3869,7 @@ rpcpassword=%s\n         <translation>\u05dc\u05d0 \u05de\u05e1\u05d5\u05d2\u05dc \u05dc\u05e4\u05ea\u05d5\u05e8 \u05db\u05ea\u05d5\u05d1\u05ea -externalip: &apos;%s&apos;</translation>\n     </message>\n     <message>\n-        <location line=\"+46\"/>\n+        <location line=\"+47\"/>\n         <source>Invalid amount for -paytxfee=&lt;amount&gt;: &apos;%s&apos;</source>\n         <translation>\u05db\u05de\u05d5\u05ea \u05dc\u05d0 \u05ea\u05e7\u05d9\u05e0\u05d4 \u05e2\u05d1\u05d5\u05e8 -paytxfee=&lt;amount&gt;: &apos;%s&apos;</translation>\n     </message>\n@@ -3289,27 +3889,22 @@ rpcpassword=%s\n         <translation>\u05d8\u05d5\u05e2\u05df \u05d0\u05ea \u05d0\u05d9\u05e0\u05d3\u05e7\u05e1 \u05d4\u05d1\u05dc\u05d5\u05e7\u05d9\u05dd...</translation>\n     </message>\n     <message>\n-        <location line=\"-60\"/>\n+        <location line=\"-61\"/>\n         <source>Add a node to connect to and attempt to keep the connection open</source>\n         <translation>\u05d4\u05d5\u05e1\u05e3 \u05e6\u05d5\u05de\u05ea \u05dc\u05d4\u05ea\u05d7\u05d1\u05e8\u05d5\u05ea \u05d5\u05e0\u05e1\u05d4 \u05dc\u05e9\u05de\u05d5\u05e8 \u05d0\u05ea \u05d4\u05d7\u05d9\u05d1\u05d5\u05e8 \u05e4\u05ea\u05d5\u05d7</translation>\n     </message>\n     <message>\n-        <location line=\"-28\"/>\n+        <location line=\"-32\"/>\n         <source>Unable to bind to %s on this computer. Bitcoin is probably already running.</source>\n         <translation>\u05dc\u05d0 \u05e0\u05d9\u05ea\u05df \u05dc\u05e7\u05e9\u05d5\u05e8 \u05dc-%s \u05d1\u05de\u05d7\u05e9\u05d1 \u05d6\u05d4. \u05d1\u05d9\u05d8\u05e7\u05d5\u05d9\u05df \u05db\u05e0\u05e8\u05d0\u05d4 \u05e2\u05d3\u05d9\u05d9\u05df \u05e8\u05e5.</translation>\n     </message>\n     <message>\n-        <location line=\"+69\"/>\n-        <source>Fee per KB to add to transactions you send</source>\n-        <translation>\u05e2\u05de\u05dc\u05d4 \u05dc\u05d4\u05d5\u05e1\u05d9\u05e3 \u05dc\u05e4\u05e2\u05d5\u05dc\u05d5\u05ea \u05e9\u05d0\u05ea\u05d4 \u05e9\u05d5\u05dc\u05d7 \u05e2\u05d1\u05d5\u05e8 \u05db\u05dc KB</translation>\n-    </message>\n-    <message>\n-        <location line=\"+20\"/>\n+        <location line=\"+94\"/>\n         <source>Loading wallet...</source>\n         <translation>\u05d8\u05d5\u05e2\u05df \u05d0\u05e8\u05e0\u05e7...</translation>\n     </message>\n     <message>\n-        <location line=\"-54\"/>\n+        <location line=\"-55\"/>\n         <source>Cannot downgrade wallet</source>\n         <translation>\u05dc\u05d0 \u05d9\u05db\u05d5\u05dc \u05dc\u05d4\u05d5\u05e8\u05d9\u05d3 \u05d3\u05e8\u05d2\u05ea \u05d4\u05d0\u05e8\u05e0\u05e7</translation>\n     </message>\n@@ -3339,7 +3934,7 @@ rpcpassword=%s\n         <translation>\u05e9\u05d2\u05d9\u05d0\u05d4</translation>\n     </message>\n     <message>\n-        <location line=\"-33\"/>\n+        <location line=\"-34\"/>\n         <source>You must set rpcpassword=&lt;password&gt; in the configuration file:\n %s\n If the file does not exist, create it with owner-readable-only file permissions.</source>"
      },
      {
        "sha": "e216da932fa5ab25d1e1f530204cff066f6359c3",
        "filename": "src/qt/locale/bitcoin_hr.ts",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6d697e9fa45b3f3bf67d79cc3d17717b68a43825/src/qt/locale/bitcoin_hr.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6d697e9fa45b3f3bf67d79cc3d17717b68a43825/src/qt/locale/bitcoin_hr.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_hr.ts?ref=6d697e9fa45b3f3bf67d79cc3d17717b68a43825"
      },
      {
        "sha": "b0e143ce88ba068c869fff3e24d1de300ff8a43f",
        "filename": "src/qt/locale/bitcoin_it.ts",
        "status": "modified",
        "additions": 917,
        "deletions": 322,
        "changes": 1239,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6d697e9fa45b3f3bf67d79cc3d17717b68a43825/src/qt/locale/bitcoin_it.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6d697e9fa45b3f3bf67d79cc3d17717b68a43825/src/qt/locale/bitcoin_it.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_it.ts?ref=6d697e9fa45b3f3bf67d79cc3d17717b68a43825"
      },
      {
        "sha": "d252b2e35360b93b2abc6de41dfa8396995f5281",
        "filename": "src/qt/locale/bitcoin_ms_MY.ts",
        "status": "modified",
        "additions": 1011,
        "deletions": 416,
        "changes": 1427,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6d697e9fa45b3f3bf67d79cc3d17717b68a43825/src/qt/locale/bitcoin_ms_MY.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6d697e9fa45b3f3bf67d79cc3d17717b68a43825/src/qt/locale/bitcoin_ms_MY.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ms_MY.ts?ref=6d697e9fa45b3f3bf67d79cc3d17717b68a43825"
      },
      {
        "sha": "88ae1f40cc0811973bb5b1a0eafd18381cc68e7c",
        "filename": "src/qt/locale/bitcoin_nb.ts",
        "status": "modified",
        "additions": 1117,
        "deletions": 522,
        "changes": 1639,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6d697e9fa45b3f3bf67d79cc3d17717b68a43825/src/qt/locale/bitcoin_nb.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6d697e9fa45b3f3bf67d79cc3d17717b68a43825/src/qt/locale/bitcoin_nb.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_nb.ts?ref=6d697e9fa45b3f3bf67d79cc3d17717b68a43825"
      },
      {
        "sha": "c81146fb1ea89508495c0d6254cf7dbb7a258d9b",
        "filename": "src/qt/locale/bitcoin_pam.ts",
        "status": "added",
        "additions": 3935,
        "deletions": 0,
        "changes": 3935,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6d697e9fa45b3f3bf67d79cc3d17717b68a43825/src/qt/locale/bitcoin_pam.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6d697e9fa45b3f3bf67d79cc3d17717b68a43825/src/qt/locale/bitcoin_pam.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_pam.ts?ref=6d697e9fa45b3f3bf67d79cc3d17717b68a43825"
      },
      {
        "sha": "bd18fa3b73f3c9259ec7f1025fd2f4e97020a543",
        "filename": "src/qt/locale/bitcoin_pl.ts",
        "status": "modified",
        "additions": 1096,
        "deletions": 502,
        "changes": 1598,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6d697e9fa45b3f3bf67d79cc3d17717b68a43825/src/qt/locale/bitcoin_pl.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6d697e9fa45b3f3bf67d79cc3d17717b68a43825/src/qt/locale/bitcoin_pl.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_pl.ts?ref=6d697e9fa45b3f3bf67d79cc3d17717b68a43825"
      },
      {
        "sha": "983eb86e3be4dab070357fe90d5283a6b5c8280d",
        "filename": "src/qt/locale/bitcoin_pt_PT.ts",
        "status": "modified",
        "additions": 922,
        "deletions": 326,
        "changes": 1248,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6d697e9fa45b3f3bf67d79cc3d17717b68a43825/src/qt/locale/bitcoin_pt_PT.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6d697e9fa45b3f3bf67d79cc3d17717b68a43825/src/qt/locale/bitcoin_pt_PT.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_pt_PT.ts?ref=6d697e9fa45b3f3bf67d79cc3d17717b68a43825"
      },
      {
        "sha": "44e48d3543c6ced6245680e5c6faaae2dbe92530",
        "filename": "src/qt/locale/bitcoin_ru.ts",
        "status": "modified",
        "additions": 921,
        "deletions": 326,
        "changes": 1247,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6d697e9fa45b3f3bf67d79cc3d17717b68a43825/src/qt/locale/bitcoin_ru.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6d697e9fa45b3f3bf67d79cc3d17717b68a43825/src/qt/locale/bitcoin_ru.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ru.ts?ref=6d697e9fa45b3f3bf67d79cc3d17717b68a43825"
      },
      {
        "sha": "9df27a170191a9a222b74e794fde8fc7e4a8e3b7",
        "filename": "src/qt/locale/bitcoin_sk.ts",
        "status": "modified",
        "additions": 1162,
        "deletions": 567,
        "changes": 1729,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6d697e9fa45b3f3bf67d79cc3d17717b68a43825/src/qt/locale/bitcoin_sk.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6d697e9fa45b3f3bf67d79cc3d17717b68a43825/src/qt/locale/bitcoin_sk.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_sk.ts?ref=6d697e9fa45b3f3bf67d79cc3d17717b68a43825"
      },
      {
        "sha": "11117f65f6b77ec29f5661aad00152f814b01728",
        "filename": "src/qt/locale/bitcoin_sl_SI.ts",
        "status": "modified",
        "additions": 1018,
        "deletions": 423,
        "changes": 1441,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6d697e9fa45b3f3bf67d79cc3d17717b68a43825/src/qt/locale/bitcoin_sl_SI.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6d697e9fa45b3f3bf67d79cc3d17717b68a43825/src/qt/locale/bitcoin_sl_SI.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_sl_SI.ts?ref=6d697e9fa45b3f3bf67d79cc3d17717b68a43825"
      },
      {
        "sha": "ab4308325160a50d866f76d708586f90acb65208",
        "filename": "src/qt/locale/bitcoin_sr.ts",
        "status": "modified",
        "additions": 1022,
        "deletions": 427,
        "changes": 1449,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6d697e9fa45b3f3bf67d79cc3d17717b68a43825/src/qt/locale/bitcoin_sr.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6d697e9fa45b3f3bf67d79cc3d17717b68a43825/src/qt/locale/bitcoin_sr.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_sr.ts?ref=6d697e9fa45b3f3bf67d79cc3d17717b68a43825"
      },
      {
        "sha": "41dcd4b0aa2160ca1e808a8bb8ee2f78f70bb971",
        "filename": "src/qt/locale/bitcoin_uk.ts",
        "status": "modified",
        "additions": 1104,
        "deletions": 509,
        "changes": 1613,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6d697e9fa45b3f3bf67d79cc3d17717b68a43825/src/qt/locale/bitcoin_uk.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6d697e9fa45b3f3bf67d79cc3d17717b68a43825/src/qt/locale/bitcoin_uk.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_uk.ts?ref=6d697e9fa45b3f3bf67d79cc3d17717b68a43825"
      },
      {
        "sha": "34cdf9f0adbaa1f13beb3a4a3bf57e0f9724ef6c",
        "filename": "src/qt/locale/bitcoin_zh_CN.ts",
        "status": "modified",
        "additions": 907,
        "deletions": 312,
        "changes": 1219,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6d697e9fa45b3f3bf67d79cc3d17717b68a43825/src/qt/locale/bitcoin_zh_CN.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6d697e9fa45b3f3bf67d79cc3d17717b68a43825/src/qt/locale/bitcoin_zh_CN.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_zh_CN.ts?ref=6d697e9fa45b3f3bf67d79cc3d17717b68a43825"
      },
      {
        "sha": "748d30333c7ff13730f1af922f824cecfe58f43d",
        "filename": "src/qt/locale/bitcoin_zh_TW.ts",
        "status": "modified",
        "additions": 1241,
        "deletions": 647,
        "changes": 1888,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6d697e9fa45b3f3bf67d79cc3d17717b68a43825/src/qt/locale/bitcoin_zh_TW.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6d697e9fa45b3f3bf67d79cc3d17717b68a43825/src/qt/locale/bitcoin_zh_TW.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_zh_TW.ts?ref=6d697e9fa45b3f3bf67d79cc3d17717b68a43825"
      }
    ]
  },
  {
    "sha": "b960fcb86a23b3a30d6a2f70aaf4bc17e00e6736",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiOTYwZmNiODZhMjNiM2EzMGQ2YTJmNzBhYWY0YmMxN2UwMGU2NzM2",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2013-12-16T21:20:22Z"
      },
      "committer": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2014-01-09T06:38:08Z"
      },
      "message": "[Qt] update bitcoin-qt.pro and assets-attribution.md\n\n- remove unused and unmentioned file notsynced.png (we use an animation\n  for this)\n- add missing coincontroldialog.ui to bitcoin-qt.pro\n- also unify formating in assets-attribution.md",
      "tree": {
        "sha": "cfcd9792ccc63eeae97301e05faf2e4614e58606",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cfcd9792ccc63eeae97301e05faf2e4614e58606"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b960fcb86a23b3a30d6a2f70aaf4bc17e00e6736",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b960fcb86a23b3a30d6a2f70aaf4bc17e00e6736",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b960fcb86a23b3a30d6a2f70aaf4bc17e00e6736",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b960fcb86a23b3a30d6a2f70aaf4bc17e00e6736/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "6d697e9fa45b3f3bf67d79cc3d17717b68a43825",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6d697e9fa45b3f3bf67d79cc3d17717b68a43825",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6d697e9fa45b3f3bf67d79cc3d17717b68a43825"
      }
    ],
    "stats": {
      "total": 71,
      "additions": 36,
      "deletions": 35
    },
    "files": [
      {
        "sha": "8bfa4a18a56ddcb6d713de4400396453ec369b36",
        "filename": "contrib/bitcoin-qt.pro",
        "status": "modified",
        "additions": 13,
        "deletions": 12,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b960fcb86a23b3a30d6a2f70aaf4bc17e00e6736/contrib/bitcoin-qt.pro",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b960fcb86a23b3a30d6a2f70aaf4bc17e00e6736/contrib/bitcoin-qt.pro",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/bitcoin-qt.pro?ref=b960fcb86a23b3a30d6a2f70aaf4bc17e00e6736",
        "patch": "@@ -1,19 +1,20 @@\n FORMS += \\\n-    ../src/qt/forms/transactiondescdialog.ui \\\n-    ../src/qt/forms/signverifymessagedialog.ui \\\n-    ../src/qt/forms/sendcoinsentry.ui \\\n-    ../src/qt/forms/sendcoinsdialog.ui \\\n-    ../src/qt/forms/rpcconsole.ui \\\n-    ../src/qt/forms/overviewpage.ui \\\n-    ../src/qt/forms/optionsdialog.ui \\\n-    ../src/qt/forms/intro.ui \\\n-    ../src/qt/forms/editaddressdialog.ui \\\n-    ../src/qt/forms/askpassphrasedialog.ui \\\n-    ../src/qt/forms/addressbookpage.ui \\\n     ../src/qt/forms/aboutdialog.ui \\\n+    ../src/qt/forms/addressbookpage.ui \\\n+    ../src/qt/forms/askpassphrasedialog.ui \\\n+    ../src/qt/forms/coincontroldialog.ui \\\n+    ../src/qt/forms/editaddressdialog.ui \\\n+    ../src/qt/forms/intro.ui \\\n+    ../src/qt/forms/openuridialog.ui \\\n+    ../src/qt/forms/optionsdialog.ui \\\n+    ../src/qt/forms/overviewpage.ui \\\n     ../src/qt/forms/receivecoinsdialog.ui \\\n     ../src/qt/forms/receiverequestdialog.ui \\\n-    ../src/qt/forms/openuridialog.ui\n+    ../src/qt/forms/rpcconsole.ui \\\n+    ../src/qt/forms/sendcoinsdialog.ui \\\n+    ../src/qt/forms/sendcoinsentry.ui \\\n+    ../src/qt/forms/signverifymessagedialog.ui \\\n+    ../src/qt/forms/transactiondescdialog.ui \\\n \n RESOURCES += \\\n     ../src/qt/bitcoin.qrc"
      },
      {
        "sha": "b095491285cee5b057baec777446903f3b04ef17",
        "filename": "doc/assets-attribution.md",
        "status": "modified",
        "additions": 23,
        "deletions": 23,
        "changes": 46,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b960fcb86a23b3a30d6a2f70aaf4bc17e00e6736/doc/assets-attribution.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b960fcb86a23b3a30d6a2f70aaf4bc17e00e6736/doc/assets-attribution.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/assets-attribution.md?ref=b960fcb86a23b3a30d6a2f70aaf4bc17e00e6736",
        "patch": "@@ -4,29 +4,29 @@ The following is a list of assets used in the bitcoin source and their proper at\n -----------------------\n #### Info\n * License: MIT\n-### Assets Used\n \n-\t\tsrc/qt/res/icons/clock*.png, src/qt/res/icons/tx*.png,\n-\t\tsrc/qt/res/src/clock_green.svg, src/qt/res/src/clock1.svg,\n-\t\tsrc/qt/res/src/clock2.svg, src/qt/res/src/clock3.svg,\n-\t\tsrc/qt/res/src/clock4.svg, src/qt/res/src/clock5.svg,\n-\t\tsrc/qt/res/src/inout.svg, src/qt/res/src/questionmark.svg\n+### Assets Used\n+\tsrc/qt/res/icons/clock*.png, src/qt/res/icons/tx*.png,\n+\tsrc/qt/res/src/clock_green.svg, src/qt/res/src/clock1.svg,\n+\tsrc/qt/res/src/clock2.svg, src/qt/res/src/clock3.svg,\n+\tsrc/qt/res/src/clock4.svg, src/qt/res/src/clock5.svg,\n+\tsrc/qt/res/src/inout.svg, src/qt/res/src/questionmark.svg\n \n-[David Vignoni](www.icon-king.com)\n+[David Vignoni](http://www.icon-king.com)\n -----------------------\n \n ### Info\n * Icon Pack: NUVOLA ICON THEME for KDE 3.x\n * Designer: David Vignoni (david@icon-king.com)\n * License: LGPL\n-* Site: [http://www.icon-king.com/projects/nuvola/](http://www.icon-king.com/projects/nuvola/)\n+* Site: [http://www.icon-king.com/projects/nuvola](http://www.icon-king.com/projects/nuvola)\n \n ### Assets Used\n-\t  src/qt/res/icons/address-book.png, src/qt/res/icons/export.png,\n-      src/qt/res/icons/history.png, src/qt/res/icons/key.png,\n-      src/qt/res/icons/lock_*.png, src/qt/res/icons/overview.png,\n-      src/qt/res/icons/receive.png, src/qt/res/icons/send.png,\n-      src/qt/res/icons/synced.png, src/qt/res/icons/filesave.png\n+\tsrc/qt/res/icons/address-book.png, src/qt/res/icons/export.png,\n+\tsrc/qt/res/icons/history.png, src/qt/res/icons/key.png,\n+\tsrc/qt/res/icons/lock_*.png, src/qt/res/icons/overview.png,\n+\tsrc/qt/res/icons/receive.png, src/qt/res/icons/send.png,\n+\tsrc/qt/res/icons/synced.png, src/qt/res/icons/filesave.png\n \n schollidesign\n -----------------------\n@@ -38,17 +38,16 @@ schollidesign\n * Site: [http://findicons.com/icon/93743/blocks_gnome_netstatus_0](http://findicons.com/icon/93743/blocks_gnome_netstatus_0)\n \n ### Assets Used\n-\t src/qt/res/icons/connect*.png\n+\tsrc/qt/res/icons/connect*.png\n \n md2k7\n -----------------------\n \n ### Info\n * Designer: md2k7\n-* Site: https://bitcointalk.org/index.php?topic=15276.0\n-* License: You are free to do with these icons as you wish, including selling,\n- copying, modifying etc.\n+* License: You are free to do with these icons as you wish, including selling, copying, modifying etc.\n * License: MIT\n+* Site: [https://bitcointalk.org/index.php?topic=15276.0](https://bitcointalk.org/index.php?topic=15276.0)\n \n ### Assets Used\n \tsrc/qt/res/icons/transaction*.png\n@@ -57,15 +56,15 @@ md2k7\n -----------------------\n \n ### Info\n-* Designer: [http://www.everaldo.com](http://www.everaldo.com)\n * Icon Pack: Crystal SVG\n+* Designer: [http://www.everaldo.com](http://www.everaldo.com)\n * License: LGPL\n \n ### Assets Used\n \tsrc/qt/res/icons/configure.png, src/qt/res/icons/quit.png,\n-    src/qt/res/icons/editcopy.png, src/qt/res/icons/editpaste.png,\n-    src/qt/res/icons/add.png, src/qt/res/icons/edit.png,\n-    src/qt/res/icons/remove.png (edited)\n+\tsrc/qt/res/icons/editcopy.png, src/qt/res/icons/editpaste.png,\n+\tsrc/qt/res/icons/add.png, src/qt/res/icons/edit.png,\n+\tsrc/qt/res/icons/remove.png (edited)\n \n Everaldo (Everaldo Coelho)\n -----------------------\n@@ -75,16 +74,17 @@ Everaldo (Everaldo Coelho)\n * Designer: Everaldo (Everaldo Coelho)\n * License: GNU/GPL \n * Site: [http://findicons.com/icon/17102/reload?id=17102](http://findicons.com/icon/17102/reload?id=17102)\n+\n ### Assets Used\n \tscripts/img/reload.xcf (modified), src/qt/res/movies/update_spinner.mng\n \n-[Vignoni David](http://www.oxygen-icons.org/)\n+[Vignoni David](http://www.oxygen-icons.org)\n -----------------------\n \n ### Info\n * Designer: Vignoni David\n-* Site: http://www.oxygen-icons.org/\n * License: Oxygen icon theme is dual licensed. You may copy it under the Creative Common Attribution-ShareAlike 3.0 License or the GNU Library General Public License.\n+* Site: [http://www.oxygen-icons.org](http://www.oxygen-icons.org)\n \n ### Assets Used\n \tsrc/qt/res/icons/debugwindow.png"
      },
      {
        "sha": "87b1c3290b1eea65f9e4ac01b3a930b9a75d0491",
        "filename": "src/qt/res/icons/notsynced.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6d697e9fa45b3f3bf67d79cc3d17717b68a43825/src/qt/res/icons/notsynced.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6d697e9fa45b3f3bf67d79cc3d17717b68a43825/src/qt/res/icons/notsynced.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/icons/notsynced.png?ref=6d697e9fa45b3f3bf67d79cc3d17717b68a43825"
      }
    ]
  },
  {
    "sha": "13e99e463d4aa0bd2b2892010ca8c7007c40c242",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxM2U5OWU0NjNkNGFhMGJkMmIyODkyMDEwY2E4YzcwMDdjNDBjMjQy",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-09T09:08:11Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-09T09:08:41Z"
      },
      "message": "Merge pull request #3491\n\n04f58ff qt: Better status text for mined transactions (Wladimir J. van der Laan)",
      "tree": {
        "sha": "5d943f5db33017d1b9784108f59a3f1596e735d0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5d943f5db33017d1b9784108f59a3f1596e735d0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/13e99e463d4aa0bd2b2892010ca8c7007c40c242",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJSzmcZAAoJEHSBCwEjRsmm1EQH/A/y0MIMO1cfKhLvNOJQNbC1\nM6eguMtbtax8gza8LjOn70w4I61XqY+trvuhR0I4WDeFr06wyLpE5gJKxZuDG6Dj\nDK0VL4dkl3ajbJ36mpgPAXqb+LZ8ZCzorbypZ/k6VND72S2UeqidKiBy1J1/3OJl\nlF5yljrDYrc2BJJVxQRTK2c3kyLmyFun+UAoZdtP1K36XAz9wNLpV6/8BMw/VEBN\n1cHPQHgdZhSdItLYKvbCx6xoagCoACRU94gm1CFm3C+cCJWkvUspUzWQr4vpD39c\nLdICPtMMUa4m4TQ3XjsLwk3BjyHCyyHCCXqNgcQuWpeitI9i8xEkiRTbyT4xzmI=\n=nYtI\n-----END PGP SIGNATURE-----",
        "payload": "tree 5d943f5db33017d1b9784108f59a3f1596e735d0\nparent 6d697e9fa45b3f3bf67d79cc3d17717b68a43825\nparent 04f58ffd9d2deed7f3ba872e242d967a550ff1d6\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1389258491 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1389258521 +0100\n\nMerge pull request #3491\n\n04f58ff qt: Better status text for mined transactions (Wladimir J. van der Laan)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/13e99e463d4aa0bd2b2892010ca8c7007c40c242",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/13e99e463d4aa0bd2b2892010ca8c7007c40c242",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/13e99e463d4aa0bd2b2892010ca8c7007c40c242/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6d697e9fa45b3f3bf67d79cc3d17717b68a43825",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6d697e9fa45b3f3bf67d79cc3d17717b68a43825",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6d697e9fa45b3f3bf67d79cc3d17717b68a43825"
      },
      {
        "sha": "04f58ffd9d2deed7f3ba872e242d967a550ff1d6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/04f58ffd9d2deed7f3ba872e242d967a550ff1d6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/04f58ffd9d2deed7f3ba872e242d967a550ff1d6"
      }
    ],
    "stats": {
      "total": 44,
      "additions": 23,
      "deletions": 21
    },
    "files": [
      {
        "sha": "b29be7e0cbc129e5b309545a9e009019e3df905d",
        "filename": "src/qt/transactiontablemodel.cpp",
        "status": "modified",
        "additions": 23,
        "deletions": 21,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/13e99e463d4aa0bd2b2892010ca8c7007c40c242/src/qt/transactiontablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/13e99e463d4aa0bd2b2892010ca8c7007c40c242/src/qt/transactiontablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactiontablemodel.cpp?ref=13e99e463d4aa0bd2b2892010ca8c7007c40c242",
        "patch": "@@ -285,38 +285,40 @@ QString TransactionTableModel::formatTxStatus(const TransactionRecord *wtx) cons\n {\n     QString status;\n \n-    switch(wtx->status.status)\n-    {\n-    case TransactionStatus::OpenUntilBlock:\n-        status = tr(\"Open for %n more block(s)\",\"\",wtx->status.open_for);\n-        break;\n-    case TransactionStatus::OpenUntilDate:\n-        status = tr(\"Open until %1\").arg(GUIUtil::dateTimeStr(wtx->status.open_for));\n-        break;\n-    case TransactionStatus::Offline:\n-        status = tr(\"Offline (%1 confirmations)\").arg(wtx->status.depth);\n-        break;\n-    case TransactionStatus::Unconfirmed:\n-        status = tr(\"Unconfirmed (%1 of %2 confirmations)\").arg(wtx->status.depth).arg(TransactionRecord::NumConfirmations);\n-        break;\n-    case TransactionStatus::HaveConfirmations:\n-        status = tr(\"Confirmed (%1 confirmations)\").arg(wtx->status.depth);\n-        break;\n-    }\n     if(wtx->type == TransactionRecord::Generated)\n     {\n         switch(wtx->status.maturity)\n         {\n         case TransactionStatus::Immature:\n-            status += \"\\n\" + tr(\"Mined balance will be available when it matures in %n more block(s)\", \"\", wtx->status.matures_in);\n+            status = tr(\"Immature (%1 confirmations, will be available after %2)\").arg(wtx->status.depth).arg(wtx->status.depth + wtx->status.matures_in);\n             break;\n         case TransactionStatus::Mature:\n+            status = tr(\"Confirmed (%1 confirmations)\").arg(wtx->status.depth);\n             break;\n         case TransactionStatus::MaturesWarning:\n-            status += \"\\n\" + tr(\"This block was not received by any other nodes and will probably not be accepted!\");\n+            status = tr(\"This block was not received by any other nodes and will probably not be accepted!\");\n             break;\n         case TransactionStatus::NotAccepted:\n-            status += \"\\n\" + tr(\"Generated but not accepted\");\n+            status = tr(\"Generated but not accepted\");\n+            break;\n+        }\n+    } else {\n+        switch(wtx->status.status)\n+        {\n+        case TransactionStatus::OpenUntilBlock:\n+            status = tr(\"Open for %n more block(s)\",\"\",wtx->status.open_for);\n+            break;\n+        case TransactionStatus::OpenUntilDate:\n+            status = tr(\"Open until %1\").arg(GUIUtil::dateTimeStr(wtx->status.open_for));\n+            break;\n+        case TransactionStatus::Offline:\n+            status = tr(\"Offline (%1 confirmations)\").arg(wtx->status.depth);\n+            break;\n+        case TransactionStatus::Unconfirmed:\n+            status = tr(\"Unconfirmed (%1 of %2 confirmations)\").arg(wtx->status.depth).arg(TransactionRecord::NumConfirmations);\n+            break;\n+        case TransactionStatus::HaveConfirmations:\n+            status = tr(\"Confirmed (%1 confirmations)\").arg(wtx->status.depth);\n             break;\n         }\n     }"
      }
    ]
  },
  {
    "sha": "eaafa23cbd83b7bda4b28779138c62446bbdea2a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplYWFmYTIzY2JkODNiN2JkYTRiMjg3NzkxMzhjNjI0NDZiYmRlYTJh",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-09T10:35:38Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-09T10:35:38Z"
      },
      "message": "Add test for GetTime()\n\nTest for mingw/wine issue #3494, where the upper word of time(NULL)\nreturn value gets clobbered.",
      "tree": {
        "sha": "1c8280b90894814d742ca8431c17b20d408cc459",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1c8280b90894814d742ca8431c17b20d408cc459"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/eaafa23cbd83b7bda4b28779138c62446bbdea2a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eaafa23cbd83b7bda4b28779138c62446bbdea2a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/eaafa23cbd83b7bda4b28779138c62446bbdea2a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eaafa23cbd83b7bda4b28779138c62446bbdea2a/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "13e99e463d4aa0bd2b2892010ca8c7007c40c242",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/13e99e463d4aa0bd2b2892010ca8c7007c40c242",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/13e99e463d4aa0bd2b2892010ca8c7007c40c242"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 8,
      "deletions": 0
    },
    "files": [
      {
        "sha": "691f02a9d7b3bd3d3c182dccc5758e0349ca1ce4",
        "filename": "src/test/util_tests.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eaafa23cbd83b7bda4b28779138c62446bbdea2a/src/test/util_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eaafa23cbd83b7bda4b28779138c62446bbdea2a/src/test/util_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util_tests.cpp?ref=eaafa23cbd83b7bda4b28779138c62446bbdea2a",
        "patch": "@@ -330,4 +330,12 @@ BOOST_AUTO_TEST_CASE(strprintf_numbers)\n #undef B\n #undef E\n \n+/* Check for mingw/wine issue #3494\n+ * Remove this test before time.ctime(0xffffffff) == 'Sun Feb  7 07:28:15 2106'\n+ */\n+BOOST_AUTO_TEST_CASE(gettime)\n+{\n+    BOOST_CHECK((GetTime() & ~0xFFFFFFFFLL) == 0);\n+}\n+\n BOOST_AUTO_TEST_SUITE_END()"
      }
    ]
  },
  {
    "sha": "56fce1fdbb688e9c48ba689d8f69bf66501d91c5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NmZjZTFmZGJiNjg4ZTljNDhiYTY4OWQ4ZjY5YmY2NjUwMWQ5MWM1",
    "commit": {
      "author": {
        "name": "Warren Togami",
        "email": "wtogami@gmail.com",
        "date": "2014-01-09T13:17:18Z"
      },
      "committer": {
        "name": "Warren Togami",
        "email": "wtogami@gmail.com",
        "date": "2014-01-10T00:18:43Z"
      },
      "message": "Upgrade gitian win32 to boost-1.55.\n\nFixes issue where all network activity just stops.",
      "tree": {
        "sha": "28ff2f40321a7dc3e23a113aabd5decb5afb0315",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/28ff2f40321a7dc3e23a113aabd5decb5afb0315"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/56fce1fdbb688e9c48ba689d8f69bf66501d91c5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/56fce1fdbb688e9c48ba689d8f69bf66501d91c5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/56fce1fdbb688e9c48ba689d8f69bf66501d91c5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/56fce1fdbb688e9c48ba689d8f69bf66501d91c5/comments",
    "author": {
      "login": "wtogami",
      "id": 93665,
      "node_id": "MDQ6VXNlcjkzNjY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/93665?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wtogami",
      "html_url": "https://github.com/wtogami",
      "followers_url": "https://api.github.com/users/wtogami/followers",
      "following_url": "https://api.github.com/users/wtogami/following{/other_user}",
      "gists_url": "https://api.github.com/users/wtogami/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wtogami/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wtogami/subscriptions",
      "organizations_url": "https://api.github.com/users/wtogami/orgs",
      "repos_url": "https://api.github.com/users/wtogami/repos",
      "events_url": "https://api.github.com/users/wtogami/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wtogami/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "wtogami",
      "id": 93665,
      "node_id": "MDQ6VXNlcjkzNjY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/93665?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wtogami",
      "html_url": "https://github.com/wtogami",
      "followers_url": "https://api.github.com/users/wtogami/followers",
      "following_url": "https://api.github.com/users/wtogami/following{/other_user}",
      "gists_url": "https://api.github.com/users/wtogami/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wtogami/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wtogami/subscriptions",
      "organizations_url": "https://api.github.com/users/wtogami/orgs",
      "repos_url": "https://api.github.com/users/wtogami/repos",
      "events_url": "https://api.github.com/users/wtogami/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wtogami/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "13e99e463d4aa0bd2b2892010ca8c7007c40c242",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/13e99e463d4aa0bd2b2892010ca8c7007c40c242",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/13e99e463d4aa0bd2b2892010ca8c7007c40c242"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 9,
      "deletions": 9
    },
    "files": [
      {
        "sha": "b14cd1f6c258c996e806bad2902f946899204965",
        "filename": "contrib/gitian-descriptors/boost-win32.yml",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/56fce1fdbb688e9c48ba689d8f69bf66501d91c5/contrib/gitian-descriptors/boost-win32.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/56fce1fdbb688e9c48ba689d8f69bf66501d91c5/contrib/gitian-descriptors/boost-win32.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/boost-win32.yml?ref=56fce1fdbb688e9c48ba689d8f69bf66501d91c5",
        "patch": "@@ -12,19 +12,19 @@ packages:\n reference_datetime: \"2011-01-30 00:00:00\"\n remotes: []\n files:\n-- \"boost_1_54_0.tar.bz2\"\n+- \"boost_1_55_0.tar.bz2\"\n - \"boost-mingw-gas-cross-compile-2013-03-03.patch\"\n script: |\n   # Defines\n   INSTALLPREFIX=\"$OUTDIR/staging/boost\"\n   HOST=i686-w64-mingw32\n   # Input Integrity Check\n-  echo \"047e927de336af106a24bceba30069980c191529fd76b8dff8eb9a328b48ae1d  boost_1_54_0.tar.bz2\" | shasum -c\n+  echo \"fff00023dd79486d444c8e29922f4072e1d451fc5a4d2b6075852ead7f2b7b52  boost_1_55_0.tar.bz2\" | shasum -c\n   echo \"d2b7f6a1d7051faef3c9cf41a92fa3671d905ef1e1da920d07651a43299f6268  boost-mingw-gas-cross-compile-2013-03-03.patch\" | shasum -c\n \n   mkdir -p \"$INSTALLPREFIX\"\n-  tar xjf boost_1_54_0.tar.bz2\n-  cd boost_1_54_0\n+  tar xjf boost_1_55_0.tar.bz2\n+  cd boost_1_55_0\n   GCCVERSION=$($HOST-g++ -E -dM $(mktemp --suffix=.h) | grep __VERSION__ | cut -d ' ' -f 3 | cut -d '\"' -f 2)\n   echo \"using gcc : $GCCVERSION : $HOST-g++\n         :\n@@ -48,7 +48,7 @@ script: |\n   # Patch Mirror:   http://rose.makesad.us/~paulproteus/mirrors/boost-mingw-gas-cross-compile-2013-03-03.patch\n   patch -p0 < ../boost-mingw-gas-cross-compile-2013-03-03.patch\n \n-  # Bug Workaround: boost-1.54.0 broke the ability to disable zlib\n+  # Bug Workaround: boost-1.54.0 broke the ability to disable zlib, still broken in 1.55\n   # https://svn.boost.org/trac/boost/ticket/9156\n   sed -i 's^\\[ ac.check-library /zlib//zlib : <library>/zlib//zlib^^' libs/iostreams/build/Jamfile.v2\n   sed -i 's^<source>zlib.cpp <source>gzip.cpp \\]^^' libs/iostreams/build/Jamfile.v2\n@@ -62,5 +62,5 @@ script: |\n   cd \"$INSTALLPREFIX\"\n   export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1\n   export FAKETIME=$REFERENCE_DATETIME\n-  zip -r boost-win32-1.54.0-gitian-r6.zip *\n-  cp boost-win32-1.54.0-gitian-r6.zip $OUTDIR\n+  zip -r boost-win32-1.55.0-gitian-r6.zip *\n+  cp boost-win32-1.55.0-gitian-r6.zip $OUTDIR"
      },
      {
        "sha": "456b74caa536667adf7f418e0fc92eff5b6de2da",
        "filename": "contrib/gitian-descriptors/gitian-win32.yml",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/56fce1fdbb688e9c48ba689d8f69bf66501d91c5/contrib/gitian-descriptors/gitian-win32.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/56fce1fdbb688e9c48ba689d8f69bf66501d91c5/contrib/gitian-descriptors/gitian-win32.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-win32.yml?ref=56fce1fdbb688e9c48ba689d8f69bf66501d91c5",
        "patch": "@@ -23,7 +23,7 @@ remotes:\n   \"dir\": \"bitcoin\"\n files:\n - \"qt-win32-4.8.3-gitian-r4.zip\"\n-- \"boost-win32-1.54.0-gitian-r6.zip\"\n+- \"boost-win32-1.55.0-gitian-r6.zip\"\n - \"bitcoin-deps-win32-gitian-r9.zip\"\n - \"protobuf-win32-2.5.0-gitian-r3.zip\"\n script: |\n@@ -34,7 +34,7 @@ script: |\n   mkdir -p $STAGING\n   cd $STAGING\n   unzip ../build/qt-win32-4.8.3-gitian-r4.zip\n-  unzip ../build/boost-win32-1.54.0-gitian-r6.zip\n+  unzip ../build/boost-win32-1.55.0-gitian-r6.zip\n   unzip ../build/bitcoin-deps-win32-gitian-r9.zip\n   unzip ../build/protobuf-win32-2.5.0-gitian-r3.zip\n   cd $HOME/build/"
      }
    ]
  },
  {
    "sha": "16ae1c0da179f3e901bacea6f0be84ce0921bf69",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxNmFlMWMwZGExNzlmM2U5MDFiYWNlYTZmMGJlODRjZTA5MjFiZjY5",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-10T07:41:04Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-10T07:41:10Z"
      },
      "message": "Merge pull request #3498\n\neaafa23 Add test for GetTime() (Wladimir J. van der Laan)",
      "tree": {
        "sha": "1c8280b90894814d742ca8431c17b20d408cc459",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1c8280b90894814d742ca8431c17b20d408cc459"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/16ae1c0da179f3e901bacea6f0be84ce0921bf69",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJSz6QWAAoJEHSBCwEjRsmmCZAIAJEneMtc5aQTHK7Gc/IUI8ZE\nBuhSdxD4OAoSbapk0Hub4+C/mGVaNF+1RV2vq4KLuLFRY/b0zEpd9SrYBXixkQDz\nHDBUb/4Y3caEDM2d3Z5lHTWP5xHan6/Z2XhMKcPYwI8pTEAxkIKHCFslKtmjdVzB\n52/igP/g7BfX2tgEkXDJlV0SFdajfe895dJqdGctsYPgegR/77fjvwtT+7w6+/kt\nFc+WiITwKDY7CkaHVGti1g28cJ35AoX0sk0t4q/FOGGARyfHQKyzrJHzIkqgQvwG\ncxg9bk9ysXhCN1FuVVbPPNaOBZtZqXlPvJ1669A5dDlmflX/uFpT8ZxT08+OQoI=\n=hfhr\n-----END PGP SIGNATURE-----",
        "payload": "tree 1c8280b90894814d742ca8431c17b20d408cc459\nparent 13e99e463d4aa0bd2b2892010ca8c7007c40c242\nparent eaafa23cbd83b7bda4b28779138c62446bbdea2a\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1389339664 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1389339670 +0100\n\nMerge pull request #3498\n\neaafa23 Add test for GetTime() (Wladimir J. van der Laan)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/16ae1c0da179f3e901bacea6f0be84ce0921bf69",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/16ae1c0da179f3e901bacea6f0be84ce0921bf69",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/16ae1c0da179f3e901bacea6f0be84ce0921bf69/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "13e99e463d4aa0bd2b2892010ca8c7007c40c242",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/13e99e463d4aa0bd2b2892010ca8c7007c40c242",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/13e99e463d4aa0bd2b2892010ca8c7007c40c242"
      },
      {
        "sha": "eaafa23cbd83b7bda4b28779138c62446bbdea2a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eaafa23cbd83b7bda4b28779138c62446bbdea2a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/eaafa23cbd83b7bda4b28779138c62446bbdea2a"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 8,
      "deletions": 0
    },
    "files": [
      {
        "sha": "691f02a9d7b3bd3d3c182dccc5758e0349ca1ce4",
        "filename": "src/test/util_tests.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/16ae1c0da179f3e901bacea6f0be84ce0921bf69/src/test/util_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/16ae1c0da179f3e901bacea6f0be84ce0921bf69/src/test/util_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util_tests.cpp?ref=16ae1c0da179f3e901bacea6f0be84ce0921bf69",
        "patch": "@@ -330,4 +330,12 @@ BOOST_AUTO_TEST_CASE(strprintf_numbers)\n #undef B\n #undef E\n \n+/* Check for mingw/wine issue #3494\n+ * Remove this test before time.ctime(0xffffffff) == 'Sun Feb  7 07:28:15 2106'\n+ */\n+BOOST_AUTO_TEST_CASE(gettime)\n+{\n+    BOOST_CHECK((GetTime() & ~0xFFFFFFFFLL) == 0);\n+}\n+\n BOOST_AUTO_TEST_SUITE_END()"
      }
    ]
  },
  {
    "sha": "c07dd453e4df07716683e04e028e2f09314ba2f1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjMDdkZDQ1M2U0ZGYwNzcxNjY4M2UwNGUwMjhlMmYwOTMxNGJhMmYx",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-10T07:56:01Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-10T07:56:33Z"
      },
      "message": "Merge pull request #3432\n\nb960fcb [Qt] update bitcoin-qt.pro and assets-attribution.md (Philip Kaufmann)",
      "tree": {
        "sha": "ee1466a9cf3760c1736942593772fbe0c840878b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ee1466a9cf3760c1736942593772fbe0c840878b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c07dd453e4df07716683e04e028e2f09314ba2f1",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJSz6exAAoJEHSBCwEjRsmmtWMH/1YJ5BrhX0VCMslxhLFnkBd/\nltmxpOCrbnMp+I5fzui2/i8GxFA7LJyddALhbctcSKhl+PTVn1ZGs14o2Zobalfz\ngmhyTAmvyNcLCeh9PYJMwJ5nT+s+UIdiCuR616mFddO7vjqjh62cJz6Pf0093pv8\n+LbAQXnwWu9EOTtsOwG0/wJqgXuUx4ngXw9PIAVt9d/G4Avij5MHqZfeGJLe/AFp\n2R01pcKUIjpf/n2WxjNRrqDReS3kLAB+SAOg1prsRNZM0JsPFaMMZI0LLXE0XqPm\n2Z7ajhU+ekIEsqEx+sQN246YlCJ0OD7NRupE+dII/JAWtLHLm8kKcl95aB2wzb8=\n=n+AU\n-----END PGP SIGNATURE-----",
        "payload": "tree ee1466a9cf3760c1736942593772fbe0c840878b\nparent 16ae1c0da179f3e901bacea6f0be84ce0921bf69\nparent b960fcb86a23b3a30d6a2f70aaf4bc17e00e6736\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1389340561 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1389340593 +0100\n\nMerge pull request #3432\n\nb960fcb [Qt] update bitcoin-qt.pro and assets-attribution.md (Philip Kaufmann)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c07dd453e4df07716683e04e028e2f09314ba2f1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c07dd453e4df07716683e04e028e2f09314ba2f1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c07dd453e4df07716683e04e028e2f09314ba2f1/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "16ae1c0da179f3e901bacea6f0be84ce0921bf69",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/16ae1c0da179f3e901bacea6f0be84ce0921bf69",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/16ae1c0da179f3e901bacea6f0be84ce0921bf69"
      },
      {
        "sha": "b960fcb86a23b3a30d6a2f70aaf4bc17e00e6736",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b960fcb86a23b3a30d6a2f70aaf4bc17e00e6736",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b960fcb86a23b3a30d6a2f70aaf4bc17e00e6736"
      }
    ],
    "stats": {
      "total": 71,
      "additions": 36,
      "deletions": 35
    },
    "files": [
      {
        "sha": "8bfa4a18a56ddcb6d713de4400396453ec369b36",
        "filename": "contrib/bitcoin-qt.pro",
        "status": "modified",
        "additions": 13,
        "deletions": 12,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c07dd453e4df07716683e04e028e2f09314ba2f1/contrib/bitcoin-qt.pro",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c07dd453e4df07716683e04e028e2f09314ba2f1/contrib/bitcoin-qt.pro",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/bitcoin-qt.pro?ref=c07dd453e4df07716683e04e028e2f09314ba2f1",
        "patch": "@@ -1,19 +1,20 @@\n FORMS += \\\n-    ../src/qt/forms/transactiondescdialog.ui \\\n-    ../src/qt/forms/signverifymessagedialog.ui \\\n-    ../src/qt/forms/sendcoinsentry.ui \\\n-    ../src/qt/forms/sendcoinsdialog.ui \\\n-    ../src/qt/forms/rpcconsole.ui \\\n-    ../src/qt/forms/overviewpage.ui \\\n-    ../src/qt/forms/optionsdialog.ui \\\n-    ../src/qt/forms/intro.ui \\\n-    ../src/qt/forms/editaddressdialog.ui \\\n-    ../src/qt/forms/askpassphrasedialog.ui \\\n-    ../src/qt/forms/addressbookpage.ui \\\n     ../src/qt/forms/aboutdialog.ui \\\n+    ../src/qt/forms/addressbookpage.ui \\\n+    ../src/qt/forms/askpassphrasedialog.ui \\\n+    ../src/qt/forms/coincontroldialog.ui \\\n+    ../src/qt/forms/editaddressdialog.ui \\\n+    ../src/qt/forms/intro.ui \\\n+    ../src/qt/forms/openuridialog.ui \\\n+    ../src/qt/forms/optionsdialog.ui \\\n+    ../src/qt/forms/overviewpage.ui \\\n     ../src/qt/forms/receivecoinsdialog.ui \\\n     ../src/qt/forms/receiverequestdialog.ui \\\n-    ../src/qt/forms/openuridialog.ui\n+    ../src/qt/forms/rpcconsole.ui \\\n+    ../src/qt/forms/sendcoinsdialog.ui \\\n+    ../src/qt/forms/sendcoinsentry.ui \\\n+    ../src/qt/forms/signverifymessagedialog.ui \\\n+    ../src/qt/forms/transactiondescdialog.ui \\\n \n RESOURCES += \\\n     ../src/qt/bitcoin.qrc"
      },
      {
        "sha": "b095491285cee5b057baec777446903f3b04ef17",
        "filename": "doc/assets-attribution.md",
        "status": "modified",
        "additions": 23,
        "deletions": 23,
        "changes": 46,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c07dd453e4df07716683e04e028e2f09314ba2f1/doc/assets-attribution.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c07dd453e4df07716683e04e028e2f09314ba2f1/doc/assets-attribution.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/assets-attribution.md?ref=c07dd453e4df07716683e04e028e2f09314ba2f1",
        "patch": "@@ -4,29 +4,29 @@ The following is a list of assets used in the bitcoin source and their proper at\n -----------------------\n #### Info\n * License: MIT\n-### Assets Used\n \n-\t\tsrc/qt/res/icons/clock*.png, src/qt/res/icons/tx*.png,\n-\t\tsrc/qt/res/src/clock_green.svg, src/qt/res/src/clock1.svg,\n-\t\tsrc/qt/res/src/clock2.svg, src/qt/res/src/clock3.svg,\n-\t\tsrc/qt/res/src/clock4.svg, src/qt/res/src/clock5.svg,\n-\t\tsrc/qt/res/src/inout.svg, src/qt/res/src/questionmark.svg\n+### Assets Used\n+\tsrc/qt/res/icons/clock*.png, src/qt/res/icons/tx*.png,\n+\tsrc/qt/res/src/clock_green.svg, src/qt/res/src/clock1.svg,\n+\tsrc/qt/res/src/clock2.svg, src/qt/res/src/clock3.svg,\n+\tsrc/qt/res/src/clock4.svg, src/qt/res/src/clock5.svg,\n+\tsrc/qt/res/src/inout.svg, src/qt/res/src/questionmark.svg\n \n-[David Vignoni](www.icon-king.com)\n+[David Vignoni](http://www.icon-king.com)\n -----------------------\n \n ### Info\n * Icon Pack: NUVOLA ICON THEME for KDE 3.x\n * Designer: David Vignoni (david@icon-king.com)\n * License: LGPL\n-* Site: [http://www.icon-king.com/projects/nuvola/](http://www.icon-king.com/projects/nuvola/)\n+* Site: [http://www.icon-king.com/projects/nuvola](http://www.icon-king.com/projects/nuvola)\n \n ### Assets Used\n-\t  src/qt/res/icons/address-book.png, src/qt/res/icons/export.png,\n-      src/qt/res/icons/history.png, src/qt/res/icons/key.png,\n-      src/qt/res/icons/lock_*.png, src/qt/res/icons/overview.png,\n-      src/qt/res/icons/receive.png, src/qt/res/icons/send.png,\n-      src/qt/res/icons/synced.png, src/qt/res/icons/filesave.png\n+\tsrc/qt/res/icons/address-book.png, src/qt/res/icons/export.png,\n+\tsrc/qt/res/icons/history.png, src/qt/res/icons/key.png,\n+\tsrc/qt/res/icons/lock_*.png, src/qt/res/icons/overview.png,\n+\tsrc/qt/res/icons/receive.png, src/qt/res/icons/send.png,\n+\tsrc/qt/res/icons/synced.png, src/qt/res/icons/filesave.png\n \n schollidesign\n -----------------------\n@@ -38,17 +38,16 @@ schollidesign\n * Site: [http://findicons.com/icon/93743/blocks_gnome_netstatus_0](http://findicons.com/icon/93743/blocks_gnome_netstatus_0)\n \n ### Assets Used\n-\t src/qt/res/icons/connect*.png\n+\tsrc/qt/res/icons/connect*.png\n \n md2k7\n -----------------------\n \n ### Info\n * Designer: md2k7\n-* Site: https://bitcointalk.org/index.php?topic=15276.0\n-* License: You are free to do with these icons as you wish, including selling,\n- copying, modifying etc.\n+* License: You are free to do with these icons as you wish, including selling, copying, modifying etc.\n * License: MIT\n+* Site: [https://bitcointalk.org/index.php?topic=15276.0](https://bitcointalk.org/index.php?topic=15276.0)\n \n ### Assets Used\n \tsrc/qt/res/icons/transaction*.png\n@@ -57,15 +56,15 @@ md2k7\n -----------------------\n \n ### Info\n-* Designer: [http://www.everaldo.com](http://www.everaldo.com)\n * Icon Pack: Crystal SVG\n+* Designer: [http://www.everaldo.com](http://www.everaldo.com)\n * License: LGPL\n \n ### Assets Used\n \tsrc/qt/res/icons/configure.png, src/qt/res/icons/quit.png,\n-    src/qt/res/icons/editcopy.png, src/qt/res/icons/editpaste.png,\n-    src/qt/res/icons/add.png, src/qt/res/icons/edit.png,\n-    src/qt/res/icons/remove.png (edited)\n+\tsrc/qt/res/icons/editcopy.png, src/qt/res/icons/editpaste.png,\n+\tsrc/qt/res/icons/add.png, src/qt/res/icons/edit.png,\n+\tsrc/qt/res/icons/remove.png (edited)\n \n Everaldo (Everaldo Coelho)\n -----------------------\n@@ -75,16 +74,17 @@ Everaldo (Everaldo Coelho)\n * Designer: Everaldo (Everaldo Coelho)\n * License: GNU/GPL \n * Site: [http://findicons.com/icon/17102/reload?id=17102](http://findicons.com/icon/17102/reload?id=17102)\n+\n ### Assets Used\n \tscripts/img/reload.xcf (modified), src/qt/res/movies/update_spinner.mng\n \n-[Vignoni David](http://www.oxygen-icons.org/)\n+[Vignoni David](http://www.oxygen-icons.org)\n -----------------------\n \n ### Info\n * Designer: Vignoni David\n-* Site: http://www.oxygen-icons.org/\n * License: Oxygen icon theme is dual licensed. You may copy it under the Creative Common Attribution-ShareAlike 3.0 License or the GNU Library General Public License.\n+* Site: [http://www.oxygen-icons.org](http://www.oxygen-icons.org)\n \n ### Assets Used\n \tsrc/qt/res/icons/debugwindow.png"
      },
      {
        "sha": "87b1c3290b1eea65f9e4ac01b3a930b9a75d0491",
        "filename": "src/qt/res/icons/notsynced.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/16ae1c0da179f3e901bacea6f0be84ce0921bf69/src/qt/res/icons/notsynced.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/16ae1c0da179f3e901bacea6f0be84ce0921bf69/src/qt/res/icons/notsynced.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/icons/notsynced.png?ref=16ae1c0da179f3e901bacea6f0be84ce0921bf69"
      }
    ]
  },
  {
    "sha": "0d512a9ee7f01dbd6c06e83c2b3321d185790184",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowZDUxMmE5ZWU3ZjAxZGJkNmMwNmU4M2MyYjMzMjFkMTg1NzkwMTg0",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-10T07:31:33Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-10T08:41:15Z"
      },
      "message": "gitian: Add -O2 for win32 build\n\nIn the win32 gitian descriptor the C*FLAGS are being overridden on\n`configure`, which causes the built-in optimization flags to be removed.\nAdd `-O2` manually (but not `-g` as we're not doing anything with the\ndebug information).\n\nImproves performance of win32 gitian builds.\n\nAs a bonus, fixes issue #3497.",
      "tree": {
        "sha": "8b1e5595647b4fa6a292595b1f46283df12db59c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8b1e5595647b4fa6a292595b1f46283df12db59c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0d512a9ee7f01dbd6c06e83c2b3321d185790184",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0d512a9ee7f01dbd6c06e83c2b3321d185790184",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0d512a9ee7f01dbd6c06e83c2b3321d185790184",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0d512a9ee7f01dbd6c06e83c2b3321d185790184/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "16ae1c0da179f3e901bacea6f0be84ce0921bf69",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/16ae1c0da179f3e901bacea6f0be84ce0921bf69",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/16ae1c0da179f3e901bacea6f0be84ce0921bf69"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 3,
      "deletions": 2
    },
    "files": [
      {
        "sha": "95db2d9066e8b4c878e4bf3431fba90c069a40b2",
        "filename": "contrib/gitian-descriptors/gitian-win32.yml",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0d512a9ee7f01dbd6c06e83c2b3321d185790184/contrib/gitian-descriptors/gitian-win32.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0d512a9ee7f01dbd6c06e83c2b3321d185790184/contrib/gitian-descriptors/gitian-win32.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-win32.yml?ref=0d512a9ee7f01dbd6c06e83c2b3321d185790184",
        "patch": "@@ -30,6 +30,7 @@ script: |\n   #\n   STAGING=$HOME/staging\n   HOST=i686-w64-mingw32\n+  OPTFLAGS='-O2'\n   #\n   mkdir -p $STAGING\n   cd $STAGING\n@@ -43,12 +44,12 @@ script: |\n   export PATH=$STAGING/host/bin:$PATH\n   export TAR_OPTIONS=--mtime=`echo $REFERENCE_DATETIME | awk '{ print $1 }'`\n   ./autogen.sh\n-  ./configure --bindir=$OUTDIR --prefix=$STAGING --host=$HOST --with-qt-plugindir=$STAGING/plugins  --with-qt-incdir=$STAGING/include --with-qt-bindir=$STAGING/host/bin --with-boost=$STAGING --disable-maintainer-mode --with-protoc-bindir=$STAGING/host/bin --disable-dependency-tracking CPPFLAGS=\"-I$STAGING/include\" LDFLAGS=\"-L$STAGING/lib\" CXXFLAGS=\"-frandom-seed=bitcoin\"\n+  ./configure --bindir=$OUTDIR --prefix=$STAGING --host=$HOST --with-qt-plugindir=$STAGING/plugins  --with-qt-incdir=$STAGING/include --with-qt-bindir=$STAGING/host/bin --with-boost=$STAGING --disable-maintainer-mode --with-protoc-bindir=$STAGING/host/bin --disable-dependency-tracking CPPFLAGS=\"-I$STAGING/include ${OPTFLAGS}\" LDFLAGS=\"-L$STAGING/lib ${OPTFLAGS}\" CXXFLAGS=\"-frandom-seed=bitcoin ${OPTFLAGS}\"\n   make dist\n   mkdir -p distsrc\n   cd distsrc\n   tar --strip-components=1 -xf ../bitcoin-*.tar.*\n-  ./configure --bindir=$OUTDIR --prefix=$STAGING --host=i686-w64-mingw32 --with-qt-plugindir=$STAGING/plugins  --with-qt-incdir=$STAGING/include --with-qt-bindir=$STAGING/host/bin --with-boost=$STAGING --disable-maintainer-mode --with-protoc-bindir=$STAGING/host/bin --disable-dependency-tracking CPPFLAGS=\"-I$STAGING/include\" LDFLAGS=\"-L$STAGING/lib\" CXXFLAGS=\"-frandom-seed=bitcoin\"\n+  ./configure --bindir=$OUTDIR --prefix=$STAGING --host=i686-w64-mingw32 --with-qt-plugindir=$STAGING/plugins  --with-qt-incdir=$STAGING/include --with-qt-bindir=$STAGING/host/bin --with-boost=$STAGING --disable-maintainer-mode --with-protoc-bindir=$STAGING/host/bin --disable-dependency-tracking CPPFLAGS=\"-I$STAGING/include ${OPTFLAGS}\" LDFLAGS=\"-L$STAGING/lib ${OPTFLAGS}\" CXXFLAGS=\"-frandom-seed=bitcoin ${OPTFLAGS}\"\n   export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1\n   export FAKETIME=$REFERENCE_DATETIME\n   export TZ=UTC"
      }
    ]
  },
  {
    "sha": "6b06e4fd0d5a0524ae2d128a96dbeb39ca016d33",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2YjA2ZTRmZDBkNWEwNTI0YWUyZDEyOGE5NmRiZWIzOWNhMDE2ZDMz",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-10T10:35:25Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-10T10:35:30Z"
      },
      "message": "Merge pull request #3503\n\n0d512a9 gitian: Add -O2 for win32 build (Wladimir J. van der Laan)",
      "tree": {
        "sha": "b57fc0e53bb6f42bf8a2f7bbf696c31802b5fba2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b57fc0e53bb6f42bf8a2f7bbf696c31802b5fba2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6b06e4fd0d5a0524ae2d128a96dbeb39ca016d33",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJSz8zyAAoJEHSBCwEjRsmmzxAH/RbrpKMq3ZlClU6mxJiJP9PX\nRzYvDqAImwFtdY6f2uqr7V2pwx4MpUpdXi6p0fbdQ3A5z4xURFSPhDyTpGapMGSL\n8sQitqUIRKdlKccZDG2B1JlaZxVb4787V2OWf4p3q8+MjTe0CivB8Z7KsxUI74+h\nk95j+LwL0McC1/2kSZFc8qJz3SEd4gNbXV3f0P5zhYNQMd+YiW/15VIFkgClY531\nQPCyXMCXLWMq3srJxBZ/KuH0pK6xR97yZeUxaSqZzow86NLoGhOHrQewyZL0L+Wv\nOLf9iZsiB9CWT95ud0QluVRMG4LwlYIQ2LTHiSLTc477/ib+nLmZHdv1uC/MgnM=\n=FFyc\n-----END PGP SIGNATURE-----",
        "payload": "tree b57fc0e53bb6f42bf8a2f7bbf696c31802b5fba2\nparent c07dd453e4df07716683e04e028e2f09314ba2f1\nparent 0d512a9ee7f01dbd6c06e83c2b3321d185790184\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1389350125 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1389350130 +0100\n\nMerge pull request #3503\n\n0d512a9 gitian: Add -O2 for win32 build (Wladimir J. van der Laan)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6b06e4fd0d5a0524ae2d128a96dbeb39ca016d33",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6b06e4fd0d5a0524ae2d128a96dbeb39ca016d33",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6b06e4fd0d5a0524ae2d128a96dbeb39ca016d33/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c07dd453e4df07716683e04e028e2f09314ba2f1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c07dd453e4df07716683e04e028e2f09314ba2f1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c07dd453e4df07716683e04e028e2f09314ba2f1"
      },
      {
        "sha": "0d512a9ee7f01dbd6c06e83c2b3321d185790184",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0d512a9ee7f01dbd6c06e83c2b3321d185790184",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0d512a9ee7f01dbd6c06e83c2b3321d185790184"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 3,
      "deletions": 2
    },
    "files": [
      {
        "sha": "95db2d9066e8b4c878e4bf3431fba90c069a40b2",
        "filename": "contrib/gitian-descriptors/gitian-win32.yml",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6b06e4fd0d5a0524ae2d128a96dbeb39ca016d33/contrib/gitian-descriptors/gitian-win32.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6b06e4fd0d5a0524ae2d128a96dbeb39ca016d33/contrib/gitian-descriptors/gitian-win32.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-win32.yml?ref=6b06e4fd0d5a0524ae2d128a96dbeb39ca016d33",
        "patch": "@@ -30,6 +30,7 @@ script: |\n   #\n   STAGING=$HOME/staging\n   HOST=i686-w64-mingw32\n+  OPTFLAGS='-O2'\n   #\n   mkdir -p $STAGING\n   cd $STAGING\n@@ -43,12 +44,12 @@ script: |\n   export PATH=$STAGING/host/bin:$PATH\n   export TAR_OPTIONS=--mtime=`echo $REFERENCE_DATETIME | awk '{ print $1 }'`\n   ./autogen.sh\n-  ./configure --bindir=$OUTDIR --prefix=$STAGING --host=$HOST --with-qt-plugindir=$STAGING/plugins  --with-qt-incdir=$STAGING/include --with-qt-bindir=$STAGING/host/bin --with-boost=$STAGING --disable-maintainer-mode --with-protoc-bindir=$STAGING/host/bin --disable-dependency-tracking CPPFLAGS=\"-I$STAGING/include\" LDFLAGS=\"-L$STAGING/lib\" CXXFLAGS=\"-frandom-seed=bitcoin\"\n+  ./configure --bindir=$OUTDIR --prefix=$STAGING --host=$HOST --with-qt-plugindir=$STAGING/plugins  --with-qt-incdir=$STAGING/include --with-qt-bindir=$STAGING/host/bin --with-boost=$STAGING --disable-maintainer-mode --with-protoc-bindir=$STAGING/host/bin --disable-dependency-tracking CPPFLAGS=\"-I$STAGING/include ${OPTFLAGS}\" LDFLAGS=\"-L$STAGING/lib ${OPTFLAGS}\" CXXFLAGS=\"-frandom-seed=bitcoin ${OPTFLAGS}\"\n   make dist\n   mkdir -p distsrc\n   cd distsrc\n   tar --strip-components=1 -xf ../bitcoin-*.tar.*\n-  ./configure --bindir=$OUTDIR --prefix=$STAGING --host=i686-w64-mingw32 --with-qt-plugindir=$STAGING/plugins  --with-qt-incdir=$STAGING/include --with-qt-bindir=$STAGING/host/bin --with-boost=$STAGING --disable-maintainer-mode --with-protoc-bindir=$STAGING/host/bin --disable-dependency-tracking CPPFLAGS=\"-I$STAGING/include\" LDFLAGS=\"-L$STAGING/lib\" CXXFLAGS=\"-frandom-seed=bitcoin\"\n+  ./configure --bindir=$OUTDIR --prefix=$STAGING --host=i686-w64-mingw32 --with-qt-plugindir=$STAGING/plugins  --with-qt-incdir=$STAGING/include --with-qt-bindir=$STAGING/host/bin --with-boost=$STAGING --disable-maintainer-mode --with-protoc-bindir=$STAGING/host/bin --disable-dependency-tracking CPPFLAGS=\"-I$STAGING/include ${OPTFLAGS}\" LDFLAGS=\"-L$STAGING/lib ${OPTFLAGS}\" CXXFLAGS=\"-frandom-seed=bitcoin ${OPTFLAGS}\"\n   export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1\n   export FAKETIME=$REFERENCE_DATETIME\n   export TZ=UTC"
      }
    ]
  },
  {
    "sha": "5c72e3df3c52d3eb4fe42551cd09d41bdf3bcda4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1YzcyZTNkZjNjNTJkM2ViNGZlNDI1NTFjZDA5ZDQxYmRmM2JjZGE0",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-10T10:35:48Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-10T10:35:59Z"
      },
      "message": "Merge pull request #3501\n\n56fce1f Upgrade gitian win32 to boost-1.55. (Warren Togami)",
      "tree": {
        "sha": "dfd7ad7f2149ef6407ff1148b7b20e7980ea827e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/dfd7ad7f2149ef6407ff1148b7b20e7980ea827e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5c72e3df3c52d3eb4fe42551cd09d41bdf3bcda4",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJSz80PAAoJEHSBCwEjRsmm/mUIAIqHWOuWGjJGoqxxky5wJVwo\n1A/0rFYFlUG/+i/ytErozHIvHVdNpc+6X+s8tIJk0oWejNlv2DRjLn1nTzHlQUxK\nzm3RQBNomZ19SLyI8zSu8HLbuq/IiWtzgnwjcfUxET4MC4kjGg1kjuMWTpUcCEmZ\nY2gCBsPyxZTBlC3NDxpORAGPvUBrP3F6y73bMZJj5B00m9ofPB+Eh/+k7on3efnq\n3mh6fXDLeLQWIevVzGf2n6Q5seo7bfGR7x08U9l3jbdRQnYX1B2I+OJRwwgD4lJf\nbFOV+VKHa/5Z9GRv+2tY41WB+0y336EnJYZRwV+8+ffBxkgPwclHY3/CfZGBVi0=\n=RYFa\n-----END PGP SIGNATURE-----",
        "payload": "tree dfd7ad7f2149ef6407ff1148b7b20e7980ea827e\nparent 6b06e4fd0d5a0524ae2d128a96dbeb39ca016d33\nparent 56fce1fdbb688e9c48ba689d8f69bf66501d91c5\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1389350148 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1389350159 +0100\n\nMerge pull request #3501\n\n56fce1f Upgrade gitian win32 to boost-1.55. (Warren Togami)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5c72e3df3c52d3eb4fe42551cd09d41bdf3bcda4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5c72e3df3c52d3eb4fe42551cd09d41bdf3bcda4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5c72e3df3c52d3eb4fe42551cd09d41bdf3bcda4/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6b06e4fd0d5a0524ae2d128a96dbeb39ca016d33",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6b06e4fd0d5a0524ae2d128a96dbeb39ca016d33",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6b06e4fd0d5a0524ae2d128a96dbeb39ca016d33"
      },
      {
        "sha": "56fce1fdbb688e9c48ba689d8f69bf66501d91c5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/56fce1fdbb688e9c48ba689d8f69bf66501d91c5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/56fce1fdbb688e9c48ba689d8f69bf66501d91c5"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 9,
      "deletions": 9
    },
    "files": [
      {
        "sha": "b14cd1f6c258c996e806bad2902f946899204965",
        "filename": "contrib/gitian-descriptors/boost-win32.yml",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5c72e3df3c52d3eb4fe42551cd09d41bdf3bcda4/contrib/gitian-descriptors/boost-win32.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5c72e3df3c52d3eb4fe42551cd09d41bdf3bcda4/contrib/gitian-descriptors/boost-win32.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/boost-win32.yml?ref=5c72e3df3c52d3eb4fe42551cd09d41bdf3bcda4",
        "patch": "@@ -12,19 +12,19 @@ packages:\n reference_datetime: \"2011-01-30 00:00:00\"\n remotes: []\n files:\n-- \"boost_1_54_0.tar.bz2\"\n+- \"boost_1_55_0.tar.bz2\"\n - \"boost-mingw-gas-cross-compile-2013-03-03.patch\"\n script: |\n   # Defines\n   INSTALLPREFIX=\"$OUTDIR/staging/boost\"\n   HOST=i686-w64-mingw32\n   # Input Integrity Check\n-  echo \"047e927de336af106a24bceba30069980c191529fd76b8dff8eb9a328b48ae1d  boost_1_54_0.tar.bz2\" | shasum -c\n+  echo \"fff00023dd79486d444c8e29922f4072e1d451fc5a4d2b6075852ead7f2b7b52  boost_1_55_0.tar.bz2\" | shasum -c\n   echo \"d2b7f6a1d7051faef3c9cf41a92fa3671d905ef1e1da920d07651a43299f6268  boost-mingw-gas-cross-compile-2013-03-03.patch\" | shasum -c\n \n   mkdir -p \"$INSTALLPREFIX\"\n-  tar xjf boost_1_54_0.tar.bz2\n-  cd boost_1_54_0\n+  tar xjf boost_1_55_0.tar.bz2\n+  cd boost_1_55_0\n   GCCVERSION=$($HOST-g++ -E -dM $(mktemp --suffix=.h) | grep __VERSION__ | cut -d ' ' -f 3 | cut -d '\"' -f 2)\n   echo \"using gcc : $GCCVERSION : $HOST-g++\n         :\n@@ -48,7 +48,7 @@ script: |\n   # Patch Mirror:   http://rose.makesad.us/~paulproteus/mirrors/boost-mingw-gas-cross-compile-2013-03-03.patch\n   patch -p0 < ../boost-mingw-gas-cross-compile-2013-03-03.patch\n \n-  # Bug Workaround: boost-1.54.0 broke the ability to disable zlib\n+  # Bug Workaround: boost-1.54.0 broke the ability to disable zlib, still broken in 1.55\n   # https://svn.boost.org/trac/boost/ticket/9156\n   sed -i 's^\\[ ac.check-library /zlib//zlib : <library>/zlib//zlib^^' libs/iostreams/build/Jamfile.v2\n   sed -i 's^<source>zlib.cpp <source>gzip.cpp \\]^^' libs/iostreams/build/Jamfile.v2\n@@ -62,5 +62,5 @@ script: |\n   cd \"$INSTALLPREFIX\"\n   export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1\n   export FAKETIME=$REFERENCE_DATETIME\n-  zip -r boost-win32-1.54.0-gitian-r6.zip *\n-  cp boost-win32-1.54.0-gitian-r6.zip $OUTDIR\n+  zip -r boost-win32-1.55.0-gitian-r6.zip *\n+  cp boost-win32-1.55.0-gitian-r6.zip $OUTDIR"
      },
      {
        "sha": "a863335ce94686c8f47c037c74f7b73e365a1b2f",
        "filename": "contrib/gitian-descriptors/gitian-win32.yml",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5c72e3df3c52d3eb4fe42551cd09d41bdf3bcda4/contrib/gitian-descriptors/gitian-win32.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5c72e3df3c52d3eb4fe42551cd09d41bdf3bcda4/contrib/gitian-descriptors/gitian-win32.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-win32.yml?ref=5c72e3df3c52d3eb4fe42551cd09d41bdf3bcda4",
        "patch": "@@ -23,7 +23,7 @@ remotes:\n   \"dir\": \"bitcoin\"\n files:\n - \"qt-win32-4.8.3-gitian-r4.zip\"\n-- \"boost-win32-1.54.0-gitian-r6.zip\"\n+- \"boost-win32-1.55.0-gitian-r6.zip\"\n - \"bitcoin-deps-win32-gitian-r9.zip\"\n - \"protobuf-win32-2.5.0-gitian-r3.zip\"\n script: |\n@@ -35,7 +35,7 @@ script: |\n   mkdir -p $STAGING\n   cd $STAGING\n   unzip ../build/qt-win32-4.8.3-gitian-r4.zip\n-  unzip ../build/boost-win32-1.54.0-gitian-r6.zip\n+  unzip ../build/boost-win32-1.55.0-gitian-r6.zip\n   unzip ../build/bitcoin-deps-win32-gitian-r9.zip\n   unzip ../build/protobuf-win32-2.5.0-gitian-r3.zip\n   cd $HOME/build/"
      }
    ]
  },
  {
    "sha": "5b45bf400e4938fd15540d215b91fddcf4217713",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1YjQ1YmY0MDBlNDkzOGZkMTU1NDBkMjE1YjkxZmRkY2Y0MjE3NzEz",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-10T10:39:34Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-10T10:39:42Z"
      },
      "message": "Merge pull request #3488\n\n2102ab9 ui: Fix GUI initialization order (Wladimir J. van der Laan)",
      "tree": {
        "sha": "bd3f106895ff4d43c629f996ce336f5b5028d108",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bd3f106895ff4d43c629f996ce336f5b5028d108"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5b45bf400e4938fd15540d215b91fddcf4217713",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJSz83uAAoJEHSBCwEjRsmmVU8H/A0jTCNE7liRb03fFx2Nhjoz\n4YOBLbeAvLSqKvKcqHGphYdqZmUG7REEMB0DhyM9HjQ6+a36rN3iORaM2t6LHakv\nYBlN2B7/vAM11pZcBz8+0FO3/fdrQmSSFZ0gYnCibVZk+w3mgQUAIGepxi1NxMcK\nWYcLIQWpGJYSqSZ7L7d44epkzxCHnDdmY2dA4f1nuiypJgmcDd1NOUfyqiax1vOZ\nOpMMaqa3Xy3lvbPxddbUQBQc6Cz6dQZHHmFbGqzIV6tQM+JNrIxF1kNFpQHtPg+K\nc/gp9lyKart659RluyIsOT+6/iMcKfl3OKQsT2bCXQBi9kZijNX8muAPgCgM3bY=\n=BRD/\n-----END PGP SIGNATURE-----",
        "payload": "tree bd3f106895ff4d43c629f996ce336f5b5028d108\nparent 5c72e3df3c52d3eb4fe42551cd09d41bdf3bcda4\nparent 2102ab9f5cb542e6727e0f25e670d8549aa1bf1a\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1389350374 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1389350382 +0100\n\nMerge pull request #3488\n\n2102ab9 ui: Fix GUI initialization order (Wladimir J. van der Laan)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5b45bf400e4938fd15540d215b91fddcf4217713",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5b45bf400e4938fd15540d215b91fddcf4217713",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5b45bf400e4938fd15540d215b91fddcf4217713/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5c72e3df3c52d3eb4fe42551cd09d41bdf3bcda4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5c72e3df3c52d3eb4fe42551cd09d41bdf3bcda4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5c72e3df3c52d3eb4fe42551cd09d41bdf3bcda4"
      },
      {
        "sha": "2102ab9f5cb542e6727e0f25e670d8549aa1bf1a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2102ab9f5cb542e6727e0f25e670d8549aa1bf1a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2102ab9f5cb542e6727e0f25e670d8549aa1bf1a"
      }
    ],
    "stats": {
      "total": 105,
      "additions": 64,
      "deletions": 41
    },
    "files": [
      {
        "sha": "d78f6fab75ef65a241f6f4f553f7f6a05406877d",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 46,
        "deletions": 36,
        "changes": 82,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5b45bf400e4938fd15540d215b91fddcf4217713/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5b45bf400e4938fd15540d215b91fddcf4217713/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=5b45bf400e4938fd15540d215b91fddcf4217713",
        "patch": "@@ -161,22 +161,23 @@ void DebugMessageHandler(QtMsgType type, const QMessageLogContext& context, cons\n #ifndef BITCOIN_QT_TEST\n int main(int argc, char *argv[])\n {\n-    bool fMissingDatadir = false;\n     bool fSelParFromCLFailed = false;\n-\n+    /// 1. Parse command-line options. These take precedence over anything else.\n     // Command-line options take precedence:\n     ParseParameters(argc, argv);\n-    // ... then bitcoin.conf:\n-    if (!boost::filesystem::is_directory(GetDataDir(false))) {\n-        fMissingDatadir = true;\n-    } else {\n-        ReadConfigFile(mapArgs, mapMultiArgs);\n-    }\n     // Check for -testnet or -regtest parameter (TestNet() calls are only valid after this clause)\n     if (!SelectParamsFromCommandLine()) {\n         fSelParFromCLFailed = true;\n     }\n+    // Parse URIs on command line -- this can affect TestNet() / RegTest() mode\n+    if (!PaymentServer::ipcParseCommandLine(argc, argv))\n+        exit(0);\n+\n+    bool isaTestNet = TestNet() || RegTest();\n+\n+    // Do not refer to data directory yet, this can be overridden by Intro::pickDataDirectory\n \n+    /// 2. Basic Qt initialization (not dependent on parameters or configuration)\n #if QT_VERSION < 0x050000\n     // Internal string conversion is all UTF-8\n     QTextCodec::setCodecForTr(QTextCodec::codecForName(\"UTF-8\"));\n@@ -196,44 +197,62 @@ int main(int argc, char *argv[])\n     // Register meta types used for QMetaObject::invokeMethod\n     qRegisterMetaType< bool* >();\n \n-    // Application identification (must be set before OptionsModel is initialized,\n-    // as it is used to locate QSettings)\n-    bool isaTestNet = TestNet() || RegTest();\n+    /// 3. Application identification\n+    // must be set before OptionsModel is initialized or translations are loaded,\n+    // as it is used to locate QSettings\n     QApplication::setOrganizationName(\"Bitcoin\");\n     QApplication::setOrganizationDomain(\"bitcoin.org\");\n     if (isaTestNet) // Separate UI settings for testnets\n         QApplication::setApplicationName(\"Bitcoin-Qt-testnet\");\n     else\n         QApplication::setApplicationName(\"Bitcoin-Qt\");\n \n+    /// 4. Initialization of translations, so that intro dialog is in user's language\n     // Now that QSettings are accessible, initialize translations\n     QTranslator qtTranslatorBase, qtTranslator, translatorBase, translator;\n     initTranslations(qtTranslatorBase, qtTranslator, translatorBase, translator);\n \n-    // Do this early as we don't want to bother initializing if we are just calling IPC\n-    // ... but do it after creating app and setting up translations, so errors are\n-    // translated properly.\n-    if (PaymentServer::ipcSendCommandLine(argc, argv))\n-        exit(0);\n-\n-    // Now that translations are initialized check for errors and allow a translatable error message\n-    if (fMissingDatadir) {\n-        QMessageBox::critical(0, QObject::tr(\"Bitcoin\"),\n-                              QObject::tr(\"Error: Specified data directory \\\"%1\\\" does not exist.\").arg(QString::fromStdString(mapArgs[\"-datadir\"])));\n+    // Show help message immediately after parsing command-line options (for \"-lang\") and setting locale,\n+    // but before showing splash screen.\n+    if (mapArgs.count(\"-?\") || mapArgs.count(\"--help\"))\n+    {\n+        GUIUtil::HelpMessageBox help;\n+        help.showOrPrint();\n         return 1;\n     }\n-    else if (fSelParFromCLFailed) {\n+    // Now that translations are initialized, check for earlier errors and show a translatable error message\n+    if (fSelParFromCLFailed) {\n         QMessageBox::critical(0, QObject::tr(\"Bitcoin\"), QObject::tr(\"Error: Invalid combination of -regtest and -testnet.\"));\n         return 1;\n     }\n \n+    /// 5. Now that settings and translations are available, ask user for data directory\n+    // User language is set up: pick a data directory\n+    Intro::pickDataDirectory(isaTestNet);\n+\n+    /// 6. Determine availability of data directory and parse bitcoin.conf\n+    if (!boost::filesystem::is_directory(GetDataDir(false)))\n+    {\n+        QMessageBox::critical(0, QObject::tr(\"Bitcoin\"),\n+                              QObject::tr(\"Error: Specified data directory \\\"%1\\\" does not exist.\").arg(QString::fromStdString(mapArgs[\"-datadir\"])));\n+        return 1;\n+    }\n+    ReadConfigFile(mapArgs, mapMultiArgs);\n+\n+    /// 7. URI IPC sending\n+    // - Do this early as we don't want to bother initializing if we are just calling IPC\n+    // - Do this *after* setting up the data directory, as the data directory hash is used in the name\n+    // of the server.\n+    // - Do this after creating app and setting up translations, so errors are\n+    // translated properly.\n+    if (PaymentServer::ipcSendCommandLine())\n+        exit(0);\n+\n     // Start up the payment server early, too, so impatient users that click on\n     // bitcoin: links repeatedly have their payment requests routed to this process:\n     PaymentServer* paymentServer = new PaymentServer(&app);\n \n-    // User language is set up: pick a data directory\n-    Intro::pickDataDirectory(isaTestNet);\n-\n+    /// 8. Main GUI initialization\n     // Install global event filter that makes sure that long tooltips can be word-wrapped\n     app.installEventFilter(new GUIUtil::ToolTipToRichTextFilter(TOOLTIP_WRAP_THRESHOLD, &app));\n     // Install qDebug() message handler to route to debug.log\n@@ -242,24 +261,15 @@ int main(int argc, char *argv[])\n #else\n     qInstallMessageHandler(DebugMessageHandler);\n #endif\n-\n-    // ... now GUI settings:\n+    // Load GUI settings from QSettings\n     OptionsModel optionsModel;\n \n     // Subscribe to global signals from core\n     uiInterface.ThreadSafeMessageBox.connect(ThreadSafeMessageBox);\n     uiInterface.InitMessage.connect(InitMessage);\n     uiInterface.Translate.connect(Translate);\n \n-    // Show help message immediately after parsing command-line options (for \"-lang\") and setting locale,\n-    // but before showing splash screen.\n-    if (mapArgs.count(\"-?\") || mapArgs.count(\"--help\"))\n-    {\n-        GUIUtil::HelpMessageBox help;\n-        help.showOrPrint();\n-        return 1;\n-    }\n-\n+    // Show splash screen if appropriate\n     SplashScreen splash(QPixmap(), 0, isaTestNet);\n     if (GetBoolArg(\"-splash\", true) && !GetBoolArg(\"-min\", false))\n     {"
      },
      {
        "sha": "5f7ccf7093af9b8f2acb9bdcecffd1da81c01074",
        "filename": "src/qt/intro.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5b45bf400e4938fd15540d215b91fddcf4217713/src/qt/intro.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5b45bf400e4938fd15540d215b91fddcf4217713/src/qt/intro.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/intro.cpp?ref=5b45bf400e4938fd15540d215b91fddcf4217713",
        "patch": "@@ -148,7 +148,7 @@ QString Intro::getDefaultDataDirectory()\n \n void Intro::pickDataDirectory(bool fIsTestnet)\n {\n-    namespace fs = boost::filesystem;;\n+    namespace fs = boost::filesystem;\n     QSettings settings;\n     /* If data directory provided on command line, no need to look at settings\n        or show a picking dialog */"
      },
      {
        "sha": "17d80940b7905a6e5af191ad94b12279e579605c",
        "filename": "src/qt/paymentserver.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 3,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5b45bf400e4938fd15540d215b91fddcf4217713/src/qt/paymentserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5b45bf400e4938fd15540d215b91fddcf4217713/src/qt/paymentserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/paymentserver.cpp?ref=5b45bf400e4938fd15540d215b91fddcf4217713",
        "patch": "@@ -180,10 +180,8 @@ void PaymentServer::LoadRootCAs(X509_STORE* _store)\n // and the items in savedPaymentRequest will be handled\n // when uiReady() is called.\n //\n-bool PaymentServer::ipcSendCommandLine(int argc, char* argv[])\n+bool PaymentServer::ipcParseCommandLine(int argc, char* argv[])\n {\n-    bool fResult = false;\n-\n     for (int i = 1; i < argc; i++)\n     {\n         QString arg(argv[i]);\n@@ -226,7 +224,18 @@ bool PaymentServer::ipcSendCommandLine(int argc, char* argv[])\n             qDebug() << \"PaymentServer::ipcSendCommandLine : Payment request file does not exist: \" << arg;\n         }\n     }\n+    return true;\n+}\n \n+//\n+// Sending to the server is done synchronously, at startup.\n+// If the server isn't already running, startup continues,\n+// and the items in savedPaymentRequest will be handled\n+// when uiReady() is called.\n+//\n+bool PaymentServer::ipcSendCommandLine()\n+{\n+    bool fResult = false;\n     foreach (const QString& r, savedPaymentRequests)\n     {\n         QLocalSocket* socket = new QLocalSocket();"
      },
      {
        "sha": "5ee85f7db41b38a9a08aa9840dca31018f8668e4",
        "filename": "src/qt/paymentserver.h",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5b45bf400e4938fd15540d215b91fddcf4217713/src/qt/paymentserver.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5b45bf400e4938fd15540d215b91fddcf4217713/src/qt/paymentserver.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/paymentserver.h?ref=5b45bf400e4938fd15540d215b91fddcf4217713",
        "patch": "@@ -56,12 +56,16 @@ class PaymentServer : public QObject\n     Q_OBJECT\n \n public:\n+    // Parse URIs on command line\n+    // Returns false on error\n+    static bool ipcParseCommandLine(int argc, char *argv[]);\n+\n     // Returns true if there were URIs on the command line\n     // which were successfully sent to an already-running\n     // process.\n     // Note: if a payment request is given, SelectParams(MAIN/TESTNET)\n     // will be called so we startup in the right mode.\n-    static bool ipcSendCommandLine(int argc, char *argv[]);\n+    static bool ipcSendCommandLine();\n \n     // parent should be QApplication object\n     PaymentServer(QObject* parent, bool startLocalServer = true);"
      }
    ]
  },
  {
    "sha": "6a1bf004252191f820f2252d965312b9530fdd74",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2YTFiZjAwNDI1MjE5MWY4MjBmMjI1MmQ5NjUzMTJiOTUzMGZkZDc0",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2014-01-10T10:43:29Z"
      },
      "committer": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2014-01-10T10:43:29Z"
      },
      "message": "[Qt] display native dir separators in select dadatir dialog\n\n- fixes display on Windows now \\ instead of / before",
      "tree": {
        "sha": "45ed95606a371c034218de7caa8f0807755620bd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/45ed95606a371c034218de7caa8f0807755620bd"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6a1bf004252191f820f2252d965312b9530fdd74",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6a1bf004252191f820f2252d965312b9530fdd74",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6a1bf004252191f820f2252d965312b9530fdd74",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6a1bf004252191f820f2252d965312b9530fdd74/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "5b45bf400e4938fd15540d215b91fddcf4217713",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5b45bf400e4938fd15540d215b91fddcf4217713",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5b45bf400e4938fd15540d215b91fddcf4217713"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "453bbdf374a97cf3b2a0d8675f0499d975e3a8ba",
        "filename": "src/qt/intro.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6a1bf004252191f820f2252d965312b9530fdd74/src/qt/intro.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6a1bf004252191f820f2252d965312b9530fdd74/src/qt/intro.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/intro.cpp?ref=6a1bf004252191f820f2252d965312b9530fdd74",
        "patch": "@@ -233,7 +233,7 @@ void Intro::on_dataDirectory_textChanged(const QString &dataDirStr)\n \n void Intro::on_ellipsisButton_clicked()\n {\n-    QString dir = QFileDialog::getExistingDirectory(0, \"Choose data directory\", ui->dataDirectory->text());\n+    QString dir = QDir::toNativeSeparators(QFileDialog::getExistingDirectory(0, \"Choose data directory\", ui->dataDirectory->text()));\n     if(!dir.isEmpty())\n         ui->dataDirectory->setText(dir);\n }"
      }
    ]
  },
  {
    "sha": "131fb42b1bb1cdb13c464735a5427e9bd5eb273e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxMzFmYjQyYjFiYjFjZGIxM2M0NjQ3MzVhNTQyN2U5YmQ1ZWIyNzNl",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-10T11:53:14Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-10T11:54:23Z"
      },
      "message": "Merge pull request #3504\n\n6a1bf00 [Qt] display native dir separators in select dadatir dialog (Philip Kaufmann)",
      "tree": {
        "sha": "45ed95606a371c034218de7caa8f0807755620bd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/45ed95606a371c034218de7caa8f0807755620bd"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/131fb42b1bb1cdb13c464735a5427e9bd5eb273e",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJSz99vAAoJEHSBCwEjRsmmtAIH/0hk54MTbj/A3G8naZfn+fKI\n8BIK13Z2lnPl8pT9lBsRtf9eisNyjl4h1MTlZ6UyutYs1mggo2AsWBXC+pQAlQLT\nT6mlzOfuyGqXxlYYKXZlKfLAJQTMaA+gkz/CI6osveVAiQDgZFQ5+8KsQOlML5up\nlgLBu57/0JhofS/0O8v8Q5WCoCM+4RvNd8qjYj618MaqFbkvcc5Y1x+rP5SfnMl0\nKKw+BZVlu9mk7abtVI2d4deJZk7HflQok0Rq4O/+AoTF4OWNUDzkF3CU0qZZQAsY\nZ6H5gtmRG1BACYIyah0EyIcBBIHnW9LQDpXenJ1ldQhIJN7IPrxPL2LHW24oJn8=\n=Sex8\n-----END PGP SIGNATURE-----",
        "payload": "tree 45ed95606a371c034218de7caa8f0807755620bd\nparent 5b45bf400e4938fd15540d215b91fddcf4217713\nparent 6a1bf004252191f820f2252d965312b9530fdd74\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1389354794 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1389354863 +0100\n\nMerge pull request #3504\n\n6a1bf00 [Qt] display native dir separators in select dadatir dialog (Philip Kaufmann)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/131fb42b1bb1cdb13c464735a5427e9bd5eb273e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/131fb42b1bb1cdb13c464735a5427e9bd5eb273e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/131fb42b1bb1cdb13c464735a5427e9bd5eb273e/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5b45bf400e4938fd15540d215b91fddcf4217713",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5b45bf400e4938fd15540d215b91fddcf4217713",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5b45bf400e4938fd15540d215b91fddcf4217713"
      },
      {
        "sha": "6a1bf004252191f820f2252d965312b9530fdd74",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6a1bf004252191f820f2252d965312b9530fdd74",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6a1bf004252191f820f2252d965312b9530fdd74"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "453bbdf374a97cf3b2a0d8675f0499d975e3a8ba",
        "filename": "src/qt/intro.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/131fb42b1bb1cdb13c464735a5427e9bd5eb273e/src/qt/intro.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/131fb42b1bb1cdb13c464735a5427e9bd5eb273e/src/qt/intro.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/intro.cpp?ref=131fb42b1bb1cdb13c464735a5427e9bd5eb273e",
        "patch": "@@ -233,7 +233,7 @@ void Intro::on_dataDirectory_textChanged(const QString &dataDirStr)\n \n void Intro::on_ellipsisButton_clicked()\n {\n-    QString dir = QFileDialog::getExistingDirectory(0, \"Choose data directory\", ui->dataDirectory->text());\n+    QString dir = QDir::toNativeSeparators(QFileDialog::getExistingDirectory(0, \"Choose data directory\", ui->dataDirectory->text()));\n     if(!dir.isEmpty())\n         ui->dataDirectory->setText(dir);\n }"
      }
    ]
  },
  {
    "sha": "a036b796d13d6baabb60c432ba9fee046dd59490",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphMDM2Yjc5NmQxM2Q2YmFhYmI2MGM0MzJiYTlmZWUwNDZkZDU5NDkw",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-10T11:55:06Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-10T11:55:12Z"
      },
      "message": "Merge pull request #3347\n\n7e195e8 [Qt] massive options/settings rework (no core changes) (Philip Kaufmann)",
      "tree": {
        "sha": "2b0d7c541a7cec927ac547341a96eef1f066bc3a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2b0d7c541a7cec927ac547341a96eef1f066bc3a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a036b796d13d6baabb60c432ba9fee046dd59490",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJSz9+gAAoJEHSBCwEjRsmmjxUH/1ujiZobFvpn54ouXOIIRVEh\n1A49Cwuf/tXF848Wf8Fvzfd9jhP3fioEmJwv1Jd2QGukVI2AxIW5FOcqao5d6LEg\n/cOtnit5yWDP9NZY1J8+8G62m+mGRgrOVVawwrbAFRLf3bUpgPCgf93uTd86Anel\nXyax/43TpDJfIknwxe3DIqha3/28/BMbqAH3c+Sy8iqivzvXLKrbMizi+SvtRC9q\n1vMkR9mIq4KL9jmL9thKueRPOf8siBG136sY+cgfdoj4Uw0bZWLW1r9y5Ta1DyCh\nTIE1/6h6oZJz90IFaTm/6YQ1FuHQ2ANtzjZjZ9DnUOlyy3TBe1T35pVePYufkZo=\n=Y76u\n-----END PGP SIGNATURE-----",
        "payload": "tree 2b0d7c541a7cec927ac547341a96eef1f066bc3a\nparent 131fb42b1bb1cdb13c464735a5427e9bd5eb273e\nparent 7e195e8459ad741368db6bb574981fccb1707268\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1389354906 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1389354912 +0100\n\nMerge pull request #3347\n\n7e195e8 [Qt] massive options/settings rework (no core changes) (Philip Kaufmann)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a036b796d13d6baabb60c432ba9fee046dd59490",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a036b796d13d6baabb60c432ba9fee046dd59490",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a036b796d13d6baabb60c432ba9fee046dd59490/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "131fb42b1bb1cdb13c464735a5427e9bd5eb273e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/131fb42b1bb1cdb13c464735a5427e9bd5eb273e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/131fb42b1bb1cdb13c464735a5427e9bd5eb273e"
      },
      {
        "sha": "7e195e8459ad741368db6bb574981fccb1707268",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7e195e8459ad741368db6bb574981fccb1707268",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7e195e8459ad741368db6bb574981fccb1707268"
      }
    ],
    "stats": {
      "total": 682,
      "additions": 441,
      "deletions": 241
    },
    "files": [
      {
        "sha": "9056ab7696717dee2cdf5e819e6b70b6ecb6a4ce",
        "filename": "src/qt/forms/optionsdialog.ui",
        "status": "modified",
        "additions": 175,
        "deletions": 44,
        "changes": 219,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a036b796d13d6baabb60c432ba9fee046dd59490/src/qt/forms/optionsdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a036b796d13d6baabb60c432ba9fee046dd59490/src/qt/forms/optionsdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/optionsdialog.ui?ref=a036b796d13d6baabb60c432ba9fee046dd59490",
        "patch": "@@ -6,8 +6,8 @@\n    <rect>\n     <x>0</x>\n     <y>0</y>\n-    <width>540</width>\n-    <height>380</height>\n+    <width>560</width>\n+    <height>400</height>\n    </rect>\n   </property>\n   <property name=\"windowTitle\">\n@@ -19,9 +19,6 @@\n   <layout class=\"QVBoxLayout\" name=\"verticalLayout\">\n    <item>\n     <widget class=\"QTabWidget\" name=\"tabWidget\">\n-     <property name=\"tabPosition\">\n-      <enum>QTabWidget::North</enum>\n-     </property>\n      <property name=\"currentIndex\">\n       <number>0</number>\n      </property>\n@@ -86,21 +83,44 @@\n          </property>\n         </widget>\n        </item>\n-       <item>\n-        <spacer name=\"verticalSpacer_Main\">\n-         <property name=\"orientation\">\n-          <enum>Qt::Vertical</enum>\n-         </property>\n-         <property name=\"sizeHint\" stdset=\"0\">\n-          <size>\n-           <width>20</width>\n-           <height>40</height>\n-          </size>\n-         </property>\n-        </spacer>\n-       </item>\n        <item>\n         <layout class=\"QHBoxLayout\" name=\"horizontalLayout_2_Main\">\n+         <item>\n+          <widget class=\"QLabel\" name=\"databaseCacheLabel\">\n+           <property name=\"text\">\n+            <string>Size of &amp;database cache</string>\n+           </property>\n+           <property name=\"textFormat\">\n+            <enum>Qt::PlainText</enum>\n+           </property>\n+           <property name=\"buddy\">\n+            <cstring>databaseCache</cstring>\n+           </property>\n+          </widget>\n+         </item>\n+         <item>\n+          <widget class=\"QSpinBox\" name=\"databaseCache\">\n+           <property name=\"toolTip\">\n+            <string>Set database cache size in megabytes (default: 25)</string>\n+           </property>\n+           <property name=\"maximum\">\n+            <number>1024</number>\n+           </property>\n+           <property name=\"value\">\n+            <number>25</number>\n+           </property>\n+          </widget>\n+         </item>\n+         <item>\n+          <widget class=\"QLabel\" name=\"databaseCacheUnitLabel\">\n+           <property name=\"text\">\n+            <string>MB</string>\n+           </property>\n+           <property name=\"textFormat\">\n+            <enum>Qt::PlainText</enum>\n+           </property>\n+          </widget>\n+         </item>\n          <item>\n           <spacer name=\"horizontalSpacer_2_Main\">\n            <property name=\"orientation\">\n@@ -114,21 +134,64 @@\n            </property>\n           </spacer>\n          </item>\n+        </layout>\n+       </item>\n+       <item>\n+        <layout class=\"QHBoxLayout\" name=\"horizontalLayout_3_Main\">\n+         <item>\n+          <widget class=\"QLabel\" name=\"threadsScriptVerifLabel\">\n+           <property name=\"text\">\n+            <string>Number of script &amp;verification threads</string>\n+           </property>\n+           <property name=\"textFormat\">\n+            <enum>Qt::PlainText</enum>\n+           </property>\n+           <property name=\"buddy\">\n+            <cstring>threadsScriptVerif</cstring>\n+           </property>\n+          </widget>\n+         </item>\n          <item>\n-          <widget class=\"QPushButton\" name=\"resetButton\">\n+          <widget class=\"QSpinBox\" name=\"threadsScriptVerif\">\n            <property name=\"toolTip\">\n-            <string>Reset all client options to default.</string>\n+            <string>Set the number of script verification threads (up to 16, 0 = auto, &lt;0 = leave that many cores free, default: 0)</string>\n            </property>\n-           <property name=\"text\">\n-            <string>&amp;Reset Options</string>\n+           <property name=\"minimum\">\n+            <number>-16</number>\n            </property>\n-           <property name=\"autoDefault\">\n-            <bool>false</bool>\n+           <property name=\"maximum\">\n+            <number>16</number>\n            </property>\n           </widget>\n          </item>\n+         <item>\n+          <spacer name=\"horizontalSpacer_3_Main\">\n+           <property name=\"orientation\">\n+            <enum>Qt::Horizontal</enum>\n+           </property>\n+           <property name=\"sizeHint\" stdset=\"0\">\n+            <size>\n+             <width>40</width>\n+             <height>20</height>\n+            </size>\n+           </property>\n+          </spacer>\n+         </item>\n         </layout>\n        </item>\n+       <item>\n+        <spacer name=\"verticalSpacer_Main\">\n+         <property name=\"orientation\">\n+          <enum>Qt::Vertical</enum>\n+         </property>\n+         <property name=\"sizeHint\" stdset=\"0\">\n+          <size>\n+           <width>20</width>\n+           <height>40</height>\n+          </size>\n+         </property>\n+        </spacer>\n+       </item>\n       </layout>\n      </widget>\n      <widget class=\"QWidget\" name=\"tabNetwork\">\n@@ -149,15 +212,15 @@\n        <item>\n         <widget class=\"QCheckBox\" name=\"connectSocks\">\n          <property name=\"toolTip\">\n-          <string>Connect to the Bitcoin network through a SOCKS proxy (e.g. when connecting through Tor).</string>\n+          <string>Connect to the Bitcoin network through a SOCKS proxy.</string>\n          </property>\n          <property name=\"text\">\n-          <string>&amp;Connect through SOCKS proxy:</string>\n+          <string>&amp;Connect through SOCKS proxy (default proxy):</string>\n          </property>\n         </widget>\n        </item>\n        <item>\n-        <layout class=\"QHBoxLayout\" name=\"horizontalLayout_Network\">\n+        <layout class=\"QHBoxLayout\" name=\"horizontalLayout_1_Network\">\n          <item>\n           <widget class=\"QLabel\" name=\"proxyIpLabel\">\n            <property name=\"text\">\n@@ -173,14 +236,20 @@\n          </item>\n          <item>\n           <widget class=\"QValidatedLineEdit\" name=\"proxyIp\">\n+           <property name=\"minimumSize\">\n+            <size>\n+             <width>140</width>\n+             <height>0</height>\n+            </size>\n+           </property>\n            <property name=\"maximumSize\">\n             <size>\n              <width>140</width>\n              <height>16777215</height>\n             </size>\n            </property>\n            <property name=\"toolTip\">\n-            <string>IP address of the proxy (e.g. 127.0.0.1)</string>\n+            <string>IP address of the proxy (e.g. IPv4: 127.0.0.1 / IPv6: ::1)</string>\n            </property>\n           </widget>\n          </item>\n@@ -199,6 +268,12 @@\n          </item>\n          <item>\n           <widget class=\"QLineEdit\" name=\"proxyPort\">\n+           <property name=\"minimumSize\">\n+            <size>\n+             <width>55</width>\n+             <height>0</height>\n+            </size>\n+           </property>\n            <property name=\"maximumSize\">\n             <size>\n              <width>55</width>\n@@ -231,7 +306,7 @@\n           </widget>\n          </item>\n          <item>\n-          <spacer name=\"horizontalSpacer_Network\">\n+          <spacer name=\"horizontalSpacer_1_Network\">\n            <property name=\"orientation\">\n             <enum>Qt::Horizontal</enum>\n            </property>\n@@ -390,8 +465,67 @@\n      </widget>\n     </widget>\n    </item>\n+   <item>\n+    <widget class=\"QFrame\" name=\"frame\">\n+     <layout class=\"QVBoxLayout\" name=\"verticalLayout_Bottom\">\n+      <item>\n+       <layout class=\"QHBoxLayout\" name=\"horizontalLayout_Bottom\">\n+        <item>\n+         <widget class=\"QLabel\" name=\"overriddenByCommandLineInfoLabel\">\n+          <property name=\"text\">\n+           <string>Active command-line options that override above options: </string>\n+          </property>\n+          <property name=\"textFormat\">\n+           <enum>Qt::PlainText</enum>\n+          </property>\n+         </widget>\n+        </item>\n+        <item>\n+         <spacer name=\"horizontalSpacer_Bottom\">\n+          <property name=\"orientation\">\n+           <enum>Qt::Horizontal</enum>\n+          </property>\n+          <property name=\"sizeHint\" stdset=\"0\">\n+           <size>\n+            <width>40</width>\n+            <height>20</height>\n+           </size>\n+          </property>\n+         </spacer>\n+        </item>\n+       </layout>\n+      </item>\n+      <item>\n+       <widget class=\"QLabel\" name=\"overriddenByCommandLineLabel\">\n+        <property name=\"text\">\n+         <string/>\n+        </property>\n+        <property name=\"textFormat\">\n+         <enum>Qt::PlainText</enum>\n+        </property>\n+        <property name=\"wordWrap\">\n+         <bool>true</bool>\n+        </property>\n+       </widget>\n+      </item>\n+     </layout>\n+    </widget>\n+   </item>\n    <item>\n     <layout class=\"QHBoxLayout\" name=\"horizontalLayout_Buttons\">\n+     <item>\n+      <widget class=\"QPushButton\" name=\"resetButton\">\n+       <property name=\"toolTip\">\n+        <string>Reset all client options to default.</string>\n+       </property>\n+       <property name=\"text\">\n+        <string>&amp;Reset Options</string>\n+       </property>\n+       <property name=\"autoDefault\">\n+        <bool>false</bool>\n+       </property>\n+      </widget>\n+     </item>\n      <item>\n       <spacer name=\"horizontalSpacer_1\">\n        <property name=\"orientation\">\n@@ -407,6 +541,12 @@\n      </item>\n      <item>\n       <widget class=\"QLabel\" name=\"statusLabel\">\n+       <property name=\"minimumSize\">\n+        <size>\n+         <width>200</width>\n+         <height>0</height>\n+        </size>\n+       </property>\n        <property name=\"font\">\n         <font>\n          <weight>75</weight>\n@@ -454,16 +594,6 @@\n        </property>\n       </widget>\n      </item>\n-     <item>\n-      <widget class=\"QPushButton\" name=\"applyButton\">\n-       <property name=\"text\">\n-        <string>&amp;Apply</string>\n-       </property>\n-       <property name=\"autoDefault\">\n-        <bool>false</bool>\n-       </property>\n-      </widget>\n-     </item>\n     </layout>\n    </item>\n   </layout>\n@@ -473,17 +603,18 @@\n    <class>BitcoinAmountField</class>\n    <extends>QLineEdit</extends>\n    <header>bitcoinamountfield.h</header>\n-  </customwidget>\n-  <customwidget>\n-   <class>QValueComboBox</class>\n-   <extends>QComboBox</extends>\n-   <header>qvaluecombobox.h</header>\n+   <container>1</container>\n   </customwidget>\n   <customwidget>\n    <class>QValidatedLineEdit</class>\n    <extends>QLineEdit</extends>\n    <header>qvalidatedlineedit.h</header>\n   </customwidget>\n+  <customwidget>\n+   <class>QValueComboBox</class>\n+   <extends>QComboBox</extends>\n+   <header>qvaluecombobox.h</header>\n+  </customwidget>\n  </customwidgets>\n  <resources/>\n  <connections/>"
      },
      {
        "sha": "d024e3b7aa6375c50cde3fa69313716d7625a15e",
        "filename": "src/qt/optionsdialog.cpp",
        "status": "modified",
        "additions": 64,
        "deletions": 68,
        "changes": 132,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a036b796d13d6baabb60c432ba9fee046dd59490/src/qt/optionsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a036b796d13d6baabb60c432ba9fee046dd59490/src/qt/optionsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsdialog.cpp?ref=a036b796d13d6baabb60c432ba9fee046dd59490",
        "patch": "@@ -10,6 +10,7 @@\n #include \"ui_optionsdialog.h\"\n \n #include \"bitcoinunits.h\"\n+#include \"guiutil.h\"\n #include \"monitoreddatamapper.h\"\n #include \"optionsmodel.h\"\n \n@@ -19,17 +20,20 @@\n #include <QIntValidator>\n #include <QLocale>\n #include <QMessageBox>\n+#include <QTimer>\n \n OptionsDialog::OptionsDialog(QWidget *parent) :\n     QDialog(parent),\n     ui(new Ui::OptionsDialog),\n     model(0),\n     mapper(0),\n-    fRestartWarningDisplayed_Proxy(false),\n-    fRestartWarningDisplayed_Lang(false),\n     fProxyIpValid(true)\n {\n     ui->setupUi(this);\n+    GUIUtil::restoreWindowGeometry(\"nOptionsDialogWindow\", this->size(), this);\n+\n+    /* Main elements init */\n+    ui->databaseCache->setMaximum(sizeof(void*) > 4 ? 4096 : 1024);\n \n     /* Network elements init */\n #ifndef USE_UPNP\n@@ -40,6 +44,7 @@ OptionsDialog::OptionsDialog(QWidget *parent) :\n     ui->proxyPort->setEnabled(false);\n     ui->proxyPort->setValidator(new QIntValidator(1, 65535, this));\n \n+    /** SOCKS version is only selectable for default proxy and is always 5 for IPv6 and Tor */\n     ui->socksVersion->setEnabled(false);\n     ui->socksVersion->addItem(\"5\", 5);\n     ui->socksVersion->addItem(\"4\", 4);\n@@ -95,16 +100,13 @@ OptionsDialog::OptionsDialog(QWidget *parent) :\n     mapper->setSubmitPolicy(QDataWidgetMapper::ManualSubmit);\n     mapper->setOrientation(Qt::Vertical);\n \n-    /* enable apply button when data modified */\n-    connect(mapper, SIGNAL(viewModified()), this, SLOT(enableApplyButton()));\n-    /* disable apply button when new data loaded */\n-    connect(mapper, SIGNAL(currentIndexChanged(int)), this, SLOT(disableApplyButton()));\n     /* setup/change UI elements when proxy IP is invalid/valid */\n-    connect(this, SIGNAL(proxyIpValid(QValidatedLineEdit *, bool)), this, SLOT(handleProxyIpValid(QValidatedLineEdit *, bool)));\n+    connect(this, SIGNAL(proxyIpChecks(QValidatedLineEdit *, int)), this, SLOT(doProxyIpChecks(QValidatedLineEdit *, int)));\n }\n \n OptionsDialog::~OptionsDialog()\n {\n+    GUIUtil::saveWindowGeometry(\"nOptionsDialogWindow\", this);\n     delete ui;\n }\n \n@@ -114,6 +116,15 @@ void OptionsDialog::setModel(OptionsModel *model)\n \n     if(model)\n     {\n+        /* check if client restart is needed and show persistent message */\n+        if (model->isRestartRequired())\n+            showRestartWarning(true);\n+\n+        QString strLabel = model->getOverriddenByCommandLine();\n+        if (strLabel.isEmpty())\n+            strLabel = tr(\"none\");\n+        ui->overriddenByCommandLineLabel->setText(strLabel);\n+\n         connect(model, SIGNAL(displayUnitChanged(int)), this, SLOT(updateDisplayUnit()));\n \n         mapper->setModel(model);\n@@ -124,18 +135,24 @@ void OptionsDialog::setModel(OptionsModel *model)\n     /* update the display unit, to not use the default (\"BTC\") */\n     updateDisplayUnit();\n \n-    /* warn only when language selection changes by user action (placed here so init via mapper doesn't trigger this) */\n-    connect(ui->lang, SIGNAL(valueChanged()), this, SLOT(showRestartWarning_Lang()));\n+    /* warn when one of the following settings changes by user action (placed here so init via mapper doesn't trigger them) */\n \n-    /* disable apply button after settings are loaded as there is nothing to save */\n-    disableApplyButton();\n+    /* Main */\n+    connect(ui->databaseCache, SIGNAL(valueChanged(int)), this, SLOT(showRestartWarning()));\n+    connect(ui->threadsScriptVerif, SIGNAL(valueChanged(int)), this, SLOT(showRestartWarning()));\n+    /* Network */\n+    connect(ui->connectSocks, SIGNAL(clicked(bool)), this, SLOT(showRestartWarning()));\n+    /* Display */\n+    connect(ui->lang, SIGNAL(valueChanged()), this, SLOT(showRestartWarning()));\n }\n \n void OptionsDialog::setMapper()\n {\n     /* Main */\n     mapper->addMapping(ui->transactionFee, OptionsModel::Fee);\n     mapper->addMapping(ui->bitcoinAtStartup, OptionsModel::StartAtStartup);\n+    mapper->addMapping(ui->threadsScriptVerif, OptionsModel::ThreadsScriptVerif);\n+    mapper->addMapping(ui->databaseCache, OptionsModel::DatabaseCache);\n \n     /* Network */\n     mapper->addMapping(ui->mapPortUpnp, OptionsModel::MapPortUPnP);\n@@ -158,31 +175,20 @@ void OptionsDialog::setMapper()\n     mapper->addMapping(ui->coinControlFeatures, OptionsModel::CoinControlFeatures);\n }\n \n-void OptionsDialog::enableApplyButton()\n-{\n-    ui->applyButton->setEnabled(true);\n-}\n-\n-void OptionsDialog::disableApplyButton()\n-{\n-    ui->applyButton->setEnabled(false);\n-}\n-\n-void OptionsDialog::enableSaveButtons()\n+void OptionsDialog::enableOkButton()\n {\n-    /* prevent enabling of the save buttons when data modified, if there is an invalid proxy address present */\n+    /* prevent enabling of the OK button when data modified, if there is an invalid proxy address present */\n     if(fProxyIpValid)\n-        setSaveButtonState(true);\n+        setOkButtonState(true);\n }\n \n-void OptionsDialog::disableSaveButtons()\n+void OptionsDialog::disableOkButton()\n {\n-    setSaveButtonState(false);\n+    setOkButtonState(false);\n }\n \n-void OptionsDialog::setSaveButtonState(bool fState)\n+void OptionsDialog::setOkButtonState(bool fState)\n {\n-    ui->applyButton->setEnabled(fState);\n     ui->okButton->setEnabled(fState);\n }\n \n@@ -192,24 +198,15 @@ void OptionsDialog::on_resetButton_clicked()\n     {\n         // confirmation dialog\n         QMessageBox::StandardButton btnRetVal = QMessageBox::question(this, tr(\"Confirm options reset\"),\n-            tr(\"Some settings may require a client restart to take effect.\") + \"<br><br>\" + tr(\"Do you want to proceed?\"),\n+            tr(\"Client restart required to activate changes.\") + \"<br><br>\" + tr(\"Client will be shutdown, do you want to proceed?\"),\n             QMessageBox::Yes | QMessageBox::Cancel, QMessageBox::Cancel);\n \n         if(btnRetVal == QMessageBox::Cancel)\n             return;\n \n-        disableApplyButton();\n-\n-        /* disable restart warning messages display */\n-        fRestartWarningDisplayed_Lang = fRestartWarningDisplayed_Proxy = true;\n-\n-        /* reset all options and save the default values (QSettings) */\n+        /* reset all options and close Bitcoin-Qt */\n         model->Reset();\n-        mapper->toFirst();\n-        mapper->submit();\n-\n-        /* re-enable restart warning messages display */\n-        fRestartWarningDisplayed_Lang = fRestartWarningDisplayed_Proxy = false;\n+        QApplication::quit();\n     }\n }\n \n@@ -224,28 +221,26 @@ void OptionsDialog::on_cancelButton_clicked()\n     reject();\n }\n \n-void OptionsDialog::on_applyButton_clicked()\n+void OptionsDialog::showRestartWarning(bool fPersistent)\n {\n-    mapper->submit();\n-    disableApplyButton();\n-}\n+    ui->statusLabel->setStyleSheet(\"QLabel { color: red; }\");\n \n-void OptionsDialog::showRestartWarning_Proxy()\n-{\n-    if(!fRestartWarningDisplayed_Proxy)\n+    if(fPersistent)\n+    {\n+        ui->statusLabel->setText(tr(\"Client restart required to activate changes.\"));\n+    }\n+    else\n     {\n-        QMessageBox::warning(this, tr(\"Warning\"), tr(\"This setting will take effect after restarting Bitcoin.\"), QMessageBox::Ok);\n-        fRestartWarningDisplayed_Proxy = true;\n+        ui->statusLabel->setText(tr(\"This change would require a client restart.\"));\n+        // clear non-persistent status label after 10 seconds\n+        // Todo: should perhaps be a class attribute, if we extend the use of statusLabel\n+        QTimer::singleShot(10000, this, SLOT(clearStatusLabel()));\n     }\n }\n \n-void OptionsDialog::showRestartWarning_Lang()\n+void OptionsDialog::clearStatusLabel()\n {\n-    if(!fRestartWarningDisplayed_Lang)\n-    {\n-        QMessageBox::warning(this, tr(\"Warning\"), tr(\"This setting will take effect after restarting Bitcoin.\"), QMessageBox::Ok);\n-        fRestartWarningDisplayed_Lang = true;\n-    }\n+    ui->statusLabel->clear();\n }\n \n void OptionsDialog::updateDisplayUnit()\n@@ -257,22 +252,25 @@ void OptionsDialog::updateDisplayUnit()\n     }\n }\n \n-void OptionsDialog::handleProxyIpValid(QValidatedLineEdit *object, bool fState)\n+void OptionsDialog::doProxyIpChecks(QValidatedLineEdit *pUiProxyIp, int nProxyPort)\n {\n-    // this is used in a check before re-enabling the save buttons\n-    fProxyIpValid = fState;\n+    Q_UNUSED(nProxyPort);\n \n-    if(fProxyIpValid)\n+    const std::string strAddrProxy = pUiProxyIp->text().toStdString();\n+    CService addrProxy;\n+\n+    /* Check for a valid IPv4 / IPv6 address */\n+    if (!(fProxyIpValid = LookupNumeric(strAddrProxy.c_str(), addrProxy)))\n     {\n-        enableSaveButtons();\n-        ui->statusLabel->clear();\n+        disableOkButton();\n+        pUiProxyIp->setValid(false);\n+        ui->statusLabel->setStyleSheet(\"QLabel { color: red; }\");\n+        ui->statusLabel->setText(tr(\"The supplied proxy address is invalid.\"));\n     }\n     else\n     {\n-        disableSaveButtons();\n-        object->setValid(fProxyIpValid);\n-        ui->statusLabel->setStyleSheet(\"QLabel { color: red; }\");\n-        ui->statusLabel->setText(tr(\"The supplied proxy address is invalid.\"));\n+        enableOkButton();\n+        ui->statusLabel->clear();\n     }\n }\n \n@@ -282,9 +280,7 @@ bool OptionsDialog::eventFilter(QObject *object, QEvent *event)\n     {\n         if(object == ui->proxyIp)\n         {\n-            CService addr;\n-            /* Check proxyIp for a valid IPv4/IPv6 address and emit the proxyIpValid signal */\n-            emit proxyIpValid(ui->proxyIp, LookupNumeric(ui->proxyIp->text().toStdString().c_str(), addr));\n+            emit proxyIpChecks(ui->proxyIp, ui->proxyPort->text().toInt());\n         }\n     }\n     return QDialog::eventFilter(object, event);"
      },
      {
        "sha": "6b62069660ff292ed66eae01b29b79842a4d6796",
        "filename": "src/qt/optionsdialog.h",
        "status": "modified",
        "additions": 10,
        "deletions": 17,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a036b796d13d6baabb60c432ba9fee046dd59490/src/qt/optionsdialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a036b796d13d6baabb60c432ba9fee046dd59490/src/qt/optionsdialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsdialog.h?ref=a036b796d13d6baabb60c432ba9fee046dd59490",
        "patch": "@@ -31,35 +31,28 @@ class OptionsDialog : public QDialog\n     bool eventFilter(QObject *object, QEvent *event);\n \n private slots:\n-    /* enable only apply button */\n-    void enableApplyButton();\n-    /* disable only apply button */\n-    void disableApplyButton();\n-    /* enable apply button and OK button */\n-    void enableSaveButtons();\n-    /* disable apply button and OK button */\n-    void disableSaveButtons();\n-    /* set apply button and OK button state (enabled / disabled) */\n-    void setSaveButtonState(bool fState);\n+    /* enable OK button */\n+    void enableOkButton();\n+    /* disable OK button */\n+    void disableOkButton();\n+    /* set OK button state (enabled / disabled) */\n+    void setOkButtonState(bool fState);\n     void on_resetButton_clicked();\n     void on_okButton_clicked();\n     void on_cancelButton_clicked();\n-    void on_applyButton_clicked();\n \n-    void showRestartWarning_Proxy();\n-    void showRestartWarning_Lang();\n+    void showRestartWarning(bool fPersistent = false);\n+    void clearStatusLabel();\n     void updateDisplayUnit();\n-    void handleProxyIpValid(QValidatedLineEdit *object, bool fState);\n+    void doProxyIpChecks(QValidatedLineEdit *pUiProxyIp, int nProxyPort);\n \n signals:\n-    void proxyIpValid(QValidatedLineEdit *object, bool fValid);\n+    void proxyIpChecks(QValidatedLineEdit *pUiProxyIp, int nProxyPort);\n \n private:\n     Ui::OptionsDialog *ui;\n     OptionsModel *model;\n     MonitoredDataMapper *mapper;\n-    bool fRestartWarningDisplayed_Proxy;\n-    bool fRestartWarningDisplayed_Lang;\n     bool fProxyIpValid;\n };\n "
      },
      {
        "sha": "c7817a94a8eeaaa62a62378820828a6976724d5b",
        "filename": "src/qt/optionsmodel.cpp",
        "status": "modified",
        "additions": 179,
        "deletions": 108,
        "changes": 287,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a036b796d13d6baabb60c432ba9fee046dd59490/src/qt/optionsmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a036b796d13d6baabb60c432ba9fee046dd59490/src/qt/optionsmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsmodel.cpp?ref=a036b796d13d6baabb60c432ba9fee046dd59490",
        "patch": "@@ -18,86 +18,122 @@\n #include \"walletdb.h\"\n \n #include <QSettings>\n+#include <QStringList>\n \n OptionsModel::OptionsModel(QObject *parent) :\n     QAbstractListModel(parent)\n {\n     Init();\n }\n \n-bool static ApplyProxySettings()\n-{\n-    QSettings settings;\n-    CService addrProxy(settings.value(\"addrProxy\", \"127.0.0.1:9050\").toString().toStdString());\n-    int nSocksVersion(settings.value(\"nSocksVersion\", 5).toInt());\n-    if (!settings.value(\"fUseProxy\", false).toBool()) {\n-        addrProxy = CService();\n-        nSocksVersion = 0;\n-        return false;\n-    }\n-    if (nSocksVersion && !addrProxy.IsValid())\n-        return false;\n-    if (!IsLimited(NET_IPV4))\n-        SetProxy(NET_IPV4, addrProxy, nSocksVersion);\n-    if (nSocksVersion > 4) {\n-#ifdef USE_IPV6\n-        if (!IsLimited(NET_IPV6))\n-            SetProxy(NET_IPV6, addrProxy, nSocksVersion);\n-#endif\n-        SetNameProxy(addrProxy, nSocksVersion);\n-    }\n-    return true;\n-}\n-\n+// Writes all missing QSettings with their default values\n void OptionsModel::Init()\n {\n     QSettings settings;\n \n+    // Ensure restart flag is unset on client startup\n+    setRestartRequired(false);\n+\n     // These are Qt-only settings:\n-    nDisplayUnit = settings.value(\"nDisplayUnit\", BitcoinUnits::BTC).toInt();\n+\n+    // Window\n+    if (!settings.contains(\"fMinimizeToTray\"))\n+        settings.setValue(\"fMinimizeToTray\", false);\n+    fMinimizeToTray = settings.value(\"fMinimizeToTray\").toBool();\n+\n+    if (!settings.contains(\"fMinimizeOnClose\"))\n+        settings.setValue(\"fMinimizeOnClose\", false);\n+    fMinimizeOnClose = settings.value(\"fMinimizeOnClose\").toBool();\n+\n+    // Display\n+    if (!settings.contains(\"nDisplayUnit\"))\n+        settings.setValue(\"nDisplayUnit\", BitcoinUnits::BTC);\n+    nDisplayUnit = settings.value(\"nDisplayUnit\").toInt();\n+\n+    if (!settings.contains(\"bDisplayAddresses\"))\n+        settings.setValue(\"bDisplayAddresses\", false);\n     bDisplayAddresses = settings.value(\"bDisplayAddresses\", false).toBool();\n-    fMinimizeToTray = settings.value(\"fMinimizeToTray\", false).toBool();\n-    fMinimizeOnClose = settings.value(\"fMinimizeOnClose\", false).toBool();\n-    nTransactionFee = settings.value(\"nTransactionFee\").toLongLong();\n-    language = settings.value(\"language\", \"\").toString();\n+\n+    if (!settings.contains(\"fCoinControlFeatures\"))\n+        settings.setValue(\"fCoinControlFeatures\", false);\n     fCoinControlFeatures = settings.value(\"fCoinControlFeatures\", false).toBool();\n \n-    // These are shared with core Bitcoin; we want\n-    // command-line options to override the GUI settings:\n-    if (settings.contains(\"fUseUPnP\"))\n-        SoftSetBoolArg(\"-upnp\", settings.value(\"fUseUPnP\").toBool());\n-    if (settings.contains(\"addrProxy\") && settings.value(\"fUseProxy\").toBool())\n-        SoftSetArg(\"-proxy\", settings.value(\"addrProxy\").toString().toStdString());\n-    if (settings.contains(\"nSocksVersion\") && settings.value(\"fUseProxy\").toBool())\n-        SoftSetArg(\"-socks\", settings.value(\"nSocksVersion\").toString().toStdString());\n-    if (!language.isEmpty())\n-        SoftSetArg(\"-lang\", language.toStdString());\n+    // These are shared with the core or have a command-line parameter\n+    // and we want command-line parameters to overwrite the GUI settings.\n+    //\n+    // If setting doesn't exist create it with defaults.\n+    //\n+    // If SoftSetArg() or SoftSetBoolArg() return false we were overridden\n+    // by command-line and show this in the UI.\n+\n+    // Main\n+    if (!settings.contains(\"nTransactionFee\"))\n+        settings.setValue(\"nTransactionFee\", 0);\n+\n+    if (!settings.contains(\"nDatabaseCache\"))\n+        settings.setValue(\"nDatabaseCache\", 25);\n+    if (!SoftSetArg(\"-dbcache\", settings.value(\"nDatabaseCache\").toString().toStdString()))\n+        strOverriddenByCommandLine += \"-dbcache \";\n+\n+    if (!settings.contains(\"nThreadsScriptVerif\"))\n+        settings.setValue(\"nThreadsScriptVerif\", 0);\n+    if (!SoftSetArg(\"-par\", settings.value(\"nThreadsScriptVerif\").toString().toStdString()))\n+        strOverriddenByCommandLine += \"-par \";\n+\n+    // Network\n+    if (!settings.contains(\"fUseUPnP\"))\n+#ifdef USE_UPNP\n+        settings.setValue(\"fUseUPnP\", true);\n+#else\n+        settings.setValue(\"fUseUPnP\", false);\n+#endif\t\n+    if (!SoftSetBoolArg(\"-upnp\", settings.value(\"fUseUPnP\").toBool()))\n+        strOverriddenByCommandLine += \"-upnp \";\n+\n+    if (!settings.contains(\"fUseProxy\"))\n+        settings.setValue(\"fUseProxy\", false);\n+    if (!settings.contains(\"addrProxy\"))\n+        settings.setValue(\"addrProxy\", \"127.0.0.1:9050\");\n+    // Only try to set -proxy, if user has enabled fUseProxy\n+    if (settings.value(\"fUseProxy\").toBool() && !SoftSetArg(\"-proxy\", settings.value(\"addrProxy\").toString().toStdString()))\n+        strOverriddenByCommandLine += \"-proxy \";\n+    if (!settings.contains(\"nSocksVersion\"))\n+        settings.setValue(\"nSocksVersion\", 5);\n+    // Only try to set -socks, if user has enabled fUseProxy\n+    if (settings.value(\"fUseProxy\").toBool() && !SoftSetArg(\"-socks\", settings.value(\"nSocksVersion\").toString().toStdString()))\n+        strOverriddenByCommandLine += \"-socks \";\n+\n+    // Display\n+    if (!settings.contains(\"language\"))\n+        settings.setValue(\"language\", \"\");\n+    if (!SoftSetArg(\"-lang\", settings.value(\"language\").toString().toStdString()))\n+        strOverriddenByCommandLine += \"-lang\";\n+\n+    language = settings.value(\"language\").toString();\n }\n \n void OptionsModel::Reset()\n {\n     QSettings settings;\n \n-    // Remove all entries in this QSettings object\n+    // Remove all entries from our QSettings object\n     settings.clear();\n \n     // default setting for OptionsModel::StartAtStartup - disabled\n     if (GUIUtil::GetStartOnSystemStartup())\n         GUIUtil::SetStartOnSystemStartup(false);\n \n-    // Re-Init to get default values\n-    Init();\n-\n     // Ensure Upgrade() is not running again by setting the bImportFinished flag\n     settings.setValue(\"bImportFinished\", true);\n }\n \n-bool OptionsModel::Upgrade()\n+void OptionsModel::Upgrade()\n {\n     QSettings settings;\n \n+    // Already upgraded\n     if (settings.contains(\"bImportFinished\"))\n-        return false; // Already upgraded\n+        return;\n \n     settings.setValue(\"bImportFinished\", true);\n \n@@ -145,18 +181,16 @@ bool OptionsModel::Upgrade()\n             walletdb.EraseSetting(\"addrProxy\");\n         }\n     }\n-    ApplyProxySettings();\n-    Init();\n \n-    return true;\n+    Init();\n }\n \n-\n int OptionsModel::rowCount(const QModelIndex & parent) const\n {\n     return OptionIDRowCount;\n }\n \n+// read QSettings values and return them\n QVariant OptionsModel::data(const QModelIndex & index, int role) const\n {\n     if(role == Qt::EditRole)\n@@ -165,59 +199,63 @@ QVariant OptionsModel::data(const QModelIndex & index, int role) const\n         switch(index.row())\n         {\n         case StartAtStartup:\n-            return QVariant(GUIUtil::GetStartOnSystemStartup());\n+            return GUIUtil::GetStartOnSystemStartup();\n         case MinimizeToTray:\n-            return QVariant(fMinimizeToTray);\n+            return fMinimizeToTray;\n         case MapPortUPnP:\n #ifdef USE_UPNP\n-            return settings.value(\"fUseUPnP\", GetBoolArg(\"-upnp\", true));\n+            return settings.value(\"fUseUPnP\");\n #else\n-            return QVariant(false);\n+            return false;\n #endif\n         case MinimizeOnClose:\n-            return QVariant(fMinimizeOnClose);\n-        case ProxyUse: {\n-            proxyType proxy;\n-            return QVariant(GetProxy(NET_IPV4, proxy));\n-        }\n+            return fMinimizeOnClose;\n+\n+        // default proxy\n+        case ProxyUse:\n+            return settings.value(\"fUseProxy\", false);\n         case ProxyIP: {\n-            proxyType proxy;\n-            if (GetProxy(NET_IPV4, proxy))\n-                return QVariant(QString::fromStdString(proxy.first.ToStringIP()));\n-            else\n-                return QVariant(QString::fromStdString(\"127.0.0.1\"));\n+            // contains IP at index 0 and port at index 1\n+            QStringList strlIpPort = settings.value(\"addrProxy\").toString().split(\":\", QString::SkipEmptyParts);\n+            return strlIpPort.at(0);\n         }\n         case ProxyPort: {\n-            proxyType proxy;\n-            if (GetProxy(NET_IPV4, proxy))\n-                return QVariant(proxy.first.GetPort());\n-            else\n-                return QVariant(9050);\n-        }\n-        case ProxySocksVersion: {\n-            proxyType proxy;\n-            if (GetProxy(NET_IPV4, proxy))\n-                return QVariant(proxy.second);\n-            else\n-                return QVariant(5);\n+            // contains IP at index 0 and port at index 1\n+            QStringList strlIpPort = settings.value(\"addrProxy\").toString().split(\":\", QString::SkipEmptyParts);\n+            return strlIpPort.at(1);\n         }\n+        case ProxySocksVersion:\n+            return settings.value(\"nSocksVersion\", 5);\n+\n         case Fee:\n-            return QVariant((qint64) nTransactionFee);\n+            // Attention: Init() is called before nTransactionFee is set in AppInit2()!\n+            // To ensure we can change the fee on-the-fly update our QSetting when\n+            // opening OptionsDialog, which queries Fee via the mapper.\n+            if (nTransactionFee != settings.value(\"nTransactionFee\").toLongLong())\n+                settings.setValue(\"nTransactionFee\", (qint64)nTransactionFee);\n+            // Todo: Consider to revert back to use just nTransactionFee here, if we don't want\n+            // -paytxfee to update our QSettings!\n+            return settings.value(\"nTransactionFee\");\n         case DisplayUnit:\n-            return QVariant(nDisplayUnit);\n+            return nDisplayUnit;\n         case DisplayAddresses:\n-            return QVariant(bDisplayAddresses);\n+            return bDisplayAddresses;\n         case Language:\n-            return settings.value(\"language\", \"\");\n+            return settings.value(\"language\");\n         case CoinControlFeatures:\n-            return QVariant(fCoinControlFeatures);\n+            return fCoinControlFeatures;\n+        case DatabaseCache:\n+            return settings.value(\"nDatabaseCache\");\n+        case ThreadsScriptVerif:\n+            return settings.value(\"nThreadsScriptVerif\");\n         default:\n             return QVariant();\n         }\n     }\n     return QVariant();\n }\n \n+// write QSettings values\n bool OptionsModel::setData(const QModelIndex & index, const QVariant & value, int role)\n {\n     bool successful = true; /* set to false on parse error */\n@@ -233,52 +271,58 @@ bool OptionsModel::setData(const QModelIndex & index, const QVariant & value, in\n             fMinimizeToTray = value.toBool();\n             settings.setValue(\"fMinimizeToTray\", fMinimizeToTray);\n             break;\n-        case MapPortUPnP:\n+        case MapPortUPnP: // core option - can be changed on-the-fly\n             settings.setValue(\"fUseUPnP\", value.toBool());\n             MapPort(value.toBool());\n             break;\n         case MinimizeOnClose:\n             fMinimizeOnClose = value.toBool();\n             settings.setValue(\"fMinimizeOnClose\", fMinimizeOnClose);\n             break;\n+\n+        // default proxy\n         case ProxyUse:\n-            settings.setValue(\"fUseProxy\", value.toBool());\n-            successful = ApplyProxySettings();\n+            if (settings.value(\"fUseProxy\") != value) {\n+                settings.setValue(\"fUseProxy\", value.toBool());\n+                setRestartRequired(true);\n+            }\n             break;\n         case ProxyIP: {\n-            proxyType proxy;\n-            proxy.first = CService(\"127.0.0.1\", 9050);\n-            GetProxy(NET_IPV4, proxy);\n-\n-            CNetAddr addr(value.toString().toStdString());\n-            proxy.first.SetIP(addr);\n-            settings.setValue(\"addrProxy\", proxy.first.ToStringIPPort().c_str());\n-            successful = ApplyProxySettings();\n+            // contains current IP at index 0 and current port at index 1\n+            QStringList strlIpPort = settings.value(\"addrProxy\").toString().split(\":\", QString::SkipEmptyParts);\n+            // if that key doesn't exist or has a changed IP\n+            if (!settings.contains(\"addrProxy\") || strlIpPort.at(0) != value.toString()) {\n+                // construct new value from new IP and current port\n+                QString strNewValue = value.toString() + \":\" + strlIpPort.at(1);\n+                settings.setValue(\"addrProxy\", strNewValue);\n+                setRestartRequired(true);\n+            }\n         }\n         break;\n         case ProxyPort: {\n-            proxyType proxy;\n-            proxy.first = CService(\"127.0.0.1\", 9050);\n-            GetProxy(NET_IPV4, proxy);\n-\n-            proxy.first.SetPort(value.toInt());\n-            settings.setValue(\"addrProxy\", proxy.first.ToStringIPPort().c_str());\n-            successful = ApplyProxySettings();\n+            // contains current IP at index 0 and current port at index 1\n+            QStringList strlIpPort = settings.value(\"addrProxy\").toString().split(\":\", QString::SkipEmptyParts);\n+            // if that key doesn't exist or has a changed port\n+            if (!settings.contains(\"addrProxy\") || strlIpPort.at(1) != value.toString()) {\n+                // construct new value from current IP and new port\n+                QString strNewValue = strlIpPort.at(0) + \":\" + value.toString();\n+                settings.setValue(\"addrProxy\", strNewValue);\n+                setRestartRequired(true);\n+            }\n         }\n         break;\n         case ProxySocksVersion: {\n-            proxyType proxy;\n-            proxy.second = 5;\n-            GetProxy(NET_IPV4, proxy);\n-\n-            proxy.second = value.toInt();\n-            settings.setValue(\"nSocksVersion\", proxy.second);\n-            successful = ApplyProxySettings();\n+            if (settings.value(\"nSocksVersion\") != value) {\n+                settings.setValue(\"nSocksVersion\", value.toInt());\n+                setRestartRequired(true);\n+            }\n         }\n         break;\n-        case Fee:\n+\n+        case Fee: // core option - can be changed on-the-fly\n+            // Todo: Add is valid check  and warn via message, if not\n             nTransactionFee = value.toLongLong();\n-            settings.setValue(\"nTransactionFee\", (qint64) nTransactionFee);\n+            settings.setValue(\"nTransactionFee\", (qint64)nTransactionFee);\n             emit transactionFeeChanged(nTransactionFee);\n             break;\n         case DisplayUnit:\n@@ -291,13 +335,28 @@ bool OptionsModel::setData(const QModelIndex & index, const QVariant & value, in\n             settings.setValue(\"bDisplayAddresses\", bDisplayAddresses);\n             break;\n         case Language:\n-            settings.setValue(\"language\", value);\n+            if (settings.value(\"language\") != value) {\n+                settings.setValue(\"language\", value);\n+                setRestartRequired(true);\n+            }\n             break;\n         case CoinControlFeatures:\n             fCoinControlFeatures = value.toBool();\n             settings.setValue(\"fCoinControlFeatures\", fCoinControlFeatures);\n             emit coinControlFeaturesChanged(fCoinControlFeatures);\n             break;\n+        case DatabaseCache:\n+            if (settings.value(\"nDatabaseCache\") != value) {\n+                settings.setValue(\"nDatabaseCache\", value);\n+                setRestartRequired(true);\n+            }\n+            break;\n+        case ThreadsScriptVerif:\n+            if (settings.value(\"nThreadsScriptVerif\") != value) {\n+                settings.setValue(\"nThreadsScriptVerif\", value);\n+                setRestartRequired(true);\n+            }\n+            break;\n         default:\n             break;\n         }\n@@ -317,3 +376,15 @@ bool OptionsModel::getProxySettings(QString& proxyIP, quint16 &proxyPort) const\n     proxyPort = addrProxy.GetPort();\n     return true;\n }\n+\n+void OptionsModel::setRestartRequired(bool fRequired)\n+{\n+    QSettings settings;\n+    return settings.setValue(\"fRestartRequired\", fRequired);\n+}\n+\n+bool OptionsModel::isRestartRequired()\n+{\n+    QSettings settings;\n+    return settings.value(\"fRestartRequired\", false).toBool();\n+}"
      },
      {
        "sha": "d05cb46746075ff8b0166884d135d7271c5a1e9d",
        "filename": "src/qt/optionsmodel.h",
        "status": "modified",
        "additions": 13,
        "deletions": 4,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a036b796d13d6baabb60c432ba9fee046dd59490/src/qt/optionsmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a036b796d13d6baabb60c432ba9fee046dd59490/src/qt/optionsmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsmodel.h?ref=a036b796d13d6baabb60c432ba9fee046dd59490",
        "patch": "@@ -34,14 +34,16 @@ class OptionsModel : public QAbstractListModel\n         DisplayAddresses,       // bool\n         Language,               // QString\n         CoinControlFeatures,    // bool\n+        ThreadsScriptVerif,     // int\n+        DatabaseCache,          // int\n         OptionIDRowCount,\n     };\n \n     void Init();\n     void Reset();\n \n     /* Migrate settings from wallet.dat after app initialization */\n-    bool Upgrade(); /* returns true if settings upgraded */\n+    void Upgrade();\n \n     int rowCount(const QModelIndex & parent = QModelIndex()) const;\n     QVariant data(const QModelIndex & index, int role = Qt::DisplayRole) const;\n@@ -52,17 +54,24 @@ class OptionsModel : public QAbstractListModel\n     bool getMinimizeOnClose() { return fMinimizeOnClose; }\n     int getDisplayUnit() { return nDisplayUnit; }\n     bool getDisplayAddresses() { return bDisplayAddresses; }\n-    QString getLanguage() { return language; }\n     bool getProxySettings(QString& proxyIP, quint16 &proxyPort) const;\n     bool getCoinControlFeatures() { return fCoinControlFeatures; }\n+    const QString& getOverriddenByCommandLine() { return strOverriddenByCommandLine; }\n+\n+    /* Restart flag helper */\n+    void setRestartRequired(bool fRequired);\n+    bool isRestartRequired();\n \n private:\n-    int nDisplayUnit;\n-    bool bDisplayAddresses;\n+    /* Qt-only settings */\n     bool fMinimizeToTray;\n     bool fMinimizeOnClose;\n     QString language;\n+    int nDisplayUnit;\n+    bool bDisplayAddresses;\n     bool fCoinControlFeatures;\n+    /* settings that were overriden by command-line */\n+    QString strOverriddenByCommandLine;\n \n signals:\n     void displayUnitChanged(int unit);"
      }
    ]
  },
  {
    "sha": "f5e9d983c02227813efec32a53c3166cb7ca50c5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmNWU5ZDk4M2MwMjIyNzgxM2VmZWMzMmE1M2MzMTY2Y2I3Y2E1MGM1",
    "commit": {
      "author": {
        "name": "Michael Ford",
        "email": "fanquake@gmail.com",
        "date": "2014-01-10T12:16:57Z"
      },
      "committer": {
        "name": "Michael Ford",
        "email": "fanquake@gmail.com",
        "date": "2014-01-10T12:16:57Z"
      },
      "message": "Add missing MacPorts dependencies to osx build docs",
      "tree": {
        "sha": "57c983e44030db01b2cb88fccedf874cf76ebae1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/57c983e44030db01b2cb88fccedf874cf76ebae1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f5e9d983c02227813efec32a53c3166cb7ca50c5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f5e9d983c02227813efec32a53c3166cb7ca50c5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f5e9d983c02227813efec32a53c3166cb7ca50c5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f5e9d983c02227813efec32a53c3166cb7ca50c5/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a036b796d13d6baabb60c432ba9fee046dd59490",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a036b796d13d6baabb60c432ba9fee046dd59490",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a036b796d13d6baabb60c432ba9fee046dd59490"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "a9a78b374b0b3371812398baee329b1bbaeb050d",
        "filename": "doc/build-osx.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f5e9d983c02227813efec32a53c3166cb7ca50c5/doc/build-osx.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f5e9d983c02227813efec32a53c3166cb7ca50c5/doc/build-osx.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-osx.md?ref=f5e9d983c02227813efec32a53c3166cb7ca50c5",
        "patch": "@@ -45,7 +45,7 @@ Instructions: MacPorts\n \n Installing the dependencies using MacPorts is very straightforward.\n \n-    sudo port install boost db48@+no_java openssl miniupnpc\n+    sudo port install boost db48@+no_java openssl miniupnpc autoconf pkgconfig\n \n ### Building `bitcoind`\n "
      }
    ]
  },
  {
    "sha": "62e9d774966c9f4344f0356c59ddadcc5ff17212",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2MmU5ZDc3NDk2NmM5ZjQzNDRmMDM1NmM1OWRkYWRjYzVmZjE3MjEy",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-10T12:22:51Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-10T12:22:58Z"
      },
      "message": "Merge pull request #3506\n\nf5e9d98 Add missing MacPorts dependencies to osx build docs (Michael Ford)",
      "tree": {
        "sha": "57c983e44030db01b2cb88fccedf874cf76ebae1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/57c983e44030db01b2cb88fccedf874cf76ebae1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/62e9d774966c9f4344f0356c59ddadcc5ff17212",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJSz+YiAAoJEHSBCwEjRsmmXuQIAM3y+ISnmPBaplf0gHgp4RGg\no2BIzxYUGXYsgsAFg+hC3Otd8B8+w+lWZhHirKwb8fudZQ5AZNStfPCz5U7O0yIh\n2I9XtkrpsmSURHWCDGkgnPJkMxB4Faqcpmb3cTVdmZ0oojAeDuCR7S4yKKR6S4x2\n+YKOn6xuveWpS9y2Py8s1Rj5ATIDckelGO+6w8AQkrZyeoq0yRXa/b+bdbsY56je\n1fom5XZ8bz0uAZ0e4//qjpvjRo0M9bD7ttYCYf1lQfFLd9GkoAq4UWw4mKJaROVq\nVLPAHvE8C3zbnPw+RQBOnTTeGvlQHR2Kw8CS74MCYv7aKow3Rkim1rhdEjPbKCg=\n=0kGe\n-----END PGP SIGNATURE-----",
        "payload": "tree 57c983e44030db01b2cb88fccedf874cf76ebae1\nparent a036b796d13d6baabb60c432ba9fee046dd59490\nparent f5e9d983c02227813efec32a53c3166cb7ca50c5\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1389356571 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1389356578 +0100\n\nMerge pull request #3506\n\nf5e9d98 Add missing MacPorts dependencies to osx build docs (Michael Ford)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/62e9d774966c9f4344f0356c59ddadcc5ff17212",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/62e9d774966c9f4344f0356c59ddadcc5ff17212",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/62e9d774966c9f4344f0356c59ddadcc5ff17212/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a036b796d13d6baabb60c432ba9fee046dd59490",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a036b796d13d6baabb60c432ba9fee046dd59490",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a036b796d13d6baabb60c432ba9fee046dd59490"
      },
      {
        "sha": "f5e9d983c02227813efec32a53c3166cb7ca50c5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f5e9d983c02227813efec32a53c3166cb7ca50c5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f5e9d983c02227813efec32a53c3166cb7ca50c5"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "a9a78b374b0b3371812398baee329b1bbaeb050d",
        "filename": "doc/build-osx.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62e9d774966c9f4344f0356c59ddadcc5ff17212/doc/build-osx.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62e9d774966c9f4344f0356c59ddadcc5ff17212/doc/build-osx.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-osx.md?ref=62e9d774966c9f4344f0356c59ddadcc5ff17212",
        "patch": "@@ -45,7 +45,7 @@ Instructions: MacPorts\n \n Installing the dependencies using MacPorts is very straightforward.\n \n-    sudo port install boost db48@+no_java openssl miniupnpc\n+    sudo port install boost db48@+no_java openssl miniupnpc autoconf pkgconfig\n \n ### Building `bitcoind`\n "
      }
    ]
  },
  {
    "sha": "328bdb1cd63a46af3bcc1431ffa24dd8fe3125e7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozMjhiZGIxY2Q2M2E0NmFmM2JjYzE0MzFmZmEyNGRkOGZlMzEyNWU3",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2013-12-18T19:08:24Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2014-01-10T21:30:33Z"
      },
      "message": "qt5: Ensure correct link order\n\nIf optional libs don't appear in QT_LIBS, they need to be listed first for\nproper static linking.",
      "tree": {
        "sha": "10771e9953c288ace4b653801d0345b932da3462",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/10771e9953c288ace4b653801d0345b932da3462"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/328bdb1cd63a46af3bcc1431ffa24dd8fe3125e7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/328bdb1cd63a46af3bcc1431ffa24dd8fe3125e7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/328bdb1cd63a46af3bcc1431ffa24dd8fe3125e7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/328bdb1cd63a46af3bcc1431ffa24dd8fe3125e7/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "62e9d774966c9f4344f0356c59ddadcc5ff17212",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/62e9d774966c9f4344f0356c59ddadcc5ff17212",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/62e9d774966c9f4344f0356c59ddadcc5ff17212"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "01505243377679fa9f7b155c60b8c9f82bb081f4",
        "filename": "src/qt/test/Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/328bdb1cd63a46af3bcc1431ffa24dd8fe3125e7/src/qt/test/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/328bdb1cd63a46af3bcc1431ffa24dd8fe3125e7/src/qt/test/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/Makefile.am?ref=328bdb1cd63a46af3bcc1431ffa24dd8fe3125e7",
        "patch": "@@ -18,7 +18,7 @@ test_bitcoin_qt_CPPFLAGS = $(AM_CPPFLAGS) $(QT_INCLUDES) $(QT_TEST_INCLUDES)\n test_bitcoin_qt_SOURCES = test_main.cpp uritests.cpp paymentservertests.cpp $(TEST_QT_H)\n nodist_test_bitcoin_qt_SOURCES = $(TEST_QT_MOC_CPP)\n test_bitcoin_qt_LDADD = $(LIBBITCOINQT) $(LIBBITCOIN_SERVER) $(LIBBITCOIN_WALLET) $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBLEVELDB) \\\n-  $(LIBMEMENV) $(BOOST_LIBS) $(QT_LIBS) $(QT_DBUS_LIBS) $(QT_TEST_LIBS) \\\n+  $(LIBMEMENV) $(BOOST_LIBS) $(QT_DBUS_LIBS) $(QT_TEST_LIBS) $(QT_LIBS) \\\n   $(QR_LIBS) $(PROTOBUF_LIBS) $(BDB_LIBS)\n \n CLEANFILES = $(BUILT_SOURCES) *.gcda *.gcno"
      }
    ]
  },
  {
    "sha": "c614bd718b91ec5560a14ca85bffa5e9a3e78b84",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNjE0YmQ3MThiOTFlYzU1NjBhMTRjYTg1YmZmYTVlOWEzZTc4Yjg0",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2013-12-19T01:29:24Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2014-01-10T21:30:33Z"
      },
      "message": "qt5: fix a build issue with osx and qtdbus\n\nSee comment in notificator.cpp for details.",
      "tree": {
        "sha": "56e2a4ce521369c1097d36ae3c15f656e96f3bf0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/56e2a4ce521369c1097d36ae3c15f656e96f3bf0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c614bd718b91ec5560a14ca85bffa5e9a3e78b84",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c614bd718b91ec5560a14ca85bffa5e9a3e78b84",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c614bd718b91ec5560a14ca85bffa5e9a3e78b84",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c614bd718b91ec5560a14ca85bffa5e9a3e78b84/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "328bdb1cd63a46af3bcc1431ffa24dd8fe3125e7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/328bdb1cd63a46af3bcc1431ffa24dd8fe3125e7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/328bdb1cd63a46af3bcc1431ffa24dd8fe3125e7"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 8,
      "deletions": 8
    },
    "files": [
      {
        "sha": "38a029dbe5b435688873b9ec92362756be4276cd",
        "filename": "src/qt/notificator.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c614bd718b91ec5560a14ca85bffa5e9a3e78b84/src/qt/notificator.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c614bd718b91ec5560a14ca85bffa5e9a3e78b84/src/qt/notificator.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/notificator.cpp?ref=c614bd718b91ec5560a14ca85bffa5e9a3e78b84",
        "patch": "@@ -14,18 +14,18 @@\n #include <QSystemTrayIcon>\n #include <QTemporaryFile>\n #include <QVariant>\n-\n-#ifdef Q_OS_MAC\n-#include \"macnotificationhandler.h\"\n-\n-#include <ApplicationServices/ApplicationServices.h>\n-#endif\n-\n #ifdef USE_DBUS\n #include <stdint.h>\n-\n #include <QtDBus>\n #endif\n+// Include ApplicationServices.h after QtDbus to avoid redefinition of check().\n+// This affects at least OSX 10.6. See /usr/include/AssertMacros.h for details.\n+// Note: This could also be worked around using:\n+// #define __ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES 0\n+#ifdef Q_OS_MAC\n+#include <ApplicationServices/ApplicationServices.h>\n+#include \"macnotificationhandler.h\"\n+#endif\n \n \n // https://wiki.ubuntu.com/NotificationDevelopmentGuidelines recommends at least 128"
      }
    ]
  },
  {
    "sha": "c8ba8ef65459e5db0cb787c39091c45914bbb2fb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjOGJhOGVmNjU0NTllNWRiMGNiNzg3YzM5MDkxYzQ1OTE0YmJiMmZi",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2013-12-13T20:19:02Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2014-01-10T21:30:33Z"
      },
      "message": "qt5: split out qt config and add qt5 support\n\nQt5 detection is a big ugly mess, but at least we can fence it off.",
      "tree": {
        "sha": "f3f684d9a30b11f160cbc266c754917f4eb2a1a2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f3f684d9a30b11f160cbc266c754917f4eb2a1a2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c8ba8ef65459e5db0cb787c39091c45914bbb2fb",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c8ba8ef65459e5db0cb787c39091c45914bbb2fb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c8ba8ef65459e5db0cb787c39091c45914bbb2fb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c8ba8ef65459e5db0cb787c39091c45914bbb2fb/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c614bd718b91ec5560a14ca85bffa5e9a3e78b84",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c614bd718b91ec5560a14ca85bffa5e9a3e78b84",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c614bd718b91ec5560a14ca85bffa5e9a3e78b84"
      }
    ],
    "stats": {
      "total": 596,
      "additions": 405,
      "deletions": 191
    },
    "files": [
      {
        "sha": "3c7d4db4af78fd70500be61451a8f1b15b786598",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 31,
        "deletions": 191,
        "changes": 222,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c8ba8ef65459e5db0cb787c39091c45914bbb2fb/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c8ba8ef65459e5db0cb787c39091c45914bbb2fb/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=c8ba8ef65459e5db0cb787c39091c45914bbb2fb",
        "patch": "@@ -63,38 +63,6 @@ AC_ARG_ENABLE([ipv6],\n   [use_ipv6=$enableval],\n   [use_ipv6=yes])\n \n-dnl enable qt support\n-AC_ARG_WITH([qt],\n-  [AS_HELP_STRING([--with-qt],\n-  [enable qt (default is yes)])],\n-  [use_qt=$withval],\n-  [use_qt=auto])\n-AC_DEFUN([BITCOIN_QT_FAIL],[\n-  if test \"x$use_qt\" = \"xauto\"; then\n-    AC_MSG_WARN([$1; bitcoin-qt frontend will not be built])\n-    use_qt=no\n-  else\n-    AC_MSG_ERROR([$1])\n-  fi\n-])\n-AC_DEFUN([BITCOIN_QT_CHECK],[\n-  if test \"x$use_qt\" != \"xno\"; then\n-    true\n-    $1\n-  else\n-    true\n-    $2\n-  fi\n-])\n-AC_DEFUN([BITCOIN_QT_PATH_PROGS],[\n-  BITCOIN_QT_CHECK([\n-    AC_PATH_PROGS($1,$2,$3,$4)\n-    if test \"x$$1\" = \"x\"; then\n-      BITCOIN_QT_FAIL([$1 not found])\n-    fi\n-  ])\n-])\n-\n AC_ARG_ENABLE(tests,\n     AS_HELP_STRING([--enable-tests],[compile tests (default is yes)]),\n     [use_tests=$enableval],\n@@ -116,12 +84,6 @@ AC_ARG_WITH([qrencode],\n   [use_qr=$withval],\n   [use_qr=auto])\n \n-AC_ARG_WITH([qtdbus],\n-  [AS_HELP_STRING([--with-qtdbus],\n-  [enable DBus support (default is yes if qt is enabled and QtDBus is found)])],\n-  [use_dbus=$withval],\n-  [use_dbus=auto])\n-\n AC_ARG_ENABLE([hardening],\n   [AS_HELP_STRING([--enable-hardening],\n   [attempt to harden the resulting executables (default is yes)])],\n@@ -140,10 +102,6 @@ AC_ARG_ENABLE([lcov],\n   [use_lcov=yes],\n   [use_lcov=no])\n \n-AC_ARG_WITH([qt-incdir],[AS_HELP_STRING([--with-qt-incdir=INC_DIR],[specify qt include path (overridden by pkgconfig)])], [qt_include_path=$withval], [])\n-AC_ARG_WITH([qt-libdir],[AS_HELP_STRING([--with-qt-libdir=LIB_DIR],[specify qt lib path (overridden by pkgconfig)])], [qt_lib_path=$withval], [])\n-AC_ARG_WITH([qt-bindir],[AS_HELP_STRING([--with-qt-bindir=BIN_DIR],[specify qt bin path])], [qt_bin_path=$withval], [])\n-AC_ARG_WITH([qt-plugindir],[AS_HELP_STRING([--with-qt-plugindir=PLUGIN_DIR],[specify qt plugin path (overridden by pkgconfig)])], [qt_plugin_path=$withval], [])\n AC_ARG_WITH([protoc-bindir],[AS_HELP_STRING([--with-protoc-bindir=BIN_DIR],[specify protoc bin path])], [protoc_bin_path=$withval], [])\n \n \n@@ -168,13 +126,7 @@ AC_PATH_PROG(LCOV, lcov)\n AC_PATH_PROG(JAVA, java)\n AC_PATH_PROG(GENHTML, genhtml)\n AC_PATH_PROG([GIT], [git])\n-BITCOIN_QT_PATH_PROGS([MOC], [moc-qt4 moc4 moc],, $qt_bin_path:$PATH)\n-BITCOIN_QT_PATH_PROGS([UIC], [uic-qt4 uic4 uic],, $qt_bin_path:$PATH)\n-BITCOIN_QT_PATH_PROGS([RCC], [rcc-qt4 rcc4 rcc],, $qt_bin_path:$PATH)\n-BITCOIN_QT_PATH_PROGS([LRELEASE], [lrelease-qt4 lrelease4 lrelease],, $qt_bin_path:$PATH)\n-BITCOIN_QT_PATH_PROGS([PROTOC], [protoc],, $protoc_bin_path:$PATH)\n AC_PATH_PROG(CCACHE,ccache)\n-AC_PATH_PROGS([LUPDATE], [lupdate-qt4 lupdate4 lupdate],, $qt_bin_path:$PATH)\n AC_PATH_PROG(XGETTEXT,xgettext)\n AC_PATH_PROG(HEXDUMP,hexdump)\n PKG_PROG_PKG_CONFIG\n@@ -254,12 +206,6 @@ case $host in\n        fi\n      fi\n \n-     BITCOIN_QT_CHECK([\n-       MOC_DEFS=\"-DQ_OS_MAC\"\n-       base_frameworks=\"-framework Foundation -framework ApplicationServices -framework AppKit\"\n-       AX_CHECK_LINK_FLAG([[$base_frameworks]],[LIBS=\"$LIBS $base_frameworks\"],[AC_MSG_ERROR(could not find base frameworks)])\n-     ])\n-\n      CPPFLAGS=\"$CPPFLAGS -DMAC_OSX\"\n      TESTDEFS=\"-DBOOST_TEST_DYN_LINK\"\n      ;;\n@@ -452,6 +398,8 @@ if test x$boost_sleep != xyes; then\n   AC_MSG_ERROR(No working boost sleep implementation found)\n fi\n \n+BITCOIN_QT_INIT\n+\n if test x$use_pkgconfig = xyes; then\n \n   if test x$PKG_CONFIG == x; then\n@@ -464,23 +412,10 @@ if test x$use_pkgconfig = xyes; then\n     [\n       PKG_CHECK_MODULES([SSL], [libssl], [INCLUDES=\"$INCLUDES $SSL_CFLAGS\"; LIBS=\"$LIBS $SSL_LIBS\"], [AC_MSG_ERROR(openssl  not found.)])\n       PKG_CHECK_MODULES([CRYPTO], [libcrypto], [INCLUDES=\"$INCLUDES $CRYPTO_CFLAGS\"; LIBS=\"$LIBS $CRYPTO_LIBS\"], [AC_MSG_ERROR(libcrypto  not found.)])\n-\n-      BITCOIN_QT_CHECK([\n-        PKG_CHECK_MODULES([QT], [QtCore QtGui QtNetwork], [QT_INCLUDES=\"$QT_CFLAGS\"; have_qt=yes],[\n-          have_qt=no\n-          BITCOIN_QT_FAIL([Qt dependencies not found])\n-        ])\n-        if test x$use_tests = xyes; then\n-          PKG_CHECK_MODULES([QT_TEST], [QtTest], [QT_TEST_INCLUDES=\"$QT_TEST_CFLAGS\"; have_qt_test=yes], [have_qt_test=no])\n-        fi\n-        if test x$use_dbus != xno; then\n-          PKG_CHECK_MODULES([QT_DBUS], [QtDBus], [QT_DBUS_INCLUDES=\"$QT_DBUS_CFLAGS\"; have_qt_dbus=yes], [have_qt_dbus=no])\n-        fi\n-        if test x$use_qr != xno; then\n-          PKG_CHECK_MODULES([QR], [libqrencode], [have_qrencode=yes], [have_qrencode=no])\n-        fi\n-        PKG_CHECK_MODULES([PROTOBUF], [protobuf], [have_protobuf=yes], [AC_MSG_ERROR(libprotobuf not found.)])\n-      ])\n+      BITCOIN_QT_CHECK([PKG_CHECK_MODULES([PROTOBUF], [protobuf], [have_protobuf=yes], [BITCOIN_QT_FAIL(libprotobuf not found)])])\n+      if test x$use_qr != xno; then\n+        BITCOIN_QT_CHECK([PKG_CHECK_MODULES([QR], [libqrencode], [have_qrencode=yes], [have_qrencode=no])])\n+      fi\n     ]\n   )\n else\n@@ -490,81 +425,18 @@ else\n   AC_CHECK_HEADER([openssl/ssl.h],, AC_MSG_ERROR(libssl headers missing),)\n   AC_CHECK_LIB([ssl],         [main],, AC_MSG_ERROR(libssl missing))\n \n-  BITCOIN_QT_CHECK([\n-    TEMP_LIBS=\"$LIBS\"\n-    LIBS=\n-    if test x$qt_lib_path != x; then\n-      QT_LIBS=\"$QT_LIBS -L$qt_lib_path\"\n-      LIBS=\"$QT_LIBS\"\n-    fi\n-    if test x$qt_plugin_path != x; then\n-      QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/codecs\"\n-      LIBS=\"$QT_LIBS\"\n-    fi\n-\n-    if test x$TARGET_OS == xwindows; then\n-      AC_CHECK_LIB([imm32],      [main],, BITCOIN_QT_FAIL(libimm32 not found))\n-    fi\n-  ])\n-\n-    #TODO: These are only needed when they're linked directly to parent libs. It really has nothing to do with windows.\n-    #Instead, check for missing functions in parent libs and assume static if they're absent.\n-    if test x$TARGET_OS == xwindows; then\n-      BITCOIN_QT_CHECK(AC_CHECK_LIB([qcncodecs],[main],,BITCOIN_QT_FAIL(libqcncodecs not found)))\n-      BITCOIN_QT_CHECK(AC_CHECK_LIB([qjpcodecs],[main],,BITCOIN_QT_FAIL(libqjpcodecs not found)))\n-      BITCOIN_QT_CHECK(AC_CHECK_LIB([qkrcodecs],[main],,BITCOIN_QT_FAIL(libqkrcodecs not found)))\n-      BITCOIN_QT_CHECK(AC_CHECK_LIB([qtwcodecs],[main],,BITCOIN_QT_FAIL(libqtwcodecs not found)))\n-    fi\n+  BITCOIN_QT_CHECK(AC_CHECK_LIB([protobuf] ,[main],,BITCOIN_QT_FAIL(libprotobuf not found)))\n+  if test x$use_qr != xno; then\n+    BITCOIN_QT_CHECK([AC_CHECK_LIB([qrencode], [main],, [have_qrencode=no])])\n+    BITCOIN_QT_CHECK([AC_CHECK_HEADER([qrencode.h],, have_qrencode=no)])\n+  fi\n+fi\n \n-    BITCOIN_QT_CHECK(AC_CHECK_LIB([QtCore]   ,[main],,BITCOIN_QT_FAIL(libQtCore not found)))\n-    BITCOIN_QT_CHECK(AC_CHECK_LIB([QtGui]    ,[main],,BITCOIN_QT_FAIL(libQtGui not found)))\n-    BITCOIN_QT_CHECK(AC_CHECK_LIB([QtNetwork],[main],,BITCOIN_QT_FAIL(libQtNetwork not found)))\n-    BITCOIN_QT_CHECK(AC_CHECK_LIB([protobuf] ,[main],,BITCOIN_QT_FAIL(libprotobuf not found)))\n+BITCOIN_QT_PATH_PROGS([PROTOC], [protoc],$protoc_bin_path)\n \n-  BITCOIN_QT_CHECK([\n-    QT_LIBS=\"$LIBS\"\n-    LIBS=\"$TEMP_LIBS\"\n+dnl sets $bitcoin_enable_qt, $bitcoin_enable_qt_test, $bitcoin_enable_qt_dbus\n+BITCOIN_QT_CONFIGURE([$use_pkgconfig], [qt4])\n \n-    TEMP_CPPFLAGS=\"$CPPFLAGS\"\n-    if test x$qt_include_path != x; then\n-      QT_INCLUDES=\"-I$qt_include_path -I$qt_include_path/QtCore -I$qt_include_path/QtGui -I$qt_include_path/QtNetwork -I$qt_include_path/QtTest -I$qt_include_path/QtDBus\"\n-      CPPFLAGS=\"$CPPFLAGS $QT_INCLUDES\"\n-    fi\n-  ])\n-    BITCOIN_QT_CHECK([AC_CHECK_HEADER([QtPlugin],,BITCOIN_QT_FAIL(QtCore headers missing))])\n-    BITCOIN_QT_CHECK([AC_CHECK_HEADER([QApplication],, BITCOIN_QT_FAIL(QtGui headers missing))])\n-    BITCOIN_QT_CHECK([AC_CHECK_HEADER([QLocalSocket],, BITCOIN_QT_FAIL(QtNetwork headers missing))])\n-\n-  BITCOIN_QT_CHECK([\n-    if test x$use_tests = xyes; then\n-      TEMP_LIBS=\"$LIBS\"\n-      LIBS=\n-      if test x$qt_lib_path != x; then\n-        LIBS=\"-L$qt_lib_path\"\n-      fi\n-      AC_CHECK_LIB([QtTest],      [main],, have_qt_test=no)\n-      AC_CHECK_HEADER([QTest],, have_qt_test=no)\n-      QT_TEST_LIBS=\"$LIBS\"\n-      LIBS=\"$TEMP_LIBS\"\n-    fi\n-    if test x$use_dbus != xno; then\n-      TEMP_LIBS=\"$LIBS\"\n-      LIBS=\n-      if test x$qt_lib_path != x; then\n-        LIBS=\"-L$qt_lib_path\"\n-      fi\n-      AC_CHECK_LIB([QtDBus],      [main],, have_qt_dbus=no)\n-      AC_CHECK_HEADER([QtDBus],, have_qt_dbus=no)\n-      QT_DBUS_LIBS=\"$LIBS\"\n-      LIBS=\"$TEMP_LIBS\"\n-    fi\n-    CPPFLAGS=\"$TEMP_CPPFLAGS\"\n-    if test x$use_qr != xno; then\n-      AC_CHECK_LIB([qrencode], [main],, [have_qrencode=no])\n-      AC_CHECK_HEADER([qrencode.h],, have_qrencode=no)\n-    fi\n-  ])\n-fi\n \n if test x$use_ipv6 = xyes; then\n   dnl Check for ipv6 build requirements\n@@ -613,10 +485,6 @@ if test x$enable_wallet != xno; then\n \n else\n   AC_MSG_RESULT(no)\n-\n-  if test \"x$use_qt\" != \"xno\"; then\n-    AC_MSG_ERROR([Cannot currently build Qt GUI with wallet disabled. Use --without-qt.])\n-  fi\n fi\n \n dnl enable ipv6 support\n@@ -662,46 +530,15 @@ else\n   fi\n fi\n \n-dnl enable qt support\n-AC_MSG_CHECKING([if qt should be enabled])\n-BITCOIN_QT_CHECK([\n-  use_qt=yes\n-  BUILD_QT=qt\n-  if test x$use_tests = xyes; then\n-    if test x$have_qt_test = xno; then\n-      AC_MSG_ERROR(\"libQtTest not found. Use --disable-tests or --without-qt.\")\n-    fi\n-  fi\n-  if test x$have_qt_dbus = xno;  then\n-    if test x$use_dbus = xyes; then\n-      AC_MSG_ERROR(\"libQtDBus not found. Install libQtDBus or remove --with-qtdbus.\")\n-    fi\n-    use_dbus=no\n-  fi\n-  if test x$XGETTEXT == x; then\n-    AC_MSG_WARN(\"xgettext is required to update qt translations\")\n-  fi\n-  if test x$LUPDATE == x; then\n-    AC_MSG_WARN(\"lupdate is required to update qt translations\")\n-  fi\n-],[\n-  use_qt=no\n-])\n-\n-AC_MSG_RESULT($use_qt)\n-\n dnl these are only used when qt is enabled\n-if test x$use_qt = xyes; then\n-\n+if test x$bitcoin_enable_qt != xno; then\n+  BUILD_QT=qt\n   dnl enable dbus support\n   AC_MSG_CHECKING([if dbus should be enabled])\n-  if test x$use_dbus != xno; then\n-    use_dbus=yes\n+  if test x$bitcoin_enable_qt_dbus != xno; then\n     AC_DEFINE([USE_DBUS],[1],[Define if dbus support should be compiled in])\n-  else\n-    use_dbus=no\n   fi\n-  AC_MSG_RESULT($use_dbus)\n+  AC_MSG_RESULT($bitcoin_enable_qt_dbus)\n \n   dnl enable qr support\n   AC_MSG_CHECKING([if qr should be enabled])\n@@ -720,8 +557,18 @@ if test x$use_qt = xyes; then\n     fi\n   fi\n \n-  if test x$use_tests$have_qt_test = xyesyes; then\n+  if test x$XGETTEXT == x; then\n+    AC_MSG_WARN(\"xgettext is required to update qt translations\")\n+  fi\n+\n+  if test x$use_tests = xyes; then\n     BUILD_TEST_QT=\"test\"\n+    if test x$bitcoin_enable_qt_test != xyes; then\n+      AC_MSG_ERROR(\"QT Test lib not found. Use --disable-tests or --without-qt.\")\n+    fi\n+  fi\n+  if test x$enable_wallet == xno; then\n+    AC_MSG_ERROR([Cannot currently build Qt GUI with wallet disabled. Use --without-qt.])\n   fi\n fi\n \n@@ -756,17 +603,10 @@ AC_SUBST(USE_QRCODE)\n AC_SUBST(USE_IPV6)\n AC_SUBST(INCLUDES)\n AC_SUBST(BOOST_LIBS)\n-AC_SUBST(MOC_DEFS)\n-AC_SUBST(QT_INCLUDES)\n-AC_SUBST(QT_TEST_LIBS)\n-AC_SUBST(QT_LIBS)\n-AC_SUBST(QT_DBUS_LIBS)\n-AC_SUBST(QT_DBUS_INCLUDES)\n-AC_SUBST(QT_TEST_INCLUDES)\n AC_SUBST(TESTDEFS)\n AC_SUBST(LEVELDB_TARGET_FLAGS)\n-AC_SUBST(BUILD_QT)\n AC_SUBST(BUILD_TEST)\n+AC_SUBST(BUILD_QT)\n AC_SUBST(BUILD_TEST_QT)\n AC_CONFIG_FILES([Makefile src/Makefile src/test/Makefile src/qt/Makefile src/qt/test/Makefile share/setup.nsi share/qt/Info.plist])\n AC_CONFIG_FILES([qa/pull-tester/run-bitcoind-for-test.sh],[chmod +x qa/pull-tester/run-bitcoind-for-test.sh])"
      },
      {
        "sha": "f04db33bd5dff5a6dc23337b4f1e316f02946b37",
        "filename": "src/m4/bitcoin_qt.m4",
        "status": "added",
        "additions": 374,
        "deletions": 0,
        "changes": 374,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c8ba8ef65459e5db0cb787c39091c45914bbb2fb/src/m4/bitcoin_qt.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c8ba8ef65459e5db0cb787c39091c45914bbb2fb/src/m4/bitcoin_qt.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/m4/bitcoin_qt.m4?ref=c8ba8ef65459e5db0cb787c39091c45914bbb2fb",
        "patch": "@@ -0,0 +1,374 @@\n+dnl Helper for cases where a qt dependency is not met.\n+dnl Output: If qt version is auto, set bitcoin_enable_qt to false. Else, exit.\n+AC_DEFUN([BITCOIN_QT_FAIL],[\n+  if test \"x$bitcoin_qt_want_version\" = \"xauto\"; then\n+    if test x$bitcoin_enable_qt != xno; then\n+      AC_MSG_WARN([$1; bitcoin-qt frontend will not be built])\n+    fi\n+    bitcoin_enable_qt=no\n+  else\n+    AC_MSG_ERROR([$1])\n+  fi\n+])\n+\n+AC_DEFUN([BITCOIN_QT_CHECK],[\n+  if test \"x$bitcoin_enable_qt\" != \"xno\" && test x$bitcoin_qt_want_version != xno; then\n+    true\n+    $1\n+  else\n+    true\n+    $2\n+  fi\n+])\n+\n+dnl BITCOIN_QT_PATH_PROGS([FOO], [foo foo2], [/path/to/search/first], [continue if missing])\n+dnl Helper for finding the path of programs needed for QT.\n+dnl Inputs: $1: Variable to be set\n+dnl Inputs: $2: List of programs to search for\n+dnl Inputs: $3: Look for $2 here before $PATH\n+dnl Inputs: $4: If \"yes\", don't fail if $2 is not found.\n+dnl Output: $1 is set to the path of $2 if found. $2 are searched in order.\n+AC_DEFUN([BITCOIN_QT_PATH_PROGS],[\n+  BITCOIN_QT_CHECK([\n+    if test \"x$3\" != \"x\"; then\n+      AC_PATH_PROGS($1,$2,,$3)\n+    else\n+      AC_PATH_PROGS($1,$2)\n+    fi\n+    if test \"x$$1\" = \"x\" && test \"x$4\" != \"xyes\"; then\n+      BITCOIN_QT_FAIL([$1 not found])\n+    fi\n+  ])\n+])\n+\n+dnl Initialize qt input.\n+dnl This must be called before any other BITCOIN_QT* macros to ensure that\n+dnl input variables are set correctly.\n+dnl CAUTION: Do not use this inside of a conditional.\n+AC_DEFUN([BITCOIN_QT_INIT],[\n+  dnl enable qt support\n+  AC_ARG_WITH([qt],\n+    [AS_HELP_STRING([--with-qt],\n+    [with qt (no|qt4|qt5|auto. default is auto, qt4 tried first.)])],\n+    [bitcoin_qt_want_version=$withval],\n+    [bitcoin_qt_want_version=auto])\n+\n+  AC_ARG_WITH([qt-incdir],[AS_HELP_STRING([--with-qt-incdir=INC_DIR],[specify qt include path (overridden by pkgconfig)])], [qt_include_path=$withval], [])\n+  AC_ARG_WITH([qt-libdir],[AS_HELP_STRING([--with-qt-libdir=LIB_DIR],[specify qt lib path (overridden by pkgconfig)])], [qt_lib_path=$withval], [])\n+  AC_ARG_WITH([qt-plugindir],[AS_HELP_STRING([--with-qt-plugindir=PLUGIN_DIR],[specify qt plugin path (overridden by pkgconfig)])], [qt_plugin_path=$withval], [])\n+  AC_ARG_WITH([qt-bindir],[AS_HELP_STRING([--with-qt-bindir=BIN_DIR],[specify qt bin path])], [qt_bin_path=$withval], [])\n+\n+  AC_ARG_WITH([qtdbus],\n+    [AS_HELP_STRING([--with-qtdbus],\n+    [enable DBus support (default is yes if qt is enabled and QtDBus is found)])],\n+    [use_dbus=$withval],\n+    [use_dbus=auto])\n+])\n+\n+dnl Find the appropriate version of Qt libraries and includes.\n+dnl Inputs: $1: Whether or not pkg-config should be used. yes|no. Default: yes.\n+dnl Inputs: $2: If $1 is \"yes\" and --with-qt=auto, which qt version should be\n+dnl         tried first.\n+dnl Outputs: See _BITCOIN_QT_FIND_LIBS_*\n+dnl Outputs: Sets variables for all qt-related tools.\n+dnl Outputs: bitcoin_enable_qt, bitcoin_enable_qt_dbus, bitcoin_enable_qt_test\n+AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n+  use_pkgconfig=$1\n+\n+  if test x$use_pkgconfig == x; then\n+    use_pkgconfig=yes\n+  fi\n+\n+  if test x$use_pkgconfig = xyes; then\n+    if test x$PKG_CONFIG == x; then\n+      AC_MSG_ERROR(pkg-config not found.)\n+    fi\n+    BITCOIN_QT_CHECK([_BITCOIN_QT_FIND_LIBS_WITH_PKGCONFIG([$2])])\n+  else\n+    BITCOIN_QT_CHECK([_BITCOIN_QT_FIND_LIBS_WITHOUT_PKGCONFIG])\n+  fi\n+\n+  BITCOIN_QT_PATH_PROGS([MOC], [moc-qt${bitcoin_qt_got_major_vers} moc${bitcoin_qt_got_major_vers} moc], $qt_bin_path)\n+  BITCOIN_QT_PATH_PROGS([UIC], [uic-qt${bitcoin_qt_got_major_vers} uic${bitcoin_qt_got_major_vers} uic], $qt_bin_path)\n+  BITCOIN_QT_PATH_PROGS([RCC], [rcc-qt${bitcoin_qt_got_major_vers} rcc${bitcoin_qt_got_major_vers} rcc], $qt_bin_path)\n+  BITCOIN_QT_PATH_PROGS([LRELEASE], [lrelease-qt${bitcoin_qt_got_major_vers} lrelease${bitcoin_qt_got_major_vers} lrelease], $qt_bin_path)\n+  BITCOIN_QT_PATH_PROGS([LUPDATE], [lupdate-qt${bitcoin_qt_got_major_vers} lupdate${bitcoin_qt_got_major_vers} lupdate],$qt_bin_path, yes)\n+\n+  case $host in\n+    *darwin*)\n+     BITCOIN_QT_CHECK([\n+       MOC_DEFS=\"-DQ_OS_MAC\"\n+       base_frameworks=\"-framework Foundation -framework ApplicationServices -framework AppKit\"\n+       AX_CHECK_LINK_FLAG([[$base_frameworks]],[QT_LIBS=\"$QT_LIBS $base_frameworks\"],[AC_MSG_ERROR(could not find base frameworks)])\n+       AC_SUBST(MOC_DEFS)\n+     ])\n+    ;;\n+  esac\n+\n+\n+  dnl enable qt support\n+  AC_MSG_CHECKING(if QT should be enabled)\n+  BITCOIN_QT_CHECK([\n+    bitcoin_enable_qt=yes\n+    bitcoin_enable_qt_test=yes\n+    if test x$have_qt_test = xno; then\n+      bitcoin_enable_qt_test=no\n+    fi\n+    bitcoin_enable_qt_dbus=yes\n+    if test x$have_qt_dbus = xno;  then\n+      bitcoin_enable_qt_dbus=no\n+      if test x$use_dbus = xyes; then\n+        AC_MSG_ERROR(\"libQtDBus not found. Install libQtDBus or remove --with-qtdbus.\")\n+      fi\n+    fi\n+    if test x$LUPDATE == x; then\n+      AC_MSG_WARN(\"lupdate is required to update qt translations\")\n+    fi\n+  ],[\n+    bitcoin_enable_qt=no\n+  ])\n+  AC_MSG_RESULT([$bitcoin_enable_qt (Qt${bitcoin_qt_got_major_vers})])\n+\n+  AC_SUBST(QT_INCLUDES)\n+  AC_SUBST(QT_LIBS)\n+  AC_SUBST(QT_DBUS_INCLUDES)\n+  AC_SUBST(QT_DBUS_LIBS)\n+  AC_SUBST(QT_TEST_INCLUDES)\n+  AC_SUBST(QT_TEST_LIBS)\n+  AC_SUBST(QT_SELECT, qt${bitcoin_qt_got_major_vers})\n+])\n+\n+dnl All macros below are internal and should _not_ be used from the main\n+dnl configure.ac.\n+dnl ----\n+\n+dnl Internal. Check if the included version of QT is Qt5.\n+dnl Requires: INCLUDES must be populated as necessary.\n+dnl Output: bitcoin_cv_qt5=yes|no\n+AC_DEFUN([_BITCOIN_QT_CHECK_QT5],[\n+  AC_CACHE_CHECK(for QT 5, bitcoin_cv_qt5,[\n+  AC_TRY_COMPILE(\n+    [#include <QtCore>],\n+    [\n+      #if QT_VERSION < 0x050000\n+      choke me\n+      #else\n+      return 0;\n+      #endif\n+    ],\n+    bitcoin_cv_qt5=yes,\n+    bitcoin_cv_qt5=no)\n+])])\n+\n+dnl Internal. Check if the linked version of QT was built as static libs.\n+dnl Requires: Qt5. This check cannot determine if Qt4 is static.\n+dnl Requires: INCLUDES and LIBS must be populated as necessary.\n+dnl Output: bitcoin_cv_static_qt=yes|no\n+dnl Output: Defines QT_STATICPLUGIN if plugins are static.\n+AC_DEFUN([_BITCOIN_QT_IS_STATIC],[\n+  AC_CACHE_CHECK(for static QT, bitcoin_cv_static_qt,[\n+  AC_TRY_COMPILE(\n+    [#include <QtCore>],\n+    [\n+      #if defined(QT_STATIC)\n+      return 0;\n+      #else\n+      choke me\n+      #endif\n+    ],\n+    [bitcoin_cv_static_qt=yes],\n+    [bitcoin_cv_static_qt=no])\n+  ])\n+  if test xbitcoin_cv_static_qt = xyes; then\n+    AC_DEFINE(QT_STATICPLUGIN, 1, [Define this symbol for static QT plugins])\n+  fi\n+])\n+\n+dnl Internal. Check if the link-requirements for static plugins are met.\n+dnl Requires: INCLUDES and LIBS must be populated as necessary.\n+dnl Inputs: $1: A series of Q_IMPORT_PLUGIN().\n+dnl Inputs: $2: The libraries that resolve $1.\n+dnl Output: QT_LIBS is prepended or configure exits.\n+AC_DEFUN([_BITCOIN_QT_CHECK_STATIC_PLUGINS],[\n+  AC_MSG_CHECKING(for static QT plugins: $2)\n+  CHECK_STATIC_PLUGINS_TEMP_LIBS=\"$LIBS\"\n+  LIBS=\"$2 $QT_LIBS $LIBS\"\n+  AC_TRY_LINK([\n+    #define QT_STATICPLUGIN\n+    #include <QtPlugin>\n+    $1],\n+    [return 0;],\n+    [AC_MSG_RESULT(yes); QT_LIBS=\"$2 $QT_LIBS\"],\n+    [AC_MSG_RESULT(no)]; BITCOIN_QT_FAIL(Could not resolve: $2))\n+  LIBS=\"$CHECK_STATIC_PLUGINS_TEMP_LIBS\"\n+])\n+\n+dnl Internal. Find Qt libraries using pkg-config.\n+dnl Inputs: bitcoin_qt_want_version (from --with-qt=). The version to check\n+dnl         first.\n+dnl Inputs: $1: If bitcoin_qt_want_version is \"auto\", check for this version\n+dnl         first.\n+dnl Outputs: All necessary QT_* variables are set.\n+dnl Outputs: bitcoin_qt_got_major_vers is set to \"4\" or \"5\".\n+dnl Outputs: have_qt_test and have_qt_dbus are set (if applicable) to yes|no.\n+AC_DEFUN([_BITCOIN_QT_FIND_LIBS_WITH_PKGCONFIG],[\n+  m4_ifdef([PKG_CHECK_MODULES],[\n+  auto_priority_version=$1\n+  if test x$auto_priority_version == x; then\n+    auto_priority_version=qt5\n+  fi\n+    if test x$bitcoin_qt_want_version == xqt5 ||  ( test x$bitcoin_qt_want_version == xauto && test x$auto_priority_version == xqt5 ); then\n+      QT_LIB_PREFIX=Qt5\n+      bitcoin_qt_got_major_vers=5\n+    else\n+      QT_LIB_PREFIX=Qt\n+      bitcoin_qt_got_major_vers=4\n+    fi\n+    qt5_modules=\"Qt5Core Qt5Gui Qt5Network Qt5Widgets\"\n+    qt4_modules=\"QtCore QtGui QtNetwork\"\n+    BITCOIN_QT_CHECK([\n+      if test x$bitcoin_qt_want_version == xqt5 || ( test x$bitcoin_qt_want_version == xauto && test x$auto_priority_version == xqt5 ); then\n+        PKG_CHECK_MODULES([QT], [$qt5_modules], [QT_INCLUDES=\"$QT_CFLAGS\"; have_qt=yes],[have_qt=no])\n+      elif test x$bitcoin_qt_want_version == xqt4 || ( test x$bitcoin_qt_want_version == xauto && test x$auto_priority_version == xqt4 ); then\n+        PKG_CHECK_MODULES([QT], [$qt4_modules], [QT_INCLUDES=\"$QT_CFLAGS\"; have_qt=yes], [have_qt=no])\n+      fi\n+\n+      dnl qt version is set to 'auto' and the preferred version wasn't found. Now try the other.\n+      if test x$have_qt == xno && test x$bitcoin_qt_want_version == xauto; then\n+        if x$auto_priority_version = x$qt5; then\n+          PKG_CHECK_MODULES([QT], [$qt4_modules], [QT_INCLUDES=\"$QT_CFLAGS\"; have_qt=yes; QT_LIB_PREFIX=Qt; bitcoin_qt_got_major_vers=4], [have_qt=no])\n+        else\n+          PKG_CHECK_MODULES([QT], [$qt5_modules], [QT_INCLUDES=\"$QT_CFLAGS\"; have_qt=yes; QT_LIB_PREFIX=Qt5; bitcoin_qt_got_major_vers=5], [have_qt=no])\n+        fi\n+      fi\n+      if test x$have_qt != xyes; then\n+        have_qt=no\n+        BITCOIN_QT_FAIL([Qt dependencies not found])\n+      fi\n+    ])\n+    BITCOIN_QT_CHECK([\n+      PKG_CHECK_MODULES([QT_TEST], [${QT_LIB_PREFIX}Test], [QT_TEST_INCLUDES=\"$QT_TEST_CFLAGS\"; have_qt_test=yes], [have_qt_test=no])\n+      if test x$use_dbus != xno; then\n+        PKG_CHECK_MODULES([QT_DBUS], [${QT_LIB_PREFIX}DBus], [QT_DBUS_INCLUDES=\"$QT_DBUS_CFLAGS\"; have_qt_dbus=yes], [have_qt_dbus=no])\n+      fi\n+    ])\n+  ])\n+  true; dnl\n+])\n+\n+dnl Internal. Find Qt libraries without using pkg-config. Version is deduced\n+dnl from the discovered headers.\n+dnl Inputs: bitcoin_qt_want_version (from --with-qt=). The version to use.\n+dnl         If \"auto\", the version will be discovered by _BITCOIN_QT_CHECK_QT5.\n+dnl Outputs: All necessary QT_* variables are set.\n+dnl Outputs: bitcoin_qt_got_major_vers is set to \"4\" or \"5\".\n+dnl Outputs: have_qt_test and have_qt_dbus are set (if applicable) to yes|no.\n+AC_DEFUN([_BITCOIN_QT_FIND_LIBS_WITHOUT_PKGCONFIG],[\n+  TEMP_CPPFLAGS=\"$CPPFLAGS\"\n+  TEMP_LIBS=\"$LIBS\"\n+  BITCOIN_QT_CHECK([\n+    if test x$qt_include_path != x; then\n+      QT_INCLUDES=\"-I$qt_include_path -I$qt_include_path/QtCore -I$qt_include_path/QtGui -I$qt_include_path/QtWidgets -I$qt_include_path/QtNetwork -I$qt_include_path/QtTest -I$qt_include_path/QtDBus\"\n+      CPPFLAGS=\"$QT_INCLUDES $CPPFLAGS\"\n+    fi\n+  ])\n+\n+  BITCOIN_QT_CHECK([AC_CHECK_HEADER([QtPlugin],,BITCOIN_QT_FAIL(QtCore headers missing))])\n+  BITCOIN_QT_CHECK([AC_CHECK_HEADER([QApplication],, BITCOIN_QT_FAIL(QtGui headers missing))])\n+  BITCOIN_QT_CHECK([AC_CHECK_HEADER([QLocalSocket],, BITCOIN_QT_FAIL(QtNetwork headers missing))])\n+\n+  BITCOIN_QT_CHECK([\n+    if test x$bitcoin_qt_want_version = xauto; then\n+      _BITCOIN_QT_CHECK_QT5\n+    fi\n+    if test x$bitcoin_cv_qt5 == xyes || test x$bitcoin_qt_want_version = xqt5; then\n+      QT_LIB_PREFIX=Qt5\n+      bitcoin_qt_got_major_vers=5\n+    else\n+      QT_LIB_PREFIX=Qt\n+      bitcoin_qt_got_major_vers=4\n+    fi\n+  ])\n+\n+  BITCOIN_QT_CHECK([\n+    LIBS=\n+    if test x$qt_lib_path != x; then\n+      LIBS=\"$LIBS -L$qt_lib_path\"\n+    fi\n+    if test x$qt_plugin_path != x; then\n+      LIBS=\"$LIBS -L$qt_plugin_path/accessible\"\n+      if test x$bitcoin_qt_got_major_vers == x5; then\n+        LIBS=\"$LIBS -L$qt_plugin_path/platforms\"\n+      else\n+        LIBS=\"$LIBS -L$qt_plugin_path/codecs\"\n+      fi\n+    fi\n+\n+    if test x$TARGET_OS == xwindows; then\n+      AC_CHECK_LIB([imm32],      [main],, BITCOIN_QT_FAIL(libimm32 not found))\n+    fi\n+  ])\n+\n+  BITCOIN_QT_CHECK(AC_CHECK_LIB([z] ,[main],,BITCOIN_QT_FAIL(zlib not found)))\n+  BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Core]   ,[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXCore not found)))\n+  BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Gui]    ,[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXGui not found)))\n+  BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Network],[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXNetwork not found)))\n+  if test x$bitcoin_qt_got_major_vers == x5; then\n+    BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Widgets],[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXWidgets not found)))\n+  fi\n+  QT_LIBS=\"$LIBS\"\n+  LIBS=\"$TEMP_LIBS\"\n+\n+  dnl This is ugly and complicated. Yuck. Works as follows:\n+  dnl We can't discern whether Qt4 builds are static or not. For Qt5, we can\n+  dnl check a header to find out. When Qt is built statically, some plugins must\n+  dnl be linked into the final binary as well. These plugins have changed between\n+  dnl Qt4 and Qt5. With Qt5, languages moved into core and the WindowsIntegration\n+  dnl plugin was added. Since we can't tell if Qt4 is static or not, it is \n+  dnl assumed for all non-pkg-config builds.\n+  dnl _BITCOIN_QT_CHECK_STATIC_PLUGINS does a quick link-check and appends the\n+  dnl results to QT_LIBS.\n+  BITCOIN_QT_CHECK([\n+    if test x$bitcoin_qt_got_major_vers == x5; then\n+      _BITCOIN_QT_IS_STATIC\n+      if test x$bitcoin_cv_static_qt == xyes; then \n+        AC_DEFINE(QT_STATICPLUGIN, 1, [Define this symbol if qt plugins are static])\n+        _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(AccessibleFactory)], [-lqtaccessiblewidgets])\n+        if test x$TARGET_OS == xwindows; then\n+          _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QWindowsIntegrationPlugin)],[-lqwindows])\n+        fi\n+      fi\n+    else\n+      AC_DEFINE(QT_STATICPLUGIN, 1, [Define this symbol if qt plugins are static])\n+      _BITCOIN_QT_CHECK_STATIC_PLUGINS([\n+         Q_IMPORT_PLUGIN(qcncodecs)\n+         Q_IMPORT_PLUGIN(qjpcodecs)\n+         Q_IMPORT_PLUGIN(qtwcodecs)\n+         Q_IMPORT_PLUGIN(qkrcodecs)\n+         Q_IMPORT_PLUGIN(AccessibleFactory)],\n+         [-lqcncodecs -lqjpcodecs -lqtwcodecs -lqkrcodecs -lqtaccessiblewidgets])\n+    fi\n+  ])\n+\n+  BITCOIN_QT_CHECK([\n+    LIBS=\n+    if test x$qt_lib_path != x; then\n+      LIBS=\"-L$qt_lib_path\"\n+    fi\n+    AC_CHECK_LIB([${QT_LIB_PREFIX}Test],      [main],, have_qt_test=no)\n+    AC_CHECK_HEADER([QTest],, have_qt_test=no)\n+    QT_TEST_LIBS=\"$LIBS\"\n+    if test x$use_dbus != xno; then\n+      LIBS=\n+      if test x$qt_lib_path != x; then\n+        LIBS=\"-L$qt_lib_path\"\n+      fi\n+      AC_CHECK_LIB([${QT_LIB_PREFIX}DBus],      [main],, have_qt_dbus=no)\n+      AC_CHECK_HEADER([QtDBus],, have_qt_dbus=no)\n+      QT_DBUS_LIBS=\"$LIBS\"\n+    fi\n+  ])\n+  CPPFLAGS=\"$TEMP_CPPFLAGS\"\n+  LIBS=\"$TEMP_LIBS\"\n+])\n+"
      }
    ]
  },
  {
    "sha": "60dc589477f963d9848be7bb7fb0589a30deb912",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2MGRjNTg5NDc3Zjk2M2Q5ODQ4YmU3YmI3ZmIwNTg5YTMwZGViOTEy",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2013-12-02T21:54:19Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2014-01-10T21:30:33Z"
      },
      "message": "qt5: Use the info gleaned from configure for plugin importing",
      "tree": {
        "sha": "949eb48e9dca0fd3874eb65bc0baa692803a82a8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/949eb48e9dca0fd3874eb65bc0baa692803a82a8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/60dc589477f963d9848be7bb7fb0589a30deb912",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/60dc589477f963d9848be7bb7fb0589a30deb912",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/60dc589477f963d9848be7bb7fb0589a30deb912",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/60dc589477f963d9848be7bb7fb0589a30deb912/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c8ba8ef65459e5db0cb787c39091c45914bbb2fb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c8ba8ef65459e5db0cb787c39091c45914bbb2fb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c8ba8ef65459e5db0cb787c39091c45914bbb2fb"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 11,
      "deletions": 7
    },
    "files": [
      {
        "sha": "794d12f69b4dcd30a7c6ffdc9dbd0332bce59039",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 7,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/60dc589477f963d9848be7bb7fb0589a30deb912/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/60dc589477f963d9848be7bb7fb0589a30deb912/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=60dc589477f963d9848be7bb7fb0589a30deb912",
        "patch": "@@ -2,6 +2,7 @@\n // Distributed under the MIT/X11 software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#include \"bitcoin-config.h\"\n #include \"bitcoingui.h\"\n \n #include \"clientmodel.h\"\n@@ -30,19 +31,22 @@\n #include <QTimer>\n #include <QTranslator>\n \n-#if QT_VERSION < 0x050000\n-#include <QTextCodec>\n-#endif\n-\n-#if defined(BITCOIN_NEED_QT_PLUGINS) && !defined(_BITCOIN_QT_PLUGINS_INCLUDED)\n-#define _BITCOIN_QT_PLUGINS_INCLUDED\n-#define __INSURE__\n+#if defined(QT_STATICPLUGIN)\n #include <QtPlugin>\n+#if QT_VERSION < 0x050000\n Q_IMPORT_PLUGIN(qcncodecs)\n Q_IMPORT_PLUGIN(qjpcodecs)\n Q_IMPORT_PLUGIN(qtwcodecs)\n Q_IMPORT_PLUGIN(qkrcodecs)\n Q_IMPORT_PLUGIN(qtaccessiblewidgets)\n+#else\n+Q_IMPORT_PLUGIN(AccessibleFactory)\n+Q_IMPORT_PLUGIN(QWindowsIntegrationPlugin);\n+#endif\n+#endif\n+\n+#if QT_VERSION < 0x050000\n+#include <QTextCodec>\n #endif\n \n // Declare meta types used for QMetaObject::invokeMethod"
      }
    ]
  },
  {
    "sha": "47ffb505331b8f6257a6879b02415e604ad85da0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0N2ZmYjUwNTMzMWI4ZjYyNTdhNjg3OWIwMjQxNWU2MDRhZDg1ZGEw",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2013-12-02T21:55:37Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2014-01-10T21:30:33Z"
      },
      "message": "qt5: Use QT_SELECT for debian-based distros.\n\nAt least Debian/Ubuntu use 'qtchooser' for switching between qt4/qt5 binaries.\nIt is a wrapper for all qt tools, and calls the named tool of the default\nversion unless overridden by the -qt= option or QT_SELECT environment variable.\nQT_SELECT is set by configure once the qt version has been chosen.\n\nTake for example, moc.\n\n$ which moc\n    /usr/bin/moc\n\n$ ls -go /usr/bin/moc\n    lrwxrwxrwx 1 9 Jul  3 21:33 /usr/bin/moc -> qtchooser\n\n$ qtchooser -print-env\n    QT_SELECT=\"default\"\n    QTTOOLDIR=\"/usr/lib/x86_64-linux-gnu/qt4/bin\"\n    QTLIBDIR=\"/usr/lib/x86_64-linux-gnu\"\n\n$ QT_SELECT=qt5 qtchooser -print-env\n    QT_SELECT=\"qt5\"\n    QTTOOLDIR=\"/usr/lib/x86_64-linux-gnu/qt5/bin\"\n    QTLIBDIR=\"/usr/lib/x86_64-linux-gnu\"\n\n$ moc -v\n    Qt Meta Object Compiler version 63 (Qt 4.8.4)\n\n$ QT_SELECT=qt5 moc -v\n    Qt Meta Object Compiler version 67 (Qt 5.0.1)\n\nThis should be harmless elsewhere.",
      "tree": {
        "sha": "277064dc0ae9200a587f856eacd6adf8864d8b7d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/277064dc0ae9200a587f856eacd6adf8864d8b7d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/47ffb505331b8f6257a6879b02415e604ad85da0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/47ffb505331b8f6257a6879b02415e604ad85da0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/47ffb505331b8f6257a6879b02415e604ad85da0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/47ffb505331b8f6257a6879b02415e604ad85da0/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "60dc589477f963d9848be7bb7fb0589a30deb912",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/60dc589477f963d9848be7bb7fb0589a30deb912",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/60dc589477f963d9848be7bb7fb0589a30deb912"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 6,
      "deletions": 6
    },
    "files": [
      {
        "sha": "b9e6c262ca5b6515cd0303db455decf071f7195a",
        "filename": "src/Makefile.include",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/47ffb505331b8f6257a6879b02415e604ad85da0/src/Makefile.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/47ffb505331b8f6257a6879b02415e604ad85da0/src/Makefile.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.include?ref=47ffb505331b8f6257a6879b02415e604ad85da0",
        "patch": "@@ -32,23 +32,23 @@ $(LIBBITCOINQT):\n \n ui_%.h: %.ui\n \t@test -d $(abs_builddir)/$(@D) || $(MKDIR_P) $(abs_builddir)/$(@D)\n-\t@test -f $(UIC) && $(UIC) -o $(abs_builddir)/$@ $(abs_srcdir)/$< || echo error: could not build $(abs_builddir)/$@\n+\t@test -f $(UIC) && QT_SELECT=$(QT_SELECT) $(UIC) -o $(abs_builddir)/$@ $(abs_srcdir)/$< || echo error: could not build $(abs_builddir)/$@\n \t$(SED) -i.bak -e '/^\\*\\*.*Created:/d' $(abs_builddir)/$@ && rm $(abs_builddir)/$@.bak\n \t$(SED) -i.bak -e '/^\\*\\*.*by:/d' $(abs_builddir)/$@ && rm $(abs_builddir)/$@.bak\n \n %.moc: %.cpp\n-\t$(MOC) $(QT_INCLUDES) $(MOC_DEFS) -o $@ $<\n+\tQT_SELECT=$(QT_SELECT) $(MOC) $(QT_INCLUDES) $(MOC_DEFS) -o $@ $<\n \t$(SED) -i.bak -e '/^\\*\\*.*Created:/d' $@ && rm $@.bak\n \t$(SED) -i.bak -e '/^\\*\\*.*by:/d' $@ && rm $@.bak\n \n moc_%.cpp: %.h\n-\t$(MOC) $(QT_INCLUDES) $(MOC_DEFS) -o $@ $<\n+\tQT_SELECT=$(QT_SELECT) $(MOC) $(QT_INCLUDES) $(MOC_DEFS) -o $@ $<\n \t$(SED) -i.bak -e '/^\\*\\*.*Created:/d' $@ && rm $@.bak\n \t$(SED) -i.bak -e '/^\\*\\*.*by:/d' $@ && rm $@.bak\n \n %.qm: %.ts\n \t@test -d $(abs_builddir)/$(@D) || $(MKDIR_P) $(abs_builddir)/$(@D)\n-\t@test -f $(LRELEASE) && $(LRELEASE) $(abs_srcdir)/$< -qm $(abs_builddir)/$@ || \\\n+\t@test -f $(LRELEASE) && QT_SELECT=$(QT_SELECT) $(LRELEASE) $(abs_srcdir)/$< -qm $(abs_builddir)/$@ || \\\n \t echo error: could not build $(abs_builddir)/$@\n \n %.pb.cc %.pb.h: %.proto"
      },
      {
        "sha": "abd8a9f118a59d70a843f4ca40f6de180b2199d3",
        "filename": "src/qt/Makefile.am",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/47ffb505331b8f6257a6879b02415e604ad85da0/src/qt/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/47ffb505331b8f6257a6879b02415e604ad85da0/src/qt/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/Makefile.am?ref=47ffb505331b8f6257a6879b02415e604ad85da0",
        "patch": "@@ -220,10 +220,10 @@ bitcoinstrings.cpp: FORCE\n \n translate: bitcoinstrings.cpp $(QT_FORMS_UI) $(QT_FORMS_UI) $(BITCOIN_QT_CPP) $(BITCOIN_QT_H) $(BITCOIN_MM)\n \t@test -n $(LUPDATE) || echo \"lupdate is required for updating translations\"\n-\t@$(LUPDATE) $^ -locations relative -no-obsolete -ts locale/bitcoin_en.ts\n+\t@QT_SELECT=$(QT_SELECT) $(LUPDATE) $^ -locations relative -no-obsolete -ts locale/bitcoin_en.ts\n \n $(QT_QRC_CPP): $(QT_QRC) $(QT_QM) $(QT_FORMS_H) $(RES_ICONS) $(RES_IMAGES) $(RES_MOVIES) $(PROTOBUF_H)\n-\t@cd $(abs_srcdir); test -f $(RCC) && $(RCC) -name bitcoin -o $(abs_builddir)/$@ $< || \\\n+\t@cd $(abs_srcdir); test -f $(RCC) && QT_SELECT=$(QT_SELECT) $(RCC) -name bitcoin -o $(abs_builddir)/$@ $< || \\\n \t  echo error: could not build $@\n \t$(SED) -i.bak -e '/^\\*\\*.*Created:/d' $@ && rm $@.bak\n \t$(SED) -i.bak -e '/^\\*\\*.*by:/d' $@ && rm $@.bak"
      }
    ]
  },
  {
    "sha": "8b0f608815aa3de43208d4ac334a11bc4c408167",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4YjBmNjA4ODE1YWEzZGU0MzIwOGQ0YWMzMzRhMTFiYzRjNDA4MTY3",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2013-12-18T20:46:48Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2014-01-10T21:30:33Z"
      },
      "message": "qt5: tests: Make sure static plugin symbols are pulled in\n\nSince we're now properly linking against static plugins for qt binaries,\nwe need to ensure that they're Imported properly.\n\nWithout these Imports, the linker drops some of the unused linked libs, causing\nundefined symbols in QtCore.",
      "tree": {
        "sha": "c706b11d298ed3dc9b4068cf7cb485ec84e301e0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c706b11d298ed3dc9b4068cf7cb485ec84e301e0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8b0f608815aa3de43208d4ac334a11bc4c408167",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8b0f608815aa3de43208d4ac334a11bc4c408167",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8b0f608815aa3de43208d4ac334a11bc4c408167",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8b0f608815aa3de43208d4ac334a11bc4c408167/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "47ffb505331b8f6257a6879b02415e604ad85da0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/47ffb505331b8f6257a6879b02415e604ad85da0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/47ffb505331b8f6257a6879b02415e604ad85da0"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 9,
      "deletions": 0
    },
    "files": [
      {
        "sha": "ad0dfd9823bde873e28931c8022270594fd90c97",
        "filename": "src/qt/test/test_main.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8b0f608815aa3de43208d4ac334a11bc4c408167/src/qt/test/test_main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8b0f608815aa3de43208d4ac334a11bc4c408167/src/qt/test/test_main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/test_main.cpp?ref=8b0f608815aa3de43208d4ac334a11bc4c408167",
        "patch": "@@ -1,10 +1,19 @@\n+#include \"bitcoin-config.h\"\n #include \"paymentservertests.h\"\n #include \"uritests.h\"\n \n #include <QCoreApplication>\n #include <QObject>\n #include <QTest>\n \n+#if defined(QT_STATICPLUGIN) && QT_VERSION < 0x050000\n+#include <QtPlugin>\n+Q_IMPORT_PLUGIN(qcncodecs)\n+Q_IMPORT_PLUGIN(qjpcodecs)\n+Q_IMPORT_PLUGIN(qtwcodecs)\n+Q_IMPORT_PLUGIN(qkrcodecs)\n+#endif\n+\n // This is all you need to run all the tests\n int main(int argc, char *argv[])\n {"
      }
    ]
  },
  {
    "sha": "2691cbc4b3c97a468b23f2c11dbe992dfb3f8bcb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyNjkxY2JjNGIzYzk3YTQ2OGIyM2YyYzExZGJlOTkyZGZiM2Y4YmNi",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2013-12-03T01:16:45Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2014-01-10T21:30:33Z"
      },
      "message": "qt5: Force macports default include path to be searched last\n\nAllows outside includes to take precedence. In particular, this allows for\na specified Qt to be used without clashing with macports' headers.",
      "tree": {
        "sha": "8af085cfc2051ca0656c9fd04c23b4a2df7e1b2e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8af085cfc2051ca0656c9fd04c23b4a2df7e1b2e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2691cbc4b3c97a468b23f2c11dbe992dfb3f8bcb",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2691cbc4b3c97a468b23f2c11dbe992dfb3f8bcb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2691cbc4b3c97a468b23f2c11dbe992dfb3f8bcb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2691cbc4b3c97a468b23f2c11dbe992dfb3f8bcb/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8b0f608815aa3de43208d4ac334a11bc4c408167",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8b0f608815aa3de43208d4ac334a11bc4c408167",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8b0f608815aa3de43208d4ac334a11bc4c408167"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "11a9a3118e562499046cff7a80f0968a5735e32d",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2691cbc4b3c97a468b23f2c11dbe992dfb3f8bcb/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2691cbc4b3c97a468b23f2c11dbe992dfb3f8bcb/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=2691cbc4b3c97a468b23f2c11dbe992dfb3f8bcb",
        "patch": "@@ -191,7 +191,7 @@ case $host in\n        AC_CHECK_PROG([PORT],port, port)\n        if test x$PORT = xport; then\n          dnl add default macports paths\n-         CPPFLAGS=\"$CPPFLAGS -I/opt/local/include -I/opt/local/include/db48\"\n+         CPPFLAGS=\"$CPPFLAGS -isystem /opt/local/include -I/opt/local/include/db48\"\n          LIBS=\"$LIBS -L/opt/local/lib -L/opt/local/lib/db48\"\n        fi\n "
      }
    ]
  },
  {
    "sha": "371f3f6ba553dbc99c3bd2788c2ba38882112bef",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNzFmM2Y2YmE1NTNkYmM5OWMzYmQyNzg4YzJiYTM4ODgyMTEyYmVm",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2014-01-10T21:28:57Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2014-01-10T21:30:33Z"
      },
      "message": "qt5: fix --with-qt with no arguments",
      "tree": {
        "sha": "1db424f11db78d8a2dbb0cd72430288f77fb37b8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1db424f11db78d8a2dbb0cd72430288f77fb37b8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/371f3f6ba553dbc99c3bd2788c2ba38882112bef",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/371f3f6ba553dbc99c3bd2788c2ba38882112bef",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/371f3f6ba553dbc99c3bd2788c2ba38882112bef",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/371f3f6ba553dbc99c3bd2788c2ba38882112bef/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2691cbc4b3c97a468b23f2c11dbe992dfb3f8bcb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2691cbc4b3c97a468b23f2c11dbe992dfb3f8bcb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2691cbc4b3c97a468b23f2c11dbe992dfb3f8bcb"
      }
    ],
    "stats": {
      "total": 30,
      "additions": 26,
      "deletions": 4
    },
    "files": [
      {
        "sha": "fdfb1867bc6ce2813d55e1a2bc70e2ddb5b99ddf",
        "filename": "qa/rpc-tests/send.sh",
        "status": "added",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/371f3f6ba553dbc99c3bd2788c2ba38882112bef/qa/rpc-tests/send.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/371f3f6ba553dbc99c3bd2788c2ba38882112bef/qa/rpc-tests/send.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/send.sh?ref=371f3f6ba553dbc99c3bd2788c2ba38882112bef",
        "patch": "@@ -0,0 +1,14 @@\n+#!/bin/bash\n+TIMEOUT=10\n+SIGNAL=HUP\n+if [ $# -eq 0 ]; then\n+  echo -e \"Usage:\\t$0 <cmd>\"\n+  echo -e \"\\tRuns <cmd> and wait ${TIMEOUT} seconds or until SIG${SIGNAL} is received.\"\n+  echo -e \"\\tReturns: 0 if SIG${SIGNAL} is received, 1 otherwise.\"\n+  exit 0\n+fi\n+trap '[[ ${PID} ]] && kill ${PID}' ${SIGNAL}\n+\"$@\"\n+sleep ${TIMEOUT} & PID=$!\n+wait ${PID} && exit 1\n+exit 0"
      },
      {
        "sha": "fed7d325615116bf06c224b0f97cb0688130903e",
        "filename": "qa/rpc-tests/util.sh",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/371f3f6ba553dbc99c3bd2788c2ba38882112bef/qa/rpc-tests/util.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/371f3f6ba553dbc99c3bd2788c2ba38882112bef/qa/rpc-tests/util.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/util.sh?ref=371f3f6ba553dbc99c3bd2788c2ba38882112bef",
        "patch": "@@ -23,6 +23,7 @@ function CreateDataDir {\n   echo \"rpcuser=rt\" >> $CONF\n   echo \"rpcpassword=rt\" >> $CONF\n   echo \"rpcwait=1\" >> $CONF\n+  echo \"walletnotify=killall -HUP `basename ${SENDANDWAIT}`\" >> $CONF\n   shift\n   while (( \"$#\" )); do\n       echo $1 >> $CONF\n@@ -59,7 +60,7 @@ function Send {\n   to=$2\n   amount=$3\n   address=$(Address $to)\n-  txid=$( $CLI $from sendtoaddress $address $amount )\n+  txid=$( ${SENDANDWAIT} $CLI $from sendtoaddress $address $amount )\n }\n \n # Use: Unspent <datadir> <n'th-last-unspent> <var>\n@@ -80,7 +81,7 @@ function CreateTxn1 {\n \n # Use: SendRawTxn <datadir> <hex_txn_data>\n function SendRawTxn {\n-  $CLI $1 sendrawtransaction $2\n+  ${SENDANDWAIT} $CLI $1 sendrawtransaction $2\n }\n \n # Use: GetBlocks <datadir>"
      },
      {
        "sha": "8d5a6cdc78bb4211575554bb1b439d0882dfb84e",
        "filename": "qa/rpc-tests/wallet.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/371f3f6ba553dbc99c3bd2788c2ba38882112bef/qa/rpc-tests/wallet.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/371f3f6ba553dbc99c3bd2788c2ba38882112bef/qa/rpc-tests/wallet.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/wallet.sh?ref=371f3f6ba553dbc99c3bd2788c2ba38882112bef",
        "patch": "@@ -12,6 +12,7 @@ BITCOIND=${1}/bitcoind\n CLI=${1}/bitcoin-cli\n \n DIR=\"${BASH_SOURCE%/*}\"\n+SENDANDWAIT=\"${DIR}/send.sh\"\n if [[ ! -d \"$DIR\" ]]; then DIR=\"$PWD\"; fi\n . \"$DIR/util.sh\"\n "
      },
      {
        "sha": "f7cb935d6dae7ff337ed7696030aaeb56b4574af",
        "filename": "src/m4/bitcoin_qt.m4",
        "status": "modified",
        "additions": 8,
        "deletions": 2,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/371f3f6ba553dbc99c3bd2788c2ba38882112bef/src/m4/bitcoin_qt.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/371f3f6ba553dbc99c3bd2788c2ba38882112bef/src/m4/bitcoin_qt.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/m4/bitcoin_qt.m4?ref=371f3f6ba553dbc99c3bd2788c2ba38882112bef",
        "patch": "@@ -1,7 +1,7 @@\n dnl Helper for cases where a qt dependency is not met.\n dnl Output: If qt version is auto, set bitcoin_enable_qt to false. Else, exit.\n AC_DEFUN([BITCOIN_QT_FAIL],[\n-  if test \"x$bitcoin_qt_want_version\" = \"xauto\"; then\n+  if test \"x$bitcoin_qt_want_version\" = \"xauto\" && test x$bitcoin_qt_force != xyes; then\n     if test x$bitcoin_enable_qt != xno; then\n       AC_MSG_WARN([$1; bitcoin-qt frontend will not be built])\n     fi\n@@ -50,7 +50,13 @@ AC_DEFUN([BITCOIN_QT_INIT],[\n   AC_ARG_WITH([qt],\n     [AS_HELP_STRING([--with-qt],\n     [with qt (no|qt4|qt5|auto. default is auto, qt4 tried first.)])],\n-    [bitcoin_qt_want_version=$withval],\n+    [\n+     bitcoin_qt_want_version=$withval\n+     if test x$bitcoin_qt_want_version = xyes; then\n+       bitcoin_qt_force=yes\n+       bitcoin_qt_want_version=auto\n+     fi\n+    ],\n     [bitcoin_qt_want_version=auto])\n \n   AC_ARG_WITH([qt-incdir],[AS_HELP_STRING([--with-qt-incdir=INC_DIR],[specify qt include path (overridden by pkgconfig)])], [qt_include_path=$withval], [])"
      }
    ]
  },
  {
    "sha": "42cc96737ca05a3b539ce5d1a734a7a62407d31c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0MmNjOTY3MzdjYTA1YTNiNTM5Y2U1ZDFhNzM0YTdhNjI0MDdkMzFj",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2014-01-10T21:30:04Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2014-01-10T21:30:34Z"
      },
      "message": "qt5: fix typo causing broken selection logic",
      "tree": {
        "sha": "e4ac226f869351d475be7d1f26d005d0db3c42f7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e4ac226f869351d475be7d1f26d005d0db3c42f7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/42cc96737ca05a3b539ce5d1a734a7a62407d31c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/42cc96737ca05a3b539ce5d1a734a7a62407d31c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/42cc96737ca05a3b539ce5d1a734a7a62407d31c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/42cc96737ca05a3b539ce5d1a734a7a62407d31c/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "371f3f6ba553dbc99c3bd2788c2ba38882112bef",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/371f3f6ba553dbc99c3bd2788c2ba38882112bef",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/371f3f6ba553dbc99c3bd2788c2ba38882112bef"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "91c399eef077f3340717a7d16724faa60daa3ac1",
        "filename": "src/m4/bitcoin_qt.m4",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/42cc96737ca05a3b539ce5d1a734a7a62407d31c/src/m4/bitcoin_qt.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/42cc96737ca05a3b539ce5d1a734a7a62407d31c/src/m4/bitcoin_qt.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/m4/bitcoin_qt.m4?ref=42cc96737ca05a3b539ce5d1a734a7a62407d31c",
        "patch": "@@ -241,7 +241,7 @@ AC_DEFUN([_BITCOIN_QT_FIND_LIBS_WITH_PKGCONFIG],[\n \n       dnl qt version is set to 'auto' and the preferred version wasn't found. Now try the other.\n       if test x$have_qt == xno && test x$bitcoin_qt_want_version == xauto; then\n-        if x$auto_priority_version = x$qt5; then\n+        if test x$auto_priority_version = x$qt5; then\n           PKG_CHECK_MODULES([QT], [$qt4_modules], [QT_INCLUDES=\"$QT_CFLAGS\"; have_qt=yes; QT_LIB_PREFIX=Qt; bitcoin_qt_got_major_vers=4], [have_qt=no])\n         else\n           PKG_CHECK_MODULES([QT], [$qt5_modules], [QT_INCLUDES=\"$QT_CFLAGS\"; have_qt=yes; QT_LIB_PREFIX=Qt5; bitcoin_qt_got_major_vers=5], [have_qt=no])"
      }
    ]
  },
  {
    "sha": "6a0e2376a14c77585888373099109d51a08bd74f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2YTBlMjM3NmExNGM3NzU4NTg4ODM3MzA5OTEwOWQ1MWEwOGJkNzRm",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-11T08:14:06Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-11T08:15:03Z"
      },
      "message": "Merge pull request #3346\n\n42cc967 qt5: fix typo causing broken selection logic (Cory Fields)\n371f3f6 qt5: fix --with-qt with no arguments (Cory Fields)\n2691cbc qt5: Force macports default include path to be searched last (Cory Fields)\n8b0f608 qt5: tests: Make sure static plugin symbols are pulled in (Cory Fields)\n47ffb50 qt5: Use QT_SELECT for debian-based distros. (Cory Fields)\n60dc589 qt5: Use the info gleaned from configure for plugin importing (Cory Fields)\nc8ba8ef qt5: split out qt config and add qt5 support (Cory Fields)\nc614bd7 qt5: fix a build issue with osx and qtdbus (Cory Fields)\n328bdb1 qt5: Ensure correct link order (Cory Fields)",
      "tree": {
        "sha": "e4ac226f869351d475be7d1f26d005d0db3c42f7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e4ac226f869351d475be7d1f26d005d0db3c42f7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6a0e2376a14c77585888373099109d51a08bd74f",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJS0P2HAAoJEHSBCwEjRsmmIZIIAMSyKEznWYVQtn8lILXjkLxs\nuItsHNSF1Ex671f3Xc4Zw4pfyy/siRtTmaOACmWaDRp3PBTHwtgzJzaA1QWNP27g\nVurRszkWNyeCT7xywoQXfoLlyu8kS22Dn3UVEz0yy69rx323quPJqEE3i+MRVacL\nTrknQ0JMIc0xbDuG7bwlMW8YVK747AY0i4eIHqxWQ9CRiSnm7Z5zSxDUy3dc4WmU\nmS4etfDdYuqJNXkyNBsPcKgaLLv3BigBW9cOJHepRA2c2EmkyvkKqJYOw8L5aYHb\novE8qWfNk3ygwxcbSPUSD7EvPwSJZZz7zf20NsAi5xI49mZdSC23yol0kMKuWLg=\n=8SOG\n-----END PGP SIGNATURE-----",
        "payload": "tree e4ac226f869351d475be7d1f26d005d0db3c42f7\nparent 62e9d774966c9f4344f0356c59ddadcc5ff17212\nparent 42cc96737ca05a3b539ce5d1a734a7a62407d31c\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1389428046 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1389428103 +0100\n\nMerge pull request #3346\n\n42cc967 qt5: fix typo causing broken selection logic (Cory Fields)\n371f3f6 qt5: fix --with-qt with no arguments (Cory Fields)\n2691cbc qt5: Force macports default include path to be searched last (Cory Fields)\n8b0f608 qt5: tests: Make sure static plugin symbols are pulled in (Cory Fields)\n47ffb50 qt5: Use QT_SELECT for debian-based distros. (Cory Fields)\n60dc589 qt5: Use the info gleaned from configure for plugin importing (Cory Fields)\nc8ba8ef qt5: split out qt config and add qt5 support (Cory Fields)\nc614bd7 qt5: fix a build issue with osx and qtdbus (Cory Fields)\n328bdb1 qt5: Ensure correct link order (Cory Fields)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6a0e2376a14c77585888373099109d51a08bd74f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6a0e2376a14c77585888373099109d51a08bd74f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6a0e2376a14c77585888373099109d51a08bd74f/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "62e9d774966c9f4344f0356c59ddadcc5ff17212",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/62e9d774966c9f4344f0356c59ddadcc5ff17212",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/62e9d774966c9f4344f0356c59ddadcc5ff17212"
      },
      {
        "sha": "42cc96737ca05a3b539ce5d1a734a7a62407d31c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/42cc96737ca05a3b539ce5d1a734a7a62407d31c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/42cc96737ca05a3b539ce5d1a734a7a62407d31c"
      }
    ],
    "stats": {
      "total": 681,
      "additions": 465,
      "deletions": 216
    },
    "files": [
      {
        "sha": "11a9a3118e562499046cff7a80f0968a5735e32d",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 32,
        "deletions": 192,
        "changes": 224,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6a0e2376a14c77585888373099109d51a08bd74f/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6a0e2376a14c77585888373099109d51a08bd74f/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=6a0e2376a14c77585888373099109d51a08bd74f",
        "patch": "@@ -63,38 +63,6 @@ AC_ARG_ENABLE([ipv6],\n   [use_ipv6=$enableval],\n   [use_ipv6=yes])\n \n-dnl enable qt support\n-AC_ARG_WITH([qt],\n-  [AS_HELP_STRING([--with-qt],\n-  [enable qt (default is yes)])],\n-  [use_qt=$withval],\n-  [use_qt=auto])\n-AC_DEFUN([BITCOIN_QT_FAIL],[\n-  if test \"x$use_qt\" = \"xauto\"; then\n-    AC_MSG_WARN([$1; bitcoin-qt frontend will not be built])\n-    use_qt=no\n-  else\n-    AC_MSG_ERROR([$1])\n-  fi\n-])\n-AC_DEFUN([BITCOIN_QT_CHECK],[\n-  if test \"x$use_qt\" != \"xno\"; then\n-    true\n-    $1\n-  else\n-    true\n-    $2\n-  fi\n-])\n-AC_DEFUN([BITCOIN_QT_PATH_PROGS],[\n-  BITCOIN_QT_CHECK([\n-    AC_PATH_PROGS($1,$2,$3,$4)\n-    if test \"x$$1\" = \"x\"; then\n-      BITCOIN_QT_FAIL([$1 not found])\n-    fi\n-  ])\n-])\n-\n AC_ARG_ENABLE(tests,\n     AS_HELP_STRING([--enable-tests],[compile tests (default is yes)]),\n     [use_tests=$enableval],\n@@ -116,12 +84,6 @@ AC_ARG_WITH([qrencode],\n   [use_qr=$withval],\n   [use_qr=auto])\n \n-AC_ARG_WITH([qtdbus],\n-  [AS_HELP_STRING([--with-qtdbus],\n-  [enable DBus support (default is yes if qt is enabled and QtDBus is found)])],\n-  [use_dbus=$withval],\n-  [use_dbus=auto])\n-\n AC_ARG_ENABLE([hardening],\n   [AS_HELP_STRING([--enable-hardening],\n   [attempt to harden the resulting executables (default is yes)])],\n@@ -140,10 +102,6 @@ AC_ARG_ENABLE([lcov],\n   [use_lcov=yes],\n   [use_lcov=no])\n \n-AC_ARG_WITH([qt-incdir],[AS_HELP_STRING([--with-qt-incdir=INC_DIR],[specify qt include path (overridden by pkgconfig)])], [qt_include_path=$withval], [])\n-AC_ARG_WITH([qt-libdir],[AS_HELP_STRING([--with-qt-libdir=LIB_DIR],[specify qt lib path (overridden by pkgconfig)])], [qt_lib_path=$withval], [])\n-AC_ARG_WITH([qt-bindir],[AS_HELP_STRING([--with-qt-bindir=BIN_DIR],[specify qt bin path])], [qt_bin_path=$withval], [])\n-AC_ARG_WITH([qt-plugindir],[AS_HELP_STRING([--with-qt-plugindir=PLUGIN_DIR],[specify qt plugin path (overridden by pkgconfig)])], [qt_plugin_path=$withval], [])\n AC_ARG_WITH([protoc-bindir],[AS_HELP_STRING([--with-protoc-bindir=BIN_DIR],[specify protoc bin path])], [protoc_bin_path=$withval], [])\n \n \n@@ -168,13 +126,7 @@ AC_PATH_PROG(LCOV, lcov)\n AC_PATH_PROG(JAVA, java)\n AC_PATH_PROG(GENHTML, genhtml)\n AC_PATH_PROG([GIT], [git])\n-BITCOIN_QT_PATH_PROGS([MOC], [moc-qt4 moc4 moc],, $qt_bin_path:$PATH)\n-BITCOIN_QT_PATH_PROGS([UIC], [uic-qt4 uic4 uic],, $qt_bin_path:$PATH)\n-BITCOIN_QT_PATH_PROGS([RCC], [rcc-qt4 rcc4 rcc],, $qt_bin_path:$PATH)\n-BITCOIN_QT_PATH_PROGS([LRELEASE], [lrelease-qt4 lrelease4 lrelease],, $qt_bin_path:$PATH)\n-BITCOIN_QT_PATH_PROGS([PROTOC], [protoc],, $protoc_bin_path:$PATH)\n AC_PATH_PROG(CCACHE,ccache)\n-AC_PATH_PROGS([LUPDATE], [lupdate-qt4 lupdate4 lupdate],, $qt_bin_path:$PATH)\n AC_PATH_PROG(XGETTEXT,xgettext)\n AC_PATH_PROG(HEXDUMP,hexdump)\n PKG_PROG_PKG_CONFIG\n@@ -239,7 +191,7 @@ case $host in\n        AC_CHECK_PROG([PORT],port, port)\n        if test x$PORT = xport; then\n          dnl add default macports paths\n-         CPPFLAGS=\"$CPPFLAGS -I/opt/local/include -I/opt/local/include/db48\"\n+         CPPFLAGS=\"$CPPFLAGS -isystem /opt/local/include -I/opt/local/include/db48\"\n          LIBS=\"$LIBS -L/opt/local/lib -L/opt/local/lib/db48\"\n        fi\n \n@@ -254,12 +206,6 @@ case $host in\n        fi\n      fi\n \n-     BITCOIN_QT_CHECK([\n-       MOC_DEFS=\"-DQ_OS_MAC\"\n-       base_frameworks=\"-framework Foundation -framework ApplicationServices -framework AppKit\"\n-       AX_CHECK_LINK_FLAG([[$base_frameworks]],[LIBS=\"$LIBS $base_frameworks\"],[AC_MSG_ERROR(could not find base frameworks)])\n-     ])\n-\n      CPPFLAGS=\"$CPPFLAGS -DMAC_OSX\"\n      TESTDEFS=\"-DBOOST_TEST_DYN_LINK\"\n      ;;\n@@ -452,6 +398,8 @@ if test x$boost_sleep != xyes; then\n   AC_MSG_ERROR(No working boost sleep implementation found)\n fi\n \n+BITCOIN_QT_INIT\n+\n if test x$use_pkgconfig = xyes; then\n \n   if test x$PKG_CONFIG == x; then\n@@ -464,23 +412,10 @@ if test x$use_pkgconfig = xyes; then\n     [\n       PKG_CHECK_MODULES([SSL], [libssl], [INCLUDES=\"$INCLUDES $SSL_CFLAGS\"; LIBS=\"$LIBS $SSL_LIBS\"], [AC_MSG_ERROR(openssl  not found.)])\n       PKG_CHECK_MODULES([CRYPTO], [libcrypto], [INCLUDES=\"$INCLUDES $CRYPTO_CFLAGS\"; LIBS=\"$LIBS $CRYPTO_LIBS\"], [AC_MSG_ERROR(libcrypto  not found.)])\n-\n-      BITCOIN_QT_CHECK([\n-        PKG_CHECK_MODULES([QT], [QtCore QtGui QtNetwork], [QT_INCLUDES=\"$QT_CFLAGS\"; have_qt=yes],[\n-          have_qt=no\n-          BITCOIN_QT_FAIL([Qt dependencies not found])\n-        ])\n-        if test x$use_tests = xyes; then\n-          PKG_CHECK_MODULES([QT_TEST], [QtTest], [QT_TEST_INCLUDES=\"$QT_TEST_CFLAGS\"; have_qt_test=yes], [have_qt_test=no])\n-        fi\n-        if test x$use_dbus != xno; then\n-          PKG_CHECK_MODULES([QT_DBUS], [QtDBus], [QT_DBUS_INCLUDES=\"$QT_DBUS_CFLAGS\"; have_qt_dbus=yes], [have_qt_dbus=no])\n-        fi\n-        if test x$use_qr != xno; then\n-          PKG_CHECK_MODULES([QR], [libqrencode], [have_qrencode=yes], [have_qrencode=no])\n-        fi\n-        PKG_CHECK_MODULES([PROTOBUF], [protobuf], [have_protobuf=yes], [AC_MSG_ERROR(libprotobuf not found.)])\n-      ])\n+      BITCOIN_QT_CHECK([PKG_CHECK_MODULES([PROTOBUF], [protobuf], [have_protobuf=yes], [BITCOIN_QT_FAIL(libprotobuf not found)])])\n+      if test x$use_qr != xno; then\n+        BITCOIN_QT_CHECK([PKG_CHECK_MODULES([QR], [libqrencode], [have_qrencode=yes], [have_qrencode=no])])\n+      fi\n     ]\n   )\n else\n@@ -490,81 +425,18 @@ else\n   AC_CHECK_HEADER([openssl/ssl.h],, AC_MSG_ERROR(libssl headers missing),)\n   AC_CHECK_LIB([ssl],         [main],, AC_MSG_ERROR(libssl missing))\n \n-  BITCOIN_QT_CHECK([\n-    TEMP_LIBS=\"$LIBS\"\n-    LIBS=\n-    if test x$qt_lib_path != x; then\n-      QT_LIBS=\"$QT_LIBS -L$qt_lib_path\"\n-      LIBS=\"$QT_LIBS\"\n-    fi\n-    if test x$qt_plugin_path != x; then\n-      QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/codecs\"\n-      LIBS=\"$QT_LIBS\"\n-    fi\n-\n-    if test x$TARGET_OS == xwindows; then\n-      AC_CHECK_LIB([imm32],      [main],, BITCOIN_QT_FAIL(libimm32 not found))\n-    fi\n-  ])\n-\n-    #TODO: These are only needed when they're linked directly to parent libs. It really has nothing to do with windows.\n-    #Instead, check for missing functions in parent libs and assume static if they're absent.\n-    if test x$TARGET_OS == xwindows; then\n-      BITCOIN_QT_CHECK(AC_CHECK_LIB([qcncodecs],[main],,BITCOIN_QT_FAIL(libqcncodecs not found)))\n-      BITCOIN_QT_CHECK(AC_CHECK_LIB([qjpcodecs],[main],,BITCOIN_QT_FAIL(libqjpcodecs not found)))\n-      BITCOIN_QT_CHECK(AC_CHECK_LIB([qkrcodecs],[main],,BITCOIN_QT_FAIL(libqkrcodecs not found)))\n-      BITCOIN_QT_CHECK(AC_CHECK_LIB([qtwcodecs],[main],,BITCOIN_QT_FAIL(libqtwcodecs not found)))\n-    fi\n+  BITCOIN_QT_CHECK(AC_CHECK_LIB([protobuf] ,[main],,BITCOIN_QT_FAIL(libprotobuf not found)))\n+  if test x$use_qr != xno; then\n+    BITCOIN_QT_CHECK([AC_CHECK_LIB([qrencode], [main],, [have_qrencode=no])])\n+    BITCOIN_QT_CHECK([AC_CHECK_HEADER([qrencode.h],, have_qrencode=no)])\n+  fi\n+fi\n \n-    BITCOIN_QT_CHECK(AC_CHECK_LIB([QtCore]   ,[main],,BITCOIN_QT_FAIL(libQtCore not found)))\n-    BITCOIN_QT_CHECK(AC_CHECK_LIB([QtGui]    ,[main],,BITCOIN_QT_FAIL(libQtGui not found)))\n-    BITCOIN_QT_CHECK(AC_CHECK_LIB([QtNetwork],[main],,BITCOIN_QT_FAIL(libQtNetwork not found)))\n-    BITCOIN_QT_CHECK(AC_CHECK_LIB([protobuf] ,[main],,BITCOIN_QT_FAIL(libprotobuf not found)))\n+BITCOIN_QT_PATH_PROGS([PROTOC], [protoc],$protoc_bin_path)\n \n-  BITCOIN_QT_CHECK([\n-    QT_LIBS=\"$LIBS\"\n-    LIBS=\"$TEMP_LIBS\"\n+dnl sets $bitcoin_enable_qt, $bitcoin_enable_qt_test, $bitcoin_enable_qt_dbus\n+BITCOIN_QT_CONFIGURE([$use_pkgconfig], [qt4])\n \n-    TEMP_CPPFLAGS=\"$CPPFLAGS\"\n-    if test x$qt_include_path != x; then\n-      QT_INCLUDES=\"-I$qt_include_path -I$qt_include_path/QtCore -I$qt_include_path/QtGui -I$qt_include_path/QtNetwork -I$qt_include_path/QtTest -I$qt_include_path/QtDBus\"\n-      CPPFLAGS=\"$CPPFLAGS $QT_INCLUDES\"\n-    fi\n-  ])\n-    BITCOIN_QT_CHECK([AC_CHECK_HEADER([QtPlugin],,BITCOIN_QT_FAIL(QtCore headers missing))])\n-    BITCOIN_QT_CHECK([AC_CHECK_HEADER([QApplication],, BITCOIN_QT_FAIL(QtGui headers missing))])\n-    BITCOIN_QT_CHECK([AC_CHECK_HEADER([QLocalSocket],, BITCOIN_QT_FAIL(QtNetwork headers missing))])\n-\n-  BITCOIN_QT_CHECK([\n-    if test x$use_tests = xyes; then\n-      TEMP_LIBS=\"$LIBS\"\n-      LIBS=\n-      if test x$qt_lib_path != x; then\n-        LIBS=\"-L$qt_lib_path\"\n-      fi\n-      AC_CHECK_LIB([QtTest],      [main],, have_qt_test=no)\n-      AC_CHECK_HEADER([QTest],, have_qt_test=no)\n-      QT_TEST_LIBS=\"$LIBS\"\n-      LIBS=\"$TEMP_LIBS\"\n-    fi\n-    if test x$use_dbus != xno; then\n-      TEMP_LIBS=\"$LIBS\"\n-      LIBS=\n-      if test x$qt_lib_path != x; then\n-        LIBS=\"-L$qt_lib_path\"\n-      fi\n-      AC_CHECK_LIB([QtDBus],      [main],, have_qt_dbus=no)\n-      AC_CHECK_HEADER([QtDBus],, have_qt_dbus=no)\n-      QT_DBUS_LIBS=\"$LIBS\"\n-      LIBS=\"$TEMP_LIBS\"\n-    fi\n-    CPPFLAGS=\"$TEMP_CPPFLAGS\"\n-    if test x$use_qr != xno; then\n-      AC_CHECK_LIB([qrencode], [main],, [have_qrencode=no])\n-      AC_CHECK_HEADER([qrencode.h],, have_qrencode=no)\n-    fi\n-  ])\n-fi\n \n if test x$use_ipv6 = xyes; then\n   dnl Check for ipv6 build requirements\n@@ -613,10 +485,6 @@ if test x$enable_wallet != xno; then\n \n else\n   AC_MSG_RESULT(no)\n-\n-  if test \"x$use_qt\" != \"xno\"; then\n-    AC_MSG_ERROR([Cannot currently build Qt GUI with wallet disabled. Use --without-qt.])\n-  fi\n fi\n \n dnl enable ipv6 support\n@@ -662,46 +530,15 @@ else\n   fi\n fi\n \n-dnl enable qt support\n-AC_MSG_CHECKING([if qt should be enabled])\n-BITCOIN_QT_CHECK([\n-  use_qt=yes\n-  BUILD_QT=qt\n-  if test x$use_tests = xyes; then\n-    if test x$have_qt_test = xno; then\n-      AC_MSG_ERROR(\"libQtTest not found. Use --disable-tests or --without-qt.\")\n-    fi\n-  fi\n-  if test x$have_qt_dbus = xno;  then\n-    if test x$use_dbus = xyes; then\n-      AC_MSG_ERROR(\"libQtDBus not found. Install libQtDBus or remove --with-qtdbus.\")\n-    fi\n-    use_dbus=no\n-  fi\n-  if test x$XGETTEXT == x; then\n-    AC_MSG_WARN(\"xgettext is required to update qt translations\")\n-  fi\n-  if test x$LUPDATE == x; then\n-    AC_MSG_WARN(\"lupdate is required to update qt translations\")\n-  fi\n-],[\n-  use_qt=no\n-])\n-\n-AC_MSG_RESULT($use_qt)\n-\n dnl these are only used when qt is enabled\n-if test x$use_qt = xyes; then\n-\n+if test x$bitcoin_enable_qt != xno; then\n+  BUILD_QT=qt\n   dnl enable dbus support\n   AC_MSG_CHECKING([if dbus should be enabled])\n-  if test x$use_dbus != xno; then\n-    use_dbus=yes\n+  if test x$bitcoin_enable_qt_dbus != xno; then\n     AC_DEFINE([USE_DBUS],[1],[Define if dbus support should be compiled in])\n-  else\n-    use_dbus=no\n   fi\n-  AC_MSG_RESULT($use_dbus)\n+  AC_MSG_RESULT($bitcoin_enable_qt_dbus)\n \n   dnl enable qr support\n   AC_MSG_CHECKING([if qr should be enabled])\n@@ -720,8 +557,18 @@ if test x$use_qt = xyes; then\n     fi\n   fi\n \n-  if test x$use_tests$have_qt_test = xyesyes; then\n+  if test x$XGETTEXT == x; then\n+    AC_MSG_WARN(\"xgettext is required to update qt translations\")\n+  fi\n+\n+  if test x$use_tests = xyes; then\n     BUILD_TEST_QT=\"test\"\n+    if test x$bitcoin_enable_qt_test != xyes; then\n+      AC_MSG_ERROR(\"QT Test lib not found. Use --disable-tests or --without-qt.\")\n+    fi\n+  fi\n+  if test x$enable_wallet == xno; then\n+    AC_MSG_ERROR([Cannot currently build Qt GUI with wallet disabled. Use --without-qt.])\n   fi\n fi\n \n@@ -756,17 +603,10 @@ AC_SUBST(USE_QRCODE)\n AC_SUBST(USE_IPV6)\n AC_SUBST(INCLUDES)\n AC_SUBST(BOOST_LIBS)\n-AC_SUBST(MOC_DEFS)\n-AC_SUBST(QT_INCLUDES)\n-AC_SUBST(QT_TEST_LIBS)\n-AC_SUBST(QT_LIBS)\n-AC_SUBST(QT_DBUS_LIBS)\n-AC_SUBST(QT_DBUS_INCLUDES)\n-AC_SUBST(QT_TEST_INCLUDES)\n AC_SUBST(TESTDEFS)\n AC_SUBST(LEVELDB_TARGET_FLAGS)\n-AC_SUBST(BUILD_QT)\n AC_SUBST(BUILD_TEST)\n+AC_SUBST(BUILD_QT)\n AC_SUBST(BUILD_TEST_QT)\n AC_CONFIG_FILES([Makefile src/Makefile src/test/Makefile src/qt/Makefile src/qt/test/Makefile share/setup.nsi share/qt/Info.plist])\n AC_CONFIG_FILES([qa/pull-tester/run-bitcoind-for-test.sh],[chmod +x qa/pull-tester/run-bitcoind-for-test.sh])"
      },
      {
        "sha": "fdfb1867bc6ce2813d55e1a2bc70e2ddb5b99ddf",
        "filename": "qa/rpc-tests/send.sh",
        "status": "added",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6a0e2376a14c77585888373099109d51a08bd74f/qa/rpc-tests/send.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6a0e2376a14c77585888373099109d51a08bd74f/qa/rpc-tests/send.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/send.sh?ref=6a0e2376a14c77585888373099109d51a08bd74f",
        "patch": "@@ -0,0 +1,14 @@\n+#!/bin/bash\n+TIMEOUT=10\n+SIGNAL=HUP\n+if [ $# -eq 0 ]; then\n+  echo -e \"Usage:\\t$0 <cmd>\"\n+  echo -e \"\\tRuns <cmd> and wait ${TIMEOUT} seconds or until SIG${SIGNAL} is received.\"\n+  echo -e \"\\tReturns: 0 if SIG${SIGNAL} is received, 1 otherwise.\"\n+  exit 0\n+fi\n+trap '[[ ${PID} ]] && kill ${PID}' ${SIGNAL}\n+\"$@\"\n+sleep ${TIMEOUT} & PID=$!\n+wait ${PID} && exit 1\n+exit 0"
      },
      {
        "sha": "fed7d325615116bf06c224b0f97cb0688130903e",
        "filename": "qa/rpc-tests/util.sh",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6a0e2376a14c77585888373099109d51a08bd74f/qa/rpc-tests/util.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6a0e2376a14c77585888373099109d51a08bd74f/qa/rpc-tests/util.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/util.sh?ref=6a0e2376a14c77585888373099109d51a08bd74f",
        "patch": "@@ -23,6 +23,7 @@ function CreateDataDir {\n   echo \"rpcuser=rt\" >> $CONF\n   echo \"rpcpassword=rt\" >> $CONF\n   echo \"rpcwait=1\" >> $CONF\n+  echo \"walletnotify=killall -HUP `basename ${SENDANDWAIT}`\" >> $CONF\n   shift\n   while (( \"$#\" )); do\n       echo $1 >> $CONF\n@@ -59,7 +60,7 @@ function Send {\n   to=$2\n   amount=$3\n   address=$(Address $to)\n-  txid=$( $CLI $from sendtoaddress $address $amount )\n+  txid=$( ${SENDANDWAIT} $CLI $from sendtoaddress $address $amount )\n }\n \n # Use: Unspent <datadir> <n'th-last-unspent> <var>\n@@ -80,7 +81,7 @@ function CreateTxn1 {\n \n # Use: SendRawTxn <datadir> <hex_txn_data>\n function SendRawTxn {\n-  $CLI $1 sendrawtransaction $2\n+  ${SENDANDWAIT} $CLI $1 sendrawtransaction $2\n }\n \n # Use: GetBlocks <datadir>"
      },
      {
        "sha": "8d5a6cdc78bb4211575554bb1b439d0882dfb84e",
        "filename": "qa/rpc-tests/wallet.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6a0e2376a14c77585888373099109d51a08bd74f/qa/rpc-tests/wallet.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6a0e2376a14c77585888373099109d51a08bd74f/qa/rpc-tests/wallet.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/wallet.sh?ref=6a0e2376a14c77585888373099109d51a08bd74f",
        "patch": "@@ -12,6 +12,7 @@ BITCOIND=${1}/bitcoind\n CLI=${1}/bitcoin-cli\n \n DIR=\"${BASH_SOURCE%/*}\"\n+SENDANDWAIT=\"${DIR}/send.sh\"\n if [[ ! -d \"$DIR\" ]]; then DIR=\"$PWD\"; fi\n . \"$DIR/util.sh\"\n "
      },
      {
        "sha": "b9e6c262ca5b6515cd0303db455decf071f7195a",
        "filename": "src/Makefile.include",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6a0e2376a14c77585888373099109d51a08bd74f/src/Makefile.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6a0e2376a14c77585888373099109d51a08bd74f/src/Makefile.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.include?ref=6a0e2376a14c77585888373099109d51a08bd74f",
        "patch": "@@ -32,23 +32,23 @@ $(LIBBITCOINQT):\n \n ui_%.h: %.ui\n \t@test -d $(abs_builddir)/$(@D) || $(MKDIR_P) $(abs_builddir)/$(@D)\n-\t@test -f $(UIC) && $(UIC) -o $(abs_builddir)/$@ $(abs_srcdir)/$< || echo error: could not build $(abs_builddir)/$@\n+\t@test -f $(UIC) && QT_SELECT=$(QT_SELECT) $(UIC) -o $(abs_builddir)/$@ $(abs_srcdir)/$< || echo error: could not build $(abs_builddir)/$@\n \t$(SED) -i.bak -e '/^\\*\\*.*Created:/d' $(abs_builddir)/$@ && rm $(abs_builddir)/$@.bak\n \t$(SED) -i.bak -e '/^\\*\\*.*by:/d' $(abs_builddir)/$@ && rm $(abs_builddir)/$@.bak\n \n %.moc: %.cpp\n-\t$(MOC) $(QT_INCLUDES) $(MOC_DEFS) -o $@ $<\n+\tQT_SELECT=$(QT_SELECT) $(MOC) $(QT_INCLUDES) $(MOC_DEFS) -o $@ $<\n \t$(SED) -i.bak -e '/^\\*\\*.*Created:/d' $@ && rm $@.bak\n \t$(SED) -i.bak -e '/^\\*\\*.*by:/d' $@ && rm $@.bak\n \n moc_%.cpp: %.h\n-\t$(MOC) $(QT_INCLUDES) $(MOC_DEFS) -o $@ $<\n+\tQT_SELECT=$(QT_SELECT) $(MOC) $(QT_INCLUDES) $(MOC_DEFS) -o $@ $<\n \t$(SED) -i.bak -e '/^\\*\\*.*Created:/d' $@ && rm $@.bak\n \t$(SED) -i.bak -e '/^\\*\\*.*by:/d' $@ && rm $@.bak\n \n %.qm: %.ts\n \t@test -d $(abs_builddir)/$(@D) || $(MKDIR_P) $(abs_builddir)/$(@D)\n-\t@test -f $(LRELEASE) && $(LRELEASE) $(abs_srcdir)/$< -qm $(abs_builddir)/$@ || \\\n+\t@test -f $(LRELEASE) && QT_SELECT=$(QT_SELECT) $(LRELEASE) $(abs_srcdir)/$< -qm $(abs_builddir)/$@ || \\\n \t echo error: could not build $(abs_builddir)/$@\n \n %.pb.cc %.pb.h: %.proto"
      },
      {
        "sha": "91c399eef077f3340717a7d16724faa60daa3ac1",
        "filename": "src/m4/bitcoin_qt.m4",
        "status": "added",
        "additions": 380,
        "deletions": 0,
        "changes": 380,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6a0e2376a14c77585888373099109d51a08bd74f/src/m4/bitcoin_qt.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6a0e2376a14c77585888373099109d51a08bd74f/src/m4/bitcoin_qt.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/m4/bitcoin_qt.m4?ref=6a0e2376a14c77585888373099109d51a08bd74f",
        "patch": "@@ -0,0 +1,380 @@\n+dnl Helper for cases where a qt dependency is not met.\n+dnl Output: If qt version is auto, set bitcoin_enable_qt to false. Else, exit.\n+AC_DEFUN([BITCOIN_QT_FAIL],[\n+  if test \"x$bitcoin_qt_want_version\" = \"xauto\" && test x$bitcoin_qt_force != xyes; then\n+    if test x$bitcoin_enable_qt != xno; then\n+      AC_MSG_WARN([$1; bitcoin-qt frontend will not be built])\n+    fi\n+    bitcoin_enable_qt=no\n+  else\n+    AC_MSG_ERROR([$1])\n+  fi\n+])\n+\n+AC_DEFUN([BITCOIN_QT_CHECK],[\n+  if test \"x$bitcoin_enable_qt\" != \"xno\" && test x$bitcoin_qt_want_version != xno; then\n+    true\n+    $1\n+  else\n+    true\n+    $2\n+  fi\n+])\n+\n+dnl BITCOIN_QT_PATH_PROGS([FOO], [foo foo2], [/path/to/search/first], [continue if missing])\n+dnl Helper for finding the path of programs needed for QT.\n+dnl Inputs: $1: Variable to be set\n+dnl Inputs: $2: List of programs to search for\n+dnl Inputs: $3: Look for $2 here before $PATH\n+dnl Inputs: $4: If \"yes\", don't fail if $2 is not found.\n+dnl Output: $1 is set to the path of $2 if found. $2 are searched in order.\n+AC_DEFUN([BITCOIN_QT_PATH_PROGS],[\n+  BITCOIN_QT_CHECK([\n+    if test \"x$3\" != \"x\"; then\n+      AC_PATH_PROGS($1,$2,,$3)\n+    else\n+      AC_PATH_PROGS($1,$2)\n+    fi\n+    if test \"x$$1\" = \"x\" && test \"x$4\" != \"xyes\"; then\n+      BITCOIN_QT_FAIL([$1 not found])\n+    fi\n+  ])\n+])\n+\n+dnl Initialize qt input.\n+dnl This must be called before any other BITCOIN_QT* macros to ensure that\n+dnl input variables are set correctly.\n+dnl CAUTION: Do not use this inside of a conditional.\n+AC_DEFUN([BITCOIN_QT_INIT],[\n+  dnl enable qt support\n+  AC_ARG_WITH([qt],\n+    [AS_HELP_STRING([--with-qt],\n+    [with qt (no|qt4|qt5|auto. default is auto, qt4 tried first.)])],\n+    [\n+     bitcoin_qt_want_version=$withval\n+     if test x$bitcoin_qt_want_version = xyes; then\n+       bitcoin_qt_force=yes\n+       bitcoin_qt_want_version=auto\n+     fi\n+    ],\n+    [bitcoin_qt_want_version=auto])\n+\n+  AC_ARG_WITH([qt-incdir],[AS_HELP_STRING([--with-qt-incdir=INC_DIR],[specify qt include path (overridden by pkgconfig)])], [qt_include_path=$withval], [])\n+  AC_ARG_WITH([qt-libdir],[AS_HELP_STRING([--with-qt-libdir=LIB_DIR],[specify qt lib path (overridden by pkgconfig)])], [qt_lib_path=$withval], [])\n+  AC_ARG_WITH([qt-plugindir],[AS_HELP_STRING([--with-qt-plugindir=PLUGIN_DIR],[specify qt plugin path (overridden by pkgconfig)])], [qt_plugin_path=$withval], [])\n+  AC_ARG_WITH([qt-bindir],[AS_HELP_STRING([--with-qt-bindir=BIN_DIR],[specify qt bin path])], [qt_bin_path=$withval], [])\n+\n+  AC_ARG_WITH([qtdbus],\n+    [AS_HELP_STRING([--with-qtdbus],\n+    [enable DBus support (default is yes if qt is enabled and QtDBus is found)])],\n+    [use_dbus=$withval],\n+    [use_dbus=auto])\n+])\n+\n+dnl Find the appropriate version of Qt libraries and includes.\n+dnl Inputs: $1: Whether or not pkg-config should be used. yes|no. Default: yes.\n+dnl Inputs: $2: If $1 is \"yes\" and --with-qt=auto, which qt version should be\n+dnl         tried first.\n+dnl Outputs: See _BITCOIN_QT_FIND_LIBS_*\n+dnl Outputs: Sets variables for all qt-related tools.\n+dnl Outputs: bitcoin_enable_qt, bitcoin_enable_qt_dbus, bitcoin_enable_qt_test\n+AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n+  use_pkgconfig=$1\n+\n+  if test x$use_pkgconfig == x; then\n+    use_pkgconfig=yes\n+  fi\n+\n+  if test x$use_pkgconfig = xyes; then\n+    if test x$PKG_CONFIG == x; then\n+      AC_MSG_ERROR(pkg-config not found.)\n+    fi\n+    BITCOIN_QT_CHECK([_BITCOIN_QT_FIND_LIBS_WITH_PKGCONFIG([$2])])\n+  else\n+    BITCOIN_QT_CHECK([_BITCOIN_QT_FIND_LIBS_WITHOUT_PKGCONFIG])\n+  fi\n+\n+  BITCOIN_QT_PATH_PROGS([MOC], [moc-qt${bitcoin_qt_got_major_vers} moc${bitcoin_qt_got_major_vers} moc], $qt_bin_path)\n+  BITCOIN_QT_PATH_PROGS([UIC], [uic-qt${bitcoin_qt_got_major_vers} uic${bitcoin_qt_got_major_vers} uic], $qt_bin_path)\n+  BITCOIN_QT_PATH_PROGS([RCC], [rcc-qt${bitcoin_qt_got_major_vers} rcc${bitcoin_qt_got_major_vers} rcc], $qt_bin_path)\n+  BITCOIN_QT_PATH_PROGS([LRELEASE], [lrelease-qt${bitcoin_qt_got_major_vers} lrelease${bitcoin_qt_got_major_vers} lrelease], $qt_bin_path)\n+  BITCOIN_QT_PATH_PROGS([LUPDATE], [lupdate-qt${bitcoin_qt_got_major_vers} lupdate${bitcoin_qt_got_major_vers} lupdate],$qt_bin_path, yes)\n+\n+  case $host in\n+    *darwin*)\n+     BITCOIN_QT_CHECK([\n+       MOC_DEFS=\"-DQ_OS_MAC\"\n+       base_frameworks=\"-framework Foundation -framework ApplicationServices -framework AppKit\"\n+       AX_CHECK_LINK_FLAG([[$base_frameworks]],[QT_LIBS=\"$QT_LIBS $base_frameworks\"],[AC_MSG_ERROR(could not find base frameworks)])\n+       AC_SUBST(MOC_DEFS)\n+     ])\n+    ;;\n+  esac\n+\n+\n+  dnl enable qt support\n+  AC_MSG_CHECKING(if QT should be enabled)\n+  BITCOIN_QT_CHECK([\n+    bitcoin_enable_qt=yes\n+    bitcoin_enable_qt_test=yes\n+    if test x$have_qt_test = xno; then\n+      bitcoin_enable_qt_test=no\n+    fi\n+    bitcoin_enable_qt_dbus=yes\n+    if test x$have_qt_dbus = xno;  then\n+      bitcoin_enable_qt_dbus=no\n+      if test x$use_dbus = xyes; then\n+        AC_MSG_ERROR(\"libQtDBus not found. Install libQtDBus or remove --with-qtdbus.\")\n+      fi\n+    fi\n+    if test x$LUPDATE == x; then\n+      AC_MSG_WARN(\"lupdate is required to update qt translations\")\n+    fi\n+  ],[\n+    bitcoin_enable_qt=no\n+  ])\n+  AC_MSG_RESULT([$bitcoin_enable_qt (Qt${bitcoin_qt_got_major_vers})])\n+\n+  AC_SUBST(QT_INCLUDES)\n+  AC_SUBST(QT_LIBS)\n+  AC_SUBST(QT_DBUS_INCLUDES)\n+  AC_SUBST(QT_DBUS_LIBS)\n+  AC_SUBST(QT_TEST_INCLUDES)\n+  AC_SUBST(QT_TEST_LIBS)\n+  AC_SUBST(QT_SELECT, qt${bitcoin_qt_got_major_vers})\n+])\n+\n+dnl All macros below are internal and should _not_ be used from the main\n+dnl configure.ac.\n+dnl ----\n+\n+dnl Internal. Check if the included version of QT is Qt5.\n+dnl Requires: INCLUDES must be populated as necessary.\n+dnl Output: bitcoin_cv_qt5=yes|no\n+AC_DEFUN([_BITCOIN_QT_CHECK_QT5],[\n+  AC_CACHE_CHECK(for QT 5, bitcoin_cv_qt5,[\n+  AC_TRY_COMPILE(\n+    [#include <QtCore>],\n+    [\n+      #if QT_VERSION < 0x050000\n+      choke me\n+      #else\n+      return 0;\n+      #endif\n+    ],\n+    bitcoin_cv_qt5=yes,\n+    bitcoin_cv_qt5=no)\n+])])\n+\n+dnl Internal. Check if the linked version of QT was built as static libs.\n+dnl Requires: Qt5. This check cannot determine if Qt4 is static.\n+dnl Requires: INCLUDES and LIBS must be populated as necessary.\n+dnl Output: bitcoin_cv_static_qt=yes|no\n+dnl Output: Defines QT_STATICPLUGIN if plugins are static.\n+AC_DEFUN([_BITCOIN_QT_IS_STATIC],[\n+  AC_CACHE_CHECK(for static QT, bitcoin_cv_static_qt,[\n+  AC_TRY_COMPILE(\n+    [#include <QtCore>],\n+    [\n+      #if defined(QT_STATIC)\n+      return 0;\n+      #else\n+      choke me\n+      #endif\n+    ],\n+    [bitcoin_cv_static_qt=yes],\n+    [bitcoin_cv_static_qt=no])\n+  ])\n+  if test xbitcoin_cv_static_qt = xyes; then\n+    AC_DEFINE(QT_STATICPLUGIN, 1, [Define this symbol for static QT plugins])\n+  fi\n+])\n+\n+dnl Internal. Check if the link-requirements for static plugins are met.\n+dnl Requires: INCLUDES and LIBS must be populated as necessary.\n+dnl Inputs: $1: A series of Q_IMPORT_PLUGIN().\n+dnl Inputs: $2: The libraries that resolve $1.\n+dnl Output: QT_LIBS is prepended or configure exits.\n+AC_DEFUN([_BITCOIN_QT_CHECK_STATIC_PLUGINS],[\n+  AC_MSG_CHECKING(for static QT plugins: $2)\n+  CHECK_STATIC_PLUGINS_TEMP_LIBS=\"$LIBS\"\n+  LIBS=\"$2 $QT_LIBS $LIBS\"\n+  AC_TRY_LINK([\n+    #define QT_STATICPLUGIN\n+    #include <QtPlugin>\n+    $1],\n+    [return 0;],\n+    [AC_MSG_RESULT(yes); QT_LIBS=\"$2 $QT_LIBS\"],\n+    [AC_MSG_RESULT(no)]; BITCOIN_QT_FAIL(Could not resolve: $2))\n+  LIBS=\"$CHECK_STATIC_PLUGINS_TEMP_LIBS\"\n+])\n+\n+dnl Internal. Find Qt libraries using pkg-config.\n+dnl Inputs: bitcoin_qt_want_version (from --with-qt=). The version to check\n+dnl         first.\n+dnl Inputs: $1: If bitcoin_qt_want_version is \"auto\", check for this version\n+dnl         first.\n+dnl Outputs: All necessary QT_* variables are set.\n+dnl Outputs: bitcoin_qt_got_major_vers is set to \"4\" or \"5\".\n+dnl Outputs: have_qt_test and have_qt_dbus are set (if applicable) to yes|no.\n+AC_DEFUN([_BITCOIN_QT_FIND_LIBS_WITH_PKGCONFIG],[\n+  m4_ifdef([PKG_CHECK_MODULES],[\n+  auto_priority_version=$1\n+  if test x$auto_priority_version == x; then\n+    auto_priority_version=qt5\n+  fi\n+    if test x$bitcoin_qt_want_version == xqt5 ||  ( test x$bitcoin_qt_want_version == xauto && test x$auto_priority_version == xqt5 ); then\n+      QT_LIB_PREFIX=Qt5\n+      bitcoin_qt_got_major_vers=5\n+    else\n+      QT_LIB_PREFIX=Qt\n+      bitcoin_qt_got_major_vers=4\n+    fi\n+    qt5_modules=\"Qt5Core Qt5Gui Qt5Network Qt5Widgets\"\n+    qt4_modules=\"QtCore QtGui QtNetwork\"\n+    BITCOIN_QT_CHECK([\n+      if test x$bitcoin_qt_want_version == xqt5 || ( test x$bitcoin_qt_want_version == xauto && test x$auto_priority_version == xqt5 ); then\n+        PKG_CHECK_MODULES([QT], [$qt5_modules], [QT_INCLUDES=\"$QT_CFLAGS\"; have_qt=yes],[have_qt=no])\n+      elif test x$bitcoin_qt_want_version == xqt4 || ( test x$bitcoin_qt_want_version == xauto && test x$auto_priority_version == xqt4 ); then\n+        PKG_CHECK_MODULES([QT], [$qt4_modules], [QT_INCLUDES=\"$QT_CFLAGS\"; have_qt=yes], [have_qt=no])\n+      fi\n+\n+      dnl qt version is set to 'auto' and the preferred version wasn't found. Now try the other.\n+      if test x$have_qt == xno && test x$bitcoin_qt_want_version == xauto; then\n+        if test x$auto_priority_version = x$qt5; then\n+          PKG_CHECK_MODULES([QT], [$qt4_modules], [QT_INCLUDES=\"$QT_CFLAGS\"; have_qt=yes; QT_LIB_PREFIX=Qt; bitcoin_qt_got_major_vers=4], [have_qt=no])\n+        else\n+          PKG_CHECK_MODULES([QT], [$qt5_modules], [QT_INCLUDES=\"$QT_CFLAGS\"; have_qt=yes; QT_LIB_PREFIX=Qt5; bitcoin_qt_got_major_vers=5], [have_qt=no])\n+        fi\n+      fi\n+      if test x$have_qt != xyes; then\n+        have_qt=no\n+        BITCOIN_QT_FAIL([Qt dependencies not found])\n+      fi\n+    ])\n+    BITCOIN_QT_CHECK([\n+      PKG_CHECK_MODULES([QT_TEST], [${QT_LIB_PREFIX}Test], [QT_TEST_INCLUDES=\"$QT_TEST_CFLAGS\"; have_qt_test=yes], [have_qt_test=no])\n+      if test x$use_dbus != xno; then\n+        PKG_CHECK_MODULES([QT_DBUS], [${QT_LIB_PREFIX}DBus], [QT_DBUS_INCLUDES=\"$QT_DBUS_CFLAGS\"; have_qt_dbus=yes], [have_qt_dbus=no])\n+      fi\n+    ])\n+  ])\n+  true; dnl\n+])\n+\n+dnl Internal. Find Qt libraries without using pkg-config. Version is deduced\n+dnl from the discovered headers.\n+dnl Inputs: bitcoin_qt_want_version (from --with-qt=). The version to use.\n+dnl         If \"auto\", the version will be discovered by _BITCOIN_QT_CHECK_QT5.\n+dnl Outputs: All necessary QT_* variables are set.\n+dnl Outputs: bitcoin_qt_got_major_vers is set to \"4\" or \"5\".\n+dnl Outputs: have_qt_test and have_qt_dbus are set (if applicable) to yes|no.\n+AC_DEFUN([_BITCOIN_QT_FIND_LIBS_WITHOUT_PKGCONFIG],[\n+  TEMP_CPPFLAGS=\"$CPPFLAGS\"\n+  TEMP_LIBS=\"$LIBS\"\n+  BITCOIN_QT_CHECK([\n+    if test x$qt_include_path != x; then\n+      QT_INCLUDES=\"-I$qt_include_path -I$qt_include_path/QtCore -I$qt_include_path/QtGui -I$qt_include_path/QtWidgets -I$qt_include_path/QtNetwork -I$qt_include_path/QtTest -I$qt_include_path/QtDBus\"\n+      CPPFLAGS=\"$QT_INCLUDES $CPPFLAGS\"\n+    fi\n+  ])\n+\n+  BITCOIN_QT_CHECK([AC_CHECK_HEADER([QtPlugin],,BITCOIN_QT_FAIL(QtCore headers missing))])\n+  BITCOIN_QT_CHECK([AC_CHECK_HEADER([QApplication],, BITCOIN_QT_FAIL(QtGui headers missing))])\n+  BITCOIN_QT_CHECK([AC_CHECK_HEADER([QLocalSocket],, BITCOIN_QT_FAIL(QtNetwork headers missing))])\n+\n+  BITCOIN_QT_CHECK([\n+    if test x$bitcoin_qt_want_version = xauto; then\n+      _BITCOIN_QT_CHECK_QT5\n+    fi\n+    if test x$bitcoin_cv_qt5 == xyes || test x$bitcoin_qt_want_version = xqt5; then\n+      QT_LIB_PREFIX=Qt5\n+      bitcoin_qt_got_major_vers=5\n+    else\n+      QT_LIB_PREFIX=Qt\n+      bitcoin_qt_got_major_vers=4\n+    fi\n+  ])\n+\n+  BITCOIN_QT_CHECK([\n+    LIBS=\n+    if test x$qt_lib_path != x; then\n+      LIBS=\"$LIBS -L$qt_lib_path\"\n+    fi\n+    if test x$qt_plugin_path != x; then\n+      LIBS=\"$LIBS -L$qt_plugin_path/accessible\"\n+      if test x$bitcoin_qt_got_major_vers == x5; then\n+        LIBS=\"$LIBS -L$qt_plugin_path/platforms\"\n+      else\n+        LIBS=\"$LIBS -L$qt_plugin_path/codecs\"\n+      fi\n+    fi\n+\n+    if test x$TARGET_OS == xwindows; then\n+      AC_CHECK_LIB([imm32],      [main],, BITCOIN_QT_FAIL(libimm32 not found))\n+    fi\n+  ])\n+\n+  BITCOIN_QT_CHECK(AC_CHECK_LIB([z] ,[main],,BITCOIN_QT_FAIL(zlib not found)))\n+  BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Core]   ,[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXCore not found)))\n+  BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Gui]    ,[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXGui not found)))\n+  BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Network],[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXNetwork not found)))\n+  if test x$bitcoin_qt_got_major_vers == x5; then\n+    BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Widgets],[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXWidgets not found)))\n+  fi\n+  QT_LIBS=\"$LIBS\"\n+  LIBS=\"$TEMP_LIBS\"\n+\n+  dnl This is ugly and complicated. Yuck. Works as follows:\n+  dnl We can't discern whether Qt4 builds are static or not. For Qt5, we can\n+  dnl check a header to find out. When Qt is built statically, some plugins must\n+  dnl be linked into the final binary as well. These plugins have changed between\n+  dnl Qt4 and Qt5. With Qt5, languages moved into core and the WindowsIntegration\n+  dnl plugin was added. Since we can't tell if Qt4 is static or not, it is \n+  dnl assumed for all non-pkg-config builds.\n+  dnl _BITCOIN_QT_CHECK_STATIC_PLUGINS does a quick link-check and appends the\n+  dnl results to QT_LIBS.\n+  BITCOIN_QT_CHECK([\n+    if test x$bitcoin_qt_got_major_vers == x5; then\n+      _BITCOIN_QT_IS_STATIC\n+      if test x$bitcoin_cv_static_qt == xyes; then \n+        AC_DEFINE(QT_STATICPLUGIN, 1, [Define this symbol if qt plugins are static])\n+        _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(AccessibleFactory)], [-lqtaccessiblewidgets])\n+        if test x$TARGET_OS == xwindows; then\n+          _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QWindowsIntegrationPlugin)],[-lqwindows])\n+        fi\n+      fi\n+    else\n+      AC_DEFINE(QT_STATICPLUGIN, 1, [Define this symbol if qt plugins are static])\n+      _BITCOIN_QT_CHECK_STATIC_PLUGINS([\n+         Q_IMPORT_PLUGIN(qcncodecs)\n+         Q_IMPORT_PLUGIN(qjpcodecs)\n+         Q_IMPORT_PLUGIN(qtwcodecs)\n+         Q_IMPORT_PLUGIN(qkrcodecs)\n+         Q_IMPORT_PLUGIN(AccessibleFactory)],\n+         [-lqcncodecs -lqjpcodecs -lqtwcodecs -lqkrcodecs -lqtaccessiblewidgets])\n+    fi\n+  ])\n+\n+  BITCOIN_QT_CHECK([\n+    LIBS=\n+    if test x$qt_lib_path != x; then\n+      LIBS=\"-L$qt_lib_path\"\n+    fi\n+    AC_CHECK_LIB([${QT_LIB_PREFIX}Test],      [main],, have_qt_test=no)\n+    AC_CHECK_HEADER([QTest],, have_qt_test=no)\n+    QT_TEST_LIBS=\"$LIBS\"\n+    if test x$use_dbus != xno; then\n+      LIBS=\n+      if test x$qt_lib_path != x; then\n+        LIBS=\"-L$qt_lib_path\"\n+      fi\n+      AC_CHECK_LIB([${QT_LIB_PREFIX}DBus],      [main],, have_qt_dbus=no)\n+      AC_CHECK_HEADER([QtDBus],, have_qt_dbus=no)\n+      QT_DBUS_LIBS=\"$LIBS\"\n+    fi\n+  ])\n+  CPPFLAGS=\"$TEMP_CPPFLAGS\"\n+  LIBS=\"$TEMP_LIBS\"\n+])\n+"
      },
      {
        "sha": "abd8a9f118a59d70a843f4ca40f6de180b2199d3",
        "filename": "src/qt/Makefile.am",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6a0e2376a14c77585888373099109d51a08bd74f/src/qt/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6a0e2376a14c77585888373099109d51a08bd74f/src/qt/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/Makefile.am?ref=6a0e2376a14c77585888373099109d51a08bd74f",
        "patch": "@@ -220,10 +220,10 @@ bitcoinstrings.cpp: FORCE\n \n translate: bitcoinstrings.cpp $(QT_FORMS_UI) $(QT_FORMS_UI) $(BITCOIN_QT_CPP) $(BITCOIN_QT_H) $(BITCOIN_MM)\n \t@test -n $(LUPDATE) || echo \"lupdate is required for updating translations\"\n-\t@$(LUPDATE) $^ -locations relative -no-obsolete -ts locale/bitcoin_en.ts\n+\t@QT_SELECT=$(QT_SELECT) $(LUPDATE) $^ -locations relative -no-obsolete -ts locale/bitcoin_en.ts\n \n $(QT_QRC_CPP): $(QT_QRC) $(QT_QM) $(QT_FORMS_H) $(RES_ICONS) $(RES_IMAGES) $(RES_MOVIES) $(PROTOBUF_H)\n-\t@cd $(abs_srcdir); test -f $(RCC) && $(RCC) -name bitcoin -o $(abs_builddir)/$@ $< || \\\n+\t@cd $(abs_srcdir); test -f $(RCC) && QT_SELECT=$(QT_SELECT) $(RCC) -name bitcoin -o $(abs_builddir)/$@ $< || \\\n \t  echo error: could not build $@\n \t$(SED) -i.bak -e '/^\\*\\*.*Created:/d' $@ && rm $@.bak\n \t$(SED) -i.bak -e '/^\\*\\*.*by:/d' $@ && rm $@.bak"
      },
      {
        "sha": "794d12f69b4dcd30a7c6ffdc9dbd0332bce59039",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 7,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6a0e2376a14c77585888373099109d51a08bd74f/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6a0e2376a14c77585888373099109d51a08bd74f/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=6a0e2376a14c77585888373099109d51a08bd74f",
        "patch": "@@ -2,6 +2,7 @@\n // Distributed under the MIT/X11 software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#include \"bitcoin-config.h\"\n #include \"bitcoingui.h\"\n \n #include \"clientmodel.h\"\n@@ -30,19 +31,22 @@\n #include <QTimer>\n #include <QTranslator>\n \n-#if QT_VERSION < 0x050000\n-#include <QTextCodec>\n-#endif\n-\n-#if defined(BITCOIN_NEED_QT_PLUGINS) && !defined(_BITCOIN_QT_PLUGINS_INCLUDED)\n-#define _BITCOIN_QT_PLUGINS_INCLUDED\n-#define __INSURE__\n+#if defined(QT_STATICPLUGIN)\n #include <QtPlugin>\n+#if QT_VERSION < 0x050000\n Q_IMPORT_PLUGIN(qcncodecs)\n Q_IMPORT_PLUGIN(qjpcodecs)\n Q_IMPORT_PLUGIN(qtwcodecs)\n Q_IMPORT_PLUGIN(qkrcodecs)\n Q_IMPORT_PLUGIN(qtaccessiblewidgets)\n+#else\n+Q_IMPORT_PLUGIN(AccessibleFactory)\n+Q_IMPORT_PLUGIN(QWindowsIntegrationPlugin);\n+#endif\n+#endif\n+\n+#if QT_VERSION < 0x050000\n+#include <QTextCodec>\n #endif\n \n // Declare meta types used for QMetaObject::invokeMethod"
      },
      {
        "sha": "38a029dbe5b435688873b9ec92362756be4276cd",
        "filename": "src/qt/notificator.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6a0e2376a14c77585888373099109d51a08bd74f/src/qt/notificator.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6a0e2376a14c77585888373099109d51a08bd74f/src/qt/notificator.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/notificator.cpp?ref=6a0e2376a14c77585888373099109d51a08bd74f",
        "patch": "@@ -14,18 +14,18 @@\n #include <QSystemTrayIcon>\n #include <QTemporaryFile>\n #include <QVariant>\n-\n-#ifdef Q_OS_MAC\n-#include \"macnotificationhandler.h\"\n-\n-#include <ApplicationServices/ApplicationServices.h>\n-#endif\n-\n #ifdef USE_DBUS\n #include <stdint.h>\n-\n #include <QtDBus>\n #endif\n+// Include ApplicationServices.h after QtDbus to avoid redefinition of check().\n+// This affects at least OSX 10.6. See /usr/include/AssertMacros.h for details.\n+// Note: This could also be worked around using:\n+// #define __ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES 0\n+#ifdef Q_OS_MAC\n+#include <ApplicationServices/ApplicationServices.h>\n+#include \"macnotificationhandler.h\"\n+#endif\n \n \n // https://wiki.ubuntu.com/NotificationDevelopmentGuidelines recommends at least 128"
      },
      {
        "sha": "01505243377679fa9f7b155c60b8c9f82bb081f4",
        "filename": "src/qt/test/Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6a0e2376a14c77585888373099109d51a08bd74f/src/qt/test/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6a0e2376a14c77585888373099109d51a08bd74f/src/qt/test/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/Makefile.am?ref=6a0e2376a14c77585888373099109d51a08bd74f",
        "patch": "@@ -18,7 +18,7 @@ test_bitcoin_qt_CPPFLAGS = $(AM_CPPFLAGS) $(QT_INCLUDES) $(QT_TEST_INCLUDES)\n test_bitcoin_qt_SOURCES = test_main.cpp uritests.cpp paymentservertests.cpp $(TEST_QT_H)\n nodist_test_bitcoin_qt_SOURCES = $(TEST_QT_MOC_CPP)\n test_bitcoin_qt_LDADD = $(LIBBITCOINQT) $(LIBBITCOIN_SERVER) $(LIBBITCOIN_WALLET) $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBLEVELDB) \\\n-  $(LIBMEMENV) $(BOOST_LIBS) $(QT_LIBS) $(QT_DBUS_LIBS) $(QT_TEST_LIBS) \\\n+  $(LIBMEMENV) $(BOOST_LIBS) $(QT_DBUS_LIBS) $(QT_TEST_LIBS) $(QT_LIBS) \\\n   $(QR_LIBS) $(PROTOBUF_LIBS) $(BDB_LIBS)\n \n CLEANFILES = $(BUILT_SOURCES) *.gcda *.gcno"
      },
      {
        "sha": "ad0dfd9823bde873e28931c8022270594fd90c97",
        "filename": "src/qt/test/test_main.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6a0e2376a14c77585888373099109d51a08bd74f/src/qt/test/test_main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6a0e2376a14c77585888373099109d51a08bd74f/src/qt/test/test_main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/test_main.cpp?ref=6a0e2376a14c77585888373099109d51a08bd74f",
        "patch": "@@ -1,10 +1,19 @@\n+#include \"bitcoin-config.h\"\n #include \"paymentservertests.h\"\n #include \"uritests.h\"\n \n #include <QCoreApplication>\n #include <QObject>\n #include <QTest>\n \n+#if defined(QT_STATICPLUGIN) && QT_VERSION < 0x050000\n+#include <QtPlugin>\n+Q_IMPORT_PLUGIN(qcncodecs)\n+Q_IMPORT_PLUGIN(qjpcodecs)\n+Q_IMPORT_PLUGIN(qtwcodecs)\n+Q_IMPORT_PLUGIN(qkrcodecs)\n+#endif\n+\n // This is all you need to run all the tests\n int main(int argc, char *argv[])\n {"
      }
    ]
  },
  {
    "sha": "202d853bbea8ecb2164b9c9dc69e2129b45f05f8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyMDJkODUzYmJlYThlY2IyMTY0YjljOWRjNjllMjEyOWI0NWYwNWY4",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-07T10:30:17Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-11T09:20:28Z"
      },
      "message": "qt: Move initialization/shutdown to a thread\n\nMove AppInit2 and Shutdown to a thread.\n\nThis allows a more responsive splash screen, prevents 'process does not respond'\nmessages from the window system and will allow for showing a user friendly\nwindow while shutting down.",
      "tree": {
        "sha": "86b48c4d03a96ca3698962ac9baac5c2ab085483",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/86b48c4d03a96ca3698962ac9baac5c2ab085483"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/202d853bbea8ecb2164b9c9dc69e2129b45f05f8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/202d853bbea8ecb2164b9c9dc69e2129b45f05f8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/202d853bbea8ecb2164b9c9dc69e2129b45f05f8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/202d853bbea8ecb2164b9c9dc69e2129b45f05f8/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6a0e2376a14c77585888373099109d51a08bd74f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6a0e2376a14c77585888373099109d51a08bd74f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6a0e2376a14c77585888373099109d51a08bd74f"
      }
    ],
    "stats": {
      "total": 415,
      "additions": 301,
      "deletions": 114
    },
    "files": [
      {
        "sha": "99fdecb03a60aa53493020b893f8668da07d7cff",
        "filename": "src/qt/Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/202d853bbea8ecb2164b9c9dc69e2129b45f05f8/src/qt/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/202d853bbea8ecb2164b9c9dc69e2129b45f05f8/src/qt/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/Makefile.am?ref=202d853bbea8ecb2164b9c9dc69e2129b45f05f8",
        "patch": "@@ -108,7 +108,7 @@ QT_MOC_CPP = moc_aboutdialog.cpp moc_addressbookpage.cpp \\\n \n BITCOIN_MM = macdockiconhandler.mm macnotificationhandler.mm\n \n-QT_MOC = intro.moc overviewpage.moc rpcconsole.moc\n+QT_MOC = intro.moc overviewpage.moc rpcconsole.moc bitcoin.moc\n \n QT_QRC_CPP = qrc_bitcoin.cpp\n QT_QRC = bitcoin.qrc"
      },
      {
        "sha": "d4a834acb698a8252032b8068642250f77d2ecac",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 298,
        "deletions": 113,
        "changes": 411,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/202d853bbea8ecb2164b9c9dc69e2129b45f05f8/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/202d853bbea8ecb2164b9c9dc69e2129b45f05f8/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=202d853bbea8ecb2164b9c9dc69e2129b45f05f8",
        "patch": "@@ -30,6 +30,8 @@\n #include <QSettings>\n #include <QTimer>\n #include <QTranslator>\n+#include <QWeakPointer>\n+#include <QThread>\n \n #if defined(QT_STATICPLUGIN)\n #include <QtPlugin>\n@@ -52,18 +54,18 @@ Q_IMPORT_PLUGIN(QWindowsIntegrationPlugin);\n // Declare meta types used for QMetaObject::invokeMethod\n Q_DECLARE_METATYPE(bool*)\n \n-// Need a global reference for the notifications to find the GUI\n-static BitcoinGUI *guiref;\n-static SplashScreen *splashref;\n+// Need a global reference for the notifications to find the GUI and splash screen\n+static QWeakPointer<BitcoinGUI> guiref;\n+static QWeakPointer<SplashScreen> splashref;\n \n static bool ThreadSafeMessageBox(const std::string& message, const std::string& caption, unsigned int style)\n {\n-    if(guiref)\n+    if(!guiref.isNull())\n     {\n         bool modal = (style & CClientUIInterface::MODAL);\n         bool ret = false;\n         // In case of modal message, use blocking connection to wait for user to click a button\n-        QMetaObject::invokeMethod(guiref, \"message\",\n+        QMetaObject::invokeMethod(guiref.data(), \"message\",\n                                    modal ? GUIUtil::blockingGUIThreadConnection() : Qt::QueuedConnection,\n                                    Q_ARG(QString, QString::fromStdString(caption)),\n                                    Q_ARG(QString, QString::fromStdString(message)),\n@@ -81,10 +83,13 @@ static bool ThreadSafeMessageBox(const std::string& message, const std::string&\n \n static void InitMessage(const std::string &message)\n {\n-    if(splashref)\n+    if(!splashref.isNull())\n     {\n-        splashref->showMessage(QString::fromStdString(message), Qt::AlignBottom|Qt::AlignHCenter, QColor(55,55,55));\n-        qApp->processEvents();\n+        QMetaObject::invokeMethod(splashref.data(), \"showMessage\",\n+            Qt::QueuedConnection,\n+            Q_ARG(QString, QString::fromStdString(message)),\n+            Q_ARG(int, Qt::AlignBottom|Qt::AlignHCenter),\n+            Q_ARG(QColor, QColor(55,55,55)));\n     }\n     LogPrintf(\"init message: %s\\n\", message.c_str());\n }\n@@ -97,15 +102,6 @@ static std::string Translate(const char* psz)\n     return QCoreApplication::translate(\"bitcoin-core\", psz).toStdString();\n }\n \n-/* Handle runaway exceptions. Shows a message box with the problem and quits the program.\n- */\n-static void handleRunawayException(std::exception *e)\n-{\n-    PrintExceptionContinue(e, \"Runaway exception\");\n-    QMessageBox::critical(0, \"Runaway exception\", BitcoinGUI::tr(\"A fatal error occurred. Bitcoin can no longer continue safely and will quit.\") + QString(\"\\n\\n\") + QString::fromStdString(strMiscWarning));\n-    exit(1);\n-}\n-\n /** Set up translations */\n static void initTranslations(QTranslator &qtTranslatorBase, QTranslator &qtTranslator, QTranslator &translatorBase, QTranslator &translator)\n {\n@@ -162,6 +158,265 @@ void DebugMessageHandler(QtMsgType type, const QMessageLogContext& context, cons\n }\n #endif\n \n+/** Class encapsulating Bitcoin Core startup and shutdown.\n+ * Allows running startup and shutdown in a different thread from the UI thread.\n+ */\n+class BitcoinCore: public QObject\n+{\n+    Q_OBJECT\n+public:\n+    explicit BitcoinCore();\n+\n+public slots:\n+    void initialize();\n+    void shutdown();\n+\n+signals:\n+    void initializeResult(int retval);\n+    void shutdownResult(int retval);\n+    void runawayException(const QString &message);\n+\n+private:\n+    boost::thread_group threadGroup;\n+\n+    /// Pass fatal exception message to UI thread\n+    void handleRunawayException(std::exception *e);\n+};\n+\n+/** Main Bitcoin application object */\n+class BitcoinApplication: public QApplication\n+{\n+    Q_OBJECT\n+public:\n+    explicit BitcoinApplication(int &argc, char **argv);\n+    ~BitcoinApplication();\n+\n+    /// Create payment server\n+    void createPaymentServer();\n+    /// Create options model\n+    void createOptionsModel();\n+    /// Create main window\n+    void createWindow(bool isaTestNet);\n+\n+    /// Request core initialization\n+    void requestInitialize();\n+    /// Request core shutdown\n+    void requestShutdown();\n+\n+    /// Get process return value\n+    int getReturnValue() { return returnValue; }\n+\n+public slots:\n+    void initializeResult(int retval);\n+    void shutdownResult(int retval);\n+    /// Handle runaway exceptions. Shows a message box with the problem and quits the program.\n+    void handleRunawayException(const QString &message);\n+\n+signals:\n+    void requestedInitialize();\n+    void requestedShutdown();\n+    void stopThread();\n+\n+private:\n+    QThread *coreThread;\n+    PaymentServer* paymentServer;\n+    OptionsModel *optionsModel;\n+    ClientModel *clientModel;\n+    BitcoinGUI *window;\n+    WalletModel *walletModel;\n+    int returnValue;\n+\n+    void startThread();\n+};\n+\n+#include \"bitcoin.moc\"\n+\n+BitcoinCore::BitcoinCore():\n+    QObject()\n+{\n+}\n+\n+void BitcoinCore::handleRunawayException(std::exception *e)\n+{\n+    PrintExceptionContinue(e, \"Runaway exception\");\n+    emit runawayException(QString::fromStdString(strMiscWarning));\n+}\n+\n+void BitcoinCore::initialize()\n+{\n+    try\n+    {\n+        LogPrintf(\"Running AppInit2 in thread\\n\");\n+        int rv = AppInit2(threadGroup);\n+        emit initializeResult(rv);\n+    } catch (std::exception& e) {\n+        handleRunawayException(&e);\n+    } catch (...) {\n+        handleRunawayException(NULL);\n+    }\n+}\n+\n+void BitcoinCore::shutdown()\n+{\n+    try\n+    {\n+        LogPrintf(\"Running Shutdown in thread\\n\");\n+        threadGroup.interrupt_all();\n+        threadGroup.join_all();\n+        Shutdown();\n+        LogPrintf(\"Shutdown finished\\n\");\n+        emit shutdownResult(1);\n+    } catch (std::exception& e) {\n+        handleRunawayException(&e);\n+    } catch (...) {\n+        handleRunawayException(NULL);\n+    }\n+}\n+\n+BitcoinApplication::BitcoinApplication(int &argc, char **argv):\n+    QApplication(argc, argv),\n+    coreThread(0),\n+    paymentServer(0),\n+    optionsModel(0),\n+    clientModel(0),\n+    window(0),\n+    walletModel(0),\n+    returnValue(0)\n+{\n+    setQuitOnLastWindowClosed(false);\n+    startThread();\n+}\n+\n+BitcoinApplication::~BitcoinApplication()\n+{\n+    LogPrintf(\"Stopping thread\\n\");\n+    emit stopThread();\n+    coreThread->wait();\n+    LogPrintf(\"Stopped thread\\n\");\n+}\n+\n+void BitcoinApplication::createPaymentServer()\n+{\n+    paymentServer = new PaymentServer(this);\n+}\n+\n+void BitcoinApplication::createOptionsModel()\n+{\n+    optionsModel = new OptionsModel();\n+}\n+\n+void BitcoinApplication::createWindow(bool isaTestNet)\n+{\n+    window = new BitcoinGUI(isaTestNet, 0);\n+    guiref = window;\n+\n+    QTimer* pollShutdownTimer = new QTimer(window);\n+    connect(pollShutdownTimer, SIGNAL(timeout()), window, SLOT(detectShutdown()));\n+    pollShutdownTimer->start(200);\n+}\n+\n+void BitcoinApplication::startThread()\n+{\n+    coreThread = new QThread(this);\n+    BitcoinCore *executor = new BitcoinCore();\n+    executor->moveToThread(coreThread);\n+\n+    /*  communication to and from thread */\n+    connect(executor, SIGNAL(initializeResult(int)), this, SLOT(initializeResult(int)));\n+    connect(executor, SIGNAL(shutdownResult(int)), this, SLOT(shutdownResult(int)));\n+    connect(executor, SIGNAL(runawayException(QString)), this, SLOT(handleRunawayException(QString)));\n+    connect(this, SIGNAL(requestedInitialize()), executor, SLOT(initialize()));\n+    connect(this, SIGNAL(requestedShutdown()), executor, SLOT(shutdown()));\n+    /*  make sure executor object is deleted in its own thread */\n+    connect(this, SIGNAL(stopThread()), executor, SLOT(deleteLater()));\n+    connect(this, SIGNAL(stopThread()), coreThread, SLOT(quit()));\n+\n+    coreThread->start();\n+}\n+\n+void BitcoinApplication::requestInitialize()\n+{\n+    LogPrintf(\"Requesting initialize\\n\");\n+    emit requestedInitialize();\n+}\n+\n+void BitcoinApplication::requestShutdown()\n+{\n+    LogPrintf(\"Requesting shutdown\\n\");\n+    window->hide();\n+    window->setClientModel(0);\n+    window->removeAllWallets();\n+    guiref.clear();\n+    delete walletModel;\n+    emit requestedShutdown();\n+}\n+\n+void BitcoinApplication::initializeResult(int retval)\n+{\n+    LogPrintf(\"Initialization result: %i\\n\", retval);\n+    /// Set exit result: 0 if successful, 1 if failure\n+    returnValue = retval ? 0 : 1;\n+    if(retval)\n+    {\n+        optionsModel->Upgrade(); // Must be done after AppInit2\n+\n+        PaymentServer::LoadRootCAs();\n+        paymentServer->setOptionsModel(optionsModel);\n+\n+        if (!splashref.isNull())\n+            splashref.data()->finish(window);\n+\n+        clientModel = new ClientModel(optionsModel);\n+        window->setClientModel(clientModel);\n+\n+        if(pwalletMain)\n+        {\n+            walletModel = new WalletModel(pwalletMain, optionsModel);\n+\n+            window->addWallet(\"~Default\", walletModel);\n+            window->setCurrentWallet(\"~Default\");\n+\n+            connect(walletModel, SIGNAL(coinsSent(CWallet*,SendCoinsRecipient,QByteArray)),\n+                             paymentServer, SLOT(fetchPaymentACK(CWallet*,const SendCoinsRecipient&,QByteArray)));\n+        }\n+\n+        // If -min option passed, start window minimized.\n+        if(GetBoolArg(\"-min\", false))\n+        {\n+            window->showMinimized();\n+        }\n+        else\n+        {\n+            window->show();\n+        }\n+\n+        // Now that initialization/startup is done, process any command-line\n+        // bitcoin: URIs or payment requests:\n+        connect(paymentServer, SIGNAL(receivedPaymentRequest(SendCoinsRecipient)),\n+                         window, SLOT(handlePaymentRequest(SendCoinsRecipient)));\n+        connect(window, SIGNAL(receivedURI(QString)),\n+                         paymentServer, SLOT(handleURIOrFile(QString)));\n+        connect(paymentServer, SIGNAL(message(QString,QString,unsigned int)),\n+                         window, SLOT(message(QString,QString,unsigned int)));\n+        QTimer::singleShot(100, paymentServer, SLOT(uiReady()));\n+\n+    } else {\n+        quit(); // Exit main loop\n+    }\n+}\n+\n+void BitcoinApplication::shutdownResult(int retval)\n+{\n+    LogPrintf(\"Shutdown result: %i\\n\", retval);\n+    quit(); // Exit main loop after shutdown finished\n+}\n+\n+void BitcoinApplication::handleRunawayException(const QString &message)\n+{\n+    QMessageBox::critical(0, \"Runaway exception\", BitcoinGUI::tr(\"A fatal error occurred. Bitcoin can no longer continue safely and will quit.\") + QString(\"\\n\\n\") + message);\n+    ::exit(1);\n+}\n+\n #ifndef BITCOIN_QT_TEST\n int main(int argc, char *argv[])\n {\n@@ -189,7 +444,7 @@ int main(int argc, char *argv[])\n #endif\n \n     Q_INIT_RESOURCE(bitcoin);\n-    QApplication app(argc, argv);\n+    BitcoinApplication app(argc, argv);\n #if QT_VERSION > 0x050100\n     // Generate high-dpi pixmaps\n     QApplication::setAttribute(Qt::AA_UseHighDpiPixmaps);\n@@ -254,7 +509,7 @@ int main(int argc, char *argv[])\n \n     // Start up the payment server early, too, so impatient users that click on\n     // bitcoin: links repeatedly have their payment requests routed to this process:\n-    PaymentServer* paymentServer = new PaymentServer(&app);\n+    app.createPaymentServer();\n \n     /// 8. Main GUI initialization\n     // Install global event filter that makes sure that long tooltips can be word-wrapped\n@@ -266,24 +521,29 @@ int main(int argc, char *argv[])\n     qInstallMessageHandler(DebugMessageHandler);\n #endif\n     // Load GUI settings from QSettings\n-    OptionsModel optionsModel;\n+    app.createOptionsModel();\n \n     // Subscribe to global signals from core\n     uiInterface.ThreadSafeMessageBox.connect(ThreadSafeMessageBox);\n     uiInterface.InitMessage.connect(InitMessage);\n     uiInterface.Translate.connect(Translate);\n \n-    // Show splash screen if appropriate\n-    SplashScreen splash(QPixmap(), 0, isaTestNet);\n-    if (GetBoolArg(\"-splash\", true) && !GetBoolArg(\"-min\", false))\n+    // Show help message immediately after parsing command-line options (for \"-lang\") and setting locale,\n+    // but before showing splash screen.\n+    if (mapArgs.count(\"-?\") || mapArgs.count(\"--help\"))\n     {\n-        splash.show();\n-        splash.setAutoFillBackground(true);\n-        splashref = &splash;\n+        GUIUtil::HelpMessageBox help;\n+        help.showOrPrint();\n+        return 1;\n     }\n \n-    app.processEvents();\n-    app.setQuitOnLastWindowClosed(false);\n+    if (GetBoolArg(\"-splash\", true) && !GetBoolArg(\"-min\", false))\n+    {\n+        SplashScreen *splash = new SplashScreen(QPixmap(), 0, isaTestNet);\n+        splash->setAttribute(Qt::WA_DeleteOnClose);\n+        splash->show();\n+        splashref = splash;\n+    }\n \n     try\n     {\n@@ -293,93 +553,18 @@ int main(int argc, char *argv[])\n         if (GUIUtil::GetStartOnSystemStartup())\n             GUIUtil::SetStartOnSystemStartup(true);\n #endif\n-\n-        boost::thread_group threadGroup;\n-\n-        BitcoinGUI window(isaTestNet, 0);\n-        guiref = &window;\n-\n-        QTimer* pollShutdownTimer = new QTimer(guiref);\n-        QObject::connect(pollShutdownTimer, SIGNAL(timeout()), guiref, SLOT(detectShutdown()));\n-        pollShutdownTimer->start(200);\n-\n-        if(AppInit2(threadGroup))\n-        {\n-            {\n-                // Put this in a block, so that the Model objects are cleaned up before\n-                // calling Shutdown().\n-\n-                optionsModel.Upgrade(); // Must be done after AppInit2\n-\n-                PaymentServer::LoadRootCAs();\n-                paymentServer->setOptionsModel(&optionsModel);\n-\n-                if (splashref)\n-                    splash.finish(&window);\n-\n-                ClientModel clientModel(&optionsModel);\n-                window.setClientModel(&clientModel);\n-\n-                WalletModel *walletModel = 0;\n-                if(pwalletMain)\n-                    walletModel = new WalletModel(pwalletMain, &optionsModel);\n-\n-                if(walletModel)\n-                {\n-                    window.addWallet(\"~Default\", walletModel);\n-                    window.setCurrentWallet(\"~Default\");\n-                }\n-\n-                // If -min option passed, start window minimized.\n-                if(GetBoolArg(\"-min\", false))\n-                {\n-                    window.showMinimized();\n-                }\n-                else\n-                {\n-                    window.show();\n-                }\n-\n-                // Now that initialization/startup is done, process any command-line\n-                // bitcoin: URIs or payment requests:\n-                QObject::connect(paymentServer, SIGNAL(receivedPaymentRequest(SendCoinsRecipient)),\n-                                 &window, SLOT(handlePaymentRequest(SendCoinsRecipient)));\n-                QObject::connect(&window, SIGNAL(receivedURI(QString)),\n-                                 paymentServer, SLOT(handleURIOrFile(QString)));\n-                if(walletModel)\n-                {\n-                    QObject::connect(walletModel, SIGNAL(coinsSent(CWallet*,SendCoinsRecipient,QByteArray)),\n-                                     paymentServer, SLOT(fetchPaymentACK(CWallet*,const SendCoinsRecipient&,QByteArray)));\n-                }\n-                QObject::connect(paymentServer, SIGNAL(message(QString,QString,unsigned int)),\n-                                 guiref, SLOT(message(QString,QString,unsigned int)));\n-                QTimer::singleShot(100, paymentServer, SLOT(uiReady()));\n-\n-                app.exec();\n-\n-                window.hide();\n-                window.setClientModel(0);\n-                window.removeAllWallets();\n-                guiref = 0;\n-                delete walletModel;\n-            }\n-            // Shutdown the core and its threads, but don't exit the GUI here\n-            threadGroup.interrupt_all();\n-            threadGroup.join_all();\n-            Shutdown();\n-        }\n-        else\n-        {\n-            threadGroup.interrupt_all();\n-            threadGroup.join_all();\n-            Shutdown();\n-            return 1;\n-        }\n+        app.createWindow(isaTestNet);\n+        app.requestInitialize();\n+        app.exec();\n+        app.requestShutdown();\n+        app.exec();\n     } catch (std::exception& e) {\n-        handleRunawayException(&e);\n+        PrintExceptionContinue(&e, \"Runaway exception\");\n+        app.handleRunawayException(QString::fromStdString(strMiscWarning));\n     } catch (...) {\n-        handleRunawayException(NULL);\n+        PrintExceptionContinue(NULL, \"Runaway exception\");\n+        app.handleRunawayException(QString::fromStdString(strMiscWarning));\n     }\n-    return 0;\n+    return app.getReturnValue();\n }\n #endif // BITCOIN_QT_TEST"
      },
      {
        "sha": "0e998c6d7ef8ad4f5bc551f2523796b904e77cf6",
        "filename": "src/qt/splashscreen.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/202d853bbea8ecb2164b9c9dc69e2129b45f05f8/src/qt/splashscreen.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/202d853bbea8ecb2164b9c9dc69e2129b45f05f8/src/qt/splashscreen.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/splashscreen.cpp?ref=202d853bbea8ecb2164b9c9dc69e2129b45f05f8",
        "patch": "@@ -13,6 +13,8 @@\n SplashScreen::SplashScreen(const QPixmap &pixmap, Qt::WindowFlags f, bool isTestNet) :\n     QSplashScreen(pixmap, f)\n {\n+    setAutoFillBackground(true);\n+\n     // set reference point, paddings\n     int paddingRight            = 50;\n     int paddingTop              = 50;"
      }
    ]
  },
  {
    "sha": "55fe4de96056cf7b6bdf708a2912927dc9857207",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NWZlNGRlOTYwNTZjZjdiNmJkZjcwOGEyOTEyOTI3ZGM5ODU3MjA3",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-07T15:04:47Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-11T09:20:28Z"
      },
      "message": "qt: Show window while shutting down\n\nMakes it clear to the user that the application is still wrapping up\nand the computer should not be turned off until it is finished.",
      "tree": {
        "sha": "878570e2c92dd3baf40dfcfc47deccc191fab858",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/878570e2c92dd3baf40dfcfc47deccc191fab858"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/55fe4de96056cf7b6bdf708a2912927dc9857207",
      "comment_count": 3,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/55fe4de96056cf7b6bdf708a2912927dc9857207",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/55fe4de96056cf7b6bdf708a2912927dc9857207",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/55fe4de96056cf7b6bdf708a2912927dc9857207/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "202d853bbea8ecb2164b9c9dc69e2129b45f05f8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/202d853bbea8ecb2164b9c9dc69e2129b45f05f8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/202d853bbea8ecb2164b9c9dc69e2129b45f05f8"
      }
    ],
    "stats": {
      "total": 21,
      "additions": 20,
      "deletions": 1
    },
    "files": [
      {
        "sha": "8bcf187ae786ba3f51381760dd633e52cc23e8d5",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 20,
        "deletions": 1,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/55fe4de96056cf7b6bdf708a2912927dc9857207/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/55fe4de96056cf7b6bdf708a2912927dc9857207/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=55fe4de96056cf7b6bdf708a2912927dc9857207",
        "patch": "@@ -32,6 +32,8 @@\n #include <QTranslator>\n #include <QWeakPointer>\n #include <QThread>\n+#include <QVBoxLayout>\n+#include <QLabel>\n \n #if defined(QT_STATICPLUGIN)\n #include <QtPlugin>\n@@ -347,17 +349,34 @@ void BitcoinApplication::requestShutdown()\n     window->setClientModel(0);\n     window->removeAllWallets();\n     guiref.clear();\n+\n     delete walletModel;\n+\n+    // Show a simple window indicating shutdown status\n+    QWidget *shutdownWindow = new QWidget();\n+    QVBoxLayout *layout = new QVBoxLayout();\n+    layout->addWidget(new QLabel(\n+        tr(\"Bitcoin Core is shutting down...\\n\") +\n+        tr(\"Do not shut down the computer until this window disappears.\")));\n+    shutdownWindow->setLayout(layout);\n+\n+    // Center shutdown window at where main window was\n+    const QPoint global = window->mapToGlobal(window->rect().center());\n+    shutdownWindow->move(global.x() - shutdownWindow->width() / 2, global.y() - shutdownWindow->height() / 2);\n+    shutdownWindow->show();\n+\n+    // Request shutdown from core thread\n     emit requestedShutdown();\n }\n \n void BitcoinApplication::initializeResult(int retval)\n {\n     LogPrintf(\"Initialization result: %i\\n\", retval);\n-    /// Set exit result: 0 if successful, 1 if failure\n+    // Set exit result: 0 if successful, 1 if failure\n     returnValue = retval ? 0 : 1;\n     if(retval)\n     {\n+        // Miscellaneous initialization after core is initialized\n         optionsModel->Upgrade(); // Must be done after AppInit2\n \n         PaymentServer::LoadRootCAs();"
      }
    ]
  },
  {
    "sha": "35ecf854c084c248ad640c6af030a9d1ed726c47",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNWVjZjg1NGMwODRjMjQ4YWQ2NDBjNmFmMDMwYTlkMWVkNzI2YzQ3",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-08T07:59:24Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-11T09:20:28Z"
      },
      "message": "qt: Remove global references in bitcoin.cpp\n\nRemove the need for global references `guiref` and\n`splashref` by making the BitcoinGUI and SplashScreen\nclasses register for the UI interface signals themselves.",
      "tree": {
        "sha": "06dc516ca6c4e60bc841cfe49cfda089ef1fc005",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/06dc516ca6c4e60bc841cfe49cfda089ef1fc005"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/35ecf854c084c248ad640c6af030a9d1ed726c47",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/35ecf854c084c248ad640c6af030a9d1ed726c47",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/35ecf854c084c248ad640c6af030a9d1ed726c47",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/35ecf854c084c248ad640c6af030a9d1ed726c47/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "55fe4de96056cf7b6bdf708a2912927dc9857207",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/55fe4de96056cf7b6bdf708a2912927dc9857207",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/55fe4de96056cf7b6bdf708a2912927dc9857207"
      }
    ],
    "stats": {
      "total": 151,
      "additions": 103,
      "deletions": 48
    },
    "files": [
      {
        "sha": "098b17490e3bd9ff51beb9ad3650b347b4232cc4",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 21,
        "deletions": 48,
        "changes": 69,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35ecf854c084c248ad640c6af030a9d1ed726c47/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35ecf854c084c248ad640c6af030a9d1ed726c47/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=35ecf854c084c248ad640c6af030a9d1ed726c47",
        "patch": "@@ -30,7 +30,6 @@\n #include <QSettings>\n #include <QTimer>\n #include <QTranslator>\n-#include <QWeakPointer>\n #include <QThread>\n #include <QVBoxLayout>\n #include <QLabel>\n@@ -56,43 +55,8 @@ Q_IMPORT_PLUGIN(QWindowsIntegrationPlugin);\n // Declare meta types used for QMetaObject::invokeMethod\n Q_DECLARE_METATYPE(bool*)\n \n-// Need a global reference for the notifications to find the GUI and splash screen\n-static QWeakPointer<BitcoinGUI> guiref;\n-static QWeakPointer<SplashScreen> splashref;\n-\n-static bool ThreadSafeMessageBox(const std::string& message, const std::string& caption, unsigned int style)\n-{\n-    if(!guiref.isNull())\n-    {\n-        bool modal = (style & CClientUIInterface::MODAL);\n-        bool ret = false;\n-        // In case of modal message, use blocking connection to wait for user to click a button\n-        QMetaObject::invokeMethod(guiref.data(), \"message\",\n-                                   modal ? GUIUtil::blockingGUIThreadConnection() : Qt::QueuedConnection,\n-                                   Q_ARG(QString, QString::fromStdString(caption)),\n-                                   Q_ARG(QString, QString::fromStdString(message)),\n-                                   Q_ARG(unsigned int, style),\n-                                   Q_ARG(bool*, &ret));\n-        return ret;\n-    }\n-    else\n-    {\n-        LogPrintf(\"%s: %s\\n\", caption.c_str(), message.c_str());\n-        fprintf(stderr, \"%s: %s\\n\", caption.c_str(), message.c_str());\n-        return false;\n-    }\n-}\n-\n static void InitMessage(const std::string &message)\n {\n-    if(!splashref.isNull())\n-    {\n-        QMetaObject::invokeMethod(splashref.data(), \"showMessage\",\n-            Qt::QueuedConnection,\n-            Q_ARG(QString, QString::fromStdString(message)),\n-            Q_ARG(int, Qt::AlignBottom|Qt::AlignHCenter),\n-            Q_ARG(QColor, QColor(55,55,55)));\n-    }\n     LogPrintf(\"init message: %s\\n\", message.c_str());\n }\n \n@@ -199,6 +163,8 @@ class BitcoinApplication: public QApplication\n     void createOptionsModel();\n     /// Create main window\n     void createWindow(bool isaTestNet);\n+    /// Create splash screen\n+    void createSplashScreen(bool isaTestNet);\n \n     /// Request core initialization\n     void requestInitialize();\n@@ -218,6 +184,7 @@ public slots:\n     void requestedInitialize();\n     void requestedShutdown();\n     void stopThread();\n+    void splashFinished(QWidget *window);\n \n private:\n     QThread *coreThread;\n@@ -295,6 +262,10 @@ BitcoinApplication::~BitcoinApplication()\n     emit stopThread();\n     coreThread->wait();\n     LogPrintf(\"Stopped thread\\n\");\n+\n+    delete window;\n+    delete paymentServer;\n+    delete optionsModel;\n }\n \n void BitcoinApplication::createPaymentServer()\n@@ -310,13 +281,20 @@ void BitcoinApplication::createOptionsModel()\n void BitcoinApplication::createWindow(bool isaTestNet)\n {\n     window = new BitcoinGUI(isaTestNet, 0);\n-    guiref = window;\n \n     QTimer* pollShutdownTimer = new QTimer(window);\n     connect(pollShutdownTimer, SIGNAL(timeout()), window, SLOT(detectShutdown()));\n     pollShutdownTimer->start(200);\n }\n \n+void BitcoinApplication::createSplashScreen(bool isaTestNet)\n+{\n+    SplashScreen *splash = new SplashScreen(QPixmap(), 0, isaTestNet);\n+    splash->setAttribute(Qt::WA_DeleteOnClose);\n+    splash->show();\n+    connect(this, SIGNAL(splashFinished(QWidget*)), splash, SLOT(slotFinish(QWidget*)));\n+}\n+\n void BitcoinApplication::startThread()\n {\n     coreThread = new QThread(this);\n@@ -348,9 +326,11 @@ void BitcoinApplication::requestShutdown()\n     window->hide();\n     window->setClientModel(0);\n     window->removeAllWallets();\n-    guiref.clear();\n \n     delete walletModel;\n+    walletModel = 0;\n+    delete clientModel;\n+    clientModel = 0;\n \n     // Show a simple window indicating shutdown status\n     QWidget *shutdownWindow = new QWidget();\n@@ -382,8 +362,7 @@ void BitcoinApplication::initializeResult(int retval)\n         PaymentServer::LoadRootCAs();\n         paymentServer->setOptionsModel(optionsModel);\n \n-        if (!splashref.isNull())\n-            splashref.data()->finish(window);\n+        emit splashFinished(window);\n \n         clientModel = new ClientModel(optionsModel);\n         window->setClientModel(clientModel);\n@@ -489,6 +468,7 @@ int main(int argc, char *argv[])\n     // Now that QSettings are accessible, initialize translations\n     QTranslator qtTranslatorBase, qtTranslator, translatorBase, translator;\n     initTranslations(qtTranslatorBase, qtTranslator, translatorBase, translator);\n+    uiInterface.Translate.connect(Translate);\n \n     // Show help message immediately after parsing command-line options (for \"-lang\") and setting locale,\n     // but before showing splash screen.\n@@ -543,9 +523,7 @@ int main(int argc, char *argv[])\n     app.createOptionsModel();\n \n     // Subscribe to global signals from core\n-    uiInterface.ThreadSafeMessageBox.connect(ThreadSafeMessageBox);\n     uiInterface.InitMessage.connect(InitMessage);\n-    uiInterface.Translate.connect(Translate);\n \n     // Show help message immediately after parsing command-line options (for \"-lang\") and setting locale,\n     // but before showing splash screen.\n@@ -557,12 +535,7 @@ int main(int argc, char *argv[])\n     }\n \n     if (GetBoolArg(\"-splash\", true) && !GetBoolArg(\"-min\", false))\n-    {\n-        SplashScreen *splash = new SplashScreen(QPixmap(), 0, isaTestNet);\n-        splash->setAttribute(Qt::WA_DeleteOnClose);\n-        splash->show();\n-        splashref = splash;\n-    }\n+        app.createSplashScreen(isaTestNet);\n \n     try\n     {"
      },
      {
        "sha": "f8daa08c4d56e160aae1f798eebc6001dc034949",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 32,
        "deletions": 0,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35ecf854c084c248ad640c6af030a9d1ed726c47/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35ecf854c084c248ad640c6af030a9d1ed726c47/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=35ecf854c084c248ad640c6af030a9d1ed726c47",
        "patch": "@@ -170,10 +170,16 @@ BitcoinGUI::BitcoinGUI(bool fIsTestnet, QWidget *parent) :\n \n     // Initially wallet actions should be disabled\n     setWalletActionsEnabled(false);\n+\n+    // Subscribe to notifications from core\n+    subscribeToCoreSignals();\n }\n \n BitcoinGUI::~BitcoinGUI()\n {\n+    // Unsubscribe from notifications from core\n+    unsubscribeFromCoreSignals();\n+\n     GUIUtil::saveWindowGeometry(\"nWindow\", this);\n     if(trayIcon) // Hide tray icon, as deleting will let it linger until quit (on Ubuntu)\n         trayIcon->hide();\n@@ -851,3 +857,29 @@ void BitcoinGUI::detectShutdown()\n     if (ShutdownRequested())\n         QMetaObject::invokeMethod(QCoreApplication::instance(), \"quit\", Qt::QueuedConnection);\n }\n+\n+static bool ThreadSafeMessageBox(BitcoinGUI *gui, const std::string& message, const std::string& caption, unsigned int style)\n+{\n+    bool modal = (style & CClientUIInterface::MODAL);\n+    bool ret = false;\n+    // In case of modal message, use blocking connection to wait for user to click a button\n+    QMetaObject::invokeMethod(gui, \"message\",\n+                               modal ? GUIUtil::blockingGUIThreadConnection() : Qt::QueuedConnection,\n+                               Q_ARG(QString, QString::fromStdString(caption)),\n+                               Q_ARG(QString, QString::fromStdString(message)),\n+                               Q_ARG(unsigned int, style),\n+                               Q_ARG(bool*, &ret));\n+    return ret;\n+}\n+\n+void BitcoinGUI::subscribeToCoreSignals()\n+{\n+    // Connect signals to client\n+    uiInterface.ThreadSafeMessageBox.connect(boost::bind(ThreadSafeMessageBox, this, _1, _2, _3));\n+}\n+\n+void BitcoinGUI::unsubscribeFromCoreSignals()\n+{\n+    // Disconnect signals from client\n+    uiInterface.ThreadSafeMessageBox.disconnect(boost::bind(ThreadSafeMessageBox, this, _1, _2, _3));\n+}"
      },
      {
        "sha": "f5d5bb976252f11e6ea0a4dceb4cd0948d8e7acb",
        "filename": "src/qt/bitcoingui.h",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35ecf854c084c248ad640c6af030a9d1ed726c47/src/qt/bitcoingui.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35ecf854c084c248ad640c6af030a9d1ed726c47/src/qt/bitcoingui.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.h?ref=35ecf854c084c248ad640c6af030a9d1ed726c47",
        "patch": "@@ -111,6 +111,11 @@ class BitcoinGUI : public QMainWindow\n     /** Enable or disable all wallet-related actions */\n     void setWalletActionsEnabled(bool enabled);\n \n+    /** Connect core signals to GUI client */\n+    void subscribeToCoreSignals();\n+    /** Disconnect core signals from GUI client */\n+    void unsubscribeFromCoreSignals();\n+\n signals:\n     /** Signal raised when a URI was entered or dragged to the GUI */\n     void receivedURI(const QString &uri);"
      },
      {
        "sha": "8b16496c188237b3f3e6e835daf3436e1d49281e",
        "filename": "src/qt/splashscreen.cpp",
        "status": "modified",
        "additions": 34,
        "deletions": 0,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35ecf854c084c248ad640c6af030a9d1ed726c47/src/qt/splashscreen.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35ecf854c084c248ad640c6af030a9d1ed726c47/src/qt/splashscreen.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/splashscreen.cpp?ref=35ecf854c084c248ad640c6af030a9d1ed726c47",
        "patch": "@@ -6,6 +6,7 @@\n \n #include \"clientversion.h\"\n #include \"util.h\"\n+#include \"ui_interface.h\"\n \n #include <QApplication>\n #include <QPainter>\n@@ -85,4 +86,37 @@ SplashScreen::SplashScreen(const QPixmap &pixmap, Qt::WindowFlags f, bool isTest\n     pixPaint.end();\n \n     this->setPixmap(newPixmap);\n+\n+    subscribeToCoreSignals();\n+}\n+\n+SplashScreen::~SplashScreen()\n+{\n+    unsubscribeFromCoreSignals();\n+}\n+\n+void SplashScreen::slotFinish(QWidget *mainWin)\n+{\n+    finish(mainWin);\n+}\n+\n+static void InitMessage(SplashScreen *splash, const std::string &message)\n+{\n+    QMetaObject::invokeMethod(splash, \"showMessage\",\n+        Qt::QueuedConnection,\n+        Q_ARG(QString, QString::fromStdString(message)),\n+        Q_ARG(int, Qt::AlignBottom|Qt::AlignHCenter),\n+        Q_ARG(QColor, QColor(55,55,55)));\n+}\n+\n+void SplashScreen::subscribeToCoreSignals()\n+{\n+    // Connect signals to client\n+    uiInterface.InitMessage.connect(boost::bind(InitMessage, this, _1));\n+}\n+\n+void SplashScreen::unsubscribeFromCoreSignals()\n+{\n+    // Disconnect signals from client\n+    uiInterface.InitMessage.disconnect(boost::bind(InitMessage, this, _1));\n }"
      },
      {
        "sha": "6bc10e60ababaac0a45f55410c0baa8c645bb5f4",
        "filename": "src/qt/splashscreen.h",
        "status": "modified",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35ecf854c084c248ad640c6af030a9d1ed726c47/src/qt/splashscreen.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35ecf854c084c248ad640c6af030a9d1ed726c47/src/qt/splashscreen.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/splashscreen.h?ref=35ecf854c084c248ad640c6af030a9d1ed726c47",
        "patch": "@@ -15,6 +15,17 @@ class SplashScreen : public QSplashScreen\n \n public:\n     explicit SplashScreen(const QPixmap &pixmap, Qt::WindowFlags f, bool isTestNet);\n+    ~SplashScreen();\n+\n+public slots:\n+    /** Slot to call finish() method as it's not defined as slot */\n+    void slotFinish(QWidget *mainWin);\n+\n+private:\n+    /** Connect core signals to splash screen */\n+    void subscribeToCoreSignals();\n+    /** Disconnect core signals to splash screen */\n+    void unsubscribeFromCoreSignals();\n };\n \n #endif // SPLASHSCREEN_H"
      }
    ]
  },
  {
    "sha": "9a2305a1b3075d110f4127a3d3c38b014237968a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5YTIzMDVhMWIzMDc1ZDExMGY0MTI3YTNkM2MzOGIwMTQyMzc5Njhh",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-08T09:45:00Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-11T09:20:28Z"
      },
      "message": "qt: Stop shutdown detection timer during shutdown\n\nStop the shutdown timer from exiting the main loop\nwhen shutdown is already in progress.\n\nFixes seeming hanging window after typing 'stop' in debug console.\n\nAlso hide the debug console during shutdown as it is useless without\na core to connect to.",
      "tree": {
        "sha": "051569c70130b803a6dee6f19b214e2a380cde4b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/051569c70130b803a6dee6f19b214e2a380cde4b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9a2305a1b3075d110f4127a3d3c38b014237968a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9a2305a1b3075d110f4127a3d3c38b014237968a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9a2305a1b3075d110f4127a3d3c38b014237968a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9a2305a1b3075d110f4127a3d3c38b014237968a/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "35ecf854c084c248ad640c6af030a9d1ed726c47",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/35ecf854c084c248ad640c6af030a9d1ed726c47",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/35ecf854c084c248ad640c6af030a9d1ed726c47"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 9,
      "deletions": 2
    },
    "files": [
      {
        "sha": "45551657d79546e89ab3176691800dba97b063af",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9a2305a1b3075d110f4127a3d3c38b014237968a/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9a2305a1b3075d110f4127a3d3c38b014237968a/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=9a2305a1b3075d110f4127a3d3c38b014237968a",
        "patch": "@@ -193,6 +193,7 @@ public slots:\n     ClientModel *clientModel;\n     BitcoinGUI *window;\n     WalletModel *walletModel;\n+    QTimer *pollShutdownTimer;\n     int returnValue;\n \n     void startThread();\n@@ -250,6 +251,7 @@ BitcoinApplication::BitcoinApplication(int &argc, char **argv):\n     clientModel(0),\n     window(0),\n     walletModel(0),\n+    pollShutdownTimer(0),\n     returnValue(0)\n {\n     setQuitOnLastWindowClosed(false);\n@@ -282,7 +284,7 @@ void BitcoinApplication::createWindow(bool isaTestNet)\n {\n     window = new BitcoinGUI(isaTestNet, 0);\n \n-    QTimer* pollShutdownTimer = new QTimer(window);\n+    pollShutdownTimer = new QTimer(window);\n     connect(pollShutdownTimer, SIGNAL(timeout()), window, SLOT(detectShutdown()));\n     pollShutdownTimer->start(200);\n }\n@@ -326,6 +328,7 @@ void BitcoinApplication::requestShutdown()\n     window->hide();\n     window->setClientModel(0);\n     window->removeAllWallets();\n+    pollShutdownTimer->stop();\n \n     delete walletModel;\n     walletModel = 0;"
      },
      {
        "sha": "ee27fe90a62b288732ef76f5805365377ef532db",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9a2305a1b3075d110f4127a3d3c38b014237968a/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9a2305a1b3075d110f4127a3d3c38b014237968a/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=9a2305a1b3075d110f4127a3d3c38b014237968a",
        "patch": "@@ -855,7 +855,11 @@ void BitcoinGUI::toggleHidden()\n void BitcoinGUI::detectShutdown()\n {\n     if (ShutdownRequested())\n-        QMetaObject::invokeMethod(QCoreApplication::instance(), \"quit\", Qt::QueuedConnection);\n+    {\n+        if(rpcConsole)\n+            rpcConsole->hide();\n+        qApp->quit();\n+    }\n }\n \n static bool ThreadSafeMessageBox(BitcoinGUI *gui, const std::string& message, const std::string& caption, unsigned int style)"
      }
    ]
  },
  {
    "sha": "054be736d4773804b51ed67d6b7fe0e1b15d1d1b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNTRiZTczNmQ0NzczODA0YjUxZWQ2N2Q2YjdmZTBlMWIxNWQxZDFi",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-11T11:20:21Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-11T11:20:36Z"
      },
      "message": "Merge pull request #3493\n\n9a2305a qt: Stop shutdown detection timer during shutdown (Wladimir J. van der Laan)\n35ecf85 qt: Remove global references in bitcoin.cpp (Wladimir J. van der Laan)\n55fe4de qt: Show window while shutting down (Wladimir J. van der Laan)\n202d853 qt: Move initialization/shutdown to a thread (Wladimir J. van der Laan)",
      "tree": {
        "sha": "051569c70130b803a6dee6f19b214e2a380cde4b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/051569c70130b803a6dee6f19b214e2a380cde4b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/054be736d4773804b51ed67d6b7fe0e1b15d1d1b",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJS0SkEAAoJEHSBCwEjRsmmYacH/A+FQXjzrPPcw5Meewk1cnj6\nIRrNDz8YKBCKWraVSy8N+n5PQJwZE+ZI5FX9J0vO19yNKXiW2yYYMB2/NMlLQw50\nK8oN7ECiW/YwJX0l9EZkLrFq/Hyd0CldX4Q0SIuqhQPpVRZMPka/0Lzp0Ia9NPCy\nZGhNoaTaQpnAyUwZS57tun2IhICf9kGeUjqWiwNpsQg7pqUhAbZ0FmrN3TAvuKp+\n6HpLXp/AMljNe5Nak7nQF2ayx/3cF3eEXUMAxlGoqZ1Zb/z3bXSLDxFGpYcyIc5r\nKMnqSCC+Byc0xRnyinxuMoDjpPrVzu9r2VVfC2ooGw+lnRVHDnu+rEz2bQ3Fi3Y=\n=wqR8\n-----END PGP SIGNATURE-----",
        "payload": "tree 051569c70130b803a6dee6f19b214e2a380cde4b\nparent 6a0e2376a14c77585888373099109d51a08bd74f\nparent 9a2305a1b3075d110f4127a3d3c38b014237968a\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1389439221 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1389439236 +0100\n\nMerge pull request #3493\n\n9a2305a qt: Stop shutdown detection timer during shutdown (Wladimir J. van der Laan)\n35ecf85 qt: Remove global references in bitcoin.cpp (Wladimir J. van der Laan)\n55fe4de qt: Show window while shutting down (Wladimir J. van der Laan)\n202d853 qt: Move initialization/shutdown to a thread (Wladimir J. van der Laan)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/054be736d4773804b51ed67d6b7fe0e1b15d1d1b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/054be736d4773804b51ed67d6b7fe0e1b15d1d1b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/054be736d4773804b51ed67d6b7fe0e1b15d1d1b/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6a0e2376a14c77585888373099109d51a08bd74f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6a0e2376a14c77585888373099109d51a08bd74f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6a0e2376a14c77585888373099109d51a08bd74f"
      },
      {
        "sha": "9a2305a1b3075d110f4127a3d3c38b014237968a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9a2305a1b3075d110f4127a3d3c38b014237968a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9a2305a1b3075d110f4127a3d3c38b014237968a"
      }
    ],
    "stats": {
      "total": 550,
      "additions": 409,
      "deletions": 141
    },
    "files": [
      {
        "sha": "99fdecb03a60aa53493020b893f8668da07d7cff",
        "filename": "src/qt/Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/054be736d4773804b51ed67d6b7fe0e1b15d1d1b/src/qt/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/054be736d4773804b51ed67d6b7fe0e1b15d1d1b/src/qt/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/Makefile.am?ref=054be736d4773804b51ed67d6b7fe0e1b15d1d1b",
        "patch": "@@ -108,7 +108,7 @@ QT_MOC_CPP = moc_aboutdialog.cpp moc_addressbookpage.cpp \\\n \n BITCOIN_MM = macdockiconhandler.mm macnotificationhandler.mm\n \n-QT_MOC = intro.moc overviewpage.moc rpcconsole.moc\n+QT_MOC = intro.moc overviewpage.moc rpcconsole.moc bitcoin.moc\n \n QT_QRC_CPP = qrc_bitcoin.cpp\n QT_QRC = bitcoin.qrc"
      },
      {
        "sha": "45551657d79546e89ab3176691800dba97b063af",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 319,
        "deletions": 139,
        "changes": 458,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/054be736d4773804b51ed67d6b7fe0e1b15d1d1b/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/054be736d4773804b51ed67d6b7fe0e1b15d1d1b/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=054be736d4773804b51ed67d6b7fe0e1b15d1d1b",
        "patch": "@@ -30,6 +30,9 @@\n #include <QSettings>\n #include <QTimer>\n #include <QTranslator>\n+#include <QThread>\n+#include <QVBoxLayout>\n+#include <QLabel>\n \n #if defined(QT_STATICPLUGIN)\n #include <QtPlugin>\n@@ -52,40 +55,8 @@ Q_IMPORT_PLUGIN(QWindowsIntegrationPlugin);\n // Declare meta types used for QMetaObject::invokeMethod\n Q_DECLARE_METATYPE(bool*)\n \n-// Need a global reference for the notifications to find the GUI\n-static BitcoinGUI *guiref;\n-static SplashScreen *splashref;\n-\n-static bool ThreadSafeMessageBox(const std::string& message, const std::string& caption, unsigned int style)\n-{\n-    if(guiref)\n-    {\n-        bool modal = (style & CClientUIInterface::MODAL);\n-        bool ret = false;\n-        // In case of modal message, use blocking connection to wait for user to click a button\n-        QMetaObject::invokeMethod(guiref, \"message\",\n-                                   modal ? GUIUtil::blockingGUIThreadConnection() : Qt::QueuedConnection,\n-                                   Q_ARG(QString, QString::fromStdString(caption)),\n-                                   Q_ARG(QString, QString::fromStdString(message)),\n-                                   Q_ARG(unsigned int, style),\n-                                   Q_ARG(bool*, &ret));\n-        return ret;\n-    }\n-    else\n-    {\n-        LogPrintf(\"%s: %s\\n\", caption.c_str(), message.c_str());\n-        fprintf(stderr, \"%s: %s\\n\", caption.c_str(), message.c_str());\n-        return false;\n-    }\n-}\n-\n static void InitMessage(const std::string &message)\n {\n-    if(splashref)\n-    {\n-        splashref->showMessage(QString::fromStdString(message), Qt::AlignBottom|Qt::AlignHCenter, QColor(55,55,55));\n-        qApp->processEvents();\n-    }\n     LogPrintf(\"init message: %s\\n\", message.c_str());\n }\n \n@@ -97,15 +68,6 @@ static std::string Translate(const char* psz)\n     return QCoreApplication::translate(\"bitcoin-core\", psz).toStdString();\n }\n \n-/* Handle runaway exceptions. Shows a message box with the problem and quits the program.\n- */\n-static void handleRunawayException(std::exception *e)\n-{\n-    PrintExceptionContinue(e, \"Runaway exception\");\n-    QMessageBox::critical(0, \"Runaway exception\", BitcoinGUI::tr(\"A fatal error occurred. Bitcoin can no longer continue safely and will quit.\") + QString(\"\\n\\n\") + QString::fromStdString(strMiscWarning));\n-    exit(1);\n-}\n-\n /** Set up translations */\n static void initTranslations(QTranslator &qtTranslatorBase, QTranslator &qtTranslator, QTranslator &translatorBase, QTranslator &translator)\n {\n@@ -162,6 +124,300 @@ void DebugMessageHandler(QtMsgType type, const QMessageLogContext& context, cons\n }\n #endif\n \n+/** Class encapsulating Bitcoin Core startup and shutdown.\n+ * Allows running startup and shutdown in a different thread from the UI thread.\n+ */\n+class BitcoinCore: public QObject\n+{\n+    Q_OBJECT\n+public:\n+    explicit BitcoinCore();\n+\n+public slots:\n+    void initialize();\n+    void shutdown();\n+\n+signals:\n+    void initializeResult(int retval);\n+    void shutdownResult(int retval);\n+    void runawayException(const QString &message);\n+\n+private:\n+    boost::thread_group threadGroup;\n+\n+    /// Pass fatal exception message to UI thread\n+    void handleRunawayException(std::exception *e);\n+};\n+\n+/** Main Bitcoin application object */\n+class BitcoinApplication: public QApplication\n+{\n+    Q_OBJECT\n+public:\n+    explicit BitcoinApplication(int &argc, char **argv);\n+    ~BitcoinApplication();\n+\n+    /// Create payment server\n+    void createPaymentServer();\n+    /// Create options model\n+    void createOptionsModel();\n+    /// Create main window\n+    void createWindow(bool isaTestNet);\n+    /// Create splash screen\n+    void createSplashScreen(bool isaTestNet);\n+\n+    /// Request core initialization\n+    void requestInitialize();\n+    /// Request core shutdown\n+    void requestShutdown();\n+\n+    /// Get process return value\n+    int getReturnValue() { return returnValue; }\n+\n+public slots:\n+    void initializeResult(int retval);\n+    void shutdownResult(int retval);\n+    /// Handle runaway exceptions. Shows a message box with the problem and quits the program.\n+    void handleRunawayException(const QString &message);\n+\n+signals:\n+    void requestedInitialize();\n+    void requestedShutdown();\n+    void stopThread();\n+    void splashFinished(QWidget *window);\n+\n+private:\n+    QThread *coreThread;\n+    PaymentServer* paymentServer;\n+    OptionsModel *optionsModel;\n+    ClientModel *clientModel;\n+    BitcoinGUI *window;\n+    WalletModel *walletModel;\n+    QTimer *pollShutdownTimer;\n+    int returnValue;\n+\n+    void startThread();\n+};\n+\n+#include \"bitcoin.moc\"\n+\n+BitcoinCore::BitcoinCore():\n+    QObject()\n+{\n+}\n+\n+void BitcoinCore::handleRunawayException(std::exception *e)\n+{\n+    PrintExceptionContinue(e, \"Runaway exception\");\n+    emit runawayException(QString::fromStdString(strMiscWarning));\n+}\n+\n+void BitcoinCore::initialize()\n+{\n+    try\n+    {\n+        LogPrintf(\"Running AppInit2 in thread\\n\");\n+        int rv = AppInit2(threadGroup);\n+        emit initializeResult(rv);\n+    } catch (std::exception& e) {\n+        handleRunawayException(&e);\n+    } catch (...) {\n+        handleRunawayException(NULL);\n+    }\n+}\n+\n+void BitcoinCore::shutdown()\n+{\n+    try\n+    {\n+        LogPrintf(\"Running Shutdown in thread\\n\");\n+        threadGroup.interrupt_all();\n+        threadGroup.join_all();\n+        Shutdown();\n+        LogPrintf(\"Shutdown finished\\n\");\n+        emit shutdownResult(1);\n+    } catch (std::exception& e) {\n+        handleRunawayException(&e);\n+    } catch (...) {\n+        handleRunawayException(NULL);\n+    }\n+}\n+\n+BitcoinApplication::BitcoinApplication(int &argc, char **argv):\n+    QApplication(argc, argv),\n+    coreThread(0),\n+    paymentServer(0),\n+    optionsModel(0),\n+    clientModel(0),\n+    window(0),\n+    walletModel(0),\n+    pollShutdownTimer(0),\n+    returnValue(0)\n+{\n+    setQuitOnLastWindowClosed(false);\n+    startThread();\n+}\n+\n+BitcoinApplication::~BitcoinApplication()\n+{\n+    LogPrintf(\"Stopping thread\\n\");\n+    emit stopThread();\n+    coreThread->wait();\n+    LogPrintf(\"Stopped thread\\n\");\n+\n+    delete window;\n+    delete paymentServer;\n+    delete optionsModel;\n+}\n+\n+void BitcoinApplication::createPaymentServer()\n+{\n+    paymentServer = new PaymentServer(this);\n+}\n+\n+void BitcoinApplication::createOptionsModel()\n+{\n+    optionsModel = new OptionsModel();\n+}\n+\n+void BitcoinApplication::createWindow(bool isaTestNet)\n+{\n+    window = new BitcoinGUI(isaTestNet, 0);\n+\n+    pollShutdownTimer = new QTimer(window);\n+    connect(pollShutdownTimer, SIGNAL(timeout()), window, SLOT(detectShutdown()));\n+    pollShutdownTimer->start(200);\n+}\n+\n+void BitcoinApplication::createSplashScreen(bool isaTestNet)\n+{\n+    SplashScreen *splash = new SplashScreen(QPixmap(), 0, isaTestNet);\n+    splash->setAttribute(Qt::WA_DeleteOnClose);\n+    splash->show();\n+    connect(this, SIGNAL(splashFinished(QWidget*)), splash, SLOT(slotFinish(QWidget*)));\n+}\n+\n+void BitcoinApplication::startThread()\n+{\n+    coreThread = new QThread(this);\n+    BitcoinCore *executor = new BitcoinCore();\n+    executor->moveToThread(coreThread);\n+\n+    /*  communication to and from thread */\n+    connect(executor, SIGNAL(initializeResult(int)), this, SLOT(initializeResult(int)));\n+    connect(executor, SIGNAL(shutdownResult(int)), this, SLOT(shutdownResult(int)));\n+    connect(executor, SIGNAL(runawayException(QString)), this, SLOT(handleRunawayException(QString)));\n+    connect(this, SIGNAL(requestedInitialize()), executor, SLOT(initialize()));\n+    connect(this, SIGNAL(requestedShutdown()), executor, SLOT(shutdown()));\n+    /*  make sure executor object is deleted in its own thread */\n+    connect(this, SIGNAL(stopThread()), executor, SLOT(deleteLater()));\n+    connect(this, SIGNAL(stopThread()), coreThread, SLOT(quit()));\n+\n+    coreThread->start();\n+}\n+\n+void BitcoinApplication::requestInitialize()\n+{\n+    LogPrintf(\"Requesting initialize\\n\");\n+    emit requestedInitialize();\n+}\n+\n+void BitcoinApplication::requestShutdown()\n+{\n+    LogPrintf(\"Requesting shutdown\\n\");\n+    window->hide();\n+    window->setClientModel(0);\n+    window->removeAllWallets();\n+    pollShutdownTimer->stop();\n+\n+    delete walletModel;\n+    walletModel = 0;\n+    delete clientModel;\n+    clientModel = 0;\n+\n+    // Show a simple window indicating shutdown status\n+    QWidget *shutdownWindow = new QWidget();\n+    QVBoxLayout *layout = new QVBoxLayout();\n+    layout->addWidget(new QLabel(\n+        tr(\"Bitcoin Core is shutting down...\\n\") +\n+        tr(\"Do not shut down the computer until this window disappears.\")));\n+    shutdownWindow->setLayout(layout);\n+\n+    // Center shutdown window at where main window was\n+    const QPoint global = window->mapToGlobal(window->rect().center());\n+    shutdownWindow->move(global.x() - shutdownWindow->width() / 2, global.y() - shutdownWindow->height() / 2);\n+    shutdownWindow->show();\n+\n+    // Request shutdown from core thread\n+    emit requestedShutdown();\n+}\n+\n+void BitcoinApplication::initializeResult(int retval)\n+{\n+    LogPrintf(\"Initialization result: %i\\n\", retval);\n+    // Set exit result: 0 if successful, 1 if failure\n+    returnValue = retval ? 0 : 1;\n+    if(retval)\n+    {\n+        // Miscellaneous initialization after core is initialized\n+        optionsModel->Upgrade(); // Must be done after AppInit2\n+\n+        PaymentServer::LoadRootCAs();\n+        paymentServer->setOptionsModel(optionsModel);\n+\n+        emit splashFinished(window);\n+\n+        clientModel = new ClientModel(optionsModel);\n+        window->setClientModel(clientModel);\n+\n+        if(pwalletMain)\n+        {\n+            walletModel = new WalletModel(pwalletMain, optionsModel);\n+\n+            window->addWallet(\"~Default\", walletModel);\n+            window->setCurrentWallet(\"~Default\");\n+\n+            connect(walletModel, SIGNAL(coinsSent(CWallet*,SendCoinsRecipient,QByteArray)),\n+                             paymentServer, SLOT(fetchPaymentACK(CWallet*,const SendCoinsRecipient&,QByteArray)));\n+        }\n+\n+        // If -min option passed, start window minimized.\n+        if(GetBoolArg(\"-min\", false))\n+        {\n+            window->showMinimized();\n+        }\n+        else\n+        {\n+            window->show();\n+        }\n+\n+        // Now that initialization/startup is done, process any command-line\n+        // bitcoin: URIs or payment requests:\n+        connect(paymentServer, SIGNAL(receivedPaymentRequest(SendCoinsRecipient)),\n+                         window, SLOT(handlePaymentRequest(SendCoinsRecipient)));\n+        connect(window, SIGNAL(receivedURI(QString)),\n+                         paymentServer, SLOT(handleURIOrFile(QString)));\n+        connect(paymentServer, SIGNAL(message(QString,QString,unsigned int)),\n+                         window, SLOT(message(QString,QString,unsigned int)));\n+        QTimer::singleShot(100, paymentServer, SLOT(uiReady()));\n+\n+    } else {\n+        quit(); // Exit main loop\n+    }\n+}\n+\n+void BitcoinApplication::shutdownResult(int retval)\n+{\n+    LogPrintf(\"Shutdown result: %i\\n\", retval);\n+    quit(); // Exit main loop after shutdown finished\n+}\n+\n+void BitcoinApplication::handleRunawayException(const QString &message)\n+{\n+    QMessageBox::critical(0, \"Runaway exception\", BitcoinGUI::tr(\"A fatal error occurred. Bitcoin can no longer continue safely and will quit.\") + QString(\"\\n\\n\") + message);\n+    ::exit(1);\n+}\n+\n #ifndef BITCOIN_QT_TEST\n int main(int argc, char *argv[])\n {\n@@ -189,7 +445,7 @@ int main(int argc, char *argv[])\n #endif\n \n     Q_INIT_RESOURCE(bitcoin);\n-    QApplication app(argc, argv);\n+    BitcoinApplication app(argc, argv);\n #if QT_VERSION > 0x050100\n     // Generate high-dpi pixmaps\n     QApplication::setAttribute(Qt::AA_UseHighDpiPixmaps);\n@@ -215,6 +471,7 @@ int main(int argc, char *argv[])\n     // Now that QSettings are accessible, initialize translations\n     QTranslator qtTranslatorBase, qtTranslator, translatorBase, translator;\n     initTranslations(qtTranslatorBase, qtTranslator, translatorBase, translator);\n+    uiInterface.Translate.connect(Translate);\n \n     // Show help message immediately after parsing command-line options (for \"-lang\") and setting locale,\n     // but before showing splash screen.\n@@ -254,7 +511,7 @@ int main(int argc, char *argv[])\n \n     // Start up the payment server early, too, so impatient users that click on\n     // bitcoin: links repeatedly have their payment requests routed to this process:\n-    PaymentServer* paymentServer = new PaymentServer(&app);\n+    app.createPaymentServer();\n \n     /// 8. Main GUI initialization\n     // Install global event filter that makes sure that long tooltips can be word-wrapped\n@@ -266,24 +523,22 @@ int main(int argc, char *argv[])\n     qInstallMessageHandler(DebugMessageHandler);\n #endif\n     // Load GUI settings from QSettings\n-    OptionsModel optionsModel;\n+    app.createOptionsModel();\n \n     // Subscribe to global signals from core\n-    uiInterface.ThreadSafeMessageBox.connect(ThreadSafeMessageBox);\n     uiInterface.InitMessage.connect(InitMessage);\n-    uiInterface.Translate.connect(Translate);\n \n-    // Show splash screen if appropriate\n-    SplashScreen splash(QPixmap(), 0, isaTestNet);\n-    if (GetBoolArg(\"-splash\", true) && !GetBoolArg(\"-min\", false))\n+    // Show help message immediately after parsing command-line options (for \"-lang\") and setting locale,\n+    // but before showing splash screen.\n+    if (mapArgs.count(\"-?\") || mapArgs.count(\"--help\"))\n     {\n-        splash.show();\n-        splash.setAutoFillBackground(true);\n-        splashref = &splash;\n+        GUIUtil::HelpMessageBox help;\n+        help.showOrPrint();\n+        return 1;\n     }\n \n-    app.processEvents();\n-    app.setQuitOnLastWindowClosed(false);\n+    if (GetBoolArg(\"-splash\", true) && !GetBoolArg(\"-min\", false))\n+        app.createSplashScreen(isaTestNet);\n \n     try\n     {\n@@ -293,93 +548,18 @@ int main(int argc, char *argv[])\n         if (GUIUtil::GetStartOnSystemStartup())\n             GUIUtil::SetStartOnSystemStartup(true);\n #endif\n-\n-        boost::thread_group threadGroup;\n-\n-        BitcoinGUI window(isaTestNet, 0);\n-        guiref = &window;\n-\n-        QTimer* pollShutdownTimer = new QTimer(guiref);\n-        QObject::connect(pollShutdownTimer, SIGNAL(timeout()), guiref, SLOT(detectShutdown()));\n-        pollShutdownTimer->start(200);\n-\n-        if(AppInit2(threadGroup))\n-        {\n-            {\n-                // Put this in a block, so that the Model objects are cleaned up before\n-                // calling Shutdown().\n-\n-                optionsModel.Upgrade(); // Must be done after AppInit2\n-\n-                PaymentServer::LoadRootCAs();\n-                paymentServer->setOptionsModel(&optionsModel);\n-\n-                if (splashref)\n-                    splash.finish(&window);\n-\n-                ClientModel clientModel(&optionsModel);\n-                window.setClientModel(&clientModel);\n-\n-                WalletModel *walletModel = 0;\n-                if(pwalletMain)\n-                    walletModel = new WalletModel(pwalletMain, &optionsModel);\n-\n-                if(walletModel)\n-                {\n-                    window.addWallet(\"~Default\", walletModel);\n-                    window.setCurrentWallet(\"~Default\");\n-                }\n-\n-                // If -min option passed, start window minimized.\n-                if(GetBoolArg(\"-min\", false))\n-                {\n-                    window.showMinimized();\n-                }\n-                else\n-                {\n-                    window.show();\n-                }\n-\n-                // Now that initialization/startup is done, process any command-line\n-                // bitcoin: URIs or payment requests:\n-                QObject::connect(paymentServer, SIGNAL(receivedPaymentRequest(SendCoinsRecipient)),\n-                                 &window, SLOT(handlePaymentRequest(SendCoinsRecipient)));\n-                QObject::connect(&window, SIGNAL(receivedURI(QString)),\n-                                 paymentServer, SLOT(handleURIOrFile(QString)));\n-                if(walletModel)\n-                {\n-                    QObject::connect(walletModel, SIGNAL(coinsSent(CWallet*,SendCoinsRecipient,QByteArray)),\n-                                     paymentServer, SLOT(fetchPaymentACK(CWallet*,const SendCoinsRecipient&,QByteArray)));\n-                }\n-                QObject::connect(paymentServer, SIGNAL(message(QString,QString,unsigned int)),\n-                                 guiref, SLOT(message(QString,QString,unsigned int)));\n-                QTimer::singleShot(100, paymentServer, SLOT(uiReady()));\n-\n-                app.exec();\n-\n-                window.hide();\n-                window.setClientModel(0);\n-                window.removeAllWallets();\n-                guiref = 0;\n-                delete walletModel;\n-            }\n-            // Shutdown the core and its threads, but don't exit the GUI here\n-            threadGroup.interrupt_all();\n-            threadGroup.join_all();\n-            Shutdown();\n-        }\n-        else\n-        {\n-            threadGroup.interrupt_all();\n-            threadGroup.join_all();\n-            Shutdown();\n-            return 1;\n-        }\n+        app.createWindow(isaTestNet);\n+        app.requestInitialize();\n+        app.exec();\n+        app.requestShutdown();\n+        app.exec();\n     } catch (std::exception& e) {\n-        handleRunawayException(&e);\n+        PrintExceptionContinue(&e, \"Runaway exception\");\n+        app.handleRunawayException(QString::fromStdString(strMiscWarning));\n     } catch (...) {\n-        handleRunawayException(NULL);\n+        PrintExceptionContinue(NULL, \"Runaway exception\");\n+        app.handleRunawayException(QString::fromStdString(strMiscWarning));\n     }\n-    return 0;\n+    return app.getReturnValue();\n }\n #endif // BITCOIN_QT_TEST"
      },
      {
        "sha": "ee27fe90a62b288732ef76f5805365377ef532db",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 37,
        "deletions": 1,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/054be736d4773804b51ed67d6b7fe0e1b15d1d1b/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/054be736d4773804b51ed67d6b7fe0e1b15d1d1b/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=054be736d4773804b51ed67d6b7fe0e1b15d1d1b",
        "patch": "@@ -170,10 +170,16 @@ BitcoinGUI::BitcoinGUI(bool fIsTestnet, QWidget *parent) :\n \n     // Initially wallet actions should be disabled\n     setWalletActionsEnabled(false);\n+\n+    // Subscribe to notifications from core\n+    subscribeToCoreSignals();\n }\n \n BitcoinGUI::~BitcoinGUI()\n {\n+    // Unsubscribe from notifications from core\n+    unsubscribeFromCoreSignals();\n+\n     GUIUtil::saveWindowGeometry(\"nWindow\", this);\n     if(trayIcon) // Hide tray icon, as deleting will let it linger until quit (on Ubuntu)\n         trayIcon->hide();\n@@ -849,5 +855,35 @@ void BitcoinGUI::toggleHidden()\n void BitcoinGUI::detectShutdown()\n {\n     if (ShutdownRequested())\n-        QMetaObject::invokeMethod(QCoreApplication::instance(), \"quit\", Qt::QueuedConnection);\n+    {\n+        if(rpcConsole)\n+            rpcConsole->hide();\n+        qApp->quit();\n+    }\n+}\n+\n+static bool ThreadSafeMessageBox(BitcoinGUI *gui, const std::string& message, const std::string& caption, unsigned int style)\n+{\n+    bool modal = (style & CClientUIInterface::MODAL);\n+    bool ret = false;\n+    // In case of modal message, use blocking connection to wait for user to click a button\n+    QMetaObject::invokeMethod(gui, \"message\",\n+                               modal ? GUIUtil::blockingGUIThreadConnection() : Qt::QueuedConnection,\n+                               Q_ARG(QString, QString::fromStdString(caption)),\n+                               Q_ARG(QString, QString::fromStdString(message)),\n+                               Q_ARG(unsigned int, style),\n+                               Q_ARG(bool*, &ret));\n+    return ret;\n+}\n+\n+void BitcoinGUI::subscribeToCoreSignals()\n+{\n+    // Connect signals to client\n+    uiInterface.ThreadSafeMessageBox.connect(boost::bind(ThreadSafeMessageBox, this, _1, _2, _3));\n+}\n+\n+void BitcoinGUI::unsubscribeFromCoreSignals()\n+{\n+    // Disconnect signals from client\n+    uiInterface.ThreadSafeMessageBox.disconnect(boost::bind(ThreadSafeMessageBox, this, _1, _2, _3));\n }"
      },
      {
        "sha": "f5d5bb976252f11e6ea0a4dceb4cd0948d8e7acb",
        "filename": "src/qt/bitcoingui.h",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/054be736d4773804b51ed67d6b7fe0e1b15d1d1b/src/qt/bitcoingui.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/054be736d4773804b51ed67d6b7fe0e1b15d1d1b/src/qt/bitcoingui.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.h?ref=054be736d4773804b51ed67d6b7fe0e1b15d1d1b",
        "patch": "@@ -111,6 +111,11 @@ class BitcoinGUI : public QMainWindow\n     /** Enable or disable all wallet-related actions */\n     void setWalletActionsEnabled(bool enabled);\n \n+    /** Connect core signals to GUI client */\n+    void subscribeToCoreSignals();\n+    /** Disconnect core signals from GUI client */\n+    void unsubscribeFromCoreSignals();\n+\n signals:\n     /** Signal raised when a URI was entered or dragged to the GUI */\n     void receivedURI(const QString &uri);"
      },
      {
        "sha": "8b16496c188237b3f3e6e835daf3436e1d49281e",
        "filename": "src/qt/splashscreen.cpp",
        "status": "modified",
        "additions": 36,
        "deletions": 0,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/054be736d4773804b51ed67d6b7fe0e1b15d1d1b/src/qt/splashscreen.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/054be736d4773804b51ed67d6b7fe0e1b15d1d1b/src/qt/splashscreen.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/splashscreen.cpp?ref=054be736d4773804b51ed67d6b7fe0e1b15d1d1b",
        "patch": "@@ -6,13 +6,16 @@\n \n #include \"clientversion.h\"\n #include \"util.h\"\n+#include \"ui_interface.h\"\n \n #include <QApplication>\n #include <QPainter>\n \n SplashScreen::SplashScreen(const QPixmap &pixmap, Qt::WindowFlags f, bool isTestNet) :\n     QSplashScreen(pixmap, f)\n {\n+    setAutoFillBackground(true);\n+\n     // set reference point, paddings\n     int paddingRight            = 50;\n     int paddingTop              = 50;\n@@ -83,4 +86,37 @@ SplashScreen::SplashScreen(const QPixmap &pixmap, Qt::WindowFlags f, bool isTest\n     pixPaint.end();\n \n     this->setPixmap(newPixmap);\n+\n+    subscribeToCoreSignals();\n+}\n+\n+SplashScreen::~SplashScreen()\n+{\n+    unsubscribeFromCoreSignals();\n+}\n+\n+void SplashScreen::slotFinish(QWidget *mainWin)\n+{\n+    finish(mainWin);\n+}\n+\n+static void InitMessage(SplashScreen *splash, const std::string &message)\n+{\n+    QMetaObject::invokeMethod(splash, \"showMessage\",\n+        Qt::QueuedConnection,\n+        Q_ARG(QString, QString::fromStdString(message)),\n+        Q_ARG(int, Qt::AlignBottom|Qt::AlignHCenter),\n+        Q_ARG(QColor, QColor(55,55,55)));\n+}\n+\n+void SplashScreen::subscribeToCoreSignals()\n+{\n+    // Connect signals to client\n+    uiInterface.InitMessage.connect(boost::bind(InitMessage, this, _1));\n+}\n+\n+void SplashScreen::unsubscribeFromCoreSignals()\n+{\n+    // Disconnect signals from client\n+    uiInterface.InitMessage.disconnect(boost::bind(InitMessage, this, _1));\n }"
      },
      {
        "sha": "6bc10e60ababaac0a45f55410c0baa8c645bb5f4",
        "filename": "src/qt/splashscreen.h",
        "status": "modified",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/054be736d4773804b51ed67d6b7fe0e1b15d1d1b/src/qt/splashscreen.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/054be736d4773804b51ed67d6b7fe0e1b15d1d1b/src/qt/splashscreen.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/splashscreen.h?ref=054be736d4773804b51ed67d6b7fe0e1b15d1d1b",
        "patch": "@@ -15,6 +15,17 @@ class SplashScreen : public QSplashScreen\n \n public:\n     explicit SplashScreen(const QPixmap &pixmap, Qt::WindowFlags f, bool isTestNet);\n+    ~SplashScreen();\n+\n+public slots:\n+    /** Slot to call finish() method as it's not defined as slot */\n+    void slotFinish(QWidget *mainWin);\n+\n+private:\n+    /** Connect core signals to splash screen */\n+    void subscribeToCoreSignals();\n+    /** Disconnect core signals to splash screen */\n+    void unsubscribeFromCoreSignals();\n };\n \n #endif // SPLASHSCREEN_H"
      }
    ]
  },
  {
    "sha": "ec41342e3dea6e2137a0fc17288e2be77710a631",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplYzQxMzQyZTNkZWE2ZTIxMzdhMGZjMTcyODhlMmJlNzc3MTBhNjMx",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-11T14:58:32Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-11T11:23:00Z"
      },
      "message": "build: pass correct defs and include path to moc\n\nTo make sure the right slots are generated, MOC needs -DHAVE_CONFIG_H\nand correct include path to include bitcoin-config.h.",
      "tree": {
        "sha": "e5fb7f5b25bd8965b0aa95dbf5c60c2b95795532",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e5fb7f5b25bd8965b0aa95dbf5c60c2b95795532"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ec41342e3dea6e2137a0fc17288e2be77710a631",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ec41342e3dea6e2137a0fc17288e2be77710a631",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ec41342e3dea6e2137a0fc17288e2be77710a631",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ec41342e3dea6e2137a0fc17288e2be77710a631/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "054be736d4773804b51ed67d6b7fe0e1b15d1d1b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/054be736d4773804b51ed67d6b7fe0e1b15d1d1b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/054be736d4773804b51ed67d6b7fe0e1b15d1d1b"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 1,
      "deletions": 0
    },
    "files": [
      {
        "sha": "070902c519afbea32935f3b3b60ad27d0f9c0d08",
        "filename": "src/Makefile.include",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec41342e3dea6e2137a0fc17288e2be77710a631/src/Makefile.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec41342e3dea6e2137a0fc17288e2be77710a631/src/Makefile.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.include?ref=ec41342e3dea6e2137a0fc17288e2be77710a631",
        "patch": "@@ -12,6 +12,7 @@ LIBBITCOIN_CLI=$(top_builddir)/src/libbitcoin_cli.a\n LIBLEVELDB=$(top_builddir)/src/leveldb/libleveldb.a\n LIBMEMENV=$(top_builddir)/src/leveldb/libmemenv.a\n LIBBITCOINQT=$(top_builddir)/src/qt/libbitcoinqt.a\n+MOC_DEFS=$(DEFS) -I$(top_srcdir)/src\n \n $(LIBBITCOIN):\n \t$(MAKE) -C $(top_builddir)/src $(@F)"
      }
    ]
  },
  {
    "sha": "b7f4b6d35da7b63529a728eb9333fe424b2a5c6d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiN2Y0YjZkMzVkYTdiNjM1MjlhNzI4ZWI5MzMzZmU0MjRiMmE1YzZk",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-11T14:00:56Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-11T11:36:20Z"
      },
      "message": "GUI for --disable-wallet compiles and -disablewallet mode\n\nThere is not much in the GUI to be done without wallet,\nthough it's possible to change options, watch the sync process,\nand use the debug console.\n\nSo embed the debug console in the main window.",
      "tree": {
        "sha": "6a0820ae13a8131ce3a0e2e0acf3754089b88ba3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6a0820ae13a8131ce3a0e2e0acf3754089b88ba3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b7f4b6d35da7b63529a728eb9333fe424b2a5c6d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b7f4b6d35da7b63529a728eb9333fe424b2a5c6d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b7f4b6d35da7b63529a728eb9333fe424b2a5c6d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b7f4b6d35da7b63529a728eb9333fe424b2a5c6d/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ec41342e3dea6e2137a0fc17288e2be77710a631",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ec41342e3dea6e2137a0fc17288e2be77710a631",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ec41342e3dea6e2137a0fc17288e2be77710a631"
      }
    ],
    "stats": {
      "total": 320,
      "additions": 243,
      "deletions": 77
    },
    "files": [
      {
        "sha": "82f489a06d645498e9db80873104a685fa4d1a21",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b7f4b6d35da7b63529a728eb9333fe424b2a5c6d/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b7f4b6d35da7b63529a728eb9333fe424b2a5c6d/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=b7f4b6d35da7b63529a728eb9333fe424b2a5c6d",
        "patch": "@@ -567,9 +567,6 @@ if test x$bitcoin_enable_qt != xno; then\n       AC_MSG_ERROR(\"QT Test lib not found. Use --disable-tests or --without-qt.\")\n     fi\n   fi\n-  if test x$enable_wallet == xno; then\n-    AC_MSG_ERROR([Cannot currently build Qt GUI with wallet disabled. Use --without-qt.])\n-  fi\n fi\n \n if test x$use_tests = xyes; then"
      },
      {
        "sha": "53bd893fade2b30fa44261d336b51d7fa0e266eb",
        "filename": "src/qt/Makefile.am",
        "status": "modified",
        "additions": 51,
        "deletions": 15,
        "changes": 66,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b7f4b6d35da7b63529a728eb9333fe424b2a5c6d/src/qt/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b7f4b6d35da7b63529a728eb9333fe424b2a5c6d/src/qt/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/Makefile.am?ref=b7f4b6d35da7b63529a728eb9333fe424b2a5c6d",
        "patch": "@@ -150,24 +150,56 @@ RES_ICONS = res/icons/bitcoin.png res/icons/address-book.png \\\n   res/icons/qrcode.png res/icons/debugwindow.png res/icons/bitcoin.ico \\\n   res/icons/bitcoin_testnet.ico\n \n-BITCOIN_QT_CPP = aboutdialog.cpp addressbookpage.cpp \\\n-  addresstablemodel.cpp askpassphrasedialog.cpp bitcoinaddressvalidator.cpp \\\n-  bitcoinamountfield.cpp bitcoin.cpp bitcoingui.cpp \\\n-  bitcoinunits.cpp clientmodel.cpp \\\n+BITCOIN_QT_CPP = \\\n+  aboutdialog.cpp \\\n+  bitcoinaddressvalidator.cpp \\\n+  bitcoinamountfield.cpp \\\n+  bitcoin.cpp \\\n+  bitcoingui.cpp \\\n+  bitcoinunits.cpp \\\n+  clientmodel.cpp \\\n+  csvmodelwriter.cpp \\\n+  guiutil.cpp \\\n+  intro.cpp \\\n+  monitoreddatamapper.cpp \\\n+  notificator.cpp \\\n+  optionsdialog.cpp \\\n+  optionsmodel.cpp \\\n+  qvalidatedlineedit.cpp \\\n+  qvaluecombobox.cpp \\\n+  rpcconsole.cpp \\\n+  signverifymessagedialog.cpp \\\n+  splashscreen.cpp \\\n+  trafficgraphwidget.cpp\n+\n+if ENABLE_WALLET\n+BITCOIN_QT_CPP += \\\n+  addressbookpage.cpp \\\n+  addresstablemodel.cpp \\\n+  askpassphrasedialog.cpp \\\n   coincontroldialog.cpp \\\n   coincontroltreewidget.cpp \\\n-  csvmodelwriter.cpp editaddressdialog.cpp \\\n-  guiutil.cpp intro.cpp monitoreddatamapper.cpp notificator.cpp \\\n+  editaddressdialog.cpp \\\n   openuridialog.cpp \\\n-  optionsdialog.cpp optionsmodel.cpp overviewpage.cpp paymentrequestplus.cpp \\\n-  paymentserver.cpp qvalidatedlineedit.cpp qvaluecombobox.cpp \\\n-  receivecoinsdialog.cpp receiverequestdialog.cpp \\\n+  overviewpage.cpp \\\n+  paymentrequestplus.cpp \\\n+  paymentserver.cpp \\\n+  receivecoinsdialog.cpp \\\n+  receiverequestdialog.cpp \\\n   recentrequeststablemodel.cpp \\\n-  rpcconsole.cpp sendcoinsdialog.cpp sendcoinsentry.cpp \\\n-  signverifymessagedialog.cpp splashscreen.cpp trafficgraphwidget.cpp transactiondesc.cpp \\\n-  transactiondescdialog.cpp transactionfilterproxy.cpp transactionrecord.cpp \\\n-  transactiontablemodel.cpp transactionview.cpp walletframe.cpp \\\n-  walletmodel.cpp walletmodeltransaction.cpp walletview.cpp\n+  sendcoinsdialog.cpp \\\n+  sendcoinsentry.cpp \\\n+  transactiondesc.cpp \\\n+  transactiondescdialog.cpp \\\n+  transactionfilterproxy.cpp \\\n+  transactionrecord.cpp \\\n+  transactiontablemodel.cpp \\\n+  transactionview.cpp \\\n+  walletframe.cpp \\\n+  walletmodel.cpp \\\n+  walletmodeltransaction.cpp \\\n+  walletview.cpp\n+endif\n \n RES_IMAGES = res/images/about.png res/images/splash.png \\\n   res/images/splash_testnet.png\n@@ -203,7 +235,11 @@ endif\n bitcoin_qt_CPPFLAGS = $(AM_CPPFLAGS) $(QT_INCLUDES) \\\n   -I$(top_srcdir)/src/qt/forms\n bitcoin_qt_SOURCES = bitcoin.cpp\n-bitcoin_qt_LDADD = libbitcoinqt.a $(LIBBITCOIN_SERVER) $(LIBBITCOIN_WALLET) $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBLEVELDB) $(LIBMEMENV) \\\n+bitcoin_qt_LDADD = libbitcoinqt.a $(LIBBITCOIN_SERVER)\n+if ENABLE_WALLET\n+bitcoin_qt_LDADD += $(LIBBITCOIN_WALLET)\n+endif\n+bitcoin_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBLEVELDB) $(LIBMEMENV) \\\n   $(BOOST_LIBS) $(QT_LIBS) $(QT_DBUS_LIBS) $(QR_LIBS) $(PROTOBUF_LIBS) $(BDB_LIBS)\n \n # forms/foo.h -> forms/ui_foo.h"
      },
      {
        "sha": "82d8af77d9fcfba3a3ac5b849e1cfaa3c00e2b94",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 33,
        "deletions": 8,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b7f4b6d35da7b63529a728eb9333fe424b2a5c6d/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b7f4b6d35da7b63529a728eb9333fe424b2a5c6d/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=b7f4b6d35da7b63529a728eb9333fe424b2a5c6d",
        "patch": "@@ -10,9 +10,11 @@\n #include \"guiutil.h\"\n #include \"intro.h\"\n #include \"optionsmodel.h\"\n-#include \"paymentserver.h\"\n #include \"splashscreen.h\"\n+#ifdef ENABLE_WALLET\n+#include \"paymentserver.h\"\n #include \"walletmodel.h\"\n+#endif\n \n #include \"init.h\"\n #include \"main.h\"\n@@ -157,8 +159,10 @@ class BitcoinApplication: public QApplication\n     explicit BitcoinApplication(int &argc, char **argv);\n     ~BitcoinApplication();\n \n+#ifdef ENABLE_WALLET\n     /// Create payment server\n     void createPaymentServer();\n+#endif\n     /// Create options model\n     void createOptionsModel();\n     /// Create main window\n@@ -188,12 +192,14 @@ public slots:\n \n private:\n     QThread *coreThread;\n-    PaymentServer* paymentServer;\n     OptionsModel *optionsModel;\n     ClientModel *clientModel;\n     BitcoinGUI *window;\n-    WalletModel *walletModel;\n     QTimer *pollShutdownTimer;\n+#ifdef ENABLE_WALLET\n+    PaymentServer* paymentServer;\n+    WalletModel *walletModel;\n+#endif\n     int returnValue;\n \n     void startThread();\n@@ -246,12 +252,14 @@ void BitcoinCore::shutdown()\n BitcoinApplication::BitcoinApplication(int &argc, char **argv):\n     QApplication(argc, argv),\n     coreThread(0),\n-    paymentServer(0),\n     optionsModel(0),\n     clientModel(0),\n     window(0),\n-    walletModel(0),\n     pollShutdownTimer(0),\n+#ifdef ENABLE_WALLET\n+    paymentServer(0),\n+    walletModel(0),\n+#endif\n     returnValue(0)\n {\n     setQuitOnLastWindowClosed(false);\n@@ -266,14 +274,21 @@ BitcoinApplication::~BitcoinApplication()\n     LogPrintf(\"Stopped thread\\n\");\n \n     delete window;\n+    window = 0;\n+#ifdef ENABLE_WALLET\n     delete paymentServer;\n+    paymentServer = 0;\n+#endif\n     delete optionsModel;\n+    optionsModel = 0;\n }\n \n+#ifdef ENABLE_WALLET\n void BitcoinApplication::createPaymentServer()\n {\n     paymentServer = new PaymentServer(this);\n }\n+#endif\n \n void BitcoinApplication::createOptionsModel()\n {\n@@ -327,11 +342,13 @@ void BitcoinApplication::requestShutdown()\n     LogPrintf(\"Requesting shutdown\\n\");\n     window->hide();\n     window->setClientModel(0);\n-    window->removeAllWallets();\n     pollShutdownTimer->stop();\n \n+#ifdef ENABLE_WALLET\n+    window->removeAllWallets();\n     delete walletModel;\n     walletModel = 0;\n+#endif\n     delete clientModel;\n     clientModel = 0;\n \n@@ -362,14 +379,17 @@ void BitcoinApplication::initializeResult(int retval)\n         // Miscellaneous initialization after core is initialized\n         optionsModel->Upgrade(); // Must be done after AppInit2\n \n+#ifdef ENABLE_WALLET\n         PaymentServer::LoadRootCAs();\n         paymentServer->setOptionsModel(optionsModel);\n+#endif\n \n         emit splashFinished(window);\n \n         clientModel = new ClientModel(optionsModel);\n         window->setClientModel(clientModel);\n \n+#ifdef ENABLE_WALLET\n         if(pwalletMain)\n         {\n             walletModel = new WalletModel(pwalletMain, optionsModel);\n@@ -380,6 +400,7 @@ void BitcoinApplication::initializeResult(int retval)\n             connect(walletModel, SIGNAL(coinsSent(CWallet*,SendCoinsRecipient,QByteArray)),\n                              paymentServer, SLOT(fetchPaymentACK(CWallet*,const SendCoinsRecipient&,QByteArray)));\n         }\n+#endif\n \n         // If -min option passed, start window minimized.\n         if(GetBoolArg(\"-min\", false))\n@@ -390,7 +411,7 @@ void BitcoinApplication::initializeResult(int retval)\n         {\n             window->show();\n         }\n-\n+#ifdef ENABLE_WALLET\n         // Now that initialization/startup is done, process any command-line\n         // bitcoin: URIs or payment requests:\n         connect(paymentServer, SIGNAL(receivedPaymentRequest(SendCoinsRecipient)),\n@@ -400,7 +421,7 @@ void BitcoinApplication::initializeResult(int retval)\n         connect(paymentServer, SIGNAL(message(QString,QString,unsigned int)),\n                          window, SLOT(message(QString,QString,unsigned int)));\n         QTimer::singleShot(100, paymentServer, SLOT(uiReady()));\n-\n+#endif\n     } else {\n         quit(); // Exit main loop\n     }\n@@ -429,9 +450,11 @@ int main(int argc, char *argv[])\n     if (!SelectParamsFromCommandLine()) {\n         fSelParFromCLFailed = true;\n     }\n+#ifdef ENABLE_WALLET\n     // Parse URIs on command line -- this can affect TestNet() / RegTest() mode\n     if (!PaymentServer::ipcParseCommandLine(argc, argv))\n         exit(0);\n+#endif\n \n     bool isaTestNet = TestNet() || RegTest();\n \n@@ -500,6 +523,7 @@ int main(int argc, char *argv[])\n     }\n     ReadConfigFile(mapArgs, mapMultiArgs);\n \n+#ifdef ENABLE_WALLET\n     /// 7. URI IPC sending\n     // - Do this early as we don't want to bother initializing if we are just calling IPC\n     // - Do this *after* setting up the data directory, as the data directory hash is used in the name\n@@ -512,6 +536,7 @@ int main(int argc, char *argv[])\n     // Start up the payment server early, too, so impatient users that click on\n     // bitcoin: links repeatedly have their payment requests routed to this process:\n     app.createPaymentServer();\n+#endif\n \n     /// 8. Main GUI initialization\n     // Install global event filter that makes sure that long tooltips can be word-wrapped"
      },
      {
        "sha": "22c41a62019d93232633df2a90b73c99a71676e5",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 109,
        "deletions": 38,
        "changes": 147,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b7f4b6d35da7b63529a728eb9333fe424b2a5c6d/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b7f4b6d35da7b63529a728eb9333fe424b2a5c6d/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=b7f4b6d35da7b63529a728eb9333fe424b2a5c6d",
        "patch": "@@ -14,8 +14,10 @@\n #include \"optionsdialog.h\"\n #include \"optionsmodel.h\"\n #include \"rpcconsole.h\"\n+#ifdef ENABLE_WALLET\n #include \"walletframe.h\"\n #include \"walletmodel.h\"\n+#endif\n \n #ifdef Q_OS_MAC\n #include \"macdockiconhandler.h\"\n@@ -59,6 +61,7 @@ const QString BitcoinGUI::DEFAULT_WALLET = \"~Default\";\n BitcoinGUI::BitcoinGUI(bool fIsTestnet, QWidget *parent) :\n     QMainWindow(parent),\n     clientModel(0),\n+    walletFrame(0),\n     encryptWalletAction(0),\n     changePassphraseAction(0),\n     aboutQtAction(0),\n@@ -69,9 +72,22 @@ BitcoinGUI::BitcoinGUI(bool fIsTestnet, QWidget *parent) :\n {\n     GUIUtil::restoreWindowGeometry(\"nWindow\", QSize(850, 550), this);\n \n+    QString windowTitle = tr(\"Bitcoin Core\") + \" - \";\n+#ifdef ENABLE_WALLET\n+    /* if compiled with wallet support, -disablewallet can still disable the wallet */\n+    bool enableWallet = !GetBoolArg(\"-disablewallet\", false);\n+#else\n+    bool enableWallet = false;\n+#endif\n+    if(enableWallet)\n+    {\n+        windowTitle += tr(\"Wallet\");\n+    } else {\n+        windowTitle += tr(\"Node\");\n+    }\n+\n     if (!fIsTestnet)\n     {\n-        setWindowTitle(tr(\"Bitcoin Core\") + \" - \" + tr(\"Wallet\"));\n #ifndef Q_OS_MAC\n         QApplication::setWindowIcon(QIcon(\":icons/bitcoin\"));\n         setWindowIcon(QIcon(\":icons/bitcoin\"));\n@@ -81,24 +97,37 @@ BitcoinGUI::BitcoinGUI(bool fIsTestnet, QWidget *parent) :\n     }\n     else\n     {\n-        setWindowTitle(tr(\"Bitcoin Core\") + \" - \" + tr(\"Wallet\") + \" \" + tr(\"[testnet]\"));\n+        windowTitle += \" \" + tr(\"[testnet]\");\n #ifndef Q_OS_MAC\n         QApplication::setWindowIcon(QIcon(\":icons/bitcoin_testnet\"));\n         setWindowIcon(QIcon(\":icons/bitcoin_testnet\"));\n #else\n         MacDockIconHandler::instance()->setIcon(QIcon(\":icons/bitcoin_testnet\"));\n #endif\n     }\n+    setWindowTitle(windowTitle);\n \n #if defined(Q_OS_MAC) && QT_VERSION < 0x050000\n     // This property is not implemented in Qt 5. Setting it has no effect.\n     // A replacement API (QtMacUnifiedToolBar) is available in QtMacExtras.\n     setUnifiedTitleAndToolBarOnMac(true);\n #endif\n \n-    // Create wallet frame and make it the central widget\n-    walletFrame = new WalletFrame(this);\n-    setCentralWidget(walletFrame);\n+    rpcConsole = new RPCConsole(enableWallet ? this : 0);\n+#ifdef ENABLE_WALLET\n+    if(enableWallet)\n+    {\n+        /** Create wallet frame and make it the central widget */\n+        walletFrame = new WalletFrame(this);\n+        setCentralWidget(walletFrame);\n+    } else\n+#endif\n+    {\n+        /* When compiled without wallet or -disablewallet is provided,\n+         * the central widget is the rpc console.\n+         */\n+        setCentralWidget(rpcConsole);\n+    }\n \n     // Accept D&D of URIs\n     setAcceptDrops(true);\n@@ -160,8 +189,8 @@ BitcoinGUI::BitcoinGUI(bool fIsTestnet, QWidget *parent) :\n \n     syncIconMovie = new QMovie(\":/movies/update_spinner\", \"mng\", this);\n \n-    rpcConsole = new RPCConsole(this);\n     connect(openRPCConsoleAction, SIGNAL(triggered()), rpcConsole, SLOT(show()));\n+\n     // prevents an oben debug window from becoming stuck/unusable on client shutdown\n     connect(quitAction, SIGNAL(triggered()), rpcConsole, SLOT(hide()));\n \n@@ -286,14 +315,19 @@ void BitcoinGUI::createActions(bool fIsTestnet)\n     connect(aboutQtAction, SIGNAL(triggered()), qApp, SLOT(aboutQt()));\n     connect(optionsAction, SIGNAL(triggered()), this, SLOT(optionsClicked()));\n     connect(toggleHideAction, SIGNAL(triggered()), this, SLOT(toggleHidden()));\n-    connect(encryptWalletAction, SIGNAL(triggered(bool)), walletFrame, SLOT(encryptWallet(bool)));\n-    connect(backupWalletAction, SIGNAL(triggered()), walletFrame, SLOT(backupWallet()));\n-    connect(changePassphraseAction, SIGNAL(triggered()), walletFrame, SLOT(changePassphrase()));\n-    connect(signMessageAction, SIGNAL(triggered()), this, SLOT(gotoSignMessageTab()));\n-    connect(verifyMessageAction, SIGNAL(triggered()), this, SLOT(gotoVerifyMessageTab()));\n-    connect(usedSendingAddressesAction, SIGNAL(triggered()), walletFrame, SLOT(usedSendingAddresses()));\n-    connect(usedReceivingAddressesAction, SIGNAL(triggered()), walletFrame, SLOT(usedReceivingAddresses()));\n-    connect(openAction, SIGNAL(triggered()), this, SLOT(openClicked()));\n+#ifdef ENABLE_WALLET\n+    if(walletFrame)\n+    {\n+        connect(encryptWalletAction, SIGNAL(triggered(bool)), walletFrame, SLOT(encryptWallet(bool)));\n+        connect(backupWalletAction, SIGNAL(triggered()), walletFrame, SLOT(backupWallet()));\n+        connect(changePassphraseAction, SIGNAL(triggered()), walletFrame, SLOT(changePassphrase()));\n+        connect(signMessageAction, SIGNAL(triggered()), this, SLOT(gotoSignMessageTab()));\n+        connect(verifyMessageAction, SIGNAL(triggered()), this, SLOT(gotoVerifyMessageTab()));\n+        connect(usedSendingAddressesAction, SIGNAL(triggered()), walletFrame, SLOT(usedSendingAddresses()));\n+        connect(usedReceivingAddressesAction, SIGNAL(triggered()), walletFrame, SLOT(usedReceivingAddresses()));\n+        connect(openAction, SIGNAL(triggered()), this, SLOT(openClicked()));\n+    }\n+#endif\n }\n \n void BitcoinGUI::createMenuBar()\n@@ -308,38 +342,50 @@ void BitcoinGUI::createMenuBar()\n \n     // Configure the menus\n     QMenu *file = appMenuBar->addMenu(tr(\"&File\"));\n-    file->addAction(openAction);\n-    file->addAction(backupWalletAction);\n-    file->addAction(signMessageAction);\n-    file->addAction(verifyMessageAction);\n-    file->addSeparator();\n-    file->addAction(usedSendingAddressesAction);\n-    file->addAction(usedReceivingAddressesAction);\n-    file->addSeparator();\n+    if(walletFrame)\n+    {\n+        file->addAction(openAction);\n+        file->addAction(backupWalletAction);\n+        file->addAction(signMessageAction);\n+        file->addAction(verifyMessageAction);\n+        file->addSeparator();\n+        file->addAction(usedSendingAddressesAction);\n+        file->addAction(usedReceivingAddressesAction);\n+        file->addSeparator();\n+    }\n     file->addAction(quitAction);\n \n     QMenu *settings = appMenuBar->addMenu(tr(\"&Settings\"));\n-    settings->addAction(encryptWalletAction);\n-    settings->addAction(changePassphraseAction);\n-    settings->addSeparator();\n+    if(walletFrame)\n+    {\n+        settings->addAction(encryptWalletAction);\n+        settings->addAction(changePassphraseAction);\n+        settings->addSeparator();\n+    }\n     settings->addAction(optionsAction);\n \n     QMenu *help = appMenuBar->addMenu(tr(\"&Help\"));\n-    help->addAction(openRPCConsoleAction);\n-    help->addSeparator();\n+    if(walletFrame)\n+    {\n+        help->addAction(openRPCConsoleAction);\n+        help->addSeparator();\n+    }\n     help->addAction(aboutAction);\n     help->addAction(aboutQtAction);\n }\n \n void BitcoinGUI::createToolBars()\n {\n-    QToolBar *toolbar = addToolBar(tr(\"Tabs toolbar\"));\n-    toolbar->setToolButtonStyle(Qt::ToolButtonTextBesideIcon);\n-    toolbar->addAction(overviewAction);\n-    toolbar->addAction(sendCoinsAction);\n-    toolbar->addAction(receiveCoinsAction);\n-    toolbar->addAction(historyAction);\n-    overviewAction->setChecked(true);\n+    if(walletFrame)\n+    {\n+        QToolBar *toolbar = addToolBar(tr(\"Tabs toolbar\"));\n+        toolbar->setToolButtonStyle(Qt::ToolButtonTextBesideIcon);\n+        toolbar->addAction(overviewAction);\n+        toolbar->addAction(sendCoinsAction);\n+        toolbar->addAction(receiveCoinsAction);\n+        toolbar->addAction(historyAction);\n+        overviewAction->setChecked(true);\n+    }\n }\n \n void BitcoinGUI::setClientModel(ClientModel *clientModel)\n@@ -362,26 +408,39 @@ void BitcoinGUI::setClientModel(ClientModel *clientModel)\n         connect(clientModel, SIGNAL(message(QString,QString,unsigned int)), this, SLOT(message(QString,QString,unsigned int)));\n \n         rpcConsole->setClientModel(clientModel);\n-        walletFrame->setClientModel(clientModel);\n+#ifdef ENABLE_WALLET\n+        if(walletFrame)\n+        {\n+            walletFrame->setClientModel(clientModel);\n+        }\n+#endif\n     }\n }\n \n+#ifdef ENABLE_WALLET\n bool BitcoinGUI::addWallet(const QString& name, WalletModel *walletModel)\n {\n+    if(!walletFrame)\n+        return false;\n     setWalletActionsEnabled(true);\n     return walletFrame->addWallet(name, walletModel);\n }\n \n bool BitcoinGUI::setCurrentWallet(const QString& name)\n {\n+    if(!walletFrame)\n+        return false;\n     return walletFrame->setCurrentWallet(name);\n }\n \n void BitcoinGUI::removeAllWallets()\n {\n+    if(!walletFrame)\n+        return;\n     setWalletActionsEnabled(false);\n     walletFrame->removeAllWallets();\n }\n+#endif\n \n void BitcoinGUI::setWalletActionsEnabled(bool enabled)\n {\n@@ -489,6 +548,7 @@ void BitcoinGUI::aboutClicked()\n     dlg.exec();\n }\n \n+#ifdef ENABLE_WALLET\n void BitcoinGUI::openClicked()\n {\n     OpenURIDialog dlg(this);\n@@ -531,6 +591,7 @@ void BitcoinGUI::gotoVerifyMessageTab(QString addr)\n {\n     if (walletFrame) walletFrame->gotoVerifyMessageTab(addr);\n }\n+#endif\n \n void BitcoinGUI::setNumConnections(int count)\n {\n@@ -591,7 +652,10 @@ void BitcoinGUI::setNumBlocks(int count, int nTotalBlocks)\n         tooltip = tr(\"Up to date\") + QString(\".<br>\") + tooltip;\n         labelBlocksIcon->setPixmap(QIcon(\":/icons/synced\").pixmap(STATUSBAR_ICONSIZE, STATUSBAR_ICONSIZE));\n \n-        walletFrame->showOutOfSyncWarning(false);\n+#ifdef ENABLE_WALLET\n+        if(walletFrame)\n+            walletFrame->showOutOfSyncWarning(false);\n+#endif\n \n         progressBarLabel->setVisible(false);\n         progressBar->setVisible(false);\n@@ -625,7 +689,10 @@ void BitcoinGUI::setNumBlocks(int count, int nTotalBlocks)\n             syncIconMovie->jumpToNextFrame();\n         prevBlocks = count;\n \n-        walletFrame->showOutOfSyncWarning(true);\n+#ifdef ENABLE_WALLET\n+        if(walletFrame)\n+            walletFrame->showOutOfSyncWarning(true);\n+#endif\n \n         tooltip += QString(\"<br>\");\n         tooltip += tr(\"Last received block was generated %1 ago.\").arg(timeBehindText);\n@@ -738,6 +805,7 @@ void BitcoinGUI::closeEvent(QCloseEvent *event)\n     QMainWindow::closeEvent(event);\n }\n \n+#ifdef ENABLE_WALLET\n void BitcoinGUI::incomingTransaction(const QString& date, int unit, qint64 amount, const QString& type, const QString& address)\n {\n     // On new transaction, make an info balloon\n@@ -751,6 +819,7 @@ void BitcoinGUI::incomingTransaction(const QString& date, int unit, qint64 amoun\n                   .arg(type)\n                   .arg(address), CClientUIInterface::MSG_INFORMATION);\n }\n+#endif\n \n void BitcoinGUI::dragEnterEvent(QDragEnterEvent *event)\n {\n@@ -783,10 +852,11 @@ bool BitcoinGUI::eventFilter(QObject *object, QEvent *event)\n     return QMainWindow::eventFilter(object, event);\n }\n \n+#ifdef ENABLE_WALLET\n bool BitcoinGUI::handlePaymentRequest(const SendCoinsRecipient& recipient)\n {\n     // URI has to be valid\n-    if (walletFrame->handlePaymentRequest(recipient))\n+    if (walletFrame && walletFrame->handlePaymentRequest(recipient))\n     {\n         showNormalIfMinimized();\n         gotoSendCoinsPage();\n@@ -824,6 +894,7 @@ void BitcoinGUI::setEncryptionStatus(int status)\n         break;\n     }\n }\n+#endif\n \n void BitcoinGUI::showNormalIfMinimized(bool fToggleHidden)\n {"
      },
      {
        "sha": "1038e2739c71d358edfa6a31a4deff965133950f",
        "filename": "src/qt/bitcoingui.h",
        "status": "modified",
        "additions": 18,
        "deletions": 8,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b7f4b6d35da7b63529a728eb9333fe424b2a5c6d/src/qt/bitcoingui.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b7f4b6d35da7b63529a728eb9333fe424b2a5c6d/src/qt/bitcoingui.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.h?ref=b7f4b6d35da7b63529a728eb9333fe424b2a5c6d",
        "patch": "@@ -5,6 +5,10 @@\n #ifndef BITCOINGUI_H\n #define BITCOINGUI_H\n \n+#if defined(HAVE_CONFIG_H)\n+#include \"bitcoin-config.h\"\n+#endif\n+\n #include <QMainWindow>\n #include <QMap>\n #include <QSystemTrayIcon>\n@@ -43,14 +47,15 @@ class BitcoinGUI : public QMainWindow\n     */\n     void setClientModel(ClientModel *clientModel);\n \n+#ifdef ENABLE_WALLET\n     /** Set the wallet model.\n         The wallet model represents a bitcoin wallet, and offers access to the list of transactions, address book and sending\n         functionality.\n     */\n     bool addWallet(const QString& name, WalletModel *walletModel);\n     bool setCurrentWallet(const QString& name);\n-\n     void removeAllWallets();\n+#endif\n \n protected:\n     void changeEvent(QEvent *e);\n@@ -125,11 +130,6 @@ public slots:\n     void setNumConnections(int count);\n     /** Set number of blocks shown in the UI */\n     void setNumBlocks(int count, int nTotalBlocks);\n-    /** Set the encryption status as shown in the UI.\n-       @param[in] status            current encryption status\n-       @see WalletModel::EncryptionStatus\n-    */\n-    void setEncryptionStatus(int status);\n \n     /** Notify the user of an event from the core network or transaction handling code.\n        @param[in] title     the message box / notification title\n@@ -140,12 +140,21 @@ public slots:\n     */\n     void message(const QString &title, const QString &message, unsigned int style, bool *ret = NULL);\n \n+#ifdef ENABLE_WALLET\n+    /** Set the encryption status as shown in the UI.\n+       @param[in] status            current encryption status\n+       @see WalletModel::EncryptionStatus\n+    */\n+    void setEncryptionStatus(int status);\n+\n     bool handlePaymentRequest(const SendCoinsRecipient& recipient);\n \n     /** Show incoming transaction notification for new transactions. */\n     void incomingTransaction(const QString& date, int unit, qint64 amount, const QString& type, const QString& address);\n+#endif\n \n private slots:\n+#ifdef ENABLE_WALLET\n     /** Switch to overview (home) page */\n     void gotoOverviewPage();\n     /** Switch to history (transactions) page */\n@@ -160,6 +169,9 @@ private slots:\n     /** Show Sign/Verify Message dialog and switch to verify message tab */\n     void gotoVerifyMessageTab(QString addr = \"\");\n \n+    /** Show open dialog */\n+    void openClicked();\n+#endif\n     /** Show configuration dialog */\n     void optionsClicked();\n     /** Show about dialog */\n@@ -168,8 +180,6 @@ private slots:\n     /** Handle tray icon clicked */\n     void trayIconActivated(QSystemTrayIcon::ActivationReason reason);\n #endif\n-    /** Show open dialog */\n-    void openClicked();\n \n     /** Show window if hidden, unminimize when minimized, rise when obscured or show if hidden and fToggleHidden is true */\n     void showNormalIfMinimized(bool fToggleHidden = false);"
      },
      {
        "sha": "1133c457b3a4409b29cff4574b19336a286f24fe",
        "filename": "src/qt/optionsmodel.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 1,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b7f4b6d35da7b63529a728eb9333fe424b2a5c6d/src/qt/optionsmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b7f4b6d35da7b63529a728eb9333fe424b2a5c6d/src/qt/optionsmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsmodel.cpp?ref=b7f4b6d35da7b63529a728eb9333fe424b2a5c6d",
        "patch": "@@ -14,8 +14,10 @@\n #include \"init.h\"\n #include \"main.h\"\n #include \"net.h\"\n+#ifdef ENABLE_WALLET\n #include \"wallet.h\"\n #include \"walletdb.h\"\n+#endif\n \n #include <QSettings>\n #include <QStringList>\n@@ -67,8 +69,10 @@ void OptionsModel::Init()\n     // by command-line and show this in the UI.\n \n     // Main\n+#ifdef ENABLE_WALLET\n     if (!settings.contains(\"nTransactionFee\"))\n         settings.setValue(\"nTransactionFee\", 0);\n+#endif\n \n     if (!settings.contains(\"nDatabaseCache\"))\n         settings.setValue(\"nDatabaseCache\", 25);\n@@ -137,6 +141,7 @@ void OptionsModel::Upgrade()\n \n     settings.setValue(\"bImportFinished\", true);\n \n+#ifdef ENABLE_WALLET\n     // Move settings from old wallet.dat (if any):\n     CWalletDB walletdb(strWalletFile);\n \n@@ -181,6 +186,7 @@ void OptionsModel::Upgrade()\n             walletdb.EraseSetting(\"addrProxy\");\n         }\n     }\n+#endif\n \n     Init();\n }\n@@ -227,6 +233,7 @@ QVariant OptionsModel::data(const QModelIndex & index, int role) const\n         case ProxySocksVersion:\n             return settings.value(\"nSocksVersion\", 5);\n \n+#ifdef ENABLE_WALLET\n         case Fee:\n             // Attention: Init() is called before nTransactionFee is set in AppInit2()!\n             // To ensure we can change the fee on-the-fly update our QSetting when\n@@ -236,6 +243,7 @@ QVariant OptionsModel::data(const QModelIndex & index, int role) const\n             // Todo: Consider to revert back to use just nTransactionFee here, if we don't want\n             // -paytxfee to update our QSettings!\n             return settings.value(\"nTransactionFee\");\n+#endif\n         case DisplayUnit:\n             return nDisplayUnit;\n         case DisplayAddresses:\n@@ -318,13 +326,14 @@ bool OptionsModel::setData(const QModelIndex & index, const QVariant & value, in\n             }\n         }\n         break;\n-\n+#ifdef ENABLE_WALLET\n         case Fee: // core option - can be changed on-the-fly\n             // Todo: Add is valid check  and warn via message, if not\n             nTransactionFee = value.toLongLong();\n             settings.setValue(\"nTransactionFee\", (qint64)nTransactionFee);\n             emit transactionFeeChanged(nTransactionFee);\n             break;\n+#endif\n         case DisplayUnit:\n             nDisplayUnit = value.toInt();\n             settings.setValue(\"nDisplayUnit\", nDisplayUnit);"
      },
      {
        "sha": "da54ef376b24eb81260ce105694eddfb83953643",
        "filename": "src/qt/test/Makefile.am",
        "status": "modified",
        "additions": 14,
        "deletions": 3,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b7f4b6d35da7b63529a728eb9333fe424b2a5c6d/src/qt/test/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b7f4b6d35da7b63529a728eb9333fe424b2a5c6d/src/qt/test/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/Makefile.am?ref=b7f4b6d35da7b63529a728eb9333fe424b2a5c6d",
        "patch": "@@ -8,16 +8,27 @@ AM_CPPFLAGS += -I$(top_srcdir)/src \\\n bin_PROGRAMS = test_bitcoin-qt\n TESTS = test_bitcoin-qt\n \n-TEST_QT_MOC_CPP = moc_uritests.cpp moc_paymentservertests.cpp\n+TEST_QT_MOC_CPP = moc_uritests.cpp\n+\n+if ENABLE_WALLET\n+TEST_QT_MOC_CPP += moc_paymentservertests.cpp\n+endif\n \n TEST_QT_H = uritests.h paymentservertests.h paymentrequestdata.h\n \n BUILT_SOURCES = $(TEST_QT_MOC_CPP)\n \n test_bitcoin_qt_CPPFLAGS = $(AM_CPPFLAGS) $(QT_INCLUDES) $(QT_TEST_INCLUDES)\n-test_bitcoin_qt_SOURCES = test_main.cpp uritests.cpp paymentservertests.cpp $(TEST_QT_H)\n+test_bitcoin_qt_SOURCES = test_main.cpp uritests.cpp $(TEST_QT_H)\n+if ENABLE_WALLET\n+test_bitcoin_qt_SOURCES += paymentservertests.cpp\n+endif\n nodist_test_bitcoin_qt_SOURCES = $(TEST_QT_MOC_CPP)\n-test_bitcoin_qt_LDADD = $(LIBBITCOINQT) $(LIBBITCOIN_SERVER) $(LIBBITCOIN_WALLET) $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBLEVELDB) \\\n+test_bitcoin_qt_LDADD = $(LIBBITCOINQT) $(LIBBITCOIN_SERVER)\n+if ENABLE_WALLET\n+test_bitcoin_qt_LDADD += $(LIBBITCOIN_WALLET)\n+endif\n+test_bitcoin_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBLEVELDB) \\\n   $(LIBMEMENV) $(BOOST_LIBS) $(QT_DBUS_LIBS) $(QT_TEST_LIBS) $(QT_LIBS) \\\n   $(QR_LIBS) $(PROTOBUF_LIBS) $(BDB_LIBS)\n "
      },
      {
        "sha": "a2adb0032733fcab0f9d3406b917a5c147355cdd",
        "filename": "src/qt/test/test_main.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 1,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b7f4b6d35da7b63529a728eb9333fe424b2a5c6d/src/qt/test/test_main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b7f4b6d35da7b63529a728eb9333fe424b2a5c6d/src/qt/test/test_main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/test_main.cpp?ref=b7f4b6d35da7b63529a728eb9333fe424b2a5c6d",
        "patch": "@@ -1,5 +1,11 @@\n #include \"bitcoin-config.h\"\n+#if defined(HAVE_CONFIG_H)\n+#include \"bitcoin-config.h\"\n+#endif\n+\n+#ifdef ENABLE_WALLET\n #include \"paymentservertests.h\"\n+#endif\n #include \"uritests.h\"\n \n #include <QCoreApplication>\n@@ -27,10 +33,11 @@ int main(int argc, char *argv[])\n     URITests test1;\n     if (QTest::qExec(&test1) != 0)\n         fInvalid = true;\n-\n+#ifdef ENABLE_WALLET\n     PaymentServerTests test2;\n     if (QTest::qExec(&test2) != 0)\n         fInvalid = true;\n+#endif\n \n     return fInvalid;\n }"
      }
    ]
  },
  {
    "sha": "061aff4c46babdc30bb9f52f874a24edd8d14d82",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNjFhZmY0YzQ2YmFiZGMzMGJiOWY1MmY4NzRhMjRlZGQ4ZDE0ZDgy",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-11T11:51:03Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-11T11:51:12Z"
      },
      "message": "Merge pull request #3392\n\nb7f4b6d GUI for --disable-wallet compiles and -disablewallet mode (Wladimir J. van der Laan)\nec41342 build: pass correct defs and include path to moc (Wladimir J. van der Laan)",
      "tree": {
        "sha": "6a0820ae13a8131ce3a0e2e0acf3754089b88ba3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6a0820ae13a8131ce3a0e2e0acf3754089b88ba3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/061aff4c46babdc30bb9f52f874a24edd8d14d82",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJS0TAwAAoJEHSBCwEjRsmmI78H/RY7kcwQ74a8/p3cYaE3CluU\nKHiJZO3x9BzAqXoFktP/jZqzKzZDaqn9yxHWwbLm81BghAzpFYDrpx6fEVcicocJ\nnY7Knu8oYVviqw1973AcNcfhkXvUON62arfpdlvf+cOSn3qIvncQHFFMo2bozVJD\nt98I0jwF/OWUh1KQd/cceS2csM7+BvkqNuwz5MMGIlHeS/JyfCZL6etQWNDDPMVI\nWM+xeCiLyyyT1F33DAMM22AdZ4p/lOkGcoUROaFQV6L0Ny/4IwZqpxE7gPbz1jFg\nV5He2xq/BiR3uy9pY3YDuzhg0CgSnDeRUBYTrYh9bhvfRBfPM2ltHT57PybR+bw=\n=e78d\n-----END PGP SIGNATURE-----",
        "payload": "tree 6a0820ae13a8131ce3a0e2e0acf3754089b88ba3\nparent 054be736d4773804b51ed67d6b7fe0e1b15d1d1b\nparent b7f4b6d35da7b63529a728eb9333fe424b2a5c6d\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1389441063 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1389441072 +0100\n\nMerge pull request #3392\n\nb7f4b6d GUI for --disable-wallet compiles and -disablewallet mode (Wladimir J. van der Laan)\nec41342 build: pass correct defs and include path to moc (Wladimir J. van der Laan)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/061aff4c46babdc30bb9f52f874a24edd8d14d82",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/061aff4c46babdc30bb9f52f874a24edd8d14d82",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/061aff4c46babdc30bb9f52f874a24edd8d14d82/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "054be736d4773804b51ed67d6b7fe0e1b15d1d1b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/054be736d4773804b51ed67d6b7fe0e1b15d1d1b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/054be736d4773804b51ed67d6b7fe0e1b15d1d1b"
      },
      {
        "sha": "b7f4b6d35da7b63529a728eb9333fe424b2a5c6d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b7f4b6d35da7b63529a728eb9333fe424b2a5c6d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b7f4b6d35da7b63529a728eb9333fe424b2a5c6d"
      }
    ],
    "stats": {
      "total": 321,
      "additions": 244,
      "deletions": 77
    },
    "files": [
      {
        "sha": "82f489a06d645498e9db80873104a685fa4d1a21",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/061aff4c46babdc30bb9f52f874a24edd8d14d82/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/061aff4c46babdc30bb9f52f874a24edd8d14d82/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=061aff4c46babdc30bb9f52f874a24edd8d14d82",
        "patch": "@@ -567,9 +567,6 @@ if test x$bitcoin_enable_qt != xno; then\n       AC_MSG_ERROR(\"QT Test lib not found. Use --disable-tests or --without-qt.\")\n     fi\n   fi\n-  if test x$enable_wallet == xno; then\n-    AC_MSG_ERROR([Cannot currently build Qt GUI with wallet disabled. Use --without-qt.])\n-  fi\n fi\n \n if test x$use_tests = xyes; then"
      },
      {
        "sha": "070902c519afbea32935f3b3b60ad27d0f9c0d08",
        "filename": "src/Makefile.include",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/061aff4c46babdc30bb9f52f874a24edd8d14d82/src/Makefile.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/061aff4c46babdc30bb9f52f874a24edd8d14d82/src/Makefile.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.include?ref=061aff4c46babdc30bb9f52f874a24edd8d14d82",
        "patch": "@@ -12,6 +12,7 @@ LIBBITCOIN_CLI=$(top_builddir)/src/libbitcoin_cli.a\n LIBLEVELDB=$(top_builddir)/src/leveldb/libleveldb.a\n LIBMEMENV=$(top_builddir)/src/leveldb/libmemenv.a\n LIBBITCOINQT=$(top_builddir)/src/qt/libbitcoinqt.a\n+MOC_DEFS=$(DEFS) -I$(top_srcdir)/src\n \n $(LIBBITCOIN):\n \t$(MAKE) -C $(top_builddir)/src $(@F)"
      },
      {
        "sha": "53bd893fade2b30fa44261d336b51d7fa0e266eb",
        "filename": "src/qt/Makefile.am",
        "status": "modified",
        "additions": 51,
        "deletions": 15,
        "changes": 66,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/061aff4c46babdc30bb9f52f874a24edd8d14d82/src/qt/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/061aff4c46babdc30bb9f52f874a24edd8d14d82/src/qt/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/Makefile.am?ref=061aff4c46babdc30bb9f52f874a24edd8d14d82",
        "patch": "@@ -150,24 +150,56 @@ RES_ICONS = res/icons/bitcoin.png res/icons/address-book.png \\\n   res/icons/qrcode.png res/icons/debugwindow.png res/icons/bitcoin.ico \\\n   res/icons/bitcoin_testnet.ico\n \n-BITCOIN_QT_CPP = aboutdialog.cpp addressbookpage.cpp \\\n-  addresstablemodel.cpp askpassphrasedialog.cpp bitcoinaddressvalidator.cpp \\\n-  bitcoinamountfield.cpp bitcoin.cpp bitcoingui.cpp \\\n-  bitcoinunits.cpp clientmodel.cpp \\\n+BITCOIN_QT_CPP = \\\n+  aboutdialog.cpp \\\n+  bitcoinaddressvalidator.cpp \\\n+  bitcoinamountfield.cpp \\\n+  bitcoin.cpp \\\n+  bitcoingui.cpp \\\n+  bitcoinunits.cpp \\\n+  clientmodel.cpp \\\n+  csvmodelwriter.cpp \\\n+  guiutil.cpp \\\n+  intro.cpp \\\n+  monitoreddatamapper.cpp \\\n+  notificator.cpp \\\n+  optionsdialog.cpp \\\n+  optionsmodel.cpp \\\n+  qvalidatedlineedit.cpp \\\n+  qvaluecombobox.cpp \\\n+  rpcconsole.cpp \\\n+  signverifymessagedialog.cpp \\\n+  splashscreen.cpp \\\n+  trafficgraphwidget.cpp\n+\n+if ENABLE_WALLET\n+BITCOIN_QT_CPP += \\\n+  addressbookpage.cpp \\\n+  addresstablemodel.cpp \\\n+  askpassphrasedialog.cpp \\\n   coincontroldialog.cpp \\\n   coincontroltreewidget.cpp \\\n-  csvmodelwriter.cpp editaddressdialog.cpp \\\n-  guiutil.cpp intro.cpp monitoreddatamapper.cpp notificator.cpp \\\n+  editaddressdialog.cpp \\\n   openuridialog.cpp \\\n-  optionsdialog.cpp optionsmodel.cpp overviewpage.cpp paymentrequestplus.cpp \\\n-  paymentserver.cpp qvalidatedlineedit.cpp qvaluecombobox.cpp \\\n-  receivecoinsdialog.cpp receiverequestdialog.cpp \\\n+  overviewpage.cpp \\\n+  paymentrequestplus.cpp \\\n+  paymentserver.cpp \\\n+  receivecoinsdialog.cpp \\\n+  receiverequestdialog.cpp \\\n   recentrequeststablemodel.cpp \\\n-  rpcconsole.cpp sendcoinsdialog.cpp sendcoinsentry.cpp \\\n-  signverifymessagedialog.cpp splashscreen.cpp trafficgraphwidget.cpp transactiondesc.cpp \\\n-  transactiondescdialog.cpp transactionfilterproxy.cpp transactionrecord.cpp \\\n-  transactiontablemodel.cpp transactionview.cpp walletframe.cpp \\\n-  walletmodel.cpp walletmodeltransaction.cpp walletview.cpp\n+  sendcoinsdialog.cpp \\\n+  sendcoinsentry.cpp \\\n+  transactiondesc.cpp \\\n+  transactiondescdialog.cpp \\\n+  transactionfilterproxy.cpp \\\n+  transactionrecord.cpp \\\n+  transactiontablemodel.cpp \\\n+  transactionview.cpp \\\n+  walletframe.cpp \\\n+  walletmodel.cpp \\\n+  walletmodeltransaction.cpp \\\n+  walletview.cpp\n+endif\n \n RES_IMAGES = res/images/about.png res/images/splash.png \\\n   res/images/splash_testnet.png\n@@ -203,7 +235,11 @@ endif\n bitcoin_qt_CPPFLAGS = $(AM_CPPFLAGS) $(QT_INCLUDES) \\\n   -I$(top_srcdir)/src/qt/forms\n bitcoin_qt_SOURCES = bitcoin.cpp\n-bitcoin_qt_LDADD = libbitcoinqt.a $(LIBBITCOIN_SERVER) $(LIBBITCOIN_WALLET) $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBLEVELDB) $(LIBMEMENV) \\\n+bitcoin_qt_LDADD = libbitcoinqt.a $(LIBBITCOIN_SERVER)\n+if ENABLE_WALLET\n+bitcoin_qt_LDADD += $(LIBBITCOIN_WALLET)\n+endif\n+bitcoin_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBLEVELDB) $(LIBMEMENV) \\\n   $(BOOST_LIBS) $(QT_LIBS) $(QT_DBUS_LIBS) $(QR_LIBS) $(PROTOBUF_LIBS) $(BDB_LIBS)\n \n # forms/foo.h -> forms/ui_foo.h"
      },
      {
        "sha": "82d8af77d9fcfba3a3ac5b849e1cfaa3c00e2b94",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 33,
        "deletions": 8,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/061aff4c46babdc30bb9f52f874a24edd8d14d82/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/061aff4c46babdc30bb9f52f874a24edd8d14d82/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=061aff4c46babdc30bb9f52f874a24edd8d14d82",
        "patch": "@@ -10,9 +10,11 @@\n #include \"guiutil.h\"\n #include \"intro.h\"\n #include \"optionsmodel.h\"\n-#include \"paymentserver.h\"\n #include \"splashscreen.h\"\n+#ifdef ENABLE_WALLET\n+#include \"paymentserver.h\"\n #include \"walletmodel.h\"\n+#endif\n \n #include \"init.h\"\n #include \"main.h\"\n@@ -157,8 +159,10 @@ class BitcoinApplication: public QApplication\n     explicit BitcoinApplication(int &argc, char **argv);\n     ~BitcoinApplication();\n \n+#ifdef ENABLE_WALLET\n     /// Create payment server\n     void createPaymentServer();\n+#endif\n     /// Create options model\n     void createOptionsModel();\n     /// Create main window\n@@ -188,12 +192,14 @@ public slots:\n \n private:\n     QThread *coreThread;\n-    PaymentServer* paymentServer;\n     OptionsModel *optionsModel;\n     ClientModel *clientModel;\n     BitcoinGUI *window;\n-    WalletModel *walletModel;\n     QTimer *pollShutdownTimer;\n+#ifdef ENABLE_WALLET\n+    PaymentServer* paymentServer;\n+    WalletModel *walletModel;\n+#endif\n     int returnValue;\n \n     void startThread();\n@@ -246,12 +252,14 @@ void BitcoinCore::shutdown()\n BitcoinApplication::BitcoinApplication(int &argc, char **argv):\n     QApplication(argc, argv),\n     coreThread(0),\n-    paymentServer(0),\n     optionsModel(0),\n     clientModel(0),\n     window(0),\n-    walletModel(0),\n     pollShutdownTimer(0),\n+#ifdef ENABLE_WALLET\n+    paymentServer(0),\n+    walletModel(0),\n+#endif\n     returnValue(0)\n {\n     setQuitOnLastWindowClosed(false);\n@@ -266,14 +274,21 @@ BitcoinApplication::~BitcoinApplication()\n     LogPrintf(\"Stopped thread\\n\");\n \n     delete window;\n+    window = 0;\n+#ifdef ENABLE_WALLET\n     delete paymentServer;\n+    paymentServer = 0;\n+#endif\n     delete optionsModel;\n+    optionsModel = 0;\n }\n \n+#ifdef ENABLE_WALLET\n void BitcoinApplication::createPaymentServer()\n {\n     paymentServer = new PaymentServer(this);\n }\n+#endif\n \n void BitcoinApplication::createOptionsModel()\n {\n@@ -327,11 +342,13 @@ void BitcoinApplication::requestShutdown()\n     LogPrintf(\"Requesting shutdown\\n\");\n     window->hide();\n     window->setClientModel(0);\n-    window->removeAllWallets();\n     pollShutdownTimer->stop();\n \n+#ifdef ENABLE_WALLET\n+    window->removeAllWallets();\n     delete walletModel;\n     walletModel = 0;\n+#endif\n     delete clientModel;\n     clientModel = 0;\n \n@@ -362,14 +379,17 @@ void BitcoinApplication::initializeResult(int retval)\n         // Miscellaneous initialization after core is initialized\n         optionsModel->Upgrade(); // Must be done after AppInit2\n \n+#ifdef ENABLE_WALLET\n         PaymentServer::LoadRootCAs();\n         paymentServer->setOptionsModel(optionsModel);\n+#endif\n \n         emit splashFinished(window);\n \n         clientModel = new ClientModel(optionsModel);\n         window->setClientModel(clientModel);\n \n+#ifdef ENABLE_WALLET\n         if(pwalletMain)\n         {\n             walletModel = new WalletModel(pwalletMain, optionsModel);\n@@ -380,6 +400,7 @@ void BitcoinApplication::initializeResult(int retval)\n             connect(walletModel, SIGNAL(coinsSent(CWallet*,SendCoinsRecipient,QByteArray)),\n                              paymentServer, SLOT(fetchPaymentACK(CWallet*,const SendCoinsRecipient&,QByteArray)));\n         }\n+#endif\n \n         // If -min option passed, start window minimized.\n         if(GetBoolArg(\"-min\", false))\n@@ -390,7 +411,7 @@ void BitcoinApplication::initializeResult(int retval)\n         {\n             window->show();\n         }\n-\n+#ifdef ENABLE_WALLET\n         // Now that initialization/startup is done, process any command-line\n         // bitcoin: URIs or payment requests:\n         connect(paymentServer, SIGNAL(receivedPaymentRequest(SendCoinsRecipient)),\n@@ -400,7 +421,7 @@ void BitcoinApplication::initializeResult(int retval)\n         connect(paymentServer, SIGNAL(message(QString,QString,unsigned int)),\n                          window, SLOT(message(QString,QString,unsigned int)));\n         QTimer::singleShot(100, paymentServer, SLOT(uiReady()));\n-\n+#endif\n     } else {\n         quit(); // Exit main loop\n     }\n@@ -429,9 +450,11 @@ int main(int argc, char *argv[])\n     if (!SelectParamsFromCommandLine()) {\n         fSelParFromCLFailed = true;\n     }\n+#ifdef ENABLE_WALLET\n     // Parse URIs on command line -- this can affect TestNet() / RegTest() mode\n     if (!PaymentServer::ipcParseCommandLine(argc, argv))\n         exit(0);\n+#endif\n \n     bool isaTestNet = TestNet() || RegTest();\n \n@@ -500,6 +523,7 @@ int main(int argc, char *argv[])\n     }\n     ReadConfigFile(mapArgs, mapMultiArgs);\n \n+#ifdef ENABLE_WALLET\n     /// 7. URI IPC sending\n     // - Do this early as we don't want to bother initializing if we are just calling IPC\n     // - Do this *after* setting up the data directory, as the data directory hash is used in the name\n@@ -512,6 +536,7 @@ int main(int argc, char *argv[])\n     // Start up the payment server early, too, so impatient users that click on\n     // bitcoin: links repeatedly have their payment requests routed to this process:\n     app.createPaymentServer();\n+#endif\n \n     /// 8. Main GUI initialization\n     // Install global event filter that makes sure that long tooltips can be word-wrapped"
      },
      {
        "sha": "22c41a62019d93232633df2a90b73c99a71676e5",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 109,
        "deletions": 38,
        "changes": 147,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/061aff4c46babdc30bb9f52f874a24edd8d14d82/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/061aff4c46babdc30bb9f52f874a24edd8d14d82/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=061aff4c46babdc30bb9f52f874a24edd8d14d82",
        "patch": "@@ -14,8 +14,10 @@\n #include \"optionsdialog.h\"\n #include \"optionsmodel.h\"\n #include \"rpcconsole.h\"\n+#ifdef ENABLE_WALLET\n #include \"walletframe.h\"\n #include \"walletmodel.h\"\n+#endif\n \n #ifdef Q_OS_MAC\n #include \"macdockiconhandler.h\"\n@@ -59,6 +61,7 @@ const QString BitcoinGUI::DEFAULT_WALLET = \"~Default\";\n BitcoinGUI::BitcoinGUI(bool fIsTestnet, QWidget *parent) :\n     QMainWindow(parent),\n     clientModel(0),\n+    walletFrame(0),\n     encryptWalletAction(0),\n     changePassphraseAction(0),\n     aboutQtAction(0),\n@@ -69,9 +72,22 @@ BitcoinGUI::BitcoinGUI(bool fIsTestnet, QWidget *parent) :\n {\n     GUIUtil::restoreWindowGeometry(\"nWindow\", QSize(850, 550), this);\n \n+    QString windowTitle = tr(\"Bitcoin Core\") + \" - \";\n+#ifdef ENABLE_WALLET\n+    /* if compiled with wallet support, -disablewallet can still disable the wallet */\n+    bool enableWallet = !GetBoolArg(\"-disablewallet\", false);\n+#else\n+    bool enableWallet = false;\n+#endif\n+    if(enableWallet)\n+    {\n+        windowTitle += tr(\"Wallet\");\n+    } else {\n+        windowTitle += tr(\"Node\");\n+    }\n+\n     if (!fIsTestnet)\n     {\n-        setWindowTitle(tr(\"Bitcoin Core\") + \" - \" + tr(\"Wallet\"));\n #ifndef Q_OS_MAC\n         QApplication::setWindowIcon(QIcon(\":icons/bitcoin\"));\n         setWindowIcon(QIcon(\":icons/bitcoin\"));\n@@ -81,24 +97,37 @@ BitcoinGUI::BitcoinGUI(bool fIsTestnet, QWidget *parent) :\n     }\n     else\n     {\n-        setWindowTitle(tr(\"Bitcoin Core\") + \" - \" + tr(\"Wallet\") + \" \" + tr(\"[testnet]\"));\n+        windowTitle += \" \" + tr(\"[testnet]\");\n #ifndef Q_OS_MAC\n         QApplication::setWindowIcon(QIcon(\":icons/bitcoin_testnet\"));\n         setWindowIcon(QIcon(\":icons/bitcoin_testnet\"));\n #else\n         MacDockIconHandler::instance()->setIcon(QIcon(\":icons/bitcoin_testnet\"));\n #endif\n     }\n+    setWindowTitle(windowTitle);\n \n #if defined(Q_OS_MAC) && QT_VERSION < 0x050000\n     // This property is not implemented in Qt 5. Setting it has no effect.\n     // A replacement API (QtMacUnifiedToolBar) is available in QtMacExtras.\n     setUnifiedTitleAndToolBarOnMac(true);\n #endif\n \n-    // Create wallet frame and make it the central widget\n-    walletFrame = new WalletFrame(this);\n-    setCentralWidget(walletFrame);\n+    rpcConsole = new RPCConsole(enableWallet ? this : 0);\n+#ifdef ENABLE_WALLET\n+    if(enableWallet)\n+    {\n+        /** Create wallet frame and make it the central widget */\n+        walletFrame = new WalletFrame(this);\n+        setCentralWidget(walletFrame);\n+    } else\n+#endif\n+    {\n+        /* When compiled without wallet or -disablewallet is provided,\n+         * the central widget is the rpc console.\n+         */\n+        setCentralWidget(rpcConsole);\n+    }\n \n     // Accept D&D of URIs\n     setAcceptDrops(true);\n@@ -160,8 +189,8 @@ BitcoinGUI::BitcoinGUI(bool fIsTestnet, QWidget *parent) :\n \n     syncIconMovie = new QMovie(\":/movies/update_spinner\", \"mng\", this);\n \n-    rpcConsole = new RPCConsole(this);\n     connect(openRPCConsoleAction, SIGNAL(triggered()), rpcConsole, SLOT(show()));\n+\n     // prevents an oben debug window from becoming stuck/unusable on client shutdown\n     connect(quitAction, SIGNAL(triggered()), rpcConsole, SLOT(hide()));\n \n@@ -286,14 +315,19 @@ void BitcoinGUI::createActions(bool fIsTestnet)\n     connect(aboutQtAction, SIGNAL(triggered()), qApp, SLOT(aboutQt()));\n     connect(optionsAction, SIGNAL(triggered()), this, SLOT(optionsClicked()));\n     connect(toggleHideAction, SIGNAL(triggered()), this, SLOT(toggleHidden()));\n-    connect(encryptWalletAction, SIGNAL(triggered(bool)), walletFrame, SLOT(encryptWallet(bool)));\n-    connect(backupWalletAction, SIGNAL(triggered()), walletFrame, SLOT(backupWallet()));\n-    connect(changePassphraseAction, SIGNAL(triggered()), walletFrame, SLOT(changePassphrase()));\n-    connect(signMessageAction, SIGNAL(triggered()), this, SLOT(gotoSignMessageTab()));\n-    connect(verifyMessageAction, SIGNAL(triggered()), this, SLOT(gotoVerifyMessageTab()));\n-    connect(usedSendingAddressesAction, SIGNAL(triggered()), walletFrame, SLOT(usedSendingAddresses()));\n-    connect(usedReceivingAddressesAction, SIGNAL(triggered()), walletFrame, SLOT(usedReceivingAddresses()));\n-    connect(openAction, SIGNAL(triggered()), this, SLOT(openClicked()));\n+#ifdef ENABLE_WALLET\n+    if(walletFrame)\n+    {\n+        connect(encryptWalletAction, SIGNAL(triggered(bool)), walletFrame, SLOT(encryptWallet(bool)));\n+        connect(backupWalletAction, SIGNAL(triggered()), walletFrame, SLOT(backupWallet()));\n+        connect(changePassphraseAction, SIGNAL(triggered()), walletFrame, SLOT(changePassphrase()));\n+        connect(signMessageAction, SIGNAL(triggered()), this, SLOT(gotoSignMessageTab()));\n+        connect(verifyMessageAction, SIGNAL(triggered()), this, SLOT(gotoVerifyMessageTab()));\n+        connect(usedSendingAddressesAction, SIGNAL(triggered()), walletFrame, SLOT(usedSendingAddresses()));\n+        connect(usedReceivingAddressesAction, SIGNAL(triggered()), walletFrame, SLOT(usedReceivingAddresses()));\n+        connect(openAction, SIGNAL(triggered()), this, SLOT(openClicked()));\n+    }\n+#endif\n }\n \n void BitcoinGUI::createMenuBar()\n@@ -308,38 +342,50 @@ void BitcoinGUI::createMenuBar()\n \n     // Configure the menus\n     QMenu *file = appMenuBar->addMenu(tr(\"&File\"));\n-    file->addAction(openAction);\n-    file->addAction(backupWalletAction);\n-    file->addAction(signMessageAction);\n-    file->addAction(verifyMessageAction);\n-    file->addSeparator();\n-    file->addAction(usedSendingAddressesAction);\n-    file->addAction(usedReceivingAddressesAction);\n-    file->addSeparator();\n+    if(walletFrame)\n+    {\n+        file->addAction(openAction);\n+        file->addAction(backupWalletAction);\n+        file->addAction(signMessageAction);\n+        file->addAction(verifyMessageAction);\n+        file->addSeparator();\n+        file->addAction(usedSendingAddressesAction);\n+        file->addAction(usedReceivingAddressesAction);\n+        file->addSeparator();\n+    }\n     file->addAction(quitAction);\n \n     QMenu *settings = appMenuBar->addMenu(tr(\"&Settings\"));\n-    settings->addAction(encryptWalletAction);\n-    settings->addAction(changePassphraseAction);\n-    settings->addSeparator();\n+    if(walletFrame)\n+    {\n+        settings->addAction(encryptWalletAction);\n+        settings->addAction(changePassphraseAction);\n+        settings->addSeparator();\n+    }\n     settings->addAction(optionsAction);\n \n     QMenu *help = appMenuBar->addMenu(tr(\"&Help\"));\n-    help->addAction(openRPCConsoleAction);\n-    help->addSeparator();\n+    if(walletFrame)\n+    {\n+        help->addAction(openRPCConsoleAction);\n+        help->addSeparator();\n+    }\n     help->addAction(aboutAction);\n     help->addAction(aboutQtAction);\n }\n \n void BitcoinGUI::createToolBars()\n {\n-    QToolBar *toolbar = addToolBar(tr(\"Tabs toolbar\"));\n-    toolbar->setToolButtonStyle(Qt::ToolButtonTextBesideIcon);\n-    toolbar->addAction(overviewAction);\n-    toolbar->addAction(sendCoinsAction);\n-    toolbar->addAction(receiveCoinsAction);\n-    toolbar->addAction(historyAction);\n-    overviewAction->setChecked(true);\n+    if(walletFrame)\n+    {\n+        QToolBar *toolbar = addToolBar(tr(\"Tabs toolbar\"));\n+        toolbar->setToolButtonStyle(Qt::ToolButtonTextBesideIcon);\n+        toolbar->addAction(overviewAction);\n+        toolbar->addAction(sendCoinsAction);\n+        toolbar->addAction(receiveCoinsAction);\n+        toolbar->addAction(historyAction);\n+        overviewAction->setChecked(true);\n+    }\n }\n \n void BitcoinGUI::setClientModel(ClientModel *clientModel)\n@@ -362,26 +408,39 @@ void BitcoinGUI::setClientModel(ClientModel *clientModel)\n         connect(clientModel, SIGNAL(message(QString,QString,unsigned int)), this, SLOT(message(QString,QString,unsigned int)));\n \n         rpcConsole->setClientModel(clientModel);\n-        walletFrame->setClientModel(clientModel);\n+#ifdef ENABLE_WALLET\n+        if(walletFrame)\n+        {\n+            walletFrame->setClientModel(clientModel);\n+        }\n+#endif\n     }\n }\n \n+#ifdef ENABLE_WALLET\n bool BitcoinGUI::addWallet(const QString& name, WalletModel *walletModel)\n {\n+    if(!walletFrame)\n+        return false;\n     setWalletActionsEnabled(true);\n     return walletFrame->addWallet(name, walletModel);\n }\n \n bool BitcoinGUI::setCurrentWallet(const QString& name)\n {\n+    if(!walletFrame)\n+        return false;\n     return walletFrame->setCurrentWallet(name);\n }\n \n void BitcoinGUI::removeAllWallets()\n {\n+    if(!walletFrame)\n+        return;\n     setWalletActionsEnabled(false);\n     walletFrame->removeAllWallets();\n }\n+#endif\n \n void BitcoinGUI::setWalletActionsEnabled(bool enabled)\n {\n@@ -489,6 +548,7 @@ void BitcoinGUI::aboutClicked()\n     dlg.exec();\n }\n \n+#ifdef ENABLE_WALLET\n void BitcoinGUI::openClicked()\n {\n     OpenURIDialog dlg(this);\n@@ -531,6 +591,7 @@ void BitcoinGUI::gotoVerifyMessageTab(QString addr)\n {\n     if (walletFrame) walletFrame->gotoVerifyMessageTab(addr);\n }\n+#endif\n \n void BitcoinGUI::setNumConnections(int count)\n {\n@@ -591,7 +652,10 @@ void BitcoinGUI::setNumBlocks(int count, int nTotalBlocks)\n         tooltip = tr(\"Up to date\") + QString(\".<br>\") + tooltip;\n         labelBlocksIcon->setPixmap(QIcon(\":/icons/synced\").pixmap(STATUSBAR_ICONSIZE, STATUSBAR_ICONSIZE));\n \n-        walletFrame->showOutOfSyncWarning(false);\n+#ifdef ENABLE_WALLET\n+        if(walletFrame)\n+            walletFrame->showOutOfSyncWarning(false);\n+#endif\n \n         progressBarLabel->setVisible(false);\n         progressBar->setVisible(false);\n@@ -625,7 +689,10 @@ void BitcoinGUI::setNumBlocks(int count, int nTotalBlocks)\n             syncIconMovie->jumpToNextFrame();\n         prevBlocks = count;\n \n-        walletFrame->showOutOfSyncWarning(true);\n+#ifdef ENABLE_WALLET\n+        if(walletFrame)\n+            walletFrame->showOutOfSyncWarning(true);\n+#endif\n \n         tooltip += QString(\"<br>\");\n         tooltip += tr(\"Last received block was generated %1 ago.\").arg(timeBehindText);\n@@ -738,6 +805,7 @@ void BitcoinGUI::closeEvent(QCloseEvent *event)\n     QMainWindow::closeEvent(event);\n }\n \n+#ifdef ENABLE_WALLET\n void BitcoinGUI::incomingTransaction(const QString& date, int unit, qint64 amount, const QString& type, const QString& address)\n {\n     // On new transaction, make an info balloon\n@@ -751,6 +819,7 @@ void BitcoinGUI::incomingTransaction(const QString& date, int unit, qint64 amoun\n                   .arg(type)\n                   .arg(address), CClientUIInterface::MSG_INFORMATION);\n }\n+#endif\n \n void BitcoinGUI::dragEnterEvent(QDragEnterEvent *event)\n {\n@@ -783,10 +852,11 @@ bool BitcoinGUI::eventFilter(QObject *object, QEvent *event)\n     return QMainWindow::eventFilter(object, event);\n }\n \n+#ifdef ENABLE_WALLET\n bool BitcoinGUI::handlePaymentRequest(const SendCoinsRecipient& recipient)\n {\n     // URI has to be valid\n-    if (walletFrame->handlePaymentRequest(recipient))\n+    if (walletFrame && walletFrame->handlePaymentRequest(recipient))\n     {\n         showNormalIfMinimized();\n         gotoSendCoinsPage();\n@@ -824,6 +894,7 @@ void BitcoinGUI::setEncryptionStatus(int status)\n         break;\n     }\n }\n+#endif\n \n void BitcoinGUI::showNormalIfMinimized(bool fToggleHidden)\n {"
      },
      {
        "sha": "1038e2739c71d358edfa6a31a4deff965133950f",
        "filename": "src/qt/bitcoingui.h",
        "status": "modified",
        "additions": 18,
        "deletions": 8,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/061aff4c46babdc30bb9f52f874a24edd8d14d82/src/qt/bitcoingui.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/061aff4c46babdc30bb9f52f874a24edd8d14d82/src/qt/bitcoingui.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.h?ref=061aff4c46babdc30bb9f52f874a24edd8d14d82",
        "patch": "@@ -5,6 +5,10 @@\n #ifndef BITCOINGUI_H\n #define BITCOINGUI_H\n \n+#if defined(HAVE_CONFIG_H)\n+#include \"bitcoin-config.h\"\n+#endif\n+\n #include <QMainWindow>\n #include <QMap>\n #include <QSystemTrayIcon>\n@@ -43,14 +47,15 @@ class BitcoinGUI : public QMainWindow\n     */\n     void setClientModel(ClientModel *clientModel);\n \n+#ifdef ENABLE_WALLET\n     /** Set the wallet model.\n         The wallet model represents a bitcoin wallet, and offers access to the list of transactions, address book and sending\n         functionality.\n     */\n     bool addWallet(const QString& name, WalletModel *walletModel);\n     bool setCurrentWallet(const QString& name);\n-\n     void removeAllWallets();\n+#endif\n \n protected:\n     void changeEvent(QEvent *e);\n@@ -125,11 +130,6 @@ public slots:\n     void setNumConnections(int count);\n     /** Set number of blocks shown in the UI */\n     void setNumBlocks(int count, int nTotalBlocks);\n-    /** Set the encryption status as shown in the UI.\n-       @param[in] status            current encryption status\n-       @see WalletModel::EncryptionStatus\n-    */\n-    void setEncryptionStatus(int status);\n \n     /** Notify the user of an event from the core network or transaction handling code.\n        @param[in] title     the message box / notification title\n@@ -140,12 +140,21 @@ public slots:\n     */\n     void message(const QString &title, const QString &message, unsigned int style, bool *ret = NULL);\n \n+#ifdef ENABLE_WALLET\n+    /** Set the encryption status as shown in the UI.\n+       @param[in] status            current encryption status\n+       @see WalletModel::EncryptionStatus\n+    */\n+    void setEncryptionStatus(int status);\n+\n     bool handlePaymentRequest(const SendCoinsRecipient& recipient);\n \n     /** Show incoming transaction notification for new transactions. */\n     void incomingTransaction(const QString& date, int unit, qint64 amount, const QString& type, const QString& address);\n+#endif\n \n private slots:\n+#ifdef ENABLE_WALLET\n     /** Switch to overview (home) page */\n     void gotoOverviewPage();\n     /** Switch to history (transactions) page */\n@@ -160,6 +169,9 @@ private slots:\n     /** Show Sign/Verify Message dialog and switch to verify message tab */\n     void gotoVerifyMessageTab(QString addr = \"\");\n \n+    /** Show open dialog */\n+    void openClicked();\n+#endif\n     /** Show configuration dialog */\n     void optionsClicked();\n     /** Show about dialog */\n@@ -168,8 +180,6 @@ private slots:\n     /** Handle tray icon clicked */\n     void trayIconActivated(QSystemTrayIcon::ActivationReason reason);\n #endif\n-    /** Show open dialog */\n-    void openClicked();\n \n     /** Show window if hidden, unminimize when minimized, rise when obscured or show if hidden and fToggleHidden is true */\n     void showNormalIfMinimized(bool fToggleHidden = false);"
      },
      {
        "sha": "1133c457b3a4409b29cff4574b19336a286f24fe",
        "filename": "src/qt/optionsmodel.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 1,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/061aff4c46babdc30bb9f52f874a24edd8d14d82/src/qt/optionsmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/061aff4c46babdc30bb9f52f874a24edd8d14d82/src/qt/optionsmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsmodel.cpp?ref=061aff4c46babdc30bb9f52f874a24edd8d14d82",
        "patch": "@@ -14,8 +14,10 @@\n #include \"init.h\"\n #include \"main.h\"\n #include \"net.h\"\n+#ifdef ENABLE_WALLET\n #include \"wallet.h\"\n #include \"walletdb.h\"\n+#endif\n \n #include <QSettings>\n #include <QStringList>\n@@ -67,8 +69,10 @@ void OptionsModel::Init()\n     // by command-line and show this in the UI.\n \n     // Main\n+#ifdef ENABLE_WALLET\n     if (!settings.contains(\"nTransactionFee\"))\n         settings.setValue(\"nTransactionFee\", 0);\n+#endif\n \n     if (!settings.contains(\"nDatabaseCache\"))\n         settings.setValue(\"nDatabaseCache\", 25);\n@@ -137,6 +141,7 @@ void OptionsModel::Upgrade()\n \n     settings.setValue(\"bImportFinished\", true);\n \n+#ifdef ENABLE_WALLET\n     // Move settings from old wallet.dat (if any):\n     CWalletDB walletdb(strWalletFile);\n \n@@ -181,6 +186,7 @@ void OptionsModel::Upgrade()\n             walletdb.EraseSetting(\"addrProxy\");\n         }\n     }\n+#endif\n \n     Init();\n }\n@@ -227,6 +233,7 @@ QVariant OptionsModel::data(const QModelIndex & index, int role) const\n         case ProxySocksVersion:\n             return settings.value(\"nSocksVersion\", 5);\n \n+#ifdef ENABLE_WALLET\n         case Fee:\n             // Attention: Init() is called before nTransactionFee is set in AppInit2()!\n             // To ensure we can change the fee on-the-fly update our QSetting when\n@@ -236,6 +243,7 @@ QVariant OptionsModel::data(const QModelIndex & index, int role) const\n             // Todo: Consider to revert back to use just nTransactionFee here, if we don't want\n             // -paytxfee to update our QSettings!\n             return settings.value(\"nTransactionFee\");\n+#endif\n         case DisplayUnit:\n             return nDisplayUnit;\n         case DisplayAddresses:\n@@ -318,13 +326,14 @@ bool OptionsModel::setData(const QModelIndex & index, const QVariant & value, in\n             }\n         }\n         break;\n-\n+#ifdef ENABLE_WALLET\n         case Fee: // core option - can be changed on-the-fly\n             // Todo: Add is valid check  and warn via message, if not\n             nTransactionFee = value.toLongLong();\n             settings.setValue(\"nTransactionFee\", (qint64)nTransactionFee);\n             emit transactionFeeChanged(nTransactionFee);\n             break;\n+#endif\n         case DisplayUnit:\n             nDisplayUnit = value.toInt();\n             settings.setValue(\"nDisplayUnit\", nDisplayUnit);"
      },
      {
        "sha": "da54ef376b24eb81260ce105694eddfb83953643",
        "filename": "src/qt/test/Makefile.am",
        "status": "modified",
        "additions": 14,
        "deletions": 3,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/061aff4c46babdc30bb9f52f874a24edd8d14d82/src/qt/test/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/061aff4c46babdc30bb9f52f874a24edd8d14d82/src/qt/test/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/Makefile.am?ref=061aff4c46babdc30bb9f52f874a24edd8d14d82",
        "patch": "@@ -8,16 +8,27 @@ AM_CPPFLAGS += -I$(top_srcdir)/src \\\n bin_PROGRAMS = test_bitcoin-qt\n TESTS = test_bitcoin-qt\n \n-TEST_QT_MOC_CPP = moc_uritests.cpp moc_paymentservertests.cpp\n+TEST_QT_MOC_CPP = moc_uritests.cpp\n+\n+if ENABLE_WALLET\n+TEST_QT_MOC_CPP += moc_paymentservertests.cpp\n+endif\n \n TEST_QT_H = uritests.h paymentservertests.h paymentrequestdata.h\n \n BUILT_SOURCES = $(TEST_QT_MOC_CPP)\n \n test_bitcoin_qt_CPPFLAGS = $(AM_CPPFLAGS) $(QT_INCLUDES) $(QT_TEST_INCLUDES)\n-test_bitcoin_qt_SOURCES = test_main.cpp uritests.cpp paymentservertests.cpp $(TEST_QT_H)\n+test_bitcoin_qt_SOURCES = test_main.cpp uritests.cpp $(TEST_QT_H)\n+if ENABLE_WALLET\n+test_bitcoin_qt_SOURCES += paymentservertests.cpp\n+endif\n nodist_test_bitcoin_qt_SOURCES = $(TEST_QT_MOC_CPP)\n-test_bitcoin_qt_LDADD = $(LIBBITCOINQT) $(LIBBITCOIN_SERVER) $(LIBBITCOIN_WALLET) $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBLEVELDB) \\\n+test_bitcoin_qt_LDADD = $(LIBBITCOINQT) $(LIBBITCOIN_SERVER)\n+if ENABLE_WALLET\n+test_bitcoin_qt_LDADD += $(LIBBITCOIN_WALLET)\n+endif\n+test_bitcoin_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBLEVELDB) \\\n   $(LIBMEMENV) $(BOOST_LIBS) $(QT_DBUS_LIBS) $(QT_TEST_LIBS) $(QT_LIBS) \\\n   $(QR_LIBS) $(PROTOBUF_LIBS) $(BDB_LIBS)\n "
      },
      {
        "sha": "a2adb0032733fcab0f9d3406b917a5c147355cdd",
        "filename": "src/qt/test/test_main.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 1,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/061aff4c46babdc30bb9f52f874a24edd8d14d82/src/qt/test/test_main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/061aff4c46babdc30bb9f52f874a24edd8d14d82/src/qt/test/test_main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/test_main.cpp?ref=061aff4c46babdc30bb9f52f874a24edd8d14d82",
        "patch": "@@ -1,5 +1,11 @@\n #include \"bitcoin-config.h\"\n+#if defined(HAVE_CONFIG_H)\n+#include \"bitcoin-config.h\"\n+#endif\n+\n+#ifdef ENABLE_WALLET\n #include \"paymentservertests.h\"\n+#endif\n #include \"uritests.h\"\n \n #include <QCoreApplication>\n@@ -27,10 +33,11 @@ int main(int argc, char *argv[])\n     URITests test1;\n     if (QTest::qExec(&test1) != 0)\n         fInvalid = true;\n-\n+#ifdef ENABLE_WALLET\n     PaymentServerTests test2;\n     if (QTest::qExec(&test2) != 0)\n         fInvalid = true;\n+#endif\n \n     return fInvalid;\n }"
      }
    ]
  },
  {
    "sha": "5a407bd095218b38686f965ebd58c7c485a9242d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1YTQwN2JkMDk1MjE4YjM4Njg2Zjk2NWViZDU4YzdjNDg1YTkyNDJk",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-11T14:22:07Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-11T14:23:15Z"
      },
      "message": "makefile.am: split long lines into one file per line\n\nThis makes it easier to read diffs.\nCosmetic change to build system only.",
      "tree": {
        "sha": "977c09f49ac2b06b5cb4b9c09be129e3f35b4351",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/977c09f49ac2b06b5cb4b9c09be129e3f35b4351"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5a407bd095218b38686f965ebd58c7c485a9242d",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJS0VPWAAoJEHSBCwEjRsmm1+oIAIDLQgSE/sAeNjc5ZqMvGAhE\nXnPYGqMu4R9c0o9uwsI/wgTkuVc6smDzL2zUMce6E9qtPJuAaff5HEjOjBBkeGwW\nMalxQxPFn9BUK4mO4EGz+my03ph/mfFL10U4Y580em/N+uzhXHCl/Vrwnf2g8Sol\nHDqbTTV04/NFsg6EiEXRSm5zBWZXJAOksZMCiCj/6YJLsDPKLz0hFQIqDgX68JuF\nRSoH1TmPw+riMXmJ6wQ1TXBO1Zz+2X1KBrNk1muBcpPKvoRXRzxuV3kMtfMonDg/\ntf7xsTywMfSqQUrbSMtfWATQDjBY2ATHYZPOcx215a3eIveJSluUYcy5Wbjh67c=\n=HDA6\n-----END PGP SIGNATURE-----",
        "payload": "tree 977c09f49ac2b06b5cb4b9c09be129e3f35b4351\nparent 061aff4c46babdc30bb9f52f874a24edd8d14d82\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1389450127 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1389450195 +0100\n\nmakefile.am: split long lines into one file per line\n\nThis makes it easier to read diffs.\nCosmetic change to build system only.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5a407bd095218b38686f965ebd58c7c485a9242d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5a407bd095218b38686f965ebd58c7c485a9242d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5a407bd095218b38686f965ebd58c7c485a9242d/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "061aff4c46babdc30bb9f52f874a24edd8d14d82",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/061aff4c46babdc30bb9f52f874a24edd8d14d82",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/061aff4c46babdc30bb9f52f874a24edd8d14d82"
      }
    ],
    "stats": {
      "total": 324,
      "additions": 250,
      "deletions": 74
    },
    "files": [
      {
        "sha": "9917be2481b3f798f1f1951e6da36f96afe63c0f",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 65,
        "deletions": 14,
        "changes": 79,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5a407bd095218b38686f965ebd58c7c485a9242d/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5a407bd095218b38686f965ebd58c7c485a9242d/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=5a407bd095218b38686f965ebd58c7c485a9242d",
        "patch": "@@ -3,7 +3,10 @@ include Makefile.include\n AM_CPPFLAGS += -I$(top_srcdir)/src/leveldb/helpers/memenv \\\n   -I$(builddir)\n \n-noinst_LIBRARIES = libbitcoin_server.a libbitcoin_common.a libbitcoin_cli.a\n+noinst_LIBRARIES = \\\n+  libbitcoin_server.a \\\n+  libbitcoin_common.a \\\n+  libbitcoin_cli.a\n if ENABLE_WALLET\n noinst_LIBRARIES += libbitcoin_wallet.a\n endif\n@@ -14,20 +17,60 @@ SUBDIRS = . $(BUILD_QT) $(BUILD_TEST)\n DIST_SUBDIRS = . qt test\n .PHONY: FORCE\n # bitcoin core #\n-BITCOIN_CORE_H = addrman.h alert.h allocators.h base58.h bignum.h \\\n+BITCOIN_CORE_H = \\\n+  addrman.h \\\n+  alert.h \\\n+  allocators.h \\\n+  base58.h bignum.h \\\n+  bloom.h \\\n+  chainparams.h \\\n+  checkpoints.h \\\n+  checkqueue.h \\\n+  clientversion.h \\\n+  coincontrol.h \\\n+  coins.h \\\n+  compat.h \\\n+  core.h \\\n+  crypter.h \\\n+  db.h \\\n+  hash.h \\\n+  init.h \\\n+  key.h \\\n+  keystore.h \\\n+  leveldbwrapper.h \\\n+  limitedmap.h \\\n+  main.h \\\n+  miner.h \\\n+  mruset.h \\\n+  netbase.h \\\n+  net.h \\\n+  noui.h \\\n+  protocol.h \\\n   rpcclient.h \\\n   rpcprotocol.h \\\n   rpcserver.h \\\n-  bloom.h chainparams.h checkpoints.h checkqueue.h \\\n-  clientversion.h coincontrol.h compat.h core.h coins.h crypter.h db.h hash.h init.h \\\n-  key.h keystore.h leveldbwrapper.h limitedmap.h main.h miner.h mruset.h \\\n-  netbase.h net.h noui.h protocol.h script.h serialize.h sync.h threadsafety.h \\\n-  txdb.h txmempool.h ui_interface.h uint256.h util.h version.h walletdb.h wallet.h\n-\n-JSON_H = json/json_spirit.h json/json_spirit_error_position.h \\\n-  json/json_spirit_reader.h json/json_spirit_reader_template.h \\\n-  json/json_spirit_stream_reader.h json/json_spirit_utils.h \\\n-  json/json_spirit_value.h json/json_spirit_writer.h \\\n+  script.h \\\n+  serialize.h \\\n+  sync.h \\\n+  threadsafety.h \\\n+  txdb.h \\\n+  txmempool.h \\\n+  ui_interface.h \\\n+  uint256.h \\\n+  util.h \\\n+  version.h \\\n+  walletdb.h \\\n+  wallet.h\n+\n+JSON_H = \\\n+  json/json_spirit.h \\\n+  json/json_spirit_error_position.h \\\n+  json/json_spirit_reader.h \\\n+  json/json_spirit_reader_template.h \\\n+  json/json_spirit_stream_reader.h \\\n+  json/json_spirit_utils.h \\\n+  json/json_spirit_value.h \\\n+  json/json_spirit_writer.h \\\n   json/json_spirit_writer_template.h\n \n obj/build.h: FORCE\n@@ -93,7 +136,12 @@ nodist_libbitcoin_common_a_SOURCES = $(top_srcdir)/src/obj/build.h\n #\n \n # bitcoind binary #\n-bitcoind_LDADD = libbitcoin_server.a libbitcoin_cli.a libbitcoin_common.a leveldb/libleveldb.a leveldb/libmemenv.a\n+bitcoind_LDADD = \\\n+  libbitcoin_server.a \\\n+  libbitcoin_cli.a \\\n+  libbitcoin_common.a \\\n+  leveldb/libleveldb.a \\\n+  leveldb/libmemenv.a\n if ENABLE_WALLET\n bitcoind_LDADD += libbitcoin_wallet.a\n endif\n@@ -108,7 +156,10 @@ AM_CPPFLAGS += $(BDB_CPPFLAGS)\n bitcoind_LDADD += $(BOOST_LIBS) $(BDB_LIBS)\n \n # bitcoin-cli binary #\n-bitcoin_cli_LDADD = libbitcoin_cli.a libbitcoin_common.a $(BOOST_LIBS)\n+bitcoin_cli_LDADD = \\\n+  libbitcoin_cli.a \\\n+  libbitcoin_common.a \\\n+  $(BOOST_LIBS)\n bitcoin_cli_SOURCES = bitcoin-cli.cpp\n #\n "
      },
      {
        "sha": "ac11625c861d34f138bb5aa90fda7e97f13956b8",
        "filename": "src/qt/Makefile.am",
        "status": "modified",
        "additions": 135,
        "deletions": 44,
        "changes": 179,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5a407bd095218b38686f965ebd58c7c485a9242d/src/qt/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5a407bd095218b38686f965ebd58c7c485a9242d/src/qt/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/Makefile.am?ref=5a407bd095218b38686f965ebd58c7c485a9242d",
        "patch": "@@ -74,37 +74,68 @@ QT_TS = \\\n   locale/bitcoin_zh_CN.ts \\\n   locale/bitcoin_zh_TW.ts\n \n-QT_FORMS_UI = forms/aboutdialog.ui forms/addressbookpage.ui \\\n+QT_FORMS_UI = \\\n+  forms/aboutdialog.ui \\\n+  forms/addressbookpage.ui \\\n   forms/askpassphrasedialog.ui \\\n   forms/coincontroldialog.ui \\\n   forms/editaddressdialog.ui \\\n   forms/intro.ui \\\n   forms/openuridialog.ui \\\n-  forms/optionsdialog.ui forms/overviewpage.ui forms/receiverequestdialog.ui \\\n+  forms/optionsdialog.ui \\\n+  forms/overviewpage.ui \\\n+  forms/receiverequestdialog.ui \\\n   forms/receivecoinsdialog.ui \\\n-  forms/rpcconsole.ui forms/sendcoinsdialog.ui forms/sendcoinsentry.ui \\\n-  forms/signverifymessagedialog.ui forms/transactiondescdialog.ui\n+  forms/rpcconsole.ui \\\n+  forms/sendcoinsdialog.ui \\\n+  forms/sendcoinsentry.ui \\\n+  forms/signverifymessagedialog.ui \\\n+  forms/transactiondescdialog.ui\n \n-QT_MOC_CPP = moc_aboutdialog.cpp moc_addressbookpage.cpp \\\n-  moc_addresstablemodel.cpp moc_askpassphrasedialog.cpp \\\n-  moc_bitcoinaddressvalidator.cpp moc_bitcoinamountfield.cpp \\\n-  moc_bitcoingui.cpp moc_bitcoinunits.cpp moc_clientmodel.cpp \\\n+QT_MOC_CPP = \\\n+  moc_aboutdialog.cpp \\\n+  moc_addressbookpage.cpp \\\n+  moc_addresstablemodel.cpp \\\n+  moc_askpassphrasedialog.cpp \\\n+  moc_bitcoinaddressvalidator.cpp \\\n+  moc_bitcoinamountfield.cpp \\\n+  moc_bitcoingui.cpp \\\n+  moc_bitcoinunits.cpp \\\n+  moc_clientmodel.cpp \\\n   moc_coincontroldialog.cpp \\\n   moc_coincontroltreewidget.cpp \\\n-  moc_csvmodelwriter.cpp moc_editaddressdialog.cpp moc_guiutil.cpp \\\n-  moc_intro.cpp moc_macdockiconhandler.cpp moc_macnotificationhandler.cpp \\\n-  moc_monitoreddatamapper.cpp moc_notificator.cpp \\\n+  moc_csvmodelwriter.cpp \\\n+  moc_editaddressdialog.cpp \\\n+  moc_guiutil.cpp \\\n+  moc_intro.cpp \\\n+  moc_macdockiconhandler.cpp \\\n+  moc_macnotificationhandler.cpp \\\n+  moc_monitoreddatamapper.cpp \\\n+  moc_notificator.cpp \\\n   moc_openuridialog.cpp \\\n   moc_optionsdialog.cpp \\\n-  moc_optionsmodel.cpp moc_overviewpage.cpp moc_paymentserver.cpp \\\n-  moc_receiverequestdialog.cpp moc_qvalidatedlineedit.cpp moc_qvaluecombobox.cpp \\\n+  moc_optionsmodel.cpp \\\n+  moc_overviewpage.cpp \\\n+  moc_paymentserver.cpp \\\n+  moc_receiverequestdialog.cpp \\\n+  moc_qvalidatedlineedit.cpp \\\n+  moc_qvaluecombobox.cpp \\\n   moc_receivecoinsdialog.cpp \\\n   moc_recentrequeststablemodel.cpp \\\n-  moc_rpcconsole.cpp moc_sendcoinsdialog.cpp moc_sendcoinsentry.cpp \\\n-  moc_signverifymessagedialog.cpp moc_splashscreen.cpp moc_trafficgraphwidget.cpp moc_transactiondesc.cpp \\\n-  moc_transactiondescdialog.cpp moc_transactionfilterproxy.cpp \\\n-  moc_transactiontablemodel.cpp moc_transactionview.cpp moc_walletframe.cpp \\\n-  moc_walletmodel.cpp moc_walletview.cpp\n+  moc_rpcconsole.cpp \\\n+  moc_sendcoinsdialog.cpp \\\n+  moc_sendcoinsentry.cpp \\\n+  moc_signverifymessagedialog.cpp \\\n+  moc_splashscreen.cpp \\\n+  moc_trafficgraphwidget.cpp \\\n+  moc_transactiondesc.cpp \\\n+  moc_transactiondescdialog.cpp \\\n+  moc_transactionfilterproxy.cpp \\\n+  moc_transactiontablemodel.cpp \\\n+  moc_transactionview.cpp \\\n+  moc_walletframe.cpp \\\n+  moc_walletmodel.cpp \\\n+  moc_walletview.cpp\n \n BITCOIN_MM = macdockiconhandler.mm macnotificationhandler.mm\n \n@@ -117,37 +148,97 @@ PROTOBUF_CC = paymentrequest.pb.cc\n PROTOBUF_H = paymentrequest.pb.h\n PROTOBUF_PROTO = paymentrequest.proto\n \n-BITCOIN_QT_H  = aboutdialog.h addressbookpage.h addresstablemodel.h \\\n-  askpassphrasedialog.h bitcoinaddressvalidator.h bitcoinamountfield.h \\\n-  bitcoingui.h bitcoinunits.h clientmodel.h coincontroldialog.h coincontroltreewidget.h csvmodelwriter.h \\\n-  editaddressdialog.h guiconstants.h guiutil.h intro.h macdockiconhandler.h \\\n-  macnotificationhandler.h monitoreddatamapper.h notificator.h \\\n+BITCOIN_QT_H = \\\n+  aboutdialog.h \\\n+  addressbookpage.h \\\n+  addresstablemodel.h \\\n+  askpassphrasedialog.h \\\n+  bitcoinaddressvalidator.h \\\n+  bitcoinamountfield.h \\\n+  bitcoingui.h \\\n+  bitcoinunits.h \\\n+  clientmodel.h \\\n+  coincontroldialog.h \\\n+  coincontroltreewidget.h \\\n+  csvmodelwriter.h \\\n+  editaddressdialog.h \\\n+  guiconstants.h \\\n+  guiutil.h \\\n+  intro.h \\\n+  macdockiconhandler.h \\\n+  macnotificationhandler.h \\\n+  monitoreddatamapper.h \\\n+  notificator.h \\\n   openuridialog.h \\\n   optionsdialog.h \\\n-  optionsmodel.h overviewpage.h paymentrequestplus.h paymentserver.h \\\n+  optionsmodel.h \\\n+  overviewpage.h \\\n+  paymentrequestplus.h \\\n+  paymentserver.h \\\n   receivecoinsdialog.h \\\n   recentrequeststablemodel.h \\\n-  receiverequestdialog.h qvalidatedlineedit.h qvaluecombobox.h rpcconsole.h \\\n-  sendcoinsdialog.h sendcoinsentry.h signverifymessagedialog.h splashscreen.h \\\n-  trafficgraphwidget.h transactiondescdialog.h transactiondesc.h transactionfilterproxy.h \\\n-  transactionrecord.h transactiontablemodel.h transactionview.h walletframe.h \\\n-  walletmodel.h walletmodeltransaction.h walletview.h\n+  receiverequestdialog.h \\\n+  qvalidatedlineedit.h \\\n+  qvaluecombobox.h \\\n+  rpcconsole.h \\\n+  sendcoinsdialog.h \\\n+  sendcoinsentry.h \\\n+  signverifymessagedialog.h \\\n+  splashscreen.h \\\n+  trafficgraphwidget.h \\\n+  transactiondescdialog.h \\\n+  transactiondesc.h \\\n+  transactionfilterproxy.h \\\n+  transactionrecord.h \\\n+  transactiontablemodel.h \\\n+  transactionview.h \\\n+  walletframe.h \\\n+  walletmodel.h \\\n+  walletmodeltransaction.h \\\n+  walletview.h\n \n-RES_ICONS = res/icons/bitcoin.png res/icons/address-book.png \\\n-  res/icons/quit.png res/icons/send.png res/icons/toolbar.png \\\n-  res/icons/connect0_16.png res/icons/connect1_16.png \\\n-  res/icons/connect2_16.png res/icons/connect3_16.png \\\n-  res/icons/connect4_16.png res/icons/transaction0.png \\\n-  res/icons/transaction2.png res/icons/clock1.png res/icons/clock2.png \\\n-  res/icons/clock3.png res/icons/clock4.png res/icons/clock5.png \\\n-  res/icons/configure.png res/icons/receive.png res/icons/editpaste.png \\\n-  res/icons/editcopy.png res/icons/add.png res/icons/bitcoin_testnet.png \\\n-  res/icons/toolbar_testnet.png res/icons/edit.png res/icons/history.png \\\n-  res/icons/overview.png res/icons/export.png res/icons/synced.png \\\n-  res/icons/remove.png res/icons/tx_mined.png res/icons/tx_input.png \\\n-  res/icons/tx_output.png res/icons/tx_inout.png res/icons/lock_closed.png \\\n-  res/icons/lock_open.png res/icons/key.png res/icons/filesave.png \\\n-  res/icons/qrcode.png res/icons/debugwindow.png res/icons/bitcoin.ico \\\n+RES_ICONS = \\\n+  res/icons/bitcoin.png \\\n+  res/icons/address-book.png \\\n+  res/icons/quit.png \\\n+  res/icons/send.png \\\n+  res/icons/toolbar.png \\\n+  res/icons/connect0_16.png \\\n+  res/icons/connect1_16.png \\\n+  res/icons/connect2_16.png \\\n+  res/icons/connect3_16.png \\\n+  res/icons/connect4_16.png \\\n+  res/icons/transaction0.png \\\n+  res/icons/transaction2.png \\\n+  res/icons/clock1.png \\\n+  res/icons/clock2.png \\\n+  res/icons/clock3.png \\\n+  res/icons/clock4.png \\\n+  res/icons/clock5.png \\\n+  res/icons/configure.png \\\n+  res/icons/receive.png \\\n+  res/icons/editpaste.png \\\n+  res/icons/editcopy.png \\\n+  res/icons/add.png \\\n+  res/icons/bitcoin_testnet.png \\\n+  res/icons/toolbar_testnet.png \\\n+  res/icons/edit.png \\\n+  res/icons/history.png \\\n+  res/icons/overview.png \\\n+  res/icons/export.png \\\n+  res/icons/synced.png \\\n+  res/icons/remove.png \\\n+  res/icons/tx_mined.png \\\n+  res/icons/tx_input.png \\\n+  res/icons/tx_output.png \\\n+  res/icons/tx_inout.png \\\n+  res/icons/lock_closed.png \\\n+  res/icons/lock_open.png \\\n+  res/icons/key.png \\\n+  res/icons/filesave.png \\\n+  res/icons/qrcode.png \\\n+  res/icons/debugwindow.png \\\n+  res/icons/bitcoin.ico \\\n   res/icons/bitcoin_testnet.ico\n \n BITCOIN_QT_CPP = \\"
      },
      {
        "sha": "9c3f0417ac4cbd6d99afcbcaa64b5d99b397ca16",
        "filename": "src/qt/test/Makefile.am",
        "status": "modified",
        "additions": 10,
        "deletions": 3,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5a407bd095218b38686f965ebd58c7c485a9242d/src/qt/test/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5a407bd095218b38686f965ebd58c7c485a9242d/src/qt/test/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/Makefile.am?ref=5a407bd095218b38686f965ebd58c7c485a9242d",
        "patch": "@@ -14,14 +14,21 @@ if ENABLE_WALLET\n TEST_QT_MOC_CPP += moc_paymentservertests.cpp\n endif\n \n-TEST_QT_H = uritests.h paymentservertests.h paymentrequestdata.h\n+TEST_QT_H = \\\n+  uritests.h \\\n+  paymentservertests.h \\\n+  paymentrequestdata.h\n \n BUILT_SOURCES = $(TEST_QT_MOC_CPP)\n \n test_bitcoin_qt_CPPFLAGS = $(AM_CPPFLAGS) $(QT_INCLUDES) $(QT_TEST_INCLUDES)\n-test_bitcoin_qt_SOURCES = test_main.cpp uritests.cpp $(TEST_QT_H)\n+test_bitcoin_qt_SOURCES = \\\n+  test_main.cpp \\\n+  uritests.cpp \\\n+  $(TEST_QT_H)\n if ENABLE_WALLET\n-test_bitcoin_qt_SOURCES += paymentservertests.cpp\n+test_bitcoin_qt_SOURCES += \\\n+  paymentservertests.cpp\n endif\n nodist_test_bitcoin_qt_SOURCES = $(TEST_QT_MOC_CPP)\n test_bitcoin_qt_LDADD = $(LIBBITCOINQT) $(LIBBITCOIN_SERVER)"
      },
      {
        "sha": "ff1d22cc24f89a34d044890ed24800ba8641603c",
        "filename": "src/test/Makefile.am",
        "status": "modified",
        "additions": 40,
        "deletions": 13,
        "changes": 53,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5a407bd095218b38686f965ebd58c7c485a9242d/src/test/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5a407bd095218b38686f965ebd58c7c485a9242d/src/test/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/Makefile.am?ref=5a407bd095218b38686f965ebd58c7c485a9242d",
        "patch": "@@ -6,12 +6,15 @@ bin_PROGRAMS = test_bitcoin\n \n TESTS = test_bitcoin\n \n-JSON_TEST_FILES= data/script_valid.json \\\n-  data/base58_keys_valid.json data/sig_canonical.json \\\n+JSON_TEST_FILES = \\\n+  data/script_valid.json \\\n+  data/base58_keys_valid.json \\\n+  data/sig_canonical.json \\\n   data/sig_noncanonical.json \\\n   data/base58_encode_decode.json \\\n   data/base58_keys_invalid.json \\\n-  data/script_invalid.json data/tx_invalid.json \\\n+  data/script_invalid.json \\\n+  data/tx_invalid.json \\\n   data/tx_valid.json\n \n RAW_TEST_FILES = data/alertTests.raw\n@@ -27,18 +30,42 @@ test_bitcoin_LDADD += $(LIBBITCOIN_WALLET)\n endif\n test_bitcoin_LDADD += $(BDB_LIBS)\n \n-test_bitcoin_SOURCES = alert_tests.cpp \\\n-  allocator_tests.cpp base32_tests.cpp base58_tests.cpp base64_tests.cpp \\\n-  bignum_tests.cpp bloom_tests.cpp canonical_tests.cpp checkblock_tests.cpp \\\n-  Checkpoints_tests.cpp compress_tests.cpp DoS_tests.cpp getarg_tests.cpp \\\n-  key_tests.cpp miner_tests.cpp mruset_tests.cpp multisig_tests.cpp \\\n-  netbase_tests.cpp pmt_tests.cpp rpc_tests.cpp script_P2SH_tests.cpp \\\n-  script_tests.cpp serialize_tests.cpp sigopcount_tests.cpp test_bitcoin.cpp \\\n-  transaction_tests.cpp uint256_tests.cpp util_tests.cpp \\\n-  sighash_tests.cpp $(JSON_TEST_FILES) $(RAW_TEST_FILES)\n+test_bitcoin_SOURCES = \\\n+  alert_tests.cpp \\\n+  allocator_tests.cpp \\\n+  base32_tests.cpp \\\n+  base58_tests.cpp \\\n+  base64_tests.cpp \\\n+  bignum_tests.cpp \\\n+  bloom_tests.cpp canonical_tests.cpp \\\n+  checkblock_tests.cpp \\\n+  Checkpoints_tests.cpp \\\n+  compress_tests.cpp \\\n+  DoS_tests.cpp \\\n+  getarg_tests.cpp \\\n+  key_tests.cpp \\\n+  miner_tests.cpp \\\n+  mruset_tests.cpp \\\n+  multisig_tests.cpp \\\n+  netbase_tests.cpp \\\n+  pmt_tests.cpp \\\n+  rpc_tests.cpp \\\n+  script_P2SH_tests.cpp \\\n+  script_tests.cpp \\\n+  serialize_tests.cpp \\\n+  sigopcount_tests.cpp \\\n+  test_bitcoin.cpp \\\n+  transaction_tests.cpp \\\n+  uint256_tests.cpp \\\n+  util_tests.cpp \\\n+  sighash_tests.cpp \\\n+  $(JSON_TEST_FILES) $(RAW_TEST_FILES)\n \n if ENABLE_WALLET\n-test_bitcoin_SOURCES += accounting_tests.cpp wallet_tests.cpp rpc_wallet_tests.cpp\n+test_bitcoin_SOURCES += \\\n+   accounting_tests.cpp \\\n+   wallet_tests.cpp \\\n+   rpc_wallet_tests.cpp\n endif\n \n nodist_test_bitcoin_SOURCES = $(BUILT_SOURCES)"
      }
    ]
  },
  {
    "sha": "9b146cd3caf343d0e8975b6e93f64dc9fd8c0b28",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5YjE0NmNkM2NhZjM0M2QwZTg5NzViNmU5M2Y2NGRjOWZkOGMwYjI4",
    "commit": {
      "author": {
        "name": "Cozz Lovan",
        "email": "cozzlovan@yahoo.com",
        "date": "2014-01-10T22:36:41Z"
      },
      "committer": {
        "name": "Cozz Lovan",
        "email": "cozzlovan@yahoo.com",
        "date": "2014-01-11T15:30:14Z"
      },
      "message": "GUI: Fix design in overview page",
      "tree": {
        "sha": "2fa99bb8119c4386684bd270152c79fda5220ad1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2fa99bb8119c4386684bd270152c79fda5220ad1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9b146cd3caf343d0e8975b6e93f64dc9fd8c0b28",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9b146cd3caf343d0e8975b6e93f64dc9fd8c0b28",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9b146cd3caf343d0e8975b6e93f64dc9fd8c0b28",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9b146cd3caf343d0e8975b6e93f64dc9fd8c0b28/comments",
    "author": {
      "login": "cozz",
      "id": 2814559,
      "node_id": "MDQ6VXNlcjI4MTQ1NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2814559?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cozz",
      "html_url": "https://github.com/cozz",
      "followers_url": "https://api.github.com/users/cozz/followers",
      "following_url": "https://api.github.com/users/cozz/following{/other_user}",
      "gists_url": "https://api.github.com/users/cozz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cozz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cozz/subscriptions",
      "organizations_url": "https://api.github.com/users/cozz/orgs",
      "repos_url": "https://api.github.com/users/cozz/repos",
      "events_url": "https://api.github.com/users/cozz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cozz/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "cozz",
      "id": 2814559,
      "node_id": "MDQ6VXNlcjI4MTQ1NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2814559?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cozz",
      "html_url": "https://github.com/cozz",
      "followers_url": "https://api.github.com/users/cozz/followers",
      "following_url": "https://api.github.com/users/cozz/following{/other_user}",
      "gists_url": "https://api.github.com/users/cozz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cozz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cozz/subscriptions",
      "organizations_url": "https://api.github.com/users/cozz/orgs",
      "repos_url": "https://api.github.com/users/cozz/repos",
      "events_url": "https://api.github.com/users/cozz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cozz/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "62e9d774966c9f4344f0356c59ddadcc5ff17212",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/62e9d774966c9f4344f0356c59ddadcc5ff17212",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/62e9d774966c9f4344f0356c59ddadcc5ff17212"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 17,
      "deletions": 0
    },
    "files": [
      {
        "sha": "d1ca9694318252040e909eb15c38c4eb3b0cdef3",
        "filename": "src/qt/forms/overviewpage.ui",
        "status": "modified",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9b146cd3caf343d0e8975b6e93f64dc9fd8c0b28/src/qt/forms/overviewpage.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9b146cd3caf343d0e8975b6e93f64dc9fd8c0b28/src/qt/forms/overviewpage.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/overviewpage.ui?ref=9b146cd3caf343d0e8975b6e93f64dc9fd8c0b28",
        "patch": "@@ -90,6 +90,8 @@\n            </layout>\n           </item>\n           <item>\n+          <layout class=\"QHBoxLayout\" name=\"horizontalLayout_3\">\n+           <item>\n            <layout class=\"QFormLayout\" name=\"formLayout_2\">\n             <property name=\"fieldGrowthPolicy\">\n              <enum>QFormLayout::AllNonFixedFieldsGrow</enum>\n@@ -233,6 +235,21 @@\n              </widget>\n             </item>\n            </layout>\n+          </item>\n+            <item>\n+             <spacer name=\"horizontalSpacer_3\">\n+              <property name=\"orientation\">\n+               <enum>Qt::Horizontal</enum>\n+              </property>\n+              <property name=\"sizeHint\" stdset=\"0\">\n+               <size>\n+                <width>40</width>\n+                <height>20</height>\n+               </size>\n+              </property>\n+             </spacer>\n+            </item>\n+           </layout>\n           </item>\n          </layout>\n         </widget>"
      }
    ]
  },
  {
    "sha": "c037531d691fb984f979f393803989d1856d46ee",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjMDM3NTMxZDY5MWZiOTg0Zjk3OWYzOTM4MDM5ODlkMTg1NmQ0NmVl",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2014-01-11T17:14:29Z"
      },
      "committer": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2014-01-11T17:17:09Z"
      },
      "message": "small headers ordering cleanup\n\n- keep headers in alphabetical order\n- fix Makefile.am (2 files in 1 line - leftover)\n- remove some spaces etc.",
      "tree": {
        "sha": "151512cae05db91c19cc8ecc206029934d40bc9c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/151512cae05db91c19cc8ecc206029934d40bc9c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c037531d691fb984f979f393803989d1856d46ee",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c037531d691fb984f979f393803989d1856d46ee",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c037531d691fb984f979f393803989d1856d46ee",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c037531d691fb984f979f393803989d1856d46ee/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "5a407bd095218b38686f965ebd58c7c485a9242d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5a407bd095218b38686f965ebd58c7c485a9242d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5a407bd095218b38686f965ebd58c7c485a9242d"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 10,
      "deletions": 10
    },
    "files": [
      {
        "sha": "a181e275ca16c9c57b731476ba74181baa6ef7ae",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c037531d691fb984f979f393803989d1856d46ee/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c037531d691fb984f979f393803989d1856d46ee/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=c037531d691fb984f979f393803989d1856d46ee",
        "patch": "@@ -209,7 +209,7 @@ class CNode\n     std::string addrName;\n     CService addrLocal;\n     int nVersion;\n-    // strSubVer is whatever byte array we read from the wire. However, this field is intended \n+    // strSubVer is whatever byte array we read from the wire. However, this field is intended\n     // to be printed out, displayed to humans in various forms and so on. So we sanitize it and\n     // store the sanitized version in cleanSubVer. The original should be used when dealing with\n     // the network or wire types and the cleaned string used when displayed or logged.\n@@ -264,7 +264,7 @@ class CNode\n     int64_t nPingUsecStart;\n     int64_t nPingUsecTime;\n     bool fPingQueued;\n-    \n+\n     CNode(SOCKET hSocketIn, CAddress addrIn, std::string addrNameIn = \"\", bool fInboundIn=false) : ssSend(SER_NETWORK, INIT_PROTO_VERSION)\n     {\n         nServices = 0;"
      },
      {
        "sha": "f8a7d07fc3c1a26542a3f4878ed01a7f2e093132",
        "filename": "src/rpcmisc.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c037531d691fb984f979f393803989d1856d46ee/src/rpcmisc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c037531d691fb984f979f393803989d1856d46ee/src/rpcmisc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcmisc.cpp?ref=c037531d691fb984f979f393803989d1856d46ee",
        "patch": "@@ -4,11 +4,11 @@\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #include \"base58.h\"\n-#include \"rpcserver.h\"\n #include \"init.h\"\n #include \"main.h\"\n #include \"net.h\"\n #include \"netbase.h\"\n+#include \"rpcserver.h\"\n #include \"util.h\"\n #ifdef ENABLE_WALLET\n #include \"wallet.h\"\n@@ -323,4 +323,3 @@ Value verifymessage(const Array& params, bool fHelp)\n \n     return (pubkey.GetID() == keyID);\n }\n-"
      },
      {
        "sha": "ff652ca34df613b585e11979b6358c4ff28d72f0",
        "filename": "src/rpcrawtransaction.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c037531d691fb984f979f393803989d1856d46ee/src/rpcrawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c037531d691fb984f979f393803989d1856d46ee/src/rpcrawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcrawtransaction.cpp?ref=c037531d691fb984f979f393803989d1856d46ee",
        "patch": "@@ -4,13 +4,13 @@\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #include \"base58.h\"\n-#include \"rpcserver.h\"\n+#include \"core.h\"\n #include \"init.h\"\n+#include \"keystore.h\"\n+#include \"main.h\"\n #include \"net.h\"\n+#include \"rpcserver.h\"\n #include \"uint256.h\"\n-#include \"core.h\"\n-#include \"main.h\"\n-#include \"keystore.h\"\n #ifdef ENABLE_WALLET\n #include \"wallet.h\"\n #endif"
      },
      {
        "sha": "9d34a900ff23067130035bb573c74e834d9b1b1c",
        "filename": "src/rpcserver.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c037531d691fb984f979f393803989d1856d46ee/src/rpcserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c037531d691fb984f979f393803989d1856d46ee/src/rpcserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.cpp?ref=c037531d691fb984f979f393803989d1856d46ee",
        "patch": "@@ -8,8 +8,8 @@\n #include \"base58.h\"\n #include \"init.h\"\n #include \"main.h\"\n-#include \"util.h\"\n #include \"ui_interface.h\"\n+#include \"util.h\"\n #ifdef ENABLE_WALLET\n #include \"wallet.h\"\n #endif"
      },
      {
        "sha": "667e53c6b4883ac517c55667ad2a8f84e44feccc",
        "filename": "src/test/Makefile.am",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c037531d691fb984f979f393803989d1856d46ee/src/test/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c037531d691fb984f979f393803989d1856d46ee/src/test/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/Makefile.am?ref=c037531d691fb984f979f393803989d1856d46ee",
        "patch": "@@ -37,7 +37,8 @@ test_bitcoin_SOURCES = \\\n   base58_tests.cpp \\\n   base64_tests.cpp \\\n   bignum_tests.cpp \\\n-  bloom_tests.cpp canonical_tests.cpp \\\n+  bloom_tests.cpp \\\n+  canonical_tests.cpp \\\n   checkblock_tests.cpp \\\n   Checkpoints_tests.cpp \\\n   compress_tests.cpp \\"
      }
    ]
  },
  {
    "sha": "dc64c3c3747f0d592ebad516dc08e752687e62eb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkYzY0YzNjMzc0N2YwZDU5MmViYWQ1MTZkYzA4ZTc1MjY4N2U2MmVi",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2014-01-11T17:53:28Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2014-01-11T17:54:20Z"
      },
      "message": "Merge pull request #3510\n\nc037531 small headers ordering cleanup (Philip Kaufmann)",
      "tree": {
        "sha": "151512cae05db91c19cc8ecc206029934d40bc9c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/151512cae05db91c19cc8ecc206029934d40bc9c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dc64c3c3747f0d592ebad516dc08e752687e62eb",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.12 (GNU/Linux)\n\niQGcBAABAgAGBQJS0YVMAAoJEI9lMlXIeZLgu5QL/1PA4dve6E/1fnkqZJb9REpW\n6M5GFsgW3YqJGBcXaVJoa//jpV7oaBKqqTqxlue8lR9JnlfZ3GJOC4sCkp4XQ840\nGTm1MNfCPA1bXy1yIf0NAiQaTdnbCZRCyPQwDhZZHiZmHGyqJ289/ZzU61/HP6ed\nE/iOeD7Ec+gRAWowOacrSDi2YB86w01axk3TWJ/VoeAPVFcQwGs6hNMdYLkqf7Qe\nxBcEa6RDaogPzgOzf2Cpjp4yeklk+ripEe1EpCdxvzrpkZn9EttgcWwRl9vl4ph7\nm3z8Qj9aXW6PhvpjltgFZYbFQNm7ycYK0urHqgkbEDqMpBbq0N9GiOoAPsoJYxFN\nTXJrbz9FALUmUHmZzqMRGmwa8sVBMaJ+ldCCBhzAdQeDZYy76HxjkTzNQBV4ClSB\nqXfUC/w5zFTcDANXBCJx6mSIy6ialMVvd/5WXFm8HPvipOjtDc5s3OQY+XA364R0\nTSxmyqx3gKEM6oUFs1PmLsFKSTzJDKGOy5iNlugjZg==\n=YrWx\n-----END PGP SIGNATURE-----",
        "payload": "tree 151512cae05db91c19cc8ecc206029934d40bc9c\nparent 5a407bd095218b38686f965ebd58c7c485a9242d\nparent c037531d691fb984f979f393803989d1856d46ee\nauthor Pieter Wuille <pieter.wuille@gmail.com> 1389462808 +0100\ncommitter Pieter Wuille <pieter.wuille@gmail.com> 1389462860 +0100\n\nMerge pull request #3510\n\nc037531 small headers ordering cleanup (Philip Kaufmann)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dc64c3c3747f0d592ebad516dc08e752687e62eb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/dc64c3c3747f0d592ebad516dc08e752687e62eb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dc64c3c3747f0d592ebad516dc08e752687e62eb/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5a407bd095218b38686f965ebd58c7c485a9242d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5a407bd095218b38686f965ebd58c7c485a9242d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5a407bd095218b38686f965ebd58c7c485a9242d"
      },
      {
        "sha": "c037531d691fb984f979f393803989d1856d46ee",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c037531d691fb984f979f393803989d1856d46ee",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c037531d691fb984f979f393803989d1856d46ee"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 10,
      "deletions": 10
    },
    "files": [
      {
        "sha": "a181e275ca16c9c57b731476ba74181baa6ef7ae",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dc64c3c3747f0d592ebad516dc08e752687e62eb/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dc64c3c3747f0d592ebad516dc08e752687e62eb/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=dc64c3c3747f0d592ebad516dc08e752687e62eb",
        "patch": "@@ -209,7 +209,7 @@ class CNode\n     std::string addrName;\n     CService addrLocal;\n     int nVersion;\n-    // strSubVer is whatever byte array we read from the wire. However, this field is intended \n+    // strSubVer is whatever byte array we read from the wire. However, this field is intended\n     // to be printed out, displayed to humans in various forms and so on. So we sanitize it and\n     // store the sanitized version in cleanSubVer. The original should be used when dealing with\n     // the network or wire types and the cleaned string used when displayed or logged.\n@@ -264,7 +264,7 @@ class CNode\n     int64_t nPingUsecStart;\n     int64_t nPingUsecTime;\n     bool fPingQueued;\n-    \n+\n     CNode(SOCKET hSocketIn, CAddress addrIn, std::string addrNameIn = \"\", bool fInboundIn=false) : ssSend(SER_NETWORK, INIT_PROTO_VERSION)\n     {\n         nServices = 0;"
      },
      {
        "sha": "f8a7d07fc3c1a26542a3f4878ed01a7f2e093132",
        "filename": "src/rpcmisc.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dc64c3c3747f0d592ebad516dc08e752687e62eb/src/rpcmisc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dc64c3c3747f0d592ebad516dc08e752687e62eb/src/rpcmisc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcmisc.cpp?ref=dc64c3c3747f0d592ebad516dc08e752687e62eb",
        "patch": "@@ -4,11 +4,11 @@\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #include \"base58.h\"\n-#include \"rpcserver.h\"\n #include \"init.h\"\n #include \"main.h\"\n #include \"net.h\"\n #include \"netbase.h\"\n+#include \"rpcserver.h\"\n #include \"util.h\"\n #ifdef ENABLE_WALLET\n #include \"wallet.h\"\n@@ -323,4 +323,3 @@ Value verifymessage(const Array& params, bool fHelp)\n \n     return (pubkey.GetID() == keyID);\n }\n-"
      },
      {
        "sha": "ff652ca34df613b585e11979b6358c4ff28d72f0",
        "filename": "src/rpcrawtransaction.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dc64c3c3747f0d592ebad516dc08e752687e62eb/src/rpcrawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dc64c3c3747f0d592ebad516dc08e752687e62eb/src/rpcrawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcrawtransaction.cpp?ref=dc64c3c3747f0d592ebad516dc08e752687e62eb",
        "patch": "@@ -4,13 +4,13 @@\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #include \"base58.h\"\n-#include \"rpcserver.h\"\n+#include \"core.h\"\n #include \"init.h\"\n+#include \"keystore.h\"\n+#include \"main.h\"\n #include \"net.h\"\n+#include \"rpcserver.h\"\n #include \"uint256.h\"\n-#include \"core.h\"\n-#include \"main.h\"\n-#include \"keystore.h\"\n #ifdef ENABLE_WALLET\n #include \"wallet.h\"\n #endif"
      },
      {
        "sha": "9d34a900ff23067130035bb573c74e834d9b1b1c",
        "filename": "src/rpcserver.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dc64c3c3747f0d592ebad516dc08e752687e62eb/src/rpcserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dc64c3c3747f0d592ebad516dc08e752687e62eb/src/rpcserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.cpp?ref=dc64c3c3747f0d592ebad516dc08e752687e62eb",
        "patch": "@@ -8,8 +8,8 @@\n #include \"base58.h\"\n #include \"init.h\"\n #include \"main.h\"\n-#include \"util.h\"\n #include \"ui_interface.h\"\n+#include \"util.h\"\n #ifdef ENABLE_WALLET\n #include \"wallet.h\"\n #endif"
      },
      {
        "sha": "667e53c6b4883ac517c55667ad2a8f84e44feccc",
        "filename": "src/test/Makefile.am",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dc64c3c3747f0d592ebad516dc08e752687e62eb/src/test/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dc64c3c3747f0d592ebad516dc08e752687e62eb/src/test/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/Makefile.am?ref=dc64c3c3747f0d592ebad516dc08e752687e62eb",
        "patch": "@@ -37,7 +37,8 @@ test_bitcoin_SOURCES = \\\n   base58_tests.cpp \\\n   base64_tests.cpp \\\n   bignum_tests.cpp \\\n-  bloom_tests.cpp canonical_tests.cpp \\\n+  bloom_tests.cpp \\\n+  canonical_tests.cpp \\\n   checkblock_tests.cpp \\\n   Checkpoints_tests.cpp \\\n   compress_tests.cpp \\"
      }
    ]
  },
  {
    "sha": "245a6ab1ae2655dede237ce25d9c50320ead5124",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyNDVhNmFiMWFlMjY1NWRlZGUyMzdjZTI1ZDljNTAzMjBlYWQ1MTI0",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2014-01-11T17:56:24Z"
      },
      "committer": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2014-01-11T17:56:24Z"
      },
      "message": "[Qt] guard bitcoin-config.h and remove dublicated help message code",
      "tree": {
        "sha": "63194c4bcb33ec4c1d48b17eeb3b039ba15eccbb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/63194c4bcb33ec4c1d48b17eeb3b039ba15eccbb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/245a6ab1ae2655dede237ce25d9c50320ead5124",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/245a6ab1ae2655dede237ce25d9c50320ead5124",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/245a6ab1ae2655dede237ce25d9c50320ead5124",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/245a6ab1ae2655dede237ce25d9c50320ead5124/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "5a407bd095218b38686f965ebd58c7c485a9242d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5a407bd095218b38686f965ebd58c7c485a9242d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5a407bd095218b38686f965ebd58c7c485a9242d"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 3,
      "deletions": 9
    },
    "files": [
      {
        "sha": "b8342b5a9964c2e95378328dcb6e938a6bd4136a",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 9,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/245a6ab1ae2655dede237ce25d9c50320ead5124/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/245a6ab1ae2655dede237ce25d9c50320ead5124/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=245a6ab1ae2655dede237ce25d9c50320ead5124",
        "patch": "@@ -2,7 +2,10 @@\n // Distributed under the MIT/X11 software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#if defined(HAVE_CONFIG_H)\n #include \"bitcoin-config.h\"\n+#endif\n+\n #include \"bitcoingui.h\"\n \n #include \"clientmodel.h\"\n@@ -553,15 +556,6 @@ int main(int argc, char *argv[])\n     // Subscribe to global signals from core\n     uiInterface.InitMessage.connect(InitMessage);\n \n-    // Show help message immediately after parsing command-line options (for \"-lang\") and setting locale,\n-    // but before showing splash screen.\n-    if (mapArgs.count(\"-?\") || mapArgs.count(\"--help\"))\n-    {\n-        GUIUtil::HelpMessageBox help;\n-        help.showOrPrint();\n-        return 1;\n-    }\n-\n     if (GetBoolArg(\"-splash\", true) && !GetBoolArg(\"-min\", false))\n         app.createSplashScreen(isaTestNet);\n "
      }
    ]
  },
  {
    "sha": "04aa828728afa2c89c33878dbe8a85812e3c2ae1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNGFhODI4NzI4YWZhMmM4OWMzMzg3OGRiZThhODU4MTJlM2MyYWUx",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2014-01-11T17:58:26Z"
      },
      "committer": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2014-01-11T17:58:26Z"
      },
      "message": "[Qt] don't regenerate autostart link on every client startup\n\n- allows users to add additional paramaters via the autostart link\n- related to #2197",
      "tree": {
        "sha": "e1edbbb87189289160261627498485b8ffff31df",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e1edbbb87189289160261627498485b8ffff31df"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/04aa828728afa2c89c33878dbe8a85812e3c2ae1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/04aa828728afa2c89c33878dbe8a85812e3c2ae1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/04aa828728afa2c89c33878dbe8a85812e3c2ae1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/04aa828728afa2c89c33878dbe8a85812e3c2ae1/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "5a407bd095218b38686f965ebd58c7c485a9242d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5a407bd095218b38686f965ebd58c7c485a9242d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5a407bd095218b38686f965ebd58c7c485a9242d"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 0,
      "deletions": 6
    },
    "files": [
      {
        "sha": "d04a49ebe75397c668f0c6f1a0190f334aa3b2e0",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/04aa828728afa2c89c33878dbe8a85812e3c2ae1/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/04aa828728afa2c89c33878dbe8a85812e3c2ae1/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=04aa828728afa2c89c33878dbe8a85812e3c2ae1",
        "patch": "@@ -567,12 +567,6 @@ int main(int argc, char *argv[])\n \n     try\n     {\n-#ifndef Q_OS_MAC\n-        // Regenerate startup link, to fix links to old versions\n-        // OSX: makes no sense on mac and might also scan/mount external (and sleeping) volumes (can take up some secs)\n-        if (GUIUtil::GetStartOnSystemStartup())\n-            GUIUtil::SetStartOnSystemStartup(true);\n-#endif\n         app.createWindow(isaTestNet);\n         app.requestInitialize();\n         app.exec();"
      }
    ]
  },
  {
    "sha": "da0fecffa788a0a74121d554d3d76936ab96b39e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkYTBmZWNmZmE3ODhhMGE3NDEyMWQ1NTRkM2Q3NjkzNmFiOTZiMzll",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2014-01-11T22:33:34Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2014-01-11T22:39:29Z"
      },
      "message": "Store orphan blocks in serialized form",
      "tree": {
        "sha": "02b894836761d9103632c18ef0de8e96a7a10633",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/02b894836761d9103632c18ef0de8e96a7a10633"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/da0fecffa788a0a74121d554d3d76936ab96b39e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/da0fecffa788a0a74121d554d3d76936ab96b39e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/da0fecffa788a0a74121d554d3d76936ab96b39e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/da0fecffa788a0a74121d554d3d76936ab96b39e/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "dc64c3c3747f0d592ebad516dc08e752687e62eb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dc64c3c3747f0d592ebad516dc08e752687e62eb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/dc64c3c3747f0d592ebad516dc08e752687e62eb"
      }
    ],
    "stats": {
      "total": 58,
      "additions": 41,
      "deletions": 17
    },
    "files": [
      {
        "sha": "9c6c1ba0c385c6fb0f6dce5672873c1238b7754f",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 41,
        "deletions": 17,
        "changes": 58,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/da0fecffa788a0a74121d554d3d76936ab96b39e/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/da0fecffa788a0a74121d554d3d76936ab96b39e/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=da0fecffa788a0a74121d554d3d76936ab96b39e",
        "patch": "@@ -56,8 +56,13 @@ int64_t CTransaction::nMinRelayTxFee = 10000;\n \n static CMedianFilter<int> cPeerBlockCounts(8, 0); // Amount of blocks that other nodes claim to have\n \n-map<uint256, CBlock*> mapOrphanBlocks;\n-multimap<uint256, CBlock*> mapOrphanBlocksByPrev;\n+struct COrphanBlock {\n+    uint256 hashBlock;\n+    uint256 hashPrev;\n+    vector<unsigned char> vchBlock;\n+};\n+map<uint256, COrphanBlock*> mapOrphanBlocks;\n+multimap<uint256, COrphanBlock*> mapOrphanBlocksByPrev;\n \n map<uint256, CTransaction> mapOrphanTransactions;\n map<uint256, set<uint256> > mapOrphanTransactionsByPrev;\n@@ -985,12 +990,19 @@ bool ReadBlockFromDisk(CBlock& block, const CBlockIndex* pindex)\n     return true;\n }\n \n-uint256 static GetOrphanRoot(const CBlockHeader* pblock)\n+uint256 static GetOrphanRoot(const uint256& hash)\n {\n+    map<uint256, COrphanBlock*>::iterator it = mapOrphanBlocks.find(hash);\n+    if (it == mapOrphanBlocks.end())\n+        return hash;\n+\n     // Work back to the first block in the orphan chain\n-    while (mapOrphanBlocks.count(pblock->hashPrevBlock))\n-        pblock = mapOrphanBlocks[pblock->hashPrevBlock];\n-    return pblock->GetHash();\n+    do {\n+        map<uint256, COrphanBlock*>::iterator it2 = mapOrphanBlocks.find(it->second->hashPrev);\n+        if (it2 == mapOrphanBlocks.end())\n+            return it->first;\n+        it = it2;\n+    } while(true);\n }\n \n int64_t GetBlockValue(int nHeight, int64_t nFees)\n@@ -2277,12 +2289,19 @@ bool ProcessBlock(CValidationState &state, CNode* pfrom, CBlock* pblock, CDiskBl\n \n         // Accept orphans as long as there is a node to request its parents from\n         if (pfrom) {\n-            CBlock* pblock2 = new CBlock(*pblock);\n+            COrphanBlock* pblock2 = new COrphanBlock();\n+            {\n+                CDataStream ss(SER_DISK, CLIENT_VERSION);\n+                ss << *pblock;\n+                pblock2->vchBlock = std::vector<unsigned char>(ss.begin(), ss.end());\n+            }\n+            pblock2->hashBlock = hash;\n+            pblock2->hashPrev = pblock->hashPrevBlock;\n             mapOrphanBlocks.insert(make_pair(hash, pblock2));\n-            mapOrphanBlocksByPrev.insert(make_pair(pblock2->hashPrevBlock, pblock2));\n+            mapOrphanBlocksByPrev.insert(make_pair(pblock2->hashPrev, pblock2));\n \n             // Ask this guy to fill in what we're missing\n-            PushGetBlocks(pfrom, chainActive.Tip(), GetOrphanRoot(pblock2));\n+            PushGetBlocks(pfrom, chainActive.Tip(), GetOrphanRoot(hash));\n         }\n         return true;\n     }\n@@ -2297,17 +2316,22 @@ bool ProcessBlock(CValidationState &state, CNode* pfrom, CBlock* pblock, CDiskBl\n     for (unsigned int i = 0; i < vWorkQueue.size(); i++)\n     {\n         uint256 hashPrev = vWorkQueue[i];\n-        for (multimap<uint256, CBlock*>::iterator mi = mapOrphanBlocksByPrev.lower_bound(hashPrev);\n+        for (multimap<uint256, COrphanBlock*>::iterator mi = mapOrphanBlocksByPrev.lower_bound(hashPrev);\n              mi != mapOrphanBlocksByPrev.upper_bound(hashPrev);\n              ++mi)\n         {\n-            CBlock* pblockOrphan = (*mi).second;\n+            CBlock block;\n+            {\n+                CDataStream ss(mi->second->vchBlock, SER_DISK, CLIENT_VERSION);\n+                ss >> block;\n+            }\n+            block.BuildMerkleTree();\n             // Use a dummy CValidationState so someone can't setup nodes to counter-DoS based on orphan resolution (that is, feeding people an invalid block based on LegitBlockX in order to get anyone relaying LegitBlockX banned)\n             CValidationState stateDummy;\n-            if (AcceptBlock(*pblockOrphan, stateDummy))\n-                vWorkQueue.push_back(pblockOrphan->GetHash());\n-            mapOrphanBlocks.erase(pblockOrphan->GetHash());\n-            delete pblockOrphan;\n+            if (AcceptBlock(block, stateDummy))\n+                vWorkQueue.push_back(mi->second->hashBlock);\n+            mapOrphanBlocks.erase(mi->second->hashBlock);\n+            delete mi->second;\n         }\n         mapOrphanBlocksByPrev.erase(hashPrev);\n     }\n@@ -3331,7 +3355,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n                 if (!fImporting && !fReindex)\n                     pfrom->AskFor(inv);\n             } else if (inv.type == MSG_BLOCK && mapOrphanBlocks.count(inv.hash)) {\n-                PushGetBlocks(pfrom, chainActive.Tip(), GetOrphanRoot(mapOrphanBlocks[inv.hash]));\n+                PushGetBlocks(pfrom, chainActive.Tip(), GetOrphanRoot(inv.hash));\n             } else if (nInv == nLastBlock) {\n                 // In case we are on a very long side-chain, it is possible that we already have\n                 // the last block in an inv bundle sent in response to getblocks. Try to detect\n@@ -4119,7 +4143,7 @@ class CMainCleanup\n         mapBlockIndex.clear();\n \n         // orphan blocks\n-        std::map<uint256, CBlock*>::iterator it2 = mapOrphanBlocks.begin();\n+        std::map<uint256, COrphanBlock*>::iterator it2 = mapOrphanBlocks.begin();\n         for (; it2 != mapOrphanBlocks.end(); it2++)\n             delete (*it2).second;\n         mapOrphanBlocks.clear();"
      }
    ]
  },
  {
    "sha": "d464edfb8c4fe8415980614ceb95dff9bfadbf45",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkNDY0ZWRmYjhjNGZlODQxNTk4MDYxNGNlYjk1ZGZmOWJmYWRiZjQ1",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2014-01-11T18:03:35Z"
      },
      "committer": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2014-01-12T02:00:53Z"
      },
      "message": "[Qt] fix alphabetical ordering in Makefile.am\n\n- also change to 1 file per line for more stuff in Makefile.am",
      "tree": {
        "sha": "3a08fb435272c025db034ad475d17a53979fbc2f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3a08fb435272c025db034ad475d17a53979fbc2f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d464edfb8c4fe8415980614ceb95dff9bfadbf45",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d464edfb8c4fe8415980614ceb95dff9bfadbf45",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d464edfb8c4fe8415980614ceb95dff9bfadbf45",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d464edfb8c4fe8415980614ceb95dff9bfadbf45/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "dc64c3c3747f0d592ebad516dc08e752687e62eb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dc64c3c3747f0d592ebad516dc08e752687e62eb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/dc64c3c3747f0d592ebad516dc08e752687e62eb"
      }
    ],
    "stats": {
      "total": 94,
      "additions": 52,
      "deletions": 42
    },
    "files": [
      {
        "sha": "deed59bebdd6fc1df0ab65f2f54f1f8204e9eb2e",
        "filename": "src/qt/Makefile.am",
        "status": "modified",
        "additions": 47,
        "deletions": 39,
        "changes": 86,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d464edfb8c4fe8415980614ceb95dff9bfadbf45/src/qt/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d464edfb8c4fe8415980614ceb95dff9bfadbf45/src/qt/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/Makefile.am?ref=d464edfb8c4fe8415980614ceb95dff9bfadbf45",
        "patch": "@@ -84,8 +84,8 @@ QT_FORMS_UI = \\\n   forms/openuridialog.ui \\\n   forms/optionsdialog.ui \\\n   forms/overviewpage.ui \\\n-  forms/receiverequestdialog.ui \\\n   forms/receivecoinsdialog.ui \\\n+  forms/receiverequestdialog.ui \\\n   forms/rpcconsole.ui \\\n   forms/sendcoinsdialog.ui \\\n   forms/sendcoinsentry.ui \\\n@@ -117,10 +117,10 @@ QT_MOC_CPP = \\\n   moc_optionsmodel.cpp \\\n   moc_overviewpage.cpp \\\n   moc_paymentserver.cpp \\\n-  moc_receiverequestdialog.cpp \\\n   moc_qvalidatedlineedit.cpp \\\n   moc_qvaluecombobox.cpp \\\n   moc_receivecoinsdialog.cpp \\\n+  moc_receiverequestdialog.cpp \\\n   moc_recentrequeststablemodel.cpp \\\n   moc_rpcconsole.cpp \\\n   moc_sendcoinsdialog.cpp \\\n@@ -137,9 +137,15 @@ QT_MOC_CPP = \\\n   moc_walletmodel.cpp \\\n   moc_walletview.cpp\n \n-BITCOIN_MM = macdockiconhandler.mm macnotificationhandler.mm\n+BITCOIN_MM = \\\n+  macdockiconhandler.mm \\\n+  macnotificationhandler.mm\n \n-QT_MOC = intro.moc overviewpage.moc rpcconsole.moc bitcoin.moc\n+QT_MOC = \\\n+  bitcoin.moc \\\n+  intro.moc \\\n+  overviewpage.moc \\\n+  rpcconsole.moc\n \n QT_QRC_CPP = qrc_bitcoin.cpp\n QT_QRC = bitcoin.qrc\n@@ -175,19 +181,19 @@ BITCOIN_QT_H = \\\n   overviewpage.h \\\n   paymentrequestplus.h \\\n   paymentserver.h \\\n-  receivecoinsdialog.h \\\n-  recentrequeststablemodel.h \\\n-  receiverequestdialog.h \\\n   qvalidatedlineedit.h \\\n   qvaluecombobox.h \\\n+  receivecoinsdialog.h \\\n+  receiverequestdialog.h \\\n+  recentrequeststablemodel.h \\\n   rpcconsole.h \\\n   sendcoinsdialog.h \\\n   sendcoinsentry.h \\\n   signverifymessagedialog.h \\\n   splashscreen.h \\\n   trafficgraphwidget.h \\\n-  transactiondescdialog.h \\\n   transactiondesc.h \\\n+  transactiondescdialog.h \\\n   transactionfilterproxy.h \\\n   transactionrecord.h \\\n   transactiontablemodel.h \\\n@@ -198,54 +204,54 @@ BITCOIN_QT_H = \\\n   walletview.h\n \n RES_ICONS = \\\n-  res/icons/bitcoin.png \\\n+  res/icons/add.png \\\n   res/icons/address-book.png \\\n-  res/icons/quit.png \\\n-  res/icons/send.png \\\n-  res/icons/toolbar.png \\\n-  res/icons/connect0_16.png \\\n-  res/icons/connect1_16.png \\\n-  res/icons/connect2_16.png \\\n-  res/icons/connect3_16.png \\\n-  res/icons/connect4_16.png \\\n-  res/icons/transaction0.png \\\n-  res/icons/transaction2.png \\\n+  res/icons/bitcoin.ico \\\n+  res/icons/bitcoin.png \\\n+  res/icons/bitcoin_testnet.ico \\\n+  res/icons/bitcoin_testnet.png \\\n   res/icons/clock1.png \\\n   res/icons/clock2.png \\\n   res/icons/clock3.png \\\n   res/icons/clock4.png \\\n   res/icons/clock5.png \\\n   res/icons/configure.png \\\n-  res/icons/receive.png \\\n-  res/icons/editpaste.png \\\n-  res/icons/editcopy.png \\\n-  res/icons/add.png \\\n-  res/icons/bitcoin_testnet.png \\\n-  res/icons/toolbar_testnet.png \\\n+  res/icons/connect0_16.png \\\n+  res/icons/connect1_16.png \\\n+  res/icons/connect2_16.png \\\n+  res/icons/connect3_16.png \\\n+  res/icons/connect4_16.png \\\n+  res/icons/debugwindow.png \\\n   res/icons/edit.png \\\n+  res/icons/editcopy.png \\\n+  res/icons/editpaste.png \\\n+  res/icons/export.png \\\n+  res/icons/filesave.png \\\n   res/icons/history.png \\\n+  res/icons/key.png \\\n+  res/icons/lock_closed.png \\\n+  res/icons/lock_open.png \\\n   res/icons/overview.png \\\n-  res/icons/export.png \\\n-  res/icons/synced.png \\\n+  res/icons/qrcode.png \\\n+  res/icons/quit.png \\\n+  res/icons/receive.png \\\n   res/icons/remove.png \\\n-  res/icons/tx_mined.png \\\n+  res/icons/send.png \\\n+  res/icons/synced.png \\\n+  res/icons/toolbar.png \\\n+  res/icons/toolbar_testnet.png \\\n+  res/icons/transaction0.png \\\n+  res/icons/transaction2.png \\\n+  res/icons/tx_inout.png \\\n   res/icons/tx_input.png \\\n   res/icons/tx_output.png \\\n-  res/icons/tx_inout.png \\\n-  res/icons/lock_closed.png \\\n-  res/icons/lock_open.png \\\n-  res/icons/key.png \\\n-  res/icons/filesave.png \\\n-  res/icons/qrcode.png \\\n-  res/icons/debugwindow.png \\\n-  res/icons/bitcoin.ico \\\n-  res/icons/bitcoin_testnet.ico\n+  res/icons/tx_mined.png\n \n BITCOIN_QT_CPP = \\\n   aboutdialog.cpp \\\n+  bitcoin.cpp \\\n   bitcoinaddressvalidator.cpp \\\n   bitcoinamountfield.cpp \\\n-  bitcoin.cpp \\\n   bitcoingui.cpp \\\n   bitcoinunits.cpp \\\n   clientmodel.cpp \\\n@@ -292,7 +298,9 @@ BITCOIN_QT_CPP += \\\n   walletview.cpp\n endif\n \n-RES_IMAGES = res/images/about.png res/images/splash.png \\\n+RES_IMAGES = \\\n+  res/images/about.png \\\n+  res/images/splash.png \\\n   res/images/splash_testnet.png\n \n RES_MOVIES = res/movies/update_spinner.mng"
      },
      {
        "sha": "00ccfadf3f453f0e0ca47cb2bf1d760a4ffc006a",
        "filename": "src/qt/test/Makefile.am",
        "status": "modified",
        "additions": 5,
        "deletions": 3,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d464edfb8c4fe8415980614ceb95dff9bfadbf45/src/qt/test/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d464edfb8c4fe8415980614ceb95dff9bfadbf45/src/qt/test/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/Makefile.am?ref=d464edfb8c4fe8415980614ceb95dff9bfadbf45",
        "patch": "@@ -16,12 +16,13 @@ endif\n \n TEST_QT_H = \\\n   uritests.h \\\n-  paymentservertests.h \\\n-  paymentrequestdata.h\n+  paymentrequestdata.h \\\n+  paymentservertests.h\n \n BUILT_SOURCES = $(TEST_QT_MOC_CPP)\n \n test_bitcoin_qt_CPPFLAGS = $(AM_CPPFLAGS) $(QT_INCLUDES) $(QT_TEST_INCLUDES)\n+\n test_bitcoin_qt_SOURCES = \\\n   test_main.cpp \\\n   uritests.cpp \\\n@@ -30,7 +31,9 @@ if ENABLE_WALLET\n test_bitcoin_qt_SOURCES += \\\n   paymentservertests.cpp\n endif\n+\n nodist_test_bitcoin_qt_SOURCES = $(TEST_QT_MOC_CPP)\n+\n test_bitcoin_qt_LDADD = $(LIBBITCOINQT) $(LIBBITCOIN_SERVER)\n if ENABLE_WALLET\n test_bitcoin_qt_LDADD += $(LIBBITCOIN_WALLET)\n@@ -40,4 +43,3 @@ test_bitcoin_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBLEVELDB) \\\n   $(QR_LIBS) $(PROTOBUF_LIBS) $(BDB_LIBS)\n \n CLEANFILES = $(BUILT_SOURCES) *.gcda *.gcno\n-"
      }
    ]
  },
  {
    "sha": "b68c618c6d35ee9ca17fd9563e1d8e438fad8a85",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiNjhjNjE4YzZkMzVlZTljYTE3ZmQ5NTYzZTFkOGU0MzhmYWQ4YTg1",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-12T08:56:46Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-12T09:00:39Z"
      },
      "message": "Merge pull request #3507\n\n9b146cd GUI: Fix design in overview page (Cozz Lovan)",
      "tree": {
        "sha": "fb5e9541f1bc1769ae1b526d50dabcf0207808de",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fb5e9541f1bc1769ae1b526d50dabcf0207808de"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b68c618c6d35ee9ca17fd9563e1d8e438fad8a85",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJS0lm3AAoJEHSBCwEjRsmmvZgH/Rpv0dU/2AZK8wPs3orkcJ7G\nwj0/bqEeqapxrI2oW5SbcsgBVHWisxntvDnmEgiMnzVDItMRyPX+9VVPJxnuPKRG\n53tJRPpwgvJwtr3jAHMGlDfdUzqn+5tLHfzjbxXd9c7c0E5TdWFoCHKMuiQN2a0a\ngLCtdigMsVP5E8pvYrFYv8Rul/mcd+wz7rQSxEmlnEUqZD3gxXn9jsgC/sw3xWRG\nPquu5hgWDmIahv025Bg2CkjPCLHWpzfUrE9iNFRHq4cZaBhHBW0j2b05YKAoNXGS\nkPS/a68ZqPqXNLirkS4OpjuImHzejpETy3ITSWctX05IurfgyUsw1mvOb4eJDpY=\n=+nlb\n-----END PGP SIGNATURE-----",
        "payload": "tree fb5e9541f1bc1769ae1b526d50dabcf0207808de\nparent dc64c3c3747f0d592ebad516dc08e752687e62eb\nparent 9b146cd3caf343d0e8975b6e93f64dc9fd8c0b28\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1389517006 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1389517239 +0100\n\nMerge pull request #3507\n\n9b146cd GUI: Fix design in overview page (Cozz Lovan)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b68c618c6d35ee9ca17fd9563e1d8e438fad8a85",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b68c618c6d35ee9ca17fd9563e1d8e438fad8a85",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b68c618c6d35ee9ca17fd9563e1d8e438fad8a85/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "dc64c3c3747f0d592ebad516dc08e752687e62eb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dc64c3c3747f0d592ebad516dc08e752687e62eb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/dc64c3c3747f0d592ebad516dc08e752687e62eb"
      },
      {
        "sha": "9b146cd3caf343d0e8975b6e93f64dc9fd8c0b28",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9b146cd3caf343d0e8975b6e93f64dc9fd8c0b28",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9b146cd3caf343d0e8975b6e93f64dc9fd8c0b28"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 17,
      "deletions": 0
    },
    "files": [
      {
        "sha": "d1ca9694318252040e909eb15c38c4eb3b0cdef3",
        "filename": "src/qt/forms/overviewpage.ui",
        "status": "modified",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b68c618c6d35ee9ca17fd9563e1d8e438fad8a85/src/qt/forms/overviewpage.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b68c618c6d35ee9ca17fd9563e1d8e438fad8a85/src/qt/forms/overviewpage.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/overviewpage.ui?ref=b68c618c6d35ee9ca17fd9563e1d8e438fad8a85",
        "patch": "@@ -90,6 +90,8 @@\n            </layout>\n           </item>\n           <item>\n+          <layout class=\"QHBoxLayout\" name=\"horizontalLayout_3\">\n+           <item>\n            <layout class=\"QFormLayout\" name=\"formLayout_2\">\n             <property name=\"fieldGrowthPolicy\">\n              <enum>QFormLayout::AllNonFixedFieldsGrow</enum>\n@@ -233,6 +235,21 @@\n              </widget>\n             </item>\n            </layout>\n+          </item>\n+            <item>\n+             <spacer name=\"horizontalSpacer_3\">\n+              <property name=\"orientation\">\n+               <enum>Qt::Horizontal</enum>\n+              </property>\n+              <property name=\"sizeHint\" stdset=\"0\">\n+               <size>\n+                <width>40</width>\n+                <height>20</height>\n+               </size>\n+              </property>\n+             </spacer>\n+            </item>\n+           </layout>\n           </item>\n          </layout>\n         </widget>"
      }
    ]
  },
  {
    "sha": "0a4fefe18faed00db3a89122c0e0900f9c7ad816",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowYTRmZWZlMThmYWVkMDBkYjNhODkxMjJjMGUwOTAwZjljN2FkODE2",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-12T09:01:24Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-12T09:01:31Z"
      },
      "message": "Merge pull request #3511\n\n245a6ab [Qt] guard bitcoin-config.h and remove dublicated help message code (Philip Kaufmann)",
      "tree": {
        "sha": "29790d7a2f9fcd0a96a87c518c6f54dc6d3cb1b2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/29790d7a2f9fcd0a96a87c518c6f54dc6d3cb1b2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0a4fefe18faed00db3a89122c0e0900f9c7ad816",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJS0lnrAAoJEHSBCwEjRsmmSPYIALCztAAiMND4ByZjoSlHg3ei\nwCFdnucW3FkooNz1KD2hq9hniMtIP4Y2M8NbQG+kbXcBQNCRJ4PGOpx9fh7qFDgC\nkSAYkeyjA9jS63WEoeWJZKvdI3QzHgH96Ut0XaAv1qk785zXQ46NhFLtxN+bR9iR\nxQqZp3LPE8Wi0c1dMgf7LH6zFdEkwd6qQjVJBkV39AHStUqkTCIzhtBS5tJgOfEB\np1kRGmHgxwDYXYJw2QtU4LXhjqYAhdtUBfGY3b2up6FgkAO+hflITN3G9Z5Aodrm\nncmdoc8aE62zINdFC4QulTl7jX0dKj2VkVPDbclUsp1E7w/mbaEVvhW8b7aeSCg=\n=+dQg\n-----END PGP SIGNATURE-----",
        "payload": "tree 29790d7a2f9fcd0a96a87c518c6f54dc6d3cb1b2\nparent b68c618c6d35ee9ca17fd9563e1d8e438fad8a85\nparent 245a6ab1ae2655dede237ce25d9c50320ead5124\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1389517284 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1389517291 +0100\n\nMerge pull request #3511\n\n245a6ab [Qt] guard bitcoin-config.h and remove dublicated help message code (Philip Kaufmann)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0a4fefe18faed00db3a89122c0e0900f9c7ad816",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0a4fefe18faed00db3a89122c0e0900f9c7ad816",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0a4fefe18faed00db3a89122c0e0900f9c7ad816/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b68c618c6d35ee9ca17fd9563e1d8e438fad8a85",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b68c618c6d35ee9ca17fd9563e1d8e438fad8a85",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b68c618c6d35ee9ca17fd9563e1d8e438fad8a85"
      },
      {
        "sha": "245a6ab1ae2655dede237ce25d9c50320ead5124",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/245a6ab1ae2655dede237ce25d9c50320ead5124",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/245a6ab1ae2655dede237ce25d9c50320ead5124"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 3,
      "deletions": 9
    },
    "files": [
      {
        "sha": "b8342b5a9964c2e95378328dcb6e938a6bd4136a",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 9,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0a4fefe18faed00db3a89122c0e0900f9c7ad816/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0a4fefe18faed00db3a89122c0e0900f9c7ad816/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=0a4fefe18faed00db3a89122c0e0900f9c7ad816",
        "patch": "@@ -2,7 +2,10 @@\n // Distributed under the MIT/X11 software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#if defined(HAVE_CONFIG_H)\n #include \"bitcoin-config.h\"\n+#endif\n+\n #include \"bitcoingui.h\"\n \n #include \"clientmodel.h\"\n@@ -553,15 +556,6 @@ int main(int argc, char *argv[])\n     // Subscribe to global signals from core\n     uiInterface.InitMessage.connect(InitMessage);\n \n-    // Show help message immediately after parsing command-line options (for \"-lang\") and setting locale,\n-    // but before showing splash screen.\n-    if (mapArgs.count(\"-?\") || mapArgs.count(\"--help\"))\n-    {\n-        GUIUtil::HelpMessageBox help;\n-        help.showOrPrint();\n-        return 1;\n-    }\n-\n     if (GetBoolArg(\"-splash\", true) && !GetBoolArg(\"-min\", false))\n         app.createSplashScreen(isaTestNet);\n "
      }
    ]
  },
  {
    "sha": "0e469b516770ebfb6596cf71532a8c9c233527ca",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowZTQ2OWI1MTY3NzBlYmZiNjU5NmNmNzE1MzJhOGM5YzIzMzUyN2Nh",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-12T09:02:55Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-12T09:03:02Z"
      },
      "message": "Merge pull request #3513\n\nd464edf [Qt] fix alphabetical ordering in Makefile.am (Philip Kaufmann)",
      "tree": {
        "sha": "136d2afb6b38a7470a331ce9a68bf3aa716f06bc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/136d2afb6b38a7470a331ce9a68bf3aa716f06bc"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0e469b516770ebfb6596cf71532a8c9c233527ca",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJS0lpGAAoJEHSBCwEjRsmmG8AH/Rhcwhg9GfCciAmRpePYrSzh\n8j7vOVInXe1ABQXAccdIl0kcVf9d2nmK1Bpj273NK/9tZd/Z7J4mHuRRyj5jPLo9\njlj4S4MKDc0IqV4NZt46JW6psS4QR2AYFLzeNPNWGOFAsxz/Howm7zUZMp9UG5zJ\nc6P1OVNe2lM0B5qLBImJh05W5YfqV9v8zL5vqq0QQFGYNGDcQErtZAlXYnOq6cBB\nKR11dS8ifTyXkGXT9w50HZfnI4FT5hIccamnenVVVZtaCRHUIjKbTQSKhiFBLJrn\nZ8Uq1Mpt8ODExjpAtZupSMdVXfe31/h7d/fhozXx2/mg9wSdTwhXdkZveHWOc0A=\n=9zjo\n-----END PGP SIGNATURE-----",
        "payload": "tree 136d2afb6b38a7470a331ce9a68bf3aa716f06bc\nparent 0a4fefe18faed00db3a89122c0e0900f9c7ad816\nparent d464edfb8c4fe8415980614ceb95dff9bfadbf45\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1389517375 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1389517382 +0100\n\nMerge pull request #3513\n\nd464edf [Qt] fix alphabetical ordering in Makefile.am (Philip Kaufmann)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0e469b516770ebfb6596cf71532a8c9c233527ca",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0e469b516770ebfb6596cf71532a8c9c233527ca",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0e469b516770ebfb6596cf71532a8c9c233527ca/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0a4fefe18faed00db3a89122c0e0900f9c7ad816",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0a4fefe18faed00db3a89122c0e0900f9c7ad816",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0a4fefe18faed00db3a89122c0e0900f9c7ad816"
      },
      {
        "sha": "d464edfb8c4fe8415980614ceb95dff9bfadbf45",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d464edfb8c4fe8415980614ceb95dff9bfadbf45",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d464edfb8c4fe8415980614ceb95dff9bfadbf45"
      }
    ],
    "stats": {
      "total": 94,
      "additions": 52,
      "deletions": 42
    },
    "files": [
      {
        "sha": "deed59bebdd6fc1df0ab65f2f54f1f8204e9eb2e",
        "filename": "src/qt/Makefile.am",
        "status": "modified",
        "additions": 47,
        "deletions": 39,
        "changes": 86,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e469b516770ebfb6596cf71532a8c9c233527ca/src/qt/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e469b516770ebfb6596cf71532a8c9c233527ca/src/qt/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/Makefile.am?ref=0e469b516770ebfb6596cf71532a8c9c233527ca",
        "patch": "@@ -84,8 +84,8 @@ QT_FORMS_UI = \\\n   forms/openuridialog.ui \\\n   forms/optionsdialog.ui \\\n   forms/overviewpage.ui \\\n-  forms/receiverequestdialog.ui \\\n   forms/receivecoinsdialog.ui \\\n+  forms/receiverequestdialog.ui \\\n   forms/rpcconsole.ui \\\n   forms/sendcoinsdialog.ui \\\n   forms/sendcoinsentry.ui \\\n@@ -117,10 +117,10 @@ QT_MOC_CPP = \\\n   moc_optionsmodel.cpp \\\n   moc_overviewpage.cpp \\\n   moc_paymentserver.cpp \\\n-  moc_receiverequestdialog.cpp \\\n   moc_qvalidatedlineedit.cpp \\\n   moc_qvaluecombobox.cpp \\\n   moc_receivecoinsdialog.cpp \\\n+  moc_receiverequestdialog.cpp \\\n   moc_recentrequeststablemodel.cpp \\\n   moc_rpcconsole.cpp \\\n   moc_sendcoinsdialog.cpp \\\n@@ -137,9 +137,15 @@ QT_MOC_CPP = \\\n   moc_walletmodel.cpp \\\n   moc_walletview.cpp\n \n-BITCOIN_MM = macdockiconhandler.mm macnotificationhandler.mm\n+BITCOIN_MM = \\\n+  macdockiconhandler.mm \\\n+  macnotificationhandler.mm\n \n-QT_MOC = intro.moc overviewpage.moc rpcconsole.moc bitcoin.moc\n+QT_MOC = \\\n+  bitcoin.moc \\\n+  intro.moc \\\n+  overviewpage.moc \\\n+  rpcconsole.moc\n \n QT_QRC_CPP = qrc_bitcoin.cpp\n QT_QRC = bitcoin.qrc\n@@ -175,19 +181,19 @@ BITCOIN_QT_H = \\\n   overviewpage.h \\\n   paymentrequestplus.h \\\n   paymentserver.h \\\n-  receivecoinsdialog.h \\\n-  recentrequeststablemodel.h \\\n-  receiverequestdialog.h \\\n   qvalidatedlineedit.h \\\n   qvaluecombobox.h \\\n+  receivecoinsdialog.h \\\n+  receiverequestdialog.h \\\n+  recentrequeststablemodel.h \\\n   rpcconsole.h \\\n   sendcoinsdialog.h \\\n   sendcoinsentry.h \\\n   signverifymessagedialog.h \\\n   splashscreen.h \\\n   trafficgraphwidget.h \\\n-  transactiondescdialog.h \\\n   transactiondesc.h \\\n+  transactiondescdialog.h \\\n   transactionfilterproxy.h \\\n   transactionrecord.h \\\n   transactiontablemodel.h \\\n@@ -198,54 +204,54 @@ BITCOIN_QT_H = \\\n   walletview.h\n \n RES_ICONS = \\\n-  res/icons/bitcoin.png \\\n+  res/icons/add.png \\\n   res/icons/address-book.png \\\n-  res/icons/quit.png \\\n-  res/icons/send.png \\\n-  res/icons/toolbar.png \\\n-  res/icons/connect0_16.png \\\n-  res/icons/connect1_16.png \\\n-  res/icons/connect2_16.png \\\n-  res/icons/connect3_16.png \\\n-  res/icons/connect4_16.png \\\n-  res/icons/transaction0.png \\\n-  res/icons/transaction2.png \\\n+  res/icons/bitcoin.ico \\\n+  res/icons/bitcoin.png \\\n+  res/icons/bitcoin_testnet.ico \\\n+  res/icons/bitcoin_testnet.png \\\n   res/icons/clock1.png \\\n   res/icons/clock2.png \\\n   res/icons/clock3.png \\\n   res/icons/clock4.png \\\n   res/icons/clock5.png \\\n   res/icons/configure.png \\\n-  res/icons/receive.png \\\n-  res/icons/editpaste.png \\\n-  res/icons/editcopy.png \\\n-  res/icons/add.png \\\n-  res/icons/bitcoin_testnet.png \\\n-  res/icons/toolbar_testnet.png \\\n+  res/icons/connect0_16.png \\\n+  res/icons/connect1_16.png \\\n+  res/icons/connect2_16.png \\\n+  res/icons/connect3_16.png \\\n+  res/icons/connect4_16.png \\\n+  res/icons/debugwindow.png \\\n   res/icons/edit.png \\\n+  res/icons/editcopy.png \\\n+  res/icons/editpaste.png \\\n+  res/icons/export.png \\\n+  res/icons/filesave.png \\\n   res/icons/history.png \\\n+  res/icons/key.png \\\n+  res/icons/lock_closed.png \\\n+  res/icons/lock_open.png \\\n   res/icons/overview.png \\\n-  res/icons/export.png \\\n-  res/icons/synced.png \\\n+  res/icons/qrcode.png \\\n+  res/icons/quit.png \\\n+  res/icons/receive.png \\\n   res/icons/remove.png \\\n-  res/icons/tx_mined.png \\\n+  res/icons/send.png \\\n+  res/icons/synced.png \\\n+  res/icons/toolbar.png \\\n+  res/icons/toolbar_testnet.png \\\n+  res/icons/transaction0.png \\\n+  res/icons/transaction2.png \\\n+  res/icons/tx_inout.png \\\n   res/icons/tx_input.png \\\n   res/icons/tx_output.png \\\n-  res/icons/tx_inout.png \\\n-  res/icons/lock_closed.png \\\n-  res/icons/lock_open.png \\\n-  res/icons/key.png \\\n-  res/icons/filesave.png \\\n-  res/icons/qrcode.png \\\n-  res/icons/debugwindow.png \\\n-  res/icons/bitcoin.ico \\\n-  res/icons/bitcoin_testnet.ico\n+  res/icons/tx_mined.png\n \n BITCOIN_QT_CPP = \\\n   aboutdialog.cpp \\\n+  bitcoin.cpp \\\n   bitcoinaddressvalidator.cpp \\\n   bitcoinamountfield.cpp \\\n-  bitcoin.cpp \\\n   bitcoingui.cpp \\\n   bitcoinunits.cpp \\\n   clientmodel.cpp \\\n@@ -292,7 +298,9 @@ BITCOIN_QT_CPP += \\\n   walletview.cpp\n endif\n \n-RES_IMAGES = res/images/about.png res/images/splash.png \\\n+RES_IMAGES = \\\n+  res/images/about.png \\\n+  res/images/splash.png \\\n   res/images/splash_testnet.png\n \n RES_MOVIES = res/movies/update_spinner.mng"
      },
      {
        "sha": "00ccfadf3f453f0e0ca47cb2bf1d760a4ffc006a",
        "filename": "src/qt/test/Makefile.am",
        "status": "modified",
        "additions": 5,
        "deletions": 3,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e469b516770ebfb6596cf71532a8c9c233527ca/src/qt/test/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e469b516770ebfb6596cf71532a8c9c233527ca/src/qt/test/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/Makefile.am?ref=0e469b516770ebfb6596cf71532a8c9c233527ca",
        "patch": "@@ -16,12 +16,13 @@ endif\n \n TEST_QT_H = \\\n   uritests.h \\\n-  paymentservertests.h \\\n-  paymentrequestdata.h\n+  paymentrequestdata.h \\\n+  paymentservertests.h\n \n BUILT_SOURCES = $(TEST_QT_MOC_CPP)\n \n test_bitcoin_qt_CPPFLAGS = $(AM_CPPFLAGS) $(QT_INCLUDES) $(QT_TEST_INCLUDES)\n+\n test_bitcoin_qt_SOURCES = \\\n   test_main.cpp \\\n   uritests.cpp \\\n@@ -30,7 +31,9 @@ if ENABLE_WALLET\n test_bitcoin_qt_SOURCES += \\\n   paymentservertests.cpp\n endif\n+\n nodist_test_bitcoin_qt_SOURCES = $(TEST_QT_MOC_CPP)\n+\n test_bitcoin_qt_LDADD = $(LIBBITCOINQT) $(LIBBITCOIN_SERVER)\n if ENABLE_WALLET\n test_bitcoin_qt_LDADD += $(LIBBITCOIN_WALLET)\n@@ -40,4 +43,3 @@ test_bitcoin_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBLEVELDB) \\\n   $(QR_LIBS) $(PROTOBUF_LIBS) $(BDB_LIBS)\n \n CLEANFILES = $(BUILT_SOURCES) *.gcda *.gcno\n-"
      }
    ]
  },
  {
    "sha": "7a29fb59405e32b6274ad1830687e936cab1999f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3YTI5ZmI1OTQwNWUzMmI2Mjc0YWQxODMwNjg3ZTkzNmNhYjE5OTlm",
    "commit": {
      "author": {
        "name": "Micha",
        "email": "michagogo@server.fake",
        "date": "2014-01-12T11:48:39Z"
      },
      "committer": {
        "name": "Micha",
        "email": "michagogo@server.fake",
        "date": "2014-01-12T11:48:39Z"
      },
      "message": "Tweak linearize.py to give more flexibility\n\nAdd the ability to start at a non-zero height, and allow for appending to\nan existing file.",
      "tree": {
        "sha": "263955c56ecf74715b1bfaa194317f8879e42505",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/263955c56ecf74715b1bfaa194317f8879e42505"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7a29fb59405e32b6274ad1830687e936cab1999f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unverified_email",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.7 (MingW32)\n\niQEVAwUAUtKBWoLFwAlijs8MAQLyuwgAyvLSHSLb0dqMf02ls0PayUdaZ//H6AgP\nWK2SJfgacscsoK6Uv8sgMRzJH0a7m6NWn2pFy1ipopfQSA0IbcmHb1ZaHxUE1Ma9\nD79G38mw3xnX3O80fMlwkMrJ4MH7uHMKqbxRr43mqFWTxPonV9jF8kqNuATX6xuy\n4f3B5QLInmVmV1tynuaF5KFo0Hq72/yyAQR8V+YNhNgcMW1JG9jySb3R3utlXtwv\nhK/C4Llvb2hRsRq03X6umqCZpytg6xXjD6At+B/4hEHLxVRa1ZaiANIsIxocRLjA\n5ZQEI5mdUZLgvS7v47fMCuScO0uxoDsHjXgyJMhCYGWSj3F9HoDUNA==\n=6bBK\n-----END PGP SIGNATURE-----",
        "payload": "tree 263955c56ecf74715b1bfaa194317f8879e42505\nparent 0e469b516770ebfb6596cf71532a8c9c233527ca\nauthor Micha <michagogo@server.fake> 1389527319 +0200\ncommitter Micha <michagogo@server.fake> 1389527319 +0200\n\nTweak linearize.py to give more flexibility\n\nAdd the ability to start at a non-zero height, and allow for appending to\nan existing file.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7a29fb59405e32b6274ad1830687e936cab1999f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7a29fb59405e32b6274ad1830687e936cab1999f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7a29fb59405e32b6274ad1830687e936cab1999f/comments",
    "author": {
      "login": "Michagogo",
      "id": 2559390,
      "node_id": "MDQ6VXNlcjI1NTkzOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2559390?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Michagogo",
      "html_url": "https://github.com/Michagogo",
      "followers_url": "https://api.github.com/users/Michagogo/followers",
      "following_url": "https://api.github.com/users/Michagogo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Michagogo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Michagogo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Michagogo/subscriptions",
      "organizations_url": "https://api.github.com/users/Michagogo/orgs",
      "repos_url": "https://api.github.com/users/Michagogo/repos",
      "events_url": "https://api.github.com/users/Michagogo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Michagogo/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Michagogo",
      "id": 2559390,
      "node_id": "MDQ6VXNlcjI1NTkzOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2559390?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Michagogo",
      "html_url": "https://github.com/Michagogo",
      "followers_url": "https://api.github.com/users/Michagogo/followers",
      "following_url": "https://api.github.com/users/Michagogo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Michagogo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Michagogo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Michagogo/subscriptions",
      "organizations_url": "https://api.github.com/users/Michagogo/orgs",
      "repos_url": "https://api.github.com/users/Michagogo/repos",
      "events_url": "https://api.github.com/users/Michagogo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Michagogo/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0e469b516770ebfb6596cf71532a8c9c233527ca",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0e469b516770ebfb6596cf71532a8c9c233527ca",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0e469b516770ebfb6596cf71532a8c9c233527ca"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 5,
      "deletions": 2
    },
    "files": [
      {
        "sha": "12049100dc826e5d7b24ee49a05ce3ab22a515c2",
        "filename": "contrib/linearize/linearize.py",
        "status": "modified",
        "additions": 5,
        "deletions": 2,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7a29fb59405e32b6274ad1830687e936cab1999f/contrib/linearize/linearize.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7a29fb59405e32b6274ad1830687e936cab1999f/contrib/linearize/linearize.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/linearize.py?ref=7a29fb59405e32b6274ad1830687e936cab1999f",
        "patch": "@@ -73,9 +73,9 @@ def get_blocks(settings):\n \trpc = BitcoinRPC(settings['host'], settings['port'],\n \t\t\t settings['rpcuser'], settings['rpcpass'])\n \n-\toutf = open(settings['output'], 'wb')\n+\toutf = open(settings['output'], 'ab')\n \n-\tfor height in xrange(settings['max_height']+1):\n+\tfor height in xrange(settings['min_height'], settings['max_height']+1):\n \t\tdata = getblock(rpc, settings, height)\n \n \t\touthdr = settings['netmagic']\n@@ -114,6 +114,8 @@ def get_blocks(settings):\n \t\tsettings['host'] = '127.0.0.1'\n \tif 'port' not in settings:\n \t\tsettings['port'] = 8332\n+\tif 'min_height' not in settings:\n+\t\tsettings['min_height'] = 0\n \tif 'max_height' not in settings:\n \t\tsettings['max_height'] = 250000\n \tif 'rpcuser' not in settings or 'rpcpass' not in settings:\n@@ -122,6 +124,7 @@ def get_blocks(settings):\n \n \tsettings['netmagic'] = settings['netmagic'].decode('hex')\n \tsettings['port'] = int(settings['port'])\n+\tsettings['min_height'] = int(settings['min_height'])\n \tsettings['max_height'] = int(settings['max_height'])\n \n \tget_blocks(settings)"
      }
    ]
  },
  {
    "sha": "be2fb2d603476d7490279cf6db034adf1dee6dd3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiZTJmYjJkNjAzNDc2ZDc0OTAyNzljZjZkYjAzNGFkZjFkZWU2ZGQz",
    "commit": {
      "author": {
        "name": "Jeff Garzik",
        "email": "jgarzik@bitpay.com",
        "date": "2014-01-12T19:31:43Z"
      },
      "committer": {
        "name": "Jeff Garzik",
        "email": "jgarzik@bitpay.com",
        "date": "2014-01-12T19:31:43Z"
      },
      "message": "Merge pull request #3518 from Michagogo/linearize-start-value\n\nTweak linearize.py to give more flexibility",
      "tree": {
        "sha": "263955c56ecf74715b1bfaa194317f8879e42505",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/263955c56ecf74715b1bfaa194317f8879e42505"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/be2fb2d603476d7490279cf6db034adf1dee6dd3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/be2fb2d603476d7490279cf6db034adf1dee6dd3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/be2fb2d603476d7490279cf6db034adf1dee6dd3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/be2fb2d603476d7490279cf6db034adf1dee6dd3/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "0e469b516770ebfb6596cf71532a8c9c233527ca",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0e469b516770ebfb6596cf71532a8c9c233527ca",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0e469b516770ebfb6596cf71532a8c9c233527ca"
      },
      {
        "sha": "7a29fb59405e32b6274ad1830687e936cab1999f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7a29fb59405e32b6274ad1830687e936cab1999f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7a29fb59405e32b6274ad1830687e936cab1999f"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 5,
      "deletions": 2
    },
    "files": [
      {
        "sha": "12049100dc826e5d7b24ee49a05ce3ab22a515c2",
        "filename": "contrib/linearize/linearize.py",
        "status": "modified",
        "additions": 5,
        "deletions": 2,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/be2fb2d603476d7490279cf6db034adf1dee6dd3/contrib/linearize/linearize.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/be2fb2d603476d7490279cf6db034adf1dee6dd3/contrib/linearize/linearize.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/linearize.py?ref=be2fb2d603476d7490279cf6db034adf1dee6dd3",
        "patch": "@@ -73,9 +73,9 @@ def get_blocks(settings):\n \trpc = BitcoinRPC(settings['host'], settings['port'],\n \t\t\t settings['rpcuser'], settings['rpcpass'])\n \n-\toutf = open(settings['output'], 'wb')\n+\toutf = open(settings['output'], 'ab')\n \n-\tfor height in xrange(settings['max_height']+1):\n+\tfor height in xrange(settings['min_height'], settings['max_height']+1):\n \t\tdata = getblock(rpc, settings, height)\n \n \t\touthdr = settings['netmagic']\n@@ -114,6 +114,8 @@ def get_blocks(settings):\n \t\tsettings['host'] = '127.0.0.1'\n \tif 'port' not in settings:\n \t\tsettings['port'] = 8332\n+\tif 'min_height' not in settings:\n+\t\tsettings['min_height'] = 0\n \tif 'max_height' not in settings:\n \t\tsettings['max_height'] = 250000\n \tif 'rpcuser' not in settings or 'rpcpass' not in settings:\n@@ -122,6 +124,7 @@ def get_blocks(settings):\n \n \tsettings['netmagic'] = settings['netmagic'].decode('hex')\n \tsettings['port'] = int(settings['port'])\n+\tsettings['min_height'] = int(settings['min_height'])\n \tsettings['max_height'] = int(settings['max_height'])\n \n \tget_blocks(settings)"
      }
    ]
  },
  {
    "sha": "67d60f703140c92825c1439d8988fcab1a350bcd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2N2Q2MGY3MDMxNDBjOTI4MjVjMTQzOWQ4OTg4ZmNhYjFhMzUwYmNk",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-13T09:30:20Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-13T09:33:12Z"
      },
      "message": "build: fix MacOSX build after ec41342\n\nFix regression introduced in ec41342.\n\nAlso use a less ugly solution, by defining the value of\n`MOC_DEFS` in the configure script instead of `Makefile.include`.",
      "tree": {
        "sha": "b5f1cd2dc3a2d27c984b85e2da230a412f7e4767",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b5f1cd2dc3a2d27c984b85e2da230a412f7e4767"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/67d60f703140c92825c1439d8988fcab1a350bcd",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/67d60f703140c92825c1439d8988fcab1a350bcd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/67d60f703140c92825c1439d8988fcab1a350bcd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/67d60f703140c92825c1439d8988fcab1a350bcd/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0e469b516770ebfb6596cf71532a8c9c233527ca",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0e469b516770ebfb6596cf71532a8c9c233527ca",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0e469b516770ebfb6596cf71532a8c9c233527ca"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "b9e6c262ca5b6515cd0303db455decf071f7195a",
        "filename": "src/Makefile.include",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/67d60f703140c92825c1439d8988fcab1a350bcd/src/Makefile.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/67d60f703140c92825c1439d8988fcab1a350bcd/src/Makefile.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.include?ref=67d60f703140c92825c1439d8988fcab1a350bcd",
        "patch": "@@ -12,7 +12,6 @@ LIBBITCOIN_CLI=$(top_builddir)/src/libbitcoin_cli.a\n LIBLEVELDB=$(top_builddir)/src/leveldb/libleveldb.a\n LIBMEMENV=$(top_builddir)/src/leveldb/libmemenv.a\n LIBBITCOINQT=$(top_builddir)/src/qt/libbitcoinqt.a\n-MOC_DEFS=$(DEFS) -I$(top_srcdir)/src\n \n $(LIBBITCOIN):\n \t$(MAKE) -C $(top_builddir)/src $(@F)"
      },
      {
        "sha": "4ae6e4159fe17774e73813cda9e5887ca1d4d331",
        "filename": "src/m4/bitcoin_qt.m4",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/67d60f703140c92825c1439d8988fcab1a350bcd/src/m4/bitcoin_qt.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/67d60f703140c92825c1439d8988fcab1a350bcd/src/m4/bitcoin_qt.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/m4/bitcoin_qt.m4?ref=67d60f703140c92825c1439d8988fcab1a350bcd",
        "patch": "@@ -100,13 +100,13 @@ AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n   BITCOIN_QT_PATH_PROGS([LRELEASE], [lrelease-qt${bitcoin_qt_got_major_vers} lrelease${bitcoin_qt_got_major_vers} lrelease], $qt_bin_path)\n   BITCOIN_QT_PATH_PROGS([LUPDATE], [lupdate-qt${bitcoin_qt_got_major_vers} lupdate${bitcoin_qt_got_major_vers} lupdate],$qt_bin_path, yes)\n \n+  MOC_DEFS='-DHAVE_CONFIG_H -I$(top_srcdir)/src'\n   case $host in\n     *darwin*)\n      BITCOIN_QT_CHECK([\n-       MOC_DEFS=\"-DQ_OS_MAC\"\n+       MOC_DEFS=\"${MOC_DEFS} -DQ_OS_MAC\"\n        base_frameworks=\"-framework Foundation -framework ApplicationServices -framework AppKit\"\n        AX_CHECK_LINK_FLAG([[$base_frameworks]],[QT_LIBS=\"$QT_LIBS $base_frameworks\"],[AC_MSG_ERROR(could not find base frameworks)])\n-       AC_SUBST(MOC_DEFS)\n      ])\n     ;;\n   esac\n@@ -142,6 +142,7 @@ AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n   AC_SUBST(QT_TEST_INCLUDES)\n   AC_SUBST(QT_TEST_LIBS)\n   AC_SUBST(QT_SELECT, qt${bitcoin_qt_got_major_vers})\n+  AC_SUBST(MOC_DEFS)\n ])\n \n dnl All macros below are internal and should _not_ be used from the main"
      }
    ]
  },
  {
    "sha": "a7973c9b6b6c72bca2e6e90aed08553bf708938d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNzk3M2M5YjZiNmM3MmJjYTJlNmU5MGFlZDA4NTUzYmY3MDg5Mzhk",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-13T10:29:32Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-13T10:30:06Z"
      },
      "message": "Merge pull request #3524\n\n67d60f7 build: fix MacOSX build after ec41342 (Wladimir J. van der Laan)",
      "tree": {
        "sha": "ce3949df7b1b72084e334e1464e75c5be681ac4c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ce3949df7b1b72084e334e1464e75c5be681ac4c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a7973c9b6b6c72bca2e6e90aed08553bf708938d",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJS08AuAAoJEHSBCwEjRsmmwxMIAK1zJHgu5gKmO27/Debbsc9R\nEkNdDTv9y7Qvd6uGoqLfMyNUD8MTu3nAygu7kQ6BTneLBRtTk/cCkPAqh2yvFk1n\nBssQBexMNVaHGF/829SkbZViy1xK2q1pS1XK/0LmqTKIdFKyC0r6apVzAhgjm17O\nntGY42q7b2MzrFfgRupDDNhB4p570B8bN+GICLs8qowbM+5A3MEc4ExBr2Tk1CAi\nabuewqmseHWGF1uT7rAy5aWRnnpolp6AlL2jorcJhrzBGWFGKvPgz6LAi81qR31m\nd1vkPUqxatos3PkAZxWQT4NsO6DPOAiiAIX9QOqN990n6aQqdfQ5qZWqcm6vvsY=\n=JMpi\n-----END PGP SIGNATURE-----",
        "payload": "tree ce3949df7b1b72084e334e1464e75c5be681ac4c\nparent be2fb2d603476d7490279cf6db034adf1dee6dd3\nparent 67d60f703140c92825c1439d8988fcab1a350bcd\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1389608972 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1389609006 +0100\n\nMerge pull request #3524\n\n67d60f7 build: fix MacOSX build after ec41342 (Wladimir J. van der Laan)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a7973c9b6b6c72bca2e6e90aed08553bf708938d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a7973c9b6b6c72bca2e6e90aed08553bf708938d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a7973c9b6b6c72bca2e6e90aed08553bf708938d/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "be2fb2d603476d7490279cf6db034adf1dee6dd3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/be2fb2d603476d7490279cf6db034adf1dee6dd3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/be2fb2d603476d7490279cf6db034adf1dee6dd3"
      },
      {
        "sha": "67d60f703140c92825c1439d8988fcab1a350bcd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/67d60f703140c92825c1439d8988fcab1a350bcd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/67d60f703140c92825c1439d8988fcab1a350bcd"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "b9e6c262ca5b6515cd0303db455decf071f7195a",
        "filename": "src/Makefile.include",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a7973c9b6b6c72bca2e6e90aed08553bf708938d/src/Makefile.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a7973c9b6b6c72bca2e6e90aed08553bf708938d/src/Makefile.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.include?ref=a7973c9b6b6c72bca2e6e90aed08553bf708938d",
        "patch": "@@ -12,7 +12,6 @@ LIBBITCOIN_CLI=$(top_builddir)/src/libbitcoin_cli.a\n LIBLEVELDB=$(top_builddir)/src/leveldb/libleveldb.a\n LIBMEMENV=$(top_builddir)/src/leveldb/libmemenv.a\n LIBBITCOINQT=$(top_builddir)/src/qt/libbitcoinqt.a\n-MOC_DEFS=$(DEFS) -I$(top_srcdir)/src\n \n $(LIBBITCOIN):\n \t$(MAKE) -C $(top_builddir)/src $(@F)"
      },
      {
        "sha": "4ae6e4159fe17774e73813cda9e5887ca1d4d331",
        "filename": "src/m4/bitcoin_qt.m4",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a7973c9b6b6c72bca2e6e90aed08553bf708938d/src/m4/bitcoin_qt.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a7973c9b6b6c72bca2e6e90aed08553bf708938d/src/m4/bitcoin_qt.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/m4/bitcoin_qt.m4?ref=a7973c9b6b6c72bca2e6e90aed08553bf708938d",
        "patch": "@@ -100,13 +100,13 @@ AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n   BITCOIN_QT_PATH_PROGS([LRELEASE], [lrelease-qt${bitcoin_qt_got_major_vers} lrelease${bitcoin_qt_got_major_vers} lrelease], $qt_bin_path)\n   BITCOIN_QT_PATH_PROGS([LUPDATE], [lupdate-qt${bitcoin_qt_got_major_vers} lupdate${bitcoin_qt_got_major_vers} lupdate],$qt_bin_path, yes)\n \n+  MOC_DEFS='-DHAVE_CONFIG_H -I$(top_srcdir)/src'\n   case $host in\n     *darwin*)\n      BITCOIN_QT_CHECK([\n-       MOC_DEFS=\"-DQ_OS_MAC\"\n+       MOC_DEFS=\"${MOC_DEFS} -DQ_OS_MAC\"\n        base_frameworks=\"-framework Foundation -framework ApplicationServices -framework AppKit\"\n        AX_CHECK_LINK_FLAG([[$base_frameworks]],[QT_LIBS=\"$QT_LIBS $base_frameworks\"],[AC_MSG_ERROR(could not find base frameworks)])\n-       AC_SUBST(MOC_DEFS)\n      ])\n     ;;\n   esac\n@@ -142,6 +142,7 @@ AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n   AC_SUBST(QT_TEST_INCLUDES)\n   AC_SUBST(QT_TEST_LIBS)\n   AC_SUBST(QT_SELECT, qt${bitcoin_qt_got_major_vers})\n+  AC_SUBST(MOC_DEFS)\n ])\n \n dnl All macros below are internal and should _not_ be used from the main"
      }
    ]
  },
  {
    "sha": "15570cc9aa94b53e95fa847a66e03326c6875d3c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxNTU3MGNjOWFhOTRiNTNlOTVmYTg0N2E2NmUwMzMyNmM2ODc1ZDNj",
    "commit": {
      "author": {
        "name": "harry",
        "email": "harrywu@tvunetworks.com",
        "date": "2014-01-13T10:37:57Z"
      },
      "committer": {
        "name": "harry",
        "email": "harrywu@tvunetworks.com",
        "date": "2014-01-13T10:37:57Z"
      },
      "message": "src/leveldb/Makefile is ignored?\n\nremove the \"-\" in leveldb-* to include src/leveldb/Makefile",
      "tree": {
        "sha": "c63fbd52f8f93648329aab1bf0af3f11bce67397",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c63fbd52f8f93648329aab1bf0af3f11bce67397"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/15570cc9aa94b53e95fa847a66e03326c6875d3c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/15570cc9aa94b53e95fa847a66e03326c6875d3c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/15570cc9aa94b53e95fa847a66e03326c6875d3c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/15570cc9aa94b53e95fa847a66e03326c6875d3c/comments",
    "author": {
      "login": "imwuzhh",
      "id": 5143604,
      "node_id": "MDQ6VXNlcjUxNDM2MDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5143604?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/imwuzhh",
      "html_url": "https://github.com/imwuzhh",
      "followers_url": "https://api.github.com/users/imwuzhh/followers",
      "following_url": "https://api.github.com/users/imwuzhh/following{/other_user}",
      "gists_url": "https://api.github.com/users/imwuzhh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/imwuzhh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/imwuzhh/subscriptions",
      "organizations_url": "https://api.github.com/users/imwuzhh/orgs",
      "repos_url": "https://api.github.com/users/imwuzhh/repos",
      "events_url": "https://api.github.com/users/imwuzhh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/imwuzhh/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "imwuzhh",
      "id": 5143604,
      "node_id": "MDQ6VXNlcjUxNDM2MDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5143604?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/imwuzhh",
      "html_url": "https://github.com/imwuzhh",
      "followers_url": "https://api.github.com/users/imwuzhh/followers",
      "following_url": "https://api.github.com/users/imwuzhh/following{/other_user}",
      "gists_url": "https://api.github.com/users/imwuzhh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/imwuzhh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/imwuzhh/subscriptions",
      "organizations_url": "https://api.github.com/users/imwuzhh/orgs",
      "repos_url": "https://api.github.com/users/imwuzhh/repos",
      "events_url": "https://api.github.com/users/imwuzhh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/imwuzhh/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a7973c9b6b6c72bca2e6e90aed08553bf708938d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a7973c9b6b6c72bca2e6e90aed08553bf708938d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a7973c9b6b6c72bca2e6e90aed08553bf708938d"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "7615fe3915a22783136b90c778c09cef824e6b1f",
        "filename": ".gitignore",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/15570cc9aa94b53e95fa847a66e03326c6875d3c/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/15570cc9aa94b53e95fa847a66e03326c6875d3c/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.gitignore?ref=15570cc9aa94b53e95fa847a66e03326c6875d3c",
        "patch": "@@ -81,4 +81,4 @@ win32-build\n qa/pull-tester/run-bitcoind-for-test.sh\n qa/pull-tester/build-tests.sh\n \n-!src/leveldb-*/Makefile\n+!src/leveldb*/Makefile"
      }
    ]
  },
  {
    "sha": "f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmMTBiMmQ3MGQwOWMyZTlmNWMxNGJhNWUzNjczYzVmYjMxYWE5NDY4",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-13T13:16:48Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-13T13:45:23Z"
      },
      "message": "qt: use series of pngs for spinner\n\nUse a series of .png frames for the spinner instead of a .mng.\n`mng` is an obscure image format and is not built by default into Qt5.\n\nThis appears to improve the crispness of the spinner as well.\n\nDoes not noticably increase the size (still ~27k) and the code\nis not more complicated either.",
      "tree": {
        "sha": "72b26aeba1b3bb47636ffe8e2ece85fc0c44c214",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/72b26aeba1b3bb47636ffe8e2ece85fc0c44c214"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a7973c9b6b6c72bca2e6e90aed08553bf708938d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a7973c9b6b6c72bca2e6e90aed08553bf708938d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a7973c9b6b6c72bca2e6e90aed08553bf708938d"
      }
    ],
    "stats": {
      "total": 76,
      "additions": 55,
      "deletions": 21
    },
    "files": [
      {
        "sha": "220a35212c497903f23f21c53476e1066bd2485f",
        "filename": "contrib/debian/copyright",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/contrib/debian/copyright",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/contrib/debian/copyright",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/copyright?ref=f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468",
        "patch": "@@ -71,7 +71,7 @@ Copyright: Bitboy (optimized for 16x16 by Wladimir van der Laan)\n License: PUB-DOM\n Comment: Site: https://bitcointalk.org/?topic=1756.0\n \n-Files:  scripts/img/reload.xcf, src/qt/res/movies/update_spinner.mng\n+Files:  scripts/img/reload.xcf, src/qt/res/movies/*.png\n Copyright: Everaldo (Everaldo Coelho)\n License: GPL-3+\n Comment: Icon Pack: Kids"
      },
      {
        "sha": "d42be8fb24bd9d636c92a89c7081053da0eb3dd9",
        "filename": "doc/assets-attribution.md",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/doc/assets-attribution.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/doc/assets-attribution.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/assets-attribution.md?ref=f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468",
        "patch": "@@ -76,7 +76,7 @@ Everaldo (Everaldo Coelho)\n * Site: [http://findicons.com/icon/17102/reload?id=17102](http://findicons.com/icon/17102/reload?id=17102)\n \n ### Assets Used\n-\tscripts/img/reload.xcf (modified), src/qt/res/movies/update_spinner.mng\n+\tscripts/img/reload.xcf (modified), src/qt/res/movies/*.png\n \n [Vignoni David](http://www.oxygen-icons.org)\n -----------------------\n@@ -101,4 +101,4 @@ Jonas Schnelli\n \tsrc/qt/res/src/bitcoin.ico, src/qt/res/src/bitcoin.png,\n \tsrc/qt/res/src/bitcoin_testnet.png, docs/bitcoin_logo_doxygen.png,\n \tsrc/qt/res/icons/toolbar.png, src/qt/res/icons/toolbar_testnet.png,\n-\tsrc/qt/res/images/splash.png, src/qt/res/images/splash_testnet.png\n\\ No newline at end of file\n+\tsrc/qt/res/images/splash.png, src/qt/res/images/splash_testnet.png"
      },
      {
        "sha": "9068db9a6334e80234194fa23ba9912338d93841",
        "filename": "share/qt/img/reload.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/share/qt/img/reload.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/share/qt/img/reload.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/qt/img/reload.png?ref=f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468"
      },
      {
        "sha": "bb19e9150815f20b731e516211a8d7845ee57533",
        "filename": "share/qt/make_spinner.py",
        "status": "modified",
        "additions": 4,
        "deletions": 9,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/share/qt/make_spinner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/share/qt/make_spinner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/qt/make_spinner.py?ref=f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468",
        "patch": "@@ -1,16 +1,15 @@\n #!/usr/bin/env python\n # W.J. van der Laan, 2011\n-# Make spinning .mng animation from a .png\n+# Make spinning animation from a .png\n # Requires imagemagick 6.7+\n from __future__ import division\n from os import path\n from PIL import Image\n from subprocess import Popen\n \n-SRC='img/reload_scaled.png'\n-DST='../../src/qt/res/movies/update_spinner.mng'\n-TMPDIR='/tmp'\n-TMPNAME='tmp-%03i.png'\n+SRC='img/reload.png'\n+TMPDIR='../../src/qt/res/movies/'\n+TMPNAME='spinner-%03i.png'\n NUMFRAMES=35\n FRAMERATE=10.0\n CONVERT='convert'\n@@ -36,8 +35,4 @@ def frame_to_filename(frame):\n     im_new.save(outfile, 'png')\n     frame_files.append(outfile)\n \n-p = Popen([CONVERT, \"-delay\", str(FRAMERATE), \"-dispose\", \"2\"] + frame_files + [DST])\n-p.communicate()\n-\n-\n "
      },
      {
        "sha": "274cebcf3ac7159fe997016a9db11a87abdf554b",
        "filename": "src/qt/Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/src/qt/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/src/qt/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/Makefile.am?ref=f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468",
        "patch": "@@ -303,7 +303,7 @@ RES_IMAGES = \\\n   res/images/splash.png \\\n   res/images/splash_testnet.png\n \n-RES_MOVIES = res/movies/update_spinner.mng\n+RES_MOVIES = $(wildcard res/movies/spinner-*.png)\n \n BITCOIN_RC = res/bitcoin-qt-res.rc\n "
      },
      {
        "sha": "746b5a4092b17ccebe7324347027f57dfdd9f873",
        "filename": "src/qt/bitcoin.qrc",
        "status": "modified",
        "additions": 35,
        "deletions": 1,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/src/qt/bitcoin.qrc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/src/qt/bitcoin.qrc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.qrc?ref=f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468",
        "patch": "@@ -47,7 +47,41 @@\n         <file alias=\"splash_testnet\">res/images/splash_testnet.png</file>\n     </qresource>\n     <qresource prefix=\"/movies\">\n-        <file alias=\"update_spinner\">res/movies/update_spinner.mng</file>\n+        <file alias=\"spinner-000\">res/movies/spinner-000.png</file>\n+        <file alias=\"spinner-001\">res/movies/spinner-001.png</file>\n+        <file alias=\"spinner-002\">res/movies/spinner-002.png</file>\n+        <file alias=\"spinner-003\">res/movies/spinner-003.png</file>\n+        <file alias=\"spinner-004\">res/movies/spinner-004.png</file>\n+        <file alias=\"spinner-005\">res/movies/spinner-005.png</file>\n+        <file alias=\"spinner-006\">res/movies/spinner-006.png</file>\n+        <file alias=\"spinner-007\">res/movies/spinner-007.png</file>\n+        <file alias=\"spinner-008\">res/movies/spinner-008.png</file>\n+        <file alias=\"spinner-009\">res/movies/spinner-009.png</file>\n+        <file alias=\"spinner-010\">res/movies/spinner-010.png</file>\n+        <file alias=\"spinner-011\">res/movies/spinner-011.png</file>\n+        <file alias=\"spinner-012\">res/movies/spinner-012.png</file>\n+        <file alias=\"spinner-013\">res/movies/spinner-013.png</file>\n+        <file alias=\"spinner-014\">res/movies/spinner-014.png</file>\n+        <file alias=\"spinner-015\">res/movies/spinner-015.png</file>\n+        <file alias=\"spinner-016\">res/movies/spinner-016.png</file>\n+        <file alias=\"spinner-017\">res/movies/spinner-017.png</file>\n+        <file alias=\"spinner-018\">res/movies/spinner-018.png</file>\n+        <file alias=\"spinner-019\">res/movies/spinner-019.png</file>\n+        <file alias=\"spinner-020\">res/movies/spinner-020.png</file>\n+        <file alias=\"spinner-021\">res/movies/spinner-021.png</file>\n+        <file alias=\"spinner-022\">res/movies/spinner-022.png</file>\n+        <file alias=\"spinner-023\">res/movies/spinner-023.png</file>\n+        <file alias=\"spinner-024\">res/movies/spinner-024.png</file>\n+        <file alias=\"spinner-025\">res/movies/spinner-025.png</file>\n+        <file alias=\"spinner-026\">res/movies/spinner-026.png</file>\n+        <file alias=\"spinner-027\">res/movies/spinner-027.png</file>\n+        <file alias=\"spinner-028\">res/movies/spinner-028.png</file>\n+        <file alias=\"spinner-029\">res/movies/spinner-029.png</file>\n+        <file alias=\"spinner-030\">res/movies/spinner-030.png</file>\n+        <file alias=\"spinner-031\">res/movies/spinner-031.png</file>\n+        <file alias=\"spinner-032\">res/movies/spinner-032.png</file>\n+        <file alias=\"spinner-033\">res/movies/spinner-033.png</file>\n+        <file alias=\"spinner-034\">res/movies/spinner-034.png</file>\n     </qresource>\n     <qresource prefix=\"/translations\">\n         <file alias=\"ach\">locale/bitcoin_ach.qm</file>"
      },
      {
        "sha": "c29595050b894977265c3e322d4242702ceb0e28",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 6,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468",
        "patch": "@@ -39,7 +39,6 @@\n #include <QMenuBar>\n #include <QMessageBox>\n #include <QMimeData>\n-#include <QMovie>\n #include <QProgressBar>\n #include <QSettings>\n #include <QStackedWidget>\n@@ -68,7 +67,8 @@ BitcoinGUI::BitcoinGUI(bool fIsTestnet, QWidget *parent) :\n     trayIcon(0),\n     notificator(0),\n     rpcConsole(0),\n-    prevBlocks(0)\n+    prevBlocks(0),\n+    spinnerFrame(0)\n {\n     GUIUtil::restoreWindowGeometry(\"nWindow\", QSize(850, 550), this);\n \n@@ -187,8 +187,6 @@ BitcoinGUI::BitcoinGUI(bool fIsTestnet, QWidget *parent) :\n     statusBar()->addWidget(progressBar);\n     statusBar()->addPermanentWidget(frameBlocks);\n \n-    syncIconMovie = new QMovie(\":/movies/update_spinner\", \"mng\", this);\n-\n     connect(openRPCConsoleAction, SIGNAL(triggered()), rpcConsole, SLOT(show()));\n \n     // prevents an oben debug window from becoming stuck/unusable on client shutdown\n@@ -684,9 +682,13 @@ void BitcoinGUI::setNumBlocks(int count, int nTotalBlocks)\n         progressBar->setVisible(true);\n \n         tooltip = tr(\"Catching up...\") + QString(\"<br>\") + tooltip;\n-        labelBlocksIcon->setMovie(syncIconMovie);\n         if(count != prevBlocks)\n-            syncIconMovie->jumpToNextFrame();\n+        {\n+            labelBlocksIcon->setPixmap(QIcon(QString(\n+                \":/movies/spinner-%1\").arg(spinnerFrame, 3, 10, QChar('0')))\n+                .pixmap(STATUSBAR_ICONSIZE, STATUSBAR_ICONSIZE));\n+            spinnerFrame = (spinnerFrame + 1) % SPINNER_FRAMES;\n+        }\n         prevBlocks = count;\n \n #ifdef ENABLE_WALLET"
      },
      {
        "sha": "d5bbdca484137047980d9c869565f4eff706215b",
        "filename": "src/qt/bitcoingui.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/src/qt/bitcoingui.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/src/qt/bitcoingui.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.h?ref=f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468",
        "patch": "@@ -98,9 +98,9 @@ class BitcoinGUI : public QMainWindow\n     Notificator *notificator;\n     RPCConsole *rpcConsole;\n \n-    QMovie *syncIconMovie;\n     /** Keep track of previous number of blocks, to detect progress */\n     int prevBlocks;\n+    int spinnerFrame;\n \n     /** Create the main UI actions. */\n     void createActions(bool fIsTestnet);"
      },
      {
        "sha": "d1a601706bbe486641f9f5277e220a45acb40268",
        "filename": "src/qt/guiconstants.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/src/qt/guiconstants.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/src/qt/guiconstants.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiconstants.h?ref=f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468",
        "patch": "@@ -38,4 +38,7 @@ static const int MAX_PAYMENT_REQUEST_SIZE = 50000; // bytes\n /* QRCodeDialog -- size of exported QR Code image */\n #define EXPORT_IMAGE_SIZE 256\n \n+/* Number of frames in spinner animation */\n+#define SPINNER_FRAMES 35\n+\n #endif // GUICONSTANTS_H"
      },
      {
        "sha": "1f4fb732ef3685c2026e1094b1d52134b504cdf0",
        "filename": "src/qt/res/movies/spinner-000.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/src/qt/res/movies/spinner-000.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/src/qt/res/movies/spinner-000.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/movies/spinner-000.png?ref=f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468"
      },
      {
        "sha": "e6ca67a1b0e849250988fe936a1bf5a96e922b79",
        "filename": "src/qt/res/movies/spinner-001.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/src/qt/res/movies/spinner-001.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/src/qt/res/movies/spinner-001.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/movies/spinner-001.png?ref=f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468"
      },
      {
        "sha": "2360467affd6aa493a1cc59b27d66b824d4bbdc8",
        "filename": "src/qt/res/movies/spinner-002.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/src/qt/res/movies/spinner-002.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/src/qt/res/movies/spinner-002.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/movies/spinner-002.png?ref=f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468"
      },
      {
        "sha": "52bed625661a41dcb99b78d372578d81689649cf",
        "filename": "src/qt/res/movies/spinner-003.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/src/qt/res/movies/spinner-003.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/src/qt/res/movies/spinner-003.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/movies/spinner-003.png?ref=f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468"
      },
      {
        "sha": "de5c88a56f7a80e1b1fc2e918d9a771360fef6cf",
        "filename": "src/qt/res/movies/spinner-004.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/src/qt/res/movies/spinner-004.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/src/qt/res/movies/spinner-004.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/movies/spinner-004.png?ref=f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468"
      },
      {
        "sha": "27b30336a15296d84390d1383c5d0fb4c61f66a0",
        "filename": "src/qt/res/movies/spinner-005.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/src/qt/res/movies/spinner-005.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/src/qt/res/movies/spinner-005.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/movies/spinner-005.png?ref=f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468"
      },
      {
        "sha": "1fa6b0e242a32769cf266e046d06321048224d60",
        "filename": "src/qt/res/movies/spinner-006.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/src/qt/res/movies/spinner-006.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/src/qt/res/movies/spinner-006.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/movies/spinner-006.png?ref=f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468"
      },
      {
        "sha": "f54fa8775e4959146e3813e22bea555edd85bd7c",
        "filename": "src/qt/res/movies/spinner-007.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/src/qt/res/movies/spinner-007.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/src/qt/res/movies/spinner-007.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/movies/spinner-007.png?ref=f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468"
      },
      {
        "sha": "d25aa5300f19de303007c83b24425e7b80173b2c",
        "filename": "src/qt/res/movies/spinner-008.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/src/qt/res/movies/spinner-008.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/src/qt/res/movies/spinner-008.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/movies/spinner-008.png?ref=f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468"
      },
      {
        "sha": "1349b875861bf2a9ff67b7e0319c4aea7573172c",
        "filename": "src/qt/res/movies/spinner-009.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/src/qt/res/movies/spinner-009.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/src/qt/res/movies/spinner-009.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/movies/spinner-009.png?ref=f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468"
      },
      {
        "sha": "6020e275f11bed91c15c2cda17c99283d8ca6c78",
        "filename": "src/qt/res/movies/spinner-010.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/src/qt/res/movies/spinner-010.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/src/qt/res/movies/spinner-010.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/movies/spinner-010.png?ref=f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468"
      },
      {
        "sha": "0d0e811ea7a38844f48aa045aca89eccf683a51d",
        "filename": "src/qt/res/movies/spinner-011.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/src/qt/res/movies/spinner-011.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/src/qt/res/movies/spinner-011.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/movies/spinner-011.png?ref=f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468"
      },
      {
        "sha": "937afb6be2a067e72ff2c6379c8af8f4d942f69b",
        "filename": "src/qt/res/movies/spinner-012.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/src/qt/res/movies/spinner-012.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/src/qt/res/movies/spinner-012.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/movies/spinner-012.png?ref=f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468"
      },
      {
        "sha": "4ae5a671a34d1911be0215dd8348ebb6e5340864",
        "filename": "src/qt/res/movies/spinner-013.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/src/qt/res/movies/spinner-013.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/src/qt/res/movies/spinner-013.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/movies/spinner-013.png?ref=f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468"
      },
      {
        "sha": "c3a81add0e870a748db0c0b8f76519b6df2311b6",
        "filename": "src/qt/res/movies/spinner-014.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/src/qt/res/movies/spinner-014.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/src/qt/res/movies/spinner-014.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/movies/spinner-014.png?ref=f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468"
      },
      {
        "sha": "184a9fe4249b059254e16c5e801b9d84d6cc9c69",
        "filename": "src/qt/res/movies/spinner-015.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/src/qt/res/movies/spinner-015.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/src/qt/res/movies/spinner-015.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/movies/spinner-015.png?ref=f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468"
      },
      {
        "sha": "2da9b9dc72398915a9e9917ecefd7a25d8e29ee1",
        "filename": "src/qt/res/movies/spinner-016.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/src/qt/res/movies/spinner-016.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/src/qt/res/movies/spinner-016.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/movies/spinner-016.png?ref=f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468"
      },
      {
        "sha": "ada83fbe84743773d4c2305e7ba584c7266faf64",
        "filename": "src/qt/res/movies/spinner-017.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/src/qt/res/movies/spinner-017.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/src/qt/res/movies/spinner-017.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/movies/spinner-017.png?ref=f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468"
      },
      {
        "sha": "cc436ba8cbb077aa696e5bdac62e93f2e4507b26",
        "filename": "src/qt/res/movies/spinner-018.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/src/qt/res/movies/spinner-018.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/src/qt/res/movies/spinner-018.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/movies/spinner-018.png?ref=f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468"
      },
      {
        "sha": "03da25bc2a71fb490710b287fe18cce3c2f61d50",
        "filename": "src/qt/res/movies/spinner-019.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/src/qt/res/movies/spinner-019.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/src/qt/res/movies/spinner-019.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/movies/spinner-019.png?ref=f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468"
      },
      {
        "sha": "e7f2ac78e8843da3e07639c4e5a72713a8cd8923",
        "filename": "src/qt/res/movies/spinner-020.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/src/qt/res/movies/spinner-020.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/src/qt/res/movies/spinner-020.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/movies/spinner-020.png?ref=f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468"
      },
      {
        "sha": "dc9e580bf38a40b80fea356b50171cb864182eb4",
        "filename": "src/qt/res/movies/spinner-021.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/src/qt/res/movies/spinner-021.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/src/qt/res/movies/spinner-021.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/movies/spinner-021.png?ref=f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468"
      },
      {
        "sha": "6e236c805e6ff1f53a8aa4a6b8567bc14141ae90",
        "filename": "src/qt/res/movies/spinner-022.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/src/qt/res/movies/spinner-022.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/src/qt/res/movies/spinner-022.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/movies/spinner-022.png?ref=f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468"
      },
      {
        "sha": "f1c32284858cff8176698031db664e679b3a8c92",
        "filename": "src/qt/res/movies/spinner-023.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/src/qt/res/movies/spinner-023.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/src/qt/res/movies/spinner-023.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/movies/spinner-023.png?ref=f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468"
      },
      {
        "sha": "d8cf21f1783f308ea754714ef01087c9ba6ca904",
        "filename": "src/qt/res/movies/spinner-024.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/src/qt/res/movies/spinner-024.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/src/qt/res/movies/spinner-024.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/movies/spinner-024.png?ref=f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468"
      },
      {
        "sha": "2b5ede32934e29854e7e82cfd060e6e56233f07a",
        "filename": "src/qt/res/movies/spinner-025.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/src/qt/res/movies/spinner-025.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/src/qt/res/movies/spinner-025.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/movies/spinner-025.png?ref=f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468"
      },
      {
        "sha": "5ee3d2fa8ef37adb6ef8acc2d39ada07fb8e71f5",
        "filename": "src/qt/res/movies/spinner-026.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/src/qt/res/movies/spinner-026.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/src/qt/res/movies/spinner-026.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/movies/spinner-026.png?ref=f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468"
      },
      {
        "sha": "c2ee8082bdbaa0a5115555f15890b12dc3954759",
        "filename": "src/qt/res/movies/spinner-027.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/src/qt/res/movies/spinner-027.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/src/qt/res/movies/spinner-027.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/movies/spinner-027.png?ref=f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468"
      },
      {
        "sha": "f70d3531adaad1df3c3535f5e5ba96053691a8c9",
        "filename": "src/qt/res/movies/spinner-028.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/src/qt/res/movies/spinner-028.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/src/qt/res/movies/spinner-028.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/movies/spinner-028.png?ref=f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468"
      },
      {
        "sha": "02b97207a95e7748fc506ed6cfd22089ab2b1ecf",
        "filename": "src/qt/res/movies/spinner-029.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/src/qt/res/movies/spinner-029.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/src/qt/res/movies/spinner-029.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/movies/spinner-029.png?ref=f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468"
      },
      {
        "sha": "0c74e82c6f8be6fb7d093b4ddc0ebfebd04fc98a",
        "filename": "src/qt/res/movies/spinner-030.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/src/qt/res/movies/spinner-030.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/src/qt/res/movies/spinner-030.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/movies/spinner-030.png?ref=f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468"
      },
      {
        "sha": "c5e29bcec7e9154c506ce83a88226cc49dc778ba",
        "filename": "src/qt/res/movies/spinner-031.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/src/qt/res/movies/spinner-031.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/src/qt/res/movies/spinner-031.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/movies/spinner-031.png?ref=f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468"
      },
      {
        "sha": "d72c9bf0dd33440e89a7b54d3aee8348d4f2c76a",
        "filename": "src/qt/res/movies/spinner-032.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/src/qt/res/movies/spinner-032.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/src/qt/res/movies/spinner-032.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/movies/spinner-032.png?ref=f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468"
      },
      {
        "sha": "a8b822bfaf24df1c8359008d91ef0a9e4bc27507",
        "filename": "src/qt/res/movies/spinner-033.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/src/qt/res/movies/spinner-033.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/src/qt/res/movies/spinner-033.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/movies/spinner-033.png?ref=f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468"
      },
      {
        "sha": "684aa385e01d954a347c1dbbf85bb58ee694920c",
        "filename": "src/qt/res/movies/spinner-034.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/src/qt/res/movies/spinner-034.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468/src/qt/res/movies/spinner-034.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/movies/spinner-034.png?ref=f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468"
      },
      {
        "sha": "7df3baac6f9045553ebc88e3eb6aaf9fafa37e29",
        "filename": "src/qt/res/movies/update_spinner.mng",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a7973c9b6b6c72bca2e6e90aed08553bf708938d/src/qt/res/movies/update_spinner.mng",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a7973c9b6b6c72bca2e6e90aed08553bf708938d/src/qt/res/movies/update_spinner.mng",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/movies/update_spinner.mng?ref=a7973c9b6b6c72bca2e6e90aed08553bf708938d"
      }
    ]
  },
  {
    "sha": "66a8829a332409e812aa5e7c7a2ef65adaf8250c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2NmE4ODI5YTMzMjQwOWU4MTJhYTVlN2M3YTJlZjY1YWRhZjgyNTBj",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-13T16:05:55Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-13T16:05:55Z"
      },
      "message": "qt: Minor message updates\n\nUsed sending/receiving addresses -> Sending/receiving addresses\nPreviously requested payments -> Requested payments (idea from @cozz in #3521)",
      "tree": {
        "sha": "059dff2ecd0f15f3a08dcad1768f8ad551f7e1af",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/059dff2ecd0f15f3a08dcad1768f8ad551f7e1af"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/66a8829a332409e812aa5e7c7a2ef65adaf8250c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/66a8829a332409e812aa5e7c7a2ef65adaf8250c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/66a8829a332409e812aa5e7c7a2ef65adaf8250c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/66a8829a332409e812aa5e7c7a2ef65adaf8250c/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a7973c9b6b6c72bca2e6e90aed08553bf708938d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a7973c9b6b6c72bca2e6e90aed08553bf708938d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a7973c9b6b6c72bca2e6e90aed08553bf708938d"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "67ffa330d746a7f7b45a37a4e4e6623dbcfcf2e0",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/66a8829a332409e812aa5e7c7a2ef65adaf8250c/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/66a8829a332409e812aa5e7c7a2ef65adaf8250c/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=66a8829a332409e812aa5e7c7a2ef65adaf8250c",
        "patch": "@@ -302,12 +302,12 @@ void BitcoinGUI::createActions(bool fIsTestnet)\n     openRPCConsoleAction = new QAction(QIcon(\":/icons/debugwindow\"), tr(\"&Debug window\"), this);\n     openRPCConsoleAction->setStatusTip(tr(\"Open debugging and diagnostic console\"));\n \n-    usedSendingAddressesAction = new QAction(QIcon(\":/icons/address-book\"), tr(\"&Used sending addresses...\"), this);\n+    usedSendingAddressesAction = new QAction(QIcon(\":/icons/address-book\"), tr(\"&Sending addresses...\"), this);\n     usedSendingAddressesAction->setStatusTip(tr(\"Show the list of used sending addresses and labels\"));\n-    usedReceivingAddressesAction = new QAction(QIcon(\":/icons/address-book\"), tr(\"Used &receiving addresses...\"), this);\n+    usedReceivingAddressesAction = new QAction(QIcon(\":/icons/address-book\"), tr(\"&Receiving addresses...\"), this);\n     usedReceivingAddressesAction->setStatusTip(tr(\"Show the list of used receiving addresses and labels\"));\n \n-    openAction = new QAction(QApplication::style()->standardIcon(QStyle::SP_FileIcon), tr(\"Open URI...\"), this);\n+    openAction = new QAction(QApplication::style()->standardIcon(QStyle::SP_FileIcon), tr(\"Open &URI...\"), this);\n     openAction->setStatusTip(tr(\"Open a bitcoin: URI or payment request\"));\n \n     connect(quitAction, SIGNAL(triggered()), qApp, SLOT(quit()));"
      },
      {
        "sha": "8242763e77696b7d728e9c343154dbe6bc303ce5",
        "filename": "src/qt/forms/receivecoinsdialog.ui",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/66a8829a332409e812aa5e7c7a2ef65adaf8250c/src/qt/forms/receivecoinsdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/66a8829a332409e812aa5e7c7a2ef65adaf8250c/src/qt/forms/receivecoinsdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/receivecoinsdialog.ui?ref=66a8829a332409e812aa5e7c7a2ef65adaf8250c",
        "patch": "@@ -202,7 +202,7 @@\n          </font>\n         </property>\n         <property name=\"text\">\n-         <string>Previously requested payments</string>\n+         <string>Requested payments</string>\n         </property>\n        </widget>\n       </item>"
      }
    ]
  },
  {
    "sha": "f126973fd0052a99bb9d8db8416657c43e2b3d94",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmMTI2OTczZmQwMDUyYTk5YmI5ZDhkYjg0MTY2NTdjNDNlMmIzZDk0",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-13T16:09:48Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-13T16:11:05Z"
      },
      "message": "Merge pull request #3374\n\nbd70562 [Qt] add messages when handling local payment request files (Philip Kaufmann)",
      "tree": {
        "sha": "a9aa0a406ffe50a52fdc6c37c946ce06f2f3a12d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a9aa0a406ffe50a52fdc6c37c946ce06f2f3a12d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f126973fd0052a99bb9d8db8416657c43e2b3d94",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJS1BAZAAoJEHSBCwEjRsmmCQoIALZFdzS1G3iVpzSLrpCc32RA\njrewpWCd2hpDqSb2r9VirwUFSWTAILJtBF66qxYXovoljWBhug2De4a8UiSlzxUF\nD679hBRN+7Wf4HBQ07iF9wjNCdti9ipxLLt0R/ct6e2pqsVzPPkXDDbEStAE07pU\nI5lWdM3bxlH4lpjMiMIeWpvNJcu2RWQQWonLCdxsbulIYkcXX3elkiximZX5CdP3\nSJt6Zw5FEv7daap6AJw2BwBEpoDiqZEjwEx0UVy6UsZkkjj9QZpuboqA2lG6Yej6\nmqZZRaqcQJ7r63R6irMtuXnpTxFsgYB69kjAMvYhDqUYuLSB7Bf7kPi8Z2DtSIc=\n=EBos\n-----END PGP SIGNATURE-----",
        "payload": "tree a9aa0a406ffe50a52fdc6c37c946ce06f2f3a12d\nparent a7973c9b6b6c72bca2e6e90aed08553bf708938d\nparent bd70562f660552973dcf99e00c7897ae884661da\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1389629388 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1389629465 +0100\n\nMerge pull request #3374\n\nbd70562 [Qt] add messages when handling local payment request files (Philip Kaufmann)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f126973fd0052a99bb9d8db8416657c43e2b3d94",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f126973fd0052a99bb9d8db8416657c43e2b3d94",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f126973fd0052a99bb9d8db8416657c43e2b3d94/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a7973c9b6b6c72bca2e6e90aed08553bf708938d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a7973c9b6b6c72bca2e6e90aed08553bf708938d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a7973c9b6b6c72bca2e6e90aed08553bf708938d"
      },
      {
        "sha": "bd70562f660552973dcf99e00c7897ae884661da",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bd70562f660552973dcf99e00c7897ae884661da",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bd70562f660552973dcf99e00c7897ae884661da"
      }
    ],
    "stats": {
      "total": 54,
      "additions": 37,
      "deletions": 17
    },
    "files": [
      {
        "sha": "e22ac43fb2124e5f79b21bd0c15527134426b9e2",
        "filename": "src/qt/paymentserver.cpp",
        "status": "modified",
        "additions": 36,
        "deletions": 16,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f126973fd0052a99bb9d8db8416657c43e2b3d94/src/qt/paymentserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f126973fd0052a99bb9d8db8416657c43e2b3d94/src/qt/paymentserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/paymentserver.cpp?ref=f126973fd0052a99bb9d8db8416657c43e2b3d94",
        "patch": "@@ -382,40 +382,52 @@ void PaymentServer::handleURIOrFile(const QString& s)\n #else\n         QUrlQuery uri((QUrl(s)));\n #endif\n-        if (uri.hasQueryItem(\"r\"))\n+        if (uri.hasQueryItem(\"r\")) // payment request URI\n         {\n             QByteArray temp;\n             temp.append(uri.queryItemValue(\"r\"));\n             QString decoded = QUrl::fromPercentEncoding(temp);\n             QUrl fetchUrl(decoded, QUrl::StrictMode);\n \n-            qDebug() << \"PaymentServer::handleURIOrFile : fetchRequest(\" << fetchUrl << \")\";\n-\n             if (fetchUrl.isValid())\n+            {\n+                qDebug() << \"PaymentServer::handleURIOrFile : fetchRequest(\" << fetchUrl << \")\";\n                 fetchRequest(fetchUrl);\n+            }\n             else\n+            {\n                 qDebug() << \"PaymentServer::handleURIOrFile : Invalid URL: \" << fetchUrl;\n+                emit message(tr(\"URI handling\"),\n+                    tr(\"Payment request fetch URL is invalid: %1\").arg(fetchUrl.toString()),\n+                    CClientUIInterface::ICON_WARNING);\n+            }\n \n             return;\n         }\n+        else // normal URI\n+        {\n+            SendCoinsRecipient recipient;\n+            if (GUIUtil::parseBitcoinURI(s, &recipient))\n+                emit receivedPaymentRequest(recipient);\n+            else\n+                emit message(tr(\"URI handling\"),\n+                    tr(\"URI can not be parsed! This can be caused by an invalid Bitcoin address or malformed URI parameters.\"),\n+                    CClientUIInterface::ICON_WARNING);\n \n-        SendCoinsRecipient recipient;\n-        if (GUIUtil::parseBitcoinURI(s, &recipient))\n-            emit receivedPaymentRequest(recipient);\n-        else\n-            emit message(tr(\"URI handling\"),\n-                tr(\"URI can not be parsed! This can be caused by an invalid Bitcoin address or malformed URI parameters.\"),\n-                CClientUIInterface::ICON_WARNING);\n-\n-        return;\n+            return;\n+        }\n     }\n \n-    if (QFile::exists(s))\n+    if (QFile::exists(s)) // payment request file\n     {\n         PaymentRequestPlus request;\n         SendCoinsRecipient recipient;\n         if (readPaymentRequest(s, request) && processPaymentRequest(request, recipient))\n             emit receivedPaymentRequest(recipient);\n+        else\n+            emit message(tr(\"Payment request file handling\"),\n+                tr(\"Payment request file can not be read or processed! This can be caused by an invalid payment request file.\"),\n+                CClientUIInterface::ICON_WARNING);\n \n         return;\n     }\n@@ -594,7 +606,7 @@ void PaymentServer::netRequestFinished(QNetworkReply* reply)\n             .arg(reply->errorString());\n \n         qDebug() << \"PaymentServer::netRequestFinished : \" << msg;\n-        emit message(tr(\"Network request error\"), msg, CClientUIInterface::MSG_ERROR);\n+        emit message(tr(\"Payment request error\"), msg, CClientUIInterface::MSG_ERROR);\n         return;\n     }\n \n@@ -606,9 +618,16 @@ void PaymentServer::netRequestFinished(QNetworkReply* reply)\n         PaymentRequestPlus request;\n         SendCoinsRecipient recipient;\n         if (request.parse(data) && processPaymentRequest(request, recipient))\n+        {\n             emit receivedPaymentRequest(recipient);\n+        }\n         else\n+        {\n             qDebug() << \"PaymentServer::netRequestFinished : Error processing payment request\";\n+            emit message(tr(\"Payment request error\"),\n+                tr(\"Payment request can not be parsed or processed!\"),\n+                CClientUIInterface::MSG_ERROR);\n+        }\n \n         return;\n     }\n@@ -621,9 +640,10 @@ void PaymentServer::netRequestFinished(QNetworkReply* reply)\n                 .arg(reply->request().url().toString());\n \n             qDebug() << \"PaymentServer::netRequestFinished : \" << msg;\n-            emit message(tr(\"Network request error\"), msg, CClientUIInterface::MSG_ERROR);\n+            emit message(tr(\"Payment request error\"), msg, CClientUIInterface::MSG_ERROR);\n         }\n-        else {\n+        else\n+        {\n             emit receivedPaymentACK(GUIUtil::HtmlEscape(paymentACK.memo()));\n         }\n     }"
      },
      {
        "sha": "af19661bdd96bbb0140f6f9a57f4ec5bb627b6f0",
        "filename": "src/qt/paymentserver.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f126973fd0052a99bb9d8db8416657c43e2b3d94/src/qt/paymentserver.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f126973fd0052a99bb9d8db8416657c43e2b3d94/src/qt/paymentserver.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/paymentserver.h?ref=f126973fd0052a99bb9d8db8416657c43e2b3d94",
        "patch": "@@ -102,7 +102,7 @@ public slots:\n     // Submit Payment message to a merchant, get back PaymentACK:\n     void fetchPaymentACK(CWallet* wallet, SendCoinsRecipient recipient, QByteArray transaction);\n \n-    // Handle an incoming URI or file\n+    // Handle an incoming URI, URI with local file scheme or file\n     void handleURIOrFile(const QString& s);\n \n private slots:"
      }
    ]
  },
  {
    "sha": "c7930c859ee4d8f0d681cf2771437ef35465df9c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNzkzMGM4NTllZTRkOGYwZDY4MWNmMjc3MTQzN2VmMzU0NjVkZjlj",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-13T16:35:11Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-13T16:35:17Z"
      },
      "message": "Merge pull request #3528\n\n66a8829 qt: Minor message updates (Wladimir J. van der Laan)",
      "tree": {
        "sha": "9651a3f2b76e4e6bea32957daa8b58b799b69234",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9651a3f2b76e4e6bea32957daa8b58b799b69234"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c7930c859ee4d8f0d681cf2771437ef35465df9c",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJS1BXFAAoJEHSBCwEjRsmmCPkH/jHDUVbRdpVZTpIxQsDsjdd/\npm/xGSdD85cIY3+moNQ9BxxjsmQMIshs4cOiXouFdkEMGjFdOdrf+ZEGKt9tghMA\nfvV9n3AghD/SPGafjkuhO1BU4q0b/j/DuMLYfxc02EnHEOrve07JqMPNWGVCOp/1\nHIdHOpdXw6/UDtonZ3tyfqWUdhFdnr7OKHd/5X/nD30sqsWo8NybL9CmGBrMGHE8\n+tlnvzn0yticTaFEMGiWA1FtjiKdPBofvj5YRyDwFO3sDdu72BzzuiLq8dbWAWEh\nZEfNP8oS3S4fHthBcWDMXCgaIulOEgHZ9kWNjy+8qw9Fw8TEWi1fkAQecywxRMM=\n=7vQI\n-----END PGP SIGNATURE-----",
        "payload": "tree 9651a3f2b76e4e6bea32957daa8b58b799b69234\nparent f126973fd0052a99bb9d8db8416657c43e2b3d94\nparent 66a8829a332409e812aa5e7c7a2ef65adaf8250c\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1389630911 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1389630917 +0100\n\nMerge pull request #3528\n\n66a8829 qt: Minor message updates (Wladimir J. van der Laan)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c7930c859ee4d8f0d681cf2771437ef35465df9c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c7930c859ee4d8f0d681cf2771437ef35465df9c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c7930c859ee4d8f0d681cf2771437ef35465df9c/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f126973fd0052a99bb9d8db8416657c43e2b3d94",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f126973fd0052a99bb9d8db8416657c43e2b3d94",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f126973fd0052a99bb9d8db8416657c43e2b3d94"
      },
      {
        "sha": "66a8829a332409e812aa5e7c7a2ef65adaf8250c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/66a8829a332409e812aa5e7c7a2ef65adaf8250c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/66a8829a332409e812aa5e7c7a2ef65adaf8250c"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "67ffa330d746a7f7b45a37a4e4e6623dbcfcf2e0",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c7930c859ee4d8f0d681cf2771437ef35465df9c/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c7930c859ee4d8f0d681cf2771437ef35465df9c/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=c7930c859ee4d8f0d681cf2771437ef35465df9c",
        "patch": "@@ -302,12 +302,12 @@ void BitcoinGUI::createActions(bool fIsTestnet)\n     openRPCConsoleAction = new QAction(QIcon(\":/icons/debugwindow\"), tr(\"&Debug window\"), this);\n     openRPCConsoleAction->setStatusTip(tr(\"Open debugging and diagnostic console\"));\n \n-    usedSendingAddressesAction = new QAction(QIcon(\":/icons/address-book\"), tr(\"&Used sending addresses...\"), this);\n+    usedSendingAddressesAction = new QAction(QIcon(\":/icons/address-book\"), tr(\"&Sending addresses...\"), this);\n     usedSendingAddressesAction->setStatusTip(tr(\"Show the list of used sending addresses and labels\"));\n-    usedReceivingAddressesAction = new QAction(QIcon(\":/icons/address-book\"), tr(\"Used &receiving addresses...\"), this);\n+    usedReceivingAddressesAction = new QAction(QIcon(\":/icons/address-book\"), tr(\"&Receiving addresses...\"), this);\n     usedReceivingAddressesAction->setStatusTip(tr(\"Show the list of used receiving addresses and labels\"));\n \n-    openAction = new QAction(QApplication::style()->standardIcon(QStyle::SP_FileIcon), tr(\"Open URI...\"), this);\n+    openAction = new QAction(QApplication::style()->standardIcon(QStyle::SP_FileIcon), tr(\"Open &URI...\"), this);\n     openAction->setStatusTip(tr(\"Open a bitcoin: URI or payment request\"));\n \n     connect(quitAction, SIGNAL(triggered()), qApp, SLOT(quit()));"
      },
      {
        "sha": "8242763e77696b7d728e9c343154dbe6bc303ce5",
        "filename": "src/qt/forms/receivecoinsdialog.ui",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c7930c859ee4d8f0d681cf2771437ef35465df9c/src/qt/forms/receivecoinsdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c7930c859ee4d8f0d681cf2771437ef35465df9c/src/qt/forms/receivecoinsdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/receivecoinsdialog.ui?ref=c7930c859ee4d8f0d681cf2771437ef35465df9c",
        "patch": "@@ -202,7 +202,7 @@\n          </font>\n         </property>\n         <property name=\"text\">\n-         <string>Previously requested payments</string>\n+         <string>Requested payments</string>\n         </property>\n        </widget>\n       </item>"
      }
    ]
  },
  {
    "sha": "f087ce889156985762cd6d6e3768a54b54c68524",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmMDg3Y2U4ODkxNTY5ODU3NjJjZDZkNmUzNzY4YTU0YjU0YzY4NTI0",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-13T16:36:24Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-13T16:36:24Z"
      },
      "message": "qt: English translation update",
      "tree": {
        "sha": "a33a44110e69ccefc91a8fe6a620ab807bc50b59",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a33a44110e69ccefc91a8fe6a620ab807bc50b59"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f087ce889156985762cd6d6e3768a54b54c68524",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f087ce889156985762cd6d6e3768a54b54c68524",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f087ce889156985762cd6d6e3768a54b54c68524",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f087ce889156985762cd6d6e3768a54b54c68524/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c7930c859ee4d8f0d681cf2771437ef35465df9c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c7930c859ee4d8f0d681cf2771437ef35465df9c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c7930c859ee4d8f0d681cf2771437ef35465df9c"
      }
    ],
    "stats": {
      "total": 495,
      "additions": 286,
      "deletions": 209
    },
    "files": [
      {
        "sha": "b88c7ec290e3fe34663c3a9daffbfe3b11ec57fc",
        "filename": "src/qt/bitcoinstrings.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f087ce889156985762cd6d6e3768a54b54c68524/src/qt/bitcoinstrings.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f087ce889156985762cd6d6e3768a54b54c68524/src/qt/bitcoinstrings.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoinstrings.cpp?ref=f087ce889156985762cd6d6e3768a54b54c68524",
        "patch": "@@ -40,6 +40,9 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"be solved instantly. This is intended for regression testing tools and app \"\n \"development.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n+\"Enter regression test mode, which uses a special chain in which blocks can \"\n+\"be solved instantly.\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Error: The transaction was rejected! This might happen if some of the coins \"\n \"in your wallet were already spent, such as if you used a copy of wallet.dat \"\n \"and coins were spent in the copy but not marked as spent here.\"),\n@@ -119,6 +122,7 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Connect to JSON-RPC on <port> (default: 8332\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Connect to a node to retrieve peer addresses, and disconnect\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Corrupted block database detected\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Discover own IP address (default: 1 when listening and no -externalip)\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Do not load the wallet and disable wallet RPC calls\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Do you want to rebuild the block database now?\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Done loading\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Error initializing block database\"),\n@@ -185,7 +189,6 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Select SOCKS version for -proxy (4 or 5, defa\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Send command to Bitcoin server\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Send commands to node running on <ip> (default: 127.0.0.1)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Send trace/debug info to console instead of debug.log file\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Send trace/debug info to debugger\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Server certificate file (default: server.cert)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Server private key (default: server.pem)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Set database cache size in megabytes (default: 25)\"),\n@@ -204,6 +207,7 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Specify your own public address\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Start Bitcoin server\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"System error: \"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"This help message\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"This is intended for regression testing tools and app development.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Threshold for disconnecting misbehaving peers (default: 100)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"To use the %s option\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Transaction amount too small\"),\n@@ -225,6 +229,7 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Verifying wallet...\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Wait for RPC server to start\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Wallet %s resides outside data directory %s\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Wallet needed to be rewritten: restart Bitcoin to complete\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Wallet options:\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Warning\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Warning: Deprecated argument -debugnet ignored, use -debug=net\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Warning: This version is obsolete, upgrade required!\"),"
      },
      {
        "sha": "f52544687b05bff26bddb2240cdb41a1726993fb",
        "filename": "src/qt/locale/bitcoin_en.ts",
        "status": "modified",
        "additions": 280,
        "deletions": 208,
        "changes": 488,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f087ce889156985762cd6d6e3768a54b54c68524/src/qt/locale/bitcoin_en.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f087ce889156985762cd6d6e3768a54b54c68524/src/qt/locale/bitcoin_en.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_en.ts?ref=f087ce889156985762cd6d6e3768a54b54c68524",
        "patch": "@@ -321,25 +321,44 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation>Wallet passphrase was successfully changed.</translation>\n     </message>\n </context>\n+<context>\n+    <name>BitcoinApplication</name>\n+    <message>\n+        <location filename=\"../bitcoin.cpp\" line=\"+362\"/>\n+        <source>Bitcoin Core is shutting down...\n+</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Do not shut down the computer until this window disappears.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+</context>\n <context>\n     <name>BitcoinGUI</name>\n     <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"+260\"/>\n+        <location filename=\"../bitcoingui.cpp\" line=\"+297\"/>\n         <source>Sign &amp;message...</source>\n         <translation>Sign &amp;message...</translation>\n     </message>\n     <message>\n-        <location line=\"+290\"/>\n+        <location line=\"+323\"/>\n         <source>Synchronizing with network...</source>\n         <translation>Synchronizing with network...</translation>\n     </message>\n     <message>\n-        <location line=\"-360\"/>\n+        <location line=\"-395\"/>\n         <source>&amp;Overview</source>\n         <translation>&amp;Overview</translation>\n     </message>\n     <message>\n-        <location line=\"+1\"/>\n+        <location line=\"-139\"/>\n+        <source>Node</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+140\"/>\n         <source>Show general overview of wallet</source>\n         <translation>Show general overview of wallet</translation>\n     </message>\n@@ -354,7 +373,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation>Browse transaction history</translation>\n     </message>\n     <message>\n-        <location line=\"+15\"/>\n+        <location line=\"+17\"/>\n         <source>E&amp;xit</source>\n         <translation>E&amp;xit</translation>\n     </message>\n@@ -400,7 +419,22 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation>&amp;Change Passphrase...</translation>\n     </message>\n     <message>\n-        <location line=\"+295\"/>\n+        <location line=\"+10\"/>\n+        <source>&amp;Sending addresses...</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+2\"/>\n+        <source>&amp;Receiving addresses...</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>Open &amp;URI...</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+313\"/>\n         <source>Importing blocks from disk...</source>\n         <translation>Importing blocks from disk...</translation>\n     </message>\n@@ -410,12 +444,12 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation>Reindexing blocks on disk...</translation>\n     </message>\n     <message>\n-        <location line=\"-358\"/>\n+        <location line=\"-393\"/>\n         <source>Send coins to a Bitcoin address</source>\n         <translation>Send coins to a Bitcoin address</translation>\n     </message>\n     <message>\n-        <location line=\"+47\"/>\n+        <location line=\"+49\"/>\n         <source>Modify configuration options for Bitcoin</source>\n         <translation>Modify configuration options for Bitcoin</translation>\n     </message>\n@@ -445,18 +479,17 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation>&amp;Verify message...</translation>\n     </message>\n     <message>\n-        <location line=\"+375\"/>\n+        <location line=\"+414\"/>\n         <source>Bitcoin</source>\n         <translation>Bitcoin</translation>\n     </message>\n     <message>\n-        <location line=\"-563\"/>\n-        <location line=\"+10\"/>\n+        <location line=\"-629\"/>\n         <source>Wallet</source>\n         <translation>Wallet</translation>\n     </message>\n     <message>\n-        <location line=\"+113\"/>\n+        <location line=\"+148\"/>\n         <source>&amp;Send</source>\n         <translation>&amp;Send</translation>\n     </message>\n@@ -466,7 +499,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation>&amp;Receive</translation>\n     </message>\n     <message>\n-        <location line=\"+44\"/>\n+        <location line=\"+46\"/>\n         <location line=\"+2\"/>\n         <source>&amp;Show / Hide</source>\n         <translation>&amp;Show / Hide</translation>\n@@ -492,86 +525,70 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation>Verify messages to ensure they were signed with specified Bitcoin addresses</translation>\n     </message>\n     <message>\n-        <location line=\"+39\"/>\n+        <location line=\"+44\"/>\n         <source>&amp;File</source>\n         <translation>&amp;File</translation>\n     </message>\n     <message>\n-        <location line=\"+11\"/>\n+        <location line=\"+14\"/>\n         <source>&amp;Settings</source>\n         <translation>&amp;Settings</translation>\n     </message>\n     <message>\n-        <location line=\"+6\"/>\n+        <location line=\"+9\"/>\n         <source>&amp;Help</source>\n         <translation>&amp;Help</translation>\n     </message>\n     <message>\n-        <location line=\"+9\"/>\n+        <location line=\"+14\"/>\n         <source>Tabs toolbar</source>\n         <translation>Tabs toolbar</translation>\n     </message>\n     <message>\n-        <location line=\"-244\"/>\n-        <location line=\"+321\"/>\n+        <location line=\"-281\"/>\n+        <location line=\"+373\"/>\n         <source>[testnet]</source>\n         <translation>[testnet]</translation>\n     </message>\n     <message>\n-        <location line=\"-331\"/>\n-        <location line=\"+10\"/>\n+        <location line=\"-398\"/>\n         <source>Bitcoin Core</source>\n         <translation type=\"unfinished\">Bitcoin Core</translation>\n     </message>\n     <message>\n-        <location line=\"+121\"/>\n+        <location line=\"+165\"/>\n         <source>Request payments (generates QR codes and bitcoin: URIs)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+27\"/>\n+        <location line=\"+29\"/>\n         <location line=\"+2\"/>\n         <source>&amp;About Bitcoin Core</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+34\"/>\n-        <source>&amp;Used sending addresses...</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location line=\"+1\"/>\n+        <location line=\"+35\"/>\n         <source>Show the list of used sending addresses and labels</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n-    <message>\n-        <location line=\"+1\"/>\n-        <source>Used &amp;receiving addresses...</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location line=\"+1\"/>\n-        <source>Show the list of used receiving addresses and labels</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n     <message>\n         <location line=\"+2\"/>\n-        <source>Open URI...</source>\n+        <source>Show the list of used receiving addresses and labels</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+1\"/>\n+        <location line=\"+3\"/>\n         <source>Open a bitcoin: URI or payment request</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+126\"/>\n+        <location line=\"+157\"/>\n         <location line=\"+5\"/>\n         <source>Bitcoin client</source>\n         <translation>Bitcoin client</translation>\n     </message>\n     <message numerus=\"yes\">\n-        <location line=\"+133\"/>\n+        <location line=\"+135\"/>\n         <source>%n active connection(s) to Bitcoin network</source>\n         <translation>\n             <numerusform>%n active connection to Bitcoin network</numerusform>\n@@ -594,7 +611,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation>Processed %1 blocks of transaction history.</translation>\n     </message>\n     <message numerus=\"yes\">\n-        <location line=\"+20\"/>\n+        <location line=\"+23\"/>\n         <source>%n hour(s)</source>\n         <translation>\n             <numerusform>%n hour</numerusform>\n@@ -623,7 +640,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation>%1 behind</translation>\n     </message>\n     <message>\n-        <location line=\"+14\"/>\n+        <location line=\"+17\"/>\n         <source>Last received block was generated %1 ago.</source>\n         <translation>Last received block was generated %1 ago.</translation>\n     </message>\n@@ -648,27 +665,17 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation>Information</translation>\n     </message>\n     <message>\n-        <location line=\"+77\"/>\n-        <source>This transaction is over the size limit. You can still send it for a fee of %1, which goes to the nodes that process your transaction and helps to support the network. Do you want to pay the fee?</source>\n-        <translation>This transaction is over the size limit. You can still send it for a fee of %1, which goes to the nodes that process your transaction and helps to support the network. Do you want to pay the fee?</translation>\n-    </message>\n-    <message>\n-        <location line=\"-152\"/>\n+        <location line=\"-81\"/>\n         <source>Up to date</source>\n         <translation>Up to date</translation>\n     </message>\n     <message>\n-        <location line=\"+31\"/>\n+        <location line=\"+34\"/>\n         <source>Catching up...</source>\n         <translation>Catching up...</translation>\n     </message>\n     <message>\n-        <location line=\"+124\"/>\n-        <source>Confirm transaction fee</source>\n-        <translation>Confirm transaction fee</translation>\n-    </message>\n-    <message>\n-        <location line=\"+8\"/>\n+        <location line=\"+126\"/>\n         <source>Sent transaction</source>\n         <translation>Sent transaction</translation>\n     </message>\n@@ -691,7 +698,7 @@ Address: %4\n </translation>\n     </message>\n     <message>\n-        <location line=\"+67\"/>\n+        <location line=\"+69\"/>\n         <source>Wallet is &lt;b&gt;encrypted&lt;/b&gt; and currently &lt;b&gt;unlocked&lt;/b&gt;</source>\n         <translation>Wallet is &lt;b&gt;encrypted&lt;/b&gt; and currently &lt;b&gt;unlocked&lt;/b&gt;</translation>\n     </message>\n@@ -701,7 +708,7 @@ Address: %4\n         <translation>Wallet is &lt;b&gt;encrypted&lt;/b&gt; and currently &lt;b&gt;locked&lt;/b&gt;</translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoin.cpp\" line=\"+116\"/>\n+        <location filename=\"../bitcoin.cpp\" line=\"+78\"/>\n         <source>A fatal error occurred. Bitcoin can no longer continue safely and will quit.</source>\n         <translation>A fatal error occurred. Bitcoin can no longer continue safely and will quit.</translation>\n     </message>\n@@ -923,7 +930,12 @@ Address: %4\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+171\"/>\n+        <location line=\"+31\"/>\n+        <source>none</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+140\"/>\n         <source>Dust</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -960,7 +972,7 @@ Address: %4\n     </message>\n     <message>\n         <location line=\"+1\"/>\n-        <source>This label turns red, if the priority is smaller than &quot;medium&quot;</source>\n+        <source>This label turns red, if the priority is smaller than &quot;medium&quot;.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n@@ -1029,7 +1041,7 @@ Address: %4\n         <translation>&amp;Address</translation>\n     </message>\n     <message>\n-        <location filename=\"../editaddressdialog.cpp\" line=\"+25\"/>\n+        <location filename=\"../editaddressdialog.cpp\" line=\"+28\"/>\n         <source>New receiving address</source>\n         <translation>New receiving address</translation>\n     </message>\n@@ -1240,7 +1252,7 @@ Address: %4\n         <translation>Options</translation>\n     </message>\n     <message>\n-        <location line=\"+16\"/>\n+        <location line=\"+13\"/>\n         <source>&amp;Main</source>\n         <translation>&amp;Main</translation>\n     </message>\n@@ -1265,7 +1277,47 @@ Address: %4\n         <translation>&amp;Start Bitcoin on system login</translation>\n     </message>\n     <message>\n-        <location line=\"+35\"/>\n+        <location line=\"+9\"/>\n+        <source>Size of &amp;database cache</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+13\"/>\n+        <source>Set database cache size in megabytes (default: 25)</source>\n+        <translation type=\"unfinished\">Set database cache size in megabytes (default: 25)</translation>\n+    </message>\n+    <message>\n+        <location line=\"+13\"/>\n+        <source>MB</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+27\"/>\n+        <source>Number of script &amp;verification threads</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+13\"/>\n+        <source>Set the number of script verification threads (up to 16, 0 = auto, &lt;0 = leave that many cores free, default: 0)</source>\n+        <translation type=\"unfinished\">Set the number of script verification threads (up to 16, 0 = auto, &lt;0 = leave that many cores free, default: 0)</translation>\n+    </message>\n+    <message>\n+        <location line=\"+58\"/>\n+        <source>Connect to the Bitcoin network through a SOCKS proxy.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>&amp;Connect through SOCKS proxy (default proxy):</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+34\"/>\n+        <source>IP address of the proxy (e.g. IPv4: 127.0.0.1 / IPv6: ::1)</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+267\"/>\n         <source>Reset all client options to default.</source>\n         <translation>Reset all client options to default.</translation>\n     </message>\n@@ -1275,7 +1327,7 @@ Address: %4\n         <translation>&amp;Reset Options</translation>\n     </message>\n     <message>\n-        <location line=\"+13\"/>\n+        <location line=\"-323\"/>\n         <source>&amp;Network</source>\n         <translation>&amp;Network</translation>\n     </message>\n@@ -1290,32 +1342,17 @@ Address: %4\n         <translation>Map port using &amp;UPnP</translation>\n     </message>\n     <message>\n-        <location line=\"+7\"/>\n-        <source>Connect to the Bitcoin network through a SOCKS proxy (e.g. when connecting through Tor).</source>\n-        <translation>Connect to the Bitcoin network through a SOCKS proxy (e.g. when connecting through Tor).</translation>\n-    </message>\n-    <message>\n-        <location line=\"+3\"/>\n-        <source>&amp;Connect through SOCKS proxy:</source>\n-        <translation>&amp;Connect through SOCKS proxy:</translation>\n-    </message>\n-    <message>\n-        <location line=\"+9\"/>\n+        <location line=\"+19\"/>\n         <source>Proxy &amp;IP:</source>\n         <translation>Proxy &amp;IP:</translation>\n     </message>\n     <message>\n-        <location line=\"+19\"/>\n-        <source>IP address of the proxy (e.g. 127.0.0.1)</source>\n-        <translation>IP address of the proxy (e.g. 127.0.0.1)</translation>\n-    </message>\n-    <message>\n-        <location line=\"+7\"/>\n+        <location line=\"+32\"/>\n         <source>&amp;Port:</source>\n         <translation>&amp;Port:</translation>\n     </message>\n     <message>\n-        <location line=\"+19\"/>\n+        <location line=\"+25\"/>\n         <source>Port of the proxy (e.g. 9050)</source>\n         <translation>Port of the proxy (e.g. 9050)</translation>\n     </message>\n@@ -1400,7 +1437,12 @@ Address: %4\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+71\"/>\n+        <location line=\"+29\"/>\n+        <source>Active command-line options that override above options: </source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+107\"/>\n         <source>&amp;OK</source>\n         <translation>&amp;OK</translation>\n     </message>\n@@ -1410,44 +1452,38 @@ Address: %4\n         <translation>&amp;Cancel</translation>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n-        <source>&amp;Apply</source>\n-        <translation>&amp;Apply</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../optionsdialog.cpp\" line=\"+63\"/>\n+        <location filename=\"../optionsdialog.cpp\" line=\"+68\"/>\n         <source>default</source>\n         <translation>default</translation>\n     </message>\n     <message>\n-        <location line=\"+131\"/>\n+        <location line=\"+57\"/>\n+        <source>none</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+75\"/>\n         <source>Confirm options reset</source>\n         <translation>Confirm options reset</translation>\n     </message>\n     <message>\n         <location line=\"+1\"/>\n-        <source>Some settings may require a client restart to take effect.</source>\n-        <translation>Some settings may require a client restart to take effect.</translation>\n-    </message>\n-    <message>\n-        <location line=\"+0\"/>\n-        <source>Do you want to proceed?</source>\n-        <translation>Do you want to proceed?</translation>\n+        <location line=\"+29\"/>\n+        <source>Client restart required to activate changes.</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+42\"/>\n-        <location line=\"+9\"/>\n-        <source>Warning</source>\n-        <translation>Warning</translation>\n+        <location line=\"-29\"/>\n+        <source>Client will be shutdown, do you want to proceed?</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"-9\"/>\n-        <location line=\"+9\"/>\n-        <source>This setting will take effect after restarting Bitcoin.</source>\n-        <translation>This setting will take effect after restarting Bitcoin.</translation>\n+        <location line=\"+33\"/>\n+        <source>This change would require a client restart.</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+29\"/>\n+        <location line=\"+34\"/>\n         <source>The supplied proxy address is invalid.</source>\n         <translation>The supplied proxy address is invalid.</translation>\n     </message>\n@@ -1461,22 +1497,22 @@ Address: %4\n     </message>\n     <message>\n         <location line=\"+50\"/>\n-        <location line=\"+214\"/>\n+        <location line=\"+231\"/>\n         <source>The displayed information may be out of date. Your wallet automatically synchronizes with the Bitcoin network after a connection is established, but this process has not completed yet.</source>\n         <translation>The displayed information may be out of date. Your wallet automatically synchronizes with the Bitcoin network after a connection is established, but this process has not completed yet.</translation>\n     </message>\n     <message>\n-        <location line=\"-140\"/>\n+        <location line=\"-155\"/>\n         <source>Unconfirmed:</source>\n         <translation>Unconfirmed:</translation>\n     </message>\n     <message>\n-        <location line=\"-81\"/>\n+        <location line=\"-83\"/>\n         <source>Wallet</source>\n         <translation>Wallet</translation>\n     </message>\n     <message>\n-        <location line=\"+49\"/>\n+        <location line=\"+51\"/>\n         <source>Confirmed:</source>\n         <translation>Confirmed:</translation>\n     </message>\n@@ -1511,7 +1547,7 @@ Address: %4\n         <translation>Your current total balance</translation>\n     </message>\n     <message>\n-        <location line=\"+56\"/>\n+        <location line=\"+71\"/>\n         <source>&lt;b&gt;Recent transactions&lt;/b&gt;</source>\n         <translation>&lt;b&gt;Recent transactions&lt;/b&gt;</translation>\n     </message>\n@@ -1525,7 +1561,8 @@ Address: %4\n <context>\n     <name>PaymentServer</name>\n     <message>\n-        <location filename=\"../paymentserver.cpp\" line=\"+397\"/>\n+        <location filename=\"../paymentserver.cpp\" line=\"+400\"/>\n+        <location line=\"+13\"/>\n         <source>URI handling</source>\n         <translation type=\"unfinished\">URI handling</translation>\n     </message>\n@@ -1535,24 +1572,42 @@ Address: %4\n         <translation type=\"unfinished\">URI can not be parsed! This can be caused by an invalid Bitcoin address or malformed URI parameters.</translation>\n     </message>\n     <message>\n-        <location line=\"+91\"/>\n+        <location line=\"+96\"/>\n         <source>Requested payment amount of %1 is too small (considered dust).</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"-204\"/>\n-        <location line=\"+195\"/>\n+        <location line=\"-216\"/>\n+        <location line=\"+207\"/>\n         <location line=\"+13\"/>\n+        <location line=\"+95\"/>\n+        <location line=\"+18\"/>\n+        <location line=\"+16\"/>\n         <source>Payment request error</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"-207\"/>\n+        <location line=\"-348\"/>\n         <source>Cannot start bitcoin: click-to-pay handler</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+195\"/>\n+        <location line=\"+106\"/>\n+        <source>Payment request fetch URL is invalid: %1</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+27\"/>\n+        <source>Payment request file handling</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Payment request file can not be read or processed! This can be caused by an invalid payment request file.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+73\"/>\n         <source>Unverified payment requests to custom payment scripts are unsupported.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -1562,43 +1617,46 @@ Address: %4\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+42\"/>\n+        <location line=\"+43\"/>\n         <source>Error communicating with %1: %2</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+28\"/>\n+        <location line=\"+24\"/>\n+        <source>Payment request can not be parsed or processed!</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+11\"/>\n         <source>Bad response from server %1</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+32\"/>\n+        <location line=\"+33\"/>\n         <source>Payment acknowledged</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"-55\"/>\n-        <location line=\"+27\"/>\n-        <location line=\"+17\"/>\n+        <location line=\"-11\"/>\n         <source>Network request error</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n </context>\n <context>\n     <name>QObject</name>\n     <message>\n-        <location filename=\"../bitcoin.cpp\" line=\"+119\"/>\n-        <location line=\"+5\"/>\n+        <location filename=\"../bitcoin.cpp\" line=\"+71\"/>\n+        <location line=\"+11\"/>\n         <source>Bitcoin</source>\n         <translation>Bitcoin</translation>\n     </message>\n     <message>\n-        <location line=\"-4\"/>\n+        <location line=\"+1\"/>\n         <source>Error: Specified data directory &quot;%1&quot; does not exist.</source>\n         <translation>Error: Specified data directory &quot;%1&quot; does not exist.</translation>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n+        <location line=\"-12\"/>\n         <source>Error: Invalid combination of -regtest and -testnet.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -1640,15 +1698,16 @@ Address: %4\n         <location line=\"+23\"/>\n         <location line=\"+23\"/>\n         <location line=\"+36\"/>\n-        <location line=\"+53\"/>\n+        <location line=\"+23\"/>\n+        <location line=\"+36\"/>\n         <location line=\"+23\"/>\n         <location line=\"+23\"/>\n         <location filename=\"../rpcconsole.cpp\" line=\"+360\"/>\n         <source>N/A</source>\n         <translation>N/A</translation>\n     </message>\n     <message>\n-        <location line=\"-217\"/>\n+        <location line=\"-223\"/>\n         <source>Client version</source>\n         <translation>Client version</translation>\n     </message>\n@@ -1663,7 +1722,12 @@ Address: %4\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+78\"/>\n+        <location line=\"+25\"/>\n+        <source>General</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+53\"/>\n         <source>Using OpenSSL version</source>\n         <translation>Using OpenSSL version</translation>\n     </message>\n@@ -1679,16 +1743,16 @@ Address: %4\n     </message>\n     <message>\n         <location line=\"+7\"/>\n-        <source>Number of connections</source>\n-        <translation>Number of connections</translation>\n+        <source>Name</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n         <location line=\"+23\"/>\n-        <source>On testnet</source>\n-        <translation>On testnet</translation>\n+        <source>Number of connections</source>\n+        <translation>Number of connections</translation>\n     </message>\n     <message>\n-        <location line=\"+23\"/>\n+        <location line=\"+29\"/>\n         <source>Block chain</source>\n         <translation>Block chain</translation>\n     </message>\n@@ -1753,17 +1817,12 @@ Address: %4\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"-541\"/>\n+        <location line=\"-547\"/>\n         <source>Build date</source>\n         <translation>Build date</translation>\n     </message>\n     <message>\n-        <location line=\"-79\"/>\n-        <source>Bitcoin Core</source>\n-        <translation>Bitcoin Core</translation>\n-    </message>\n-    <message>\n-        <location line=\"+279\"/>\n+        <location line=\"+206\"/>\n         <source>Debug log file</source>\n         <translation>Debug log file</translation>\n     </message>\n@@ -1897,7 +1956,7 @@ Address: %4\n     </message>\n     <message>\n         <location line=\"+47\"/>\n-        <source>Previously requested payments</source>\n+        <source>Requested payments</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n@@ -1992,7 +2051,7 @@ Address: %4\n <context>\n     <name>RecentRequestsTableModel</name>\n     <message>\n-        <location filename=\"../recentrequeststablemodel.cpp\" line=\"+14\"/>\n+        <location filename=\"../recentrequeststablemodel.cpp\" line=\"+17\"/>\n         <source>Date</source>\n         <translation type=\"unfinished\">Date</translation>\n     </message>\n@@ -2012,7 +2071,7 @@ Address: %4\n         <translation type=\"unfinished\">Amount</translation>\n     </message>\n     <message>\n-        <location line=\"+36\"/>\n+        <location line=\"+38\"/>\n         <source>(no label)</source>\n         <translation type=\"unfinished\">(no label)</translation>\n     </message>\n@@ -2027,7 +2086,7 @@ Address: %4\n     <message>\n         <location filename=\"../forms/sendcoinsdialog.ui\" line=\"+14\"/>\n         <location filename=\"../sendcoinsdialog.cpp\" line=\"+381\"/>\n-        <location line=\"+81\"/>\n+        <location line=\"+80\"/>\n         <source>Send Coins</source>\n         <translation>Send Coins</translation>\n     </message>\n@@ -2137,7 +2196,7 @@ Address: %4\n         <translation>S&amp;end</translation>\n     </message>\n     <message>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"-229\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"-228\"/>\n         <source>Confirm send coins</source>\n         <translation>Confirm send coins</translation>\n     </message>\n@@ -2240,22 +2299,22 @@ Address: %4\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+113\"/>\n+        <location line=\"+112\"/>\n         <source>Warning: Invalid Bitcoin address</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+13\"/>\n+        <location line=\"+21\"/>\n         <source>(no label)</source>\n         <translation type=\"unfinished\">(no label)</translation>\n     </message>\n     <message>\n-        <location line=\"+8\"/>\n+        <location line=\"-11\"/>\n         <source>Warning: Unknown change address</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"-378\"/>\n+        <location line=\"-366\"/>\n         <source>Are you sure you want to send?</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -2565,7 +2624,7 @@ Address: %4\n <context>\n     <name>SplashScreen</name>\n     <message>\n-        <location filename=\"../splashscreen.cpp\" line=\"+26\"/>\n+        <location filename=\"../splashscreen.cpp\" line=\"+28\"/>\n         <source>Bitcoin Core</source>\n         <translation type=\"unfinished\">Bitcoin Core</translation>\n     </message>\n@@ -2811,8 +2870,13 @@ Address: %4\n         <source>Amount</source>\n         <translation>Amount</translation>\n     </message>\n+    <message>\n+        <location line=\"+59\"/>\n+        <source>Immature (%1 confirmations, will be available after %2)</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n     <message numerus=\"yes\">\n-        <location line=\"+57\"/>\n+        <location line=\"+16\"/>\n         <source>Open for %n more block(s)</source>\n         <translation>\n             <numerusform>Open for %n more block</numerusform>\n@@ -2835,20 +2899,13 @@ Address: %4\n         <translation>Unconfirmed (%1 of %2 confirmations)</translation>\n     </message>\n     <message>\n-        <location line=\"+3\"/>\n+        <location line=\"-22\"/>\n+        <location line=\"+25\"/>\n         <source>Confirmed (%1 confirmations)</source>\n         <translation>Confirmed (%1 confirmations)</translation>\n     </message>\n-    <message numerus=\"yes\">\n-        <location line=\"+8\"/>\n-        <source>Mined balance will be available when it matures in %n more block(s)</source>\n-        <translation>\n-            <numerusform>Mined balance will be available when it matures in %n more block</numerusform>\n-            <numerusform>Mined balance will be available when it matures in %n more blocks</numerusform>\n-        </translation>\n-    </message>\n     <message>\n-        <location line=\"+5\"/>\n+        <location line=\"-22\"/>\n         <source>This block was not received by any other nodes and will probably not be accepted!</source>\n         <translation>This block was not received by any other nodes and will probably not be accepted!</translation>\n     </message>\n@@ -2858,7 +2915,7 @@ Address: %4\n         <translation>Generated but not accepted</translation>\n     </message>\n     <message>\n-        <location line=\"+43\"/>\n+        <location line=\"+62\"/>\n         <source>Received with</source>\n         <translation>Received with</translation>\n     </message>\n@@ -3154,7 +3211,7 @@ Address: %4\n <context>\n     <name>bitcoin-core</name>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"+217\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"+221\"/>\n         <source>Usage:</source>\n         <translation>Usage:</translation>\n     </message>\n@@ -3174,7 +3231,7 @@ Address: %4\n         <translation>Options:</translation>\n     </message>\n     <message>\n-        <location line=\"+23\"/>\n+        <location line=\"+22\"/>\n         <source>Specify configuration file (default: bitcoin.conf)</source>\n         <translation>Specify configuration file (default: bitcoin.conf)</translation>\n     </message>\n@@ -3194,7 +3251,7 @@ Address: %4\n         <translation>Set database cache size in megabytes (default: 25)</translation>\n     </message>\n     <message>\n-        <location line=\"-27\"/>\n+        <location line=\"-26\"/>\n         <source>Listen for connections on &lt;port&gt; (default: 8333 or testnet: 18333)</source>\n         <translation>Listen for connections on &lt;port&gt; (default: 8333 or testnet: 18333)</translation>\n     </message>\n@@ -3204,7 +3261,7 @@ Address: %4\n         <translation>Maintain at most &lt;n&gt; connections to peers (default: 125)</translation>\n     </message>\n     <message>\n-        <location line=\"-50\"/>\n+        <location line=\"-51\"/>\n         <source>Connect to a node to retrieve peer addresses, and disconnect</source>\n         <translation>Connect to a node to retrieve peer addresses, and disconnect</translation>\n     </message>\n@@ -3214,22 +3271,22 @@ Address: %4\n         <translation>Specify your own public address</translation>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n+        <location line=\"+5\"/>\n         <source>Threshold for disconnecting misbehaving peers (default: 100)</source>\n         <translation>Threshold for disconnecting misbehaving peers (default: 100)</translation>\n     </message>\n     <message>\n-        <location line=\"-147\"/>\n+        <location line=\"-148\"/>\n         <source>Number of seconds to keep misbehaving peers from reconnecting (default: 86400)</source>\n         <translation>Number of seconds to keep misbehaving peers from reconnecting (default: 86400)</translation>\n     </message>\n     <message>\n-        <location line=\"-33\"/>\n+        <location line=\"-36\"/>\n         <source>An error occurred while setting up the RPC port %u for listening on IPv4: %s</source>\n         <translation>An error occurred while setting up the RPC port %u for listening on IPv4: %s</translation>\n     </message>\n     <message>\n-        <location line=\"+31\"/>\n+        <location line=\"+34\"/>\n         <source>Listen for JSON-RPC connections on &lt;port&gt; (default: 8332 or testnet: 18332)</source>\n         <translation>Listen for JSON-RPC connections on &lt;port&gt; (default: 8332 or testnet: 18332)</translation>\n     </message>\n@@ -3239,7 +3296,7 @@ Address: %4\n         <translation>Accept command line and JSON-RPC commands</translation>\n     </message>\n     <message>\n-        <location line=\"+79\"/>\n+        <location line=\"+80\"/>\n         <source>Run in the background as a daemon and accept commands</source>\n         <translation>Run in the background as a daemon and accept commands</translation>\n     </message>\n@@ -3249,12 +3306,12 @@ Address: %4\n         <translation>Use the test network</translation>\n     </message>\n     <message>\n-        <location line=\"-117\"/>\n+        <location line=\"-118\"/>\n         <source>Accept connections from outside (default: 1 if no -proxy or -connect)</source>\n         <translation>Accept connections from outside (default: 1 if no -proxy or -connect)</translation>\n     </message>\n     <message>\n-        <location line=\"-92\"/>\n+        <location line=\"-95\"/>\n         <source>%s, you must set a rpcpassword in the configuration file:\n %s\n It is recommended you use the following random password:\n@@ -3305,6 +3362,11 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n     </message>\n     <message>\n         <location line=\"+4\"/>\n+        <source>Enter regression test mode, which uses a special chain in which blocks can be solved instantly.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n         <source>Error: The transaction was rejected! This might happen if some of the coins in your wallet were already spent, such as if you used a copy of wallet.dat and coins were spent in the copy but not marked as spent here.</source>\n         <translation>Error: The transaction was rejected! This might happen if some of the coins in your wallet were already spent, such as if you used a copy of wallet.dat and coins were spent in the copy but not marked as spent here.</translation>\n     </message>\n@@ -3408,6 +3470,11 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <source>Discover own IP address (default: 1 when listening and no -externalip)</source>\n         <translation>Discover own IP address (default: 1 when listening and no -externalip)</translation>\n     </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Do not load the wallet and disable wallet RPC calls</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n     <message>\n         <location line=\"+1\"/>\n         <source>Do you want to rebuild the block database now?</source>\n@@ -3574,7 +3641,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+8\"/>\n+        <location line=\"+7\"/>\n         <source>Set maximum block size in bytes (default: %d)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -3594,7 +3661,12 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+12\"/>\n+        <location line=\"+3\"/>\n+        <source>This is intended for regression testing tools and app development.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+10\"/>\n         <source>Usage (deprecated, use bitcoin-cli):</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -3619,7 +3691,12 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>Wallet %s resides outside data directory %s</translation>\n     </message>\n     <message>\n-        <location line=\"+3\"/>\n+        <location line=\"+2\"/>\n+        <source>Wallet options:</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+2\"/>\n         <source>Warning: Deprecated argument -debugnet ignored, use -debug=net</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -3629,12 +3706,12 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>You need to rebuild the database using -reindex to change -txindex</translation>\n     </message>\n     <message>\n-        <location line=\"-78\"/>\n+        <location line=\"-79\"/>\n         <source>Imports blocks from external blk000??.dat file</source>\n         <translation>Imports blocks from external blk000??.dat file</translation>\n     </message>\n     <message>\n-        <location line=\"-104\"/>\n+        <location line=\"-105\"/>\n         <source>Execute command when a relevant alert is received or we see a really long fork (%s in cmd is replaced by message)</source>\n         <translation>Execute command when a relevant alert is received or we see a really long fork (%s in cmd is replaced by message)</translation>\n     </message>\n@@ -3654,7 +3731,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>Set the number of script verification threads (up to 16, 0 = auto, &lt;0 = leave that many cores free, default: 0)</translation>\n     </message>\n     <message>\n-        <location line=\"+88\"/>\n+        <location line=\"+89\"/>\n         <source>Information</source>\n         <translation>Information</translation>\n     </message>\n@@ -3703,11 +3780,6 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <source>Send trace/debug info to console instead of debug.log file</source>\n         <translation>Send trace/debug info to console instead of debug.log file</translation>\n     </message>\n-    <message>\n-        <location line=\"+1\"/>\n-        <source>Send trace/debug info to debugger</source>\n-        <translation>Send trace/debug info to debugger</translation>\n-    </message>\n     <message>\n         <location line=\"+6\"/>\n         <source>Set minimum block size in bytes (default: 0)</source>\n@@ -3734,7 +3806,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>System error: </translation>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n+        <location line=\"+5\"/>\n         <source>Transaction amount too small</source>\n         <translation>Transaction amount too small</translation>\n     </message>\n@@ -3764,7 +3836,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>Username for JSON-RPC connections</translation>\n     </message>\n     <message>\n-        <location line=\"+6\"/>\n+        <location line=\"+7\"/>\n         <source>Warning</source>\n         <translation>Warning</translation>\n     </message>\n@@ -3784,37 +3856,37 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>wallet.dat corrupt, salvage failed</translation>\n     </message>\n     <message>\n-        <location line=\"-57\"/>\n+        <location line=\"-58\"/>\n         <source>Password for JSON-RPC connections</source>\n         <translation>Password for JSON-RPC connections</translation>\n     </message>\n     <message>\n-        <location line=\"-69\"/>\n+        <location line=\"-70\"/>\n         <source>Allow JSON-RPC connections from specified IP address</source>\n         <translation>Allow JSON-RPC connections from specified IP address</translation>\n     </message>\n     <message>\n-        <location line=\"+79\"/>\n+        <location line=\"+80\"/>\n         <source>Send commands to node running on &lt;ip&gt; (default: 127.0.0.1)</source>\n         <translation>Send commands to node running on &lt;ip&gt; (default: 127.0.0.1)</translation>\n     </message>\n     <message>\n-        <location line=\"-131\"/>\n+        <location line=\"-132\"/>\n         <source>Execute command when the best block changes (%s in cmd is replaced by block hash)</source>\n         <translation>Execute command when the best block changes (%s in cmd is replaced by block hash)</translation>\n     </message>\n     <message>\n-        <location line=\"+160\"/>\n+        <location line=\"+161\"/>\n         <source>Upgrade wallet to latest format</source>\n         <translation>Upgrade wallet to latest format</translation>\n     </message>\n     <message>\n-        <location line=\"-23\"/>\n+        <location line=\"-24\"/>\n         <source>Set key pool size to &lt;n&gt; (default: 100)</source>\n         <translation>Set key pool size to &lt;n&gt; (default: 100)</translation>\n     </message>\n     <message>\n-        <location line=\"-12\"/>\n+        <location line=\"-11\"/>\n         <source>Rescan the block chain for missing wallet transactions</source>\n         <translation>Rescan the block chain for missing wallet transactions</translation>\n     </message>\n@@ -3824,7 +3896,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>Use OpenSSL (https) for JSON-RPC connections</translation>\n     </message>\n     <message>\n-        <location line=\"-29\"/>\n+        <location line=\"-30\"/>\n         <source>Server certificate file (default: server.cert)</source>\n         <translation>Server certificate file (default: server.cert)</translation>\n     </message>\n@@ -3839,17 +3911,17 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>This help message</translation>\n     </message>\n     <message>\n-        <location line=\"+6\"/>\n+        <location line=\"+7\"/>\n         <source>Unable to bind to %s on this computer (bind returned error %d, %s)</source>\n         <translation>Unable to bind to %s on this computer (bind returned error %d, %s)</translation>\n     </message>\n     <message>\n-        <location line=\"-106\"/>\n+        <location line=\"-107\"/>\n         <source>Allow DNS lookups for -addnode, -seednode and -connect</source>\n         <translation>Allow DNS lookups for -addnode, -seednode and -connect</translation>\n     </message>\n     <message>\n-        <location line=\"+59\"/>\n+        <location line=\"+60\"/>\n         <source>Loading addresses...</source>\n         <translation>Loading addresses...</translation>\n     </message>\n@@ -3889,7 +3961,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>Unknown -socks proxy version requested: %i</translation>\n     </message>\n     <message>\n-        <location line=\"-100\"/>\n+        <location line=\"-101\"/>\n         <source>Cannot resolve -bind address: &apos;%s&apos;</source>\n         <translation>Cannot resolve -bind address: &apos;%s&apos;</translation>\n     </message>\n@@ -3899,7 +3971,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>Cannot resolve -externalip address: &apos;%s&apos;</translation>\n     </message>\n     <message>\n-        <location line=\"+47\"/>\n+        <location line=\"+48\"/>\n         <source>Invalid amount for -paytxfee=&lt;amount&gt;: &apos;%s&apos;</source>\n         <translation>Invalid amount for -paytxfee=&lt;amount&gt;: &apos;%s&apos;</translation>\n     </message>\n@@ -3919,7 +3991,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>Loading block index...</translation>\n     </message>\n     <message>\n-        <location line=\"-61\"/>\n+        <location line=\"-62\"/>\n         <source>Add a node to connect to and attempt to keep the connection open</source>\n         <translation>Add a node to connect to and attempt to keep the connection open</translation>\n     </message>\n@@ -3929,12 +4001,12 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>Unable to bind to %s on this computer. Bitcoin is probably already running.</translation>\n     </message>\n     <message>\n-        <location line=\"+94\"/>\n+        <location line=\"+95\"/>\n         <source>Loading wallet...</source>\n         <translation>Loading wallet...</translation>\n     </message>\n     <message>\n-        <location line=\"-55\"/>\n+        <location line=\"-56\"/>\n         <source>Cannot downgrade wallet</source>\n         <translation>Cannot downgrade wallet</translation>\n     </message>\n@@ -3944,7 +4016,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>Cannot write default address</translation>\n     </message>\n     <message>\n-        <location line=\"+66\"/>\n+        <location line=\"+67\"/>\n         <source>Rescanning...</source>\n         <translation>Rescanning...</translation>\n     </message>\n@@ -3964,7 +4036,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>Error</translation>\n     </message>\n     <message>\n-        <location line=\"-34\"/>\n+        <location line=\"-35\"/>\n         <source>You must set rpcpassword=&lt;password&gt; in the configuration file:\n %s\n If the file does not exist, create it with owner-readable-only file permissions.</source>"
      }
    ]
  },
  {
    "sha": "b1347d55654b8cd4371b865a011967085bfdcabf",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMTM0N2Q1NTY1NGI4Y2Q0MzcxYjg2NWEwMTE5NjcwODViZmRjYWJm",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-13T16:38:19Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-13T16:38:26Z"
      },
      "message": "Merge pull request #3532\n\nf087ce8 qt: English translation update (Wladimir J. van der Laan)",
      "tree": {
        "sha": "a33a44110e69ccefc91a8fe6a620ab807bc50b59",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a33a44110e69ccefc91a8fe6a620ab807bc50b59"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b1347d55654b8cd4371b865a011967085bfdcabf",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJS1BaCAAoJEHSBCwEjRsmmHbsH/2MGaTNIljTdEXd9ubh1nDck\nVetK9zs/gJRgwzZDsUOymOIS+s1D4G+ivZUIgC2IhwgWHJhunVjn1AVijBCu05YG\nHEFcgG+jwGg+smX8N0/A3sRWiKZjwXFlmDkxwHw9bOIymtj5vdKse3OI3D7yPbJE\nR4pJGZCK44V82X6iiCW+AM0+FheikfbR2d72tY2riSxhDxaD5N/usOJf0m0R1LBT\nK6+0Ong63cvHVTQfUwu4fvyO7hoo5DT9l2Bi+cHN5OzKJNl1SiAOvbmmH4xhk/zK\nnncgBh5MqWUcLHQRx56DkbIQjTXygzxkiW3zV/WSIR6LubOuPKywmHz0OPbCzog=\n=UX+s\n-----END PGP SIGNATURE-----",
        "payload": "tree a33a44110e69ccefc91a8fe6a620ab807bc50b59\nparent c7930c859ee4d8f0d681cf2771437ef35465df9c\nparent f087ce889156985762cd6d6e3768a54b54c68524\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1389631099 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1389631106 +0100\n\nMerge pull request #3532\n\nf087ce8 qt: English translation update (Wladimir J. van der Laan)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b1347d55654b8cd4371b865a011967085bfdcabf",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b1347d55654b8cd4371b865a011967085bfdcabf",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b1347d55654b8cd4371b865a011967085bfdcabf/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c7930c859ee4d8f0d681cf2771437ef35465df9c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c7930c859ee4d8f0d681cf2771437ef35465df9c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c7930c859ee4d8f0d681cf2771437ef35465df9c"
      },
      {
        "sha": "f087ce889156985762cd6d6e3768a54b54c68524",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f087ce889156985762cd6d6e3768a54b54c68524",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f087ce889156985762cd6d6e3768a54b54c68524"
      }
    ],
    "stats": {
      "total": 495,
      "additions": 286,
      "deletions": 209
    },
    "files": [
      {
        "sha": "b88c7ec290e3fe34663c3a9daffbfe3b11ec57fc",
        "filename": "src/qt/bitcoinstrings.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b1347d55654b8cd4371b865a011967085bfdcabf/src/qt/bitcoinstrings.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b1347d55654b8cd4371b865a011967085bfdcabf/src/qt/bitcoinstrings.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoinstrings.cpp?ref=b1347d55654b8cd4371b865a011967085bfdcabf",
        "patch": "@@ -40,6 +40,9 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"be solved instantly. This is intended for regression testing tools and app \"\n \"development.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n+\"Enter regression test mode, which uses a special chain in which blocks can \"\n+\"be solved instantly.\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Error: The transaction was rejected! This might happen if some of the coins \"\n \"in your wallet were already spent, such as if you used a copy of wallet.dat \"\n \"and coins were spent in the copy but not marked as spent here.\"),\n@@ -119,6 +122,7 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Connect to JSON-RPC on <port> (default: 8332\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Connect to a node to retrieve peer addresses, and disconnect\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Corrupted block database detected\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Discover own IP address (default: 1 when listening and no -externalip)\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Do not load the wallet and disable wallet RPC calls\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Do you want to rebuild the block database now?\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Done loading\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Error initializing block database\"),\n@@ -185,7 +189,6 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Select SOCKS version for -proxy (4 or 5, defa\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Send command to Bitcoin server\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Send commands to node running on <ip> (default: 127.0.0.1)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Send trace/debug info to console instead of debug.log file\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Send trace/debug info to debugger\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Server certificate file (default: server.cert)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Server private key (default: server.pem)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Set database cache size in megabytes (default: 25)\"),\n@@ -204,6 +207,7 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Specify your own public address\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Start Bitcoin server\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"System error: \"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"This help message\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"This is intended for regression testing tools and app development.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Threshold for disconnecting misbehaving peers (default: 100)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"To use the %s option\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Transaction amount too small\"),\n@@ -225,6 +229,7 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Verifying wallet...\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Wait for RPC server to start\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Wallet %s resides outside data directory %s\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Wallet needed to be rewritten: restart Bitcoin to complete\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Wallet options:\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Warning\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Warning: Deprecated argument -debugnet ignored, use -debug=net\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Warning: This version is obsolete, upgrade required!\"),"
      },
      {
        "sha": "f52544687b05bff26bddb2240cdb41a1726993fb",
        "filename": "src/qt/locale/bitcoin_en.ts",
        "status": "modified",
        "additions": 280,
        "deletions": 208,
        "changes": 488,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b1347d55654b8cd4371b865a011967085bfdcabf/src/qt/locale/bitcoin_en.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b1347d55654b8cd4371b865a011967085bfdcabf/src/qt/locale/bitcoin_en.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_en.ts?ref=b1347d55654b8cd4371b865a011967085bfdcabf",
        "patch": "@@ -321,25 +321,44 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation>Wallet passphrase was successfully changed.</translation>\n     </message>\n </context>\n+<context>\n+    <name>BitcoinApplication</name>\n+    <message>\n+        <location filename=\"../bitcoin.cpp\" line=\"+362\"/>\n+        <source>Bitcoin Core is shutting down...\n+</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Do not shut down the computer until this window disappears.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+</context>\n <context>\n     <name>BitcoinGUI</name>\n     <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"+260\"/>\n+        <location filename=\"../bitcoingui.cpp\" line=\"+297\"/>\n         <source>Sign &amp;message...</source>\n         <translation>Sign &amp;message...</translation>\n     </message>\n     <message>\n-        <location line=\"+290\"/>\n+        <location line=\"+323\"/>\n         <source>Synchronizing with network...</source>\n         <translation>Synchronizing with network...</translation>\n     </message>\n     <message>\n-        <location line=\"-360\"/>\n+        <location line=\"-395\"/>\n         <source>&amp;Overview</source>\n         <translation>&amp;Overview</translation>\n     </message>\n     <message>\n-        <location line=\"+1\"/>\n+        <location line=\"-139\"/>\n+        <source>Node</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+140\"/>\n         <source>Show general overview of wallet</source>\n         <translation>Show general overview of wallet</translation>\n     </message>\n@@ -354,7 +373,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation>Browse transaction history</translation>\n     </message>\n     <message>\n-        <location line=\"+15\"/>\n+        <location line=\"+17\"/>\n         <source>E&amp;xit</source>\n         <translation>E&amp;xit</translation>\n     </message>\n@@ -400,7 +419,22 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation>&amp;Change Passphrase...</translation>\n     </message>\n     <message>\n-        <location line=\"+295\"/>\n+        <location line=\"+10\"/>\n+        <source>&amp;Sending addresses...</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+2\"/>\n+        <source>&amp;Receiving addresses...</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>Open &amp;URI...</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+313\"/>\n         <source>Importing blocks from disk...</source>\n         <translation>Importing blocks from disk...</translation>\n     </message>\n@@ -410,12 +444,12 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation>Reindexing blocks on disk...</translation>\n     </message>\n     <message>\n-        <location line=\"-358\"/>\n+        <location line=\"-393\"/>\n         <source>Send coins to a Bitcoin address</source>\n         <translation>Send coins to a Bitcoin address</translation>\n     </message>\n     <message>\n-        <location line=\"+47\"/>\n+        <location line=\"+49\"/>\n         <source>Modify configuration options for Bitcoin</source>\n         <translation>Modify configuration options for Bitcoin</translation>\n     </message>\n@@ -445,18 +479,17 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation>&amp;Verify message...</translation>\n     </message>\n     <message>\n-        <location line=\"+375\"/>\n+        <location line=\"+414\"/>\n         <source>Bitcoin</source>\n         <translation>Bitcoin</translation>\n     </message>\n     <message>\n-        <location line=\"-563\"/>\n-        <location line=\"+10\"/>\n+        <location line=\"-629\"/>\n         <source>Wallet</source>\n         <translation>Wallet</translation>\n     </message>\n     <message>\n-        <location line=\"+113\"/>\n+        <location line=\"+148\"/>\n         <source>&amp;Send</source>\n         <translation>&amp;Send</translation>\n     </message>\n@@ -466,7 +499,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation>&amp;Receive</translation>\n     </message>\n     <message>\n-        <location line=\"+44\"/>\n+        <location line=\"+46\"/>\n         <location line=\"+2\"/>\n         <source>&amp;Show / Hide</source>\n         <translation>&amp;Show / Hide</translation>\n@@ -492,86 +525,70 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation>Verify messages to ensure they were signed with specified Bitcoin addresses</translation>\n     </message>\n     <message>\n-        <location line=\"+39\"/>\n+        <location line=\"+44\"/>\n         <source>&amp;File</source>\n         <translation>&amp;File</translation>\n     </message>\n     <message>\n-        <location line=\"+11\"/>\n+        <location line=\"+14\"/>\n         <source>&amp;Settings</source>\n         <translation>&amp;Settings</translation>\n     </message>\n     <message>\n-        <location line=\"+6\"/>\n+        <location line=\"+9\"/>\n         <source>&amp;Help</source>\n         <translation>&amp;Help</translation>\n     </message>\n     <message>\n-        <location line=\"+9\"/>\n+        <location line=\"+14\"/>\n         <source>Tabs toolbar</source>\n         <translation>Tabs toolbar</translation>\n     </message>\n     <message>\n-        <location line=\"-244\"/>\n-        <location line=\"+321\"/>\n+        <location line=\"-281\"/>\n+        <location line=\"+373\"/>\n         <source>[testnet]</source>\n         <translation>[testnet]</translation>\n     </message>\n     <message>\n-        <location line=\"-331\"/>\n-        <location line=\"+10\"/>\n+        <location line=\"-398\"/>\n         <source>Bitcoin Core</source>\n         <translation type=\"unfinished\">Bitcoin Core</translation>\n     </message>\n     <message>\n-        <location line=\"+121\"/>\n+        <location line=\"+165\"/>\n         <source>Request payments (generates QR codes and bitcoin: URIs)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+27\"/>\n+        <location line=\"+29\"/>\n         <location line=\"+2\"/>\n         <source>&amp;About Bitcoin Core</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+34\"/>\n-        <source>&amp;Used sending addresses...</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location line=\"+1\"/>\n+        <location line=\"+35\"/>\n         <source>Show the list of used sending addresses and labels</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n-    <message>\n-        <location line=\"+1\"/>\n-        <source>Used &amp;receiving addresses...</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location line=\"+1\"/>\n-        <source>Show the list of used receiving addresses and labels</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n     <message>\n         <location line=\"+2\"/>\n-        <source>Open URI...</source>\n+        <source>Show the list of used receiving addresses and labels</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+1\"/>\n+        <location line=\"+3\"/>\n         <source>Open a bitcoin: URI or payment request</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+126\"/>\n+        <location line=\"+157\"/>\n         <location line=\"+5\"/>\n         <source>Bitcoin client</source>\n         <translation>Bitcoin client</translation>\n     </message>\n     <message numerus=\"yes\">\n-        <location line=\"+133\"/>\n+        <location line=\"+135\"/>\n         <source>%n active connection(s) to Bitcoin network</source>\n         <translation>\n             <numerusform>%n active connection to Bitcoin network</numerusform>\n@@ -594,7 +611,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation>Processed %1 blocks of transaction history.</translation>\n     </message>\n     <message numerus=\"yes\">\n-        <location line=\"+20\"/>\n+        <location line=\"+23\"/>\n         <source>%n hour(s)</source>\n         <translation>\n             <numerusform>%n hour</numerusform>\n@@ -623,7 +640,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation>%1 behind</translation>\n     </message>\n     <message>\n-        <location line=\"+14\"/>\n+        <location line=\"+17\"/>\n         <source>Last received block was generated %1 ago.</source>\n         <translation>Last received block was generated %1 ago.</translation>\n     </message>\n@@ -648,27 +665,17 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation>Information</translation>\n     </message>\n     <message>\n-        <location line=\"+77\"/>\n-        <source>This transaction is over the size limit. You can still send it for a fee of %1, which goes to the nodes that process your transaction and helps to support the network. Do you want to pay the fee?</source>\n-        <translation>This transaction is over the size limit. You can still send it for a fee of %1, which goes to the nodes that process your transaction and helps to support the network. Do you want to pay the fee?</translation>\n-    </message>\n-    <message>\n-        <location line=\"-152\"/>\n+        <location line=\"-81\"/>\n         <source>Up to date</source>\n         <translation>Up to date</translation>\n     </message>\n     <message>\n-        <location line=\"+31\"/>\n+        <location line=\"+34\"/>\n         <source>Catching up...</source>\n         <translation>Catching up...</translation>\n     </message>\n     <message>\n-        <location line=\"+124\"/>\n-        <source>Confirm transaction fee</source>\n-        <translation>Confirm transaction fee</translation>\n-    </message>\n-    <message>\n-        <location line=\"+8\"/>\n+        <location line=\"+126\"/>\n         <source>Sent transaction</source>\n         <translation>Sent transaction</translation>\n     </message>\n@@ -691,7 +698,7 @@ Address: %4\n </translation>\n     </message>\n     <message>\n-        <location line=\"+67\"/>\n+        <location line=\"+69\"/>\n         <source>Wallet is &lt;b&gt;encrypted&lt;/b&gt; and currently &lt;b&gt;unlocked&lt;/b&gt;</source>\n         <translation>Wallet is &lt;b&gt;encrypted&lt;/b&gt; and currently &lt;b&gt;unlocked&lt;/b&gt;</translation>\n     </message>\n@@ -701,7 +708,7 @@ Address: %4\n         <translation>Wallet is &lt;b&gt;encrypted&lt;/b&gt; and currently &lt;b&gt;locked&lt;/b&gt;</translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoin.cpp\" line=\"+116\"/>\n+        <location filename=\"../bitcoin.cpp\" line=\"+78\"/>\n         <source>A fatal error occurred. Bitcoin can no longer continue safely and will quit.</source>\n         <translation>A fatal error occurred. Bitcoin can no longer continue safely and will quit.</translation>\n     </message>\n@@ -923,7 +930,12 @@ Address: %4\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+171\"/>\n+        <location line=\"+31\"/>\n+        <source>none</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+140\"/>\n         <source>Dust</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -960,7 +972,7 @@ Address: %4\n     </message>\n     <message>\n         <location line=\"+1\"/>\n-        <source>This label turns red, if the priority is smaller than &quot;medium&quot;</source>\n+        <source>This label turns red, if the priority is smaller than &quot;medium&quot;.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n@@ -1029,7 +1041,7 @@ Address: %4\n         <translation>&amp;Address</translation>\n     </message>\n     <message>\n-        <location filename=\"../editaddressdialog.cpp\" line=\"+25\"/>\n+        <location filename=\"../editaddressdialog.cpp\" line=\"+28\"/>\n         <source>New receiving address</source>\n         <translation>New receiving address</translation>\n     </message>\n@@ -1240,7 +1252,7 @@ Address: %4\n         <translation>Options</translation>\n     </message>\n     <message>\n-        <location line=\"+16\"/>\n+        <location line=\"+13\"/>\n         <source>&amp;Main</source>\n         <translation>&amp;Main</translation>\n     </message>\n@@ -1265,7 +1277,47 @@ Address: %4\n         <translation>&amp;Start Bitcoin on system login</translation>\n     </message>\n     <message>\n-        <location line=\"+35\"/>\n+        <location line=\"+9\"/>\n+        <source>Size of &amp;database cache</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+13\"/>\n+        <source>Set database cache size in megabytes (default: 25)</source>\n+        <translation type=\"unfinished\">Set database cache size in megabytes (default: 25)</translation>\n+    </message>\n+    <message>\n+        <location line=\"+13\"/>\n+        <source>MB</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+27\"/>\n+        <source>Number of script &amp;verification threads</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+13\"/>\n+        <source>Set the number of script verification threads (up to 16, 0 = auto, &lt;0 = leave that many cores free, default: 0)</source>\n+        <translation type=\"unfinished\">Set the number of script verification threads (up to 16, 0 = auto, &lt;0 = leave that many cores free, default: 0)</translation>\n+    </message>\n+    <message>\n+        <location line=\"+58\"/>\n+        <source>Connect to the Bitcoin network through a SOCKS proxy.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>&amp;Connect through SOCKS proxy (default proxy):</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+34\"/>\n+        <source>IP address of the proxy (e.g. IPv4: 127.0.0.1 / IPv6: ::1)</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+267\"/>\n         <source>Reset all client options to default.</source>\n         <translation>Reset all client options to default.</translation>\n     </message>\n@@ -1275,7 +1327,7 @@ Address: %4\n         <translation>&amp;Reset Options</translation>\n     </message>\n     <message>\n-        <location line=\"+13\"/>\n+        <location line=\"-323\"/>\n         <source>&amp;Network</source>\n         <translation>&amp;Network</translation>\n     </message>\n@@ -1290,32 +1342,17 @@ Address: %4\n         <translation>Map port using &amp;UPnP</translation>\n     </message>\n     <message>\n-        <location line=\"+7\"/>\n-        <source>Connect to the Bitcoin network through a SOCKS proxy (e.g. when connecting through Tor).</source>\n-        <translation>Connect to the Bitcoin network through a SOCKS proxy (e.g. when connecting through Tor).</translation>\n-    </message>\n-    <message>\n-        <location line=\"+3\"/>\n-        <source>&amp;Connect through SOCKS proxy:</source>\n-        <translation>&amp;Connect through SOCKS proxy:</translation>\n-    </message>\n-    <message>\n-        <location line=\"+9\"/>\n+        <location line=\"+19\"/>\n         <source>Proxy &amp;IP:</source>\n         <translation>Proxy &amp;IP:</translation>\n     </message>\n     <message>\n-        <location line=\"+19\"/>\n-        <source>IP address of the proxy (e.g. 127.0.0.1)</source>\n-        <translation>IP address of the proxy (e.g. 127.0.0.1)</translation>\n-    </message>\n-    <message>\n-        <location line=\"+7\"/>\n+        <location line=\"+32\"/>\n         <source>&amp;Port:</source>\n         <translation>&amp;Port:</translation>\n     </message>\n     <message>\n-        <location line=\"+19\"/>\n+        <location line=\"+25\"/>\n         <source>Port of the proxy (e.g. 9050)</source>\n         <translation>Port of the proxy (e.g. 9050)</translation>\n     </message>\n@@ -1400,7 +1437,12 @@ Address: %4\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+71\"/>\n+        <location line=\"+29\"/>\n+        <source>Active command-line options that override above options: </source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+107\"/>\n         <source>&amp;OK</source>\n         <translation>&amp;OK</translation>\n     </message>\n@@ -1410,44 +1452,38 @@ Address: %4\n         <translation>&amp;Cancel</translation>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n-        <source>&amp;Apply</source>\n-        <translation>&amp;Apply</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../optionsdialog.cpp\" line=\"+63\"/>\n+        <location filename=\"../optionsdialog.cpp\" line=\"+68\"/>\n         <source>default</source>\n         <translation>default</translation>\n     </message>\n     <message>\n-        <location line=\"+131\"/>\n+        <location line=\"+57\"/>\n+        <source>none</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+75\"/>\n         <source>Confirm options reset</source>\n         <translation>Confirm options reset</translation>\n     </message>\n     <message>\n         <location line=\"+1\"/>\n-        <source>Some settings may require a client restart to take effect.</source>\n-        <translation>Some settings may require a client restart to take effect.</translation>\n-    </message>\n-    <message>\n-        <location line=\"+0\"/>\n-        <source>Do you want to proceed?</source>\n-        <translation>Do you want to proceed?</translation>\n+        <location line=\"+29\"/>\n+        <source>Client restart required to activate changes.</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+42\"/>\n-        <location line=\"+9\"/>\n-        <source>Warning</source>\n-        <translation>Warning</translation>\n+        <location line=\"-29\"/>\n+        <source>Client will be shutdown, do you want to proceed?</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"-9\"/>\n-        <location line=\"+9\"/>\n-        <source>This setting will take effect after restarting Bitcoin.</source>\n-        <translation>This setting will take effect after restarting Bitcoin.</translation>\n+        <location line=\"+33\"/>\n+        <source>This change would require a client restart.</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+29\"/>\n+        <location line=\"+34\"/>\n         <source>The supplied proxy address is invalid.</source>\n         <translation>The supplied proxy address is invalid.</translation>\n     </message>\n@@ -1461,22 +1497,22 @@ Address: %4\n     </message>\n     <message>\n         <location line=\"+50\"/>\n-        <location line=\"+214\"/>\n+        <location line=\"+231\"/>\n         <source>The displayed information may be out of date. Your wallet automatically synchronizes with the Bitcoin network after a connection is established, but this process has not completed yet.</source>\n         <translation>The displayed information may be out of date. Your wallet automatically synchronizes with the Bitcoin network after a connection is established, but this process has not completed yet.</translation>\n     </message>\n     <message>\n-        <location line=\"-140\"/>\n+        <location line=\"-155\"/>\n         <source>Unconfirmed:</source>\n         <translation>Unconfirmed:</translation>\n     </message>\n     <message>\n-        <location line=\"-81\"/>\n+        <location line=\"-83\"/>\n         <source>Wallet</source>\n         <translation>Wallet</translation>\n     </message>\n     <message>\n-        <location line=\"+49\"/>\n+        <location line=\"+51\"/>\n         <source>Confirmed:</source>\n         <translation>Confirmed:</translation>\n     </message>\n@@ -1511,7 +1547,7 @@ Address: %4\n         <translation>Your current total balance</translation>\n     </message>\n     <message>\n-        <location line=\"+56\"/>\n+        <location line=\"+71\"/>\n         <source>&lt;b&gt;Recent transactions&lt;/b&gt;</source>\n         <translation>&lt;b&gt;Recent transactions&lt;/b&gt;</translation>\n     </message>\n@@ -1525,7 +1561,8 @@ Address: %4\n <context>\n     <name>PaymentServer</name>\n     <message>\n-        <location filename=\"../paymentserver.cpp\" line=\"+397\"/>\n+        <location filename=\"../paymentserver.cpp\" line=\"+400\"/>\n+        <location line=\"+13\"/>\n         <source>URI handling</source>\n         <translation type=\"unfinished\">URI handling</translation>\n     </message>\n@@ -1535,24 +1572,42 @@ Address: %4\n         <translation type=\"unfinished\">URI can not be parsed! This can be caused by an invalid Bitcoin address or malformed URI parameters.</translation>\n     </message>\n     <message>\n-        <location line=\"+91\"/>\n+        <location line=\"+96\"/>\n         <source>Requested payment amount of %1 is too small (considered dust).</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"-204\"/>\n-        <location line=\"+195\"/>\n+        <location line=\"-216\"/>\n+        <location line=\"+207\"/>\n         <location line=\"+13\"/>\n+        <location line=\"+95\"/>\n+        <location line=\"+18\"/>\n+        <location line=\"+16\"/>\n         <source>Payment request error</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"-207\"/>\n+        <location line=\"-348\"/>\n         <source>Cannot start bitcoin: click-to-pay handler</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+195\"/>\n+        <location line=\"+106\"/>\n+        <source>Payment request fetch URL is invalid: %1</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+27\"/>\n+        <source>Payment request file handling</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Payment request file can not be read or processed! This can be caused by an invalid payment request file.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+73\"/>\n         <source>Unverified payment requests to custom payment scripts are unsupported.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -1562,43 +1617,46 @@ Address: %4\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+42\"/>\n+        <location line=\"+43\"/>\n         <source>Error communicating with %1: %2</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+28\"/>\n+        <location line=\"+24\"/>\n+        <source>Payment request can not be parsed or processed!</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+11\"/>\n         <source>Bad response from server %1</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+32\"/>\n+        <location line=\"+33\"/>\n         <source>Payment acknowledged</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"-55\"/>\n-        <location line=\"+27\"/>\n-        <location line=\"+17\"/>\n+        <location line=\"-11\"/>\n         <source>Network request error</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n </context>\n <context>\n     <name>QObject</name>\n     <message>\n-        <location filename=\"../bitcoin.cpp\" line=\"+119\"/>\n-        <location line=\"+5\"/>\n+        <location filename=\"../bitcoin.cpp\" line=\"+71\"/>\n+        <location line=\"+11\"/>\n         <source>Bitcoin</source>\n         <translation>Bitcoin</translation>\n     </message>\n     <message>\n-        <location line=\"-4\"/>\n+        <location line=\"+1\"/>\n         <source>Error: Specified data directory &quot;%1&quot; does not exist.</source>\n         <translation>Error: Specified data directory &quot;%1&quot; does not exist.</translation>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n+        <location line=\"-12\"/>\n         <source>Error: Invalid combination of -regtest and -testnet.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -1640,15 +1698,16 @@ Address: %4\n         <location line=\"+23\"/>\n         <location line=\"+23\"/>\n         <location line=\"+36\"/>\n-        <location line=\"+53\"/>\n+        <location line=\"+23\"/>\n+        <location line=\"+36\"/>\n         <location line=\"+23\"/>\n         <location line=\"+23\"/>\n         <location filename=\"../rpcconsole.cpp\" line=\"+360\"/>\n         <source>N/A</source>\n         <translation>N/A</translation>\n     </message>\n     <message>\n-        <location line=\"-217\"/>\n+        <location line=\"-223\"/>\n         <source>Client version</source>\n         <translation>Client version</translation>\n     </message>\n@@ -1663,7 +1722,12 @@ Address: %4\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+78\"/>\n+        <location line=\"+25\"/>\n+        <source>General</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+53\"/>\n         <source>Using OpenSSL version</source>\n         <translation>Using OpenSSL version</translation>\n     </message>\n@@ -1679,16 +1743,16 @@ Address: %4\n     </message>\n     <message>\n         <location line=\"+7\"/>\n-        <source>Number of connections</source>\n-        <translation>Number of connections</translation>\n+        <source>Name</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n         <location line=\"+23\"/>\n-        <source>On testnet</source>\n-        <translation>On testnet</translation>\n+        <source>Number of connections</source>\n+        <translation>Number of connections</translation>\n     </message>\n     <message>\n-        <location line=\"+23\"/>\n+        <location line=\"+29\"/>\n         <source>Block chain</source>\n         <translation>Block chain</translation>\n     </message>\n@@ -1753,17 +1817,12 @@ Address: %4\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"-541\"/>\n+        <location line=\"-547\"/>\n         <source>Build date</source>\n         <translation>Build date</translation>\n     </message>\n     <message>\n-        <location line=\"-79\"/>\n-        <source>Bitcoin Core</source>\n-        <translation>Bitcoin Core</translation>\n-    </message>\n-    <message>\n-        <location line=\"+279\"/>\n+        <location line=\"+206\"/>\n         <source>Debug log file</source>\n         <translation>Debug log file</translation>\n     </message>\n@@ -1897,7 +1956,7 @@ Address: %4\n     </message>\n     <message>\n         <location line=\"+47\"/>\n-        <source>Previously requested payments</source>\n+        <source>Requested payments</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n@@ -1992,7 +2051,7 @@ Address: %4\n <context>\n     <name>RecentRequestsTableModel</name>\n     <message>\n-        <location filename=\"../recentrequeststablemodel.cpp\" line=\"+14\"/>\n+        <location filename=\"../recentrequeststablemodel.cpp\" line=\"+17\"/>\n         <source>Date</source>\n         <translation type=\"unfinished\">Date</translation>\n     </message>\n@@ -2012,7 +2071,7 @@ Address: %4\n         <translation type=\"unfinished\">Amount</translation>\n     </message>\n     <message>\n-        <location line=\"+36\"/>\n+        <location line=\"+38\"/>\n         <source>(no label)</source>\n         <translation type=\"unfinished\">(no label)</translation>\n     </message>\n@@ -2027,7 +2086,7 @@ Address: %4\n     <message>\n         <location filename=\"../forms/sendcoinsdialog.ui\" line=\"+14\"/>\n         <location filename=\"../sendcoinsdialog.cpp\" line=\"+381\"/>\n-        <location line=\"+81\"/>\n+        <location line=\"+80\"/>\n         <source>Send Coins</source>\n         <translation>Send Coins</translation>\n     </message>\n@@ -2137,7 +2196,7 @@ Address: %4\n         <translation>S&amp;end</translation>\n     </message>\n     <message>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"-229\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"-228\"/>\n         <source>Confirm send coins</source>\n         <translation>Confirm send coins</translation>\n     </message>\n@@ -2240,22 +2299,22 @@ Address: %4\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+113\"/>\n+        <location line=\"+112\"/>\n         <source>Warning: Invalid Bitcoin address</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+13\"/>\n+        <location line=\"+21\"/>\n         <source>(no label)</source>\n         <translation type=\"unfinished\">(no label)</translation>\n     </message>\n     <message>\n-        <location line=\"+8\"/>\n+        <location line=\"-11\"/>\n         <source>Warning: Unknown change address</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"-378\"/>\n+        <location line=\"-366\"/>\n         <source>Are you sure you want to send?</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -2565,7 +2624,7 @@ Address: %4\n <context>\n     <name>SplashScreen</name>\n     <message>\n-        <location filename=\"../splashscreen.cpp\" line=\"+26\"/>\n+        <location filename=\"../splashscreen.cpp\" line=\"+28\"/>\n         <source>Bitcoin Core</source>\n         <translation type=\"unfinished\">Bitcoin Core</translation>\n     </message>\n@@ -2811,8 +2870,13 @@ Address: %4\n         <source>Amount</source>\n         <translation>Amount</translation>\n     </message>\n+    <message>\n+        <location line=\"+59\"/>\n+        <source>Immature (%1 confirmations, will be available after %2)</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n     <message numerus=\"yes\">\n-        <location line=\"+57\"/>\n+        <location line=\"+16\"/>\n         <source>Open for %n more block(s)</source>\n         <translation>\n             <numerusform>Open for %n more block</numerusform>\n@@ -2835,20 +2899,13 @@ Address: %4\n         <translation>Unconfirmed (%1 of %2 confirmations)</translation>\n     </message>\n     <message>\n-        <location line=\"+3\"/>\n+        <location line=\"-22\"/>\n+        <location line=\"+25\"/>\n         <source>Confirmed (%1 confirmations)</source>\n         <translation>Confirmed (%1 confirmations)</translation>\n     </message>\n-    <message numerus=\"yes\">\n-        <location line=\"+8\"/>\n-        <source>Mined balance will be available when it matures in %n more block(s)</source>\n-        <translation>\n-            <numerusform>Mined balance will be available when it matures in %n more block</numerusform>\n-            <numerusform>Mined balance will be available when it matures in %n more blocks</numerusform>\n-        </translation>\n-    </message>\n     <message>\n-        <location line=\"+5\"/>\n+        <location line=\"-22\"/>\n         <source>This block was not received by any other nodes and will probably not be accepted!</source>\n         <translation>This block was not received by any other nodes and will probably not be accepted!</translation>\n     </message>\n@@ -2858,7 +2915,7 @@ Address: %4\n         <translation>Generated but not accepted</translation>\n     </message>\n     <message>\n-        <location line=\"+43\"/>\n+        <location line=\"+62\"/>\n         <source>Received with</source>\n         <translation>Received with</translation>\n     </message>\n@@ -3154,7 +3211,7 @@ Address: %4\n <context>\n     <name>bitcoin-core</name>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"+217\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"+221\"/>\n         <source>Usage:</source>\n         <translation>Usage:</translation>\n     </message>\n@@ -3174,7 +3231,7 @@ Address: %4\n         <translation>Options:</translation>\n     </message>\n     <message>\n-        <location line=\"+23\"/>\n+        <location line=\"+22\"/>\n         <source>Specify configuration file (default: bitcoin.conf)</source>\n         <translation>Specify configuration file (default: bitcoin.conf)</translation>\n     </message>\n@@ -3194,7 +3251,7 @@ Address: %4\n         <translation>Set database cache size in megabytes (default: 25)</translation>\n     </message>\n     <message>\n-        <location line=\"-27\"/>\n+        <location line=\"-26\"/>\n         <source>Listen for connections on &lt;port&gt; (default: 8333 or testnet: 18333)</source>\n         <translation>Listen for connections on &lt;port&gt; (default: 8333 or testnet: 18333)</translation>\n     </message>\n@@ -3204,7 +3261,7 @@ Address: %4\n         <translation>Maintain at most &lt;n&gt; connections to peers (default: 125)</translation>\n     </message>\n     <message>\n-        <location line=\"-50\"/>\n+        <location line=\"-51\"/>\n         <source>Connect to a node to retrieve peer addresses, and disconnect</source>\n         <translation>Connect to a node to retrieve peer addresses, and disconnect</translation>\n     </message>\n@@ -3214,22 +3271,22 @@ Address: %4\n         <translation>Specify your own public address</translation>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n+        <location line=\"+5\"/>\n         <source>Threshold for disconnecting misbehaving peers (default: 100)</source>\n         <translation>Threshold for disconnecting misbehaving peers (default: 100)</translation>\n     </message>\n     <message>\n-        <location line=\"-147\"/>\n+        <location line=\"-148\"/>\n         <source>Number of seconds to keep misbehaving peers from reconnecting (default: 86400)</source>\n         <translation>Number of seconds to keep misbehaving peers from reconnecting (default: 86400)</translation>\n     </message>\n     <message>\n-        <location line=\"-33\"/>\n+        <location line=\"-36\"/>\n         <source>An error occurred while setting up the RPC port %u for listening on IPv4: %s</source>\n         <translation>An error occurred while setting up the RPC port %u for listening on IPv4: %s</translation>\n     </message>\n     <message>\n-        <location line=\"+31\"/>\n+        <location line=\"+34\"/>\n         <source>Listen for JSON-RPC connections on &lt;port&gt; (default: 8332 or testnet: 18332)</source>\n         <translation>Listen for JSON-RPC connections on &lt;port&gt; (default: 8332 or testnet: 18332)</translation>\n     </message>\n@@ -3239,7 +3296,7 @@ Address: %4\n         <translation>Accept command line and JSON-RPC commands</translation>\n     </message>\n     <message>\n-        <location line=\"+79\"/>\n+        <location line=\"+80\"/>\n         <source>Run in the background as a daemon and accept commands</source>\n         <translation>Run in the background as a daemon and accept commands</translation>\n     </message>\n@@ -3249,12 +3306,12 @@ Address: %4\n         <translation>Use the test network</translation>\n     </message>\n     <message>\n-        <location line=\"-117\"/>\n+        <location line=\"-118\"/>\n         <source>Accept connections from outside (default: 1 if no -proxy or -connect)</source>\n         <translation>Accept connections from outside (default: 1 if no -proxy or -connect)</translation>\n     </message>\n     <message>\n-        <location line=\"-92\"/>\n+        <location line=\"-95\"/>\n         <source>%s, you must set a rpcpassword in the configuration file:\n %s\n It is recommended you use the following random password:\n@@ -3305,6 +3362,11 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n     </message>\n     <message>\n         <location line=\"+4\"/>\n+        <source>Enter regression test mode, which uses a special chain in which blocks can be solved instantly.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n         <source>Error: The transaction was rejected! This might happen if some of the coins in your wallet were already spent, such as if you used a copy of wallet.dat and coins were spent in the copy but not marked as spent here.</source>\n         <translation>Error: The transaction was rejected! This might happen if some of the coins in your wallet were already spent, such as if you used a copy of wallet.dat and coins were spent in the copy but not marked as spent here.</translation>\n     </message>\n@@ -3408,6 +3470,11 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <source>Discover own IP address (default: 1 when listening and no -externalip)</source>\n         <translation>Discover own IP address (default: 1 when listening and no -externalip)</translation>\n     </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Do not load the wallet and disable wallet RPC calls</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n     <message>\n         <location line=\"+1\"/>\n         <source>Do you want to rebuild the block database now?</source>\n@@ -3574,7 +3641,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+8\"/>\n+        <location line=\"+7\"/>\n         <source>Set maximum block size in bytes (default: %d)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -3594,7 +3661,12 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+12\"/>\n+        <location line=\"+3\"/>\n+        <source>This is intended for regression testing tools and app development.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+10\"/>\n         <source>Usage (deprecated, use bitcoin-cli):</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -3619,7 +3691,12 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>Wallet %s resides outside data directory %s</translation>\n     </message>\n     <message>\n-        <location line=\"+3\"/>\n+        <location line=\"+2\"/>\n+        <source>Wallet options:</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+2\"/>\n         <source>Warning: Deprecated argument -debugnet ignored, use -debug=net</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -3629,12 +3706,12 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>You need to rebuild the database using -reindex to change -txindex</translation>\n     </message>\n     <message>\n-        <location line=\"-78\"/>\n+        <location line=\"-79\"/>\n         <source>Imports blocks from external blk000??.dat file</source>\n         <translation>Imports blocks from external blk000??.dat file</translation>\n     </message>\n     <message>\n-        <location line=\"-104\"/>\n+        <location line=\"-105\"/>\n         <source>Execute command when a relevant alert is received or we see a really long fork (%s in cmd is replaced by message)</source>\n         <translation>Execute command when a relevant alert is received or we see a really long fork (%s in cmd is replaced by message)</translation>\n     </message>\n@@ -3654,7 +3731,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>Set the number of script verification threads (up to 16, 0 = auto, &lt;0 = leave that many cores free, default: 0)</translation>\n     </message>\n     <message>\n-        <location line=\"+88\"/>\n+        <location line=\"+89\"/>\n         <source>Information</source>\n         <translation>Information</translation>\n     </message>\n@@ -3703,11 +3780,6 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <source>Send trace/debug info to console instead of debug.log file</source>\n         <translation>Send trace/debug info to console instead of debug.log file</translation>\n     </message>\n-    <message>\n-        <location line=\"+1\"/>\n-        <source>Send trace/debug info to debugger</source>\n-        <translation>Send trace/debug info to debugger</translation>\n-    </message>\n     <message>\n         <location line=\"+6\"/>\n         <source>Set minimum block size in bytes (default: 0)</source>\n@@ -3734,7 +3806,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>System error: </translation>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n+        <location line=\"+5\"/>\n         <source>Transaction amount too small</source>\n         <translation>Transaction amount too small</translation>\n     </message>\n@@ -3764,7 +3836,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>Username for JSON-RPC connections</translation>\n     </message>\n     <message>\n-        <location line=\"+6\"/>\n+        <location line=\"+7\"/>\n         <source>Warning</source>\n         <translation>Warning</translation>\n     </message>\n@@ -3784,37 +3856,37 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>wallet.dat corrupt, salvage failed</translation>\n     </message>\n     <message>\n-        <location line=\"-57\"/>\n+        <location line=\"-58\"/>\n         <source>Password for JSON-RPC connections</source>\n         <translation>Password for JSON-RPC connections</translation>\n     </message>\n     <message>\n-        <location line=\"-69\"/>\n+        <location line=\"-70\"/>\n         <source>Allow JSON-RPC connections from specified IP address</source>\n         <translation>Allow JSON-RPC connections from specified IP address</translation>\n     </message>\n     <message>\n-        <location line=\"+79\"/>\n+        <location line=\"+80\"/>\n         <source>Send commands to node running on &lt;ip&gt; (default: 127.0.0.1)</source>\n         <translation>Send commands to node running on &lt;ip&gt; (default: 127.0.0.1)</translation>\n     </message>\n     <message>\n-        <location line=\"-131\"/>\n+        <location line=\"-132\"/>\n         <source>Execute command when the best block changes (%s in cmd is replaced by block hash)</source>\n         <translation>Execute command when the best block changes (%s in cmd is replaced by block hash)</translation>\n     </message>\n     <message>\n-        <location line=\"+160\"/>\n+        <location line=\"+161\"/>\n         <source>Upgrade wallet to latest format</source>\n         <translation>Upgrade wallet to latest format</translation>\n     </message>\n     <message>\n-        <location line=\"-23\"/>\n+        <location line=\"-24\"/>\n         <source>Set key pool size to &lt;n&gt; (default: 100)</source>\n         <translation>Set key pool size to &lt;n&gt; (default: 100)</translation>\n     </message>\n     <message>\n-        <location line=\"-12\"/>\n+        <location line=\"-11\"/>\n         <source>Rescan the block chain for missing wallet transactions</source>\n         <translation>Rescan the block chain for missing wallet transactions</translation>\n     </message>\n@@ -3824,7 +3896,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>Use OpenSSL (https) for JSON-RPC connections</translation>\n     </message>\n     <message>\n-        <location line=\"-29\"/>\n+        <location line=\"-30\"/>\n         <source>Server certificate file (default: server.cert)</source>\n         <translation>Server certificate file (default: server.cert)</translation>\n     </message>\n@@ -3839,17 +3911,17 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>This help message</translation>\n     </message>\n     <message>\n-        <location line=\"+6\"/>\n+        <location line=\"+7\"/>\n         <source>Unable to bind to %s on this computer (bind returned error %d, %s)</source>\n         <translation>Unable to bind to %s on this computer (bind returned error %d, %s)</translation>\n     </message>\n     <message>\n-        <location line=\"-106\"/>\n+        <location line=\"-107\"/>\n         <source>Allow DNS lookups for -addnode, -seednode and -connect</source>\n         <translation>Allow DNS lookups for -addnode, -seednode and -connect</translation>\n     </message>\n     <message>\n-        <location line=\"+59\"/>\n+        <location line=\"+60\"/>\n         <source>Loading addresses...</source>\n         <translation>Loading addresses...</translation>\n     </message>\n@@ -3889,7 +3961,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>Unknown -socks proxy version requested: %i</translation>\n     </message>\n     <message>\n-        <location line=\"-100\"/>\n+        <location line=\"-101\"/>\n         <source>Cannot resolve -bind address: &apos;%s&apos;</source>\n         <translation>Cannot resolve -bind address: &apos;%s&apos;</translation>\n     </message>\n@@ -3899,7 +3971,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>Cannot resolve -externalip address: &apos;%s&apos;</translation>\n     </message>\n     <message>\n-        <location line=\"+47\"/>\n+        <location line=\"+48\"/>\n         <source>Invalid amount for -paytxfee=&lt;amount&gt;: &apos;%s&apos;</source>\n         <translation>Invalid amount for -paytxfee=&lt;amount&gt;: &apos;%s&apos;</translation>\n     </message>\n@@ -3919,7 +3991,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>Loading block index...</translation>\n     </message>\n     <message>\n-        <location line=\"-61\"/>\n+        <location line=\"-62\"/>\n         <source>Add a node to connect to and attempt to keep the connection open</source>\n         <translation>Add a node to connect to and attempt to keep the connection open</translation>\n     </message>\n@@ -3929,12 +4001,12 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>Unable to bind to %s on this computer. Bitcoin is probably already running.</translation>\n     </message>\n     <message>\n-        <location line=\"+94\"/>\n+        <location line=\"+95\"/>\n         <source>Loading wallet...</source>\n         <translation>Loading wallet...</translation>\n     </message>\n     <message>\n-        <location line=\"-55\"/>\n+        <location line=\"-56\"/>\n         <source>Cannot downgrade wallet</source>\n         <translation>Cannot downgrade wallet</translation>\n     </message>\n@@ -3944,7 +4016,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>Cannot write default address</translation>\n     </message>\n     <message>\n-        <location line=\"+66\"/>\n+        <location line=\"+67\"/>\n         <source>Rescanning...</source>\n         <translation>Rescanning...</translation>\n     </message>\n@@ -3964,7 +4036,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <translation>Error</translation>\n     </message>\n     <message>\n-        <location line=\"-34\"/>\n+        <location line=\"-35\"/>\n         <source>You must set rpcpassword=&lt;password&gt; in the configuration file:\n %s\n If the file does not exist, create it with owner-readable-only file permissions.</source>"
      }
    ]
  },
  {
    "sha": "266921e70ffcfa8d9c930284aaf02fd2d9b69109",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyNjY5MjFlNzBmZmNmYThkOWM5MzAyODRhYWYwMmZkMmQ5YjY5MTA5",
    "commit": {
      "author": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2014-01-13T16:54:33Z"
      },
      "committer": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2014-01-13T16:54:33Z"
      },
      "message": "Merge pull request #3516 from sipa/serorphans-head\n\nStore orphan blocks in serialized form",
      "tree": {
        "sha": "1c32a1b721ee3afc4d40ebb2d2fd6be01f6a0f38",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1c32a1b721ee3afc4d40ebb2d2fd6be01f6a0f38"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/266921e70ffcfa8d9c930284aaf02fd2d9b69109",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/266921e70ffcfa8d9c930284aaf02fd2d9b69109",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/266921e70ffcfa8d9c930284aaf02fd2d9b69109",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/266921e70ffcfa8d9c930284aaf02fd2d9b69109/comments",
    "author": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b1347d55654b8cd4371b865a011967085bfdcabf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b1347d55654b8cd4371b865a011967085bfdcabf",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b1347d55654b8cd4371b865a011967085bfdcabf"
      },
      {
        "sha": "da0fecffa788a0a74121d554d3d76936ab96b39e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/da0fecffa788a0a74121d554d3d76936ab96b39e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/da0fecffa788a0a74121d554d3d76936ab96b39e"
      }
    ],
    "stats": {
      "total": 58,
      "additions": 41,
      "deletions": 17
    },
    "files": [
      {
        "sha": "9c6c1ba0c385c6fb0f6dce5672873c1238b7754f",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 41,
        "deletions": 17,
        "changes": 58,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/266921e70ffcfa8d9c930284aaf02fd2d9b69109/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/266921e70ffcfa8d9c930284aaf02fd2d9b69109/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=266921e70ffcfa8d9c930284aaf02fd2d9b69109",
        "patch": "@@ -56,8 +56,13 @@ int64_t CTransaction::nMinRelayTxFee = 10000;\n \n static CMedianFilter<int> cPeerBlockCounts(8, 0); // Amount of blocks that other nodes claim to have\n \n-map<uint256, CBlock*> mapOrphanBlocks;\n-multimap<uint256, CBlock*> mapOrphanBlocksByPrev;\n+struct COrphanBlock {\n+    uint256 hashBlock;\n+    uint256 hashPrev;\n+    vector<unsigned char> vchBlock;\n+};\n+map<uint256, COrphanBlock*> mapOrphanBlocks;\n+multimap<uint256, COrphanBlock*> mapOrphanBlocksByPrev;\n \n map<uint256, CTransaction> mapOrphanTransactions;\n map<uint256, set<uint256> > mapOrphanTransactionsByPrev;\n@@ -985,12 +990,19 @@ bool ReadBlockFromDisk(CBlock& block, const CBlockIndex* pindex)\n     return true;\n }\n \n-uint256 static GetOrphanRoot(const CBlockHeader* pblock)\n+uint256 static GetOrphanRoot(const uint256& hash)\n {\n+    map<uint256, COrphanBlock*>::iterator it = mapOrphanBlocks.find(hash);\n+    if (it == mapOrphanBlocks.end())\n+        return hash;\n+\n     // Work back to the first block in the orphan chain\n-    while (mapOrphanBlocks.count(pblock->hashPrevBlock))\n-        pblock = mapOrphanBlocks[pblock->hashPrevBlock];\n-    return pblock->GetHash();\n+    do {\n+        map<uint256, COrphanBlock*>::iterator it2 = mapOrphanBlocks.find(it->second->hashPrev);\n+        if (it2 == mapOrphanBlocks.end())\n+            return it->first;\n+        it = it2;\n+    } while(true);\n }\n \n int64_t GetBlockValue(int nHeight, int64_t nFees)\n@@ -2277,12 +2289,19 @@ bool ProcessBlock(CValidationState &state, CNode* pfrom, CBlock* pblock, CDiskBl\n \n         // Accept orphans as long as there is a node to request its parents from\n         if (pfrom) {\n-            CBlock* pblock2 = new CBlock(*pblock);\n+            COrphanBlock* pblock2 = new COrphanBlock();\n+            {\n+                CDataStream ss(SER_DISK, CLIENT_VERSION);\n+                ss << *pblock;\n+                pblock2->vchBlock = std::vector<unsigned char>(ss.begin(), ss.end());\n+            }\n+            pblock2->hashBlock = hash;\n+            pblock2->hashPrev = pblock->hashPrevBlock;\n             mapOrphanBlocks.insert(make_pair(hash, pblock2));\n-            mapOrphanBlocksByPrev.insert(make_pair(pblock2->hashPrevBlock, pblock2));\n+            mapOrphanBlocksByPrev.insert(make_pair(pblock2->hashPrev, pblock2));\n \n             // Ask this guy to fill in what we're missing\n-            PushGetBlocks(pfrom, chainActive.Tip(), GetOrphanRoot(pblock2));\n+            PushGetBlocks(pfrom, chainActive.Tip(), GetOrphanRoot(hash));\n         }\n         return true;\n     }\n@@ -2297,17 +2316,22 @@ bool ProcessBlock(CValidationState &state, CNode* pfrom, CBlock* pblock, CDiskBl\n     for (unsigned int i = 0; i < vWorkQueue.size(); i++)\n     {\n         uint256 hashPrev = vWorkQueue[i];\n-        for (multimap<uint256, CBlock*>::iterator mi = mapOrphanBlocksByPrev.lower_bound(hashPrev);\n+        for (multimap<uint256, COrphanBlock*>::iterator mi = mapOrphanBlocksByPrev.lower_bound(hashPrev);\n              mi != mapOrphanBlocksByPrev.upper_bound(hashPrev);\n              ++mi)\n         {\n-            CBlock* pblockOrphan = (*mi).second;\n+            CBlock block;\n+            {\n+                CDataStream ss(mi->second->vchBlock, SER_DISK, CLIENT_VERSION);\n+                ss >> block;\n+            }\n+            block.BuildMerkleTree();\n             // Use a dummy CValidationState so someone can't setup nodes to counter-DoS based on orphan resolution (that is, feeding people an invalid block based on LegitBlockX in order to get anyone relaying LegitBlockX banned)\n             CValidationState stateDummy;\n-            if (AcceptBlock(*pblockOrphan, stateDummy))\n-                vWorkQueue.push_back(pblockOrphan->GetHash());\n-            mapOrphanBlocks.erase(pblockOrphan->GetHash());\n-            delete pblockOrphan;\n+            if (AcceptBlock(block, stateDummy))\n+                vWorkQueue.push_back(mi->second->hashBlock);\n+            mapOrphanBlocks.erase(mi->second->hashBlock);\n+            delete mi->second;\n         }\n         mapOrphanBlocksByPrev.erase(hashPrev);\n     }\n@@ -3331,7 +3355,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n                 if (!fImporting && !fReindex)\n                     pfrom->AskFor(inv);\n             } else if (inv.type == MSG_BLOCK && mapOrphanBlocks.count(inv.hash)) {\n-                PushGetBlocks(pfrom, chainActive.Tip(), GetOrphanRoot(mapOrphanBlocks[inv.hash]));\n+                PushGetBlocks(pfrom, chainActive.Tip(), GetOrphanRoot(inv.hash));\n             } else if (nInv == nLastBlock) {\n                 // In case we are on a very long side-chain, it is possible that we already have\n                 // the last block in an inv bundle sent in response to getblocks. Try to detect\n@@ -4119,7 +4143,7 @@ class CMainCleanup\n         mapBlockIndex.clear();\n \n         // orphan blocks\n-        std::map<uint256, CBlock*>::iterator it2 = mapOrphanBlocks.begin();\n+        std::map<uint256, COrphanBlock*>::iterator it2 = mapOrphanBlocks.begin();\n         for (; it2 != mapOrphanBlocks.end(); it2++)\n             delete (*it2).second;\n         mapOrphanBlocks.clear();"
      }
    ]
  },
  {
    "sha": "e4f041bdd133af5eb7461a8dda4ba62fe4d6f117",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNGYwNDFiZGQxMzNhZjVlYjc0NjFhOGRkYTRiYTYyZmU0ZDZmMTE3",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-14T06:51:02Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-14T06:54:51Z"
      },
      "message": "Merge pull request #3525\n\n15570cc src/leveldb/Makefile is ignored? (harry)",
      "tree": {
        "sha": "e637e8da36183b0b0ede458ccdc540d6fd4ee345",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e637e8da36183b0b0ede458ccdc540d6fd4ee345"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e4f041bdd133af5eb7461a8dda4ba62fe4d6f117",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJS1N87AAoJEHSBCwEjRsmmNHEIAIotqg82/3cHWHJA1urGxoBT\nZMMBaYag6AxNslrTgl0UEfBSI1j5P1ss+dlvtiPkMmgJAHyXFygDmKhYL8PLAdOF\n8C82A0fYn4wXBbnrIYMYNGSZJT81MSeHCFf7dMO11PIdbeOKcPMftm8m4Kb2f3J6\n1HpsBmk4/8PZKqza+ojxSHjZTXRQrhSPnCVP5BZD78MgW75cIoKKrW1LRJic3owi\nqnY3PxJFAcxkv1JJqcxzjA6bxIV5K0swQ6DJ6Mt9tfxlWJz4OTh30fNIvqOVwDJs\nDWtzWqDr0OZkrx/pFIjvlA/VorvQ5qSNEKZ5GGQSzR7Dzq0cAEttsavcbfZ1uF8=\n=M4ax\n-----END PGP SIGNATURE-----",
        "payload": "tree e637e8da36183b0b0ede458ccdc540d6fd4ee345\nparent 266921e70ffcfa8d9c930284aaf02fd2d9b69109\nparent 15570cc9aa94b53e95fa847a66e03326c6875d3c\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1389682262 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1389682491 +0100\n\nMerge pull request #3525\n\n15570cc src/leveldb/Makefile is ignored? (harry)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e4f041bdd133af5eb7461a8dda4ba62fe4d6f117",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e4f041bdd133af5eb7461a8dda4ba62fe4d6f117",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e4f041bdd133af5eb7461a8dda4ba62fe4d6f117/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "266921e70ffcfa8d9c930284aaf02fd2d9b69109",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/266921e70ffcfa8d9c930284aaf02fd2d9b69109",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/266921e70ffcfa8d9c930284aaf02fd2d9b69109"
      },
      {
        "sha": "15570cc9aa94b53e95fa847a66e03326c6875d3c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/15570cc9aa94b53e95fa847a66e03326c6875d3c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/15570cc9aa94b53e95fa847a66e03326c6875d3c"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "7615fe3915a22783136b90c778c09cef824e6b1f",
        "filename": ".gitignore",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e4f041bdd133af5eb7461a8dda4ba62fe4d6f117/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e4f041bdd133af5eb7461a8dda4ba62fe4d6f117/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.gitignore?ref=e4f041bdd133af5eb7461a8dda4ba62fe4d6f117",
        "patch": "@@ -81,4 +81,4 @@ win32-build\n qa/pull-tester/run-bitcoind-for-test.sh\n qa/pull-tester/build-tests.sh\n \n-!src/leveldb-*/Makefile\n+!src/leveldb*/Makefile"
      }
    ]
  },
  {
    "sha": "dbafb99472120efaa9ce219cf0532498e1a5e04a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkYmFmYjk5NDcyMTIwZWZhYTljZTIxOWNmMDUzMjQ5OGUxYTVlMDRh",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-14T06:55:08Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-14T06:55:47Z"
      },
      "message": "Merge pull request #3526\n\nf10b2d7 qt: use series of pngs for spinner (Wladimir J. van der Laan)",
      "tree": {
        "sha": "6ca714b3daa5d96565cf348ff940730973c3acee",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6ca714b3daa5d96565cf348ff940730973c3acee"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dbafb99472120efaa9ce219cf0532498e1a5e04a",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJS1N9zAAoJEHSBCwEjRsmmP4QH/1ltRJ+JM0VYqiAkYfBL1VX6\nbVIG1HBTZ90aWtP/+0pLT5MEPIYUHufsGS8TiGGtpY3jllM+ACW0L9mqXGa7JDIM\nTWQUzXnACIIE2EiVEp1nwbWNpPTImh/5MhoWvyO2lHqrCKlTVDBkb/K1aB5zpJZH\nlwR6Dv8CGBipB10FmGznh48IjegjZ/S7uTr73H1E6YmZUW0thPs005Cxld6QSqaZ\nEWE7EeL1AYLonsHl1McneGZIqDJCGxoIPMRvjLumBXxZnUAxYJFWdjBy7tOmhmhP\nH4C//3R2bL14StjBK+uEISI8q6lOaOZzUWcT9gdQi4tEIhgxHNXeI77/GjS8ZAo=\n=hQTK\n-----END PGP SIGNATURE-----",
        "payload": "tree 6ca714b3daa5d96565cf348ff940730973c3acee\nparent e4f041bdd133af5eb7461a8dda4ba62fe4d6f117\nparent f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1389682508 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1389682547 +0100\n\nMerge pull request #3526\n\nf10b2d7 qt: use series of pngs for spinner (Wladimir J. van der Laan)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dbafb99472120efaa9ce219cf0532498e1a5e04a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/dbafb99472120efaa9ce219cf0532498e1a5e04a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dbafb99472120efaa9ce219cf0532498e1a5e04a/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e4f041bdd133af5eb7461a8dda4ba62fe4d6f117",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e4f041bdd133af5eb7461a8dda4ba62fe4d6f117",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e4f041bdd133af5eb7461a8dda4ba62fe4d6f117"
      },
      {
        "sha": "f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f10b2d70d09c2e9f5c14ba5e3673c5fb31aa9468"
      }
    ],
    "stats": {
      "total": 76,
      "additions": 55,
      "deletions": 21
    },
    "files": [
      {
        "sha": "220a35212c497903f23f21c53476e1066bd2485f",
        "filename": "contrib/debian/copyright",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dbafb99472120efaa9ce219cf0532498e1a5e04a/contrib/debian/copyright",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dbafb99472120efaa9ce219cf0532498e1a5e04a/contrib/debian/copyright",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/copyright?ref=dbafb99472120efaa9ce219cf0532498e1a5e04a",
        "patch": "@@ -71,7 +71,7 @@ Copyright: Bitboy (optimized for 16x16 by Wladimir van der Laan)\n License: PUB-DOM\n Comment: Site: https://bitcointalk.org/?topic=1756.0\n \n-Files:  scripts/img/reload.xcf, src/qt/res/movies/update_spinner.mng\n+Files:  scripts/img/reload.xcf, src/qt/res/movies/*.png\n Copyright: Everaldo (Everaldo Coelho)\n License: GPL-3+\n Comment: Icon Pack: Kids"
      },
      {
        "sha": "d42be8fb24bd9d636c92a89c7081053da0eb3dd9",
        "filename": "doc/assets-attribution.md",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dbafb99472120efaa9ce219cf0532498e1a5e04a/doc/assets-attribution.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dbafb99472120efaa9ce219cf0532498e1a5e04a/doc/assets-attribution.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/assets-attribution.md?ref=dbafb99472120efaa9ce219cf0532498e1a5e04a",
        "patch": "@@ -76,7 +76,7 @@ Everaldo (Everaldo Coelho)\n * Site: [http://findicons.com/icon/17102/reload?id=17102](http://findicons.com/icon/17102/reload?id=17102)\n \n ### Assets Used\n-\tscripts/img/reload.xcf (modified), src/qt/res/movies/update_spinner.mng\n+\tscripts/img/reload.xcf (modified), src/qt/res/movies/*.png\n \n [Vignoni David](http://www.oxygen-icons.org)\n -----------------------\n@@ -101,4 +101,4 @@ Jonas Schnelli\n \tsrc/qt/res/src/bitcoin.ico, src/qt/res/src/bitcoin.png,\n \tsrc/qt/res/src/bitcoin_testnet.png, docs/bitcoin_logo_doxygen.png,\n \tsrc/qt/res/icons/toolbar.png, src/qt/res/icons/toolbar_testnet.png,\n-\tsrc/qt/res/images/splash.png, src/qt/res/images/splash_testnet.png\n\\ No newline at end of file\n+\tsrc/qt/res/images/splash.png, src/qt/res/images/splash_testnet.png"
      },
      {
        "sha": "9068db9a6334e80234194fa23ba9912338d93841",
        "filename": "share/qt/img/reload.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dbafb99472120efaa9ce219cf0532498e1a5e04a/share/qt/img/reload.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dbafb99472120efaa9ce219cf0532498e1a5e04a/share/qt/img/reload.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/qt/img/reload.png?ref=dbafb99472120efaa9ce219cf0532498e1a5e04a"
      },
      {
        "sha": "bb19e9150815f20b731e516211a8d7845ee57533",
        "filename": "share/qt/make_spinner.py",
        "status": "modified",
        "additions": 4,
        "deletions": 9,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dbafb99472120efaa9ce219cf0532498e1a5e04a/share/qt/make_spinner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dbafb99472120efaa9ce219cf0532498e1a5e04a/share/qt/make_spinner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/qt/make_spinner.py?ref=dbafb99472120efaa9ce219cf0532498e1a5e04a",
        "patch": "@@ -1,16 +1,15 @@\n #!/usr/bin/env python\n # W.J. van der Laan, 2011\n-# Make spinning .mng animation from a .png\n+# Make spinning animation from a .png\n # Requires imagemagick 6.7+\n from __future__ import division\n from os import path\n from PIL import Image\n from subprocess import Popen\n \n-SRC='img/reload_scaled.png'\n-DST='../../src/qt/res/movies/update_spinner.mng'\n-TMPDIR='/tmp'\n-TMPNAME='tmp-%03i.png'\n+SRC='img/reload.png'\n+TMPDIR='../../src/qt/res/movies/'\n+TMPNAME='spinner-%03i.png'\n NUMFRAMES=35\n FRAMERATE=10.0\n CONVERT='convert'\n@@ -36,8 +35,4 @@ def frame_to_filename(frame):\n     im_new.save(outfile, 'png')\n     frame_files.append(outfile)\n \n-p = Popen([CONVERT, \"-delay\", str(FRAMERATE), \"-dispose\", \"2\"] + frame_files + [DST])\n-p.communicate()\n-\n-\n "
      },
      {
        "sha": "274cebcf3ac7159fe997016a9db11a87abdf554b",
        "filename": "src/qt/Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dbafb99472120efaa9ce219cf0532498e1a5e04a/src/qt/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dbafb99472120efaa9ce219cf0532498e1a5e04a/src/qt/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/Makefile.am?ref=dbafb99472120efaa9ce219cf0532498e1a5e04a",
        "patch": "@@ -303,7 +303,7 @@ RES_IMAGES = \\\n   res/images/splash.png \\\n   res/images/splash_testnet.png\n \n-RES_MOVIES = res/movies/update_spinner.mng\n+RES_MOVIES = $(wildcard res/movies/spinner-*.png)\n \n BITCOIN_RC = res/bitcoin-qt-res.rc\n "
      },
      {
        "sha": "746b5a4092b17ccebe7324347027f57dfdd9f873",
        "filename": "src/qt/bitcoin.qrc",
        "status": "modified",
        "additions": 35,
        "deletions": 1,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dbafb99472120efaa9ce219cf0532498e1a5e04a/src/qt/bitcoin.qrc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dbafb99472120efaa9ce219cf0532498e1a5e04a/src/qt/bitcoin.qrc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.qrc?ref=dbafb99472120efaa9ce219cf0532498e1a5e04a",
        "patch": "@@ -47,7 +47,41 @@\n         <file alias=\"splash_testnet\">res/images/splash_testnet.png</file>\n     </qresource>\n     <qresource prefix=\"/movies\">\n-        <file alias=\"update_spinner\">res/movies/update_spinner.mng</file>\n+        <file alias=\"spinner-000\">res/movies/spinner-000.png</file>\n+        <file alias=\"spinner-001\">res/movies/spinner-001.png</file>\n+        <file alias=\"spinner-002\">res/movies/spinner-002.png</file>\n+        <file alias=\"spinner-003\">res/movies/spinner-003.png</file>\n+        <file alias=\"spinner-004\">res/movies/spinner-004.png</file>\n+        <file alias=\"spinner-005\">res/movies/spinner-005.png</file>\n+        <file alias=\"spinner-006\">res/movies/spinner-006.png</file>\n+        <file alias=\"spinner-007\">res/movies/spinner-007.png</file>\n+        <file alias=\"spinner-008\">res/movies/spinner-008.png</file>\n+        <file alias=\"spinner-009\">res/movies/spinner-009.png</file>\n+        <file alias=\"spinner-010\">res/movies/spinner-010.png</file>\n+        <file alias=\"spinner-011\">res/movies/spinner-011.png</file>\n+        <file alias=\"spinner-012\">res/movies/spinner-012.png</file>\n+        <file alias=\"spinner-013\">res/movies/spinner-013.png</file>\n+        <file alias=\"spinner-014\">res/movies/spinner-014.png</file>\n+        <file alias=\"spinner-015\">res/movies/spinner-015.png</file>\n+        <file alias=\"spinner-016\">res/movies/spinner-016.png</file>\n+        <file alias=\"spinner-017\">res/movies/spinner-017.png</file>\n+        <file alias=\"spinner-018\">res/movies/spinner-018.png</file>\n+        <file alias=\"spinner-019\">res/movies/spinner-019.png</file>\n+        <file alias=\"spinner-020\">res/movies/spinner-020.png</file>\n+        <file alias=\"spinner-021\">res/movies/spinner-021.png</file>\n+        <file alias=\"spinner-022\">res/movies/spinner-022.png</file>\n+        <file alias=\"spinner-023\">res/movies/spinner-023.png</file>\n+        <file alias=\"spinner-024\">res/movies/spinner-024.png</file>\n+        <file alias=\"spinner-025\">res/movies/spinner-025.png</file>\n+        <file alias=\"spinner-026\">res/movies/spinner-026.png</file>\n+        <file alias=\"spinner-027\">res/movies/spinner-027.png</file>\n+        <file alias=\"spinner-028\">res/movies/spinner-028.png</file>\n+        <file alias=\"spinner-029\">res/movies/spinner-029.png</file>\n+        <file alias=\"spinner-030\">res/movies/spinner-030.png</file>\n+        <file alias=\"spinner-031\">res/movies/spinner-031.png</file>\n+        <file alias=\"spinner-032\">res/movies/spinner-032.png</file>\n+        <file alias=\"spinner-033\">res/movies/spinner-033.png</file>\n+        <file alias=\"spinner-034\">res/movies/spinner-034.png</file>\n     </qresource>\n     <qresource prefix=\"/translations\">\n         <file alias=\"ach\">locale/bitcoin_ach.qm</file>"
      },
      {
        "sha": "692fb6dc1dfe32790082fedee61faee73aa328bb",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 6,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dbafb99472120efaa9ce219cf0532498e1a5e04a/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dbafb99472120efaa9ce219cf0532498e1a5e04a/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=dbafb99472120efaa9ce219cf0532498e1a5e04a",
        "patch": "@@ -39,7 +39,6 @@\n #include <QMenuBar>\n #include <QMessageBox>\n #include <QMimeData>\n-#include <QMovie>\n #include <QProgressBar>\n #include <QSettings>\n #include <QStackedWidget>\n@@ -68,7 +67,8 @@ BitcoinGUI::BitcoinGUI(bool fIsTestnet, QWidget *parent) :\n     trayIcon(0),\n     notificator(0),\n     rpcConsole(0),\n-    prevBlocks(0)\n+    prevBlocks(0),\n+    spinnerFrame(0)\n {\n     GUIUtil::restoreWindowGeometry(\"nWindow\", QSize(850, 550), this);\n \n@@ -187,8 +187,6 @@ BitcoinGUI::BitcoinGUI(bool fIsTestnet, QWidget *parent) :\n     statusBar()->addWidget(progressBar);\n     statusBar()->addPermanentWidget(frameBlocks);\n \n-    syncIconMovie = new QMovie(\":/movies/update_spinner\", \"mng\", this);\n-\n     connect(openRPCConsoleAction, SIGNAL(triggered()), rpcConsole, SLOT(show()));\n \n     // prevents an oben debug window from becoming stuck/unusable on client shutdown\n@@ -684,9 +682,13 @@ void BitcoinGUI::setNumBlocks(int count, int nTotalBlocks)\n         progressBar->setVisible(true);\n \n         tooltip = tr(\"Catching up...\") + QString(\"<br>\") + tooltip;\n-        labelBlocksIcon->setMovie(syncIconMovie);\n         if(count != prevBlocks)\n-            syncIconMovie->jumpToNextFrame();\n+        {\n+            labelBlocksIcon->setPixmap(QIcon(QString(\n+                \":/movies/spinner-%1\").arg(spinnerFrame, 3, 10, QChar('0')))\n+                .pixmap(STATUSBAR_ICONSIZE, STATUSBAR_ICONSIZE));\n+            spinnerFrame = (spinnerFrame + 1) % SPINNER_FRAMES;\n+        }\n         prevBlocks = count;\n \n #ifdef ENABLE_WALLET"
      },
      {
        "sha": "d5bbdca484137047980d9c869565f4eff706215b",
        "filename": "src/qt/bitcoingui.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dbafb99472120efaa9ce219cf0532498e1a5e04a/src/qt/bitcoingui.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dbafb99472120efaa9ce219cf0532498e1a5e04a/src/qt/bitcoingui.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.h?ref=dbafb99472120efaa9ce219cf0532498e1a5e04a",
        "patch": "@@ -98,9 +98,9 @@ class BitcoinGUI : public QMainWindow\n     Notificator *notificator;\n     RPCConsole *rpcConsole;\n \n-    QMovie *syncIconMovie;\n     /** Keep track of previous number of blocks, to detect progress */\n     int prevBlocks;\n+    int spinnerFrame;\n \n     /** Create the main UI actions. */\n     void createActions(bool fIsTestnet);"
      },
      {
        "sha": "d1a601706bbe486641f9f5277e220a45acb40268",
        "filename": "src/qt/guiconstants.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dbafb99472120efaa9ce219cf0532498e1a5e04a/src/qt/guiconstants.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dbafb99472120efaa9ce219cf0532498e1a5e04a/src/qt/guiconstants.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiconstants.h?ref=dbafb99472120efaa9ce219cf0532498e1a5e04a",
        "patch": "@@ -38,4 +38,7 @@ static const int MAX_PAYMENT_REQUEST_SIZE = 50000; // bytes\n /* QRCodeDialog -- size of exported QR Code image */\n #define EXPORT_IMAGE_SIZE 256\n \n+/* Number of frames in spinner animation */\n+#define SPINNER_FRAMES 35\n+\n #endif // GUICONSTANTS_H"
      },
      {
        "sha": "1f4fb732ef3685c2026e1094b1d52134b504cdf0",
        "filename": "src/qt/res/movies/spinner-000.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dbafb99472120efaa9ce219cf0532498e1a5e04a/src/qt/res/movies/spinner-000.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dbafb99472120efaa9ce219cf0532498e1a5e04a/src/qt/res/movies/spinner-000.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/movies/spinner-000.png?ref=dbafb99472120efaa9ce219cf0532498e1a5e04a"
      },
      {
        "sha": "e6ca67a1b0e849250988fe936a1bf5a96e922b79",
        "filename": "src/qt/res/movies/spinner-001.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dbafb99472120efaa9ce219cf0532498e1a5e04a/src/qt/res/movies/spinner-001.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dbafb99472120efaa9ce219cf0532498e1a5e04a/src/qt/res/movies/spinner-001.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/movies/spinner-001.png?ref=dbafb99472120efaa9ce219cf0532498e1a5e04a"
      },
      {
        "sha": "2360467affd6aa493a1cc59b27d66b824d4bbdc8",
        "filename": "src/qt/res/movies/spinner-002.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dbafb99472120efaa9ce219cf0532498e1a5e04a/src/qt/res/movies/spinner-002.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dbafb99472120efaa9ce219cf0532498e1a5e04a/src/qt/res/movies/spinner-002.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/movies/spinner-002.png?ref=dbafb99472120efaa9ce219cf0532498e1a5e04a"
      },
      {
        "sha": "52bed625661a41dcb99b78d372578d81689649cf",
        "filename": "src/qt/res/movies/spinner-003.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dbafb99472120efaa9ce219cf0532498e1a5e04a/src/qt/res/movies/spinner-003.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dbafb99472120efaa9ce219cf0532498e1a5e04a/src/qt/res/movies/spinner-003.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/movies/spinner-003.png?ref=dbafb99472120efaa9ce219cf0532498e1a5e04a"
      },
      {
        "sha": "de5c88a56f7a80e1b1fc2e918d9a771360fef6cf",
        "filename": "src/qt/res/movies/spinner-004.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dbafb99472120efaa9ce219cf0532498e1a5e04a/src/qt/res/movies/spinner-004.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dbafb99472120efaa9ce219cf0532498e1a5e04a/src/qt/res/movies/spinner-004.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/movies/spinner-004.png?ref=dbafb99472120efaa9ce219cf0532498e1a5e04a"
      },
      {
        "sha": "27b30336a15296d84390d1383c5d0fb4c61f66a0",
        "filename": "src/qt/res/movies/spinner-005.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dbafb99472120efaa9ce219cf0532498e1a5e04a/src/qt/res/movies/spinner-005.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dbafb99472120efaa9ce219cf0532498e1a5e04a/src/qt/res/movies/spinner-005.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/movies/spinner-005.png?ref=dbafb99472120efaa9ce219cf0532498e1a5e04a"
      },
      {
        "sha": "1fa6b0e242a32769cf266e046d06321048224d60",
        "filename": "src/qt/res/movies/spinner-006.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dbafb99472120efaa9ce219cf0532498e1a5e04a/src/qt/res/movies/spinner-006.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dbafb99472120efaa9ce219cf0532498e1a5e04a/src/qt/res/movies/spinner-006.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/movies/spinner-006.png?ref=dbafb99472120efaa9ce219cf0532498e1a5e04a"
      },
      {
        "sha": "f54fa8775e4959146e3813e22bea555edd85bd7c",
        "filename": "src/qt/res/movies/spinner-007.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dbafb99472120efaa9ce219cf0532498e1a5e04a/src/qt/res/movies/spinner-007.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dbafb99472120efaa9ce219cf0532498e1a5e04a/src/qt/res/movies/spinner-007.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/movies/spinner-007.png?ref=dbafb99472120efaa9ce219cf0532498e1a5e04a"
      },
      {
        "sha": "d25aa5300f19de303007c83b24425e7b80173b2c",
        "filename": "src/qt/res/movies/spinner-008.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dbafb99472120efaa9ce219cf0532498e1a5e04a/src/qt/res/movies/spinner-008.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dbafb99472120efaa9ce219cf0532498e1a5e04a/src/qt/res/movies/spinner-008.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/movies/spinner-008.png?ref=dbafb99472120efaa9ce219cf0532498e1a5e04a"
      },
      {
        "sha": "1349b875861bf2a9ff67b7e0319c4aea7573172c",
        "filename": "src/qt/res/movies/spinner-009.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dbafb99472120efaa9ce219cf0532498e1a5e04a/src/qt/res/movies/spinner-009.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dbafb99472120efaa9ce219cf0532498e1a5e04a/src/qt/res/movies/spinner-009.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/movies/spinner-009.png?ref=dbafb99472120efaa9ce219cf0532498e1a5e04a"
      },
      {
        "sha": "6020e275f11bed91c15c2cda17c99283d8ca6c78",
        "filename": "src/qt/res/movies/spinner-010.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dbafb99472120efaa9ce219cf0532498e1a5e04a/src/qt/res/movies/spinner-010.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dbafb99472120efaa9ce219cf0532498e1a5e04a/src/qt/res/movies/spinner-010.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/movies/spinner-010.png?ref=dbafb99472120efaa9ce219cf0532498e1a5e04a"
      },
      {
        "sha": "0d0e811ea7a38844f48aa045aca89eccf683a51d",
        "filename": "src/qt/res/movies/spinner-011.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dbafb99472120efaa9ce219cf0532498e1a5e04a/src/qt/res/movies/spinner-011.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dbafb99472120efaa9ce219cf0532498e1a5e04a/src/qt/res/movies/spinner-011.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/movies/spinner-011.png?ref=dbafb99472120efaa9ce219cf0532498e1a5e04a"
      },
      {
        "sha": "937afb6be2a067e72ff2c6379c8af8f4d942f69b",
        "filename": "src/qt/res/movies/spinner-012.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dbafb99472120efaa9ce219cf0532498e1a5e04a/src/qt/res/movies/spinner-012.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dbafb99472120efaa9ce219cf0532498e1a5e04a/src/qt/res/movies/spinner-012.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/movies/spinner-012.png?ref=dbafb99472120efaa9ce219cf0532498e1a5e04a"
      },
      {
        "sha": "4ae5a671a34d1911be0215dd8348ebb6e5340864",
        "filename": "src/qt/res/movies/spinner-013.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dbafb99472120efaa9ce219cf0532498e1a5e04a/src/qt/res/movies/spinner-013.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dbafb99472120efaa9ce219cf0532498e1a5e04a/src/qt/res/movies/spinner-013.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/movies/spinner-013.png?ref=dbafb99472120efaa9ce219cf0532498e1a5e04a"
      },
      {
        "sha": "c3a81add0e870a748db0c0b8f76519b6df2311b6",
        "filename": "src/qt/res/movies/spinner-014.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dbafb99472120efaa9ce219cf0532498e1a5e04a/src/qt/res/movies/spinner-014.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dbafb99472120efaa9ce219cf0532498e1a5e04a/src/qt/res/movies/spinner-014.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/movies/spinner-014.png?ref=dbafb99472120efaa9ce219cf0532498e1a5e04a"
      },
      {
        "sha": "184a9fe4249b059254e16c5e801b9d84d6cc9c69",
        "filename": "src/qt/res/movies/spinner-015.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dbafb99472120efaa9ce219cf0532498e1a5e04a/src/qt/res/movies/spinner-015.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dbafb99472120efaa9ce219cf0532498e1a5e04a/src/qt/res/movies/spinner-015.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/movies/spinner-015.png?ref=dbafb99472120efaa9ce219cf0532498e1a5e04a"
      },
      {
        "sha": "2da9b9dc72398915a9e9917ecefd7a25d8e29ee1",
        "filename": "src/qt/res/movies/spinner-016.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dbafb99472120efaa9ce219cf0532498e1a5e04a/src/qt/res/movies/spinner-016.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dbafb99472120efaa9ce219cf0532498e1a5e04a/src/qt/res/movies/spinner-016.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/movies/spinner-016.png?ref=dbafb99472120efaa9ce219cf0532498e1a5e04a"
      },
      {
        "sha": "ada83fbe84743773d4c2305e7ba584c7266faf64",
        "filename": "src/qt/res/movies/spinner-017.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dbafb99472120efaa9ce219cf0532498e1a5e04a/src/qt/res/movies/spinner-017.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dbafb99472120efaa9ce219cf0532498e1a5e04a/src/qt/res/movies/spinner-017.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/movies/spinner-017.png?ref=dbafb99472120efaa9ce219cf0532498e1a5e04a"
      },
      {
        "sha": "cc436ba8cbb077aa696e5bdac62e93f2e4507b26",
        "filename": "src/qt/res/movies/spinner-018.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dbafb99472120efaa9ce219cf0532498e1a5e04a/src/qt/res/movies/spinner-018.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dbafb99472120efaa9ce219cf0532498e1a5e04a/src/qt/res/movies/spinner-018.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/movies/spinner-018.png?ref=dbafb99472120efaa9ce219cf0532498e1a5e04a"
      },
      {
        "sha": "03da25bc2a71fb490710b287fe18cce3c2f61d50",
        "filename": "src/qt/res/movies/spinner-019.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dbafb99472120efaa9ce219cf0532498e1a5e04a/src/qt/res/movies/spinner-019.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dbafb99472120efaa9ce219cf0532498e1a5e04a/src/qt/res/movies/spinner-019.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/movies/spinner-019.png?ref=dbafb99472120efaa9ce219cf0532498e1a5e04a"
      },
      {
        "sha": "e7f2ac78e8843da3e07639c4e5a72713a8cd8923",
        "filename": "src/qt/res/movies/spinner-020.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dbafb99472120efaa9ce219cf0532498e1a5e04a/src/qt/res/movies/spinner-020.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dbafb99472120efaa9ce219cf0532498e1a5e04a/src/qt/res/movies/spinner-020.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/movies/spinner-020.png?ref=dbafb99472120efaa9ce219cf0532498e1a5e04a"
      },
      {
        "sha": "dc9e580bf38a40b80fea356b50171cb864182eb4",
        "filename": "src/qt/res/movies/spinner-021.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dbafb99472120efaa9ce219cf0532498e1a5e04a/src/qt/res/movies/spinner-021.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dbafb99472120efaa9ce219cf0532498e1a5e04a/src/qt/res/movies/spinner-021.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/movies/spinner-021.png?ref=dbafb99472120efaa9ce219cf0532498e1a5e04a"
      },
      {
        "sha": "6e236c805e6ff1f53a8aa4a6b8567bc14141ae90",
        "filename": "src/qt/res/movies/spinner-022.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dbafb99472120efaa9ce219cf0532498e1a5e04a/src/qt/res/movies/spinner-022.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dbafb99472120efaa9ce219cf0532498e1a5e04a/src/qt/res/movies/spinner-022.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/movies/spinner-022.png?ref=dbafb99472120efaa9ce219cf0532498e1a5e04a"
      },
      {
        "sha": "f1c32284858cff8176698031db664e679b3a8c92",
        "filename": "src/qt/res/movies/spinner-023.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dbafb99472120efaa9ce219cf0532498e1a5e04a/src/qt/res/movies/spinner-023.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dbafb99472120efaa9ce219cf0532498e1a5e04a/src/qt/res/movies/spinner-023.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/movies/spinner-023.png?ref=dbafb99472120efaa9ce219cf0532498e1a5e04a"
      },
      {
        "sha": "d8cf21f1783f308ea754714ef01087c9ba6ca904",
        "filename": "src/qt/res/movies/spinner-024.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dbafb99472120efaa9ce219cf0532498e1a5e04a/src/qt/res/movies/spinner-024.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dbafb99472120efaa9ce219cf0532498e1a5e04a/src/qt/res/movies/spinner-024.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/movies/spinner-024.png?ref=dbafb99472120efaa9ce219cf0532498e1a5e04a"
      },
      {
        "sha": "2b5ede32934e29854e7e82cfd060e6e56233f07a",
        "filename": "src/qt/res/movies/spinner-025.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dbafb99472120efaa9ce219cf0532498e1a5e04a/src/qt/res/movies/spinner-025.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dbafb99472120efaa9ce219cf0532498e1a5e04a/src/qt/res/movies/spinner-025.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/movies/spinner-025.png?ref=dbafb99472120efaa9ce219cf0532498e1a5e04a"
      },
      {
        "sha": "5ee3d2fa8ef37adb6ef8acc2d39ada07fb8e71f5",
        "filename": "src/qt/res/movies/spinner-026.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dbafb99472120efaa9ce219cf0532498e1a5e04a/src/qt/res/movies/spinner-026.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dbafb99472120efaa9ce219cf0532498e1a5e04a/src/qt/res/movies/spinner-026.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/movies/spinner-026.png?ref=dbafb99472120efaa9ce219cf0532498e1a5e04a"
      },
      {
        "sha": "c2ee8082bdbaa0a5115555f15890b12dc3954759",
        "filename": "src/qt/res/movies/spinner-027.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dbafb99472120efaa9ce219cf0532498e1a5e04a/src/qt/res/movies/spinner-027.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dbafb99472120efaa9ce219cf0532498e1a5e04a/src/qt/res/movies/spinner-027.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/movies/spinner-027.png?ref=dbafb99472120efaa9ce219cf0532498e1a5e04a"
      },
      {
        "sha": "f70d3531adaad1df3c3535f5e5ba96053691a8c9",
        "filename": "src/qt/res/movies/spinner-028.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dbafb99472120efaa9ce219cf0532498e1a5e04a/src/qt/res/movies/spinner-028.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dbafb99472120efaa9ce219cf0532498e1a5e04a/src/qt/res/movies/spinner-028.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/movies/spinner-028.png?ref=dbafb99472120efaa9ce219cf0532498e1a5e04a"
      },
      {
        "sha": "02b97207a95e7748fc506ed6cfd22089ab2b1ecf",
        "filename": "src/qt/res/movies/spinner-029.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dbafb99472120efaa9ce219cf0532498e1a5e04a/src/qt/res/movies/spinner-029.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dbafb99472120efaa9ce219cf0532498e1a5e04a/src/qt/res/movies/spinner-029.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/movies/spinner-029.png?ref=dbafb99472120efaa9ce219cf0532498e1a5e04a"
      },
      {
        "sha": "0c74e82c6f8be6fb7d093b4ddc0ebfebd04fc98a",
        "filename": "src/qt/res/movies/spinner-030.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dbafb99472120efaa9ce219cf0532498e1a5e04a/src/qt/res/movies/spinner-030.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dbafb99472120efaa9ce219cf0532498e1a5e04a/src/qt/res/movies/spinner-030.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/movies/spinner-030.png?ref=dbafb99472120efaa9ce219cf0532498e1a5e04a"
      },
      {
        "sha": "c5e29bcec7e9154c506ce83a88226cc49dc778ba",
        "filename": "src/qt/res/movies/spinner-031.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dbafb99472120efaa9ce219cf0532498e1a5e04a/src/qt/res/movies/spinner-031.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dbafb99472120efaa9ce219cf0532498e1a5e04a/src/qt/res/movies/spinner-031.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/movies/spinner-031.png?ref=dbafb99472120efaa9ce219cf0532498e1a5e04a"
      },
      {
        "sha": "d72c9bf0dd33440e89a7b54d3aee8348d4f2c76a",
        "filename": "src/qt/res/movies/spinner-032.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dbafb99472120efaa9ce219cf0532498e1a5e04a/src/qt/res/movies/spinner-032.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dbafb99472120efaa9ce219cf0532498e1a5e04a/src/qt/res/movies/spinner-032.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/movies/spinner-032.png?ref=dbafb99472120efaa9ce219cf0532498e1a5e04a"
      },
      {
        "sha": "a8b822bfaf24df1c8359008d91ef0a9e4bc27507",
        "filename": "src/qt/res/movies/spinner-033.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dbafb99472120efaa9ce219cf0532498e1a5e04a/src/qt/res/movies/spinner-033.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dbafb99472120efaa9ce219cf0532498e1a5e04a/src/qt/res/movies/spinner-033.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/movies/spinner-033.png?ref=dbafb99472120efaa9ce219cf0532498e1a5e04a"
      },
      {
        "sha": "684aa385e01d954a347c1dbbf85bb58ee694920c",
        "filename": "src/qt/res/movies/spinner-034.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dbafb99472120efaa9ce219cf0532498e1a5e04a/src/qt/res/movies/spinner-034.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dbafb99472120efaa9ce219cf0532498e1a5e04a/src/qt/res/movies/spinner-034.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/movies/spinner-034.png?ref=dbafb99472120efaa9ce219cf0532498e1a5e04a"
      },
      {
        "sha": "7df3baac6f9045553ebc88e3eb6aaf9fafa37e29",
        "filename": "src/qt/res/movies/update_spinner.mng",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e4f041bdd133af5eb7461a8dda4ba62fe4d6f117/src/qt/res/movies/update_spinner.mng",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e4f041bdd133af5eb7461a8dda4ba62fe4d6f117/src/qt/res/movies/update_spinner.mng",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/movies/update_spinner.mng?ref=e4f041bdd133af5eb7461a8dda4ba62fe4d6f117"
      }
    ]
  },
  {
    "sha": "5bab55898d2b7ffd13f54a400311427f097948ab",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1YmFiNTU4OThkMmI3ZmZkMTNmNTRhNDAwMzExNDI3ZjA5Nzk0OGFi",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-14T08:21:27Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-14T08:21:27Z"
      },
      "message": "qt: Update copyright year in about dialog to 2014",
      "tree": {
        "sha": "33e862c2f4f934bf1cd646a8d3f6dd2b1a9573ce",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/33e862c2f4f934bf1cd646a8d3f6dd2b1a9573ce"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5bab55898d2b7ffd13f54a400311427f097948ab",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJS1POcAAoJEHSBCwEjRsmm7UgH/i0cfuQ43ZtEBTfepcXEsWEt\n+H+nEugR0BmwyLjutrbuueTqJCIf4NExG/XEqRwq4p4OhIU4RGvSZFjnFBQk3+DG\n4QYl8k4Subrbsf/WvxnznisnTiNlcY+tmqmiip5+3JR71+PsasRMdQz+Sd8NMf+t\nZbjCQOBRpWlIkOaH6VjYfpL2tDkreE5sXS23yzkfGkZLfB7p/oi0A66KIYQN4aUk\nVMzka/VBempUjkioKwpzxnJfx/eNC8nfrL2Cttp9zhOaVWtutv2dro1PD2h8EyU5\nI8XTn8NHTISdlninz1yGD9NtdeuzE2vHr6ZID2QZhPATckPMsJr8NB4BHxwkwvg=\n=4a3d\n-----END PGP SIGNATURE-----",
        "payload": "tree 33e862c2f4f934bf1cd646a8d3f6dd2b1a9573ce\nparent dbafb99472120efaa9ce219cf0532498e1a5e04a\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1389687687 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1389687687 +0100\n\nqt: Update copyright year in about dialog to 2014\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5bab55898d2b7ffd13f54a400311427f097948ab",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5bab55898d2b7ffd13f54a400311427f097948ab",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5bab55898d2b7ffd13f54a400311427f097948ab/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "dbafb99472120efaa9ce219cf0532498e1a5e04a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dbafb99472120efaa9ce219cf0532498e1a5e04a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/dbafb99472120efaa9ce219cf0532498e1a5e04a"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "ba45d84bba5f1a309cb9032a413fea95ed5f03bd",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5bab55898d2b7ffd13f54a400311427f097948ab/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5bab55898d2b7ffd13f54a400311427f097948ab/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=5bab55898d2b7ffd13f54a400311427f097948ab",
        "patch": "@@ -5,7 +5,7 @@ define(_CLIENT_VERSION_MINOR, 8)\n define(_CLIENT_VERSION_REVISION, 99)\n define(_CLIENT_VERSION_BUILD, 0)\n define(_CLIENT_VERSION_IS_RELEASE, false)\n-define(_COPYRIGHT_YEAR, 2013)\n+define(_COPYRIGHT_YEAR, 2014)\n AC_INIT([Bitcoin],[_CLIENT_VERSION_MAJOR._CLIENT_VERSION_MINOR._CLIENT_VERSION_REVISION],[info@bitcoin.org],[bitcoin])\n AC_CONFIG_AUX_DIR([src/build-aux])\n AC_CONFIG_MACRO_DIR([src/m4])"
      }
    ]
  },
  {
    "sha": "2f158dfc93188010f40a7bc96430042797fe52fc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyZjE1OGRmYzkzMTg4MDEwZjQwYTdiYzk2NDMwMDQyNzk3ZmU1MmZj",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-14T07:24:31Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-14T10:03:21Z"
      },
      "message": "build: Update the other win32 deps\n\n- miniupnpc-1.8\n- openssl-1.0.1e\n- zlib-1.2.8\n- libpng-1.6.8\n- qrencode-3.4.3",
      "tree": {
        "sha": "823e17d64faf877323579b9225b1d3272a3c7749",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/823e17d64faf877323579b9225b1d3272a3c7749"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2f158dfc93188010f40a7bc96430042797fe52fc",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2f158dfc93188010f40a7bc96430042797fe52fc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2f158dfc93188010f40a7bc96430042797fe52fc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2f158dfc93188010f40a7bc96430042797fe52fc/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5bab55898d2b7ffd13f54a400311427f097948ab",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5bab55898d2b7ffd13f54a400311427f097948ab",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5bab55898d2b7ffd13f54a400311427f097948ab"
      }
    ],
    "stats": {
      "total": 83,
      "additions": 37,
      "deletions": 46
    },
    "files": [
      {
        "sha": "7f4f6705eac277ac9d56eb50f4c814239a53c303",
        "filename": "contrib/gitian-descriptors/README.md",
        "status": "modified",
        "additions": 3,
        "deletions": 13,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2f158dfc93188010f40a7bc96430042797fe52fc/contrib/gitian-descriptors/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2f158dfc93188010f40a7bc96430042797fe52fc/contrib/gitian-descriptors/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/README.md?ref=2f158dfc93188010f40a7bc96430042797fe52fc",
        "patch": "@@ -25,18 +25,8 @@ Once you've got the right hardware and software:\n     mkdir gitian-builder/inputs\n     cd gitian-builder/inputs\n \n-    # Inputs for Linux and Win32:\n-    wget -O miniupnpc-1.6.tar.gz 'http://miniupnp.tuxfamily.org/files/download.php?file=miniupnpc-1.6.tar.gz'\n-    wget 'http://fukuchi.org/works/qrencode/qrencode-3.2.0.tar.bz2'\n-    \n-\t# Inputs for Win32: (Linux has packages for these)\n-    wget 'https://downloads.sourceforge.net/project/boost/boost/1.50.0/boost_1_50_0.tar.bz2'\n-    wget 'http://www.openssl.org/source/openssl-1.0.1c.tar.gz'\n-    wget 'http://download.oracle.com/berkeley-db/db-4.8.30.NC.tar.gz'\n-    wget 'https://downloads.sourceforge.net/project/libpng/zlib/1.2.6/zlib-1.2.6.tar.gz'\n-    wget 'https://downloads.sourceforge.net/project/libpng/libpng15/older-releases/1.5.9/libpng-1.5.9.tar.gz'\n-    wget 'https://download.qt-project.org/archive/qt/4.8/4.8.3/qt-everywhere-opensource-src-4.8.3.tar.gz'\n-    wget 'http://protobuf.googlecode.com/files/protobuf-2.5.0.tar.bz2'\n+    # Get inputs (see doc/release-process.md for exact inputs needed and where to get them)\n+    ...\n     cd ../..\n \n     cd gitian-builder\n@@ -87,4 +77,4 @@ Here's a description of Gavin's setup on OSX 10.6:\n \n \texport USE_LXC=1\n \tgit clone git://github.com/bitcoin/bitcoin.git\n-\t... etc\n\\ No newline at end of file\n+\t... etc"
      },
      {
        "sha": "12b9dfc70cc0afe6fe737997c42960c9bb8454d0",
        "filename": "contrib/gitian-descriptors/deps-win32.yml",
        "status": "modified",
        "additions": 25,
        "deletions": 24,
        "changes": 49,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2f158dfc93188010f40a7bc96430042797fe52fc/contrib/gitian-descriptors/deps-win32.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2f158dfc93188010f40a7bc96430042797fe52fc/contrib/gitian-descriptors/deps-win32.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/deps-win32.yml?ref=2f158dfc93188010f40a7bc96430042797fe52fc",
        "patch": "@@ -14,12 +14,12 @@ packages:\n reference_datetime: \"2011-01-30 00:00:00\"\n remotes: []\n files:\n-- \"openssl-1.0.1c.tar.gz\"\n+- \"openssl-1.0.1e.tar.gz\"\n - \"db-4.8.30.NC.tar.gz\"\n-- \"miniupnpc-1.6.tar.gz\"\n-- \"zlib-1.2.6.tar.gz\"\n-- \"libpng-1.5.9.tar.gz\"\n-- \"qrencode-3.2.0.tar.bz2\"\n+- \"miniupnpc-1.8.tar.gz\"\n+- \"zlib-1.2.8.tar.gz\"\n+- \"libpng-1.6.8.tar.gz\"\n+- \"qrencode-3.4.3.tar.bz2\"\n script: |\n   #\n   export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1\n@@ -28,17 +28,17 @@ script: |\n   export INSTALLPREFIX=$OUTDIR/staging/deps\n   export HOST=i686-w64-mingw32\n   # Input Integrity Check\n-  echo \"2a9eb3cd4e8b114eb9179c0d3884d61658e7d8e8bf4984798a5f5bd48e325ebe  openssl-1.0.1c.tar.gz\"  | sha256sum -c\n+  echo \"f74f15e8c8ff11aa3d5bb5f276d202ec18d7246e95f961db76054199c69c1ae3  openssl-1.0.1e.tar.gz\"  | sha256sum -c\n   echo \"12edc0df75bf9abd7f82f821795bcee50f42cb2e5f76a6a281b85732798364ef  db-4.8.30.NC.tar.gz\"    | sha256sum -c\n-  echo \"bbd6b756e6af44b5a5b0f9b93eada3fb8922ed1d6451b7d6f184d0ae0c813994  miniupnpc-1.6.tar.gz\"   | sha256sum -c\n-  echo \"21235e08552e6feba09ea5e8d750805b3391c62fb81c71a235c0044dc7a8a61b  zlib-1.2.6.tar.gz\"      | sha256sum -c\n-  echo \"b75dae26151f9b031062c8d2f577a094b08da0ae44fe8c11175d0b9ff434cc02  libpng-1.5.9.tar.gz\"    | sha256sum -c\n-  echo \"03c4bc7cd9a75747c3815d509bbe061907d615764f2357923f0db948c567068f  qrencode-3.2.0.tar.bz2\" | sha256sum -c\n+  echo \"bc5f73c7b0056252c1888a80e6075787a1e1e9112b808f863a245483ff79859c  miniupnpc-1.8.tar.gz\"   | sha256sum -c\n+  echo \"36658cb768a54c1d4dec43c3116c27ed893e88b02ecfcb44f2166f9c0b7f2a0d  zlib-1.2.8.tar.gz\"      | sha256sum -c\n+  echo \"32c7acf1608b9c8b71b743b9780adb7a7b347563dbfb4a5263761056da44cc96  libpng-1.6.8.tar.gz\"    | sha256sum -c\n+  echo \"dfd71487513c871bad485806bfd1fdb304dedc84d2b01a8fb8e0940b50597a98  qrencode-3.4.3.tar.bz2\" | sha256sum -c\n \n   mkdir -p $INSTALLPREFIX\n \n-  tar xzf openssl-1.0.1c.tar.gz\n-  cd openssl-1.0.1c\n+  tar xzf openssl-1.0.1e.tar.gz\n+  cd openssl-1.0.1e\n   ./Configure --cross-compile-prefix=$HOST- mingw --openssldir=$INSTALLPREFIX\n   make\n   make install_sw\n@@ -51,11 +51,11 @@ script: |\n   make install_lib install_include\n   cd ../..\n   #\n-  tar xzf miniupnpc-1.6.tar.gz\n-  cd miniupnpc-1.6\n+  tar xzf miniupnpc-1.8.tar.gz\n+  cd miniupnpc-1.8\n   echo \"\n-  --- miniupnpc-1.6/Makefile.mingw.orig   2013-09-29 18:52:51.014087958 -1000\n-  +++ miniupnpc-1.6/Makefile.mingw        2013-09-29 19:09:29.663318691 -1000\n+  --- miniupnpc-1.8/Makefile.mingw.orig   2013-09-29 18:52:51.014087958 -1000\n+  +++ miniupnpc-1.8/Makefile.mingw        2013-09-29 19:09:29.663318691 -1000\n   @@ -67,8 +67,8 @@\n    \n    wingenminiupnpcstrings.o:\twingenminiupnpcstrings.c\n@@ -75,26 +75,27 @@ script: |\n   install libminiupnpc.a  $INSTALLPREFIX/lib\n   cd ..\n   #\n-  tar xzf zlib-1.2.6.tar.gz\n-  cd zlib-1.2.6\n+  tar xzf zlib-1.2.8.tar.gz\n+  cd zlib-1.2.8\n   CROSS_PREFIX=$HOST- ./configure --prefix=$INSTALLPREFIX --static\n   make\n   make install\n   cd ..\n   #\n-  tar xzf libpng-1.5.9.tar.gz\n-  cd libpng-1.5.9\n-  CFLAGS=\"-I$INSTALLPREFIX/include\" LDFLAGS=\"-L$INSTALLPREFIX/lib\" ./configure --disable-shared --prefix=$INSTALLPREFIX --host=$HOST\n+  tar xzf libpng-1.6.8.tar.gz\n+  cd libpng-1.6.8\n+  OPT=\"-O2\"\n+  CPPFLAGS=\"${OPT} -I$INSTALLPREFIX/include\" CFLAGS=\"${OPT} -I$INSTALLPREFIX/include\" LDFLAGS=\"${OPT} -L$INSTALLPREFIX/lib\" ./configure --disable-shared --prefix=$INSTALLPREFIX --host=$HOST\n   make $MAKEOPTS\n   make install\n   cd ..\n   #\n-  tar xjf qrencode-3.2.0.tar.bz2\n-  cd qrencode-3.2.0\n+  tar xjf qrencode-3.4.3.tar.bz2\n+  cd qrencode-3.4.3\n   png_CFLAGS=\"-I$INSTALLPREFIX/include\" png_LIBS=\"-L$INSTALLPREFIX/lib -lpng\" ./configure --prefix=$INSTALLPREFIX --host=$HOST\n   make\n   make install\n   cd ..\n   #\n   cd $INSTALLPREFIX\n-  zip -r $OUTDIR/bitcoin-deps-win32-gitian-r9.zip include lib\n+  zip -r $OUTDIR/bitcoin-deps-win32-gitian-r10.zip include lib"
      },
      {
        "sha": "a2920e095be3059b6a1cd493a1ae8fc16c8eb31e",
        "filename": "contrib/gitian-descriptors/gitian-win32.yml",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2f158dfc93188010f40a7bc96430042797fe52fc/contrib/gitian-descriptors/gitian-win32.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2f158dfc93188010f40a7bc96430042797fe52fc/contrib/gitian-descriptors/gitian-win32.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-win32.yml?ref=2f158dfc93188010f40a7bc96430042797fe52fc",
        "patch": "@@ -24,7 +24,7 @@ remotes:\n files:\n - \"qt-win32-4.8.3-gitian-r4.zip\"\n - \"boost-win32-1.55.0-gitian-r6.zip\"\n-- \"bitcoin-deps-win32-gitian-r9.zip\"\n+- \"bitcoin-deps-win32-gitian-r10.zip\"\n - \"protobuf-win32-2.5.0-gitian-r3.zip\"\n script: |\n   #\n@@ -36,7 +36,7 @@ script: |\n   cd $STAGING\n   unzip ../build/qt-win32-4.8.3-gitian-r4.zip\n   unzip ../build/boost-win32-1.55.0-gitian-r6.zip\n-  unzip ../build/bitcoin-deps-win32-gitian-r9.zip\n+  unzip ../build/bitcoin-deps-win32-gitian-r10.zip\n   unzip ../build/protobuf-win32-2.5.0-gitian-r3.zip\n   cd $HOME/build/\n   #"
      },
      {
        "sha": "fb1dbb7e207d7e911e09367d9987e9b4df7134a5",
        "filename": "contrib/gitian-descriptors/qt-win32.yml",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2f158dfc93188010f40a7bc96430042797fe52fc/contrib/gitian-descriptors/qt-win32.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2f158dfc93188010f40a7bc96430042797fe52fc/contrib/gitian-descriptors/qt-win32.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/qt-win32.yml?ref=2f158dfc93188010f40a7bc96430042797fe52fc",
        "patch": "@@ -15,7 +15,7 @@ reference_datetime: \"2011-01-30 00:00:00\"\n remotes: []\n files:\n - \"qt-everywhere-opensource-src-4.8.3.tar.gz\"\n-- \"bitcoin-deps-win32-gitian-r9.zip\"\n+- \"bitcoin-deps-win32-gitian-r10.zip\"\n script: |\n   #\n   HOST=i686-w64-mingw32\n@@ -27,7 +27,7 @@ script: |\n   mkdir -p $INSTDIR/host/bin\n   #\n   # Need mingw-compiled openssl from bitcoin-deps:\n-  unzip bitcoin-deps-win32-gitian-r9.zip\n+  unzip bitcoin-deps-win32-gitian-r10.zip\n   DEPSDIR=`pwd`\n   #\n   tar xzf qt-everywhere-opensource-src-4.8.3.tar.gz"
      },
      {
        "sha": "6ee350d557c4ebed7a31e3eba285370d5b5f6ae7",
        "filename": "doc/release-process.md",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2f158dfc93188010f40a7bc96430042797fe52fc/doc/release-process.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2f158dfc93188010f40a7bc96430042797fe52fc/doc/release-process.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-process.md?ref=2f158dfc93188010f40a7bc96430042797fe52fc",
        "patch": "@@ -39,12 +39,12 @@ Release Process\n  Fetch and build inputs: (first time, or when dependency versions change)\n \n \tmkdir -p inputs; cd inputs/\n-\twget 'http://miniupnp.free.fr/files/download.php?file=miniupnpc-1.6.tar.gz' -O miniupnpc-1.6.tar.gz\n-\twget 'https://www.openssl.org/source/openssl-1.0.1c.tar.gz'\n+\twget 'http://miniupnp.free.fr/files/download.php?file=miniupnpc-1.8.tar.gz' -O miniupnpc-1.8.tar.gz\n+\twget 'https://www.openssl.org/source/openssl-1.0.1e.tar.gz'\n \twget 'http://download.oracle.com/berkeley-db/db-4.8.30.NC.tar.gz'\n-\twget 'ftp://ftp.simplesystems.org/pub/libpng/png/src/history/zlib/zlib-1.2.6.tar.gz'\n-\twget 'ftp://ftp.simplesystems.org/pub/libpng/png/src/history/libpng15/libpng-1.5.9.tar.gz'\n-\twget 'https://fukuchi.org/works/qrencode/qrencode-3.2.0.tar.bz2'\n+\twget 'http://zlib.net/zlib-1.2.8.tar.gz'\n+\twget 'ftp://ftp.simplesystems.org/pub/png/src/libpng16/libpng-1.6.8.tar.gz'\n+\twget 'https://fukuchi.org/works/qrencode/qrencode-3.4.3.tar.bz2'\n \twget 'https://downloads.sourceforge.net/project/boost/boost/1.54.0/boost_1_54_0.tar.bz2'\n \twget 'https://svn.boost.org/trac/boost/raw-attachment/ticket/7262/boost-mingw.patch' -O \\ \n \t     boost-mingw-gas-cross-compile-2013-03-03.patch"
      }
    ]
  },
  {
    "sha": "1e3abb4e3d9812945b63452b1fe5b4f058cbd9a2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxZTNhYmI0ZTNkOTgxMjk0NWI2MzQ1MmIxZmU1YjRmMDU4Y2JkOWEy",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-13T15:32:42Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-14T10:03:21Z"
      },
      "message": "build: upgrade Qt used by windows build to 5.2.0",
      "tree": {
        "sha": "e4604d4d87d8f4c2eedf93f5a32e22ce1f66af99",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e4604d4d87d8f4c2eedf93f5a32e22ce1f66af99"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1e3abb4e3d9812945b63452b1fe5b4f058cbd9a2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1e3abb4e3d9812945b63452b1fe5b4f058cbd9a2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1e3abb4e3d9812945b63452b1fe5b4f058cbd9a2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1e3abb4e3d9812945b63452b1fe5b4f058cbd9a2/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2f158dfc93188010f40a7bc96430042797fe52fc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2f158dfc93188010f40a7bc96430042797fe52fc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2f158dfc93188010f40a7bc96430042797fe52fc"
      }
    ],
    "stats": {
      "total": 38,
      "additions": 17,
      "deletions": 21
    },
    "files": [
      {
        "sha": "794fa27f1fbc4d84835743ad386aab70a8feef76",
        "filename": "contrib/gitian-descriptors/gitian-win32.yml",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1e3abb4e3d9812945b63452b1fe5b4f058cbd9a2/contrib/gitian-descriptors/gitian-win32.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1e3abb4e3d9812945b63452b1fe5b4f058cbd9a2/contrib/gitian-descriptors/gitian-win32.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-win32.yml?ref=1e3abb4e3d9812945b63452b1fe5b4f058cbd9a2",
        "patch": "@@ -22,7 +22,7 @@ remotes:\n - \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n   \"dir\": \"bitcoin\"\n files:\n-- \"qt-win32-4.8.3-gitian-r4.zip\"\n+- \"qt-win32-5.2.0-gitian-r1.zip\"\n - \"boost-win32-1.55.0-gitian-r6.zip\"\n - \"bitcoin-deps-win32-gitian-r10.zip\"\n - \"protobuf-win32-2.5.0-gitian-r3.zip\"\n@@ -34,7 +34,7 @@ script: |\n   #\n   mkdir -p $STAGING\n   cd $STAGING\n-  unzip ../build/qt-win32-4.8.3-gitian-r4.zip\n+  unzip ../build/qt-win32-5.2.0-gitian-r1.zip\n   unzip ../build/boost-win32-1.55.0-gitian-r6.zip\n   unzip ../build/bitcoin-deps-win32-gitian-r10.zip\n   unzip ../build/protobuf-win32-2.5.0-gitian-r3.zip"
      },
      {
        "sha": "8bc53bbf2502d6a3a0c10b22bf55164bac2747cc",
        "filename": "contrib/gitian-descriptors/qt-win32.yml",
        "status": "modified",
        "additions": 13,
        "deletions": 18,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1e3abb4e3d9812945b63452b1fe5b4f058cbd9a2/contrib/gitian-descriptors/qt-win32.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1e3abb4e3d9812945b63452b1fe5b4f058cbd9a2/contrib/gitian-descriptors/qt-win32.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/qt-win32.yml?ref=1e3abb4e3d9812945b63452b1fe5b4f058cbd9a2",
        "patch": "@@ -10,18 +10,18 @@ packages:\n - \"zip\"\n - \"unzip\"\n - \"faketime\"\n-- \"unzip\"\n+- \"libz-dev\"\n reference_datetime: \"2011-01-30 00:00:00\"\n remotes: []\n files:\n-- \"qt-everywhere-opensource-src-4.8.3.tar.gz\"\n+- \"qt-everywhere-opensource-src-5.2.0.tar.gz\"\n - \"bitcoin-deps-win32-gitian-r10.zip\"\n script: |\n   #\n   HOST=i686-w64-mingw32\n   INSTDIR=\"$HOME/qt/\"\n   # Integrity Check\n-  echo \"f1f72974f924861be04019f49f07cd43ab3c95056db2ba8f34b283487cccc728  qt-everywhere-opensource-src-4.8.3.tar.gz\" | sha256sum -c\n+  echo \"395ec72277c5786c65b8163ef5817fd03d0a1f524a6d47f53624baf8056f1081  qt-everywhere-opensource-src-5.2.0.tar.gz\" | sha256sum -c\n \n   mkdir $INSTDIR\n   mkdir -p $INSTDIR/host/bin\n@@ -30,36 +30,31 @@ script: |\n   unzip bitcoin-deps-win32-gitian-r10.zip\n   DEPSDIR=`pwd`\n   #\n-  tar xzf qt-everywhere-opensource-src-4.8.3.tar.gz\n-  cd qt-everywhere-opensource-src-4.8.3\n+  tar xzf qt-everywhere-opensource-src-5.2.0.tar.gz\n+  cd qt-everywhere-opensource-src-5.2.0\n+  SPECNAME=\"win32-g++\"\n+  SPECFILE=\"qtbase/mkspecs/${SPECNAME}/qmake.conf\"\n   sed 's/$TODAY/2011-01-30/' -i configure\n-  sed \"s/i686-pc-mingw32-/$HOST-/\" -i mkspecs/unsupported/win32-g++-cross/qmake.conf\n-  sed --posix \"s|QMAKE_CFLAGS\\t\\t= -pipe|QMAKE_CFLAGS\\t\\t= -pipe -isystem /usr/$HOST/include/ -frandom-seed=qtbuild|\" -i mkspecs/unsupported/win32-g++-cross/qmake.conf\n-  sed 's/QMAKE_CXXFLAGS_EXCEPTIONS_ON = -fexceptions -mthreads/QMAKE_CXXFLAGS_EXCEPTIONS_ON = -fexceptions/' -i mkspecs/unsupported/win32-g++-cross/qmake.conf\n-  sed 's/QMAKE_LFLAGS_EXCEPTIONS_ON = -mthreads/QMAKE_LFLAGS_EXCEPTIONS_ON = -lmingwthrd/' -i mkspecs/unsupported/win32-g++-cross/qmake.conf\n-  sed --posix \"s/QMAKE_MOC\\t\\t= $HOST-moc/QMAKE_MOC\\t\\t= moc/\" -i mkspecs/unsupported/win32-g++-cross/qmake.conf\n-  sed --posix \"s/QMAKE_RCC\\t\\t= $HOST-rcc/QMAKE_RCC\\t\\t= rcc/\" -i mkspecs/unsupported/win32-g++-cross/qmake.conf\n-  sed --posix \"s/QMAKE_UIC\\t\\t= $HOST-uic/QMAKE_UIC\\t\\t= uic/\" -i mkspecs/unsupported/win32-g++-cross/qmake.conf\n+  sed --posix \"s|QMAKE_CFLAGS            = -pipe -fno-keep-inline-dllexport|QMAKE_CFLAGS\\t\\t= -pipe -fno-keep-inline-dllexport -isystem /usr/$HOST/include/ -frandom-seed=qtbuild -I$DEPSDIR/include|\" -i ${SPECFILE}\n+  sed --posix \"s|QMAKE_LFLAGS            =|QMAKE_LFLAGS\\t\\t= -L$DEPSDIR/lib|\" -i ${SPECFILE}\n   # ar adds timestamps to every object file included in the static library\n   # providing -D as ar argument is supposed to solve it, but doesn't work as qmake strips off the arguments and adds -M to pass a script...\n   # which somehow cannot be combined with other flags.\n   # use faketime only for ar, as it confuses make/qmake into hanging sometimes\n-  sed --posix \"s|QMAKE_LIB\\t\\t= $HOST-ar -ru|QMAKE_LIB\\t\\t= $HOME/ar -Dr|\" -i mkspecs/unsupported/win32-g++-cross/qmake.conf\n+  sed --posix \"s|QMAKE_LIB               = \\\\\\$\\\\\\${CROSS_COMPILE}ar -ru|QMAKE_LIB\\t\\t= $HOME/ar -Dr|\" -i ${SPECFILE}\n   echo '#!/bin/bash' > $HOME/ar\n   echo 'export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1' >> $HOME/ar\n   echo \"$HOST-ar \\\"\\$@\\\"\" >> $HOME/ar\n   chmod +x $HOME/ar\n   #export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1\n   export FAKETIME=$REFERENCE_DATETIME\n   export TZ=UTC\n+  #\n   # Compile static libraries, and use statically linked openssl (-openssl-linked):\n-  OPENSSL_LIBS=\"-L$DEPSDIR/lib -lssl -lcrypto -lgdi32\" ./configure -prefix $INSTDIR -bindir $INSTDIR/host/bin -I $DEPSDIR/include  -confirm-license -release -opensource -static -no-qt3support -xplatform unsupported/win32-g++-cross -no-multimedia -no-audio-backend -no-phonon -no-phonon-backend -no-declarative -no-script -no-scripttools -no-javascript-jit -no-webkit -no-svg -no-xmlpatterns -no-sql-sqlite -no-nis -no-cups -no-iconv -no-dbus -no-gif -no-libtiff -no-opengl -nomake examples -nomake demos -nomake docs -no-feature-style-plastique -no-feature-style-cleanlooks -no-feature-style-motif -no-feature-style-cde -no-feature-style-windowsce -no-feature-style-windowsmobile -no-feature-style-s60 -openssl-linked\n-  find . -name *.prl | xargs -l sed 's|/\\.||' -i\n-  find . -name *.prl | xargs -l sed 's|/$||' -i\n+  OPENSSL_LIBS=\"-L$DEPSDIR/lib -lssl -lcrypto -lgdi32\" ./configure -prefix $INSTDIR -bindir $INSTDIR/host/bin -confirm-license -release -opensource -static -xplatform $SPECNAME -device-option CROSS_COMPILE=\"$HOST-\" -no-audio-backend -no-javascript-jit -no-sql-sqlite -no-sql-odbc -no-nis -no-cups -no-iconv -no-dbus -no-gif -no-opengl -no-compile-examples -no-feature-style-windowsce -no-feature-style-windowsmobile -no-qml-debug -openssl-linked -skip qtsvg -skip qtwebkit -skip qtwebkit-examples -skip qtserialport -skip qtdeclarative -skip qtmultimedia -skip qtimageformats -skip qtlocation -skip qtsensors -skip qtquick1 -skip qtquickcontrols -skip qtactiveqt -skip qtconnectivity -skip qtwinextras -skip qtxmlpatterns -skip qtscript -skip qtdoc -system-libpng -system-zlib\n   make $MAKEOPTS install\n   cd $INSTDIR\n-  find . -name *.prl | xargs -l sed 's|/$||' -i\n \n   # as zip stores file timestamps, use faketime to intercept stat calls to set dates for all files to reference date\n   export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1\n-  zip -r $OUTDIR/qt-win32-4.8.3-gitian-r4.zip *\n+  zip -r $OUTDIR/qt-win32-5.2.0-gitian-r1.zip *"
      },
      {
        "sha": "9b15443d036fdcd72c7bc31b76e2b84b5d53f7de",
        "filename": "doc/release-process.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1e3abb4e3d9812945b63452b1fe5b4f058cbd9a2/doc/release-process.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1e3abb4e3d9812945b63452b1fe5b4f058cbd9a2/doc/release-process.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-process.md?ref=1e3abb4e3d9812945b63452b1fe5b4f058cbd9a2",
        "patch": "@@ -48,7 +48,7 @@ Release Process\n \twget 'https://downloads.sourceforge.net/project/boost/boost/1.54.0/boost_1_54_0.tar.bz2'\n \twget 'https://svn.boost.org/trac/boost/raw-attachment/ticket/7262/boost-mingw.patch' -O \\ \n \t     boost-mingw-gas-cross-compile-2013-03-03.patch\n-\twget 'https://download.qt-project.org/archive/qt/4.8/4.8.3/qt-everywhere-opensource-src-4.8.3.tar.gz'\n+\twget 'https://download.qt-project.org/official_releases/qt/5.2/5.2.0/single/qt-everywhere-opensource-src-5.2.0.tar.gz'\n \twget 'https://protobuf.googlecode.com/files/protobuf-2.5.0.tar.bz2'\n \tcd ..\n \t./bin/gbuild ../bitcoin/contrib/gitian-descriptors/boost-win32.yml"
      },
      {
        "sha": "758aea3499e983be9eb168c575d6c66fdd35d7ee",
        "filename": "src/m4/bitcoin_qt.m4",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1e3abb4e3d9812945b63452b1fe5b4f058cbd9a2/src/m4/bitcoin_qt.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1e3abb4e3d9812945b63452b1fe5b4f058cbd9a2/src/m4/bitcoin_qt.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/m4/bitcoin_qt.m4?ref=1e3abb4e3d9812945b63452b1fe5b4f058cbd9a2",
        "patch": "@@ -317,6 +317,7 @@ AC_DEFUN([_BITCOIN_QT_FIND_LIBS_WITHOUT_PKGCONFIG],[\n   ])\n \n   BITCOIN_QT_CHECK(AC_CHECK_LIB([z] ,[main],,BITCOIN_QT_FAIL(zlib not found)))\n+  BITCOIN_QT_CHECK(AC_CHECK_LIB([png] ,[main],,BITCOIN_QT_FAIL(png not found)))\n   BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Core]   ,[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXCore not found)))\n   BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Gui]    ,[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXGui not found)))\n   BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Network],[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXNetwork not found)))"
      }
    ]
  },
  {
    "sha": "b26de9d951d482d2604c145b6acca8ec2fca4831",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMjZkZTlkOTUxZDQ4MmQyNjA0YzE0NWI2YWNjYThlYzJmY2E0ODMx",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-14T10:19:01Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-14T10:19:52Z"
      },
      "message": "qt: Update remaining \"The Bitcoin Core Developers\"",
      "tree": {
        "sha": "6d757fae133996590d7457d3e4b7d6fd2a4ab7c9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6d757fae133996590d7457d3e4b7d6fd2a4ab7c9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b26de9d951d482d2604c145b6acca8ec2fca4831",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJS1Q9KAAoJEHSBCwEjRsmm/ZYH/jaqNNTn1+hzRUAIOe8TVx7U\nffN3EEqdTq+W16s85mI+KuLIf1SmtNY1jHTokKi1lMsEssHLxaChanwGlOp0vqw6\niDtXmkt+TdzdYkei7vnU8BHXeeS0x97OHyTrRmH7LRgQvZ1ZvgQe+HohTnvpAGeg\na82JAR/3+/L94jvEdsyBLnEPmLx/1yXsncIiOuDac5dHmSzSsJx6/SKpTbcEeVL5\n1VQbc8hNCdbvDGW5n69NQ1x7h4GEb5yvSRYDKSbHh75H9A7B1LebyIipgeGfTGlM\nnYH0Z6BjzuQDA4ypjXX4kW1sNY/FKZV1t3Pqg70nlRzlVV1cGtnfb5UUMki3NZw=\n=Iy6e\n-----END PGP SIGNATURE-----",
        "payload": "tree 6d757fae133996590d7457d3e4b7d6fd2a4ab7c9\nparent 5bab55898d2b7ffd13f54a400311427f097948ab\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1389694741 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1389694792 +0100\n\nqt: Update remaining \"The Bitcoin Core Developers\"\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b26de9d951d482d2604c145b6acca8ec2fca4831",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b26de9d951d482d2604c145b6acca8ec2fca4831",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b26de9d951d482d2604c145b6acca8ec2fca4831/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5bab55898d2b7ffd13f54a400311427f097948ab",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5bab55898d2b7ffd13f54a400311427f097948ab",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5bab55898d2b7ffd13f54a400311427f097948ab"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 6,
      "deletions": 6
    },
    "files": [
      {
        "sha": "a6ee201991cc4e1f0e791d4a85f46f4aa433bd71",
        "filename": "contrib/debian/copyright",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b26de9d951d482d2604c145b6acca8ec2fca4831/contrib/debian/copyright",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b26de9d951d482d2604c145b6acca8ec2fca4831/contrib/debian/copyright",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/copyright?ref=b26de9d951d482d2604c145b6acca8ec2fca4831",
        "patch": "@@ -6,9 +6,9 @@ Source: http://sourceforge.net/projects/bitcoin/files/\n  https://github.com/bitcoin/bitcoin\n \n Files: *\n-Copyright: 2009-2012, Bitcoin Developers\n+Copyright: 2009-2012, Bitcoin Core Developers\n License: Expat\n-Comment: The Bitcoin Developers encompasses the current developers listed on bitcoin.org,\n+Comment: The Bitcoin Core Developers encompasses the current developers listed on bitcoin.org,\n          as well as the numerous contributors to the project.\n \n Files: src/json/*"
      },
      {
        "sha": "b1c2dcb462a8f5b5fdc032ad1d629257eec51e2d",
        "filename": "share/qt/Info.plist.in",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b26de9d951d482d2604c145b6acca8ec2fca4831/share/qt/Info.plist.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b26de9d951d482d2604c145b6acca8ec2fca4831/share/qt/Info.plist.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/qt/Info.plist.in?ref=b26de9d951d482d2604c145b6acca8ec2fca4831",
        "patch": "@@ -9,7 +9,7 @@\n   <string>APPL</string>\n \n   <key>CFBundleGetInfoString</key>\n-  <string>@CLIENT_VERSION_MAJOR@.@CLIENT_VERSION_MINOR@, Copyright \u00a9 2009-@COPYRIGHT_YEAR@ The Bitcoin developers</string>\n+  <string>@CLIENT_VERSION_MAJOR@.@CLIENT_VERSION_MINOR@, Copyright \u00a9 2009-@COPYRIGHT_YEAR@ The Bitcoin Core developers</string>\n \n   <key>CFBundleShortVersionString</key>\n   <string>@CLIENT_VERSION_MAJOR@.@CLIENT_VERSION_MINOR@</string>"
      },
      {
        "sha": "f8bfb3a88138a31b85cbd10a52a8233ce9cb876f",
        "filename": "src/bitcoin-cli-res.rc",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b26de9d951d482d2604c145b6acca8ec2fca4831/src/bitcoin-cli-res.rc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b26de9d951d482d2604c145b6acca8ec2fca4831/src/bitcoin-cli-res.rc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli-res.rc?ref=b26de9d951d482d2604c145b6acca8ec2fca4831",
        "patch": "@@ -5,7 +5,7 @@\n #define VER_PRODUCTVERSION_STR STRINGIZE(CLIENT_VERSION_MAJOR) \".\" STRINGIZE(CLIENT_VERSION_MINOR) \".\" STRINGIZE(CLIENT_VERSION_REVISION) \".\" STRINGIZE(CLIENT_VERSION_BUILD)\n #define VER_FILEVERSION        VER_PRODUCTVERSION\n #define VER_FILEVERSION_STR    VER_PRODUCTVERSION_STR\n-#define COPYRIGHT_STR          \"2009-\" STRINGIZE(COPYRIGHT_YEAR) \" The Bitcoin developers\"\n+#define COPYRIGHT_STR          \"2009-\" STRINGIZE(COPYRIGHT_YEAR) \" The Bitcoin Core developers\"\n \n VS_VERSION_INFO VERSIONINFO\n FILEVERSION     VER_FILEVERSION"
      },
      {
        "sha": "dc5c56b79764f17a564b04a8215a0404671d50c5",
        "filename": "src/bitcoind-res.rc",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b26de9d951d482d2604c145b6acca8ec2fca4831/src/bitcoind-res.rc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b26de9d951d482d2604c145b6acca8ec2fca4831/src/bitcoind-res.rc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoind-res.rc?ref=b26de9d951d482d2604c145b6acca8ec2fca4831",
        "patch": "@@ -5,7 +5,7 @@\n #define VER_PRODUCTVERSION_STR STRINGIZE(CLIENT_VERSION_MAJOR) \".\" STRINGIZE(CLIENT_VERSION_MINOR) \".\" STRINGIZE(CLIENT_VERSION_REVISION) \".\" STRINGIZE(CLIENT_VERSION_BUILD)\n #define VER_FILEVERSION        VER_PRODUCTVERSION\n #define VER_FILEVERSION_STR    VER_PRODUCTVERSION_STR\n-#define COPYRIGHT_STR          \"2009-\" STRINGIZE(COPYRIGHT_YEAR) \" The Bitcoin developers\"\n+#define COPYRIGHT_STR          \"2009-\" STRINGIZE(COPYRIGHT_YEAR) \" The Bitcoin Core developers\"\n \n VS_VERSION_INFO VERSIONINFO\n FILEVERSION     VER_FILEVERSION"
      },
      {
        "sha": "6581a19c18f20d8fb3b91c68da4712d4d15f5b45",
        "filename": "src/qt/aboutdialog.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b26de9d951d482d2604c145b6acca8ec2fca4831/src/qt/aboutdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b26de9d951d482d2604c145b6acca8ec2fca4831/src/qt/aboutdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/aboutdialog.cpp?ref=b26de9d951d482d2604c145b6acca8ec2fca4831",
        "patch": "@@ -16,7 +16,7 @@ AboutDialog::AboutDialog(QWidget *parent) :\n     ui->setupUi(this);\n \n     // Set current copyright year\n-    ui->copyrightLabel->setText(tr(\"Copyright\") + QString(\" &copy; 2009-%1 \").arg(COPYRIGHT_YEAR) + tr(\"The Bitcoin developers\"));\n+    ui->copyrightLabel->setText(tr(\"Copyright\") + QString(\" &copy; 2009-%1 \").arg(COPYRIGHT_YEAR) + tr(\"The Bitcoin Core developers\"));\n }\n \n void AboutDialog::setModel(ClientModel *model)"
      }
    ]
  },
  {
    "sha": "279af1a2af7ea044845da3bbf1a72660f7e520dd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyNzlhZjFhMmFmN2VhMDQ0ODQ1ZGEzYmJmMWE3MjY2MGY3ZTUyMGRk",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-14T12:20:30Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-14T14:12:44Z"
      },
      "message": "build: use Ubuntu 12.04 for linux gitian build",
      "tree": {
        "sha": "64b0358ffbdf36778d481c6b03321d2cacf1df4a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/64b0358ffbdf36778d481c6b03321d2cacf1df4a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/279af1a2af7ea044845da3bbf1a72660f7e520dd",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/279af1a2af7ea044845da3bbf1a72660f7e520dd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/279af1a2af7ea044845da3bbf1a72660f7e520dd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/279af1a2af7ea044845da3bbf1a72660f7e520dd/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b26de9d951d482d2604c145b6acca8ec2fca4831",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b26de9d951d482d2604c145b6acca8ec2fca4831",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b26de9d951d482d2604c145b6acca8ec2fca4831"
      }
    ],
    "stats": {
      "total": 38,
      "additions": 24,
      "deletions": 14
    },
    "files": [
      {
        "sha": "212c6c68b57276c75550d518aa670bf47ec32b44",
        "filename": "contrib/gitian-descriptors/gitian.yml",
        "status": "modified",
        "additions": 24,
        "deletions": 14,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/279af1a2af7ea044845da3bbf1a72660f7e520dd/contrib/gitian-descriptors/gitian.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/279af1a2af7ea044845da3bbf1a72660f7e520dd/contrib/gitian-descriptors/gitian.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian.yml?ref=279af1a2af7ea044845da3bbf1a72660f7e520dd",
        "patch": "@@ -1,12 +1,11 @@\n ---\n name: \"bitcoin\"\n suites:\n-- \"lucid\"\n+- \"precise\"\n architectures:\n - \"i386\"\n - \"amd64\"\n packages: \n-- \"libdb4.8++-dev\"\n - \"qt4-qmake\"\n - \"libqt4-dev\"\n - \"libboost-system-dev\"\n@@ -29,45 +28,56 @@ remotes:\n - \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n   \"dir\": \"bitcoin\"\n files:\n-- \"miniupnpc-1.6.tar.gz\"\n-- \"qrencode-3.2.0.tar.bz2\"\n+- \"miniupnpc-1.8.tar.gz\"\n+- \"qrencode-3.4.3.tar.bz2\"\n - \"protobuf-2.5.0.tar.bz2\"\n+- \"db-4.8.30.NC.tar.gz\"\n script: |\n   STAGING=\"$HOME/install\"\n+  OPTFLAGS='-O2'\n   export LIBRARY_PATH=\"$STAGING/lib\"\n   # Integrity Check\n-  echo \"bbd6b756e6af44b5a5b0f9b93eada3fb8922ed1d6451b7d6f184d0ae0c813994  miniupnpc-1.6.tar.gz\"   | sha256sum -c\n-  echo \"03c4bc7cd9a75747c3815d509bbe061907d615764f2357923f0db948c567068f  qrencode-3.2.0.tar.bz2\" | sha256sum -c\n+  echo \"bc5f73c7b0056252c1888a80e6075787a1e1e9112b808f863a245483ff79859c  miniupnpc-1.8.tar.gz\"   | sha256sum -c\n+  echo \"dfd71487513c871bad485806bfd1fdb304dedc84d2b01a8fb8e0940b50597a98  qrencode-3.4.3.tar.bz2\" | sha256sum -c\n   echo \"13bfc5ae543cf3aa180ac2485c0bc89495e3ae711fc6fab4f8ffe90dfb4bb677  protobuf-2.5.0.tar.bz2\" | sha256sum -c\n+  echo \"12edc0df75bf9abd7f82f821795bcee50f42cb2e5f76a6a281b85732798364ef  db-4.8.30.NC.tar.gz\"    | sha256sum -c\n \n-  tar xzfm miniupnpc-1.6.tar.gz\n-  cd miniupnpc-1.6\n+  tar xzfm miniupnpc-1.8.tar.gz\n+  cd miniupnpc-1.8\n   INSTALLPREFIX=$STAGING make $MAKEOPTS install\n   cd ..\n   #\n-  tar xjfm qrencode-3.2.0.tar.bz2\n-  cd qrencode-3.2.0\n+  tar xjfm qrencode-3.4.3.tar.bz2\n+  cd qrencode-3.4.3\n   sed -i 's/@LIBPTHREAD@//' libqrencode.pc.in\n-  ./configure --prefix=$STAGING --enable-static --disable-shared\n+  #   need --with-pic to avoid relocation error in 64 bit builds\n+  ./configure --prefix=$STAGING --enable-static --disable-shared --with-pic\n   make $MAKEOPTS install\n   cd ..\n   #\n   tar xjfm protobuf-2.5.0.tar.bz2\n   cd protobuf-2.5.0\n   mkdir -p $STAGING/host/bin\n-  ./configure --prefix=$STAGING --bindir=$STAGING/host/bin --enable-static --disable-shared\n+  ./configure --prefix=$STAGING --bindir=$STAGING/host/bin --enable-static --disable-shared --with-pic\n   make $MAKEOPTS install\n   cd ..\n   #\n+  tar xzf db-4.8.30.NC.tar.gz\n+  cd db-4.8.30.NC/build_unix\n+  ../dist/configure --prefix=$STAGING --enable-cxx --disable-shared --with-pic\n+  make $MAKEOPTS library_build\n+  make install_lib install_include\n+  cd ../..\n+  #\n   cd bitcoin\n   export TAR_OPTIONS=--mtime=`echo $REFERENCE_DATETIME | awk '{ print $1 }'`\n   ./autogen.sh\n-  ./configure --prefix=$STAGING --bindir=$OUTDIR --with-protoc-bindir=$STAGING/host/bin --disable-maintainer-mode --disable-dependency-tracking PKG_CONFIG_PATH=\"$STAGING/lib/pkgconfig\" CPPFLAGS=\"-I$STAGING/include\" LDFLAGS=\"-L$STAGING/lib\" CXXFLAGS=\"-frandom-seed=bitcoin\"\n+  ./configure --prefix=$STAGING --bindir=$OUTDIR --with-protoc-bindir=$STAGING/host/bin --disable-maintainer-mode --disable-dependency-tracking PKG_CONFIG_PATH=\"$STAGING/lib/pkgconfig\" CPPFLAGS=\"-I$STAGING/include ${OPTFLAGS}\" LDFLAGS=\"-L$STAGING/lib ${OPTFLAGS}\" CXXFLAGS=\"-frandom-seed=bitcoin ${OPTFLAGS}\"\n   make dist\n   mkdir -p distsrc\n   cd distsrc\n   tar --strip-components=1 -xf ../bitcoin-*.tar.*\n-  ./configure --prefix=$STAGING --bindir=$OUTDIR --with-protoc-bindir=$STAGING/host/bin --disable-maintainer-mode --disable-dependency-tracking PKG_CONFIG_PATH=\"$STAGING/lib/pkgconfig\" CPPFLAGS=\"-I$STAGING/include\" LDFLAGS=\"-L$STAGING/lib\" CXXFLAGS=\"-frandom-seed=bitcoin\"\n+  ./configure --prefix=$STAGING --bindir=$OUTDIR --with-protoc-bindir=$STAGING/host/bin --disable-maintainer-mode --disable-dependency-tracking PKG_CONFIG_PATH=\"$STAGING/lib/pkgconfig\" CPPFLAGS=\"-I$STAGING/include ${OPTFLAGS}\" LDFLAGS=\"-L$STAGING/lib ${OPTFLAGS}\" CXXFLAGS=\"-frandom-seed=bitcoin ${OPTFLAGS}\"\n   make $MAKEOPTS\n   make $MAKEOPTS install-strip\n   mkdir -p $OUTDIR/src"
      }
    ]
  },
  {
    "sha": "8c20bbbed934891fb9e9b5ea90eea610034ad11c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4YzIwYmJiZWQ5MzQ4OTFmYjllOWI1ZWE5MGVlYTYxMDAzNGFkMTFj",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2014-01-14T16:11:38Z"
      },
      "committer": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2014-01-14T16:11:38Z"
      },
      "message": "update copyright year to 2014",
      "tree": {
        "sha": "e373b18ed5d880b0ffe6ffd2067163bc4744a411",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e373b18ed5d880b0ffe6ffd2067163bc4744a411"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8c20bbbed934891fb9e9b5ea90eea610034ad11c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8c20bbbed934891fb9e9b5ea90eea610034ad11c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8c20bbbed934891fb9e9b5ea90eea610034ad11c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8c20bbbed934891fb9e9b5ea90eea610034ad11c/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "b26de9d951d482d2604c145b6acca8ec2fca4831",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b26de9d951d482d2604c145b6acca8ec2fca4831",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b26de9d951d482d2604c145b6acca8ec2fca4831"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "a06ceb7505549d47a7b19c92332dbcb7f445c69d",
        "filename": "src/clientversion.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8c20bbbed934891fb9e9b5ea90eea610034ad11c/src/clientversion.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8c20bbbed934891fb9e9b5ea90eea610034ad11c/src/clientversion.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/clientversion.h?ref=8c20bbbed934891fb9e9b5ea90eea610034ad11c",
        "patch": "@@ -19,7 +19,7 @@\n \n // Copyright year (2009-this)\n // Todo: update this when changing our copyright comments in the source\n-#define COPYRIGHT_YEAR 2013\n+#define COPYRIGHT_YEAR 2014\n \n #endif //HAVE_CONFIG_H\n "
      }
    ]
  },
  {
    "sha": "57d8e3f88fcb9f9ac3456d4954610bbf3acbe765",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1N2Q4ZTNmODhmY2I5ZjlhYzM0NTZkNDk1NDYxMGJiZjNhY2JlNzY1",
    "commit": {
      "author": {
        "name": "Cozz Lovan",
        "email": "cozzlovan@yahoo.com",
        "date": "2014-01-14T16:41:57Z"
      },
      "committer": {
        "name": "Cozz Lovan",
        "email": "cozzlovan@yahoo.com",
        "date": "2014-01-14T16:41:57Z"
      },
      "message": "[Qt] add missing lock in walletmodel",
      "tree": {
        "sha": "ee5de226119b07f5e25c592aa60f48e26a9132ed",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ee5de226119b07f5e25c592aa60f48e26a9132ed"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/57d8e3f88fcb9f9ac3456d4954610bbf3acbe765",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/57d8e3f88fcb9f9ac3456d4954610bbf3acbe765",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/57d8e3f88fcb9f9ac3456d4954610bbf3acbe765",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/57d8e3f88fcb9f9ac3456d4954610bbf3acbe765/comments",
    "author": {
      "login": "cozz",
      "id": 2814559,
      "node_id": "MDQ6VXNlcjI4MTQ1NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2814559?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cozz",
      "html_url": "https://github.com/cozz",
      "followers_url": "https://api.github.com/users/cozz/followers",
      "following_url": "https://api.github.com/users/cozz/following{/other_user}",
      "gists_url": "https://api.github.com/users/cozz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cozz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cozz/subscriptions",
      "organizations_url": "https://api.github.com/users/cozz/orgs",
      "repos_url": "https://api.github.com/users/cozz/repos",
      "events_url": "https://api.github.com/users/cozz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cozz/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "cozz",
      "id": 2814559,
      "node_id": "MDQ6VXNlcjI4MTQ1NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2814559?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cozz",
      "html_url": "https://github.com/cozz",
      "followers_url": "https://api.github.com/users/cozz/followers",
      "following_url": "https://api.github.com/users/cozz/following{/other_user}",
      "gists_url": "https://api.github.com/users/cozz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cozz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cozz/subscriptions",
      "organizations_url": "https://api.github.com/users/cozz/orgs",
      "repos_url": "https://api.github.com/users/cozz/repos",
      "events_url": "https://api.github.com/users/cozz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cozz/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b26de9d951d482d2604c145b6acca8ec2fca4831",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b26de9d951d482d2604c145b6acca8ec2fca4831",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b26de9d951d482d2604c145b6acca8ec2fca4831"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 1,
      "deletions": 0
    },
    "files": [
      {
        "sha": "14f29c933bcff4d279af03a27418084b1ac04961",
        "filename": "src/qt/walletmodel.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57d8e3f88fcb9f9ac3456d4954610bbf3acbe765/src/qt/walletmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57d8e3f88fcb9f9ac3456d4954610bbf3acbe765/src/qt/walletmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.cpp?ref=57d8e3f88fcb9f9ac3456d4954610bbf3acbe765",
        "patch": "@@ -488,6 +488,7 @@ bool WalletModel::getPubKey(const CKeyID &address, CPubKey& vchPubKeyOut) const\n // returns a list of COutputs from COutPoints\n void WalletModel::getOutputs(const std::vector<COutPoint>& vOutpoints, std::vector<COutput>& vOutputs)\n {\n+    LOCK(wallet->cs_wallet);\n     BOOST_FOREACH(const COutPoint& outpoint, vOutpoints)\n     {\n         if (!wallet->mapWallet.count(outpoint.hash)) continue;"
      }
    ]
  },
  {
    "sha": "81bad8b3867ca7becf0ff3b524a714c5d781190e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4MWJhZDhiMzg2N2NhN2JlY2YwZmYzYjUyNGE3MTRjNWQ3ODExOTBl",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2014-01-14T16:43:38Z"
      },
      "committer": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2014-01-14T16:43:38Z"
      },
      "message": "[Qt] 2 minor translation changes",
      "tree": {
        "sha": "fffb1326e50557dc3117fe924da0238bb34d4630",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fffb1326e50557dc3117fe924da0238bb34d4630"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/81bad8b3867ca7becf0ff3b524a714c5d781190e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/81bad8b3867ca7becf0ff3b524a714c5d781190e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/81bad8b3867ca7becf0ff3b524a714c5d781190e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/81bad8b3867ca7becf0ff3b524a714c5d781190e/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "b26de9d951d482d2604c145b6acca8ec2fca4831",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b26de9d951d482d2604c145b6acca8ec2fca4831",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b26de9d951d482d2604c145b6acca8ec2fca4831"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "c215df5db2cbb8e5307e718226fb855134318d72",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/81bad8b3867ca7becf0ff3b524a714c5d781190e/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/81bad8b3867ca7becf0ff3b524a714c5d781190e/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=81bad8b3867ca7becf0ff3b524a714c5d781190e",
        "patch": "@@ -359,7 +359,7 @@ void BitcoinApplication::requestShutdown()\n     QWidget *shutdownWindow = new QWidget();\n     QVBoxLayout *layout = new QVBoxLayout();\n     layout->addWidget(new QLabel(\n-        tr(\"Bitcoin Core is shutting down...\\n\") +\n+        tr(\"Bitcoin Core is shutting down...\") + \"<br /><br />\" +\n         tr(\"Do not shut down the computer until this window disappears.\")));\n     shutdownWindow->setLayout(layout);\n "
      },
      {
        "sha": "e0d99aac3979b1599c0ad1c1d7d2134d20b1251d",
        "filename": "src/qt/forms/optionsdialog.ui",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/81bad8b3867ca7becf0ff3b524a714c5d781190e/src/qt/forms/optionsdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/81bad8b3867ca7becf0ff3b524a714c5d781190e/src/qt/forms/optionsdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/optionsdialog.ui?ref=81bad8b3867ca7becf0ff3b524a714c5d781190e",
        "patch": "@@ -473,7 +473,7 @@\n         <item>\n          <widget class=\"QLabel\" name=\"overriddenByCommandLineInfoLabel\">\n           <property name=\"text\">\n-           <string>Active command-line options that override above options: </string>\n+           <string>Active command-line options that override above options:</string>\n           </property>\n           <property name=\"textFormat\">\n            <enum>Qt::PlainText</enum>"
      }
    ]
  },
  {
    "sha": "7fb5894b4c5bc48fc6a3e132772e68b1c4fbe1cc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3ZmI1ODk0YjRjNWJjNDhmYzZhM2UxMzI3NzJlNjhiMWM0ZmJlMWNj",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-14T16:45:20Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-14T16:45:23Z"
      },
      "message": "Merge pull request #3537\n\n8c20bbb update copyright year to 2014 (Philip Kaufmann)",
      "tree": {
        "sha": "e373b18ed5d880b0ffe6ffd2067163bc4744a411",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e373b18ed5d880b0ffe6ffd2067163bc4744a411"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7fb5894b4c5bc48fc6a3e132772e68b1c4fbe1cc",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJS1WmjAAoJEHSBCwEjRsmmDJIIAMUNZ+Fmd4ZKPRG9H9lTN2nv\n8+1sHQ0MDpWyqyvjwkyx9DWpGsQsXkm6P3uuFvpdYkn6J3HQLpEHOfs112gSiQs2\n+HyH4yt8hRTdzm2dyML+ByZc92GWZ77JLARWQcXkkLCeFsIi/UA8hGy2WupGRtGf\nYqXtbnrVaC8GSAF7b4Gmt5MhGRcjlYvo5HKhbm5OxUZcxAD+3VYHhBopsgfMILHg\nNCGXjTse9SVkoH0JGnfPYl8E9e+2E1It7iPxE3OzxwlTEvZR4EWrgkv9WgrJGifA\n2HH+l+6VJGKErY6JX50pfxTKjlepif7Boi5XLSCmW9sjLINvruy426bqdnh2fW4=\n=6P5Z\n-----END PGP SIGNATURE-----",
        "payload": "tree e373b18ed5d880b0ffe6ffd2067163bc4744a411\nparent b26de9d951d482d2604c145b6acca8ec2fca4831\nparent 8c20bbbed934891fb9e9b5ea90eea610034ad11c\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1389717920 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1389717923 +0100\n\nMerge pull request #3537\n\n8c20bbb update copyright year to 2014 (Philip Kaufmann)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7fb5894b4c5bc48fc6a3e132772e68b1c4fbe1cc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7fb5894b4c5bc48fc6a3e132772e68b1c4fbe1cc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7fb5894b4c5bc48fc6a3e132772e68b1c4fbe1cc/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b26de9d951d482d2604c145b6acca8ec2fca4831",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b26de9d951d482d2604c145b6acca8ec2fca4831",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b26de9d951d482d2604c145b6acca8ec2fca4831"
      },
      {
        "sha": "8c20bbbed934891fb9e9b5ea90eea610034ad11c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8c20bbbed934891fb9e9b5ea90eea610034ad11c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8c20bbbed934891fb9e9b5ea90eea610034ad11c"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "a06ceb7505549d47a7b19c92332dbcb7f445c69d",
        "filename": "src/clientversion.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7fb5894b4c5bc48fc6a3e132772e68b1c4fbe1cc/src/clientversion.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7fb5894b4c5bc48fc6a3e132772e68b1c4fbe1cc/src/clientversion.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/clientversion.h?ref=7fb5894b4c5bc48fc6a3e132772e68b1c4fbe1cc",
        "patch": "@@ -19,7 +19,7 @@\n \n // Copyright year (2009-this)\n // Todo: update this when changing our copyright comments in the source\n-#define COPYRIGHT_YEAR 2013\n+#define COPYRIGHT_YEAR 2014\n \n #endif //HAVE_CONFIG_H\n "
      }
    ]
  },
  {
    "sha": "c7045322941ba771d07cce7de0e73ecb7108d4ef",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNzA0NTMyMjk0MWJhNzcxZDA3Y2NlN2RlMGU3M2VjYjcxMDhkNGVm",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2014-01-14T16:57:32Z"
      },
      "committer": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2014-01-14T16:57:32Z"
      },
      "message": "[Qt] small paymentserver header cleanup",
      "tree": {
        "sha": "386cca78f4c1eae79a48db372e0c9539baa4297e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/386cca78f4c1eae79a48db372e0c9539baa4297e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c7045322941ba771d07cce7de0e73ecb7108d4ef",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c7045322941ba771d07cce7de0e73ecb7108d4ef",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c7045322941ba771d07cce7de0e73ecb7108d4ef",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c7045322941ba771d07cce7de0e73ecb7108d4ef/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "7fb5894b4c5bc48fc6a3e132772e68b1c4fbe1cc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7fb5894b4c5bc48fc6a3e132772e68b1c4fbe1cc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7fb5894b4c5bc48fc6a3e132772e68b1c4fbe1cc"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 0,
      "deletions": 2
    },
    "files": [
      {
        "sha": "7642cd117aef55c74684d4f7efffa45c922902ba",
        "filename": "src/qt/paymentserver.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c7045322941ba771d07cce7de0e73ecb7108d4ef/src/qt/paymentserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c7045322941ba771d07cce7de0e73ecb7108d4ef/src/qt/paymentserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/paymentserver.cpp?ref=c7045322941ba771d07cce7de0e73ecb7108d4ef",
        "patch": "@@ -8,8 +8,6 @@\n #include \"guiconstants.h\"\n #include \"guiutil.h\"\n #include \"optionsmodel.h\"\n-#include \"paymentserver.h\"\n-#include \"walletmodel.h\"\n \n #include \"base58.h\"\n #include \"ui_interface.h\""
      }
    ]
  },
  {
    "sha": "b0e8c4b0b9d4ce9b34b6fba348d207f845a6be98",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMGU4YzRiMGI5ZDRjZTliMzRiNmZiYTM0OGQyMDdmODQ1YTZiZTk4",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-14T17:32:38Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-14T17:33:27Z"
      },
      "message": "Merge pull request #3540\n\n57d8e3f [Qt] add missing lock in walletmodel (Cozz Lovan)",
      "tree": {
        "sha": "07024734017d2140966d621e82f829ee9e3ff564",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/07024734017d2140966d621e82f829ee9e3ff564"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b0e8c4b0b9d4ce9b34b6fba348d207f845a6be98",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJS1XTnAAoJEHSBCwEjRsmmDU0H/j3b4+4TeuD3V0wnPXt/C9BT\nU4wt5Apr4FvwbTQXaf6oj9WJgJwq640aEredY/2jErJp9FSyqH9FPyx47pnXle7V\nQm0O9VQMuXGTwUpPY+LRcn+ejRf3Y27++iUxl7sVRMz7EvSRYTYGwqdcxq7/DHrm\n4glcygPNr7FfMmBEsc7EykKxh7SlphhlTgmQ+TvjeI/GIyIzWSya9M8uoN/SACTG\njf+JMoQ29Jxmx2z0vWB2P3sZjx1/F7Zvbs7LMv7PtfRgm/NT2GBDqSdktg4KyZQL\nVLbReVR2beSpz4RQQz3iNN2PasGrm15up9yGwjV8aZvz8XGlCJL2U3WDnJndxYI=\n=ZRaH\n-----END PGP SIGNATURE-----",
        "payload": "tree 07024734017d2140966d621e82f829ee9e3ff564\nparent 7fb5894b4c5bc48fc6a3e132772e68b1c4fbe1cc\nparent 57d8e3f88fcb9f9ac3456d4954610bbf3acbe765\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1389720758 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1389720807 +0100\n\nMerge pull request #3540\n\n57d8e3f [Qt] add missing lock in walletmodel (Cozz Lovan)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b0e8c4b0b9d4ce9b34b6fba348d207f845a6be98",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b0e8c4b0b9d4ce9b34b6fba348d207f845a6be98",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b0e8c4b0b9d4ce9b34b6fba348d207f845a6be98/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7fb5894b4c5bc48fc6a3e132772e68b1c4fbe1cc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7fb5894b4c5bc48fc6a3e132772e68b1c4fbe1cc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7fb5894b4c5bc48fc6a3e132772e68b1c4fbe1cc"
      },
      {
        "sha": "57d8e3f88fcb9f9ac3456d4954610bbf3acbe765",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/57d8e3f88fcb9f9ac3456d4954610bbf3acbe765",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/57d8e3f88fcb9f9ac3456d4954610bbf3acbe765"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 1,
      "deletions": 0
    },
    "files": [
      {
        "sha": "14f29c933bcff4d279af03a27418084b1ac04961",
        "filename": "src/qt/walletmodel.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b0e8c4b0b9d4ce9b34b6fba348d207f845a6be98/src/qt/walletmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b0e8c4b0b9d4ce9b34b6fba348d207f845a6be98/src/qt/walletmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.cpp?ref=b0e8c4b0b9d4ce9b34b6fba348d207f845a6be98",
        "patch": "@@ -488,6 +488,7 @@ bool WalletModel::getPubKey(const CKeyID &address, CPubKey& vchPubKeyOut) const\n // returns a list of COutputs from COutPoints\n void WalletModel::getOutputs(const std::vector<COutPoint>& vOutpoints, std::vector<COutput>& vOutputs)\n {\n+    LOCK(wallet->cs_wallet);\n     BOOST_FOREACH(const COutPoint& outpoint, vOutpoints)\n     {\n         if (!wallet->mapWallet.count(outpoint.hash)) continue;"
      }
    ]
  },
  {
    "sha": "6b5fbc9073aa9ed9ea1d2675368a030ba05c6ad0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2YjVmYmM5MDczYWE5ZWQ5ZWExZDI2NzUzNjhhMDMwYmEwNWM2YWQw",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-14T17:47:41Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-14T17:48:02Z"
      },
      "message": "Merge pull request #3541\n\nc704532 [Qt] small paymentserver header cleanup (Philip Kaufmann)",
      "tree": {
        "sha": "78577852dbe27b9a031af22fe5cddaad8ce6ef91",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/78577852dbe27b9a031af22fe5cddaad8ce6ef91"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6b5fbc9073aa9ed9ea1d2675368a030ba05c6ad0",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJS1XhSAAoJEHSBCwEjRsmm3QkH+wSxxdoVT9luqAzzuyNvbnMZ\nygqhDpAy0O441jnSwn9Yv19woHKx/1mHQhXXRRGYZu5IdyVjycmj7nd1jA2AN/D2\nV3cIvbJ8D/3t9IkrRu3qIZCiRem5P3z4axzHRGi6s/Vi40vgjkLdWg8hAoZWFrMq\nMnrJLxE7Wf6Yj2ADMdPGy+PGM76cthz7VIinJAoV0nqZWCjo3lTmw0d4QkYlLuMD\nhxD6Shnh0Ea8+c9zvtnMeCFXNTSV9Jc8fH+SSgoX5fAjB06e+v6JR2Fm8K8QbmKW\nUR8XxoF23glboep8KojQlzMTJLGJXsOS7e9hidxpJ3fq8zdiLZBV5QEodFqXy7c=\n=c/Xc\n-----END PGP SIGNATURE-----",
        "payload": "tree 78577852dbe27b9a031af22fe5cddaad8ce6ef91\nparent b0e8c4b0b9d4ce9b34b6fba348d207f845a6be98\nparent c7045322941ba771d07cce7de0e73ecb7108d4ef\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1389721661 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1389721682 +0100\n\nMerge pull request #3541\n\nc704532 [Qt] small paymentserver header cleanup (Philip Kaufmann)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6b5fbc9073aa9ed9ea1d2675368a030ba05c6ad0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6b5fbc9073aa9ed9ea1d2675368a030ba05c6ad0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6b5fbc9073aa9ed9ea1d2675368a030ba05c6ad0/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b0e8c4b0b9d4ce9b34b6fba348d207f845a6be98",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b0e8c4b0b9d4ce9b34b6fba348d207f845a6be98",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b0e8c4b0b9d4ce9b34b6fba348d207f845a6be98"
      },
      {
        "sha": "c7045322941ba771d07cce7de0e73ecb7108d4ef",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c7045322941ba771d07cce7de0e73ecb7108d4ef",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c7045322941ba771d07cce7de0e73ecb7108d4ef"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 0,
      "deletions": 2
    },
    "files": [
      {
        "sha": "7642cd117aef55c74684d4f7efffa45c922902ba",
        "filename": "src/qt/paymentserver.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6b5fbc9073aa9ed9ea1d2675368a030ba05c6ad0/src/qt/paymentserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6b5fbc9073aa9ed9ea1d2675368a030ba05c6ad0/src/qt/paymentserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/paymentserver.cpp?ref=6b5fbc9073aa9ed9ea1d2675368a030ba05c6ad0",
        "patch": "@@ -8,8 +8,6 @@\n #include \"guiconstants.h\"\n #include \"guiutil.h\"\n #include \"optionsmodel.h\"\n-#include \"paymentserver.h\"\n-#include \"walletmodel.h\"\n \n #include \"base58.h\"\n #include \"ui_interface.h\""
      }
    ]
  },
  {
    "sha": "1aac1448dee95c6d2455274021b00bb8c853fd32",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxYWFjMTQ0OGRlZTk1YzZkMjQ1NTI3NDAyMWIwMGJiOGM4NTNmZDMy",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-14T17:55:28Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-14T17:55:39Z"
      },
      "message": "Merge pull request #3538\n\n81bad8b [Qt] 2 minor translation changes (Philip Kaufmann)",
      "tree": {
        "sha": "910c700c225f53cd39c89ab61119a58df718cda3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/910c700c225f53cd39c89ab61119a58df718cda3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1aac1448dee95c6d2455274021b00bb8c853fd32",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJS1XobAAoJEHSBCwEjRsmm8ysIAMqw+JDwuyo9yMcSeC5crUwH\nQMPcDJ2Xr6ELWB+SFwu/2qohM/A+p2sCxytIagqLlrwgF33pylUhTaE/DwX6OWy9\nYOClS0UDhd2W1id07WlmjXaHr2b/Q7qy4nsx4eMMR8gV7XkHRpe4P0rTruyKLuNV\nVI0J3Mpswig08ZU3Z6hXNYjoiY9OWZBKEDEzMyARz24tWzmSm1gOcr50AsWWiyQ0\nChAbbCmt0pqHDYbCf99DP8uGena5c96v1sq/jiVQhZkg2YByU4OSm228nUF5taEX\nCCXECSEpPZnU/eOUeFuNbx7vzLNvTDWqmCf5sHmI9XkB4YAiHUf5SoN4tFOQmMo=\n=zaNq\n-----END PGP SIGNATURE-----",
        "payload": "tree 910c700c225f53cd39c89ab61119a58df718cda3\nparent 6b5fbc9073aa9ed9ea1d2675368a030ba05c6ad0\nparent 81bad8b3867ca7becf0ff3b524a714c5d781190e\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1389722128 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1389722139 +0100\n\nMerge pull request #3538\n\n81bad8b [Qt] 2 minor translation changes (Philip Kaufmann)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1aac1448dee95c6d2455274021b00bb8c853fd32",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1aac1448dee95c6d2455274021b00bb8c853fd32",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1aac1448dee95c6d2455274021b00bb8c853fd32/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6b5fbc9073aa9ed9ea1d2675368a030ba05c6ad0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6b5fbc9073aa9ed9ea1d2675368a030ba05c6ad0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6b5fbc9073aa9ed9ea1d2675368a030ba05c6ad0"
      },
      {
        "sha": "81bad8b3867ca7becf0ff3b524a714c5d781190e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/81bad8b3867ca7becf0ff3b524a714c5d781190e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/81bad8b3867ca7becf0ff3b524a714c5d781190e"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "c215df5db2cbb8e5307e718226fb855134318d72",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1aac1448dee95c6d2455274021b00bb8c853fd32/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1aac1448dee95c6d2455274021b00bb8c853fd32/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=1aac1448dee95c6d2455274021b00bb8c853fd32",
        "patch": "@@ -359,7 +359,7 @@ void BitcoinApplication::requestShutdown()\n     QWidget *shutdownWindow = new QWidget();\n     QVBoxLayout *layout = new QVBoxLayout();\n     layout->addWidget(new QLabel(\n-        tr(\"Bitcoin Core is shutting down...\\n\") +\n+        tr(\"Bitcoin Core is shutting down...\") + \"<br /><br />\" +\n         tr(\"Do not shut down the computer until this window disappears.\")));\n     shutdownWindow->setLayout(layout);\n "
      },
      {
        "sha": "e0d99aac3979b1599c0ad1c1d7d2134d20b1251d",
        "filename": "src/qt/forms/optionsdialog.ui",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1aac1448dee95c6d2455274021b00bb8c853fd32/src/qt/forms/optionsdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1aac1448dee95c6d2455274021b00bb8c853fd32/src/qt/forms/optionsdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/optionsdialog.ui?ref=1aac1448dee95c6d2455274021b00bb8c853fd32",
        "patch": "@@ -473,7 +473,7 @@\n         <item>\n          <widget class=\"QLabel\" name=\"overriddenByCommandLineInfoLabel\">\n           <property name=\"text\">\n-           <string>Active command-line options that override above options: </string>\n+           <string>Active command-line options that override above options:</string>\n           </property>\n           <property name=\"textFormat\">\n            <enum>Qt::PlainText</enum>"
      }
    ]
  },
  {
    "sha": "f8b48ed2979cf76550d3889c0da4211a4e45f235",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmOGI0OGVkMjk3OWNmNzY1NTBkMzg4OWMwZGE0MjExYTRlNDVmMjM1",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-14T17:58:15Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-14T17:59:07Z"
      },
      "message": "Merge pull request #3426\n\n16ec904 Don't create empty transactions when reading corrupted wallet (Wladimir J. van der Laan)",
      "tree": {
        "sha": "a09ffe507716f7ee4ece5f6db367c22b2c9a3ba1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a09ffe507716f7ee4ece5f6db367c22b2c9a3ba1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f8b48ed2979cf76550d3889c0da4211a4e45f235",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJS1XrrAAoJEHSBCwEjRsmmjnQIAIIYMLAxXWwt3cqN8HoNuwDc\nGZLw/ib7/6jUdb3glniJH0mjyRvDaCOYujOxkDWqWRu/VjiUt/x2HSIiEJocqjgv\nrr5nOZvU+Iu1aYq8mC1qWGE5gsUWadpJEzim5YBsi/1+3YG94yGheg1CsOhzGE4W\n6tJM8eeTdHxYPSWkGztlQFs+LMQPVwQvqPZYhbyMQiR5aWgFSG7m+Ao2EV6FjUc4\n3r8IpEZGmiyFzi4O5+WUurIYUXx7FERG2ZwNwVwnUaprolZliulj/0JL7tCG6QLx\nU3GUnTA77HAnLWbBKGhuDmHyhdgpvPjB9V6jnr5G1R7Qsbnh4egK9GvEh3Y+gCQ=\n=QhyQ\n-----END PGP SIGNATURE-----",
        "payload": "tree a09ffe507716f7ee4ece5f6db367c22b2c9a3ba1\nparent 1aac1448dee95c6d2455274021b00bb8c853fd32\nparent 16ec9044d1f2eda7c5c86fcb73c839e17fb35db3\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1389722295 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1389722347 +0100\n\nMerge pull request #3426\n\n16ec904 Don't create empty transactions when reading corrupted wallet (Wladimir J. van der Laan)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f8b48ed2979cf76550d3889c0da4211a4e45f235",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f8b48ed2979cf76550d3889c0da4211a4e45f235",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f8b48ed2979cf76550d3889c0da4211a4e45f235/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1aac1448dee95c6d2455274021b00bb8c853fd32",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1aac1448dee95c6d2455274021b00bb8c853fd32",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1aac1448dee95c6d2455274021b00bb8c853fd32"
      },
      {
        "sha": "16ec9044d1f2eda7c5c86fcb73c839e17fb35db3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/16ec9044d1f2eda7c5c86fcb73c839e17fb35db3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/16ec9044d1f2eda7c5c86fcb73c839e17fb35db3"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 2,
      "deletions": 4
    },
    "files": [
      {
        "sha": "9c5bddba60761b60d8a4ec780f704a412e9ea5bc",
        "filename": "src/walletdb.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 4,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8b48ed2979cf76550d3889c0da4211a4e45f235/src/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8b48ed2979cf76550d3889c0da4211a4e45f235/src/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/walletdb.cpp?ref=f8b48ed2979cf76550d3889c0da4211a4e45f235",
        "patch": "@@ -357,16 +357,13 @@ ReadKeyValue(CWallet* pwallet, CDataStream& ssKey, CDataStream& ssValue,\n         {\n             uint256 hash;\n             ssKey >> hash;\n-            CWalletTx& wtx = pwallet->mapWallet[hash];\n+            CWalletTx wtx;\n             ssValue >> wtx;\n             CValidationState state;\n             if (CheckTransaction(wtx, state) && (wtx.GetHash() == hash) && state.IsValid())\n                 wtx.BindWallet(pwallet);\n             else\n-            {\n-                pwallet->mapWallet.erase(hash);\n                 return false;\n-            }\n \n             // Undo serialize changes in 31600\n             if (31404 <= wtx.fTimeReceivedIsTxTime && wtx.fTimeReceivedIsTxTime <= 31703)\n@@ -391,6 +388,7 @@ ReadKeyValue(CWallet* pwallet, CDataStream& ssKey, CDataStream& ssValue,\n             if (wtx.nOrderPos == -1)\n                 wss.fAnyUnordered = true;\n \n+            pwallet->mapWallet[hash] = wtx;\n             //// debug print\n             //LogPrintf(\"LoadWallet  %s\\n\", wtx.GetHash().ToString().c_str());\n             //LogPrintf(\" %12\"PRId64\"  %s  %s  %s\\n\","
      }
    ]
  },
  {
    "sha": "720731d2815d86c63eda6f6bedb74a55747e21af",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3MjA3MzFkMjgxNWQ4NmM2M2VkYTZmNmJlZGI3NGE1NTc0N2UyMWFm",
    "commit": {
      "author": {
        "name": "Christopher Latham",
        "email": "sudosurootdev@gmail.com",
        "date": "2014-01-14T21:51:44Z"
      },
      "committer": {
        "name": "Christopher Latham",
        "email": "sudosurootdev@gmail.com",
        "date": "2014-01-14T21:51:44Z"
      },
      "message": "Update configure.ac\n\nAdded ubuntu 13.10 and libboost1.54-all-dev incompatibility instruction to the existing no boost_sleep warning.",
      "tree": {
        "sha": "74f8cf027e4790dd973806956c4082cca8e7c234",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/74f8cf027e4790dd973806956c4082cca8e7c234"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/720731d2815d86c63eda6f6bedb74a55747e21af",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/720731d2815d86c63eda6f6bedb74a55747e21af",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/720731d2815d86c63eda6f6bedb74a55747e21af",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/720731d2815d86c63eda6f6bedb74a55747e21af/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "b26de9d951d482d2604c145b6acca8ec2fca4831",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b26de9d951d482d2604c145b6acca8ec2fca4831",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b26de9d951d482d2604c145b6acca8ec2fca4831"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "88c20cdce64c23afb075a1cf722e181d02fa27b1",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/720731d2815d86c63eda6f6bedb74a55747e21af/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/720731d2815d86c63eda6f6bedb74a55747e21af/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=720731d2815d86c63eda6f6bedb74a55747e21af",
        "patch": "@@ -395,7 +395,7 @@ LIBS=\"$TEMP_LIBS\"\n fi\n \n if test x$boost_sleep != xyes; then\n-  AC_MSG_ERROR(No working boost sleep implementation found)\n+  AC_MSG_ERROR(No working boost sleep implementation found. If on ubuntu 13.10 with libboost1.54-all-dev remove libboost.1.54-all-dev and use libboost1.53-all-dev)\n fi\n \n BITCOIN_QT_INIT"
      }
    ]
  },
  {
    "sha": "69843c8b4eee99183502622fcf6c125e50b9c5d4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2OTg0M2M4YjRlZWU5OTE4MzUwMjYyMmZjZjZjMTI1ZTUwYjljNWQ0",
    "commit": {
      "author": {
        "name": "Christopher Latham",
        "email": "sudosurootdev@gmail.com",
        "date": "2014-01-14T21:55:05Z"
      },
      "committer": {
        "name": "Christopher Latham",
        "email": "sudosurootdev@gmail.com",
        "date": "2014-01-14T21:55:05Z"
      },
      "message": "Update build-unix.md\n\nAdded incompatibility and instruction regarding Ubuntu 13.10 and libboost1.54-all-dev",
      "tree": {
        "sha": "6f885bb08943d29a5105d5f13a02db951ee0a6db",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6f885bb08943d29a5105d5f13a02db951ee0a6db"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/69843c8b4eee99183502622fcf6c125e50b9c5d4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/69843c8b4eee99183502622fcf6c125e50b9c5d4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/69843c8b4eee99183502622fcf6c125e50b9c5d4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/69843c8b4eee99183502622fcf6c125e50b9c5d4/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "720731d2815d86c63eda6f6bedb74a55747e21af",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/720731d2815d86c63eda6f6bedb74a55747e21af",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/720731d2815d86c63eda6f6bedb74a55747e21af"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 3,
      "deletions": 0
    },
    "files": [
      {
        "sha": "5124205a34d4ad4b3587b970a6c400d08a487e47",
        "filename": "doc/build-unix.md",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/69843c8b4eee99183502622fcf6c125e50b9c5d4/doc/build-unix.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/69843c8b4eee99183502622fcf6c125e50b9c5d4/doc/build-unix.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-unix.md?ref=69843c8b4eee99183502622fcf6c125e50b9c5d4",
        "patch": "@@ -68,6 +68,9 @@ for Ubuntu 12.04 and later:\n \n  Ubuntu 12.04 and later have packages for libdb5.1-dev and libdb5.1++-dev,\n  but using these will break binary wallet compatibility, and is not recommended.\n+ \n+for Ubuntu 13.10: \n+        libboost1.54-all-dev will not work. Remove libboost1.54-all-dev and install libboost1.53-all-dev\n \n for other Ubuntu & Debian:\n "
      }
    ]
  },
  {
    "sha": "f4bb12eecc03879d320db8fc905114cbd068e943",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmNGJiMTJlZWNjMDM4NzlkMzIwZGI4ZmM5MDUxMTRjYmQwNjhlOTQz",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-14T23:21:39Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-14T23:21:39Z"
      },
      "message": "doc: bump boost version in release-process\n\nThis was forgotten in #3501.",
      "tree": {
        "sha": "2064d4e005986c0d3604be25c0b8f0238b62de8a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2064d4e005986c0d3604be25c0b8f0238b62de8a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f4bb12eecc03879d320db8fc905114cbd068e943",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f4bb12eecc03879d320db8fc905114cbd068e943",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f4bb12eecc03879d320db8fc905114cbd068e943",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f4bb12eecc03879d320db8fc905114cbd068e943/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1e3abb4e3d9812945b63452b1fe5b4f058cbd9a2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1e3abb4e3d9812945b63452b1fe5b4f058cbd9a2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1e3abb4e3d9812945b63452b1fe5b4f058cbd9a2"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "2cc54edfebebf018160f2559da4b1052213c4f1f",
        "filename": "doc/release-process.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f4bb12eecc03879d320db8fc905114cbd068e943/doc/release-process.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f4bb12eecc03879d320db8fc905114cbd068e943/doc/release-process.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-process.md?ref=f4bb12eecc03879d320db8fc905114cbd068e943",
        "patch": "@@ -45,7 +45,7 @@ Release Process\n \twget 'http://zlib.net/zlib-1.2.8.tar.gz'\n \twget 'ftp://ftp.simplesystems.org/pub/png/src/libpng16/libpng-1.6.8.tar.gz'\n \twget 'https://fukuchi.org/works/qrencode/qrencode-3.4.3.tar.bz2'\n-\twget 'https://downloads.sourceforge.net/project/boost/boost/1.54.0/boost_1_54_0.tar.bz2'\n+\twget 'https://downloads.sourceforge.net/project/boost/boost/1.55.0/boost_1_55_0.tar.bz2'\n \twget 'https://svn.boost.org/trac/boost/raw-attachment/ticket/7262/boost-mingw.patch' -O \\ \n \t     boost-mingw-gas-cross-compile-2013-03-03.patch\n \twget 'https://download.qt-project.org/official_releases/qt/5.2/5.2.0/single/qt-everywhere-opensource-src-5.2.0.tar.gz'"
      }
    ]
  },
  {
    "sha": "04257151b14da2a7dbfce8fd6f8d5d5835169ea1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNDI1NzE1MWIxNGRhMmE3ZGJmY2U4ZmQ2ZjhkNWQ1ODM1MTY5ZWEx",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-15T09:12:24Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-15T11:39:01Z"
      },
      "message": "gitian: add explicit dependency build for linux\n\nCreate a dependency file per architecture:\n\n- bitcoin-deps-linux32-gitian-r1.tar.gz\n- bitcoin-deps-linux64-gitian-r1.tar.gz",
      "tree": {
        "sha": "1cb4d9979479db0604d58af60cf2dc2334ec8c95",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1cb4d9979479db0604d58af60cf2dc2334ec8c95"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/04257151b14da2a7dbfce8fd6f8d5d5835169ea1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/04257151b14da2a7dbfce8fd6f8d5d5835169ea1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/04257151b14da2a7dbfce8fd6f8d5d5835169ea1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/04257151b14da2a7dbfce8fd6f8d5d5835169ea1/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "279af1a2af7ea044845da3bbf1a72660f7e520dd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/279af1a2af7ea044845da3bbf1a72660f7e520dd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/279af1a2af7ea044845da3bbf1a72660f7e520dd"
      }
    ],
    "stats": {
      "total": 112,
      "additions": 74,
      "deletions": 38
    },
    "files": [
      {
        "sha": "48f2be2d655f2e839efa92121b31e00cb701dc78",
        "filename": "contrib/gitian-descriptors/deps-linux.yml",
        "status": "added",
        "additions": 62,
        "deletions": 0,
        "changes": 62,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/04257151b14da2a7dbfce8fd6f8d5d5835169ea1/contrib/gitian-descriptors/deps-linux.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/04257151b14da2a7dbfce8fd6f8d5d5835169ea1/contrib/gitian-descriptors/deps-linux.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/deps-linux.yml?ref=04257151b14da2a7dbfce8fd6f8d5d5835169ea1",
        "patch": "@@ -0,0 +1,62 @@\n+---\n+name: \"bitcoin\"\n+suites:\n+- \"precise\"\n+architectures:\n+- \"i386\"\n+- \"amd64\"\n+packages:\n+- \"unzip\"\n+- \"pkg-config\"\n+- \"libtool\"\n+- \"faketime\"\n+- \"bsdmainutils\"\n+reference_datetime: \"2013-06-01 00:00:00\"\n+remotes: []\n+files:\n+- \"miniupnpc-1.8.tar.gz\"\n+- \"qrencode-3.4.3.tar.bz2\"\n+- \"protobuf-2.5.0.tar.bz2\"\n+- \"db-4.8.30.NC.tar.gz\"\n+script: |\n+  STAGING=\"$HOME/install\"\n+  OPTFLAGS='-O2'\n+  export LIBRARY_PATH=\"$STAGING/lib\"\n+  # Integrity Check\n+  echo \"bc5f73c7b0056252c1888a80e6075787a1e1e9112b808f863a245483ff79859c  miniupnpc-1.8.tar.gz\"   | sha256sum -c\n+  echo \"dfd71487513c871bad485806bfd1fdb304dedc84d2b01a8fb8e0940b50597a98  qrencode-3.4.3.tar.bz2\" | sha256sum -c\n+  echo \"13bfc5ae543cf3aa180ac2485c0bc89495e3ae711fc6fab4f8ffe90dfb4bb677  protobuf-2.5.0.tar.bz2\" | sha256sum -c\n+  echo \"12edc0df75bf9abd7f82f821795bcee50f42cb2e5f76a6a281b85732798364ef  db-4.8.30.NC.tar.gz\"    | sha256sum -c\n+\n+  tar xzfm miniupnpc-1.8.tar.gz\n+  cd miniupnpc-1.8\n+  #   miniupnpc is always built with -fPIC\n+  INSTALLPREFIX=$STAGING make $MAKEOPTS install\n+  rm -f $STAGING/lib/libminiupnpc.so* # no way to skip shared lib build\n+  cd ..\n+  #\n+  tar xjfm qrencode-3.4.3.tar.bz2\n+  cd qrencode-3.4.3\n+  #   need --with-pic to avoid relocation error in 64 bit builds\n+  ./configure --prefix=$STAGING --enable-static --disable-shared -with-pic --without-tools\n+  make $MAKEOPTS install\n+  cd ..\n+  #\n+  tar xjfm protobuf-2.5.0.tar.bz2\n+  cd protobuf-2.5.0\n+  mkdir -p $STAGING/host/bin\n+  #   need --with-pic to avoid relocation error in 64 bit builds\n+  ./configure --prefix=$STAGING --bindir=$STAGING/host/bin --enable-static --disable-shared --with-pic\n+  make $MAKEOPTS install\n+  cd ..\n+  #\n+  tar xzf db-4.8.30.NC.tar.gz\n+  cd db-4.8.30.NC/build_unix\n+  #   need --with-pic to avoid relocation error in 64 bit builds\n+  ../dist/configure --prefix=$STAGING --enable-cxx --disable-shared --with-pic\n+  make $MAKEOPTS library_build\n+  make install_lib install_include\n+  cd ../..\n+  #\n+  cd $STAGING\n+  tar -czf $OUTDIR/bitcoin-deps-linux${GBUILD_BITS}-gitian-r1.tar.gz include lib bin host"
      },
      {
        "sha": "7ba375f5e4a3336fd6a85d1a917c128a9e490a5e",
        "filename": "contrib/gitian-descriptors/gitian.yml",
        "status": "modified",
        "additions": 10,
        "deletions": 38,
        "changes": 48,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/04257151b14da2a7dbfce8fd6f8d5d5835169ea1/contrib/gitian-descriptors/gitian.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/04257151b14da2a7dbfce8fd6f8d5d5835169ea1/contrib/gitian-descriptors/gitian.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian.yml?ref=04257151b14da2a7dbfce8fd6f8d5d5835169ea1",
        "patch": "@@ -17,7 +17,6 @@ packages:\n - \"git-core\"\n - \"unzip\"\n - \"pkg-config\"\n-- \"libpng12-dev\"\n - \"autoconf2.13\"\n - \"libtool\"\n - \"automake\"\n@@ -28,56 +27,29 @@ remotes:\n - \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n   \"dir\": \"bitcoin\"\n files:\n-- \"miniupnpc-1.8.tar.gz\"\n-- \"qrencode-3.4.3.tar.bz2\"\n-- \"protobuf-2.5.0.tar.bz2\"\n-- \"db-4.8.30.NC.tar.gz\"\n+- \"bitcoin-deps-linux32-gitian-r1.tar.gz\"\n+- \"bitcoin-deps-linux64-gitian-r1.tar.gz\"\n script: |\n   STAGING=\"$HOME/install\"\n   OPTFLAGS='-O2'\n+  BINDIR=\"${OUTDIR}/bin/${GBUILD_BITS}\" # 32/64 bit build specific output directory\n   export LIBRARY_PATH=\"$STAGING/lib\"\n-  # Integrity Check\n-  echo \"bc5f73c7b0056252c1888a80e6075787a1e1e9112b808f863a245483ff79859c  miniupnpc-1.8.tar.gz\"   | sha256sum -c\n-  echo \"dfd71487513c871bad485806bfd1fdb304dedc84d2b01a8fb8e0940b50597a98  qrencode-3.4.3.tar.bz2\" | sha256sum -c\n-  echo \"13bfc5ae543cf3aa180ac2485c0bc89495e3ae711fc6fab4f8ffe90dfb4bb677  protobuf-2.5.0.tar.bz2\" | sha256sum -c\n-  echo \"12edc0df75bf9abd7f82f821795bcee50f42cb2e5f76a6a281b85732798364ef  db-4.8.30.NC.tar.gz\"    | sha256sum -c\n-\n-  tar xzfm miniupnpc-1.8.tar.gz\n-  cd miniupnpc-1.8\n-  INSTALLPREFIX=$STAGING make $MAKEOPTS install\n-  cd ..\n+  mkdir -p ${BINDIR}\n   #\n-  tar xjfm qrencode-3.4.3.tar.bz2\n-  cd qrencode-3.4.3\n-  sed -i 's/@LIBPTHREAD@//' libqrencode.pc.in\n-  #   need --with-pic to avoid relocation error in 64 bit builds\n-  ./configure --prefix=$STAGING --enable-static --disable-shared --with-pic\n-  make $MAKEOPTS install\n-  cd ..\n-  #\n-  tar xjfm protobuf-2.5.0.tar.bz2\n-  cd protobuf-2.5.0\n-  mkdir -p $STAGING/host/bin\n-  ./configure --prefix=$STAGING --bindir=$STAGING/host/bin --enable-static --disable-shared --with-pic\n-  make $MAKEOPTS install\n-  cd ..\n-  #\n-  tar xzf db-4.8.30.NC.tar.gz\n-  cd db-4.8.30.NC/build_unix\n-  ../dist/configure --prefix=$STAGING --enable-cxx --disable-shared --with-pic\n-  make $MAKEOPTS library_build\n-  make install_lib install_include\n-  cd ../..\n+  mkdir -p $STAGING\n+  cd $STAGING\n+  tar xzfm ../build/bitcoin-deps-linux${GBUILD_BITS}-gitian-r1.tar.gz\n+  cd ../build\n   #\n   cd bitcoin\n   export TAR_OPTIONS=--mtime=`echo $REFERENCE_DATETIME | awk '{ print $1 }'`\n   ./autogen.sh\n-  ./configure --prefix=$STAGING --bindir=$OUTDIR --with-protoc-bindir=$STAGING/host/bin --disable-maintainer-mode --disable-dependency-tracking PKG_CONFIG_PATH=\"$STAGING/lib/pkgconfig\" CPPFLAGS=\"-I$STAGING/include ${OPTFLAGS}\" LDFLAGS=\"-L$STAGING/lib ${OPTFLAGS}\" CXXFLAGS=\"-frandom-seed=bitcoin ${OPTFLAGS}\"\n+  ./configure --prefix=$STAGING --bindir=$BINDIR --with-protoc-bindir=$STAGING/host/bin --disable-maintainer-mode --disable-dependency-tracking PKG_CONFIG_PATH=\"$STAGING/lib/pkgconfig\" CPPFLAGS=\"-I$STAGING/include ${OPTFLAGS}\" LDFLAGS=\"-L$STAGING/lib ${OPTFLAGS}\" CXXFLAGS=\"-frandom-seed=bitcoin ${OPTFLAGS}\"\n   make dist\n   mkdir -p distsrc\n   cd distsrc\n   tar --strip-components=1 -xf ../bitcoin-*.tar.*\n-  ./configure --prefix=$STAGING --bindir=$OUTDIR --with-protoc-bindir=$STAGING/host/bin --disable-maintainer-mode --disable-dependency-tracking PKG_CONFIG_PATH=\"$STAGING/lib/pkgconfig\" CPPFLAGS=\"-I$STAGING/include ${OPTFLAGS}\" LDFLAGS=\"-L$STAGING/lib ${OPTFLAGS}\" CXXFLAGS=\"-frandom-seed=bitcoin ${OPTFLAGS}\"\n+  ./configure --prefix=$STAGING --bindir=$BINDIR --with-protoc-bindir=$STAGING/host/bin --disable-maintainer-mode --disable-dependency-tracking PKG_CONFIG_PATH=\"$STAGING/lib/pkgconfig\" CPPFLAGS=\"-I$STAGING/include ${OPTFLAGS}\" LDFLAGS=\"-L$STAGING/lib ${OPTFLAGS}\" CXXFLAGS=\"-frandom-seed=bitcoin ${OPTFLAGS}\"\n   make $MAKEOPTS\n   make $MAKEOPTS install-strip\n   mkdir -p $OUTDIR/src"
      },
      {
        "sha": "8858be397e0c5b7436ee60c69a3f42e007ba0cd4",
        "filename": "doc/release-process.md",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/04257151b14da2a7dbfce8fd6f8d5d5835169ea1/doc/release-process.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/04257151b14da2a7dbfce8fd6f8d5d5835169ea1/doc/release-process.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-process.md?ref=04257151b14da2a7dbfce8fd6f8d5d5835169ea1",
        "patch": "@@ -51,6 +51,8 @@ Release Process\n \twget 'https://download.qt-project.org/archive/qt/4.8/4.8.3/qt-everywhere-opensource-src-4.8.3.tar.gz'\n \twget 'https://protobuf.googlecode.com/files/protobuf-2.5.0.tar.bz2'\n \tcd ..\n+\t./bin/gbuild ../bitcoin/contrib/gitian-descriptors/deps-linux.yml\n+\tmv build/out/*.tar.gz inputs/\n \t./bin/gbuild ../bitcoin/contrib/gitian-descriptors/boost-win32.yml\n \tmv build/out/boost-win32-*.zip inputs/\n \t./bin/gbuild ../bitcoin/contrib/gitian-descriptors/deps-win32.yml"
      }
    ]
  },
  {
    "sha": "8c31f037b1530c366eb14be0fcbefc566382041f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4YzMxZjAzN2IxNTMwYzM2NmViMTRiZTBmY2JlZmM1NjYzODIwNDFm",
    "commit": {
      "author": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2014-01-15T12:20:58Z"
      },
      "committer": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2014-01-15T12:20:58Z"
      },
      "message": "Merge pull request #3527 from laanwj/2014_01_gitian_win32_qt5\n\nbuild: update win32 deps",
      "tree": {
        "sha": "896811a5847ee6ede2c3e1c8e821da2e12642a81",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/896811a5847ee6ede2c3e1c8e821da2e12642a81"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8c31f037b1530c366eb14be0fcbefc566382041f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8c31f037b1530c366eb14be0fcbefc566382041f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8c31f037b1530c366eb14be0fcbefc566382041f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8c31f037b1530c366eb14be0fcbefc566382041f/comments",
    "author": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f8b48ed2979cf76550d3889c0da4211a4e45f235",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f8b48ed2979cf76550d3889c0da4211a4e45f235",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f8b48ed2979cf76550d3889c0da4211a4e45f235"
      },
      {
        "sha": "f4bb12eecc03879d320db8fc905114cbd068e943",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f4bb12eecc03879d320db8fc905114cbd068e943",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f4bb12eecc03879d320db8fc905114cbd068e943"
      }
    ],
    "stats": {
      "total": 123,
      "additions": 55,
      "deletions": 68
    },
    "files": [
      {
        "sha": "7f4f6705eac277ac9d56eb50f4c814239a53c303",
        "filename": "contrib/gitian-descriptors/README.md",
        "status": "modified",
        "additions": 3,
        "deletions": 13,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8c31f037b1530c366eb14be0fcbefc566382041f/contrib/gitian-descriptors/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8c31f037b1530c366eb14be0fcbefc566382041f/contrib/gitian-descriptors/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/README.md?ref=8c31f037b1530c366eb14be0fcbefc566382041f",
        "patch": "@@ -25,18 +25,8 @@ Once you've got the right hardware and software:\n     mkdir gitian-builder/inputs\n     cd gitian-builder/inputs\n \n-    # Inputs for Linux and Win32:\n-    wget -O miniupnpc-1.6.tar.gz 'http://miniupnp.tuxfamily.org/files/download.php?file=miniupnpc-1.6.tar.gz'\n-    wget 'http://fukuchi.org/works/qrencode/qrencode-3.2.0.tar.bz2'\n-    \n-\t# Inputs for Win32: (Linux has packages for these)\n-    wget 'https://downloads.sourceforge.net/project/boost/boost/1.50.0/boost_1_50_0.tar.bz2'\n-    wget 'http://www.openssl.org/source/openssl-1.0.1c.tar.gz'\n-    wget 'http://download.oracle.com/berkeley-db/db-4.8.30.NC.tar.gz'\n-    wget 'https://downloads.sourceforge.net/project/libpng/zlib/1.2.6/zlib-1.2.6.tar.gz'\n-    wget 'https://downloads.sourceforge.net/project/libpng/libpng15/older-releases/1.5.9/libpng-1.5.9.tar.gz'\n-    wget 'https://download.qt-project.org/archive/qt/4.8/4.8.3/qt-everywhere-opensource-src-4.8.3.tar.gz'\n-    wget 'http://protobuf.googlecode.com/files/protobuf-2.5.0.tar.bz2'\n+    # Get inputs (see doc/release-process.md for exact inputs needed and where to get them)\n+    ...\n     cd ../..\n \n     cd gitian-builder\n@@ -87,4 +77,4 @@ Here's a description of Gavin's setup on OSX 10.6:\n \n \texport USE_LXC=1\n \tgit clone git://github.com/bitcoin/bitcoin.git\n-\t... etc\n\\ No newline at end of file\n+\t... etc"
      },
      {
        "sha": "12b9dfc70cc0afe6fe737997c42960c9bb8454d0",
        "filename": "contrib/gitian-descriptors/deps-win32.yml",
        "status": "modified",
        "additions": 25,
        "deletions": 24,
        "changes": 49,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8c31f037b1530c366eb14be0fcbefc566382041f/contrib/gitian-descriptors/deps-win32.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8c31f037b1530c366eb14be0fcbefc566382041f/contrib/gitian-descriptors/deps-win32.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/deps-win32.yml?ref=8c31f037b1530c366eb14be0fcbefc566382041f",
        "patch": "@@ -14,12 +14,12 @@ packages:\n reference_datetime: \"2011-01-30 00:00:00\"\n remotes: []\n files:\n-- \"openssl-1.0.1c.tar.gz\"\n+- \"openssl-1.0.1e.tar.gz\"\n - \"db-4.8.30.NC.tar.gz\"\n-- \"miniupnpc-1.6.tar.gz\"\n-- \"zlib-1.2.6.tar.gz\"\n-- \"libpng-1.5.9.tar.gz\"\n-- \"qrencode-3.2.0.tar.bz2\"\n+- \"miniupnpc-1.8.tar.gz\"\n+- \"zlib-1.2.8.tar.gz\"\n+- \"libpng-1.6.8.tar.gz\"\n+- \"qrencode-3.4.3.tar.bz2\"\n script: |\n   #\n   export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1\n@@ -28,17 +28,17 @@ script: |\n   export INSTALLPREFIX=$OUTDIR/staging/deps\n   export HOST=i686-w64-mingw32\n   # Input Integrity Check\n-  echo \"2a9eb3cd4e8b114eb9179c0d3884d61658e7d8e8bf4984798a5f5bd48e325ebe  openssl-1.0.1c.tar.gz\"  | sha256sum -c\n+  echo \"f74f15e8c8ff11aa3d5bb5f276d202ec18d7246e95f961db76054199c69c1ae3  openssl-1.0.1e.tar.gz\"  | sha256sum -c\n   echo \"12edc0df75bf9abd7f82f821795bcee50f42cb2e5f76a6a281b85732798364ef  db-4.8.30.NC.tar.gz\"    | sha256sum -c\n-  echo \"bbd6b756e6af44b5a5b0f9b93eada3fb8922ed1d6451b7d6f184d0ae0c813994  miniupnpc-1.6.tar.gz\"   | sha256sum -c\n-  echo \"21235e08552e6feba09ea5e8d750805b3391c62fb81c71a235c0044dc7a8a61b  zlib-1.2.6.tar.gz\"      | sha256sum -c\n-  echo \"b75dae26151f9b031062c8d2f577a094b08da0ae44fe8c11175d0b9ff434cc02  libpng-1.5.9.tar.gz\"    | sha256sum -c\n-  echo \"03c4bc7cd9a75747c3815d509bbe061907d615764f2357923f0db948c567068f  qrencode-3.2.0.tar.bz2\" | sha256sum -c\n+  echo \"bc5f73c7b0056252c1888a80e6075787a1e1e9112b808f863a245483ff79859c  miniupnpc-1.8.tar.gz\"   | sha256sum -c\n+  echo \"36658cb768a54c1d4dec43c3116c27ed893e88b02ecfcb44f2166f9c0b7f2a0d  zlib-1.2.8.tar.gz\"      | sha256sum -c\n+  echo \"32c7acf1608b9c8b71b743b9780adb7a7b347563dbfb4a5263761056da44cc96  libpng-1.6.8.tar.gz\"    | sha256sum -c\n+  echo \"dfd71487513c871bad485806bfd1fdb304dedc84d2b01a8fb8e0940b50597a98  qrencode-3.4.3.tar.bz2\" | sha256sum -c\n \n   mkdir -p $INSTALLPREFIX\n \n-  tar xzf openssl-1.0.1c.tar.gz\n-  cd openssl-1.0.1c\n+  tar xzf openssl-1.0.1e.tar.gz\n+  cd openssl-1.0.1e\n   ./Configure --cross-compile-prefix=$HOST- mingw --openssldir=$INSTALLPREFIX\n   make\n   make install_sw\n@@ -51,11 +51,11 @@ script: |\n   make install_lib install_include\n   cd ../..\n   #\n-  tar xzf miniupnpc-1.6.tar.gz\n-  cd miniupnpc-1.6\n+  tar xzf miniupnpc-1.8.tar.gz\n+  cd miniupnpc-1.8\n   echo \"\n-  --- miniupnpc-1.6/Makefile.mingw.orig   2013-09-29 18:52:51.014087958 -1000\n-  +++ miniupnpc-1.6/Makefile.mingw        2013-09-29 19:09:29.663318691 -1000\n+  --- miniupnpc-1.8/Makefile.mingw.orig   2013-09-29 18:52:51.014087958 -1000\n+  +++ miniupnpc-1.8/Makefile.mingw        2013-09-29 19:09:29.663318691 -1000\n   @@ -67,8 +67,8 @@\n    \n    wingenminiupnpcstrings.o:\twingenminiupnpcstrings.c\n@@ -75,26 +75,27 @@ script: |\n   install libminiupnpc.a  $INSTALLPREFIX/lib\n   cd ..\n   #\n-  tar xzf zlib-1.2.6.tar.gz\n-  cd zlib-1.2.6\n+  tar xzf zlib-1.2.8.tar.gz\n+  cd zlib-1.2.8\n   CROSS_PREFIX=$HOST- ./configure --prefix=$INSTALLPREFIX --static\n   make\n   make install\n   cd ..\n   #\n-  tar xzf libpng-1.5.9.tar.gz\n-  cd libpng-1.5.9\n-  CFLAGS=\"-I$INSTALLPREFIX/include\" LDFLAGS=\"-L$INSTALLPREFIX/lib\" ./configure --disable-shared --prefix=$INSTALLPREFIX --host=$HOST\n+  tar xzf libpng-1.6.8.tar.gz\n+  cd libpng-1.6.8\n+  OPT=\"-O2\"\n+  CPPFLAGS=\"${OPT} -I$INSTALLPREFIX/include\" CFLAGS=\"${OPT} -I$INSTALLPREFIX/include\" LDFLAGS=\"${OPT} -L$INSTALLPREFIX/lib\" ./configure --disable-shared --prefix=$INSTALLPREFIX --host=$HOST\n   make $MAKEOPTS\n   make install\n   cd ..\n   #\n-  tar xjf qrencode-3.2.0.tar.bz2\n-  cd qrencode-3.2.0\n+  tar xjf qrencode-3.4.3.tar.bz2\n+  cd qrencode-3.4.3\n   png_CFLAGS=\"-I$INSTALLPREFIX/include\" png_LIBS=\"-L$INSTALLPREFIX/lib -lpng\" ./configure --prefix=$INSTALLPREFIX --host=$HOST\n   make\n   make install\n   cd ..\n   #\n   cd $INSTALLPREFIX\n-  zip -r $OUTDIR/bitcoin-deps-win32-gitian-r9.zip include lib\n+  zip -r $OUTDIR/bitcoin-deps-win32-gitian-r10.zip include lib"
      },
      {
        "sha": "794fa27f1fbc4d84835743ad386aab70a8feef76",
        "filename": "contrib/gitian-descriptors/gitian-win32.yml",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8c31f037b1530c366eb14be0fcbefc566382041f/contrib/gitian-descriptors/gitian-win32.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8c31f037b1530c366eb14be0fcbefc566382041f/contrib/gitian-descriptors/gitian-win32.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-win32.yml?ref=8c31f037b1530c366eb14be0fcbefc566382041f",
        "patch": "@@ -22,9 +22,9 @@ remotes:\n - \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n   \"dir\": \"bitcoin\"\n files:\n-- \"qt-win32-4.8.3-gitian-r4.zip\"\n+- \"qt-win32-5.2.0-gitian-r1.zip\"\n - \"boost-win32-1.55.0-gitian-r6.zip\"\n-- \"bitcoin-deps-win32-gitian-r9.zip\"\n+- \"bitcoin-deps-win32-gitian-r10.zip\"\n - \"protobuf-win32-2.5.0-gitian-r3.zip\"\n script: |\n   #\n@@ -34,9 +34,9 @@ script: |\n   #\n   mkdir -p $STAGING\n   cd $STAGING\n-  unzip ../build/qt-win32-4.8.3-gitian-r4.zip\n+  unzip ../build/qt-win32-5.2.0-gitian-r1.zip\n   unzip ../build/boost-win32-1.55.0-gitian-r6.zip\n-  unzip ../build/bitcoin-deps-win32-gitian-r9.zip\n+  unzip ../build/bitcoin-deps-win32-gitian-r10.zip\n   unzip ../build/protobuf-win32-2.5.0-gitian-r3.zip\n   cd $HOME/build/\n   #"
      },
      {
        "sha": "8bc53bbf2502d6a3a0c10b22bf55164bac2747cc",
        "filename": "contrib/gitian-descriptors/qt-win32.yml",
        "status": "modified",
        "additions": 15,
        "deletions": 20,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8c31f037b1530c366eb14be0fcbefc566382041f/contrib/gitian-descriptors/qt-win32.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8c31f037b1530c366eb14be0fcbefc566382041f/contrib/gitian-descriptors/qt-win32.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/qt-win32.yml?ref=8c31f037b1530c366eb14be0fcbefc566382041f",
        "patch": "@@ -10,56 +10,51 @@ packages:\n - \"zip\"\n - \"unzip\"\n - \"faketime\"\n-- \"unzip\"\n+- \"libz-dev\"\n reference_datetime: \"2011-01-30 00:00:00\"\n remotes: []\n files:\n-- \"qt-everywhere-opensource-src-4.8.3.tar.gz\"\n-- \"bitcoin-deps-win32-gitian-r9.zip\"\n+- \"qt-everywhere-opensource-src-5.2.0.tar.gz\"\n+- \"bitcoin-deps-win32-gitian-r10.zip\"\n script: |\n   #\n   HOST=i686-w64-mingw32\n   INSTDIR=\"$HOME/qt/\"\n   # Integrity Check\n-  echo \"f1f72974f924861be04019f49f07cd43ab3c95056db2ba8f34b283487cccc728  qt-everywhere-opensource-src-4.8.3.tar.gz\" | sha256sum -c\n+  echo \"395ec72277c5786c65b8163ef5817fd03d0a1f524a6d47f53624baf8056f1081  qt-everywhere-opensource-src-5.2.0.tar.gz\" | sha256sum -c\n \n   mkdir $INSTDIR\n   mkdir -p $INSTDIR/host/bin\n   #\n   # Need mingw-compiled openssl from bitcoin-deps:\n-  unzip bitcoin-deps-win32-gitian-r9.zip\n+  unzip bitcoin-deps-win32-gitian-r10.zip\n   DEPSDIR=`pwd`\n   #\n-  tar xzf qt-everywhere-opensource-src-4.8.3.tar.gz\n-  cd qt-everywhere-opensource-src-4.8.3\n+  tar xzf qt-everywhere-opensource-src-5.2.0.tar.gz\n+  cd qt-everywhere-opensource-src-5.2.0\n+  SPECNAME=\"win32-g++\"\n+  SPECFILE=\"qtbase/mkspecs/${SPECNAME}/qmake.conf\"\n   sed 's/$TODAY/2011-01-30/' -i configure\n-  sed \"s/i686-pc-mingw32-/$HOST-/\" -i mkspecs/unsupported/win32-g++-cross/qmake.conf\n-  sed --posix \"s|QMAKE_CFLAGS\\t\\t= -pipe|QMAKE_CFLAGS\\t\\t= -pipe -isystem /usr/$HOST/include/ -frandom-seed=qtbuild|\" -i mkspecs/unsupported/win32-g++-cross/qmake.conf\n-  sed 's/QMAKE_CXXFLAGS_EXCEPTIONS_ON = -fexceptions -mthreads/QMAKE_CXXFLAGS_EXCEPTIONS_ON = -fexceptions/' -i mkspecs/unsupported/win32-g++-cross/qmake.conf\n-  sed 's/QMAKE_LFLAGS_EXCEPTIONS_ON = -mthreads/QMAKE_LFLAGS_EXCEPTIONS_ON = -lmingwthrd/' -i mkspecs/unsupported/win32-g++-cross/qmake.conf\n-  sed --posix \"s/QMAKE_MOC\\t\\t= $HOST-moc/QMAKE_MOC\\t\\t= moc/\" -i mkspecs/unsupported/win32-g++-cross/qmake.conf\n-  sed --posix \"s/QMAKE_RCC\\t\\t= $HOST-rcc/QMAKE_RCC\\t\\t= rcc/\" -i mkspecs/unsupported/win32-g++-cross/qmake.conf\n-  sed --posix \"s/QMAKE_UIC\\t\\t= $HOST-uic/QMAKE_UIC\\t\\t= uic/\" -i mkspecs/unsupported/win32-g++-cross/qmake.conf\n+  sed --posix \"s|QMAKE_CFLAGS            = -pipe -fno-keep-inline-dllexport|QMAKE_CFLAGS\\t\\t= -pipe -fno-keep-inline-dllexport -isystem /usr/$HOST/include/ -frandom-seed=qtbuild -I$DEPSDIR/include|\" -i ${SPECFILE}\n+  sed --posix \"s|QMAKE_LFLAGS            =|QMAKE_LFLAGS\\t\\t= -L$DEPSDIR/lib|\" -i ${SPECFILE}\n   # ar adds timestamps to every object file included in the static library\n   # providing -D as ar argument is supposed to solve it, but doesn't work as qmake strips off the arguments and adds -M to pass a script...\n   # which somehow cannot be combined with other flags.\n   # use faketime only for ar, as it confuses make/qmake into hanging sometimes\n-  sed --posix \"s|QMAKE_LIB\\t\\t= $HOST-ar -ru|QMAKE_LIB\\t\\t= $HOME/ar -Dr|\" -i mkspecs/unsupported/win32-g++-cross/qmake.conf\n+  sed --posix \"s|QMAKE_LIB               = \\\\\\$\\\\\\${CROSS_COMPILE}ar -ru|QMAKE_LIB\\t\\t= $HOME/ar -Dr|\" -i ${SPECFILE}\n   echo '#!/bin/bash' > $HOME/ar\n   echo 'export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1' >> $HOME/ar\n   echo \"$HOST-ar \\\"\\$@\\\"\" >> $HOME/ar\n   chmod +x $HOME/ar\n   #export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1\n   export FAKETIME=$REFERENCE_DATETIME\n   export TZ=UTC\n+  #\n   # Compile static libraries, and use statically linked openssl (-openssl-linked):\n-  OPENSSL_LIBS=\"-L$DEPSDIR/lib -lssl -lcrypto -lgdi32\" ./configure -prefix $INSTDIR -bindir $INSTDIR/host/bin -I $DEPSDIR/include  -confirm-license -release -opensource -static -no-qt3support -xplatform unsupported/win32-g++-cross -no-multimedia -no-audio-backend -no-phonon -no-phonon-backend -no-declarative -no-script -no-scripttools -no-javascript-jit -no-webkit -no-svg -no-xmlpatterns -no-sql-sqlite -no-nis -no-cups -no-iconv -no-dbus -no-gif -no-libtiff -no-opengl -nomake examples -nomake demos -nomake docs -no-feature-style-plastique -no-feature-style-cleanlooks -no-feature-style-motif -no-feature-style-cde -no-feature-style-windowsce -no-feature-style-windowsmobile -no-feature-style-s60 -openssl-linked\n-  find . -name *.prl | xargs -l sed 's|/\\.||' -i\n-  find . -name *.prl | xargs -l sed 's|/$||' -i\n+  OPENSSL_LIBS=\"-L$DEPSDIR/lib -lssl -lcrypto -lgdi32\" ./configure -prefix $INSTDIR -bindir $INSTDIR/host/bin -confirm-license -release -opensource -static -xplatform $SPECNAME -device-option CROSS_COMPILE=\"$HOST-\" -no-audio-backend -no-javascript-jit -no-sql-sqlite -no-sql-odbc -no-nis -no-cups -no-iconv -no-dbus -no-gif -no-opengl -no-compile-examples -no-feature-style-windowsce -no-feature-style-windowsmobile -no-qml-debug -openssl-linked -skip qtsvg -skip qtwebkit -skip qtwebkit-examples -skip qtserialport -skip qtdeclarative -skip qtmultimedia -skip qtimageformats -skip qtlocation -skip qtsensors -skip qtquick1 -skip qtquickcontrols -skip qtactiveqt -skip qtconnectivity -skip qtwinextras -skip qtxmlpatterns -skip qtscript -skip qtdoc -system-libpng -system-zlib\n   make $MAKEOPTS install\n   cd $INSTDIR\n-  find . -name *.prl | xargs -l sed 's|/$||' -i\n \n   # as zip stores file timestamps, use faketime to intercept stat calls to set dates for all files to reference date\n   export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1\n-  zip -r $OUTDIR/qt-win32-4.8.3-gitian-r4.zip *\n+  zip -r $OUTDIR/qt-win32-5.2.0-gitian-r1.zip *"
      },
      {
        "sha": "2cc54edfebebf018160f2559da4b1052213c4f1f",
        "filename": "doc/release-process.md",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8c31f037b1530c366eb14be0fcbefc566382041f/doc/release-process.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8c31f037b1530c366eb14be0fcbefc566382041f/doc/release-process.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-process.md?ref=8c31f037b1530c366eb14be0fcbefc566382041f",
        "patch": "@@ -39,16 +39,16 @@ Release Process\n  Fetch and build inputs: (first time, or when dependency versions change)\n \n \tmkdir -p inputs; cd inputs/\n-\twget 'http://miniupnp.free.fr/files/download.php?file=miniupnpc-1.6.tar.gz' -O miniupnpc-1.6.tar.gz\n-\twget 'https://www.openssl.org/source/openssl-1.0.1c.tar.gz'\n+\twget 'http://miniupnp.free.fr/files/download.php?file=miniupnpc-1.8.tar.gz' -O miniupnpc-1.8.tar.gz\n+\twget 'https://www.openssl.org/source/openssl-1.0.1e.tar.gz'\n \twget 'http://download.oracle.com/berkeley-db/db-4.8.30.NC.tar.gz'\n-\twget 'ftp://ftp.simplesystems.org/pub/libpng/png/src/history/zlib/zlib-1.2.6.tar.gz'\n-\twget 'ftp://ftp.simplesystems.org/pub/libpng/png/src/history/libpng15/libpng-1.5.9.tar.gz'\n-\twget 'https://fukuchi.org/works/qrencode/qrencode-3.2.0.tar.bz2'\n-\twget 'https://downloads.sourceforge.net/project/boost/boost/1.54.0/boost_1_54_0.tar.bz2'\n+\twget 'http://zlib.net/zlib-1.2.8.tar.gz'\n+\twget 'ftp://ftp.simplesystems.org/pub/png/src/libpng16/libpng-1.6.8.tar.gz'\n+\twget 'https://fukuchi.org/works/qrencode/qrencode-3.4.3.tar.bz2'\n+\twget 'https://downloads.sourceforge.net/project/boost/boost/1.55.0/boost_1_55_0.tar.bz2'\n \twget 'https://svn.boost.org/trac/boost/raw-attachment/ticket/7262/boost-mingw.patch' -O \\ \n \t     boost-mingw-gas-cross-compile-2013-03-03.patch\n-\twget 'https://download.qt-project.org/archive/qt/4.8/4.8.3/qt-everywhere-opensource-src-4.8.3.tar.gz'\n+\twget 'https://download.qt-project.org/official_releases/qt/5.2/5.2.0/single/qt-everywhere-opensource-src-5.2.0.tar.gz'\n \twget 'https://protobuf.googlecode.com/files/protobuf-2.5.0.tar.bz2'\n \tcd ..\n \t./bin/gbuild ../bitcoin/contrib/gitian-descriptors/boost-win32.yml"
      },
      {
        "sha": "758aea3499e983be9eb168c575d6c66fdd35d7ee",
        "filename": "src/m4/bitcoin_qt.m4",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8c31f037b1530c366eb14be0fcbefc566382041f/src/m4/bitcoin_qt.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8c31f037b1530c366eb14be0fcbefc566382041f/src/m4/bitcoin_qt.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/m4/bitcoin_qt.m4?ref=8c31f037b1530c366eb14be0fcbefc566382041f",
        "patch": "@@ -317,6 +317,7 @@ AC_DEFUN([_BITCOIN_QT_FIND_LIBS_WITHOUT_PKGCONFIG],[\n   ])\n \n   BITCOIN_QT_CHECK(AC_CHECK_LIB([z] ,[main],,BITCOIN_QT_FAIL(zlib not found)))\n+  BITCOIN_QT_CHECK(AC_CHECK_LIB([png] ,[main],,BITCOIN_QT_FAIL(png not found)))\n   BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Core]   ,[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXCore not found)))\n   BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Gui]    ,[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXGui not found)))\n   BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Network],[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXNetwork not found)))"
      }
    ]
  },
  {
    "sha": "4b4b578cb32737d2face45438069db95bc316ebb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0YjRiNTc4Y2IzMjczN2QyZmFjZTQ1NDM4MDY5ZGI5NWJjMzE2ZWJi",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-15T13:29:09Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-15T13:29:19Z"
      },
      "message": "Merge pull request #3536\n\n0425715 gitian: add explicit dependency build for linux (Wladimir J. van der Laan)\n279af1a build: use Ubuntu 12.04 for linux gitian build (Wladimir J. van der Laan)",
      "tree": {
        "sha": "422cd303b326bca42da0c3ebb124a46b922a2090",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/422cd303b326bca42da0c3ebb124a46b922a2090"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4b4b578cb32737d2face45438069db95bc316ebb",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJS1o0vAAoJEHSBCwEjRsmmoioIAMif/QU6raXtgYdSs2csZXS1\nkBXv3Ln6jWKFLkL0fmVvh1aW2GlgVeCo7FYR0f5sRaNfn/lY0tMVWNUHFQW0me0h\njOdeAeCgaL3N1OjLppmhoqyu/NVoUaPonCJ4CpV9PUQTyscBVGwLTskcQt+FCkLI\n6axRrxqGLqRIZ84smwk4mEZoFvfQbGRzQWLwbsqoGRs8MUuE73M6gjuzVoDg9sYr\nT36UZsbCqdCl6lS3w6nJ5Xx8Qi3z8MoAoz7juoE5VtopKxLXz7taPPD+3kOE92Cj\nVq364QSbXb9KPg3herXCEIrT+H8/qgQmJYhDXLrQkByWOkPIWtbzSrKLVlwGmW4=\n=2+Rt\n-----END PGP SIGNATURE-----",
        "payload": "tree 422cd303b326bca42da0c3ebb124a46b922a2090\nparent 8c31f037b1530c366eb14be0fcbefc566382041f\nparent 04257151b14da2a7dbfce8fd6f8d5d5835169ea1\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1389792549 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1389792559 +0100\n\nMerge pull request #3536\n\n0425715 gitian: add explicit dependency build for linux (Wladimir J. van der Laan)\n279af1a build: use Ubuntu 12.04 for linux gitian build (Wladimir J. van der Laan)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4b4b578cb32737d2face45438069db95bc316ebb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4b4b578cb32737d2face45438069db95bc316ebb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4b4b578cb32737d2face45438069db95bc316ebb/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8c31f037b1530c366eb14be0fcbefc566382041f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8c31f037b1530c366eb14be0fcbefc566382041f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8c31f037b1530c366eb14be0fcbefc566382041f"
      },
      {
        "sha": "04257151b14da2a7dbfce8fd6f8d5d5835169ea1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/04257151b14da2a7dbfce8fd6f8d5d5835169ea1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/04257151b14da2a7dbfce8fd6f8d5d5835169ea1"
      }
    ],
    "stats": {
      "total": 106,
      "additions": 76,
      "deletions": 30
    },
    "files": [
      {
        "sha": "48f2be2d655f2e839efa92121b31e00cb701dc78",
        "filename": "contrib/gitian-descriptors/deps-linux.yml",
        "status": "added",
        "additions": 62,
        "deletions": 0,
        "changes": 62,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4b4b578cb32737d2face45438069db95bc316ebb/contrib/gitian-descriptors/deps-linux.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4b4b578cb32737d2face45438069db95bc316ebb/contrib/gitian-descriptors/deps-linux.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/deps-linux.yml?ref=4b4b578cb32737d2face45438069db95bc316ebb",
        "patch": "@@ -0,0 +1,62 @@\n+---\n+name: \"bitcoin\"\n+suites:\n+- \"precise\"\n+architectures:\n+- \"i386\"\n+- \"amd64\"\n+packages:\n+- \"unzip\"\n+- \"pkg-config\"\n+- \"libtool\"\n+- \"faketime\"\n+- \"bsdmainutils\"\n+reference_datetime: \"2013-06-01 00:00:00\"\n+remotes: []\n+files:\n+- \"miniupnpc-1.8.tar.gz\"\n+- \"qrencode-3.4.3.tar.bz2\"\n+- \"protobuf-2.5.0.tar.bz2\"\n+- \"db-4.8.30.NC.tar.gz\"\n+script: |\n+  STAGING=\"$HOME/install\"\n+  OPTFLAGS='-O2'\n+  export LIBRARY_PATH=\"$STAGING/lib\"\n+  # Integrity Check\n+  echo \"bc5f73c7b0056252c1888a80e6075787a1e1e9112b808f863a245483ff79859c  miniupnpc-1.8.tar.gz\"   | sha256sum -c\n+  echo \"dfd71487513c871bad485806bfd1fdb304dedc84d2b01a8fb8e0940b50597a98  qrencode-3.4.3.tar.bz2\" | sha256sum -c\n+  echo \"13bfc5ae543cf3aa180ac2485c0bc89495e3ae711fc6fab4f8ffe90dfb4bb677  protobuf-2.5.0.tar.bz2\" | sha256sum -c\n+  echo \"12edc0df75bf9abd7f82f821795bcee50f42cb2e5f76a6a281b85732798364ef  db-4.8.30.NC.tar.gz\"    | sha256sum -c\n+\n+  tar xzfm miniupnpc-1.8.tar.gz\n+  cd miniupnpc-1.8\n+  #   miniupnpc is always built with -fPIC\n+  INSTALLPREFIX=$STAGING make $MAKEOPTS install\n+  rm -f $STAGING/lib/libminiupnpc.so* # no way to skip shared lib build\n+  cd ..\n+  #\n+  tar xjfm qrencode-3.4.3.tar.bz2\n+  cd qrencode-3.4.3\n+  #   need --with-pic to avoid relocation error in 64 bit builds\n+  ./configure --prefix=$STAGING --enable-static --disable-shared -with-pic --without-tools\n+  make $MAKEOPTS install\n+  cd ..\n+  #\n+  tar xjfm protobuf-2.5.0.tar.bz2\n+  cd protobuf-2.5.0\n+  mkdir -p $STAGING/host/bin\n+  #   need --with-pic to avoid relocation error in 64 bit builds\n+  ./configure --prefix=$STAGING --bindir=$STAGING/host/bin --enable-static --disable-shared --with-pic\n+  make $MAKEOPTS install\n+  cd ..\n+  #\n+  tar xzf db-4.8.30.NC.tar.gz\n+  cd db-4.8.30.NC/build_unix\n+  #   need --with-pic to avoid relocation error in 64 bit builds\n+  ../dist/configure --prefix=$STAGING --enable-cxx --disable-shared --with-pic\n+  make $MAKEOPTS library_build\n+  make install_lib install_include\n+  cd ../..\n+  #\n+  cd $STAGING\n+  tar -czf $OUTDIR/bitcoin-deps-linux${GBUILD_BITS}-gitian-r1.tar.gz include lib bin host"
      },
      {
        "sha": "7ba375f5e4a3336fd6a85d1a917c128a9e490a5e",
        "filename": "contrib/gitian-descriptors/gitian.yml",
        "status": "modified",
        "additions": 12,
        "deletions": 30,
        "changes": 42,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4b4b578cb32737d2face45438069db95bc316ebb/contrib/gitian-descriptors/gitian.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4b4b578cb32737d2face45438069db95bc316ebb/contrib/gitian-descriptors/gitian.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian.yml?ref=4b4b578cb32737d2face45438069db95bc316ebb",
        "patch": "@@ -1,12 +1,11 @@\n ---\n name: \"bitcoin\"\n suites:\n-- \"lucid\"\n+- \"precise\"\n architectures:\n - \"i386\"\n - \"amd64\"\n packages: \n-- \"libdb4.8++-dev\"\n - \"qt4-qmake\"\n - \"libqt4-dev\"\n - \"libboost-system-dev\"\n@@ -18,7 +17,6 @@ packages:\n - \"git-core\"\n - \"unzip\"\n - \"pkg-config\"\n-- \"libpng12-dev\"\n - \"autoconf2.13\"\n - \"libtool\"\n - \"automake\"\n@@ -29,45 +27,29 @@ remotes:\n - \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n   \"dir\": \"bitcoin\"\n files:\n-- \"miniupnpc-1.6.tar.gz\"\n-- \"qrencode-3.2.0.tar.bz2\"\n-- \"protobuf-2.5.0.tar.bz2\"\n+- \"bitcoin-deps-linux32-gitian-r1.tar.gz\"\n+- \"bitcoin-deps-linux64-gitian-r1.tar.gz\"\n script: |\n   STAGING=\"$HOME/install\"\n+  OPTFLAGS='-O2'\n+  BINDIR=\"${OUTDIR}/bin/${GBUILD_BITS}\" # 32/64 bit build specific output directory\n   export LIBRARY_PATH=\"$STAGING/lib\"\n-  # Integrity Check\n-  echo \"bbd6b756e6af44b5a5b0f9b93eada3fb8922ed1d6451b7d6f184d0ae0c813994  miniupnpc-1.6.tar.gz\"   | sha256sum -c\n-  echo \"03c4bc7cd9a75747c3815d509bbe061907d615764f2357923f0db948c567068f  qrencode-3.2.0.tar.bz2\" | sha256sum -c\n-  echo \"13bfc5ae543cf3aa180ac2485c0bc89495e3ae711fc6fab4f8ffe90dfb4bb677  protobuf-2.5.0.tar.bz2\" | sha256sum -c\n-\n-  tar xzfm miniupnpc-1.6.tar.gz\n-  cd miniupnpc-1.6\n-  INSTALLPREFIX=$STAGING make $MAKEOPTS install\n-  cd ..\n+  mkdir -p ${BINDIR}\n   #\n-  tar xjfm qrencode-3.2.0.tar.bz2\n-  cd qrencode-3.2.0\n-  sed -i 's/@LIBPTHREAD@//' libqrencode.pc.in\n-  ./configure --prefix=$STAGING --enable-static --disable-shared\n-  make $MAKEOPTS install\n-  cd ..\n-  #\n-  tar xjfm protobuf-2.5.0.tar.bz2\n-  cd protobuf-2.5.0\n-  mkdir -p $STAGING/host/bin\n-  ./configure --prefix=$STAGING --bindir=$STAGING/host/bin --enable-static --disable-shared\n-  make $MAKEOPTS install\n-  cd ..\n+  mkdir -p $STAGING\n+  cd $STAGING\n+  tar xzfm ../build/bitcoin-deps-linux${GBUILD_BITS}-gitian-r1.tar.gz\n+  cd ../build\n   #\n   cd bitcoin\n   export TAR_OPTIONS=--mtime=`echo $REFERENCE_DATETIME | awk '{ print $1 }'`\n   ./autogen.sh\n-  ./configure --prefix=$STAGING --bindir=$OUTDIR --with-protoc-bindir=$STAGING/host/bin --disable-maintainer-mode --disable-dependency-tracking PKG_CONFIG_PATH=\"$STAGING/lib/pkgconfig\" CPPFLAGS=\"-I$STAGING/include\" LDFLAGS=\"-L$STAGING/lib\" CXXFLAGS=\"-frandom-seed=bitcoin\"\n+  ./configure --prefix=$STAGING --bindir=$BINDIR --with-protoc-bindir=$STAGING/host/bin --disable-maintainer-mode --disable-dependency-tracking PKG_CONFIG_PATH=\"$STAGING/lib/pkgconfig\" CPPFLAGS=\"-I$STAGING/include ${OPTFLAGS}\" LDFLAGS=\"-L$STAGING/lib ${OPTFLAGS}\" CXXFLAGS=\"-frandom-seed=bitcoin ${OPTFLAGS}\"\n   make dist\n   mkdir -p distsrc\n   cd distsrc\n   tar --strip-components=1 -xf ../bitcoin-*.tar.*\n-  ./configure --prefix=$STAGING --bindir=$OUTDIR --with-protoc-bindir=$STAGING/host/bin --disable-maintainer-mode --disable-dependency-tracking PKG_CONFIG_PATH=\"$STAGING/lib/pkgconfig\" CPPFLAGS=\"-I$STAGING/include\" LDFLAGS=\"-L$STAGING/lib\" CXXFLAGS=\"-frandom-seed=bitcoin\"\n+  ./configure --prefix=$STAGING --bindir=$BINDIR --with-protoc-bindir=$STAGING/host/bin --disable-maintainer-mode --disable-dependency-tracking PKG_CONFIG_PATH=\"$STAGING/lib/pkgconfig\" CPPFLAGS=\"-I$STAGING/include ${OPTFLAGS}\" LDFLAGS=\"-L$STAGING/lib ${OPTFLAGS}\" CXXFLAGS=\"-frandom-seed=bitcoin ${OPTFLAGS}\"\n   make $MAKEOPTS\n   make $MAKEOPTS install-strip\n   mkdir -p $OUTDIR/src"
      },
      {
        "sha": "82920afe7ba1e865101936b59fe00516469a8826",
        "filename": "doc/release-process.md",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4b4b578cb32737d2face45438069db95bc316ebb/doc/release-process.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4b4b578cb32737d2face45438069db95bc316ebb/doc/release-process.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-process.md?ref=4b4b578cb32737d2face45438069db95bc316ebb",
        "patch": "@@ -51,6 +51,8 @@ Release Process\n \twget 'https://download.qt-project.org/official_releases/qt/5.2/5.2.0/single/qt-everywhere-opensource-src-5.2.0.tar.gz'\n \twget 'https://protobuf.googlecode.com/files/protobuf-2.5.0.tar.bz2'\n \tcd ..\n+\t./bin/gbuild ../bitcoin/contrib/gitian-descriptors/deps-linux.yml\n+\tmv build/out/*.tar.gz inputs/\n \t./bin/gbuild ../bitcoin/contrib/gitian-descriptors/boost-win32.yml\n \tmv build/out/boost-win32-*.zip inputs/\n \t./bin/gbuild ../bitcoin/contrib/gitian-descriptors/deps-win32.yml"
      }
    ]
  },
  {
    "sha": "f4e72bf8d20f590738a1307fff0787bb2aa870c8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmNGU3MmJmOGQyMGY1OTA3MzhhMTMwN2ZmZjA3ODdiYjJhYTg3MGM4",
    "commit": {
      "author": {
        "name": "Micha",
        "email": "michagogo@server.fake",
        "date": "2014-01-15T20:51:37Z"
      },
      "committer": {
        "name": "Micha",
        "email": "michagogo@server.fake",
        "date": "2014-01-15T20:56:17Z"
      },
      "message": "Make gitian builds consistent across platforms\n\nChange Linux deps to use a zip archive rather than a gzipped tarball to\nmatch win32\nRename Linux descriptor to gitian-linux.yml to match win32",
      "tree": {
        "sha": "6c182a7c803c58db227887e9a8bd3d0386e4d9f5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6c182a7c803c58db227887e9a8bd3d0386e4d9f5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f4e72bf8d20f590738a1307fff0787bb2aa870c8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unverified_email",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.7 (MingW32)\n\niQEVAwUAUtb194LFwAlijs8MAQLTTQf/bWPZEJwVZeDPM+yG8cqo6jR0LxaFIw0c\nIwrtMg+Z6UMMpFFSRVmRNgnaVyck/6TpyoqOuQHAdp6ezoXd5GDtvR+PxU/tTWuf\nJZibNIKtqjnyNVN+qiiLYuR+Z5FzNY69ksYv7PHOu24xMjAxeq9L0ywTHk1Ic8vZ\nmriqGYxifiN4H2sVyOBKRypqeKFF3drh2dRDGPcddCjNHGcS4NLO+YFnx9Orvr31\nHx+KZfzglXcmM7IWGTUuJ/+KnciooX/gbGUhM0xV2ODgdTVFJR4KGgz7VF9gtSNp\nGWsrEzaoj/YlbVjoiiwy4wbP7G+OE1H6pri4AAXwJiarYJ9bcWYi4A==\n=QMr+\n-----END PGP SIGNATURE-----",
        "payload": "tree 6c182a7c803c58db227887e9a8bd3d0386e4d9f5\nparent 4b4b578cb32737d2face45438069db95bc316ebb\nauthor Micha <michagogo@server.fake> 1389819097 +0200\ncommitter Micha <michagogo@server.fake> 1389819377 +0200\n\nMake gitian builds consistent across platforms\n\nChange Linux deps to use a zip archive rather than a gzipped tarball to\nmatch win32\nRename Linux descriptor to gitian-linux.yml to match win32\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f4e72bf8d20f590738a1307fff0787bb2aa870c8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f4e72bf8d20f590738a1307fff0787bb2aa870c8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f4e72bf8d20f590738a1307fff0787bb2aa870c8/comments",
    "author": {
      "login": "Michagogo",
      "id": 2559390,
      "node_id": "MDQ6VXNlcjI1NTkzOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2559390?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Michagogo",
      "html_url": "https://github.com/Michagogo",
      "followers_url": "https://api.github.com/users/Michagogo/followers",
      "following_url": "https://api.github.com/users/Michagogo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Michagogo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Michagogo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Michagogo/subscriptions",
      "organizations_url": "https://api.github.com/users/Michagogo/orgs",
      "repos_url": "https://api.github.com/users/Michagogo/repos",
      "events_url": "https://api.github.com/users/Michagogo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Michagogo/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Michagogo",
      "id": 2559390,
      "node_id": "MDQ6VXNlcjI1NTkzOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2559390?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Michagogo",
      "html_url": "https://github.com/Michagogo",
      "followers_url": "https://api.github.com/users/Michagogo/followers",
      "following_url": "https://api.github.com/users/Michagogo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Michagogo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Michagogo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Michagogo/subscriptions",
      "organizations_url": "https://api.github.com/users/Michagogo/orgs",
      "repos_url": "https://api.github.com/users/Michagogo/repos",
      "events_url": "https://api.github.com/users/Michagogo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Michagogo/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4b4b578cb32737d2face45438069db95bc316ebb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4b4b578cb32737d2face45438069db95bc316ebb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4b4b578cb32737d2face45438069db95bc316ebb"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 9,
      "deletions": 8
    },
    "files": [
      {
        "sha": "3a90b4d038ef56b7dd8886a79530dd0c595b6aea",
        "filename": "contrib/gitian-descriptors/README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f4e72bf8d20f590738a1307fff0787bb2aa870c8/contrib/gitian-descriptors/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f4e72bf8d20f590738a1307fff0787bb2aa870c8/contrib/gitian-descriptors/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/README.md?ref=f4e72bf8d20f590738a1307fff0787bb2aa870c8",
        "patch": "@@ -39,7 +39,7 @@ Once you've got the right hardware and software:\n     git pull\n     cd ../gitian-builder\n     git pull\n-    ./bin/gbuild --commit bitcoin=HEAD ../bitcoin/contrib/gitian-descriptors/gitian.yml\n+    ./bin/gbuild --commit bitcoin=HEAD ../bitcoin/contrib/gitian-descriptors/gitian-linux.yml\n \n     # Build Win32 dependencies: (only needs to be done once, or when dependency versions change)\n     ./bin/gbuild --commit bitcoin=HEAD ../bitcoin/contrib/gitian-descriptors/boost-win32.yml"
      },
      {
        "sha": "4ebf5c53a375a0ecc1cbc2b14de1d5d85f111435",
        "filename": "contrib/gitian-descriptors/deps-linux.yml",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f4e72bf8d20f590738a1307fff0787bb2aa870c8/contrib/gitian-descriptors/deps-linux.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f4e72bf8d20f590738a1307fff0787bb2aa870c8/contrib/gitian-descriptors/deps-linux.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/deps-linux.yml?ref=f4e72bf8d20f590738a1307fff0787bb2aa870c8",
        "patch": "@@ -7,6 +7,7 @@ architectures:\n - \"amd64\"\n packages:\n - \"unzip\"\n+- \"zip\"\n - \"pkg-config\"\n - \"libtool\"\n - \"faketime\"\n@@ -59,4 +60,4 @@ script: |\n   cd ../..\n   #\n   cd $STAGING\n-  tar -czf $OUTDIR/bitcoin-deps-linux${GBUILD_BITS}-gitian-r1.tar.gz include lib bin host\n+  zip -r $OUTDIR/bitcoin-deps-linux${GBUILD_BITS}-gitian-r1.zip include lib bin host"
      },
      {
        "sha": "b0fe86e25916eeb415631134691bf0feb9e04b39",
        "filename": "contrib/gitian-descriptors/gitian-linux.yml",
        "status": "renamed",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f4e72bf8d20f590738a1307fff0787bb2aa870c8/contrib/gitian-descriptors/gitian-linux.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f4e72bf8d20f590738a1307fff0787bb2aa870c8/contrib/gitian-descriptors/gitian-linux.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-linux.yml?ref=f4e72bf8d20f590738a1307fff0787bb2aa870c8",
        "patch": "@@ -27,8 +27,8 @@ remotes:\n - \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n   \"dir\": \"bitcoin\"\n files:\n-- \"bitcoin-deps-linux32-gitian-r1.tar.gz\"\n-- \"bitcoin-deps-linux64-gitian-r1.tar.gz\"\n+- \"bitcoin-deps-linux32-gitian-r1.zip\"\n+- \"bitcoin-deps-linux64-gitian-r1.zip\"\n script: |\n   STAGING=\"$HOME/install\"\n   OPTFLAGS='-O2'\n@@ -38,7 +38,7 @@ script: |\n   #\n   mkdir -p $STAGING\n   cd $STAGING\n-  tar xzfm ../build/bitcoin-deps-linux${GBUILD_BITS}-gitian-r1.tar.gz\n+  unzip ../build/bitcoin-deps-linux${GBUILD_BITS}-gitian-r1.zip\n   cd ../build\n   #\n   cd bitcoin",
        "previous_filename": "contrib/gitian-descriptors/gitian.yml"
      },
      {
        "sha": "428193681992e5ce3650cd1e962ce44fc31fab1b",
        "filename": "doc/release-process.md",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f4e72bf8d20f590738a1307fff0787bb2aa870c8/doc/release-process.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f4e72bf8d20f590738a1307fff0787bb2aa870c8/doc/release-process.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-process.md?ref=f4e72bf8d20f590738a1307fff0787bb2aa870c8",
        "patch": "@@ -52,7 +52,7 @@ Release Process\n \twget 'https://protobuf.googlecode.com/files/protobuf-2.5.0.tar.bz2'\n \tcd ..\n \t./bin/gbuild ../bitcoin/contrib/gitian-descriptors/deps-linux.yml\n-\tmv build/out/*.tar.gz inputs/\n+\tmv build/out/bitcoin-deps-*.zip inputs/\n \t./bin/gbuild ../bitcoin/contrib/gitian-descriptors/boost-win32.yml\n \tmv build/out/boost-win32-*.zip inputs/\n \t./bin/gbuild ../bitcoin/contrib/gitian-descriptors/deps-win32.yml\n@@ -64,8 +64,8 @@ Release Process\n \n  Build bitcoind and bitcoin-qt on Linux32, Linux64, and Win32:\n   \n-\t./bin/gbuild --commit bitcoin=v${VERSION} ../bitcoin/contrib/gitian-descriptors/gitian.yml\n-\t./bin/gsign --signer $SIGNER --release ${VERSION} --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian.yml\n+\t./bin/gbuild --commit bitcoin=v${VERSION} ../bitcoin/contrib/gitian-descriptors/gitian-linux.yml\n+\t./bin/gsign --signer $SIGNER --release ${VERSION} --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-linux.yml\n \tpushd build/out\n \tzip -r bitcoin-${VERSION}-linux-gitian.zip *\n \tmv bitcoin-${VERSION}-linux-gitian.zip ../../../"
      }
    ]
  },
  {
    "sha": "8d31e614e83f3aeb68742c800800d7689280fdcc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4ZDMxZTYxNGU4M2YzYWViNjg3NDJjODAwODAwZDc2ODkyODBmZGNj",
    "commit": {
      "author": {
        "name": "Scott Willeke",
        "email": "scott@willeke.com",
        "date": "2014-01-16T05:42:21Z"
      },
      "committer": {
        "name": "Scott Willeke",
        "email": "scott@willeke.com",
        "date": "2014-01-16T05:42:21Z"
      },
      "message": "Added automake to the macports depdency list as it was required to complete the autogen.sh step as it required aclocal (which isn't included in recent versions of xcode).",
      "tree": {
        "sha": "82620cc4de492215236b6cab0ec7384d10f00ef1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/82620cc4de492215236b6cab0ec7384d10f00ef1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8d31e614e83f3aeb68742c800800d7689280fdcc",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8d31e614e83f3aeb68742c800800d7689280fdcc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8d31e614e83f3aeb68742c800800d7689280fdcc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8d31e614e83f3aeb68742c800800d7689280fdcc/comments",
    "author": {
      "login": "activescott",
      "id": 213716,
      "node_id": "MDQ6VXNlcjIxMzcxNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/213716?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/activescott",
      "html_url": "https://github.com/activescott",
      "followers_url": "https://api.github.com/users/activescott/followers",
      "following_url": "https://api.github.com/users/activescott/following{/other_user}",
      "gists_url": "https://api.github.com/users/activescott/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/activescott/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/activescott/subscriptions",
      "organizations_url": "https://api.github.com/users/activescott/orgs",
      "repos_url": "https://api.github.com/users/activescott/repos",
      "events_url": "https://api.github.com/users/activescott/events{/privacy}",
      "received_events_url": "https://api.github.com/users/activescott/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "activescott",
      "id": 213716,
      "node_id": "MDQ6VXNlcjIxMzcxNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/213716?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/activescott",
      "html_url": "https://github.com/activescott",
      "followers_url": "https://api.github.com/users/activescott/followers",
      "following_url": "https://api.github.com/users/activescott/following{/other_user}",
      "gists_url": "https://api.github.com/users/activescott/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/activescott/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/activescott/subscriptions",
      "organizations_url": "https://api.github.com/users/activescott/orgs",
      "repos_url": "https://api.github.com/users/activescott/repos",
      "events_url": "https://api.github.com/users/activescott/events{/privacy}",
      "received_events_url": "https://api.github.com/users/activescott/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4b4b578cb32737d2face45438069db95bc316ebb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4b4b578cb32737d2face45438069db95bc316ebb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4b4b578cb32737d2face45438069db95bc316ebb"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "381e8b6f0a20dfe25493111c10d2d250616aff36",
        "filename": "doc/build-osx.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8d31e614e83f3aeb68742c800800d7689280fdcc/doc/build-osx.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8d31e614e83f3aeb68742c800800d7689280fdcc/doc/build-osx.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-osx.md?ref=8d31e614e83f3aeb68742c800800d7689280fdcc",
        "patch": "@@ -45,7 +45,7 @@ Instructions: MacPorts\n \n Installing the dependencies using MacPorts is very straightforward.\n \n-    sudo port install boost db48@+no_java openssl miniupnpc autoconf pkgconfig\n+    sudo port install boost db48@+no_java openssl miniupnpc autoconf pkgconfig automake\n \n ### Building `bitcoind`\n "
      }
    ]
  },
  {
    "sha": "417aad4a38df25deea52881aa1881f0dbd3e51d3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0MTdhYWQ0YTM4ZGYyNWRlZWE1Mjg4MWFhMTg4MWYwZGJkM2U1MWQz",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-16T08:37:52Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-16T08:38:24Z"
      },
      "message": "Merge pull request #3546\n\nf4e72bf Make gitian builds consistent across platforms (Micha)",
      "tree": {
        "sha": "6c182a7c803c58db227887e9a8bd3d0386e4d9f5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6c182a7c803c58db227887e9a8bd3d0386e4d9f5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/417aad4a38df25deea52881aa1881f0dbd3e51d3",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJS15qAAAoJEHSBCwEjRsmmr8oH/0eJnmBt9wPutvC9Qvzm9qGZ\n8A/YTjroeLrGPJ+akKi92jM1H1Jnp5LNAq6bVA27SeGfRUb7KxwF0ZKqo1rI8DjG\nUAmLRmCDu52dy6yG2zfYKQUOqPhkZlGu+Ul4tLRkdh8LyfnUsYHHIFyUkZigZG46\nHMMXqeq0wzaOtCpXERmVKB13a7Kzc0hynsYQwMPOjFqSaoCWue62oE7jEuXu++iP\nne3KDUzvYEefaxdEon8BpxOl3ZNHSPIF3kQJ/JsGbnMS5hhwJBHaS2GJE34BorK4\nbXgrCbwQilVQFDAyzeO2QqFo+Jt8OayxScA+a2tS2ZxMClBjnwgh1vSywG6K8gE=\n=a1YT\n-----END PGP SIGNATURE-----",
        "payload": "tree 6c182a7c803c58db227887e9a8bd3d0386e4d9f5\nparent 4b4b578cb32737d2face45438069db95bc316ebb\nparent f4e72bf8d20f590738a1307fff0787bb2aa870c8\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1389861472 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1389861504 +0100\n\nMerge pull request #3546\n\nf4e72bf Make gitian builds consistent across platforms (Micha)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/417aad4a38df25deea52881aa1881f0dbd3e51d3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/417aad4a38df25deea52881aa1881f0dbd3e51d3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/417aad4a38df25deea52881aa1881f0dbd3e51d3/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4b4b578cb32737d2face45438069db95bc316ebb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4b4b578cb32737d2face45438069db95bc316ebb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4b4b578cb32737d2face45438069db95bc316ebb"
      },
      {
        "sha": "f4e72bf8d20f590738a1307fff0787bb2aa870c8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f4e72bf8d20f590738a1307fff0787bb2aa870c8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f4e72bf8d20f590738a1307fff0787bb2aa870c8"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 9,
      "deletions": 8
    },
    "files": [
      {
        "sha": "3a90b4d038ef56b7dd8886a79530dd0c595b6aea",
        "filename": "contrib/gitian-descriptors/README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/417aad4a38df25deea52881aa1881f0dbd3e51d3/contrib/gitian-descriptors/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/417aad4a38df25deea52881aa1881f0dbd3e51d3/contrib/gitian-descriptors/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/README.md?ref=417aad4a38df25deea52881aa1881f0dbd3e51d3",
        "patch": "@@ -39,7 +39,7 @@ Once you've got the right hardware and software:\n     git pull\n     cd ../gitian-builder\n     git pull\n-    ./bin/gbuild --commit bitcoin=HEAD ../bitcoin/contrib/gitian-descriptors/gitian.yml\n+    ./bin/gbuild --commit bitcoin=HEAD ../bitcoin/contrib/gitian-descriptors/gitian-linux.yml\n \n     # Build Win32 dependencies: (only needs to be done once, or when dependency versions change)\n     ./bin/gbuild --commit bitcoin=HEAD ../bitcoin/contrib/gitian-descriptors/boost-win32.yml"
      },
      {
        "sha": "4ebf5c53a375a0ecc1cbc2b14de1d5d85f111435",
        "filename": "contrib/gitian-descriptors/deps-linux.yml",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/417aad4a38df25deea52881aa1881f0dbd3e51d3/contrib/gitian-descriptors/deps-linux.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/417aad4a38df25deea52881aa1881f0dbd3e51d3/contrib/gitian-descriptors/deps-linux.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/deps-linux.yml?ref=417aad4a38df25deea52881aa1881f0dbd3e51d3",
        "patch": "@@ -7,6 +7,7 @@ architectures:\n - \"amd64\"\n packages:\n - \"unzip\"\n+- \"zip\"\n - \"pkg-config\"\n - \"libtool\"\n - \"faketime\"\n@@ -59,4 +60,4 @@ script: |\n   cd ../..\n   #\n   cd $STAGING\n-  tar -czf $OUTDIR/bitcoin-deps-linux${GBUILD_BITS}-gitian-r1.tar.gz include lib bin host\n+  zip -r $OUTDIR/bitcoin-deps-linux${GBUILD_BITS}-gitian-r1.zip include lib bin host"
      },
      {
        "sha": "b0fe86e25916eeb415631134691bf0feb9e04b39",
        "filename": "contrib/gitian-descriptors/gitian-linux.yml",
        "status": "renamed",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/417aad4a38df25deea52881aa1881f0dbd3e51d3/contrib/gitian-descriptors/gitian-linux.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/417aad4a38df25deea52881aa1881f0dbd3e51d3/contrib/gitian-descriptors/gitian-linux.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-linux.yml?ref=417aad4a38df25deea52881aa1881f0dbd3e51d3",
        "patch": "@@ -27,8 +27,8 @@ remotes:\n - \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n   \"dir\": \"bitcoin\"\n files:\n-- \"bitcoin-deps-linux32-gitian-r1.tar.gz\"\n-- \"bitcoin-deps-linux64-gitian-r1.tar.gz\"\n+- \"bitcoin-deps-linux32-gitian-r1.zip\"\n+- \"bitcoin-deps-linux64-gitian-r1.zip\"\n script: |\n   STAGING=\"$HOME/install\"\n   OPTFLAGS='-O2'\n@@ -38,7 +38,7 @@ script: |\n   #\n   mkdir -p $STAGING\n   cd $STAGING\n-  tar xzfm ../build/bitcoin-deps-linux${GBUILD_BITS}-gitian-r1.tar.gz\n+  unzip ../build/bitcoin-deps-linux${GBUILD_BITS}-gitian-r1.zip\n   cd ../build\n   #\n   cd bitcoin",
        "previous_filename": "contrib/gitian-descriptors/gitian.yml"
      },
      {
        "sha": "428193681992e5ce3650cd1e962ce44fc31fab1b",
        "filename": "doc/release-process.md",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/417aad4a38df25deea52881aa1881f0dbd3e51d3/doc/release-process.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/417aad4a38df25deea52881aa1881f0dbd3e51d3/doc/release-process.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-process.md?ref=417aad4a38df25deea52881aa1881f0dbd3e51d3",
        "patch": "@@ -52,7 +52,7 @@ Release Process\n \twget 'https://protobuf.googlecode.com/files/protobuf-2.5.0.tar.bz2'\n \tcd ..\n \t./bin/gbuild ../bitcoin/contrib/gitian-descriptors/deps-linux.yml\n-\tmv build/out/*.tar.gz inputs/\n+\tmv build/out/bitcoin-deps-*.zip inputs/\n \t./bin/gbuild ../bitcoin/contrib/gitian-descriptors/boost-win32.yml\n \tmv build/out/boost-win32-*.zip inputs/\n \t./bin/gbuild ../bitcoin/contrib/gitian-descriptors/deps-win32.yml\n@@ -64,8 +64,8 @@ Release Process\n \n  Build bitcoind and bitcoin-qt on Linux32, Linux64, and Win32:\n   \n-\t./bin/gbuild --commit bitcoin=v${VERSION} ../bitcoin/contrib/gitian-descriptors/gitian.yml\n-\t./bin/gsign --signer $SIGNER --release ${VERSION} --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian.yml\n+\t./bin/gbuild --commit bitcoin=v${VERSION} ../bitcoin/contrib/gitian-descriptors/gitian-linux.yml\n+\t./bin/gsign --signer $SIGNER --release ${VERSION} --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-linux.yml\n \tpushd build/out\n \tzip -r bitcoin-${VERSION}-linux-gitian.zip *\n \tmv bitcoin-${VERSION}-linux-gitian.zip ../../../"
      }
    ]
  },
  {
    "sha": "8da2b3316c6540684617a8ecb8edb458894c2009",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4ZGEyYjMzMTZjNjU0MDY4NDYxN2E4ZWNiOGVkYjQ1ODg5NGMyMDA5",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-16T10:22:05Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-16T10:22:14Z"
      },
      "message": "Merge pull request #3547\n\n8d31e61 Added automake to the macports depdency list as it was required to complete the autogen.sh step as it required aclocal (which isn't included in recent versions of xcode). (Scott Willeke)",
      "tree": {
        "sha": "801df01bc43bb22de9fefdd16dbb2f5517c8fa71",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/801df01bc43bb22de9fefdd16dbb2f5517c8fa71"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8da2b3316c6540684617a8ecb8edb458894c2009",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJS17LWAAoJEHSBCwEjRsmma2gH/3FnCtr8fFe6Da0ESWNYHNi8\nm+crBHz/zAra32yaoL5bvV1w0cL7tGfU0E7pcaNquNpqHB4Xwc7LBTkA7dgu82M3\nC8Mdmj2QWO+zbELRlX6fWm8K3Kqip41wHcuanOwq54qQDnXytV3hlbhxMNlGE/os\nQh3Jz20nxsbtJ4w/0PKmxn4UoB8LgxR8IEri0zn3An/um+8zlBh6aonIhI6KMtbl\nwTLRR+MdAEm/lgSGdmuXDwFqYPAi+nWLL6nIjCNprl+lKQ3SmLrL6zW6nCFHZ0Fu\nvXRs390U7VkYtVImvatOdwGExbwt3NkIAOxtMSocyVOc3douIDk3pBsouKw0Mb0=\n=68W/\n-----END PGP SIGNATURE-----",
        "payload": "tree 801df01bc43bb22de9fefdd16dbb2f5517c8fa71\nparent 417aad4a38df25deea52881aa1881f0dbd3e51d3\nparent 8d31e614e83f3aeb68742c800800d7689280fdcc\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1389867725 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1389867734 +0100\n\nMerge pull request #3547\n\n8d31e61 Added automake to the macports depdency list as it was required to complete the autogen.sh step as it required aclocal (which isn't included in recent versions of xcode). (Scott Willeke)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8da2b3316c6540684617a8ecb8edb458894c2009",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8da2b3316c6540684617a8ecb8edb458894c2009",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8da2b3316c6540684617a8ecb8edb458894c2009/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "417aad4a38df25deea52881aa1881f0dbd3e51d3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/417aad4a38df25deea52881aa1881f0dbd3e51d3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/417aad4a38df25deea52881aa1881f0dbd3e51d3"
      },
      {
        "sha": "8d31e614e83f3aeb68742c800800d7689280fdcc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8d31e614e83f3aeb68742c800800d7689280fdcc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8d31e614e83f3aeb68742c800800d7689280fdcc"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "381e8b6f0a20dfe25493111c10d2d250616aff36",
        "filename": "doc/build-osx.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8da2b3316c6540684617a8ecb8edb458894c2009/doc/build-osx.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8da2b3316c6540684617a8ecb8edb458894c2009/doc/build-osx.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-osx.md?ref=8da2b3316c6540684617a8ecb8edb458894c2009",
        "patch": "@@ -45,7 +45,7 @@ Instructions: MacPorts\n \n Installing the dependencies using MacPorts is very straightforward.\n \n-    sudo port install boost db48@+no_java openssl miniupnpc autoconf pkgconfig\n+    sudo port install boost db48@+no_java openssl miniupnpc autoconf pkgconfig automake\n \n ### Building `bitcoind`\n "
      }
    ]
  },
  {
    "sha": "57538241712044146e0a79e0e6d02a084aa06c62",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NzUzODI0MTcxMjA0NDE0NmUwYTc5ZTBlNmQwMmEwODRhYTA2YzYy",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-16T13:40:32Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-16T13:41:13Z"
      },
      "message": "Merge pull request #3542\n\n69843c8 Update build-unix.md (Christopher Latham)\n720731d Update configure.ac (Christopher Latham)",
      "tree": {
        "sha": "1022ae9381274eacdabf210ccadf6b0e6bc0a28a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1022ae9381274eacdabf210ccadf6b0e6bc0a28a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/57538241712044146e0a79e0e6d02a084aa06c62",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJS1+F5AAoJEHSBCwEjRsmmhS0H/RJxIDCLodncuczNxL/vZgqS\nchak0bFZIG/cUHQMuJ04Wdg8FuNBFosVbZ54SodmGyCqm6mStHZORiUOQ7OpzHIW\nTZ/sQSrrxFwaW/xbyKdcCJYa70OV3XFd4XCpRh+dba8nUEyVtdI06zfmjeLziZHs\ngBKEcJpA+Y9SvploDvfpqublLeXvuRdJ/zHmTmHnzPKDRK/s4V8Lhzo25aPm0YnZ\nbPfMwx5HYMwqVknXNqofEMmsNJeyyMSWer7dsaqSbTNcHy/QWuO3UuMkRKUpdBrq\nOSr/BNIu4/9npJ1KQEg9gtV31n6tgSsYVzHPwrRCOM/cJ03xtwLRiGun+S9QzwE=\n=wbi4\n-----END PGP SIGNATURE-----",
        "payload": "tree 1022ae9381274eacdabf210ccadf6b0e6bc0a28a\nparent 8da2b3316c6540684617a8ecb8edb458894c2009\nparent 69843c8b4eee99183502622fcf6c125e50b9c5d4\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1389879632 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1389879673 +0100\n\nMerge pull request #3542\n\n69843c8 Update build-unix.md (Christopher Latham)\n720731d Update configure.ac (Christopher Latham)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/57538241712044146e0a79e0e6d02a084aa06c62",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/57538241712044146e0a79e0e6d02a084aa06c62",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/57538241712044146e0a79e0e6d02a084aa06c62/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8da2b3316c6540684617a8ecb8edb458894c2009",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8da2b3316c6540684617a8ecb8edb458894c2009",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8da2b3316c6540684617a8ecb8edb458894c2009"
      },
      {
        "sha": "69843c8b4eee99183502622fcf6c125e50b9c5d4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/69843c8b4eee99183502622fcf6c125e50b9c5d4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/69843c8b4eee99183502622fcf6c125e50b9c5d4"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 4,
      "deletions": 1
    },
    "files": [
      {
        "sha": "88c20cdce64c23afb075a1cf722e181d02fa27b1",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57538241712044146e0a79e0e6d02a084aa06c62/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57538241712044146e0a79e0e6d02a084aa06c62/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=57538241712044146e0a79e0e6d02a084aa06c62",
        "patch": "@@ -395,7 +395,7 @@ LIBS=\"$TEMP_LIBS\"\n fi\n \n if test x$boost_sleep != xyes; then\n-  AC_MSG_ERROR(No working boost sleep implementation found)\n+  AC_MSG_ERROR(No working boost sleep implementation found. If on ubuntu 13.10 with libboost1.54-all-dev remove libboost.1.54-all-dev and use libboost1.53-all-dev)\n fi\n \n BITCOIN_QT_INIT"
      },
      {
        "sha": "5124205a34d4ad4b3587b970a6c400d08a487e47",
        "filename": "doc/build-unix.md",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57538241712044146e0a79e0e6d02a084aa06c62/doc/build-unix.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57538241712044146e0a79e0e6d02a084aa06c62/doc/build-unix.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-unix.md?ref=57538241712044146e0a79e0e6d02a084aa06c62",
        "patch": "@@ -68,6 +68,9 @@ for Ubuntu 12.04 and later:\n \n  Ubuntu 12.04 and later have packages for libdb5.1-dev and libdb5.1++-dev,\n  but using these will break binary wallet compatibility, and is not recommended.\n+ \n+for Ubuntu 13.10: \n+        libboost1.54-all-dev will not work. Remove libboost1.54-all-dev and install libboost1.53-all-dev\n \n for other Ubuntu & Debian:\n "
      }
    ]
  },
  {
    "sha": "08ede8ef5edd8bfe6b80d0900bd9bd65b2d45cbf",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowOGVkZThlZjVlZGQ4YmZlNmI4MGQwOTAwYmQ5YmQ2NWIyZDQ1Y2Jm",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-17T09:11:37Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-17T09:11:46Z"
      },
      "message": "Merge pull request #3512\n\n04aa828 [Qt] don't regenerate autostart link on every client startup (Philip Kaufmann)",
      "tree": {
        "sha": "ea47c590767840fa00323b1e15166b6e953d1369",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ea47c590767840fa00323b1e15166b6e953d1369"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/08ede8ef5edd8bfe6b80d0900bd9bd65b2d45cbf",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJS2PPSAAoJEHSBCwEjRsmmnygIAMFCkkvUKKAN6VjHR7GEnCOc\nyMVi0167/KSAAmyHeqYJpP9Jul23bOI6RyFjKXg9mP9yYMASCCOUZEvgSEKTCCk7\neivp+jIxlZNY6EPYlZWsqRDqYcKMu4JFv20HtIJrySUvy1PggoFYLFdBticR2SW0\n8+M7nksgszuxppaAGMDtrBBsuT9cAbqlQ9nrj5BwaTyJy3pT5sDBJH65exXL10HP\nmagHrJXIZvXEyQialRzPF+1RBbWBWAs4DCjOzzCA/MEik2Sg7J4CK65phdPXxfSo\n6B7jU6g+ziq5zVzsA4u2otxPHzYCoUkWZIIfJvlCsUAbWcBCW7sUzkGwp2KcfwQ=\n=l2Wj\n-----END PGP SIGNATURE-----",
        "payload": "tree ea47c590767840fa00323b1e15166b6e953d1369\nparent 57538241712044146e0a79e0e6d02a084aa06c62\nparent 04aa828728afa2c89c33878dbe8a85812e3c2ae1\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1389949897 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1389949906 +0100\n\nMerge pull request #3512\n\n04aa828 [Qt] don't regenerate autostart link on every client startup (Philip Kaufmann)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/08ede8ef5edd8bfe6b80d0900bd9bd65b2d45cbf",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/08ede8ef5edd8bfe6b80d0900bd9bd65b2d45cbf",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/08ede8ef5edd8bfe6b80d0900bd9bd65b2d45cbf/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "57538241712044146e0a79e0e6d02a084aa06c62",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/57538241712044146e0a79e0e6d02a084aa06c62",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/57538241712044146e0a79e0e6d02a084aa06c62"
      },
      {
        "sha": "04aa828728afa2c89c33878dbe8a85812e3c2ae1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/04aa828728afa2c89c33878dbe8a85812e3c2ae1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/04aa828728afa2c89c33878dbe8a85812e3c2ae1"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 0,
      "deletions": 6
    },
    "files": [
      {
        "sha": "3cf7e53c023369f98b7d324246da1c1a064c17ee",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/08ede8ef5edd8bfe6b80d0900bd9bd65b2d45cbf/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/08ede8ef5edd8bfe6b80d0900bd9bd65b2d45cbf/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=08ede8ef5edd8bfe6b80d0900bd9bd65b2d45cbf",
        "patch": "@@ -561,12 +561,6 @@ int main(int argc, char *argv[])\n \n     try\n     {\n-#ifndef Q_OS_MAC\n-        // Regenerate startup link, to fix links to old versions\n-        // OSX: makes no sense on mac and might also scan/mount external (and sleeping) volumes (can take up some secs)\n-        if (GUIUtil::GetStartOnSystemStartup())\n-            GUIUtil::SetStartOnSystemStartup(true);\n-#endif\n         app.createWindow(isaTestNet);\n         app.requestInitialize();\n         app.exec();"
      }
    ]
  },
  {
    "sha": "6c19ca1f92c014a9a7155e159fda592733fb1d4c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2YzE5Y2ExZjkyYzAxNGE5YTcxNTVlMTU5ZmRhNTkyNzMzZmIxZDRj",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-18T11:16:24Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-18T11:25:05Z"
      },
      "message": "Merge pull request #3490\n\n7e08e29 better std::exception logging for block/undo files (Philip Kaufmann)",
      "tree": {
        "sha": "19e622d8d9f79624b9403d2d3555f93a5b9dec57",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/19e622d8d9f79624b9403d2d3555f93a5b9dec57"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6c19ca1f92c014a9a7155e159fda592733fb1d4c",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABCgAGBQJS2mSRAAoJEHSBCwEjRsmm56YH/isMk+/h8SsFz1WuDHViZC8f\nBYeSx+EicCuw+EdOdJT8pPmZCo8M5wsKo7p83OJylp/pNX59ayn+V/mfn/sMenAH\nffFQ8bXCmT5LkwxUy7MqYTzEAR2yEsoGp8FJPvNp1kmOWrIlrOzn/nUousofiX34\nzoUbGwN6isS6oMV2fh2T6DB6H5cnvy/5BkvNWeKajv3tNVYcI8/WArBGaDhJMZTP\nopUwSoZRkHnrrXefAhpp+HoZBkhZz+3Fp1Z+iDw2JITihdhY6tv0dTzAGSaKVxhZ\nMGTheE1UVjzTUXXR8rxBgRw4NDBgDcs73CoFUf5L1ljxBL/vEfX756ZL46WWvvc=\n=k8yg\n-----END PGP SIGNATURE-----",
        "payload": "tree 19e622d8d9f79624b9403d2d3555f93a5b9dec57\nparent 08ede8ef5edd8bfe6b80d0900bd9bd65b2d45cbf\nparent 7e08e29117546aae66b0b418b2044f77b70b312f\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1390043784 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1390044305 +0100\n\nMerge pull request #3490\n\n7e08e29 better std::exception logging for block/undo files (Philip Kaufmann)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6c19ca1f92c014a9a7155e159fda592733fb1d4c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6c19ca1f92c014a9a7155e159fda592733fb1d4c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6c19ca1f92c014a9a7155e159fda592733fb1d4c/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "08ede8ef5edd8bfe6b80d0900bd9bd65b2d45cbf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/08ede8ef5edd8bfe6b80d0900bd9bd65b2d45cbf",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/08ede8ef5edd8bfe6b80d0900bd9bd65b2d45cbf"
      },
      {
        "sha": "7e08e29117546aae66b0b418b2044f77b70b312f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7e08e29117546aae66b0b418b2044f77b70b312f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7e08e29117546aae66b0b418b2044f77b70b312f"
      }
    ],
    "stats": {
      "total": 26,
      "additions": 13,
      "deletions": 13
    },
    "files": [
      {
        "sha": "3ff1fd3a9110cff0b8a3d8b38dfcff089046360b",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6c19ca1f92c014a9a7155e159fda592733fb1d4c/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6c19ca1f92c014a9a7155e159fda592733fb1d4c/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=6c19ca1f92c014a9a7155e159fda592733fb1d4c",
        "patch": "@@ -883,11 +883,11 @@ bool GetTransaction(const uint256 &hash, CTransaction &txOut, uint256 &hashBlock\n                     fseek(file, postx.nTxOffset, SEEK_CUR);\n                     file >> txOut;\n                 } catch (std::exception &e) {\n-                    return error(\"%s() : deserialize or I/O error\", __PRETTY_FUNCTION__);\n+                    return error(\"%s : Deserialize or I/O error - %s\", __PRETTY_FUNCTION__, e.what());\n                 }\n                 hashBlock = header.GetHash();\n                 if (txOut.GetHash() != hash)\n-                    return error(\"%s() : txid mismatch\", __PRETTY_FUNCTION__);\n+                    return error(\"%s : txid mismatch\", __PRETTY_FUNCTION__);\n                 return true;\n             }\n         }\n@@ -936,7 +936,7 @@ bool WriteBlockToDisk(CBlock& block, CDiskBlockPos& pos)\n     // Open history file to append\n     CAutoFile fileout = CAutoFile(OpenBlockFile(pos), SER_DISK, CLIENT_VERSION);\n     if (!fileout)\n-        return error(\"WriteBlockToDisk() : OpenBlockFile failed\");\n+        return error(\"WriteBlockToDisk : OpenBlockFile failed\");\n \n     // Write index header\n     unsigned int nSize = fileout.GetSerializeSize(block);\n@@ -945,7 +945,7 @@ bool WriteBlockToDisk(CBlock& block, CDiskBlockPos& pos)\n     // Write block\n     long fileOutPos = ftell(fileout);\n     if (fileOutPos < 0)\n-        return error(\"WriteBlockToDisk() : ftell failed\");\n+        return error(\"WriteBlockToDisk : ftell failed\");\n     pos.nPos = (unsigned int)fileOutPos;\n     fileout << block;\n \n@@ -964,19 +964,19 @@ bool ReadBlockFromDisk(CBlock& block, const CDiskBlockPos& pos)\n     // Open history file to read\n     CAutoFile filein = CAutoFile(OpenBlockFile(pos, true), SER_DISK, CLIENT_VERSION);\n     if (!filein)\n-        return error(\"ReadBlockFromDisk(CBlock&, CDiskBlockPos&) : OpenBlockFile failed\");\n+        return error(\"ReadBlockFromDisk : OpenBlockFile failed\");\n \n     // Read block\n     try {\n         filein >> block;\n     }\n     catch (std::exception &e) {\n-        return error(\"%s() : deserialize or I/O error\", __PRETTY_FUNCTION__);\n+        return error(\"%s : Deserialize or I/O error - %s\", __PRETTY_FUNCTION__, e.what());\n     }\n \n     // Check the header\n     if (!CheckProofOfWork(block.GetHash(), block.nBits))\n-        return error(\"ReadBlockFromDisk(CBlock&, CDiskBlockPos&) : errors in block header\");\n+        return error(\"ReadBlockFromDisk : Errors in block header\");\n \n     return true;\n }\n@@ -2876,7 +2876,7 @@ bool LoadExternalBlockFile(FILE* fileIn, CDiskBlockPos *dbp)\n                         break;\n                 }\n             } catch (std::exception &e) {\n-                LogPrintf(\"%s() : Deserialize or I/O error caught during load\\n\", __PRETTY_FUNCTION__);\n+                LogPrintf(\"%s : Deserialize or I/O error - %s\", __PRETTY_FUNCTION__, e.what());\n             }\n         }\n         fclose(fileIn);"
      },
      {
        "sha": "60e733b23ae9de83e1110a13b2347398544e036f",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6c19ca1f92c014a9a7155e159fda592733fb1d4c/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6c19ca1f92c014a9a7155e159fda592733fb1d4c/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=6c19ca1f92c014a9a7155e159fda592733fb1d4c",
        "patch": "@@ -336,7 +336,7 @@ class CBlockUndo\n         // Open history file to append\n         CAutoFile fileout = CAutoFile(OpenUndoFile(pos), SER_DISK, CLIENT_VERSION);\n         if (!fileout)\n-            return error(\"CBlockUndo::WriteToDisk() : OpenUndoFile failed\");\n+            return error(\"CBlockUndo::WriteToDisk : OpenUndoFile failed\");\n \n         // Write index header\n         unsigned int nSize = fileout.GetSerializeSize(*this);\n@@ -345,7 +345,7 @@ class CBlockUndo\n         // Write undo data\n         long fileOutPos = ftell(fileout);\n         if (fileOutPos < 0)\n-            return error(\"CBlockUndo::WriteToDisk() : ftell failed\");\n+            return error(\"CBlockUndo::WriteToDisk : ftell failed\");\n         pos.nPos = (unsigned int)fileOutPos;\n         fileout << *this;\n \n@@ -368,7 +368,7 @@ class CBlockUndo\n         // Open history file to read\n         CAutoFile filein = CAutoFile(OpenUndoFile(pos, true), SER_DISK, CLIENT_VERSION);\n         if (!filein)\n-            return error(\"CBlockUndo::ReadFromDisk() : OpenBlockFile failed\");\n+            return error(\"CBlockUndo::ReadFromDisk : OpenBlockFile failed\");\n \n         // Read block\n         uint256 hashChecksum;\n@@ -377,15 +377,15 @@ class CBlockUndo\n             filein >> hashChecksum;\n         }\n         catch (std::exception &e) {\n-            return error(\"%s() : deserialize or I/O error\", __PRETTY_FUNCTION__);\n+            return error(\"%s : Deserialize or I/O error - %s\", __PRETTY_FUNCTION__, e.what());\n         }\n \n         // Verify checksum\n         CHashWriter hasher(SER_GETHASH, PROTOCOL_VERSION);\n         hasher << hashBlock;\n         hasher << *this;\n         if (hashChecksum != hasher.GetHash())\n-            return error(\"CBlockUndo::ReadFromDisk() : checksum mismatch\");\n+            return error(\"CBlockUndo::ReadFromDisk : Checksum mismatch\");\n \n         return true;\n     }"
      }
    ]
  },
  {
    "sha": "b9d384a45dfe9f258a81aee7341b32dcd712a494",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiOWQzODRhNDVkZmU5ZjI1OGE4MWFlZTczNDFiMzJkY2Q3MTJhNDk0",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2014-01-18T13:32:29Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2014-01-18T13:32:29Z"
      },
      "message": "Merge src/leveldb changes: temporarily revert to writing .sst files.",
      "tree": {
        "sha": "5a78b0e2ba8fe62d12e933c9199c18c6ab9faa7e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5a78b0e2ba8fe62d12e933c9199c18c6ab9faa7e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b9d384a45dfe9f258a81aee7341b32dcd712a494",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b9d384a45dfe9f258a81aee7341b32dcd712a494",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b9d384a45dfe9f258a81aee7341b32dcd712a494",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b9d384a45dfe9f258a81aee7341b32dcd712a494/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6c19ca1f92c014a9a7155e159fda592733fb1d4c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6c19ca1f92c014a9a7155e159fda592733fb1d4c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6c19ca1f92c014a9a7155e159fda592733fb1d4c"
      },
      {
        "sha": "060fdb41fc58e962a694021f2883f765e3246748",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/060fdb41fc58e962a694021f2883f765e3246748",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/060fdb41fc58e962a694021f2883f765e3246748"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 7,
      "deletions": 2
    },
    "files": [
      {
        "sha": "27d750697b091f0a0d5c92436fca49aabb52ca88",
        "filename": "src/leveldb/db/filename.cc",
        "status": "modified",
        "additions": 7,
        "deletions": 2,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b9d384a45dfe9f258a81aee7341b32dcd712a494/src/leveldb/db/filename.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b9d384a45dfe9f258a81aee7341b32dcd712a494/src/leveldb/db/filename.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/filename.cc?ref=b9d384a45dfe9f258a81aee7341b32dcd712a494",
        "patch": "@@ -29,14 +29,19 @@ std::string LogFileName(const std::string& name, uint64_t number) {\n   return MakeFileName(name, number, \"log\");\n }\n \n+// TableFileName returns the filenames we usually write to, while\n+// SSTTableFileName returns the alternative filenames we also try to read from\n+// for backward compatibility. For now, swap them around.\n+// TODO: when compatibility is no longer necessary, swap them back\n+// (TableFileName to use \"ldb\" and SSTTableFileName to use \"sst\").\n std::string TableFileName(const std::string& name, uint64_t number) {\n   assert(number > 0);\n-  return MakeFileName(name, number, \"ldb\");\n+  return MakeFileName(name, number, \"sst\");\n }\n \n std::string SSTTableFileName(const std::string& name, uint64_t number) {\n   assert(number > 0);\n-  return MakeFileName(name, number, \"sst\");\n+  return MakeFileName(name, number, \"ldb\");\n }\n \n std::string DescriptorFileName(const std::string& dbname, uint64_t number) {"
      }
    ]
  }
]