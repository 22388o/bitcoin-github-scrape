NicolasDorier,2018-06-27T08:49:38Z,"Your PR show me actually that `maxtxfee` exists, which is uncorrelated with absurd fee we were talking about.\n\nOne could say that changing `maxtxfee` or having `maxtxfeerate` at config level would solve the issue without touching RPC. But, when you do a transaction manually, you know the `maxfeerate` to expect when you call `sendrawtransaction`, not when you modify the config file of bitcoind.",https://github.com/bitcoin/bitcoin/pull/13541#issuecomment-400593603,400593603,
kallewoof,2018-06-27T08:57:55Z,"> Your PR show me actually that maxtxfee exists, which is uncorrelated with absurd fee we were talking about.\n\nYes, absurdfee can actually be specified for each call to `AcceptToMempool`, so it can be used after all.\n\n> One could say that changing `maxtxfee` or having `maxtxfeerate` at config level would solve the issue without touching RPC. But, when you do a transaction manually, you kno",https://github.com/bitcoin/bitcoin/pull/13541#issuecomment-400596870,400596870,
DrahtBot,2018-08-12T02:13:09Z,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#15282](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15282.html) (test: Replace hard-coded hex tx with class ",https://github.com/bitcoin/bitcoin/pull/13541#issuecomment-412313579,412313579,
MarcoFalke,2019-02-13T17:28:40Z,Could do the same for `testmempoolaccept` (since that is just a mirror of sendraw),https://github.com/bitcoin/bitcoin/pull/13541#issuecomment-463290393,463290393,
kallewoof,2019-02-14T08:20:02Z,@MarcoFalke Done!,https://github.com/bitcoin/bitcoin/pull/13541#issuecomment-463534978,463534978,
kallewoof,2019-02-14T08:41:33Z,"~I also tentatively moved `maxTxFee` from validation into wallet in fc29a5a -- I don't know if this should be a separate PR or not, but it seems this move is desired?~ Unexpected complications; dropping commit.",https://github.com/bitcoin/bitcoin/pull/13541#issuecomment-463541374,463541374,
MarcoFalke,2019-02-20T14:56:23Z,"@jnewbery You might want to take a look at  #15408, which is a fixup to #14978 (the pull request that moved ::maxtxfee from the rpc callers to the util method)",https://github.com/bitcoin/bitcoin/pull/13541#issuecomment-465611252,465611252,
jnewbery,2019-02-20T15:09:05Z,Thanks @MarcoFalke . I wasn't aware of that PR. I've already re-arranged the commits in the order I suggested here: https://github.com/jnewbery/bitcoin/tree/PR13541.1 . I guess it would be possible to remove the first commit from https://github.com/jnewbery/bitcoin/tree/PR13541.1 and rebase on #15408.,https://github.com/bitcoin/bitcoin/pull/13541#issuecomment-465617005,465617005,
kallewoof,2019-02-21T09:22:40Z,"I `--hard reset` over @jnewbery's branch. I kind of prefer to have tests separate from code changes, but I'm just gonna leave things as they are. Thanks for the help!",https://github.com/bitcoin/bitcoin/pull/13541#issuecomment-465924411,465924411,
jnewbery,2019-02-22T16:54:08Z,"> I kind of prefer to have tests separate from code changes\n\nI have no strong preference in the case of new tests, but obviously changes that need to be made to existing tests when behaviour changes should be atomic with the behaviour change commit to not break git bisects.\n\nSorry I was a bit overzelous in squashing. Obviously it's your choice and I won't be at all offended if you split ou",https://github.com/bitcoin/bitcoin/pull/13541#issuecomment-466466123,466466123,
kallewoof,2019-02-25T05:06:01Z,"@jnewbery Good point, yeah I meant new tests, not fixes. I should probably be more careful and think about bisect.",https://github.com/bitcoin/bitcoin/pull/13541#issuecomment-466873520,466873520,
kallewoof,2019-02-25T13:33:18Z,"It kind of came natural with the PR as I was debugging it, but I added fee related output to testmempoolaccept for the case where fee is related to the rejection (`REJECT_HIGHFEE` and `REJECT_INSUFFICIENTFEE`, specifically). This also included updating AcceptToMempool and friends to allow an outgoing fee.",https://github.com/bitcoin/bitcoin/pull/13541#issuecomment-467012393,467012393,
kallewoof,2019-03-04T07:52:55Z,"Addressed review comments and removed fee info related commits\n	121afc4f5c323776584dd83d93c6da77128b6775\n	349860df8695ff0ad657a3d6d1502edb46571174\n",https://github.com/bitcoin/bitcoin/pull/13541#issuecomment-469152164,469152164,
MarcoFalke,2019-03-04T18:49:06Z,"Could you fixup the last commit, please?",https://github.com/bitcoin/bitcoin/pull/13541#issuecomment-469373683,469373683,
MarcoFalke,2019-03-04T18:53:53Z,re-utACK 6c98fd0466 otherwise,https://github.com/bitcoin/bitcoin/pull/13541#issuecomment-469376307,469376307,
kallewoof,2019-03-05T01:13:47Z,@MarcoFalke Squashed.,https://github.com/bitcoin/bitcoin/pull/13541#issuecomment-469493871,469493871,
MarcoFalke,2019-03-07T18:02:12Z,re-utACK 6c17985e8b,https://github.com/bitcoin/bitcoin/pull/13541#issuecomment-470631388,470631388,
kallewoof,2019-03-14T00:51:59Z,Addressed @MarcoFalke nits.,https://github.com/bitcoin/bitcoin/pull/13541#issuecomment-472661993,472661993,
jnewbery,2019-03-26T20:11:15Z,"post-merge ACK 7abd2e697c0f8e93245e09ac853bae05d0b48bee\n\n(except the change to validation.cpp :see_no_evil: )",https://github.com/bitcoin/bitcoin/pull/13541#issuecomment-476828576,476828576,
promag,2018-06-27T13:36:28Z,`= None`?,https://github.com/bitcoin/bitcoin/pull/13541#discussion_r198497404,198497404,test/functional/rpc_rawtransaction.py
promag,2018-06-27T13:41:15Z,Missing parameter.,https://github.com/bitcoin/bitcoin/pull/13541#discussion_r198499092,198499092,src/rpc/rawtransaction.cpp
promag,2018-06-27T13:41:37Z,When specifying `maxfeerate` does it make sense to pass `allowhighfees=true`?,https://github.com/bitcoin/bitcoin/pull/13541#discussion_r198499230,198499230,src/rpc/rawtransaction.cpp
promag,2018-06-27T14:12:24Z,"Alternative (not tested)\n```python\nvout = next(o for o in rawTx['vout'] if o['value'] == Decimal('1.00000000'))\n```",https://github.com/bitcoin/bitcoin/pull/13541#discussion_r198510269,198510269,test/functional/rpc_rawtransaction.py
kallewoof,2018-06-27T22:56:21Z,"Several copies of this in `rpc_rawtransaction`, so I made a dedicated commit to address the others.",https://github.com/bitcoin/bitcoin/pull/13541#discussion_r198665423,198665423,test/functional/rpc_rawtransaction.py
kallewoof,2018-06-27T22:58:01Z,"I am sort of overriding `allowhighfees` right now. I could disallow it completely, i.e. require that it is null or `false`, if using `maxfeerate`, but not sure it's worth it.\n",https://github.com/bitcoin/bitcoin/pull/13541#discussion_r198665791,198665791,src/rpc/rawtransaction.cpp
kallewoof,2018-06-27T22:59:54Z,"To more directly answer your question, though, `allowhighfees=true` will simply remove the existing absurd fee cap (which is 0.1 btc I believe), so if maxfeerate was really high, it actually could result in a slightly higher cap.",https://github.com/bitcoin/bitcoin/pull/13541#discussion_r198666125,198666125,src/rpc/rawtransaction.cpp
luke-jr,2018-07-29T18:53:11Z,"Just have a single parameter... if it's a boolean, it's the (deprecated?) allowhighfees; if a number, then a specific limit.",https://github.com/bitcoin/bitcoin/pull/13541#discussion_r205983711,205983711,src/rpc/rawtransaction.cpp
promag,2018-07-29T23:09:19Z,@luke-jr does that work with named parameters?,https://github.com/bitcoin/bitcoin/pull/13541#discussion_r205990680,205990680,src/rpc/rawtransaction.cpp
kallewoof,2018-07-30T09:45:57Z,"> does that work with named parameters?\n\nYes, it is already used by `getbalance`:\n\nhttps://github.com/bitcoin/bitcoin/blob/222e627322ce4de3292259a4868d23983f2a5394/src/wallet/rpcwallet.cpp#L4784",https://github.com/bitcoin/bitcoin/pull/13541#discussion_r206072932,206072932,src/rpc/rawtransaction.cpp
meshcollider,2018-11-10T04:34:43Z,"Shouldn't this default be whatever `maxTxFee` is, not `âˆž`?",https://github.com/bitcoin/bitcoin/pull/13541#discussion_r232441229,232441229,src/rpc/rawtransaction.cpp
meshcollider,2018-11-10T04:42:14Z,Might be good to add a quick comment here to clarify the `+3/4` is for rounding,https://github.com/bitcoin/bitcoin/pull/13541#discussion_r232441387,232441387,src/rpc/rawtransaction.cpp
kallewoof,2018-11-12T07:00:51Z,"Fixed - it now outputs\n```\n2. allowhighfees|maxfeerate (boolean/numeric, optional, default=false/0.10) Allow \nhigh fees (boolean) or reject transactions whose fee rate is higher than the \nspecified value (numeric), expressed in BTC/kB\n```\nfor the default settings.",https://github.com/bitcoin/bitcoin/pull/13541#discussion_r232549761,232549761,src/rpc/rawtransaction.cpp
kallewoof,2018-11-12T07:02:16Z,Added note.,https://github.com/bitcoin/bitcoin/pull/13541#discussion_r232549938,232549938,src/rpc/rawtransaction.cpp
MarcoFalke,2019-02-12T23:55:32Z,"```suggestion\n                    {""maxfeerate"", RPCArg::Type::AMOUNT, /* default */ FormatMoney(maxTxFee), ""Allow high fees (boolean) or reject transactions whose fee rate is higher than the specified value (numeric), expressed in "" + CURRENCY_UNIT + ""/kB\n""},\n```",https://github.com/bitcoin/bitcoin/pull/13541#discussion_r256197489,256197489,src/rpc/rawtransaction.cpp
jnewbery,2019-02-19T20:01:21Z,"My personal preference would be to not overload a parameter with two possible types and just remove the boolean option here. I think it's ok to leave the boolean accepting logic below as a courtesy to existing users, but that should eventually be removed and it shouldn't be advertised in the help text.\n\nSame for `testmempoolaccept` below.",https://github.com/bitcoin/bitcoin/pull/13541#discussion_r258206226,258206226,src/rpc/rawtransaction.cpp
jnewbery,2019-02-19T20:21:49Z,"Very nice :+1: . As well as being more compact, this will fail here with a `StopIteration` exception if there is no matching output, rather than fail later because `vout` is `False`.",https://github.com/bitcoin/bitcoin/pull/13541#discussion_r258213474,258213474,test/functional/rpc_rawtransaction.py
jnewbery,2019-02-19T20:25:26Z,I think that the `log.info()` calls are more useful for documenting the test sections than these block comments. Consider removing this.,https://github.com/bitcoin/bitcoin/pull/13541#discussion_r258214857,258214857,test/functional/rpc_rawtransaction.py
jnewbery,2019-02-19T20:34:23Z,"Note that sending a raw transaction on one node and then calling `sync_all()` introduces a random delay (since transaction propagation is trickled). This is done in a bunch of test cases, so I'm not saying this is a blocker for this PR, but it's something worth knowing about.",https://github.com/bitcoin/bitcoin/pull/13541#discussion_r258217761,258217761,test/functional/rpc_rawtransaction.py
jnewbery,2019-02-20T14:19:13Z,Can you refer to `GetVirtualTransactionSize()` in this comment? (It took me some time to find and confirm this formula),https://github.com/bitcoin/bitcoin/pull/13541#discussion_r258501125,258501125,src/rpc/rawtransaction.cpp
MarcoFalke,2019-02-20T14:58:01Z,"If bool is no longer mentioned here, the transition should be mentioned in the release notes, though",https://github.com/bitcoin/bitcoin/pull/13541#discussion_r258519710,258519710,src/rpc/rawtransaction.cpp
kallewoof,2019-02-21T09:14:48Z,"I'm hesitant to allow some hidden underlying default max fee when using a boolean. If we are removing the option, we should remove it completely, not just from the documentation.\n\nI do realize that the way things are currently, someone who uses '1' as boolean true will accept any fees up to 1 BTC/kB, which is rather high. Maybe removing the boolean style completely is actually the way to go.",https://github.com/bitcoin/bitcoin/pull/13541#discussion_r258837613,258837613,src/rpc/rawtransaction.cpp
kallewoof,2019-02-21T09:16:06Z,Props to @promag! :),https://github.com/bitcoin/bitcoin/pull/13541#discussion_r258838140,258838140,test/functional/rpc_rawtransaction.py
kallewoof,2019-02-21T09:16:21Z,Sure thing.,https://github.com/bitcoin/bitcoin/pull/13541#discussion_r258838231,258838231,test/functional/rpc_rawtransaction.py
kallewoof,2019-02-21T09:21:41Z,Makes sense - added comment to both places.,https://github.com/bitcoin/bitcoin/pull/13541#discussion_r258840327,258840327,src/rpc/rawtransaction.cpp
MarcoFalke,2019-02-22T16:27:32Z,"> Maybe removing the boolean style completely is actually the way to go.\n\nI tend to agree with your idea. An option could be to have a `-deprecatedrpc=sendrawtransaction -deprecatedrpc=testmempoolaccept` to toggle back to the bool behavior.",https://github.com/bitcoin/bitcoin/pull/13541#discussion_r259413534,259413534,src/rpc/rawtransaction.cpp
MarcoFalke,2019-02-22T16:30:29Z,"in commit 9c6a8b52394c9fdbb8c2296a77614b1c0114db49\n\nWhy the include? I can't see what it is for",https://github.com/bitcoin/bitcoin/pull/13541#discussion_r259414738,259414738,src/rpc/rawtransaction.cpp
promag,2019-02-22T16:32:44Z,"Thanks, now I have to understand what I've suggested :trollface: ",https://github.com/bitcoin/bitcoin/pull/13541#discussion_r259415671,259415671,test/functional/rpc_rawtransaction.py
jnewbery,2019-02-22T16:51:16Z,"> An option could be to have a `-deprecatedrpc=sendrawtransaction`\n\nThat's one way, although I think it may be overkill. How about catching if a bool is passed, and then returning an error message telling the user to set 'maxreerate' to 0, which maintains exactly the same behaviour. Code:\n\n```\n    // TODO: temporary migration code for old clients. Remove in v0.21\n    if (request.params",https://github.com/bitcoin/bitcoin/pull/13541#discussion_r259424604,259424604,src/rpc/rawtransaction.cpp
kallewoof,2019-02-25T04:56:05Z,It was in the wrong commit. It's used for `FormatMoney` in RPC helps.,https://github.com/bitcoin/bitcoin/pull/13541#discussion_r259676810,259676810,src/rpc/rawtransaction.cpp
kallewoof,2019-02-25T05:00:35Z,"I think the throw behavior makes sense, unless we hear complaints. I'll put that in. Thanks for code example.",https://github.com/bitcoin/bitcoin/pull/13541#discussion_r259677382,259677382,src/rpc/rawtransaction.cpp
MarcoFalke,2019-02-25T18:47:10Z,"in commit 9e6f7875f27e632fe38518cff59ff61ce48dded6\n\nWhy is this removed, it should stay here with the comment ""checked later"". See also `git grep 'checked later'`",https://github.com/bitcoin/bitcoin/pull/13541#discussion_r259965881,259965881,src/rpc/rawtransaction.cpp
MarcoFalke,2019-02-25T18:49:44Z,"In commit 9e6f7875f27e632fe38518cff59ff61ce48dded6\n\nWrong error message. Could remove the `isBool` check above and use that error message?",https://github.com/bitcoin/bitcoin/pull/13541#discussion_r259966920,259966920,src/rpc/rawtransaction.cpp
MarcoFalke,2019-02-25T18:50:58Z,"in commit 9e6f7875f27e632fe38518cff59ff61ce48dded6\n\nnit: Should be 0 and use named args?",https://github.com/bitcoin/bitcoin/pull/13541#discussion_r259967437,259967437,test/functional/feature_fee_estimation.py
MarcoFalke,2019-02-25T18:51:09Z,same,https://github.com/bitcoin/bitcoin/pull/13541#discussion_r259967491,259967491,test/functional/feature_fee_estimation.py
MarcoFalke,2019-02-25T18:54:35Z,Also could add a test for this error string when passing a bool? Maybe `rpc_deprecated` or anywhere else?,https://github.com/bitcoin/bitcoin/pull/13541#discussion_r259968783,259968783,src/rpc/rawtransaction.cpp
MarcoFalke,2019-02-25T18:55:06Z,"In commit 685f2f54866e14f79d56c1220abbd37e23b709d8\n\nSame as above",https://github.com/bitcoin/bitcoin/pull/13541#discussion_r259969045,259969045,src/rpc/rawtransaction.cpp
MarcoFalke,2019-02-25T18:55:30Z,"in commit 685f2f54866e14f79d56c1220abbd37e23b709d8\n\nSame as above",https://github.com/bitcoin/bitcoin/pull/13541#discussion_r259969188,259969188,src/rpc/rawtransaction.cpp
MarcoFalke,2019-02-25T19:01:09Z,"in commit 349860df8695ff0ad657a3d6d1502edb46571174\n\nThis is undocumented, but I am also not sure if it is a desired feature. Might want to split out as a separate pull request after the first part is merged?",https://github.com/bitcoin/bitcoin/pull/13541#discussion_r259971384,259971384,src/rpc/rawtransaction.cpp
jnewbery,2019-02-26T20:29:14Z,remove this (and same for `testmempoolaccept` below),https://github.com/bitcoin/bitcoin/pull/13541#discussion_r260473306,260473306,src/rpc/client.cpp
jnewbery,2019-02-26T20:31:05Z,"Agree that this is the wrong error message, but I think it makes sense to keep the `isBool` check above, so it can be removed cleanly in a future version.",https://github.com/bitcoin/bitcoin/pull/13541#discussion_r260473959,260473959,src/rpc/rawtransaction.cpp
jnewbery,2019-02-26T20:31:38Z,remove `allowhighfees` (and same for `testmempoolaccept` below),https://github.com/bitcoin/bitcoin/pull/13541#discussion_r260474145,260474145,src/rpc/rawtransaction.cpp
jnewbery,2019-02-27T16:10:31Z,I agree that this is unnecessary in this PR. Happy to review in a follow-up PR.,https://github.com/bitcoin/bitcoin/pull/13541#discussion_r260822739,260822739,src/rpc/rawtransaction.cpp
kallewoof,2019-03-04T07:22:41Z,Got it!,https://github.com/bitcoin/bitcoin/pull/13541#discussion_r261943242,261943242,src/rpc/rawtransaction.cpp
kallewoof,2019-03-04T07:26:08Z,Fixed error message.,https://github.com/bitcoin/bitcoin/pull/13541#discussion_r261943901,261943901,src/rpc/rawtransaction.cpp
kallewoof,2019-03-04T07:27:28Z,"Thanks, fixed!",https://github.com/bitcoin/bitcoin/pull/13541#discussion_r261944178,261944178,test/functional/feature_fee_estimation.py
kallewoof,2019-03-04T07:34:18Z,"I think it makes sense to keep until we remove the bool check, in case somebody is using named style, or is that unnecessary?",https://github.com/bitcoin/bitcoin/pull/13541#discussion_r261945539,261945539,src/rpc/client.cpp
MarcoFalke,2019-03-05T14:16:44Z,"`bytes_to_hex_str` has been removed. Sorry, needs rebase again :(",https://github.com/bitcoin/bitcoin/pull/13541#discussion_r262515156,262515156,test/functional/feature_cltv.py
kallewoof,2019-03-06T01:00:32Z,NP! Rebased.,https://github.com/bitcoin/bitcoin/pull/13541#discussion_r262754605,262754605,test/functional/feature_cltv.py
MarcoFalke,2019-03-07T18:10:16Z,"```suggestion\n    // TODO: temporary migration code for old clients. Remove in v0.20\n```\n\nReleased in 0.19.0, so can be removed in 0.20.0?",https://github.com/bitcoin/bitcoin/pull/13541#discussion_r263503806,263503806,src/rpc/rawtransaction.cpp
MarcoFalke,2019-03-07T18:10:43Z,"```suggestion\n        txId = self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), 1.0)\n```\n\nCould inline addr",https://github.com/bitcoin/bitcoin/pull/13541#discussion_r263503953,263503953,test/functional/rpc_rawtransaction.py
MarcoFalke,2019-03-18T17:25:39Z,"re-utACK 7abd2e697c0f8e93245e09ac853bae05d0b48bee\n\n\nSorry I only noticed this unused method in this hunk after merge :crying_cat_face:.",https://github.com/bitcoin/bitcoin/pull/13541#discussion_r266555476,266555476,src/validation.cpp
