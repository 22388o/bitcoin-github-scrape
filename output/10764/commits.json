[
  {
    "sha": "a673c258faa221b891e99ead6a0f381fe6a262ac",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNjczYzI1OGZhYTIyMWI4OTFlOTllYWQ2YTBmMzgxZmU2YTI2MmFj",
    "commit": {
      "author": {
        "name": "Ren\u00e9 Nyffenegger",
        "email": "rene.nyffenegger@adp-gmbh.ch",
        "date": "2017-07-07T12:46:12Z"
      },
      "committer": {
        "name": "Ren\u00e9 Nyffenegger",
        "email": "rene.nyffenegger@adp-gmbh.ch",
        "date": "2017-07-07T12:46:12Z"
      },
      "message": "For testing, address placement should be deterministic by default",
      "tree": {
        "sha": "c20b56e8fa293cfa3a5611caf41aaa074a133646",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c20b56e8fa293cfa3a5611caf41aaa074a133646"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a673c258faa221b891e99ead6a0f381fe6a262ac",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a673c258faa221b891e99ead6a0f381fe6a262ac",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a673c258faa221b891e99ead6a0f381fe6a262ac",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a673c258faa221b891e99ead6a0f381fe6a262ac/comments",
    "author": {
      "login": "ReneNyffenegger",
      "id": 1092660,
      "node_id": "MDQ6VXNlcjEwOTI2NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1092660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ReneNyffenegger",
      "html_url": "https://github.com/ReneNyffenegger",
      "followers_url": "https://api.github.com/users/ReneNyffenegger/followers",
      "following_url": "https://api.github.com/users/ReneNyffenegger/following{/other_user}",
      "gists_url": "https://api.github.com/users/ReneNyffenegger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ReneNyffenegger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ReneNyffenegger/subscriptions",
      "organizations_url": "https://api.github.com/users/ReneNyffenegger/orgs",
      "repos_url": "https://api.github.com/users/ReneNyffenegger/repos",
      "events_url": "https://api.github.com/users/ReneNyffenegger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ReneNyffenegger/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ReneNyffenegger",
      "id": 1092660,
      "node_id": "MDQ6VXNlcjEwOTI2NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1092660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ReneNyffenegger",
      "html_url": "https://github.com/ReneNyffenegger",
      "followers_url": "https://api.github.com/users/ReneNyffenegger/followers",
      "following_url": "https://api.github.com/users/ReneNyffenegger/following{/other_user}",
      "gists_url": "https://api.github.com/users/ReneNyffenegger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ReneNyffenegger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ReneNyffenegger/subscriptions",
      "organizations_url": "https://api.github.com/users/ReneNyffenegger/orgs",
      "repos_url": "https://api.github.com/users/ReneNyffenegger/repos",
      "events_url": "https://api.github.com/users/ReneNyffenegger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ReneNyffenegger/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1d4805ce04645f3203b0cfd3d66ea710e7433eb4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1d4805ce04645f3203b0cfd3d66ea710e7433eb4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1d4805ce04645f3203b0cfd3d66ea710e7433eb4"
      }
    ],
    "stats": {
      "total": 35,
      "additions": 1,
      "deletions": 34
    },
    "files": [
      {
        "sha": "d1bbed9f325c58ce172e6e8edae3554c066ab1db",
        "filename": "src/test/addrman_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 34,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a673c258faa221b891e99ead6a0f381fe6a262ac/src/test/addrman_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a673c258faa221b891e99ead6a0f381fe6a262ac/src/test/addrman_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/addrman_tests.cpp?ref=a673c258faa221b891e99ead6a0f381fe6a262ac",
        "patch": "@@ -15,7 +15,7 @@ class CAddrManTest : public CAddrMan\n     uint64_t state;\n \n public:\n-    CAddrManTest()\n+    CAddrManTest(bool makeDeterministic=true)\n     {\n         state = 1;\n     }\n@@ -79,9 +79,6 @@ BOOST_AUTO_TEST_CASE(addrman_simple)\n {\n     CAddrManTest addrman;\n \n-    // Set addrman addr placement to be deterministic.\n-    addrman.MakeDeterministic();\n-\n     CNetAddr source = ResolveIP(\"252.2.2.2\");\n \n     // Test: Does Addrman respond correctly when empty.\n@@ -131,9 +128,6 @@ BOOST_AUTO_TEST_CASE(addrman_ports)\n {\n     CAddrManTest addrman;\n \n-    // Set addrman addr placement to be deterministic.\n-    addrman.MakeDeterministic();\n-\n     CNetAddr source = ResolveIP(\"252.2.2.2\");\n \n     BOOST_CHECK_EQUAL(addrman.size(), 0);\n@@ -163,9 +157,6 @@ BOOST_AUTO_TEST_CASE(addrman_select)\n {\n     CAddrManTest addrman;\n \n-    // Set addrman addr placement to be deterministic.\n-    addrman.MakeDeterministic();\n-\n     CNetAddr source = ResolveIP(\"252.2.2.2\");\n \n     // Test: Select from new with 1 addr in new.\n@@ -225,9 +216,6 @@ BOOST_AUTO_TEST_CASE(addrman_new_collisions)\n {\n     CAddrManTest addrman;\n \n-    // Set addrman addr placement to be deterministic.\n-    addrman.MakeDeterministic();\n-\n     CNetAddr source = ResolveIP(\"252.2.2.2\");\n \n     BOOST_CHECK_EQUAL(addrman.size(), 0);\n@@ -254,9 +242,6 @@ BOOST_AUTO_TEST_CASE(addrman_tried_collisions)\n {\n     CAddrManTest addrman;\n \n-    // Set addrman addr placement to be deterministic.\n-    addrman.MakeDeterministic();\n-\n     CNetAddr source = ResolveIP(\"252.2.2.2\");\n \n     BOOST_CHECK_EQUAL(addrman.size(), 0);\n@@ -284,9 +269,6 @@ BOOST_AUTO_TEST_CASE(addrman_find)\n {\n     CAddrManTest addrman;\n \n-    // Set addrman addr placement to be deterministic.\n-    addrman.MakeDeterministic();\n-\n     BOOST_CHECK_EQUAL(addrman.size(), 0);\n \n     CAddress addr1 = CAddress(ResolveService(\"250.1.2.1\", 8333), NODE_NONE);\n@@ -320,9 +302,6 @@ BOOST_AUTO_TEST_CASE(addrman_create)\n {\n     CAddrManTest addrman;\n \n-    // Set addrman addr placement to be deterministic.\n-    addrman.MakeDeterministic();\n-\n     BOOST_CHECK_EQUAL(addrman.size(), 0);\n \n     CAddress addr1 = CAddress(ResolveService(\"250.1.2.1\", 8333), NODE_NONE);\n@@ -343,9 +322,6 @@ BOOST_AUTO_TEST_CASE(addrman_delete)\n {\n     CAddrManTest addrman;\n \n-    // Set addrman addr placement to be deterministic.\n-    addrman.MakeDeterministic();\n-\n     BOOST_CHECK_EQUAL(addrman.size(), 0);\n \n     CAddress addr1 = CAddress(ResolveService(\"250.1.2.1\", 8333), NODE_NONE);\n@@ -366,9 +342,6 @@ BOOST_AUTO_TEST_CASE(addrman_getaddr)\n {\n     CAddrManTest addrman;\n \n-    // Set addrman addr placement to be deterministic.\n-    addrman.MakeDeterministic();\n-\n     // Test: Sanity check, GetAddr should never return anything if addrman\n     //  is empty.\n     BOOST_CHECK_EQUAL(addrman.size(), 0);\n@@ -430,9 +403,6 @@ BOOST_AUTO_TEST_CASE(caddrinfo_get_tried_bucket)\n {\n     CAddrManTest addrman;\n \n-    // Set addrman addr placement to be deterministic.\n-    addrman.MakeDeterministic();\n-\n     CAddress addr1 = CAddress(ResolveService(\"250.1.1.1\", 8333), NODE_NONE);\n     CAddress addr2 = CAddress(ResolveService(\"250.1.1.1\", 9999), NODE_NONE);\n \n@@ -487,9 +457,6 @@ BOOST_AUTO_TEST_CASE(caddrinfo_get_new_bucket)\n {\n     CAddrManTest addrman;\n \n-    // Set addrman addr placement to be deterministic.\n-    addrman.MakeDeterministic();\n-\n     CAddress addr1 = CAddress(ResolveService(\"250.1.2.1\", 8333), NODE_NONE);\n     CAddress addr2 = CAddress(ResolveService(\"250.1.2.1\", 9999), NODE_NONE);\n "
      }
    ]
  }
]