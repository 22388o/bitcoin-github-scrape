laanwj,2014-06-25T05:15:06Z,"'syncheight' looks like very useful information, will merge this into my testing nodes.\n",https://github.com/bitcoin/bitcoin/pull/4407#issuecomment-47061352,47061352,
jgarzik,2014-06-26T13:46:20Z,"Looks OK to me...  but it makes me nervous to add additional places in the code where a ""valid hash equalling zero"" may accidentally trigger undesired behavior.\n\nThere was some discussion on IRC of separating uint256 and opaque_hash types.  If such were the case, this code would not compile.\n",https://github.com/bitcoin/bitcoin/pull/4407#issuecomment-47227142,47227142,
gavinandresen,2014-06-26T15:11:28Z,ACK after code review and compiling/running/syncing a week's worth of blocks on OSX.\n,https://github.com/bitcoin/bitcoin/pull/4407#issuecomment-47238276,47238276,
sipa,2014-06-29T15:41:11Z,"Rebased.\n\n@laanwj Any suggestion for a better method name, as the current name seems to confuse you? Maybe ""ProcessBlockAvailability"" ?\n",https://github.com/bitcoin/bitcoin/pull/4407#issuecomment-47458228,47458228,
laanwj,2014-06-29T16:02:29Z,"@sipa Another option would be to split the function in two, an UpdateBlockAvailablity(node) for the first part and a ProcessBlockAvailability(node, hash) for the second part (or better names). That would remove the need for special-casing uint256(0) as well.\n",https://github.com/bitcoin/bitcoin/pull/4407#issuecomment-47458780,47458780,
sipa,2014-06-29T18:58:58Z,"@laanwj Good idea, done.\n",https://github.com/bitcoin/bitcoin/pull/4407#issuecomment-47467946,47467946,
BitcoinPullTester,2014-06-29T20:06:35Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/p4407_aa815647005bc8467f467c35a9e617794446cd64/ for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-te",https://github.com/bitcoin/bitcoin/pull/4407#issuecomment-47472334,47472334,
laanwj,2014-06-27T08:16:11Z,I have problems wrapping my head around this one. Why is the knowledge of block availability of the node set to 0 here at this point in SendMessage?\n,https://github.com/bitcoin/bitcoin/pull/4407#discussion_r14283371,14283371,src/main.cpp
sipa,2014-06-27T09:12:33Z,"There is no new information in this case, but hashLastUnknownBlock may\nafter a while refer to a known one, so we want to update hashBestKnownBlock\nin that case. It's just done here because SendMessages is called\nperiodically.\n",https://github.com/bitcoin/bitcoin/pull/4407#discussion_r14284880,14284880,src/main.cpp
