[
  {
    "sha": "b1f15b218be8dfd1d2dbd375d469794bb7326748",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMWYxNWIyMThiZThkZmQxZDJkYmQzNzVkNDY5Nzk0YmI3MzI2NzQ4",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2013-06-13T20:28:03Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2013-06-13T20:28:03Z"
      },
      "message": "Remove broken option to skip input checking for wallet txn.",
      "tree": {
        "sha": "352477d43c623219e262d3e9db5149ab01e1ba76",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/352477d43c623219e262d3e9db5149ab01e1ba76"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b1f15b218be8dfd1d2dbd375d469794bb7326748",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b1f15b218be8dfd1d2dbd375d469794bb7326748",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b1f15b218be8dfd1d2dbd375d469794bb7326748",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b1f15b218be8dfd1d2dbd375d469794bb7326748/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d1020b780a1493c6a709f70756b2af54a7126f40",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d1020b780a1493c6a709f70756b2af54a7126f40",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d1020b780a1493c6a709f70756b2af54a7126f40"
      }
    ],
    "stats": {
      "total": 31,
      "additions": 15,
      "deletions": 16
    },
    "files": [
      {
        "sha": "f0c08d273fc9ac5cbc814d8f1d48067dd9aeb0aa",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 10,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b1f15b218be8dfd1d2dbd375d469794bb7326748/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b1f15b218be8dfd1d2dbd375d469794bb7326748/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=b1f15b218be8dfd1d2dbd375d469794bb7326748",
        "patch": "@@ -694,7 +694,7 @@ void CTxMemPool::pruneSpent(const uint256 &hashTx, CCoins &coins)\n     }\n }\n \n-bool CTxMemPool::accept(CValidationState &state, CTransaction &tx, bool fCheckInputs, bool fLimitFree,\n+bool CTxMemPool::accept(CValidationState &state, CTransaction &tx, bool fLimitFree,\n                         bool* pfMissingInputs)\n {\n     if (pfMissingInputs)\n@@ -751,7 +751,6 @@ bool CTxMemPool::accept(CValidationState &state, CTransaction &tx, bool fCheckIn\n         }\n     }\n \n-    if (fCheckInputs)\n     {\n         CCoinsView dummy;\n         CCoinsViewCache view(dummy);\n@@ -968,15 +967,15 @@ int CMerkleTx::GetBlocksToMaturity() const\n }\n \n \n-bool CMerkleTx::AcceptToMemoryPool(bool fCheckInputs, bool fLimitFree)\n+bool CMerkleTx::AcceptToMemoryPool(bool fLimitFree)\n {\n     CValidationState state;\n-    return mempool.accept(state, *this, fCheckInputs, fLimitFree, NULL);\n+    return mempool.accept(state, *this, fLimitFree, NULL);\n }\n \n \n \n-bool CWalletTx::AcceptWalletTransaction(bool fCheckInputs)\n+bool CWalletTx::AcceptWalletTransaction()\n {\n     {\n         LOCK(mempool.cs);\n@@ -987,10 +986,10 @@ bool CWalletTx::AcceptWalletTransaction(bool fCheckInputs)\n             {\n                 uint256 hash = tx.GetHash();\n                 if (!mempool.exists(hash) && pcoinsTip->HaveCoins(hash))\n-                    tx.AcceptToMemoryPool(fCheckInputs, false);\n+                    tx.AcceptToMemoryPool(false);\n             }\n         }\n-        return AcceptToMemoryPool(fCheckInputs, false);\n+        return AcceptToMemoryPool(false);\n     }\n     return false;\n }\n@@ -1865,7 +1864,7 @@ bool SetBestChain(CValidationState &state, CBlockIndex* pindexNew)\n     BOOST_FOREACH(CTransaction& tx, vResurrect) {\n         // ignore validation errors in resurrected transactions\n         CValidationState stateDummy;\n-        mempool.accept(stateDummy, tx, true, false, NULL);\n+        mempool.accept(stateDummy, tx, false, NULL);\n     }\n \n     // Delete redundant memory transactions that are in the connected branch\n@@ -3507,7 +3506,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n \n         bool fMissingInputs = false;\n         CValidationState state;\n-        if (mempool.accept(state, tx, true, true, &fMissingInputs))\n+        if (mempool.accept(state, tx, true, &fMissingInputs))\n         {\n             RelayTransaction(tx, inv.hash, vMsg);\n             mapAlreadyAskedFor.erase(inv);\n@@ -3530,7 +3529,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n                     // Use a dummy CValidationState so someone can't setup nodes to counter-DoS based on orphan resolution (that is, feeding people an invalid transaction based on LegitTxX in order to get anyone relaying LegitTxX banned)\n                     CValidationState stateDummy;\n \n-                    if (mempool.accept(stateDummy, tx, true, true, &fMissingInputs2))\n+                    if (mempool.accept(stateDummy, tx, true, &fMissingInputs2))\n                     {\n                         printf(\"   accepted orphan tx %s\\n\", inv.hash.ToString().c_str());\n                         RelayTransaction(tx, inv.hash, vMsg);"
      },
      {
        "sha": "87f1dbfa8fddd9149b132c84223628b70c3c3041",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b1f15b218be8dfd1d2dbd375d469794bb7326748/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b1f15b218be8dfd1d2dbd375d469794bb7326748/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=b1f15b218be8dfd1d2dbd375d469794bb7326748",
        "patch": "@@ -478,7 +478,7 @@ class CMerkleTx : public CTransaction\n     int GetDepthInMainChain() const { CBlockIndex *pindexRet; return GetDepthInMainChain(pindexRet); }\n     bool IsInMainChain() const { return GetDepthInMainChain() > 0; }\n     int GetBlocksToMaturity() const;\n-    bool AcceptToMemoryPool(bool fCheckInputs=true, bool fLimitFree=true);\n+    bool AcceptToMemoryPool(bool fLimitFree=true);\n };\n \n \n@@ -1334,7 +1334,7 @@ class CTxMemPool\n     std::map<uint256, CTransaction> mapTx;\n     std::map<COutPoint, CInPoint> mapNextTx;\n \n-    bool accept(CValidationState &state, CTransaction &tx, bool fCheckInputs, bool fLimitFree, bool* pfMissingInputs);\n+    bool accept(CValidationState &state, CTransaction &tx, bool fLimitFree, bool* pfMissingInputs);\n     bool addUnchecked(const uint256& hash, CTransaction &tx);\n     bool remove(const CTransaction &tx, bool fRecursive = false);\n     bool removeConflicts(const CTransaction &tx);"
      },
      {
        "sha": "61cb4e390e23d1650489716b1eb0c0ca9d3399b0",
        "filename": "src/rpcrawtransaction.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b1f15b218be8dfd1d2dbd375d469794bb7326748/src/rpcrawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b1f15b218be8dfd1d2dbd375d469794bb7326748/src/rpcrawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcrawtransaction.cpp?ref=b1f15b218be8dfd1d2dbd375d469794bb7326748",
        "patch": "@@ -555,7 +555,7 @@ Value sendrawtransaction(const Array& params, bool fHelp)\n         if (!fHave) {\n             // push to local node\n             CValidationState state;\n-            if (!mempool.accept(state, tx, true, false, NULL))\n+            if (!mempool.accept(state, tx, false, NULL))\n                 throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"TX rejected\"); // TODO: report validation state\n         }\n     }"
      },
      {
        "sha": "4cd04bb6e237b97d76d3ee5c09953f9fe57dddfc",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b1f15b218be8dfd1d2dbd375d469794bb7326748/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b1f15b218be8dfd1d2dbd375d469794bb7326748/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=b1f15b218be8dfd1d2dbd375d469794bb7326748",
        "patch": "@@ -852,7 +852,7 @@ void CWallet::ReacceptWalletTransactions()\n             {\n                 // Re-accept any txes of ours that aren't already in a block\n                 if (!wtx.IsCoinBase())\n-                    wtx.AcceptWalletTransaction(false);\n+                    wtx.AcceptWalletTransaction();\n             }\n         }\n         if (fMissing)\n@@ -1365,7 +1365,7 @@ bool CWallet::CommitTransaction(CWalletTx& wtxNew, CReserveKey& reservekey)\n         mapRequestCount[wtxNew.GetHash()] = 0;\n \n         // Broadcast\n-        if (!wtxNew.AcceptToMemoryPool(true, false))\n+        if (!wtxNew.AcceptToMemoryPool(false))\n         {\n             // This must not fail. The transaction has already been signed and recorded.\n             printf(\"CommitTransaction() : Error: Transaction not valid\");"
      },
      {
        "sha": "2b3131261c9adc701313d264462bb718714977bd",
        "filename": "src/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b1f15b218be8dfd1d2dbd375d469794bb7326748/src/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b1f15b218be8dfd1d2dbd375d469794bb7326748/src/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.h?ref=b1f15b218be8dfd1d2dbd375d469794bb7326748",
        "patch": "@@ -689,7 +689,7 @@ class CWalletTx : public CMerkleTx\n     int GetRequestCount() const;\n \n     void AddSupportingTransactions();\n-    bool AcceptWalletTransaction(bool fCheckInputs=true);\n+    bool AcceptWalletTransaction();\n     void RelayWalletTransaction();\n };\n "
      }
    ]
  }
]