[
  {
    "sha": "ed18ff357c821874ea7935f0a9283c026fa5efcb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplZDE4ZmYzNTdjODIxODc0ZWE3OTM1ZjBhOTI4M2MwMjZmYTVlZmNi",
    "commit": {
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2019-07-17T08:14:18Z"
      },
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2019-08-16T11:04:49Z"
      },
      "message": "consensus: skip genesis block POW check\n\nIt's been on the agenda for some time to disable POW check for genesis block. As signet blocks will not have valid proof of work for the genesis block, it makes sense to do this change unconditionally.",
      "tree": {
        "sha": "ce665fc0d5c3f0577c5cfe1c43f728049a61e25c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ce665fc0d5c3f0577c5cfe1c43f728049a61e25c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ed18ff357c821874ea7935f0a9283c026fa5efcb",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEExCr/fGGz5EoUVM01V692LbM1MyIFAl1WjdEACgkQV692LbM1\nMyLreA//cPfYCfInfJ+J7zDuhuZ0wAdrzyWPCXl6XFWFgAaEAY4+SktdA2adqAw8\n//ZiZk7xd57Q3jUCyv6/GXE2M9dia5A9c0f3e1BEqWtnvi8QwNIfrp/VqvW9OLTO\nb/V6fStl0BfF6ap6mVBdRIDw7m0qf7eo8iLXciykgzdX9pIO/QfZ5K6RVrwmpXsh\nCB6EzyxulBE4851/ov9FmxIB6J4RY1KXAVZAx2q3/y47hq9X4BtM+tUrf1Yx9TyY\nIgQEQrcQ0mWADTsONB8AGQtPeyECbUtyeawVqaHnOxQQFO5wn+AIiQsB7zsbajod\nMJTJFXkN1Nfpp3gwH9C7Ua8aGwUjRSavilR3ka2ViN8kvqYGZyLs9ASuYaVzOk/Q\n3FdLhm+fyS5tlrZ40uKWgNUcmHZdL3BkSqZrzHvdI6R32Xn04Uv5/1q+bgKBY+GX\n15LirRXsGBvMTvIqk/eSvckZ6WQflPLOJjIkoANS+6Ri0zbIROzTliXqu4jIzgUA\nhBDkYV8wVDlnkFZgLSf9YRpEoR52rkF1MVGhO05PUARysaM9ZG8sldG33hOGyADh\nnsGE5PCii4U6fdAhq/2Gp1tDVULAWjpnRhXZFdlcyPj3BnWgjP+z40QS92ATqdlW\nyVw3fVm8iagoTkeEGrYiiYx5c3+Sttn6VaetYN/m9oaVcMxADyY=\n=c1EF\n-----END PGP SIGNATURE-----",
        "payload": "tree ce665fc0d5c3f0577c5cfe1c43f728049a61e25c\nparent 1bf2ff2bf8e8bef3ba21e635aabb1b0964062743\nauthor Karl-Johan Alm <karljohan-alm@garage.co.jp> 1563351258 +0900\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1565953489 +0900\n\nconsensus: skip genesis block POW check\n\nIt's been on the agenda for some time to disable POW check for genesis block. As signet blocks will not have valid proof of work for the genesis block, it makes sense to do this change unconditionally.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ed18ff357c821874ea7935f0a9283c026fa5efcb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ed18ff357c821874ea7935f0a9283c026fa5efcb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ed18ff357c821874ea7935f0a9283c026fa5efcb/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1bf2ff2bf8e8bef3ba21e635aabb1b0964062743",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1bf2ff2bf8e8bef3ba21e635aabb1b0964062743",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1bf2ff2bf8e8bef3ba21e635aabb1b0964062743"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 11,
      "deletions": 5
    },
    "files": [
      {
        "sha": "638a30797e944be9980e1109641dc470ba8cee2c",
        "filename": "src/txdb.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ed18ff357c821874ea7935f0a9283c026fa5efcb/src/txdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ed18ff357c821874ea7935f0a9283c026fa5efcb/src/txdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txdb.cpp?ref=ed18ff357c821874ea7935f0a9283c026fa5efcb",
        "patch": "@@ -274,7 +274,7 @@ bool CBlockTreeDB::LoadBlockIndexGuts(const Consensus::Params& consensusParams,\n                 pindexNew->nStatus        = diskindex.nStatus;\n                 pindexNew->nTx            = diskindex.nTx;\n \n-                if (!CheckProofOfWork(pindexNew->GetBlockHash(), pindexNew->nBits, consensusParams))\n+                if (pindexNew->GetBlockHash() != consensusParams.hashGenesisBlock && !CheckProofOfWork(pindexNew->GetBlockHash(), pindexNew->nBits, consensusParams))\n                     return error(\"%s: CheckProofOfWork failed: %s\", __func__, pindexNew->ToString());\n \n                 pcursor->Next();"
      },
      {
        "sha": "9a885063b80c27b2c611022bc270b7f456087c63",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 4,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ed18ff357c821874ea7935f0a9283c026fa5efcb/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ed18ff357c821874ea7935f0a9283c026fa5efcb/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=ed18ff357c821874ea7935f0a9283c026fa5efcb",
        "patch": "@@ -964,9 +964,12 @@ bool ReadBlockFromDisk(CBlock& block, const FlatFilePos& pos, const Consensus::P\n         return error(\"%s: Deserialize or I/O error - %s at %s\", __func__, e.what(), pos.ToString());\n     }\n \n-    // Check the header\n-    if (!CheckProofOfWork(block.GetHash(), block.nBits, consensusParams))\n-        return error(\"ReadBlockFromDisk: Errors in block header at %s\", pos.ToString());\n+    // We skip POW checks for genesis block\n+    if (block.GetHash() != consensusParams.hashGenesisBlock) {\n+        // Check the header\n+        if (!CheckProofOfWork(block.GetHash(), block.nBits, consensusParams))\n+            return error(\"ReadBlockFromDisk: Errors in block header at %s\", pos.ToString());\n+    }\n \n     return true;\n }\n@@ -3031,9 +3034,12 @@ bool CheckBlock(const CBlock& block, CValidationState& state, const Consensus::P\n     if (block.fChecked)\n         return true;\n \n+    // We skip POW checks for genesis block; note that we make a new flag, as we want the\n+    // fChecked to be set at the end, regardless\n+    auto really_check_pow = fCheckPOW && block.GetHash() != consensusParams.hashGenesisBlock;\n     // Check that the header is valid (particularly PoW).  This is mostly\n     // redundant with the call in AcceptBlockHeader.\n-    if (!CheckBlockHeader(block, state, consensusParams, fCheckPOW))\n+    if (!CheckBlockHeader(block, state, consensusParams, really_check_pow))\n         return false;\n \n     // Check the merkle root."
      }
    ]
  }
]