[
  {
    "sha": "ab123ad4d6da65800a1cf4cf45a7171d97a77254",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphYjEyM2FkNGQ2ZGE2NTgwMGExY2Y0Y2Y0NWE3MTcxZDk3YTc3MjU0",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2014-06-04T03:42:53Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2014-07-18T02:13:40Z"
      },
      "message": "build: allow linux and osx to build against static qt5\n\nThis is the first part of a huge effort to rework the handling of dependencies.\nTo start, this change allows all supported platforms to build against a static\nQt. 5.2.1 and 5.3 have been successfully tested against osx64, win32, win64,\nlinux32, and linux64.\n\nIt also makes a small change to the windows config, to allow linking against\nqt builds with or without built-in libjpeg/libpng/libpcre/libz.\n\nThe actual build processes to take advantage of these changes (for gitian and\npull-tester) are coming soon. Until then, this should be a no-op.",
      "tree": {
        "sha": "432d9ff42ceed9a7f4f3ed37649c04d01fc04550",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/432d9ff42ceed9a7f4f3ed37649c04d01fc04550"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ab123ad4d6da65800a1cf4cf45a7171d97a77254",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ab123ad4d6da65800a1cf4cf45a7171d97a77254",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ab123ad4d6da65800a1cf4cf45a7171d97a77254",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ab123ad4d6da65800a1cf4cf45a7171d97a77254/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e8d4cb807169dd56e8efc753521a94368dd2f69d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e8d4cb807169dd56e8efc753521a94368dd2f69d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e8d4cb807169dd56e8efc753521a94368dd2f69d"
      }
    ],
    "stats": {
      "total": 116,
      "additions": 70,
      "deletions": 46
    },
    "files": [
      {
        "sha": "b454ac515f697f71f5f09d6a125fe8676503347a",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ab123ad4d6da65800a1cf4cf45a7171d97a77254/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ab123ad4d6da65800a1cf4cf45a7171d97a77254/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=ab123ad4d6da65800a1cf4cf45a7171d97a77254",
        "patch": "@@ -258,6 +258,9 @@ case $host in\n \n      CPPFLAGS=\"$CPPFLAGS -DMAC_OSX\"\n      ;;\n+   *linux*)\n+     TARGET_OS=linux\n+     ;;\n    *)\n      ;;\n esac"
      },
      {
        "sha": "3499a09b7ba957ec753973e9d5207f0a9763367a",
        "filename": "src/m4/bitcoin_qt.m4",
        "status": "modified",
        "additions": 61,
        "deletions": 46,
        "changes": 107,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ab123ad4d6da65800a1cf4cf45a7171d97a77254/src/m4/bitcoin_qt.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ab123ad4d6da65800a1cf4cf45a7171d97a77254/src/m4/bitcoin_qt.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/m4/bitcoin_qt.m4?ref=ab123ad4d6da65800a1cf4cf45a7171d97a77254",
        "patch": "@@ -94,6 +94,63 @@ AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n     BITCOIN_QT_CHECK([_BITCOIN_QT_FIND_LIBS_WITHOUT_PKGCONFIG])\n   fi\n \n+  dnl This is ugly and complicated. Yuck. Works as follows:\n+  dnl We can't discern whether Qt4 builds are static or not. For Qt5, we can\n+  dnl check a header to find out. When Qt is built statically, some plugins must\n+  dnl be linked into the final binary as well. These plugins have changed between\n+  dnl Qt4 and Qt5. With Qt5, languages moved into core and the WindowsIntegration\n+  dnl plugin was added. Since we can't tell if Qt4 is static or not, it is\n+  dnl assumed for windows builds.\n+  dnl _BITCOIN_QT_CHECK_STATIC_PLUGINS does a quick link-check and appends the\n+  dnl results to QT_LIBS.\n+  BITCOIN_QT_CHECK([\n+  TEMP_CPPFLAGS=$CPPFLAGS\n+  CPPFLAGS=$QT_INCLUDES\n+  if test x$bitcoin_qt_got_major_vers == x5; then\n+    _BITCOIN_QT_IS_STATIC\n+    if test x$bitcoin_cv_static_qt == xyes; then\n+      AC_DEFINE(QT_STATICPLUGIN, 1, [Define this symbol if qt plugins are static])\n+      if test x$qt_plugin_path != x; then\n+        QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/accessible\"\n+        if test x$bitcoin_qt_got_major_vers == x5; then\n+          QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/platforms\"\n+        else\n+          QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/codecs\"\n+        fi\n+      fi\n+      if test x$use_pkgconfig = xyes; then\n+        PKG_CHECK_MODULES([QTPLATFORM], [Qt5PlatformSupport], [QT_LIBS=\"$QTPLATFORM_LIBS $QT_LIBS\"])\n+      fi\n+      _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(AccessibleFactory)], [-lqtaccessiblewidgets])\n+      if test x$TARGET_OS == xwindows; then\n+        _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QWindowsIntegrationPlugin)],[-lqwindows])\n+        AC_DEFINE(QT_QPA_PLATFORM_WINDOWS, 1, [Define this symbol if the qt platform is windows])\n+      elif test x$TARGET_OS == xlinux; then\n+        _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QXcbIntegrationPlugin)],[-lqxcb -lxcb-static -lxcb])\n+        AC_DEFINE(QT_QPA_PLATFORM_XCB, 1, [Define this symbol if the qt platform is xcb])\n+      elif test x$TARGET_OS == xdarwin; then\n+        if test x$use_pkgconfig = xyes; then\n+          PKG_CHECK_MODULES([QTPRINT], [Qt5PrintSupport], [QT_LIBS=\"$QTPRINT_LIBS $QT_LIBS\"])\n+        fi\n+        AX_CHECK_LINK_FLAG([[-framework IOKit]],[QT_LIBS=\"$QT_LIBS -framework IOKit\"],[AC_MSG_ERROR(could not iokit framework)])\n+        _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QCocoaIntegrationPlugin)],[-lqcocoa])\n+        AC_DEFINE(QT_QPA_PLATFORM_COCOA, 1, [Define this symbol if the qt platform is cocoa])\n+      fi\n+    fi\n+  else\n+    if test x$TARGET_OS == xwindows; then\n+      AC_DEFINE(QT_STATICPLUGIN, 1, [Define this symbol if qt plugins are static])\n+      _BITCOIN_QT_CHECK_STATIC_PLUGINS([\n+         Q_IMPORT_PLUGIN(qcncodecs)\n+         Q_IMPORT_PLUGIN(qjpcodecs)\n+         Q_IMPORT_PLUGIN(qtwcodecs)\n+         Q_IMPORT_PLUGIN(qkrcodecs)\n+         Q_IMPORT_PLUGIN(AccessibleFactory)],\n+         [-lqcncodecs -lqjpcodecs -lqtwcodecs -lqkrcodecs -lqtaccessiblewidgets])\n+    fi\n+  fi\n+  CPPFLAGS=$TEMP_CPPFLAGS\n+  ])\n   BITCOIN_QT_PATH_PROGS([MOC], [moc-qt${bitcoin_qt_got_major_vers} moc${bitcoin_qt_got_major_vers} moc], $qt_bin_path)\n   BITCOIN_QT_PATH_PROGS([UIC], [uic-qt${bitcoin_qt_got_major_vers} uic${bitcoin_qt_got_major_vers} uic], $qt_bin_path)\n   BITCOIN_QT_PATH_PROGS([RCC], [rcc-qt${bitcoin_qt_got_major_vers} rcc${bitcoin_qt_got_major_vers} rcc], $qt_bin_path)\n@@ -303,26 +360,15 @@ AC_DEFUN([_BITCOIN_QT_FIND_LIBS_WITHOUT_PKGCONFIG],[\n   ])\n \n   BITCOIN_QT_CHECK([\n-    LIBS=\n-    if test x$qt_lib_path != x; then\n-      LIBS=\"$LIBS -L$qt_lib_path\"\n-    fi\n-    if test x$qt_plugin_path != x; then\n-      LIBS=\"$LIBS -L$qt_plugin_path/accessible\"\n-      if test x$bitcoin_qt_got_major_vers == x5; then\n-        LIBS=\"$LIBS -L$qt_plugin_path/platforms\"\n-      else\n-        LIBS=\"$LIBS -L$qt_plugin_path/codecs\"\n-      fi\n-    fi\n-\n     if test x$TARGET_OS == xwindows; then\n       AC_CHECK_LIB([imm32],      [main],, BITCOIN_QT_FAIL(libimm32 not found))\n     fi\n   ])\n \n-  BITCOIN_QT_CHECK(AC_CHECK_LIB([z] ,[main],,BITCOIN_QT_FAIL(zlib not found)))\n-  BITCOIN_QT_CHECK(AC_CHECK_LIB([png] ,[main],,BITCOIN_QT_FAIL(png not found)))\n+  BITCOIN_QT_CHECK(AC_CHECK_LIB([z] ,[main],,AC_MSG_WARN([zlib not found. Assuming qt has it built-in])))\n+  BITCOIN_QT_CHECK(AC_CHECK_LIB([png] ,[main],,AC_MSG_WARN([libpng not found. Assuming qt has it built-in])))\n+  BITCOIN_QT_CHECK(AC_CHECK_LIB([jpeg] ,[main],,AC_MSG_WARN([libjpeg not found. Assuming qt has it built-in])))\n+  BITCOIN_QT_CHECK(AC_CHECK_LIB([pcre] ,[main],,AC_MSG_WARN([libpcre not found. Assuming qt has it built-in])))\n   BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Core]   ,[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXCore not found)))\n   BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Gui]    ,[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXGui not found)))\n   BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Network],[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXNetwork not found)))\n@@ -332,37 +378,6 @@ AC_DEFUN([_BITCOIN_QT_FIND_LIBS_WITHOUT_PKGCONFIG],[\n   QT_LIBS=\"$LIBS\"\n   LIBS=\"$TEMP_LIBS\"\n \n-  dnl This is ugly and complicated. Yuck. Works as follows:\n-  dnl We can't discern whether Qt4 builds are static or not. For Qt5, we can\n-  dnl check a header to find out. When Qt is built statically, some plugins must\n-  dnl be linked into the final binary as well. These plugins have changed between\n-  dnl Qt4 and Qt5. With Qt5, languages moved into core and the WindowsIntegration\n-  dnl plugin was added. Since we can't tell if Qt4 is static or not, it is \n-  dnl assumed for all non-pkg-config builds.\n-  dnl _BITCOIN_QT_CHECK_STATIC_PLUGINS does a quick link-check and appends the\n-  dnl results to QT_LIBS.\n-  BITCOIN_QT_CHECK([\n-    if test x$bitcoin_qt_got_major_vers == x5; then\n-      _BITCOIN_QT_IS_STATIC\n-      if test x$bitcoin_cv_static_qt == xyes; then \n-        AC_DEFINE(QT_STATICPLUGIN, 1, [Define this symbol if qt plugins are static])\n-        _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(AccessibleFactory)], [-lqtaccessiblewidgets])\n-        if test x$TARGET_OS == xwindows; then\n-          _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QWindowsIntegrationPlugin)],[-lqwindows])\n-        fi\n-      fi\n-    else\n-      AC_DEFINE(QT_STATICPLUGIN, 1, [Define this symbol if qt plugins are static])\n-      _BITCOIN_QT_CHECK_STATIC_PLUGINS([\n-         Q_IMPORT_PLUGIN(qcncodecs)\n-         Q_IMPORT_PLUGIN(qjpcodecs)\n-         Q_IMPORT_PLUGIN(qtwcodecs)\n-         Q_IMPORT_PLUGIN(qkrcodecs)\n-         Q_IMPORT_PLUGIN(AccessibleFactory)],\n-         [-lqcncodecs -lqjpcodecs -lqtwcodecs -lqkrcodecs -lqtaccessiblewidgets])\n-    fi\n-  ])\n-\n   BITCOIN_QT_CHECK([\n     LIBS=\n     if test x$qt_lib_path != x; then"
      },
      {
        "sha": "afd591efb2130be0ad0fe4432abed61012e6d159",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ab123ad4d6da65800a1cf4cf45a7171d97a77254/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ab123ad4d6da65800a1cf4cf45a7171d97a77254/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=ab123ad4d6da65800a1cf4cf45a7171d97a77254",
        "patch": "@@ -53,7 +53,13 @@ Q_IMPORT_PLUGIN(qkrcodecs)\n Q_IMPORT_PLUGIN(qtaccessiblewidgets)\n #else\n Q_IMPORT_PLUGIN(AccessibleFactory)\n+#if defined(QT_QPA_PLATFORM_XCB)\n+Q_IMPORT_PLUGIN(QXcbIntegrationPlugin);\n+#elif defined(QT_QPA_PLATFORM_WINDOWS)\n Q_IMPORT_PLUGIN(QWindowsIntegrationPlugin);\n+#elif defined(QT_QPA_PLATFORM_COCOA)\n+Q_IMPORT_PLUGIN(QCocoaIntegrationPlugin);\n+#endif\n #endif\n #endif\n "
      }
    ]
  },
  {
    "sha": "2d89ea9781d25b887b7804ee0e5749fbe044f455",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyZDg5ZWE5NzgxZDI1Yjg4N2I3ODA0ZWUwZTU3NDlmYmUwNDRmNDU1",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2014-06-04T03:43:36Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2014-07-18T02:15:21Z"
      },
      "message": "build: fix whitespace in pkg-config variable\n\nUseful for PKG_CONFIG=\"pkg-config --static\"",
      "tree": {
        "sha": "0893ad011de5a739ae8508149f6d5a43d4e2582c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0893ad011de5a739ae8508149f6d5a43d4e2582c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2d89ea9781d25b887b7804ee0e5749fbe044f455",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2d89ea9781d25b887b7804ee0e5749fbe044f455",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2d89ea9781d25b887b7804ee0e5749fbe044f455",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2d89ea9781d25b887b7804ee0e5749fbe044f455/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ab123ad4d6da65800a1cf4cf45a7171d97a77254",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ab123ad4d6da65800a1cf4cf45a7171d97a77254",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ab123ad4d6da65800a1cf4cf45a7171d97a77254"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 1,
      "deletions": 4
    },
    "files": [
      {
        "sha": "cedc34e52015764811e9324014451901751f72f8",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2d89ea9781d25b887b7804ee0e5749fbe044f455/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2d89ea9781d25b887b7804ee0e5749fbe044f455/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=2d89ea9781d25b887b7804ee0e5749fbe044f455",
        "patch": "@@ -526,7 +526,7 @@ BITCOIN_QT_INIT\n \n if test x$use_pkgconfig = xyes; then\n \n-  if test x$PKG_CONFIG == x; then\n+  if test x\"$PKG_CONFIG\" == \"x\"; then\n     AC_MSG_ERROR(pkg-config not found.)\n   fi\n "
      },
      {
        "sha": "9356aac37fbc675637dd5d91da2215fa7c035536",
        "filename": "src/m4/bitcoin_qt.m4",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2d89ea9781d25b887b7804ee0e5749fbe044f455/src/m4/bitcoin_qt.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2d89ea9781d25b887b7804ee0e5749fbe044f455/src/m4/bitcoin_qt.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/m4/bitcoin_qt.m4?ref=2d89ea9781d25b887b7804ee0e5749fbe044f455",
        "patch": "@@ -86,9 +86,6 @@ AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n   fi\n \n   if test x$use_pkgconfig = xyes; then\n-    if test x$PKG_CONFIG == x; then\n-      AC_MSG_ERROR(pkg-config not found.)\n-    fi\n     BITCOIN_QT_CHECK([_BITCOIN_QT_FIND_LIBS_WITH_PKGCONFIG([$2])])\n   else\n     BITCOIN_QT_CHECK([_BITCOIN_QT_FIND_LIBS_WITHOUT_PKGCONFIG])"
      }
    ]
  }
]