[
  {
    "sha": "88dc2d6c6a4a71297c30339fc62ce60e53df5dc8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4OGRjMmQ2YzZhNGE3MTI5N2MzMDMzOWZjNjJjZTYwZTUzZGY1ZGM4",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2012-04-21T18:15:25Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2012-04-21T18:37:50Z"
      },
      "message": "Integrate @JoelKatz's optimized ToHex (#562) into current HexStr function",
      "tree": {
        "sha": "16a02f315f0224724d67ca324e414557d121af96",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/16a02f315f0224724d67ca324e414557d121af96"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/88dc2d6c6a4a71297c30339fc62ce60e53df5dc8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/88dc2d6c6a4a71297c30339fc62ce60e53df5dc8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/88dc2d6c6a4a71297c30339fc62ce60e53df5dc8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/88dc2d6c6a4a71297c30339fc62ce60e53df5dc8/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "00b9c0f4b20f6eb714fa55eb00df326a6f74fd10",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/00b9c0f4b20f6eb714fa55eb00df326a6f74fd10",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/00b9c0f4b20f6eb714fa55eb00df326a6f74fd10"
      }
    ],
    "stats": {
      "total": 34,
      "additions": 25,
      "deletions": 9
    },
    "files": [
      {
        "sha": "0393edb1a7c3defff17fc682a53750513c0894da",
        "filename": "src/test/util_tests.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/88dc2d6c6a4a71297c30339fc62ce60e53df5dc8/src/test/util_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/88dc2d6c6a4a71297c30339fc62ce60e53df5dc8/src/test/util_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util_tests.cpp?ref=88dc2d6c6a4a71297c30339fc62ce60e53df5dc8",
        "patch": "@@ -88,8 +88,19 @@ BOOST_AUTO_TEST_CASE(util_HexStr)\n     BOOST_CHECK_EQUAL(\n         HexStr(ParseHex_expected, ParseHex_expected + 5, true),\n         \"04 67 8a fd b0\");\n+\n+    BOOST_CHECK_EQUAL(\n+        HexStr(ParseHex_expected, ParseHex_expected, true),\n+        \"\");\n+\n+    std::vector<unsigned char> ParseHex_vec(ParseHex_expected, ParseHex_expected + 5);\n+\n+    BOOST_CHECK_EQUAL(\n+        HexStr(ParseHex_vec, true),\n+        \"04 67 8a fd b0\");\n }\n \n+\n BOOST_AUTO_TEST_CASE(util_DateTimeStrFormat)\n {\n     BOOST_CHECK_EQUAL(DateTimeStrFormat(\"%x %H:%M:%S\", 0), \"01/01/70 00:00:00\");"
      },
      {
        "sha": "fe8ca60b479199a3ca6dfb7ecf9f25853eb789bf",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 14,
        "deletions": 9,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/88dc2d6c6a4a71297c30339fc62ce60e53df5dc8/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/88dc2d6c6a4a71297c30339fc62ce60e53df5dc8/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=88dc2d6c6a4a71297c30339fc62ce60e53df5dc8",
        "patch": "@@ -361,15 +361,20 @@ inline int64 abs64(int64 n)\n template<typename T>\n std::string HexStr(const T itbegin, const T itend, bool fSpaces=false)\n {\n-    if (itbegin == itend)\n-        return \"\";\n-    const unsigned char* pbegin = (const unsigned char*)&itbegin[0];\n-    const unsigned char* pend = pbegin + (itend - itbegin) * sizeof(itbegin[0]);\n-    std::string str;\n-    str.reserve((pend-pbegin) * (fSpaces ? 3 : 2));\n-    for (const unsigned char* p = pbegin; p != pend; p++)\n-        str += strprintf((fSpaces && p != pend-1 ? \"%02x \" : \"%02x\"), *p);\n-    return str;\n+    std::vector<char> rv;\n+    static char hexmap[16] = { '0', '1', '2', '3', '4', '5', '6', '7',\n+                               '8', '9', 'a', 'b', 'c', 'd', 'e', 'f' };\n+    rv.reserve((itend-itbegin)*3);\n+    for(T it = itbegin; it < itend; ++it)\n+    {\n+        unsigned char val = (unsigned char)(*it);\n+        if(fSpaces && it != itbegin)\n+            rv.push_back(' ');\n+        rv.push_back(hexmap[val>>4]);\n+        rv.push_back(hexmap[val&15]);\n+    }\n+\n+    return std::string(rv.begin(), rv.end());\n }\n \n inline std::string HexStr(const std::vector<unsigned char>& vch, bool fSpaces=false)"
      }
    ]
  }
]