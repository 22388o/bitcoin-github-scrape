[
  {
    "sha": "62bf5b785087981d9c0f8ddc8a3ceda911845a53",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2MmJmNWI3ODUwODc5ODFkOWMwZjhkZGM4YTNjZWRhOTExODQ1YTUz",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-12-24T17:09:02Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-02-02T14:22:22Z"
      },
      "message": "netinfo: add ConnectionTypeForNetinfo member helper function",
      "tree": {
        "sha": "c4637e021c2b252a2c9f3073e4153b53f9e806b2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c4637e021c2b252a2c9f3073e4153b53f9e806b2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/62bf5b785087981d9c0f8ddc8a3ceda911845a53",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAmAZYB4ACgkQT1chs9Dj\nkh0YDw/8C0p1VT+ULl2ZJAp5fYqHfmOHjGwJ9OZyDwSNmqDlUZ/eC1eq7y/GIi3I\nMXBF19aSAaSADfU7XMVAl6PLnZQQjtFfd4LjH6b/y0s8XBshGSA+6+Wljx31KY/V\ncERgDdjhNTQr3X8Bc/nDeDd2LIRymXdTEH1fuoNiN1LEcahtT1KB+uoZ/y3NqTj+\n1wwgnOdaEgnIZXHIRjgM6lGqzorSFHFjZYNyu7V1FyIbmPNSelHO7UNYrRk6ZD9W\n8BqhWRHmEAeU24o8i/KAysrcIq1Ovo7rdwlnpwnVJjzOS4cArWTuPAbbCxtiA5RS\nv2uKp2+8oeOHkTXIQcw6ruZMNgJXEjGPD3PfBMgG6giJjMvXZ7RWl1Etj+QQ1EB+\nqRNh4ji726RZv6lKH7WjyJ1otwcX2tjLMUK2+dGASGq+d1JO+8bQxxwCe1Kz5+uf\na/N9N2L9jie5saPICpbtO++kgGuvz6KPoNmH65d4i6VXZ++o79a8AsB67GVS3h77\nwPR2eYFVX1K1ezq4jFlDzRwkisGOf3Y4Si+XytTKdhZTM/XGmnsoBMukoZdDki36\nKPwlVf8Bwt5dkNIApciBIb2XE9lE60SMFazniQhQXJs7vz0HeHniXfkYa8L3rlay\nscJXl0Lf0/tfOnPbPKSagoJvCB0ssquV8ADsEvmRwqdL+zJTi+U=\n=CG+L\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIHUHkklLy0TtmypHpkSAfG3Izgc0Yz9Howv4ZRKwFFyPCP/wECT4RIdOM9o6\ngceRCVgWys4I8CDHqucJDsiM4mf9BVPFnz74bZ4G1xVKrwald+7qJmUvRAjxBGAZ\nYCDwCCjmOXBO53LHAIPf4w0u+QyOLCtodHRwczovL2JvYi5idGMuY2FsZW5kYXIu\nb3BlbnRpbWVzdGFtcHMub3Jn//AQu3Q/Z7susKa3CVhtNqfwXAjwIOJg+/MxweRg\nnx2ZUzNqiWS/URmBOBtnNZTsPyprNY3sCPEEYBlgH/AICYtrFi7yS9oAg9/jDS75\nDI4uLWh0dHBzOi8vYWxpY2UuYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9y\nZ//wEMpGAd8G9GQGYJITkJKQCvMI8CBFIpqOUYLqYJ+/WMhElkiNVXiLr8FH5NSd\nsllsYo0v/gjxBGAZYCDwCFr/sCrYmNGeAIPf4w0u+QyOIyJodHRwczovL2J0Yy5j\nYWxlbmRhci5jYXRhbGxheHkuY29t8BD+khwDN30mkVexBjuAQEGeCPAg/kPJlOJW\nO2/sVPSqljZ+HeZhfgoD57q8kpuHQoqb5/4I8QRgGVJP8Agvog8FVzFJDQCD3+MN\nLvkMjikoaHR0cHM6Ly9maW5uZXkuY2FsZW5kYXIuZXRlcm5pdHl3YWxsLmNvbQ==\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree c4637e021c2b252a2c9f3073e4153b53f9e806b2\nparent 384e090f9345c07fa81ccafa8cd36037f3cd0813\nauthor Jon Atack <jon@atack.com> 1608829742 +0100\ncommitter Jon Atack <jon@atack.com> 1612275742 +0100\n\nnetinfo: add ConnectionTypeForNetinfo member helper function\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/62bf5b785087981d9c0f8ddc8a3ceda911845a53",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/62bf5b785087981d9c0f8ddc8a3ceda911845a53",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/62bf5b785087981d9c0f8ddc8a3ceda911845a53/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "384e090f9345c07fa81ccafa8cd36037f3cd0813",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/384e090f9345c07fa81ccafa8cd36037f3cd0813",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/384e090f9345c07fa81ccafa8cd36037f3cd0813"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 8,
      "deletions": 0
    },
    "files": [
      {
        "sha": "17c6d5f78b41fbfa18fcb343d8f1c5101fe6d7f7",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62bf5b785087981d9c0f8ddc8a3ceda911845a53/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62bf5b785087981d9c0f8ddc8a3ceda911845a53/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=62bf5b785087981d9c0f8ddc8a3ceda911845a53",
        "patch": "@@ -351,6 +351,14 @@ class NetinfoRequestHandler : public BaseRequestHandler\n         const double milliseconds{round(1000 * seconds)};\n         return milliseconds > 999999 ? \"-\" : ToString(milliseconds);\n     }\n+    std::string ConnectionTypeForNetinfo(const std::string& conn_type) const\n+    {\n+        if (conn_type == \"outbound-full-relay\") return \"full\";\n+        if (conn_type == \"block-relay-only\") return \"block\";\n+        if (conn_type == \"manual\" || conn_type == \"feeler\") return conn_type;\n+        if (conn_type == \"addr-fetch\") return \"addr\";\n+        return \"\";\n+    }\n     const UniValue NetinfoHelp()\n     {\n         return std::string{"
      }
    ]
  },
  {
    "sha": "d3cca3be63afeb19a41e9892444fc6e02ea1c7c8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkM2NjYTNiZTYzYWZlYjE5YTQxZTk4OTI0NDRmYzZlMDJlYTFjN2M4",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-12-24T17:08:08Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-02-03T13:17:18Z"
      },
      "message": "netinfo: update to use peer connection types",
      "tree": {
        "sha": "563e40889baab12649494a0f2e555629bd265daa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/563e40889baab12649494a0f2e555629bd265daa"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d3cca3be63afeb19a41e9892444fc6e02ea1c7c8",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAmAaomUACgkQT1chs9Dj\nkh0WPA//dSsVle5ZZAedL1ZuijNGa9G95k5KimoY8QKwQV+aIy3UTPt/4p2EinBr\n2aOTJVs5z3tl852xmIBS9YaXrVgNZDojx77AwpkzoDKZTCeRV3DdrlhL3G3PagkN\nFecPNBgJMkDnTH/2nvwp5o7/hvJ+IBBFha8QzwvXtNqLRzILEnzCdQYQiuGJKNRj\neFP0wQZKAX/cZr6UUZiYKbUgc9D3vVCxUF7iAqRIE1i4imLqd7SnGnFhJG6Kk65U\nnVz4k4Sy8f+v+HK+R6NzCEtJdPpxrioSB9yKoegGidkZxNvwvh81PeC/1f+G3Cf6\nxZYKLPM6PlzHnjUvXi5Gbj5bqyyuA34WIB2gvLFh3w77GRtlMUf2x2Wm6HyA5z+q\nLkUlKEEBxZdSsnHZt/hhMwN5POTq+n3i1y8dr/3vIi02QapLUiO4nPt6cK4qPcRC\n0D6HaVjPnGmKJv9x5q//F51SbmhI8eIpdix9YM5zg4pV4wtjnme3qffYwwiYFsKW\nC/dLVO/V13D4716LKXMsjk6trTdeWYEf4iyErpcu/mdemR1f2k/SBUOC41shI3Ec\ndv0IYhlyYtxCg6ambLknnixTnhV0jZjEsSmIFGysPOOOqoMOfMAQ3aVl8cdIYtsv\nZPxBaOXX6oCnYQVLZcmIuott5xLO66g1ZR1N++7XUZxfvqSiZJM=\n=VzBv\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIJrEJrfNqiIBuun02XWbYPNBT3hMw+ZGzOPkzWjWiiT0CP/wECM6Mc4KcpPm\nqdS5eCvUXTII8QRgGqJo8AjvyEgTpWR8qQCD3+MNLvkMjiMiaHR0cHM6Ly9idGMu\nY2FsZW5kYXIuY2F0YWxsYXh5LmNvbf/wEJfMBXtNli9QKO0u/InOwJII8QRgGqJn\n8AiMTBb/kdS3TwCD3+MNLvkMji4taHR0cHM6Ly9hbGljZS5idGMuY2FsZW5kYXIu\nb3BlbnRpbWVzdGFtcHMub3Jn//AQ1PbGqUJ9EUxnja+6roMx6AjxBGAalJbwCCOg\nqpTpSjgbAIPf4w0u+QyOKShodHRwczovL2Zpbm5leS5jYWxlbmRhci5ldGVybml0\neXdhbGwuY29t8BDw3eoD+c3bTz3vh5j9tvofCPEEYBqiZ/AIxtuJaY3YeOkAg9/j\nDS75DI4sK2h0dHBzOi8vYm9iLmJ0Yy5jYWxlbmRhci5vcGVudGltZXN0YW1wcy5v\ncmc=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 563e40889baab12649494a0f2e555629bd265daa\nparent 62bf5b785087981d9c0f8ddc8a3ceda911845a53\nauthor Jon Atack <jon@atack.com> 1608829688 +0100\ncommitter Jon Atack <jon@atack.com> 1612358238 +0100\n\nnetinfo: update to use peer connection types\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d3cca3be63afeb19a41e9892444fc6e02ea1c7c8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d3cca3be63afeb19a41e9892444fc6e02ea1c7c8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d3cca3be63afeb19a41e9892444fc6e02ea1c7c8/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "62bf5b785087981d9c0f8ddc8a3ceda911845a53",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/62bf5b785087981d9c0f8ddc8a3ceda911845a53",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/62bf5b785087981d9c0f8ddc8a3ceda911845a53"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 11,
      "deletions": 6
    },
    "files": [
      {
        "sha": "bfd497eac07055ffff86ce2a48c5a0b525f61f3d",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 6,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d3cca3be63afeb19a41e9892444fc6e02ea1c7c8/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d3cca3be63afeb19a41e9892444fc6e02ea1c7c8/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=d3cca3be63afeb19a41e9892444fc6e02ea1c7c8",
        "patch": "@@ -322,6 +322,7 @@ class NetinfoRequestHandler : public BaseRequestHandler\n     struct Peer {\n         std::string addr;\n         std::string sub_version;\n+        std::string conn_type;\n         std::string network;\n         std::string age;\n         double min_ping;\n@@ -387,6 +388,9 @@ class NetinfoRequestHandler : public BaseRequestHandler\n             \"  type     Type of peer connection\\n\"\n             \"           \\\"full\\\"   - full relay, the default\\n\"\n             \"           \\\"block\\\"  - block relay; like full relay but does not relay transactions or addresses\\n\"\n+            \"           \\\"manual\\\" - peer we manually added using RPC addnode or the -addnode/-connect config options\\n\"\n+            \"           \\\"feeler\\\" - short-lived connection for testing addresses\\n\"\n+            \"           \\\"addr\\\"   - address fetch; short-lived connection for requesting addresses\\n\"\n             \"  net      Network the peer connected through (\\\"ipv4\\\", \\\"ipv6\\\", \\\"onion\\\", \\\"i2p\\\", or \\\"cjdns\\\")\\n\"\n             \"  mping    Minimum observed ping time, in milliseconds (ms)\\n\"\n             \"  ping     Last observed ping time, in milliseconds (ms)\\n\"\n@@ -460,11 +464,12 @@ class NetinfoRequestHandler : public BaseRequestHandler\n             if (network_id == UNKNOWN_NETWORK) continue;\n             const bool is_outbound{!peer[\"inbound\"].get_bool()};\n             const bool is_block_relay{!peer[\"relaytxes\"].get_bool()};\n+            const std::string conn_type{peer[\"connection_type\"].get_str()};\n             ++m_counts.at(is_outbound).at(network_id);      // in/out by network\n             ++m_counts.at(is_outbound).at(m_networks_size); // in/out overall\n             ++m_counts.at(2).at(network_id);                // total by network\n             ++m_counts.at(2).at(m_networks_size);           // total overall\n-            if (is_block_relay) {\n+            if (conn_type == \"block-relay-only\") {\n                 ++m_counts.at(is_outbound).at(m_networks_size + 1); // in/out block-relay\n                 ++m_counts.at(2).at(m_networks_size + 1);           // total block-relay\n             }\n@@ -483,7 +488,7 @@ class NetinfoRequestHandler : public BaseRequestHandler\n                 const std::string addr{peer[\"addr\"].get_str()};\n                 const std::string age{conn_time == 0 ? \"\" : ToString((m_time_now - conn_time) / 60)};\n                 const std::string sub_version{peer[\"subver\"].get_str()};\n-                m_peers.push_back({addr, sub_version, network, age, min_ping, ping, last_blck, last_recv, last_send, last_trxn, peer_id, mapped_as, version, is_block_relay, is_outbound});\n+                m_peers.push_back({addr, sub_version, conn_type, network, age, min_ping, ping, last_blck, last_recv, last_send, last_trxn, peer_id, mapped_as, version, is_block_relay, is_outbound});\n                 m_max_addr_length = std::max(addr.length() + 1, m_max_addr_length);\n                 m_max_age_length = std::max(age.length(), m_max_age_length);\n                 m_max_id_length = std::max(ToString(peer_id).length(), m_max_id_length);\n@@ -497,15 +502,15 @@ class NetinfoRequestHandler : public BaseRequestHandler\n         // Report detailed peer connections list sorted by direction and minimum ping time.\n         if (DetailsRequested() && !m_peers.empty()) {\n             std::sort(m_peers.begin(), m_peers.end());\n-            result += strprintf(\"<-> relay   net  mping   ping send recv  txn  blk %*s \", m_max_age_length, \"age\");\n+            result += strprintf(\"<->   type   net  mping   ping send recv  txn  blk %*s \", m_max_age_length, \"age\");\n             if (m_is_asmap_on) result += \" asmap \";\n             result += strprintf(\"%*s %-*s%s\\n\", m_max_id_length, \"id\", IsAddressSelected() ? m_max_addr_length : 0, IsAddressSelected() ? \"address\" : \"\", IsVersionSelected() ? \"version\" : \"\");\n             for (const Peer& peer : m_peers) {\n                 std::string version{ToString(peer.version) + peer.sub_version};\n                 result += strprintf(\n-                    \"%3s %5s %5s%7s%7s%5s%5s%5s%5s %*s%*i %*s %-*s%s\\n\",\n+                    \"%3s %6s %5s%7s%7s%5s%5s%5s%5s %*s%*i %*s %-*s%s\\n\",\n                     peer.is_outbound ? \"out\" : \"in\",\n-                    peer.is_block_relay ? \"block\" : \"full\",\n+                    ConnectionTypeForNetinfo(peer.conn_type),\n                     peer.network,\n                     PingTimeToString(peer.min_ping),\n                     PingTimeToString(peer.ping),\n@@ -523,7 +528,7 @@ class NetinfoRequestHandler : public BaseRequestHandler\n                     IsAddressSelected() ? peer.addr : \"\",\n                     IsVersionSelected() && version != \"0\" ? version : \"\");\n             }\n-            result += strprintf(\"                    ms     ms  sec  sec  min  min %*s\\n\\n\", m_max_age_length, \"min\");\n+            result += strprintf(\"                     ms     ms  sec  sec  min  min %*s\\n\\n\", m_max_age_length, \"min\");\n         }\n \n         // Report peer connection totals by type."
      }
    ]
  },
  {
    "sha": "5de7a6cf63ef39b0474ea9c90a968f867635d98e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ZGU3YTZjZjYzZWYzOWIwNDc0ZWE5YzkwYTk2OGY4Njc2MzVkOThl",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-12-24T17:42:06Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-02-03T13:17:28Z"
      },
      "message": "netinfo: display manual peers count",
      "tree": {
        "sha": "b5ac2f2507663fe3eef21f4bdd3778e3a4320a22",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b5ac2f2507663fe3eef21f4bdd3778e3a4320a22"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5de7a6cf63ef39b0474ea9c90a968f867635d98e",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAmAaomgACgkQT1chs9Dj\nkh1gmg//Z6jpzKM+7+93oIeQDiDdS7qZl/ExMkWtNUf02VT8ksmCPqBxbp3B1P+k\nJ6QVu877u+q8ljj8ckG5tM/x1ZaDXwbb2N1AbtuTGiJAfbio0xkljWGejy/QX/mX\nv3ybbKJM6wEhaKIRBXteNkXyBJX9arj9De0vqC0NTlb+hyzdN0kLfHi9KuezwpyH\npPSZeTuGemY5uugmRX37riQkj/Nvmd/VdBUaoI7W6TJLTECrj01sD8FgKyqmWB6F\n73ZkyyTQAkNek7lxVo47RjKLh4JVWJWpr0DEggo7VB488sVbXzF04XdVxEGU0Ukc\nCt+yHOe1ndxv/AnEoSjswPwv4IUIF61YODZJ/1kLaYfyJPcSrwEBzElwOmKh1onW\nlOViutVg0F7zD9dL+UV2swDS5AfUt+EJ+73mQdS8tKRvYqpTdkzNbUOL/vtXcJ7/\nHnKakNsEL1OrYk1YwpKp9e+DUxQyoCE908Fp0qxoSuVpWZhKMFvMlSY4VUXwC6k3\ndw9XtfrQArULKY0Cj/MMVwFWtSvtyy+Lv+tDEiCzd0qUYE7qZ2cAZhLPTSMrIhgl\nxZd9VRUu0/fFo6rzS8lvBgwlRnHHQYKWKfGE/ci9YzgXqVylS3nxgCJVKdYCUf8c\nULEkiMWXsQLCBmEHNFLIlbGuZsHn604cpCBqAdirX/+yRcAZ7mI=\n=AORb\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwINaBu5V4wE5moiZZ1Bu4OlhChijr2FjTLXtVFjhVTDX4CP/wEBTwW/XQPQC+\nQnDxV1SfWqUI8QRgGqJq8Ajs08vsN9uZvgCD3+MNLvkMjiMiaHR0cHM6Ly9idGMu\nY2FsZW5kYXIuY2F0YWxsYXh5LmNvbf/wEIehxS439zkh6zB2Plyfh6YI8SBtuZTC\nGOa2odKpI+Q4XymoUwj+zPCyH4d4Gi2w48NYGwjxBGAaomnwCA4s5XT1iRunAIPf\n4w0u+QyOLi1odHRwczovL2FsaWNlLmJ0Yy5jYWxlbmRhci5vcGVudGltZXN0YW1w\ncy5vcmf/8BC0Tz5YDnFtScYdNDfP2YwECPEgDW+6G9hWovPxFkdM5Jq3YiZJPg2d\nvrxoo51aZ6t1EBkI8QRgGqJp8AiLjA2IdbTu9gCD3+MNLvkMjiwraHR0cHM6Ly9i\nb2IuYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9yZ/AQ8kNAY+xsAcC1bzwH\ndFv9sgjxIL0TpANiYibkR4PN7RS2pJkcoi0I2n2W7Bdl9ypDXD2fCPEEYBqUmfAI\nq126HwjDb7AAg9/jDS75DI4pKGh0dHBzOi8vZmlubmV5LmNhbGVuZGFyLmV0ZXJu\naXR5d2FsbC5jb20=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree b5ac2f2507663fe3eef21f4bdd3778e3a4320a22\nparent d3cca3be63afeb19a41e9892444fc6e02ea1c7c8\nauthor Jon Atack <jon@atack.com> 1608831726 +0100\ncommitter Jon Atack <jon@atack.com> 1612358248 +0100\n\nnetinfo: display manual peers count\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5de7a6cf63ef39b0474ea9c90a968f867635d98e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5de7a6cf63ef39b0474ea9c90a968f867635d98e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5de7a6cf63ef39b0474ea9c90a968f867635d98e/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d3cca3be63afeb19a41e9892444fc6e02ea1c7c8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d3cca3be63afeb19a41e9892444fc6e02ea1c7c8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d3cca3be63afeb19a41e9892444fc6e02ea1c7c8"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 8,
      "deletions": 4
    },
    "files": [
      {
        "sha": "750ab18e8b8710bf39506f1bee034cafee511f61",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 4,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5de7a6cf63ef39b0474ea9c90a968f867635d98e/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5de7a6cf63ef39b0474ea9c90a968f867635d98e/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=5de7a6cf63ef39b0474ea9c90a968f867635d98e",
        "patch": "@@ -303,6 +303,7 @@ class NetinfoRequestHandler : public BaseRequestHandler\n     static constexpr uint8_t m_networks_size{3};\n     const std::array<std::string, m_networks_size> m_networks{{\"ipv4\", \"ipv6\", \"onion\"}};\n     std::array<std::array<uint16_t, m_networks_size + 2>, 3> m_counts{{{}}}; //!< Peer counts by (in/out/total, networks/total/block-relay)\n+    uint8_t m_manual_peers_count{0};\n     int8_t NetworkStringToId(const std::string& str) const\n     {\n         for (uint8_t i = 0; i < m_networks_size; ++i) {\n@@ -405,7 +406,7 @@ class NetinfoRequestHandler : public BaseRequestHandler\n             \"  address  IP address and port of the peer\\n\"\n             \"  version  Peer version and subversion concatenated, e.g. \\\"70016/Satoshi:21.0.0/\\\"\\n\\n\"\n             \"* The connection counts table displays the number of peers by direction, network, and the totals\\n\"\n-            \"  for each, as well as a column for block relay peers.\\n\\n\"\n+            \"  for each, as well as two special outbound columns for block relay peers and manual peers.\\n\\n\"\n             \"* The local addresses table lists each local address broadcast by the node, the port, and the score.\\n\\n\"\n             \"Examples:\\n\\n\"\n             \"Connection counts and local addresses only\\n\"\n@@ -473,6 +474,7 @@ class NetinfoRequestHandler : public BaseRequestHandler\n                 ++m_counts.at(is_outbound).at(m_networks_size + 1); // in/out block-relay\n                 ++m_counts.at(2).at(m_networks_size + 1);           // total block-relay\n             }\n+            if (conn_type == \"manual\") ++m_manual_peers_count;\n             if (DetailsRequested()) {\n                 // Push data for this peer to the peers vector.\n                 const int peer_id{peer[\"id\"].get_int()};\n@@ -532,14 +534,16 @@ class NetinfoRequestHandler : public BaseRequestHandler\n         }\n \n         // Report peer connection totals by type.\n-        result += \"        ipv4    ipv6   onion   total  block-relay\\n\";\n+        result += \"        ipv4    ipv6   onion   total   block\";\n+        if (m_manual_peers_count) result += \"  manual\";\n         const std::array<std::string, 3> rows{{\"in\", \"out\", \"total\"}};\n         for (uint8_t i = 0; i < m_networks_size; ++i) {\n-            result += strprintf(\"%-5s  %5i   %5i   %5i   %5i   %5i\\n\", rows.at(i), m_counts.at(i).at(0), m_counts.at(i).at(1), m_counts.at(i).at(2), m_counts.at(i).at(m_networks_size), m_counts.at(i).at(m_networks_size + 1));\n+            result += strprintf(\"\\n%-5s  %5i   %5i   %5i   %5i   %5i\", rows.at(i), m_counts.at(i).at(0), m_counts.at(i).at(1), m_counts.at(i).at(2), m_counts.at(i).at(m_networks_size), m_counts.at(i).at(m_networks_size + 1));\n+            if (i == 1 && m_manual_peers_count) result += strprintf(\"   %5i\", m_manual_peers_count);\n         }\n \n         // Report local addresses, ports, and scores.\n-        result += \"\\nLocal addresses\";\n+        result += \"\\n\\nLocal addresses\";\n         const std::vector<UniValue>& local_addrs{networkinfo[\"localaddresses\"].getValues()};\n         if (local_addrs.empty()) {\n             result += \": n/a\\n\";"
      }
    ]
  },
  {
    "sha": "9d6aeca2c5ec1df579c27c39e82fa3ddf1d25986",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ZDZhZWNhMmM1ZWMxZGY1NzljMjdjMzllODJmYTNkZGYxZDI1OTg2",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-12-24T19:03:50Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-02-03T13:17:30Z"
      },
      "message": "netinfo: add bip152 high-bandwidth to/from fields",
      "tree": {
        "sha": "bb720db02939e03dbb8d924298eefeb6241d421f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bb720db02939e03dbb8d924298eefeb6241d421f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9d6aeca2c5ec1df579c27c39e82fa3ddf1d25986",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAmAaomoACgkQT1chs9Dj\nkh3nNxAAp8DtDxTNw904QEopmeEkj/rbC+xOQb2C0jHiW5Ceeefb4ZFx8LXRLzA9\n8RLOfRSMhG6ik6f35d4ySlfTObllJa8neKRvDt7jx4lZsW9atr9tPoWkgFbS1yEW\nEkUAIBztJtZVVU4KR5AusjInQMxWAAJV508W72J192yHdziTjIjiv/8N2PvaeHTn\n4SkWfXoWELCMnGKkS8GNNvi6cfDD4OpJb9XJ1rHvQBWbUe57EH7R/nrLe7VMmk0/\nXe3HF76i52SVNsv4VLtwJYCuBwe9WFoESFCBOh77NJrPg381n0G+/cE7ujAQ+x7+\nEyHpVbPuFib69btBkOgbAg5J5EATeBCocTcemben0IwpJVsUvkQhk1ZJUGe9Fh0p\nIh15XfOdnmRS1SO6iY7zimaGMR9rxg988xY79DOZbrSXYTX/3AewypqKR93LBE12\nDs+171kiOOlTEiU+1mdt7EruJl2iDcPkXGMjuM6oRuxHzN2hxuakVIpTDomw/6ap\nbW9Q6uZHyynpdfAt1ytBbwr46EKIzqygTghh3Ysr1NOQr0TabFP7662mhQwWJAY5\nuT/7/GdrBOfZbrRmY4pVZ/5yBzaItCXCUxLYkg9YPEBjgmRunDi3Zo6w8tyQXElX\njfLyV8wrKDIDvOTOI75gRVlzmRgxxczmrOjog8pFGW7YXtDScb4=\n=ZKXh\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIP/YFk+kPwh8gIUs40EYuRxpxNLQZ7H6W9pS/kANQ3BvCP/wEAY0vbgL490l\ntfq0XU0F9mAI8QRgGpSb8Aj9T+zC97Zw4wCD3+MNLvkMjikoaHR0cHM6Ly9maW5u\nZXkuY2FsZW5kYXIuZXRlcm5pdHl3YWxsLmNvbf/wEFWVQMBYTmHYYvhChI/RK4kI\n8QRgGqJr8Ag96FMtrX/iQwCD3+MNLvkMjiwraHR0cHM6Ly9ib2IuYnRjLmNhbGVu\nZGFyLm9wZW50aW1lc3RhbXBzLm9yZ//wEJ3miOoWkl7tekWKgiapogMI8QRgGqJr\n8AhObaaZ+AxzPgCD3+MNLvkMji4taHR0cHM6Ly9hbGljZS5idGMuY2FsZW5kYXIu\nb3BlbnRpbWVzdGFtcHMub3Jn8BDHGQp4pZiSjoN5IT62kTM5CPEEYBqibPAI7ATY\naGjMbNAAg9/jDS75DI4jImh0dHBzOi8vYnRjLmNhbGVuZGFyLmNhdGFsbGF4eS5j\nb20=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree bb720db02939e03dbb8d924298eefeb6241d421f\nparent 5de7a6cf63ef39b0474ea9c90a968f867635d98e\nauthor Jon Atack <jon@atack.com> 1608836630 +0100\ncommitter Jon Atack <jon@atack.com> 1612358250 +0100\n\nnetinfo: add bip152 high-bandwidth to/from fields\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9d6aeca2c5ec1df579c27c39e82fa3ddf1d25986",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9d6aeca2c5ec1df579c27c39e82fa3ddf1d25986",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9d6aeca2c5ec1df579c27c39e82fa3ddf1d25986/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5de7a6cf63ef39b0474ea9c90a968f867635d98e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5de7a6cf63ef39b0474ea9c90a968f867635d98e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5de7a6cf63ef39b0474ea9c90a968f867635d98e"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 13,
      "deletions": 5
    },
    "files": [
      {
        "sha": "412ababd16623437f1d0f481588a09e63146a7d5",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 5,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9d6aeca2c5ec1df579c27c39e82fa3ddf1d25986/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9d6aeca2c5ec1df579c27c39e82fa3ddf1d25986/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=9d6aeca2c5ec1df579c27c39e82fa3ddf1d25986",
        "patch": "@@ -318,7 +318,7 @@ class NetinfoRequestHandler : public BaseRequestHandler\n     bool IsVersionSelected() const { return m_details_level == 3 || m_details_level == 4; }\n     bool m_is_asmap_on{false};\n     size_t m_max_addr_length{0};\n-    size_t m_max_age_length{4};\n+    size_t m_max_age_length{3};\n     size_t m_max_id_length{2};\n     struct Peer {\n         std::string addr;\n@@ -335,6 +335,8 @@ class NetinfoRequestHandler : public BaseRequestHandler\n         int id;\n         int mapped_as;\n         int version;\n+        bool is_bip152_hb_from;\n+        bool is_bip152_hb_to;\n         bool is_block_relay;\n         bool is_outbound;\n         bool operator<(const Peer& rhs) const { return std::tie(is_outbound, min_ping) < std::tie(rhs.is_outbound, rhs.min_ping); }\n@@ -399,6 +401,9 @@ class NetinfoRequestHandler : public BaseRequestHandler\n             \"  recv     Time since last message received from the peer, in seconds\\n\"\n             \"  txn      Time since last novel transaction received from the peer and accepted into our mempool, in minutes\\n\"\n             \"  blk      Time since last novel block passing initial validity checks received from the peer, in minutes\\n\"\n+            \"  hb       High-bandwidth BIP152 compact block relay\\n\"\n+            \"           \\\".\\\" (to)   - we selected the peer as a high-bandwidth peer\\n\"\n+            \"           \\\"*\\\" (from) - the peer selected us as a high-bandwidth peer\\n\"\n             \"  age      Duration of connection to the peer, in minutes\\n\"\n             \"  asmap    Mapped AS (Autonomous System) number in the BGP route to the peer, used for diversifying\\n\"\n             \"           peer selection (only displayed if the -asmap config option is set)\\n\"\n@@ -490,7 +495,9 @@ class NetinfoRequestHandler : public BaseRequestHandler\n                 const std::string addr{peer[\"addr\"].get_str()};\n                 const std::string age{conn_time == 0 ? \"\" : ToString((m_time_now - conn_time) / 60)};\n                 const std::string sub_version{peer[\"subver\"].get_str()};\n-                m_peers.push_back({addr, sub_version, conn_type, network, age, min_ping, ping, last_blck, last_recv, last_send, last_trxn, peer_id, mapped_as, version, is_block_relay, is_outbound});\n+                const bool is_bip152_hb_from{peer[\"bip152_hb_from\"].get_bool()};\n+                const bool is_bip152_hb_to{peer[\"bip152_hb_to\"].get_bool()};\n+                m_peers.push_back({addr, sub_version, conn_type, network, age, min_ping, ping, last_blck, last_recv, last_send, last_trxn, peer_id, mapped_as, version, is_bip152_hb_from, is_bip152_hb_to, is_block_relay, is_outbound});\n                 m_max_addr_length = std::max(addr.length() + 1, m_max_addr_length);\n                 m_max_age_length = std::max(age.length(), m_max_age_length);\n                 m_max_id_length = std::max(ToString(peer_id).length(), m_max_id_length);\n@@ -504,13 +511,13 @@ class NetinfoRequestHandler : public BaseRequestHandler\n         // Report detailed peer connections list sorted by direction and minimum ping time.\n         if (DetailsRequested() && !m_peers.empty()) {\n             std::sort(m_peers.begin(), m_peers.end());\n-            result += strprintf(\"<->   type   net  mping   ping send recv  txn  blk %*s \", m_max_age_length, \"age\");\n+            result += strprintf(\"<->   type   net  mping   ping send recv  txn  blk  hb %*s \", m_max_age_length, \"age\");\n             if (m_is_asmap_on) result += \" asmap \";\n             result += strprintf(\"%*s %-*s%s\\n\", m_max_id_length, \"id\", IsAddressSelected() ? m_max_addr_length : 0, IsAddressSelected() ? \"address\" : \"\", IsVersionSelected() ? \"version\" : \"\");\n             for (const Peer& peer : m_peers) {\n                 std::string version{ToString(peer.version) + peer.sub_version};\n                 result += strprintf(\n-                    \"%3s %6s %5s%7s%7s%5s%5s%5s%5s %*s%*i %*s %-*s%s\\n\",\n+                    \"%3s %6s %5s%7s%7s%5s%5s%5s%5s  %2s %*s%*i %*s %-*s%s\\n\",\n                     peer.is_outbound ? \"out\" : \"in\",\n                     ConnectionTypeForNetinfo(peer.conn_type),\n                     peer.network,\n@@ -520,6 +527,7 @@ class NetinfoRequestHandler : public BaseRequestHandler\n                     peer.last_recv == 0 ? \"\" : ToString(m_time_now - peer.last_recv),\n                     peer.last_trxn == 0 ? \"\" : ToString((m_time_now - peer.last_trxn) / 60),\n                     peer.last_blck == 0 ? \"\" : ToString((m_time_now - peer.last_blck) / 60),\n+                    strprintf(\"%s%s\", peer.is_bip152_hb_to ? \".\" : \" \", peer.is_bip152_hb_from ? \"*\" : \" \"),\n                     m_max_age_length, // variable spacing\n                     peer.age,\n                     m_is_asmap_on ? 7 : 0, // variable spacing\n@@ -530,7 +538,7 @@ class NetinfoRequestHandler : public BaseRequestHandler\n                     IsAddressSelected() ? peer.addr : \"\",\n                     IsVersionSelected() && version != \"0\" ? version : \"\");\n             }\n-            result += strprintf(\"                     ms     ms  sec  sec  min  min %*s\\n\\n\", m_max_age_length, \"min\");\n+            result += strprintf(\"                     ms     ms  sec  sec  min  min     %*s\\n\\n\", m_max_age_length, \"min\");\n         }\n \n         // Report peer connection totals by type."
      }
    ]
  },
  {
    "sha": "76d198a5c15a9376c7d3a91754320334337a9e50",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3NmQxOThhNWMxNWE5Mzc2YzdkM2E5MTc1NDMyMDMzNDMzN2E5ZTUw",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-11-03T21:47:30Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-02-03T13:17:32Z"
      },
      "message": "netinfo: add i2p network\n\nthe i2p peer counts column is displayed iff the node is connected\nto at least one i2p peer, so this doesn't add clutter for users\nwho are not running an i2p service",
      "tree": {
        "sha": "a7dcd0210109d19468c7e47c14fa9ab8c400d9d2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a7dcd0210109d19468c7e47c14fa9ab8c400d9d2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/76d198a5c15a9376c7d3a91754320334337a9e50",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAmAaomwACgkQT1chs9Dj\nkh0Naw/9FK8gIUGv/G6sEd1VGvu8Q6yP/CgRJDchlz7nddJ75Dw/gJMZhFssmFZS\n9OFlyXEsiolWJTyQZNsW0b3ZgIaiYJpOPPqWeTWjwQnEsoiYlLI8LE/ibodXjY4b\n5kP4GDNlkoC6HW4NY1ri4DSObq7iH8eZ1nFdRPOMkId7om9M+piqVnNJj57x/4Vj\n16q2efcv9LW/f90SbrJhOCiE3flVe+BkIWtICwngsj3zcoBHJBAyHc5La5TDwPpv\nonKAnZm6818c6BIPx3iDX0Y+YNQCf9dFvkHL6XHAlLPvdY/Wd0YfrZpBQfVGOF3K\n3bdTpC6oDnGrYggEwkJ+LtAwDgFNXdwTGYgMgF/ypXeMJtMDTyTuUArT5k1HVHve\nBEaOrDnbnDwj9WAs4VDDRPHJZl7cpRFZatWRXa/Ql3KyYc0CNUIfKggNRyZaKhAR\nD/E4SU30IVkY6NrOfs78cu8+6Xt1Sm/v3VIKaO6D8pLn9O3A4iM9J/QEnUbNIPVN\nWXo0kPRw0tZjviEz6lim+xC9fY6qufaJ7EpOjDqILSKe3j83xoR1cO3aqdjWngSf\nqagyEj1n7abPtTfszujErX/CE0GSkjd+MrVwpVLpgO7CxZ6dWSW49qvvVOdQ6C2v\nxN2ydUYo7O50e0aXVh8jxHagOC0U81svQOe7ASGTV11WXVb52T8=\n=Lpqa\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIJbLgtTvo7U/mdyMkDJbk9FItCumIabBXDgMP4foFQ5tCP/wEAPQx84Or3lD\n8ta87EjrBawI8CCebOnjTAxA4a5ExRyRBg2EypFrCtW5RfLTe2Co203nmQjxBGAa\nom7wCGCjsDvfiGvtAIPf4w0u+QyOLi1odHRwczovL2FsaWNlLmJ0Yy5jYWxlbmRh\nci5vcGVudGltZXN0YW1wcy5vcmf/8BA43WAeJ1qwSTYx0/wOz0dRCPAgA7zELoTh\nTervLKu28z67S+liGdg717o4NMIJCVg5bzEI8QRgGpSe8AjJ+wKYk1n1tQCD3+MN\nLvkMjikoaHR0cHM6Ly9maW5uZXkuY2FsZW5kYXIuZXRlcm5pdHl3YWxsLmNvbf/w\nEGHbKq+lacj30d+qW7gnTI0I8CBqix4RZ/yzQAKzwhzh81BCeU2pxPwR/wtlaVOg\ndv8PDQjxBGAaom7wCAdI8EUIFZn/AIPf4w0u+QyOLCtodHRwczovL2JvYi5idGMu\nY2FsZW5kYXIub3BlbnRpbWVzdGFtcHMub3Jn8BD/PVA2N1qGa2kSe3rOXAf7CPAg\nxw90MjydPROolTSydWIsye7waoUNDEIvFGETKEZ96bcI8QRgGqJv8AiR9+XF3Fut\nhACD3+MNLvkMjiMiaHR0cHM6Ly9idGMuY2FsZW5kYXIuY2F0YWxsYXh5LmNvbQ==\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree a7dcd0210109d19468c7e47c14fa9ab8c400d9d2\nparent 9d6aeca2c5ec1df579c27c39e82fa3ddf1d25986\nauthor Jon Atack <jon@atack.com> 1604440050 +0100\ncommitter Jon Atack <jon@atack.com> 1612358252 +0100\n\nnetinfo: add i2p network\n\nthe i2p peer counts column is displayed iff the node is connected\nto at least one i2p peer, so this doesn't add clutter for users\nwho are not running an i2p service\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/76d198a5c15a9376c7d3a91754320334337a9e50",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/76d198a5c15a9376c7d3a91754320334337a9e50",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/76d198a5c15a9376c7d3a91754320334337a9e50/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9d6aeca2c5ec1df579c27c39e82fa3ddf1d25986",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9d6aeca2c5ec1df579c27c39e82fa3ddf1d25986",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9d6aeca2c5ec1df579c27c39e82fa3ddf1d25986"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 12,
      "deletions": 5
    },
    "files": [
      {
        "sha": "74be0bddb2b3b31b8aeb081dfe29204f04d8b8cf",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 5,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/76d198a5c15a9376c7d3a91754320334337a9e50/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/76d198a5c15a9376c7d3a91754320334337a9e50/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=76d198a5c15a9376c7d3a91754320334337a9e50",
        "patch": "@@ -300,8 +300,9 @@ class NetinfoRequestHandler : public BaseRequestHandler\n {\n private:\n     static constexpr int8_t UNKNOWN_NETWORK{-1};\n-    static constexpr uint8_t m_networks_size{3};\n-    const std::array<std::string, m_networks_size> m_networks{{\"ipv4\", \"ipv6\", \"onion\"}};\n+    static constexpr int8_t NET_I2P{3}; // pos of \"i2p\" in m_networks\n+    static constexpr uint8_t m_networks_size{4};\n+    const std::array<std::string, m_networks_size> m_networks{{\"ipv4\", \"ipv6\", \"onion\", \"i2p\"}};\n     std::array<std::array<uint16_t, m_networks_size + 2>, 3> m_counts{{{}}}; //!< Peer counts by (in/out/total, networks/total/block-relay)\n     uint8_t m_manual_peers_count{0};\n     int8_t NetworkStringToId(const std::string& str) const\n@@ -317,6 +318,7 @@ class NetinfoRequestHandler : public BaseRequestHandler\n     bool IsAddressSelected() const { return m_details_level == 2 || m_details_level == 4; }\n     bool IsVersionSelected() const { return m_details_level == 3 || m_details_level == 4; }\n     bool m_is_asmap_on{false};\n+    bool m_is_i2p_on{false};\n     size_t m_max_addr_length{0};\n     size_t m_max_age_length{3};\n     size_t m_max_id_length{2};\n@@ -468,6 +470,7 @@ class NetinfoRequestHandler : public BaseRequestHandler\n             const std::string network{peer[\"network\"].get_str()};\n             const int8_t network_id{NetworkStringToId(network)};\n             if (network_id == UNKNOWN_NETWORK) continue;\n+            m_is_i2p_on |= (network_id == NET_I2P);\n             const bool is_outbound{!peer[\"inbound\"].get_bool()};\n             const bool is_block_relay{!peer[\"relaytxes\"].get_bool()};\n             const std::string conn_type{peer[\"connection_type\"].get_str()};\n@@ -542,11 +545,15 @@ class NetinfoRequestHandler : public BaseRequestHandler\n         }\n \n         // Report peer connection totals by type.\n-        result += \"        ipv4    ipv6   onion   total   block\";\n+        result += \"        ipv4    ipv6   onion\";\n+        if (m_is_i2p_on) result += \"     i2p\";\n+        result += \"   total   block\";\n         if (m_manual_peers_count) result += \"  manual\";\n         const std::array<std::string, 3> rows{{\"in\", \"out\", \"total\"}};\n-        for (uint8_t i = 0; i < m_networks_size; ++i) {\n-            result += strprintf(\"\\n%-5s  %5i   %5i   %5i   %5i   %5i\", rows.at(i), m_counts.at(i).at(0), m_counts.at(i).at(1), m_counts.at(i).at(2), m_counts.at(i).at(m_networks_size), m_counts.at(i).at(m_networks_size + 1));\n+        for (uint8_t i = 0; i < 3; ++i) {\n+            result += strprintf(\"\\n%-5s  %5i   %5i   %5i\", rows.at(i), m_counts.at(i).at(0), m_counts.at(i).at(1), m_counts.at(i).at(2)); // ipv4/ipv6/onion peers counts\n+            if (m_is_i2p_on) result += strprintf(\"   %5i\", m_counts.at(i).at(3)); // i2p peers count\n+            result += strprintf(\"   %5i   %5i\", m_counts.at(i).at(m_networks_size), m_counts.at(i).at(m_networks_size + 1));\n             if (i == 1 && m_manual_peers_count) result += strprintf(\"   %5i\", m_manual_peers_count);\n         }\n "
      }
    ]
  },
  {
    "sha": "747cb5b9949f80b3b4516f382a0ce80e41f3f5a6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3NDdjYjViOTk0OWY4MGIzYjQ1MTZmMzgyYTBjZTgwZTQxZjNmNWE2",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-02-02T14:03:05Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-02-03T13:18:20Z"
      },
      "message": "netinfo: display only outbound block relay counts",
      "tree": {
        "sha": "c51482788cae7efc3ee802de9779a9497e69b7e8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c51482788cae7efc3ee802de9779a9497e69b7e8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/747cb5b9949f80b3b4516f382a0ce80e41f3f5a6",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAmAaosAACgkQT1chs9Dj\nkh1q+A/+PA5Izyr0y4njtU/kjPwRCDMIDUoNJHQTgRwkI28SQvnzclKi8lGqa2bk\nx84klCCNVaUkVuR4Sj4EAG5EXO+nWxrD/ccIyOr1b3i5BGe0wI5hueNbW/NdjORm\nEENhw96D3IV4rM7RSkmRgtckS/zNJ7PZkvVKXYEQHwHNORJC+8KcCw/RvwkJhdK8\nbt5QKHuo+vbO+UAolLfIKV0FzdDtQ2SmG0PA3TZpSUwgTxOSuPbEpMXsdXrJbPuD\nXz6uK41i2HuUhty8Ao4jFldJqXnbCF+IAcqZkrdti3jjPiTQb2l3IqrAvFFo0hOc\nOaIRwii1/29DDZ5cwBpd/jukKQRr6VfDDcbdt4CBE4MZg5kcOFxUGxjWz3glUcE0\nXGewhuYHQqWxqmrIWnswmhHqWoU8c6Fq/V+vVcQ/umfbgwd+Xk5lwP1PSPkssGxS\nti7quiu7eOJENPNzacTg3s5jCPSrNBbIZnXBTPFS2RaJU8DcrnskBlY6Zats4rBO\na/fNZUV6SdYADnIe4gKp945ziBq6WEaz5XLBp9ZfHR59eDcencoCWUYmaMMKxk3A\neY79XV0QawC4tYV55N0ZsNGzzdI29+aHRrVnuL2raPYuRNasOIOAGWk3C8dvwGfq\nYSBdAVlRN4VR5QKxIrvL/5NnaR+x5Ag1QrwLRflH97gAtbPEFvY=\n=7YXi\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIBIrzGJdsFh36Gj5TUqmh2rS9Yy7LEbFEgHUqIZJzwSWCP/wEByeiJ2SI1+S\nLWabApkcqUgI8QRgGpTy8AhRIS3dUlgqHgCD3+MNLvkMjikoaHR0cHM6Ly9maW5u\nZXkuY2FsZW5kYXIuZXRlcm5pdHl3YWxsLmNvbf/wEEKsE3g8qwCsKaJvcGLdq98I\n8QRgGqLC8AgWBZoQe6SRTwCD3+MNLvkMjiMiaHR0cHM6Ly9idGMuY2FsZW5kYXIu\nY2F0YWxsYXh5LmNvbf/wEKclseCgwCI5i4/+KBuCe8wI8QRgGqLC8AhMUNgYpSii\nfQCD3+MNLvkMjiwraHR0cHM6Ly9ib2IuYnRjLmNhbGVuZGFyLm9wZW50aW1lc3Rh\nbXBzLm9yZ/AQ4C6q+ZRpe6/shKyXG/BSGAjxBGAaosHwCHrnz+5TjjOjAIPf4w0u\n+QyOLi1odHRwczovL2FsaWNlLmJ0Yy5jYWxlbmRhci5vcGVudGltZXN0YW1wcy5v\ncmc=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree c51482788cae7efc3ee802de9779a9497e69b7e8\nparent 76d198a5c15a9376c7d3a91754320334337a9e50\nauthor Jon Atack <jon@atack.com> 1612274585 +0100\ncommitter Jon Atack <jon@atack.com> 1612358300 +0100\n\nnetinfo: display only outbound block relay counts\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/747cb5b9949f80b3b4516f382a0ce80e41f3f5a6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/747cb5b9949f80b3b4516f382a0ce80e41f3f5a6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/747cb5b9949f80b3b4516f382a0ce80e41f3f5a6/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "76d198a5c15a9376c7d3a91754320334337a9e50",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/76d198a5c15a9376c7d3a91754320334337a9e50",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/76d198a5c15a9376c7d3a91754320334337a9e50"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 8,
      "deletions": 7
    },
    "files": [
      {
        "sha": "a9a0ec6f5dfc4f71d6dd41dd28446ec59b594668",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 7,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/747cb5b9949f80b3b4516f382a0ce80e41f3f5a6/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/747cb5b9949f80b3b4516f382a0ce80e41f3f5a6/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=747cb5b9949f80b3b4516f382a0ce80e41f3f5a6",
        "patch": "@@ -303,7 +303,8 @@ class NetinfoRequestHandler : public BaseRequestHandler\n     static constexpr int8_t NET_I2P{3}; // pos of \"i2p\" in m_networks\n     static constexpr uint8_t m_networks_size{4};\n     const std::array<std::string, m_networks_size> m_networks{{\"ipv4\", \"ipv6\", \"onion\", \"i2p\"}};\n-    std::array<std::array<uint16_t, m_networks_size + 2>, 3> m_counts{{{}}}; //!< Peer counts by (in/out/total, networks/total/block-relay)\n+    std::array<std::array<uint16_t, m_networks_size + 1>, 3> m_counts{{{}}}; //!< Peer counts by (in/out/total, networks/total)\n+    uint8_t m_block_relay_peers_count{0};\n     uint8_t m_manual_peers_count{0};\n     int8_t NetworkStringToId(const std::string& str) const\n     {\n@@ -478,10 +479,7 @@ class NetinfoRequestHandler : public BaseRequestHandler\n             ++m_counts.at(is_outbound).at(m_networks_size); // in/out overall\n             ++m_counts.at(2).at(network_id);                // total by network\n             ++m_counts.at(2).at(m_networks_size);           // total overall\n-            if (conn_type == \"block-relay-only\") {\n-                ++m_counts.at(is_outbound).at(m_networks_size + 1); // in/out block-relay\n-                ++m_counts.at(2).at(m_networks_size + 1);           // total block-relay\n-            }\n+            if (conn_type == \"block-relay-only\") ++m_block_relay_peers_count;\n             if (conn_type == \"manual\") ++m_manual_peers_count;\n             if (DetailsRequested()) {\n                 // Push data for this peer to the peers vector.\n@@ -553,8 +551,11 @@ class NetinfoRequestHandler : public BaseRequestHandler\n         for (uint8_t i = 0; i < 3; ++i) {\n             result += strprintf(\"\\n%-5s  %5i   %5i   %5i\", rows.at(i), m_counts.at(i).at(0), m_counts.at(i).at(1), m_counts.at(i).at(2)); // ipv4/ipv6/onion peers counts\n             if (m_is_i2p_on) result += strprintf(\"   %5i\", m_counts.at(i).at(3)); // i2p peers count\n-            result += strprintf(\"   %5i   %5i\", m_counts.at(i).at(m_networks_size), m_counts.at(i).at(m_networks_size + 1));\n-            if (i == 1 && m_manual_peers_count) result += strprintf(\"   %5i\", m_manual_peers_count);\n+            result += strprintf(\"   %5i\", m_counts.at(i).at(m_networks_size)); // total peers count\n+            if (i == 1) { // the outbound row has two extra columns for block relay and manual peer counts\n+                result += strprintf(\"   %5i\", m_block_relay_peers_count);\n+                if (m_manual_peers_count) result += strprintf(\"   %5i\", m_manual_peers_count);\n+            }\n         }\n \n         // Report local addresses, ports, and scores."
      }
    ]
  }
]