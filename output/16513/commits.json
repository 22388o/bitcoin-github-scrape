[
  {
    "sha": "7dfc4f5492089181c54e8d34128a2e1a5aa0a48e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3ZGZjNGY1NDkyMDg5MTgxYzU0ZThkMzQxMjhhMmUxYTVhYTBhNDhl",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2019-07-31T22:15:48Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2019-08-01T15:45:12Z"
      },
      "message": "Switch CTransaction::nVersion to an unsigned integer\n\nConsensus-wise we already treat it as an unsigned integer (the\nonly rules around it are in CSV/locktime handling), and it keeps\ncausing confusion here and there, so might as well just formalize\nit.\n\nSee-also, https://github.com/rust-bitcoin/rust-bitcoin/pull/299",
      "tree": {
        "sha": "5a402340c8fbcae80acdfc827c89df2440e35613",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5a402340c8fbcae80acdfc827c89df2440e35613"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7dfc4f5492089181c54e8d34128a2e1a5aa0a48e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7dfc4f5492089181c54e8d34128a2e1a5aa0a48e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7dfc4f5492089181c54e8d34128a2e1a5aa0a48e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7dfc4f5492089181c54e8d34128a2e1a5aa0a48e/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7821821a23b68cc9ec49d69829ad4c939cb762e8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7821821a23b68cc9ec49d69829ad4c939cb762e8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7821821a23b68cc9ec49d69829ad4c939cb762e8"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 5,
      "deletions": 9
    },
    "files": [
      {
        "sha": "ac58e3b9746f006fc0f29bc44b2e6cff7ba14861",
        "filename": "src/consensus/tx_verify.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 5,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7dfc4f5492089181c54e8d34128a2e1a5aa0a48e/src/consensus/tx_verify.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7dfc4f5492089181c54e8d34128a2e1a5aa0a48e/src/consensus/tx_verify.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/tx_verify.cpp?ref=7dfc4f5492089181c54e8d34128a2e1a5aa0a48e",
        "patch": "@@ -39,11 +39,7 @@ std::pair<int, int64_t> CalculateSequenceLocks(const CTransaction &tx, int flags\n     int nMinHeight = -1;\n     int64_t nMinTime = -1;\n \n-    // tx.nVersion is signed integer so requires cast to unsigned otherwise\n-    // we would be doing a signed comparison and half the range of nVersion\n-    // wouldn't support BIP 68.\n-    bool fEnforceBIP68 = static_cast<uint32_t>(tx.nVersion) >= 2\n-                      && flags & LOCKTIME_VERIFY_SEQUENCE;\n+    bool fEnforceBIP68 = tx.nVersion >= 2 && (flags & LOCKTIME_VERIFY_SEQUENCE);\n \n     // Do not enforce sequence numbers as a relative lock time\n     // unless we have been instructed to"
      },
      {
        "sha": "6df0fd002c4c5ad491fb499a3a60e6ea38bda719",
        "filename": "src/core_write.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7dfc4f5492089181c54e8d34128a2e1a5aa0a48e/src/core_write.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7dfc4f5492089181c54e8d34128a2e1a5aa0a48e/src/core_write.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core_write.cpp?ref=7dfc4f5492089181c54e8d34128a2e1a5aa0a48e",
        "patch": "@@ -179,7 +179,7 @@ void TxToUniv(const CTransaction& tx, const uint256& hashBlock, UniValue& entry,\n {\n     entry.pushKV(\"txid\", tx.GetHash().GetHex());\n     entry.pushKV(\"hash\", tx.GetWitnessHash().GetHex());\n-    entry.pushKV(\"version\", tx.nVersion);\n+    entry.pushKV(\"version\", (int32_t)tx.nVersion);\n     entry.pushKV(\"size\", (int)::GetSerializeSize(tx, PROTOCOL_VERSION));\n     entry.pushKV(\"vsize\", (GetTransactionWeight(tx) + WITNESS_SCALE_FACTOR - 1) / WITNESS_SCALE_FACTOR);\n     entry.pushKV(\"weight\", GetTransactionWeight(tx));"
      },
      {
        "sha": "dd91e2f43ad7858cde8544720ee7697c791b35b6",
        "filename": "src/primitives/transaction.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7dfc4f5492089181c54e8d34128a2e1a5aa0a48e/src/primitives/transaction.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7dfc4f5492089181c54e8d34128a2e1a5aa0a48e/src/primitives/transaction.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/primitives/transaction.h?ref=7dfc4f5492089181c54e8d34128a2e1a5aa0a48e",
        "patch": "@@ -286,7 +286,7 @@ class CTransaction\n     // structure, including the hash.\n     const std::vector<CTxIn> vin;\n     const std::vector<CTxOut> vout;\n-    const int32_t nVersion;\n+    const uint32_t nVersion;\n     const uint32_t nLockTime;\n \n private:\n@@ -367,7 +367,7 @@ struct CMutableTransaction\n {\n     std::vector<CTxIn> vin;\n     std::vector<CTxOut> vout;\n-    int32_t nVersion;\n+    uint32_t nVersion;\n     uint32_t nLockTime;\n \n     CMutableTransaction();"
      },
      {
        "sha": "3e175778ea478b323037adcbee12ce900366dd5a",
        "filename": "src/script/interpreter.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7dfc4f5492089181c54e8d34128a2e1a5aa0a48e/src/script/interpreter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7dfc4f5492089181c54e8d34128a2e1a5aa0a48e/src/script/interpreter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.cpp?ref=7dfc4f5492089181c54e8d34128a2e1a5aa0a48e",
        "patch": "@@ -1374,7 +1374,7 @@ bool GenericTransactionSignatureChecker<T>::CheckSequence(const CScriptNum& nSeq\n \n     // Fail if the transaction's version number is not set high\n     // enough to trigger BIP 68 rules.\n-    if (static_cast<uint32_t>(txTo->nVersion) < 2)\n+    if (txTo->nVersion < 2)\n         return false;\n \n     // Sequence numbers with their most significant bit set are not"
      }
    ]
  }
]