DrahtBot,2019-12-13 03:20:45,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#17213](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/17213.html) (gui: Add Windows taskbar progress by luke-j",https://github.com/bitcoin/bitcoin/pull/17740#issuecomment-565284010,565284010,
sipsorcery,2019-12-13 09:45:46,"ACK 1778e206c33a814c8c07d998196159b362263f16.\n\nNote the appveyor build failed on the python functional tests which is nothing to do with this PR.",https://github.com/bitcoin/bitcoin/pull/17740#issuecomment-565374239,565374239,
laanwj,2019-12-13 10:04:27,"> I'm not 100% sure about crypt32, even though the majority of our Windows cryptography usage, i.e CryptAcquireContextW or CryptGenRandom is provided by advapi32.\n\nAs for `crypt32`: we don't use any kind of weak linking of symbols, I'd say if it links, it's safe.\n\nThe only one that slightly scares me (that it can be dropped, not the change itself) is `mingwthrd` because in the deep past th",https://github.com/bitcoin/bitcoin/pull/17740#issuecomment-565380571,565380571,
laanwj,2019-12-13 10:08:42,"~~Hmm this has some information about the hack that `mingwthrd` does: https://gcc.gnu.org/ml/java/2006-07/msg00003.html~~\n~~it contains two functions which perform setup and cleanup based on loading/unloading notifications, so the symbols are not used directly.~~\n~~I'm not sure about this one! It might not be something that's ever required to explicitly link against, but it feels risky somehow",https://github.com/bitcoin/bitcoin/pull/17740#issuecomment-565382003,565382003,
fanquake,2019-12-13 13:38:18,Added some additional changes for the  MSVC build system. ,https://github.com/bitcoin/bitcoin/pull/17740#issuecomment-565443903,565443903,
sipsorcery,2019-12-13 13:54:10,"fgep'ing for the defines below does not get any results for the `src` directory. As far as the msvc build goes if the define is not used in the code it's not used at all. They can be removed along with the ones already taken out. \n\nIt does actually seem a bit strange for any defines not to be used in the code no matter what the build system. I'd be surprised if the mingw makefile parses `bitco",https://github.com/bitcoin/bitcoin/pull/17740#issuecomment-565448942,565448942,
fanquake,2019-12-13 16:55:56,Discussed with @theuni. Going to add specific symbols to each of the `AC_CHECK_LIB` calls in place of `main`.,https://github.com/bitcoin/bitcoin/pull/17740#issuecomment-565518122,565518122,
laanwj,2019-12-15 13:54:46,"> Discussed with @theuni. Going to add specific symbols to each of the AC_CHECK_LIB calls in place of main.\n\nRight.\nI've started to wonder: why are these checks there in the first place? Why does it check for libraries it doesn't directly link against?\n(and if it's libraries it does link against, would it be an idea to combine the check and adding the library in the same place, so it's eas",https://github.com/bitcoin/bitcoin/pull/17740#issuecomment-565811919,565811919,
fanquake,2019-12-31 18:55:36,Incorporated suggestions from @sipsorcery and added specific symbols to some of the `AC_CHECK_LIB` calls.,https://github.com/bitcoin/bitcoin/pull/17740#issuecomment-569974322,569974322,
sipsorcery,2019-12-31 22:37:40,tACK (msvc and mingw on Win10) 890baac6cd6663974344553113de5d99de0e05ea.,https://github.com/bitcoin/bitcoin/pull/17740#issuecomment-570000547,570000547,
DrahtBot,2020-01-03 01:28:52,<!--a722867cd34abeea1fadc8d60700f111-->\n### Gitian builds\n\n| File | commit 35fff5be60e853455abc24713481544e91adfedb<br>(master) | commit 65c7a3f6c1afbd33623fc7d8c962cdfda32b174e<br>(master and this pull) |\n|--|--|--|\n| bitcoin-0.19.99-aarch64-linux-gnu-debug.tar.gz | [`1a1b79c30ee23b1e...`](https://drahtbot.space/gitian/bitcoin/bitcoin/35fff5be60e853455abc24713481544e91adfedb/bitcoin-0.19.99-,https://github.com/bitcoin/bitcoin/pull/17740#issuecomment-570428645,570428645,
practicalswift,2020-01-06 00:27:02,"Concept ACK\n\nThanks for removing all this old cruft.",https://github.com/bitcoin/bitcoin/pull/17740#issuecomment-570964533,570964533,
DrahtBot,2020-01-22 23:20:51,<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase,https://github.com/bitcoin/bitcoin/pull/17740#issuecomment-577432648,577432648,
sipsorcery,2020-01-23 09:01:57,ACK 2525c096b002a89d4c561e1474800496ad8ebd7e.,https://github.com/bitcoin/bitcoin/pull/17740#issuecomment-577588462,577588462,
practicalswift,2020-01-23 11:36:27,ACK 2525c096b002a89d4c561e1474800496ad8ebd7e -- diff looks correct,https://github.com/bitcoin/bitcoin/pull/17740#issuecomment-577644210,577644210,
luke-jr,2020-03-25 01:11:30,">These checks don't cause linkage. They just check whether the library exists.\n\nThis is incorrect. `AC_CHECK_LIB` [*does* cause linkage](https://www.gnu.org/software/autoconf/manual/autoconf-2.66/html_node/Libraries.html)...\n\nI don't see how this *didn't* just reintroduce [CVE-2012-1910](https://en.bitcoin.it/wiki/Common_Vulnerabilities_and_Exposures#CVE-2012-1910).",https://github.com/bitcoin/bitcoin/pull/17740#issuecomment-603585311,603585311,
Yuthana826,2020-04-07 14:41:59,https://github.com/btcsuite/btcutil/pull/161,https://github.com/bitcoin/bitcoin/pull/17740#issuecomment-610427499,610427499,
sipsorcery,2019-12-13 13:56:11,Can confirm removing those two libraries doesn't break the build.,https://github.com/bitcoin/bitcoin/pull/17740#discussion_r357655446,357655446,build_msvc/common.init.vcxproj
