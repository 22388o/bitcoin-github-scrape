laanwj,2018-12-11T12:27:59Z,"~~Is that so? I know we dropped Windows XP support, but did we drop support for Vista?~~",https://github.com/bitcoin/bitcoin/pull/14922#issuecomment-446185330,446185330,
ken2812221,2018-12-11T12:36:53Z,"@laanwj Oh, I saw #12546 and thought that we didn't support Vista anymore. Changed to 0x0600 (Vista)",https://github.com/bitcoin/bitcoin/pull/14922#issuecomment-446187599,446187599,
laanwj,2018-12-11T12:42:11Z,"~~I mean, we could still decide to drop Vista support for 0.18.0 if there's a good reason for it, but it'll require some discussion.~~\n~~(unless support for Vista was already dropped, but I don't know and cannot find any discussion of that?)~~\n\nWhat does this change do?\n",https://github.com/bitcoin/bitcoin/pull/14922#issuecomment-446189094,446189094,
ken2812221,2018-12-11T12:58:34Z,#14881 is using `inet_pton` and it's only for Vista or later. So I create this PR just for that.,https://github.com/bitcoin/bitcoin/pull/14922#issuecomment-446193413,446193413,
kristapsk,2018-12-11T16:26:08Z,"If `inet_pton` is the only reason, that could be easily re-implemented. Of course, if there is a need to keep Vista support. I personnaly don't care. :)",https://github.com/bitcoin/bitcoin/pull/14922#issuecomment-446266070,446266070,
laanwj,2018-12-11T17:23:11Z,"@kristapsk Vista supports that, which is the minimum that is supported, so now after changing the minimum (initially it was changing it to W7) to Vista this PR is non-controversial.",https://github.com/bitcoin/bitcoin/pull/14922#issuecomment-446287104,446287104,
kristapsk,2018-12-11T17:39:53Z,"Ok, then it's strong utACK from me, nobody should run Bitcoin Core on XP anymore.",https://github.com/bitcoin/bitcoin/pull/14922#issuecomment-446292831,446292831,
kristapsk,2018-12-12T01:27:05Z,But should be mentioned in release notes.,https://github.com/bitcoin/bitcoin/pull/14922#issuecomment-446426739,446426739,
luke-jr,2018-12-12T02:40:50Z,"Prefer to see this kind of change merged as part of a PR that needs/uses it.\n\nRelease notes are already clear that XP isn't supported, for several versions now.",https://github.com/bitcoin/bitcoin/pull/14922#issuecomment-446440589,446440589,
laanwj,2018-12-12T08:06:43Z,"> But should be mentioned in release notes.\n\nXP has already not been supported since *0.13.0* in 2016, which was explicitly mentioned in the release notes then (and many a release after that): https://github.com/bitcoin/bitcoin/blob/master/doc/release-notes/release-notes-0.13.0.md#compatibility\nThere's no need for any argument or discussion about this here.\n",https://github.com/bitcoin/bitcoin/pull/14922#issuecomment-446497689,446497689,
DrahtBot,2018-12-12T12:16:51Z,<!--a722867cd34abeea1fadc8d60700f111-->\nGitian builds for commit 5f23460c7e316fe7c944680f3feff07ebb867f70 (master):\n * `b21ed43f3b0356196e56b469609a03e2...` [bitcoin-0.17.99-aarch64-linux-gnu-debug.tar.gz](https://drahtbot.space/gitian/bitcoin/bitcoin/5f23460c7e316fe7c944680f3feff07ebb867f70/bitcoin-0.17.99-aarch64-linux-gnu-debug.tar.gz)\n * `e51de4e0f5ee0a628d99e44e42fdb949...` [bitcoin-0.17.9,https://github.com/bitcoin/bitcoin/pull/14922#issuecomment-446567769,446567769,
fanquake,2018-12-12T13:20:56Z,"FWIW I spun up a Windows Vista (SP2) VM and downloaded the v0.17.0.1 binary. It ""seems"" to run ok, although I didn't test extensively:\n<img width=""809"" alt=""0 17 0 1 on windows vista"" src=""https://user-images.githubusercontent.com/863730/49872229-6846a100-fe53-11e8-968c-c9500f80742e.png"">\n\nHowever, Qt last listed Vista as a supported platform (deployment only) in [5.6 (LTS - Mar 2019)](https",https://github.com/bitcoin/bitcoin/pull/14922#issuecomment-446585696,446585696,
fanquake,2018-12-12T15:35:33Z,"@ken2812221 Could you update this PR to include docs changes. \nIs the `src/zmq/zmqabstractnotifier.cpp` change from your last force-push intended?\n\nRelated IRC discussion [here](http://www.erisian.com.au/bitcoin-core-dev/log-2018-12-12.html), (lines 284 - ~335).",https://github.com/bitcoin/bitcoin/pull/14922#issuecomment-446630587,446630587,
DrahtBot,2018-12-12T16:08:11Z,<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.,https://github.com/bitcoin/bitcoin/pull/14922#issuecomment-446642997,446642997,
MarcoFalke,2018-12-12T16:45:00Z,"Gitian fails with:\n\n```\n  CXX      zmq/libbitcoin_zmq_a-zmqabstractnotifier.o\nIn file included from ./compat.h:31:0,\n                 from ./util/system.h:18,\n                 from zmq/zmqabstractnotifier.cpp:6:\n/usr/share/mingw-w64/include/mswsock.h:201:5: error: ‘WSAPOLLFD’ does not name a type\n     WSAPOLLFD fdArray[0];\n     ^~~~~~~~~\n/usr/share/mingw-w64/include/mswsock.h:2",https://github.com/bitcoin/bitcoin/pull/14922#issuecomment-446656930,446656930,
ken2812221,2018-12-12T16:48:21Z,@MarcoFalke Gitian build would still be failed now. It's still under investigation.,https://github.com/bitcoin/bitcoin/pull/14922#issuecomment-446658152,446658152,
fanquake,2018-12-12T17:09:15Z,"One other thought, if we're changing this, do we want to explicitly pass the same version to anything in depends? i.e at the moment `miniupnpc` ends up being built with `-D_WIN32_WINNT=0X501`.",https://github.com/bitcoin/bitcoin/pull/14922#issuecomment-446665784,446665784,
laanwj,2018-12-13T13:30:02Z,"> One other thought, if we're changing this, do we want to explicitly pass the same version to anything in depends? i.e at the moment miniupnpc ends up being built with -D_WIN32_WINNT=0X501.\n\nNot sure, that depends: \n\n- does any of the dependencies make use of higher `_WIN32_WINNT` APIs when explicitly defined?\n\n- does `_WIN32_WINNT` matter at all if code is not using any of the APIs e",https://github.com/bitcoin/bitcoin/pull/14922#issuecomment-446968444,446968444,
ken2812221,2018-12-14T08:07:01Z,I found it be defined in many places. So I think it would be better to use `-D_WIN32_WINNT=0x0601`.,https://github.com/bitcoin/bitcoin/pull/14922#issuecomment-447247567,447247567,
laanwj,2018-12-14T09:17:24Z,"> I found it be defined in many places. So I think it would be better to use -D_WIN32_WINNT=0x0601.\n\nTBH as it's part of the code itself (the ""contract"" with Windows), I personally prefer it to be defined in the code, not in the build system.\n(this helps analysis tools, other IDEs, MSVC, ...)",https://github.com/bitcoin/bitcoin/pull/14922#issuecomment-447264528,447264528,
DrahtBot,2018-12-15T00:03:40Z,<!--a722867cd34abeea1fadc8d60700f111-->\nGitian builds for commit 9a4334443085970a42792db3528695585fe7053b (master):\n * `eca295538d82c1f22049c3a55afc3820...` [bitcoin-0.17.99-aarch64-linux-gnu-debug.tar.gz](https://drahtbot.space/gitian/bitcoin/bitcoin/9a4334443085970a42792db3528695585fe7053b/bitcoin-0.17.99-aarch64-linux-gnu-debug.tar.gz)\n * `b7f83f8d6b06f0579eb46f0bb0e04da4...` [bitcoin-0.17.9,https://github.com/bitcoin/bitcoin/pull/14922#issuecomment-447514578,447514578,
ken2812221,2018-12-20T09:37:28Z,"> TBH as it's part of the code itself (the ""contract"" with Windows), I personally prefer it to be defined in the code, not in the build system.\n(this helps analysis tools, other IDEs, MSVC, ...)\n\nMingw has defined _WIN32_WINNT=0x0502 by default. This would cause compile [issue](https://travis-ci.org/bitcoin/bitcoin/builds/469074999?utm_source=github_status&utm_medium=notification) if we incl",https://github.com/bitcoin/bitcoin/pull/14922#issuecomment-448934081,448934081,
laanwj,2018-12-20T14:14:44Z,"@ken2812221 Sure, but what I don't understand is how this differs from the previous setting. What would go wrong with a patch that changes the value `0x0501` to `0x0601` in the existing files and nothing else?",https://github.com/bitcoin/bitcoin/pull/14922#issuecomment-449012514,449012514,
ken2812221,2019-01-02T01:50:30Z,"Since #14881 was closed, this PR shall not be necessary anymore. This change could cause compilation issue on Mingw or we would have to define `_WIN32_WINNT` in every file that we include windows related headers. I think it does not worth to do that.",https://github.com/bitcoin/bitcoin/pull/14922#issuecomment-450772820,450772820,
fanquake,2019-01-02T01:59:49Z,@ken2812221 #14881 has just been moved to #15052.,https://github.com/bitcoin/bitcoin/pull/14922#issuecomment-450773719,450773719,
Empact,2019-01-23T08:50:51Z,"Do we need to worry about `WINVER` as well?\nhttps://docs.microsoft.com/en-us/cpp/porting/modifying-winver-and-win32-winnt?view=vs-2019",https://github.com/bitcoin/bitcoin/pull/14922#issuecomment-456719145,456719145,
Empact,2019-01-23T08:53:59Z,"Looks like you could drop this code:\nhttps://github.com/bitcoin/bitcoin/blob/82cf6813a4ef1b4a5439eb6cddb1ab426f3c31a2/src/init.cpp#L896-L900",https://github.com/bitcoin/bitcoin/pull/14922#issuecomment-456720093,456720093,
Empact,2019-01-23T08:54:20Z,Concept ACK,https://github.com/bitcoin/bitcoin/pull/14922#issuecomment-456720182,456720182,
laanwj,2019-01-24T14:32:14Z,@theuni can you weigh in here please,https://github.com/bitcoin/bitcoin/pull/14922#issuecomment-457217188,457217188,
Empact,2019-01-25T00:03:09Z,"This commit shows a few more settings that can be removed:\nhttps://github.com/Empact/bitcoin/commit/d0522ec94ebbaa564f5f6b31236d4df032664411\n\nI used the `FAIL_ON_EXTRANEOUS_COMPAT` method from #15231 to identify them:\nhttps://travis-ci.org/bitcoin/bitcoin/jobs/483255439\nhttps://travis-ci.org/Empact/bitcoin/jobs/484123087",https://github.com/bitcoin/bitcoin/pull/14922#issuecomment-457405028,457405028,
Empact,2019-01-25T00:24:42Z,utACK https://github.com/bitcoin/bitcoin/pull/14922/commits/d8a299206780b38959d732cbe40ba1dd25834f0e,https://github.com/bitcoin/bitcoin/pull/14922#issuecomment-457409355,457409355,
Empact,2019-01-25T04:25:56Z,re-utACK https://github.com/bitcoin/bitcoin/pull/14922/commits/d0522ec94ebbaa564f5f6b31236d4df032664411,https://github.com/bitcoin/bitcoin/pull/14922#issuecomment-457451531,457451531,
theuni,2019-01-25T23:41:06Z,"Concept ACK.\n\nAgreed with @laanwj about the depends. I would think that qt would be the most likely to be problematic, but it appears to be handled sanely there:\n```c\n# Override MinGW's definition in _mingw.h\nmingw: DEFINES += WINVER=0x600 _WIN32_WINNT=0x0600\n```\n\nWhich made me curious about WINVER. [This msdn Article](https://blogs.msdn.microsoft.com/oldnewthing/20070411-00/?p=272",https://github.com/bitcoin/bitcoin/pull/14922#issuecomment-457772378,457772378,
ken2812221,2019-01-26T01:30:41Z,`WINVER` has already been defined as `_WIN32_WINNT` at [here](https://github.com/mirror/mingw-w64/blob/master/mingw-w64-headers/include/sdkddkver.h#L171) since mingw v1.0 released. Do we really have to re-define it explicitly?,https://github.com/bitcoin/bitcoin/pull/14922#issuecomment-457788485,457788485,
theuni,2019-01-26T05:07:07Z,"@ken2812221 Ok, yes, I see that:\n```c++\n/* Choose WINVER Value */\n#ifndef WINVER\n#ifdef _WIN32_WINNT\n#define WINVER      _WIN32_WINNT\n#else\n#define WINVER      0x0502\n#endif\n#endif\n```\nI guess the msvc headers work similarly? utACK as long as that's the case.",https://github.com/bitcoin/bitcoin/pull/14922#issuecomment-457802866,457802866,
