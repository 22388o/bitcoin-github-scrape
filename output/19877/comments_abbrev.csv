robot-dreams,2020-09-05 20:15:47,"Concept ACK, thanks for clarifying! After trying to trace the code, I agree with you that `addnode` should add connections in both directions.\n\n- Would it also make sense to change the ""Connect nodes both ways"" on line 147 below?\n- The `wait_for_helper` calls in the `connect_nodes` implementation wait until the node has received a version and a verack. However, it doesn't wait until the **pe",https://github.com/bitcoin/bitcoin/pull/19877#issuecomment-687657879,687657879,
amitiuttarwar,2020-09-11 20:22:41,"thanks for the reviews @ipriver, @robot-dreams & @epson121 ! \nupdated to improve another ""connect nodes both ways"" instance in `p2p_disconnect_ban.py`\nPR is ready for review! \n\nthoughts around review suggestions / questions :\n\n> Would it also make sense to change the ""Connect nodes both ways"" on line 147 below?\n\ngood suggestion but I've looked into it & have found that those connec",https://github.com/bitcoin/bitcoin/pull/19877#issuecomment-691295163,691295163,
michaelfolkson,2020-09-15 11:02:09,"Concept ACK.\n\nAre there any edge cases where the P2P behavior of a one-sided connection is different to a two-sided connection? Do we want to test both or is a two-sided connection sufficient?",https://github.com/bitcoin/bitcoin/pull/19877#issuecomment-692642527,692642527,
amitiuttarwar,2020-09-16 20:00:11,@michaelfolkson not sure what you mean... I think you're asking about a subset of the tests? ,https://github.com/bitcoin/bitcoin/pull/19877#issuecomment-693633788,693633788,
robot-dreams,2020-09-16 21:51:58,"ACK 00ea3fc8e4d2f545c10970d83ef24648468deb0b\n\nThanks for clarifying! I previously had a brain errorâ€”for some reason I thought a single `connect_nodes` call adds connections in both directions. But that's not the case.\n\nI tested locally to make sure that the `connect_nodes` calls you removed were indeed no-ops:\n\n<img width=""631"" alt=""Screen Shot 2020-09-16 at 2 36 59 PM"" src=""https://us",https://github.com/bitcoin/bitcoin/pull/19877#issuecomment-693684898,693684898,
DrahtBot,2020-09-19 13:56:36,<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.,https://github.com/bitcoin/bitcoin/pull/19877#issuecomment-695216606,695216606,
amitiuttarwar,2020-09-28 23:46:27,rebased ,https://github.com/bitcoin/bitcoin/pull/19877#issuecomment-700340732,700340732,
amitiuttarwar,2020-10-28 02:24:09,rebased,https://github.com/bitcoin/bitcoin/pull/19877#issuecomment-717653635,717653635,
laanwj,2020-10-28 08:45:29,ACK 47ff5098ad5ea2c20ea387f99940a7cde6c80789,https://github.com/bitcoin/bitcoin/pull/19877#issuecomment-717786591,717786591,
ipriver,2020-09-05 18:48:12,Why did you move `test_getpeerinfo` function declaration 75 lines upwards if you haven't modified it? It just creates unnecessary diffs for your commit.,https://github.com/bitcoin/bitcoin/pull/19877#discussion_r483977328,483977328,test/functional/rpc_net.py
robot-dreams,2020-09-05 20:11:33,"Yeah, reasonable question!\n\n- If you review one commit at a time, it's clearer to see what's going on (there's a move-only commit followed by a small functionality change)\n- The commit message explains why this function was moved: ""Match test order with run order""",https://github.com/bitcoin/bitcoin/pull/19877#discussion_r483984051,483984051,test/functional/rpc_net.py
ipriver,2020-09-05 20:37:05,"@robot-dreams Agree, I missed the second commit and its title that describes this change. :blush:",https://github.com/bitcoin/bitcoin/pull/19877#discussion_r483985934,483985934,test/functional/rpc_net.py
epson121,2020-09-08 14:58:51,"nit - `By connecting node0 --> node 1, **we're left** with`",https://github.com/bitcoin/bitcoin/pull/19877#discussion_r484989241,484989241,test/functional/rpc_net.py
amitiuttarwar,2020-09-11 20:25:04,done,https://github.com/bitcoin/bitcoin/pull/19877#discussion_r487273094,487273094,test/functional/rpc_net.py
amitiuttarwar,2020-09-11 20:25:37,thanks for taking a look :) ,https://github.com/bitcoin/bitcoin/pull/19877#discussion_r487273324,487273324,test/functional/rpc_net.py
