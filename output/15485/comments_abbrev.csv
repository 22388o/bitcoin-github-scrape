MarcoFalke,2019-02-26T19:49:55Z,"utACK 2e957b6ccaa41d13190bc5197865979f5f5265bf\n\nGood to split up the overly large `wallet_basic` tests into independent tests, that are easier to debug in case of failure.",https://github.com/bitcoin/bitcoin/pull/15485#issuecomment-467586674,467586674,
MarcoFalke,2019-02-26T20:12:02Z,re-utACK 2fa85ebd1c2d7579ea005300e9101fbb48805c2f,https://github.com/bitcoin/bitcoin/pull/15485#issuecomment-467594612,467594612,
jnewbery,2019-02-26T20:13:59Z,ACK 2fa85ebd1c2d7579ea005300e9101fbb48805c2f. Nice work!,https://github.com/bitcoin/bitcoin/pull/15485#issuecomment-467595328,467595328,
practicalswift,2019-02-26T20:51:56Z,"Concept ACK\n\nWhat an excellent first-time contribution! Hope I'll see more contributions from you going forward! :-)",https://github.com/bitcoin/bitcoin/pull/15485#issuecomment-467608586,467608586,
DrahtBot,2019-02-26T21:19:47Z,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--2502f1a698b3751726fa55edcda76cd3-->\n\n### Coverage\n\n| Coverage  | Change ([pull 15485](https://drahtbot.github.io/reports/coverage/bitcoin/bitcoin/15485/total.coverage/index.html), 26ffd3c77fd871825d20a2cdd07528770b04dacd) | Reference ([mas",https://github.com/bitcoin/bitcoin/pull/15485#issuecomment-467618047,467618047,
MarcoFalke,2019-02-26T19:51:41Z,"style-nit: Could add trailing comma, so that `git blame` works properly when something is added.",https://github.com/bitcoin/bitcoin/pull/15485#discussion_r260458762,260458762,test/functional/rpc_misc.py
MarcoFalke,2019-02-26T19:52:23Z,"Please do not assert on tuples. This will never fail\n\n```py\nassert (0, False) # will never fail",https://github.com/bitcoin/bitcoin/pull/15485#discussion_r260459035,260459035,test/functional/rpc_misc.py
jnewbery,2019-02-26T19:57:27Z,nit: 2019,https://github.com/bitcoin/bitcoin/pull/15485#discussion_r260460999,260460999,test/functional/rpc_misc.py
jnewbery,2019-02-26T19:58:24Z,"nit: consider naming this `node`, since there's only one of them",https://github.com/bitcoin/bitcoin/pull/15485#discussion_r260461380,260461380,test/functional/rpc_misc.py
jnewbery,2019-02-26T19:59:38Z,"nit: consider using `assert_greater_than()`, which gives more useful logging output when it fails. Same for all other asserts.",https://github.com/bitcoin/bitcoin/pull/15485#discussion_r260461917,260461917,test/functional/rpc_misc.py
jnewbery,2019-02-26T20:01:19Z,"nit: no need to concat two string literals. Do `""unknown mode foobar""` instead of `""unknown mode "" + ""foobar""`",https://github.com/bitcoin/bitcoin/pull/15485#discussion_r260462598,260462598,test/functional/rpc_misc.py
MarcoFalke,2019-02-28T17:27:53Z,"This fails on appveyor:\n\n```\n                                   AssertionError: 0 <= 0",https://github.com/bitcoin/bitcoin/pull/15485#discussion_r261302107,261302107,test/functional/rpc_misc.py
jnewbery,2019-02-28T19:06:16Z,See `assert_greater_than_or_equal()`,https://github.com/bitcoin/bitcoin/pull/15485#discussion_r261340136,261340136,test/functional/rpc_misc.py
practicalswift,2019-02-28T20:21:29Z,"Worth being aware of regarding the security of [`xml.etree.ElementTree`](https://docs.python.org/3/library/xml.etree.elementtree.html#module-xml.etree.ElementTree):\n\n> Warning The xml.etree.ElementTree module is not secure against maliciously constructed data. If you need to parse untrusted or unauthenticated data see XML vulnerabilities.\n\nWe'll only be parsing trusted data from what I can",https://github.com/bitcoin/bitcoin/pull/15485#discussion_r261367860,261367860,test/functional/rpc_misc.py
adamjonas,2019-03-01T15:09:56Z,Thanks for flagging @practicalswift. I was looking for other examples of xml libraries and [this](https://github.com/bitcoin/bitcoin/blob/master/contrib/devtools/update-translations.py#L23) precedent that I tried to follow.,https://github.com/bitcoin/bitcoin/pull/15485#discussion_r261638093,261638093,test/functional/rpc_misc.py
