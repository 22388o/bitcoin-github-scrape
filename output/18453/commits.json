[
  {
    "sha": "fd5073a7c0ae78a4c2d832853d59f0bb0ebc9640",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmZDUwNzNhN2MwYWU3OGE0YzJkODMyODUzZDU5ZjBiYjBlYmM5NjQw",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-03-29T00:09:49Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-04-21T13:08:53Z"
      },
      "message": "rpc: create getwalletbalances rpc, initial test coverage",
      "tree": {
        "sha": "26bd03a0b7e1292b1f1ebe767d5ab5dd106dd4ee",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/26bd03a0b7e1292b1f1ebe767d5ab5dd106dd4ee"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fd5073a7c0ae78a4c2d832853d59f0bb0ebc9640",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl6e8GYACgkQT1chs9Dj\nkh3VCRAAo7++NAmGYcH9BHdjnG/P7pc3gjUm1C6VTGp7rVWcXJdKBXEe6N4ms1bE\n3434q9jdD/wKptV39RUHY5N9SvS1aHGhItlMazjcRJxlm2idT9MZsg1oU/H7B64F\nMk4s7YBuVoAFvOh21AEXtvupThu29GPnRRlv8+agBtJoE0GhEVItuJluWYRfgUPW\n1Q4s9UqqEb5X72yCG5L/YQn1GGGynm34k8J1QVXScAyxaId4xo8UKAO0McwVkPRk\nW1qxrsAnE3oWJXBo1Z8N4jf9LcsZU9iqnrOUnies2IxKVkHldHuf5EzG7TDxV16h\nG41fW1I+jAHjA6RZYYdYN6RrBMy1Wtze7oSuxUpXj8nkuyKr7TTZw36n70eLPif2\nOl1mkRDwrh2Fvm4DUCMEE0eLT3S3062doIRxk6J8m4BJr4U8v6ze7CB33YjTr/kf\nhNpEZihF48pMOtY2QHXq2pzn9pMlo7+/Kz4rmPB9iFiXk4UaBCPR5qkWs/vjPCbs\nAnYwzGUeg9pbVVjWIdQ3zr6RinfPgYDwz7+Nc0yoqP5HWY4h2cncVMS27J+IU80o\n04GyMczHj49CeJPanrQomHxnU50XH37OraBYOdCN2ZzynEDrVpRLxcth4CyY18Ja\n3PwP/QnD0E0zCzcpbj1vocCoNwpIGsPg5s21cW84qVs8kh2d5z8=\n=MeOi\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIOjBtWfb06H7EtrL4dN8UUWOnHS0+uegmL6/8WDKLXECCP/wEA8xRGwfBodQ\nNAs5s6uzGpwI8SCmSGTSjkb54pdRaIaGSOr8GFsLtPlAy7AFC0z/OKSITAjxBF6e\n8GfwCNuj+CRNWzt4AIPf4w0u+QyOLCtodHRwczovL2JvYi5idGMuY2FsZW5kYXIu\nb3BlbnRpbWVzdGFtcHMub3Jn//AQYjTwvsY8NG/nd1n7LB6f3AjxINBSmAwPjFD3\nI2ol7bHQW7PP0MOvYJBvem8wbFXGAkAmCPEEXp7wZ/AIUUoyG1ah8OQAg9/jDS75\nDI4uLWh0dHBzOi8vYWxpY2UuYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9y\nZ//wELOqwXi9qc0/YJyJGav2wkcI8QRenvBo8AgKO+rVyV3EvgCD3+MNLvkMjiMi\naHR0cHM6Ly9idGMuY2FsZW5kYXIuY2F0YWxsYXh5LmNvbfAQtIueOQtZWNw83f42\n9A2wLgjwICSFHWRA9aSJfpMqblFhJc/71HaAuj3hBR1qfWzZ5dL0CPEEXp7wZ/AI\nLKXrD77QTlAAg9/jDS75DI4pKGh0dHBzOi8vZmlubmV5LmNhbGVuZGFyLmV0ZXJu\naXR5d2FsbC5jb20=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 26bd03a0b7e1292b1f1ebe767d5ab5dd106dd4ee\nparent 977328338e468390feea691de744609db213281b\nauthor Jon Atack <jon@atack.com> 1585440589 +0100\ncommitter Jon Atack <jon@atack.com> 1587474533 +0200\n\nrpc: create getwalletbalances rpc, initial test coverage\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fd5073a7c0ae78a4c2d832853d59f0bb0ebc9640",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fd5073a7c0ae78a4c2d832853d59f0bb0ebc9640",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fd5073a7c0ae78a4c2d832853d59f0bb0ebc9640/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "977328338e468390feea691de744609db213281b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/977328338e468390feea691de744609db213281b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/977328338e468390feea691de744609db213281b"
      }
    ],
    "stats": {
      "total": 52,
      "additions": 46,
      "deletions": 6
    },
    "files": [
      {
        "sha": "228428107b9f3f16d48cb82cd339f958b1ef1c5d",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd5073a7c0ae78a4c2d832853d59f0bb0ebc9640/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd5073a7c0ae78a4c2d832853d59f0bb0ebc9640/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=fd5073a7c0ae78a4c2d832853d59f0bb0ebc9640",
        "patch": "@@ -700,6 +700,28 @@ static UniValue getreceivedbylabel(const JSONRPCRequest& request)\n }\n \n \n+/**\n+ * Called by CLI -getinfo to fetch multiwallet balances (mine.trusted).\n+ */\n+static UniValue getwalletbalances(const JSONRPCRequest& request)\n+{\n+    UniValue obj{UniValue::VOBJ};\n+    for (const std::shared_ptr<CWallet>& rpc_wallet : GetWallets()) {\n+        if (!EnsureWalletIsAvailable(rpc_wallet.get(), request.fHelp)) {\n+            return NullUniValue;\n+        }\n+        CWallet& wallet = *rpc_wallet;\n+        wallet.BlockUntilSyncedToCurrentChain();\n+\n+        auto locked_chain = wallet.chain().lock();\n+        LOCK(wallet.cs_wallet);\n+\n+        obj.pushKV(wallet.GetName(), ValueFromAmount(wallet.GetBalance().m_mine_trusted));\n+    }\n+    return obj;\n+}\n+\n+\n static UniValue getbalance(const JSONRPCRequest& request)\n {\n     std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n@@ -4299,6 +4321,7 @@ static const CRPCCommand commands[] =\n     { \"wallet\",             \"encryptwallet\",                    &encryptwallet,                 {\"passphrase\"} },\n     { \"wallet\",             \"getaddressesbylabel\",              &getaddressesbylabel,           {\"label\"} },\n     { \"wallet\",             \"getaddressinfo\",                   &getaddressinfo,                {\"address\"} },\n+    { \"wallet\",             \"getwalletbalances\",                &getwalletbalances,             {} },\n     { \"wallet\",             \"getbalance\",                       &getbalance,                    {\"dummy\",\"minconf\",\"include_watchonly\",\"avoid_reuse\"} },\n     { \"wallet\",             \"getnewaddress\",                    &getnewaddress,                 {\"label\",\"address_type\"} },\n     { \"wallet\",             \"getrawchangeaddress\",              &getrawchangeaddress,           {\"address_type\"} },"
      },
      {
        "sha": "cf54c71c46853183f403640add3680485a6bab1d",
        "filename": "test/functional/wallet_multiwallet.py",
        "status": "modified",
        "additions": 23,
        "deletions": 6,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd5073a7c0ae78a4c2d832853d59f0bb0ebc9640/test/functional/wallet_multiwallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd5073a7c0ae78a4c2d832853d59f0bb0ebc9640/test/functional/wallet_multiwallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_multiwallet.py?ref=fd5073a7c0ae78a4c2d832853d59f0bb0ebc9640",
        "patch": "@@ -78,7 +78,8 @@ def wallet_file(name):\n         #   w7_symlink - to verify symlinked wallet path is initialized correctly\n         #   w8         - to verify existing wallet file is loaded correctly\n         #   ''         - to verify default wallet file is created correctly\n-        wallet_names = ['w1', 'w2', 'w3', 'w', 'sub/w5', os.path.join(self.options.tmpdir, 'extern/w6'), 'w7_symlink', 'w8', '']\n+        extern_w6 = os.path.join(self.options.tmpdir, 'extern/w6')\n+        wallet_names = ['w1', 'w2', 'w3', 'w', 'sub/w5', extern_w6, 'w7_symlink', 'w8', '']\n         extra_args = ['-wallet={}'.format(n) for n in wallet_names]\n         self.start_node(0, extra_args)\n         assert_equal(sorted(map(lambda w: w['name'], self.nodes[0].listwalletdir()['wallets'])), ['', os.path.join('sub', 'w5'), 'w', 'w1', 'w2', 'w3', 'w7', 'w7_symlink', 'w8'])\n@@ -150,6 +151,7 @@ def wallet_file(name):\n \n         self.restart_node(0, extra_args)\n \n+        self.log.info(\"Test multiwallet names and balances\")\n         assert_equal(sorted(map(lambda w: w['name'], self.nodes[0].listwalletdir()['wallets'])), ['', os.path.join('sub', 'w5'), 'w', 'w1', 'w2', 'w3', 'w7', 'w7_symlink', 'w8', 'w8_copy'])\n \n         wallets = [wallet(w) for w in wallet_names]\n@@ -170,17 +172,32 @@ def wallet_file(name):\n \n         w1, w2, w3, w4, *_ = wallets\n         node.generatetoaddress(nblocks=101, address=w1.getnewaddress())\n-        assert_equal(w1.getbalance(), 100)\n-        assert_equal(w2.getbalance(), 0)\n-        assert_equal(w3.getbalance(), 0)\n+        expected_balances = {'':           Decimal('0E-8'),\n+                             extern_w6:    Decimal('0E-8'),\n+                             'sub/w5':     Decimal('0E-8'),\n+                             'w':          Decimal('0E-8'),\n+                             'w1':         Decimal('100.00000000'),\n+                             'w2':         Decimal('0E-8'),\n+                             'w3':         Decimal('0E-8'),\n+                             'w7_symlink': Decimal('0E-8'),\n+                             'w8':         Decimal('0E-8')}\n+        assert_equal(self.nodes[0].getwalletbalances(), expected_balances)\n         assert_equal(w4.getbalance(), 0)\n \n         w1.sendtoaddress(w2.getnewaddress(), 1)\n         w1.sendtoaddress(w3.getnewaddress(), 2)\n         w1.sendtoaddress(w4.getnewaddress(), 3)\n         node.generatetoaddress(nblocks=1, address=w1.getnewaddress())\n-        assert_equal(w2.getbalance(), 1)\n-        assert_equal(w3.getbalance(), 2)\n+        expected_balances = {'':           Decimal('0E-8'),\n+                             extern_w6:    Decimal('0E-8'),\n+                             'sub/w5':     Decimal('0E-8'),\n+                             'w':          Decimal('3.00000000'),\n+                             'w1':         Decimal('143.99991540'),\n+                             'w2':         Decimal('1.00000000'),\n+                             'w3':         Decimal('2.00000000'),\n+                             'w7_symlink': Decimal('0E-8'),\n+                             'w8':         Decimal('0E-8')}\n+        assert_equal(self.nodes[0].getwalletbalances(), expected_balances)\n         assert_equal(w4.getbalance(), 3)\n \n         batch = w1.batch([w1.getblockchaininfo.get_request(), w1.getwalletinfo.get_request()])"
      }
    ]
  },
  {
    "sha": "bc8ae3899d67bfdd0c6dd9614a04d120a71367c2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiYzhhZTM4OTlkNjdiZmRkMGM2ZGQ5NjE0YTA0ZDEyMGE3MTM2N2My",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-03-29T00:33:33Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-04-21T13:08:56Z"
      },
      "message": "cli: display multiwallet balances in -getinfo (server side version)",
      "tree": {
        "sha": "68090665205314ef2d0a91ddac03c4f1b5e21e35",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/68090665205314ef2d0a91ddac03c4f1b5e21e35"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bc8ae3899d67bfdd0c6dd9614a04d120a71367c2",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl6e8GkACgkQT1chs9Dj\nkh1Lfw//ZCoCxQq4LEEzMRjVg9CXz9I3DcbZscLuKCX/shldMzxPgF2cbvkQZ1YE\nHJ8p8xrPwc2ofEYaIZxrKo2iHrD8MMbkPP2SO3QvYeOtATdm8pzZi/zrY5qbkjx5\nmV/oJAkldXVcA2udSlFbU+ZHdb79p+4kfqYtEAHTNnDHZZ7hgsNr6XSIs8Sp1Ts6\nfreNbmzmOONy5dWER+3bWxhheQz3bpbotrwzPOUM7qQ5oJpuyVpetvtJRqWQ9nRk\nvUC//TC4nCPI5XoIDwre5uFa6/nsWxZVv8AYgCBSbOTfeWdSGTjHLPDsnH/2S/gX\nUmPFHbkjmOxgVeXCFEDvLL2DFirvPq9edrk6Z5ytLteMd1xVG+LoR7AaL2E2WQ+U\nCLTkBSFVwC9K/LD4ECowtziZvoUbvT2ynifWP7He9QWGPwpAKNJxv2Dab6Nutd7b\nVMbwXTB0wKK4GOJJcuqWUUFLapAK+yJ3N8VcDFyH2P4DlHc35V98fShIh4drzBFm\n0TKjI4kEdIrNRdVNPL9IDDcKLXIQUIFuop08qvcUqz3pAtj2P+OPSuAFpZNSmkQu\no7uK41H751DoGQzOkS0mhaN/juk/Jg8oyx/Hh1wrT/dXs8Fkfi0/aKjpLB3uZwww\nveghJ4383E9ryqOO6EFO+pWi6czgJGJYaKP+lQeQy16T4JrwJ2g=\n=GJBi\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIFZDgSj2eXRVLkWBZwlX5U5ACy+ddKePHMdzJ+gWlZD1CP/wEGAxm5N+VY36\nQ5Lh8b+rl08I8QRenvBq8Ajy0gb2dS1P8wCD3+MNLvkMji4taHR0cHM6Ly9hbGlj\nZS5idGMuY2FsZW5kYXIub3BlbnRpbWVzdGFtcHMub3Jn//AQjZuqofwtFw2jyMRE\nDAbxoQjxBF6e8GvwCIIeLGiZjounAIPf4w0u+QyOIyJodHRwczovL2J0Yy5jYWxl\nbmRhci5jYXRhbGxheHkuY29t//AQrIzFlbPpklY9aanntjwriQjxBF6e8GrwCHAO\nJDnxObT+AIPf4w0u+QyOKShodHRwczovL2Zpbm5leS5jYWxlbmRhci5ldGVybml0\neXdhbGwuY29t8BDYalm9Sf516CzZFoIKa4H4CPEEXp7wa/AIrTgbfFYi0iQAg9/j\nDS75DI4sK2h0dHBzOi8vYm9iLmJ0Yy5jYWxlbmRhci5vcGVudGltZXN0YW1wcy5v\ncmc=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 68090665205314ef2d0a91ddac03c4f1b5e21e35\nparent fd5073a7c0ae78a4c2d832853d59f0bb0ebc9640\nauthor Jon Atack <jon@atack.com> 1585442013 +0100\ncommitter Jon Atack <jon@atack.com> 1587474536 +0200\n\ncli: display multiwallet balances in -getinfo (server side version)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bc8ae3899d67bfdd0c6dd9614a04d120a71367c2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bc8ae3899d67bfdd0c6dd9614a04d120a71367c2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bc8ae3899d67bfdd0c6dd9614a04d120a71367c2/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fd5073a7c0ae78a4c2d832853d59f0bb0ebc9640",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fd5073a7c0ae78a4c2d832853d59f0bb0ebc9640",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fd5073a7c0ae78a4c2d832853d59f0bb0ebc9640"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 7,
      "deletions": 7
    },
    "files": [
      {
        "sha": "f35761611bebf36db3df4f9a1b64c23221e2ff51",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc8ae3899d67bfdd0c6dd9614a04d120a71367c2/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc8ae3899d67bfdd0c6dd9614a04d120a71367c2/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=bc8ae3899d67bfdd0c6dd9614a04d120a71367c2",
        "patch": "@@ -230,7 +230,7 @@ class GetinfoRequestHandler: public BaseRequestHandler\n     const int ID_NETWORKINFO = 0;\n     const int ID_BLOCKCHAININFO = 1;\n     const int ID_WALLETINFO = 2;\n-    const int ID_BALANCES = 3;\n+    const int ID_WALLETBALANCES = 3;\n \n     /** Create a simulated `getinfo` request. */\n     UniValue PrepareRequest(const std::string& method, const std::vector<std::string>& args) override\n@@ -242,7 +242,7 @@ class GetinfoRequestHandler: public BaseRequestHandler\n         result.push_back(JSONRPCRequestObj(\"getnetworkinfo\", NullUniValue, ID_NETWORKINFO));\n         result.push_back(JSONRPCRequestObj(\"getblockchaininfo\", NullUniValue, ID_BLOCKCHAININFO));\n         result.push_back(JSONRPCRequestObj(\"getwalletinfo\", NullUniValue, ID_WALLETINFO));\n-        result.push_back(JSONRPCRequestObj(\"getbalances\", NullUniValue, ID_BALANCES));\n+        result.push_back(JSONRPCRequestObj(\"getwalletbalances\", NullUniValue, ID_WALLETBALANCES));\n         return result;\n     }\n \n@@ -252,7 +252,7 @@ class GetinfoRequestHandler: public BaseRequestHandler\n         UniValue result(UniValue::VOBJ);\n         std::vector<UniValue> batch = JSONRPCProcessBatchReply(batch_in, batch_in.size());\n         // Errors in getnetworkinfo() and getblockchaininfo() are fatal, pass them on;\n-        // getwalletinfo() and getbalances() are allowed to fail if there is no wallet.\n+        // getwalletinfo() and getwalletbalances() are allowed to fail if there is no wallet.\n         if (!batch[ID_NETWORKINFO][\"error\"].isNull()) {\n             return batch[ID_NETWORKINFO];\n         }\n@@ -275,10 +275,10 @@ class GetinfoRequestHandler: public BaseRequestHandler\n             }\n             result.pushKV(\"paytxfee\", batch[ID_WALLETINFO][\"result\"][\"paytxfee\"]);\n         }\n-        if (!batch[ID_BALANCES][\"result\"].isNull()) {\n-            result.pushKV(\"balance\", batch[ID_BALANCES][\"result\"][\"mine\"][\"trusted\"]);\n-        }\n         result.pushKV(\"relayfee\", batch[ID_NETWORKINFO][\"result\"][\"relayfee\"]);\n+        if (!batch[ID_WALLETBALANCES][\"result\"].isNull()) {\n+            result.pushKV(\"balances\", batch[ID_WALLETBALANCES][\"result\"]);\n+        }\n         result.pushKV(\"warnings\", batch[ID_NETWORKINFO][\"result\"][\"warnings\"]);\n         return JSONRPCReplyObj(result, NullUniValue, 1);\n     }"
      },
      {
        "sha": "c07598d1922bf9e50c704cc22a862c0a6dada40b",
        "filename": "test/functional/interface_bitcoin_cli.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc8ae3899d67bfdd0c6dd9614a04d120a71367c2/test/functional/interface_bitcoin_cli.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc8ae3899d67bfdd0c6dd9614a04d120a71367c2/test/functional/interface_bitcoin_cli.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/interface_bitcoin_cli.py?ref=bc8ae3899d67bfdd0c6dd9614a04d120a71367c2",
        "patch": "@@ -65,7 +65,7 @@ def run_test(self):\n \n         if self.is_wallet_compiled():\n             self.log.info(\"Test -getinfo and bitcoin-cli getwalletinfo return expected wallet info\")\n-            assert_equal(cli_get_info['balance'], BALANCE)\n+            assert_equal(cli_get_info['balances'], {'': BALANCE})\n             wallet_info = self.nodes[0].getwalletinfo()\n             assert_equal(cli_get_info['keypoolsize'], wallet_info['keypoolsize'])\n             assert_equal(cli_get_info['unlocked_until'], wallet_info['unlocked_until'])"
      }
    ]
  },
  {
    "sha": "c414b42635d55c7efeb2efc0b5de9892b757c105",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNDE0YjQyNjM1ZDU1YzdlZmViMmVmYzBiNWRlOTg5MmI3NTdjMTA1",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-04-12T10:27:42Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-04-21T13:08:59Z"
      },
      "message": "test: add multiwallet -getinfo tests to interface_bitcoin_cli.py",
      "tree": {
        "sha": "b8ce343e7b580b5ce0740fbcc1d49fe1b4045a02",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b8ce343e7b580b5ce0740fbcc1d49fe1b4045a02"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c414b42635d55c7efeb2efc0b5de9892b757c105",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl6e8GwACgkQT1chs9Dj\nkh0Y0A//SydTsiETrbZD2Byn44I6+1nGrPNcGZY/ow+Hq954jQZwygPS9NuvdQjO\nWlNm2CXY4bOfzhOZ+0lBxiRc/PjjcMPBO3c+Vh6oW9cmrJboUX2UcaX/xdPlJW8A\nKN81OJ/GhxZ3EwuyCggemkx4cN2x48afkLe5wYmHkg2RFeyr8j07mfUHUskBO6X0\nFfL/aW6l06hWS7JGhWHzy9dhZTFb9fvxH439oT/H788ZnL6tgYpy+7BjEoU19WKJ\nXRJ/0g2bJ0CkkUy/EHiD+5rG05uYWNZEwcdFLQFDSIkJZK/9W5FXr1W1zTtQnkGa\n1Ry1FUd7erFSIoMD2zIWsI8NWSNZwgLxzVxUEdHJBC53tUQpmUxxoxy2lnTP/HY/\nVANm0stILy892KqjDUviu0oH5mHX/6gbh2TraJ7kTzqBVkDtwd0l7cXgN8oO/sfg\nNyuy+PiYE0po25WUME6CARYmDOLpMLbW/O+yo13hQD9/ChR22GYNRbrImNJSG8Hb\nEzwi7M5BefMF1oB/wnGCj2g7JjJXeh69/z8T/55NW5c9hYvIk8lvrewA4cqW/MrL\nfH4F/O5SrNrGmeQDtsq+vJ0fJN4VXMU0IkYfQhBs/i1QpwMvcnT34QOb9XXV7GVb\nUm0ZvAf4g8RflymP3CrRwdE1s2yRB9BR4sVuezp8EuYbBGomdg4=\n=6aOJ\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIHYcDF/UO+/svdgq1OSaF5k+vmfx1hWzBaBtms/li8/9CP/wEAsguCDu608W\nHVKj5TRK6gcI8QRenvBt8AiSfBKohlPPWwCD3+MNLvkMji4taHR0cHM6Ly9hbGlj\nZS5idGMuY2FsZW5kYXIub3BlbnRpbWVzdGFtcHMub3Jn//AQjWunNDP7lfmvfgqj\nDh3c+gjxBF6e8G7wCFfHZ7bZ/N/3AIPf4w0u+QyOLCtodHRwczovL2JvYi5idGMu\nY2FsZW5kYXIub3BlbnRpbWVzdGFtcHMub3Jn//AQr1V7gveFmd1n+JBDavgvtAjx\nBF6e8G7wCBBe16jTZAySAIPf4w0u+QyOIyJodHRwczovL2J0Yy5jYWxlbmRhci5j\nYXRhbGxheHkuY29t8BDNzbf6OHXJ3gVdoqpNOxs/CPEEXp7wbfAIzGTqGll8EycA\ng9/jDS75DI4pKGh0dHBzOi8vZmlubmV5LmNhbGVuZGFyLmV0ZXJuaXR5d2FsbC5j\nb20=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree b8ce343e7b580b5ce0740fbcc1d49fe1b4045a02\nparent bc8ae3899d67bfdd0c6dd9614a04d120a71367c2\nauthor Jon Atack <jon@atack.com> 1586687262 +0200\ncommitter Jon Atack <jon@atack.com> 1587474539 +0200\n\ntest: add multiwallet -getinfo tests to interface_bitcoin_cli.py\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c414b42635d55c7efeb2efc0b5de9892b757c105",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c414b42635d55c7efeb2efc0b5de9892b757c105",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c414b42635d55c7efeb2efc0b5de9892b757c105/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bc8ae3899d67bfdd0c6dd9614a04d120a71367c2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bc8ae3899d67bfdd0c6dd9614a04d120a71367c2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bc8ae3899d67bfdd0c6dd9614a04d120a71367c2"
      }
    ],
    "stats": {
      "total": 26,
      "additions": 25,
      "deletions": 1
    },
    "files": [
      {
        "sha": "0424d3c80168c9578f3ec64df58046a6af9f3582",
        "filename": "test/functional/interface_bitcoin_cli.py",
        "status": "modified",
        "additions": 25,
        "deletions": 1,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c414b42635d55c7efeb2efc0b5de9892b757c105/test/functional/interface_bitcoin_cli.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c414b42635d55c7efeb2efc0b5de9892b757c105/test/functional/interface_bitcoin_cli.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/interface_bitcoin_cli.py?ref=c414b42635d55c7efeb2efc0b5de9892b757c105",
        "patch": "@@ -3,6 +3,7 @@\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test bitcoin-cli\"\"\"\n+from decimal import Decimal\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import assert_equal, assert_raises_process_error, get_auth_cookie\n \n@@ -72,6 +73,29 @@ def run_test(self):\n             assert_equal(cli_get_info['paytxfee'], wallet_info['paytxfee'])\n             assert_equal(cli_get_info['relayfee'], network_info['relayfee'])\n             assert_equal(self.nodes[0].cli.getwalletinfo(), wallet_info)\n+\n+            self.log.info(\"Test -getinfo with multiple wallets loaded returns multiwallet balances\")\n+            wallets = ['', 'Encrypted', 'secret']\n+            amounts = [Decimal('59.999928'), Decimal(9), Decimal(31)]\n+            self.nodes[0].createwallet(wallet_name=wallets[1])\n+            self.nodes[0].createwallet(wallet_name=wallets[2])\n+            w1 = self.nodes[0].get_wallet_rpc(wallets[0])\n+            w2 = self.nodes[0].get_wallet_rpc(wallets[1])\n+            w3 = self.nodes[0].get_wallet_rpc(wallets[2])\n+            w1.walletpassphrase(password, 60)\n+            w1.sendtoaddress(w2.getnewaddress(), amounts[1])\n+            w1.sendtoaddress(w3.getnewaddress(), amounts[2])\n+            # Mine a block to confirm; adds a block reward (50 BTC) to the default wallet.\n+            self.nodes[0].generate(1)\n+            # Verify that -getinfo returns the expected loaded wallets and balances.\n+            cli_get_info = self.nodes[0].cli('-getinfo').send_cli()\n+            assert_equal(set(self.nodes[0].listwallets()), set(wallets))\n+            assert_equal(cli_get_info['balances'], {k: v for k, v in zip(wallets, amounts)})\n+            # Unload the default wallet and re-verify.\n+            self.nodes[0].unloadwallet(wallets[0])\n+            assert wallets[0] not in self.nodes[0].listwallets()\n+            cli_get_info = self.nodes[0].cli('-getinfo').send_cli()\n+            assert_equal(cli_get_info['balances'], {k: v for k, v in zip(wallets[1:], amounts[1:])})\n         else:\n             self.log.info(\"*** Wallet not compiled; cli getwalletinfo and -getinfo wallet tests skipped\")\n \n@@ -85,7 +109,7 @@ def run_test(self):\n         self.nodes[0].wait_for_cookie_credentials()  # ensure cookie file is available to avoid race condition\n         blocks = self.nodes[0].cli('-rpcwait').send_cli('getblockcount')\n         self.nodes[0].wait_for_rpc_connection()\n-        assert_equal(blocks, BLOCKS)\n+        assert_equal(blocks, BLOCKS + 1 if self.is_wallet_compiled() else BLOCKS)\n \n \n if __name__ == '__main__':"
      }
    ]
  }
]