laanwj,2020-03-28 10:03:47,Concept ACK,https://github.com/bitcoin/bitcoin/pull/18453#issuecomment-605423211,605423211,
jonasschnelli,2020-03-28 10:09:33,"Adds one more call to `getinfo`. Under the hood, it loads the same structures `GetBalance().m_mine_trusted`. Not efficient, but since performance is acceptable, I think it's worth the change to prevent from future issues and allows stripping down `getwalletinfo`\n\nutACK f73ace05f2e67917e12026f0c69aec0e5b043366",https://github.com/bitcoin/bitcoin/pull/18453#issuecomment-605423822,605423822,
laanwj,2020-03-28 11:05:55,"What would make me really happy, when you're making changes here anyway, is implementing point 2 from  #17314: show balance per wallet. This is much more useful in the multi-wallet case.\n",https://github.com/bitcoin/bitcoin/pull/18453#issuecomment-605431806,605431806,
promag,2020-03-28 11:14:07,"Concept ACK.\n\nAgree in making @laanwj happy. The change requires a `listwallets` call before the batch.",https://github.com/bitcoin/bitcoin/pull/18453#issuecomment-605432502,605432502,
jonatack,2020-03-28 11:14:23,"Good idea, will do.",https://github.com/bitcoin/bitcoin/pull/18453#issuecomment-605432525,605432525,
laanwj,2020-03-28 11:19:53,"> The change requires a listwallets call before the batch\n\n~~I don't think that's necessary, `getbalances` will already retrieve the balances for all currently active wallets, which is what I mean, It doesn't need to list inactive ones in the datadir IMO.~~\nOh this is not true, I'm confused apparently.",https://github.com/bitcoin/bitcoin/pull/18453#issuecomment-605433097,605433097,
jonatack,2020-03-28 21:27:02,"Something like this? (getbalances version)\n```json\n$ bitcoin-cli -getinfo -regtest\n{\n  ""version"": 199900,\n  ""blocks"": 15599,\n  ""headers"": 15599,\n  ""verificationprogress"": 1,\n  ""timeoffset"": 0,\n  ""connections"": 0,\n  ""proxy"": """",\n  ""difficulty"": 4.656542373906925e-10,\n  ""chain"": ""regtest"",\n  ""balances"": [\n    {\n      """": {\n        ""mine"": {\n          ""trusted"": 0.00",https://github.com/bitcoin/bitcoin/pull/18453#issuecomment-605521801,605521801,
laanwj,2020-03-28 23:05:32,"It's best if `-getinfo` fits on a single screen, so I'd prefer a really condensed form, for ex.\n```json\n{\n  ""version"": 199900,\n  ""blocks"": 15599,\n  ""headers"": 15599,\n  ""verificationprogress"": 1,\n  ""timeoffset"": 0,\n  ""connections"": 0,\n  ""proxy"": """",\n  ""difficulty"": 4.656542373906925e-10,\n  ""chain"": ""regtest"",\n  ""balances"": {\n    """": 0.00001000,\n    ""encrypted"": 0.0000350",https://github.com/bitcoin/bitcoin/pull/18453#issuecomment-605531404,605531404,
jonatack,2020-03-28 23:24:31,"> It's best if `-getinfo` fits on a single screen, so I'd prefer a really condensed form\n\nPerfect -- thanks :+1: ",https://github.com/bitcoin/bitcoin/pull/18453#issuecomment-605532924,605532924,
jonatack,2020-03-29 01:37:12,"Done. If this approach is ok, I'll add tests for the new call.",https://github.com/bitcoin/bitcoin/pull/18453#issuecomment-605544002,605544002,
promag,2020-03-29 01:41:47,Why not iterate on the cli?,https://github.com/bitcoin/bitcoin/pull/18453#issuecomment-605544326,605544326,
jonatack,2020-03-29 01:54:33,"I could be wrong, but this seemed cleaner, and I think we'll ultimately want either an rpc like this or allow passing a multi bool to getbalance or getbalances to do the same.",https://github.com/bitcoin/bitcoin/pull/18453#issuecomment-605545393,605545393,
promag,2020-03-29 14:49:11,"Not sure about the approach TBH. I'd rather see the cli use existing calls.\n\nThe new RPC `getwalletbalances` is the first to use multiple wallets and could lead to more of multiwallet RPC. For instance, `getaddressesbylabel` could return all address of all loaded wallets.",https://github.com/bitcoin/bitcoin/pull/18453#issuecomment-605648343,605648343,
jonatack,2020-03-29 15:10:39,"This works, but I understand. Interested in feedback. Note that for now `getwalletbalances` doesn't show up in the help. Rebased to add tests for `getwalletbalances` in the wallet_multiwallet tests (which also improves the existing tests).",https://github.com/bitcoin/bitcoin/pull/18453#issuecomment-605651547,605651547,
sipa,2020-04-01 23:15:34,"I'm not opposed to having ""across-all-wallets"" RPCs, but perhaps it's worth making them visually distinct? How about ""getallwalletbalances"" or ""allwalletsgetbalance""?",https://github.com/bitcoin/bitcoin/pull/18453#issuecomment-607535231,607535231,
jonatack,2020-04-01 23:23:15,"Yes. I was debating internally about ""listbalances""...",https://github.com/bitcoin/bitcoin/pull/18453#issuecomment-607537512,607537512,
fjahr,2020-04-03 17:36:07,"ACK a5ea5717400d8f31ba210df5705eb6c1470da307\n\nReviewed code and did some light testing locally.\n\nI think multi wallet RPCs will be useful for a lot of users. For naming I don't have strong feelings but since ""multi wallet"" is already the term most frequently used for this scenario verbally, I think I would prefer if that gets used if people think the distinction is necessary. So I would pr",https://github.com/bitcoin/bitcoin/pull/18453#issuecomment-608569531,608569531,
DrahtBot,2020-04-05 20:03:34,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #18724 (test: add coverage for -rpcwallet cli option by jonatack)\n* #18594 (cli: display multiwallet balances in -getinfo",https://github.com/bitcoin/bitcoin/pull/18453#issuecomment-609474114,609474114,
jonasschnelli,2020-04-08 07:55:43,"Concept ACK.\nI added the RPC label as this now adds a new PRC command (should probably be in the PR description).\n\nI strongly agree with @sipa. Across-all-wallets calls should have a naming convention. IMO `allwallet[s]` should be the required string (works with `get`, `list`, `execute`, etc.). Once we have started adding across-all-wallets calls it will be difficult to change the concept (s",https://github.com/bitcoin/bitcoin/pull/18453#issuecomment-610810033,610810033,
jonatack,2020-04-08 13:44:41,Updated the PR name and description.,https://github.com/bitcoin/bitcoin/pull/18453#issuecomment-610968893,610968893,
theStack,2020-04-08 16:57:56,Concept ACK,https://github.com/bitcoin/bitcoin/pull/18453#issuecomment-611073854,611073854,
ryanofsky,2020-04-08 17:25:17,"\n> I strongly agree with @sipa. Across-all-wallets calls should have a naming convention. IMO `allwallet[s]` should be the required string (works with `get`, `list`, `execute`, etc.). Once we have started adding across-all-wallets calls it will be difficult to change the concept (so its worth investing some brainpower in how that should work).\n\nJust using the word ""wallets"" seems pretty good",https://github.com/bitcoin/bitcoin/pull/18453#issuecomment-611087505,611087505,
jonasschnelli,2020-04-08 18:10:39,"> Just using the word ""wallets"" seems pretty good as a naming convention here. And we already have a listwallets RPC method following this convention.\n\nCould that lead to non-ideal distinguishability for certain (future?) calls (as an example `listwalletdir` versus `listwalletsdir` a.s.o.)?\n\n> This is a neat idea. Another way to implement it without a new endpoint would be with foreachwall",https://github.com/bitcoin/bitcoin/pull/18453#issuecomment-611109994,611109994,
ryanofsky,2020-04-08 18:45:09,"> Could that lead to non-ideal distinguishability for certain (future?) calls (as an example `listwalletdir` versus `listwalletsdir` a.s.o.)?\n\nI think I'm not sure what the question is asking, but I'd rename `listwalletdir` to `listwalletsdir`  (and rename `-walletdir` to `-walletsdir`, see #12221), with aliases for backwards compatibility. `listwallets`, `listwalletsdir`, and `getwalletsbalan",https://github.com/bitcoin/bitcoin/pull/18453#issuecomment-611126827,611126827,
jnewbery,2020-04-08 20:51:54,"Concept ACK, but approach NACK. I don't think we should add cross-wallet RPC methods to the server. Currently we have the following convention:\n\nFor a multiwallet node:\n\n- node RPC methods are available on the `/` endpoint\n- wallet RPC methods are available on the `/wallet/<wallet_name>` endpoint\n(wallet admin methods like `loadwallet`, `unloadwallet`, `listwallets` are on the node `/`",https://github.com/bitcoin/bitcoin/pull/18453#issuecomment-611188201,611188201,
promag,2020-04-08 21:11:01,I also share @jnewbery opinion (https://github.com/bitcoin/bitcoin/pull/18453#issuecomment-605648343).,https://github.com/bitcoin/bitcoin/pull/18453#issuecomment-611196626,611196626,
ryanofsky,2020-04-08 21:55:21,"@jnewbery, I don't understand the distinction you're making. What makes `listwallets` and `unloadwallet` ""wallet admin"" methods that are ok to have, and `getwalletsbalances` not a wallet admin method, or not a wallet admin method that's ok to have?\n\nI also don't see this interfering in a significant way with #10102 or #10615. From perspective of #10102 at least, this isn't different than the c",https://github.com/bitcoin/bitcoin/pull/18453#issuecomment-611214861,611214861,
jnewbery,2020-04-08 23:04:35,">  I don't understand the distinction you're making. What makes listwallets and unloadwallet ""wallet admin"" methods that are ok to have\n\nI think it's fine to allow the node administrator to see which wallets are loaded or to unload a wallet, but they shouldn't be able to carry out any actions on that wallet. It would be unexpected to add wallet permissions to a wallet and then find out that a ",https://github.com/bitcoin/bitcoin/pull/18453#issuecomment-611238261,611238261,
jonasschnelli,2020-04-09 07:50:38,"> Concept ACK, but approach NACK. I don't think we should add cross-wallet RPC methods to the server.\n\nThanks @jnewbery for sharing your thoughts.\nThe advantage of having serverside across-all-wallets calls if probably only efficiency (performance, bandwidth) which might be not worth the effort. I think even with per wallet permissions serverside  across-all-wallet calls would work as well (",https://github.com/bitcoin/bitcoin/pull/18453#issuecomment-611385534,611385534,
jonatack,2020-04-09 09:14:20,I've extracted the original PR to #18574 to preserve this one as a discussion on multiwallet RPC/CLI.,https://github.com/bitcoin/bitcoin/pull/18453#issuecomment-611423135,611423135,
jonatack,2020-04-09 09:27:30,"After looking at #10102 (and #10615 which is closed), I tend to agree with @ryanofsky and @jonasschnelli. Will propose multiwallet balances for -getinfo inside bitcoin-cli.cpp as a lower-scope solution for now in a separate PR, while this discussion continues in parallel for multiwallets on the server side.",https://github.com/bitcoin/bitcoin/pull/18453#issuecomment-611429161,611429161,
jonatack,2020-04-13 16:40:06,"Rebased.\n\nI implemented a client-side version of this PR at #18594 per the approach suggested by @laanwj, @promag, and @jnewbery. For now I think it's the immediate solution, and once a server-side multiwallet RPC API is adopted, it can be used for -getinfo.",https://github.com/bitcoin/bitcoin/pull/18453#issuecomment-612979854,612979854,
jb55,2020-04-20 18:17:57,"@jonasschnelli:\n> Therefore I think it would make sense to support some sort of batching option that allow across-wallets batches (for performance reasons).\n\nACK this. Right now I have bash scripts for doing multi-wallet things like balances and coins but it's pretty horrible and slow since I can't batch requests. It would be so much nicer if there was a special wallet endpoint you could hit",https://github.com/bitcoin/bitcoin/pull/18453#issuecomment-616726869,616726869,
jonatack,2020-04-21 13:09:38,Rebased on master for the CI fix.,https://github.com/bitcoin/bitcoin/pull/18453#issuecomment-617168785,617168785,
DrahtBot,2020-04-25 00:39:39,<!--cf906140f33d8803c4a75a2196329ecb-->\n🐙 This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).,https://github.com/bitcoin/bitcoin/pull/18453#issuecomment-619292296,619292296,
jonatack,2020-04-25 15:07:44,"Thanks to everyone for reviewing.\n\nSummary:\n4 Concept ACKs\n1 Approach ACK\n1 Concept NACK\n2 Approach NACKs\n4 ACKs\n\nTo take the feedback into account, a client-side, smaller-scope version of this feature for `-getinfo` only, with Concept ACKs, ACKs, and several rounds of review, is ready now for final review at #18594. Edit: #18594 is merged, thanks everyone.",https://github.com/bitcoin/bitcoin/pull/18453#issuecomment-619393242,619393242,
robot-visions,2020-04-04 22:41:26,Super nit (please feel free to ignore): Would it make sense to use `ID_WALLETBALANCES` in place of `ID_BALANCESINFO` to preserve the `getXXX` -> `ID_XXX` naming scheme?,https://github.com/bitcoin/bitcoin/pull/18453#discussion_r403551614,403551614,src/bitcoin-cli.cpp
robot-visions,2020-04-04 22:42:05,"Super nit (please feel free to ignore): Would it make sense to define a variable like `extern_wallet` next to where `wallet_names` is defined, instead of relying on the sort order of the path names?",https://github.com/bitcoin/bitcoin/pull/18453#discussion_r403551851,403551851,test/functional/wallet_multiwallet.py
vasild,2020-04-07 15:55:08,Maybe use `batch_in.size()` instead of `4`?,https://github.com/bitcoin/bitcoin/pull/18453#discussion_r404921647,404921647,src/bitcoin-cli.cpp
jonatack,2020-04-07 16:26:53,Thanks for the feedback. The naming of `getwalletbalances` may change but will keep this in mind. ,https://github.com/bitcoin/bitcoin/pull/18453#discussion_r404944986,404944986,src/bitcoin-cli.cpp
jonatack,2020-04-07 16:28:24,Not a bad idea; will look at this if I have to retouch the PR.,https://github.com/bitcoin/bitcoin/pull/18453#discussion_r404946153,404946153,test/functional/wallet_multiwallet.py
vasild,2020-04-07 19:10:13,"These locks are [acquired](https://github.com/bitcoin/bitcoin/blob/1b151e3ffce7c1a2ee46bf280cc1d96775d1f91e/src/wallet/wallet.cpp#L2037-L2038) inside `GetBalance()`, so they can be removed from here?\n\nA wallet's chain will never change and, I assume, all wallets' chains are the same. That is - we are operating on one chain here, for all wallets. Can we / should we lock that chain before the fo",https://github.com/bitcoin/bitcoin/pull/18453#discussion_r405048400,405048400,src/wallet/rpcwallet.cpp
vasild,2020-04-07 19:22:06,"The `GetBalance()` call without arguments will default to `GetBalance(min_depth=0)`, i.e. also counting unconfirmed transactions. Is this intended?\nAnswer: (probably) yes - from the unconfirmed transactions, it will actually count only those from us.\n\n`wallet.GetName()` produces something like `"""": 0.00000000` for the default wallet. Would [GetDisplayName()](https://github.com/bitcoin/bitcoi",https://github.com/bitcoin/bitcoin/pull/18453#discussion_r405055116,405055116,src/wallet/rpcwallet.cpp
vasild,2020-04-07 19:45:31,Should we be doing any of this if `request.fHelp` is `true`? It happens when `bitcoin-cli help` is executed even though none of its output contains `getwalletbalances` or any balances.,https://github.com/bitcoin/bitcoin/pull/18453#discussion_r405067788,405067788,src/wallet/rpcwallet.cpp
vasild,2020-04-07 19:49:38,"Do you plan to document this before merge? If ""no"", then are there other undocumented commands?",https://github.com/bitcoin/bitcoin/pull/18453#discussion_r405070095,405070095,src/wallet/rpcwallet.cpp
jonatack,2020-04-07 21:02:04,"If the consensus is to add a public RPC, yes, it should have documentation.",https://github.com/bitcoin/bitcoin/pull/18453#discussion_r405110606,405110606,src/wallet/rpcwallet.cpp
vasild,2020-04-08 07:14:38,"Ok, makes sense. IMO the current approach where the iterate-over-wallets logic is inside bitcoind and exposed via RPC is better than having that logic inside bitcoin-cli because in the latter case it cannot be reused by RPC users - should they need that functionality they would have to replicate the logic inside their applications.",https://github.com/bitcoin/bitcoin/pull/18453#discussion_r405306220,405306220,src/wallet/rpcwallet.cpp
jonatack,2020-04-08 16:33:36,"`GetDisplayName()` seems to be mainly for the GUI wallet. The RPC is primarily designed to be consumed by applications, whose developers would likely find `GetName()` more practical, which to me explains why GetName is used.\n\nCLI -getinfo is between the two and oriented toward users, so the new RPC could maybe return both fields, e.g. Name for RPC output and DisplayName for CLI output, but I'm",https://github.com/bitcoin/bitcoin/pull/18453#discussion_r405658061,405658061,src/wallet/rpcwallet.cpp
ryanofsky,2020-04-08 16:58:09,"To be consistent with other rpcs like `listwallets` it's right for this to be using GetName not GetDisplayName. Other wallets have names, but the default wallet doesn't have a name.",https://github.com/bitcoin/bitcoin/pull/18453#discussion_r405674045,405674045,src/wallet/rpcwallet.cpp
ryanofsky,2020-04-08 17:05:17,"> A wallet's chain will never change and, I assume, all wallets' chains are the same. That is - we are operating on one chain here, for all wallets. Can we / should we lock that chain before the for-loop in order to get a consistent view (i.e. avoid getting one wallet's balance as of height H and another wallet's balance as of height H+1)?\n\nWe generally don't want wallet code to lock up the no",https://github.com/bitcoin/bitcoin/pull/18453#discussion_r405678692,405678692,src/wallet/rpcwallet.cpp
vasild,2020-04-08 18:54:29,I see. So only the first question above remains (remove the locks acquisition).,https://github.com/bitcoin/bitcoin/pull/18453#discussion_r405743300,405743300,src/wallet/rpcwallet.cpp
jonatack,2020-04-09 09:12:39,Thanks -- done in #18574 (please ack :).,https://github.com/bitcoin/bitcoin/pull/18453#discussion_r406066423,406066423,src/bitcoin-cli.cpp
vasild,2020-04-09 09:38:52,Good idea to split the PR in two.,https://github.com/bitcoin/bitcoin/pull/18453#discussion_r406081899,406081899,src/bitcoin-cli.cpp
jonatack,2020-04-09 17:00:12,Thanks -- done in #18574 (please review :)),https://github.com/bitcoin/bitcoin/pull/18453#discussion_r406345952,406345952,src/bitcoin-cli.cpp
jonatack,2020-04-16 18:50:56,"Done in the latest rebase; it's much better with your suggestion.\n\nMind re-ACKing here and/or #18594 (the client-side version)?",https://github.com/bitcoin/bitcoin/pull/18453#discussion_r409776888,409776888,test/functional/wallet_multiwallet.py
