[
  {
    "sha": "c53d48a6b3d4e33ace9b9576e2f4ba7f40a3a197",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNTNkNDhhNmIzZDRlMzNhY2U5Yjk1NzZlMmY0YmE3ZjQwYTNhMTk3",
    "commit": {
      "author": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2015-05-25T03:41:00Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2015-11-04T13:02:10Z"
      },
      "message": "BIP70: Chainparams: DRY: Make qt/guiutil.cpp fit BIP70 chain name strings\n\nAs a side effect, the qt user will see \"test\" instead of \"testnet\"",
      "tree": {
        "sha": "95a4151b1ae40327a17f937da6844428e4c76c0e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/95a4151b1ae40327a17f937da6844428e4c76c0e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c53d48a6b3d4e33ace9b9576e2f4ba7f40a3a197",
      "comment_count": 1,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c53d48a6b3d4e33ace9b9576e2f4ba7f40a3a197",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c53d48a6b3d4e33ace9b9576e2f4ba7f40a3a197",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c53d48a6b3d4e33ace9b9576e2f4ba7f40a3a197/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c6de5cc88614f587ae2d0e360536412407e02836",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c6de5cc88614f587ae2d0e360536412407e02836",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c6de5cc88614f587ae2d0e360536412407e02836"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 9,
      "deletions": 10
    },
    "files": [
      {
        "sha": "24cad37944d0ee42d571ba347f12c821aceb8aaa",
        "filename": "src/qt/guiutil.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 10,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c53d48a6b3d4e33ace9b9576e2f4ba7f40a3a197/src/qt/guiutil.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c53d48a6b3d4e33ace9b9576e2f4ba7f40a3a197/src/qt/guiutil.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.cpp?ref=c53d48a6b3d4e33ace9b9576e2f4ba7f40a3a197",
        "patch": "@@ -581,12 +581,12 @@ TableViewLastColumnResizingFixer::TableViewLastColumnResizingFixer(QTableView* t\n #ifdef WIN32\n boost::filesystem::path static StartupShortcutPath()\n {\n-    if (GetBoolArg(\"-testnet\", false))\n+    std::string chain = ChainNameFromCommandLine();\n+    if (chain == CBaseChainParams::MAIN)\n+        return GetSpecialFolderPath(CSIDL_STARTUP) / \"Bitcoin.lnk\";\n+    if (chain == CBaseChainParams::TESTNET) // Remove this special case when CBaseChainParams::TESTNET = \"testnet4\"\n         return GetSpecialFolderPath(CSIDL_STARTUP) / \"Bitcoin (testnet).lnk\";\n-    else if (GetBoolArg(\"-regtest\", false))\n-        return GetSpecialFolderPath(CSIDL_STARTUP) / \"Bitcoin (regtest).lnk\";\n-\n-    return GetSpecialFolderPath(CSIDL_STARTUP) / \"Bitcoin.lnk\";\n+    return GetSpecialFolderPath(CSIDL_STARTUP) / strprintf(\"Bitcoin (%s).lnk\", chain);\n }\n \n bool GetStartOnSystemStartup()\n@@ -719,15 +719,14 @@ bool SetStartOnSystemStartup(bool fAutoStart)\n         boost::filesystem::ofstream optionFile(GetAutostartFilePath(), std::ios_base::out|std::ios_base::trunc);\n         if (!optionFile.good())\n             return false;\n+        std::string chain = ChainNameFromCommandLine();\n         // Write a bitcoin.desktop file to the autostart directory:\n         optionFile << \"[Desktop Entry]\\n\";\n         optionFile << \"Type=Application\\n\";\n-        if (GetBoolArg(\"-testnet\", false))\n-            optionFile << \"Name=Bitcoin (testnet)\\n\";\n-        else if (GetBoolArg(\"-regtest\", false))\n-            optionFile << \"Name=Bitcoin (regtest)\\n\";\n-        else\n+        if (chain == CBaseChainParams::MAIN)\n             optionFile << \"Name=Bitcoin\\n\";\n+        else\n+            optionFile << strprintf(\"Name=Bitcoin (%s)\\n\", chain);\n         optionFile << \"Exec=\" << pszExePath << strprintf(\" -min -testnet=%d -regtest=%d\\n\", GetBoolArg(\"-testnet\", false), GetBoolArg(\"-regtest\", false));\n         optionFile << \"Terminal=false\\n\";\n         optionFile << \"Hidden=false\\n\";"
      }
    ]
  }
]