jtimon,2015-12-04T00:55:37Z,"Concept requete-ACK, of course, I don't think anybody will dare to nack this (besides tested nits [and making travis happy]).\n",https://github.com/bitcoin/bitcoin/pull/7165#issuecomment-161840565,161840565,
dcousens,2015-12-04T01:17:43Z,concept ACK\n,https://github.com/bitcoin/bitcoin/pull/7165#issuecomment-161843919,161843919,
droark,2015-12-14T23:37:14Z,Concept ACK.\n,https://github.com/bitcoin/bitcoin/pull/7165#issuecomment-164594912,164594912,
luke-jr,2015-12-15T01:31:51Z,"Concept ACK, but only when it's determined to be safe (especially against possibly invisible consensus failures) and can be supported on all stable distros with standard OS libraries...\n",https://github.com/bitcoin/bitcoin/pull/7165#issuecomment-164613045,164613045,
dcousens,2015-12-15T02:05:04Z,"> on all stable distros\n\nFor reference, that list of distros:\n- [x] Arch\n- [ ] Debian\n- [x] Fedora\n- [ ] Gentoo stable\n- [x] OS X\n- [ ] RHEL\n- [ ] Slackware\n- [ ] Ubuntu\n\nThose ticked have native support of `GCC ^5.1.y` in the latest stable release (AFAIK).  Please let me know if any corrections need to be made.\n\nThis doens't necessarily act as a block, assuming https://github.com/bi",https://github.com/bitcoin/bitcoin/pull/7165#issuecomment-164619723,164619723,
droark,2015-12-15T02:14:14Z,"@dcousens - Don't forget Windows (well, MinGW)! I guess this one's a little tricky since the Windows build is cross-compiled. I think Ubuntu 14.04 will be fine, although 16.04 (LTS) will be necessary if GCC 5 features are required, I suppose, due to Gitian requirements.\n",https://github.com/bitcoin/bitcoin/pull/7165#issuecomment-164621146,164621146,
dcousens,2015-12-15T02:16:06Z,">  Maybe throw the switch once 16.04 (LTS) comes out and somebody can get Gitian to play nice with it?\n\nThat sounds OK to me, it seems like a realistic timeline too.\n",https://github.com/bitcoin/bitcoin/pull/7165#issuecomment-164621393,164621393,
droark,2015-12-15T02:19:27Z,"> That sounds OK to me, it seems like a realistic timeline too.\n\n@dcousens - Sorry for editing what you replied to. :) But yeah, maybe aim for throwing the switch around the time 16.04 comes out if, for whatever reasons, it's decided that GCC 5 support is required/highly desirable. 15.10 has it but I think Gitian officially supports only LTS releases.\n",https://github.com/bitcoin/bitcoin/pull/7165#issuecomment-164621829,164621829,
luke-jr,2015-12-15T04:03:40Z,"~~Fedora can't be fully supported due to the ECDSA mess they've made. Disagree with it not being a blocker.~~ Is GCC 5 now known to solve all the ABI issues, or at least the ones that could potentially affect Core?\n\nEdit: Forgot we switched to libsecp256k1, nevermind re Fedora.\n",https://github.com/bitcoin/bitcoin/pull/7165#issuecomment-164638771,164638771,
laanwj,2015-12-17T14:23:11Z,"Ok, getting kind of tired of this, but postponing this another major release, I'm not going to push for this again.\n",https://github.com/bitcoin/bitcoin/pull/7165#issuecomment-165464175,165464175,
jgarzik,2015-12-17T14:24:43Z,"@luke-jr No reason why Fedora cannot be supported.  A fedora programmer added the following commit to picocoin, illustrating a Fedora-compatible approach: https://github.com/jgarzik/picocoin/pull/44\n",https://github.com/bitcoin/bitcoin/pull/7165#issuecomment-165464499,165464499,
sipa,2015-12-17T15:50:55Z,@jgarzik That seems unrelated to C++11?\n,https://github.com/bitcoin/bitcoin/pull/7165#issuecomment-165491047,165491047,
nathan-at-least,2015-12-17T16:16:29Z,"I'm working on a fork off of Bitcoin core to implement zerocash. We require C++11 due to dependencies (eg [`libsnark`](https://github.com/scipr-lab/libsnark)).\n\nIt's not much effort to make C++11 compile, link, run, and pass `make check`. Hidden changes to consensus are another matter which we don't have a solid grasp on.\n\nWe've been working on a fork off of both v0.10.0 and v0.11.2 with g++ `",https://github.com/bitcoin/bitcoin/pull/7165#issuecomment-165498136,165498136,
jgarzik,2015-12-17T16:18:01Z,@sipa It is directly related to luke's comment.\n,https://github.com/bitcoin/bitcoin/pull/7165#issuecomment-165498586,165498586,
sipa,2015-12-17T16:21:21Z,"@jgarzik Oops, I missed that.\n\n@luke-jr That's irrelevant. We don't use OpenSSL's EC code anywhere anymore.\n\nI am really in favor of C++11 and don't understand the fuss at this point.\nThere are potential problems when mixing C++ code compiled against\ndifferent versions of the std library, but as far as I can tell, those are\nthings that result in link-time errors?\n\nI would like to see this",https://github.com/bitcoin/bitcoin/pull/7165#issuecomment-165499462,165499462,
jgarzik,2015-12-17T19:11:23Z,Agree - urge re-opening this - this is not a big risk.\n,https://github.com/bitcoin/bitcoin/pull/7165#issuecomment-165551733,165551733,
droark,2015-12-17T21:25:24Z,"Thanks for reopening, @laanwj.\n\nOne thing I would like to say is that some IBLT simulation code (non-Core) was written in C++11. I believe the plan is to try to recycle some of it for the eventual Core commit. It would be nice to know if C++11 will be acceptable so that everybody working on the Core patch(es) can use or modify code as necessary.\n\nAlso, I agree with @sipa. AFAIK, any library is",https://github.com/bitcoin/bitcoin/pull/7165#issuecomment-165586495,165586495,
sipa,2015-12-17T21:50:58Z,"This was discussed in the weekly IRC meeting. It seems we'll aim for C++11 in 0.13, by first adding build configuration and testing for C++11 on some targets (but not all), and if no problems appear, switch everything to C++11 and start using C++11 features.\n",https://github.com/bitcoin/bitcoin/pull/7165#issuecomment-165592394,165592394,
theuni,2015-12-17T21:51:23Z,Looks like the only remaining issue in that list should be the throwing dtor.\n,https://github.com/bitcoin/bitcoin/pull/7165#issuecomment-165592487,165592487,
nathan-at-least,2015-12-18T00:10:04Z,"The patch for the dtor ""fix"" is:\n\n```\ndiff --git a/src/reverselock.h b/src/reverselock.h\nindex 567636e..db5c626 100644\n--- a/src/reverselock.h\n+++ b/src/reverselock.h\n@@ -17,7 +17,7 @@ public:\n         lock.unlock();\n     }\n\n-    ~reverse_lock() {\n+    ~reverse_lock() noexcept(false) {\n         lock.lock();\n     }\n```\n\nThis allows `reverselock_error` test to pass (link in my prior",https://github.com/bitcoin/bitcoin/pull/7165#issuecomment-165621063,165621063,
jtimon,2015-12-18T05:21:37Z,c++11 for 0.13? I should miss more meetings so things go more my way...\n,https://github.com/bitcoin/bitcoin/pull/7165#issuecomment-165675852,165675852,
jtimon,2016-03-16T18:47:27Z,what's the latest status on this?\n,https://github.com/bitcoin/bitcoin/pull/7165#issuecomment-197482725,197482725,
laanwj,2016-03-16T19:20:12Z,"> what's the latest status on this?\n\n@theuni has been chasing Travis about dependency caching support on the VMs that support c++11 (Ubuntu 14.04+)\nWe could in principle do without it, disabling qt builds - or using the distro's native qt development headers, but if possible it'd be preferable to keep using the current system.\nThat's what holding it up.\n",https://github.com/bitcoin/bitcoin/pull/7165#issuecomment-197498715,197498715,
MarcoFalke,2016-04-17T12:20:26Z,Wouldn't you need to bump travis to trusty as part of this pull?\n,https://github.com/bitcoin/bitcoin/pull/7165#issuecomment-211008529,211008529,
laanwj,2016-04-18T10:43:32Z,@theuni is working on that\n,https://github.com/bitcoin/bitcoin/pull/7165#issuecomment-211323885,211323885,
MarcoFalke,2016-04-26T11:47:02Z,Travis failure:\n\n```\nconfigure: error: *** A compiler with support for C++11 language features is required.\n```\n\nMaybe retrigger after the cache for `master` is populated? Otherwise a rebase/fresh commit is needed because travis is not building against master.\n,https://github.com/bitcoin/bitcoin/pull/7165#issuecomment-214714765,214714765,
laanwj,2016-04-26T14:15:29Z,"Okay, rebased to master.\n",https://github.com/bitcoin/bitcoin/pull/7165#issuecomment-214759456,214759456,
theuni,2016-04-26T21:31:38Z,@laanwj https://github.com/theuni/bitcoin/commit/deaf59fdf658100be8472d261615241ba22a055c Should get this up and going. clang needs an explicit `-stdlib=libc++` for darwin.\n,https://github.com/bitcoin/bitcoin/pull/7165#issuecomment-214893156,214893156,
laanwj,2016-04-27T10:47:59Z,"@theuni thanks, cherry-picked\n",https://github.com/bitcoin/bitcoin/pull/7165#issuecomment-215046692,215046692,
theuni,2016-04-27T16:39:28Z,"Woohoo, ACK!\n",https://github.com/bitcoin/bitcoin/pull/7165#issuecomment-215142284,215142284,
droark,2016-04-27T16:42:08Z,Nice! Code looks good to me. Untested ACK.\n,https://github.com/bitcoin/bitcoin/pull/7165#issuecomment-215143025,215143025,
sipa,2016-04-27T16:59:33Z,utACK https://github.com/bitcoin/bitcoin/commit/a398549b3bfc976f1b6408f41af7dac3514e2553\n,https://github.com/bitcoin/bitcoin/pull/7165#issuecomment-215148191,215148191,
paveljanik,2016-04-27T17:45:05Z,ACK https://github.com/bitcoin/bitcoin/pull/7165/commits/a398549b3bfc976f1b6408f41af7dac3514e2553\n\n`configure` output diff on OS X:\n\n```\n+checking whether g++ supports C++11 features by default... no\n+checking whether g++ supports C++11 features with -std=c++11... yes\n```\n\nand the build log contains millions of added `-std=c++11` as expected.\n,https://github.com/bitcoin/bitcoin/pull/7165#issuecomment-215167889,215167889,
TheBlueMatt,2016-04-27T19:58:01Z,No longer the latest version of the C++11 macro (see http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_cxx_compile_stdcxx.m4). Do we want to update?\n,https://github.com/bitcoin/bitcoin/pull/7165#issuecomment-215209592,215209592,
droark,2016-04-27T21:09:50Z,"Tested ACK with the latest C++11 macro, as pointed out by Matt. Compiles fine on the latest OS X (10.11.4) and Xcode (7.3), _make check_ passes, and I get the same output as Janik.\n",https://github.com/bitcoin/bitcoin/pull/7165#issuecomment-215230179,215230179,
randy-waterhouse,2016-04-28T00:21:40Z,"ACK. builds, tests, runs.\n\nThrows a new build warning \n""httpserver.cpp:255:36: warning: ‘auto_ptr’ is deprecated ...""\n",https://github.com/bitcoin/bitcoin/pull/7165#issuecomment-215271370,215271370,
paveljanik,2016-04-28T05:07:28Z,@randy-waterhouse What compiler do you use please?\n\nEdit: Travis has the warning here: https://travis-ci.org/bitcoin/bitcoin/jobs/126071750#L3267\n,https://github.com/bitcoin/bitcoin/pull/7165#issuecomment-215311224,215311224,
theuni,2016-04-28T05:20:51Z,@paveljanik That's a legitimate warning. We'll need to auto_ptr -> unique_ptr. But that's a hard fork :p\n,https://github.com/bitcoin/bitcoin/pull/7165#issuecomment-215312907,215312907,
fanquake,2016-04-28T07:12:49Z,"Tested on OSX 10.11.4 & Xcode 7.3. compiles fine, make check passes. Same configure diff as above.\n",https://github.com/bitcoin/bitcoin/pull/7165#issuecomment-215331201,215331201,
laanwj,2016-04-28T08:18:49Z,"removed WIP: tag, added commit that updates ax_cxx_compile_stdcxx (thanks @TheBlueMatt  for noticing)\n\n@randy-waterhouse Indeed, the auto_ptr should be replaced, let's do that in a later pull.\n",https://github.com/bitcoin/bitcoin/pull/7165#issuecomment-215347072,215347072,
paveljanik,2016-04-28T08:39:12Z,reACK https://github.com/bitcoin/bitcoin/pull/7165/commits/2aacc72727b891aa6f42e97d16e8954fba014703\n,https://github.com/bitcoin/bitcoin/pull/7165#issuecomment-215353405,215353405,
