[
  {
    "sha": "06442549f8b725f46c1c727e9eb6fde6b843503c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNjQ0MjU0OWY4YjcyNWY0NmMxYzcyN2U5ZWI2ZmRlNmI4NDM1MDNj",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2020-04-26T12:01:46Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2020-04-29T03:20:22Z"
      },
      "message": "validation: Add minimum witness commitment size constant\n\nPer BIP 141, the witness commitment structure is atleast 38 bytes,\nOP_RETURN (0x6a) + 36 (0x24) + 4 byte header (0xaa21a9ed) + 32 byte\nSHA256 hash. It can be longer, however any additional data has no\nconsensus meaning.",
      "tree": {
        "sha": "13cccca00de2f9c22549cb878df0b5923fbfb8af",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/13cccca00de2f9c22549cb878df0b5923fbfb8af"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/06442549f8b725f46c1c727e9eb6fde6b843503c",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAl6o8ngACgkQLuufXMCV\nJsFTkQ//cTZuDEveela60ecRNHL2tIa/cpgGA6X4EM9zl3aUhUOUpbRwuWWwWB0n\nmYoUYsFbWicNQ8wbeBOAgLT8Oe9TrsupD4wNNrmT6O7FY8pdZdrx/Wr6m3tkWkXO\n5ajvEMcs1547bjVO/phNbA6H1YX2w/3J9CFS1RhAwgx+x+1L8wed66uyORoXBhmd\np9KjEG4eAUF2IkGqVc8J+iQH4RGj7kU1GZlH4xxKzDD3/0q4UUeLDV/pr4IhE8yE\nkedjYAyYdkxkNTMWNomNstV4QdiPYlnfKMBnKw84w9UH6XLhAOd8LwkM+S4x9hZb\nMOcgPcpnkUtOlpHD6Cair3EYBqlCNyrtX6TyCgXGj/nsViX9heeJbOsuxeRg2CDd\nYQ/AU5UxWyLWaXOgv3MA2qlV6HyTDuoY4Xs1d8uQvyKNCz6AMrFY/geelDK7DXAa\nOMa+LinD998LdvLYenfdGzXM+Eih/PvLNWWdIZaXPuJi6PWFpVb1Qa/2bjLR+0CB\nsR5jwQR75BBDy0keijvxfvgP4QOsJOK+9q/JvvkZX7BnTxrz5ZrPonaKbQ9yUo3p\nrxT2Sp669LAd1pvH4C5/RFG1WX/kLlgq1Qy8kej+0/Y3vN2Tdu2PaFTdaRJ7ucww\npcpAZn1+j+APVEL+PQhkK/hXXDlmAkE6LFNm4CYKzfqK5SVdhwo=\n=wLyr\n-----END PGP SIGNATURE-----",
        "payload": "tree 13cccca00de2f9c22549cb878df0b5923fbfb8af\nparent ba348dbc518b8e082a5dc3a225432fdacf859a13\nauthor fanquake <fanquake@gmail.com> 1587902506 +0800\ncommitter fanquake <fanquake@gmail.com> 1588130422 +0800\n\nvalidation: Add minimum witness commitment size constant\n\nPer BIP 141, the witness commitment structure is atleast 38 bytes,\nOP_RETURN (0x6a) + 36 (0x24) + 4 byte header (0xaa21a9ed) + 32 byte\nSHA256 hash. It can be longer, however any additional data has no\nconsensus meaning.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/06442549f8b725f46c1c727e9eb6fde6b843503c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/06442549f8b725f46c1c727e9eb6fde6b843503c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/06442549f8b725f46c1c727e9eb6fde6b843503c/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ba348dbc518b8e082a5dc3a225432fdacf859a13",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ba348dbc518b8e082a5dc3a225432fdacf859a13",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ba348dbc518b8e082a5dc3a225432fdacf859a13"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 11,
      "deletions": 2
    },
    "files": [
      {
        "sha": "8f873bb3a6bc156c3e86290317a3c2b26af0ee9d",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 2,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06442549f8b725f46c1c727e9eb6fde6b843503c/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06442549f8b725f46c1c727e9eb6fde6b843503c/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=06442549f8b725f46c1c727e9eb6fde6b843503c",
        "patch": "@@ -3386,7 +3386,14 @@ int GetWitnessCommitmentIndex(const CBlock& block)\n     int commitpos = -1;\n     if (!block.vtx.empty()) {\n         for (size_t o = 0; o < block.vtx[0]->vout.size(); o++) {\n-            if (block.vtx[0]->vout[o].scriptPubKey.size() >= 38 && block.vtx[0]->vout[o].scriptPubKey[0] == OP_RETURN && block.vtx[0]->vout[o].scriptPubKey[1] == 0x24 && block.vtx[0]->vout[o].scriptPubKey[2] == 0xaa && block.vtx[0]->vout[o].scriptPubKey[3] == 0x21 && block.vtx[0]->vout[o].scriptPubKey[4] == 0xa9 && block.vtx[0]->vout[o].scriptPubKey[5] == 0xed) {\n+            const CTxOut& vout = block.vtx[0]->vout[o];\n+            if (vout.scriptPubKey.size() >= MINIMUM_WITNESS_COMMITMENT &&\n+                vout.scriptPubKey[0] == OP_RETURN &&\n+                vout.scriptPubKey[1] == 0x24 &&\n+                vout.scriptPubKey[2] == 0xaa &&\n+                vout.scriptPubKey[3] == 0x21 &&\n+                vout.scriptPubKey[4] == 0xa9 &&\n+                vout.scriptPubKey[5] == 0xed) {\n                 commitpos = o;\n             }\n         }\n@@ -3417,7 +3424,7 @@ std::vector<unsigned char> GenerateCoinbaseCommitment(CBlock& block, const CBloc\n             CHash256().Write(witnessroot.begin(), 32).Write(ret.data(), 32).Finalize(witnessroot.begin());\n             CTxOut out;\n             out.nValue = 0;\n-            out.scriptPubKey.resize(38);\n+            out.scriptPubKey.resize(MINIMUM_WITNESS_COMMITMENT);\n             out.scriptPubKey[0] = OP_RETURN;\n             out.scriptPubKey[1] = 0x24;\n             out.scriptPubKey[2] = 0xaa;"
      },
      {
        "sha": "01693627688e408e7a7298c25ed6f2550d6e9736",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06442549f8b725f46c1c727e9eb6fde6b843503c/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06442549f8b725f46c1c727e9eb6fde6b843503c/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=06442549f8b725f46c1c727e9eb6fde6b843503c",
        "patch": "@@ -92,6 +92,8 @@ static const unsigned int DEFAULT_CHECKLEVEL = 3;\n // one 128MB block file + added 15% undo data = 147MB greater for a total of 545MB\n // Setting the target to >= 550 MiB will make it likely we can respect the target.\n static const uint64_t MIN_DISK_SPACE_FOR_BLOCK_FILES = 550 * 1024 * 1024;\n+/** Minimum size of a witness commitment structure. Defined in BIP 141. **/\n+static constexpr size_t MINIMUM_WITNESS_COMMITMENT{38};\n \n struct BlockHasher\n {"
      }
    ]
  },
  {
    "sha": "692f8307fc1449299b90182e7d79efb81a55d7ab",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2OTJmODMwN2ZjMTQ0OTI5OWI5MDE4MmU3ZDc5ZWZiODFhNTVkN2Fi",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2020-04-27T03:48:30Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2020-04-29T03:20:31Z"
      },
      "message": "test: add test for witness commitment index\n\nAs per BIP 141, if there is more than 1 pubkey that matches the witness\ncommitment structure, the one with the highest output index should be\nchosen. This adds a sanity check that we are doing that, which will fail\nif anyone trys to \"optimise\" GetWitnessCommitmentIndex() be returning\nearly.",
      "tree": {
        "sha": "eaf24bf3f39a4d84774632eccfe5d82387e6e60f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/eaf24bf3f39a4d84774632eccfe5d82387e6e60f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/692f8307fc1449299b90182e7d79efb81a55d7ab",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAl6o8n8ACgkQLuufXMCV\nJsGBcA//bCnyIeedFk/pQLR1NJ+xC5ojdIQTY7Gi6dfoDq+U/YLOHMQAfGR5qcvP\nfRBjCOqESXY0cGZ7Imk3DH7iLwpwAlEukTDEGTxDw9cIMBlKp9Lbt39byRBkN+4D\nJCWGKRKmgeLH5zChb8MmTFpPEWhgGmNWf/7MXL9KlxLch9iJVX2/yh+Pmryx/1bt\nybegjBYTZvA88XcgyknoKG54AymXw6TyVN/F7le+OgQXkz6Ru3esLaF2ijiWtLCq\nIAXhFiTVXZY/wRJU+NXEMeuqmcbKYvhxqDuJ0vub33a3o1UcWQ8wlLIA9NMTpGsA\nneuWBN2Pkxx+tMjOHk9rvoZoDExBUQWhGCw9Byz6tAbQVLtTd5a2Hx5o7atCuqAA\nklT0DhH47Xk+5vxDToKpxVusScbjj681pILopAaQlFNUSEcJ0LIs24JeIjKmr4sL\nml4bYdZ/pmv53H7QktD95JumIoXNW7dYqMBtEl4jDE1GmlfY8aTJU0sq6rio6aK9\n67P4g56TNoSWdsEyMnwhz35EgXbv63TS3YE4tq8SkhuRBVsFl9Kgv4VZPNyUqlmK\nyKUApv4GJTIRpNEBjjoulw+ucwHJpnaDEGW2hkNvikOJ1dZEhlER0T3ql/sSLnHb\nAa/ktKBdSpz6HaG12Oy0HDIo+SzYk0TQ9o9tS0ceT+ykGPcXcyw=\n=OXAS\n-----END PGP SIGNATURE-----",
        "payload": "tree eaf24bf3f39a4d84774632eccfe5d82387e6e60f\nparent 06442549f8b725f46c1c727e9eb6fde6b843503c\nauthor fanquake <fanquake@gmail.com> 1587959310 +0800\ncommitter fanquake <fanquake@gmail.com> 1588130431 +0800\n\ntest: add test for witness commitment index\n\nAs per BIP 141, if there is more than 1 pubkey that matches the witness\ncommitment structure, the one with the highest output index should be\nchosen. This adds a sanity check that we are doing that, which will fail\nif anyone trys to \"optimise\" GetWitnessCommitmentIndex() be returning\nearly.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/692f8307fc1449299b90182e7d79efb81a55d7ab",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/692f8307fc1449299b90182e7d79efb81a55d7ab",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/692f8307fc1449299b90182e7d79efb81a55d7ab/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "06442549f8b725f46c1c727e9eb6fde6b843503c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/06442549f8b725f46c1c727e9eb6fde6b843503c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/06442549f8b725f46c1c727e9eb6fde6b843503c"
      }
    ],
    "stats": {
      "total": 34,
      "additions": 34,
      "deletions": 0
    },
    "files": [
      {
        "sha": "c345f1eafb19ce34404a9b67ef71f16d9bee6eff",
        "filename": "src/test/validation_block_tests.cpp",
        "status": "modified",
        "additions": 34,
        "deletions": 0,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/692f8307fc1449299b90182e7d79efb81a55d7ab/src/test/validation_block_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/692f8307fc1449299b90182e7d79efb81a55d7ab/src/test/validation_block_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/validation_block_tests.cpp?ref=692f8307fc1449299b90182e7d79efb81a55d7ab",
        "patch": "@@ -340,4 +340,38 @@ BOOST_AUTO_TEST_CASE(mempool_locks_reorg)\n         rpc_thread.join();\n     }\n }\n+\n+BOOST_AUTO_TEST_CASE(witness_commitment_index)\n+{\n+    CScript pubKey;\n+    pubKey << 1 << OP_TRUE;\n+    auto ptemplate = BlockAssembler(*m_node.mempool, Params()).CreateNewBlock(pubKey);\n+    CBlock pblock = ptemplate->block;\n+\n+    CTxOut witness;\n+    witness.scriptPubKey.resize(MINIMUM_WITNESS_COMMITMENT);\n+    witness.scriptPubKey[0] = OP_RETURN;\n+    witness.scriptPubKey[1] = 0x24;\n+    witness.scriptPubKey[2] = 0xaa;\n+    witness.scriptPubKey[3] = 0x21;\n+    witness.scriptPubKey[4] = 0xa9;\n+    witness.scriptPubKey[5] = 0xed;\n+\n+    // A witness larger than the minimum size is still valid\n+    CTxOut min_plus_one = witness;\n+    min_plus_one.scriptPubKey.resize(MINIMUM_WITNESS_COMMITMENT + 1);\n+\n+    CTxOut invalid = witness;\n+    invalid.scriptPubKey[0] = OP_VERIFY;\n+\n+    CMutableTransaction txCoinbase(*pblock.vtx[0]);\n+    txCoinbase.vout.resize(4);\n+    txCoinbase.vout[0] = witness;\n+    txCoinbase.vout[1] = witness;\n+    txCoinbase.vout[2] = min_plus_one;\n+    txCoinbase.vout[3] = invalid;\n+    pblock.vtx[0] = MakeTransactionRef(std::move(txCoinbase));\n+\n+    BOOST_CHECK_EQUAL(GetWitnessCommitmentIndex(pblock), 2);\n+}\n BOOST_AUTO_TEST_SUITE_END()"
      }
    ]
  }
]