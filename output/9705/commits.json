[
  {
    "sha": "8713de83a076c0e8e80f3bb0a6edf1f17d3856db",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4NzEzZGU4M2EwNzZjMGU4ZTgwZjNiYjBhNmVkZjFmMTdkMzg1NmRi",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-02-07T09:41:47Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-02-07T12:01:41Z"
      },
      "message": "build: Add options to override BDB cflags/libs\n\nAdd environment settings to specify the CFLAGS and LIBS to be used for\nBerkeleyDB directly. These will completely by-pass autodetection in the\nsame way as other similar flags.\n\n```\nBDB_CFLAGS  C compiler flags for BerkeleyDB, bypasses autodetection\nBDB_LIBS    Linker flags for BerkeleyDB, bypasses autodetection\n```\n\nImplements #3921.",
      "tree": {
        "sha": "68f3a96c4c1aa59d13f687e710bd8dcc6667afbe",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/68f3a96c4c1aa59d13f687e710bd8dcc6667afbe"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8713de83a076c0e8e80f3bb0a6edf1f17d3856db",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8713de83a076c0e8e80f3bb0a6edf1f17d3856db",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8713de83a076c0e8e80f3bb0a6edf1f17d3856db",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8713de83a076c0e8e80f3bb0a6edf1f17d3856db/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "02464da5e4aa8c19d4fff3859dcdee822e2af78c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/02464da5e4aa8c19d4fff3859dcdee822e2af78c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/02464da5e4aa8c19d4fff3859dcdee822e2af78c"
      }
    ],
    "stats": {
      "total": 120,
      "additions": 64,
      "deletions": 56
    },
    "files": [
      {
        "sha": "980f1e8f19cd2f1351be332d4908f7ba75ce4cfb",
        "filename": "build-aux/m4/bitcoin_find_bdb48.m4",
        "status": "modified",
        "additions": 64,
        "deletions": 56,
        "changes": 120,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8713de83a076c0e8e80f3bb0a6edf1f17d3856db/build-aux/m4/bitcoin_find_bdb48.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8713de83a076c0e8e80f3bb0a6edf1f17d3856db/build-aux/m4/bitcoin_find_bdb48.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/bitcoin_find_bdb48.m4?ref=8713de83a076c0e8e80f3bb0a6edf1f17d3856db",
        "patch": "@@ -3,68 +3,76 @@ dnl Distributed under the MIT software license, see the accompanying\n dnl file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n AC_DEFUN([BITCOIN_FIND_BDB48],[\n-  AC_MSG_CHECKING([for Berkeley DB C++ headers])\n-  BDB_CPPFLAGS=\n-  BDB_LIBS=\n-  bdbpath=X\n-  bdb48path=X\n-  bdbdirlist=\n-  for _vn in 4.8 48 4 5 ''; do\n-    for _pfx in b lib ''; do\n-      bdbdirlist=\"$bdbdirlist ${_pfx}db${_vn}\"\n+  AC_ARG_VAR(BDB_CFLAGS, [C compiler flags for BerkeleyDB, bypasses autodetection])\n+  AC_ARG_VAR(BDB_LIBS, [Linker flags for BerkeleyDB, bypasses autodetection])\n+\n+  if test \"x$BDB_CFLAGS\" = \"x\"; then\n+    AC_MSG_CHECKING([for Berkeley DB C++ headers])\n+    BDB_CPPFLAGS=\n+    bdbpath=X\n+    bdb48path=X\n+    bdbdirlist=\n+    for _vn in 4.8 48 4 5 ''; do\n+      for _pfx in b lib ''; do\n+        bdbdirlist=\"$bdbdirlist ${_pfx}db${_vn}\"\n+      done\n+    done\n+    for searchpath in $bdbdirlist ''; do\n+      test -n \"${searchpath}\" && searchpath=\"${searchpath}/\"\n+      AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+        #include <${searchpath}db_cxx.h>\n+      ]],[[\n+        #if !((DB_VERSION_MAJOR == 4 && DB_VERSION_MINOR >= 8) || DB_VERSION_MAJOR > 4)\n+          #error \"failed to find bdb 4.8+\"\n+        #endif\n+      ]])],[\n+        if test \"x$bdbpath\" = \"xX\"; then\n+          bdbpath=\"${searchpath}\"\n+        fi\n+      ],[\n+        continue\n+      ])\n+      AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+        #include <${searchpath}db_cxx.h>\n+      ]],[[\n+        #if !(DB_VERSION_MAJOR == 4 && DB_VERSION_MINOR == 8)\n+          #error \"failed to find bdb 4.8\"\n+        #endif\n+      ]])],[\n+        bdb48path=\"${searchpath}\"\n+        break\n+      ],[])\n     done\n-  done\n-  for searchpath in $bdbdirlist ''; do\n-    test -n \"${searchpath}\" && searchpath=\"${searchpath}/\"\n-    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n-      #include <${searchpath}db_cxx.h>\n-    ]],[[\n-      #if !((DB_VERSION_MAJOR == 4 && DB_VERSION_MINOR >= 8) || DB_VERSION_MAJOR > 4)\n-        #error \"failed to find bdb 4.8+\"\n-      #endif\n-    ]])],[\n-      if test \"x$bdbpath\" = \"xX\"; then\n-        bdbpath=\"${searchpath}\"\n-      fi\n-    ],[\n-      continue\n-    ])\n-    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n-      #include <${searchpath}db_cxx.h>\n-    ]],[[\n-      #if !(DB_VERSION_MAJOR == 4 && DB_VERSION_MINOR == 8)\n-        #error \"failed to find bdb 4.8\"\n-      #endif\n-    ]])],[\n-      bdb48path=\"${searchpath}\"\n-      break\n-    ],[])\n-  done\n-  if test \"x$bdbpath\" = \"xX\"; then\n-    AC_MSG_RESULT([no])\n-    AC_MSG_ERROR([libdb_cxx headers missing, ]AC_PACKAGE_NAME[ requires this library for wallet functionality (--disable-wallet to disable wallet functionality)])\n-  elif test \"x$bdb48path\" = \"xX\"; then\n-    BITCOIN_SUBDIR_TO_INCLUDE(BDB_CPPFLAGS,[${bdbpath}],db_cxx)\n-    AC_ARG_WITH([incompatible-bdb],[AS_HELP_STRING([--with-incompatible-bdb], [allow using a bdb version other than 4.8])],[\n-      AC_MSG_WARN([Found Berkeley DB other than 4.8; wallets opened by this build will not be portable!])\n-    ],[\n-      AC_MSG_ERROR([Found Berkeley DB other than 4.8, required for portable wallets (--with-incompatible-bdb to ignore or --disable-wallet to disable wallet functionality)])\n-    ])\n+    if test \"x$bdbpath\" = \"xX\"; then\n+      AC_MSG_RESULT([no])\n+      AC_MSG_ERROR([libdb_cxx headers missing, ]AC_PACKAGE_NAME[ requires this library for wallet functionality (--disable-wallet to disable wallet functionality)])\n+    elif test \"x$bdb48path\" = \"xX\"; then\n+      BITCOIN_SUBDIR_TO_INCLUDE(BDB_CPPFLAGS,[${bdbpath}],db_cxx)\n+      AC_ARG_WITH([incompatible-bdb],[AS_HELP_STRING([--with-incompatible-bdb], [allow using a bdb version other than 4.8])],[\n+        AC_MSG_WARN([Found Berkeley DB other than 4.8; wallets opened by this build will not be portable!])\n+      ],[\n+        AC_MSG_ERROR([Found Berkeley DB other than 4.8, required for portable wallets (--with-incompatible-bdb to ignore or --disable-wallet to disable wallet functionality)])\n+      ])\n+    else\n+      BITCOIN_SUBDIR_TO_INCLUDE(BDB_CPPFLAGS,[${bdb48path}],db_cxx)\n+      bdbpath=\"${bdb48path}\"\n+    fi\n   else\n-    BITCOIN_SUBDIR_TO_INCLUDE(BDB_CPPFLAGS,[${bdb48path}],db_cxx)\n-    bdbpath=\"${bdb48path}\"\n+    BDB_CPPFLAGS=${BDB_CFLAGS}\n   fi\n   AC_SUBST(BDB_CPPFLAGS)\n   \n-  # TODO: Ideally this could find the library version and make sure it matches the headers being used\n-  for searchlib in db_cxx-4.8 db_cxx; do\n-    AC_CHECK_LIB([$searchlib],[main],[\n-      BDB_LIBS=\"-l${searchlib}\"\n-      break\n-    ])\n-  done\n   if test \"x$BDB_LIBS\" = \"x\"; then\n-      AC_MSG_ERROR([libdb_cxx missing, ]AC_PACKAGE_NAME[ requires this library for wallet functionality (--disable-wallet to disable wallet functionality)])\n+    # TODO: Ideally this could find the library version and make sure it matches the headers being used\n+    for searchlib in db_cxx-4.8 db_cxx; do\n+      AC_CHECK_LIB([$searchlib],[main],[\n+        BDB_LIBS=\"-l${searchlib}\"\n+        break\n+      ])\n+    done\n+    if test \"x$BDB_LIBS\" = \"x\"; then\n+        AC_MSG_ERROR([libdb_cxx missing, ]AC_PACKAGE_NAME[ requires this library for wallet functionality (--disable-wallet to disable wallet functionality)])\n+    fi\n   fi\n   AC_SUBST(BDB_LIBS)\n ])"
      }
    ]
  },
  {
    "sha": "5cc2ebb619b6bc7125e6a5f83f860dfcaa759d93",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1Y2MyZWJiNjE5YjZiYzcxMjVlNmE1ZjgzZjg2MGRmY2FhNzU5ZDkz",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-02-07T09:58:18Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-02-07T12:01:41Z"
      },
      "message": "Update OpenBSD and FreeBSD build steps\n\nRe-try with most recent versions, and use BDB_CFLAGS/BDB_LIBS to\ndirectly point at BerkeleyDB instead of CPPFLAGS hacks.",
      "tree": {
        "sha": "da367badf48c3712b9ae98ca3adc53c6157b39ca",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/da367badf48c3712b9ae98ca3adc53c6157b39ca"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5cc2ebb619b6bc7125e6a5f83f860dfcaa759d93",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5cc2ebb619b6bc7125e6a5f83f860dfcaa759d93",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5cc2ebb619b6bc7125e6a5f83f860dfcaa759d93",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5cc2ebb619b6bc7125e6a5f83f860dfcaa759d93/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8713de83a076c0e8e80f3bb0a6edf1f17d3856db",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8713de83a076c0e8e80f3bb0a6edf1f17d3856db",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8713de83a076c0e8e80f3bb0a6edf1f17d3856db"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 6,
      "deletions": 4
    },
    "files": [
      {
        "sha": "f4a9826d8079a57185be0e43a57a87854dc3140c",
        "filename": "doc/build-openbsd.md",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5cc2ebb619b6bc7125e6a5f83f860dfcaa759d93/doc/build-openbsd.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5cc2ebb619b6bc7125e6a5f83f860dfcaa759d93/doc/build-openbsd.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-openbsd.md?ref=5cc2ebb619b6bc7125e6a5f83f860dfcaa759d93",
        "patch": "@@ -1,6 +1,6 @@\n OpenBSD build guide\n ======================\n-(updated for OpenBSD 5.9)\n+(updated for OpenBSD 6.0)\n \n This guide describes how to build bitcoind and command-line utilities on OpenBSD.\n \n@@ -124,7 +124,7 @@ To configure with wallet:\n ```bash\n ./configure --with-gui=no --with-boost=$BOOST_PREFIX \\\n     CC=egcc CXX=eg++ CPP=ecpp \\\n-    LDFLAGS=\"-L${BDB_PREFIX}/lib/\" CPPFLAGS=\"-I${BDB_PREFIX}/include/\"\n+    BDB_LIBS=\"-L${BDB_PREFIX}/lib -ldb_cxx-4.8\" BDB_CFLAGS=\"-I${BDB_PREFIX}/include\"\n ```\n \n To configure without wallet:\n@@ -142,6 +142,8 @@ gmake check\n Clang (not currently working)\n ------------------------------\n \n+WARNING: This is outdated, needs to be updated for OpenBSD 6.0 and re-tried.\n+\n Using a newer g++ results in linking the new code to a new libstdc++.\n Libraries built with the old g++, will still import the old library.\n This gives conflicts, necessitating rebuild of all C++ dependencies of the application."
      },
      {
        "sha": "31a88a1b18c64c214aad5ea5ad75ac79d25aa57a",
        "filename": "doc/build-unix.md",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5cc2ebb619b6bc7125e6a5f83f860dfcaa759d93/doc/build-unix.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5cc2ebb619b6bc7125e6a5f83f860dfcaa759d93/doc/build-unix.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-unix.md?ref=5cc2ebb619b6bc7125e6a5f83f860dfcaa759d93",
        "patch": "@@ -315,7 +315,7 @@ For further documentation on the depends system see [README.md](../depends/READM\n Building on FreeBSD\n --------------------\n \n-(Updated as of FreeBSD 10.3)\n+(Updated as of FreeBSD 11.0)\n \n Clang is installed by default as `cc` compiler, this makes it easier to get\n started than on [OpenBSD](build-openbsd.md). Installing dependencies:\n@@ -337,7 +337,7 @@ with 4.8-built Bitcoin Core is needed follow the steps under \"Berkeley DB\" above\n Then build using:\n \n     ./autogen.sh\n-    ./configure --with-incompatible-bdb CPPFLAGS=-I/usr/local/include/db5 LDFLAGS=-L/usr/local/lib/db5\n+    ./configure --with-incompatible-bdb BDB_CFLAGS=\"-I/usr/local/include/db5\" BDB_LIBS=\"-L/usr/local/lib -ldb_cxx-5\"\n     make\n \n *Note on debugging*: The version of `gdb` installed by default is [ancient and considered harmful](https://wiki.freebsd.org/GdbRetirement)."
      }
    ]
  }
]