[
  {
    "sha": "198fd7b0bd5a99db4e45009c422a66c0b1285767",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxOThmZDdiMGJkNWE5OWRiNGU0NTAwOWM0MjJhNjZjMGIxMjg1NzY3",
    "commit": {
      "author": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2011-03-27T18:56:18Z"
      },
      "committer": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2011-04-06T01:18:26Z"
      },
      "message": "Report immature coinbase transactions in listtransactions\n\nReport coin generation transactions as 'category':'immature' until they have 120 confirmations (when they are reported as 'category':'generate', as before).\nIf the block they are in is not part of the main chain (you lost a 'block race'), then they are reported as 'category':'orphan' (with 0 confirmations).",
      "tree": {
        "sha": "9656b3f9577f8516d12e965f6e1f4d5bc679be0a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9656b3f9577f8516d12e965f6e1f4d5bc679be0a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/198fd7b0bd5a99db4e45009c422a66c0b1285767",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/198fd7b0bd5a99db4e45009c422a66c0b1285767",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/198fd7b0bd5a99db4e45009c422a66c0b1285767",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/198fd7b0bd5a99db4e45009c422a66c0b1285767/comments",
    "author": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0a4cb8697645b61f781421aa10cf3f7841f776e5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0a4cb8697645b61f781421aa10cf3f7841f776e5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0a4cb8697645b61f781421aa10cf3f7841f776e5"
      }
    ],
    "stats": {
      "total": 52,
      "additions": 31,
      "deletions": 21
    },
    "files": [
      {
        "sha": "cd4f92eab33621c951a1774d0a1f8e1688eab27b",
        "filename": "main.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 8,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/198fd7b0bd5a99db4e45009c422a66c0b1285767/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/198fd7b0bd5a99db4e45009c422a66c0b1285767/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/main.cpp?ref=198fd7b0bd5a99db4e45009c422a66c0b1285767",
        "patch": "@@ -407,18 +407,20 @@ int CWalletTx::GetRequestCount() const\n     return nRequests;\n }\n \n-void CWalletTx::GetAmounts(int64& nGenerated, list<pair<string, int64> >& listReceived,\n+void CWalletTx::GetAmounts(int64& nGeneratedImmature, int64& nGeneratedMature, list<pair<string, int64> >& listReceived,\n                            list<pair<string, int64> >& listSent, int64& nFee, string& strSentAccount) const\n {\n-    nGenerated = nFee = 0;\n+    nGeneratedImmature = nGeneratedMature = nFee = 0;\n     listReceived.clear();\n     listSent.clear();\n     strSentAccount = strFromAccount;\n \n     if (IsCoinBase())\n     {\n-        if (GetDepthInMainChain() >= COINBASE_MATURITY)\n-            nGenerated = GetCredit();\n+        if (GetBlocksToMaturity() > 0)\n+            nGeneratedImmature = CTransaction::GetCredit();\n+        else\n+            nGeneratedMature = GetCredit();\n         return;\n     }\n \n@@ -466,15 +468,15 @@ void CWalletTx::GetAccountAmounts(const string& strAccount, int64& nGenerated, i\n {\n     nGenerated = nReceived = nSent = nFee = 0;\n \n-    int64 allGenerated, allFee;\n-    allGenerated = allFee = 0;\n+    int64 allGeneratedImmature, allGeneratedMature, allFee;\n+    allGeneratedImmature = allGeneratedMature = allFee = 0;\n     string strSentAccount;\n     list<pair<string, int64> > listReceived;\n     list<pair<string, int64> > listSent;\n-    GetAmounts(allGenerated, listReceived, listSent, allFee, strSentAccount);\n+    GetAmounts(allGeneratedImmature, allGeneratedMature, listReceived, listSent, allFee, strSentAccount);\n \n     if (strAccount == \"\")\n-        nGenerated = allGenerated;\n+        nGenerated = allGeneratedMature;\n     if (strAccount == strSentAccount)\n     {\n         foreach(const PAIRTYPE(string,int64)& s, listSent)"
      },
      {
        "sha": "54f4a6b49b225af8920450f522448af16eb38285",
        "filename": "main.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/198fd7b0bd5a99db4e45009c422a66c0b1285767/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/198fd7b0bd5a99db4e45009c422a66c0b1285767/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/main.h?ref=198fd7b0bd5a99db4e45009c422a66c0b1285767",
        "patch": "@@ -882,7 +882,7 @@ class CWalletTx : public CMerkleTx\n         return nChangeCached;\n     }\n \n-    void GetAmounts(int64& nGenerated, list<pair<string /* address */, int64> >& listReceived,\n+    void GetAmounts(int64& nGeneratedImmature, int64& nGeneratedMature, list<pair<string /* address */, int64> >& listReceived,\n                     list<pair<string /* address */, int64> >& listSent, int64& nFee, string& strSentAccount) const;\n \n     void GetAccountAmounts(const string& strAccount, int64& nGenerated, int64& nReceived, "
      },
      {
        "sha": "cf8390da3a8c8b57cc034d06fa89cc1676ab0dcb",
        "filename": "rpc.cpp",
        "status": "modified",
        "additions": 20,
        "deletions": 12,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/198fd7b0bd5a99db4e45009c422a66c0b1285767/rpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/198fd7b0bd5a99db4e45009c422a66c0b1285767/rpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/rpc.cpp?ref=198fd7b0bd5a99db4e45009c422a66c0b1285767",
        "patch": "@@ -649,12 +649,12 @@ Value getbalance(const Array& params, bool fHelp)\n         for (map<uint256, CWalletTx>::iterator it = mapWallet.begin(); it != mapWallet.end(); ++it)\n         {\n             const CWalletTx& wtx = (*it).second;\n-            int64 allGenerated, allFee;\n-            allGenerated = allFee = 0;\n+            int64 allGeneratedImmature, allGeneratedMature, allFee;\n+            allGeneratedImmature = allGeneratedMature = allFee = 0;\n             string strSentAccount;\n             list<pair<string, int64> > listReceived;\n             list<pair<string, int64> > listSent;\n-            wtx.GetAmounts(allGenerated, listReceived, listSent, allFee, strSentAccount);\n+            wtx.GetAmounts(allGeneratedImmature, allGeneratedMature, listReceived, listSent, allFee, strSentAccount);\n             foreach(const PAIRTYPE(string,int64)& r, listReceived)\n             {\n                 nBalance += r.second;\n@@ -664,7 +664,7 @@ Value getbalance(const Array& params, bool fHelp)\n             foreach(const PAIRTYPE(string,int64)& r, listSent)\n                 nBalance -= r.second;\n             nBalance -= allFee;\n-            nBalance += allGenerated;\n+            nBalance += allGeneratedMature;\n         }\n         printf(\"Found %d accounts\\n\", vAccounts.size());\n         return  ValueFromAmount(nBalance);\n@@ -993,21 +993,29 @@ Value listreceivedbyaccount(const Array& params, bool fHelp)\n \n void ListTransactions(const CWalletTx& wtx, const string& strAccount, int nMinDepth, bool fLong, Array& ret)\n {\n-    int64 nGenerated, nFee;\n+    int64 nGeneratedImmature, nGeneratedMature, nFee;\n     string strSentAccount;\n     list<pair<string, int64> > listReceived;\n     list<pair<string, int64> > listSent;\n-    wtx.GetAmounts(nGenerated, listReceived, listSent, nFee, strSentAccount);\n+    wtx.GetAmounts(nGeneratedImmature, nGeneratedMature, listReceived, listSent, nFee, strSentAccount);\n \n     bool fAllAccounts = (strAccount == string(\"*\"));\n \n     // Generated blocks assigned to account \"\"\n-    if (nGenerated != 0 && (fAllAccounts || strAccount == \"\"))\n+    if ((nGeneratedMature+nGeneratedImmature) != 0 && (fAllAccounts || strAccount == \"\"))\n     {\n         Object entry;\n         entry.push_back(Pair(\"account\", string(\"\")));\n-        entry.push_back(Pair(\"category\", \"generate\"));\n-        entry.push_back(Pair(\"amount\", ValueFromAmount(nGenerated)));\n+        if (nGeneratedImmature)\n+        {\n+            entry.push_back(Pair(\"category\", wtx.GetDepthInMainChain() ? \"immature\" : \"orphan\"));\n+            entry.push_back(Pair(\"amount\", ValueFromAmount(nGeneratedImmature)));\n+        }\n+        else\n+        {\n+            entry.push_back(Pair(\"category\", \"generate\"));\n+            entry.push_back(Pair(\"amount\", ValueFromAmount(nGeneratedMature)));\n+        }\n         if (fLong)\n             WalletTxToJSON(wtx, entry);\n         ret.push_back(entry);\n@@ -1159,17 +1167,17 @@ Value listaccounts(const Array& params, bool fHelp)\n         for (map<uint256, CWalletTx>::iterator it = mapWallet.begin(); it != mapWallet.end(); ++it)\n         {\n             const CWalletTx& wtx = (*it).second;\n-            int64 nGenerated, nFee;\n+            int64 nGeneratedImmature, nGeneratedMature, nFee;\n             string strSentAccount;\n             list<pair<string, int64> > listReceived;\n             list<pair<string, int64> > listSent;\n-            wtx.GetAmounts(nGenerated, listReceived, listSent, nFee, strSentAccount);\n+            wtx.GetAmounts(nGeneratedImmature, nGeneratedMature, listReceived, listSent, nFee, strSentAccount);\n             mapAccountBalances[strSentAccount] -= nFee;\n             foreach(const PAIRTYPE(string, int64)& s, listSent)\n                 mapAccountBalances[strSentAccount] -= s.second;\n             if (wtx.GetDepthInMainChain() >= nMinDepth)\n             {\n-                mapAccountBalances[\"\"] += nGenerated;\n+                mapAccountBalances[\"\"] += nGeneratedMature;\n                 foreach(const PAIRTYPE(string, int64)& r, listReceived)\n                     if (mapAddressBook.count(r.first))\n                         mapAccountBalances[mapAddressBook[r.first]] += r.second;"
      }
    ]
  }
]