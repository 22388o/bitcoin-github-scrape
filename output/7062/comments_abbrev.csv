sdaftuar,2015-11-19T20:11:08Z,"This will create merge conflicts for #6871 -- let's try to get that reviewed and merged first, and I can resolve the merge conflicts in this PR afterward.\n",https://github.com/bitcoin/bitcoin/pull/7062#issuecomment-158183611,158183611,
petertodd,2015-11-20T20:35:35Z,"Note that this leaks information about what transactions you've prioritised to the outside world even more so than before. Probably unavoidable right now, but in the long run it'd be better if we had a separate mempool for mining that kept priority deltas. Transactions themselves can be shared across both mempools and reference counted.\n",https://github.com/bitcoin/bitcoin/pull/7062#issuecomment-158517367,158517367,
petertodd,2015-11-20T20:43:48Z,"Otherwise, utACK, though will want to recheck rebased version once #6871 is merged of course.\n",https://github.com/bitcoin/bitcoin/pull/7062#issuecomment-158518999,158518999,
sdaftuar,2015-11-30T21:55:23Z,"Rebased.\n\n@petertodd This pull has now been updated to use fee deltas for the replace-by-fee calculation, and the replace-by-fee rpc test has been updated to exercise that logic.  (I cherry-picked #7137, so if that gets merged first I'll rebase this one, or I can close that pull if that's easier.)\n",https://github.com/bitcoin/bitcoin/pull/7062#issuecomment-160773784,160773784,
sdaftuar,2015-12-01T17:57:19Z,Rebased and changed rpc test to error out if the mempool ends up with stuck transactions.\n,https://github.com/bitcoin/bitcoin/pull/7062#issuecomment-161047660,161047660,
sdaftuar,2015-12-01T19:34:30Z,Rebased now that #6898 is merged\n,https://github.com/bitcoin/bitcoin/pull/7062#issuecomment-161071963,161071963,
sdaftuar,2015-12-02T16:28:37Z,"Updated so that now mempool acceptance is also determined by including a transaction's fee delta from PrioritiseTransaction.\n\nIn doing so, I realized that `GetMinRelayFee` is not very useful, so I scrapped it.  With the `DEFAULT_BLOCK_PRIORITY_SIZE` set to 0, this function was stopping all free transactions from making it in (unless they were prioritised using `PrioritiseTransaction`).  Scrappin",https://github.com/bitcoin/bitcoin/pull/7062#issuecomment-161355377,161355377,
morcos,2015-12-02T16:50:39Z,utACK (modulo comment above)\n,https://github.com/bitcoin/bitcoin/pull/7062#issuecomment-161361808,161361808,
sdaftuar,2015-12-02T17:59:06Z,Addressed @morcos' nit (and squashed into first commit).\n,https://github.com/bitcoin/bitcoin/pull/7062#issuecomment-161381292,161381292,
laanwj,2015-12-21T16:13:00Z,utACK\n,https://github.com/bitcoin/bitcoin/pull/7062#issuecomment-166345308,166345308,
petertodd,2015-11-20T20:36:45Z,"The term ""modified fees"" won't mean anything to the reader. How about ""fees of in-mempool descendants (including this one) with priority deltas applied""\n",https://github.com/bitcoin/bitcoin/pull/7062#discussion_r45515378,45515378,src/rpcblockchain.cpp
sdaftuar,2015-11-24T13:25:49Z,"I was trying to make a reference to the term ""modifedfee"" which I added above without having to redefine the concept, what if I just do: ""modified fees (see above) of in-mempool descendants (including this one)""\n",https://github.com/bitcoin/bitcoin/pull/7062#discussion_r45733812,45733812,src/rpcblockchain.cpp
petertodd,2015-12-01T01:50:56Z,"FYI, I've found bugs before by erroring out if any txs are stuck; not sure this is a good idea.\n",https://github.com/bitcoin/bitcoin/pull/7062#discussion_r46231549,46231549,qa/rpc-tests/replace-by-fee.py
sdaftuar,2015-12-01T14:57:59Z,"Fair enough -- I ran into an issue where the really large transaction created in one of the tests was too big to mined, but I should be able to rework that test and make this check error out instead.\n",https://github.com/bitcoin/bitcoin/pull/7062#discussion_r46287540,46287540,qa/rpc-tests/replace-by-fee.py
