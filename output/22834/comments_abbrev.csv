laanwj,2021-08-30 13:20:36,"Concept ACK, I think this makes onlynet closer to what users expect, clearing up all kind of exceptions that have to be documented. Thanks!",https://github.com/bitcoin/bitcoin/pull/22834#issuecomment-908337743,908337743,
vasild,2021-08-30 14:35:14,"With this PR, one could use for example `-onlynet=ipv6 -onion=127.0.0.1:9050` and Bitcoin Core will not automatically connect to `.onion` hosts. However one could later use the `addnode` RPC to manually connect to an `.onion` host. This matches the current behavior in `master` wrt other networks, e.g. `-onlynet=ipv6` and later `addnode` to an ipv4 host.",https://github.com/bitcoin/bitcoin/pull/22834#issuecomment-908396174,908396174,
jonatack,2021-08-30 15:51:28,"(Feel free to ignore my comments until you re-push.) \n\nDo you plan to add functional tests like in #22651?",https://github.com/bitcoin/bitcoin/pull/22834#issuecomment-908457560,908457560,
DrahtBot,2021-08-30 22:34:03,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#15423](https://github.com/bitcoin/bitcoin/pull/15423) (torcontrol: Query Tor for correct -onion configuration by luke-jr",https://github.com/bitcoin/bitcoin/pull/22834#issuecomment-908750635,908750635,
vasild,2021-08-31 12:57:09,"> Do you plan to add functional tests like in #22651?\n\nIt would be good. I wonder how to test this deterministically. I guess I would want to have an addrman with just addresses from one network and use onlynet another network and check that a connection is never attempted, or something like that.",https://github.com/bitcoin/bitcoin/pull/22834#issuecomment-909211602,909211602,
prayank23,2021-08-31 15:19:44,"Concept ACK\n\nStarted testing today and need to test lot of combinations with onlynet. Sharing things that I observed during basic tests:\n\n1. `onlynet=i2p` with `proxy=127.0.0.1:9050` does not create any outbound connections to onion nodes using PR branch however it connects to onion node with Master branch. âœ… \n\n    1.1 Run node 1:\n     ```\n     bitcoind -regtest=1 -port=18333 -rpcp",https://github.com/bitcoin/bitcoin/pull/22834#issuecomment-909335451,909335451,
Rspigler,2021-09-01 02:44:10,Concept ACK! Glad there's a full fix for this now.,https://github.com/bitcoin/bitcoin/pull/22834#issuecomment-909824016,909824016,
vasild,2021-09-01 14:51:25,"`7b821b9d4c...0ea0de6438`: optimize `OutboundConnectionAllowedTo()` for a fast lookup coz it is called frequently, plus some rewording in the docs.",https://github.com/bitcoin/bitcoin/pull/22834#issuecomment-910362016,910362016,
vasild,2021-09-01 15:07:51,"@prayank23, thanks for looking into this! So all is working as expected. `-logips=1` will improve your log output a tiny bit. I also tested this manually by adding a printout inside `OutboundConnectionAllowedTo()`, with `-onlynet=i2p -onion=127.0.0.1:9050` it is called many times with `*.onion` addresses and returns `false` as expected.\n\nA room for improvement (out of the scope of this PR): wi",https://github.com/bitcoin/bitcoin/pull/22834#issuecomment-910377602,910377602,
naumenkogs,2021-09-01 16:02:03,Concept ACK,https://github.com/bitcoin/bitcoin/pull/22834#issuecomment-910427409,910427409,
prayank23,2021-09-01 19:13:34,"Day 2 of testing `onlynet`\n\n| ipv4          | ipv6          | onion         | i2p           | logs           | Comments           |  \n| ------------- | ------------- | ------------- | ------------- | -------------  |  -------------     |\n|   :large_blue_circle:  |      |               |               |        https://pastebin.com/raw/nq5kXqYK          |  No issues          :white_check_mar",https://github.com/bitcoin/bitcoin/pull/22834#issuecomment-910608011,910608011,
mzumsande,2021-09-01 23:28:17,"I wonder about the interactions of the new `OutboundConnectionAllowedTo()` with `IsReachable()`, which is how `-onlynet` also influences things - it seems complicated  to  have both `OutboundConnectionAllowedTo()` and `IsReachable()` doing similar things with subtle differences, and depending on the situation one or the other is effective.\n\nMy understanding is that `IsReachable()` will still b",https://github.com/bitcoin/bitcoin/pull/22834#issuecomment-910893133,910893133,
vasild,2021-09-02 08:25:59,"@prayank23 does the machine have an actual IPv6 connectivity? Do you see successful connections to IPv6 hosts when `-onlynet=` is not used? The text `Network is unreachable` is an actual system error, it does not come from Bitcoin Core.",https://github.com/bitcoin/bitcoin/pull/22834#issuecomment-911377881,911377881,
prayank23,2021-09-02 10:30:25,"Yes it was ipv6 connectivity issue. There were 2 issues: 1. One of my ISP didn't support ipv6 2. Had to change network adapter from NAT to bridged in VM. Checked connectivity on http://test-ipv6.com/\n\nUpdated logs above as ipv6 works fine. Will test onion-ipv4, onion-ipv6, i2p-ipv4, i2p-ipv6, i2p-onion and ipv6-ipv4 today.",https://github.com/bitcoin/bitcoin/pull/22834#issuecomment-911511433,911511433,
vasild,2021-09-02 12:51:24,"@mzumsande, good insight! I think there are two distinct properties of a network:\n\n1. Whether it is reachable (the current `IsReachable()` function). That is - do we have the means to connect to it if we wanted?\n2. Whether we should choose hosts from that network for making automatic outbound connections (`-onlynet=`, or the newly added `OutboundConnectionAllowedTo()` function)\n\nFor exam",https://github.com/bitcoin/bitcoin/pull/22834#issuecomment-911645461,911645461,
naumenkogs,2021-09-02 17:09:22,I agree with @mzumsande. I find it confusing that we have two functions considering `-onlynet` (see how `vfLimited` is filled with `onlynet`).,https://github.com/bitcoin/bitcoin/pull/22834#issuecomment-911890961,911890961,
prayank23,2021-09-03 11:15:53,"It tried few combinations with `onlynet` and everything works as expected. Although I am still not sure about trade-offs involved in each of these. Things get even more complicated if user has incoming connections on multiple networks as discussed in IRC: https://www.erisian.com.au/bitcoin-core-dev/log-2021-09-01.html (260 2021-09-01T20:26:30)\n\nThis PR has limited scope and it does fix the iss",https://github.com/bitcoin/bitcoin/pull/22834#issuecomment-912461047,912461047,
vasild,2021-09-03 16:25:18,"@mzumsande, @naumenkogs, if we need not make a distinction between 1. and 2. (from https://github.com/bitcoin/bitcoin/pull/22834#issuecomment-911645461), then an alternative approach is possible, similar to the one described above by @mzumsande (but not quite the same).\n\nWhat do you think about this: https://github.com/vasild/bitcoin/commit/46a9a797f1692bc8ceefea1bee49caba5ca87127? Note that e",https://github.com/bitcoin/bitcoin/pull/22834#issuecomment-912661346,912661346,
mzumsande,2021-09-05 21:51:46,"I didn't find a place we would need to make the distinction between the ability (1) and the willingness (2) to make outbound connections to networks. Also the status quo for `IsReachable()` before this PR, despite the name, is a mix of 1. and 2. because it is initially set by `-onlynet` user preference (2) and then possibly overruled based on the means to connect to a network (1):\n\n>For exampl",https://github.com/bitcoin/bitcoin/pull/22834#issuecomment-913233420,913233420,
practicalswift,2021-09-06 09:12:47,Concept ACK,https://github.com/bitcoin/bitcoin/pull/22834#issuecomment-913485177,913485177,
vasild,2021-09-07 12:34:36,"> I didn't find a place we would need to make the distinction between the ability (1) and the willingness (2) to make outbound connections to networks.\n\nThe only one I can think of is this - it would be strange to display onion as not reachable in `getnetworkinfo` RPC, but to be able to open manual connections to it using `addnode`.\n\n> Also the status quo for `IsReachable()` before this PR",https://github.com/bitcoin/bitcoin/pull/22834#issuecomment-914265670,914265670,
vasild,2021-11-08 16:39:37,"`0ea0de6438...051c2554ca`: rebase and refactor to address concerns:\n\n1. now we don't have two similar functions `IsReachable()` and `OutboundConnectionAllowedTo()` (@mzumsande, @naumenkogs)\n2. initialization order in `OutboundConnectionAllowedTo()` - this function was removed (@luke-jr, @laanwj)\n\nRename `proxyType` to `Proxy` in a second commit (scripted diff), which is optional.\n\nIn",https://github.com/bitcoin/bitcoin/pull/22834#issuecomment-963348421,963348421,
vasild,2021-11-08 16:47:59,"@mzumsande \n\n> Would it be possible as an alternative approach to get Reachable in line with `-onlynet` expectations ...\n\nAlmost! The only exception now is that we `SetReachable(NET_ONION, false)` is we don't have a proxy to reach the Tor network.",https://github.com/bitcoin/bitcoin/pull/22834#issuecomment-963355581,963355581,
vasild,2021-11-09 17:17:37,"Comparison of `IsReachable(NET_ONION)` before and after this PR:\n\n<table>\n<tr>\n<td rowspan=""2"" align=""center"">Configuration parameters <code>-proxy</code>, <code>-onion</code>, <code>-onlynet</code></td>\n<td rowspan=""2""></td>\n<td colspan=""2"" align=""center""><code>IsReachable(NET_ONION)</code></td>\n</tr>\n<tr>\n<td align=""center"">master @ 8346004ac8</td>\n<td align=""center"">PR</td>",https://github.com/bitcoin/bitcoin/pull/22834#issuecomment-964362357,964362357,
mzumsande,2021-11-11 00:48:13,"Concept/ Approach ACK.\n\nI like the reworked approach, the handling of `-onlynet` in connection with other parameters and `IsReachable()` makes sense to me and is clearer than before - so my points are addressed.\nHaving very little experience with Tor in bitcoin, I'll need to do more testing/exploration before actually ACKing.",https://github.com/bitcoin/bitcoin/pull/22834#issuecomment-965892927,965892927,
vasild,2021-11-24 11:47:00,"`051c2554ca...0eea83a85e`: rebase due to conflicts\n\nInvalidates ACK from @prayank23",https://github.com/bitcoin/bitcoin/pull/22834#issuecomment-977801402,977801402,
jonatack,2021-08-30 15:35:17,"(Initial drive-by review.) Every onlynet question I've received has been about using -onlynet=onion, -onlynet=i2p, or both together, so it may be reasonable to address what node operators seem most interested in and minimize confusion, by using the hidden networks for the onlynet examples in both `doc/tor.md` and `doc/i2p.md` (unless you use all of them in the examples to illustrate that it is pos",https://github.com/bitcoin/bitcoin/pull/22834#discussion_r698592051,698592051,doc/tor.md
jonatack,2021-08-30 15:46:28,"naming nit, `onlynet` or maybe `onlynet_str` might be a clearer iterator name for `onlynets`, and `net` is often used for passing a `Network` enum, e.g. in `src/net.h::IsReachable()` and `SetReachable()`)\n```suggestion\n    return std::any_of(onlynets.begin(), onlynets.end(), [&addr](const auto& onlynet) {\n```",https://github.com/bitcoin/bitcoin/pull/22834#discussion_r698600479,698600479,src/net.cpp
vasild,2021-08-31 12:53:58,"Ok, I will update this as per above. I changed it because it was using onlynet with all possible networks which looked strange to me.",https://github.com/bitcoin/bitcoin/pull/22834#discussion_r699293514,699293514,doc/tor.md
vasild,2021-08-31 12:54:59,"I will optimize this because it will be called frequently (not as in https://github.com/bitcoin/bitcoin/pull/22651, once per startup). `std::unordered_set` has a lookup time `O(1)`.",https://github.com/bitcoin/bitcoin/pull/22834#discussion_r699294332,699294332,src/net.cpp
vasild,2021-09-01 14:49:54,Done.,https://github.com/bitcoin/bitcoin/pull/22834#discussion_r700290402,700290402,doc/tor.md
vasild,2021-09-01 14:50:21,Done (optimized).,https://github.com/bitcoin/bitcoin/pull/22834#discussion_r700290807,700290807,src/net.cpp
luke-jr,2021-09-20 21:23:57,"This seems fragile. Can we guarantee `onlynets` is initialised only after the config files get loaded?\n\nAt the very least, I think it should be tested.",https://github.com/bitcoin/bitcoin/pull/22834#discussion_r712524563,712524563,src/net.cpp
laanwj,2021-11-08 08:57:22,"Yes, I also strongly prefer initialization to be done explicitly in an explicit order. This code belongs in one of the `Init` functions, or called from there. We've historiically had many initialization bugs due to hidden gotchas like this.",https://github.com/bitcoin/bitcoin/pull/22834#discussion_r744517063,744517063,src/net.cpp
vasild,2021-11-08 16:40:55,Dropped this altogether for a (hopefully) better and simpler approach.,https://github.com/bitcoin/bitcoin/pull/22834#discussion_r744903474,744903474,src/net.cpp
