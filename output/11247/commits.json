[
  {
    "sha": "a1ea1cfbd8d4fc976f0ab2423d395e03ded6eedd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphMWVhMWNmYmQ4ZDRmYzk3NmYwYWIyNDIzZDM5NWUwM2RlZDZlZWRk",
    "commit": {
      "author": {
        "name": "Chris Moore",
        "email": "dooglus@gmail.com",
        "date": "2017-08-30T07:32:54Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2017-09-05T22:22:28Z"
      },
      "message": "qt: Use IsMine to validate custom change address\n\n(cherry picked from commit c41224dfd51c896341bbf2fa23e160bf5ffe27c3)",
      "tree": {
        "sha": "4847e4214efec4ec9c0e103eaaed8d466f476512",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4847e4214efec4ec9c0e103eaaed8d466f476512"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a1ea1cfbd8d4fc976f0ab2423d395e03ded6eedd",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a1ea1cfbd8d4fc976f0ab2423d395e03ded6eedd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a1ea1cfbd8d4fc976f0ab2423d395e03ded6eedd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a1ea1cfbd8d4fc976f0ab2423d395e03ded6eedd/comments",
    "author": {
      "login": "dooglus",
      "id": 573356,
      "node_id": "MDQ6VXNlcjU3MzM1Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dooglus",
      "html_url": "https://github.com/dooglus",
      "followers_url": "https://api.github.com/users/dooglus/followers",
      "following_url": "https://api.github.com/users/dooglus/following{/other_user}",
      "gists_url": "https://api.github.com/users/dooglus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dooglus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
      "organizations_url": "https://api.github.com/users/dooglus/orgs",
      "repos_url": "https://api.github.com/users/dooglus/repos",
      "events_url": "https://api.github.com/users/dooglus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dooglus/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1227be30ecff2bdf9f88213f356e1b4a2b28543a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1227be30ecff2bdf9f88213f356e1b4a2b28543a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1227be30ecff2bdf9f88213f356e1b4a2b28543a"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 7,
      "deletions": 9
    },
    "files": [
      {
        "sha": "c59111abd5e08c9132793d9f182fb0b7a4c5b3ed",
        "filename": "src/qt/sendcoinsdialog.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 6,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a1ea1cfbd8d4fc976f0ab2423d395e03ded6eedd/src/qt/sendcoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a1ea1cfbd8d4fc976f0ab2423d395e03ded6eedd/src/qt/sendcoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.cpp?ref=a1ea1cfbd8d4fc976f0ab2423d395e03ded6eedd",
        "patch": "@@ -789,18 +789,16 @@ void SendCoinsDialog::coinControlChangeEdited(const QString& text)\n         }\n         else // Valid address\n         {\n-            CKeyID keyid;\n-            addr.GetKeyID(keyid);\n-            if (!model->havePrivKey(keyid)) // Unknown change address\n-            {\n+            const CTxDestination dest = addr.Get();\n+            if (!model->IsSpendable(dest)) {\n                 ui->labelCoinControlChangeLabel->setText(tr(\"Warning: Unknown change address\"));\n \n                 // confirmation dialog\n                 QMessageBox::StandardButton btnRetVal = QMessageBox::question(this, tr(\"Confirm custom change address\"), tr(\"The address you selected for change is not part of this wallet. Any or all funds in your wallet may be sent to this address. Are you sure?\"),\n                     QMessageBox::Yes | QMessageBox::Cancel, QMessageBox::Cancel);\n \n                 if(btnRetVal == QMessageBox::Yes)\n-                    CoinControlDialog::coinControl->destChange = addr.Get();\n+                    CoinControlDialog::coinControl->destChange = dest;\n                 else\n                 {\n                     ui->lineEditCoinControlChange->setText(\"\");\n@@ -819,7 +817,7 @@ void SendCoinsDialog::coinControlChangeEdited(const QString& text)\n                 else\n                     ui->labelCoinControlChangeLabel->setText(tr(\"(no label)\"));\n \n-                CoinControlDialog::coinControl->destChange = addr.Get();\n+                CoinControlDialog::coinControl->destChange = dest;\n             }\n         }\n     }"
      },
      {
        "sha": "5b63af617d4fabb7318e59c4f9a13200a20b5eb0",
        "filename": "src/qt/walletmodel.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a1ea1cfbd8d4fc976f0ab2423d395e03ded6eedd/src/qt/walletmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a1ea1cfbd8d4fc976f0ab2423d395e03ded6eedd/src/qt/walletmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.cpp?ref=a1ea1cfbd8d4fc976f0ab2423d395e03ded6eedd",
        "patch": "@@ -561,9 +561,9 @@ bool WalletModel::getPubKey(const CKeyID &address, CPubKey& vchPubKeyOut) const\n     return wallet->GetPubKey(address, vchPubKeyOut);\n }\n \n-bool WalletModel::havePrivKey(const CKeyID &address) const\n+bool WalletModel::IsSpendable(const CTxDestination& dest) const\n {\n-    return wallet->HaveKey(address);\n+    return IsMine(*wallet, dest) & ISMINE_SPENDABLE;\n }\n \n bool WalletModel::getPrivKey(const CKeyID &address, CKey& vchPrivKeyOut) const"
      },
      {
        "sha": "05733f82727a6be6d695685e71297e5deb98c6a4",
        "filename": "src/qt/walletmodel.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a1ea1cfbd8d4fc976f0ab2423d395e03ded6eedd/src/qt/walletmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a1ea1cfbd8d4fc976f0ab2423d395e03ded6eedd/src/qt/walletmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.h?ref=a1ea1cfbd8d4fc976f0ab2423d395e03ded6eedd",
        "patch": "@@ -190,7 +190,7 @@ class WalletModel : public QObject\n     UnlockContext requestUnlock();\n \n     bool getPubKey(const CKeyID &address, CPubKey& vchPubKeyOut) const;\n-    bool havePrivKey(const CKeyID &address) const;\n+    bool IsSpendable(const CTxDestination& dest) const;\n     bool getPrivKey(const CKeyID &address, CKey& vchPrivKeyOut) const;\n     void getOutputs(const std::vector<COutPoint>& vOutpoints, std::vector<COutput>& vOutputs);\n     bool isSpent(const COutPoint& outpoint) const;"
      }
    ]
  }
]