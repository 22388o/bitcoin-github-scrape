[
  {
    "sha": "5de72fab60200b392bd3ff158229579ff8005926",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ZGU3MmZhYjYwMjAwYjM5MmJkM2ZmMTU4MjI5NTc5ZmY4MDA1OTI2",
    "commit": {
      "author": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2016-01-12T13:30:41Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2016-02-20T03:38:50Z"
      },
      "message": "Consensus: Introduce CBlockIndexView in consensus/storage_interfaces_cpp.h",
      "tree": {
        "sha": "f7b0e38934d28ac26c21154c12762be0512dfe40",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f7b0e38934d28ac26c21154c12762be0512dfe40"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5de72fab60200b392bd3ff158229579ff8005926",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5de72fab60200b392bd3ff158229579ff8005926",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5de72fab60200b392bd3ff158229579ff8005926",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5de72fab60200b392bd3ff158229579ff8005926/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b6e00af8193f46fa02af13c2e9852a6bd7461d00",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b6e00af8193f46fa02af13c2e9852a6bd7461d00",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b6e00af8193f46fa02af13c2e9852a6bd7461d00"
      }
    ],
    "stats": {
      "total": 35,
      "additions": 35,
      "deletions": 0
    },
    "files": [
      {
        "sha": "9d2e12f9dceef94be63215a1f9a36b4d906cc3a2",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5de72fab60200b392bd3ff158229579ff8005926/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5de72fab60200b392bd3ff158229579ff8005926/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=5de72fab60200b392bd3ff158229579ff8005926",
        "patch": "@@ -261,6 +261,7 @@ libbitcoin_consensus_a_SOURCES = \\\n   consensus/merkle.cpp \\\n   consensus/merkle.h \\\n   consensus/params.h \\\n+  consensus/storage_interfaces_cpp.h \\\n   consensus/validation.h \\\n   hash.cpp \\\n   hash.h \\"
      },
      {
        "sha": "412c7c082c3fc52a6dbf47dbce129f743d39d257",
        "filename": "src/consensus/storage_interfaces_cpp.h",
        "status": "added",
        "additions": 34,
        "deletions": 0,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5de72fab60200b392bd3ff158229579ff8005926/src/consensus/storage_interfaces_cpp.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5de72fab60200b392bd3ff158229579ff8005926/src/consensus/storage_interfaces_cpp.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/storage_interfaces_cpp.h?ref=5de72fab60200b392bd3ff158229579ff8005926",
        "patch": "@@ -0,0 +1,34 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_CONSENSUS_STORAGE_INTERFACES_CPP_H\n+#define BITCOIN_CONSENSUS_STORAGE_INTERFACES_CPP_H\n+\n+#include \"uint256.h\"\n+\n+// CPP storage interfaces\n+\n+class CBlockIndexView\n+{\n+public:\n+    CBlockIndexView() {};\n+    virtual ~CBlockIndexView() {};\n+\n+    virtual const uint256 GetBlockHash() const = 0;\n+    //! Efficiently find an ancestor of this block.\n+    virtual const CBlockIndexView* GetAncestorView(int64_t height) const = 0;\n+    virtual int64_t GetHeight() const = 0;\n+    virtual int32_t GetVersion() const = 0;\n+    virtual int32_t GetTime() const = 0;\n+    virtual int32_t GetBits() const = 0;\n+    // Potential optimizations\n+    virtual const CBlockIndexView* GetPrev() const\n+    {\n+        return GetAncestorView(GetHeight() - 1);\n+    };\n+    virtual int64_t GetMedianTimePast() const = 0;\n+};\n+\n+#endif // BITCOIN_CONSENSUS_STORAGE_INTERFACES_CPP_H"
      }
    ]
  },
  {
    "sha": "acc90b77ae34b09b089ee92e7d5868a0ceb88bd5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphY2M5MGI3N2FlMzRiMDliMDg5ZWU5MmU3ZDU4NjhhMGNlYjg4YmQ1",
    "commit": {
      "author": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2016-01-12T15:43:10Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2016-02-20T03:38:50Z"
      },
      "message": "Consensus: Introduce CCoinsInterface and CUtxoView in consensus/storage_interfaces_cpp.h",
      "tree": {
        "sha": "c52374789679648a6ed79f34b06ff17136280d0a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c52374789679648a6ed79f34b06ff17136280d0a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/acc90b77ae34b09b089ee92e7d5868a0ceb88bd5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/acc90b77ae34b09b089ee92e7d5868a0ceb88bd5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/acc90b77ae34b09b089ee92e7d5868a0ceb88bd5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/acc90b77ae34b09b089ee92e7d5868a0ceb88bd5/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5de72fab60200b392bd3ff158229579ff8005926",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5de72fab60200b392bd3ff158229579ff8005926",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5de72fab60200b392bd3ff158229579ff8005926"
      }
    ],
    "stats": {
      "total": 49,
      "additions": 49,
      "deletions": 0
    },
    "files": [
      {
        "sha": "8731f3d86110168aa93ee4838cb50b3b4fc60135",
        "filename": "src/consensus/storage_interfaces_cpp.h",
        "status": "modified",
        "additions": 49,
        "deletions": 0,
        "changes": 49,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/acc90b77ae34b09b089ee92e7d5868a0ceb88bd5/src/consensus/storage_interfaces_cpp.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/acc90b77ae34b09b089ee92e7d5868a0ceb88bd5/src/consensus/storage_interfaces_cpp.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/storage_interfaces_cpp.h?ref=acc90b77ae34b09b089ee92e7d5868a0ceb88bd5",
        "patch": "@@ -6,8 +6,13 @@\n #ifndef BITCOIN_CONSENSUS_STORAGE_INTERFACES_CPP_H\n #define BITCOIN_CONSENSUS_STORAGE_INTERFACES_CPP_H\n \n+#include \"amount.h\"\n+#include \"primitives/transaction.h\"\n #include \"uint256.h\"\n \n+class CTransaction;\n+class CTxOut;\n+\n // CPP storage interfaces\n \n class CBlockIndexView\n@@ -31,4 +36,48 @@ class CBlockIndexView\n     virtual int64_t GetMedianTimePast() const = 0;\n };\n \n+class CCoinsInterface\n+{\n+public:\n+    CCoinsInterface() {};\n+    virtual ~CCoinsInterface() {};    \n+\n+    //! check whether a particular output is still available or spent\n+    virtual bool IsAvailable(int32_t nPos) const = 0;\n+    virtual bool IsCoinBase() const = 0;\n+    //! check whether the entire CCoins is spent\n+    //! note that only !IsPruned() CCoins can be serialized\n+    virtual bool IsPruned() const = 0;\n+    virtual const CAmount& GetAmount(int32_t nPos) const = 0;\n+    virtual const CScript& GetScriptPubKey(int32_t nPos) const = 0;\n+    virtual int64_t GetHeight() const = 0;\n+};\n+\n+class CUtxoView\n+{\n+public:\n+    CUtxoView() {};\n+    virtual ~CUtxoView() {};\n+\n+    /**\n+     * Return a pointer to CCoins in the cache, or NULL if not found. This is\n+     * more efficient than GetCoins. Modifications to other cache entries are\n+     * allowed while accessing the returned pointer.\n+     */\n+    virtual const CCoinsInterface* AccessCoins(const uint256 &txid) const = 0;\n+    //! Check whether all prevouts of the transaction are present in the UTXO set represented by this view\n+    virtual bool HaveInputs(const CTransaction& tx) const\n+    {\n+        if (!tx.IsCoinBase()) {\n+            for (unsigned int i = 0; i < tx.vin.size(); i++) {\n+                const COutPoint& prevout = tx.vin[i].prevout;\n+                const CCoinsInterface* coins = AccessCoins(prevout.hash);\n+                if (!coins || !coins->IsAvailable(prevout.n))\n+                    return false;\n+            }\n+        }\n+        return true;\n+    }\n+};\n+\n #endif // BITCOIN_CONSENSUS_STORAGE_INTERFACES_CPP_H"
      }
    ]
  },
  {
    "sha": "b42a5b2ed3aaf8a92ac6e032567f1a2ce213b787",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiNDJhNWIyZWQzYWFmOGE5MmFjNmUwMzI1NjdmMWEyY2UyMTNiNzg3",
    "commit": {
      "author": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2016-01-12T16:11:04Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2016-02-20T03:38:50Z"
      },
      "message": "Consensus: Make coins.o implement consensus/storage_interfaces_cpp\n\nCCoins implements CCoinsInterface\nCCoinsView implements CUtxoView (not fully, but CCoinsViewCache implements the rest)",
      "tree": {
        "sha": "a6e5fa44ca21bc77652d42d93e8aa2ace8eda973",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a6e5fa44ca21bc77652d42d93e8aa2ace8eda973"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b42a5b2ed3aaf8a92ac6e032567f1a2ce213b787",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b42a5b2ed3aaf8a92ac6e032567f1a2ce213b787",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b42a5b2ed3aaf8a92ac6e032567f1a2ce213b787",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b42a5b2ed3aaf8a92ac6e032567f1a2ce213b787/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "acc90b77ae34b09b089ee92e7d5868a0ceb88bd5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/acc90b77ae34b09b089ee92e7d5868a0ceb88bd5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/acc90b77ae34b09b089ee92e7d5868a0ceb88bd5"
      }
    ],
    "stats": {
      "total": 56,
      "additions": 32,
      "deletions": 24
    },
    "files": [
      {
        "sha": "0cba6d9dea5a2b647db97a45505de6b4f0f59754",
        "filename": "src/coins.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 14,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b42a5b2ed3aaf8a92ac6e032567f1a2ce213b787/src/coins.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b42a5b2ed3aaf8a92ac6e032567f1a2ce213b787/src/coins.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/coins.cpp?ref=b42a5b2ed3aaf8a92ac6e032567f1a2ce213b787",
        "patch": "@@ -249,20 +249,6 @@ CAmount CCoinsViewCache::GetValueIn(const CTransaction& tx) const\n     return nResult;\n }\n \n-bool CCoinsViewCache::HaveInputs(const CTransaction& tx) const\n-{\n-    if (!tx.IsCoinBase()) {\n-        for (unsigned int i = 0; i < tx.vin.size(); i++) {\n-            const COutPoint &prevout = tx.vin[i].prevout;\n-            const CCoins* coins = AccessCoins(prevout.hash);\n-            if (!coins || !coins->IsAvailable(prevout.n)) {\n-                return false;\n-            }\n-        }\n-    }\n-    return true;\n-}\n-\n double CCoinsViewCache::GetPriority(const CTransaction &tx, int nHeight, CAmount &inChainInputValue) const\n {\n     inChainInputValue = 0;"
      },
      {
        "sha": "f8b55f1db2e095d7a51832c146793055b980e930",
        "filename": "src/coins.h",
        "status": "modified",
        "additions": 32,
        "deletions": 10,
        "changes": 42,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b42a5b2ed3aaf8a92ac6e032567f1a2ce213b787/src/coins.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b42a5b2ed3aaf8a92ac6e032567f1a2ce213b787/src/coins.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/coins.h?ref=b42a5b2ed3aaf8a92ac6e032567f1a2ce213b787",
        "patch": "@@ -7,9 +7,11 @@\n #define BITCOIN_COINS_H\n \n #include \"compressor.h\"\n+#include \"consensus/storage_interfaces_cpp.h\"\n #include \"core_memusage.h\"\n #include \"memusage.h\"\n #include \"serialize.h\"\n+#include \"tinyformat.h\"\n #include \"uint256.h\"\n \n #include <assert.h>\n@@ -70,7 +72,7 @@\n  *              * 8c988f1a4a4de2161e0f50aac7f17e7f9555caa4: address uint160\n  *  - height = 120891\n  */\n-class CCoins\n+class CCoins : public CCoinsInterface\n {\n public:\n     //! whether transaction is a coinbase\n@@ -148,7 +150,7 @@ class CCoins\n \n     void CalcMaskSize(unsigned int &nBytes, unsigned int &nNonzeroBytes) const;\n \n-    bool IsCoinBase() const {\n+    virtual bool IsCoinBase() const {\n         return fCoinBase;\n     }\n \n@@ -242,13 +244,13 @@ class CCoins\n     bool Spend(uint32_t nPos);\n \n     //! check whether a particular output is still available\n-    bool IsAvailable(unsigned int nPos) const {\n-        return (nPos < vout.size() && !vout[nPos].IsNull());\n+    virtual bool IsAvailable(int32_t nPos) const {\n+        return ((unsigned int)nPos < vout.size() && !vout[nPos].IsNull());\n     }\n \n     //! check whether the entire CCoins is spent\n     //! note that only !IsPruned() CCoins can be serialized\n-    bool IsPruned() const {\n+    virtual bool IsPruned() const {\n         BOOST_FOREACH(const CTxOut &out, vout)\n             if (!out.IsNull())\n                 return false;\n@@ -262,6 +264,21 @@ class CCoins\n         }\n         return ret;\n     }\n+\n+    // Fully implement CCoinsInterface\n+    virtual const CAmount& GetAmount(int32_t nPos) const\n+    {\n+        return vout[nPos].nValue;\n+    };\n+    virtual const CScript& GetScriptPubKey(int32_t nPos) const\n+    {\n+        return vout[nPos].scriptPubKey;\n+    };\n+    virtual int64_t GetHeight() const\n+    {\n+        return nHeight;\n+    };\n+\n };\n \n class CCoinsKeyHasher\n@@ -312,7 +329,7 @@ struct CCoinsStats\n \n \n /** Abstract view on the open txout dataset. */\n-class CCoinsView\n+class CCoinsView : public CUtxoView\n {\n public:\n     //! Retrieve the CCoins (unspent transaction outputs) for a given txid\n@@ -334,6 +351,14 @@ class CCoinsView\n \n     //! As we use CCoinsViews polymorphically, have a virtual destructor\n     virtual ~CCoinsView() {}\n+\n+    // Fully implement CUtxoView\n+\n+    //! AccessCoins not implemented for CCoinsView\n+    virtual const CCoinsInterface* AccessCoins(const uint256 &txid) const\n+    {\n+        throw std::runtime_error(strprintf(\"%s: Not implemented for CCoinsView.\", __func__));\n+    };\n };\n \n \n@@ -417,7 +442,7 @@ class CCoinsViewCache : public CCoinsViewBacked\n      * more efficient than GetCoins. Modifications to other cache entries are\n      * allowed while accessing the returned pointer.\n      */\n-    const CCoins* AccessCoins(const uint256 &txid) const;\n+    virtual const CCoins* AccessCoins(const uint256 &txid) const;\n \n     /**\n      * Return a modifiable reference to a CCoins. If no entry with the given\n@@ -466,9 +491,6 @@ class CCoinsViewCache : public CCoinsViewBacked\n      */\n     CAmount GetValueIn(const CTransaction& tx) const;\n \n-    //! Check whether all prevouts of the transaction are present in the UTXO set represented by this view\n-    bool HaveInputs(const CTransaction& tx) const;\n-\n     /**\n      * Return priority of tx at height nHeight. Also calculate the sum of the values of the inputs\n      * that are already in the chain.  These are the inputs that will age and increase priority as"
      }
    ]
  }
]