[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/298630019",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10308#issuecomment-298630019",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10308",
    "id": 298630019,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5ODYzMDAxOQ==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-02T13:07:12Z",
    "updated_at": "2017-05-02T13:07:12Z",
    "author_association": "MEMBER",
    "body": "LGTM, utACK, as we have the `memory_cleanse` function anyway let's use it where it makes sense.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/298630019/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/298631101",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10308#issuecomment-298631101",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10308",
    "id": 298631101,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5ODYzMTEwMQ==",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?u=eab5d0cdbb6cc25087cb61d4ca4a6f85255f42a7&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-02T13:11:28Z",
    "updated_at": "2017-05-02T13:11:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "utACK 2ac544531d8fd50807f9a8d98b576e3a49a6402c",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/298631101/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114186169",
    "pull_request_review_id": 35632137,
    "id": 114186169,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExNDE4NjE2OQ==",
    "diff_hunk": "@@ -8,6 +8,8 @@\n \n #include <stdlib.h>\n \n+// Securely erase a span of memory in a way guaranteed not to be",
    "path": "src/support/cleanse.h",
    "position": null,
    "original_position": 4,
    "commit_id": "6c914ac176624468c66febdb1ad0e24ff2118a5f",
    "original_commit_id": "2ac544531d8fd50807f9a8d98b576e3a49a6402c",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I don't believe anything in C++ can actually guarantee this.",
    "created_at": "2017-05-01T19:43:52Z",
    "updated_at": "2017-05-03T18:36:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10308#discussion_r114186169",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10308",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114186169"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10308#discussion_r114186169"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10308"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114186169/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 11,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114212690",
    "pull_request_review_id": 35632137,
    "id": 114212690,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExNDIxMjY5MA==",
    "diff_hunk": "@@ -180,22 +180,23 @@ class CDB\n         Dbt datValue;\n         datValue.set_flags(DB_DBT_MALLOC);\n         int ret = pdb->get(activeTxn, &datKey, &datValue, 0);\n-        memset(datKey.get_data(), 0, datKey.get_size());\n-        if (datValue.get_data() == NULL)\n-            return false;\n-\n-        // Unserialize value\n-        try {\n-            CDataStream ssValue((char*)datValue.get_data(), (char*)datValue.get_data() + datValue.get_size(), SER_DISK, CLIENT_VERSION);\n-            ssValue >> value;\n-        } catch (const std::exception&) {\n-            return false;\n+        memory_cleanse(datKey.get_data(), datKey.get_size());\n+        bool success = false;\n+        if (datValue.get_data() != NULL)\n+        {",
    "path": "src/wallet/db.h",
    "position": null,
    "original_position": 17,
    "commit_id": "6c914ac176624468c66febdb1ad0e24ff2118a5f",
    "original_commit_id": "2ac544531d8fd50807f9a8d98b576e3a49a6402c",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Style nit: brace on the same line as the if.",
    "created_at": "2017-05-01T22:08:47Z",
    "updated_at": "2017-05-03T18:36:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10308#discussion_r114212690",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10308",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114212690"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10308#discussion_r114212690"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10308"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114212690/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 186,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114312369",
    "pull_request_review_id": 35766694,
    "id": 114312369,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExNDMxMjM2OQ==",
    "diff_hunk": "@@ -180,22 +180,23 @@ class CDB\n         Dbt datValue;\n         datValue.set_flags(DB_DBT_MALLOC);\n         int ret = pdb->get(activeTxn, &datKey, &datValue, 0);\n-        memset(datKey.get_data(), 0, datKey.get_size());\n-        if (datValue.get_data() == NULL)\n-            return false;\n-\n-        // Unserialize value\n-        try {\n-            CDataStream ssValue((char*)datValue.get_data(), (char*)datValue.get_data() + datValue.get_size(), SER_DISK, CLIENT_VERSION);\n-            ssValue >> value;\n-        } catch (const std::exception&) {\n-            return false;\n+        memory_cleanse(datKey.get_data(), datKey.get_size());\n+        bool success = false;\n+        if (datValue.get_data() != NULL)\n+        {\n+            // Unserialize value\n+            try {\n+                CDataStream ssValue((char*)datValue.get_data(), (char*)datValue.get_data() + datValue.get_size(), SER_DISK, CLIENT_VERSION);\n+                ssValue >> value;\n+                success = true;\n+            } catch (const std::exception&) {",
    "path": "src/wallet/db.h",
    "position": 22,
    "original_position": 23,
    "commit_id": "6c914ac176624468c66febdb1ad0e24ff2118a5f",
    "original_commit_id": "2ac544531d8fd50807f9a8d98b576e3a49a6402c",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Silently ignored exceptions are one of the larger frustrations when troubleshooting C++ code. Checking more closely it seems this is ok: please add a comment e.g. `/* success = false */` here to show what is happening.",
    "created_at": "2017-05-02T13:03:08Z",
    "updated_at": "2017-05-03T18:36:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10308#discussion_r114312369",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10308",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114312369"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10308#discussion_r114312369"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10308"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114312369/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 191,
    "original_line": 191,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114376472",
    "pull_request_review_id": 35837297,
    "id": 114376472,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExNDM3NjQ3Mg==",
    "diff_hunk": "@@ -8,6 +8,8 @@\n \n #include <stdlib.h>\n \n+// Securely erase a span of memory in a way guaranteed not to be",
    "path": "src/support/cleanse.h",
    "position": null,
    "original_position": 4,
    "commit_id": "6c914ac176624468c66febdb1ad0e24ff2118a5f",
    "original_commit_id": "2ac544531d8fd50807f9a8d98b576e3a49a6402c",
    "user": {
      "login": "tjps",
      "id": 7519582,
      "node_id": "MDQ6VXNlcjc1MTk1ODI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7519582?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tjps",
      "html_url": "https://github.com/tjps",
      "followers_url": "https://api.github.com/users/tjps/followers",
      "following_url": "https://api.github.com/users/tjps/following{/other_user}",
      "gists_url": "https://api.github.com/users/tjps/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tjps/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tjps/subscriptions",
      "organizations_url": "https://api.github.com/users/tjps/orgs",
      "repos_url": "https://api.github.com/users/tjps/repos",
      "events_url": "https://api.github.com/users/tjps/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tjps/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "While it's true that there is nothing in the standard that guarantees this, there are numerous compiler-specific attributes for this, as well as libraries that guarantee this (like right now, memory_cleanse is just a wrapper around OPENSSL_cleanse)\r\n\r\nMy goal with adding the comment is to explain its purpose to other maintainers of the codebase, as it hopefully sees more use.",
    "created_at": "2017-05-02T17:29:57Z",
    "updated_at": "2017-05-03T18:36:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10308#discussion_r114376472",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10308",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114376472"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10308#discussion_r114376472"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10308"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114376472/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 11,
    "side": "RIGHT",
    "in_reply_to_id": 114186169
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114376973",
    "pull_request_review_id": 35837847,
    "id": 114376973,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExNDM3Njk3Mw==",
    "diff_hunk": "@@ -180,22 +180,23 @@ class CDB\n         Dbt datValue;\n         datValue.set_flags(DB_DBT_MALLOC);\n         int ret = pdb->get(activeTxn, &datKey, &datValue, 0);\n-        memset(datKey.get_data(), 0, datKey.get_size());\n-        if (datValue.get_data() == NULL)\n-            return false;\n-\n-        // Unserialize value\n-        try {\n-            CDataStream ssValue((char*)datValue.get_data(), (char*)datValue.get_data() + datValue.get_size(), SER_DISK, CLIENT_VERSION);\n-            ssValue >> value;\n-        } catch (const std::exception&) {\n-            return false;\n+        memory_cleanse(datKey.get_data(), datKey.get_size());\n+        bool success = false;\n+        if (datValue.get_data() != NULL)\n+        {",
    "path": "src/wallet/db.h",
    "position": null,
    "original_position": 17,
    "commit_id": "6c914ac176624468c66febdb1ad0e24ff2118a5f",
    "original_commit_id": "2ac544531d8fd50807f9a8d98b576e3a49a6402c",
    "user": {
      "login": "tjps",
      "id": 7519582,
      "node_id": "MDQ6VXNlcjc1MTk1ODI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7519582?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tjps",
      "html_url": "https://github.com/tjps",
      "followers_url": "https://api.github.com/users/tjps/followers",
      "following_url": "https://api.github.com/users/tjps/following{/other_user}",
      "gists_url": "https://api.github.com/users/tjps/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tjps/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tjps/subscriptions",
      "organizations_url": "https://api.github.com/users/tjps/orgs",
      "repos_url": "https://api.github.com/users/tjps/repos",
      "events_url": "https://api.github.com/users/tjps/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tjps/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "That's actually my preference as well, but I thought that was against the style guide for this repo.  Can I assume brace on same line for code going forward?",
    "created_at": "2017-05-02T17:32:05Z",
    "updated_at": "2017-05-03T18:36:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10308#discussion_r114376973",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10308",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114376973"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10308#discussion_r114376973"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10308"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114376973/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 186,
    "side": "RIGHT",
    "in_reply_to_id": 114212690
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114377242",
    "pull_request_review_id": 35838144,
    "id": 114377242,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExNDM3NzI0Mg==",
    "diff_hunk": "@@ -180,22 +180,23 @@ class CDB\n         Dbt datValue;\n         datValue.set_flags(DB_DBT_MALLOC);\n         int ret = pdb->get(activeTxn, &datKey, &datValue, 0);\n-        memset(datKey.get_data(), 0, datKey.get_size());\n-        if (datValue.get_data() == NULL)\n-            return false;\n-\n-        // Unserialize value\n-        try {\n-            CDataStream ssValue((char*)datValue.get_data(), (char*)datValue.get_data() + datValue.get_size(), SER_DISK, CLIENT_VERSION);\n-            ssValue >> value;\n-        } catch (const std::exception&) {\n-            return false;\n+        memory_cleanse(datKey.get_data(), datKey.get_size());\n+        bool success = false;\n+        if (datValue.get_data() != NULL)\n+        {\n+            // Unserialize value\n+            try {\n+                CDataStream ssValue((char*)datValue.get_data(), (char*)datValue.get_data() + datValue.get_size(), SER_DISK, CLIENT_VERSION);\n+                ssValue >> value;\n+                success = true;\n+            } catch (const std::exception&) {",
    "path": "src/wallet/db.h",
    "position": 22,
    "original_position": 23,
    "commit_id": "6c914ac176624468c66febdb1ad0e24ff2118a5f",
    "original_commit_id": "2ac544531d8fd50807f9a8d98b576e3a49a6402c",
    "user": {
      "login": "tjps",
      "id": 7519582,
      "node_id": "MDQ6VXNlcjc1MTk1ODI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7519582?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tjps",
      "html_url": "https://github.com/tjps",
      "followers_url": "https://api.github.com/users/tjps/followers",
      "following_url": "https://api.github.com/users/tjps/following{/other_user}",
      "gists_url": "https://api.github.com/users/tjps/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tjps/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tjps/subscriptions",
      "organizations_url": "https://api.github.com/users/tjps/orgs",
      "repos_url": "https://api.github.com/users/tjps/repos",
      "events_url": "https://api.github.com/users/tjps/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tjps/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Good idea, added.",
    "created_at": "2017-05-02T17:33:11Z",
    "updated_at": "2017-05-03T18:36:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10308#discussion_r114377242",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10308",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114377242"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10308#discussion_r114377242"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10308"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114377242/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 191,
    "original_line": 191,
    "side": "RIGHT",
    "in_reply_to_id": 114312369
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114378126",
    "pull_request_review_id": 35839078,
    "id": 114378126,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExNDM3ODEyNg==",
    "diff_hunk": "@@ -8,6 +8,8 @@\n \n #include <stdlib.h>\n \n+// Securely erase a span of memory in a way guaranteed not to be",
    "path": "src/support/cleanse.h",
    "position": null,
    "original_position": 4,
    "commit_id": "6c914ac176624468c66febdb1ad0e24ff2118a5f",
    "original_commit_id": "2ac544531d8fd50807f9a8d98b576e3a49a6402c",
    "user": {
      "login": "tjps",
      "id": 7519582,
      "node_id": "MDQ6VXNlcjc1MTk1ODI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7519582?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tjps",
      "html_url": "https://github.com/tjps",
      "followers_url": "https://api.github.com/users/tjps/followers",
      "following_url": "https://api.github.com/users/tjps/following{/other_user}",
      "gists_url": "https://api.github.com/users/tjps/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tjps/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tjps/subscriptions",
      "organizations_url": "https://api.github.com/users/tjps/orgs",
      "repos_url": "https://api.github.com/users/tjps/repos",
      "events_url": "https://api.github.com/users/tjps/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tjps/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "On further research, I'm not sure OPENSSL_cleanse actually guarantees anything at all.  ",
    "created_at": "2017-05-02T17:36:57Z",
    "updated_at": "2017-05-03T18:36:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10308#discussion_r114378126",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10308",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114378126"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10308#discussion_r114378126"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10308"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114378126/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 11,
    "side": "RIGHT",
    "in_reply_to_id": 114186169
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114459940",
    "pull_request_review_id": 35927221,
    "id": 114459940,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExNDQ1OTk0MA==",
    "diff_hunk": "@@ -8,6 +8,8 @@\n \n #include <stdlib.h>\n \n+// Securely erase a span of memory in a way guaranteed not to be",
    "path": "src/support/cleanse.h",
    "position": null,
    "original_position": 4,
    "commit_id": "6c914ac176624468c66febdb1ad0e24ff2118a5f",
    "original_commit_id": "2ac544531d8fd50807f9a8d98b576e3a49a6402c",
    "user": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "> On further research, I'm not sure OPENSSL_cleanse actually guarantees anything at all.\r\n\r\nYep.",
    "created_at": "2017-05-03T01:21:01Z",
    "updated_at": "2017-05-03T18:36:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10308#discussion_r114459940",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10308",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114459940"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10308#discussion_r114459940"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10308"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114459940/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 11,
    "side": "RIGHT",
    "in_reply_to_id": 114186169
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114460199",
    "pull_request_review_id": 35927483,
    "id": 114460199,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExNDQ2MDE5OQ==",
    "diff_hunk": "@@ -8,6 +8,8 @@\n \n #include <stdlib.h>\n \n+// Securely erase a span of memory in a way guaranteed not to be",
    "path": "src/support/cleanse.h",
    "position": null,
    "original_position": 4,
    "commit_id": "6c914ac176624468c66febdb1ad0e24ff2118a5f",
    "original_commit_id": "2ac544531d8fd50807f9a8d98b576e3a49a6402c",
    "user": {
      "login": "tjps",
      "id": 7519582,
      "node_id": "MDQ6VXNlcjc1MTk1ODI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7519582?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tjps",
      "html_url": "https://github.com/tjps",
      "followers_url": "https://api.github.com/users/tjps/followers",
      "following_url": "https://api.github.com/users/tjps/following{/other_user}",
      "gists_url": "https://api.github.com/users/tjps/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tjps/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tjps/subscriptions",
      "organizations_url": "https://api.github.com/users/tjps/orgs",
      "repos_url": "https://api.github.com/users/tjps/repos",
      "events_url": "https://api.github.com/users/tjps/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tjps/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "To be fair in this case since OPENSSL_cleanse() exists in an external shared object, we know it won't be optimized out.   Should I back out this comment though?",
    "created_at": "2017-05-03T01:24:52Z",
    "updated_at": "2017-05-03T18:36:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10308#discussion_r114460199",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10308",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114460199"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10308#discussion_r114460199"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10308"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114460199/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 11,
    "side": "RIGHT",
    "in_reply_to_id": 114186169
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114461121",
    "pull_request_review_id": 35928446,
    "id": 114461121,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExNDQ2MTEyMQ==",
    "diff_hunk": "@@ -8,6 +8,8 @@\n \n #include <stdlib.h>\n \n+// Securely erase a span of memory in a way guaranteed not to be",
    "path": "src/support/cleanse.h",
    "position": null,
    "original_position": 4,
    "commit_id": "6c914ac176624468c66febdb1ad0e24ff2118a5f",
    "original_commit_id": "2ac544531d8fd50807f9a8d98b576e3a49a6402c",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "@tjps Nothing in C++ can guarantee that memory will be overwritten. The `memset_s` function from the C11 standard does require a guarantee, but gcc/g++ don't implement it I believe. So, writing in the source code that something has a guarantee may be misleading. Furthermore, the memory being overwritten is not the only thing we're after. The compiler is free to for example copy some of the memory to the stack first, where it could live longer.\r\n\r\nHowever, if we restrict ourselves to supported systems and platforms, we know more at this point in time. We know what optimizations are implemented, and what compilers are capable of. It is reasonable that a call won't be optimized out if it's in another module, but that may not be the case if we'd switch to LTO builds, for example.\r\n\r\nI would just write \"Attempt to overwrite a span of memory\" or something.",
    "created_at": "2017-05-03T01:38:04Z",
    "updated_at": "2017-05-03T18:36:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10308#discussion_r114461121",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10308",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114461121"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10308#discussion_r114461121"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10308"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114461121/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 11,
    "side": "RIGHT",
    "in_reply_to_id": 114186169
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114620400",
    "pull_request_review_id": 36102447,
    "id": 114620400,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExNDYyMDQwMA==",
    "diff_hunk": "@@ -8,6 +8,8 @@\n \n #include <stdlib.h>\n \n+// Securely erase a span of memory in a way guaranteed not to be",
    "path": "src/support/cleanse.h",
    "position": null,
    "original_position": 4,
    "commit_id": "6c914ac176624468c66febdb1ad0e24ff2118a5f",
    "original_commit_id": "2ac544531d8fd50807f9a8d98b576e3a49a6402c",
    "user": {
      "login": "tjps",
      "id": 7519582,
      "node_id": "MDQ6VXNlcjc1MTk1ODI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7519582?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tjps",
      "html_url": "https://github.com/tjps",
      "followers_url": "https://api.github.com/users/tjps/followers",
      "following_url": "https://api.github.com/users/tjps/following{/other_user}",
      "gists_url": "https://api.github.com/users/tjps/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tjps/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tjps/subscriptions",
      "organizations_url": "https://api.github.com/users/tjps/orgs",
      "repos_url": "https://api.github.com/users/tjps/repos",
      "events_url": "https://api.github.com/users/tjps/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tjps/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Agreed, I reduced the verbiage to make it clear that it is a best-effort attempt.  \r\n\r\nAlso, it is my understanding that LTO only affects the object files you are linking, so dynamically loaded .so's are still safe from compiler analysis.  But I could be wrong, I've never actually come across a project of any significant size using LTO.\r\n\r\nComment updated.",
    "created_at": "2017-05-03T18:33:47Z",
    "updated_at": "2017-05-03T18:36:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10308#discussion_r114620400",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10308",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114620400"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10308#discussion_r114620400"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10308"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/114620400/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 11,
    "side": "RIGHT",
    "in_reply_to_id": 114186169
  }
]