promag,2017-11-06T14:52:03Z,From what I can tell it's missing only one lock (in `PruneAndFlush`) maybe fix it here too?,https://github.com/bitcoin/bitcoin/pull/11617#issuecomment-342171683,342171683,
practicalswift,2017-11-06T15:28:06Z,@promag Good point. Looks good now now?,https://github.com/bitcoin/bitcoin/pull/11617#issuecomment-342183094,342183094,
promag,2017-11-06T15:31:07Z,"In that case reword PR and commit, like `Add missing cs_LastBlockFile locks`",https://github.com/bitcoin/bitcoin/pull/11617#issuecomment-342184070,342184070,
practicalswift,2017-11-06T15:44:21Z,@promag Done :-),https://github.com/bitcoin/bitcoin/pull/11617#issuecomment-342188459,342188459,
practicalswift,2017-11-06T16:23:27Z,@promag Had to revert to initial version. Encountered timeouts when adding locking in `PruneAndFlush` as suggested and haven't investigated deeper yet. What is your suggested patch? :-),https://github.com/bitcoin/bitcoin/pull/11617#issuecomment-342201927,342201927,
practicalswift,2017-11-06T20:33:38Z,@TheBlueMatt Even better! PR updated. Please re-review :-),https://github.com/bitcoin/bitcoin/pull/11617#issuecomment-342277522,342277522,
promag,2017-11-06T20:44:33Z,utACK 96ff97c. Please reword PR again.,https://github.com/bitcoin/bitcoin/pull/11617#issuecomment-342280360,342280360,
TheBlueMatt,2017-11-06T21:56:40Z,utACK 96ff97cc14b483643020df2497ab06511f5d2ae8 modulo now-incorrect comment.,https://github.com/bitcoin/bitcoin/pull/11617#issuecomment-342300980,342300980,
practicalswift,2017-11-06T22:16:15Z,@TheBlueMatt Comment removed :-),https://github.com/bitcoin/bitcoin/pull/11617#issuecomment-342306282,342306282,
TheBlueMatt,2017-11-06T23:46:35Z,utACK 932dcd49486c6616ee5bfab9588d59fd75c4f0d4,https://github.com/bitcoin/bitcoin/pull/11617#issuecomment-342326536,342326536,
promag,2017-11-07T00:54:57Z,"This PR is a bit messy now. Regarding the original intent, I think it should do:\n```diff\n@@ -2012,6 +2012,7 @@ void FlushStateToDisk() {\n }\n\n void PruneAndFlush() {\n+    LOCK2(cs_main, cs_LastBlockFile);\n     CValidationState state;\n     fCheckForPruning = true;\n     const CChainParams& chainparams = Params();\n```\nAn alternative is to add an argument to `FlushStateToDisk`, li",https://github.com/bitcoin/bitcoin/pull/11617#issuecomment-342339354,342339354,
TheBlueMatt,2017-11-07T00:58:23Z,"FlushStateToDisk already checks fCheckForPruning and doesn't do anything if it's not set and NONE is passed as the second argument. Despite the complication in FlushStateToDisk, I do not believe this PR has any effect except resolving the (probably not actually a) missing lock bug.\n\nOn November 6, 2017 7:55:04 PM EST, ""João Barbosa"" <notifications@github.com> wrote:\n>This PR is a bit messy now.",https://github.com/bitcoin/bitcoin/pull/11617#issuecomment-342339974,342339974,
promag,2017-11-07T01:00:15Z,"@TheBlueMatt IMO the best approach to avoid long/recursive/shared locks is to create a snapshot of the chain and use that downstream. The only lock required is when the chain snapshot is created. A slight more advanced solution is copy-on-write, which compared to shared lock, doesn't make the  writer wait for readers to finish.",https://github.com/bitcoin/bitcoin/pull/11617#issuecomment-342340268,342340268,
promag,2017-11-07T01:04:15Z,"@TheBlueMatt `PruneAndFlush` changes `fCheckForPruning` without the lock.\n\nWith:\n```diff\n@@ -2012,6 +2012,7 @@ void FlushStateToDisk() {\n }\n\n void PruneAndFlush() {\n+    AssertLockHeld(cs_LastBlockFile);\n     CValidationState state;\n     fCheckForPruning = true;\n     const CChainParams& chainparams = Params();\n```\nThe following fails:\n```\n./test/functional/pruning.py",https://github.com/bitcoin/bitcoin/pull/11617#issuecomment-342341040,342341040,
TheBlueMatt,2017-11-07T01:58:51Z,"PruneAndFlush() would change behavior in an otherwise-simple lock-fix PR, please, no.\n\nThe other part of my context is #10279, in which I want to more clearly separate out the disk operations from validation logic - thus, I'm strongly averse to adding a disk-management lock in validation functions directly.\n\nOn November 6, 2017 8:04:20 PM EST, ""João Barbosa"" <notifications@github.com> wrote:\n",https://github.com/bitcoin/bitcoin/pull/11617#issuecomment-342350889,342350889,
practicalswift,2017-11-08T10:11:02Z,We have one utACK from @TheBlueMatt. Anyone else willing to review? :-),https://github.com/bitcoin/bitcoin/pull/11617#issuecomment-342771260,342771260,
promag,2017-11-08T13:26:50Z,"Testing `fCheckForPruning` is not needed in `AcceptBlock` (which BTW asserts `cs_main` is held) since the check is done in `FlushStateToDisk`.\n\nACK 932dcd4.",https://github.com/bitcoin/bitcoin/pull/11617#issuecomment-342816816,342816816,
practicalswift,2017-11-21T19:11:42Z,Ready for merge? :-),https://github.com/bitcoin/bitcoin/pull/11617#issuecomment-346130350,346130350,
practicalswift,2018-01-28T10:48:51Z,Any chance of this getting merged or should I close?,https://github.com/bitcoin/bitcoin/pull/11617#issuecomment-361053729,361053729,
practicalswift,2018-01-29T15:13:31Z,Rebased! Please re-review :-),https://github.com/bitcoin/bitcoin/pull/11617#issuecomment-361276085,361276085,
practicalswift,2018-03-14T15:00:32Z,"This trivial fix is blocking my other locking annotations work since I have to re-include this fix in all other PR:s to get correct locking. Having this merged into master would help the locking annotations effort :-)\n\nPing @MarcoFalke, @TheBlueMatt and @laanwj :-)",https://github.com/bitcoin/bitcoin/pull/11617#issuecomment-373052380,373052380,
TheBlueMatt,2018-03-15T16:10:11Z,utACK 48c8610a9c42df6de5dead0f98dc6ced214345ba,https://github.com/bitcoin/bitcoin/pull/11617#issuecomment-373431848,373431848,
practicalswift,2018-03-29T14:11:48Z,Rebased! Please re-review :-),https://github.com/bitcoin/bitcoin/pull/11617#issuecomment-377247951,377247951,
practicalswift,2018-04-09T23:02:58Z,Any chance of getting this merged or re-reviewed?,https://github.com/bitcoin/bitcoin/pull/11617#issuecomment-379920371,379920371,
sdaftuar,2018-04-10T18:14:25Z,utACK.  I'd prefer if we also added clearer documentation that FlushStateMode::NONE behaves in the way that we're relying on here (perhaps an extra comment in FlushStateToDisk?).,https://github.com/bitcoin/bitcoin/pull/11617#issuecomment-380197364,380197364,
practicalswift,2018-04-11T10:47:13Z,@sdaftuar Good point! Documentation added. Please re-review :-),https://github.com/bitcoin/bitcoin/pull/11617#issuecomment-380409240,380409240,
sdaftuar,2018-04-11T12:56:59Z,"Thanks, re-utACK https://github.com/bitcoin/bitcoin/pull/11617/commits/0000d8f727be937baa1499a6d15efa5a48b0ffdd",https://github.com/bitcoin/bitcoin/pull/11617#issuecomment-380442030,380442030,
TheBlueMatt,2017-11-06T20:25:06Z,It seems like we could just always call FlushStateToDisk instead? It wont do anything besides check if we need to prune if FLUSH_STATE_NONE is given.,https://github.com/bitcoin/bitcoin/pull/11617#discussion_r149193086,149193086,src/validation.cpp
TheBlueMatt,2017-11-06T21:51:43Z,Comment now needs updated.,https://github.com/bitcoin/bitcoin/pull/11617#discussion_r149214339,149214339,src/validation.cpp
