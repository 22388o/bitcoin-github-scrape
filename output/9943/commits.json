[
  {
    "sha": "d5cc6ff31755877eb899bc45497a240e2432615f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkNWNjNmZmMzE3NTU4NzdlYjg5OWJjNDU0OTdhMjQwZTI0MzI2MTVm",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-03-07T18:53:56Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-04-28T19:59:40Z"
      },
      "message": "Make script.py wildcard importable.",
      "tree": {
        "sha": "b65adbca68fbd1d7f5e7f156082d6b978723c774",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b65adbca68fbd1d7f5e7f156082d6b978723c774"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d5cc6ff31755877eb899bc45497a240e2432615f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d5cc6ff31755877eb899bc45497a240e2432615f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d5cc6ff31755877eb899bc45497a240e2432615f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d5cc6ff31755877eb899bc45497a240e2432615f/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4c924011f535c46b3bc02bef8b7e2a8ad559d78d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4c924011f535c46b3bc02bef8b7e2a8ad559d78d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4c924011f535c46b3bc02bef8b7e2a8ad559d78d"
      }
    ],
    "stats": {
      "total": 66,
      "additions": 53,
      "deletions": 13
    },
    "files": [
      {
        "sha": "2e7f7d26d1dc665cea2e910775f9a73bf50d426d",
        "filename": "test/functional/p2p-fullblocktest.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d5cc6ff31755877eb899bc45497a240e2432615f/test/functional/p2p-fullblocktest.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d5cc6ff31755877eb899bc45497a240e2432615f/test/functional/p2p-fullblocktest.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p-fullblocktest.py?ref=d5cc6ff31755877eb899bc45497a240e2432615f",
        "patch": "@@ -18,6 +18,7 @@\n import time\n from test_framework.key import CECKey\n from test_framework.script import *\n+from test_framework.script import hash160\n import struct\n \n class PreviousSpendableOutput(object):"
      },
      {
        "sha": "9e99b99f2e156da89a884623d6449e9769db48a2",
        "filename": "test/functional/p2p-segwit.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d5cc6ff31755877eb899bc45497a240e2432615f/test/functional/p2p-segwit.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d5cc6ff31755877eb899bc45497a240e2432615f/test/functional/p2p-segwit.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p-segwit.py?ref=d5cc6ff31755877eb899bc45497a240e2432615f",
        "patch": "@@ -8,6 +8,7 @@\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *\n from test_framework.script import *\n+from test_framework.script import hash160, CScriptOp\n from test_framework.blocktools import create_block, create_coinbase, add_witness_commitment, get_witness_script, WITNESS_COMMITMENT_HEADER\n from test_framework.key import CECKey, CPubKey\n import time"
      },
      {
        "sha": "1bfc8fde4bacd85c102f258824b6abc4e8821f51",
        "filename": "test/functional/segwit.py",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d5cc6ff31755877eb899bc45497a240e2432615f/test/functional/segwit.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d5cc6ff31755877eb899bc45497a240e2432615f/test/functional/segwit.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/segwit.py?ref=d5cc6ff31755877eb899bc45497a240e2432615f",
        "patch": "@@ -8,7 +8,8 @@\n from test_framework.util import *\n from test_framework.mininode import sha256, CTransaction, CTxIn, COutPoint, CTxOut, COIN, ToHex, FromHex\n from test_framework.address import script_to_p2sh, key_to_p2pkh\n-from test_framework.script import CScript, OP_HASH160, OP_CHECKSIG, OP_0, hash160, OP_EQUAL, OP_DUP, OP_EQUALVERIFY, OP_1, OP_2, OP_CHECKMULTISIG, OP_TRUE\n+from test_framework.script import *\n+from test_framework.script import hash160\n from io import BytesIO\n \n NODE_0 = 0"
      },
      {
        "sha": "16e8748410a9469eefa55b9767a892bed2e31ceb",
        "filename": "test/functional/test_framework/address.py",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d5cc6ff31755877eb899bc45497a240e2432615f/test/functional/test_framework/address.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d5cc6ff31755877eb899bc45497a240e2432615f/test/functional/test_framework/address.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/address.py?ref=d5cc6ff31755877eb899bc45497a240e2432615f",
        "patch": "@@ -4,7 +4,8 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Encode and decode BASE58, P2PKH and P2SH addresses.\"\"\"\n \n-from .script import hash256, hash160, sha256, CScript, OP_0\n+from .script import hash160, CScript, OP_0\n+from .mininode import hash256, sha256\n from .util import bytes_to_hex_str, hex_str_to_bytes\n \n chars = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'"
      },
      {
        "sha": "dc6e4e20aeda22328f1befe547886421ae463f21",
        "filename": "test/functional/test_framework/script.py",
        "status": "modified",
        "additions": 47,
        "deletions": 11,
        "changes": 58,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d5cc6ff31755877eb899bc45497a240e2432615f/test/functional/test_framework/script.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d5cc6ff31755877eb899bc45497a240e2432615f/test/functional/test_framework/script.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/script.py?ref=d5cc6ff31755877eb899bc45497a240e2432615f",
        "patch": "@@ -5,28 +5,68 @@\n \"\"\"Functionality to build scripts, as well as SignatureHash().\n \n This file is modified from python-bitcoinlib.\n-\"\"\"\n \n-from .mininode import CTransaction, CTxOut, sha256, hash256, uint256_from_str, ser_uint256, ser_string\n+It is safe to import * from this module. New functions and classes which you \n+wish to be exportable through wildcard imports shoule be added to the __all__\n+module variable.\"\"\"\n+\n from binascii import hexlify\n import hashlib\n-\n+import struct\n import sys\n+\n+from .bignum import bn2vch\n+from .mininode import CTransaction, CTxOut, sha256, hash256, uint256_from_str, ser_uint256, ser_string\n+\n+__all__ = [\n+    # Constants\n+    \"MAX_SCRIPT_SIZE\", \"MAX_SCRIPT_ELEMENT_SIZE\", \"MAX_SCRIPT_OPCODES\",\n+    \"SIGHASH_ALL\", \"SIGHASH_NONE\", \"SIGHASH_SINGLE\", \"SIGHASH_ANYONECANPAY\",\n+\n+    # Script classes and signature functions\n+    \"CScript\", \"CScriptNum\", \"SignatureHash\", \"SegwitVersion1SignatureHash\",\n+\n+    # OP codes\n+    \"OP_0\", \"OP_FALSE\", \"OP_PUSHDATA1\", \"OP_PUSHDATA2\", \"OP_PUSHDATA4\",\n+    \"OP_1NEGATE\", \"OP_RESERVED\", \"OP_1\", \"OP_TRUE\", \"OP_2\", \"OP_3\", \"OP_4\",\n+    \"OP_5\", \"OP_6\", \"OP_7\", \"OP_8\", \"OP_9\", \"OP_10\", \"OP_11\", \"OP_12\", \"OP_13\",\n+    \"OP_14\", \"OP_15\", \"OP_16\", \"OP_NOP\", \"OP_VER\", \"OP_IF\", \"OP_NOTIF\",\n+    \"OP_VERIF\", \"OP_VERNOTIF\", \"OP_ELSE\", \"OP_ENDIF\", \"OP_VERIFY\", \"OP_RETURN\",\n+    \"OP_TOALTSTACK\", \"OP_FROMALTSTACK\", \"OP_2DROP\", \"OP_2DUP\", \"OP_3DUP\",\n+    \"OP_2OVER\", \"OP_2ROT\", \"OP_2SWAP\", \"OP_IFDUP\", \"OP_DEPTH\", \"OP_DROP\",\n+    \"OP_DUP\", \"OP_NIP\", \"OP_OVER\", \"OP_PICK\", \"OP_ROLL\", \"OP_ROT\", \"OP_SWAP\",\n+    \"OP_TUCK\", \"OP_CAT\", \"OP_SUBSTR\", \"OP_LEFT\", \"OP_RIGHT\", \"OP_SIZE\",\n+    \"OP_INVERT\", \"OP_AND\", \"OP_OR\", \"OP_XOR\", \"OP_EQUAL\", \"OP_EQUALVERIFY\",\n+    \"OP_RESERVED1\", \"OP_RESERVED2\", \"OP_1ADD\", \"OP_1SUB\", \"OP_2MUL\", \"OP_2DIV\",\n+    \"OP_NEGATE\", \"OP_ABS\", \"OP_NOT\", \"OP_0NOTEQUAL\", \"OP_ADD\", \"OP_SUB\",\n+    \"OP_MUL\", \"OP_DIV\", \"OP_MOD\", \"OP_LSHIFT\", \"OP_RSHIFT\", \"OP_BOOLAND\",\n+    \"OP_BOOLOR\", \"OP_NUMEQUAL\", \"OP_NUMEQUALVERIFY\", \"OP_NUMNOTEQUAL\",\n+    \"OP_LESSTHAN\", \"OP_GREATERTHAN\", \"OP_LESSTHANOREQUAL\",\n+    \"OP_GREATERTHANOREQUAL\", \"OP_MIN\", \"OP_MAX\", \"OP_WITHIN\", \"OP_RIPEMD160\",\n+    \"OP_SHA1\", \"OP_SHA256\", \"OP_HASH160\", \"OP_HASH256\", \"OP_CODESEPARATOR\",\n+    \"OP_CHECKSIG\", \"OP_CHECKSIGVERIFY\", \"OP_CHECKMULTISIG\",\n+    \"OP_CHECKMULTISIGVERIFY\", \"OP_NOP1\", \"OP_CHECKLOCKTIMEVERIFY\",\n+    \"OP_CHECKSEQUENCEVERIFY\", \"OP_NOP4\", \"OP_NOP5\", \"OP_NOP6\", \"OP_NOP7\",\n+    \"OP_NOP8\", \"OP_NOP9\", \"OP_NOP10\", \"OP_SMALLINTEGER\", \"OP_PUBKEYS\",\n+    \"OP_PUBKEYHASH\", \"OP_PUBKEY\", \"OP_INVALIDOPCODE\"\n+]\n+\n bchr = chr\n bord = ord\n if sys.version > '3':\n     long = int\n     bchr = lambda x: bytes([x])\n     bord = lambda x: x\n \n-import struct\n-\n-from .bignum import bn2vch\n-\n MAX_SCRIPT_SIZE = 10000\n MAX_SCRIPT_ELEMENT_SIZE = 520\n MAX_SCRIPT_OPCODES = 201\n \n+SIGHASH_ALL = 1\n+SIGHASH_NONE = 2\n+SIGHASH_SINGLE = 3\n+SIGHASH_ANYONECANPAY = 0x80\n+\n OPCODE_NAMES = {}\n \n def hash160(s):\n@@ -820,10 +860,6 @@ def GetSigOpCount(self, fAccurate):\n         return n\n \n \n-SIGHASH_ALL = 1\n-SIGHASH_NONE = 2\n-SIGHASH_SINGLE = 3\n-SIGHASH_ANYONECANPAY = 0x80\n \n def FindAndDelete(script, sig):\n     \"\"\"Consensus critical, see FindAndDelete() in Satoshi codebase\"\"\""
      }
    ]
  }
]