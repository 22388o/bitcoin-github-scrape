[
  {
    "sha": "dca6040a8625bfdb905f3aa99e44bb31e84352b9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkY2E2MDQwYTg2MjViZmRiOTA1ZjNhYTk5ZTQ0YmIzMWU4NDM1MmI5",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2015-07-09T11:23:44Z"
      },
      "committer": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2015-07-16T09:54:28Z"
      },
      "message": "[Qt] remove std namespace polution from code",
      "tree": {
        "sha": "4e4fb1d727cdb5fa669caa4c819071bf3ac40fe4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4e4fb1d727cdb5fa669caa4c819071bf3ac40fe4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dca6040a8625bfdb905f3aa99e44bb31e84352b9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dca6040a8625bfdb905f3aa99e44bb31e84352b9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/dca6040a8625bfdb905f3aa99e44bb31e84352b9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dca6040a8625bfdb905f3aa99e44bb31e84352b9/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "ed789ceade71f19f04340a4041d7d3ef43c44086",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ed789ceade71f19f04340a4041d7d3ef43c44086",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ed789ceade71f19f04340a4041d7d3ef43c44086"
      }
    ],
    "stats": {
      "total": 31,
      "additions": 11,
      "deletions": 20
    },
    "files": [
      {
        "sha": "778dbcb1ca3dc760f7a54dbcf0a2f1fbc7a22bbe",
        "filename": "src/qt/coincontroldialog.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 8,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dca6040a8625bfdb905f3aa99e44bb31e84352b9/src/qt/coincontroldialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dca6040a8625bfdb905f3aa99e44bb31e84352b9/src/qt/coincontroldialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/coincontroldialog.cpp?ref=dca6040a8625bfdb905f3aa99e44bb31e84352b9",
        "patch": "@@ -30,7 +30,6 @@\n #include <QTreeWidget>\n #include <QTreeWidgetItem>\n \n-using namespace std;\n QList<CAmount> CoinControlDialog::payAmounts;\n CCoinControl* CoinControlDialog::coinControl = new CCoinControl();\n bool CoinControlDialog::fSubtractFeeFromAmount = false;\n@@ -442,7 +441,7 @@ QString CoinControlDialog::getPriorityLabel(double dPriority, double mempoolEsti\n // shows count of locked unspent outputs\n void CoinControlDialog::updateLabelLocked()\n {\n-    vector<COutPoint> vOutpts;\n+    std::vector<COutPoint> vOutpts;\n     model->listLockedCoins(vOutpts);\n     if (vOutpts.size() > 0)\n     {\n@@ -467,7 +466,7 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n \n         if (amount > 0)\n         {\n-            CTxOut txout(amount, (CScript)vector<unsigned char>(24, 0));\n+            CTxOut txout(amount, (CScript)std::vector<unsigned char>(24, 0));\n             txDummy.vout.push_back(txout);\n             if (txout.IsDust(::minRelayTxFee))\n                fDust = true;\n@@ -487,8 +486,8 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n     int nQuantityUncompressed   = 0;\n     bool fAllowFree             = false;\n \n-    vector<COutPoint> vCoinControl;\n-    vector<COutput>   vOutputs;\n+    std::vector<COutPoint> vCoinControl;\n+    std::vector<COutput>   vOutputs;\n     coinControl->ListSelected(vCoinControl);\n     model->getOutputs(vCoinControl, vOutputs);\n \n@@ -568,7 +567,7 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n             // Never create dust outputs; if we would, just add the dust to the fee.\n             if (nChange > 0 && nChange < CENT)\n             {\n-                CTxOut txout(nChange, (CScript)vector<unsigned char>(24, 0));\n+                CTxOut txout(nChange, (CScript)std::vector<unsigned char>(24, 0));\n                 if (txout.IsDust(::minRelayTxFee))\n                 {\n                     if (CoinControlDialog::fSubtractFeeFromAmount) // dust-change will be raised until no dust\n@@ -687,10 +686,10 @@ void CoinControlDialog::updateView()\n     int nDisplayUnit = model->getOptionsModel()->getDisplayUnit();\n     double mempoolEstimatePriority = mempool.estimatePriority(nTxConfirmTarget);\n \n-    map<QString, vector<COutput> > mapCoins;\n+    std::map<QString, std::vector<COutput> > mapCoins;\n     model->listCoins(mapCoins);\n \n-    BOOST_FOREACH(const PAIRTYPE(QString, vector<COutput>)& coins, mapCoins) {\n+    BOOST_FOREACH(const PAIRTYPE(QString, std::vector<COutput>)& coins, mapCoins) {\n         QTreeWidgetItem *itemWalletAddress = new QTreeWidgetItem();\n         itemWalletAddress->setCheckState(COLUMN_CHECKBOX, Qt::Unchecked);\n         QString sWalletAddress = coins.first;"
      },
      {
        "sha": "78a783dea4680c6e17a34e1fea4c79cf53560380",
        "filename": "src/qt/paymentrequestplus.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dca6040a8625bfdb905f3aa99e44bb31e84352b9/src/qt/paymentrequestplus.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dca6040a8625bfdb905f3aa99e44bb31e84352b9/src/qt/paymentrequestplus.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/paymentrequestplus.cpp?ref=dca6040a8625bfdb905f3aa99e44bb31e84352b9",
        "patch": "@@ -19,8 +19,6 @@\n #include <QDebug>\n #include <QSslCertificate>\n \n-using namespace std;\n-\n class SSLVerifyError : public std::runtime_error\n {\n public:\n@@ -49,7 +47,7 @@ bool PaymentRequestPlus::parse(const QByteArray& data)\n     return true;\n }\n \n-bool PaymentRequestPlus::SerializeToString(string* output) const\n+bool PaymentRequestPlus::SerializeToString(std::string* output) const\n {\n     return paymentRequest.SerializeToString(output);\n }"
      },
      {
        "sha": "6481b0046e7603ba6d8fb2d97431f5202c9acf0c",
        "filename": "src/qt/paymentserver.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dca6040a8625bfdb905f3aa99e44bb31e84352b9/src/qt/paymentserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dca6040a8625bfdb905f3aa99e44bb31e84352b9/src/qt/paymentserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/paymentserver.cpp?ref=dca6040a8625bfdb905f3aa99e44bb31e84352b9",
        "patch": "@@ -46,8 +46,6 @@\n #include <QUrlQuery>\n #endif\n \n-using namespace std;\n-\n const int BITCOIN_IPC_CONNECT_TIMEOUT = 1000; // milliseconds\n const QString BITCOIN_IPC_PREFIX(\"bitcoin:\");\n // BIP70 payment protocol messages\n@@ -647,7 +645,7 @@ void PaymentServer::fetchPaymentACK(CWallet* wallet, SendCoinsRecipient recipien\n     // Create a new refund address, or re-use:\n     QString account = tr(\"Refund from %1\").arg(recipient.authenticatedMerchant);\n     std::string strAccount = account.toStdString();\n-    set<CTxDestination> refundAddresses = wallet->GetAccountAddresses(strAccount);\n+    std::set<CTxDestination> refundAddresses = wallet->GetAccountAddresses(strAccount);\n     if (!refundAddresses.empty()) {\n         CScript s = GetScriptForDestination(*refundAddresses.begin());\n         payments::Output* refund_to = payment.add_refund_to();"
      },
      {
        "sha": "af78a51d0fc3f58e6397ab3a11e971dd6e16d93c",
        "filename": "src/qt/transactiondesc.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 4,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dca6040a8625bfdb905f3aa99e44bb31e84352b9/src/qt/transactiondesc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dca6040a8625bfdb905f3aa99e44bb31e84352b9/src/qt/transactiondesc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactiondesc.cpp?ref=dca6040a8625bfdb905f3aa99e44bb31e84352b9",
        "patch": "@@ -21,8 +21,6 @@\n #include <stdint.h>\n #include <string>\n \n-using namespace std;\n-\n QString TransactionDesc::FormatTxStatus(const CWalletTx& wtx)\n {\n     AssertLockHeld(cs_main);\n@@ -243,14 +241,14 @@ QString TransactionDesc::toHTML(CWallet *wallet, CWalletTx &wtx, TransactionReco\n     strHTML += \"<b>\" + tr(\"Transaction ID\") + \":</b> \" + TransactionRecord::formatSubTxId(wtx.GetHash(), rec->idx) + \"<br>\";\n \n     // Message from normal bitcoin:URI (bitcoin:123...?message=example)\n-    Q_FOREACH (const PAIRTYPE(string, string)& r, wtx.vOrderForm)\n+    Q_FOREACH (const PAIRTYPE(std::string, std::string)& r, wtx.vOrderForm)\n         if (r.first == \"Message\")\n             strHTML += \"<br><b>\" + tr(\"Message\") + \":</b><br>\" + GUIUtil::HtmlEscape(r.second, true) + \"<br>\";\n \n     //\n     // PaymentRequest info:\n     //\n-    Q_FOREACH (const PAIRTYPE(string, string)& r, wtx.vOrderForm)\n+    Q_FOREACH (const PAIRTYPE(std::string, std::string)& r, wtx.vOrderForm)\n     {\n         if (r.first == \"PaymentRequest\")\n         {"
      },
      {
        "sha": "168a0255ffd39abbc5d6ec95236ec8a55621bcf0",
        "filename": "src/qt/walletmodel.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dca6040a8625bfdb905f3aa99e44bb31e84352b9/src/qt/walletmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dca6040a8625bfdb905f3aa99e44bb31e84352b9/src/qt/walletmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.cpp?ref=dca6040a8625bfdb905f3aa99e44bb31e84352b9",
        "patch": "@@ -25,8 +25,6 @@\n #include <QSet>\n #include <QTimer>\n \n-using namespace std;\n-\n WalletModel::WalletModel(CWallet *wallet, OptionsModel *optionsModel, QObject *parent) :\n     QObject(parent), wallet(wallet), optionsModel(optionsModel), addressTableModel(0),\n     transactionTableModel(0),"
      }
    ]
  }
]