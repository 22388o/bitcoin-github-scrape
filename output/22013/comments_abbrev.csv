Sjors,2021-05-21 13:37:58,"utACK fe3d17d\n\n`IsFullOutboundConn()` indeed seems the right replacement for `IsOutboundOrBlockRelayConn()`, given their respective definitions:\n\nhttps://github.com/bitcoin/bitcoin/blob/eb4df9a628bdcdd1333c7fa4fb23c73df9642902/src/net.h#L468-L485",https://github.com/bitcoin/bitcoin/pull/22013#issuecomment-845956468,845956468,
practicalswift,2021-05-21 19:57:55,"Oh good catch.\n\nConcept ACK",https://github.com/bitcoin/bitcoin/pull/22013#issuecomment-846220688,846220688,
amitiuttarwar,2021-05-21 23:22:46,"ACK fe3d17df04decc4e856121eb311636977d60f80f, this impacts the very common case where we stop/start a node, persisting anchors & have a non-empty addrman (although, to be clear, wouldn't be particularly problematic in the common cases where the addrman has valid addresses)\n\nI tried to figure out if I could write a functional test to cover this code path, but seems like a no go- I can add outbo",https://github.com/bitcoin/bitcoin/pull/22013#issuecomment-846307024,846307024,
Sjors,2021-05-22 12:07:07,"This is not the first bug in p2p bootstrap behaviour (#19795, #15434), so in due time having a functional test for this would be nice.",https://github.com/bitcoin/bitcoin/pull/22013#issuecomment-846398960,846398960,
mzumsande,2021-05-22 14:43:10,"ACK fe3d17df04decc4e856121eb311636977d60f80f\n\n> I tried to figure out if I could write a functional test to cover this code path, but seems like a no go- I can add outbound-block-relay only connections & then shut down the node to persist them to anchors, but they can't reconnect before hitting `ThreadDNSAddressSeed` on startup unless we do something more invasive to the test framework, which ",https://github.com/bitcoin/bitcoin/pull/22013#issuecomment-846417811,846417811,
prayank23,2021-05-22 15:52:39,"Concept ACK\n\nChange in https://github.com/bitcoin/bitcoin/commit/fe3d17df04decc4e856121eb311636977d60f80f makes sense however I was not able to reproduce the issue by compiling master branch. Not sure if I am testing it correctly.\n\n1. DNS seeding is skipped if I have 0 block relay connections in `anchors.dat` but few full relay connections in `peers.dat`\n\n```\n2021-05-22T15:04:15Z New",https://github.com/bitcoin/bitcoin/pull/22013#issuecomment-846427080,846427080,
mzumsande,2021-05-22 16:51:49,"@prayank23 In order to hit this on testnet, you need to have a non-empty addrman, but with no valid addresses - the following should work if you start with empty peers.dat and two good anchors:\n```\nbitcoind --testnet -dnsseed=0 -fixedseeds=0\nbitcoin-cli --testnet addpeeraddress <INVALID ADDRESS> 18333\nbitcoin-cli --testnet stop\nbitcoind --testnet\n```\nIn the second run, you'll have tw",https://github.com/bitcoin/bitcoin/pull/22013#issuecomment-846434819,846434819,
amitiuttarwar,2021-05-22 18:25:50,"@mzumsande \n\n> I think the main issue is that this code is inside of a loop over the DNS seeds, and regtest doesn't have any. If there was a unreachable dummy dns seed for regtest, this could be tested:\nThreadDNSAddressSeed sleeps for 11s/5min depending on addrman size before querying, during this time one could add block-relay-only or full outbound peers and test that the behavior is differ",https://github.com/bitcoin/bitcoin/pull/22013#issuecomment-846446138,846446138,
Sjors,2021-05-22 19:10:10,"@mzumsande these manual test instructions are quite useful; I might test it next week.\n\n@amitiuttarwar maybe mention those in the PR description, so it's a bit easier to find with `git blame` later. I often use the ""blame"" feature in Github to figure out when a line was last changed, which links to the commit, which in turn links to the pull request.",https://github.com/bitcoin/bitcoin/pull/22013#issuecomment-846451245,846451245,
amitiuttarwar,2021-05-22 19:24:01,@Sjors did you mean to tag @ajtowns to update OP? It's not my PR üòõ,https://github.com/bitcoin/bitcoin/pull/22013#issuecomment-846452732,846452732,
mzumsande,2021-05-22 19:58:22,@amitiuttarwar See https://github.com/mzumsande/bitcoin/commit/237d75472ba1f8b90c286519e48f58d07a50b431 for what I did to test this PR. But I have no idea if adding dummy seeds to regtest is viable or breaks anything... ,https://github.com/bitcoin/bitcoin/pull/22013#issuecomment-846456475,846456475,
prayank23,2021-05-23 16:15:25,"Thanks @mzumsande I was able to reproduce the issue. \n\n1. Run bitcoind for few minutes and get 2 block only peers in `anchors.dat`\n```\n2021-05-23T14:13:31Z DumpAnchors: Flush 2 outbound block-relay-only peer addresses to anchors.dat completed (0.00s)\n```\n2. Delete `peers.dat`\n3. `bitcoind -dnsseed=0 -fixedseeds=0`\n4. `bitcoin-cli --testnet addpeeraddress <INVALID ADDRESS> 18333`\n",https://github.com/bitcoin/bitcoin/pull/22013#issuecomment-846587816,846587816,
prayank23,2021-05-23 17:18:11,"I retarted bitcoind few times to see if something changes. It recovered, used DNS seed and had [outbound full relay connections](https://pastebin.com/raw/FYRAcSX8).\n\n```\n2021-05-23T17:03:38Z connection attempt to 8.8.8.8:18333 timed out\n2021-05-23T17:03:39Z trying connection 8.8.8.8:18333 lastseen=1.0hrs\n2021-05-23T17:03:41Z Loading addresses from DNS seed testnet-seed.bluematt.me\n```",https://github.com/bitcoin/bitcoin/pull/22013#issuecomment-846596143,846596143,
amitiuttarwar,2021-05-28 22:13:15,"opened #22098 based on the convo here. huge props @mzumsande for figuring out the technique for timing around DNS logic with block-relay-only vs full-outbound connections üëè\n\nthe second commit on that PR 3548b571521b3f0693bbba39677344a626a406c5 fails prior to these changes. ",https://github.com/bitcoin/bitcoin/pull/22013#issuecomment-850699986,850699986,
