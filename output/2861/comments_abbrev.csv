sipa,2013-07-25T23:12:46Z,Note: untested for now.\n,https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-21591431,21591431,
kyledrake,2013-07-26T05:10:32Z,"**THANK YOU SO MUCH!** @sipa you are my hero (and probably a bunch of other people's too)!\n\nI will pull this and test it tomorrow, and try to do a more extensive test this weekend. I'll report back if I find any issues.\n\nAgain, you are awesome, and I think this is hugely important for bitcoin. Thank you, thank you, thank you.\n",https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-21601833,21601833,
kyledrake,2013-07-26T05:16:03Z,"@sipa is there any chance this could make it into master for the next release? I'm not sure if it's out of scope for the next release or not, just curious on timing so I can plan accordingly. I would love to see in the next release of course, but I don't want to derail all the other important stuff you guys are working on.\n",https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-21601944,21601944,
CodeShark,2013-07-26T08:46:49Z,"Thanks for giving this pull request some love, sipa!\n\nI think having both spendable and watch-only accounts in the same wallet is problematic. For instance, how do we deal with getbalance, account labels, etc...?\n\nI had delayed attempting this merge until multiwallet capability had been merged, where we could simply have a wallet be entirely watch-only or entirely spendable. I'm glad some peop",https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-21608666,21608666,
sipa,2013-07-26T10:01:33Z,"@CodeShark The approach that this pullreq takes is that for almost everything, watch-only is considered equal to normal keys. You'll see it in getbalance, in listtransactions, in listunspent, ...\n\nHowever, these are not considered when creating a transaction. Presumably we'll need a getspendablebalance too, and some GUI special-casing (perhaps only shown when watch-only addresses are present at ",https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-21611891,21611891,
deweydb,2013-07-29T09:34:28Z,Thanks @sipa and others who have contributed to this!  I am so insanely happy to see this functionality get added.\n,https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-21708762,21708762,
runeksvendsen,2013-07-30T13:43:19Z,"I have tested this patch by importing an address with`importaddress`, and `getbalance`, `listtransactions`, `getreceivedbyaddress`, `listreceivedbyaddress` work as expected (and they agree with blockchain.info).\n\n`sendtoaddress` from a wallet that contains only a single watch-only address fails gracefully with:\n\n```\nerror: {""code"":-4,""message"":""Signing transaction failed""}\n```\n",https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-21791384,21791384,
sipa,2013-07-30T14:11:34Z,"One interesting thing to test would be having a mixed wallet, and checking that you can spend the amount in normal keys, but not more.\n",https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-21793339,21793339,
jgarzik,2013-07-30T14:22:06Z,Summarizing IRC review comments:\n- AvailableCoins() needs an additional arg.  It now takes two optional bool args.\n- Would be nice if 'listunspent' indicated watch-only or not\n- Agree that testing a mixed wallet would be useful\n\nACK once issues are fixed\n,https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-21794114,21794114,
runeksvendsen,2013-07-30T16:08:44Z,"I just tested sending transactions on testnet. Sending amounts higher than the balance available for spending (from non-watch-only addresses) results in a ""Signing transaction failed"" error.\n\n`mq7se9wy2egettFxPbmn99cK8v5AFq55Lx` is the watch-only address and `mv7VTUiBNmNSNrWaXrySbZcEzQ9C6ZNTNu` I have the private key for:\n\n```\nrune@rune-desktop:~/Programming/bitcoin-sipa/src$ ./bitcoind listu",https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-21802217,21802217,
sipa,2013-07-30T21:37:19Z,"Significant changes, re-testing would be welcome :)\n\nInstead of fRequireSpendable, the IsMine family of functions now return MINE_NO, MINE_WATCH_ONLY or MINE_SPENDABLE (instead of a boolean). `listunspend` should show whether a coin is spendable.\n",https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-21824880,21824880,
jgarzik,2013-07-31T00:14:39Z,"Overall ACK of updated code.  Did not test, just code review.  Minor taste-based nits:\n- RPC: 'true' seems a better return value than 'null'\n- perhaps due to my b/g I prefer the ""_t"" suffix to the more verbose ""type"".  POSIX standard naming for such situations.\n",https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-21832372,21832372,
BitcoinPullTester,2013-08-01T11:46:00Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/02e10bf92bcb693288740ff7af0422d4fa0572d8 for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-tester/cu",https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-21930967,21930967,
sipa,2013-08-01T13:14:39Z,Some changes:\n- Fixed a bug that caused rescans to sometimes be skipped.\n- Adapt the output of validateaddress for watch-only addresses.\n,https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-21935228,21935228,
BitcoinPullTester,2013-08-01T13:47:23Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/80f264464ff2f424cc65e6c910411b7ba059f893 for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-tester/cu",https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-21937206,21937206,
runeksvendsen,2013-08-07T11:33:44Z,"I just tested the new changes and now re-scanning works both on testnet and mainnet for me. I can send and receive on testnet, and I get a\n\n```\nerror: {""code"":-4,""message"":""Insufficient funds""}\n```\n\nerror message when I try to send more than I have in spendable funds (according to `listunspent`) but less than I have in unspendable funds.\n\nOn mainnet, the `listransactions` output agrees wit",https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-22244904,22244904,
sipa,2013-08-07T14:57:24Z,"@gavinandresen You've voiced some objections to this on IRC, and prefer watch-only wallets over individual watch-only addresses IIRC, care to mention them here?\n\nI don't feel like working on this further if it is controversial, but I think it's extremely useful and pretty much necessary to enable managing P2SH addresses without having all keys available. To get that same functionality with watch",https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-22257253,22257253,
jgarzik,2013-08-07T15:00:37Z,"IMO there is a strong user-based case for merging.  There is clear user interest.  People are building websites based on this branch, among other things.\n",https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-22257476,22257476,
runeksvendsen,2013-08-07T15:11:57Z,"I'd like to add that it increases decentralization, thus increasing the resilience of the Bitcoin ecosystem. Instead of having to rely on blockchain.info to get information about addresses not owned by myself, I can monitor these addresses using my own node. The same goes for other Bitcoin services. I suspect a lot of people depend on the blockchain.info JSON API simply because they have no other ",https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-22258333,22258333,
jgarzik,2013-08-07T15:21:35Z,It might be useful to have 'getinfo' or another RPC return a boolean indication of watch-only addresses in the wallet.\n,https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-22259075,22259075,
keo,2013-08-07T15:39:31Z,We'd love to have this feature. It is nonsense that we have to rely on blockexplorer.com and blockchain.info while having the entire blockchain stored on our own node.\n\nCurrently bitcoind doesn't have a friendly API for merchants and payment services providers. It is crucial to be able to handle tens of thousands of addresses for which we don't want to share the private keys with a certain copy ,https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-22260388,22260388,
jgarzik,2013-08-07T15:48:31Z,"It also seems opportune, with mentions of blockexplorer/blockchain, to plug my related pull request,\n\n""Add unauthenticated HTTP REST interface"" (req #2844 )\n",https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-22261093,22261093,
kyledrake,2013-08-07T21:12:23Z,"@sipa is the importaddress code expected to update the account balance when a transaction goes out? I just dropped a generated raw transaction onto blockchain.info's tx send with one of the unspent transactions, and it removed the unspent from `listunspent`, but it didn't change the balance for the account that the address is associated with.\n\nI didn't send it through my bitcoind instance, so th",https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-22284428,22284428,
sipa,2013-08-07T21:23:01Z,"@kyledrake Accounts are not addresses, and do not have _anything_ to do with the coins available to an address. The abstraction provided by the reference client has at no point any concept of a ""balance of an address"", only ""balance of a wallet"".\n\nAddresses are associated with accounts, and coins received by those address will credit the account. For debits, you need to explicitly use ""sendfrom""",https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-22285171,22285171,
gavinandresen,2013-08-07T21:25:05Z,"I'll be happy with watch-only addresses in the wallet if their meaning is\nclear and that meaning doesn't break people's existing code.\n\nIf I understand, as implemented their meaning is ""Exactly like any other\naddress in your wallet (shown as part of total balance, shown in\nlisttransactions, ??shown in listunspent??), except you cannot spend them\nwithout constructing a raw transaction yoursel",https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-22285332,22285332,
sipa,2013-08-07T21:40:50Z,"They are included in listtransactions, listreceivedbyaddress, and balances. They are also included in listunspent, but marked as watch-only there. Adding a flag to balance, or a separate RPC to query only spendable / watch-only addresses is probably useful.\n",https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-22286490,22286490,
gavinandresen,2013-08-08T00:09:25Z,"More thoughts:\n\nI agree that there is consensus that SOME solution is needed.\n\nI'll (grudgingly) go along with a watch-only address breaking the ""getbalance == coins you can spend"" assumption, as long as that is well documented.\n\nRE: flag to balance or separate RPC:  ""meh""  -- if people want to keep track of watch-only balances separately, they should give them all a ""watchonly"" label.  In f",https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-22293831,22293831,
gavinandresen,2013-08-08T00:17:14Z,"One more random thought:\n\nWill the typical use case be a merchant importing a bunch of addresses?  If yes, maybe this should be:\n  importaddresses [address1,address2,...] &lt;label&gt; &lt;rescan&gt;\n",https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-22294149,22294149,
jgarzik,2013-08-08T01:41:15Z,"""six of one, half-dozen of the other"" -- JSON-RPC 2.0 batches work just as well, for multiple importaddress.\n",https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-22297093,22297093,
luke-jr,2013-08-08T02:02:10Z,"@jgarzik Do they? (considering imports rescan the blockchain..)\n\nReminder that the original author of this pull request has abandoned it in favour of watch-only wallets. IMO, it makes a lot more sense to approach this after HD wallets are merged, as then there's a clear use-case that doesn't violate the no-address-reuse principle.\n",https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-22297719,22297719,
runeksvendsen,2013-08-08T09:09:04Z,"@luke-jr `importaddress` doesn't do a rescan if you pass ""false"" as the third (rescan) parameter. So the approach for batch imports of watch-only addresses would be to add all your addresses except the last one with rescan=false, and add the last one with rescan=true.\n\nThinking about my use cases, I don't think I would have any use case for a mixed watch-only/regular wallet. Ie. I wouldn't have ",https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-22311416,22311416,
kyledrake,2013-08-08T18:31:43Z,"FYI I have worked around the `getbalance` issue by calling `listunspent` for the addresses I am watching and looping to calculate the balance.\n\nThe wiki page on raw transactions doesn't yet document this, but there's an optional array of addresses you can add to the end:\n\n```\nlistunspent [minconf=1] [maxconf=9999999]  [""address"",...]\n```\n\nI believe this solves the balance calculation for m",https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-22344871,22344871,
kyledrake,2013-08-08T19:19:59Z,"Another issue I'm running into is that `listtransactions ACCOUNT` doesn't show sent transactions anymore when I send via `sendrawtransaction`. I can use `listtransactions` to see them, but I can't filter it on bitcoind itself using an array of addresses, so I would have scaling issues after a certain point if I used it for a site running a lot of transactions.\n\nIdeally it would be nice to see a ",https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-22348369,22348369,
sipa,2013-08-09T00:44:48Z,"The _only_ way to have a transaction debit an account, is by using sendfrom. I'm not sure how you'd expect sendrawtransaction to interact with this. Accounts are not about address balances, and any application that tries to do so will likely have a hard time working around the abstraction that the wallet provides:\n- A wallet is a bunch of transactions and keys\n- A wallet has a number of addresse",https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-22368905,22368905,
eblanshey,2013-08-21T01:47:47Z,"Just wanted to chime in to say I'd love watch-only functionality. IMO, it's the best way to go for server security, and I'd love to be able to do this without using a 3rd party service like blockchain.info. For me, it doesn't matter whether it's a separate watch-only wallet or integrated into the regular wallet, although I'd agree with runeksvendsen that I can't think of any cases I'd want to use ",https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-22990583,22990583,
Shic1983,2013-09-15T13:40:40Z,"I'm also coming in with a +1 on this.\nEchoing earlier comments, for merchants this feature is an absolute must. \nHaving the ability to listunspent for a watch only address is IMO, essential for merchants and developers of BTC applications. \nCurrently the only way to get unspent is with blockchain.info /unspent api ~ having this feature locally would obviously be a massive improvement.\n",https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-24471648,24471648,
kyledrake,2013-09-18T00:03:18Z,I have been using this in testing for Coinpunk and haven't run into any problems yet. Would love to see it get merged to master!\n,https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-24632095,24632095,
petertodd,2013-09-18T02:24:14Z,"@kyledrake You know, the P2SH support @sipa just added could work well with Coinpunk: store funds in a 2-of-2 multisig P2SH addresses (including change) and have both the server and the user's client-side wallet sign transactions. Because both parties need to be involved you'd be able to implement useful features like daily spending limits, 2-factor-authentication to keep coins safe even if the us",https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-24636856,24636856,
SzymonPobiega,2013-09-20T12:16:28Z,What's the safest (least amount of changes compared to a stable version) version containing this patch? Are there any binaries available? I tried getting them from jenkins from last auto sanity check but it returns 404.\n,https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-24806243,24806243,
Shic1983,2013-09-27T00:41:24Z,very quiet here.. How far is this from going into the 0.9 release ? \n,https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-25215075,25215075,
kyledrake,2013-10-02T21:34:38Z,"Would also like to see this merged in for an upcoming release! Let me know if I can help.\n\nI have been using this functionality extensively with Coinpunk. I have refactored the service so that it now depends on nothing but the watch only address functionality, and have figured out how to deal with the transaction management without using the bitcoind wallet.\n\nIt would be great to not require u",https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-25579094,25579094,
laanwj,2013-10-09T13:50:09Z,"I'll try merging this into master and doing some testing.\n\nEdit: though on second thought I'd prefer a solution in which an entire wallet is made watch-only, instead of adding watch-only keys to an existing wallet and creating two classes of IsMine. This feels error prone somehow.\n",https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-25972349,25972349,
sipa,2013-10-09T15:23:03Z,"A recent suggestion by gmaxwell is to make coins received through watch-only function as if they were automatically (and irreverisbly) marked locked. Not much would change in practice, though.\n",https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-25980110,25980110,
kyledrake,2013-10-09T22:22:16Z,"@sipa I'm not sure what the benefits are of using this over the current implementation (which appears to work very well under testing), but I'll defer to the experts.\n\nHow long do you think it will take to make that change? Is it a candidate for making it into 0.9?\n\nNot trying to pushy, just need to provide information to people using Coinpunk. Thanks for the feedback!\n",https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-26014195,26014195,
sipa,2013-10-09T23:05:25Z,"@kyledrake It's not about implementation - I expect that little would change. The reason to suggest it, is because the main controversy seems to be what the semantics of unspendable coins would be. If they behave identically to an already existing concept (lockunspent), the semantics are clear.\n\nAnd I'm working on other things first.\n",https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-26016778,26016778,
sipa,2013-10-19T23:50:21Z,"@laanwj I do agree that having entire wallets be watch-only or not would certainly be an easier abstraction, but IMHO that means we need multiwallet as well.\n",https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-26661566,26661566,
jegz,2013-10-20T00:05:51Z,"Just want to give my love to @sipa, thanks for the feature! Hope it gets merged soon. +1\n",https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-26661771,26661771,
laanwj,2013-10-21T11:58:22Z,"@sipa Yes, let's just go ahead with this. Even with watch-only wallets we'll need ""importaddress"" and unspendable outputs.\n\nACK; tested and it works as expected\n",https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-26710932,26710932,
jgarzik,2013-10-21T14:08:55Z,"@laanwj  +1  That's the bottom line\n\nACK, did a quick test and re-review\n",https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-26719836,26719836,
kyledrake,2013-10-21T18:54:35Z,"Just to add to the testing reports: I haven't found a single error using importaddress and listunspent using this code so far, and I've used it quite a bit. It's been working great in testnet and production for me.\n",https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-26745272,26745272,
sipa,2013-10-21T21:31:22Z,"@keo It seems I never replied to your comment, but what may seem as overcomplication is rather the opposite.\n\nBeing able to always query information about any address's history, requires a rather large index to be maintained (multiple gigabytes). Using that for a simple wallet service means you become dependent on such an index, and your system will for example not be compatible with block chain",https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-26758690,26758690,
luke-jr,2013-10-29T02:01:50Z,"It doesn't really make sense for address-watching to add outputs to the wallet in the first place, since the outputs aren't really related beyond the receive notification.\n",https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-27273212,27273212,
wtogami,2013-10-31T06:07:38Z,"My testing indicates that Coin Control #2343 and Watch Only operate fine independently, but the combination has issues.\n\nhttps://github.com/litecoin-project/bitcoinomg/commits/bitcoin-omg-0.8\nHere is my branch of Bitcoin 0.8.5 where I initially tried to add watchonly to coin control by filtering out the watchonly outputs in AvailableCoins().  That succeeded in excluding the unspendable coins fr",https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-27464246,27464246,
wtogami,2013-10-31T11:12:03Z,"I forgot to mention, Coin Control + Watch Only exhibits this strange erroneously large transaction behavior even if you have zero watchonly addresses.\n",https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-27477678,27477678,
wtogami,2013-11-04T09:18:10Z,"@kyledrake \nWould Coinpunk be usable with a fully watch-only wallet?  It would be a lot safer and less confusing to allow watch-only addresses only if a wallet does not mix with privkey addresses.  I have to admit while testing this earlier that the user experience with the current watchonly implementation is very confusing when you have a mixed wallet.  The ""fake-encrypted"" wallet approach would",https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-27671538,27671538,
kyledrake,2013-11-04T17:15:58Z,"@wtogami Coinpunk would be usable with a watch-only wallet, correct. I'm not sure if others would like to have the private key addresses for other purposes, but for me, private key addresses are not needed.\n",https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-27703385,27703385,
wtogami,2013-11-06T13:54:19Z,@kyledrake \nGiven the current conflict Watch Only will not improve until Coin Control #2343 is first merged.  CC is pretty much done except people need to step through the Test Plan in that ticket.  Could you please direct people to participate in that?\n,https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-27874594,27874594,
sipa,2013-11-07T13:52:19Z,"I fully agree that having a mixed wallet, with both spendable keys and other unspendable addresses, leads to a more complex and potentially confusing interface. However:\n- As long as we don't have multiwallet, I believe that forcing an entire wallet to be spendable or not makes this less useful. This is arguable a problem on its own that needs fixing, but work around multiwallet support seems to ",https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-27964917,27964917,
laanwj,2013-11-07T14:07:00Z,@sipa I agree. IMO the complication of the current solution would be less if it was more visible to the user through the interface; for example if getinfo and such were to return two balances: a spendable and a watch-only balance. \n\nInternally this could be implemented by making GetBalance take an IsMineType. This would also fit better into the overview page in the GUI.\n,https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-27966370,27966370,
jgarzik,2013-11-07T14:20:06Z,@sipa +1\n,https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-27967829,27967829,
BitcoinPullTester,2013-11-10T03:01:55Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/a13f1e8f61f2c4f32c72c72409ea591228557434 for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-tester/cu",https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-28142876,28142876,
gastonmorixe,2013-11-22T19:59:21Z,"This is working awesome for me. Thank you @sipa  and all other people here too. \nI want to ask, how can we delete a watched only address from being ""watched"". Because I sync my cache from ""listtransactions *""  from now and then I don't want bitcoind to keep being aware of some address. Can I remove them? \n",https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-29104359,29104359,
ronswaine,2013-11-24T23:24:11Z,Anyone able to share a built windows exe? Trying to build bitcoind in windows without much Make experience is like chewing sand. :(\n,https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-29169592,29169592,
np,2013-11-28T22:30:48Z,I'd love to see this feature to be merged.\n,https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-29487753,29487753,
gavinandresen,2013-11-29T01:41:51Z,"@np : WHY would you love to see it merged-- can you please describe exactly how you are using, or are planning on using, this feature?  Could you just run with an always-encrypted wallet instead, and if not, why not?\n",https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-29491869,29491869,
wtogami,2013-11-29T02:04:50Z,**Watch Only Wallet now?**\n1) Import all the privkeys that you want to be watch-only.\n2) Encrypt the wallet with an impossibly long random generated passphrase.  Discard the passphrase.\n3) Use the wallet as watch-only.\n,https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-29492374,29492374,
Shic1983,2013-11-29T02:13:15Z,"@gavinandresen I would like to see it merged because if I want to watch an address right now I have to use a block explorer.. ie, either blockchain.info, or install abe, which adds big mysql db, php, apache, running abe itself, keeping it up to date... all these additional overheads wouldn't be nessesary if I could just add the nessesary watch only addresses to a watch only wallet as such \n",https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-29492554,29492554,
laanwj,2013-11-29T06:49:32Z,"@wtogami Agreed, that's a good way of creating a watch-only wallet right now.\n\nThe only feature missing then is to watch addresses that you have no private key for. This could be due to logistic reasons, ex. a ""shop"" server that wants to monitor that payments have come in, but cannot spend them. Or multisig addresses that the user has only one of the keys to, but knows the P2SH address for.\n\nI",https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-29499161,29499161,
kyledrake,2013-11-29T08:35:10Z,"@gavinandresen:\n\nMy apologies if this comes off as dramatic, but we're having a really hard time explaining how important this is, and I'm kindof at a loss for how to explain how important this pull request is, having tried so hard previously and failing to get attention.\n\nI want everybody reading this to take a moment of silence to ponder the tens, perhaps hundreds of millions of dollars USD ",https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-29502387,29502387,
petertodd,2013-11-29T08:46:47Z,"@kyledrake You know, this is a great example where practicality beats architectural purity.\n\nSure, maybe watch-only probably shouldn't have been setup to mix watch and non-watch addresses, but if you're not using the functionality, so what if it's there? Better to get this out the door given the high real-world demand for it than let the code rot and become unmergable again as things get changed",https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-29502849,29502849,
laanwj,2013-11-29T09:44:45Z,"@petertodd The problem is that once you introduce certain functionality, people start relying on the interface to be in that way, and it is very difficult to change it again.\n\nOne example of this is the ""account"" system. It is extremely unintuitive in various ways, does strange things in interaction with labels (and the GUI). But we're kind of stuck there. Everyone wants accounts to work in thei",https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-29505456,29505456,
petertodd,2013-11-29T10:16:40Z,"@laanwj Yes, and we agree on that. When the wallet functionality is split off interfaces can be gradually moved to whatever they should be. But given people are using this in production and semi-production, that's saying it's got direct real-world uses and maybe the interface is actually working. Once people's usage strategies settle down a bit, maybe our ideas of what was a perfect RPC interface ",https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-29507159,29507159,
wtogami,2013-11-29T10:22:28Z,"@kyledrake \nAside from the problems here, the current watch-only code is broken when merged with Coin Control.\n\nThe above **Watch Only Wallet now?** procedure is not ideal, but it is a way to have a watch-only wallet TODAY.  If you create such wallets offline, private keys are effectively never on the server.  This is the best, proven option you have for now.\n\nThe only possible implementation",https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-29507476,29507476,
kyledrake,2013-11-29T10:36:41Z,"@laanwj People are _already_ relying on this interface, because they desperately needed it. Rejecting this pull request doesn't prevent that, it causes more problems. Sometimes we can't control how open source software is used. The street finds its own use for things, and the street is using watch-only addresses. We should recognize that this is happening and help people solve the most important p",https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-29508216,29508216,
wtogami,2013-11-29T10:52:08Z,@kyledrake \nI think we realize how important it is.  Just 1) the code is broken right now 2) it needs a fair bit more work to be acceptable in mainline.\n,https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-29509027,29509027,
kyledrake,2013-11-29T10:53:04Z,"@wtogami I appreciate the workaround and it's interesting, but if I understand it, it can't be dynamically changed efficiently without exposing private keys and restarting servers. A hacker with a packet sniffer would be able to read all of the incoming keys unless it was being transferred remotely. For my use case, the private key must never touch the server.\n\nI can't speak for everyone, but a ",https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-29509088,29509088,
laanwj,2013-11-29T10:58:15Z,"I wonder -- would it be possible to simulate ""importaddress"" in an always-encrypted wallet  that is guaranteed to never by decrypted? (ie, by providing fake private key data)\n",https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-29509341,29509341,
kyledrake,2013-11-29T11:12:49Z,"@laanwj Can't speak for everyone of course, but that would also work great for me! I'm totally indifferent as to the mechanism (as long as it doesn't involve a real private key). Just adding an address, and being able to optionally scan the full blockchain (so I can skip if the key is new) solves my use case. Being able to put in a fake private key with a real address wouldn't be an issue for me a",https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-29510054,29510054,
laanwj,2013-11-29T11:24:49Z,"Uh, didn't mean to do that, wrong button\n\nSo essentially:\n- Introduce a new wallet state ""read only"" (apart from unencrypted, encrypted, unlocked)\n  - Can be switched using a ""setwalletreadonly"" RPC command\n  - This is a one way trip! \n    - Probably needs a safety catch to prevent people from doing this to their only copy of their wallet.\n    - Make an automatic backup copy of the old wall",https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-29510656,29510656,
sipa,2013-11-29T14:11:58Z,"Making watch-only addresses in a wallet turn the wallet watch-only entirely removes the use case of implementing true multisig through it (you need to be able to watch payments to the multisig address, even though you have only keys for some). Also, wallets can already be mixed spendable and non-spendable (through lockunspent).\n",https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-29518270,29518270,
laanwj,2013-11-30T08:50:44Z,"@sipa Okay, good point, so in that case we need separate spendable and non-spendable balances per wallet either way.\n\nWhat about my previous idea of having GetBalance  (as well as other API entry points) take a IsMineType parameter? This would make it possible to show to the user that they have both spendable and unspendable coins in their wallet, and how much.\n",https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-29548523,29548523,
sipa,2013-11-30T10:32:56Z,@laanwj Sounds good.\n,https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-29549933,29549933,
luke-jr,2013-11-30T12:26:16Z,Do we really need wallets that contain a mix of both multisig and non-multisig coins? Seems to me that use case would be best served by having separate wallets too?\n,https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-29551505,29551505,
gmaxwell,2013-11-30T12:43:16Z,@luke-jr   I think the best user experience for multisig coins would be indeed via a separate wallet  create-multsig-wallet -> enter in extended pubkeys or an extended redeemscript (embeds the pubkeys) -> use wallet.  But that perhaps doesn't preclude having mutt wallets that mix types.\n,https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-29551711,29551711,
np,2013-11-30T23:18:28Z,@gavinandresen for all the reasons mentioned above. In particular avoiding the use of blockexplorer.com and trying out coinpunk. \n,https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-29563374,29563374,
gavinandresen,2013-12-01T01:54:28Z,"Sounds like a -readonlywallet mode is what is wanted, with just public keys and no private keys.  Is that correct?  What wallet operations is CoinPunk doing?  bitcoind really isn't designed to be a generic ""Tell me the confirmed/unconfirmed balance of THIS set of public keys, please"" service-- it seems like that is the functionality you really want (and isn't CoinPunk switching to libbitcoin anywa",https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-29565489,29565489,
keo,2013-12-02T13:49:31Z,"I like the idea of a readonly wallet. This is a mode where you don't need to spend, don't need multisig, etc., because you're running it on a server as a validating node that can be queried instead of blockexplorer/blockchain. I wouldn't mix this with the GUI and personal use cases.\n\n""Tell me the confirmed/unconfirmed balance of THIS set of public keys, please"" is the exact thing bitcoind needs ",https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-29618547,29618547,
Shic1983,2013-12-02T15:00:27Z,"> ""Tell me the confirmed/unconfirmed balance of THIS set of public keys, please"" is the exact thing bitcoind needs right now to be able to be used in production at wallets, merchants, PSPs, etc.\n\n^ I agree 100%. Having to setup and run your own block explorer to find unspent outputs for addresses that are not in your wallet is very bad.\n\nBy being able to query confirmed/unconfirmed balance and",https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-29623874,29623874,
np,2013-12-02T15:06:46Z,I also prefer the idea of a read-only wallet.\n,https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-29624440,29624440,
kyledrake,2013-12-02T19:37:18Z,"@gavinandresen `importaddress`, `listunspent`, `gettransaction`, `sendrawtransaction`. That's it.\n\nI have never said I will be using libbitcoin, and haven't even considered the possibility until you mentioned. Upon quick inspection, it appears to be also not designed for my use (I'm not writing an anarchist-themed C++ application), but trying to implement it via FFI might be an interesting exper",https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-29649866,29649866,
np,2013-12-02T20:21:20Z,"@kyledrake It is not necessary for you use libbitcoin directly, you could use `sx` (https://github.com/spesmilo/sx) which is built on top of libbitcoin.\n\nHowever I think these projects are not yet mature enough and Coinpunk should aim at using both in the future. \n",https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-29653771,29653771,
kyledrake,2013-12-02T21:50:30Z,"@np I conveniently happen to be in the same room as the author of libbitcoin right now, and apparently there is a 0MQ interface for working with it I will investigate.\n\nRE this pull request, it would be great to be able to continue supporting the importaddress approach as well. I realize that bitcoind isn't perfect, but nothing will be for a long time, and it's a known quantity that I'm comforta",https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-29661380,29661380,
ryny24,2013-12-06T23:33:42Z,"I am working on a project that requires watch only addresses, I previously got this code working perfectly using the importaddress rpc command a few months ago, but seems to fail every way I try now. I documented my steps which was really just ""git checkout -b remotes/origin/importaddress"" before compiling. No matter what I try now, I get method not found.\n\nDesperately need this command to build",https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-30039139,30039139,
laanwj,2013-12-10T14:12:11Z,See #3383 for a rebased version\n,https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-30229653,30229653,
matiu,2014-02-19T19:07:24Z,"In case anyone is still looking for this functionality, here is our project that creates a REST/Websocket API for any address:\n[https://github.com/bitpay/insight](https://github.com/bitpay/insight)  |  [insight Homepage](http://insight.bitcore.io)\nThe project also includes a blockexplorer, but that is 100% on client-side JavaScript.\nThe index is stored on leveldb, and the data is pulled from bi",https://github.com/bitcoin/bitcoin/pull/2861#issuecomment-35535480,35535480,
petertodd,2013-09-18T02:41:23Z,"This seems inconsistent with the way DescribeAddressVisitor is written: it allows for the case where the wallet has a redeemScript in it that can't be spent, yet the visitor will only show information on the redeemScript if it can be spent. I think it'd make more sense for it to be possible to have a redeemScript in your wallet that you can't spend, and for DescribeAddressVisitor to still show all",https://github.com/bitcoin/bitcoin/pull/2861#discussion_r6424026,6424026,src/script.cpp
petertodd,2013-09-18T02:43:25Z,"Why not? In some cases you will in fact know when the private keys were generated, even though you don't actually have them. For instance that's true for keys generated by the client-side Javascript in Coinpunk.\n",https://github.com/bitcoin/bitcoin/pull/2861#discussion_r6424047,6424047,src/wallet.cpp
petertodd,2013-09-18T02:52:04Z,"I'm in favor of keeping importaddress as it is, but if we do allow the wallet to contain redeemScripts that you don't have the keys to spend it'd make sense to also add my ""addredeemscript"" patch, but more importantly make sure addmultisigaddress automatically creates a watch-only address if you add a multi-sig address to your wallet for which you don't have all the private keys.\n",https://github.com/bitcoin/bitcoin/pull/2861#discussion_r6424126,6424126,src/rpcdump.cpp
sipa,2013-10-21T20:51:04Z,"The reason for not automatically causing ownership when a multisig address is created, is because the software still deals very badly with double spending, so you don't want multiple instances to be able to spend the same coins simultaneously. With watch-only, that concern doesn't exist, and I think the best solution is consider anything related to the imported address 'mine'.\n",https://github.com/bitcoin/bitcoin/pull/2861#discussion_r7107823,7107823,src/rpcdump.cpp
sipa,2013-10-21T21:00:36Z,"Absolutely, but that's orthogonal. I believe importprivkey and importaddress should gain some standard way of specifying birth time (e.g., allow an @_unixtimestamp_ suffix). I'd rather keep that in a separate pull request.\n",https://github.com/bitcoin/bitcoin/pull/2861#discussion_r7108157,7108157,src/wallet.cpp
sipa,2013-10-21T21:01:33Z,@petertodd Note the 'for now' here.\n,https://github.com/bitcoin/bitcoin/pull/2861#discussion_r7108196,7108196,src/walletdb.cpp
sipa,2013-10-21T21:04:46Z,"Ah, you're saying that when adding a multisig script for which you don't have all keys, it should automatically become watch-only. That seems reasonable, but maybe the semantics will be too confusing in that case.\n",https://github.com/bitcoin/bitcoin/pull/2861#discussion_r7108320,7108320,src/rpcdump.cpp
petertodd,2013-10-21T23:23:09Z,Sounds reasonable to me.\n,https://github.com/bitcoin/bitcoin/pull/2861#discussion_r7112242,7112242,src/wallet.cpp
petertodd,2013-10-21T23:28:44Z,"Ok, scrap that idea then.\n\nI see how it could cause confusion, especially for someone debugging a RPC-using thing who is assuming they can spend every addr.\n",https://github.com/bitcoin/bitcoin/pull/2861#discussion_r7112385,7112385,src/rpcdump.cpp
wtogami,2013-10-29T09:08:27Z,Does it really make sense to include a spendability boolean in each COutput?  Your code doesn't seem to actually use it anywhere.  The last parameter of COutput doesn't seem to be useful in its current form because it is ascertained too late to be useful.  What plans did you have for it?  Perhaps it would be more useful as the tri-state enum instead of boolean?\n\nhttps://github.com/litecoin-proje,https://github.com/bitcoin/bitcoin/pull/2861#discussion_r7273993,7273993,src/wallet.cpp
