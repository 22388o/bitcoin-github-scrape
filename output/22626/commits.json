[
  {
    "sha": "fab89006d656261770503e54fdd01ac9167bdd49",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWI4OTAwNmQ2NTYyNjE3NzA1MDNlNTRmZGQwMWFjOTE2N2JkZDQ5",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-08-04T19:04:44Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-08-20T14:55:27Z"
      },
      "message": "Add missing includes and forward declarations, remove unused ones",
      "tree": {
        "sha": "3ddc4c998386e63a5d92967d42c9c2319220b255",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3ddc4c998386e63a5d92967d42c9c2319220b255"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fab89006d656261770503e54fdd01ac9167bdd49",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUiOfgwApBgFnkFrzAcDbg2/0rEasmTocT/jEgefnFCDdNiZVViwPN/iwPNC3ssg\nusDWBpIFcpA14w9YQDbUfQt/N/Up1bPGZg+AmEGSqaRlonRbU6MeUa7X9TtsI9gp\n7UOZPK55S3fb3VjIRGjUHR44R2LcoNX60B1sDD+e73LwW4SF/logUrCMm4cgb2vw\ndetPBkD6xyvxNoLl06zKEY3+S6JJ/9lWa009mg8BC5gfXCQqdFdmj5TK382YATJ9\noaGQy7xRZU6GNmPccjNPcdVaSHnFiGyJbIfY15mpWgP0Rg/hdd9SGaJr/WZOUVmk\njwBC3xYFdL6jfUgjyHTDSg+0yaz6ekqJW0QeLKjP3/Lf9DYDW8rFsTp4vvAKLqx5\n5434ld3YBBS4gU7PTat7rjxMtOPab8cIG0Tn6ljScjuWin9gbXWFOBVBFmKEHaFV\nNwfheXjSsUFfCpDGRqyTzID4FBdlMT6EssEex5r9JDVBnO/+P4GaUG1tvV7W/pRk\ne/iOjzuN\n=9/DL\n-----END PGP SIGNATURE-----",
        "payload": "tree 3ddc4c998386e63a5d92967d42c9c2319220b255\nparent 192a959b65660ffacedb5a5eb2a0d26736c636d7\nauthor MarcoFalke <falke.marco@gmail.com> 1628103884 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1629471327 +0200\n\nAdd missing includes and forward declarations, remove unused ones\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fab89006d656261770503e54fdd01ac9167bdd49",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fab89006d656261770503e54fdd01ac9167bdd49",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fab89006d656261770503e54fdd01ac9167bdd49/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "192a959b65660ffacedb5a5eb2a0d26736c636d7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/192a959b65660ffacedb5a5eb2a0d26736c636d7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/192a959b65660ffacedb5a5eb2a0d26736c636d7"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 10,
      "deletions": 6
    },
    "files": [
      {
        "sha": "1390e3e57075b1d2583b56498f96fdf1da5129fd",
        "filename": "src/index/base.h",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fab89006d656261770503e54fdd01ac9167bdd49/src/index/base.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fab89006d656261770503e54fdd01ac9167bdd49/src/index/base.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/index/base.h?ref=fab89006d656261770503e54fdd01ac9167bdd49",
        "patch": "@@ -6,11 +6,10 @@\n #define BITCOIN_INDEX_BASE_H\n \n #include <dbwrapper.h>\n-#include <primitives/block.h>\n-#include <primitives/transaction.h>\n #include <threadinterrupt.h>\n #include <validationinterface.h>\n \n+class CBlock;\n class CBlockIndex;\n class CChainState;\n "
      },
      {
        "sha": "977c83356f781e3dc849b437a9d7cc8ff55d46f4",
        "filename": "src/txdb.h",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fab89006d656261770503e54fdd01ac9167bdd49/src/txdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fab89006d656261770503e54fdd01ac9167bdd49/src/txdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txdb.h?ref=fab89006d656261770503e54fdd01ac9167bdd49",
        "patch": "@@ -16,9 +16,12 @@\n #include <utility>\n #include <vector>\n \n+class CBlockFileInfo;\n class CBlockIndex;\n-class CCoinsViewDBCursor;\n class uint256;\n+namespace Consensus {\n+struct Params;\n+};\n \n //! -dbcache default (MiB)\n static const int64_t nDefaultDbCache = 450;"
      },
      {
        "sha": "8d08f4400b2198d4c30fe42310659ff4b6d1145f",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 5,
        "deletions": 3,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fab89006d656261770503e54fdd01ac9167bdd49/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fab89006d656261770503e54fdd01ac9167bdd49/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=fab89006d656261770503e54fdd01ac9167bdd49",
        "patch": "@@ -11,7 +11,9 @@\n #endif\n \n #include <amount.h>\n+#include <arith_uint256.h>\n #include <attributes.h>\n+#include <chain.h>\n #include <coins.h>\n #include <consensus/validation.h>\n #include <crypto/common.h> // for ReadLE64\n@@ -21,10 +23,11 @@\n #include <policy/packages.h>\n #include <protocol.h> // For CMessageHeader::MessageStartChars\n #include <script/script_error.h>\n+#include <serialize.h>\n #include <sync.h>\n-#include <txmempool.h> // For CTxMemPool::cs\n #include <txdb.h>\n-#include <serialize.h>\n+#include <txmempool.h> // For CTxMemPool::cs\n+#include <uint256.h>\n #include <util/check.h>\n #include <util/hasher.h>\n #include <util/translation.h>\n@@ -42,7 +45,6 @@\n \n class CChainState;\n class BlockValidationState;\n-class CBlockIndex;\n class CBlockTreeDB;\n class CBlockUndo;\n class CChainParams;"
      }
    ]
  },
  {
    "sha": "fae878603345854527c211ebb7d1967f12c8bb9d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWU4Nzg2MDMzNDU4NTQ1MjdjMjExZWJiN2QxOTY3ZjEyYzhiYjlk",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-06-08T14:57:40Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-08-20T14:55:34Z"
      },
      "message": "doc: Fix validation typo",
      "tree": {
        "sha": "23a197cf47de75a8d22efc095c21c2bf84cbc69c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/23a197cf47de75a8d22efc095c21c2bf84cbc69c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fae878603345854527c211ebb7d1967f12c8bb9d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUhIPQv/W/ghC1gtxc6PCEKFKBAl7YAdtNJvEL9LYTRwY102KNnJNt8dw57aG2+T\n7A1rS5185DXEd5Xv9cwcZwdByErcg2bhUdnTAZSegHpjXFP5x4nv0/kxIEo/Xc6w\nqtmcZPQL49sms424hXTzxJffkKnfSoloxMvGURjMUYrMAcRw3RZLaTnhI1PT3Z4I\n60LufXcWfNXXZ41p0ZdeiDcaGVP15ChDlNyugdMPdkyh0lpWVDlsQhJl/jXolZx5\nmpHMzbQ65LBy9g1p11IGOrStGBQKN2Hreh3DJPuwWrzypOLVVn+jin2fQEfzAUIa\njFJ/9B13K0tpbIV0gVRZdQlG4wveo/lSpVQTCPdjcWu49VMkVI2ZcOgU5yHLnxt+\ng+TrDC6zognQR0MhTt1GsNBxOCoZTspCgAlTkZDTmJ7jKjBwMTc4HonHXRHmTvj+\n9cVZ9HAgfD4bwnyIoPB1Le0wt56J7c1fbu4gfP3TnFriMmL98ERl2DsCJ0DcEoXy\nPn23lH7j\n=+Sfd\n-----END PGP SIGNATURE-----",
        "payload": "tree 23a197cf47de75a8d22efc095c21c2bf84cbc69c\nparent fab89006d656261770503e54fdd01ac9167bdd49\nauthor MarcoFalke <falke.marco@gmail.com> 1623164260 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1629471334 +0200\n\ndoc: Fix validation typo\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fae878603345854527c211ebb7d1967f12c8bb9d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fae878603345854527c211ebb7d1967f12c8bb9d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fae878603345854527c211ebb7d1967f12c8bb9d/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fab89006d656261770503e54fdd01ac9167bdd49",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fab89006d656261770503e54fdd01ac9167bdd49",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fab89006d656261770503e54fdd01ac9167bdd49"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "6fa70ff2e15512c5b492d0a8f3a4fa7d4fece7ee",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fae878603345854527c211ebb7d1967f12c8bb9d/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fae878603345854527c211ebb7d1967f12c8bb9d/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=fae878603345854527c211ebb7d1967f12c8bb9d",
        "patch": "@@ -191,7 +191,7 @@ bool CheckFinalTx(const CBlockIndex* active_chain_tip, const CTransaction &tx, i\n \n     // CheckFinalTx() uses active_chain_tip.Height()+1 to evaluate\n     // nLockTime because when IsFinalTx() is called within\n-    // CBlock::AcceptBlock(), the height of the block *being*\n+    // AcceptBlock(), the height of the block *being*\n     // evaluated is what is used. Thus if we want to know if a\n     // transaction can be part of the *next* block, we need to call\n     // IsFinalTx() with one more than active_chain_tip.Height()."
      }
    ]
  },
  {
    "sha": "fa20f815a9cb438c5ab61e97a453612ddd8b21b5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTIwZjgxNWE5Y2I0MzhjNWFiNjFlOTdhNDUzNjEyZGRkOGIyMWI1",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-08-04T18:55:31Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-08-20T14:59:41Z"
      },
      "message": "Remove txindex migration code",
      "tree": {
        "sha": "be62ba807784893d7a5a4c684ab7f9b30b603300",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/be62ba807784893d7a5a4c684ab7f9b30b603300"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa20f815a9cb438c5ab61e97a453612ddd8b21b5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUgxLAwAhYZXm2lvNm34XJFM6xm+smmSaYyJKwxCrXTOa7zB9G6BiPcJPhsrt5MX\n6Po5EPDDD4VQTPkjCBoz7SPZpljhPrFrdUYlbbuy08FyrvkHEIq7E5Q41Lvj5EYD\nSYWhJhKxyALKq9AGji/ayHdue9xNWzGIajQv40zf9xUBr4IWzVxVy42rLnBro01w\nvbRGSIP+548L0VnZFYZZ2LdzXZK9zuLUojG/fdqoMxaJW9uF3Hl2WJOuE13ZIRAV\ndyxko0skg9JBQex6EbyaJWiRXd7YrrnQSAW+bH5KGG66O5RET7a1pm4hgUkYJfit\n4yUTOGR7bkUtYJ1dKTt6c+bHUZ+yXH3yCqCIYsb6ed9HeY09Vq8NtYDxeU5M7nLq\nFFQokKO+K+BsSFSa+iPbBP+Fswj7qTxzbfye7pPewnyNEwWzgM9kZVraSLL15dtN\nXw/y/ynDn11ZPhqa+lvIjxWNvJXV9+fjPp3hh+QX93yUNKU8IBz99wi2nNGwKWps\nS0w91OMC\n=jjXD\n-----END PGP SIGNATURE-----",
        "payload": "tree be62ba807784893d7a5a4c684ab7f9b30b603300\nparent fae878603345854527c211ebb7d1967f12c8bb9d\nauthor MarcoFalke <falke.marco@gmail.com> 1628103331 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1629471581 +0200\n\nRemove txindex migration code\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa20f815a9cb438c5ab61e97a453612ddd8b21b5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa20f815a9cb438c5ab61e97a453612ddd8b21b5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa20f815a9cb438c5ab61e97a453612ddd8b21b5/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fae878603345854527c211ebb7d1967f12c8bb9d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fae878603345854527c211ebb7d1967f12c8bb9d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fae878603345854527c211ebb7d1967f12c8bb9d"
      }
    ],
    "stats": {
      "total": 201,
      "additions": 33,
      "deletions": 168
    },
    "files": [
      {
        "sha": "209785d487c8bdfdfce5ea950291ac92dc20d853",
        "filename": "src/index/txindex.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 161,
        "changes": 163,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa20f815a9cb438c5ab61e97a453612ddd8b21b5/src/index/txindex.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa20f815a9cb438c5ab61e97a453612ddd8b21b5/src/index/txindex.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/index/txindex.cpp?ref=fa20f815a9cb438c5ab61e97a453612ddd8b21b5",
        "patch": "@@ -2,18 +2,14 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <index/disktxpos.h>\n #include <index/txindex.h>\n+\n+#include <index/disktxpos.h>\n #include <node/blockstorage.h>\n-#include <node/ui_interface.h>\n-#include <shutdown.h>\n #include <util/system.h>\n-#include <util/translation.h>\n #include <validation.h>\n \n-constexpr uint8_t DB_BEST_BLOCK{'B'};\n constexpr uint8_t DB_TXINDEX{'t'};\n-constexpr uint8_t DB_TXINDEX_BLOCK{'T'};\n \n std::unique_ptr<TxIndex> g_txindex;\n \n@@ -30,10 +26,6 @@ class TxIndex::DB : public BaseIndex::DB\n \n     /// Write a batch of transaction positions to the DB.\n     bool WriteTxs(const std::vector<std::pair<uint256, CDiskTxPos>>& v_pos);\n-\n-    /// Migrate txindex data from the block tree DB, where it may be for older nodes that have not\n-    /// been upgraded yet to the new database.\n-    bool MigrateData(CBlockTreeDB& block_tree_db, const CBlockLocator& best_locator);\n };\n \n TxIndex::DB::DB(size_t n_cache_size, bool f_memory, bool f_wipe) :\n@@ -54,163 +46,12 @@ bool TxIndex::DB::WriteTxs(const std::vector<std::pair<uint256, CDiskTxPos>>& v_\n     return WriteBatch(batch);\n }\n \n-/*\n- * Safely persist a transfer of data from the old txindex database to the new one, and compact the\n- * range of keys updated. This is used internally by MigrateData.\n- */\n-static void WriteTxIndexMigrationBatches(CDBWrapper& newdb, CDBWrapper& olddb,\n-                                         CDBBatch& batch_newdb, CDBBatch& batch_olddb,\n-                                         const std::pair<uint8_t, uint256>& begin_key,\n-                                         const std::pair<uint8_t, uint256>& end_key)\n-{\n-    // Sync new DB changes to disk before deleting from old DB.\n-    newdb.WriteBatch(batch_newdb, /*fSync=*/ true);\n-    olddb.WriteBatch(batch_olddb);\n-    olddb.CompactRange(begin_key, end_key);\n-\n-    batch_newdb.Clear();\n-    batch_olddb.Clear();\n-}\n-\n-bool TxIndex::DB::MigrateData(CBlockTreeDB& block_tree_db, const CBlockLocator& best_locator)\n-{\n-    // The prior implementation of txindex was always in sync with block index\n-    // and presence was indicated with a boolean DB flag. If the flag is set,\n-    // this means the txindex from a previous version is valid and in sync with\n-    // the chain tip. The first step of the migration is to unset the flag and\n-    // write the chain hash to a separate key, DB_TXINDEX_BLOCK. After that, the\n-    // index entries are copied over in batches to the new database. Finally,\n-    // DB_TXINDEX_BLOCK is erased from the old database and the block hash is\n-    // written to the new database.\n-    //\n-    // Unsetting the boolean flag ensures that if the node is downgraded to a\n-    // previous version, it will not see a corrupted, partially migrated index\n-    // -- it will see that the txindex is disabled. When the node is upgraded\n-    // again, the migration will pick up where it left off and sync to the block\n-    // with hash DB_TXINDEX_BLOCK.\n-    bool f_legacy_flag = false;\n-    block_tree_db.ReadFlag(\"txindex\", f_legacy_flag);\n-    if (f_legacy_flag) {\n-        if (!block_tree_db.Write(DB_TXINDEX_BLOCK, best_locator)) {\n-            return error(\"%s: cannot write block indicator\", __func__);\n-        }\n-        if (!block_tree_db.WriteFlag(\"txindex\", false)) {\n-            return error(\"%s: cannot write block index db flag\", __func__);\n-        }\n-    }\n-\n-    CBlockLocator locator;\n-    if (!block_tree_db.Read(DB_TXINDEX_BLOCK, locator)) {\n-        return true;\n-    }\n-\n-    int64_t count = 0;\n-    LogPrintf(\"Upgrading txindex database... [0%%]\\n\");\n-    uiInterface.ShowProgress(_(\"Upgrading txindex database\").translated, 0, true);\n-    int report_done = 0;\n-    const size_t batch_size = 1 << 24; // 16 MiB\n-\n-    CDBBatch batch_newdb(*this);\n-    CDBBatch batch_olddb(block_tree_db);\n-\n-    std::pair<uint8_t, uint256> key;\n-    std::pair<uint8_t, uint256> begin_key{DB_TXINDEX, uint256()};\n-    std::pair<uint8_t, uint256> prev_key = begin_key;\n-\n-    bool interrupted = false;\n-    std::unique_ptr<CDBIterator> cursor(block_tree_db.NewIterator());\n-    for (cursor->Seek(begin_key); cursor->Valid(); cursor->Next()) {\n-        if (ShutdownRequested()) {\n-            interrupted = true;\n-            break;\n-        }\n-\n-        if (!cursor->GetKey(key)) {\n-            return error(\"%s: cannot get key from valid cursor\", __func__);\n-        }\n-        if (key.first != DB_TXINDEX) {\n-            break;\n-        }\n-\n-        // Log progress every 10%.\n-        if (++count % 256 == 0) {\n-            // Since txids are uniformly random and traversed in increasing order, the high 16 bits\n-            // of the hash can be used to estimate the current progress.\n-            const uint256& txid = key.second;\n-            uint32_t high_nibble =\n-                (static_cast<uint32_t>(*(txid.begin() + 0)) << 8) +\n-                (static_cast<uint32_t>(*(txid.begin() + 1)) << 0);\n-            int percentage_done = (int)(high_nibble * 100.0 / 65536.0 + 0.5);\n-\n-            uiInterface.ShowProgress(_(\"Upgrading txindex database\").translated, percentage_done, true);\n-            if (report_done < percentage_done/10) {\n-                LogPrintf(\"Upgrading txindex database... [%d%%]\\n\", percentage_done);\n-                report_done = percentage_done/10;\n-            }\n-        }\n-\n-        CDiskTxPos value;\n-        if (!cursor->GetValue(value)) {\n-            return error(\"%s: cannot parse txindex record\", __func__);\n-        }\n-        batch_newdb.Write(key, value);\n-        batch_olddb.Erase(key);\n-\n-        if (batch_newdb.SizeEstimate() > batch_size || batch_olddb.SizeEstimate() > batch_size) {\n-            // NOTE: it's OK to delete the key pointed at by the current DB cursor while iterating\n-            // because LevelDB iterators are guaranteed to provide a consistent view of the\n-            // underlying data, like a lightweight snapshot.\n-            WriteTxIndexMigrationBatches(*this, block_tree_db,\n-                                         batch_newdb, batch_olddb,\n-                                         prev_key, key);\n-            prev_key = key;\n-        }\n-    }\n-\n-    // If these final DB batches complete the migration, write the best block\n-    // hash marker to the new database and delete from the old one. This signals\n-    // that the former is fully caught up to that point in the blockchain and\n-    // that all txindex entries have been removed from the latter.\n-    if (!interrupted) {\n-        batch_olddb.Erase(DB_TXINDEX_BLOCK);\n-        batch_newdb.Write(DB_BEST_BLOCK, locator);\n-    }\n-\n-    WriteTxIndexMigrationBatches(*this, block_tree_db,\n-                                 batch_newdb, batch_olddb,\n-                                 begin_key, key);\n-\n-    if (interrupted) {\n-        LogPrintf(\"[CANCELLED].\\n\");\n-        return false;\n-    }\n-\n-    uiInterface.ShowProgress(\"\", 100, false);\n-\n-    LogPrintf(\"[DONE].\\n\");\n-    return true;\n-}\n-\n TxIndex::TxIndex(size_t n_cache_size, bool f_memory, bool f_wipe)\n     : m_db(std::make_unique<TxIndex::DB>(n_cache_size, f_memory, f_wipe))\n {}\n \n TxIndex::~TxIndex() {}\n \n-bool TxIndex::Init()\n-{\n-    LOCK(cs_main);\n-\n-    // Attempt to migrate txindex from the old database to the new one. Even if\n-    // chain_tip is null, the node could be reindexing and we still want to\n-    // delete txindex records in the old database.\n-    if (!m_db->MigrateData(*m_chainstate->m_blockman.m_block_tree_db, m_chainstate->m_chain.GetLocator())) {\n-        return false;\n-    }\n-\n-    return BaseIndex::Init();\n-}\n-\n bool TxIndex::WriteBlock(const CBlock& block, const CBlockIndex* pindex)\n {\n     // Exclude genesis block transaction because outputs are not spendable."
      },
      {
        "sha": "59375bc20470da4d3505a5825eaaab488c84bfbd",
        "filename": "src/index/txindex.h",
        "status": "modified",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa20f815a9cb438c5ab61e97a453612ddd8b21b5/src/index/txindex.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa20f815a9cb438c5ab61e97a453612ddd8b21b5/src/index/txindex.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/index/txindex.h?ref=fa20f815a9cb438c5ab61e97a453612ddd8b21b5",
        "patch": "@@ -5,9 +5,7 @@\n #ifndef BITCOIN_INDEX_TXINDEX_H\n #define BITCOIN_INDEX_TXINDEX_H\n \n-#include <chain.h>\n #include <index/base.h>\n-#include <txdb.h>\n \n /**\n  * TxIndex is used to look up transactions included in the blockchain by hash.\n@@ -23,9 +21,6 @@ class TxIndex final : public BaseIndex\n     const std::unique_ptr<DB> m_db;\n \n protected:\n-    /// Override base class init to migrate from old database.\n-    bool Init() override;\n-\n     bool WriteBlock(const CBlock& block, const CBlockIndex* pindex) override;\n \n     BaseIndex::DB& GetDB() const override;"
      },
      {
        "sha": "fe7388b42f202fc0634e353262422db45a532db5",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa20f815a9cb438c5ab61e97a453612ddd8b21b5/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa20f815a9cb438c5ab61e97a453612ddd8b21b5/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=fa20f815a9cb438c5ab61e97a453612ddd8b21b5",
        "patch": "@@ -1566,6 +1566,10 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n \n     // ********************************************************* Step 8: start indexers\n     if (args.GetBoolArg(\"-txindex\", DEFAULT_TXINDEX)) {\n+        if (const auto error{CheckLegacyTxindex(*Assert(chainman.m_blockman.m_block_tree_db))}) {\n+            return InitError(*error);\n+        }\n+\n         g_txindex = std::make_unique<TxIndex>(nTxIndexCache, false, fReindex);\n         if (!g_txindex->Start(chainman.ActiveChainstate())) {\n             return false;"
      },
      {
        "sha": "cfa864668a47d14c3b536d06b215ba6417f1f531",
        "filename": "src/txdb.cpp",
        "status": "modified",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa20f815a9cb438c5ab61e97a453612ddd8b21b5/src/txdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa20f815a9cb438c5ab61e97a453612ddd8b21b5/src/txdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txdb.cpp?ref=fa20f815a9cb438c5ab61e97a453612ddd8b21b5",
        "patch": "@@ -5,6 +5,7 @@\n \n #include <txdb.h>\n \n+#include <chain.h>\n #include <node/ui_interface.h>\n #include <pow.h>\n #include <random.h>\n@@ -27,6 +28,28 @@ static constexpr uint8_t DB_FLAG{'F'};\n static constexpr uint8_t DB_REINDEX_FLAG{'R'};\n static constexpr uint8_t DB_LAST_BLOCK{'l'};\n \n+// Keys used in previous version that might still be found in the DB:\n+static constexpr uint8_t DB_TXINDEX_BLOCK{'T'};\n+//               uint8_t DB_TXINDEX{'t'}\n+\n+std::optional<bilingual_str> CheckLegacyTxindex(CBlockTreeDB& block_tree_db)\n+{\n+    CBlockLocator ignored{};\n+    if (block_tree_db.Read(DB_TXINDEX_BLOCK, ignored)) {\n+        return _(\"The -txindex upgrade started by a previous version can not be completed. Restart with the previous version or run a full -reindex.\");\n+    }\n+    bool txindex_legacy_flag{false};\n+    block_tree_db.ReadFlag(\"txindex\", txindex_legacy_flag);\n+    if (txindex_legacy_flag) {\n+        // Disable legacy txindex and warn once about occupied disk space\n+        if (!block_tree_db.WriteFlag(\"txindex\", false)) {\n+            return Untranslated(\"Failed to write block index db flag 'txindex'='0'\");\n+        }\n+        return _(\"The block index db contains a legacy 'txindex'. To clear the occupied disk space, run a full -reindex, otherwise ignore this error. This error message will not be displayed again.\");\n+    }\n+    return std::nullopt;\n+}\n+\n namespace {\n \n struct CoinEntry {"
      },
      {
        "sha": "1bdce711264a3df7541c671007b56f67948c9c25",
        "filename": "src/txdb.h",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa20f815a9cb438c5ab61e97a453612ddd8b21b5/src/txdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa20f815a9cb438c5ab61e97a453612ddd8b21b5/src/txdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txdb.h?ref=fa20f815a9cb438c5ab61e97a453612ddd8b21b5",
        "patch": "@@ -8,10 +8,9 @@\n \n #include <coins.h>\n #include <dbwrapper.h>\n-#include <chain.h>\n-#include <primitives/block.h>\n \n #include <memory>\n+#include <optional>\n #include <string>\n #include <utility>\n #include <vector>\n@@ -22,6 +21,7 @@ class uint256;\n namespace Consensus {\n struct Params;\n };\n+struct bilingual_str;\n \n //! -dbcache default (MiB)\n static const int64_t nDefaultDbCache = 450;\n@@ -89,4 +89,6 @@ class CBlockTreeDB : public CDBWrapper\n     bool LoadBlockIndexGuts(const Consensus::Params& consensusParams, std::function<CBlockIndex*(const uint256&)> insertBlockIndex);\n };\n \n+std::optional<bilingual_str> CheckLegacyTxindex(CBlockTreeDB& block_tree_db);\n+\n #endif // BITCOIN_TXDB_H"
      }
    ]
  }
]