[
  {
    "sha": "d6cde007db9d3e6ee93bd98a9bbfdce9bfa9b15b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkNmNkZTAwN2RiOWQzZTZlZTkzYmQ5OGE5YmJmZGNlOWJmYTliMTVi",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2018-11-19T15:10:33Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2018-11-21T22:30:07Z"
      },
      "message": "rpcauth: Improve by using argparse and getpass modules",
      "tree": {
        "sha": "12b12584327024f0eacab48cb194ba0530e3fe5c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/12b12584327024f0eacab48cb194ba0530e3fe5c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d6cde007db9d3e6ee93bd98a9bbfdce9bfa9b15b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d6cde007db9d3e6ee93bd98a9bbfdce9bfa9b15b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d6cde007db9d3e6ee93bd98a9bbfdce9bfa9b15b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d6cde007db9d3e6ee93bd98a9bbfdce9bfa9b15b/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "267793af8b03e2a11af8a51d7091495bbd065b62",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/267793af8b03e2a11af8a51d7091495bbd065b62",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/267793af8b03e2a11af8a51d7091495bbd065b62"
      }
    ],
    "stats": {
      "total": 50,
      "additions": 28,
      "deletions": 22
    },
    "files": [
      {
        "sha": "6f627b867bca0546a9301332865eec3e9389abb0",
        "filename": "share/rpcauth/README.md",
        "status": "modified",
        "additions": 10,
        "deletions": 6,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d6cde007db9d3e6ee93bd98a9bbfdce9bfa9b15b/share/rpcauth/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d6cde007db9d3e6ee93bd98a9bbfdce9bfa9b15b/share/rpcauth/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/rpcauth/README.md?ref=d6cde007db9d3e6ee93bd98a9bbfdce9bfa9b15b",
        "patch": "@@ -3,12 +3,16 @@ RPC Tools\n \n ### [RPCAuth](/share/rpcauth) ###\n \n-Create login credentials for a JSON-RPC user.\n+```\n+usage: rpcauth.py [-h] username [password]\n \n-Usage:\n+Create login credentials for a JSON-RPC user\n \n-    ./rpcauth.py <username>\n+positional arguments:\n+  username    the username for authentication\n+  password    leave empty to generate a random password or specify \"-\" to\n+              prompt for password\n \n-in which case the script will generate a password. To specify a custom password do:\n-\n-    ./rpcauth.py <username> <password>\n+optional arguments:\n+  -h, --help  show this help message and exit\n+  ```"
      },
      {
        "sha": "b14c80171e8ff8c91016004ee355b739f6bd20fb",
        "filename": "share/rpcauth/rpcauth.py",
        "status": "modified",
        "additions": 18,
        "deletions": 16,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d6cde007db9d3e6ee93bd98a9bbfdce9bfa9b15b/share/rpcauth/rpcauth.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d6cde007db9d3e6ee93bd98a9bbfdce9bfa9b15b/share/rpcauth/rpcauth.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/rpcauth/rpcauth.py?ref=d6cde007db9d3e6ee93bd98a9bbfdce9bfa9b15b",
        "patch": "@@ -3,42 +3,44 @@\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-import sys\n-import os\n-import base64\n+from argparse import ArgumentParser\n+from base64 import urlsafe_b64encode\n from binascii import hexlify\n+from getpass import getpass\n+from os import urandom\n+\n import hmac\n \n def generate_salt(size):\n     \"\"\"Create size byte hex salt\"\"\"\n-    return hexlify(os.urandom(size)).decode()\n+    return hexlify(urandom(size)).decode()\n \n def generate_password():\n     \"\"\"Create 32 byte b64 password\"\"\"\n-    return base64.urlsafe_b64encode(os.urandom(32)).decode('utf-8')\n+    return urlsafe_b64encode(urandom(32)).decode('utf-8')\n \n def password_to_hmac(salt, password):\n     m = hmac.new(bytearray(salt, 'utf-8'), bytearray(password, 'utf-8'), 'SHA256')\n     return m.hexdigest()\n \n def main():\n-    if len(sys.argv) < 2:\n-        sys.stderr.write('Please include username (and an optional password, will generate one if not provided) as an argument.\\n')\n-        sys.exit(0)\n+    parser = ArgumentParser(description='Create login credentials for a JSON-RPC user')\n+    parser.add_argument('username', help='the username for authentication')\n+    parser.add_argument('password', help='leave empty to generate a random password or specify \"-\" to prompt for password', nargs='?')\n+    args = parser.parse_args()\n \n-    username = sys.argv[1]\n+    if not args.password:\n+        args.password = generate_password()\n+    elif args.password == '-':\n+        args.password = getpass()\n \n     # Create 16 byte hex salt\n     salt = generate_salt(16)\n-    if len(sys.argv) > 2:\n-        password = sys.argv[2]\n-    else:\n-        password = generate_password()\n-    password_hmac = password_to_hmac(salt, password)\n+    password_hmac = password_to_hmac(salt, args.password)\n \n     print('String to be appended to bitcoin.conf:')\n-    print('rpcauth={0}:{1}${2}'.format(username, salt, password_hmac))\n-    print('Your password:\\n{0}'.format(password))\n+    print('rpcauth={0}:{1}${2}'.format(args.username, salt, password_hmac))\n+    print('Your password:\\n{0}'.format(args.password))\n \n if __name__ == '__main__':\n     main()"
      }
    ]
  }
]