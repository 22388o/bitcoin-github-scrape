[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/709588627",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20158#issuecomment-709588627",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20158",
    "id": 709588627,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwOTU4ODYyNw==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-15T21:03:03Z",
    "updated_at": "2021-02-11T09:54:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #21148 (Split orphan handling from net_processing into txorphanage by ajtowns)\n* #21146 ([WIP] validation/coins: limit MemPoolAccept access to coins cache by glozow)\n* #21142 (fuzz: Add tx_pool fuzz target by MarcoFalke)\n* #21121 ([test] Small unit test improvements, including helper to make mempool transaction by amitiuttarwar)\n* #21090 (Default to NODE_WITNESS in nLocalServices by dhruv)\n* #21062 (refactor: return MempoolAcceptResult from ATMP by glozow)\n* #21061 ([p2p] Introduce node rebroadcast module by amitiuttarwar)\n* #21009 (Remove RewindBlockIndex logic by dhruv)\n* #21003 (test: Move MakeNoLogFileContext to libtest_util, and use it in bench by MarcoFalke)\n* #20942 ([refactor] Move some net_processing globals into PeerManagerImpl by ajtowns)\n* #20925 (RFC: Move Peer and PeerManagerImpl declarations to separate header by jnewbery)\n* #20799 (net processing: Only support version 2 compact blocks by jnewbery)\n* #20750 ([Bundle 2/n] Prune g_chainman usage in mempool-related validation functions by dongcarl)\n* #20729 (p2p: standardize outbound full/block relay connection type naming by jonatack)\n* #20726 (p2p: Add DISABLETX message for negotiating block-relay-only connections by sdaftuar)\n* #20429 (refactor: replace (sizeof(a)/sizeof(a[0])) with C++17 std::size by theStack)\n* #20331 (allow -loadblock blocks to be unsorted by LarryRuane)\n* #19806 (validation: UTXO snapshot activation by jamesob)\n* #19573 (Replace unused BIP 9 logic with draft BIP 8 by luke-jr)\n* #19438 (Introduce deploymentstatus by ajtowns)\n* #19259 (fuzz: Add fuzzing harness for LoadMempool(...) and DumpMempool(...) by practicalswift)\n* #16981 (Improve runtime performance of --reindex by LarryRuane)\n* #15946 (Allow maintaining the blockfilterindex when using prune by jonasschnelli)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/709588627/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/709951262",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20158#issuecomment-709951262",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20158",
    "id": 709951262,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwOTk1MTI2Mg==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-16T10:01:12Z",
    "updated_at": "2020-10-16T10:01:12Z",
    "author_association": "MEMBER",
    "body": "Concept ACK.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/709951262/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/710143583",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20158#issuecomment-710143583",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20158",
    "id": 710143583,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxMDE0MzU4Mw==",
    "user": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-16T16:03:05Z",
    "updated_at": "2020-10-16T16:03:05Z",
    "author_association": "MEMBER",
    "body": "Concept ACK - really like the direction of this work.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/710143583/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/716660486",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20158#issuecomment-716660486",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20158",
    "id": 716660486,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxNjY2MDQ4Ng==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-26T16:20:58Z",
    "updated_at": "2020-10-26T16:21:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "Reproduced ci error locally https://cirrus-ci.com/task/5403931733917696?command=ci#L4078\r\n\r\n```sh\r\ngit checkout 2a05215114f2e4ebf764647af7e48ca1a8cb9ff9\r\n./autogen.sh\r\n./configure CXX=clang++ CXXFLAGS=\"-fsanitize=address -fno-omit-frame-pointer\" LDFLAGS=-fsanitize=address --enable-debug --enable-werror --disable-ccache\r\nmake -C src qt/test/test_bitcoin-qt && ASAN_OPTIONS=abort_on_error=1 gdb -ex run --args src/qt/test/test_bitcoin-qt\r\n```\r\n\r\n<details><summary>stack</summary>\r\n<p>\r\n\r\n```\r\nThread 1 \"b-test\" received signal SIGABRT, Aborted.\r\n__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:51\r\n51      ../sysdeps/unix/sysv/linux/raise.c: No such file or directory.\r\n(gdb) bt\r\n#0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:51\r\n#1  0x00007ffff337f8b1 in __GI_abort () at abort.c:79\r\n#2  0x0000555555ac21ab in __sanitizer::Abort() ()\r\n#3  0x0000555555abf4d8 in __sanitizer::Die() ()\r\n#4  0x0000555555aa175d in __asan::ReportGenericError(unsigned long, unsigned long, unsigned long, unsigned long, bool, unsigned long, unsigned int, bool) ()\r\n#5  0x0000555555aa1f48 in __asan_report_load4 ()\r\n#6  0x00005555575f4d03 in base_uint<256u>::CompareTo (this=0x60d00016c958, b=...) at arith_uint256.cpp:112\r\n#7  0x000055555615213a in operator< (a=..., b=...) at ./arith_uint256.h:220\r\n#8  0x0000555556a710e4 in BlockManager::AddToBlockIndex (this=0x611000129720, block=...) at validation.cpp:3183\r\n#9  0x0000555556a9466d in CChainState::LoadGenesisBlock (this=0x612000101440, chainparams=...) at validation.cpp:4631\r\n#10 0x0000555556d1dcaa in TestingSetup::TestingSetup (this=0x7fffffffb2b0, chainName=\"main\", extra_args=std::vector of length 0, capacity 0) at test/util/setup_common.cpp:183\r\n#11 0x0000555555af39df in RPCNestedTests::rpcNestedTests (this=0x7fffffffded0) at qt/test/rpcnestedtests.cpp:36\r\n#12 0x0000555555b990be in RPCNestedTests::qt_static_metacall (_o=0x7fffffffded0, _c=QMetaObject::InvokeMetaMethod, _id=0, _a=0x7fffffffd2c0)\r\n    at qt/test/moc_rpcnestedtests.cpp:70\r\n#13 0x00007ffff6b9e003 in QMetaMethod::invoke(QObject*, Qt::ConnectionType, QGenericReturnArgument, QGenericArgument, QGenericArgument, QGenericArgument, QGenericArgument, QGenericArgument, QGenericArgument, QGenericArgument, QGenericArgument, QGenericArgument, QGenericArgument) const () from /usr/lib/x86_64-linux-gnu/libQt5Core.so.5\r\n#14 0x00007ffff66dc79a in ?? () from /usr/lib/x86_64-linux-gnu/libQt5Test.so.5\r\n#15 0x00007ffff66dd4f0 in ?? () from /usr/lib/x86_64-linux-gnu/libQt5Test.so.5\r\n#16 0x00007ffff66dda61 in ?? () from /usr/lib/x86_64-linux-gnu/libQt5Test.so.5\r\n#17 0x00007ffff66de02b in QTest::qExec(QObject*, int, char**) () from /usr/lib/x86_64-linux-gnu/libQt5Test.so.5\r\n#18 0x0000555555afead1 in main (argc=1, argv=0x7fffffffe298) at qt/test/test_main.cpp:85\r\n```\r\n\r\n</p>\r\n</details>",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/716660486/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/716688829",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20158#issuecomment-716688829",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20158",
    "id": 716688829,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxNjY4ODgyOQ==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-26T17:01:11Z",
    "updated_at": "2020-10-26T17:01:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "Following change partially reverting 50f680b402a84b605aa9b9aa58cb571ef32e190e seems to fix the error:\r\n\r\n```diff\r\n--- a/src/qt/test/apptests.cpp\r\n+++ b/src/qt/test/apptests.cpp\r\n@@ -84,6 +84,10 @@ void AppTests::appTests()\r\n     // Reset global state to avoid interfering with later tests.\r\n     LogInstance().DisconnectTestLogger();\r\n     AbortShutdown();\r\n+    {\r\n+        LOCK(cs_main);\r\n+        ::pindexBestHeader = nullptr;\r\n+    }\r\n }\r\n \r\n //! Entry point for BitcoinGUI tests.\r\n```\r\n\r\nError is happening here:\r\n\r\n```\r\n#8  0x0000555556a710e4 in BlockManager::AddToBlockIndex (this=0x611000129860, block=...) at validation.cpp:3183\r\n3183        if (pindexBestHeader == nullptr || pindexBestHeader->nChainWork < pindexNew->nChainWork)\r\n``` ",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/716688829/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/717741613",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20158#issuecomment-717741613",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20158",
    "id": 717741613,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxNzc0MTYxMw==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-28T06:59:14Z",
    "updated_at": "2020-10-28T06:59:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "Concept ACK",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/717741613/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/721542870",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20158#issuecomment-721542870",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20158",
    "id": 721542870,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyMTU0Mjg3MA==",
    "user": {
      "login": "troygiorshev",
      "id": 5553787,
      "node_id": "MDQ6VXNlcjU1NTM3ODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5553787?u=84369c78e74365314bd9806230ab56f2c1585fb4&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/troygiorshev",
      "html_url": "https://github.com/troygiorshev",
      "followers_url": "https://api.github.com/users/troygiorshev/followers",
      "following_url": "https://api.github.com/users/troygiorshev/following{/other_user}",
      "gists_url": "https://api.github.com/users/troygiorshev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/troygiorshev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/troygiorshev/subscriptions",
      "organizations_url": "https://api.github.com/users/troygiorshev/orgs",
      "repos_url": "https://api.github.com/users/troygiorshev/repos",
      "events_url": "https://api.github.com/users/troygiorshev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/troygiorshev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-04T06:41:18Z",
    "updated_at": "2020-11-04T06:41:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "Concept ACK, excited for this to be sliced into smaller PRs for deeper review!",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/721542870/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/722576976",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20158#issuecomment-722576976",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20158",
    "id": 722576976,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyMjU3Njk3Ng==",
    "user": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?u=62e3204f6586795420395a7059ec7dc7c4a40c7d&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-05T19:01:35Z",
    "updated_at": "2020-11-05T19:01:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "Reviewers: Just split off the first few fix commits in a non-draft PR #20323!",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/722576976/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/723483988",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20158#issuecomment-723483988",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20158",
    "id": 723483988,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyMzQ4Mzk4OA==",
    "user": {
      "login": "fjahr",
      "id": 1322187,
      "node_id": "MDQ6VXNlcjEzMjIxODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1322187?u=348c27f90b6fff8fd72fa27232272651436a2ff0&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjahr",
      "html_url": "https://github.com/fjahr",
      "followers_url": "https://api.github.com/users/fjahr/followers",
      "following_url": "https://api.github.com/users/fjahr/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjahr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
      "organizations_url": "https://api.github.com/users/fjahr/orgs",
      "repos_url": "https://api.github.com/users/fjahr/repos",
      "events_url": "https://api.github.com/users/fjahr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjahr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-07T19:20:16Z",
    "updated_at": "2020-11-07T19:20:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "Concept ACK",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/723483988/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/748117563",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20158#issuecomment-748117563",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20158",
    "id": 748117563,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0ODExNzU2Mw==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-18T14:37:08Z",
    "updated_at": "2020-12-18T14:37:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "re: https://github.com/bitcoin/bitcoin/pull/20158#issue-504296351\r\n\r\n> ### Current split-off PRs ready for review\r\n> _Last updated Nov 5th, 2020_\r\n> \r\n> * [ ]  #20323 | tests: Create or use existing properly initialized NodeContexts\r\n\r\n#20323 is now merged, so it would be good to post a followup or rebase this",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/748117563/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/748344844",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20158#issuecomment-748344844",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20158",
    "id": 748344844,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0ODM0NDg0NA==",
    "user": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?u=62e3204f6586795420395a7059ec7dc7c4a40c7d&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-18T22:13:00Z",
    "updated_at": "2020-12-18T22:35:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "Pushed 912512a27c1caa59eb928e10f1022d1b33c2d711 -> abcde917ddec206cd938d6d418094d5db645f740 | Thanks ryanofsky for the reminder!\r\n\r\n- Rebased over current master\r\n- All commits should now compile",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/748344844/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/749684574",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20158#issuecomment-749684574",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20158",
    "id": 749684574,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0OTY4NDU3NA==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-22T17:45:51Z",
    "updated_at": "2020-12-22T17:45:51Z",
    "author_association": "MEMBER",
    "body": "@dongcarl are you planning on carving off some more commits into a separate PR? I'd love to help this make some progress.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/749684574/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/749685220",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20158#issuecomment-749685220",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20158",
    "id": 749685220,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0OTY4NTIyMA==",
    "user": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?u=62e3204f6586795420395a7059ec7dc7c4a40c7d&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-22T17:47:07Z",
    "updated_at": "2020-12-22T17:47:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jnewbery Yup, got a bit caught up on other things but will open that first PR today!",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/749685220/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/752638393",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20158#issuecomment-752638393",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20158",
    "id": 752638393,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1MjYzODM5Mw==",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-30T14:21:52Z",
    "updated_at": "2020-12-30T14:21:52Z",
    "author_association": "MEMBER",
    "body": "Concept ACK. Thanks for chopping this into smaller PR's.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/752638393/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/770814271",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20158#issuecomment-770814271",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20158",
    "id": 770814271,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3MDgxNDI3MQ==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-01T12:16:37Z",
    "updated_at": "2021-02-01T12:16:37Z",
    "author_association": "MEMBER",
    "body": "https://github.com/bitcoin/bitcoin/pull/20749 is merged. I think next up is https://github.com/bitcoin/bitcoin/pull/20750.\r\n\r\n@dongcarl - do you mind linking these bundle PRs in the [PR description](https://github.com/bitcoin/bitcoin/pull/20158#issue-504296351) so it's easy to see the project progress at a glance?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/770814271/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/770997518",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20158#issuecomment-770997518",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20158",
    "id": 770997518,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3MDk5NzUxOA==",
    "user": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?u=62e3204f6586795420395a7059ec7dc7c4a40c7d&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-01T16:51:01Z",
    "updated_at": "2021-02-01T16:51:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jnewbery Good point, done!",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/770997518/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/862519040",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20158#issuecomment-862519040",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20158",
    "id": 862519040,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2MjUxOTA0MA==",
    "user": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?u=62e3204f6586795420395a7059ec7dc7c4a40c7d&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-16T16:19:42Z",
    "updated_at": "2021-06-16T16:19:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks everyone for the reviews, seems like the last bundle is merged. I would like to call attention to #21766, where a few leftover improvements were collated.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/862519040/reactions",
      "total_count": 2,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 2,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/510474839",
    "pull_request_review_id": 515140920,
    "id": 510474839,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ3NDgzOQ==",
    "diff_hunk": "@@ -170,11 +170,12 @@ namespace {\n     std::set<int> setDirtyFileInfo;\n } // anon namespace\n \n-CBlockIndex* LookupBlockIndex(const uint256& hash)\n+CBlockIndex* BlockManager::LookupBlockIndex(const uint256& hash)",
    "path": "src/validation.cpp",
    "position": 23,
    "original_position": 5,
    "commit_id": "6bda9eb9e26012fd75db079555d2f75e742c8c18",
    "original_commit_id": "8615dbd1250c2dddec2f54bf80e2a1b7013bc871",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"validation: Move LookupBlockIndex to BlockManager\" (8615dbd1250c2dddec2f54bf80e2a1b7013bc871)\r\n\r\nCommit doesn't compile, not sure if this is intended. Could make this a wrapper function until after the scripted diff",
    "created_at": "2020-10-22T21:41:48Z",
    "updated_at": "2021-02-02T02:57:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20158#discussion_r510474839",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20158",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/510474839"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20158#discussion_r510474839"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20158"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/510474839/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 155,
    "original_line": 155,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/510477316",
    "pull_request_review_id": 515140920,
    "id": 510477316,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ3NzMxNg==",
    "diff_hunk": "@@ -440,6 +437,9 @@ class BlockManager\n \n     CBlockIndex* LookupBlockIndex(const uint256& hash) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n+    /** Find the last common block between the parameter chain and a locator. */\n+    CBlockIndex* FindForkInGlobalIndex(const CChain& chain, const CBlockLocator& locator) EXCLUSIVE_LOCKS_REQUIRED(cs_main);",
    "path": "src/validation.h",
    "position": null,
    "original_position": 15,
    "commit_id": "6bda9eb9e26012fd75db079555d2f75e742c8c18",
    "original_commit_id": "8dbedcb3bf123411ebcd9ccb7521b44cacc8e385",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"validation: Move FindForkInGlobalIndex to BlockManager\" (8dbedcb3bf123411ebcd9ccb7521b44cacc8e385)\r\n\r\nre: \"Let me know if this should be changed\", this makes sense to me. A possible alternative might be to make this a chain method, too",
    "created_at": "2020-10-22T21:47:14Z",
    "updated_at": "2021-02-02T02:57:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20158#discussion_r510477316",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20158",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/510477316"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20158#discussion_r510477316"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20158"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/510477316/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 423,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/510481852",
    "pull_request_review_id": 515140920,
    "id": 510481852,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ4MTg1Mg==",
    "diff_hunk": "@@ -632,7 +632,7 @@ void CTxMemPool::check(const CCoinsViewCache *pcoins) const\n     uint64_t innerUsage = 0;\n \n     CCoinsViewCache mempoolDuplicate(const_cast<CCoinsViewCache*>(pcoins));\n-    const int64_t spendheight = GetSpendHeight(mempoolDuplicate);\n+    const int64_t spendheight = WITH_LOCK(::cs_main, return g_chainman.m_blockman.GetSpendHeight(mempoolDuplicate));",
    "path": "src/txmempool.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "6bda9eb9e26012fd75db079555d2f75e742c8c18",
    "original_commit_id": "05a9e983b421f7728c6cf4c18525abba8a68c82a",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"validation: Move GetSpendHeight to BlockManager\" (05a9e983b421f7728c6cf4c18525abba8a68c82a)\r\n\r\nThis isn't changing behavior, but I don't think it's correct to lock cs_main after mempool.cs. Other code locks in the opposite order so there could be a deadlock if cs_main lock is actually acquired here and this isn't a redundant recursive lock. Maybe it is possible to clean this up simply by annotating CTxMemPool::check to already require cs_main.",
    "created_at": "2020-10-22T21:57:57Z",
    "updated_at": "2021-02-02T02:57:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20158#discussion_r510481852",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20158",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/510481852"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20158#discussion_r510481852"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20158"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/510481852/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 635,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/510485799",
    "pull_request_review_id": 515140920,
    "id": 510485799,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ4NTc5OQ==",
    "diff_hunk": "@@ -672,7 +667,7 @@ class CChainState {\n     bool ActivateBestChain(\n         BlockValidationState& state,\n         const CChainParams& chainparams,\n-        std::shared_ptr<const CBlock> pblock) LOCKS_EXCLUDED(cs_main);\n+        std::shared_ptr<const CBlock> pblock = std::shared_ptr<const CBlock>()) LOCKS_EXCLUDED(cs_main);",
    "path": "src/validation.h",
    "position": null,
    "original_position": 28,
    "commit_id": "6bda9eb9e26012fd75db079555d2f75e742c8c18",
    "original_commit_id": "7e15a2c88e49ec6719997e2cdd8481ddd4e7f6be",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"validation: Remove global ::ActivateBestChain\" (7e15a2c88e49ec6719997e2cdd8481ddd4e7f6be)\r\n\r\nWould seem clearer to say `= nullptr` if that works and you don't prefer this longer version",
    "created_at": "2020-10-22T22:07:36Z",
    "updated_at": "2021-02-02T02:57:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20158#discussion_r510485799",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20158",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/510485799"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20158#discussion_r510485799"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20158"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/510485799/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 670,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/510495615",
    "pull_request_review_id": 515140920,
    "id": 510495615,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ5NTYxNQ==",
    "diff_hunk": "@@ -5036,24 +5036,6 @@ CBlockFileInfo* GetBlockFileInfo(size_t n)\n     return &vinfoBlockFile.at(n);\n }\n \n-ThresholdState VersionBitsTipState(const Consensus::Params& params, Consensus::DeploymentPos pos)\n-{\n-    LOCK(cs_main);",
    "path": "src/validation.cpp",
    "position": 831,
    "original_position": 6,
    "commit_id": "6bda9eb9e26012fd75db079555d2f75e742c8c18",
    "original_commit_id": "b60c7e5a5a60fe60a3bc8ba540dc7c8d5c935869",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"validation: Remove global ::VersionBitsTip{State,SinceHeight,Statistics}\" (b60c7e5a5a60fe60a3bc8ba540dc7c8d5c935869)\r\n\r\nI'm a little unclear why it's safe to drop these locks, or why they were here to begin with, or if VersionBits or ChainActive or Tip functions should have been annotated to require cs_main. It seems like something should have be annotated if cs_main was required here",
    "created_at": "2020-10-22T22:33:40Z",
    "updated_at": "2021-02-02T02:57:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20158#discussion_r510495615",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20158",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/510495615"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20158#discussion_r510495615"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20158"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/510495615/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 4976,
    "original_line": 4976,
    "side": "LEFT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511162039",
    "pull_request_review_id": 516018887,
    "id": 511162039,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE2MjAzOQ==",
    "diff_hunk": "@@ -633,7 +633,7 @@ void CTxMemPool::check(const CCoinsViewCache *pcoins) const\n     uint64_t innerUsage = 0;\n \n     CCoinsViewCache mempoolDuplicate(const_cast<CCoinsViewCache*>(pcoins));\n-    const int64_t spendheight = WITH_LOCK(::cs_main, return g_chainman.m_blockman.GetSpendHeight(mempoolDuplicate));\n+    assert(WITH_LOCK(::cs_main, return g_chainman.m_blockman.GetSpendHeight(mempoolDuplicate)) == spendheight); // TODO: REVIEW-ONLY, REMOVE IN FUTURE COMMIT",
    "path": "src/txmempool.cpp",
    "position": null,
    "original_position": 14,
    "commit_id": "6bda9eb9e26012fd75db079555d2f75e742c8c18",
    "original_commit_id": "0af807545a93891df691acb43e07fd465c996ecd",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"validation: Pass in spendheight to CTxMemPool::check\" (0af807545a93891df691acb43e07fd465c996ecd)\r\n\r\n~This is fine, but not sure if it was intentional to keep this TODO comment here, but not in the other asserts~\r\n\r\nEDIT: Apparently this is done to help the 09a153e13506d6352e478256ce4220232455000f scripted-diff, and the other asserts treat `addressof` as the TODO",
    "created_at": "2020-10-23T21:24:51Z",
    "updated_at": "2021-02-02T02:57:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20158#discussion_r511162039",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20158",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511162039"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20158#discussion_r511162039"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20158"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511162039/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 636,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511165117",
    "pull_request_review_id": 516018887,
    "id": 511165117,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE2NTExNw==",
    "diff_hunk": "@@ -632,7 +632,7 @@ void CTxMemPool::check(const CCoinsViewCache *pcoins) const\n     uint64_t innerUsage = 0;\n \n     CCoinsViewCache mempoolDuplicate(const_cast<CCoinsViewCache*>(pcoins));\n-    const int64_t spendheight = GetSpendHeight(mempoolDuplicate);\n+    const int64_t spendheight = WITH_LOCK(::cs_main, return g_chainman.m_blockman.GetSpendHeight(mempoolDuplicate));",
    "path": "src/txmempool.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "6bda9eb9e26012fd75db079555d2f75e742c8c18",
    "original_commit_id": "05a9e983b421f7728c6cf4c18525abba8a68c82a",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "re: https://github.com/bitcoin/bitcoin/pull/20158#discussion_r510481852\r\n\r\n> In commit \"validation: Move GetSpendHeight to BlockManager\" ([05a9e98](https://github.com/bitcoin/bitcoin/commit/05a9e983b421f7728c6cf4c18525abba8a68c82a))\r\n> \r\n> This isn't changing behavior, but I don't think it's correct to lock cs_main after mempool.cs. Other code locks in the opposite order so there could be a deadlock if cs_main lock is actually acquired here and this isn't a redundant recursive lock. Maybe it is possible to clean this up simply by annotating CTxMemPool::check to already require cs_main.\r\n\r\nAnother way to address this could be to move later commit 0af807545a93891df691acb43e07fd465c996ecd up, and pass the height into check() instead of locking cs_main to figure out the height. Though it seems like cs_main probably needs to be held during the whole check() call anyway and maybe it should just be annotated",
    "created_at": "2020-10-23T21:34:02Z",
    "updated_at": "2021-02-02T02:57:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20158#discussion_r511165117",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20158",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511165117"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20158#discussion_r511165117"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20158"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511165117/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 635,
    "side": "RIGHT",
    "in_reply_to_id": 510481852
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511170968",
    "pull_request_review_id": 516018887,
    "id": 511170968,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE3MDk2OA==",
    "diff_hunk": "@@ -146,6 +146,7 @@ class BlockAssembler\n     int64_t nLockTimeCutoff;\n     const CChainParams& chainparams;\n     const CTxMemPool& m_mempool;\n+    CChainState& m_active_chainstate;",
    "path": "src/miner.h",
    "position": null,
    "original_position": 4,
    "commit_id": "6bda9eb9e26012fd75db079555d2f75e742c8c18",
    "original_commit_id": "9d74aa3fd30810197d24ec0768f3e28467abe114",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"miner: Add chainstate member to BlockAssembler\" (9d74aa3fd30810197d24ec0768f3e28467abe114)\r\n\r\nThis appears to be safe because cs_main is held the entire time a BlockAssembler object is constructed is used `cs_main` is held, but because unlike m_mempool, m_active_chainstate will be able to change at runtime with utxo snapshot loading, it might be safer to just pass CChainState as a regular function argument to methods that need it. Another alternative would might be to add BlockAssembler documentation to say that it's meant to be used and thrown away, not kept alive and reused, at least if the active chain might change",
    "created_at": "2020-10-23T21:50:51Z",
    "updated_at": "2021-02-02T02:57:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20158#discussion_r511170968",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20158",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511170968"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20158#discussion_r511170968"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20158"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511170968/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 149,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511173525",
    "pull_request_review_id": 516018887,
    "id": 511173525,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE3MzUyNQ==",
    "diff_hunk": "@@ -374,7 +374,10 @@ static RPCHelpMan generateblock()\n \n     // Add transactions\n     block.vtx.insert(block.vtx.end(), txs.begin(), txs.end());\n-    RegenerateCommitments(block);\n+    {\n+        LOCK(::cs_main);",
    "path": "src/rpc/mining.cpp",
    "position": null,
    "original_position": 6,
    "commit_id": "6bda9eb9e26012fd75db079555d2f75e742c8c18",
    "original_commit_id": "a1acd859bd06ead8fb38fac2d10340a658d7a061",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"miner: Pass in blockman to ::RegenerateCommitments\" (a1acd859bd06ead8fb38fac2d10340a658d7a061)\r\n\r\n\r\nIf this lock is needed now can RegenerateCommitments be annotated to require cs_main? Also, why is this lock needed now if it wasn't needed before?",
    "created_at": "2020-10-23T21:58:45Z",
    "updated_at": "2021-02-02T02:57:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20158#discussion_r511173525",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20158",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511173525"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20158#discussion_r511173525"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20158"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511173525/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 381,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511174948",
    "pull_request_review_id": 516018887,
    "id": 511174948,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE3NDk0OA==",
    "diff_hunk": "@@ -54,16 +54,18 @@ static void ApplyStats(CCoinsStats& stats, std::nullptr_t, const uint256& hash,\n \n //! Calculate statistics about the unspent transaction output set\n template <typename T>\n-static bool GetUTXOStats(CCoinsView* view, CCoinsStats& stats, T hash_obj, const std::function<void()>& interruption_point)\n+static bool GetUTXOStats(CChainState& chainstate, CCoinsStats& stats, T hash_obj, const std::function<void()>& interruption_point)",
    "path": "src/node/coinstats.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "6bda9eb9e26012fd75db079555d2f75e742c8c18",
    "original_commit_id": "a9e77bb0a70a473aab0a52e0d411af8f692ab700",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"node/coinstats: Pass in CChainState to GetUTXOStats\" (a9e77bb0a70a473aab0a52e0d411af8f692ab700)\r\n\r\nFrom the commit description \"ATTENTION\" this may be a work in progress, but a suggestion here might be to just pass in CCoinsView and blockman as separate arguments, instead of passing the whole chain state class.",
    "created_at": "2020-10-23T22:03:12Z",
    "updated_at": "2021-02-02T02:57:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20158#discussion_r511174948",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20158",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511174948"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20158#discussion_r511174948"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20158"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511174948/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 57,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511176771",
    "pull_request_review_id": 516018887,
    "id": 511176771,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE3Njc3MQ==",
    "diff_hunk": "@@ -563,41 +561,6 @@ static bool MarkBlockAsInFlight(CTxMemPool& mempool, NodeId nodeid, const uint25\n     return true;\n }\n \n-/** Check whether the last unknown block a peer advertised is not yet known. */",
    "path": "src/net_processing.cpp",
    "position": 32,
    "original_position": 16,
    "commit_id": "6bda9eb9e26012fd75db079555d2f75e742c8c18",
    "original_commit_id": "053c84ce5a99f0ef87fe23164dc11a0eac725680",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"net_processing: Move some static functions to PeerManager\" (053c84ce5a99f0ef87fe23164dc11a0eac725680)\r\n\r\nMight be nice to split this commit, and move the function bodies in a MOVEONLY commit. But this is maybe less important than it used to be now that git diff displays moved code better than it used to",
    "created_at": "2020-10-23T22:09:43Z",
    "updated_at": "2021-02-02T02:57:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20158#discussion_r511176771",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20158",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511176771"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20158#discussion_r511176771"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20158"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511176771/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 673,
    "original_line": 673,
    "side": "LEFT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513393711",
    "pull_request_review_id": 518594760,
    "id": 513393711,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzM5MzcxMQ==",
    "diff_hunk": "@@ -303,6 +303,9 @@ void Shutdown(NodeContext& node)\n     GetMainSignals().UnregisterBackgroundSignalScheduler();\n     globalVerifyHandle.reset();\n     ECC_Stop();\n+    if (node.chainman) {\n+        UnloadBlockIndex(node.mempool.get(), *node.chainman);\n+    }\n     node.mempool.reset();\n     node.chainman = nullptr;",
    "path": "src/init.cpp",
    "position": null,
    "original_position": 8,
    "commit_id": "6bda9eb9e26012fd75db079555d2f75e742c8c18",
    "original_commit_id": "09daa42b604f08477f66cf4ba1c8ac2905e27c05",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think this should be changed to `reset()` like the other unique pointers.",
    "created_at": "2020-10-28T12:12:32Z",
    "updated_at": "2021-02-02T02:57:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20158#discussion_r513393711",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20158",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513393711"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20158#discussion_r513393711"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20158"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513393711/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 310,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513408032",
    "pull_request_review_id": 518594760,
    "id": 513408032,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzQwODAzMg==",
    "diff_hunk": "@@ -82,12 +82,17 @@ struct BasicTestingSetup {\n     const fs::path m_path_root;\n };\n \n+struct ChainTestingSetup : public BasicTestingSetup {",
    "path": "src/test/util/setup_common.h",
    "position": null,
    "original_position": 4,
    "commit_id": "6bda9eb9e26012fd75db079555d2f75e742c8c18",
    "original_commit_id": "09daa42b604f08477f66cf4ba1c8ac2905e27c05",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This is only used in validation_chainstatemanager_tests.cpp. Rather than adding complexity to the common setup for all tests, can you define this struct inside validation_chainstatemanager_tests.cpp and leave setup_common unchanged?",
    "created_at": "2020-10-28T12:37:52Z",
    "updated_at": "2021-02-02T02:57:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20158#discussion_r513408032",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20158",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513408032"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20158#discussion_r513408032"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20158"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513408032/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 89,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/516869430",
    "pull_request_review_id": 522766205,
    "id": 516869430,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg2OTQzMA==",
    "diff_hunk": "@@ -440,6 +437,9 @@ class BlockManager\n \n     CBlockIndex* LookupBlockIndex(const uint256& hash) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n+    /** Find the last common block between the parameter chain and a locator. */",
    "path": "src/validation.h",
    "position": null,
    "original_position": 14,
    "commit_id": "6bda9eb9e26012fd75db079555d2f75e742c8c18",
    "original_commit_id": "5d587c26aff8ce9a3b7e5348d3bd17cfb2a29677",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "What would be the utility of finding a fork against a chain which isn't the current active one ? May we have a future module interested in learning the common ancestor between a discovered locator and a chain known to not-be the best one ? \r\n\r\nE.g, in `src/net_processing`, at `NetMsgType::GETBLOCKS` reception, this common ancestor is used at a starting point to send the rest of the chain to the forked-off `GETBLOCKS` requester. IMO, I don't see how it can be useful computation for a requester to chain-sync on a chain which is known as not being the best. Even if you don't have live-access to the rest of the p2p network, you still have a notion of a most-work chain.",
    "created_at": "2020-11-03T18:22:19Z",
    "updated_at": "2021-02-02T02:57:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20158#discussion_r516869430",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20158",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/516869430"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20158#discussion_r516869430"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20158"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/516869430/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 422,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/516875108",
    "pull_request_review_id": 522766205,
    "id": 516875108,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg3NTEwOA==",
    "diff_hunk": "@@ -440,6 +440,13 @@ class BlockManager\n     /** Find the last common block between the parameter chain and a locator. */\n     CBlockIndex* FindForkInGlobalIndex(const CChain& chain, const CBlockLocator& locator) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n+    /**\n+     * Return the spend height, which is one more than the inputs.GetBestBlock().",
    "path": "src/validation.h",
    "position": null,
    "original_position": 5,
    "commit_id": "6bda9eb9e26012fd75db079555d2f75e742c8c18",
    "original_commit_id": "4d1456824bee6b961462c7fa1f3a0f33987260d2",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think interpretation of this comment can be confusing.\r\n\r\nIt does say \"one more than the inputs.GetBestBlock()\" where GetBestBlock is defined as \"Get best block at the time this cursor was created\" (L173, in `src/coins.h`). If `GetSpendHeight` means the spend height of a utxo, you may have between \"one to infinite numbers of blocks\" between utxo creation height and its spending height.\r\n\r\nBut still the code of this function return `pindexPrev->nHeight + 1` where `pindexPrev` is the indice of `inputs.GetBestBlock()`. So this function return the earliest valid spending height of a given utxo set ?  ",
    "created_at": "2020-11-03T18:32:55Z",
    "updated_at": "2021-02-02T02:57:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20158#discussion_r516875108",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20158",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/516875108"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20158#discussion_r516875108"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20158"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/516875108/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 429,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/516882150",
    "pull_request_review_id": 522766205,
    "id": 516882150,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg4MjE1MA==",
    "diff_hunk": "@@ -3472,14 +3471,15 @@ std::vector<unsigned char> GenerateCoinbaseCommitment(CBlock& block, const CBloc\n }\n \n //! Returns last CBlockIndex* that is a checkpoint\n-static CBlockIndex* GetLastCheckpoint(const CCheckpointData& data) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+CBlockIndex* BlockManager::GetLastCheckpoint(const CCheckpointData& data)\n {",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 14,
    "commit_id": "6bda9eb9e26012fd75db079555d2f75e742c8c18",
    "original_commit_id": "c6a46621fc849f470e06358c7d21ecf9facc1e09",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Should you introduce a `AssertLockHeld(cs_main)` here to demonstrate the lock tacking is still enforced ? Some moved function (`FindForkInGlobalIndex`) already have such one.\r\n\r\nMore generally, I think you PR description could talk about what the actual lock model of this subsystem and how do you convey to reviewers that old code lock model is equivalent to the new one (or not if you've changed some locks for good reasons).",
    "created_at": "2020-11-03T18:45:56Z",
    "updated_at": "2021-02-02T02:57:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20158#discussion_r516882150",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20158",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/516882150"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20158#discussion_r516882150"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20158"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/516882150/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3379,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/516887573",
    "pull_request_review_id": 522766205,
    "id": 516887573,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg4NzU3Mw==",
    "diff_hunk": "@@ -543,18 +543,18 @@ class CChainState {\n      */\n     mutable std::atomic<bool> m_cached_finished_ibd{false};\n \n-    //! Reference to a BlockManager instance which itself is shared across all\n-    //! CChainState instances. Keeping a local reference allows us to test more\n-    //! easily as opposed to referencing a global.\n-    BlockManager& m_blockman;\n-\n     //! mempool that is kept in sync with the chain\n     CTxMemPool& m_mempool;\n \n     //! Manages the UTXO set, which is a reflection of the contents of `m_chain`.\n     std::unique_ptr<CoinsViews> m_coins_views;\n \n public:\n+    //! Reference to a BlockManager instance which itself is shared across all\n+    //! CChainState instances. Keeping a local reference allows us to test more\n+    //! easily as opposed to referencing a global.\n+    BlockManager& m_blockman GUARDED_BY(::cs_main);",
    "path": "src/validation.h",
    "position": null,
    "original_position": 19,
    "commit_id": "6bda9eb9e26012fd75db079555d2f75e742c8c18",
    "original_commit_id": "959f6268239898947abdcbc788ba772066711a3f",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This comment can be improved by specifying how `m_blockman` is used by `CChainState` thus documenting the rational of its presence.",
    "created_at": "2020-11-03T18:55:51Z",
    "updated_at": "2021-02-02T02:57:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20158#discussion_r516887573",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20158",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/516887573"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20158#discussion_r516887573"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20158"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/516887573/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 536,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/517561522",
    "pull_request_review_id": 523646390,
    "id": 517561522,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzU2MTUyMg==",
    "diff_hunk": "@@ -632,7 +632,7 @@ void CTxMemPool::check(const CCoinsViewCache *pcoins) const\n     uint64_t innerUsage = 0;\n \n     CCoinsViewCache mempoolDuplicate(const_cast<CCoinsViewCache*>(pcoins));\n-    const int64_t spendheight = GetSpendHeight(mempoolDuplicate);\n+    const int64_t spendheight = WITH_LOCK(::cs_main, return g_chainman.m_blockman.GetSpendHeight(mempoolDuplicate));",
    "path": "src/txmempool.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "6bda9eb9e26012fd75db079555d2f75e742c8c18",
    "original_commit_id": "05a9e983b421f7728c6cf4c18525abba8a68c82a",
    "user": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "The reason why I thought it'd be okay to lock `cs_main` after `mempool.cs` was because that's basically what's happening in GetSpendHeight prior to this changeset. As in:\r\n\r\n1. We lock `mempool.cs` at the start of `CTxMemPool::check`\r\n2. We call `GetSpendHeight`, which locks `cs_main`\r\n\r\nAre you saying that this was wrong all along?",
    "created_at": "2020-11-04T18:53:42Z",
    "updated_at": "2021-02-02T02:57:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20158#discussion_r517561522",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20158",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/517561522"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20158#discussion_r517561522"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20158"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/517561522/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 635,
    "side": "RIGHT",
    "in_reply_to_id": 510481852
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/517575732",
    "pull_request_review_id": 523664278,
    "id": 517575732,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzU3NTczMg==",
    "diff_hunk": "@@ -5036,24 +5036,6 @@ CBlockFileInfo* GetBlockFileInfo(size_t n)\n     return &vinfoBlockFile.at(n);\n }\n \n-ThresholdState VersionBitsTipState(const Consensus::Params& params, Consensus::DeploymentPos pos)\n-{\n-    LOCK(cs_main);",
    "path": "src/validation.cpp",
    "position": 831,
    "original_position": 6,
    "commit_id": "6bda9eb9e26012fd75db079555d2f75e742c8c18",
    "original_commit_id": "b60c7e5a5a60fe60a3bc8ba540dc7c8d5c935869",
    "user": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Digging in the git history a bit, it seems that the earliest of this trio -- namely `VersionBitsTipState` -- was introduced in d23f6c6a0d2. My hypothesis is that the `LOCK(cs_main)` was added in order to stop the chain from advancing and make sure that the caller got info on the actual tip. However, it seems like a `AssertLockHeld(cs_main);` annotation would have been much more suitable in that case (and existed in the codebase at d23f6c6a0d2).\r\n\r\nI'm not entirely sure about the original intent here, so perhaps @sipa can enlighten me and make sure I'm not missing something!",
    "created_at": "2020-11-04T19:19:05Z",
    "updated_at": "2021-02-02T02:57:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20158#discussion_r517575732",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20158",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/517575732"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20158#discussion_r517575732"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20158"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/517575732/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 4976,
    "original_line": 4976,
    "side": "LEFT",
    "in_reply_to_id": 510495615
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/517575818",
    "pull_request_review_id": 523664380,
    "id": 517575818,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzU3NTgxOA==",
    "diff_hunk": "@@ -672,7 +667,7 @@ class CChainState {\n     bool ActivateBestChain(\n         BlockValidationState& state,\n         const CChainParams& chainparams,\n-        std::shared_ptr<const CBlock> pblock) LOCKS_EXCLUDED(cs_main);\n+        std::shared_ptr<const CBlock> pblock = std::shared_ptr<const CBlock>()) LOCKS_EXCLUDED(cs_main);",
    "path": "src/validation.h",
    "position": null,
    "original_position": 28,
    "commit_id": "6bda9eb9e26012fd75db079555d2f75e742c8c18",
    "original_commit_id": "7e15a2c88e49ec6719997e2cdd8481ddd4e7f6be",
    "user": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Fixed!",
    "created_at": "2020-11-04T19:19:14Z",
    "updated_at": "2021-02-02T02:57:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20158#discussion_r517575818",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20158",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/517575818"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20158#discussion_r517575818"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20158"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/517575818/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 670,
    "side": "RIGHT",
    "in_reply_to_id": 510485799
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/517576337",
    "pull_request_review_id": 523664978,
    "id": 517576337,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzU3NjMzNw==",
    "diff_hunk": "@@ -170,11 +170,12 @@ namespace {\n     std::set<int> setDirtyFileInfo;\n } // anon namespace\n \n-CBlockIndex* LookupBlockIndex(const uint256& hash)\n+CBlockIndex* BlockManager::LookupBlockIndex(const uint256& hash)",
    "path": "src/validation.cpp",
    "position": 23,
    "original_position": 5,
    "commit_id": "6bda9eb9e26012fd75db079555d2f75e742c8c18",
    "original_commit_id": "8615dbd1250c2dddec2f54bf80e2a1b7013bc871",
    "user": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done!",
    "created_at": "2020-11-04T19:20:06Z",
    "updated_at": "2021-02-02T02:57:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20158#discussion_r517576337",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20158",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/517576337"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20158#discussion_r517576337"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20158"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/517576337/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 155,
    "original_line": 155,
    "side": "RIGHT",
    "in_reply_to_id": 510474839
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/518457319",
    "pull_request_review_id": 524780926,
    "id": 518457319,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODQ1NzMxOQ==",
    "diff_hunk": "@@ -175,13 +175,6 @@ void ThreadScriptCheck(int worker_num);\n  * @returns                    The tx if found, otherwise nullptr\n  */\n CTransactionRef GetTransaction(const CBlockIndex* const block_index, const CTxMemPool* const mempool, const uint256& hash, const Consensus::Params& consensusParams, uint256& hashBlock);\n-/**\n- * Find the best known block, and make it the tip of the block chain\n- *\n- * May not be called with cs_main held. May not be called in a",
    "path": "src/validation.h",
    "position": null,
    "original_position": 7,
    "commit_id": "6bda9eb9e26012fd75db079555d2f75e742c8c18",
    "original_commit_id": "6a4f33ad988502ecbef3d88f035408f851bceb0b",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This comment still holds on `CChainState::ActivateBestChain`. But I wonder if it shouldn't be changed to a \"Must not be called with cs_main held` given we assert that lock isn't held L2878 (`src/validation.cpp`).",
    "created_at": "2020-11-06T00:45:22Z",
    "updated_at": "2021-02-02T02:57:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20158#discussion_r518457319",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20158",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/518457319"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20158#discussion_r518457319"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20158"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/518457319/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 172,
    "side": "LEFT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/518459897",
    "pull_request_review_id": 524780926,
    "id": 518459897,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODQ1OTg5Nw==",
    "diff_hunk": "@@ -3860,18 +3861,18 @@ bool ChainstateManager::ProcessNewBlock(const CChainParams& chainparams, const s\n         bool ret = CheckBlock(*pblock, state, chainparams.GetConsensus());\n         if (ret) {\n             // Store to disk\n-            ret = ::ChainstateActive().AcceptBlock(pblock, state, chainparams, &pindex, fForceProcessing, nullptr, fNewBlock);\n+            ret = ActiveChainstate().AcceptBlock(pblock, state, chainparams, &pindex, fForceProcessing, nullptr, fNewBlock);",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 13,
    "commit_id": "6bda9eb9e26012fd75db079555d2f75e742c8c18",
    "original_commit_id": "f8bb2969378fcea872ec889eaa50676587921328",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think this commit message should say something like \"Use accessible chainstate in ChainstateManager::ProcessNewBlock\"",
    "created_at": "2020-11-06T00:53:59Z",
    "updated_at": "2021-02-02T02:57:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20158#discussion_r518459897",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20158",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/518459897"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20158#discussion_r518459897"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20158"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/518459897/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3765,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/518464000",
    "pull_request_review_id": 524780926,
    "id": 518464000,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODQ2NDAwMA==",
    "diff_hunk": "@@ -218,7 +218,7 @@ void UpdateCoins(const CTransaction& tx, CCoinsViewCache& inputs, int nHeight);\n  *\n  * See consensus/consensus.h for flag definitions.\n  */\n-bool CheckFinalTx(const CTransaction &tx, int flags = -1) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n+bool CheckFinalTx(CBlockIndex* active_chain_tip, const CTransaction &tx, int flags = -1) EXCLUSIVE_LOCKS_REQUIRED(cs_main);",
    "path": "src/validation.h",
    "position": null,
    "original_position": 5,
    "commit_id": "6bda9eb9e26012fd75db079555d2f75e742c8c18",
    "original_commit_id": "5433a716e7f871204474117b0f9bdcd6ad8a16ce",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This commit doesn't compile as `CheckFinalTx` is used L197  (`src/interfaces/chain.cpp`). But fixed in next commit AFAICT.",
    "created_at": "2020-11-06T01:07:53Z",
    "updated_at": "2021-02-02T02:57:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20158#discussion_r518464000",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20158",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/518464000"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20158#discussion_r518464000"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20158"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/518464000/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 204,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/519241551",
    "pull_request_review_id": 525696604,
    "id": 519241551,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTI0MTU1MQ==",
    "diff_hunk": "@@ -1220,7 +1220,7 @@ static void BIP9SoftForkDescPushBack(UniValue& softforks, const std::string &nam\n     if (consensusParams.vDeployments[id].nTimeout <= 1230768000) return;\n \n     UniValue bip9(UniValue::VOBJ);\n-    const ThresholdState thresholdState = VersionBitsTipState(consensusParams, id);\n+    const ThresholdState thresholdState = VersionBitsState(::ChainActive().Tip(), consensusParams, id, versionbitscache);",
    "path": "src/rpc/blockchain.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "6bda9eb9e26012fd75db079555d2f75e742c8c18",
    "original_commit_id": "ff894f9f710118a13b51f2496e1261c795844840",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Maybe add a friendly comment in commit about the fact that `versionbitscache` is currently a global and thus the stays the same. Though we can't assert it ?",
    "created_at": "2020-11-08T01:11:40Z",
    "updated_at": "2021-02-02T02:57:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20158#discussion_r519241551",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20158",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/519241551"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20158#discussion_r519241551"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20158"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/519241551/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1223,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/519241638",
    "pull_request_review_id": 525696604,
    "id": 519241638,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTI0MTYzOA==",
    "diff_hunk": "@@ -5036,24 +5036,6 @@ CBlockFileInfo* GetBlockFileInfo(size_t n)\n     return &vinfoBlockFile.at(n);\n }\n \n-ThresholdState VersionBitsTipState(const Consensus::Params& params, Consensus::DeploymentPos pos)\n-{\n-    LOCK(cs_main);",
    "path": "src/validation.cpp",
    "position": 831,
    "original_position": 6,
    "commit_id": "6bda9eb9e26012fd75db079555d2f75e742c8c18",
    "original_commit_id": "b60c7e5a5a60fe60a3bc8ba540dc7c8d5c935869",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "At least add a comment about the fact the `cs_main` lock is already taken in this code path L1317 (`src/rpc/blockchain.cpp`) ?",
    "created_at": "2020-11-08T01:12:55Z",
    "updated_at": "2021-02-02T02:57:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20158#discussion_r519241638",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20158",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/519241638"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20158#discussion_r519241638"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20158"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/519241638/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 4976,
    "original_line": 4976,
    "side": "LEFT",
    "in_reply_to_id": 510495615
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/519242130",
    "pull_request_review_id": 525696604,
    "id": 519242130,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTI0MjEzMA==",
    "diff_hunk": "@@ -2052,7 +2052,9 @@ void PeerManager::ProcessOrphanTx(std::set<uint256>& orphan_work_set)\n             break;\n         }\n     }\n-    m_mempool.check(&::ChainstateActive().CoinsTip());\n+    CChainState& active_chainstate = m_chainman.ActiveChainstate();\n+    CCoinsViewCache& active_coins_tip = active_chainstate.CoinsTip();\n+    m_mempool.check(&active_coins_tip, active_chainstate.m_blockman.GetSpendHeight(active_coins_tip));",
    "path": "src/net_processing.cpp",
    "position": 411,
    "original_position": 7,
    "commit_id": "6bda9eb9e26012fd75db079555d2f75e742c8c18",
    "original_commit_id": "d7db6ec342a4239e53b52668f1edde7f18c2d09c",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I don't follow what you mean by commit message \"This is the only instance where validation reaches for something outside of it\", you mean the mempool accessing `spendheight` ?",
    "created_at": "2020-11-08T01:19:56Z",
    "updated_at": "2021-02-02T02:57:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20158#discussion_r519242130",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20158",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/519242130"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20158#discussion_r519242130"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20158"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/519242130/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 2269,
    "original_line": 2269,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/519243530",
    "pull_request_review_id": 525696604,
    "id": 519243530,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTI0MzUzMA==",
    "diff_hunk": "@@ -217,7 +217,7 @@ CBlock TestChain100Setup::CreateAndProcessBlock(const std::vector<CMutableTransa\n     for (const CMutableTransaction& tx : txns) {\n         block.vtx.push_back(MakeTransactionRef(tx));\n     }\n-    RegenerateCommitments(block);\n+    RegenerateCommitments(block, WITH_LOCK(::cs_main, return std::ref(g_chainman.m_blockman)));",
    "path": "src/test/util/setup_common.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "6bda9eb9e26012fd75db079555d2f75e742c8c18",
    "original_commit_id": "d227dfedfdfc5f8df05f13ee31a475a5a716c151",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Can we pass directly the result of `LookupBlockIndex(block.hashPrevBlock)` ? Block is already known here. Because AFAIU, the lock isn't held once `RegenerateCommitment` argument are loaded on the stack thus do you have guarantee you're calling the new `blockman.LookupBlockIndex()` with a lock ?\r\n\r\nI think so otherwise `LookupBlockIndex`'s lock annotation would yelled but I can't convince myself of it...",
    "created_at": "2020-11-08T01:39:26Z",
    "updated_at": "2021-02-02T02:57:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20158#discussion_r519243530",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20158",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/519243530"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20158#discussion_r519243530"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20158"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/519243530/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 220,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/519243818",
    "pull_request_review_id": 525696604,
    "id": 519243818,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTI0MzgxOA==",
    "diff_hunk": "@@ -176,6 +178,27 @@ class PeerManager final : public CValidationInterface, public NetEventsInterface\n     TxRequestTracker m_txrequest GUARDED_BY(::cs_main);\n \n     int64_t m_stale_tip_check_time; //!< Next time to check for stale tip\n+\n+    void ProcessBlockAvailability(NodeId nodeid) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n+    void UpdateBlockAvailability(NodeId nodeid, const uint256 &hash) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n+    bool CanDirectFetch(const Consensus::Params &consensusParams) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n+    void FindNextBlocksToDownload(NodeId nodeid, unsigned int count, std::vector<const CBlockIndex*>& vBlocks, NodeId& nodeStaller, const Consensus::Params& consensusParams) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n+    bool BlockRequestAllowed(const CBlockIndex* pindex, const Consensus::Params& consensusParams) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n+    bool AlreadyHaveTx(const GenTxid& gtxid, const CTxMemPool& mempool) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n+    bool AlreadyHaveBlock(const uint256& block_hash) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n+    void ProcessGetBlockData(CNode& pfrom, const CChainParams& chainparams, const CInv& inv, CConnman& connman);\n+    void ProcessGetData(CNode& pfrom, Peer& peer, const CChainParams& chainparams, CConnman& connman, CTxMemPool& mempool, const std::atomic<bool>& interruptMsgProc) EXCLUSIVE_LOCKS_REQUIRED(!cs_main, peer.m_getdata_requests_mutex);\n+    bool PrepareBlockFilterRequest(CNode& peer, const CChainParams& chain_params,\n+                                   BlockFilterType filter_type, uint32_t start_height,\n+                                   const uint256& stop_hash, uint32_t max_height_diff,\n+                                   const CBlockIndex*& stop_index,\n+                                   BlockFilterIndex*& filter_index);\n+    void ProcessGetCFilters(CNode& peer, CDataStream& vRecv, const CChainParams& chain_params,\n+                                   CConnman& connman);\n+    void ProcessGetCFHeaders(CNode& peer, CDataStream& vRecv, const CChainParams& chain_params,\n+                                    CConnman& connman);\n+    void ProcessGetCFCheckPt(CNode& peer, CDataStream& vRecv, const CChainParams& chain_params,",
    "path": "src/net_processing.h",
    "position": null,
    "original_position": 33,
    "commit_id": "6bda9eb9e26012fd75db079555d2f75e742c8c18",
    "original_commit_id": "4cdf32b5caeaf801d74f468d952e16725e334ac1",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Maybe drag comments here ? Can't remember the style policy on this.",
    "created_at": "2020-11-08T01:43:00Z",
    "updated_at": "2021-02-02T02:57:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20158#discussion_r519243818",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20158",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/519243818"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20158#discussion_r519243818"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20158"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/519243818/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 226,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520639845",
    "pull_request_review_id": 527305252,
    "id": 520639845,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDYzOTg0NQ==",
    "diff_hunk": "@@ -632,7 +632,7 @@ void CTxMemPool::check(const CCoinsViewCache *pcoins) const\n     uint64_t innerUsage = 0;\n \n     CCoinsViewCache mempoolDuplicate(const_cast<CCoinsViewCache*>(pcoins));\n-    const int64_t spendheight = GetSpendHeight(mempoolDuplicate);\n+    const int64_t spendheight = WITH_LOCK(::cs_main, return g_chainman.m_blockman.GetSpendHeight(mempoolDuplicate));",
    "path": "src/txmempool.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "6bda9eb9e26012fd75db079555d2f75e742c8c18",
    "original_commit_id": "05a9e983b421f7728c6cf4c18525abba8a68c82a",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "re: https://github.com/bitcoin/bitcoin/pull/20158#discussion_r517561522\r\n\r\nIn commit \"validation: Move GetSpendHeight to BlockManager\" (f2fded4d0d938eec936076a65bfab6932b73fb50)\r\n\r\n> The reason why I thought it'd be okay to lock `cs_main` after `mempool.cs` was because that's basically what's happening in GetSpendHeight prior to this changeset. As in:\r\n> \r\n> 1. We lock `mempool.cs` at the start of `CTxMemPool::check`\r\n> 2. We call `GetSpendHeight`, which locks `cs_main`\r\n> \r\n> Are you saying that this was wrong all along?\r\n\r\nYes that can't be right because if you have different threads that lock two mutexes, all the threads have to lock the mutexes in the same order to prevent deadlocks: \r\n\r\n```sh\r\n$ git grep -n LOCK2.*mempool\r\nsrc/interfaces/chain.cpp:408:        LOCK2(::cs_main, m_node.mempool->cs);\r\nsrc/miner.cpp:119:    LOCK2(cs_main, m_mempool.cs);\r\nsrc/node/coin.cpp:14:    LOCK2(cs_main, node.mempool->cs);\r\nsrc/rest.cpp:553:            LOCK2(cs_main, mempool->cs);\r\nsrc/rpc/rawtransaction.cpp:1610:        LOCK2(cs_main, mempool.cs);\r\n```\r\n\r\nProbably the lock should be a lock assert.",
    "created_at": "2020-11-10T15:14:02Z",
    "updated_at": "2021-02-02T02:57:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20158#discussion_r520639845",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20158",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520639845"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20158#discussion_r520639845"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20158"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520639845/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 635,
    "side": "RIGHT",
    "in_reply_to_id": 510481852
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520648610",
    "pull_request_review_id": 527305252,
    "id": 520648610,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDY0ODYxMA==",
    "diff_hunk": "@@ -440,6 +440,13 @@ class BlockManager\n     /** Find the last common block between the parameter chain and a locator. */\n     CBlockIndex* FindForkInGlobalIndex(const CChain& chain, const CBlockLocator& locator) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n+    /**\n+     * Return the spend height, which is one more than the inputs.GetBestBlock().",
    "path": "src/validation.h",
    "position": null,
    "original_position": 5,
    "commit_id": "6bda9eb9e26012fd75db079555d2f75e742c8c18",
    "original_commit_id": "4d1456824bee6b961462c7fa1f3a0f33987260d2",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "re: https://github.com/bitcoin/bitcoin/pull/20158#discussion_r516875108\r\n\r\n> I think interpretation of this comment can be confusing.\r\n\r\nComment is not new, just moved.\r\n\r\n> It does say \"one more than the inputs.GetBestBlock()\" where GetBestBlock is defined as \"Get best block at the time this cursor was created\" (L173, in `src/coins.h`). If `GetSpendHeight` means the spend height of a utxo, you may have between \"one to infinite numbers of blocks\" between utxo creation height and its spending height.\r\n> \r\n> But still the code of this function return `pindexPrev->nHeight + 1` where `pindexPrev` is the indice of `inputs.GetBestBlock()`. So this function return the earliest valid spending height of a given utxo set ?\r\n\r\nYes this seems all correct. I think there could be a standalone PR if the hope is to clarify something here, but on the surface this seems like a simple two line function and one sentence description of what the function returns. Nothing seems too related to this PR.",
    "created_at": "2020-11-10T15:25:08Z",
    "updated_at": "2021-02-02T02:57:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20158#discussion_r520648610",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20158",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520648610"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20158#discussion_r520648610"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20158"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520648610/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 429,
    "side": "RIGHT",
    "in_reply_to_id": 516875108
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520659343",
    "pull_request_review_id": 527305252,
    "id": 520659343,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDY1OTM0Mw==",
    "diff_hunk": "@@ -5036,24 +5036,6 @@ CBlockFileInfo* GetBlockFileInfo(size_t n)\n     return &vinfoBlockFile.at(n);\n }\n \n-ThresholdState VersionBitsTipState(const Consensus::Params& params, Consensus::DeploymentPos pos)\n-{\n-    LOCK(cs_main);",
    "path": "src/validation.cpp",
    "position": 831,
    "original_position": 6,
    "commit_id": "6bda9eb9e26012fd75db079555d2f75e742c8c18",
    "original_commit_id": "b60c7e5a5a60fe60a3bc8ba540dc7c8d5c935869",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "re: https://github.com/bitcoin/bitcoin/pull/20158#discussion_r517575732\r\n\r\nIn commit \"validation: Remove global ::VersionBitsTip{State,SinceHeight,Statistics}\" (ff894f9f710118a13b51f2496e1261c795844840)\r\n\r\n> Digging in the git history a bit, it seems that the earliest of this trio -- namely VersionBitsTipState -- was introduced in d23f6c6.\r\n\r\nThanks for checking! I see `EXCLUSIVE_LOCKS_REQUIRED(cs_main)` is used where the new code is called so there should not actually be a concern here.\r\n\r\n> At least add a comment about the fact the `cs_main` lock is already taken in this code path L1317 (`src/rpc/blockchain.cpp`) ?\r\n\r\nLine 1317 seems to be referring to `LOCK(cs_main)` getblockchaininfo. Writing a comment referencing a specific lock in a specific calling function seems a little fragile, and hopefully unnecessary with `EXCLUSIVE_LOCKS_REQUIRED(cs_main)` annotation.",
    "created_at": "2020-11-10T15:38:33Z",
    "updated_at": "2021-02-02T02:57:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20158#discussion_r520659343",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20158",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520659343"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20158#discussion_r520659343"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20158"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520659343/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 4976,
    "original_line": 4976,
    "side": "LEFT",
    "in_reply_to_id": 510495615
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520697255",
    "pull_request_review_id": 527381737,
    "id": 520697255,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDY5NzI1NQ==",
    "diff_hunk": "@@ -218,7 +218,7 @@ void UpdateCoins(const CTransaction& tx, CCoinsViewCache& inputs, int nHeight);\n  *\n  * See consensus/consensus.h for flag definitions.\n  */\n-bool CheckFinalTx(const CTransaction &tx, int flags = -1) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n+bool CheckFinalTx(CBlockIndex* active_chain_tip, const CTransaction &tx, int flags = -1) EXCLUSIVE_LOCKS_REQUIRED(cs_main);",
    "path": "src/validation.h",
    "position": null,
    "original_position": 5,
    "commit_id": "6bda9eb9e26012fd75db079555d2f75e742c8c18",
    "original_commit_id": "5433a716e7f871204474117b0f9bdcd6ad8a16ce",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "re: https://github.com/bitcoin/bitcoin/pull/20158#discussion_r518464000\r\n\r\n> This commit doesn't compile as `CheckFinalTx` is used L197 (`src/interfaces/chain.cpp`). But fixed in next commit AFAICT.\r\n\r\nI'm seeing this problem in commit \"validation: Pass in chain tip to ::CheckFinalTx\" (5433a716e7f871204474117b0f9bdcd6ad8a16ce)\r\n",
    "created_at": "2020-11-10T16:27:27Z",
    "updated_at": "2021-02-02T02:57:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20158#discussion_r520697255",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20158",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520697255"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20158#discussion_r520697255"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20158"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520697255/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 204,
    "side": "RIGHT",
    "in_reply_to_id": 518464000
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520704172",
    "pull_request_review_id": 527390849,
    "id": 520704172,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDcwNDE3Mg==",
    "diff_hunk": "@@ -192,7 +192,7 @@ void PruneBlockFilesManual(int nManualPruneHeight);\n /** (try to) add transaction to memory pool\n  * plTxnReplaced will be appended to with all transactions replaced from mempool\n  * @param[out] fee_out optional argument to return tx fee to the caller **/\n-bool AcceptToMemoryPool(CTxMemPool& pool, TxValidationState &state, const CTransactionRef &tx,\n+bool AcceptToMemoryPool(CChainState& active_chainstate, CTxMemPool& pool, TxValidationState &state, const CTransactionRef &tx,",
    "path": "src/validation.h",
    "position": 11,
    "original_position": 5,
    "commit_id": "6bda9eb9e26012fd75db079555d2f75e742c8c18",
    "original_commit_id": "f75c7ca1cb46eb5824c3c5db666143f9a74c0eda",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"validation: Pass in chainstate to ::AcceptToMemoryPool\" (f75c7ca1cb46eb5824c3c5db666143f9a74c0eda)\r\n\r\nThis commit also doesn't compile, looks like there are calls in net_processing to update",
    "created_at": "2020-11-10T16:36:48Z",
    "updated_at": "2021-02-02T02:57:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20158#discussion_r520704172",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20158",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520704172"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20158#discussion_r520704172"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20158"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520704172/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 187,
    "original_line": 187,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/525509078",
    "pull_request_review_id": 532792743,
    "id": 525509078,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTUwOTA3OA==",
    "diff_hunk": "@@ -175,13 +175,6 @@ void ThreadScriptCheck(int worker_num);\n  * @returns                    The tx if found, otherwise nullptr\n  */\n CTransactionRef GetTransaction(const CBlockIndex* const block_index, const CTxMemPool* const mempool, const uint256& hash, const Consensus::Params& consensusParams, uint256& hashBlock);\n-/**\n- * Find the best known block, and make it the tip of the block chain\n- *\n- * May not be called with cs_main held. May not be called in a",
    "path": "src/validation.h",
    "position": null,
    "original_position": 7,
    "commit_id": "6bda9eb9e26012fd75db079555d2f75e742c8c18",
    "original_commit_id": "6a4f33ad988502ecbef3d88f035408f851bceb0b",
    "user": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Don't think we need to add that bit, I think the rationale is more clearly explained by: https://github.com/bitcoin/bitcoin/blob/912512a27c1caa59eb928e10f1022d1b33c2d711/src/validation.cpp#L2867-L2871",
    "created_at": "2020-11-17T20:38:33Z",
    "updated_at": "2021-02-02T02:57:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20158#discussion_r525509078",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20158",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/525509078"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20158#discussion_r525509078"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20158"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/525509078/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 172,
    "side": "LEFT",
    "in_reply_to_id": 518457319
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/525522402",
    "pull_request_review_id": 532809473,
    "id": 525522402,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTUyMjQwMg==",
    "diff_hunk": "@@ -2052,7 +2052,9 @@ void PeerManager::ProcessOrphanTx(std::set<uint256>& orphan_work_set)\n             break;\n         }\n     }\n-    m_mempool.check(&::ChainstateActive().CoinsTip());\n+    CChainState& active_chainstate = m_chainman.ActiveChainstate();\n+    CCoinsViewCache& active_coins_tip = active_chainstate.CoinsTip();\n+    m_mempool.check(&active_coins_tip, active_chainstate.m_blockman.GetSpendHeight(active_coins_tip));",
    "path": "src/net_processing.cpp",
    "position": 411,
    "original_position": 7,
    "commit_id": "6bda9eb9e26012fd75db079555d2f75e742c8c18",
    "original_commit_id": "d7db6ec342a4239e53b52668f1edde7f18c2d09c",
    "user": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I mean that in the codepath I'm touching, `CChainState::ActivateBestChainStep` (which resides in `validation.cpp`) is calling (reaching for) `CTXMemPool::Check` (which resides in `txmempool.cpp`), which means that I need to resolve `CTXMemPool::Check`'s reference of `g_chainman` first.",
    "created_at": "2020-11-17T21:02:31Z",
    "updated_at": "2021-02-02T02:57:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20158#discussion_r525522402",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20158",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/525522402"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20158#discussion_r525522402"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20158"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/525522402/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 2269,
    "original_line": 2269,
    "side": "RIGHT",
    "in_reply_to_id": 519242130
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/525536197",
    "pull_request_review_id": 532827316,
    "id": 525536197,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTUzNjE5Nw==",
    "diff_hunk": "@@ -217,7 +217,7 @@ CBlock TestChain100Setup::CreateAndProcessBlock(const std::vector<CMutableTransa\n     for (const CMutableTransaction& tx : txns) {\n         block.vtx.push_back(MakeTransactionRef(tx));\n     }\n-    RegenerateCommitments(block);\n+    RegenerateCommitments(block, WITH_LOCK(::cs_main, return std::ref(g_chainman.m_blockman)));",
    "path": "src/test/util/setup_common.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "6bda9eb9e26012fd75db079555d2f75e742c8c18",
    "original_commit_id": "d227dfedfdfc5f8df05f13ee31a475a5a716c151",
    "user": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Right, this is a shitty situation where the lock in this diff is only needed because:\r\nhttps://github.com/bitcoin/bitcoin/blob/831675c8dccfa6525ffe751da3cc60709c380953/src/validation.h#L944\r\nand\r\nhttps://github.com/bitcoin/bitcoin/blob/831675c8dccfa6525ffe751da3cc60709c380953/src/validation.h#L840\r\n\r\nThen the lock is released as `RegenerateCommitments`'s assembly function prologue is run, and the same lock is taken again when `LookupBlockIndex` is called inside `RegenerateCommitments`.\r\n\r\nThe original reason why I wanted to just pass in the `blockman` is because I didn't want to impose the constraint of \"arg 2 must be the block index of arg 1\" on `RegenerateCommitments`'s arguments, which seems like something that might be easy to cause a bug if someone were to work with multiple blocks or multiple block indices. Perhaps adequate documentation can prevent this?",
    "created_at": "2020-11-17T21:28:37Z",
    "updated_at": "2021-02-02T02:57:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20158#discussion_r525536197",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20158",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/525536197"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20158#discussion_r525536197"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20158"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/525536197/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 220,
    "side": "RIGHT",
    "in_reply_to_id": 519243530
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/546119285",
    "pull_request_review_id": 555849379,
    "id": 546119285,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjExOTI4NQ==",
    "diff_hunk": "@@ -5036,24 +5036,6 @@ CBlockFileInfo* GetBlockFileInfo(size_t n)\n     return &vinfoBlockFile.at(n);\n }\n \n-ThresholdState VersionBitsTipState(const Consensus::Params& params, Consensus::DeploymentPos pos)\n-{\n-    LOCK(cs_main);",
    "path": "src/validation.cpp",
    "position": 831,
    "original_position": 6,
    "commit_id": "6bda9eb9e26012fd75db079555d2f75e742c8c18",
    "original_commit_id": "b60c7e5a5a60fe60a3bc8ba540dc7c8d5c935869",
    "user": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "@ariard @ryanofsky would it be preferable to add a `EXCLUSIVE_LOCKS_REQUIRED(cs_main)` annotation to `VersionBitsTip{State,SinceHeight,Statistics}` here just in case they get new callers in the future?",
    "created_at": "2020-12-18T22:24:00Z",
    "updated_at": "2021-02-02T02:57:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20158#discussion_r546119285",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20158",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/546119285"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20158#discussion_r546119285"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20158"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/546119285/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 4976,
    "original_line": 4976,
    "side": "LEFT",
    "in_reply_to_id": 510495615
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/547282238",
    "pull_request_review_id": 557084357,
    "id": 547282238,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzI4MjIzOA==",
    "diff_hunk": "@@ -5036,24 +5036,6 @@ CBlockFileInfo* GetBlockFileInfo(size_t n)\n     return &vinfoBlockFile.at(n);\n }\n \n-ThresholdState VersionBitsTipState(const Consensus::Params& params, Consensus::DeploymentPos pos)\n-{\n-    LOCK(cs_main);",
    "path": "src/validation.cpp",
    "position": 831,
    "original_position": 6,
    "commit_id": "6bda9eb9e26012fd75db079555d2f75e742c8c18",
    "original_commit_id": "b60c7e5a5a60fe60a3bc8ba540dc7c8d5c935869",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "re: https://github.com/bitcoin/bitcoin/pull/20158#discussion_r546119285\r\n\r\nIn commit \"validation: Remove global ::VersionBitsTip{State,SinceHeight,Statistics}\" (6ed743d86fb1b5466076eaacf1e8ebc830abde62)\r\n\r\n> @ariard @ryanofsky would it be preferable to add a `EXCLUSIVE_LOCKS_REQUIRED(cs_main)` annotation to `VersionBitsTip{State,SinceHeight,Statistics}` here just in case they get new callers in the future?\r\n\r\nI'd keep what you have now unless there's a reason to think conclusion from digging into history is incorrect.\r\n\r\nIt would be confusing to add a lock required annotation if we don't think a lock is required. In theory you could write `EXCLUSIVE_LOCKS_REQUIRED(cs_main)` with a comment \"There is no known reason to think a lock is required to call this function, but the original code had an explicit recursive lock, so locking is stilll required to be conservative in case there is an unknown reason locking is needed.\" This would probably be overkill though.",
    "created_at": "2020-12-22T13:38:18Z",
    "updated_at": "2021-02-02T02:57:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20158#discussion_r547282238",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20158",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/547282238"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20158#discussion_r547282238"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20158"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/547282238/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 4976,
    "original_line": 4976,
    "side": "LEFT",
    "in_reply_to_id": 510495615
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/567979676",
    "pull_request_review_id": 580559081,
    "id": 567979676,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2Nzk3OTY3Ng==",
    "diff_hunk": "@@ -632,7 +632,7 @@ void CTxMemPool::check(const CCoinsViewCache *pcoins) const\n     uint64_t innerUsage = 0;\n \n     CCoinsViewCache mempoolDuplicate(const_cast<CCoinsViewCache*>(pcoins));\n-    const int64_t spendheight = GetSpendHeight(mempoolDuplicate);\n+    const int64_t spendheight = WITH_LOCK(::cs_main, return g_chainman.m_blockman.GetSpendHeight(mempoolDuplicate));",
    "path": "src/txmempool.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "6bda9eb9e26012fd75db079555d2f75e742c8c18",
    "original_commit_id": "05a9e983b421f7728c6cf4c18525abba8a68c82a",
    "user": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Resolved by: https://github.com/bitcoin/bitcoin/pull/20972",
    "created_at": "2021-02-01T16:52:33Z",
    "updated_at": "2021-02-02T02:57:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20158#discussion_r567979676",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20158",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/567979676"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20158#discussion_r567979676"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20158"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/567979676/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 635,
    "side": "RIGHT",
    "in_reply_to_id": 510481852
  }
]