[
  {
    "sha": "f7d0a86bf687b4ee11870937666806b289ee9a48",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmN2QwYTg2YmY2ODdiNGVlMTE4NzA5Mzc2NjY4MDZiMjg5ZWU5YTQ4",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-09-08T10:20:50Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-09-08T10:20:50Z"
      },
      "message": "netbase: Use .data() instead of .c_str() on binary string\n\n`.c_str()` is only guaranteed to return the data up to the first NUL\ncharacter.",
      "tree": {
        "sha": "933da0a7319b1ceb0fb37f02eee0d99d1238bdea",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/933da0a7319b1ceb0fb37f02eee0d99d1238bdea"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f7d0a86bf687b4ee11870937666806b289ee9a48",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f7d0a86bf687b4ee11870937666806b289ee9a48",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f7d0a86bf687b4ee11870937666806b289ee9a48",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f7d0a86bf687b4ee11870937666806b289ee9a48/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bb4ef1e9dc99bbe4b7f1cd5be741c8a8b5113b8a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bb4ef1e9dc99bbe4b7f1cd5be741c8a8b5113b8a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bb4ef1e9dc99bbe4b7f1cd5be741c8a8b5113b8a"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "954c11f77d5506d2bbe9475b207bb00a7b1ab17e",
        "filename": "src/netbase.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7d0a86bf687b4ee11870937666806b289ee9a48/src/netbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7d0a86bf687b4ee11870937666806b289ee9a48/src/netbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.cpp?ref=f7d0a86bf687b4ee11870937666806b289ee9a48",
        "patch": "@@ -259,7 +259,7 @@ bool static Socks5(string strDest, int port, SOCKET& hSocket)\n     strSocks5 += strDest;\n     strSocks5 += static_cast<char>((port >> 8) & 0xFF);\n     strSocks5 += static_cast<char>((port >> 0) & 0xFF);\n-    ret = send(hSocket, strSocks5.c_str(), strSocks5.size(), MSG_NOSIGNAL);\n+    ret = send(hSocket, strSocks5.data(), strSocks5.size(), MSG_NOSIGNAL);\n     if (ret != (ssize_t)strSocks5.size())\n     {\n         CloseSocket(hSocket);"
      }
    ]
  },
  {
    "sha": "2c2cc5dac1102c1eb86c7dd825a893ab388abba1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyYzJjYzVkYWMxMTAyYzFlYjg2YzdkZDgyNWE4OTNhYjM4OGFiYmEx",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2014-09-08T10:25:52Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-09-09T09:31:17Z"
      },
      "message": "Remove some unnecessary c_strs() in logging and the GUI\n\nIncludes `core: remove unneeded c_str() / Qt: replace c_str() with Qt code`\nby P. Kaufmann.",
      "tree": {
        "sha": "8119c85384c9007547cbf3e15ab8cdc52c2791e1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8119c85384c9007547cbf3e15ab8cdc52c2791e1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2c2cc5dac1102c1eb86c7dd825a893ab388abba1",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJUDsjmAAoJEHSBCwEjRsmmW8EH/0hErLx4mxNDh/1W+N48fjwb\nP86jcGVFwxk2AcVMsFdNEg8Nym3YXNdOFDr+Mj+WkYRAQfk0UqkE4BUHe2tbp4YY\nbybVK4Qzs9SDDny3/EqmLz9JrklWbNLIg6sLE0L7VZZjkuYpn1kXShX3cLaX9Xio\nv9+NLE1YC2s05RfhOYyU8DCMX5mSvpenSPshXN1bkWO+an6SyfhvAFj41yZZl+1e\nlDfIdCNBwXPDUjtUwxZHoEiVWeN0sJ219OaFDf2XuiRRtXQLwov9rxBwWuluj5aV\npbw7JgwJZd7UJ6lH7/tAlLrtulf9hh3CF2yrfBNuUgjMDgV3ktrJO6SqIB4Z8XE=\n=oYC/\n-----END PGP SIGNATURE-----",
        "payload": "tree 8119c85384c9007547cbf3e15ab8cdc52c2791e1\nparent f7d0a86bf687b4ee11870937666806b289ee9a48\nauthor Philip Kaufmann <phil.kaufmann@t-online.de> 1410171952 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1410255077 +0200\n\nRemove some unnecessary c_strs() in logging and the GUI\n\nIncludes `core: remove unneeded c_str() / Qt: replace c_str() with Qt code`\nby P. Kaufmann.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2c2cc5dac1102c1eb86c7dd825a893ab388abba1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2c2cc5dac1102c1eb86c7dd825a893ab388abba1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2c2cc5dac1102c1eb86c7dd825a893ab388abba1/comments",
    "author": null,
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f7d0a86bf687b4ee11870937666806b289ee9a48",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f7d0a86bf687b4ee11870937666806b289ee9a48",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f7d0a86bf687b4ee11870937666806b289ee9a48"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 9,
      "deletions": 9
    },
    "files": [
      {
        "sha": "5fd698f18a2589a051433a7a4e5cb2d4945aab18",
        "filename": "src/addrman.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2c2cc5dac1102c1eb86c7dd825a893ab388abba1/src/addrman.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2c2cc5dac1102c1eb86c7dd825a893ab388abba1/src/addrman.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrman.h?ref=2c2cc5dac1102c1eb86c7dd825a893ab388abba1",
        "patch": "@@ -424,7 +424,7 @@ class CAddrMan\n             Check();\n         }\n         if (fRet)\n-            LogPrint(\"addrman\", \"Added %s from %s: %i tried, %i new\\n\", addr.ToStringIPPort().c_str(), source.ToString(), nTried, nNew);\n+            LogPrint(\"addrman\", \"Added %s from %s: %i tried, %i new\\n\", addr.ToStringIPPort(), source.ToString(), nTried, nNew);\n         return fRet;\n     }\n "
      },
      {
        "sha": "ff4560c2d0060297d8f471cce9e79585418239c5",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2c2cc5dac1102c1eb86c7dd825a893ab388abba1/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2c2cc5dac1102c1eb86c7dd825a893ab388abba1/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=2c2cc5dac1102c1eb86c7dd825a893ab388abba1",
        "patch": "@@ -4392,7 +4392,7 @@ bool SendMessages(CNode* pto, bool fSendTrickle)\n         if (!pto->fDisconnect && state.nBlocksInFlight &&\n             state.nLastBlockReceive < state.nLastBlockProcess - BLOCK_DOWNLOAD_TIMEOUT*1000000 &&\n             state.vBlocksInFlight.front().nTime < state.nLastBlockProcess - 2*BLOCK_DOWNLOAD_TIMEOUT*1000000) {\n-            LogPrintf(\"Peer %s is stalling block download, disconnecting\\n\", state.name.c_str());\n+            LogPrintf(\"Peer %s is stalling block download, disconnecting\\n\", state.name);\n             pto->fDisconnect = true;\n         }\n \n@@ -4502,7 +4502,7 @@ bool CBlockUndo::ReadFromDisk(const CDiskBlockPos &pos, const uint256 &hashBlock\n }\n \n  std::string CBlockFileInfo::ToString() const {\n-     return strprintf(\"CBlockFileInfo(blocks=%u, size=%u, heights=%u...%u, time=%s...%s)\", nBlocks, nSize, nHeightFirst, nHeightLast, DateTimeStrFormat(\"%Y-%m-%d\", nTimeFirst).c_str(), DateTimeStrFormat(\"%Y-%m-%d\", nTimeLast).c_str());\n+     return strprintf(\"CBlockFileInfo(blocks=%u, size=%u, heights=%u...%u, time=%s...%s)\", nBlocks, nSize, nHeightFirst, nHeightLast, DateTimeStrFormat(\"%Y-%m-%d\", nTimeFirst), DateTimeStrFormat(\"%Y-%m-%d\", nTimeLast));\n  }\n \n "
      },
      {
        "sha": "633a3a34e721afb6cc76fe49b64593dd94edb8df",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2c2cc5dac1102c1eb86c7dd825a893ab388abba1/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2c2cc5dac1102c1eb86c7dd825a893ab388abba1/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=2c2cc5dac1102c1eb86c7dd825a893ab388abba1",
        "patch": "@@ -2114,7 +2114,7 @@ void CNode::AskFor(const CInv& inv)\n         nRequestTime = it->second;\n     else\n         nRequestTime = 0;\n-    LogPrint(\"net\", \"askfor %s  %d (%s) peer=%d\\n\", inv.ToString(), nRequestTime, DateTimeStrFormat(\"%H:%M:%S\", nRequestTime/1000000).c_str(), id);\n+    LogPrint(\"net\", \"askfor %s  %d (%s) peer=%d\\n\", inv.ToString(), nRequestTime, DateTimeStrFormat(\"%H:%M:%S\", nRequestTime/1000000), id);\n \n     // Make sure not to reuse time indexes to keep things in the same order\n     int64_t nNow = GetTimeMicros() - 1000000;"
      },
      {
        "sha": "d10463fd8f6418ceb9469f3408b78b71b363a433",
        "filename": "src/qt/coincontroldialog.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2c2cc5dac1102c1eb86c7dd825a893ab388abba1/src/qt/coincontroldialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2c2cc5dac1102c1eb86c7dd825a893ab388abba1/src/qt/coincontroldialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/coincontroldialog.cpp?ref=2c2cc5dac1102c1eb86c7dd825a893ab388abba1",
        "patch": "@@ -705,7 +705,7 @@ void CoinControlDialog::updateView()\n             QString sAddress = \"\";\n             if(ExtractDestination(out.tx->vout[out.i].scriptPubKey, outputAddress))\n             {\n-                sAddress = CBitcoinAddress(outputAddress).ToString().c_str();\n+                sAddress = QString::fromStdString(CBitcoinAddress(outputAddress).ToString());\n \n                 // if listMode or change => show bitcoin address. In tree mode, address is not shown again for direct wallet address outputs\n                 if (!treeMode || (!(sAddress == sWalletAddress)))\n@@ -752,7 +752,7 @@ void CoinControlDialog::updateView()\n \n             // transaction hash\n             uint256 txhash = out.tx->GetHash();\n-            itemOutput->setText(COLUMN_TXHASH, txhash.GetHex().c_str());\n+            itemOutput->setText(COLUMN_TXHASH, QString::fromStdString(txhash.GetHex()));\n \n             // vout index\n             itemOutput->setText(COLUMN_VOUT_INDEX, QString::number(out.i));"
      },
      {
        "sha": "8d2c2e96d88c1b7e7c9ed0f8192b4122195e394e",
        "filename": "src/qt/walletmodel.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2c2cc5dac1102c1eb86c7dd825a893ab388abba1/src/qt/walletmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2c2cc5dac1102c1eb86c7dd825a893ab388abba1/src/qt/walletmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.cpp?ref=2c2cc5dac1102c1eb86c7dd825a893ab388abba1",
        "patch": "@@ -622,7 +622,7 @@ void WalletModel::listCoins(std::map<QString, std::vector<COutput> >& mapCoins)\n         CTxDestination address;\n         if(!out.fSpendable || !ExtractDestination(cout.tx->vout[cout.i].scriptPubKey, address))\n             continue;\n-        mapCoins[CBitcoinAddress(address).ToString().c_str()].push_back(out);\n+        mapCoins[QString::fromStdString(CBitcoinAddress(address).ToString())].push_back(out);\n     }\n }\n "
      },
      {
        "sha": "28339837bfe89291cc6b82aa827152d7a091ae04",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2c2cc5dac1102c1eb86c7dd825a893ab388abba1/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2c2cc5dac1102c1eb86c7dd825a893ab388abba1/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=2c2cc5dac1102c1eb86c7dd825a893ab388abba1",
        "patch": "@@ -606,7 +606,7 @@ void CTxMemPool::PrioritiseTransaction(const uint256 hash, const string strHash,\n         deltas.first += dPriorityDelta;\n         deltas.second += nFeeDelta;\n     }\n-    LogPrintf(\"PrioritiseTransaction: %s priority += %f, fee += %d\\n\", strHash.c_str(), dPriorityDelta, nFeeDelta);\n+    LogPrintf(\"PrioritiseTransaction: %s priority += %f, fee += %d\\n\", strHash, dPriorityDelta, nFeeDelta);\n }\n \n void CTxMemPool::ApplyDeltas(const uint256 hash, double &dPriorityDelta, int64_t &nFeeDelta)"
      },
      {
        "sha": "c018c221b4065782ade319b21809150c287c2590",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2c2cc5dac1102c1eb86c7dd825a893ab388abba1/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2c2cc5dac1102c1eb86c7dd825a893ab388abba1/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=2c2cc5dac1102c1eb86c7dd825a893ab388abba1",
        "patch": "@@ -42,7 +42,7 @@ struct CompareValueOnly\n \n std::string COutput::ToString() const\n {\n-    return strprintf(\"COutput(%s, %d, %d) [%s]\", tx->GetHash().ToString(), i, nDepth, FormatMoney(tx->vout[i].nValue).c_str());\n+    return strprintf(\"COutput(%s, %d, %d) [%s]\", tx->GetHash().ToString(), i, nDepth, FormatMoney(tx->vout[i].nValue));\n }\n \n const CWalletTx* CWallet::GetWalletTx(const uint256& hash) const"
      }
    ]
  }
]