dcousens,2016-11-29T03:36:12Z,"concept ACK,  the diff is small enough I don't see this is as a change that would ruin history,  while still being a large scale [trivial] refactor.",https://github.com/bitcoin/bitcoin/pull/9235#issuecomment-263467360,263467360,
paveljanik,2016-11-29T08:59:28Z,"Concept ACK. It has to be done.\n\nDo not change `univalue` tree here. Why is `using namespace bench` bad here?\n",https://github.com/bitcoin/bitcoin/pull/9235#issuecomment-263513282,263513282,
kallewoof,2016-11-29T09:07:35Z,"@paveljanik I reverted the univalue changes. Using namespaces anywhere is generally a bad idea. The primary reason is explained better than I can [here](http://stackoverflow.com/questions/1452721/why-is-using-namespace-std-considered-bad-practice). The gist of it is captured in this sentence: ""Library Foo 2.0 could introduce a function, `Quux()`, that is an unambiguously better match for some of y",https://github.com/bitcoin/bitcoin/pull/9235#issuecomment-263515010,263515010,
kallewoof,2016-11-29T09:30:56Z,"FWIW, binary check still passes (updated initial post with output for e81f1a0).",https://github.com/bitcoin/bitcoin/pull/9235#issuecomment-263520233,263520233,
jonasschnelli,2016-11-29T10:49:17Z,Concept ACK,https://github.com/bitcoin/bitcoin/pull/9235#issuecomment-263538115,263538115,
laanwj,2016-11-29T11:30:59Z,"""Using namespaces anywhere is generally a bad idea.""\n\nTo disambiguate this: The *use* of namespaces in general is not a bad idea, right? Namespaces can IMO be a useful code-organization principle. But the `using namespace` statement is - that part I agree on, certainly in global scope.\n\nThis changes so many source files though :( Let's make sure that we first merge in the features and fixe",https://github.com/bitcoin/bitcoin/pull/9235#issuecomment-263546994,263546994,
kallewoof,2016-11-29T11:51:13Z,"@laanwj Oh, yes apologies about ambiguous wording. If I were to decide there'd be a lot more namespaces in the code, but one step at a time, right? :)\n\nThere are a lot of files changed, yeah. Luckily, rebasing is extremely trivial and straight-forward, and that goes both ways, so I will gladly rebase this PR once you feel ready for it.\n\nA secondary option is that you pick files that you wa",https://github.com/bitcoin/bitcoin/pull/9235#issuecomment-263550664,263550664,
fanquake,2016-12-02T06:15:24Z,"@kallewoof I've merged this, and can still see lots of usage of `namespace std` i.e in addrman_tests, or dbwrapper_tests. Have they been left on purpose?",https://github.com/bitcoin/bitcoin/pull/9235#issuecomment-264382076,264382076,
kallewoof,2016-12-02T06:23:14Z,"@fanquake I used a ""find all"" for using namespace and fixed everything, but you're right, somehow there's a lot left.\n\nFor starters I'm going to fix the leftovers so this PR is complete. Thanks for pointing that out!",https://github.com/bitcoin/bitcoin/pull/9235#issuecomment-264383051,264383051,
jtimon,2017-01-13T16:02:49Z,"Concept ACK, but this may be too disruptive for a single PR, perhaps you should consider dividing it in a few smaller ones. Maybe start with namespace std?\nPersonally other uses like ```using namespace benchmark``` ins src/bench/bench.cpp don't bother me that much, but I'm not against removing them either.\nAnother advantage of dividing it in smaller ones (apart from each being more reviewable ",https://github.com/bitcoin/bitcoin/pull/9235#issuecomment-272479088,272479088,
kallewoof,2017-01-13T23:03:12Z,"Yeah, I started doing that (2 PRs so far; I plan to make the next one whenever the current one is merged to not swamp the members), but felt I could keep this PR around as a central point of sorts. I am closing this one though as it can be closed and still be referenced.",https://github.com/bitcoin/bitcoin/pull/9235#issuecomment-272571748,272571748,
