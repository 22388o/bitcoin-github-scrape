[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/282787952",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9872#issuecomment-282787952",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9872",
    "id": 282787952,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4Mjc4Nzk1Mg==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-27T17:22:44Z",
    "updated_at": "2017-02-27T17:22:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think it would be better to have the new code in `MultiChainBitcoinTestFramework` replace the existing code in `BitcoinTestFramework` instead of selectively overriding it, given that it seems to be backwards compatible. All you would have to do is add a new optional named argument to `split_network` and `setup_network` and interpret it in the backwards compatible way when it is not specified. I guess I don't see a reason to add code duplication and complexity with a new `MultiChainBitcoinTestFramework` class (even temporarily with the \"ultimate intention\" of merging it later).\r\n\r\nAlso I think I would prefer a more flexible and predictable mechanism for splitting the network than the `chains` argument provides. What about a `splits` argument that takes a list of indices into self.nodes where splits should be inserted into the network? E.g. if you specify `num_nodes=6` and `splits=[1,3]` then node 0 would be standalone, nodes 1-2 would be connected, and nodes 3-5 would be connected. Other advantages of this scheme beyond more flexibility is that I think it would be more explicit and simpler to understand and implement since it wouldn't involve floating point calculations to figure out what the splits look like.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/282787952/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/282827275",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9872#issuecomment-282827275",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9872",
    "id": 282827275,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MjgyNzI3NQ==",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-27T19:35:17Z",
    "updated_at": "2017-02-27T19:35:17Z",
    "author_association": "MEMBER",
    "body": "I tend to think that this is unnecessary (and is just adding complication to the qa codebase).  I find the existing `is_chain_split` stuff already confusing and relatively unused, basically because having to stop/restart nodes in order to change network topology is pretty clunky.\r\n\r\nMoreover I think your listsinceblock.py test in this PR is not actually testing what you want; after you reconnect the network there's no guarantee that node0 will actually download all 3 chains -- it might only download the longest chain.\r\n\r\nI think there are much easier and more robust ways to write the kind of listsinceblock test that you're going for; I've coded one up here using invalidateblock: https://github.com/sdaftuar/bitcoin/commit/0a10605b782c1b7997833e1a3644cb02a6c437da\r\n\r\nMy suggestion would be to just PR something like my proposed commit, and drop this MultiChain-test framework stuff.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/282827275/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/282850673",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9872#issuecomment-282850673",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9872",
    "id": 282850673,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4Mjg1MDY3Mw==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-27T20:56:47Z",
    "updated_at": "2017-02-27T21:08:38Z",
    "author_association": "MEMBER",
    "body": "@ryanofsky It's not backwards compatible with everything, which is why I wanted to temporarily put it aside, instead of fixing everything. I may be overlooking something but if you do the change you suggest, you'll see that fundraw does some funky stuff which I'm not sure how to interpret using the new method. I'll dig though. I like your suggestions about where to split the chain though. Will change to do that for sure.\r\n\r\n@sdaftuar The reason this PR exists is because I was asked to test 3+ chains in #9622 but realized I can't do this easily. The old set up is clunky, as you say, and even without using the 3+ chain functionality, this change would remove the dependency on 4 nodes.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/282850673/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/282917011",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9872#issuecomment-282917011",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9872",
    "id": 282917011,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MjkxNzAxMQ==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-28T01:52:31Z",
    "updated_at": "2017-02-28T01:52:31Z",
    "author_association": "MEMBER",
    "body": "@ryanofsky I ended up finding the cause for why `fundrawtransaction.py` failed, and removed the old framework, leaving only the new one in place. I still intend to change out the splitting part to use your suggested method.\r\n\r\nUnsquashed branch (pardon sloppy commit messages): https://github.com/kallewoof/bitcoin/commits/qa-multi-chain-support-unsquashed",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/282917011/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/282953694",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9872#issuecomment-282953694",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9872",
    "id": 282953694,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4Mjk1MzY5NA==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-28T06:24:10Z",
    "updated_at": "2017-02-28T06:24:10Z",
    "author_association": "MEMBER",
    "body": "@ryanofsky Switched to using splits array.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/282953694/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/283049542",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9872#issuecomment-283049542",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9872",
    "id": 283049542,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MzA0OTU0Mg==",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-28T14:14:23Z",
    "updated_at": "2017-02-28T14:14:23Z",
    "author_association": "MEMBER",
    "body": "> @sdaftuar The reason this PR exists is because I was asked to test 3+ chains in #9622 but realized I can't do this easily. The old set up is clunky, as you say, and even without using the 3+ chain functionality, this change would remove the dependency on 4 nodes.\r\n\r\nDid you look at the patch I proposed for implementing that 3-chain test?  I believe it is correct (unlike the test provided in this PR) and easier to understand.  As I mentioned before, there is no guarantee in your test that node0 will download all 3 chains, which defeats the point of the test!\r\n\r\nIn general I think using network topology to try to simulate the effect of a node receiving multiple chain forks is at best confusing to reason about, as it requires understanding nuances of block download logic in order to determine what blocks each node would actually download.\r\n\r\nAbsent any compelling use cases for this test framework change, I tend to NACK.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/283049542/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/283060427",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9872#issuecomment-283060427",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9872",
    "id": 283060427,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MzA2MDQyNw==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-28T14:54:22Z",
    "updated_at": "2017-02-28T14:54:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes, you guys should look at each others patches if you have not already. @sdaftuar, not sure if you have seen the newest changes to test_framework.py from @kallewoof:\r\n\r\nhttps://github.com/kallewoof/bitcoin/compare/6206252e5073c1cde2e313f2e5a3ca17582c5823...02647ff75b8ac1d46a9c9048176bccaebc90e9bc#diff-6a670fff9d11003cce8baa0518efd7a9\r\n\r\nI think this could be tidied up a little more, but that it makes nice and backwards compatible cleanup to the setup_network / split_network / sync_all code. I think it is good to move in the direction of making these methods actually useful, so more tests can call them instead of overriding and reimplementing them.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/283060427/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/283090376",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9872#issuecomment-283090376",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9872",
    "id": 283090376,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MzA5MDM3Ng==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-28T16:31:40Z",
    "updated_at": "2017-02-28T16:32:33Z",
    "author_association": "MEMBER",
    "body": "@sdaftuar I did look at it and intended to respond but was caught up doing other things. The test does not test whether all 3 chains are downloaded at all. It tests whether the transaction, given a reorg, is in its expected place. Whether the client downloads chains or not is completely irrelevant, and in fact is something listsinceblock should not care about -- think of it as a reiteration from a given position (block hash) to the current state (chain tip). In this case, it should only care about the chain block hash is in, and the main chain, and no other chains.\r\n\r\nIn either case, there is no guarantee that invalidating chains and regenerating new ones like you do in your patch will have the same end results as actually physically splitting the network and then merging, is there?\r\n\r\nI will look at the patch more in detail to see if I'm missing something. ",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/283090376/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/283095479",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9872#issuecomment-283095479",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9872",
    "id": 283095479,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MzA5NTQ3OQ==",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-28T16:47:51Z",
    "updated_at": "2017-02-28T16:48:19Z",
    "author_association": "MEMBER",
    "body": "@kallewoof I'm sorry if I'm misunderstanding the intent here -- but if you don't care whether node0 downloads all 3 chains, then what is the point of `test_reorg3` (ie how is it different from `test_reorg`)?  Aren't you then just testing that bitcoind's listsinceblock behavior is unaffected by information that is unknown to it?  That seems tautological...\r\n\r\n> In either case, there is no guarantee that invalidating chains and regenerating new ones like you do in your patch will have the same end results as actually physically splitting the network and then merging, is there?\r\n\r\nI don't understand the question -- the test I wrote (calling invalidateblock on node1 only, so node0 was not affected) results in 3 chain forks of varying lengths, which I ensure are all downloaded by all nodes.  I don't know what \"physically splitting the network\" has to do with the listsinceblock test; it seemed to me that you were doing that as a workaround for generating competing chain forks, rather than testing anything directly related to network topologies.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/283095479/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/283099790",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9872#issuecomment-283099790",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9872",
    "id": 283099790,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MzA5OTc5MA==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-28T17:01:12Z",
    "updated_at": "2017-02-28T17:03:40Z",
    "author_association": "MEMBER",
    "body": "To be honest, I was kind of making that test as a POC that the multi-chain code works as intended, aside from the actual multi-chain test script itself. I should have obviously given more thought to it..\r\n\r\nA more obvious use case (but still convoluted) is one of the tests I intend to write for #9622 once merged where\r\n```\r\n           aaa0\r\n      /     |     \\\r\na1         b1       c1-tx2'\r\na2-tx1'    b2-tx2   c2\r\na3         b3-tx1   c3\r\n```\r\nThere are two double spends in two separate chains. `tx1'` in `a2` is double spent as `tx1` in `b3`, and `c1-tx2'` in `b2`. A user does `listsinceblock a3` and should not get information about `c1-tx2'` in the results, but it should get information about `a2-tx1'`. A lot of discussion about this in theory went into that thread, and someone eventually suggested we make actual tests for this to ensure it works as intended.\r\n\r\nI agree to a certain extent that network stuff shouldn't affect things, but in reality, there is no strong guarantee that using the invalidate chain functionality will have the same effect as actually splitting the network (at least that's what it looks like, but I'm not entirely familiar with it (invalidateblock) so I need to look into it more closely). There could be bugs or subtle differences that make all the difference in how the nodes communicate and update their wallets or chain states.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/283099790/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/283108693",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9872#issuecomment-283108693",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9872",
    "id": 283108693,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MzEwODY5Mw==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-28T17:32:03Z",
    "updated_at": "2017-02-28T17:32:03Z",
    "author_association": "MEMBER",
    "body": "I'm sorry, but I'm also tending towards a NACK.\r\n\r\nI think the `split_network()` method is too specific and is a trap for test writers that don't know that it stop-starts all the nodes and may have unexpected side-effects. I'd much rather replace it with a more powerful interface which allows test-writers to control network topology when it's required. Adding to split_network() is a step in the wrong direction.\r\n\r\nFor now, I think invalidateblock is probably a better method for creating competing chains.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/283108693/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/283114851",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9872#issuecomment-283114851",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9872",
    "id": 283114851,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MzExNDg1MQ==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-28T17:55:45Z",
    "updated_at": "2017-02-28T17:55:45Z",
    "author_association": "MEMBER",
    "body": "What if it didn't stop/start the nodes? What other unexpected side-effects does it have?\r\n\r\nI'm all for switching, assuming you get the exact same results as if you were splitting for real. What about things like mempool and such? Are these the same with both styles?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/283114851/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/283124658",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9872#issuecomment-283124658",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9872",
    "id": 283124658,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MzEyNDY1OA==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-28T18:36:39Z",
    "updated_at": "2017-02-28T18:36:39Z",
    "author_association": "MEMBER",
    "body": "I'd be a lot happier if it didn't stop-start the nodes and instead called into the disconnectnode() RPC on the nodes you want to disconnect from each other.\r\n\r\nMy other concern is that splitnodes() is too specific, and is unlikely to get used in many other tests. I think a better interface would be for the BitcoinTestFramework class to expose a disconnectnodes() method in the BitcoinTestFramework class, so the test writer can create exactly the topology they need.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/283124658/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/283140941",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9872#issuecomment-283140941",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9872",
    "id": 283140941,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MzE0MDk0MQ==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-28T19:39:36Z",
    "updated_at": "2017-02-28T19:39:36Z",
    "author_association": "MEMBER",
    "body": "@sdaftuar To better explain the purpose of this feature, I have made a branch which incorporates this and #9622 and adds a test for 3 chains (`test_doublespend3`) here: https://github.com/kallewoof/bitcoin/tree/nomerge-multichains (test is in https://github.com/kallewoof/bitcoin/commit/22a5509e5c84219074c3cd10e0c1b0916b97daa9)\r\n\r\n* Am I right in assuming that this can be replicated using `invalidatechain` and give the same results?\r\n* What about mempool trickery? There is a clear difference between fully connected nodes and partitioned nodes in terms of mempool that `invalidatechain` does not handle, right? Won't this affect the results?\r\n* What other effects would switching to `invalidatechain` have that could be detrimental to the reproducibility of real life scenarios with partitions/reorgs/sybil attack scenarios/etc?\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/283140941/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/283148349",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9872#issuecomment-283148349",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9872",
    "id": 283148349,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MzE0ODM0OQ==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-28T20:12:40Z",
    "updated_at": "2017-02-28T20:12:40Z",
    "author_association": "CONTRIBUTOR",
    "body": ">I'd be a lot happier if it didn't stop-start the nodes\r\n\r\nI don't object to your overall point, but just would note that we already have `split_network` function right now that is used in two tests and stop-starts the nodes. Maybe it should be renamed. Maybe it should be made super smart and efficient. But the only thing kallewoof's branch does to `split_network` is give it a new optional argument that it passes along `setup_network`, which doesn't seem like a bad thing.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/283148349/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/293628885",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9872#issuecomment-293628885",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9872",
    "id": 293628885,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MzYyODg4NQ==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-12T16:11:42Z",
    "updated_at": "2017-04-12T16:11:42Z",
    "author_association": "MEMBER",
    "body": "I've just opened #10198 that rewrites `split_network()` and `join_network()`. I think it's a better approach and makes the test framework more generic by not making assumptions about test network topology.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/293628885/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/293756643",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9872#issuecomment-293756643",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9872",
    "id": 293756643,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5Mzc1NjY0Mw==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-13T02:05:54Z",
    "updated_at": "2017-04-13T02:05:54Z",
    "author_association": "MEMBER",
    "body": "@jnewbery I'm confused. #10198 doesn't look like it allows splitting the network into 3+ partitions, which is what this PR is about. Otherwise, it looks like a great improvement!",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/293756643/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/293886971",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9872#issuecomment-293886971",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9872",
    "id": 293886971,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5Mzg4Njk3MQ==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-13T12:54:08Z",
    "updated_at": "2017-04-13T12:54:08Z",
    "author_association": "MEMBER",
    "body": "Right. My main point in #10198 is that the test framework shouldn't have such specific assumptions about the test network topology. If #10198 is merged, then your testcase should just call disconnect_nodes directly, or define helper functions locally.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/293886971/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/294093636",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9872#issuecomment-294093636",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9872",
    "id": 294093636,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDA5MzYzNg==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-14T05:33:57Z",
    "updated_at": "2017-04-14T05:33:57Z",
    "author_association": "MEMBER",
    "body": "@jnewbery I guess you're right that there is not a lot of reason for testing 3+ chains in other tests. Closing.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/294093636/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]