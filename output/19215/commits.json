[
  {
    "sha": "72f6bec1da198764d4648a10a61c485e7ab65e9e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3MmY2YmVjMWRhMTk4NzY0ZDQ2NDhhMTBhNjFjNDg1ZTdhYjY1ZTll",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-06-05T03:43:25Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-06-24T20:31:42Z"
      },
      "message": "rpc: show both UTXOs in decodepsbt",
      "tree": {
        "sha": "89e77a5c2d41ecac8d2ee764434fbfb676a5ff95",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/89e77a5c2d41ecac8d2ee764434fbfb676a5ff95"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/72f6bec1da198764d4648a10a61c485e7ab65e9e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/72f6bec1da198764d4648a10a61c485e7ab65e9e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/72f6bec1da198764d4648a10a61c485e7ab65e9e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/72f6bec1da198764d4648a10a61c485e7ab65e9e/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "67881de0e3b1cef1d0f978582765a8aeeb09c21a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/67881de0e3b1cef1d0f978582765a8aeeb09c21a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/67881de0e3b1cef1d0f978582765a8aeeb09c21a"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 7,
      "deletions": 2
    },
    "files": [
      {
        "sha": "858cb64853dbcee43becce1cd6080d57265d527d",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 2,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/72f6bec1da198764d4648a10a61c485e7ab65e9e/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/72f6bec1da198764d4648a10a61c485e7ab65e9e/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=72f6bec1da198764d4648a10a61c485e7ab65e9e",
        "patch": "@@ -1104,6 +1104,7 @@ UniValue decodepsbt(const JSONRPCRequest& request)\n         const PSBTInput& input = psbtx.inputs[i];\n         UniValue in(UniValue::VOBJ);\n         // UTXOs\n+        bool have_a_utxo = false;\n         if (!input.witness_utxo.IsNull()) {\n             const CTxOut& txout = input.witness_utxo;\n \n@@ -1121,7 +1122,9 @@ UniValue decodepsbt(const JSONRPCRequest& request)\n             ScriptToUniv(txout.scriptPubKey, o, true);\n             out.pushKV(\"scriptPubKey\", o);\n             in.pushKV(\"witness_utxo\", out);\n-        } else if (input.non_witness_utxo) {\n+            have_a_utxo = true;\n+        }\n+        if (input.non_witness_utxo) {\n             UniValue non_wit(UniValue::VOBJ);\n             TxToUniv(*input.non_witness_utxo, uint256(), non_wit, false);\n             in.pushKV(\"non_witness_utxo\", non_wit);\n@@ -1132,7 +1135,9 @@ UniValue decodepsbt(const JSONRPCRequest& request)\n                 // Hack to just not show fee later\n                 have_all_utxos = false;\n             }\n-        } else {\n+            have_a_utxo = true;\n+        }\n+        if (!have_a_utxo) {\n             have_all_utxos = false;\n         }\n "
      }
    ]
  },
  {
    "sha": "5279d8bc07d601fe6a67ad665fbc7591fe73c7de",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1Mjc5ZDhiYzA3ZDYwMWZlNmE2N2FkNjY1ZmJjNzU5MWZlNzNjN2Rl",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-06-05T03:43:39Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-06-24T20:31:42Z"
      },
      "message": "psbt: Allow both non_witness_utxo and witness_utxo",
      "tree": {
        "sha": "0980c73654effe41bd15ecf24a787df16ddff939",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0980c73654effe41bd15ecf24a787df16ddff939"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5279d8bc07d601fe6a67ad665fbc7591fe73c7de",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5279d8bc07d601fe6a67ad665fbc7591fe73c7de",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5279d8bc07d601fe6a67ad665fbc7591fe73c7de",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5279d8bc07d601fe6a67ad665fbc7591fe73c7de/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "72f6bec1da198764d4648a10a61c485e7ab65e9e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/72f6bec1da198764d4648a10a61c485e7ab65e9e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/72f6bec1da198764d4648a10a61c485e7ab65e9e"
      }
    ],
    "stats": {
      "total": 53,
      "additions": 0,
      "deletions": 53
    },
    "files": [
      {
        "sha": "71a3e067088b22934082a7d74f94d670c5306010",
        "filename": "src/psbt.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 29,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5279d8bc07d601fe6a67ad665fbc7591fe73c7de/src/psbt.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5279d8bc07d601fe6a67ad665fbc7591fe73c7de/src/psbt.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/psbt.cpp?ref=5279d8bc07d601fe6a67ad665fbc7591fe73c7de",
        "patch": "@@ -35,14 +35,6 @@ bool PartiallySignedTransaction::Merge(const PartiallySignedTransaction& psbt)\n     return true;\n }\n \n-bool PartiallySignedTransaction::IsSane() const\n-{\n-    for (PSBTInput input : inputs) {\n-        if (!input.IsSane()) return false;\n-    }\n-    return true;\n-}\n-\n bool PartiallySignedTransaction::AddInput(const CTxIn& txin, PSBTInput& psbtin)\n {\n     if (std::find(tx->vin.begin(), tx->vin.end(), txin) != tx->vin.end()) {\n@@ -158,18 +150,6 @@ void PSBTInput::Merge(const PSBTInput& input)\n     if (final_script_witness.IsNull() && !input.final_script_witness.IsNull()) final_script_witness = input.final_script_witness;\n }\n \n-bool PSBTInput::IsSane() const\n-{\n-    // Cannot have both witness and non-witness utxos\n-    if (!witness_utxo.IsNull() && non_witness_utxo) return false;\n-\n-    // If we have a witness_script or a scriptWitness, we must also have a witness utxo\n-    if (!witness_script.empty() && witness_utxo.IsNull()) return false;\n-    if (!final_script_witness.IsNull() && witness_utxo.IsNull()) return false;\n-\n-    return true;\n-}\n-\n void PSBTOutput::FillSignatureData(SignatureData& sigdata) const\n {\n     if (!redeem_script.empty()) {\n@@ -261,11 +241,6 @@ bool SignPSBTInput(const SigningProvider& provider, PartiallySignedTransaction&\n     bool require_witness_sig = false;\n     CTxOut utxo;\n \n-    // Verify input sanity, which checks that at most one of witness or non-witness utxos is provided.\n-    if (!input.IsSane()) {\n-        return false;\n-    }\n-\n     if (input.non_witness_utxo) {\n         // If we're taking our information from a non-witness UTXO, verify that it matches the prevout.\n         COutPoint prevout = tx.vin[index].prevout;\n@@ -356,10 +331,6 @@ TransactionError CombinePSBTs(PartiallySignedTransaction& out, const std::vector\n             return TransactionError::PSBT_MISMATCH;\n         }\n     }\n-    if (!out.IsSane()) {\n-        return TransactionError::INVALID_PSBT;\n-    }\n-\n     return TransactionError::OK;\n }\n "
      },
      {
        "sha": "401889e2fe7806992c56316e9ae9ac944a915ec7",
        "filename": "src/psbt.h",
        "status": "modified",
        "additions": 0,
        "deletions": 7,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5279d8bc07d601fe6a67ad665fbc7591fe73c7de/src/psbt.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5279d8bc07d601fe6a67ad665fbc7591fe73c7de/src/psbt.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/psbt.h?ref=5279d8bc07d601fe6a67ad665fbc7591fe73c7de",
        "patch": "@@ -62,7 +62,6 @@ struct PSBTInput\n     void FillSignatureData(SignatureData& sigdata) const;\n     void FromSignatureData(const SignatureData& sigdata);\n     void Merge(const PSBTInput& input);\n-    bool IsSane() const;\n     PSBTInput() {}\n \n     template <typename Stream>\n@@ -284,7 +283,6 @@ struct PSBTOutput\n     void FillSignatureData(SignatureData& sigdata) const;\n     void FromSignatureData(const SignatureData& sigdata);\n     void Merge(const PSBTOutput& output);\n-    bool IsSane() const;\n     PSBTOutput() {}\n \n     template <typename Stream>\n@@ -401,7 +399,6 @@ struct PartiallySignedTransaction\n     /** Merge psbt into this. The two psbts must have the same underlying CTransaction (i.e. the\n       * same actual Bitcoin transaction.) Returns true if the merge succeeded, false otherwise. */\n     NODISCARD bool Merge(const PartiallySignedTransaction& psbt);\n-    bool IsSane() const;\n     bool AddInput(const CTxIn& txin, PSBTInput& psbtin);\n     bool AddOutput(const CTxOut& txout, const PSBTOutput& psbtout);\n     PartiallySignedTransaction() {}\n@@ -551,10 +548,6 @@ struct PartiallySignedTransaction\n         if (outputs.size() != tx->vout.size()) {\n             throw std::ios_base::failure(\"Outputs provided does not match the number of outputs in transaction.\");\n         }\n-        // Sanity check\n-        if (!IsSane()) {\n-            throw std::ios_base::failure(\"PSBT is not sane.\");\n-        }\n     }\n \n     template <typename Stream>"
      },
      {
        "sha": "908e2b16f20e60a8bb2b278bde928d1bb8c22c59",
        "filename": "src/test/fuzz/psbt.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5279d8bc07d601fe6a67ad665fbc7591fe73c7de/src/test/fuzz/psbt.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5279d8bc07d601fe6a67ad665fbc7591fe73c7de/src/test/fuzz/psbt.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/psbt.cpp?ref=5279d8bc07d601fe6a67ad665fbc7591fe73c7de",
        "patch": "@@ -39,7 +39,6 @@ void test_one_input(const std::vector<uint8_t>& buffer)\n     }\n \n     (void)psbt.IsNull();\n-    (void)psbt.IsSane();\n \n     Optional<CMutableTransaction> tx = psbt.tx;\n     if (tx) {\n@@ -50,7 +49,6 @@ void test_one_input(const std::vector<uint8_t>& buffer)\n     for (const PSBTInput& input : psbt.inputs) {\n         (void)PSBTInputSigned(input);\n         (void)input.IsNull();\n-        (void)input.IsSane();\n     }\n \n     for (const PSBTOutput& output : psbt.outputs) {"
      },
      {
        "sha": "38d7d782d9aa4a7f4a11617fee733e2ab5fa8bc7",
        "filename": "src/wallet/scriptpubkeyman.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 10,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5279d8bc07d601fe6a67ad665fbc7591fe73c7de/src/wallet/scriptpubkeyman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5279d8bc07d601fe6a67ad665fbc7591fe73c7de/src/wallet/scriptpubkeyman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/scriptpubkeyman.cpp?ref=5279d8bc07d601fe6a67ad665fbc7591fe73c7de",
        "patch": "@@ -597,11 +597,6 @@ TransactionError LegacyScriptPubKeyMan::FillPSBT(PartiallySignedTransaction& psb\n             continue;\n         }\n \n-        // Verify input looks sane. This will check that we have at most one uxto, witness or non-witness.\n-        if (!input.IsSane()) {\n-            return TransactionError::INVALID_PSBT;\n-        }\n-\n         // Get the Sighash type\n         if (sign && input.sighash_type > 0 && input.sighash_type != sighash_type) {\n             return TransactionError::SIGHASH_MISMATCH;\n@@ -2086,11 +2081,6 @@ TransactionError DescriptorScriptPubKeyMan::FillPSBT(PartiallySignedTransaction&\n             continue;\n         }\n \n-        // Verify input looks sane. This will check that we have at most one uxto, witness or non-witness.\n-        if (!input.IsSane()) {\n-            return TransactionError::INVALID_PSBT;\n-        }\n-\n         // Get the Sighash type\n         if (sign && input.sighash_type > 0 && input.sighash_type != sighash_type) {\n             return TransactionError::SIGHASH_MISMATCH;"
      },
      {
        "sha": "bc0b9ea58a1ffed1b9c5bae5f1778665cc43eb02",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5279d8bc07d601fe6a67ad665fbc7591fe73c7de/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5279d8bc07d601fe6a67ad665fbc7591fe73c7de/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=5279d8bc07d601fe6a67ad665fbc7591fe73c7de",
        "patch": "@@ -2491,11 +2491,6 @@ TransactionError CWallet::FillPSBT(PartiallySignedTransaction& psbtx, bool& comp\n             continue;\n         }\n \n-        // Verify input looks sane. This will check that we have at most one uxto, witness or non-witness.\n-        if (!input.IsSane()) {\n-            return TransactionError::INVALID_PSBT;\n-        }\n-\n         // If we have no utxo, grab it from the wallet.\n         if (!input.non_witness_utxo && input.witness_utxo.IsNull()) {\n             const uint256& txhash = txin.prevout.hash;"
      }
    ]
  },
  {
    "sha": "46004790588c24174a0bec49b540d158ce163ffd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0NjAwNDc5MDU4OGMyNDE3NGEwYmVjNDliNTQwZDE1OGNlMTYzZmZk",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-06-05T03:43:43Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-06-24T20:32:19Z"
      },
      "message": "psbt: always put a non_witness_utxo and don't remove it\n\nOffline signers will always need a non_witness_utxo so make sure it is\nthere.",
      "tree": {
        "sha": "091d77316fac2460d14b81580c9ce387fd77f2ac",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/091d77316fac2460d14b81580c9ce387fd77f2ac"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/46004790588c24174a0bec49b540d158ce163ffd",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/46004790588c24174a0bec49b540d158ce163ffd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/46004790588c24174a0bec49b540d158ce163ffd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/46004790588c24174a0bec49b540d158ce163ffd/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5279d8bc07d601fe6a67ad665fbc7591fe73c7de",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5279d8bc07d601fe6a67ad665fbc7591fe73c7de",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5279d8bc07d601fe6a67ad665fbc7591fe73c7de"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 11,
      "deletions": 8
    },
    "files": [
      {
        "sha": "3fb743e5db225ee19aa6bbb9889ee41934d08c74",
        "filename": "src/psbt.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/46004790588c24174a0bec49b540d158ce163ffd/src/psbt.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/46004790588c24174a0bec49b540d158ce163ffd/src/psbt.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/psbt.cpp?ref=46004790588c24174a0bec49b540d158ce163ffd",
        "patch": "@@ -136,8 +136,8 @@ void PSBTInput::Merge(const PSBTInput& input)\n {\n     if (!non_witness_utxo && input.non_witness_utxo) non_witness_utxo = input.non_witness_utxo;\n     if (witness_utxo.IsNull() && !input.witness_utxo.IsNull()) {\n+        // TODO: For segwit v1, we will want to clear out the non-witness utxo when setting a witness one. For v0 and non-segwit, this is not safe\n         witness_utxo = input.witness_utxo;\n-        non_witness_utxo = nullptr; // Clear out any non-witness utxo when we set a witness one.\n     }\n \n     partial_sigs.insert(input.partial_sigs.begin(), input.partial_sigs.end());\n@@ -274,10 +274,11 @@ bool SignPSBTInput(const SigningProvider& provider, PartiallySignedTransaction&\n     if (require_witness_sig && !sigdata.witness) return false;\n     input.FromSignatureData(sigdata);\n \n-    // If we have a witness signature, use the smaller witness UTXO.\n+    // If we have a witness signature, put a witness UTXO.\n+    // TODO: For segwit v1, we should remove the non_witness_utxo\n     if (sigdata.witness) {\n         input.witness_utxo = utxo;\n-        input.non_witness_utxo = nullptr;\n+        // input.non_witness_utxo = nullptr;\n     }\n \n     // Fill in the missing info"
      },
      {
        "sha": "0951b76f83088cd05f13a2abb76001622e312b98",
        "filename": "src/psbt.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/46004790588c24174a0bec49b540d158ce163ffd/src/psbt.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/46004790588c24174a0bec49b540d158ce163ffd/src/psbt.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/psbt.h?ref=46004790588c24174a0bec49b540d158ce163ffd",
        "patch": "@@ -67,12 +67,12 @@ struct PSBTInput\n     template <typename Stream>\n     inline void Serialize(Stream& s) const {\n         // Write the utxo\n-        // If there is a non-witness utxo, then don't add the witness one.\n         if (non_witness_utxo) {\n             SerializeToVector(s, PSBT_IN_NON_WITNESS_UTXO);\n             OverrideStream<Stream> os(&s, s.GetType(), s.GetVersion() | SERIALIZE_TRANSACTION_NO_WITNESS);\n             SerializeToVector(os, non_witness_utxo);\n-        } else if (!witness_utxo.IsNull()) {\n+        }\n+        if (!witness_utxo.IsNull()) {\n             SerializeToVector(s, PSBT_IN_WITNESS_UTXO);\n             SerializeToVector(s, witness_utxo);\n         }"
      },
      {
        "sha": "ce7e661b677f1cd2d132808a6f2da379a5be0db4",
        "filename": "src/wallet/test/psbt_wallet_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/46004790588c24174a0bec49b540d158ce163ffd/src/wallet/test/psbt_wallet_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/46004790588c24174a0bec49b540d158ce163ffd/src/wallet/test/psbt_wallet_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/test/psbt_wallet_tests.cpp?ref=46004790588c24174a0bec49b540d158ce163ffd",
        "patch": "@@ -64,7 +64,7 @@ BOOST_AUTO_TEST_CASE(psbt_updater_test)\n     CDataStream ssTx(SER_NETWORK, PROTOCOL_VERSION);\n     ssTx << psbtx;\n     std::string final_hex = HexStr(ssTx);\n-    BOOST_CHECK_EQUAL(final_hex, \"70736274ff01009a020000000258e87a21b56daf0c23be8e7070456c336f7cbaa5c8757924f545887bb2abdd750000000000ffffffff838d0427d0ec650a68aa46bb0b098aea4422c071b2ca78352a077959d07cea1d0100000000ffffffff0270aaf00800000000160014d85c2b71d0060b09c9886aeb815e50991dda124d00e1f5050000000016001400aea9a2e5f0f876a588df5546e8742d1d87008f00000000000100bb0200000001aad73931018bd25f84ae400b68848be09db706eac2ac18298babee71ab656f8b0000000048473044022058f6fc7c6a33e1b31548d481c826c015bd30135aad42cd67790dab66d2ad243b02204a1ced2604c6735b6393e5b41691dd78b00f0c5942fb9f751856faa938157dba01feffffff0280f0fa020000000017a9140fb9463421696b82c833af241c78c17ddbde493487d0f20a270100000017a91429ca74f8a08f81999428185c97b5d852e4063f6187650000000104475221029583bf39ae0a609747ad199addd634fa6108559d6c5cd39b4c2183f1ab96e07f2102dab61ff49a14db6a7d02b0cd1fbb78fc4b18312b5b4e54dae4dba2fbfef536d752ae2206029583bf39ae0a609747ad199addd634fa6108559d6c5cd39b4c2183f1ab96e07f10d90c6a4f000000800000008000000080220602dab61ff49a14db6a7d02b0cd1fbb78fc4b18312b5b4e54dae4dba2fbfef536d710d90c6a4f0000008000000080010000800001012000c2eb0b0000000017a914b7f5faf40e3d40a5a459b1db3535f2b72fa921e88701042200208c2353173743b595dfb4a07b72ba8e42e3797da74e87fe7d9d7497e3b2028903010547522103089dc10c7ac6db54f91329af617333db388cead0c231f723379d1b99030b02dc21023add904f3d6dcf59ddb906b0dee23529b7ffb9ed50e5e86151926860221f0e7352ae2206023add904f3d6dcf59ddb906b0dee23529b7ffb9ed50e5e86151926860221f0e7310d90c6a4f000000800000008003000080220603089dc10c7ac6db54f91329af617333db388cead0c231f723379d1b99030b02dc10d90c6a4f00000080000000800200008000220203a9a4c37f5996d3aa25dbac6b570af0650394492942460b354753ed9eeca5877110d90c6a4f000000800000008004000080002202027f6399757d2eff55a136ad02c684b1838b6556e5f1b6b34282a94b6b5005109610d90c6a4f00000080000000800500008000\");\n+    BOOST_CHECK_EQUAL(final_hex, \"70736274ff01009a020000000258e87a21b56daf0c23be8e7070456c336f7cbaa5c8757924f545887bb2abdd750000000000ffffffff838d0427d0ec650a68aa46bb0b098aea4422c071b2ca78352a077959d07cea1d0100000000ffffffff0270aaf00800000000160014d85c2b71d0060b09c9886aeb815e50991dda124d00e1f5050000000016001400aea9a2e5f0f876a588df5546e8742d1d87008f00000000000100bb0200000001aad73931018bd25f84ae400b68848be09db706eac2ac18298babee71ab656f8b0000000048473044022058f6fc7c6a33e1b31548d481c826c015bd30135aad42cd67790dab66d2ad243b02204a1ced2604c6735b6393e5b41691dd78b00f0c5942fb9f751856faa938157dba01feffffff0280f0fa020000000017a9140fb9463421696b82c833af241c78c17ddbde493487d0f20a270100000017a91429ca74f8a08f81999428185c97b5d852e4063f6187650000000104475221029583bf39ae0a609747ad199addd634fa6108559d6c5cd39b4c2183f1ab96e07f2102dab61ff49a14db6a7d02b0cd1fbb78fc4b18312b5b4e54dae4dba2fbfef536d752ae2206029583bf39ae0a609747ad199addd634fa6108559d6c5cd39b4c2183f1ab96e07f10d90c6a4f000000800000008000000080220602dab61ff49a14db6a7d02b0cd1fbb78fc4b18312b5b4e54dae4dba2fbfef536d710d90c6a4f0000008000000080010000800001008a020000000158e87a21b56daf0c23be8e7070456c336f7cbaa5c8757924f545887bb2abdd7501000000171600145f275f436b09a8cc9a2eb2a2f528485c68a56323feffffff02d8231f1b0100000017a914aed962d6654f9a2b36608eb9d64d2b260db4f1118700c2eb0b0000000017a914b7f5faf40e3d40a5a459b1db3535f2b72fa921e8876500000001012000c2eb0b0000000017a914b7f5faf40e3d40a5a459b1db3535f2b72fa921e88701042200208c2353173743b595dfb4a07b72ba8e42e3797da74e87fe7d9d7497e3b2028903010547522103089dc10c7ac6db54f91329af617333db388cead0c231f723379d1b99030b02dc21023add904f3d6dcf59ddb906b0dee23529b7ffb9ed50e5e86151926860221f0e7352ae2206023add904f3d6dcf59ddb906b0dee23529b7ffb9ed50e5e86151926860221f0e7310d90c6a4f000000800000008003000080220603089dc10c7ac6db54f91329af617333db388cead0c231f723379d1b99030b02dc10d90c6a4f00000080000000800200008000220203a9a4c37f5996d3aa25dbac6b570af0650394492942460b354753ed9eeca5877110d90c6a4f000000800000008004000080002202027f6399757d2eff55a136ad02c684b1838b6556e5f1b6b34282a94b6b5005109610d90c6a4f00000080000000800500008000\");\n \n     // Mutate the transaction so that one of the inputs is invalid\n     psbtx.tx->vin[0].prevout.n = 2;"
      },
      {
        "sha": "37fdbab3a9b4cca5924eafb19047c0a98bb9f89b",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/46004790588c24174a0bec49b540d158ce163ffd/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/46004790588c24174a0bec49b540d158ce163ffd/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=46004790588c24174a0bec49b540d158ce163ffd",
        "patch": "@@ -2492,7 +2492,7 @@ TransactionError CWallet::FillPSBT(PartiallySignedTransaction& psbtx, bool& comp\n         }\n \n         // If we have no utxo, grab it from the wallet.\n-        if (!input.non_witness_utxo && input.witness_utxo.IsNull()) {\n+        if (!input.non_witness_utxo) {\n             const uint256& txhash = txin.prevout.hash;\n             const auto it = mapWallet.find(txhash);\n             if (it != mapWallet.end()) {"
      },
      {
        "sha": "7703c4ecb127d76db07bcfe77caec7081ac05fc2",
        "filename": "test/functional/rpc_psbt.py",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/46004790588c24174a0bec49b540d158ce163ffd/test/functional/rpc_psbt.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/46004790588c24174a0bec49b540d158ce163ffd/test/functional/rpc_psbt.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_psbt.py?ref=46004790588c24174a0bec49b540d158ce163ffd",
        "patch": "@@ -38,6 +38,7 @@ def set_test_params(self):\n     def skip_test_if_missing_module(self):\n         self.skip_if_no_wallet()\n \n+    # TODO: Re-enable this test with segwit v1\n     def test_utxo_conversion(self):\n         mining_node = self.nodes[2]\n         offline_node = self.nodes[0]\n@@ -352,7 +353,8 @@ def run_test(self):\n         for i, signer in enumerate(signers):\n             self.nodes[2].unloadwallet(\"wallet{}\".format(i))\n \n-        self.test_utxo_conversion()\n+        # TODO: Re-enable this for segwit v1\n+        # self.test_utxo_conversion()\n \n         # Test that psbts with p2pkh outputs are created properly\n         p2pkh = self.nodes[0].getnewaddress(address_type='legacy')"
      }
    ]
  },
  {
    "sha": "84d295e51341a126a6c3cbeea7a8caa04c7b5bc3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4NGQyOTVlNTEzNDFhMTI2YTZjM2NiZWVhN2E4Y2FhMDRjN2I1YmMz",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-06-08T23:27:16Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-06-24T20:32:20Z"
      },
      "message": "tests: Check that segwit inputs in psbt have both UTXO types",
      "tree": {
        "sha": "d0e9ed953f8845e91f45e6554809f96ea4980143",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d0e9ed953f8845e91f45e6554809f96ea4980143"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/84d295e51341a126a6c3cbeea7a8caa04c7b5bc3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/84d295e51341a126a6c3cbeea7a8caa04c7b5bc3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/84d295e51341a126a6c3cbeea7a8caa04c7b5bc3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/84d295e51341a126a6c3cbeea7a8caa04c7b5bc3/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "46004790588c24174a0bec49b540d158ce163ffd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/46004790588c24174a0bec49b540d158ce163ffd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/46004790588c24174a0bec49b540d158ce163ffd"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 4,
      "deletions": 0
    },
    "files": [
      {
        "sha": "e5e62fd646b573024fe97f10324cbb5fdad7a8bb",
        "filename": "test/functional/rpc_psbt.py",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/84d295e51341a126a6c3cbeea7a8caa04c7b5bc3/test/functional/rpc_psbt.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/84d295e51341a126a6c3cbeea7a8caa04c7b5bc3/test/functional/rpc_psbt.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_psbt.py?ref=84d295e51341a126a6c3cbeea7a8caa04c7b5bc3",
        "patch": "@@ -157,6 +157,10 @@ def run_test(self):\n         # spend single key from node 1\n         rawtx = self.nodes[1].walletcreatefundedpsbt([{\"txid\":txid,\"vout\":p2wpkh_pos},{\"txid\":txid,\"vout\":p2sh_p2wpkh_pos},{\"txid\":txid,\"vout\":p2pkh_pos}], {self.nodes[1].getnewaddress():29.99})['psbt']\n         walletprocesspsbt_out = self.nodes[1].walletprocesspsbt(rawtx)\n+        # Make sure it has both types of UTXOs\n+        decoded = self.nodes[1].decodepsbt(walletprocesspsbt_out['psbt'])\n+        assert 'non_witness_utxo' in decoded['inputs'][0]\n+        assert 'witness_utxo' in decoded['inputs'][0]\n         assert_equal(walletprocesspsbt_out['complete'], True)\n         self.nodes[1].sendrawtransaction(self.nodes[1].finalizepsbt(walletprocesspsbt_out['psbt'])['hex'])\n "
      }
    ]
  }
]