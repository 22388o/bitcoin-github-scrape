[
  {
    "sha": "b37d61ee43421f687b8a89bcbe65969977e3f002",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMzdkNjFlZTQzNDIxZjY4N2I4YTg5YmNiZTY1OTY5OTc3ZTNmMDAy",
    "commit": {
      "author": {
        "name": "Cozz Lovan",
        "email": "cozzlovan@yahoo.com",
        "date": "2015-05-12T07:35:45Z"
      },
      "committer": {
        "name": "Cozz Lovan",
        "email": "cozzlovan@yahoo.com",
        "date": "2015-05-12T21:21:28Z"
      },
      "message": "Autoprune: Do relay blocks if possible",
      "tree": {
        "sha": "d7ba1ba18879ac1668bed696a86c99e5102dbcce",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d7ba1ba18879ac1668bed696a86c99e5102dbcce"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b37d61ee43421f687b8a89bcbe65969977e3f002",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b37d61ee43421f687b8a89bcbe65969977e3f002",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b37d61ee43421f687b8a89bcbe65969977e3f002",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b37d61ee43421f687b8a89bcbe65969977e3f002/comments",
    "author": {
      "login": "cozz",
      "id": 2814559,
      "node_id": "MDQ6VXNlcjI4MTQ1NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2814559?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cozz",
      "html_url": "https://github.com/cozz",
      "followers_url": "https://api.github.com/users/cozz/followers",
      "following_url": "https://api.github.com/users/cozz/following{/other_user}",
      "gists_url": "https://api.github.com/users/cozz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cozz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cozz/subscriptions",
      "organizations_url": "https://api.github.com/users/cozz/orgs",
      "repos_url": "https://api.github.com/users/cozz/repos",
      "events_url": "https://api.github.com/users/cozz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cozz/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "cozz",
      "id": 2814559,
      "node_id": "MDQ6VXNlcjI4MTQ1NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2814559?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cozz",
      "html_url": "https://github.com/cozz",
      "followers_url": "https://api.github.com/users/cozz/followers",
      "following_url": "https://api.github.com/users/cozz/following{/other_user}",
      "gists_url": "https://api.github.com/users/cozz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cozz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cozz/subscriptions",
      "organizations_url": "https://api.github.com/users/cozz/orgs",
      "repos_url": "https://api.github.com/users/cozz/repos",
      "events_url": "https://api.github.com/users/cozz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cozz/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "484821870b5a92f64d3075cfd30757ea8bd29739",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/484821870b5a92f64d3075cfd30757ea8bd29739",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/484821870b5a92f64d3075cfd30757ea8bd29739"
      }
    ],
    "stats": {
      "total": 22,
      "additions": 15,
      "deletions": 7
    },
    "files": [
      {
        "sha": "ea7e01cb42198d2bcc8f45905a3d7609f5a31151",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 7,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b37d61ee43421f687b8a89bcbe65969977e3f002/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b37d61ee43421f687b8a89bcbe65969977e3f002/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=b37d61ee43421f687b8a89bcbe65969977e3f002",
        "patch": "@@ -2281,13 +2281,21 @@ bool ActivateBestChain(CValidationState &state, CBlock *pblock) {\n             int nBlockEstimate = 0;\n             if (fCheckpointsEnabled)\n                 nBlockEstimate = Checkpoints::GetTotalBlocksEstimate(chainParams.Checkpoints());\n-            // Don't relay blocks if pruning -- could cause a peer to try to download, resulting\n-            // in a stalled download if the block file is pruned before the request.\n-            if (nLocalServices & NODE_NETWORK) {\n-                LOCK(cs_vNodes);\n-                BOOST_FOREACH(CNode* pnode, vNodes)\n-                    if (chainActive.Height() > (pnode->nStartingHeight != -1 ? pnode->nStartingHeight - 2000 : nBlockEstimate))\n-                        pnode->PushInventory(CInv(MSG_BLOCK, hashNewTip));\n+\n+            {\n+                LOCK2(cs_main, cs_vNodes);\n+                BOOST_FOREACH(CNode* pnode, vNodes) {\n+                    if (chainActive.Height() > (pnode->nStartingHeight != -1 ? pnode->nStartingHeight - 2000 : nBlockEstimate)) {\n+                        if (!fPruneMode) // not pruning, always relay\n+                            pnode->PushInventory(CInv(MSG_BLOCK, hashNewTip));\n+                        else { // pruning, still relay if peer has at least up to our pruning threshold\n+                            int nLastBlockWeMustKeep = chainActive.Height() - MIN_BLOCKS_TO_KEEP + 6; // add 6 to ensure we dont prune while the request is in flight\n+                            CNodeState *state = State(pnode->GetId());\n+                            if (pnode->nStartingHeight > nLastBlockWeMustKeep || (state && state->pindexBestKnownBlock && state->pindexBestKnownBlock->nHeight > nLastBlockWeMustKeep))\n+                                pnode->PushInventory(CInv(MSG_BLOCK, hashNewTip));\n+                        }\n+                    }\n+                }\n             }\n             // Notify external listeners about the new tip.\n             uiInterface.NotifyBlockTip(hashNewTip);"
      }
    ]
  }
]