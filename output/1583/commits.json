[
  {
    "sha": "2a72d4591f5adf25fcb4d0433b390ba6c37f57a9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyYTcyZDQ1OTFmNWFkZjI1ZmNiNGQwNDMzYjM5MGJhNmMzN2Y1N2E5",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2012-07-11T18:52:41Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2014-06-26T11:49:46Z"
      },
      "message": "JSON-RPC method: prioritisetransaction <txid> <priority delta> <priority tx fee>\n\nAccepts the transaction into mined blocks at a higher (or lower) priority",
      "tree": {
        "sha": "b46f8cc4f0529ca6d1faebdb5690ba3353044fc1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b46f8cc4f0529ca6d1faebdb5690ba3353044fc1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2a72d4591f5adf25fcb4d0433b390ba6c37f57a9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2a72d4591f5adf25fcb4d0433b390ba6c37f57a9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2a72d4591f5adf25fcb4d0433b390ba6c37f57a9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2a72d4591f5adf25fcb4d0433b390ba6c37f57a9/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "343feecf562a39e7d898ece2fd745fcb9d4c90e9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/343feecf562a39e7d898ece2fd745fcb9d4c90e9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/343feecf562a39e7d898ece2fd745fcb9d4c90e9"
      }
    ],
    "stats": {
      "total": 77,
      "additions": 74,
      "deletions": 3
    },
    "files": [
      {
        "sha": "e06c519ee28cc12448633b7ac5a146f75d6c897c",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2a72d4591f5adf25fcb4d0433b390ba6c37f57a9/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2a72d4591f5adf25fcb4d0433b390ba6c37f57a9/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=2a72d4591f5adf25fcb4d0433b390ba6c37f57a9",
        "patch": "@@ -789,6 +789,16 @@ bool CheckTransaction(const CTransaction& tx, CValidationState &state)\n \n int64_t GetMinFee(const CTransaction& tx, unsigned int nBytes, bool fAllowFree, enum GetMinFee_mode mode)\n {\n+    {\n+        LOCK(mempool.cs);\n+        uint256 hash = tx.GetHash();\n+        double dPriorityDelta = 0;\n+        int64_t nFeeDelta = 0;\n+        mempool.ApplyDeltas(hash, dPriorityDelta, nFeeDelta);\n+        if (dPriorityDelta > 0 || nFeeDelta > 0)\n+            return 0;\n+    }\n+\n     // Base fee is either minTxFee or minRelayTxFee\n     CFeeRate baseFeeRate = (mode == GMF_RELAY) ? tx.minRelayTxFee : tx.minTxFee;\n "
      },
      {
        "sha": "69e53756e0877474efe415585a85c626e6a1607e",
        "filename": "src/miner.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 3,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2a72d4591f5adf25fcb4d0433b390ba6c37f57a9/src/miner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2a72d4591f5adf25fcb4d0433b390ba6c37f57a9/src/miner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.cpp?ref=2a72d4591f5adf25fcb4d0433b390ba6c37f57a9",
        "patch": "@@ -3,6 +3,8 @@\n // Distributed under the MIT/X11 software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#include <inttypes.h>\n+\n #include \"miner.h\"\n \n #include \"core.h\"\n@@ -186,6 +188,9 @@ CBlockTemplate* CreateNewBlock(const CScript& scriptPubKeyIn)\n             unsigned int nTxSize = ::GetSerializeSize(tx, SER_NETWORK, PROTOCOL_VERSION);\n             dPriority = tx.ComputePriority(dPriority, nTxSize);\n \n+            uint256 hash = tx.GetHash();\n+            mempool.ApplyDeltas(hash, dPriority, nTotalIn);\n+\n             CFeeRate feeRate(nTotalIn-tx.GetValueOut(), nTxSize);\n \n             if (porphan)\n@@ -227,10 +232,14 @@ CBlockTemplate* CreateNewBlock(const CScript& scriptPubKeyIn)\n                 continue;\n \n             // Skip free transactions if we're past the minimum block size:\n-            if (fSortedByFee && (feeRate < CTransaction::minRelayTxFee) && (nBlockSize + nTxSize >= nBlockMinSize))\n+            const uint256& hash = tx.GetHash();\n+            double dPriorityDelta = 0;\n+            int64_t nFeeDelta = 0;\n+            mempool.ApplyDeltas(hash, dPriorityDelta, nFeeDelta);\n+            if (fSortedByFee && (dPriorityDelta <= 0) && (nFeeDelta <= 0) && (feeRate < CTransaction::minRelayTxFee) && (nBlockSize + nTxSize >= nBlockMinSize))\n                 continue;\n \n-            // Prioritize by fee once past the priority size or we run out of high-priority\n+            // Prioritise by fee once past the priority size or we run out of high-priority\n             // transactions:\n             if (!fSortedByFee &&\n                 ((nBlockSize + nTxSize >= nBlockPrioritySize) || !AllowFree(dPriority)))\n@@ -257,7 +266,6 @@ CBlockTemplate* CreateNewBlock(const CScript& scriptPubKeyIn)\n                 continue;\n \n             CTxUndo txundo;\n-            const uint256& hash = tx.GetHash();\n             UpdateCoins(tx, state, view, txundo, pindexPrev->nHeight+1);\n \n             // Added"
      },
      {
        "sha": "30881b9b1a5773afe2dc72f8a38726852e56fb27",
        "filename": "src/rpcclient.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2a72d4591f5adf25fcb4d0433b390ba6c37f57a9/src/rpcclient.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2a72d4591f5adf25fcb4d0433b390ba6c37f57a9/src/rpcclient.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcclient.cpp?ref=2a72d4591f5adf25fcb4d0433b390ba6c37f57a9",
        "patch": "@@ -72,6 +72,8 @@ Array RPCConvertValues(const std::string &strMethod, const std::vector<std::stri\n     if (strMethod == \"listtransactions\"       && n > 2) ConvertTo<int64_t>(params[2]);\n     if (strMethod == \"listaccounts\"           && n > 0) ConvertTo<int64_t>(params[0]);\n     if (strMethod == \"walletpassphrase\"       && n > 1) ConvertTo<int64_t>(params[1]);\n+    if (strMethod == \"prioritisetransaction\"  && n > 1) ConvertTo<double>(params[1]);\n+    if (strMethod == \"prioritisetransaction\"  && n > 2) ConvertTo<int64_t>(params[2]);\n     if (strMethod == \"getblocktemplate\"       && n > 0) ConvertTo<Object>(params[0]);\n     if (strMethod == \"listsinceblock\"         && n > 1) ConvertTo<int64_t>(params[1]);\n     if (strMethod == \"sendmany\"               && n > 1) ConvertTo<Object>(params[1]);"
      },
      {
        "sha": "98caf704eeccb1edfb1ba16ef2c5e8961d949a15",
        "filename": "src/rpcmining.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2a72d4591f5adf25fcb4d0433b390ba6c37f57a9/src/rpcmining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2a72d4591f5adf25fcb4d0433b390ba6c37f57a9/src/rpcmining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcmining.cpp?ref=2a72d4591f5adf25fcb4d0433b390ba6c37f57a9",
        "patch": "@@ -247,6 +247,20 @@ Value getmininginfo(const Array& params, bool fHelp)\n }\n \n \n+Value prioritisetransaction(const Array& params, bool fHelp)\n+{\n+    if (fHelp || params.size() != 3)\n+        throw runtime_error(\n+            \"prioritisetransaction <txid> <priority delta> <fee delta>\\n\"\n+            \"Accepts the transaction into mined blocks at a higher (or lower) priority\");\n+\n+    uint256 hash;\n+    hash.SetHex(params[0].get_str());\n+    mempool.PrioritiseTransaction(hash, params[0].get_str(), params[1].get_real(), params[2].get_int64());\n+    return true;\n+}\n+\n+\n Value getblocktemplate(const Array& params, bool fHelp)\n {\n     if (fHelp || params.size() > 1)"
      },
      {
        "sha": "6552de8c49ccd218d47da22547e27d46630ec72a",
        "filename": "src/rpcserver.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2a72d4591f5adf25fcb4d0433b390ba6c37f57a9/src/rpcserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2a72d4591f5adf25fcb4d0433b390ba6c37f57a9/src/rpcserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.cpp?ref=2a72d4591f5adf25fcb4d0433b390ba6c37f57a9",
        "patch": "@@ -254,6 +254,7 @@ static const CRPCCommand vRPCCommands[] =\n     { \"getblocktemplate\",       &getblocktemplate,       true,      false,      false },\n     { \"getmininginfo\",          &getmininginfo,          true,      false,      false },\n     { \"getnetworkhashps\",       &getnetworkhashps,       true,      false,      false },\n+    { \"prioritisetransaction\",  &prioritisetransaction,  true,      false,      false },\n     { \"submitblock\",            &submitblock,            false,     true,       false },\n \n     /* Raw transactions */"
      },
      {
        "sha": "1966a65b50b54a650475aaab9cdf45d16d33bbf5",
        "filename": "src/rpcserver.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2a72d4591f5adf25fcb4d0433b390ba6c37f57a9/src/rpcserver.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2a72d4591f5adf25fcb4d0433b390ba6c37f57a9/src/rpcserver.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.h?ref=2a72d4591f5adf25fcb4d0433b390ba6c37f57a9",
        "patch": "@@ -130,6 +130,7 @@ extern json_spirit::Value setgenerate(const json_spirit::Array& params, bool fHe\n extern json_spirit::Value getnetworkhashps(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value gethashespersec(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value getmininginfo(const json_spirit::Array& params, bool fHelp);\n+extern json_spirit::Value prioritisetransaction(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value getblocktemplate(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value submitblock(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value estimatefee(const json_spirit::Array& params, bool fHelp);"
      },
      {
        "sha": "52f82ef040cca42be20061c7947148a52e01117d",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 29,
        "deletions": 0,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2a72d4591f5adf25fcb4d0433b390ba6c37f57a9/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2a72d4591f5adf25fcb4d0433b390ba6c37f57a9/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=2a72d4591f5adf25fcb4d0433b390ba6c37f57a9",
        "patch": "@@ -447,6 +447,7 @@ void CTxMemPool::removeForBlock(const std::vector<CTransaction>& vtx, unsigned i\n         std::list<CTransaction> dummy;\n         remove(tx, dummy, false);\n         removeConflicts(tx, conflicts);\n+        ClearPrioritisation(tx.GetHash());\n     }\n }\n \n@@ -564,6 +565,34 @@ CTxMemPool::ReadFeeEstimates(CAutoFile& filein)\n     return true;\n }\n \n+void CTxMemPool::PrioritiseTransaction(const uint256 hash, const string strHash, double dPriorityDelta, int64_t nFeeDelta)\n+{\n+    {\n+        LOCK(cs);\n+        std::pair<double, int64_t> &deltas = mapDeltas[hash];\n+        deltas.first += dPriorityDelta;\n+        deltas.second += nFeeDelta;\n+    }\n+    LogPrintf(\"PrioritiseTransaction: %s priority += %f, fee += %d\\n\", strHash.c_str(), dPriorityDelta, nFeeDelta);\n+}\n+\n+void CTxMemPool::ApplyDeltas(const uint256 hash, double &dPriorityDelta, int64_t &nFeeDelta)\n+{\n+    LOCK(cs);\n+    std::map<uint256, std::pair<double, int64_t> >::iterator pos = mapDeltas.find(hash);\n+    if (pos == mapDeltas.end())\n+        return;\n+    const std::pair<double, int64_t> &deltas = pos->second;\n+    dPriorityDelta += deltas.first;\n+    nFeeDelta += deltas.second;\n+}\n+\n+void CTxMemPool::ClearPrioritisation(const uint256 hash)\n+{\n+    LOCK(cs);\n+    mapDeltas.erase(hash);\n+}\n+\n \n CCoinsViewMemPool::CCoinsViewMemPool(CCoinsView &baseIn, CTxMemPool &mempoolIn) : CCoinsViewBacked(baseIn), mempool(mempoolIn) { }\n "
      },
      {
        "sha": "f7dbb126a0ee738dff64222f898c1b8dece26b88",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2a72d4591f5adf25fcb4d0433b390ba6c37f57a9/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2a72d4591f5adf25fcb4d0433b390ba6c37f57a9/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=2a72d4591f5adf25fcb4d0433b390ba6c37f57a9",
        "patch": "@@ -71,6 +71,7 @@ class CTxMemPool\n     mutable CCriticalSection cs;\n     std::map<uint256, CTxMemPoolEntry> mapTx;\n     std::map<COutPoint, CInPoint> mapNextTx;\n+    std::map<uint256, std::pair<double, int64_t> > mapDeltas;\n \n     CTxMemPool();\n     ~CTxMemPool();\n@@ -95,6 +96,11 @@ class CTxMemPool\n     unsigned int GetTransactionsUpdated() const;\n     void AddTransactionsUpdated(unsigned int n);\n \n+    /** Affect CreateNewBlock prioritisation of transactions */\n+    void PrioritiseTransaction(const uint256 hash, const std::string strHash, double dPriorityDelta, int64_t nFeeDelta);\n+    void ApplyDeltas(const uint256 hash, double &dPriorityDelta, int64_t &nFeeDelta);\n+    void ClearPrioritisation(const uint256 hash);\n+\n     unsigned long size()\n     {\n         LOCK(cs);"
      }
    ]
  }
]