[
  {
    "sha": "0a5ea32ce605984094c5552877cb99bc81654f2c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowYTVlYTMyY2U2MDU5ODQwOTRjNTU1Mjg3N2NiOTliYzgxNjU0ZjJj",
    "commit": {
      "author": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2020-01-15T06:37:16Z"
      },
      "committer": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2020-06-19T19:14:06Z"
      },
      "message": "Prefer explicit uint160 conversion",
      "tree": {
        "sha": "cb53980bce46fe9253638771e786be287122ceb4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cb53980bce46fe9253638771e786be287122ceb4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0a5ea32ce605984094c5552877cb99bc81654f2c",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQEcBAABCgAGBQJe7Q5/AAoJEG7l83hfeLNFgbgH/3/cTiXbjAasldbdiBCB54iK\nGn7VnUf1snDUADG+MUj693JeF/9oHP6RsbXOdMAFaaCAFDiWiVMcvkZA/9LTnNJV\n6P2xuID0K6ErsuE+jDS+E/e71kFUDsY+jCzgpSkf8XSn5vDxRiFzaH3EU96w5QhW\n1Czf4BpW9OrHQZGN6StVmsL30jfwhMI59vdNaOSDf23aT8kKTAYZWkGuW1b3gG4L\nGw9Dh0UgVB1pNarLd9PrxtZyHtyrVJmFfo5ktfotJPWIV60tZiJx82EuFjTIGzlZ\nCD7806zhER3Hyo5woHI0883I7bKHQYRQJUfRXIcM50VavAipmoL7DS9TjkfOnHU=\n=0K3U\n-----END PGP SIGNATURE-----",
        "payload": "tree cb53980bce46fe9253638771e786be287122ceb4\nparent f3d776b59380ad31e8b3a2948364c7690eebe05d\nauthor Ben Woosley <ben.woosley@gmail.com> 1579070236 -0800\ncommitter Ben Woosley <ben.woosley@gmail.com> 1592594046 -0700\n\nPrefer explicit uint160 conversion\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0a5ea32ce605984094c5552877cb99bc81654f2c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0a5ea32ce605984094c5552877cb99bc81654f2c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0a5ea32ce605984094c5552877cb99bc81654f2c/comments",
    "author": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f3d776b59380ad31e8b3a2948364c7690eebe05d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f3d776b59380ad31e8b3a2948364c7690eebe05d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f3d776b59380ad31e8b3a2948364c7690eebe05d"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 2,
      "deletions": 6
    },
    "files": [
      {
        "sha": "814f8bddfedf62010d4af2f4a2506164f5bd26a1",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0a5ea32ce605984094c5552877cb99bc81654f2c/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0a5ea32ce605984094c5552877cb99bc81654f2c/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=0a5ea32ce605984094c5552877cb99bc81654f2c",
        "patch": "@@ -595,7 +595,7 @@ static UniValue decodescript(const JSONRPCRequest& request)\n             if (which_type == TX_PUBKEY) {\n                 segwitScr = GetScriptForDestination(WitnessV0KeyHash(Hash160(solutions_data[0].begin(), solutions_data[0].end())));\n             } else if (which_type == TX_PUBKEYHASH) {\n-                segwitScr = GetScriptForDestination(WitnessV0KeyHash(solutions_data[0]));\n+                segwitScr = GetScriptForDestination(WitnessV0KeyHash(uint160{solutions_data[0]}));\n             } else {\n                 // Scripts that are not fit for P2WPKH are encoded as P2WSH.\n                 // Newer segwit program versions should be considered when then become available."
      },
      {
        "sha": "b6ee6117d9181d095b635060684fa612544bcfc7",
        "filename": "src/script/standard.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0a5ea32ce605984094c5552877cb99bc81654f2c/src/script/standard.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0a5ea32ce605984094c5552877cb99bc81654f2c/src/script/standard.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/standard.cpp?ref=0a5ea32ce605984094c5552877cb99bc81654f2c",
        "patch": "@@ -307,7 +307,7 @@ CScript GetScriptForWitness(const CScript& redeemscript)\n     if (typ == TX_PUBKEY) {\n         return GetScriptForDestination(WitnessV0KeyHash(Hash160(vSolutions[0].begin(), vSolutions[0].end())));\n     } else if (typ == TX_PUBKEYHASH) {\n-        return GetScriptForDestination(WitnessV0KeyHash(vSolutions[0]));\n+        return GetScriptForDestination(WitnessV0KeyHash(uint160{vSolutions[0]}));\n     }\n     return GetScriptForDestination(WitnessV0ScriptHash(redeemscript));\n }"
      },
      {
        "sha": "c1a9fc90bd5949674e0a61fc1422b17b1c7d4454",
        "filename": "src/script/standard.h",
        "status": "modified",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0a5ea32ce605984094c5552877cb99bc81654f2c/src/script/standard.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0a5ea32ce605984094c5552877cb99bc81654f2c/src/script/standard.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/standard.h?ref=0a5ea32ce605984094c5552877cb99bc81654f2c",
        "patch": "@@ -78,7 +78,6 @@ struct PKHash : public uint160\n     PKHash() : uint160() {}\n     explicit PKHash(const uint160& hash) : uint160(hash) {}\n     explicit PKHash(const CPubKey& pubkey);\n-    using uint160::uint160;\n };\n \n struct WitnessV0KeyHash;\n@@ -91,22 +90,19 @@ struct ScriptHash : public uint160\n     explicit ScriptHash(const PKHash& hash) = delete;\n     explicit ScriptHash(const uint160& hash) : uint160(hash) {}\n     explicit ScriptHash(const CScript& script);\n-    using uint160::uint160;\n };\n \n struct WitnessV0ScriptHash : public uint256\n {\n     WitnessV0ScriptHash() : uint256() {}\n     explicit WitnessV0ScriptHash(const uint256& hash) : uint256(hash) {}\n     explicit WitnessV0ScriptHash(const CScript& script);\n-    using uint256::uint256;\n };\n \n struct WitnessV0KeyHash : public uint160\n {\n     WitnessV0KeyHash() : uint160() {}\n     explicit WitnessV0KeyHash(const uint160& hash) : uint160(hash) {}\n-    using uint160::uint160;\n };\n \n //! CTxDestination subtype to encode any future Witness version"
      }
    ]
  },
  {
    "sha": "3fcc46812334074d2c77a6233e8a961cd0785872",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozZmNjNDY4MTIzMzQwNzRkMmM3N2E2MjMzZThhOTYxY2QwNzg1ODcy",
    "commit": {
      "author": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2020-01-15T06:48:34Z"
      },
      "committer": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2020-06-19T19:14:07Z"
      },
      "message": "Prefer explicit CScriptID construction",
      "tree": {
        "sha": "028e1d7cc8812c24221d30fbc68aa96545fee708",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/028e1d7cc8812c24221d30fbc68aa96545fee708"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3fcc46812334074d2c77a6233e8a961cd0785872",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQEcBAABCgAGBQJe7Q5/AAoJEG7l83hfeLNFHY4H/2vX75AHws+4LUFl1rJsCenF\nQbfAz+qtd3KdBaPPPjVtLvTRah75qu6RkX8b9WzbzAOXMFmPe9GrY/QGuAE31dk5\nMu2feA8Uv7opt/yVs/BfKok+nzKoxKmSRiTAyOdcNWtJ77MN3aihY53C8ge5Frjv\nlkdY0YBAwWTfvzqXn/IVa9kqwCQMh0IlUyYxbE1KPvvLlwk+u+ECDqkW+KSUAJoH\npIxs/YLn/CBl3mUVC7Tn7GCuRY7KgSfoGbLoGav4/IGN5U6YW3PvLCshHfZ8H773\nCeX8a4oDdoE8Jh9rVvmPtipKO16Xd9+6zHAGB2ZB+TB0DDYzfjmBsYXj7VcIWVE=\n=nqbq\n-----END PGP SIGNATURE-----",
        "payload": "tree 028e1d7cc8812c24221d30fbc68aa96545fee708\nparent 0a5ea32ce605984094c5552877cb99bc81654f2c\nauthor Ben Woosley <ben.woosley@gmail.com> 1579070914 -0800\ncommitter Ben Woosley <ben.woosley@gmail.com> 1592594047 -0700\n\nPrefer explicit CScriptID construction\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3fcc46812334074d2c77a6233e8a961cd0785872",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3fcc46812334074d2c77a6233e8a961cd0785872",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3fcc46812334074d2c77a6233e8a961cd0785872/comments",
    "author": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0a5ea32ce605984094c5552877cb99bc81654f2c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0a5ea32ce605984094c5552877cb99bc81654f2c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0a5ea32ce605984094c5552877cb99bc81654f2c"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "43988c4fd7d9d1d0e2a2fcf1a0924957d59686a5",
        "filename": "src/script/sign.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3fcc46812334074d2c77a6233e8a961cd0785872/src/script/sign.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3fcc46812334074d2c77a6233e8a961cd0785872/src/script/sign.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/sign.cpp?ref=3fcc46812334074d2c77a6233e8a961cd0785872",
        "patch": "@@ -131,7 +131,7 @@ static bool SignStep(const SigningProvider& provider, const BaseSignatureCreator\n     }\n     case TX_SCRIPTHASH:\n         h160 = uint160(vSolutions[0]);\n-        if (GetCScript(provider, sigdata, h160, scriptRet)) {\n+        if (GetCScript(provider, sigdata, CScriptID{h160}, scriptRet)) {\n             ret.push_back(std::vector<unsigned char>(scriptRet.begin(), scriptRet.end()));\n             return true;\n         }\n@@ -165,7 +165,7 @@ static bool SignStep(const SigningProvider& provider, const BaseSignatureCreator\n \n     case TX_WITNESS_V0_SCRIPTHASH:\n         CRIPEMD160().Write(&vSolutions[0][0], vSolutions[0].size()).Finalize(h160.begin());\n-        if (GetCScript(provider, sigdata, h160, scriptRet)) {\n+        if (GetCScript(provider, sigdata, CScriptID{h160}, scriptRet)) {\n             ret.push_back(std::vector<unsigned char>(scriptRet.begin(), scriptRet.end()));\n             return true;\n         }\n@@ -458,7 +458,7 @@ bool IsSegWitOutput(const SigningProvider& provider, const CScript& script)\n     if (whichtype == TX_SCRIPTHASH) {\n         auto h160 = uint160(solutions[0]);\n         CScript subscript;\n-        if (provider.GetCScript(h160, subscript)) {\n+        if (provider.GetCScript(CScriptID{h160}, subscript)) {\n             whichtype = Solver(subscript, solutions);\n             if (whichtype == TX_WITNESS_V0_SCRIPTHASH || whichtype == TX_WITNESS_V0_KEYHASH || whichtype == TX_WITNESS_UNKNOWN) return true;\n         }"
      },
      {
        "sha": "7c74d05be56ba0617168c7a83bab3e3074ccbc60",
        "filename": "src/script/standard.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3fcc46812334074d2c77a6233e8a961cd0785872/src/script/standard.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3fcc46812334074d2c77a6233e8a961cd0785872/src/script/standard.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/standard.h?ref=3fcc46812334074d2c77a6233e8a961cd0785872",
        "patch": "@@ -25,7 +25,7 @@ class CScriptID : public uint160\n public:\n     CScriptID() : uint160() {}\n     explicit CScriptID(const CScript& in);\n-    CScriptID(const uint160& in) : uint160(in) {}\n+    explicit CScriptID(const uint160& in) : uint160(in) {}\n };\n \n /**"
      }
    ]
  },
  {
    "sha": "a9e451f144480d7b170e49087df162989d31cd20",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphOWU0NTFmMTQ0NDgwZDdiMTcwZTQ5MDg3ZGYxNjI5ODlkMzFjZDIw",
    "commit": {
      "author": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2020-01-15T07:46:14Z"
      },
      "committer": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2020-06-19T19:14:07Z"
      },
      "message": "Convert CPubKey to WitnessV0KeyHash directly\n\nThe round-tripping through PKHash has no effect, and is\npotentially misleading as such.",
      "tree": {
        "sha": "a50496593555392d0c996311f65026dc6582a737",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a50496593555392d0c996311f65026dc6582a737"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a9e451f144480d7b170e49087df162989d31cd20",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQEcBAABCgAGBQJe7Q5/AAoJEG7l83hfeLNFo64IALfUJCjajRrHBH6gP/kkU2gR\nfw3SIUZHVTJ0Vr8xa/sjxhW0+xzy+Xf5oM5oyXID7R35Xu46SqAkYGB+K7ci4P9p\nRve4hn9Esz2zegxG1eF4qzg9sDzjpW0YCyBYqRlq5VwLeg+sEbos2PiLb/EqkWc1\neGAgP3TOawzo1awwMJJvJk5E2ORI6hKJqJA0nFFaFuta6u1bogb+xxvvnr7Zjgdz\nnACYyEQMq+9INCZQYj0Yzk7AwGUJO+/OSvAXwzhkJ3RzKihLlDQ7e3JiS9Ft/jS3\nOzyZwV+HI4TzHztkB99GDE7mQ3Ap4VwQQZeWtgKLEC6hZu/dwRdxGsRg7GtpJg0=\n=+ObP\n-----END PGP SIGNATURE-----",
        "payload": "tree a50496593555392d0c996311f65026dc6582a737\nparent 3fcc46812334074d2c77a6233e8a961cd0785872\nauthor Ben Woosley <ben.woosley@gmail.com> 1579074374 -0800\ncommitter Ben Woosley <ben.woosley@gmail.com> 1592594047 -0700\n\nConvert CPubKey to WitnessV0KeyHash directly\n\nThe round-tripping through PKHash has no effect, and is\npotentially misleading as such."
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a9e451f144480d7b170e49087df162989d31cd20",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a9e451f144480d7b170e49087df162989d31cd20",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a9e451f144480d7b170e49087df162989d31cd20/comments",
    "author": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3fcc46812334074d2c77a6233e8a961cd0785872",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3fcc46812334074d2c77a6233e8a961cd0785872",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3fcc46812334074d2c77a6233e8a961cd0785872"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 6,
      "deletions": 4
    },
    "files": [
      {
        "sha": "871474d56e77436da0c47cb8f94b8332c5edadef",
        "filename": "src/outputtype.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a9e451f144480d7b170e49087df162989d31cd20/src/outputtype.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a9e451f144480d7b170e49087df162989d31cd20/src/outputtype.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/outputtype.cpp?ref=a9e451f144480d7b170e49087df162989d31cd20",
        "patch": "@@ -53,7 +53,7 @@ CTxDestination GetDestinationForKey(const CPubKey& key, OutputType type)\n     case OutputType::P2SH_SEGWIT:\n     case OutputType::BECH32: {\n         if (!key.IsCompressed()) return PKHash(key);\n-        CTxDestination witdest = WitnessV0KeyHash(PKHash(key));\n+        CTxDestination witdest = WitnessV0KeyHash(key);\n         CScript witprog = GetScriptForDestination(witdest);\n         if (type == OutputType::P2SH_SEGWIT) {\n             return ScriptHash(witprog);"
      },
      {
        "sha": "3e0a9e2304d50ed2d6e43e84e9853a5c8e892b09",
        "filename": "src/script/standard.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a9e451f144480d7b170e49087df162989d31cd20/src/script/standard.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a9e451f144480d7b170e49087df162989d31cd20/src/script/standard.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/standard.cpp?ref=a9e451f144480d7b170e49087df162989d31cd20",
        "patch": "@@ -21,6 +21,7 @@ CScriptID::CScriptID(const CScript& in) : uint160(Hash160(in.begin(), in.end()))\n ScriptHash::ScriptHash(const CScript& in) : uint160(Hash160(in.begin(), in.end())) {}\n \n PKHash::PKHash(const CPubKey& pubkey) : uint160(pubkey.GetID()) {}\n+WitnessV0KeyHash::WitnessV0KeyHash(const CPubKey& pubkey) : uint160(pubkey.GetID()) {}\n \n WitnessV0ScriptHash::WitnessV0ScriptHash(const CScript& in)\n {"
      },
      {
        "sha": "382d8d002b5c268625e82d0774ebd6830bad6598",
        "filename": "src/script/standard.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a9e451f144480d7b170e49087df162989d31cd20/src/script/standard.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a9e451f144480d7b170e49087df162989d31cd20/src/script/standard.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/standard.h?ref=a9e451f144480d7b170e49087df162989d31cd20",
        "patch": "@@ -103,6 +103,7 @@ struct WitnessV0KeyHash : public uint160\n {\n     WitnessV0KeyHash() : uint160() {}\n     explicit WitnessV0KeyHash(const uint160& hash) : uint160(hash) {}\n+    explicit WitnessV0KeyHash(const CPubKey& pubkey);\n };\n \n //! CTxDestination subtype to encode any future Witness version"
      },
      {
        "sha": "e416f16044627e85a8f75bb9aac33667d29f013e",
        "filename": "src/wallet/test/ismine_tests.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a9e451f144480d7b170e49087df162989d31cd20/src/wallet/test/ismine_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a9e451f144480d7b170e49087df162989d31cd20/src/wallet/test/ismine_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/test/ismine_tests.cpp?ref=a9e451f144480d7b170e49087df162989d31cd20",
        "patch": "@@ -167,7 +167,7 @@ BOOST_AUTO_TEST_CASE(ismine_standard)\n         keystore.SetupLegacyScriptPubKeyMan();\n         LOCK(keystore.GetLegacyScriptPubKeyMan()->cs_KeyStore);\n \n-        CScript witnessscript = GetScriptForDestination(WitnessV0KeyHash(PKHash(pubkeys[0])));\n+        CScript witnessscript = GetScriptForDestination(WitnessV0KeyHash(pubkeys[0]));\n         scriptPubKey = GetScriptForDestination(WitnessV0ScriptHash(witnessscript));\n \n         BOOST_CHECK(keystore.GetLegacyScriptPubKeyMan()->AddCScript(witnessscript));\n@@ -202,7 +202,7 @@ BOOST_AUTO_TEST_CASE(ismine_standard)\n         LOCK(keystore.GetLegacyScriptPubKeyMan()->cs_KeyStore);\n         BOOST_CHECK(keystore.GetLegacyScriptPubKeyMan()->AddKey(keys[0]));\n \n-        scriptPubKey = GetScriptForDestination(WitnessV0KeyHash(PKHash(pubkeys[0])));\n+        scriptPubKey = GetScriptForDestination(WitnessV0KeyHash(pubkeys[0]));\n \n         // Keystore implicitly has key and P2SH redeemScript\n         BOOST_CHECK(keystore.GetLegacyScriptPubKeyMan()->AddCScript(scriptPubKey));\n@@ -217,7 +217,7 @@ BOOST_AUTO_TEST_CASE(ismine_standard)\n         LOCK(keystore.GetLegacyScriptPubKeyMan()->cs_KeyStore);\n         BOOST_CHECK(keystore.GetLegacyScriptPubKeyMan()->AddKey(uncompressedKey));\n \n-        scriptPubKey = GetScriptForDestination(WitnessV0KeyHash(PKHash(uncompressedPubkey)));\n+        scriptPubKey = GetScriptForDestination(WitnessV0KeyHash(uncompressedPubkey));\n \n         // Keystore has key, but no P2SH redeemScript\n         result = keystore.GetLegacyScriptPubKeyMan()->IsMine(scriptPubKey);"
      }
    ]
  },
  {
    "sha": "2c54217f913967703b404747133be67cf2f4feac",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyYzU0MjE3ZjkxMzk2NzcwM2I0MDQ3NDcxMzNiZTY3Y2YyZjRmZWFj",
    "commit": {
      "author": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2020-01-15T21:40:14Z"
      },
      "committer": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2020-06-19T19:14:07Z"
      },
      "message": "Use explicit conversion from PKHash -> CKeyID\n\nThese types are equivalent, in data etc, so they need only their\ndata cast across.\n\nNote a function is used rather than a casting\noperator as CKeyID is defined at a lower level than script/standard",
      "tree": {
        "sha": "5e0e846cd14a58414943f5f8a91ff055bbd0ee63",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5e0e846cd14a58414943f5f8a91ff055bbd0ee63"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2c54217f913967703b404747133be67cf2f4feac",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQEcBAABCgAGBQJe7Q5/AAoJEG7l83hfeLNFSssH/0HJth1Mze8ArvUzPzmrG5u9\nbw04bzIsDNMh3CA5+J38ATWL1tkAL7rZx8Gspg1rXFKY1NKVSg8M1jAYXYtL2KPY\nbOGrBV0Q4Vl/YMurjAGeefTKnViRvuPR0qMCVRAxluvE7pT1OwY49Y+LX61Bkj1R\n9bG/jZ2LhB7CTmnI56PrlUrdxR6D4FfXXcw6JcOTr6/88Wnnk7HqJZkvdZwaF+CI\nmKzwPVKItZl8sknhsQMxdhU9WcuF28QBV3wUwU7wXQhZrRnwMl0ABxCSq3bqvkJe\nh+jfcIk68e2q7dyAQ2/M0vppco/EAABAqruaWhVpwerEalURQOl6/tsUinbLgyY=\n=DxJw\n-----END PGP SIGNATURE-----",
        "payload": "tree 5e0e846cd14a58414943f5f8a91ff055bbd0ee63\nparent a9e451f144480d7b170e49087df162989d31cd20\nauthor Ben Woosley <ben.woosley@gmail.com> 1579124414 -0800\ncommitter Ben Woosley <ben.woosley@gmail.com> 1592594047 -0700\n\nUse explicit conversion from PKHash -> CKeyID\n\nThese types are equivalent, in data etc, so they need only their\ndata cast across.\n\nNote a function is used rather than a casting\noperator as CKeyID is defined at a lower level than script/standard\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2c54217f913967703b404747133be67cf2f4feac",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2c54217f913967703b404747133be67cf2f4feac",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2c54217f913967703b404747133be67cf2f4feac/comments",
    "author": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a9e451f144480d7b170e49087df162989d31cd20",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a9e451f144480d7b170e49087df162989d31cd20",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a9e451f144480d7b170e49087df162989d31cd20"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 11,
      "deletions": 7
    },
    "files": [
      {
        "sha": "7c72858501c59357ae980108b11fbd25aa4c139e",
        "filename": "src/qt/coincontroldialog.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2c54217f913967703b404747133be67cf2f4feac/src/qt/coincontroldialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2c54217f913967703b404747133be67cf2f4feac/src/qt/coincontroldialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/coincontroldialog.cpp?ref=2c54217f913967703b404747133be67cf2f4feac",
        "patch": "@@ -456,7 +456,7 @@ void CoinControlDialog::updateLabels(CCoinControl& m_coin_control, WalletModel *\n         {\n             CPubKey pubkey;\n             PKHash *pkhash = boost::get<PKHash>(&address);\n-            if (pkhash && model->wallet().getPubKey(out.txout.scriptPubKey, CKeyID(*pkhash), pubkey))\n+            if (pkhash && model->wallet().getPubKey(out.txout.scriptPubKey, ToKeyID(*pkhash), pubkey))\n             {\n                 nBytesInputs += (pubkey.IsCompressed() ? 148 : 180);\n             }"
      },
      {
        "sha": "a4eb0a83995d154d0dc4948336a14b6321b3274a",
        "filename": "src/script/signingprovider.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2c54217f913967703b404747133be67cf2f4feac/src/script/signingprovider.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2c54217f913967703b404747133be67cf2f4feac/src/script/signingprovider.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/signingprovider.cpp?ref=2c54217f913967703b404747133be67cf2f4feac",
        "patch": "@@ -180,7 +180,7 @@ CKeyID GetKeyForDestination(const SigningProvider& store, const CTxDestination&\n     // Only supports destinations which map to single public keys, i.e. P2PKH,\n     // P2WPKH, and P2SH-P2WPKH.\n     if (auto id = boost::get<PKHash>(&dest)) {\n-        return CKeyID(*id);\n+        return ToKeyID(*id);\n     }\n     if (auto witness_id = boost::get<WitnessV0KeyHash>(&dest)) {\n         return CKeyID(*witness_id);"
      },
      {
        "sha": "4b408d82e3c7a326880de7b3c9199b79764da378",
        "filename": "src/script/standard.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2c54217f913967703b404747133be67cf2f4feac/src/script/standard.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2c54217f913967703b404747133be67cf2f4feac/src/script/standard.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/standard.cpp?ref=2c54217f913967703b404747133be67cf2f4feac",
        "patch": "@@ -23,6 +23,11 @@ ScriptHash::ScriptHash(const CScript& in) : uint160(Hash160(in.begin(), in.end()\n PKHash::PKHash(const CPubKey& pubkey) : uint160(pubkey.GetID()) {}\n WitnessV0KeyHash::WitnessV0KeyHash(const CPubKey& pubkey) : uint160(pubkey.GetID()) {}\n \n+CKeyID ToKeyID(const PKHash& key_hash)\n+{\n+    return CKeyID{static_cast<uint160>(key_hash)};\n+}\n+\n WitnessV0ScriptHash::WitnessV0ScriptHash(const CScript& in)\n {\n     CSHA256().Write(in.data(), in.size()).Finalize(begin());"
      },
      {
        "sha": "1c630744beafa153da287223ac3bc28edaac0043",
        "filename": "src/script/standard.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2c54217f913967703b404747133be67cf2f4feac/src/script/standard.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2c54217f913967703b404747133be67cf2f4feac/src/script/standard.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/standard.h?ref=2c54217f913967703b404747133be67cf2f4feac",
        "patch": "@@ -79,6 +79,7 @@ struct PKHash : public uint160\n     explicit PKHash(const uint160& hash) : uint160(hash) {}\n     explicit PKHash(const CPubKey& pubkey);\n };\n+CKeyID ToKeyID(const PKHash& key_hash);\n \n struct WitnessV0KeyHash;\n struct ScriptHash : public uint160"
      },
      {
        "sha": "43c1aa1a7d4373a55ea57bb441b110ddd5a477bc",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2c54217f913967703b404747133be67cf2f4feac/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2c54217f913967703b404747133be67cf2f4feac/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=2c54217f913967703b404747133be67cf2f4feac",
        "patch": "@@ -3517,7 +3517,7 @@ class DescribeWalletAddressVisitor : public boost::static_visitor<UniValue>\n \n     UniValue operator()(const PKHash& pkhash) const\n     {\n-        CKeyID keyID(pkhash);\n+        CKeyID keyID{ToKeyID(pkhash)};\n         UniValue obj(UniValue::VOBJ);\n         CPubKey vchPubKey;\n         if (provider && provider->GetPubKey(keyID, vchPubKey)) {"
      },
      {
        "sha": "6ec34951ecf709c965f0f1190ee0a0fac8249bae",
        "filename": "src/wallet/scriptpubkeyman.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 4,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2c54217f913967703b404747133be67cf2f4feac/src/wallet/scriptpubkeyman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2c54217f913967703b404747133be67cf2f4feac/src/wallet/scriptpubkeyman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/scriptpubkeyman.cpp?ref=2c54217f913967703b404747133be67cf2f4feac",
        "patch": "@@ -573,9 +573,8 @@ bool LegacyScriptPubKeyMan::SignTransaction(CMutableTransaction& tx, const std::\n \n SigningResult LegacyScriptPubKeyMan::SignMessage(const std::string& message, const PKHash& pkhash, std::string& str_sig) const\n {\n-    CKeyID key_id(pkhash);\n     CKey key;\n-    if (!GetKey(key_id, key)) {\n+    if (!GetKey(ToKeyID(pkhash), key)) {\n         return SigningResult::PRIVATE_KEY_NOT_AVAILABLE;\n     }\n \n@@ -2052,9 +2051,8 @@ SigningResult DescriptorScriptPubKeyMan::SignMessage(const std::string& message,\n         return SigningResult::PRIVATE_KEY_NOT_AVAILABLE;\n     }\n \n-    CKeyID key_id(pkhash);\n     CKey key;\n-    if (!keys->GetKey(key_id, key)) {\n+    if (!keys->GetKey(ToKeyID(pkhash), key)) {\n         return SigningResult::PRIVATE_KEY_NOT_AVAILABLE;\n     }\n "
      }
    ]
  },
  {
    "sha": "f32c1e07fd6c174ff3f6406a619550d2f6c19360",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmMzJjMWUwN2ZkNmMxNzRmZjNmNjQwNmE2MTk1NTBkMmY2YzE5MzYw",
    "commit": {
      "author": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2020-01-15T21:41:25Z"
      },
      "committer": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2020-06-19T19:14:08Z"
      },
      "message": "Use explicit conversion from WitnessV0KeyHash -> CKeyID\n\nThese types are equivalent, in data etc, so they need only their\ndata cast across.",
      "tree": {
        "sha": "12c70ed12c60e6feea3e6228c15bf12a7c64a6df",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/12c70ed12c60e6feea3e6228c15bf12a7c64a6df"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f32c1e07fd6c174ff3f6406a619550d2f6c19360",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQEcBAABCgAGBQJe7Q6AAAoJEG7l83hfeLNF/P4IAIgTeGZYLakhtlQUgaYR8i1H\nSXkSv+D9kh7gQIarK4Gs8Fld3Aa3u+Vonmkre7Qy9Gyi6RZ2BFXcmi2LgCn6q3R8\n6SJxGUZjL4pHqfb6yedJuoRu2I4HgvfaNlivHT5Zryx4eN5tFU1Py+xh2Dq3muGF\nu9wz2frNgnwzqeRa2eiAicWaR8T+KEYdM2Luq08zBdQ0Gz+v6+EQkrxjOWb+37zS\nJ7s23TZdzo2AxEpxxPvRC6wXR91uoG6wbfz4wsVsyoEe+ugPBt0+xOAhlzobATKb\nH5v+WdsR8ppSIXyY/JnGmSSqt2TwZ2lv3sghOSiohjJug3PyiHtjca8IMm7WZT4=\n=A+6L\n-----END PGP SIGNATURE-----",
        "payload": "tree 12c70ed12c60e6feea3e6228c15bf12a7c64a6df\nparent 2c54217f913967703b404747133be67cf2f4feac\nauthor Ben Woosley <ben.woosley@gmail.com> 1579124485 -0800\ncommitter Ben Woosley <ben.woosley@gmail.com> 1592594048 -0700\n\nUse explicit conversion from WitnessV0KeyHash -> CKeyID\n\nThese types are equivalent, in data etc, so they need only their\ndata cast across."
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f32c1e07fd6c174ff3f6406a619550d2f6c19360",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f32c1e07fd6c174ff3f6406a619550d2f6c19360",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f32c1e07fd6c174ff3f6406a619550d2f6c19360/comments",
    "author": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2c54217f913967703b404747133be67cf2f4feac",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2c54217f913967703b404747133be67cf2f4feac",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2c54217f913967703b404747133be67cf2f4feac"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 9,
      "deletions": 3
    },
    "files": [
      {
        "sha": "2d8dc7d4714fe39b643f55bb01560183df7bcac5",
        "filename": "src/script/signingprovider.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f32c1e07fd6c174ff3f6406a619550d2f6c19360/src/script/signingprovider.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f32c1e07fd6c174ff3f6406a619550d2f6c19360/src/script/signingprovider.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/signingprovider.cpp?ref=f32c1e07fd6c174ff3f6406a619550d2f6c19360",
        "patch": "@@ -183,15 +183,15 @@ CKeyID GetKeyForDestination(const SigningProvider& store, const CTxDestination&\n         return ToKeyID(*id);\n     }\n     if (auto witness_id = boost::get<WitnessV0KeyHash>(&dest)) {\n-        return CKeyID(*witness_id);\n+        return ToKeyID(*witness_id);\n     }\n     if (auto script_hash = boost::get<ScriptHash>(&dest)) {\n         CScript script;\n         CScriptID script_id(*script_hash);\n         CTxDestination inner_dest;\n         if (store.GetCScript(script_id, script) && ExtractDestination(script, inner_dest)) {\n             if (auto inner_witness_id = boost::get<WitnessV0KeyHash>(&inner_dest)) {\n-                return CKeyID(*inner_witness_id);\n+                return ToKeyID(*inner_witness_id);\n             }\n         }\n     }"
      },
      {
        "sha": "a47ccef842aceb30598c1c9e3dcaf59f264b7094",
        "filename": "src/script/standard.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f32c1e07fd6c174ff3f6406a619550d2f6c19360/src/script/standard.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f32c1e07fd6c174ff3f6406a619550d2f6c19360/src/script/standard.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/standard.cpp?ref=f32c1e07fd6c174ff3f6406a619550d2f6c19360",
        "patch": "@@ -28,6 +28,11 @@ CKeyID ToKeyID(const PKHash& key_hash)\n     return CKeyID{static_cast<uint160>(key_hash)};\n }\n \n+CKeyID ToKeyID(const WitnessV0KeyHash& key_hash)\n+{\n+    return CKeyID{static_cast<uint160>(key_hash)};\n+}\n+\n WitnessV0ScriptHash::WitnessV0ScriptHash(const CScript& in)\n {\n     CSHA256().Write(in.data(), in.size()).Finalize(begin());"
      },
      {
        "sha": "6c882e92a184fde513a3d488ba51889e7660cb89",
        "filename": "src/script/standard.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f32c1e07fd6c174ff3f6406a619550d2f6c19360/src/script/standard.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f32c1e07fd6c174ff3f6406a619550d2f6c19360/src/script/standard.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/standard.h?ref=f32c1e07fd6c174ff3f6406a619550d2f6c19360",
        "patch": "@@ -106,6 +106,7 @@ struct WitnessV0KeyHash : public uint160\n     explicit WitnessV0KeyHash(const uint160& hash) : uint160(hash) {}\n     explicit WitnessV0KeyHash(const CPubKey& pubkey);\n };\n+CKeyID ToKeyID(const WitnessV0KeyHash& key_hash);\n \n //! CTxDestination subtype to encode any future Witness version\n struct WitnessUnknown"
      },
      {
        "sha": "fb79e06538544933f55341e7c802569839eff6be",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f32c1e07fd6c174ff3f6406a619550d2f6c19360/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f32c1e07fd6c174ff3f6406a619550d2f6c19360/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=f32c1e07fd6c174ff3f6406a619550d2f6c19360",
        "patch": "@@ -3542,7 +3542,7 @@ class DescribeWalletAddressVisitor : public boost::static_visitor<UniValue>\n     {\n         UniValue obj(UniValue::VOBJ);\n         CPubKey pubkey;\n-        if (provider && provider->GetPubKey(CKeyID(id), pubkey)) {\n+        if (provider && provider->GetPubKey(ToKeyID(id), pubkey)) {\n             obj.pushKV(\"pubkey\", HexStr(pubkey));\n         }\n         return obj;"
      }
    ]
  },
  {
    "sha": "966a22d859db37b1775e2180e5be032fc4fdf483",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5NjZhMjJkODU5ZGIzN2IxNzc1ZTIxODBlNWJlMDMyZmM0ZmRmNDgz",
    "commit": {
      "author": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2020-01-15T21:48:59Z"
      },
      "committer": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2020-06-19T19:14:08Z"
      },
      "message": "Explicitly support conversion between equivalent hash types\n\nScriptHash <-> CScriptID\nCKeyID -> PKHash\nPKHash -> WitnessV0KeyHash",
      "tree": {
        "sha": "adc7d5c50d425c31fb5fdde6420643b386ecae43",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/adc7d5c50d425c31fb5fdde6420643b386ecae43"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/966a22d859db37b1775e2180e5be032fc4fdf483",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQEcBAABCgAGBQJe7Q6AAAoJEG7l83hfeLNFRQAH/351p8O0b9YR3Ni6v/PpN+MO\nnZoPm5doTGxEcG+9cB8hwkIEU/SX23ugrg5rn18eybC7NI0JJvV8SiiQW+tkXxyu\nJn1o5VK/hM2jRxiNPth7u+ayJTojUwC7XbyhZEsdHjGV7jRLnf/KudOTgDrBbbMd\nTVjIFkYIy1FdlYZkMG39kcjq8XcY/CXiSflE0oWPEaSDqct+QCsCWGhv57amoaWp\nnE5dVxR5tS9VvGbnTCqBWZu+fU94Xg/v2+XBU4g6Jj0nv7xijVaQR+7lWeEUZ4HV\n5Euj4Ss3pVMRq1Rg4lTBo4M1G/s1oIDzGeE9oNPalQOCVx2dgLxi6VqCh62qk/s=\n=+aTf\n-----END PGP SIGNATURE-----",
        "payload": "tree adc7d5c50d425c31fb5fdde6420643b386ecae43\nparent f32c1e07fd6c174ff3f6406a619550d2f6c19360\nauthor Ben Woosley <ben.woosley@gmail.com> 1579124939 +0000\ncommitter Ben Woosley <ben.woosley@gmail.com> 1592594048 -0700\n\nExplicitly support conversion between equivalent hash types\n\nScriptHash <-> CScriptID\nCKeyID -> PKHash\nPKHash -> WitnessV0KeyHash"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/966a22d859db37b1775e2180e5be032fc4fdf483",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/966a22d859db37b1775e2180e5be032fc4fdf483",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/966a22d859db37b1775e2180e5be032fc4fdf483/comments",
    "author": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f32c1e07fd6c174ff3f6406a619550d2f6c19360",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f32c1e07fd6c174ff3f6406a619550d2f6c19360",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f32c1e07fd6c174ff3f6406a619550d2f6c19360"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 10,
      "deletions": 0
    },
    "files": [
      {
        "sha": "f8bfc3b69cb5d0755f6a81c6375024f23d0bec47",
        "filename": "src/script/standard.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/966a22d859db37b1775e2180e5be032fc4fdf483/src/script/standard.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/966a22d859db37b1775e2180e5be032fc4fdf483/src/script/standard.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/standard.cpp?ref=966a22d859db37b1775e2180e5be032fc4fdf483",
        "patch": "@@ -17,11 +17,16 @@ bool fAcceptDatacarrier = DEFAULT_ACCEPT_DATACARRIER;\n unsigned nMaxDatacarrierBytes = MAX_OP_RETURN_RELAY;\n \n CScriptID::CScriptID(const CScript& in) : uint160(Hash160(in.begin(), in.end())) {}\n+CScriptID::CScriptID(const ScriptHash& in) : uint160(static_cast<uint160>(in)) {}\n \n ScriptHash::ScriptHash(const CScript& in) : uint160(Hash160(in.begin(), in.end())) {}\n+ScriptHash::ScriptHash(const CScriptID& in) : uint160(static_cast<uint160>(in)) {}\n \n PKHash::PKHash(const CPubKey& pubkey) : uint160(pubkey.GetID()) {}\n+PKHash::PKHash(const CKeyID& pubkey_id) : uint160(pubkey_id) {}\n+\n WitnessV0KeyHash::WitnessV0KeyHash(const CPubKey& pubkey) : uint160(pubkey.GetID()) {}\n+WitnessV0KeyHash::WitnessV0KeyHash(const PKHash& pubkey_hash) : uint160(static_cast<uint160>(pubkey_hash)) {}\n \n CKeyID ToKeyID(const PKHash& key_hash)\n {"
      },
      {
        "sha": "d235e6e173a316a1b3098233cad00b4f5f646656",
        "filename": "src/script/standard.h",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/966a22d859db37b1775e2180e5be032fc4fdf483/src/script/standard.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/966a22d859db37b1775e2180e5be032fc4fdf483/src/script/standard.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/standard.h?ref=966a22d859db37b1775e2180e5be032fc4fdf483",
        "patch": "@@ -18,6 +18,7 @@ static const bool DEFAULT_ACCEPT_DATACARRIER = true;\n \n class CKeyID;\n class CScript;\n+struct ScriptHash;\n \n /** A reference to a CScript: the Hash160 of its serialization (see script.h) */\n class CScriptID : public uint160\n@@ -26,6 +27,7 @@ class CScriptID : public uint160\n     CScriptID() : uint160() {}\n     explicit CScriptID(const CScript& in);\n     explicit CScriptID(const uint160& in) : uint160(in) {}\n+    explicit CScriptID(const ScriptHash& in);\n };\n \n /**\n@@ -78,6 +80,7 @@ struct PKHash : public uint160\n     PKHash() : uint160() {}\n     explicit PKHash(const uint160& hash) : uint160(hash) {}\n     explicit PKHash(const CPubKey& pubkey);\n+    explicit PKHash(const CKeyID& pubkey_id);\n };\n CKeyID ToKeyID(const PKHash& key_hash);\n \n@@ -91,6 +94,7 @@ struct ScriptHash : public uint160\n     explicit ScriptHash(const PKHash& hash) = delete;\n     explicit ScriptHash(const uint160& hash) : uint160(hash) {}\n     explicit ScriptHash(const CScript& script);\n+    explicit ScriptHash(const CScriptID& script);\n };\n \n struct WitnessV0ScriptHash : public uint256\n@@ -105,6 +109,7 @@ struct WitnessV0KeyHash : public uint160\n     WitnessV0KeyHash() : uint160() {}\n     explicit WitnessV0KeyHash(const uint160& hash) : uint160(hash) {}\n     explicit WitnessV0KeyHash(const CPubKey& pubkey);\n+    explicit WitnessV0KeyHash(const PKHash& pubkey_hash);\n };\n CKeyID ToKeyID(const WitnessV0KeyHash& key_hash);\n "
      }
    ]
  },
  {
    "sha": "fa9ef2cdbed32438bdb32623af6e06f13ecd35e4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTllZjJjZGJlZDMyNDM4YmRiMzI2MjNhZjZlMDZmMTNlY2QzNWU0",
    "commit": {
      "author": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2020-01-15T22:02:31Z"
      },
      "committer": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2020-06-19T19:14:08Z"
      },
      "message": "Remove an apparently unnecessary conversion\n\nCScript -> CScriptID -> ScriptHash is unnecessary because\nScriptHash and CScriptID do the same thing.",
      "tree": {
        "sha": "e6a8b106579545eb0d32d6910a2833c9c4b6529f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e6a8b106579545eb0d32d6910a2833c9c4b6529f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa9ef2cdbed32438bdb32623af6e06f13ecd35e4",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQEcBAABCgAGBQJe7Q6AAAoJEG7l83hfeLNFtT8IAIjVf6vy6ce8Zn5cOMDDfSAW\n9NuSR4d5+Law/AYr1WZB96Tmvh0ZefA2ZT3MADD3/Xoc5XjkFpGTRQk1Tdx5x+7K\nGy/ucXKTWF4Y32+iMF34vx/Yp6wsMMlF1en72eFG3PeYAcDmVOUubnHqJEnaLTs3\n60ogpNMRImnQ5K3TdF94Ek4OGCpeGLwU0DM8QWdRwbNff/oLogygqYjTJT8w23kZ\ngpJpglsgDcaIG2lNcbcXuxfVuQugvx9aW6p/7qzKLKl2u1tk4xLvUgYQoSGxMgn7\n/LHQIUPMGlK66+nayr5oZA5vT8zyG3TuNY9Lr5tCb4DKso0ss+3uPFwjX7HuUrQ=\n=vEI9\n-----END PGP SIGNATURE-----",
        "payload": "tree e6a8b106579545eb0d32d6910a2833c9c4b6529f\nparent 966a22d859db37b1775e2180e5be032fc4fdf483\nauthor Ben Woosley <ben.woosley@gmail.com> 1579125751 -0800\ncommitter Ben Woosley <ben.woosley@gmail.com> 1592594048 -0700\n\nRemove an apparently unnecessary conversion\n\nCScript -> CScriptID -> ScriptHash is unnecessary because\nScriptHash and CScriptID do the same thing.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa9ef2cdbed32438bdb32623af6e06f13ecd35e4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa9ef2cdbed32438bdb32623af6e06f13ecd35e4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa9ef2cdbed32438bdb32623af6e06f13ecd35e4/comments",
    "author": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "966a22d859db37b1775e2180e5be032fc4fdf483",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/966a22d859db37b1775e2180e5be032fc4fdf483",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/966a22d859db37b1775e2180e5be032fc4fdf483"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "541675bcef44a2ee2663b23d60cacde6ccdbe19d",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa9ef2cdbed32438bdb32623af6e06f13ecd35e4/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa9ef2cdbed32438bdb32623af6e06f13ecd35e4/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=fa9ef2cdbed32438bdb32623af6e06f13ecd35e4",
        "patch": "@@ -297,7 +297,7 @@ UniValue importaddress(const JSONRPCRequest& request)\n             pwallet->ImportScripts(scripts, 0 /* timestamp */);\n \n             if (fP2SH) {\n-                scripts.insert(GetScriptForDestination(ScriptHash(CScriptID(redeem_script))));\n+                scripts.insert(GetScriptForDestination(ScriptHash(redeem_script)));\n             }\n \n             pwallet->ImportScriptPubKeys(strLabel, scripts, false /* have_solving_data */, true /* apply_label */, 1 /* timestamp */);"
      }
    ]
  },
  {
    "sha": "4d7369125a82214ea42b808a32b71b315a5c3c72",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0ZDczNjkxMjVhODIyMTRlYTQyYjgwOGEzMmI3MWIzMTVhNWMzYzcy",
    "commit": {
      "author": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2020-01-15T22:03:57Z"
      },
      "committer": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2020-06-19T19:14:08Z"
      },
      "message": "Disallow automatic conversion between hash types\n\nA templated BaseHash does not allow for automatic conversion, thus\nconversions much be explicitly allowed / whitelisted, which will\nreduce the risk of unintended conversions.",
      "tree": {
        "sha": "33bc116c982bb70914801d72b799aa9afca0f275",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/33bc116c982bb70914801d72b799aa9afca0f275"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4d7369125a82214ea42b808a32b71b315a5c3c72",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQEcBAABCgAGBQJe7Q6AAAoJEG7l83hfeLNFszIH/1r9gTjK7qhOLNI8xLVvbrro\nRU2yWE6eTIseWxO1eBKRme4uxtqFucRTSSNlW/t9rsMcJzkfDWBKO3lR50NxYERW\ntco9T1rsrTp7guxbn7RFx7BAmq44n81XcdJDjYErKe8AyzRr90NyiiClGYJyXK28\niyeOFhd+Z5NectoF1koWqWTnNjhMDjL1K8WT5yPGcgoGx4GPJ9GaVgbjALjbg/Oe\ndGJzshs+9hnSg/hgzc76wQ/wUSSk2/JrUSzb0vgnySMmLAGqEqaUH5Zj21j0s4fc\nlqOi1duEYJ5cjEwv2TVijeG8ag3a7padOyxD9/f8KPxQYDID5xhXhH3dmj+dryg=\n=ItvX\n-----END PGP SIGNATURE-----",
        "payload": "tree 33bc116c982bb70914801d72b799aa9afca0f275\nparent fa9ef2cdbed32438bdb32623af6e06f13ecd35e4\nauthor Ben Woosley <ben.woosley@gmail.com> 1579125837 -0800\ncommitter Ben Woosley <ben.woosley@gmail.com> 1592594048 -0700\n\nDisallow automatic conversion between hash types\n\nA templated BaseHash does not allow for automatic conversion, thus\nconversions much be explicitly allowed / whitelisted, which will\nreduce the risk of unintended conversions."
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4d7369125a82214ea42b808a32b71b315a5c3c72",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4d7369125a82214ea42b808a32b71b315a5c3c72",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4d7369125a82214ea42b808a32b71b315a5c3c72/comments",
    "author": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa9ef2cdbed32438bdb32623af6e06f13ecd35e4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa9ef2cdbed32438bdb32623af6e06f13ecd35e4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa9ef2cdbed32438bdb32623af6e06f13ecd35e4"
      }
    ],
    "stats": {
      "total": 108,
      "additions": 85,
      "deletions": 23
    },
    "files": [
      {
        "sha": "2adf6ce56d5938b45efbbacd88180773c08a5a44",
        "filename": "src/script/standard.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4d7369125a82214ea42b808a32b71b315a5c3c72/src/script/standard.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4d7369125a82214ea42b808a32b71b315a5c3c72/src/script/standard.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/standard.cpp?ref=4d7369125a82214ea42b808a32b71b315a5c3c72",
        "patch": "@@ -16,17 +16,17 @@ typedef std::vector<unsigned char> valtype;\n bool fAcceptDatacarrier = DEFAULT_ACCEPT_DATACARRIER;\n unsigned nMaxDatacarrierBytes = MAX_OP_RETURN_RELAY;\n \n-CScriptID::CScriptID(const CScript& in) : uint160(Hash160(in.begin(), in.end())) {}\n-CScriptID::CScriptID(const ScriptHash& in) : uint160(static_cast<uint160>(in)) {}\n+CScriptID::CScriptID(const CScript& in) : BaseHash(Hash160(in.begin(), in.end())) {}\n+CScriptID::CScriptID(const ScriptHash& in) : BaseHash(static_cast<uint160>(in)) {}\n \n-ScriptHash::ScriptHash(const CScript& in) : uint160(Hash160(in.begin(), in.end())) {}\n-ScriptHash::ScriptHash(const CScriptID& in) : uint160(static_cast<uint160>(in)) {}\n+ScriptHash::ScriptHash(const CScript& in) : BaseHash(Hash160(in.begin(), in.end())) {}\n+ScriptHash::ScriptHash(const CScriptID& in) : BaseHash(static_cast<uint160>(in)) {}\n \n-PKHash::PKHash(const CPubKey& pubkey) : uint160(pubkey.GetID()) {}\n-PKHash::PKHash(const CKeyID& pubkey_id) : uint160(pubkey_id) {}\n+PKHash::PKHash(const CPubKey& pubkey) : BaseHash(pubkey.GetID()) {}\n+PKHash::PKHash(const CKeyID& pubkey_id) : BaseHash(pubkey_id) {}\n \n-WitnessV0KeyHash::WitnessV0KeyHash(const CPubKey& pubkey) : uint160(pubkey.GetID()) {}\n-WitnessV0KeyHash::WitnessV0KeyHash(const PKHash& pubkey_hash) : uint160(static_cast<uint160>(pubkey_hash)) {}\n+WitnessV0KeyHash::WitnessV0KeyHash(const CPubKey& pubkey) : BaseHash(pubkey.GetID()) {}\n+WitnessV0KeyHash::WitnessV0KeyHash(const PKHash& pubkey_hash) : BaseHash(static_cast<uint160>(pubkey_hash)) {}\n \n CKeyID ToKeyID(const PKHash& key_hash)\n {"
      },
      {
        "sha": "4baed6da6e3889f8cf3c8fb2ded7d7991925687c",
        "filename": "src/script/standard.h",
        "status": "modified",
        "additions": 77,
        "deletions": 15,
        "changes": 92,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4d7369125a82214ea42b808a32b71b315a5c3c72/src/script/standard.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4d7369125a82214ea42b808a32b71b315a5c3c72/src/script/standard.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/standard.h?ref=4d7369125a82214ea42b808a32b71b315a5c3c72",
        "patch": "@@ -20,13 +20,74 @@ class CKeyID;\n class CScript;\n struct ScriptHash;\n \n+template<typename HashType>\n+class BaseHash\n+{\n+protected:\n+    HashType m_hash;\n+\n+public:\n+    BaseHash() : m_hash() {}\n+    BaseHash(const HashType& in) : m_hash(in) {}\n+\n+    unsigned char* begin()\n+    {\n+        return m_hash.begin();\n+    }\n+\n+    const unsigned char* begin() const\n+    {\n+        return m_hash.begin();\n+    }\n+\n+    unsigned char* end()\n+    {\n+        return m_hash.end();\n+    }\n+\n+    const unsigned char* end() const\n+    {\n+        return m_hash.end();\n+    }\n+\n+    operator std::vector<unsigned char>() const\n+    {\n+        return std::vector<unsigned char>{m_hash.begin(), m_hash.end()};\n+    }\n+\n+    std::string ToString() const\n+    {\n+        return m_hash.ToString();\n+    }\n+\n+    bool operator==(const BaseHash<HashType>& other) const noexcept\n+    {\n+        return m_hash == other.m_hash;\n+    }\n+\n+    bool operator!=(const BaseHash<HashType>& other) const noexcept\n+    {\n+        return !(m_hash == other.m_hash);\n+    }\n+\n+    bool operator<(const BaseHash<HashType>& other) const noexcept\n+    {\n+        return m_hash < other.m_hash;\n+    }\n+\n+    size_t size() const\n+    {\n+        return m_hash.size();\n+    }\n+};\n+\n /** A reference to a CScript: the Hash160 of its serialization (see script.h) */\n-class CScriptID : public uint160\n+class CScriptID : public BaseHash<uint160>\n {\n public:\n-    CScriptID() : uint160() {}\n+    CScriptID() : BaseHash() {}\n     explicit CScriptID(const CScript& in);\n-    explicit CScriptID(const uint160& in) : uint160(in) {}\n+    explicit CScriptID(const uint160& in) : BaseHash(in) {}\n     explicit CScriptID(const ScriptHash& in);\n };\n \n@@ -75,39 +136,40 @@ class CNoDestination {\n     friend bool operator<(const CNoDestination &a, const CNoDestination &b) { return true; }\n };\n \n-struct PKHash : public uint160\n+struct PKHash : public BaseHash<uint160>\n {\n-    PKHash() : uint160() {}\n-    explicit PKHash(const uint160& hash) : uint160(hash) {}\n+    PKHash() : BaseHash() {}\n+    explicit PKHash(const uint160& hash) : BaseHash(hash) {}\n     explicit PKHash(const CPubKey& pubkey);\n     explicit PKHash(const CKeyID& pubkey_id);\n };\n CKeyID ToKeyID(const PKHash& key_hash);\n \n struct WitnessV0KeyHash;\n-struct ScriptHash : public uint160\n+struct ScriptHash : public BaseHash<uint160>\n {\n-    ScriptHash() : uint160() {}\n+    ScriptHash() : BaseHash() {}\n     // These don't do what you'd expect.\n     // Use ScriptHash(GetScriptForDestination(...)) instead.\n     explicit ScriptHash(const WitnessV0KeyHash& hash) = delete;\n     explicit ScriptHash(const PKHash& hash) = delete;\n-    explicit ScriptHash(const uint160& hash) : uint160(hash) {}\n+\n+    explicit ScriptHash(const uint160& hash) : BaseHash(hash) {}\n     explicit ScriptHash(const CScript& script);\n     explicit ScriptHash(const CScriptID& script);\n };\n \n-struct WitnessV0ScriptHash : public uint256\n+struct WitnessV0ScriptHash : public BaseHash<uint256>\n {\n-    WitnessV0ScriptHash() : uint256() {}\n-    explicit WitnessV0ScriptHash(const uint256& hash) : uint256(hash) {}\n+    WitnessV0ScriptHash() : BaseHash() {}\n+    explicit WitnessV0ScriptHash(const uint256& hash) : BaseHash(hash) {}\n     explicit WitnessV0ScriptHash(const CScript& script);\n };\n \n-struct WitnessV0KeyHash : public uint160\n+struct WitnessV0KeyHash : public BaseHash<uint160>\n {\n-    WitnessV0KeyHash() : uint160() {}\n-    explicit WitnessV0KeyHash(const uint160& hash) : uint160(hash) {}\n+    WitnessV0KeyHash() : BaseHash() {}\n+    explicit WitnessV0KeyHash(const uint160& hash) : BaseHash(hash) {}\n     explicit WitnessV0KeyHash(const CPubKey& pubkey);\n     explicit WitnessV0KeyHash(const PKHash& pubkey_hash);\n };"
      }
    ]
  }
]