DrahtBot,2020-03-14 22:29:28,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #18571 (fuzz: Disable debug log file by MarcoFalke)\n* #18562 (ci: Run unit tests sequential once by MarcoFalke)\n* #18422",https://github.com/bitcoin/bitcoin/pull/18352#issuecomment-599142795,599142795,
DrahtBot,2020-03-15 20:38:31,<!--a722867cd34abeea1fadc8d60700f111-->\n### Gitian builds\n\n| File | commit 67dfd18f4401986063e22c79d4d7da61f15b5cd4<br>(master) | commit d622e3d68c68469cd73c29e05f84770a8f9702b1<br>(master and this pull) |\n|--|--|--|\n| bitcoin-0.19.99-aarch64-linux-gnu-debug.tar.gz | [`2a8f73aeb5c13752...`](https://drahtbot.space/gitian/bitcoin/bitcoin/67dfd18f4401986063e22c79d4d7da61f15b5cd4/bitcoin-0.19.99-,https://github.com/bitcoin/bitcoin/pull/18352#issuecomment-599261662,599261662,
MarcoFalke,2020-03-16 18:45:21,"Tested on ARM:\n\nCurrent master (with optimizations):\n\n```\nVerifyNestedIfScript, 5, 100, 0.25091, 0.000499568, 0.000508809, 0.000500318\n```\n\nThis pull (without the opt):\n\n```\nVerifyNestedIfScript, 5, 100, 0.505166, 0.00100926, 0.0010135, 0.00100959\n```",https://github.com/bitcoin/bitcoin/pull/18352#issuecomment-599701637,599701637,
MarcoFalke,2020-03-16 18:46:43,"@fjahr , would be nice if you can test this on macOs to compare against https://github.com/bitcoin/bitcoin/pull/16902#issuecomment-585751558\n\nThe bench_bitcoin binary is contained in the `bitcoin-0.19.99-osx64.tar.gz` archive.",https://github.com/bitcoin/bitcoin/pull/18352#issuecomment-599702281,599702281,
MarcoFalke,2020-03-18 21:21:59,"@fjahr Alternatively, it would be nice to know what optimization flags you used to compile https://github.com/bitcoin/bitcoin/pull/16902#issuecomment-585751558",https://github.com/bitcoin/bitcoin/pull/18352#issuecomment-600865278,600865278,
fjahr,2020-03-18 21:25:58,"> @fjahr Alternatively, it would be nice to know what optimization flags you used to compile [#16902 (comment)](https://github.com/bitcoin/bitcoin/pull/16902#issuecomment-585751558)\n\nJust the defaults of `./configure` but I am also compiling this PR right now and will post results soon.",https://github.com/bitcoin/bitcoin/pull/18352#issuecomment-600866955,600866955,
MarcoFalke,2020-03-18 21:41:47,">  compiling this PR right now\n\nThe pr was mostly to get two gitian builds for osx (`bitcoin-0.19.99-osx64.tar.gz`). They are using the release compile flags and a cross compiler.",https://github.com/bitcoin/bitcoin/pull/18352#issuecomment-600873070,600873070,
fjahr,2020-03-18 21:58:00,"> The pr was mostly to get two gitian builds for osx (`bitcoin-0.19.99-osx64.tar.gz`). They are using the release compile flags and a cross compiler.\n\nSorry, misread at first, here are results for `bitcoin-0.19.99-osx64.tar.gz`.\n\nMaster:\n```\n$ bin/bench_bitcoin -filter=VerifyNestedIfScript -evals=50\n# Benchmark, evals, iterations, total, min, max, median\nVerifyNestedIfScript, 50, 1",https://github.com/bitcoin/bitcoin/pull/18352#issuecomment-600879504,600879504,
MarcoFalke,2020-03-18 22:00:34,Hmmm :thinking: Now it seems to even slow it down by a bit. (Master should be the faster one),https://github.com/bitcoin/bitcoin/pull/18352#issuecomment-600880451,600880451,
fjahr,2020-03-18 22:08:59,"> Hmmm ü§î Now it seems to even slow it down by a bit. (Master should be the faster one)\n\nYeah, I had some direct exchanges with @ajtowns as well after my results on #16902 but we could not figure it out. Let me know if you want me to do more specific testing or investigate my system aside from the information I shared so far.",https://github.com/bitcoin/bitcoin/pull/18352#issuecomment-600883483,600883483,
MarcoFalke,2020-03-18 23:49:29,The hardware you are using and the version of the operating system would help to check if this can be reproduced or if it is only happening on your end.,https://github.com/bitcoin/bitcoin/pull/18352#issuecomment-600913292,600913292,
fjahr,2020-03-19 00:06:44,"I think the most relevant info is:\n- MacBook Pro (13-inch, 2016)\n- Intel(R) Core(TM) i5-6287U CPU @ 3.10GHz\n- macOS 10.15.3 (latest stable)",https://github.com/bitcoin/bitcoin/pull/18352#issuecomment-600917746,600917746,
MarcoFalke,2020-03-19 18:32:14,"Testing on a mac-mini shows the same result: Slower on master (the optimized version) and faster with the old code:\n\n```\nmac-mini:~ marco$ ./master/bitcoin-0.19.99/bin/bench_bitcoin -filter=VerifyNestedIfScript -evals=50 \n# Benchmark, evals, iterations, total, min, max, median\nVerifyNestedIfScript, 50, 100, 0.884273, 0.000143609, 0.000295676, 0.000151077\n\nmac-mini:~ marco$ ./old/bitc",https://github.com/bitcoin/bitcoin/pull/18352#issuecomment-601346913,601346913,
ajtowns,2020-03-24 05:16:26,"> Testing on a mac-mini shows the same result:\n\nSuper weird. Maybe try setting `nOpCount = 0;` prior to the `++nOpCount > MAX_OPS_PER_SCRIPT` check in script/interpreter.cpp and check to see what the behaviour is with much larger numbers of OP_IFs or OP_1s in bench/verify_script.cpp? If your script is `{1 IF}*x NOP*y ENDIF*x 1` your runtime should be O(3x+y) in master, but O(3x+y+xy) with the ",https://github.com/bitcoin/bitcoin/pull/18352#issuecomment-603020942,603020942,
DrahtBot,2020-03-29 23:21:46,<!--a722867cd34abeea1fadc8d60700f111-->\n### Gitian builds\n\n| File | commit 27a82d347eddfe1cde0005f8a2174274ab6efe9f<br>(master) | commit 71ede6f8080660f3ead41b985a9d06d77d22970c<br>(master and this pull) |\n|--|--|--|\n| bitcoin-0.19.99-aarch64-linux-gnu-debug.tar.gz | [`ad1ec03659569853...`](https://drahtbot.space/gitian/bitcoin/bitcoin/27a82d347eddfe1cde0005f8a2174274ab6efe9f/bitcoin-0.19.99-,https://github.com/bitcoin/bitcoin/pull/18352#issuecomment-605717790,605717790,
DrahtBot,2020-04-09 13:37:58,<!--cf906140f33d8803c4a75a2196329ecb-->\nüêô This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).,https://github.com/bitcoin/bitcoin/pull/18352#issuecomment-611532789,611532789,
MarcoFalke,2020-04-09 14:51:59,"With the new bench framwork I get this:\n\nThis pull with the last two commits dropped:\n\n```\nmac-mini:bitcoin-core marco$ ./src/bench/bench_bitcoin --filter=VerifyNestedIfScript\nWarning, results might be unstable:\n* NDEBUG not defined, assert() macros are evaluated\n\nRecommendations\n* Make sure you compile for Release\n\n|               ns/op |                op/s |    err% |   ",https://github.com/bitcoin/bitcoin/pull/18352#issuecomment-611571184,611571184,
MarcoFalke,2020-04-09 14:52:39,"So it does seem to get slightly faster, which might point to a problem with the current bench framework.",https://github.com/bitcoin/bitcoin/pull/18352#issuecomment-611571546,611571546,
