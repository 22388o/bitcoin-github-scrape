ryanofsky,2020-04-15 20:43:35,"I don't think this is a good change. I would prefer to just add a test making sure the API works as designed instead of making the API leave behind uninitialized output variables and be awkward to use and then document the awkwardness. Here is the test I would add:\n\n```diff\n--- a/src/test/interfaces_tests.cpp\n+++ b/src/test/interfaces_tests.cpp\n@@ -116,6 +116,12 @@ BOOST_AUTO_TEST_CASE(f",https://github.com/bitcoin/bitcoin/pull/18657#issuecomment-614270045,614270045,
practicalswift,2020-04-15 21:02:33,"@ryanofsky The justification is to minimise surprising code: apparently both @MarcoFalke and I were somewhat surprised by the current formulation. Perhaps the intentional use of `&` instead of `&&` was clear to other reviewers.\n\nNo one is claiming that we are following AutoSAR, or that you should have thought about AutoSAR when submitting your PR :)",https://github.com/bitcoin/bitcoin/pull/18657#issuecomment-614278450,614278450,
ryanofsky,2020-04-15 21:14:33,"> @ryanofsky The justification is to minimise surprising code: apparently both @MarcoFalke and I were somewhat surprised by the current formulation\n\nThanks for finding this and pointing it out. It's a good catch that uncovered a gap in test coverage and point of potential confusion. I didn't like this particular solution to the problem, but I posted another one in https://github.com/bitcoin/bi",https://github.com/bitcoin/bitcoin/pull/18657#issuecomment-614283677,614283677,
