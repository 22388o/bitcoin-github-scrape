[
  {
    "sha": "8d8e5a79d09d9027e5b68fecfc713e7b135320ba",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4ZDhlNWE3OWQwOWQ5MDI3ZTViNjhmZWNmYzcxM2U3YjEzNTMyMGJh",
    "commit": {
      "author": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2019-10-20T00:03:13Z"
      },
      "committer": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2019-10-22T14:38:48Z"
      },
      "message": "test: use default address type (bech32) for wallet_bumpfee tests\n\nThe use of native segwit addresses (pure p2wpkh instead of p2sh-p2wpkh) leads\nto smaller transaction sizes, needing adaption of some constants in the\nfollowing test cases:\n    - test_dust_to_fee(): adaption of dust calculation\n          (p2wpkh spend estimate of 67 is taken from src/policy/policy.cpp:GetDustThreshold())\n    - test_maxtxfee_fails(): lowering -maxtxfee setting to trigger fail",
      "tree": {
        "sha": "392271bd1c44b1d00a5ca7a08994b33c0b8eac33",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/392271bd1c44b1d00a5ca7a08994b33c0b8eac33"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8d8e5a79d09d9027e5b68fecfc713e7b135320ba",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8d8e5a79d09d9027e5b68fecfc713e7b135320ba",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8d8e5a79d09d9027e5b68fecfc713e7b135320ba",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8d8e5a79d09d9027e5b68fecfc713e7b135320ba/comments",
    "author": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b6e34afe9735faf97d6be7a90fafd33ec18c0cbb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b6e34afe9735faf97d6be7a90fafd33ec18c0cbb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b6e34afe9735faf97d6be7a90fafd33ec18c0cbb"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 6,
      "deletions": 6
    },
    "files": [
      {
        "sha": "95d51adebbbe65718d18c3ec4fbc614f8d2baa68",
        "filename": "test/functional/wallet_bumpfee.py",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8d8e5a79d09d9027e5b68fecfc713e7b135320ba/test/functional/wallet_bumpfee.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8d8e5a79d09d9027e5b68fecfc713e7b135320ba/test/functional/wallet_bumpfee.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_bumpfee.py?ref=8d8e5a79d09d9027e5b68fecfc713e7b135320ba",
        "patch": "@@ -38,7 +38,7 @@ def set_test_params(self):\n             \"-walletrbf={}\".format(i),\n             \"-mintxfee=0.00002\",\n             \"-deprecatedrpc=totalFee\",\n-            \"-addresstype=p2sh-segwit\", # TODO update constants in test and remove\n+            \"-addresstype=bech32\",\n         ] for i in range(self.num_nodes)]\n \n     def skip_test_if_missing_module(self):\n@@ -246,10 +246,8 @@ def test_dust_to_fee(rbf_node, dest_address):\n     # the bumped tx sets fee=49,900, but it converts to 50,000\n     rbfid = spend_one_input(rbf_node, dest_address)\n     fulltx = rbf_node.getrawtransaction(rbfid, 1)\n-    # (32-byte p2sh-pwpkh output size + 148 p2pkh spend estimate) * 10k(discard_rate) / 1000 = 1800\n-    # P2SH outputs are slightly \"over-discarding\" due to the IsDust calculation assuming it will\n-    # be spent as a P2PKH.\n-    bumped_tx = rbf_node.bumpfee(rbfid, {\"totalFee\": 50000 - 1800})\n+    # (31-vbyte p2wpkh output size + 67-vbyte p2wpkh spend estimate) * 10k(discard_rate) / 1000 = 980\n+    bumped_tx = rbf_node.bumpfee(rbfid, {\"totalFee\": 50000 - 980})\n     full_bumped_tx = rbf_node.getrawtransaction(bumped_tx[\"txid\"], 1)\n     assert_equal(bumped_tx[\"fee\"], Decimal(\"0.00050000\"))\n     assert_equal(len(fulltx[\"vout\"]), 2)\n@@ -272,7 +270,9 @@ def test_settxfee(rbf_node, dest_address):\n \n \n def test_maxtxfee_fails(test, rbf_node, dest_address):\n-    test.restart_node(1, ['-maxtxfee=0.00003'] + test.extra_args[1])\n+    # size of bumped transaction (p2wpkh, 1 input, 2 outputs): 141 vbytes\n+    # expected bumping feerate of 20 sats/vbyte => 141*20 sats = 0.00002820 btc\n+    test.restart_node(1, ['-maxtxfee=0.000025'] + test.extra_args[1])\n     rbf_node.walletpassphrase(WALLET_PASSPHRASE, WALLET_PASSPHRASE_TIMEOUT)\n     rbfid = spend_one_input(rbf_node, dest_address)\n     assert_raises_rpc_error(-4, \"Unable to create transaction: Fee exceeds maximum configured by -maxtxfee\", rbf_node.bumpfee, rbfid)"
      }
    ]
  }
]