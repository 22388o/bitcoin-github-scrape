[
  {
    "sha": "d061f5e2882c58db4ccfcfe0e991ca43a890732b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkMDYxZjVlMjg4MmM1OGRiNGNjZmNmZTBlOTkxY2E0M2E4OTA3MzJi",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2019-01-17T20:18:32Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2019-06-26T18:48:49Z"
      },
      "message": "validation: Add missing cs_LastBlockFile locks in PruneAndFlush() and UnloadBlockIndex(). Add missing locking annotation for nLastBlockFile and fCheckForPruning.",
      "tree": {
        "sha": "24a61b15e2ff7c7724f1f5a8b452a587347800b8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/24a61b15e2ff7c7724f1f5a8b452a587347800b8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d061f5e2882c58db4ccfcfe0e991ca43a890732b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d061f5e2882c58db4ccfcfe0e991ca43a890732b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d061f5e2882c58db4ccfcfe0e991ca43a890732b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d061f5e2882c58db4ccfcfe0e991ca43a890732b/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1b28bca04c2767c8bca21d66bd6978f358b0a96a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1b28bca04c2767c8bca21d66bd6978f358b0a96a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1b28bca04c2767c8bca21d66bd6978f358b0a96a"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 11,
      "deletions": 4
    },
    "files": [
      {
        "sha": "d04dc28712b8bd2e0826ddcd15f9a9a393c4f178",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 4,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d061f5e2882c58db4ccfcfe0e991ca43a890732b/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d061f5e2882c58db4ccfcfe0e991ca43a890732b/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=d061f5e2882c58db4ccfcfe0e991ca43a890732b",
        "patch": "@@ -134,12 +134,12 @@ namespace {\n \n     CCriticalSection cs_LastBlockFile;\n     std::vector<CBlockFileInfo> vinfoBlockFile;\n-    int nLastBlockFile = 0;\n+    int nLastBlockFile GUARDED_BY(cs_LastBlockFile) = 0;\n     /** Global flag to indicate we should check to see if there are\n      *  block/undo files that should be deleted.  Set on startup\n      *  or if we allocate more file space when we're in prune mode\n      */\n-    bool fCheckForPruning = false;\n+    bool fCheckForPruning GUARDED_BY(cs_LastBlockFile) = false;\n \n     /** Dirty block index entries. */\n     std::set<CBlockIndex*> setDirtyBlockIndex;\n@@ -2064,7 +2064,10 @@ void CChainState::ForceFlushStateToDisk() {\n \n void CChainState::PruneAndFlush() {\n     CValidationState state;\n-    fCheckForPruning = true;\n+    {\n+        LOCK(cs_LastBlockFile);\n+        fCheckForPruning = true;\n+    }\n     const CChainParams& chainparams = Params();\n \n     if (!this->FlushStateToDisk(chainparams, state, FlushStateMode::NONE)) {\n@@ -3753,6 +3756,7 @@ bool static LoadBlockIndexDB(const CChainParams& chainparams) EXCLUSIVE_LOCKS_RE\n     if (!::ChainstateActive().LoadBlockIndex(chainparams.GetConsensus(), *pblocktree))\n         return false;\n \n+    LOCK(cs_LastBlockFile);\n     // Load block file info\n     pblocktree->ReadLastBlockFile(nLastBlockFile);\n     vinfoBlockFile.resize(nLastBlockFile + 1);\n@@ -4192,7 +4196,10 @@ void UnloadBlockIndex()\n     mempool.clear();\n     mapBlocksUnlinked.clear();\n     vinfoBlockFile.clear();\n-    nLastBlockFile = 0;\n+    {\n+        LOCK(cs_LastBlockFile);\n+        nLastBlockFile = 0;\n+    }\n     setDirtyBlockIndex.clear();\n     setDirtyFileInfo.clear();\n     versionbitscache.Clear();"
      }
    ]
  },
  {
    "sha": "575720c2cb6646e3ad91ec6dcf6d4bc6ab392202",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NzU3MjBjMmNiNjY0NmUzYWQ5MWVjNmRjZjZkNGJjNmFiMzkyMjAy",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2019-01-17T19:54:14Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2019-06-26T18:48:49Z"
      },
      "message": "validation: Add missing cs_nBlockSequenceId lock in UnloadBlockIndex(). Add missing locking annotation for nBlockSequenceId.",
      "tree": {
        "sha": "3ca92a267f1f1555cf51410e092ce2c06eacdab4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3ca92a267f1f1555cf51410e092ce2c06eacdab4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/575720c2cb6646e3ad91ec6dcf6d4bc6ab392202",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/575720c2cb6646e3ad91ec6dcf6d4bc6ab392202",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/575720c2cb6646e3ad91ec6dcf6d4bc6ab392202",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/575720c2cb6646e3ad91ec6dcf6d4bc6ab392202/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d061f5e2882c58db4ccfcfe0e991ca43a890732b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d061f5e2882c58db4ccfcfe0e991ca43a890732b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d061f5e2882c58db4ccfcfe0e991ca43a890732b"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 4,
      "deletions": 1
    },
    "files": [
      {
        "sha": "cd43cb4fc0e9de89b2cad22171fb951cd2805ee0",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/575720c2cb6646e3ad91ec6dcf6d4bc6ab392202/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/575720c2cb6646e3ad91ec6dcf6d4bc6ab392202/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=575720c2cb6646e3ad91ec6dcf6d4bc6ab392202",
        "patch": "@@ -4179,7 +4179,10 @@ bool RewindBlockIndex(const CChainParams& params) {\n }\n \n void CChainState::UnloadBlockIndex() {\n-    nBlockSequenceId = 1;\n+    {\n+        LOCK(cs_nBlockSequenceId);\n+        nBlockSequenceId = 1;\n+    }\n     m_failed_blocks.clear();\n     setBlockIndexCandidates.clear();\n }"
      }
    ]
  }
]