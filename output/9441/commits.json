[
  {
    "sha": "53ad9a133a53feb35e31698720cec69c14f56dc1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1M2FkOWExMzNhNTNmZWIzNWUzMTY5ODcyMGNlYzY5YzE0ZjU2ZGMx",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2016-12-31T07:05:05Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2017-01-04T14:29:14Z"
      },
      "message": "net: fix typo causing the wrong receive buffer size\n\nSurprisingly this hasn't been causing me any issues while testing, probably\nbecause it requires lots of large blocks to be flying around.\n\nSend/Recv corks need tests!",
      "tree": {
        "sha": "4bd8689feeced78e4a8166a7553dda1f361b7662",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4bd8689feeced78e4a8166a7553dda1f361b7662"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/53ad9a133a53feb35e31698720cec69c14f56dc1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/53ad9a133a53feb35e31698720cec69c14f56dc1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/53ad9a133a53feb35e31698720cec69c14f56dc1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/53ad9a133a53feb35e31698720cec69c14f56dc1/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5bc3b6cede8dabdf3f4f27ddb03723cbb7cde51a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5bc3b6cede8dabdf3f4f27ddb03723cbb7cde51a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5bc3b6cede8dabdf3f4f27ddb03723cbb7cde51a"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "e7c7cf011c19e101c81ae4be4fe39bf6260447b8",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/53ad9a133a53feb35e31698720cec69c14f56dc1/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/53ad9a133a53feb35e31698720cec69c14f56dc1/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=53ad9a133a53feb35e31698720cec69c14f56dc1",
        "patch": "@@ -2102,7 +2102,7 @@ bool CConnman::Start(CScheduler& scheduler, std::string& strNodeError, Options c\n     nMaxFeeler = connOptions.nMaxFeeler;\n \n     nSendBufferMaxSize = connOptions.nSendBufferMaxSize;\n-    nReceiveFloodSize = connOptions.nSendBufferMaxSize;\n+    nReceiveFloodSize = connOptions.nReceiveFloodSize;\n \n     nMaxOutboundLimit = connOptions.nMaxOutboundLimit;\n     nMaxOutboundTimeframe = connOptions.nMaxOutboundTimeframe;"
      }
    ]
  },
  {
    "sha": "e5bcd9c84fd3107321ff6dbdef067ba03f2b43cb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNWJjZDljODRmZDMxMDczMjFmZjZkYmRlZjA2N2JhMDNmMmI0M2Ni",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2016-12-31T07:05:07Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2017-01-04T14:29:14Z"
      },
      "message": "net: make vRecvMsg a list so that we can use splice()",
      "tree": {
        "sha": "d13ceab3c2c02ea4a22ec8dc10c5f9d92be0808f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d13ceab3c2c02ea4a22ec8dc10c5f9d92be0808f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e5bcd9c84fd3107321ff6dbdef067ba03f2b43cb",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e5bcd9c84fd3107321ff6dbdef067ba03f2b43cb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e5bcd9c84fd3107321ff6dbdef067ba03f2b43cb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e5bcd9c84fd3107321ff6dbdef067ba03f2b43cb/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "53ad9a133a53feb35e31698720cec69c14f56dc1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/53ad9a133a53feb35e31698720cec69c14f56dc1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/53ad9a133a53feb35e31698720cec69c14f56dc1"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "3478d04a7ef223a62146ee45c7d7c68583ca85b8",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e5bcd9c84fd3107321ff6dbdef067ba03f2b43cb/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e5bcd9c84fd3107321ff6dbdef067ba03f2b43cb/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=e5bcd9c84fd3107321ff6dbdef067ba03f2b43cb",
        "patch": "@@ -1859,7 +1859,7 @@ void CConnman::ThreadMessageHandler()\n \n                     if (pnode->nSendSize < GetSendBufferSize())\n                     {\n-                        if (!pnode->vRecvGetData.empty() || (!pnode->vRecvMsg.empty() && pnode->vRecvMsg[0].complete()))\n+                        if (!pnode->vRecvGetData.empty() || (!pnode->vRecvMsg.empty() && pnode->vRecvMsg.front().complete()))\n                         {\n                             fSleep = false;\n                         }"
      },
      {
        "sha": "f346b07357a1d3580b2a44bd02e89302fff17ace",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e5bcd9c84fd3107321ff6dbdef067ba03f2b43cb/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e5bcd9c84fd3107321ff6dbdef067ba03f2b43cb/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=e5bcd9c84fd3107321ff6dbdef067ba03f2b43cb",
        "patch": "@@ -605,7 +605,7 @@ class CNode\n     CCriticalSection cs_vSend;\n \n     std::deque<CInv> vRecvGetData;\n-    std::deque<CNetMessage> vRecvMsg;\n+    std::list<CNetMessage> vRecvMsg;\n     CCriticalSection cs_vRecvMsg;\n     uint64_t nRecvBytes;\n     int nRecvVersion;"
      },
      {
        "sha": "f53a4b26364c8cc1538784ec3fe113acba526e3f",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e5bcd9c84fd3107321ff6dbdef067ba03f2b43cb/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e5bcd9c84fd3107321ff6dbdef067ba03f2b43cb/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=e5bcd9c84fd3107321ff6dbdef067ba03f2b43cb",
        "patch": "@@ -2471,7 +2471,7 @@ bool ProcessMessages(CNode* pfrom, CConnman& connman, std::atomic<bool>& interru\n     // this maintains the order of responses\n     if (!pfrom->vRecvGetData.empty()) return fOk;\n \n-    std::deque<CNetMessage>::iterator it = pfrom->vRecvMsg.begin();\n+    auto it = pfrom->vRecvMsg.begin();\n     while (!pfrom->fDisconnect && it != pfrom->vRecvMsg.end()) {\n         // Don't bother if send buffer is too full to respond anyway\n         if (pfrom->nSendSize >= nMaxSendBufferSize)"
      }
    ]
  },
  {
    "sha": "5b4a8ac6d6b4d8e17b448f2b4927025fb352f7af",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1YjRhOGFjNmQ2YjRkOGUxN2I0NDhmMmI0OTI3MDI1ZmIzNTJmN2Fm",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2016-12-31T07:05:09Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2017-01-04T14:29:14Z"
      },
      "message": "net: make GetReceiveFloodSize public\n\nThis will be needed so that the message processor can cork incoming messages",
      "tree": {
        "sha": "604fcf4cf30779e23783c3e57fe19754226af0e0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/604fcf4cf30779e23783c3e57fe19754226af0e0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5b4a8ac6d6b4d8e17b448f2b4927025fb352f7af",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5b4a8ac6d6b4d8e17b448f2b4927025fb352f7af",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5b4a8ac6d6b4d8e17b448f2b4927025fb352f7af",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5b4a8ac6d6b4d8e17b448f2b4927025fb352f7af/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e5bcd9c84fd3107321ff6dbdef067ba03f2b43cb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e5bcd9c84fd3107321ff6dbdef067ba03f2b43cb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e5bcd9c84fd3107321ff6dbdef067ba03f2b43cb"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 1,
      "deletions": 2
    },
    "files": [
      {
        "sha": "a11165c7e37ffbdb3c4c21f2842705c6c4adaee6",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5b4a8ac6d6b4d8e17b448f2b4927025fb352f7af/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5b4a8ac6d6b4d8e17b448f2b4927025fb352f7af/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=5b4a8ac6d6b4d8e17b448f2b4927025fb352f7af",
        "patch": "@@ -324,6 +324,7 @@ class CConnman\n     /** Get a unique deterministic randomizer. */\n     CSipHasher GetDeterministicRandomizer(uint64_t id);\n \n+    unsigned int GetReceiveFloodSize() const;\n private:\n     struct ListenSocket {\n         SOCKET socket;\n@@ -365,8 +366,6 @@ class CConnman\n     void DumpData();\n     void DumpBanlist();\n \n-    unsigned int GetReceiveFloodSize() const;\n-\n     // Network stats\n     void RecordBytesRecv(uint64_t bytes);\n     void RecordBytesSent(uint64_t bytes);"
      }
    ]
  },
  {
    "sha": "f6315e07f9383f3f43e37ada0d6a835810d610b9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmNjMxNWUwN2Y5MzgzZjNmNDNlMzdhZGEwZDZhODM1ODEwZDYxMGI5",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2016-12-31T07:05:11Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2017-01-04T14:29:14Z"
      },
      "message": "net: only disconnect if fDisconnect has been set\n\nThese conditions are problematic to check without locking, and we shouldn't be\nrelying on the refcount to disconnect.",
      "tree": {
        "sha": "86bc02305e6139563197f2bb120172767465bb2c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/86bc02305e6139563197f2bb120172767465bb2c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f6315e07f9383f3f43e37ada0d6a835810d610b9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f6315e07f9383f3f43e37ada0d6a835810d610b9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f6315e07f9383f3f43e37ada0d6a835810d610b9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f6315e07f9383f3f43e37ada0d6a835810d610b9/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5b4a8ac6d6b4d8e17b448f2b4927025fb352f7af",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5b4a8ac6d6b4d8e17b448f2b4927025fb352f7af",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5b4a8ac6d6b4d8e17b448f2b4927025fb352f7af"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 1,
      "deletions": 2
    },
    "files": [
      {
        "sha": "65f1c62ad6f4cee595cde8826f58cd6ac696b5f4",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f6315e07f9383f3f43e37ada0d6a835810d610b9/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f6315e07f9383f3f43e37ada0d6a835810d610b9/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=f6315e07f9383f3f43e37ada0d6a835810d610b9",
        "patch": "@@ -1051,8 +1051,7 @@ void CConnman::ThreadSocketHandler()\n             std::vector<CNode*> vNodesCopy = vNodes;\n             BOOST_FOREACH(CNode* pnode, vNodesCopy)\n             {\n-                if (pnode->fDisconnect ||\n-                    (pnode->GetRefCount() <= 0 && pnode->vRecvMsg.empty() && pnode->nSendSize == 0))\n+                if (pnode->fDisconnect)\n                 {\n                     // remove from vNodes\n                     vNodes.erase(remove(vNodes.begin(), vNodes.end(), pnode), vNodes.end());"
      }
    ]
  },
  {
    "sha": "60425870d78cf2bef1fce926ad53f51166c6a3f0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2MDQyNTg3MGQ3OGNmMmJlZjFmY2U5MjZhZDUzZjUxMTY2YzZhM2Yw",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2016-12-31T07:05:13Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2017-01-04T14:29:14Z"
      },
      "message": "net: wait until the node is destroyed to delete its recv buffer\n\nwhen vRecvMsg becomes a private buffer, it won't make sense to allow other\nthreads to mess with it anymore.",
      "tree": {
        "sha": "6e41ca4685b242752a777bcfc64f49b30cff96d8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6e41ca4685b242752a777bcfc64f49b30cff96d8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/60425870d78cf2bef1fce926ad53f51166c6a3f0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/60425870d78cf2bef1fce926ad53f51166c6a3f0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/60425870d78cf2bef1fce926ad53f51166c6a3f0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/60425870d78cf2bef1fce926ad53f51166c6a3f0/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f6315e07f9383f3f43e37ada0d6a835810d610b9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f6315e07f9383f3f43e37ada0d6a835810d610b9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f6315e07f9383f3f43e37ada0d6a835810d610b9"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 0,
      "deletions": 5
    },
    "files": [
      {
        "sha": "9ce7475bc52e5e68af2b2fe9acf1eda672ccea76",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/60425870d78cf2bef1fce926ad53f51166c6a3f0/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/60425870d78cf2bef1fce926ad53f51166c6a3f0/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=60425870d78cf2bef1fce926ad53f51166c6a3f0",
        "patch": "@@ -437,11 +437,6 @@ void CNode::CloseSocketDisconnect()\n         LogPrint(\"net\", \"disconnecting peer=%d\\n\", id);\n         CloseSocket(hSocket);\n     }\n-\n-    // in case this fails, we'll empty the recv buffer when the CNode is deleted\n-    TRY_LOCK(cs_vRecvMsg, lockRecv);\n-    if (lockRecv)\n-        vRecvMsg.clear();\n }\n \n void CConnman::ClearBanned()"
      }
    ]
  },
  {
    "sha": "0e973d970a2114c11f4a95f09721d977da7f0a94",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowZTk3M2Q5NzBhMjExNGMxMWY0YTk1ZjA5NzIxZDk3N2RhN2YwYTk0",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2017-01-04T14:32:29Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2017-01-04T15:10:35Z"
      },
      "message": "net: remove redundant max sendbuffer size check\n\nThis is left-over from before there was proper accounting. Hitting 2x the\nsendbuffer size should not be possible.",
      "tree": {
        "sha": "022ac7793bd8263b6ffed1384991931ac5a764d4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/022ac7793bd8263b6ffed1384991931ac5a764d4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0e973d970a2114c11f4a95f09721d977da7f0a94",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0e973d970a2114c11f4a95f09721d977da7f0a94",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0e973d970a2114c11f4a95f09721d977da7f0a94",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0e973d970a2114c11f4a95f09721d977da7f0a94/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "60425870d78cf2bef1fce926ad53f51166c6a3f0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/60425870d78cf2bef1fce926ad53f51166c6a3f0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/60425870d78cf2bef1fce926ad53f51166c6a3f0"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 0,
      "deletions": 7
    },
    "files": [
      {
        "sha": "3d38995c50419cf60787e3c59a4077d90b7cc3a1",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 7,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e973d970a2114c11f4a95f09721d977da7f0a94/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e973d970a2114c11f4a95f09721d977da7f0a94/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=0e973d970a2114c11f4a95f09721d977da7f0a94",
        "patch": "@@ -1059,8 +1059,6 @@ uint32_t GetFetchFlags(CNode* pfrom, CBlockIndex* pprev, const Consensus::Params\n \n bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv, int64_t nTimeReceived, const CChainParams& chainparams, CConnman& connman, std::atomic<bool>& interruptMsgProc)\n {\n-    unsigned int nMaxSendBufferSize = connman.GetSendBufferSize();\n-\n     LogPrint(\"net\", \"received: %s (%u bytes) peer=%d\\n\", SanitizeString(strCommand), vRecv.size(), pfrom->id);\n     if (IsArgSet(\"-dropmessagestest\") && GetRand(GetArg(\"-dropmessagestest\", 0)) == 0)\n     {\n@@ -1413,11 +1411,6 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n \n             // Track requests for our stuff\n             GetMainSignals().Inventory(inv.hash);\n-\n-            if (pfrom->nSendSize > (nMaxSendBufferSize * 2)) {\n-                Misbehaving(pfrom->GetId(), 50);\n-                return error(\"send buffer size() = %u\", pfrom->nSendSize);\n-            }\n         }\n \n         if (!vToFetch.empty())"
      }
    ]
  },
  {
    "sha": "56212e20acf1534d443cb910c9bf3a30f84d0f02",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NjIxMmUyMGFjZjE1MzRkNDQzY2I5MTBjOWJmM2EzMGY4NGQwZjAy",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2016-12-31T07:05:15Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2017-01-04T15:10:35Z"
      },
      "message": "net: set message deserialization version when it's actually time to deserialize\n\nWe'll soon no longer have access to vRecvMsg, and this is more intuitive anyway.",
      "tree": {
        "sha": "5c67422a02655f9c919571ac7f07823fddc35f97",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5c67422a02655f9c919571ac7f07823fddc35f97"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/56212e20acf1534d443cb910c9bf3a30f84d0f02",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/56212e20acf1534d443cb910c9bf3a30f84d0f02",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/56212e20acf1534d443cb910c9bf3a30f84d0f02",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/56212e20acf1534d443cb910c9bf3a30f84d0f02/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0e973d970a2114c11f4a95f09721d977da7f0a94",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0e973d970a2114c11f4a95f09721d977da7f0a94",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0e973d970a2114c11f4a95f09721d977da7f0a94"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 7,
      "deletions": 5
    },
    "files": [
      {
        "sha": "6d9971a0f1536a01d0775a54d9adb7e53efb5e64",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/56212e20acf1534d443cb910c9bf3a30f84d0f02/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/56212e20acf1534d443cb910c9bf3a30f84d0f02/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=56212e20acf1534d443cb910c9bf3a30f84d0f02",
        "patch": "@@ -653,7 +653,7 @@ bool CNode::ReceiveMsgBytes(const char *pch, unsigned int nBytes, bool& complete\n         // get current incomplete message, or create a new one\n         if (vRecvMsg.empty() ||\n             vRecvMsg.back().complete())\n-            vRecvMsg.push_back(CNetMessage(Params().MessageStart(), SER_NETWORK, nRecvVersion));\n+            vRecvMsg.push_back(CNetMessage(Params().MessageStart(), SER_NETWORK, INIT_PROTO_VERSION));\n \n         CNetMessage& msg = vRecvMsg.back();\n "
      },
      {
        "sha": "6c12171bf287935f4073350adf9d666dfb62636d",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/56212e20acf1534d443cb910c9bf3a30f84d0f02/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/56212e20acf1534d443cb910c9bf3a30f84d0f02/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=56212e20acf1534d443cb910c9bf3a30f84d0f02",
        "patch": "@@ -607,7 +607,7 @@ class CNode\n     std::list<CNetMessage> vRecvMsg;\n     CCriticalSection cs_vRecvMsg;\n     uint64_t nRecvBytes;\n-    int nRecvVersion;\n+    std::atomic<int> nRecvVersion;\n \n     int64_t nLastSend;\n     int64_t nLastRecv;\n@@ -747,12 +747,13 @@ class CNode\n     // requires LOCK(cs_vRecvMsg)\n     bool ReceiveMsgBytes(const char *pch, unsigned int nBytes, bool& complete);\n \n-    // requires LOCK(cs_vRecvMsg)\n     void SetRecvVersion(int nVersionIn)\n     {\n         nRecvVersion = nVersionIn;\n-        BOOST_FOREACH(CNetMessage &msg, vRecvMsg)\n-            msg.SetVersion(nVersionIn);\n+    }\n+    int GetRecvVersion()\n+    {\n+        return nRecvVersion;\n     }\n     void SetSendVersion(int nVersionIn)\n     {"
      },
      {
        "sha": "556975d1425720d8ff7bd840350d6554aca28245",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/56212e20acf1534d443cb910c9bf3a30f84d0f02/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/56212e20acf1534d443cb910c9bf3a30f84d0f02/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=56212e20acf1534d443cb910c9bf3a30f84d0f02",
        "patch": "@@ -2485,6 +2485,7 @@ bool ProcessMessages(CNode* pfrom, CConnman& connman, std::atomic<bool>& interru\n         // at this point, any failure means we can delete the current message\n         it++;\n \n+        msg.SetVersion(pfrom->GetRecvVersion());\n         // Scan for message start\n         if (memcmp(msg.hdr.pchMessageStart, chainparams.MessageStart(), CMessageHeader::MESSAGE_START_SIZE) != 0) {\n             LogPrintf(\"PROCESSMESSAGE: INVALID MESSAGESTART %s peer=%d\\n\", SanitizeString(msg.hdr.GetCommand()), pfrom->id);"
      }
    ]
  },
  {
    "sha": "60befa3997b98d3f913010f2621bec734f643526",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2MGJlZmEzOTk3Yjk4ZDNmOTEzMDEwZjI2MjFiZWM3MzRmNjQzNTI2",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2016-12-31T07:05:17Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2017-01-13T04:05:09Z"
      },
      "message": "net: handle message accounting in ReceiveMsgBytes\n\nThis allows locking to be pushed down to only where it's needed\n\nAlso reuse the current time rather than checking multiple times.",
      "tree": {
        "sha": "0fc70214f870118c3363ce5c27dd0ff679664ee7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0fc70214f870118c3363ce5c27dd0ff679664ee7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/60befa3997b98d3f913010f2621bec734f643526",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/60befa3997b98d3f913010f2621bec734f643526",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/60befa3997b98d3f913010f2621bec734f643526",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/60befa3997b98d3f913010f2621bec734f643526/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "56212e20acf1534d443cb910c9bf3a30f84d0f02",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/56212e20acf1534d443cb910c9bf3a30f84d0f02",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/56212e20acf1534d443cb910c9bf3a30f84d0f02"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 4,
      "deletions": 3
    },
    "files": [
      {
        "sha": "776047171f677f50ec65ae6b45af1828db9c499f",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/60befa3997b98d3f913010f2621bec734f643526/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/60befa3997b98d3f913010f2621bec734f643526/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=60befa3997b98d3f913010f2621bec734f643526",
        "patch": "@@ -648,6 +648,9 @@ void CNode::copyStats(CNodeStats &stats)\n bool CNode::ReceiveMsgBytes(const char *pch, unsigned int nBytes, bool& complete)\n {\n     complete = false;\n+    int64_t nTimeMicros = GetTimeMicros();\n+    nLastRecv = nTimeMicros / 1000000;\n+    nRecvBytes += nBytes;\n     while (nBytes > 0) {\n \n         // get current incomplete message, or create a new one\n@@ -685,7 +688,7 @@ bool CNode::ReceiveMsgBytes(const char *pch, unsigned int nBytes, bool& complete\n             assert(i != mapRecvBytesPerMsgCmd.end());\n             i->second += msg.hdr.nMessageSize + CMessageHeader::HEADER_SIZE;\n \n-            msg.nTime = GetTimeMicros();\n+            msg.nTime = nTimeMicros;\n             complete = true;\n         }\n     }\n@@ -1237,8 +1240,6 @@ void CConnman::ThreadSocketHandler()\n                                 pnode->CloseSocketDisconnect();\n                             if(notify)\n                                 condMsgProc.notify_one();\n-                            pnode->nLastRecv = GetTime();\n-                            pnode->nRecvBytes += nBytes;\n                             RecordBytesRecv(nBytes);\n                         }\n                         else if (nBytes == 0)"
      }
    ]
  },
  {
    "sha": "f5c36d19b636f01cc24417bc2b2f5b226ff3dd2c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmNWMzNmQxOWI2MzZmMDFjYzI0NDE3YmMyYjJmNWIyMjZmZjNkZDJj",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2016-12-31T07:05:19Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2017-01-13T04:05:09Z"
      },
      "message": "net: record bytes written before notifying the message processor",
      "tree": {
        "sha": "c3b0cb11b71a23bd4440b0bafc2c657ec9b3565f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c3b0cb11b71a23bd4440b0bafc2c657ec9b3565f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f5c36d19b636f01cc24417bc2b2f5b226ff3dd2c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f5c36d19b636f01cc24417bc2b2f5b226ff3dd2c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f5c36d19b636f01cc24417bc2b2f5b226ff3dd2c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f5c36d19b636f01cc24417bc2b2f5b226ff3dd2c/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "60befa3997b98d3f913010f2621bec734f643526",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/60befa3997b98d3f913010f2621bec734f643526",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/60befa3997b98d3f913010f2621bec734f643526"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "312a6e09404386bfa25144ca2fdbcdee08be8b24",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f5c36d19b636f01cc24417bc2b2f5b226ff3dd2c/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f5c36d19b636f01cc24417bc2b2f5b226ff3dd2c/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=f5c36d19b636f01cc24417bc2b2f5b226ff3dd2c",
        "patch": "@@ -1238,9 +1238,9 @@ void CConnman::ThreadSocketHandler()\n                             bool notify = false;\n                             if (!pnode->ReceiveMsgBytes(pchBuf, nBytes, notify))\n                                 pnode->CloseSocketDisconnect();\n+                            RecordBytesRecv(nBytes);\n                             if(notify)\n                                 condMsgProc.notify_one();\n-                            RecordBytesRecv(nBytes);\n                         }\n                         else if (nBytes == 0)\n                         {"
      }
    ]
  },
  {
    "sha": "ef7b5ecbb73e9fd3670494c99cfc13ccf3574170",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplZjdiNWVjYmI3M2U5ZmQzNjcwNDk0Yzk5Y2ZjMTNjY2YzNTc0MTcw",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2016-12-31T07:05:21Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2017-01-13T04:05:09Z"
      },
      "message": "net: Add a simple function for waking the message handler\n\nThis may be used publicly in the future",
      "tree": {
        "sha": "9976c03d3c259e0b24a1313453b806c674049655",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9976c03d3c259e0b24a1313453b806c674049655"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ef7b5ecbb73e9fd3670494c99cfc13ccf3574170",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ef7b5ecbb73e9fd3670494c99cfc13ccf3574170",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ef7b5ecbb73e9fd3670494c99cfc13ccf3574170",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ef7b5ecbb73e9fd3670494c99cfc13ccf3574170/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f5c36d19b636f01cc24417bc2b2f5b226ff3dd2c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f5c36d19b636f01cc24417bc2b2f5b226ff3dd2c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f5c36d19b636f01cc24417bc2b2f5b226ff3dd2c"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 8,
      "deletions": 4
    },
    "files": [
      {
        "sha": "36db77abb6199408d79c25740d6fc488055b0977",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 4,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef7b5ecbb73e9fd3670494c99cfc13ccf3574170/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef7b5ecbb73e9fd3670494c99cfc13ccf3574170/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=ef7b5ecbb73e9fd3670494c99cfc13ccf3574170",
        "patch": "@@ -1239,8 +1239,8 @@ void CConnman::ThreadSocketHandler()\n                             if (!pnode->ReceiveMsgBytes(pchBuf, nBytes, notify))\n                                 pnode->CloseSocketDisconnect();\n                             RecordBytesRecv(nBytes);\n-                            if(notify)\n-                                condMsgProc.notify_one();\n+                            if (notify)\n+                                WakeMessageHandler();\n                         }\n                         else if (nBytes == 0)\n                         {\n@@ -1315,8 +1315,10 @@ void CConnman::ThreadSocketHandler()\n     }\n }\n \n-\n-\n+void CConnman::WakeMessageHandler()\n+{\n+    condMsgProc.notify_one();\n+}\n \n \n "
      },
      {
        "sha": "cc79cce8521df1277daabb0c0a9b1720b1b3d5dc",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef7b5ecbb73e9fd3670494c99cfc13ccf3574170/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef7b5ecbb73e9fd3670494c99cfc13ccf3574170/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=ef7b5ecbb73e9fd3670494c99cfc13ccf3574170",
        "patch": "@@ -341,6 +341,8 @@ class CConnman\n     void ThreadSocketHandler();\n     void ThreadDNSAddressSeed();\n \n+    void WakeMessageHandler();\n+\n     uint64_t CalculateKeyedNetGroup(const CAddress& ad);\n \n     CNode* FindNode(const CNetAddr& ip);"
      }
    ]
  },
  {
    "sha": "c72cc88ed39652e44b5be48e9455f6f395bd7e83",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNzJjYzg4ZWQzOTY1MmU0NGI1YmU0OGU5NDU1ZjZmMzk1YmQ3ZTgz",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2016-12-31T07:05:23Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2017-01-13T04:05:09Z"
      },
      "message": "net: remove useless comments",
      "tree": {
        "sha": "740e0319a821c76450643f771b4369641ecbe8c2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/740e0319a821c76450643f771b4369641ecbe8c2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c72cc88ed39652e44b5be48e9455f6f395bd7e83",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c72cc88ed39652e44b5be48e9455f6f395bd7e83",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c72cc88ed39652e44b5be48e9455f6f395bd7e83",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c72cc88ed39652e44b5be48e9455f6f395bd7e83/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ef7b5ecbb73e9fd3670494c99cfc13ccf3574170",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ef7b5ecbb73e9fd3670494c99cfc13ccf3574170",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ef7b5ecbb73e9fd3670494c99cfc13ccf3574170"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 0,
      "deletions": 8
    },
    "files": [
      {
        "sha": "43a97ff71864d5b1bc8c786accf7fce3a1b74af8",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 8,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c72cc88ed39652e44b5be48e9455f6f395bd7e83/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c72cc88ed39652e44b5be48e9455f6f395bd7e83/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=c72cc88ed39652e44b5be48e9455f6f395bd7e83",
        "patch": "@@ -2445,9 +2445,6 @@ bool ProcessMessages(CNode* pfrom, CConnman& connman, std::atomic<bool>& interru\n {\n     const CChainParams& chainparams = Params();\n     unsigned int nMaxSendBufferSize = connman.GetSendBufferSize();\n-    //if (fDebug)\n-    //    LogPrintf(\"%s(%u messages)\\n\", __func__, pfrom->vRecvMsg.size());\n-\n     //\n     // Message format\n     //  (4) message start\n@@ -2473,11 +2470,6 @@ bool ProcessMessages(CNode* pfrom, CConnman& connman, std::atomic<bool>& interru\n         // get next message\n         CNetMessage& msg = *it;\n \n-        //if (fDebug)\n-        //    LogPrintf(\"%s(message %u msgsz, %u bytes, complete:%s)\\n\", __func__,\n-        //            msg.hdr.nMessageSize, msg.vRecv.size(),\n-        //            msg.complete() ? \"Y\" : \"N\");\n-\n         // end, if an incomplete message is found\n         if (!msg.complete())\n             break;"
      }
    ]
  },
  {
    "sha": "c5a8b1b946b1ab0bb82bd4270b2a40f5731abcff",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNWE4YjFiOTQ2YjFhYjBiYjgyYmQ0MjcwYjJhNDBmNTczMWFiY2Zm",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2016-12-31T07:05:26Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2017-01-13T04:05:24Z"
      },
      "message": "net: rework the way that the messagehandler sleeps\n\nIn order to sleep accurately, the message handler needs to know if _any_ node\nhas more processing that it should do before the entire thread sleeps.\n\nRather than returning a value that represents whether ProcessMessages\nencountered a message that should trigger a disconnnect, interpret the return\nvalue as whether or not that node has more work to do.\n\nAlso, use a global fProcessWake value that can be set by other threads,\nwhich takes precedence (for one cycle) over the messagehandler's decision.\n\nNote that the previous behavior was to only process one message per loop\n(except in the case of a bad checksum or invalid header). That was changed in\nPR #3180.\n\nThe only change here in that regard is that the current node now falls to the\nback of the processing queue for the bad checksum/invalid header cases.",
      "tree": {
        "sha": "a1ee1e54db0ae10d0641c2a6c1ff5189125cb681",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a1ee1e54db0ae10d0641c2a6c1ff5189125cb681"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c5a8b1b946b1ab0bb82bd4270b2a40f5731abcff",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c5a8b1b946b1ab0bb82bd4270b2a40f5731abcff",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c5a8b1b946b1ab0bb82bd4270b2a40f5731abcff",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c5a8b1b946b1ab0bb82bd4270b2a40f5731abcff/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c72cc88ed39652e44b5be48e9455f6f395bd7e83",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c72cc88ed39652e44b5be48e9455f6f395bd7e83",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c72cc88ed39652e44b5be48e9455f6f395bd7e83"
      }
    ],
    "stats": {
      "total": 82,
      "additions": 45,
      "deletions": 37
    },
    "files": [
      {
        "sha": "947f0167982387216df68f9e8ff5a7100b5d1f61",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 14,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c5a8b1b946b1ab0bb82bd4270b2a40f5731abcff/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c5a8b1b946b1ab0bb82bd4270b2a40f5731abcff/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=c5a8b1b946b1ab0bb82bd4270b2a40f5731abcff",
        "patch": "@@ -1317,6 +1317,10 @@ void CConnman::ThreadSocketHandler()\n \n void CConnman::WakeMessageHandler()\n {\n+    {\n+        std::lock_guard<std::mutex> lock(mutexMsgProc);\n+        fMsgProcWake = true;\n+    }\n     condMsgProc.notify_one();\n }\n \n@@ -1839,7 +1843,7 @@ void CConnman::ThreadMessageHandler()\n             }\n         }\n \n-        bool fSleep = true;\n+        bool fMoreWork = false;\n \n         BOOST_FOREACH(CNode* pnode, vNodesCopy)\n         {\n@@ -1851,16 +1855,8 @@ void CConnman::ThreadMessageHandler()\n                 TRY_LOCK(pnode->cs_vRecvMsg, lockRecv);\n                 if (lockRecv)\n                 {\n-                    if (!GetNodeSignals().ProcessMessages(pnode, *this, flagInterruptMsgProc))\n-                        pnode->CloseSocketDisconnect();\n-\n-                    if (pnode->nSendSize < GetSendBufferSize())\n-                    {\n-                        if (!pnode->vRecvGetData.empty() || (!pnode->vRecvMsg.empty() && pnode->vRecvMsg.front().complete()))\n-                        {\n-                            fSleep = false;\n-                        }\n-                    }\n+                    bool fMoreNodeWork = GetNodeSignals().ProcessMessages(pnode, *this, flagInterruptMsgProc);\n+                    fMoreWork |= (fMoreNodeWork && pnode->nSendSize < GetSendBufferSize());\n                 }\n             }\n             if (flagInterruptMsgProc)\n@@ -1882,10 +1878,11 @@ void CConnman::ThreadMessageHandler()\n                 pnode->Release();\n         }\n \n-        if (fSleep) {\n-            std::unique_lock<std::mutex> lock(mutexMsgProc);\n-            condMsgProc.wait_until(lock, std::chrono::steady_clock::now() + std::chrono::milliseconds(100));\n+        std::unique_lock<std::mutex> lock(mutexMsgProc);\n+        if (!fMoreWork) {\n+            condMsgProc.wait_until(lock, std::chrono::steady_clock::now() + std::chrono::milliseconds(100), [this] { return fMsgProcWake; });\n         }\n+        fMsgProcWake = false;\n     }\n }\n \n@@ -2156,6 +2153,11 @@ bool CConnman::Start(CScheduler& scheduler, std::string& strNodeError, Options c\n     interruptNet.reset();\n     flagInterruptMsgProc = false;\n \n+    {\n+        std::unique_lock<std::mutex> lock(mutexMsgProc);\n+        fMsgProcWake = false;\n+    }\n+\n     // Send and receive from sockets, accept connections\n     threadSocketHandler = std::thread(&TraceThread<std::function<void()> >, \"net\", std::function<void()>(std::bind(&CConnman::ThreadSocketHandler, this)));\n "
      },
      {
        "sha": "4fc41bddac602083f73b872101ba0a64f3c78581",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c5a8b1b946b1ab0bb82bd4270b2a40f5731abcff/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c5a8b1b946b1ab0bb82bd4270b2a40f5731abcff/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=c5a8b1b946b1ab0bb82bd4270b2a40f5731abcff",
        "patch": "@@ -424,6 +424,9 @@ class CConnman\n     /** SipHasher seeds for deterministic randomness */\n     const uint64_t nSeed0, nSeed1;\n \n+    /** flag for waking the message processor. */\n+    bool fMsgProcWake;\n+\n     std::condition_variable condMsgProc;\n     std::mutex mutexMsgProc;\n     std::atomic<bool> flagInterruptMsgProc;"
      },
      {
        "sha": "605e142e8d68ab3e6a7cde23b3c85d63b5ecce38",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 25,
        "deletions": 23,
        "changes": 48,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c5a8b1b946b1ab0bb82bd4270b2a40f5731abcff/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c5a8b1b946b1ab0bb82bd4270b2a40f5731abcff/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=c5a8b1b946b1ab0bb82bd4270b2a40f5731abcff",
        "patch": "@@ -2453,44 +2453,51 @@ bool ProcessMessages(CNode* pfrom, CConnman& connman, std::atomic<bool>& interru\n     //  (4) checksum\n     //  (x) data\n     //\n-    bool fOk = true;\n+    bool fMoreWork = false;\n \n     if (!pfrom->vRecvGetData.empty())\n         ProcessGetData(pfrom, chainparams.GetConsensus(), connman, interruptMsgProc);\n \n+    if (pfrom->fDisconnect)\n+        return false;\n+\n     // this maintains the order of responses\n-    if (!pfrom->vRecvGetData.empty()) return fOk;\n+    if (!pfrom->vRecvGetData.empty()) return true;\n \n-    auto it = pfrom->vRecvMsg.begin();\n-    while (!pfrom->fDisconnect && it != pfrom->vRecvMsg.end()) {\n         // Don't bother if send buffer is too full to respond anyway\n         if (pfrom->nSendSize >= nMaxSendBufferSize)\n-            break;\n+            return false;\n \n-        // get next message\n-        CNetMessage& msg = *it;\n+        auto it = pfrom->vRecvMsg.begin();\n+        if (it == pfrom->vRecvMsg.end())\n+            return false;\n \n         // end, if an incomplete message is found\n-        if (!msg.complete())\n-            break;\n+        if (!it->complete())\n+            return false;\n+\n+        // get next message\n+        CNetMessage msg = std::move(*it);\n \n         // at this point, any failure means we can delete the current message\n-        it++;\n+        pfrom->vRecvMsg.erase(pfrom->vRecvMsg.begin());\n+\n+        fMoreWork = !pfrom->vRecvMsg.empty() && pfrom->vRecvMsg.front().complete();\n \n         msg.SetVersion(pfrom->GetRecvVersion());\n         // Scan for message start\n         if (memcmp(msg.hdr.pchMessageStart, chainparams.MessageStart(), CMessageHeader::MESSAGE_START_SIZE) != 0) {\n             LogPrintf(\"PROCESSMESSAGE: INVALID MESSAGESTART %s peer=%d\\n\", SanitizeString(msg.hdr.GetCommand()), pfrom->id);\n-            fOk = false;\n-            break;\n+            pfrom->fDisconnect = true;\n+            return false;\n         }\n \n         // Read header\n         CMessageHeader& hdr = msg.hdr;\n         if (!hdr.IsValid(chainparams.MessageStart()))\n         {\n             LogPrintf(\"PROCESSMESSAGE: ERRORS IN HEADER %s peer=%d\\n\", SanitizeString(hdr.GetCommand()), pfrom->id);\n-            continue;\n+            return fMoreWork;\n         }\n         string strCommand = hdr.GetCommand();\n \n@@ -2506,7 +2513,7 @@ bool ProcessMessages(CNode* pfrom, CConnman& connman, std::atomic<bool>& interru\n                SanitizeString(strCommand), nMessageSize,\n                HexStr(hash.begin(), hash.begin()+CMessageHeader::CHECKSUM_SIZE),\n                HexStr(hdr.pchChecksum, hdr.pchChecksum+CMessageHeader::CHECKSUM_SIZE));\n-            continue;\n+            return fMoreWork;\n         }\n \n         // Process message\n@@ -2515,7 +2522,9 @@ bool ProcessMessages(CNode* pfrom, CConnman& connman, std::atomic<bool>& interru\n         {\n             fRet = ProcessMessage(pfrom, strCommand, vRecv, msg.nTime, chainparams, connman, interruptMsgProc);\n             if (interruptMsgProc)\n-                return true;\n+                return false;\n+            if (!pfrom->vRecvGetData.empty())\n+                fMoreWork = true;\n         }\n         catch (const std::ios_base::failure& e)\n         {\n@@ -2549,14 +2558,7 @@ bool ProcessMessages(CNode* pfrom, CConnman& connman, std::atomic<bool>& interru\n         if (!fRet)\n             LogPrintf(\"%s(%s, %u bytes) FAILED peer=%d\\n\", __func__, SanitizeString(strCommand), nMessageSize, pfrom->id);\n \n-        break;\n-    }\n-\n-    // In case the connection got shut down, its receive buffer was wiped\n-    if (!pfrom->fDisconnect)\n-        pfrom->vRecvMsg.erase(pfrom->vRecvMsg.begin(), it);\n-\n-    return fOk;\n+    return fMoreWork;\n }\n \n class CompareInvMempoolOrder"
      },
      {
        "sha": "1f33def1f7f2f7c6d14b6af7c23127872ada71d7",
        "filename": "src/net_processing.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c5a8b1b946b1ab0bb82bd4270b2a40f5731abcff/src/net_processing.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c5a8b1b946b1ab0bb82bd4270b2a40f5731abcff/src/net_processing.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.h?ref=c5a8b1b946b1ab0bb82bd4270b2a40f5731abcff",
        "patch": "@@ -46,6 +46,7 @@ bool ProcessMessages(CNode* pfrom, CConnman& connman, std::atomic<bool>& interru\n  * @param[in]   pto             The node which we are sending messages to.\n  * @param[in]   connman         The connection manager for that node.\n  * @param[in]   interrupt       Interrupt condition for processing threads\n+ * @return                      True if there is more work to be done\n  */\n bool SendMessages(CNode* pto, CConnman& connman, std::atomic<bool>& interrupt);\n "
      }
    ]
  },
  {
    "sha": "4d712e366ca7fffaf96394ef01c9246482c0d92e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0ZDcxMmUzNjZjYTdmZmZhZjk2Mzk0ZWYwMWM5MjQ2NDgyYzBkOTJl",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2016-12-31T07:05:28Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2017-01-13T04:05:25Z"
      },
      "message": "net: add a new message queue for the message processor\n\nThis separates the storage of messages from the net and queued messages for\nprocessing, allowing the locks to be split.",
      "tree": {
        "sha": "aa61383f6bf692c4fda2f697ad6fba3e4c199913",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/aa61383f6bf692c4fda2f697ad6fba3e4c199913"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4d712e366ca7fffaf96394ef01c9246482c0d92e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4d712e366ca7fffaf96394ef01c9246482c0d92e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4d712e366ca7fffaf96394ef01c9246482c0d92e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4d712e366ca7fffaf96394ef01c9246482c0d92e/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c5a8b1b946b1ab0bb82bd4270b2a40f5731abcff",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c5a8b1b946b1ab0bb82bd4270b2a40f5731abcff",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c5a8b1b946b1ab0bb82bd4270b2a40f5731abcff"
      }
    ],
    "stats": {
      "total": 40,
      "additions": 24,
      "deletions": 16
    },
    "files": [
      {
        "sha": "df2109e3f7211000c95d1a3fb1c336b2ea671f7f",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 1,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4d712e366ca7fffaf96394ef01c9246482c0d92e/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4d712e366ca7fffaf96394ef01c9246482c0d92e/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=4d712e366ca7fffaf96394ef01c9246482c0d92e",
        "patch": "@@ -1239,8 +1239,18 @@ void CConnman::ThreadSocketHandler()\n                             if (!pnode->ReceiveMsgBytes(pchBuf, nBytes, notify))\n                                 pnode->CloseSocketDisconnect();\n                             RecordBytesRecv(nBytes);\n-                            if (notify)\n+                            if (notify) {\n+                                auto it(pnode->vRecvMsg.begin());\n+                                for (; it != pnode->vRecvMsg.end(); ++it) {\n+                                    if (!it->complete())\n+                                        break;\n+                                }\n+                                {\n+                                    LOCK(pnode->cs_vProcessMsg);\n+                                    pnode->vProcessMsg.splice(pnode->vProcessMsg.end(), pnode->vRecvMsg, pnode->vRecvMsg.begin(), it);\n+                                }\n                                 WakeMessageHandler();\n+                            }\n                         }\n                         else if (nBytes == 0)\n                         {"
      },
      {
        "sha": "21864e73d1ff184b441911be4a94e4dca1e8074b",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4d712e366ca7fffaf96394ef01c9246482c0d92e/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4d712e366ca7fffaf96394ef01c9246482c0d92e/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=4d712e366ca7fffaf96394ef01c9246482c0d92e",
        "patch": "@@ -608,6 +608,9 @@ class CNode\n     std::deque<std::vector<unsigned char>> vSendMsg;\n     CCriticalSection cs_vSend;\n \n+    CCriticalSection cs_vProcessMsg;\n+    std::list<CNetMessage> vProcessMsg;\n+\n     std::deque<CInv> vRecvGetData;\n     std::list<CNetMessage> vRecvMsg;\n     CCriticalSection cs_vRecvMsg;"
      },
      {
        "sha": "9963a872e82ad4f4b55718282d307e89c3938cb3",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 15,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4d712e366ca7fffaf96394ef01c9246482c0d92e/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4d712e366ca7fffaf96394ef01c9246482c0d92e/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=4d712e366ca7fffaf96394ef01c9246482c0d92e",
        "patch": "@@ -2468,21 +2468,16 @@ bool ProcessMessages(CNode* pfrom, CConnman& connman, std::atomic<bool>& interru\n         if (pfrom->nSendSize >= nMaxSendBufferSize)\n             return false;\n \n-        auto it = pfrom->vRecvMsg.begin();\n-        if (it == pfrom->vRecvMsg.end())\n-            return false;\n-\n-        // end, if an incomplete message is found\n-        if (!it->complete())\n-            return false;\n-\n-        // get next message\n-        CNetMessage msg = std::move(*it);\n-\n-        // at this point, any failure means we can delete the current message\n-        pfrom->vRecvMsg.erase(pfrom->vRecvMsg.begin());\n-\n-        fMoreWork = !pfrom->vRecvMsg.empty() && pfrom->vRecvMsg.front().complete();\n+        std::list<CNetMessage> msgs;\n+        {\n+            LOCK(pfrom->cs_vProcessMsg);\n+            if (pfrom->vProcessMsg.empty())\n+                return false;\n+            // Just take one message\n+            msgs.splice(msgs.begin(), pfrom->vProcessMsg, pfrom->vProcessMsg.begin());\n+            fMoreWork = !pfrom->vProcessMsg.empty();\n+        }\n+        CNetMessage& msg(msgs.front());\n \n         msg.SetVersion(pfrom->GetRecvVersion());\n         // Scan for message start"
      }
    ]
  },
  {
    "sha": "c6e8a9bcffe4c0f236e27c663f08785d1a0a783b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNmU4YTliY2ZmZTRjMGYyMzZlMjdjNjYzZjA4Nzg1ZDFhMGE3ODNi",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2016-12-31T07:05:30Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2017-01-13T04:05:47Z"
      },
      "message": "net: add a flag to indicate when a node's process queue is full\n\nMessages are dumped very quickly from the socket handler to the processor, so\nit's the depth of the processing queue that's interesting.\n\nThe socket handler checks the process queue's size during the brief message\nhand-off and pauses if necessary, and the processor possibly unpauses each time\na message is popped off of its queue.",
      "tree": {
        "sha": "b622192961f036991f6de2ceea0d483931a78eca",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b622192961f036991f6de2ceea0d483931a78eca"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c6e8a9bcffe4c0f236e27c663f08785d1a0a783b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c6e8a9bcffe4c0f236e27c663f08785d1a0a783b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c6e8a9bcffe4c0f236e27c663f08785d1a0a783b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c6e8a9bcffe4c0f236e27c663f08785d1a0a783b/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4d712e366ca7fffaf96394ef01c9246482c0d92e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4d712e366ca7fffaf96394ef01c9246482c0d92e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4d712e366ca7fffaf96394ef01c9246482c0d92e"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 11,
      "deletions": 12
    },
    "files": [
      {
        "sha": "70c04d7a0ec82960fffbc9c9f21796c9fbd9717b",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 3,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c6e8a9bcffe4c0f236e27c663f08785d1a0a783b/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c6e8a9bcffe4c0f236e27c663f08785d1a0a783b/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=c6e8a9bcffe4c0f236e27c663f08785d1a0a783b",
        "patch": "@@ -1165,9 +1165,7 @@ void CConnman::ThreadSocketHandler()\n                 }\n                 {\n                     TRY_LOCK(pnode->cs_vRecvMsg, lockRecv);\n-                    if (lockRecv && (\n-                        pnode->vRecvMsg.empty() || !pnode->vRecvMsg.front().complete() ||\n-                        pnode->GetTotalRecvSize() <= GetReceiveFloodSize()))\n+                    if (lockRecv && !pnode->fPauseRecv)\n                         FD_SET(pnode->hSocket, &fdsetRecv);\n                 }\n             }\n@@ -1240,14 +1238,18 @@ void CConnman::ThreadSocketHandler()\n                                 pnode->CloseSocketDisconnect();\n                             RecordBytesRecv(nBytes);\n                             if (notify) {\n+                                size_t nSizeAdded = 0;\n                                 auto it(pnode->vRecvMsg.begin());\n                                 for (; it != pnode->vRecvMsg.end(); ++it) {\n                                     if (!it->complete())\n                                         break;\n+                                    nSizeAdded += it->vRecv.size() + CMessageHeader::HEADER_SIZE;\n                                 }\n                                 {\n                                     LOCK(pnode->cs_vProcessMsg);\n                                     pnode->vProcessMsg.splice(pnode->vProcessMsg.end(), pnode->vRecvMsg, pnode->vRecvMsg.begin(), it);\n+                                    pnode->nProcessQueueSize += nSizeAdded;\n+                                    pnode->fPauseRecv = pnode->nProcessQueueSize > nReceiveFloodSize;\n                                 }\n                                 WakeMessageHandler();\n                             }\n@@ -2592,6 +2594,8 @@ CNode::CNode(NodeId idIn, ServiceFlags nLocalServicesIn, int nMyStartingHeightIn\n     minFeeFilter = 0;\n     lastSentFeeFilter = 0;\n     nextSendTimeFeeFilter = 0;\n+    fPauseRecv = false;\n+    nProcessQueueSize = 0;\n \n     BOOST_FOREACH(const std::string &msg, getAllNetMessageTypes())\n         mapRecvBytesPerMsgCmd[msg] = 0;"
      },
      {
        "sha": "0eb430a8bfcb850772e16388e5f3b71584cf0145",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 2,
        "deletions": 9,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c6e8a9bcffe4c0f236e27c663f08785d1a0a783b/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c6e8a9bcffe4c0f236e27c663f08785d1a0a783b/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=c6e8a9bcffe4c0f236e27c663f08785d1a0a783b",
        "patch": "@@ -610,6 +610,7 @@ class CNode\n \n     CCriticalSection cs_vProcessMsg;\n     std::list<CNetMessage> vProcessMsg;\n+    size_t nProcessQueueSize;\n \n     std::deque<CInv> vRecvGetData;\n     std::list<CNetMessage> vRecvMsg;\n@@ -650,6 +651,7 @@ class CNode\n     const NodeId id;\n \n     const uint64_t nKeyedNetGroup;\n+    std::atomic_bool fPauseRecv;\n protected:\n \n     mapMsgCmdSize mapSendBytesPerMsgCmd;\n@@ -743,15 +745,6 @@ class CNode\n         return nRefCount;\n     }\n \n-    // requires LOCK(cs_vRecvMsg)\n-    unsigned int GetTotalRecvSize()\n-    {\n-        unsigned int total = 0;\n-        BOOST_FOREACH(const CNetMessage &msg, vRecvMsg)\n-            total += msg.vRecv.size() + 24;\n-        return total;\n-    }\n-\n     // requires LOCK(cs_vRecvMsg)\n     bool ReceiveMsgBytes(const char *pch, unsigned int nBytes, bool& complete);\n "
      },
      {
        "sha": "93b6e2ec014ec56172ab0247dea68204ff2c7d00",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c6e8a9bcffe4c0f236e27c663f08785d1a0a783b/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c6e8a9bcffe4c0f236e27c663f08785d1a0a783b/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=c6e8a9bcffe4c0f236e27c663f08785d1a0a783b",
        "patch": "@@ -2475,6 +2475,8 @@ bool ProcessMessages(CNode* pfrom, CConnman& connman, std::atomic<bool>& interru\n                 return false;\n             // Just take one message\n             msgs.splice(msgs.begin(), pfrom->vProcessMsg, pfrom->vProcessMsg.begin());\n+            pfrom->nProcessQueueSize -= msgs.front().vRecv.size() + CMessageHeader::HEADER_SIZE;\n+            pfrom->fPauseRecv = pfrom->nProcessQueueSize > connman.GetReceiveFloodSize();\n             fMoreWork = !pfrom->vProcessMsg.empty();\n         }\n         CNetMessage& msg(msgs.front());"
      }
    ]
  },
  {
    "sha": "991955ee81034dc3fbc1c2a8e60c04fc9e0b538c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5OTE5NTVlZTgxMDM0ZGMzZmJjMWMyYThlNjBjMDRmYzllMGI1Mzhj",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2016-12-31T07:05:32Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2017-01-13T04:05:59Z"
      },
      "message": "net: add a flag to indicate when a node's send buffer is full\n\nSimilar to the recv flag, but this one indicates whether or not the net's send\nbuffer is full.\n\nThe socket handler checks the send queue when a new message is added and pauses\nif necessary, and possibly unpauses after each message is drained from its buffer.",
      "tree": {
        "sha": "a624868494e3c50786df85c75b1225b6e8e8eee2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a624868494e3c50786df85c75b1225b6e8e8eee2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/991955ee81034dc3fbc1c2a8e60c04fc9e0b538c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/991955ee81034dc3fbc1c2a8e60c04fc9e0b538c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/991955ee81034dc3fbc1c2a8e60c04fc9e0b538c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/991955ee81034dc3fbc1c2a8e60c04fc9e0b538c/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c6e8a9bcffe4c0f236e27c663f08785d1a0a783b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c6e8a9bcffe4c0f236e27c663f08785d1a0a783b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c6e8a9bcffe4c0f236e27c663f08785d1a0a783b"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 12,
      "deletions": 8
    },
    "files": [
      {
        "sha": "8ae2bebd32b2a52e8c4a5247d432d3898b4f3a7e",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 3,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/991955ee81034dc3fbc1c2a8e60c04fc9e0b538c/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/991955ee81034dc3fbc1c2a8e60c04fc9e0b538c/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=991955ee81034dc3fbc1c2a8e60c04fc9e0b538c",
        "patch": "@@ -761,7 +761,7 @@ const uint256& CNetMessage::GetMessageHash() const\n \n \n // requires LOCK(cs_vSend)\n-size_t SocketSendData(CNode *pnode)\n+size_t CConnman::SocketSendData(CNode *pnode)\n {\n     auto it = pnode->vSendMsg.begin();\n     size_t nSentSize = 0;\n@@ -778,6 +778,7 @@ size_t SocketSendData(CNode *pnode)\n             if (pnode->nSendOffset == data.size()) {\n                 pnode->nSendOffset = 0;\n                 pnode->nSendSize -= data.size();\n+                pnode->fPauseSend = pnode->nSendSize > nSendBufferMaxSize;\n                 it++;\n             } else {\n                 // could not send full message; stop sending more\n@@ -1286,8 +1287,9 @@ void CConnman::ThreadSocketHandler()\n                 TRY_LOCK(pnode->cs_vSend, lockSend);\n                 if (lockSend) {\n                     size_t nBytes = SocketSendData(pnode);\n-                    if (nBytes)\n+                    if (nBytes) {\n                         RecordBytesSent(nBytes);\n+                    }\n                 }\n             }\n \n@@ -1868,7 +1870,7 @@ void CConnman::ThreadMessageHandler()\n                 if (lockRecv)\n                 {\n                     bool fMoreNodeWork = GetNodeSignals().ProcessMessages(pnode, *this, flagInterruptMsgProc);\n-                    fMoreWork |= (fMoreNodeWork && pnode->nSendSize < GetSendBufferSize());\n+                    fMoreWork |= (fMoreNodeWork && !pnode->fPauseSend);\n                 }\n             }\n             if (flagInterruptMsgProc)\n@@ -2595,6 +2597,7 @@ CNode::CNode(NodeId idIn, ServiceFlags nLocalServicesIn, int nMyStartingHeightIn\n     lastSentFeeFilter = 0;\n     nextSendTimeFeeFilter = 0;\n     fPauseRecv = false;\n+    fPauseSend = false;\n     nProcessQueueSize = 0;\n \n     BOOST_FOREACH(const std::string &msg, getAllNetMessageTypes())\n@@ -2675,6 +2678,8 @@ void CConnman::PushMessage(CNode* pnode, CSerializedNetMsg&& msg)\n         pnode->mapSendBytesPerMsgCmd[msg.command] += nTotalSize;\n         pnode->nSendSize += nTotalSize;\n \n+        if (pnode->nSendSize > nSendBufferMaxSize)\n+            pnode->fPauseSend = true;\n         pnode->vSendMsg.push_back(std::move(serializedHeader));\n         if (nMessageSize)\n             pnode->vSendMsg.push_back(std::move(msg.data));"
      },
      {
        "sha": "db73be477f8a7060abd108f0fa3e25f259c3de5f",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/991955ee81034dc3fbc1c2a8e60c04fc9e0b538c/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/991955ee81034dc3fbc1c2a8e60c04fc9e0b538c/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=991955ee81034dc3fbc1c2a8e60c04fc9e0b538c",
        "patch": "@@ -358,6 +358,7 @@ class CConnman\n \n     NodeId GetNewNodeId();\n \n+    size_t SocketSendData(CNode *pnode);\n     //!check is the banlist has unwritten changes\n     bool BannedSetIsDirty();\n     //!set the \"dirty\" flag for the banlist\n@@ -444,7 +445,6 @@ void Discover(boost::thread_group& threadGroup);\n void MapPort(bool fUseUPnP);\n unsigned short GetListenPort();\n bool BindListenPort(const CService &bindAddr, std::string& strError, bool fWhitelisted = false);\n-size_t SocketSendData(CNode *pnode);\n \n struct CombinerAll\n {\n@@ -652,6 +652,7 @@ class CNode\n \n     const uint64_t nKeyedNetGroup;\n     std::atomic_bool fPauseRecv;\n+    std::atomic_bool fPauseSend;\n protected:\n \n     mapMsgCmdSize mapSendBytesPerMsgCmd;"
      },
      {
        "sha": "185ab980fe16059ad0990cc5696a1fa2b4376f39",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 4,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/991955ee81034dc3fbc1c2a8e60c04fc9e0b538c/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/991955ee81034dc3fbc1c2a8e60c04fc9e0b538c/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=991955ee81034dc3fbc1c2a8e60c04fc9e0b538c",
        "patch": "@@ -889,14 +889,13 @@ static void RelayAddress(const CAddress& addr, bool fReachable, CConnman& connma\n void static ProcessGetData(CNode* pfrom, const Consensus::Params& consensusParams, CConnman& connman, std::atomic<bool>& interruptMsgProc)\n {\n     std::deque<CInv>::iterator it = pfrom->vRecvGetData.begin();\n-    unsigned int nMaxSendBufferSize = connman.GetSendBufferSize();\n     vector<CInv> vNotFound;\n     CNetMsgMaker msgMaker(pfrom->GetSendVersion());\n     LOCK(cs_main);\n \n     while (it != pfrom->vRecvGetData.end()) {\n         // Don't bother if send buffer is too full to respond anyway\n-        if (pfrom->nSendSize >= nMaxSendBufferSize)\n+        if (pfrom->fPauseSend)\n             break;\n \n         const CInv &inv = *it;\n@@ -2444,7 +2443,6 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n bool ProcessMessages(CNode* pfrom, CConnman& connman, std::atomic<bool>& interruptMsgProc)\n {\n     const CChainParams& chainparams = Params();\n-    unsigned int nMaxSendBufferSize = connman.GetSendBufferSize();\n     //\n     // Message format\n     //  (4) message start\n@@ -2465,7 +2463,7 @@ bool ProcessMessages(CNode* pfrom, CConnman& connman, std::atomic<bool>& interru\n     if (!pfrom->vRecvGetData.empty()) return true;\n \n         // Don't bother if send buffer is too full to respond anyway\n-        if (pfrom->nSendSize >= nMaxSendBufferSize)\n+        if (pfrom->fPauseSend)\n             return false;\n \n         std::list<CNetMessage> msgs;"
      }
    ]
  },
  {
    "sha": "e60360e139852c655930e99d4bb4db554cd8385e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNjAzNjBlMTM5ODUyYzY1NTkzMGU5OWQ0YmI0ZGI1NTRjZDgzODVl",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2016-12-31T07:05:36Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2017-01-13T04:08:08Z"
      },
      "message": "net: remove cs_vRecvMsg\n\nvRecvMsg is now only touched by the socket handler thread.\n\nThe accounting vars (nRecvBytes/nLastRecv/mapRecvBytesPerMsgCmd) are also\nonly used by the socket handler thread, with the exception of queries from\nrpc/gui. These accesses are not threadsafe, but they never were. This needs to\nbe addressed separately.\n\nAlso, update comment describing data flow",
      "tree": {
        "sha": "adfb51a4f75f327b713de79412fa75c7292f7db0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/adfb51a4f75f327b713de79412fa75c7292f7db0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e60360e139852c655930e99d4bb4db554cd8385e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e60360e139852c655930e99d4bb4db554cd8385e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e60360e139852c655930e99d4bb4db554cd8385e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e60360e139852c655930e99d4bb4db554cd8385e/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "991955ee81034dc3fbc1c2a8e60c04fc9e0b538c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/991955ee81034dc3fbc1c2a8e60c04fc9e0b538c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/991955ee81034dc3fbc1c2a8e60c04fc9e0b538c"
      }
    ],
    "stats": {
      "total": 38,
      "additions": 8,
      "deletions": 30
    },
    "files": [
      {
        "sha": "11638fcc02c375599fae356d566953dae9fb2b72",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 26,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e60360e139852c655930e99d4bb4db554cd8385e/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e60360e139852c655930e99d4bb4db554cd8385e/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=e60360e139852c655930e99d4bb4db554cd8385e",
        "patch": "@@ -644,7 +644,6 @@ void CNode::copyStats(CNodeStats &stats)\n }\n #undef X\n \n-// requires LOCK(cs_vRecvMsg)\n bool CNode::ReceiveMsgBytes(const char *pch, unsigned int nBytes, bool& complete)\n {\n     complete = false;\n@@ -1080,13 +1079,9 @@ void CConnman::ThreadSocketHandler()\n                         TRY_LOCK(pnode->cs_vSend, lockSend);\n                         if (lockSend)\n                         {\n-                            TRY_LOCK(pnode->cs_vRecvMsg, lockRecv);\n-                            if (lockRecv)\n-                            {\n                                 TRY_LOCK(pnode->cs_inventory, lockInv);\n                                 if (lockInv)\n                                     fDelete = true;\n-                            }\n                         }\n                     }\n                     if (fDelete)\n@@ -1146,15 +1141,10 @@ void CConnman::ThreadSocketHandler()\n                 //   write buffer in this case before receiving more. This avoids\n                 //   needlessly queueing received data, if the remote peer is not themselves\n                 //   receiving data. This means properly utilizing TCP flow control signalling.\n-                // * Otherwise, if there is no (complete) message in the receive buffer,\n-                //   or there is space left in the buffer, select() for receiving data.\n-                // * (if neither of the above applies, there is certainly one message\n-                //   in the receiver buffer ready to be processed).\n-                // Together, that means that at least one of the following is always possible,\n-                // so we don't deadlock:\n-                // * We send some data.\n-                // * We wait for data to be received (and disconnect after timeout).\n-                // * We process a message in the buffer (message handler thread).\n+                // * Otherwise, if there is space left in the receive buffer, select() for\n+                //   receiving data.\n+                // * Hand off all complete messages to the processor, to be handled without\n+                //   blocking here.\n                 {\n                     TRY_LOCK(pnode->cs_vSend, lockSend);\n                     if (lockSend) {\n@@ -1165,8 +1155,7 @@ void CConnman::ThreadSocketHandler()\n                     }\n                 }\n                 {\n-                    TRY_LOCK(pnode->cs_vRecvMsg, lockRecv);\n-                    if (lockRecv && !pnode->fPauseRecv)\n+                    if (!pnode->fPauseRecv)\n                         FD_SET(pnode->hSocket, &fdsetRecv);\n                 }\n             }\n@@ -1225,8 +1214,6 @@ void CConnman::ThreadSocketHandler()\n                 continue;\n             if (FD_ISSET(pnode->hSocket, &fdsetRecv) || FD_ISSET(pnode->hSocket, &fdsetError))\n             {\n-                TRY_LOCK(pnode->cs_vRecvMsg, lockRecv);\n-                if (lockRecv)\n                 {\n                     {\n                         // typical socket buffer is 8K-64K\n@@ -1865,14 +1852,8 @@ void CConnman::ThreadMessageHandler()\n                 continue;\n \n             // Receive messages\n-            {\n-                TRY_LOCK(pnode->cs_vRecvMsg, lockRecv);\n-                if (lockRecv)\n-                {\n-                    bool fMoreNodeWork = GetNodeSignals().ProcessMessages(pnode, *this, flagInterruptMsgProc);\n-                    fMoreWork |= (fMoreNodeWork && !pnode->fPauseSend);\n-                }\n-            }\n+            bool fMoreNodeWork = GetNodeSignals().ProcessMessages(pnode, *this, flagInterruptMsgProc);\n+            fMoreWork |= (fMoreNodeWork && !pnode->fPauseSend);\n             if (flagInterruptMsgProc)\n                 return;\n "
      },
      {
        "sha": "982a08f03a11a016ecb781ac5182846398b173a4",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e60360e139852c655930e99d4bb4db554cd8385e/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e60360e139852c655930e99d4bb4db554cd8385e/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=e60360e139852c655930e99d4bb4db554cd8385e",
        "patch": "@@ -613,8 +613,6 @@ class CNode\n     size_t nProcessQueueSize;\n \n     std::deque<CInv> vRecvGetData;\n-    std::list<CNetMessage> vRecvMsg;\n-    CCriticalSection cs_vRecvMsg;\n     uint64_t nRecvBytes;\n     std::atomic<int> nRecvVersion;\n \n@@ -726,6 +724,7 @@ class CNode\n     const ServiceFlags nLocalServices;\n     const int nMyStartingHeight;\n     int nSendVersion;\n+    std::list<CNetMessage> vRecvMsg;  // Used only by SocketHandler thread\n public:\n \n     NodeId GetId() const {\n@@ -746,7 +745,6 @@ class CNode\n         return nRefCount;\n     }\n \n-    // requires LOCK(cs_vRecvMsg)\n     bool ReceiveMsgBytes(const char *pch, unsigned int nBytes, bool& complete);\n \n     void SetRecvVersion(int nVersionIn)"
      },
      {
        "sha": "32a5862f26231016a463b4ea0f66637811147e45",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e60360e139852c655930e99d4bb4db554cd8385e/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e60360e139852c655930e99d4bb4db554cd8385e/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=e60360e139852c655930e99d4bb4db554cd8385e",
        "patch": "@@ -2439,7 +2439,6 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n     return true;\n }\n \n-// requires LOCK(cs_vRecvMsg)\n bool ProcessMessages(CNode* pfrom, CConnman& connman, std::atomic<bool>& interruptMsgProc)\n {\n     const CChainParams& chainparams = Params();"
      }
    ]
  }
]