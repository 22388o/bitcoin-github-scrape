[
  {
    "sha": "2b19f3443efc9e7868746ea1c603b1027d822f32",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyYjE5ZjM0NDNlZmM5ZTc4Njg3NDZlYTFjNjAzYjEwMjdkODIyZjMy",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2021-05-06T00:32:48Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2021-05-12T19:29:17Z"
      },
      "message": "RPC/blockchain: getblockchaininfo: Include versionbits signalling details during LOCKED_IN",
      "tree": {
        "sha": "d46e221044797006f27ecf6d2d7ea60358db7b54",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d46e221044797006f27ecf6d2d7ea60358db7b54"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2b19f3443efc9e7868746ea1c603b1027d822f32",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2b19f3443efc9e7868746ea1c603b1027d822f32",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2b19f3443efc9e7868746ea1c603b1027d822f32",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2b19f3443efc9e7868746ea1c603b1027d822f32/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ee9befe8b4bbd982f8c6eade556aea9b4d11a369",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ee9befe8b4bbd982f8c6eade556aea9b4d11a369",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ee9befe8b4bbd982f8c6eade556aea9b4d11a369"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 12,
      "deletions": 11
    },
    "files": [
      {
        "sha": "15fa10c4c97f9866f543547dbc1175c9d0a787e7",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 11,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2b19f3443efc9e7868746ea1c603b1027d822f32/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2b19f3443efc9e7868746ea1c603b1027d822f32/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=2b19f3443efc9e7868746ea1c603b1027d822f32",
        "patch": "@@ -1377,23 +1377,24 @@ static void BIP9SoftForkDescPushBack(const CBlockIndex* active_chain_tip, UniVal\n     case ThresholdState::ACTIVE: bip9.pushKV(\"status\", \"active\"); break;\n     case ThresholdState::FAILED: bip9.pushKV(\"status\", \"failed\"); break;\n     }\n-    if (ThresholdState::STARTED == thresholdState)\n-    {\n+    const bool has_signal = (ThresholdState::STARTED == thresholdState || ThresholdState::LOCKED_IN == thresholdState);\n+    if (has_signal) {\n         bip9.pushKV(\"bit\", consensusParams.vDeployments[id].bit);\n     }\n     bip9.pushKV(\"start_time\", consensusParams.vDeployments[id].nStartTime);\n     bip9.pushKV(\"timeout\", consensusParams.vDeployments[id].nTimeout);\n     int64_t since_height = VersionBitsStateSinceHeight(active_chain_tip, consensusParams, id, versionbitscache);\n     bip9.pushKV(\"since\", since_height);\n-    if (ThresholdState::STARTED == thresholdState)\n-    {\n+    if (has_signal) {\n         UniValue statsUV(UniValue::VOBJ);\n         BIP9Stats statsStruct = VersionBitsStatistics(active_chain_tip, consensusParams, id);\n         statsUV.pushKV(\"period\", statsStruct.period);\n-        statsUV.pushKV(\"threshold\", statsStruct.threshold);\n         statsUV.pushKV(\"elapsed\", statsStruct.elapsed);\n         statsUV.pushKV(\"count\", statsStruct.count);\n-        statsUV.pushKV(\"possible\", statsStruct.possible);\n+        if (ThresholdState::LOCKED_IN != thresholdState) {\n+            statsUV.pushKV(\"threshold\", statsStruct.threshold);\n+            statsUV.pushKV(\"possible\", statsStruct.possible);\n+        }\n         bip9.pushKV(\"statistics\", statsUV);\n     }\n     bip9.pushKV(\"min_activation_height\", consensusParams.vDeployments[id].min_activation_height);\n@@ -1439,18 +1440,18 @@ RPCHelpMan getblockchaininfo()\n                                 {RPCResult::Type::OBJ, \"bip9\", \"status of bip9 softforks (only for \\\"bip9\\\" type)\",\n                                 {\n                                     {RPCResult::Type::STR, \"status\", \"one of \\\"defined\\\", \\\"started\\\", \\\"locked_in\\\", \\\"active\\\", \\\"failed\\\"\"},\n-                                    {RPCResult::Type::NUM, \"bit\", \"the bit (0-28) in the block version field used to signal this softfork (only for \\\"started\\\" status)\"},\n+                                    {RPCResult::Type::NUM, \"bit\", \"the bit (0-28) in the block version field used to signal this softfork (only for \\\"started\\\" and \\\"locked_in\\\" status)\"},\n                                     {RPCResult::Type::NUM_TIME, \"start_time\", \"the minimum median time past of a block at which the bit gains its meaning\"},\n                                     {RPCResult::Type::NUM_TIME, \"timeout\", \"the median time past of a block at which the deployment is considered failed if not yet locked in\"},\n                                     {RPCResult::Type::NUM, \"since\", \"height of the first block to which the status applies\"},\n                                     {RPCResult::Type::NUM, \"min_activation_height\", \"minimum height of blocks for which the rules may be enforced\"},\n-                                    {RPCResult::Type::OBJ, \"statistics\", \"numeric statistics about BIP9 signalling for a softfork (only for \\\"started\\\" status)\",\n+                                    {RPCResult::Type::OBJ, \"statistics\", \"numeric statistics about signalling for a softfork (only for \\\"started\\\" and \\\"locked_in\\\" status)\",\n                                     {\n-                                        {RPCResult::Type::NUM, \"period\", \"the length in blocks of the BIP9 signalling period\"},\n-                                        {RPCResult::Type::NUM, \"threshold\", \"the number of blocks with the version bit set required to activate the feature\"},\n+                                        {RPCResult::Type::NUM, \"period\", \"the length in blocks of the signalling period\"},\n+                                        {RPCResult::Type::NUM, \"threshold\", \"the number of blocks with the version bit set required to activate the feature (only for \\\"started\\\" status)\"},\n                                         {RPCResult::Type::NUM, \"elapsed\", \"the number of blocks elapsed since the beginning of the current period\"},\n                                         {RPCResult::Type::NUM, \"count\", \"the number of blocks with the version bit set in the current period\"},\n-                                        {RPCResult::Type::BOOL, \"possible\", \"returns false if there are not enough blocks left in this period to pass activation threshold\"},\n+                                        {RPCResult::Type::BOOL, \"possible\", \"returns false if there are not enough blocks left in this period to pass activation threshold (only for \\\"started\\\" status)\"},\n                                     }},\n                                 }},\n                                 {RPCResult::Type::NUM, \"height\", \"height of the first block which the rules are or will be enforced (only for \\\"buried\\\" type, or \\\"bip9\\\" type with \\\"active\\\" status)\"},"
      }
    ]
  }
]