DrahtBot,2020-04-16 01:02:26,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#15719](https://github.com/bitcoin/bitcoin/pull/15719) (Wallet passive startup by ryanofsky)\n\nIf you consider this pull",https://github.com/bitcoin/bitcoin/pull/18554#issuecomment-614354459,614354459,
adamjonas,2021-03-19 16:07:22,"Looks like the [CI picked up a memory leak](https://cirrus-ci.com/task/6726428814213120) running `wallet_crosschain.py`:\n\n```\n node0 stderr =================================================================\n==39469==ERROR: LeakSanitizer: detected memory leaks\nDirect leak of 22096 byte(s) in 18 object(s) allocated from:\n    #0 0x556b3fed1e6d in malloc (/tmp/cirrus-ci-build/ci/scratch/bui",https://github.com/bitcoin/bitcoin/pull/18554#issuecomment-802942806,802942806,
theStack,2021-07-18 11:25:47,Concept ACK,https://github.com/bitcoin/bitcoin/pull/18554#issuecomment-882041846,882041846,
prayank23,2021-08-24 16:47:35,This PR does not fix the issues that I was expecting it would. Have shared the details in https://github.com/bitcoin/bitcoin/issues/22792,https://github.com/bitcoin/bitcoin/pull/18554#issuecomment-904808840,904808840,
prayank23,2021-11-10 19:58:09,@rodentrabies Any update on this PR or is it up for grabs?,https://github.com/bitcoin/bitcoin/pull/18554#issuecomment-965694868,965694868,
rodentrabies,2021-11-11 10:31:10,"@prayank23, yeah, sorry about that, I'll change it to the simpler implementation as discussed above this week end.",https://github.com/bitcoin/bitcoin/pull/18554#issuecomment-966188596,966188596,
luke-jr,2020-04-23 04:19:48,typo?,https://github.com/bitcoin/bitcoin/pull/18554#discussion_r413497260,413497260,src/chain.cpp
luke-jr,2020-04-23 04:20:11,Probably should be a debug option only?,https://github.com/bitcoin/bitcoin/pull/18554#discussion_r413497381,413497381,src/wallet/init.cpp
rodentrabies,2020-04-23 12:07:50,I think it makes sense to allow users who know what they are doing to override this. This was suggested by @gmaxwell in #14533 discussion.,https://github.com/bitcoin/bitcoin/pull/18554#discussion_r413759614,413759614,src/wallet/init.cpp
rodentrabies,2020-04-23 12:08:13,Yes. Fixed.,https://github.com/bitcoin/bitcoin/pull/18554#discussion_r413759888,413759888,src/chain.cpp
luke-jr,2020-04-23 16:02:26,"Yes, debug options are for users who know what they are doing...",https://github.com/bitcoin/bitcoin/pull/18554#discussion_r413923851,413923851,src/wallet/init.cpp
rodentrabies,2020-04-24 12:22:30,Understood. Should it also be in `WALLET_DEBUG_TEST` category?,https://github.com/bitcoin/bitcoin/pull/18554#discussion_r414533672,414533672,src/wallet/init.cpp
fanquake,2021-03-15 02:03:10,Please [use `std::optional` in new code](https://github.com/bitcoin/bitcoin/blob/master/src/optional.h#L12).,https://github.com/bitcoin/bitcoin/pull/18554#discussion_r594005916,594005916,src/wallet/wallet.cpp
rodentrabies,2021-03-15 11:09:52,done,https://github.com/bitcoin/bitcoin/pull/18554#discussion_r594243946,594243946,src/wallet/wallet.cpp
rodentrabies,2021-07-17 00:24:08,"Had to move it here, since putting this after line 2766 where I placed it originally results in memory leaks, as detected by the sanitizer.",https://github.com/bitcoin/bitcoin/pull/18554#discussion_r671579313,671579313,src/wallet/wallet.cpp
sipa,2021-08-27 19:14:06,"This seems overly complicated. The last entry in the block locator is always the genesis block, so that can be used to compare to the expected chain's genesis block hash.",https://github.com/bitcoin/bitcoin/pull/18554#discussion_r697665655,697665655,src/wallet/wallet.cpp
michaelfolkson,2021-08-27 19:21:54,As discussed in the wallet meeting if we want to take into account altcoins that could share Bitcoin mainnet's genesis block we'd need more than just a genesis block comparison. Also stated here: https://github.com/bitcoin/bitcoin/pull/14533#issuecomment-431645072,https://github.com/bitcoin/bitcoin/pull/18554#discussion_r697669516,697669516,src/wallet/wallet.cpp
S3RK,2021-08-27 19:48:11,"For descriptor wallets the case with altcoins is already covered by storing network magic.\n\nMy vote goes for simpler code and genesis block hash check.",https://github.com/bitcoin/bitcoin/pull/18554#discussion_r697682414,697682414,src/wallet/wallet.cpp
rodentrabies,2021-09-02 14:45:55,"As I understand there is an agreement to restore the simpler implementation I used to have in #14533, right?",https://github.com/bitcoin/bitcoin/pull/18554#discussion_r701155951,701155951,src/wallet/wallet.cpp
prayank23,2021-09-02 21:27:54,@rodentrabies Yes,https://github.com/bitcoin/bitcoin/pull/18554#discussion_r701434441,701434441,src/wallet/wallet.cpp
