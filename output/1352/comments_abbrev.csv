gavinandresen,2012-05-18T15:25:09Z,How did you test this?\n,https://github.com/bitcoin/bitcoin/pull/1352#issuecomment-5788608,5788608,
Diapolo,2012-05-18T16:32:03Z,With an own build and the RPC console which is part of the current master. Anything badly wrong with the code or what's your intention to ask?\n,https://github.com/bitcoin/bitcoin/pull/1352#issuecomment-5790084,5790084,
gavinandresen,2012-05-18T17:07:54Z,"I'm looking for a simple test plan, something like:\n\nNote the time and immediately run bitcoin\n\nWait two minutes.  Call getinfo\n\nEXPECT: client startup time reported is the time noted immediately before starting bitcoin (or within a second or two)\n\nIf I'm reading your code correctly, that simple test will fail, which is why I'm asking how you tested.\n",https://github.com/bitcoin/bitcoin/pull/1352#issuecomment-5790852,5790852,
Diapolo,2012-05-18T17:18:53Z,"Now I get it, you are right ... that is not a problem for Bitcoin-Qt as GetClientStartupTime() is called on init, which is not true for bitcoind. So for this to work we (I) need a place to be allowed to call GetClientStartupTime(). What is the best place to do this? I did not want to use a global, that's why I chose the current code.\n",https://github.com/bitcoin/bitcoin/pull/1352#issuecomment-5791071,5791071,
Diapolo,2012-05-18T22:28:02Z,"Changed back to a global, which removes the need to explicitly initialize the static const int64. This needs to get tested for bitcoind, as I can't compile that! Tested with Bitcoin-Qt and there it works. The startuptime in getinfo via RPC console doesn't change.\n",https://github.com/bitcoin/bitcoin/pull/1352#issuecomment-5797110,5797110,
gavinandresen,2012-05-19T02:09:52Z,Closing this until it is tested with bitcoind.\n,https://github.com/bitcoin/bitcoin/pull/1352#issuecomment-5798895,5798895,
Diapolo,2012-05-19T09:13:04Z,"Updated and hoping someone can test this :).\n@luke-jr See: https://github.com/Diapolo/bitcoin/commit/e9558a2bd022823e232b23443ed2a124ed3715b3\n\nI don't know, why the last update is not showing up here ... weird.\n",https://github.com/bitcoin/bitcoin/pull/1352#issuecomment-5800442,5800442,
luke-jr,2012-05-19T12:30:55Z,"1. Note the time and immediately run bitcoind\n2. Wait until debug.log shows it has finished starting\n3. Wait two more minutes. Call getinfo\n   EXPECT: client startup time reported is the time noted immediately before starting bitcoin (or within a second or two)\n\nRESULT: Works correctly with bitcoind and Bitcoin-Qt.\n\nGavin, please reopen so GitHub updates the pullreq.\n",https://github.com/bitcoin/bitcoin/pull/1352#issuecomment-5801382,5801382,
gavinandresen,2012-05-19T12:42:01Z,"NACK.  Process startup time is available from the OS, no need for this functionality:\nhttp://linuxcommando.blogspot.com/2008/09/how-to-get-process-start-date-and-time.html\n\n(don't know about Windows, but I'm sure it has something similar)\n",https://github.com/bitcoin/bitcoin/pull/1352#issuecomment-5801437,5801437,
luke-jr,2012-05-19T16:44:18Z,"Gavin, this isn't adding new functionality, it's just making bitcoind on par with a feature already available in Bitcoin-Qt. Process startup time is only available from the OS if someone is on the local system. bitcoind still supports binding external IPs for LAN use.\n",https://github.com/bitcoin/bitcoin/pull/1352#issuecomment-5803086,5803086,
Diapolo,2012-05-19T22:18:29Z,I think it's rather bad to use OS-specific code for such a small thing like this is. The code is portable and already in (only in another .cpp file). Like luke-jr said...\n,https://github.com/bitcoin/bitcoin/pull/1352#issuecomment-5805208,5805208,
Diapolo,2012-05-20T13:09:08Z,Rebased to be mergable again! @gavinandresen What about re-open and accepting this or do you still prefer a non-portable approach?\n,https://github.com/bitcoin/bitcoin/pull/1352#issuecomment-5808754,5808754,
luke-jr,2012-05-18T19:57:16Z,IMO this was a much better/simpler way to do it... ;)\n,https://github.com/bitcoin/bitcoin/pull/1352#discussion_r847628,847628,src/qt/clientmodel.cpp
Diapolo,2012-05-18T21:23:59Z,"At least easier, but I hate globals ... sorry. Can you give a suggestion, where to place the initial call to GetClientStartupTime() :)?\n",https://github.com/bitcoin/bitcoin/pull/1352#discussion_r848129,848129,src/qt/clientmodel.cpp
luke-jr,2012-05-18T21:30:37Z,"It's global either way. Global functions aren't much better than global variables...\n\nA function with **attribute**((constructor)) can provide the same behaviour, but it's a GCC extension (non-standard) and using a global variable is much cleaner.\n",https://github.com/bitcoin/bitcoin/pull/1352#discussion_r848178,848178,src/qt/clientmodel.cpp
Diapolo,2012-05-18T21:33:17Z,I had a bad feeling about leaving another global in the bunch of globals that are used in the code. Should I come over this feeling?\n\nEdit: And clientmodel.cpp would be the wrong place if I want to use that in RPC.\n,https://github.com/bitcoin/bitcoin/pull/1352#discussion_r848194,848194,src/qt/clientmodel.cpp
luke-jr,2012-05-18T21:52:49Z,"I think for this, a global is the best solution. Perhaps move it to util.cpp?\n",https://github.com/bitcoin/bitcoin/pull/1352#discussion_r848332,848332,src/qt/clientmodel.cpp
luke-jr,2012-05-18T23:12:40Z,Still no need for a function...\n,https://github.com/bitcoin/bitcoin/pull/1352#discussion_r848683,848683,src/util.cpp
Diapolo,2012-05-18T23:19:34Z,"How can I access nClientStartupTime in other cpp's then? I was not succesful with extern or placing nClientStartupTime in util.h as it was above GetTime(), which was missing then ;).\n",https://github.com/bitcoin/bitcoin/pull/1352#discussion_r848696,848696,src/util.cpp
luke-jr,2012-05-18T23:47:28Z,"Remove ""static"" in this file, and add to util.h:\n\n``` C++\nextern const int64 nClientStartupTime;\n```\n",https://github.com/bitcoin/bitcoin/pull/1352#discussion_r848759,848759,src/util.cpp
Diapolo,2012-05-19T09:00:43Z,"Would you mind testing this for bitcoind then, so we can re-open? Will push an update and remove the static + unneeded function.\n",https://github.com/bitcoin/bitcoin/pull/1352#discussion_r849302,849302,src/util.cpp
