DrahtBot,2020-06-28 22:13:37,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19168 (Refactor: Improve setup_clean_chain semantics by fjahr)\n* #16333 (test: Set BIP34Height = 2 for regtest by MarcoF",https://github.com/bitcoin/bitcoin/pull/19401#issuecomment-650829143,650829143,
instagibbs,2020-07-24 13:30:22,"no opinion on linter thing but\n\nutACK https://github.com/bitcoin/bitcoin/pull/19401/commits/dfe8110e411b5321b38e6658d4661d88e7ea421a\n",https://github.com/bitcoin/bitcoin/pull/19401#issuecomment-663539323,663539323,
luke-jr,2020-09-12 18:25:26,Restored linter rule against common sense due to widespread popularity. Added suggested comment.,https://github.com/bitcoin/bitcoin/pull/19401#issuecomment-691527222,691527222,
fjahr,2020-09-12 23:50:23,re-ACK d438d609cd64fe532d94e45000495de93ef99aa6,https://github.com/bitcoin/bitcoin/pull/19401#issuecomment-691574863,691574863,
benthecarman,2020-10-15 12:21:57,ACK d438d60,https://github.com/bitcoin/bitcoin/pull/19401#issuecomment-709275482,709275482,
adamjonas,2020-07-03 19:06:30,Passing in a dictionary as a default parameter value is triggering the linter.,https://github.com/bitcoin/bitcoin/pull/19401#discussion_r449684693,449684693,test/functional/test_framework/blocktools.py
luke-jr,2020-07-03 19:56:23,So how do we fix the linter?,https://github.com/bitcoin/bitcoin/pull/19401#discussion_r449693107,449693107,test/functional/test_framework/blocktools.py
MarcoFalke,2020-07-03 21:20:09,"Something like this?\n\n```suggestion\ndef create_block(hashprev=None, coinbase=None, ntime=None, *, version=None, tmpl=None, txlist=None):\n  tmpl = {} if tmpl is None else tmpl\n```",https://github.com/bitcoin/bitcoin/pull/19401#discussion_r449705787,449705787,test/functional/test_framework/blocktools.py
MarcoFalke,2020-07-03 21:21:30,or use the suggestion from the linter,https://github.com/bitcoin/bitcoin/pull/19401#discussion_r449705979,449705979,test/functional/test_framework/blocktools.py
luke-jr,2020-07-03 21:23:45,There isn't a problem with this PR. The problem is the linter being wrong.,https://github.com/bitcoin/bitcoin/pull/19401#discussion_r449706308,449706308,test/functional/test_framework/blocktools.py
luke-jr,2020-07-03 21:33:28,"Changing this to `None` here since it conceptually makes more sense anyway, but in other cases the linter should probably be fixed instead.",https://github.com/bitcoin/bitcoin/pull/19401#discussion_r449707510,449707510,test/functional/test_framework/blocktools.py
MarcoFalke,2020-07-05 11:59:40,You'll have to make this multi-line or exclude `E701` in the lint script,https://github.com/bitcoin/bitcoin/pull/19401#discussion_r449869419,449869419,test/functional/test_framework/blocktools.py
ajtowns,2020-09-03 23:45:48,"Requiring connected nodes is inconvenient for generating the initial blocks for custom signets as well. How about:\n\n```diff\n--- a/src/rpc/mining.cpp\n+++ b/src/rpc/mining.cpp\n@@ -652,11 +652,13 @@ static UniValue getblocktemplate(const JSONRPCRequest& request)\n     if(!node.connman)\n         throw JSONRPCError(RPC_CLIENT_P2P_DISABLED, ""Error: Peer-to-peer functionality missing or disa",https://github.com/bitcoin/bitcoin/pull/19401#discussion_r483310112,483310112,test/functional/feature_nulldummy.py
fjahr,2020-09-09 14:28:52,"nit: seems like the better choice\n```suggestion\n            if not isinstance(tx, CTransaction):\n```",https://github.com/bitcoin/bitcoin/pull/19401#discussion_r485657217,485657217,test/functional/test_framework/blocktools.py
fjahr,2020-09-09 14:43:17,"nit: for clarification\n```suggestion\n        # Save block template now to use for the reorg later\n        tmpl = self.nodes[0].getblocktemplate(NORMAL_GBT_REQUEST_PARAMS)\n```",https://github.com/bitcoin/bitcoin/pull/19401#discussion_r485668434,485668434,test/functional/feature_bip68_sequence.py
luke-jr,2020-09-12 18:18:51,Seems like an unnecessary special-casing for tests. Best to just make the tests work right.,https://github.com/bitcoin/bitcoin/pull/19401#discussion_r487434975,487434975,test/functional/feature_nulldummy.py
luke-jr,2020-09-12 18:23:14,"We don't really care what the class is, so long as it has `calc_sha256`",https://github.com/bitcoin/bitcoin/pull/19401#discussion_r487435342,487435342,test/functional/test_framework/blocktools.py
