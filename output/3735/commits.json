[
  {
    "sha": "f48742c2bf6002f7c1afaf1d1723659b85d4a3ac",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmNDg3NDJjMmJmNjAwMmY3YzFhZmFmMWQxNzIzNjU5Yjg1ZDRhM2Fj",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-02-24T08:08:56Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-02-24T08:08:56Z"
      },
      "message": "Get rid of C99 PRI?64 usage in source files\n\nAmend to d5f1e72. It turns out that BerkelyDB was including inttypes.h\nindirectly, so we cannot fix this with just macros.\n\nTrivial commit: apply the following script to all .cpp and .h files:\n\n    # Middle\n    sed -i 's/\"PRIx64\"/x/g' \"$1\"\n    sed -i 's/\"PRIu64\"/u/g' \"$1\"\n    sed -i 's/\"PRId64\"/d/g' \"$1\"\n    # Initial\n    sed -i 's/PRIx64\"/\"x/g' \"$1\"\n    sed -i 's/PRIu64\"/\"u/g' \"$1\"\n    sed -i 's/PRId64\"/\"d/g' \"$1\"\n    # Trailing\n    sed -i 's/\"PRIx64/x\"/g' \"$1\"\n    sed -i 's/\"PRIu64/u\"/g' \"$1\"\n    sed -i 's/\"PRId64/d\"/g' \"$1\"\n\nAfter this commit, `git grep` for PRI.64 should turn up nothing except\nthe defines in util.h.",
      "tree": {
        "sha": "70025f3ea0d6ad42058dbcf034180d0c961d305b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/70025f3ea0d6ad42058dbcf034180d0c961d305b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f48742c2bf6002f7c1afaf1d1723659b85d4a3ac",
      "comment_count": 2,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f48742c2bf6002f7c1afaf1d1723659b85d4a3ac",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f48742c2bf6002f7c1afaf1d1723659b85d4a3ac",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f48742c2bf6002f7c1afaf1d1723659b85d4a3ac/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4fd082ded7af28929e909843eba5c801fe755257",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4fd082ded7af28929e909843eba5c801fe755257",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4fd082ded7af28929e909843eba5c801fe755257"
      }
    ],
    "stats": {
      "total": 72,
      "additions": 36,
      "deletions": 36
    },
    "files": [
      {
        "sha": "46e861be9ea50c8535f22ae6494264f110e3bd1d",
        "filename": "src/alert.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f48742c2bf6002f7c1afaf1d1723659b85d4a3ac/src/alert.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f48742c2bf6002f7c1afaf1d1723659b85d4a3ac/src/alert.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/alert.cpp?ref=f48742c2bf6002f7c1afaf1d1723659b85d4a3ac",
        "patch": "@@ -51,8 +51,8 @@ std::string CUnsignedAlert::ToString() const\n     return strprintf(\n         \"CAlert(\\n\"\n         \"    nVersion     = %d\\n\"\n-        \"    nRelayUntil  = %\"PRId64\"\\n\"\n-        \"    nExpiration  = %\"PRId64\"\\n\"\n+        \"    nRelayUntil  = %d\\n\"\n+        \"    nExpiration  = %d\\n\"\n         \"    nID          = %d\\n\"\n         \"    nCancel      = %d\\n\"\n         \"    setCancel    = %s\\n\""
      },
      {
        "sha": "cbdd24e806fc082b43a6c92a3427f819c578c5ab",
        "filename": "src/core.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f48742c2bf6002f7c1afaf1d1723659b85d4a3ac/src/core.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f48742c2bf6002f7c1afaf1d1723659b85d4a3ac/src/core.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core.cpp?ref=f48742c2bf6002f7c1afaf1d1723659b85d4a3ac",
        "patch": "@@ -64,7 +64,7 @@ uint256 CTxOut::GetHash() const\n \n std::string CTxOut::ToString() const\n {\n-    return strprintf(\"CTxOut(nValue=%\"PRId64\".%08\"PRId64\", scriptPubKey=%s)\", nValue / COIN, nValue % COIN, scriptPubKey.ToString().substr(0,30));\n+    return strprintf(\"CTxOut(nValue=%d.%08d, scriptPubKey=%s)\", nValue / COIN, nValue % COIN, scriptPubKey.ToString().substr(0,30));\n }\n \n void CTxOut::print() const"
      },
      {
        "sha": "521562fe699d050f18d0e28f3c46cc7116649f2b",
        "filename": "src/db.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f48742c2bf6002f7c1afaf1d1723659b85d4a3ac/src/db.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f48742c2bf6002f7c1afaf1d1723659b85d4a3ac/src/db.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/db.cpp?ref=f48742c2bf6002f7c1afaf1d1723659b85d4a3ac",
        "patch": "@@ -463,7 +463,7 @@ void CDBEnv::Flush(bool fShutdown)\n             else\n                 mi++;\n         }\n-        LogPrint(\"db\", \"DBFlush(%s)%s ended %15\"PRId64\"ms\\n\", fShutdown ? \"true\" : \"false\", fDbEnvInit ? \"\" : \" db not started\", GetTimeMillis() - nStart);\n+        LogPrint(\"db\", \"DBFlush(%s)%s ended %15dms\\n\", fShutdown ? \"true\" : \"false\", fDbEnvInit ? \"\" : \" db not started\", GetTimeMillis() - nStart);\n         if (fShutdown)\n         {\n             char** listp;"
      },
      {
        "sha": "4cc18800a536c57950cad3d8539b4bd49f0395af",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f48742c2bf6002f7c1afaf1d1723659b85d4a3ac/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f48742c2bf6002f7c1afaf1d1723659b85d4a3ac/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=f48742c2bf6002f7c1afaf1d1723659b85d4a3ac",
        "patch": "@@ -599,7 +599,7 @@ bool AppInit2(boost::thread_group& threadGroup)\n         {\n             // try moving the database env out of the way\n             boost::filesystem::path pathDatabase = GetDataDir() / \"database\";\n-            boost::filesystem::path pathDatabaseBak = GetDataDir() / strprintf(\"database.%\"PRId64\".bak\", GetTime());\n+            boost::filesystem::path pathDatabaseBak = GetDataDir() / strprintf(\"database.%d.bak\", GetTime());\n             try {\n                 boost::filesystem::rename(pathDatabase, pathDatabaseBak);\n                 LogPrintf(\"Moved old %s to %s. Retrying.\\n\", pathDatabase.string(), pathDatabaseBak.string());\n@@ -874,7 +874,7 @@ bool AppInit2(boost::thread_group& threadGroup)\n         LogPrintf(\"Shutdown requested. Exiting.\\n\");\n         return false;\n     }\n-    LogPrintf(\" block index %15\"PRId64\"ms\\n\", GetTimeMillis() - nStart);\n+    LogPrintf(\" block index %15dms\\n\", GetTimeMillis() - nStart);\n \n     if (GetBoolArg(\"-printblockindex\", false) || GetBoolArg(\"-printblocktree\", false))\n     {\n@@ -985,7 +985,7 @@ bool AppInit2(boost::thread_group& threadGroup)\n         }\n \n         LogPrintf(\"%s\", strErrors.str());\n-        LogPrintf(\" wallet      %15\"PRId64\"ms\\n\", GetTimeMillis() - nStart);\n+        LogPrintf(\" wallet      %15dms\\n\", GetTimeMillis() - nStart);\n \n         RegisterWallet(pwalletMain);\n \n@@ -1007,7 +1007,7 @@ bool AppInit2(boost::thread_group& threadGroup)\n             LogPrintf(\"Rescanning last %i blocks (from block %i)...\\n\", chainActive.Height() - pindexRescan->nHeight, pindexRescan->nHeight);\n             nStart = GetTimeMillis();\n             pwalletMain->ScanForWalletTransactions(pindexRescan, true);\n-            LogPrintf(\" rescan      %15\"PRId64\"ms\\n\", GetTimeMillis() - nStart);\n+            LogPrintf(\" rescan      %15dms\\n\", GetTimeMillis() - nStart);\n             pwalletMain->SetBestChain(chainActive.GetLocator());\n             nWalletDBUpdated++;\n         }\n@@ -1042,7 +1042,7 @@ bool AppInit2(boost::thread_group& threadGroup)\n             LogPrintf(\"Invalid or missing peers.dat; recreating\\n\");\n     }\n \n-    LogPrintf(\"Loaded %i addresses from peers.dat  %\"PRId64\"ms\\n\",\n+    LogPrintf(\"Loaded %i addresses from peers.dat  %dms\\n\",\n            addrman.size(), GetTimeMillis() - nStart);\n \n     // ********************************************************* Step 11: start node"
      },
      {
        "sha": "0ff434b4fb37c442218147b4d207504f863e9b4b",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f48742c2bf6002f7c1afaf1d1723659b85d4a3ac/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f48742c2bf6002f7c1afaf1d1723659b85d4a3ac/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=f48742c2bf6002f7c1afaf1d1723659b85d4a3ac",
        "patch": "@@ -822,7 +822,7 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n         // Don't accept it if it can't get into a block\n         int64_t txMinFee = GetMinFee(tx, nSize, true, GMF_RELAY);\n         if (fLimitFree && nFees < txMinFee)\n-            return state.DoS(0, error(\"AcceptToMemoryPool : not enough fees %s, %\"PRId64\" < %\"PRId64,\n+            return state.DoS(0, error(\"AcceptToMemoryPool : not enough fees %s, %d < %d\",\n                                       hash.ToString(), nFees, txMinFee),\n                              REJECT_INSUFFICIENTFEE, \"insufficient fee\");\n \n@@ -851,7 +851,7 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n         }\n \n         if (fRejectInsaneFee && nFees > CTransaction::nMinRelayTxFee * 10000)\n-            return error(\"AcceptToMemoryPool: : insane fees %s, %\"PRId64\" > %\"PRId64,\n+            return error(\"AcceptToMemoryPool: : insane fees %s, %d > %d\",\n                          hash.ToString(),\n                          nFees, CTransaction::nMinRelayTxFee * 10000);\n \n@@ -1168,7 +1168,7 @@ unsigned int GetNextWorkRequired(const CBlockIndex* pindexLast, const CBlockHead\n \n     // Limit adjustment step\n     int64_t nActualTimespan = pindexLast->GetBlockTime() - pindexFirst->GetBlockTime();\n-    LogPrintf(\"  nActualTimespan = %\"PRId64\"  before bounds\\n\", nActualTimespan);\n+    LogPrintf(\"  nActualTimespan = %d  before bounds\\n\", nActualTimespan);\n     if (nActualTimespan < nTargetTimespan/4)\n         nActualTimespan = nTargetTimespan/4;\n     if (nActualTimespan > nTargetTimespan*4)\n@@ -1185,7 +1185,7 @@ unsigned int GetNextWorkRequired(const CBlockIndex* pindexLast, const CBlockHead\n \n     /// debug print\n     LogPrintf(\"GetNextWorkRequired RETARGET\\n\");\n-    LogPrintf(\"nTargetTimespan = %\"PRId64\"    nActualTimespan = %\"PRId64\"\\n\", nTargetTimespan, nActualTimespan);\n+    LogPrintf(\"nTargetTimespan = %d    nActualTimespan = %d\\n\", nTargetTimespan, nActualTimespan);\n     LogPrintf(\"Before: %08x  %s\\n\", pindexLast->nBits, CBigNum().SetCompact(pindexLast->nBits).getuint256().ToString());\n     LogPrintf(\"After:  %08x  %s\\n\", bnNew.GetCompact(), bnNew.getuint256().ToString());\n \n@@ -1737,7 +1737,7 @@ bool ConnectBlock(CBlock& block, CValidationState& state, CBlockIndex* pindex, C\n \n     if (block.vtx[0].GetValueOut() > GetBlockValue(pindex->nHeight, nFees))\n         return state.DoS(100,\n-                         error(\"ConnectBlock() : coinbase pays too much (actual=%\"PRId64\" vs limit=%\"PRId64\")\",\n+                         error(\"ConnectBlock() : coinbase pays too much (actual=%d vs limit=%d)\",\n                                block.vtx[0].GetValueOut(), GetBlockValue(pindex->nHeight, nFees)),\n                          REJECT_INVALID, \"bad-cb-amount\");\n \n@@ -3014,7 +3014,7 @@ bool LoadExternalBlockFile(FILE* fileIn, CDiskBlockPos *dbp)\n         AbortNode(_(\"Error: system error: \") + e.what());\n     }\n     if (nLoaded > 0)\n-        LogPrintf(\"Loaded %i blocks from external file in %\"PRId64\"ms\\n\", nLoaded, GetTimeMillis() - nStart);\n+        LogPrintf(\"Loaded %i blocks from external file in %dms\\n\", nLoaded, GetTimeMillis() - nStart);\n     return nLoaded > 0;\n }\n \n@@ -3804,7 +3804,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n         }\n \n         if (!(sProblem.empty())) {\n-            LogPrint(\"net\", \"pong %s %s: %s, %\"PRIx64\" expected, %\"PRIx64\" received, %\"PRIszu\" bytes\\n\",\n+            LogPrint(\"net\", \"pong %s %s: %s, %x expected, %x received, %\"PRIszu\" bytes\\n\",\n                 pfrom->addr.ToString(),\n                 pfrom->cleanSubVer,\n                 sProblem,"
      },
      {
        "sha": "e52f5390858090a799261bb0de352dc0f45440c7",
        "filename": "src/miner.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f48742c2bf6002f7c1afaf1d1723659b85d4a3ac/src/miner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f48742c2bf6002f7c1afaf1d1723659b85d4a3ac/src/miner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.cpp?ref=f48742c2bf6002f7c1afaf1d1723659b85d4a3ac",
        "patch": "@@ -319,7 +319,7 @@ CBlockTemplate* CreateNewBlock(const CScript& scriptPubKeyIn)\n \n         nLastBlockTx = nBlockTx;\n         nLastBlockSize = nBlockSize;\n-        LogPrintf(\"CreateNewBlock(): total size %\"PRIu64\"\\n\", nBlockSize);\n+        LogPrintf(\"CreateNewBlock(): total size %u\\n\", nBlockSize);\n \n         pblock->vtx[0].vout[0].nValue = GetBlockValue(pindexPrev->nHeight+1, nFees);\n         pblocktemplate->vTxFees[0] = -nFees;"
      },
      {
        "sha": "bb1d1bac455b657ec5971fc1a1dc3da53b2d7043",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f48742c2bf6002f7c1afaf1d1723659b85d4a3ac/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f48742c2bf6002f7c1afaf1d1723659b85d4a3ac/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=f48742c2bf6002f7c1afaf1d1723659b85d4a3ac",
        "patch": "@@ -1243,7 +1243,7 @@ void DumpAddresses()\n     CAddrDB adb;\n     adb.Write(addrman);\n \n-    LogPrint(\"net\", \"Flushed %d addresses to peers.dat  %\"PRId64\"ms\\n\",\n+    LogPrint(\"net\", \"Flushed %d addresses to peers.dat  %dms\\n\",\n            addrman.size(), GetTimeMillis() - nStart);\n }\n "
      },
      {
        "sha": "8a7531d61b93f2e9822bb35c4cbecd24a38cc315",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f48742c2bf6002f7c1afaf1d1723659b85d4a3ac/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f48742c2bf6002f7c1afaf1d1723659b85d4a3ac/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=f48742c2bf6002f7c1afaf1d1723659b85d4a3ac",
        "patch": "@@ -423,7 +423,7 @@ class CNode\n             nRequestTime = it->second;\n         else\n             nRequestTime = 0;\n-        LogPrint(\"net\", \"askfor %s   %\"PRId64\" (%s)\\n\", inv.ToString().c_str(), nRequestTime, DateTimeStrFormat(\"%H:%M:%S\", nRequestTime/1000000).c_str());\n+        LogPrint(\"net\", \"askfor %s   %d (%s)\\n\", inv.ToString().c_str(), nRequestTime, DateTimeStrFormat(\"%H:%M:%S\", nRequestTime/1000000).c_str());\n \n         // Make sure not to reuse time indexes to keep things in the same order\n         int64_t nNow = (GetTime() - 1) * 1000000;"
      },
      {
        "sha": "efe4f54b0ecd4cecafee33675dc3fd471cd01499",
        "filename": "src/rpcnet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f48742c2bf6002f7c1afaf1d1723659b85d4a3ac/src/rpcnet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f48742c2bf6002f7c1afaf1d1723659b85d4a3ac/src/rpcnet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcnet.cpp?ref=f48742c2bf6002f7c1afaf1d1723659b85d4a3ac",
        "patch": "@@ -119,7 +119,7 @@ Value getpeerinfo(const Array& params, bool fHelp)\n         obj.push_back(Pair(\"addr\", stats.addrName));\n         if (!(stats.addrLocal.empty()))\n             obj.push_back(Pair(\"addrlocal\", stats.addrLocal));\n-        obj.push_back(Pair(\"services\", strprintf(\"%08\"PRIx64, stats.nServices)));\n+        obj.push_back(Pair(\"services\", strprintf(\"%08x\", stats.nServices)));\n         obj.push_back(Pair(\"lastsend\", (boost::int64_t)stats.nLastSend));\n         obj.push_back(Pair(\"lastrecv\", (boost::int64_t)stats.nLastRecv));\n         obj.push_back(Pair(\"bytessent\", (boost::int64_t)stats.nSendBytes));"
      },
      {
        "sha": "706737b1155742b754001489e6b9d1c56defd34c",
        "filename": "src/test/util_tests.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f48742c2bf6002f7c1afaf1d1723659b85d4a3ac/src/test/util_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f48742c2bf6002f7c1afaf1d1723659b85d4a3ac/src/test/util_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util_tests.cpp?ref=f48742c2bf6002f7c1afaf1d1723659b85d4a3ac",
        "patch": "@@ -311,9 +311,9 @@ BOOST_AUTO_TEST_CASE(strprintf_numbers)\n {\n     int64_t s64t = -9223372036854775807LL; /* signed 64 bit test value */\n     uint64_t u64t = 18446744073709551615ULL; /* unsigned 64 bit test value */\n-    BOOST_CHECK(strprintf(\"%s %\"PRId64\" %s\", B, s64t, E) == B\" -9223372036854775807 \"E);\n-    BOOST_CHECK(strprintf(\"%s %\"PRIu64\" %s\", B, u64t, E) == B\" 18446744073709551615 \"E);\n-    BOOST_CHECK(strprintf(\"%s %\"PRIx64\" %s\", B, u64t, E) == B\" ffffffffffffffff \"E);\n+    BOOST_CHECK(strprintf(\"%s %d %s\", B, s64t, E) == B\" -9223372036854775807 \"E);\n+    BOOST_CHECK(strprintf(\"%s %u %s\", B, u64t, E) == B\" 18446744073709551615 \"E);\n+    BOOST_CHECK(strprintf(\"%s %x %s\", B, u64t, E) == B\" ffffffffffffffff \"E);\n \n     size_t st = 12345678; /* unsigned size_t test value */\n     ssize_t sst = -12345678; /* signed size_t test value */"
      },
      {
        "sha": "4e326ffcf4cb608f1c96125dddf21c0689eaa19b",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f48742c2bf6002f7c1afaf1d1723659b85d4a3ac/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f48742c2bf6002f7c1afaf1d1723659b85d4a3ac/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=f48742c2bf6002f7c1afaf1d1723659b85d4a3ac",
        "patch": "@@ -330,7 +330,7 @@ string FormatMoney(int64_t n, bool fPlus)\n     int64_t n_abs = (n > 0 ? n : -n);\n     int64_t quotient = n_abs/COIN;\n     int64_t remainder = n_abs%COIN;\n-    string str = strprintf(\"%\"PRId64\".%08\"PRId64, quotient, remainder);\n+    string str = strprintf(\"%d.%08d\", quotient, remainder);\n \n     // Right-trim excess zeros before the decimal point:\n     int nTrim = 0;\n@@ -1278,7 +1278,7 @@ void AddTimeData(const CNetAddr& ip, int64_t nTime)\n     // Add data\n     static CMedianFilter<int64_t> vTimeOffsets(200,0);\n     vTimeOffsets.input(nOffsetSample);\n-    LogPrintf(\"Added time data, samples %d, offset %+\"PRId64\" (%+\"PRId64\" minutes)\\n\", vTimeOffsets.size(), nOffsetSample, nOffsetSample/60);\n+    LogPrintf(\"Added time data, samples %d, offset %+d (%+d minutes)\\n\", vTimeOffsets.size(), nOffsetSample, nOffsetSample/60);\n     if (vTimeOffsets.size() >= 5 && vTimeOffsets.size() % 2 == 1)\n     {\n         int64_t nMedian = vTimeOffsets.median();\n@@ -1313,10 +1313,10 @@ void AddTimeData(const CNetAddr& ip, int64_t nTime)\n         }\n         if (fDebug) {\n             BOOST_FOREACH(int64_t n, vSorted)\n-                LogPrintf(\"%+\"PRId64\"  \", n);\n+                LogPrintf(\"%+d  \", n);\n             LogPrintf(\"|  \");\n         }\n-        LogPrintf(\"nTimeOffset = %+\"PRId64\"  (%+\"PRId64\" minutes)\\n\", nTimeOffset, nTimeOffset/60);\n+        LogPrintf(\"nTimeOffset = %+d  (%+d minutes)\\n\", nTimeOffset, nTimeOffset/60);\n     }\n }\n "
      },
      {
        "sha": "c667431caf98dd6b48d55d453711200b87099abf",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f48742c2bf6002f7c1afaf1d1723659b85d4a3ac/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f48742c2bf6002f7c1afaf1d1723659b85d4a3ac/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=f48742c2bf6002f7c1afaf1d1723659b85d4a3ac",
        "patch": "@@ -234,7 +234,7 @@ void runCommand(std::string strCommand);\n \n inline std::string i64tostr(int64_t n)\n {\n-    return strprintf(\"%\"PRId64, n);\n+    return strprintf(\"%d\", n);\n }\n \n inline std::string itostr(int n)"
      },
      {
        "sha": "c78f47ff04254129a3ea60c9280fcc2bb1582dc4",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f48742c2bf6002f7c1afaf1d1723659b85d4a3ac/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f48742c2bf6002f7c1afaf1d1723659b85d4a3ac/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=f48742c2bf6002f7c1afaf1d1723659b85d4a3ac",
        "patch": "@@ -1693,7 +1693,7 @@ bool CWallet::NewKeyPool()\n             walletdb.WritePool(nIndex, CKeyPool(GenerateNewKey()));\n             setKeyPool.insert(nIndex);\n         }\n-        LogPrintf(\"CWallet::NewKeyPool wrote %\"PRId64\" new keys\\n\", nKeys);\n+        LogPrintf(\"CWallet::NewKeyPool wrote %d new keys\\n\", nKeys);\n     }\n     return true;\n }\n@@ -1723,7 +1723,7 @@ bool CWallet::TopUpKeyPool(unsigned int kpSize)\n             if (!walletdb.WritePool(nEnd, CKeyPool(GenerateNewKey())))\n                 throw runtime_error(\"TopUpKeyPool() : writing generated key failed\");\n             setKeyPool.insert(nEnd);\n-            LogPrintf(\"keypool added key %\"PRId64\", size=%\"PRIszu\"\\n\", nEnd, setKeyPool.size());\n+            LogPrintf(\"keypool added key %d, size=%\"PRIszu\"\\n\", nEnd, setKeyPool.size());\n         }\n     }\n     return true;\n@@ -1752,7 +1752,7 @@ void CWallet::ReserveKeyFromKeyPool(int64_t& nIndex, CKeyPool& keypool)\n         if (!HaveKey(keypool.vchPubKey.GetID()))\n             throw runtime_error(\"ReserveKeyFromKeyPool() : unknown key in key pool\");\n         assert(keypool.vchPubKey.IsValid());\n-        LogPrintf(\"keypool reserve %\"PRId64\"\\n\", nIndex);\n+        LogPrintf(\"keypool reserve %d\\n\", nIndex);\n     }\n }\n \n@@ -1779,7 +1779,7 @@ void CWallet::KeepKey(int64_t nIndex)\n         CWalletDB walletdb(strWalletFile);\n         walletdb.ErasePool(nIndex);\n     }\n-    LogPrintf(\"keypool keep %\"PRId64\"\\n\", nIndex);\n+    LogPrintf(\"keypool keep %d\\n\", nIndex);\n }\n \n void CWallet::ReturnKey(int64_t nIndex)\n@@ -1789,7 +1789,7 @@ void CWallet::ReturnKey(int64_t nIndex)\n         LOCK(cs_wallet);\n         setKeyPool.insert(nIndex);\n     }\n-    LogPrintf(\"keypool return %\"PRId64\"\\n\", nIndex);\n+    LogPrintf(\"keypool return %d\\n\", nIndex);\n }\n \n bool CWallet::GetKeyFromPool(CPubKey& result)"
      },
      {
        "sha": "b57ea0b5189932f0d6927de729c13b0725b1d3c6",
        "filename": "src/walletdb.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f48742c2bf6002f7c1afaf1d1723659b85d4a3ac/src/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f48742c2bf6002f7c1afaf1d1723659b85d4a3ac/src/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/walletdb.cpp?ref=f48742c2bf6002f7c1afaf1d1723659b85d4a3ac",
        "patch": "@@ -383,7 +383,7 @@ ReadKeyValue(CWallet* pwallet, CDataStream& ssKey, CDataStream& ssValue,\n             pwallet->AddToWallet(wtx, true);\n             //// debug print\n             //LogPrintf(\"LoadWallet  %s\\n\", wtx.GetHash().ToString());\n-            //LogPrintf(\" %12\"PRId64\"  %s  %s  %s\\n\",\n+            //LogPrintf(\" %12d  %s  %s  %s\\n\",\n             //    wtx.vout[0].nValue,\n             //    DateTimeStrFormat(\"%Y-%m-%d %H:%M:%S\", wtx.GetBlockTime()),\n             //    wtx.hashBlock.ToString(),\n@@ -816,7 +816,7 @@ void ThreadFlushWalletDB(const string& strFile)\n                         bitdb.CheckpointLSN(strFile);\n \n                         bitdb.mapFileUseCount.erase(mi++);\n-                        LogPrint(\"db\", \"Flushed wallet.dat %\"PRId64\"ms\\n\", GetTimeMillis() - nStart);\n+                        LogPrint(\"db\", \"Flushed wallet.dat %dms\\n\", GetTimeMillis() - nStart);\n                     }\n                 }\n             }\n@@ -877,7 +877,7 @@ bool CWalletDB::Recover(CDBEnv& dbenv, std::string filename, bool fOnlyKeys)\n     // Set -rescan so any missing transactions will be\n     // found.\n     int64_t now = GetTime();\n-    std::string newFilename = strprintf(\"wallet.%\"PRId64\".bak\", now);\n+    std::string newFilename = strprintf(\"wallet.%d.bak\", now);\n \n     int result = dbenv.dbenv.dbrename(NULL, filename.c_str(), NULL,\n                                       newFilename.c_str(), DB_AUTO_COMMIT);"
      }
    ]
  },
  {
    "sha": "2f5da74362fb65201f1403bba3c63ce5e9d024e7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyZjVkYTc0MzYyZmI2NTIwMWYxNDAzYmJhM2M2M2NlNWU5ZDAyNGU3",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-02-24T08:11:33Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-02-24T08:11:33Z"
      },
      "message": "Remove definition of PRI?64 in util.h\n\nThis was a bad idea. This can't be solved with macros as any\nother library that includes inttypes.h will get in the way.\n\nThe parent commit has removed all usages from the source, this commit\nremoves the definition.",
      "tree": {
        "sha": "f8189aa0d1bfd4a7f409524ecac420dbf05f6b1c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f8189aa0d1bfd4a7f409524ecac420dbf05f6b1c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2f5da74362fb65201f1403bba3c63ce5e9d024e7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2f5da74362fb65201f1403bba3c63ce5e9d024e7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2f5da74362fb65201f1403bba3c63ce5e9d024e7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2f5da74362fb65201f1403bba3c63ce5e9d024e7/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f48742c2bf6002f7c1afaf1d1723659b85d4a3ac",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f48742c2bf6002f7c1afaf1d1723659b85d4a3ac",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f48742c2bf6002f7c1afaf1d1723659b85d4a3ac"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 3,
      "deletions": 11
    },
    "files": [
      {
        "sha": "c28380a59b4d8b92fc4e25d01c19a2806335c74c",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 3,
        "deletions": 11,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2f5da74362fb65201f1403bba3c63ce5e9d024e7/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2f5da74362fb65201f1403bba3c63ce5e9d024e7/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=2f5da74362fb65201f1403bba3c63ce5e9d024e7",
        "patch": "@@ -44,25 +44,17 @@ static const int64_t CENT = 1000000;\n #define UEND(a)             ((unsigned char*)&((&(a))[1]))\n #define ARRAYLEN(array)     (sizeof(array)/sizeof((array)[0]))\n \n-/* Format characters for (s)size_t, ptrdiff_t, uint64_t.\n+/* Format characters for (s)size_t, ptrdiff_t.\n  *\n- * As the tinyformat-based formatting system is type-safe, no special format\n- * characters are really needed to specify sizes. Tinyformat can support\n- * (ignores) the C99 prefixes such as \"ll\" but chokes on MSVC's inttypes\n- * defines prefixes such as \"I64X\".  So don't include inttypes.h and define our\n- * own for compatibility.\n- * If you get a warning here about a redefine of PRI?64, make sure that\n- * inttypes.h is not included.\n+ * Define these as empty as the tinyformat-based formatting system is\n+ * type-safe, no special format characters are needed to specify sizes.\n  */\n #define PRIszx    \"x\"\n #define PRIszu    \"u\"\n #define PRIszd    \"d\"\n #define PRIpdx    \"x\"\n #define PRIpdu    \"u\"\n #define PRIpdd    \"d\"\n-#define PRIx64    \"x\"\n-#define PRIu64    \"u\"\n-#define PRId64    \"d\"\n \n // This is needed because the foreach macro can't get over the comma in pair<t1, t2>\n #define PAIRTYPE(t1, t2)    std::pair<t1, t2>"
      }
    ]
  }
]