ajtowns,2017-06-20T11:39:15Z,This seems like a reasonable approach to me; any idea why stop_node in the zapwallettxes test isn't getting a 0 exit code?,https://github.com/bitcoin/bitcoin/pull/10593#issuecomment-309727124,309727124,
luke-jr,2017-07-04T06:32:28Z,@ajtowns Not sure what you're asking? The tests are passing...,https://github.com/bitcoin/bitcoin/pull/10593#issuecomment-312792206,312792206,
ajtowns,2017-07-05T02:56:35Z,I guess whatever I saw was a transient error then (or I was just confused)...,https://github.com/bitcoin/bitcoin/pull/10593#issuecomment-312984750,312984750,
TheBlueMatt,2017-10-05T22:16:36Z,Have we considered preferring a relatively short-time-period ban instead of purely disconnecting? If the peer is somehow braindead and tries to reconnect immediately we may prefer to keep them gone for 30 minutes or an hour instead of letting them get into some loop of connect-relay-disconnect.,https://github.com/bitcoin/bitcoin/pull/10593#issuecomment-334607495,334607495,
sdaftuar,2017-10-06T18:48:46Z,It seems like this reverts #8305 with no mechanism to replace that functionality. Rationale?  This looks like a regression.  NACK.,https://github.com/bitcoin/bitcoin/pull/10593#issuecomment-334839416,334839416,
achow101,2017-10-07T16:16:37Z,"It was mentioned during the IRC meeting that this already did what I am planning on doing in #11446. However this doesn't seem to cover the case that I am concerned about: receiving a header for a block we have already marked as invalid. In such a case, `nDos` will be 0 and thus the peer won't be punished for relaying us the duplicate header.",https://github.com/bitcoin/bitcoin/pull/10593#issuecomment-334946691,334946691,
luke-jr,2017-10-26T19:33:21Z,"> It seems like this reverts #8305 with no mechanism to replace that functionality. \n\nI don't see how. The conditions this disconnects peers is a superset of the conditions #8305 did.",https://github.com/bitcoin/bitcoin/pull/10593#issuecomment-339776309,339776309,
luke-jr,2018-11-06T02:01:01Z,https://github.com/bitcoin/bitcoin/pull/10593#issuecomment-339776309 ... you never explained how you think it breaks #8305,https://github.com/bitcoin/bitcoin/pull/10593#issuecomment-436104925,436104925,
sdaftuar,2018-11-06T13:10:36Z,@luke-jr The point of #8305 was to avoid giving DoS points to peers for the occasional unconnecting header.  This PR would immediately disconnect an outbound peer when it announces a header that doesn't connect.,https://github.com/bitcoin/bitcoin/pull/10593#issuecomment-436247091,436247091,
DrahtBot,2018-11-09T03:51:03Z,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#15141](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15141.html) (Rewrite DoS interface between validation an",https://github.com/bitcoin/bitcoin/pull/10593#issuecomment-437241340,437241340,
MarcoFalke,2019-02-12T23:59:53Z,`feature_block.py` fails on all travis jobs that run it,https://github.com/bitcoin/bitcoin/pull/10593#issuecomment-462994520,462994520,
ajtowns,2019-09-05T15:32:41Z,"Probably should close this PR; it needs a pretty serious rebase, the RECENT_CONSENSUS_CHANGE stuff from #15141 probably warrants some more thought about the approach which might not happen until we've got a consensus change to go with it, and the current approach has a NACK...\n\n#12674 and the ""nodo-to-test connections"" support for mininode are probably relevant for #14210 though.",https://github.com/bitcoin/bitcoin/pull/10593#issuecomment-528426752,528426752,
luke-jr,2019-10-16T02:48:01Z,">  it needs a pretty serious rebase\n\nRebase is now complete. Push needs to wait for the PR to be reopened, but @sdaftuar is right that it should probably be split up and smaller changes merged first.\n\n> the RECENT_CONSENSUS_CHANGE stuff from #15141 probably warrants some more thought about the approach which might not happen until we've got a consensus change to go with it,\n\nRecent con",https://github.com/bitcoin/bitcoin/pull/10593#issuecomment-542486481,542486481,
jimpo,2017-10-05T21:49:12Z,nit: Use nodestate instead of State(it->second.first),https://github.com/bitcoin/bitcoin/pull/10593#discussion_r143066000,143066000,src/net_processing.cpp
promag,2017-10-16T16:04:03Z,Test passes with the above changes.,https://github.com/bitcoin/bitcoin/pull/10593#discussion_r144891403,144891403,test/functional/sendheaders.py
practicalswift,2018-11-04T21:43:21Z,"Use `(sock, _) = listen_sock.accept()` to clarify that the second element in the tuple is discarded intentionally",https://github.com/bitcoin/bitcoin/pull/10593#discussion_r230606642,230606642,test/functional/test_framework/mininode.py
