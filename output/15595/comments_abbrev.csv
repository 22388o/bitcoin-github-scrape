MarcoFalke,2019-03-13T20:48:36Z,"This can easily be verified by the test changes:\n\n* The test `wallet_fallbackfee.py` fails when minconf is not set to 0 (1 is the default)\n* The new test fails with a `bitcoind` compiled on master",https://github.com/bitcoin/bitcoin/pull/15595#issuecomment-472599463,472599463,
laanwj,2019-03-13T21:09:05Z,Concept ACK,https://github.com/bitcoin/bitcoin/pull/15595#issuecomment-472606331,472606331,
DrahtBot,2019-03-13T21:49:32Z,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#13057](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/13057.html) (refactor pre-selected coin code by instagib",https://github.com/bitcoin/bitcoin/pull/15595#issuecomment-472619708,472619708,
gmaxwell,2019-03-13T22:13:45Z,"Am I misreading this, or does it change the behaviour of send many to no longer use your own unconfirmed change, by default?  That would be a pretty massive change.",https://github.com/bitcoin/bitcoin/pull/15595#issuecomment-472626834,472626834,
gmaxwell,2019-03-13T22:16:56Z,"Aside, I am pretty confident that the reason for the minconf filtering in the first place was related to accounts. Imagine you are running a shared webwallet where each user was an account. When you send you specify the account and don't want to allow the user to spend more than their X-deep-confirmed balance or else you take a risk that they yank those coins back in a reorg after withdrawing diff",https://github.com/bitcoin/bitcoin/pull/15595#issuecomment-472627773,472627773,
MarcoFalke,2019-03-13T22:21:22Z,"@gmaxwell I don't think that changes, because previously it would exit early due to the `GetLegacyBalance(min_depth=1)` check if you don't have the enough coins confirmed.\n\nHowever, I am more than happy to drop this parameter and bring it in line with other RPCs such as `sendtoaddress`, which never take the option.",https://github.com/bitcoin/bitcoin/pull/15595#issuecomment-472628995,472628995,
gmaxwell,2019-03-13T22:26:36Z,"So are you saying that currently, if you have a single 10 BTC txout then pay someone 1 BTC,  you will be unable to make any further payments with sendmany until that first payment confirms?   If so, when did that behaviour change?",https://github.com/bitcoin/bitcoin/pull/15595#issuecomment-472630503,472630503,
MarcoFalke,2019-03-13T22:31:54Z,"Sorry you are right.\n\nIt would even spend unconfirmed coins, so I guess #15596 is the way to go.",https://github.com/bitcoin/bitcoin/pull/15595#issuecomment-472632003,472632003,
promag,2019-03-13T22:00:49Z,How about pass `m_min_conf_depth ` to a new `CoinEligibilityFilter` member and update `OutputGroup::EligibleForSpending`?,https://github.com/bitcoin/bitcoin/pull/15595#discussion_r265349134,265349134,src/wallet/wallet.cpp
MarcoFalke,2019-03-13T22:02:13Z,That would be a very invasive change for a simple bugfix and would complicate the `CoinEligibilityFilter` constructor/interface unnecessarily ,https://github.com/bitcoin/bitcoin/pull/15595#discussion_r265349577,265349577,src/wallet/wallet.cpp
promag,2019-03-13T22:02:48Z,There was no test for this right?,https://github.com/bitcoin/bitcoin/pull/15595#discussion_r265349757,265349757,src/wallet/rpcwallet.cpp
MarcoFalke,2019-03-13T22:06:42Z,"No, we are far away from test coverage in rpc/wallet.\n\nHowever, there was (and still is) test coverage for the check a few lines down `RPC_WALLET_INSUFFICIENT_FUNDS`",https://github.com/bitcoin/bitcoin/pull/15595#discussion_r265350853,265350853,src/wallet/rpcwallet.cpp
