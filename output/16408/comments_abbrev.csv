DrahtBot,2019-07-18 00:31:49,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#16370](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16370.html) (depends: cleanup package configure flags by",https://github.com/bitcoin/bitcoin/pull/16408#issuecomment-512618402,512618402,
fanquake,2019-07-18 02:12:33,"Concept ACK. Assuming this works without breaking anything else it's a good cleanup & simplification to depends and makes the behavior we want explicit. Will review shortly.\n\nIn https://github.com/bitcoin/bitcoin/pull/16408/commits/aa53cb7a2f04a59a4722c662e67b7a6ec04e32b5 you say:\n> however, libX11/XLib headers are still required for parts of QT.\n\nIs what it's required for documented som",https://github.com/bitcoin/bitcoin/pull/16408#issuecomment-512636470,512636470,
laanwj,2019-07-18 11:19:23,"As I have always understood it, XCB is a newer, more efficient replacement for the X11 protocol. In that case what you'd lose here is support for pre-XCB servers. XCB is old as the hills by now (initial release 2001 according to [wikipedia](https://en.wikipedia.org/wiki/XCB) ),  so Concept ACK.",https://github.com/bitcoin/bitcoin/pull/16408#issuecomment-512775068,512775068,
dongcarl,2019-07-18 17:43:20,"Some primary source information on XCB vs libX11/XLib: https://www.x.org/wiki/guide/xlib-and-xcb/\n\nXCB isn't a replacement for the X11 protocol, but rather a replacement for the helper library used to talk to the X server (previously libX11/XLib).\n\nQuote about libX11/XLib:\n\n> It was designed to look like a traditional library API, hiding the fact that calls result in protocol requests ",https://github.com/bitcoin/bitcoin/pull/16408#issuecomment-512917425,512917425,
dongcarl,2019-07-18 17:53:06,"@fanquake\n\n> > however, libX11/XLib headers are still required for parts of QT.\n> \n> Is what it's required for documented somewhere?\n\nUnfortunately, it's not documented anywhere, but looking at the code for QT, the following files from libX11/Xlib are still being included:\n\n```\nX11/cursorfont.h\nX11/Xlib.h\nX11/Xlibint.h\nX11/Xlib-xcb.h\nX11/Xutil.h\n``` ",https://github.com/bitcoin/bitcoin/pull/16408#issuecomment-512921196,512921196,
theuni,2019-07-18 18:55:02,"Concept ACK. I definitely tried to do this originally, but it simply wasn't possible with older qt versions. I believe they still required a few of the synchronous libX11 calls, but apparently that's no longer the case. Great find, @dongcarl!\n\nThe need for headers is worrisome. While likely harmless, it could also be the case that some libX11 symbols are linked in and remain unresolved, with t",https://github.com/bitcoin/bitcoin/pull/16408#issuecomment-512943132,512943132,
dongcarl,2019-07-18 21:45:24,"@theuni Is 0c55d8b58186ba69fffc147cd02b174450dac578 what you mean? If so, I'll look into upstreaming. This seems to work and eliminates `libX11/Xlib` :tada:",https://github.com/bitcoin/bitcoin/pull/16408#issuecomment-513000647,513000647,
theuni,2019-07-18 21:52:57,"@dongcarl wooo, yes! Need to look in-detail, but that's awesome, and the final patch should _definitely_ be upstreamed.",https://github.com/bitcoin/bitcoin/pull/16408#issuecomment-513003089,513003089,
dongcarl,2019-07-19 15:35:35,"For the record, here's the QT upstream tracking for my changes: https://codereview.qt-project.org/c/qt/qtbase/+/268206",https://github.com/bitcoin/bitcoin/pull/16408#issuecomment-513275325,513275325,
practicalswift,2019-07-22 11:06:24,"Concept ACK\n\nVery nice find!",https://github.com/bitcoin/bitcoin/pull/16408#issuecomment-513746659,513746659,
dongcarl,2019-07-22 19:20:44,Perhaps it's good to preserve the history here. Please let me know if people think this patchset needs squashing.,https://github.com/bitcoin/bitcoin/pull/16408#issuecomment-513918579,513918579,
theuni,2019-07-18 22:32:54,"We can't just remove this, as it should still be necessary for non-depends builds. In other words, whatever we change this to needs to work before AND after removing the dependencies.\n\nI think it should suffice to simply continue if the X11XCB check fails, and assume that qt was built without it as a dependency.\n\nMore correctly, we may be able to test a qt feature flag in one of the .pc fi",https://github.com/bitcoin/bitcoin/pull/16408#discussion_r305140936,305140936,build-aux/m4/bitcoin_qt.m4
dongcarl,2019-07-19 15:33:33,"> I think it should suffice to simply continue if the X11XCB check fails, and assume that qt was built without it as a dependency.\n\nPlayed around with this a little bit...\n\nAdding an empty last argument seems to trigger the default _action-if-not-found_ behaviour of ""end the execution with an error for not having found the dependency"" ([source](https://autotools.io/pkgconfig/pkg_check_modu",https://github.com/bitcoin/bitcoin/pull/16408#discussion_r305411418,305411418,build-aux/m4/bitcoin_qt.m4
theuni,2019-07-22 18:34:48,"I just looked into this. The .pc file for QTXCBQPA adds ""-lX11-xcb"" as necessary, so our pkg-config check is redundant anyway (unless it was done to fix an ordering problem, which doesn't seem to be the case).\n\nSo nevermind my complaint above, removal is fine.",https://github.com/bitcoin/bitcoin/pull/16408#discussion_r305973074,305973074,build-aux/m4/bitcoin_qt.m4
dongcarl,2019-07-22 18:47:17,"I double-checked @theuni's result with a Gitian build of 76e2cded477bc483ec610212bdadf21fe35292d4, which was before any XLib pickup failure. \n\nHere is `depends/i686-pc-linux-gnu/lib/pkgconfig/Qt5XcbQpa.pc`:\n```\nubuntu@a661ab7477ba:~/build/bitcoin/depends/i686-pc-linux-gnu/lib/pkgconfig$ cat Qt5XcbQpa.pc\nprefix=/home/ubuntu/build/bitcoin/depends/i686-pc-linux-gnu\nexec_prefix=${prefix}\",https://github.com/bitcoin/bitcoin/pull/16408#discussion_r305978275,305978275,build-aux/m4/bitcoin_qt.m4
