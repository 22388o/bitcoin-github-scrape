practicalswift,2020-01-13 22:10:33,@MarcoFalke Do you have any suggestion on how to phrase the precondition comment to make it more valuable?,https://github.com/bitcoin/bitcoin/pull/17917#issuecomment-573896515,573896515,
practicalswift,2020-01-13 23:16:02,"@MarcoFalke \n\nThis is an example of a gotcha where the upper limit kicks in, an unsigned integer wraparound occurs and the `DecompressAmount(CompressAmount(â€¦))` roundtrip fails:\n\n```\nint main(void) {\n  using CAmount = int64_t;\n  CAmount before = -1;\n  CAmount after = DecompressAmount(CompressAmount(before));\n\n  std::cout << ""before="" << before << std::endl;\n  std::cout << ""af",https://github.com/bitcoin/bitcoin/pull/17917#issuecomment-573919273,573919273,
practicalswift,2020-01-21 11:55:19,Rebased! :),https://github.com/bitcoin/bitcoin/pull/17917#issuecomment-576648799,576648799,
MarcoFalke,2020-01-13 19:50:03,Do you have any evidence to support this claim?,https://github.com/bitcoin/bitcoin/pull/17917#discussion_r365995716,365995716,src/compressor.h
kiminuo,2020-01-13 21:05:28,"The algorithm works for larger numbers fine. Maybe just reword the comment a bit?\n\nhttps://ideone.com/6TkUTp for tinkering",https://github.com/bitcoin/bitcoin/pull/17917#discussion_r366027309,366027309,src/compressor.h
sipa,2020-01-13 21:15:00,I believe the algorithm works fine up to approximately 2^64 / 9 (but it's true we only care about it working up to MAX_MONEY).,https://github.com/bitcoin/bitcoin/pull/17917#discussion_r366031548,366031548,src/compressor.h
practicalswift,2020-01-13 21:30:33,"Yes, it was is the hard upper limit at roughly `2^64 / 9` that I noticed: above that we wrap around (unsigned integer wraparound) :)\n\nI thought it was worth making our domain assumptions explicit. Explicit is always better than implicit :)",https://github.com/bitcoin/bitcoin/pull/17917#discussion_r366038668,366038668,src/compressor.h
practicalswift,2020-01-13 21:37:51,@kiminuo The point of the comment is to make it clear that this function is not intended to be used with input values above `MAX_MONEY` :),https://github.com/bitcoin/bitcoin/pull/17917#discussion_r366041852,366041852,src/compressor.h
MarcoFalke,2020-01-13 21:44:27,Could add `DecompressAmount(u64);`?,https://github.com/bitcoin/bitcoin/pull/17917#discussion_r366044727,366044727,src/test/fuzz/integer.cpp
practicalswift,2020-01-13 21:49:18,That is already done on L65 below :),https://github.com/bitcoin/bitcoin/pull/17917#discussion_r366046807,366046807,src/test/fuzz/integer.cpp
kiminuo,2020-01-14 07:27:21,@practicalswift I know you know. Not sure if others know. :) (Ideone snippet was for me to understand the algorithm better.),https://github.com/bitcoin/bitcoin/pull/17917#discussion_r366183790,366183790,src/compressor.h
laanwj,2020-01-20 19:19:52,"Please use a doxygen compatible comment for documenting functions, see https://github.com/bitcoin/bitcoin/blob/master/doc/developer-notes.md#coding-style-doxygen-compatible-comments",https://github.com/bitcoin/bitcoin/pull/17917#discussion_r368695845,368695845,src/compressor.h
practicalswift,2020-01-21 11:54:48,Good point. Fixed! Thanks!,https://github.com/bitcoin/bitcoin/pull/17917#discussion_r368958488,368958488,src/compressor.h
MarcoFalke,2020-03-05 19:19:43,"```suggestion\n * nAmount is of type uint64_t and thus cannot be negative.\n```\n\n""Please note that"" is an empty phrase and can be removed.",https://github.com/bitcoin/bitcoin/pull/17917#discussion_r388508531,388508531,src/compressor.h
practicalswift,2020-03-05 20:23:19,Good point! Thanks! Now fixed.,https://github.com/bitcoin/bitcoin/pull/17917#discussion_r388543072,388543072,src/compressor.h
