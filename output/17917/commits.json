[
  {
    "sha": "4a7fd7a7124f84e010b01d0769ef0572bf031ee8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0YTdmZDdhNzEyNGY4NGUwMTBiMDFkMDc2OWVmMDU3MmJmMDMxZWU4",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-01-13T15:08:52Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-01-22T13:06:52Z"
      },
      "message": "tests: Add amount compression/decompression fuzzing to existing fuzzing harness: test compression round-trip",
      "tree": {
        "sha": "e6d725412348cee076f9aa9ddaaa4f6eb6d3316c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e6d725412348cee076f9aa9ddaaa4f6eb6d3316c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4a7fd7a7124f84e010b01d0769ef0572bf031ee8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4a7fd7a7124f84e010b01d0769ef0572bf031ee8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4a7fd7a7124f84e010b01d0769ef0572bf031ee8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4a7fd7a7124f84e010b01d0769ef0572bf031ee8/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a51aa2880d123fc0bcbc0ccd930dbf98e4d29863",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a51aa2880d123fc0bcbc0ccd930dbf98e4d29863",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a51aa2880d123fc0bcbc0ccd930dbf98e4d29863"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 9,
      "deletions": 1
    },
    "files": [
      {
        "sha": "b496ab534196e5d635e48a0497457ffdf2ffe3a7",
        "filename": "src/test/fuzz/integer.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 1,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4a7fd7a7124f84e010b01d0769ef0572bf031ee8/src/test/fuzz/integer.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4a7fd7a7124f84e010b01d0769ef0572bf031ee8/src/test/fuzz/integer.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/integer.cpp?ref=4a7fd7a7124f84e010b01d0769ef0572bf031ee8",
        "patch": "@@ -2,6 +2,7 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#include <amount.h>\n #include <arith_uint256.h>\n #include <compressor.h>\n #include <consensus/merkle.h>\n@@ -56,7 +57,14 @@ void test_one_input(const std::vector<uint8_t>& buffer)\n \n     const Consensus::Params& consensus_params = Params().GetConsensus();\n     (void)CheckProofOfWork(u256, u32, consensus_params);\n-    (void)CompressAmount(u64);\n+    if (u64 <= MAX_MONEY) {\n+        const uint64_t compressed_money_amount = CompressAmount(u64);\n+        assert(u64 == DecompressAmount(compressed_money_amount));\n+        static const uint64_t compressed_money_amount_max = CompressAmount(MAX_MONEY - 1);\n+        assert(compressed_money_amount <= compressed_money_amount_max);\n+    } else {\n+        (void)CompressAmount(u64);\n+    }\n     static const uint256 u256_min(uint256S(\"0000000000000000000000000000000000000000000000000000000000000000\"));\n     static const uint256 u256_max(uint256S(\"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"));\n     const std::vector<uint256> v256{u256, u256_min, u256_max};"
      }
    ]
  },
  {
    "sha": "7e9c7113afbed96cef80c327cc93e82000d6bb69",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3ZTljNzExM2FmYmVkOTZjZWY4MGMzMjdjYzkzZTgyMDAwZDZiYjY5",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-01-13T15:09:36Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-03-05T20:22:47Z"
      },
      "message": "compressor: Make the domain of CompressAmount(...) explicit",
      "tree": {
        "sha": "963ec296135e8a7b9798112b3960447a21b1bf6f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/963ec296135e8a7b9798112b3960447a21b1bf6f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7e9c7113afbed96cef80c327cc93e82000d6bb69",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7e9c7113afbed96cef80c327cc93e82000d6bb69",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7e9c7113afbed96cef80c327cc93e82000d6bb69",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7e9c7113afbed96cef80c327cc93e82000d6bb69/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4a7fd7a7124f84e010b01d0769ef0572bf031ee8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4a7fd7a7124f84e010b01d0769ef0572bf031ee8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4a7fd7a7124f84e010b01d0769ef0572bf031ee8"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 10,
      "deletions": 0
    },
    "files": [
      {
        "sha": "acb34da4a060be7c3671f3d9dfc865ecb26d219c",
        "filename": "src/compressor.h",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7e9c7113afbed96cef80c327cc93e82000d6bb69/src/compressor.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7e9c7113afbed96cef80c327cc93e82000d6bb69/src/compressor.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/compressor.h?ref=7e9c7113afbed96cef80c327cc93e82000d6bb69",
        "patch": "@@ -19,7 +19,17 @@ bool CompressScript(const CScript& script, std::vector<unsigned char> &out);\n unsigned int GetSpecialScriptSize(unsigned int nSize);\n bool DecompressScript(CScript& script, unsigned int nSize, const std::vector<unsigned char> &out);\n \n+/**\n+ * Compress amount.\n+ *\n+ * nAmount is of type uint64_t and thus cannot be negative. If you're passing in\n+ * a CAmount (int64_t), make sure to properly handle the case where the amount\n+ * is negative before calling CompressAmount(...).\n+ *\n+ * @pre Function defined only for 0 <= nAmount <= MAX_MONEY.\n+ */\n uint64_t CompressAmount(uint64_t nAmount);\n+\n uint64_t DecompressAmount(uint64_t nAmount);\n \n /** Compact serializer for scripts."
      }
    ]
  }
]