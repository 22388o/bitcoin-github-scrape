laanwj,2014-12-02T08:36:37Z,Interesting concept. \n\nIt's a good observation that it is possible to 'freeze' transactions that are fully spent and no longer count toward the balance. They can be excluded from GetBalance() computations and such. You could hide them in default views.\n\nI'm not so sure about actually deleting them though - storage is cheap so it doesn't really make much sense to remove old transaction data for,https://github.com/bitcoin/bitcoin/pull/5389#issuecomment-65197888,65197888,
cozz,2014-12-02T10:35:31Z,"Ok, closing.\n",https://github.com/bitcoin/bitcoin/pull/5389#issuecomment-65211159,65211159,
laanwj,2014-12-02T10:57:33Z,I didn't mean that as 'go close this!'. I just wanted to get a discussion started. There could be other people for which this may be just what they needed.\n,https://github.com/bitcoin/bitcoin/pull/5389#issuecomment-65213682,65213682,
gmaxwell,2014-12-02T14:21:31Z,"The reorging of the data to avoid needlesly iterating over them sounds interesting.  I agree that deleting is less exciting.  An additional thing to contemplate is deleting only the data which is in the chain, e.g. keeping any metadata. \n",https://github.com/bitcoin/bitcoin/pull/5389#issuecomment-65236968,65236968,
cozz,2014-12-03T12:03:38Z,"Our wallet by design loads everything in memory, including all transactions. So you reduce memory usage, disk space and speed up many wallet operations.\n\nOf course maybe nobody even has a wallet that big, where things make difference.\nBut the feature doesnt hurt anybody, and just in case someone complains about performance or memory issues with a large wallet, we could point him to this.\n\nOr ",https://github.com/bitcoin/bitcoin/pull/5389#issuecomment-65397440,65397440,
gmaxwell,2014-12-03T16:06:23Z,"@cozz Absolutely. We should improve the scalability, but I think permantly deleting irrecoverable finiancial information is a cost too great.   Instead we should be making possible to load some of this data only on demand, or archiving it off without deleting it completely. \n",https://github.com/bitcoin/bitcoin/pull/5389#issuecomment-65434825,65434825,
sipa,2014-12-03T16:11:46Z,"Ultimately, I think the correct solution is considering the UTXO set and the transaction list/ledger as separate entities, and maybe just occasionally check for consistency between them, rather than constantly computing one from the other. Doing that probably means pretty much a total rewrite.\n",https://github.com/bitcoin/bitcoin/pull/5389#issuecomment-65435948,65435948,
cozz,2014-12-03T21:22:33Z,"@gmaxwell agreed about ""loading on demand"", but I dont think anybody will redesign the wallet anytime soon, so I was just trying to find a rather simple solution which fits in the current design.\nFor archiving you can simply use backupwallet.\n\nAbout ""irrecoverable finiancial information"", not sure what you mean. Wallet-pruning is disabled when using the account-feature, and payment-request is n",https://github.com/bitcoin/bitcoin/pull/5389#issuecomment-65493198,65493198,
luke-jr,2014-12-05T12:59:45Z,"Agree with comments that we should just hide and optimise, not delete. Especially not delete on the basis of what is to users essentially random (the UTXOs created when a userside-transaction is received don't remain associated to that userside-transaction).\n",https://github.com/bitcoin/bitcoin/pull/5389#issuecomment-65786548,65786548,
mchatham,2015-01-27T17:08:41Z,We have been researching this possibility of deleting fully-spent transactions in an effort to improve performance and reliability of backups with very large wallets. Finding this patch was quite pleasant as it has implemented the solution exactly as we had imagined it might work.\n\nThe main idea behind this is rather simple. It would greatly improve performance for large wallets containing many ,https://github.com/bitcoin/bitcoin/pull/5389#issuecomment-71685685,71685685,
arnuschky,2015-02-07T10:44:21Z,"We're in almost the same situation as @mchatham. We've been researching to develop this functionality ourselves, and are delighted to see that it has been already done. Thank you, @cozz.\n\nSome of bitcoind's functionality does depend on the fact that the involved addresses are in the wallet. For high-throughput installations (e.g., merchants), this was always a problem: one had to chose between h",https://github.com/bitcoin/bitcoin/pull/5389#issuecomment-73359181,73359181,
cozz,2015-02-07T21:10:07Z,"@arnuschky not yet, you would also need to delete from mapOrderedTxItems. But that would be easy.\n\nI think it would be good to have a final decision on both patches.\n",https://github.com/bitcoin/bitcoin/pull/5389#issuecomment-73383278,73383278,
arnuschky,2015-02-08T03:33:31Z,"@cozz: Ok, thanks. I am going to deploy this PR on a test instance and see how it behaves. \n",https://github.com/bitcoin/bitcoin/pull/5389#issuecomment-73395304,73395304,
mchatham,2015-02-17T01:55:43Z,"We agree that it's like @arnuschky has stated, this patch will allow bitcoind to be used in high-throughput situations again. We would add that for those already using bitcoind and finding themselves needing this patch, it will be a godsend.\n\nIn an article by Mike Hearn wrote back in December 2013, he made the statement about server wallet problems saying, ""As far as I know exchanges and major p",https://github.com/bitcoin/bitcoin/pull/5389#issuecomment-74605794,74605794,
gmaxwell,2015-02-17T02:25:13Z,"@mchatham The lobbying isn't helpful.  If you're interested in this you could work on an alternative which does not destroy information and instead just skips loading it when a switch is set, as that would address the concern.\n\nI believe the project is not interested in a workaround that creates any data loss risk. \n",https://github.com/bitcoin/bitcoin/pull/5389#issuecomment-74607863,74607863,
arnuschky,2015-02-18T08:18:29Z,"@gmaxwell: I don't really get this ""loss of financial information"" argument. All information is contained in the blockchain and can be recovered anytime with a rescan, or am I wrong here?\n\nOn the other hand, I think it is very reasonable to allow the user to decide to which extend the wallet stores/replicates information on past transactions. Especially as this functionality allows users to use ",https://github.com/bitcoin/bitcoin/pull/5389#issuecomment-74827933,74827933,
sipa,2015-02-18T10:16:19Z,"It does not contain all information. It misses timing data, comments that\nmay have been added, data due to the usage of the payment protocol, and\neverything from unconfirmed transactions (which isn't a consideration here\nspecifically).\n\nWorse, it is incompatible with blockchain pruning which we'd very much like\nto get in the next release.\n\nPlease, the memory usage problem is trivial to sol",https://github.com/bitcoin/bitcoin/pull/5389#issuecomment-74841320,74841320,
cozz,2015-02-18T19:52:23Z,"It seems like this is going nowhere anyway, so closing it, saving us further pointless discussion.\n",https://github.com/bitcoin/bitcoin/pull/5389#issuecomment-74935096,74935096,
mchatham,2015-02-18T20:34:01Z,"We're in agreement, the risk of data loss is apparent, but it's always a risk. For those in our situation, the risk of data loss increases with wallet database size. Because of this, managing backups for these wallets is a genuine concern for us. We make backups every 100 addresses.\n\nHow often would you recommend wallet backups be created? We've seen one recommendation recently that indicated ev",https://github.com/bitcoin/bitcoin/pull/5389#issuecomment-74942312,74942312,
gmaxwell,2015-02-18T20:40:04Z,@mchatham The correct (initial) coarse of action would be to fix the issues causing your wallet to become 1.2GB.  What version of the software are you using that is creating wallets that large? (I ask because some issues that caused wallet bloat were previously fixed).\n,https://github.com/bitcoin/bitcoin/pull/5389#issuecomment-74943325,74943325,
mchatham,2015-02-18T20:54:22Z,@gmaxwell We have been in 0.9.4 for quite sometime.\n,https://github.com/bitcoin/bitcoin/pull/5389#issuecomment-74945787,74945787,
arnuschky,2015-02-19T10:14:30Z,"@gmaxwell  Same here, our `wallet.dat` is > 2.5 GB. Running 0.9.3 (currently evaluating 0.10.0). No, nothing is broken with that wallet, we simply have few addresses with tens of thousands transactions each. We might split this up on multiple nodes (one address each), but that is kind of a last-resort workaround.\n\nOnce the wallet is this big, it becomes extremely slow - it doesn't scale at all. ",https://github.com/bitcoin/bitcoin/pull/5389#issuecomment-75027342,75027342,
cozz,2015-02-20T00:19:43Z,"@arnuschky I fixed the biggest wallet-bottlenecks here #4805 #4712 and #4702. However the last one has recently been closed, because a guy is eventually going to redesign the wallet at some unknown point in the future, but still going to load the whole wallet in memory on startup.\n\nTo me wallet-pruning is a feature as obvious as blockchain-pruning. Making the two compatible would not be a proble",https://github.com/bitcoin/bitcoin/pull/5389#issuecomment-75167207,75167207,
gmaxwell,2015-02-20T00:45:13Z,"> We must assume scale\n\nWhich is part of why why addressing performance problems by irrecoverably deleting financial information is just not considered acceptable here. We're happy to work on features that improve scale and efficiency, but not ones where the system forces (or strongly encourages) behavior which is irresponsible.\n\nI consider deleting transaction data to be irresponsible, and I ",https://github.com/bitcoin/bitcoin/pull/5389#issuecomment-75170044,75170044,
sipa,2015-02-20T08:12:05Z,"@arnuschky Nobody is saying that scaling problems shouldn't be addressed. The reason the wallet is slow is not because the file is large, but because all transactions are loaded into memory, and almost all operations iterate over all of them. It's been suggested  to remove old fully-spent ones from memory at loading time, which is much less invasive instead.\n",https://github.com/bitcoin/bitcoin/pull/5389#issuecomment-75203228,75203228,
arnuschky,2015-02-20T12:30:38Z,"Yes, sorry for taking this discussion further than needed. I keep forgetting that these are PRs for merging into the bitcoin core mainline, and this kept arguing that this patch has merit for some individuals/specific applications.\n\nRegarding a more constructive direction of discussion: is someone working on a new wallet implementation? If yes, who/where? Is there a feature- or task-list? Can we",https://github.com/bitcoin/bitcoin/pull/5389#issuecomment-75231044,75231044,
jonasschnelli,2015-02-21T04:01:31Z,"@arnushky: I'm willing to spend around 20-30h a week in improving/rewriting the wallet. #5761 should be the ticket to discuss wallet related improvements. I don't have a final wallet concept in my mind.\n\nRegarding this issue, I'd prefere to write scripts or preforget regtests-wallet-and-blocks-datadir with huge amount of transaction to track down the problems and find solutions to handle such si",https://github.com/bitcoin/bitcoin/pull/5389#issuecomment-75354499,75354499,
arnuschky,2015-02-22T09:47:03Z,"@jonasschnelli thanks for your answer and all your effort. We will have a look at your logdb wallet as soon as we resolve our current scalability issues. However, I do not understand what you mean by ""I'd prefere to write scripts or preforget regtests-wallet-and-blocks-datadir ""?\n\nOn the long run, I think a wallet must be able to handle 1mio transactions, even though it might not be the main sco",https://github.com/bitcoin/bitcoin/pull/5389#issuecomment-75427687,75427687,
